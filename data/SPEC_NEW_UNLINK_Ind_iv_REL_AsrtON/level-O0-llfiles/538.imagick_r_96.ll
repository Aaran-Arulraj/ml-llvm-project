; ModuleID = 'magick/deprecate.c'
source_filename = "magick/deprecate.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._CacheView = type opaque
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._QuantizeInfo = type { i64, i64, i32, i32, i32, i64, i32 }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._GeometryInfo = type { double, double, double, double, double }
%struct._DrawInfo = type { i8*, i8*, %struct._RectangleInfo, %struct._AffineMatrix, i32, %struct._PixelPacket, %struct._PixelPacket, double, %struct._GradientInfo, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, i32, i32, i32, i64, double, i32, i32, i8*, i64, i8*, i8*, i8*, i32, i32, i64, i8*, double, i8*, i32, %struct._PixelPacket, %struct._PixelPacket, i8*, double*, i8*, %struct._SegmentInfo, i32, i16, i32, %struct._ElementReference, i32, i64, double, double, double, i32 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._GradientInfo = type { i32, %struct._RectangleInfo, %struct._SegmentInfo, %struct._StopInfo*, i64, i32, i32, i64, %struct._PointInfo, float }
%struct._StopInfo = type { %struct._MagickPixelPacket, float }
%struct._PointInfo = type { double, double }
%struct._SegmentInfo = type { double, double, double, double }
%struct._ElementReference = type { i8*, i32, %struct._GradientInfo, i64, %struct._ElementReference*, %struct._ElementReference* }
%struct._SplayTreeInfo = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._ImageAttribute = type { i8*, i8*, i32, %struct._ImageAttribute*, %struct._ImageAttribute* }
%struct._QuantumInfo = type { i64, i64, i32, double, double, double, i64, i32, i32, i32, i64, i8**, i64, i32, %struct._QuantumState, %struct.SemaphoreInfo*, i64 }
%struct._QuantumState = type { double, i32, i64, i32* }
%struct._RandomInfo = type opaque
%struct.KernelInfo = type { i32, i64, i64, i64, i64, double*, double, double, double, double, double, %struct.KernelInfo*, i64 }

@.str = private unnamed_addr constant [19 x i8] c"magick/deprecate.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"last use: v5.5.7\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"SegmentStackOverflow\00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"last use: v5.5.2\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"%.20g\0A\00", align 1
@.str.9 = private unnamed_addr constant [17 x i8] c"last use: v5.4.3\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"last use: v5.5.6\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"last use: v6.2.5\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"MAGICK_HOME\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"%s/lib/%s/%s\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"ImageMagick-6.8.9\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"USERPROFILE\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"%s%s.magick%s%s\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"UnableToOpenConfigureFile\00", align 1
@.str.20 = private unnamed_addr constant [17 x i8] c"last use: v6.3.1\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"8BIM:1999,2998\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"last use: v5.5.4\00", align 1
@.str.23 = private unnamed_addr constant [17 x i8] c"last use: v5.5.3\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"last use: v5.5.1\00", align 1
@monitor_handler = internal global i32 (i8*, i64, i64, %struct._ExceptionInfo*)* null, align 8, !dbg !0
@.str.26 = private unnamed_addr constant [17 x i8] c"last use: v6.1.0\00", align 1
@.str.27 = private unnamed_addr constant [13 x i8] c"Opaque/Image\00", align 1
@.str.28 = private unnamed_addr constant [17 x i8] c"last use: v6.4.7\00", align 1
@RandomChannelThresholdImage.o2 = internal global [4 x float] [float 0x3FC99999A0000000, float 0x3FE3333340000000, float 0x3FE99999A0000000, float 0x3FD99999A0000000], align 16, !dbg !1255
@RandomChannelThresholdImage.o3 = internal global [9 x float] [float 0x3FB99999A0000000, float 0x3FE3333340000000, float 0x3FD3333340000000, float 0x3FE6666660000000, float 5.000000e-01, float 0x3FE99999A0000000, float 0x3FD99999A0000000, float 0x3FECCCCCC0000000, float 0x3FC99999A0000000], align 16, !dbg !1264
@RandomChannelThresholdImage.o4 = internal global [16 x float] [float 0x3FB99999A0000000, float 0x3FE6666660000000, float 0x3FF19999A0000000, float 0x3FD3333340000000, float 1.000000e+00, float 5.000000e-01, float 1.500000e+00, float 0x3FE99999A0000000, float 0x3FF6666660000000, float 0x3FF99999A0000000, float 0x3FE3333340000000, float 0x3FF3333340000000, float 0x3FD99999A0000000, float 0x3FECCCCCC0000000, float 0x3FF4CCCCC0000000, float 0x3FC99999A0000000], align 16, !dbg !1269
@RandomChannelThresholdImage.threshold = internal global float 1.280000e+02, align 4, !dbg !1274
@.str.29 = private unnamed_addr constant [4 x i8] c"2x2\00", align 1
@.str.30 = private unnamed_addr constant [4 x i8] c"3x3\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"4x4\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"%lf[/x%%]%lf\00", align 1
@.str.33 = private unnamed_addr constant [47 x i8] c"  RandomChannelThresholdImage: channel type=%s\00", align 1
@.str.34 = private unnamed_addr constant [27 x i8] c"    Thresholds: %s (%fx%f)\00", align 1
@.str.35 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"intensity\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"matte\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"UnrecognizedChannelType\00", align 1
@.str.40 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.41 = private unnamed_addr constant [17 x i8] c"last use: v6.2.0\00", align 1
@SetMagickRegistry.id = internal global i64 0, align 8, !dbg !1276
@.str.42 = private unnamed_addr constant [23 x i8] c"UnableToThresholdImage\00", align 1
@.str.43 = private unnamed_addr constant [17 x i8] c"last use: v6.2.6\00", align 1
@.str.44 = private unnamed_addr constant [18 x i8] c"Transparent/Image\00", align 1
@.str.45 = private unnamed_addr constant [17 x i8] c"last use: v5.4.4\00", align 1
@active_mutex = internal global i32 0, align 4, !dbg !1283
@.str.46 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.47 = private unnamed_addr constant [28 x i8] c"./magick/colormap-private.h\00", align 1
@.str.48 = private unnamed_addr constant [21 x i8] c"InvalidColormapIndex\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @AcquireCacheViewIndexes(%struct._CacheView* %cache_view) #0 !dbg !1290 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !1293, metadata !DIExpression()), !dbg !1294
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !1295
  %call = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %0), !dbg !1296
  ret i16* %call, !dbg !1297
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @AcquireCacheViewPixels(%struct._CacheView* %cache_view, i64 %x, i64 %y, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !1298 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !1302, metadata !DIExpression()), !dbg !1303
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1304, metadata !DIExpression()), !dbg !1305
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1306, metadata !DIExpression()), !dbg !1307
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !1308, metadata !DIExpression()), !dbg !1309
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !1310, metadata !DIExpression()), !dbg !1311
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1312, metadata !DIExpression()), !dbg !1313
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !1314
  %1 = load i64, i64* %x.addr, align 8, !dbg !1315
  %2 = load i64, i64* %y.addr, align 8, !dbg !1316
  %3 = load i64, i64* %columns.addr, align 8, !dbg !1317
  %4 = load i64, i64* %rows.addr, align 8, !dbg !1318
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1319
  %call = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %5), !dbg !1320
  ret %struct._PixelPacket* %call, !dbg !1321
}

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @AcquireImagePixels(%struct._Image* %image, i64 %x, i64 %y, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !1322 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1325, metadata !DIExpression()), !dbg !1326
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1327, metadata !DIExpression()), !dbg !1328
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1329, metadata !DIExpression()), !dbg !1330
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !1331, metadata !DIExpression()), !dbg !1332
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !1333, metadata !DIExpression()), !dbg !1334
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1335, metadata !DIExpression()), !dbg !1336
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1337
  %1 = load i64, i64* %x.addr, align 8, !dbg !1338
  %2 = load i64, i64* %y.addr, align 8, !dbg !1339
  %3 = load i64, i64* %columns.addr, align 8, !dbg !1340
  %4 = load i64, i64* %rows.addr, align 8, !dbg !1341
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1342
  %call = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %5), !dbg !1343
  ret %struct._PixelPacket* %call, !dbg !1344
}

declare dso_local %struct._PixelPacket* @GetVirtualPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @AcquireIndexes(%struct._Image* %image) #0 !dbg !1345 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1348, metadata !DIExpression()), !dbg !1349
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1350
  %call = call i16* @GetVirtualIndexQueue(%struct._Image* %0), !dbg !1351
  ret i16* %call, !dbg !1352
}

declare dso_local i16* @GetVirtualIndexQueue(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @AcquireMemory(i64 %size) #0 !dbg !1353 {
entry:
  %size.addr = alloca i64, align 8
  %allocation = alloca i8*, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1356, metadata !DIExpression()), !dbg !1357
  call void @llvm.dbg.declare(metadata i8** %allocation, metadata !1358, metadata !DIExpression()), !dbg !1359
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 302, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !1360
  %0 = load i64, i64* %size.addr, align 8, !dbg !1361
  %call1 = call noalias i8* @malloc(i64 %0) #8, !dbg !1362
  store i8* %call1, i8** %allocation, align 8, !dbg !1363
  %1 = load i8*, i8** %allocation, align 8, !dbg !1364
  ret i8* %1, !dbg !1365
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local noalias i8* @malloc(i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AcquireOneCacheViewPixel(%struct._CacheView* %cache_view, i64 %x, i64 %y, %struct._PixelPacket* %pixel, %struct._ExceptionInfo* %exception) #0 !dbg !1366 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !1369, metadata !DIExpression()), !dbg !1370
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1371, metadata !DIExpression()), !dbg !1372
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1373, metadata !DIExpression()), !dbg !1374
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !1375, metadata !DIExpression()), !dbg !1376
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1377, metadata !DIExpression()), !dbg !1378
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !1379
  %1 = load i64, i64* %x.addr, align 8, !dbg !1380
  %2 = load i64, i64* %y.addr, align 8, !dbg !1381
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !1382
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1383
  %call = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %0, i64 %1, i64 %2, %struct._PixelPacket* %3, %struct._ExceptionInfo* %4), !dbg !1384
  ret i32 %call, !dbg !1385
}

declare dso_local i32 @GetOneCacheViewVirtualPixel(%struct._CacheView*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AcquireOneCacheViewVirtualPixel(%struct._CacheView* %cache_view, i32 %virtual_pixel_method, i64 %x, i64 %y, %struct._PixelPacket* %pixel, %struct._ExceptionInfo* %exception) #0 !dbg !1386 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %virtual_pixel_method.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !1390, metadata !DIExpression()), !dbg !1391
  store i32 %virtual_pixel_method, i32* %virtual_pixel_method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virtual_pixel_method.addr, metadata !1392, metadata !DIExpression()), !dbg !1393
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1394, metadata !DIExpression()), !dbg !1395
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1396, metadata !DIExpression()), !dbg !1397
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !1398, metadata !DIExpression()), !dbg !1399
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1400, metadata !DIExpression()), !dbg !1401
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1402, metadata !DIExpression()), !dbg !1403
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !1404
  %1 = load i32, i32* %virtual_pixel_method.addr, align 4, !dbg !1405
  %2 = load i64, i64* %x.addr, align 8, !dbg !1406
  %3 = load i64, i64* %y.addr, align 8, !dbg !1407
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !1408
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1409
  %call = call i32 @GetOneCacheViewVirtualMethodPixel(%struct._CacheView* %0, i32 %1, i64 %2, i64 %3, %struct._PixelPacket* %4, %struct._ExceptionInfo* %5), !dbg !1410
  store i32 %call, i32* %status, align 4, !dbg !1411
  %6 = load i32, i32* %status, align 4, !dbg !1412
  ret i32 %6, !dbg !1413
}

declare dso_local i32 @GetOneCacheViewVirtualMethodPixel(%struct._CacheView*, i32, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @AcquireOneMagickPixel(%struct._MagickPixelPacket* noalias sret %agg.result, %struct._Image* %image, i64 %x, i64 %y, %struct._ExceptionInfo* %exception) #0 !dbg !1414 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1430, metadata !DIExpression()), !dbg !1431
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1432, metadata !DIExpression()), !dbg !1433
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1434, metadata !DIExpression()), !dbg !1435
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1436, metadata !DIExpression()), !dbg !1437
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %agg.result, metadata !1438, metadata !DIExpression()), !dbg !1439
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1440
  %1 = load i64, i64* %x.addr, align 8, !dbg !1441
  %2 = load i64, i64* %y.addr, align 8, !dbg !1442
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1443
  %call = call i32 @GetOneVirtualMagickPixel(%struct._Image* %0, i64 %1, i64 %2, %struct._MagickPixelPacket* %agg.result, %struct._ExceptionInfo* %3), !dbg !1444
  ret void, !dbg !1445
}

declare dso_local i32 @GetOneVirtualMagickPixel(%struct._Image*, i64, i64, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @AcquireOnePixel(%struct._Image* %image, i64 %x, i64 %y, %struct._ExceptionInfo* %exception) #0 !dbg !1446 {
entry:
  %retval = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1449, metadata !DIExpression()), !dbg !1450
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1451, metadata !DIExpression()), !dbg !1452
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1453, metadata !DIExpression()), !dbg !1454
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1455, metadata !DIExpression()), !dbg !1456
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %retval, metadata !1457, metadata !DIExpression()), !dbg !1458
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1459
  %1 = load i64, i64* %x.addr, align 8, !dbg !1460
  %2 = load i64, i64* %y.addr, align 8, !dbg !1461
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1462
  %call = call i32 @GetOneVirtualPixel(%struct._Image* %0, i64 %1, i64 %2, %struct._PixelPacket* %retval, %struct._ExceptionInfo* %3), !dbg !1463
  %4 = bitcast %struct._PixelPacket* %retval to i64*, !dbg !1464
  %5 = load i64, i64* %4, align 2, !dbg !1464
  ret i64 %5, !dbg !1464
}

declare dso_local i32 @GetOneVirtualPixel(%struct._Image*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @AcquireOneVirtualPixel(%struct._Image* %image, i32 %virtual_pixel_method, i64 %x, i64 %y, %struct._ExceptionInfo* %exception) #0 !dbg !1465 {
entry:
  %retval = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %virtual_pixel_method.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1468, metadata !DIExpression()), !dbg !1469
  store i32 %virtual_pixel_method, i32* %virtual_pixel_method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %virtual_pixel_method.addr, metadata !1470, metadata !DIExpression()), !dbg !1471
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !1472, metadata !DIExpression()), !dbg !1473
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !1474, metadata !DIExpression()), !dbg !1475
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1476, metadata !DIExpression()), !dbg !1477
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %retval, metadata !1478, metadata !DIExpression()), !dbg !1479
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1480
  %1 = load i32, i32* %virtual_pixel_method.addr, align 4, !dbg !1481
  %2 = load i64, i64* %x.addr, align 8, !dbg !1482
  %3 = load i64, i64* %y.addr, align 8, !dbg !1483
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1484
  %call = call i32 @GetOneVirtualMethodPixel(%struct._Image* %0, i32 %1, i64 %2, i64 %3, %struct._PixelPacket* %retval, %struct._ExceptionInfo* %4), !dbg !1485
  %5 = bitcast %struct._PixelPacket* %retval to i64*, !dbg !1486
  %6 = load i64, i64* %5, align 2, !dbg !1486
  ret i64 %6, !dbg !1486
}

declare dso_local i32 @GetOneVirtualMethodPixel(%struct._Image*, i32, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @AcquirePixels(%struct._Image* %image) #0 !dbg !1487 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1490, metadata !DIExpression()), !dbg !1491
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1492
  %call = call %struct._PixelPacket* @GetVirtualPixelQueue(%struct._Image* %0), !dbg !1493
  ret %struct._PixelPacket* %call, !dbg !1494
}

declare dso_local %struct._PixelPacket* @GetVirtualPixelQueue(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @AcquireSemaphoreInfo(%struct.SemaphoreInfo** %semaphore_info) #0 !dbg !1495 {
entry:
  %semaphore_info.addr = alloca %struct.SemaphoreInfo**, align 8
  store %struct.SemaphoreInfo** %semaphore_info, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SemaphoreInfo*** %semaphore_info.addr, metadata !1499, metadata !DIExpression()), !dbg !1500
  %0 = load %struct.SemaphoreInfo**, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8, !dbg !1501
  %1 = load %struct.SemaphoreInfo*, %struct.SemaphoreInfo** %0, align 8, !dbg !1503
  %cmp = icmp eq %struct.SemaphoreInfo* %1, null, !dbg !1504
  br i1 %cmp, label %if.then, label %if.end3, !dbg !1505

if.then:                                          ; preds = %entry
  call void @InitializeMagickMutex(), !dbg !1506
  call void @LockMagickMutex(), !dbg !1508
  %2 = load %struct.SemaphoreInfo**, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8, !dbg !1509
  %3 = load %struct.SemaphoreInfo*, %struct.SemaphoreInfo** %2, align 8, !dbg !1511
  %cmp1 = icmp eq %struct.SemaphoreInfo* %3, null, !dbg !1512
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !1513

if.then2:                                         ; preds = %if.then
  %call = call %struct.SemaphoreInfo* @AllocateSemaphoreInfo(), !dbg !1514
  %4 = load %struct.SemaphoreInfo**, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8, !dbg !1515
  store %struct.SemaphoreInfo* %call, %struct.SemaphoreInfo** %4, align 8, !dbg !1516
  br label %if.end, !dbg !1517

if.end:                                           ; preds = %if.then2, %if.then
  call void @UnlockMagickMutex(), !dbg !1518
  br label %if.end3, !dbg !1519

if.end3:                                          ; preds = %if.end, %entry
  ret void, !dbg !1520
}

; Function Attrs: noinline nounwind uwtable
define internal void @InitializeMagickMutex() #0 !dbg !1521 {
entry:
  store i32 1, i32* @active_mutex, align 4, !dbg !1524
  ret void, !dbg !1525
}

; Function Attrs: noinline nounwind uwtable
define internal void @LockMagickMutex() #0 !dbg !1526 {
entry:
  ret void, !dbg !1527
}

declare dso_local %struct.SemaphoreInfo* @AllocateSemaphoreInfo() #2

; Function Attrs: noinline nounwind uwtable
define internal void @UnlockMagickMutex() #0 !dbg !1528 {
entry:
  ret void, !dbg !1529
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AffinityImage(%struct._QuantizeInfo* %quantize_info, %struct._Image* %image, %struct._Image* %affinity_image) #0 !dbg !1530 {
entry:
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %affinity_image.addr = alloca %struct._Image*, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1546, metadata !DIExpression()), !dbg !1547
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1548, metadata !DIExpression()), !dbg !1549
  store %struct._Image* %affinity_image, %struct._Image** %affinity_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %affinity_image.addr, metadata !1550, metadata !DIExpression()), !dbg !1551
  %0 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1552
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1553
  %2 = load %struct._Image*, %struct._Image** %affinity_image.addr, align 8, !dbg !1554
  %call = call i32 @RemapImage(%struct._QuantizeInfo* %0, %struct._Image* %1, %struct._Image* %2), !dbg !1555
  ret i32 %call, !dbg !1556
}

declare dso_local i32 @RemapImage(%struct._QuantizeInfo*, %struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AffinityImages(%struct._QuantizeInfo* %quantize_info, %struct._Image* %images, %struct._Image* %affinity_image) #0 !dbg !1557 {
entry:
  %quantize_info.addr = alloca %struct._QuantizeInfo*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %affinity_image.addr = alloca %struct._Image*, align 8
  store %struct._QuantizeInfo* %quantize_info, %struct._QuantizeInfo** %quantize_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo** %quantize_info.addr, metadata !1558, metadata !DIExpression()), !dbg !1559
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !1560, metadata !DIExpression()), !dbg !1561
  store %struct._Image* %affinity_image, %struct._Image** %affinity_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %affinity_image.addr, metadata !1562, metadata !DIExpression()), !dbg !1563
  %0 = load %struct._QuantizeInfo*, %struct._QuantizeInfo** %quantize_info.addr, align 8, !dbg !1564
  %1 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1565
  %2 = load %struct._Image*, %struct._Image** %affinity_image.addr, align 8, !dbg !1566
  %call = call i32 @RemapImages(%struct._QuantizeInfo* %0, %struct._Image* %1, %struct._Image* %2), !dbg !1567
  ret i32 %call, !dbg !1568
}

declare dso_local i32 @RemapImages(%struct._QuantizeInfo*, %struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AllocateImage(%struct._ImageInfo* %image_info) #0 !dbg !1569 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !1572, metadata !DIExpression()), !dbg !1573
  %0 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1574
  %call = call %struct._Image* @AcquireImage(%struct._ImageInfo* %0), !dbg !1575
  ret %struct._Image* %call, !dbg !1576
}

declare dso_local %struct._Image* @AcquireImage(%struct._ImageInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @AllocateImageColormap(%struct._Image* %image, i64 %colors) #0 !dbg !1577 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %colors.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1580, metadata !DIExpression()), !dbg !1581
  store i64 %colors, i64* %colors.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %colors.addr, metadata !1582, metadata !DIExpression()), !dbg !1583
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1584
  %1 = load i64, i64* %colors.addr, align 8, !dbg !1585
  %call = call i32 @AcquireImageColormap(%struct._Image* %0, i64 %1), !dbg !1586
  ret i32 %call, !dbg !1587
}

declare dso_local i32 @AcquireImageColormap(%struct._Image*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @AllocateNextImage(%struct._ImageInfo* %image_info, %struct._Image* %image) #0 !dbg !1588 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !1591, metadata !DIExpression()), !dbg !1592
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1593, metadata !DIExpression()), !dbg !1594
  %0 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1595
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1596
  call void @AcquireNextImage(%struct._ImageInfo* %0, %struct._Image* %1), !dbg !1597
  ret void, !dbg !1598
}

declare dso_local void @AcquireNextImage(%struct._ImageInfo*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @AllocateString(i8* %source) #0 !dbg !1599 {
entry:
  %source.addr = alloca i8*, align 8
  %destination = alloca i8*, align 8
  %length = alloca i64, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !1602, metadata !DIExpression()), !dbg !1603
  call void @llvm.dbg.declare(metadata i8** %destination, metadata !1604, metadata !DIExpression()), !dbg !1605
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1606, metadata !DIExpression()), !dbg !1607
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 824, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !1608
  %0 = load i8*, i8** %source.addr, align 8, !dbg !1609
  %call1 = call i64 @strlen(i8* %0) #11, !dbg !1610
  %add = add i64 %call1, 4096, !dbg !1611
  %add2 = add i64 %add, 1, !dbg !1612
  store i64 %add2, i64* %length, align 8, !dbg !1613
  %1 = load i64, i64* %length, align 8, !dbg !1614
  %call3 = call i8* @AcquireQuantumMemory(i64 %1, i64 1) #12, !dbg !1615
  store i8* %call3, i8** %destination, align 8, !dbg !1616
  %2 = load i8*, i8** %destination, align 8, !dbg !1617
  %cmp = icmp eq i8* %2, null, !dbg !1619
  br i1 %cmp, label %if.then, label %if.end, !dbg !1620

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1621, metadata !DIExpression()), !dbg !1623
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1624, metadata !DIExpression()), !dbg !1623
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1623
  %call4 = call i32* @__errno_location() #13, !dbg !1623
  %3 = load i32, i32* %call4, align 4, !dbg !1623
  %call5 = call i8* @GetExceptionMessage(i32 %3), !dbg !1623
  store i8* %call5, i8** %message, align 8, !dbg !1623
  %4 = load i8*, i8** %message, align 8, !dbg !1623
  %call6 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 828, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %4), !dbg !1623
  %5 = load i8*, i8** %message, align 8, !dbg !1623
  %call7 = call i8* @DestroyString(i8* %5), !dbg !1623
  store i8* %call7, i8** %message, align 8, !dbg !1623
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1623
  %call8 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1623
  call void @MagickCoreTerminus(), !dbg !1623
  call void @_exit(i32 1) #14, !dbg !1623
  unreachable, !dbg !1623

if.end:                                           ; preds = %entry
  %6 = load i8*, i8** %destination, align 8, !dbg !1625
  store i8 0, i8* %6, align 1, !dbg !1626
  %7 = load i8*, i8** %source.addr, align 8, !dbg !1627
  %cmp9 = icmp ne i8* %7, null, !dbg !1629
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !1630

if.then10:                                        ; preds = %if.end
  %8 = load i8*, i8** %destination, align 8, !dbg !1631
  %9 = load i8*, i8** %source.addr, align 8, !dbg !1632
  %10 = load i64, i64* %length, align 8, !dbg !1633
  %call11 = call i64 @CopyMagickString(i8* %8, i8* %9, i64 %10), !dbg !1634
  br label %if.end12, !dbg !1635

if.end12:                                         ; preds = %if.then10, %if.end
  %11 = load i8*, i8** %destination, align 8, !dbg !1636
  ret i8* %11, !dbg !1637
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #5

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local i8* @GetExceptionMessage(i32) #2

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #6

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

declare dso_local i8* @DestroyString(i8*) #2

declare dso_local void @CatchException(%struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #2

declare dso_local void @MagickCoreTerminus() #2

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #7

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @AverageImages(%struct._Image* %images, %struct._ExceptionInfo* %exception) #0 !dbg !1638 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !1641, metadata !DIExpression()), !dbg !1642
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1643, metadata !DIExpression()), !dbg !1644
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1645
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1646
  %call = call %struct._Image* @EvaluateImages(%struct._Image* %0, i32 27, %struct._ExceptionInfo* %1), !dbg !1647
  ret %struct._Image* %call, !dbg !1648
}

declare dso_local %struct._Image* @EvaluateImages(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ChannelImage(%struct._Image* %image, i32 %channel) #0 !dbg !1649 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1653, metadata !DIExpression()), !dbg !1654
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !1655, metadata !DIExpression()), !dbg !1656
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1657
  %1 = load i32, i32* %channel.addr, align 4, !dbg !1658
  %call = call i32 @SeparateImageChannel(%struct._Image* %0, i32 %1), !dbg !1659
  ret i32 %call, !dbg !1660
}

declare dso_local i32 @SeparateImageChannel(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ChannelThresholdImage(%struct._Image* %image, i8* %level) #0 !dbg !1661 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %level.addr = alloca i8*, align 8
  %threshold = alloca %struct._MagickPixelPacket, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %flags = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1664, metadata !DIExpression()), !dbg !1665
  store i8* %level, i8** %level.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %level.addr, metadata !1666, metadata !DIExpression()), !dbg !1667
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %threshold, metadata !1668, metadata !DIExpression()), !dbg !1669
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !1670, metadata !DIExpression()), !dbg !1679
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !1680, metadata !DIExpression()), !dbg !1681
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1682, metadata !DIExpression()), !dbg !1683
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1684
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1686
  %1 = load i32, i32* %debug, align 8, !dbg !1686
  %cmp = icmp ne i32 %1, 0, !dbg !1687
  br i1 %cmp, label %if.then, label %if.end, !dbg !1688

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1689
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1690
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1689
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 948, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !1691
  br label %if.end, !dbg !1692

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1693
  %debug1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 59, !dbg !1695
  %4 = load i32, i32* %debug1, align 8, !dbg !1695
  %cmp2 = icmp ne i32 %4, 0, !dbg !1696
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !1697

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 950, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !1698
  br label %if.end5, !dbg !1699

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load i8*, i8** %level.addr, align 8, !dbg !1700
  %cmp6 = icmp eq i8* %5, null, !dbg !1702
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1703

if.then7:                                         ; preds = %if.end5
  store i32 0, i32* %retval, align 4, !dbg !1704
  br label %return, !dbg !1704

if.end8:                                          ; preds = %if.end5
  %6 = load i8*, i8** %level.addr, align 8, !dbg !1705
  %call9 = call i32 @ParseGeometry(i8* %6, %struct._GeometryInfo* %geometry_info), !dbg !1706
  store i32 %call9, i32* %flags, align 4, !dbg !1707
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !1708
  %7 = load double, double* %rho, align 8, !dbg !1708
  %conv = fptrunc double %7 to float, !dbg !1709
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 5, !dbg !1710
  store float %conv, float* %red, align 8, !dbg !1711
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !1712
  %8 = load double, double* %sigma, align 8, !dbg !1712
  %conv10 = fptrunc double %8 to float, !dbg !1713
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 6, !dbg !1714
  store float %conv10, float* %green, align 4, !dbg !1715
  %9 = load i32, i32* %flags, align 4, !dbg !1716
  %and = and i32 %9, 8, !dbg !1718
  %cmp11 = icmp eq i32 %and, 0, !dbg !1719
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !1720

if.then13:                                        ; preds = %if.end8
  %red14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 5, !dbg !1721
  %10 = load float, float* %red14, align 8, !dbg !1721
  %green15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 6, !dbg !1722
  store float %10, float* %green15, align 4, !dbg !1723
  br label %if.end16, !dbg !1724

if.end16:                                         ; preds = %if.then13, %if.end8
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !1725
  %11 = load double, double* %xi, align 8, !dbg !1725
  %conv17 = fptrunc double %11 to float, !dbg !1726
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 7, !dbg !1727
  store float %conv17, float* %blue, align 8, !dbg !1728
  %12 = load i32, i32* %flags, align 4, !dbg !1729
  %and18 = and i32 %12, 1, !dbg !1731
  %cmp19 = icmp eq i32 %and18, 0, !dbg !1732
  br i1 %cmp19, label %if.then21, label %if.end24, !dbg !1733

if.then21:                                        ; preds = %if.end16
  %red22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 5, !dbg !1734
  %13 = load float, float* %red22, align 8, !dbg !1734
  %blue23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 7, !dbg !1735
  store float %13, float* %blue23, align 8, !dbg !1736
  br label %if.end24, !dbg !1737

if.end24:                                         ; preds = %if.then21, %if.end16
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1738
  %red25 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 5, !dbg !1739
  %15 = load float, float* %red25, align 8, !dbg !1739
  %conv26 = fpext float %15 to double, !dbg !1740
  %call27 = call i32 @BilevelImageChannel(%struct._Image* %14, i32 1, double %conv26), !dbg !1741
  store i32 %call27, i32* %status, align 4, !dbg !1742
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1743
  %green28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 6, !dbg !1744
  %17 = load float, float* %green28, align 4, !dbg !1744
  %conv29 = fpext float %17 to double, !dbg !1745
  %call30 = call i32 @BilevelImageChannel(%struct._Image* %16, i32 2, double %conv29), !dbg !1746
  %18 = load i32, i32* %status, align 4, !dbg !1747
  %and31 = and i32 %18, %call30, !dbg !1747
  store i32 %and31, i32* %status, align 4, !dbg !1747
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1748
  %blue32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %threshold, i32 0, i32 7, !dbg !1749
  %20 = load float, float* %blue32, align 8, !dbg !1749
  %conv33 = fpext float %20 to double, !dbg !1750
  %call34 = call i32 @BilevelImageChannel(%struct._Image* %19, i32 4, double %conv33), !dbg !1751
  %21 = load i32, i32* %status, align 4, !dbg !1752
  %and35 = and i32 %21, %call34, !dbg !1752
  store i32 %and35, i32* %status, align 4, !dbg !1752
  %22 = load i32, i32* %status, align 4, !dbg !1753
  store i32 %22, i32* %retval, align 4, !dbg !1754
  br label %return, !dbg !1754

return:                                           ; preds = %if.end24, %if.then7
  %23 = load i32, i32* %retval, align 4, !dbg !1755
  ret i32 %23, !dbg !1755
}

declare dso_local i32 @ParseGeometry(i8*, %struct._GeometryInfo*) #2

declare dso_local i32 @BilevelImageChannel(%struct._Image*, i32, double) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ClipPathImage(%struct._Image* %image, i8* %pathname, i32 %inside) #0 !dbg !1756 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pathname.addr = alloca i8*, align 8
  %inside.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1760, metadata !DIExpression()), !dbg !1761
  store i8* %pathname, i8** %pathname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pathname.addr, metadata !1762, metadata !DIExpression()), !dbg !1763
  store i32 %inside, i32* %inside.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %inside.addr, metadata !1764, metadata !DIExpression()), !dbg !1765
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1766
  %1 = load i8*, i8** %pathname.addr, align 8, !dbg !1767
  %2 = load i32, i32* %inside.addr, align 4, !dbg !1768
  %call = call i32 @ClipImagePath(%struct._Image* %0, i8* %1, i32 %2), !dbg !1769
  ret i32 %call, !dbg !1770
}

declare dso_local i32 @ClipImagePath(%struct._Image*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @CloneImageAttributes(%struct._Image* %image, %struct._Image* %clone_image) #0 !dbg !1771 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %clone_image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1774, metadata !DIExpression()), !dbg !1775
  store %struct._Image* %clone_image, %struct._Image** %clone_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %clone_image.addr, metadata !1776, metadata !DIExpression()), !dbg !1777
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1778
  %1 = load %struct._Image*, %struct._Image** %clone_image.addr, align 8, !dbg !1779
  %call = call i32 @CloneImageProperties(%struct._Image* %0, %struct._Image* %1), !dbg !1780
  ret i32 %call, !dbg !1781
}

declare dso_local i32 @CloneImageProperties(%struct._Image*, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @CloneMemory(i8* %destination, i8* %source, i64 %size) #0 !dbg !1782 {
entry:
  %retval = alloca i8*, align 8
  %destination.addr = alloca i8*, align 8
  %source.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  %i = alloca i64, align 8
  store i8* %destination, i8** %destination.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %destination.addr, metadata !1785, metadata !DIExpression()), !dbg !1786
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !1787, metadata !DIExpression()), !dbg !1788
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !1789, metadata !DIExpression()), !dbg !1790
  call void @llvm.dbg.declare(metadata i8** %p, metadata !1791, metadata !DIExpression()), !dbg !1792
  call void @llvm.dbg.declare(metadata i8** %q, metadata !1793, metadata !DIExpression()), !dbg !1794
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1795, metadata !DIExpression()), !dbg !1796
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1085, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !1797
  %0 = load i8*, i8** %source.addr, align 8, !dbg !1798
  store i8* %0, i8** %p, align 8, !dbg !1799
  %1 = load i8*, i8** %destination.addr, align 8, !dbg !1800
  store i8* %1, i8** %q, align 8, !dbg !1801
  %2 = load i8*, i8** %p, align 8, !dbg !1802
  %3 = load i8*, i8** %q, align 8, !dbg !1804
  %cmp = icmp ule i8* %2, %3, !dbg !1805
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !1806

lor.lhs.false:                                    ; preds = %entry
  %4 = load i8*, i8** %p, align 8, !dbg !1807
  %5 = load i64, i64* %size.addr, align 8, !dbg !1808
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %5, !dbg !1809
  %6 = load i8*, i8** %q, align 8, !dbg !1810
  %cmp1 = icmp uge i8* %add.ptr, %6, !dbg !1811
  br i1 %cmp1, label %if.then, label %if.end, !dbg !1812

if.then:                                          ; preds = %lor.lhs.false, %entry
  %7 = load i8*, i8** %destination.addr, align 8, !dbg !1813
  %8 = load i8*, i8** %source.addr, align 8, !dbg !1814
  %9 = load i64, i64* %size.addr, align 8, !dbg !1815
  %call2 = call i8* @CopyMagickMemory(i8* %7, i8* %8, i64 %9), !dbg !1816
  store i8* %call2, i8** %retval, align 8, !dbg !1817
  br label %return, !dbg !1817

if.end:                                           ; preds = %lor.lhs.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !1818
  %11 = load i8*, i8** %p, align 8, !dbg !1819
  %add.ptr3 = getelementptr inbounds i8, i8* %11, i64 %10, !dbg !1819
  store i8* %add.ptr3, i8** %p, align 8, !dbg !1819
  %12 = load i64, i64* %size.addr, align 8, !dbg !1820
  %13 = load i8*, i8** %q, align 8, !dbg !1821
  %add.ptr4 = getelementptr inbounds i8, i8* %13, i64 %12, !dbg !1821
  store i8* %add.ptr4, i8** %q, align 8, !dbg !1821
  %14 = load i64, i64* %size.addr, align 8, !dbg !1822
  %sub = sub i64 %14, 1, !dbg !1824
  store i64 %sub, i64* %i, align 8, !dbg !1825
  br label %for.cond, !dbg !1826

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i64, i64* %i, align 8, !dbg !1827
  %cmp5 = icmp sge i64 %15, 0, !dbg !1829
  br i1 %cmp5, label %for.body, label %for.end, !dbg !1830

for.body:                                         ; preds = %for.cond
  %16 = load i8*, i8** %p, align 8, !dbg !1831
  %incdec.ptr = getelementptr inbounds i8, i8* %16, i32 -1, !dbg !1831
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !1831
  %17 = load i8, i8* %incdec.ptr, align 1, !dbg !1832
  %18 = load i8*, i8** %q, align 8, !dbg !1833
  %incdec.ptr6 = getelementptr inbounds i8, i8* %18, i32 -1, !dbg !1833
  store i8* %incdec.ptr6, i8** %q, align 8, !dbg !1833
  store i8 %17, i8* %incdec.ptr6, align 1, !dbg !1834
  br label %for.inc, !dbg !1835

for.inc:                                          ; preds = %for.body
  %19 = load i64, i64* %i, align 8, !dbg !1836
  %dec = add nsw i64 %19, -1, !dbg !1836
  store i64 %dec, i64* %i, align 8, !dbg !1836
  br label %for.cond, !dbg !1837, !llvm.loop !1838

for.end:                                          ; preds = %for.cond
  %20 = load i8*, i8** %destination.addr, align 8, !dbg !1840
  store i8* %20, i8** %retval, align 8, !dbg !1841
  br label %return, !dbg !1841

return:                                           ; preds = %for.end, %if.then
  %21 = load i8*, i8** %retval, align 8, !dbg !1842
  ret i8* %21, !dbg !1842
}

declare dso_local i8* @CopyMagickMemory(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._CacheView* @CloseCacheView(%struct._CacheView* %view_info) #0 !dbg !1843 {
entry:
  %view_info.addr = alloca %struct._CacheView*, align 8
  store %struct._CacheView* %view_info, %struct._CacheView** %view_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %view_info.addr, metadata !1846, metadata !DIExpression()), !dbg !1847
  %0 = load %struct._CacheView*, %struct._CacheView** %view_info.addr, align 8, !dbg !1848
  %call = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %0), !dbg !1849
  ret %struct._CacheView* %call, !dbg !1850
}

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ColorFloodfillImage(%struct._Image* %image, %struct._DrawInfo* %draw_info, i64 %target.coerce, i64 %x_offset, i64 %y_offset, i32 %method) #0 !dbg !1851 {
entry:
  %retval = alloca i32, align 4
  %target = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %method.addr = alloca i32, align 4
  %floodplane_image = alloca %struct._Image*, align 8
  %skip = alloca i32, align 4
  %fill_color = alloca %struct._PixelPacket, align 2
  %s = alloca %struct._SegmentInfo*, align 8
  %segment_stack = alloca %struct._SegmentInfo*, align 8
  %offset = alloca i64, align 8
  %start = alloca i64, align 8
  %x = alloca i64, align 8
  %x1 = alloca i64, align 8
  %x2 = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x94 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %p394 = alloca %struct._PixelPacket*, align 8
  %x395 = alloca i64, align 8
  %q396 = alloca %struct._PixelPacket*, align 8
  %0 = bitcast %struct._PixelPacket* %target to i64*
  store i64 %target.coerce, i64* %0, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1965, metadata !DIExpression()), !dbg !1966
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !1967, metadata !DIExpression()), !dbg !1968
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !1969, metadata !DIExpression()), !dbg !1970
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !1971, metadata !DIExpression()), !dbg !1972
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !1973, metadata !DIExpression()), !dbg !1974
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !1975, metadata !DIExpression()), !dbg !1976
  call void @llvm.dbg.declare(metadata %struct._Image** %floodplane_image, metadata !1977, metadata !DIExpression()), !dbg !1978
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !1979, metadata !DIExpression()), !dbg !1980
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %fill_color, metadata !1981, metadata !DIExpression()), !dbg !1982
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %s, metadata !1983, metadata !DIExpression()), !dbg !1984
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %segment_stack, metadata !1985, metadata !DIExpression()), !dbg !1986
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !1987, metadata !DIExpression()), !dbg !1988
  call void @llvm.dbg.declare(metadata i64* %start, metadata !1989, metadata !DIExpression()), !dbg !1990
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1991, metadata !DIExpression()), !dbg !1992
  call void @llvm.dbg.declare(metadata i64* %x1, metadata !1993, metadata !DIExpression()), !dbg !1994
  call void @llvm.dbg.declare(metadata i64* %x2, metadata !1995, metadata !DIExpression()), !dbg !1996
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1997, metadata !DIExpression()), !dbg !1998
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1999
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !2001
  %2 = load i32, i32* %debug, align 8, !dbg !2001
  %cmp = icmp ne i32 %2, 0, !dbg !2002
  br i1 %cmp, label %if.then, label %if.end, !dbg !2003

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2004
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2005
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2004
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1226, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !2006
  br label %if.end, !dbg !2007

if.end:                                           ; preds = %if.then, %entry
  %4 = load i64, i64* %x_offset.addr, align 8, !dbg !2008
  %cmp1 = icmp slt i64 %4, 0, !dbg !2010
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !2011

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i64, i64* %x_offset.addr, align 8, !dbg !2012
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2013
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !2014
  %7 = load i64, i64* %columns, align 8, !dbg !2014
  %cmp2 = icmp sge i64 %5, %7, !dbg !2015
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !2016

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !2017
  br label %return, !dbg !2017

if.end4:                                          ; preds = %lor.lhs.false
  %8 = load i64, i64* %y_offset.addr, align 8, !dbg !2018
  %cmp5 = icmp slt i64 %8, 0, !dbg !2020
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6, !dbg !2021

lor.lhs.false6:                                   ; preds = %if.end4
  %9 = load i64, i64* %y_offset.addr, align 8, !dbg !2022
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2023
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !2024
  %11 = load i64, i64* %rows, align 8, !dbg !2024
  %cmp7 = icmp sge i64 %9, %11, !dbg !2025
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2026

if.then8:                                         ; preds = %lor.lhs.false6, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !2027
  br label %return, !dbg !2027

if.end9:                                          ; preds = %lor.lhs.false6
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2028
  %call10 = call i32 @SetImageStorageClass(%struct._Image* %12, i32 1), !dbg !2030
  %cmp11 = icmp eq i32 %call10, 0, !dbg !2031
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !2032

if.then12:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !2033
  br label %return, !dbg !2033

if.end13:                                         ; preds = %if.end9
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2034
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 6, !dbg !2036
  %14 = load i32, i32* %matte, align 8, !dbg !2036
  %cmp14 = icmp eq i32 %14, 0, !dbg !2037
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !2038

if.then15:                                        ; preds = %if.end13
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2039
  %call16 = call i32 @SetImageAlphaChannel(%struct._Image* %15, i32 6), !dbg !2040
  br label %if.end17, !dbg !2041

if.end17:                                         ; preds = %if.then15, %if.end13
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2042
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2043
  %columns18 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !2044
  %18 = load i64, i64* %columns18, align 8, !dbg !2044
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2045
  %rows19 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !2046
  %20 = load i64, i64* %rows19, align 8, !dbg !2046
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2047
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !2048
  %call20 = call %struct._Image* @CloneImage(%struct._Image* %16, i64 %18, i64 %20, i32 1, %struct._ExceptionInfo* %exception), !dbg !2049
  store %struct._Image* %call20, %struct._Image** %floodplane_image, align 8, !dbg !2050
  %22 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2051
  %cmp21 = icmp eq %struct._Image* %22, null, !dbg !2053
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !2054

if.then22:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !2055
  br label %return, !dbg !2055

if.end23:                                         ; preds = %if.end17
  %23 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2056
  %call24 = call i32 @SetImageAlphaChannel(%struct._Image* %23, i32 6), !dbg !2057
  %call25 = call i8* @AcquireQuantumMemory(i64 32768, i64 32) #12, !dbg !2058
  %24 = bitcast i8* %call25 to %struct._SegmentInfo*, !dbg !2059
  store %struct._SegmentInfo* %24, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2060
  %25 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2061
  %cmp26 = icmp eq %struct._SegmentInfo* %25, null, !dbg !2063
  br i1 %cmp26, label %if.then27, label %if.end36, !dbg !2064

if.then27:                                        ; preds = %if.end23
  %26 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2065
  %call28 = call %struct._Image* @DestroyImage(%struct._Image* %26), !dbg !2067
  store %struct._Image* %call28, %struct._Image** %floodplane_image, align 8, !dbg !2068
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2069
  %cmp29 = icmp ne %struct._Image* %27, null, !dbg !2069
  br i1 %cmp29, label %if.then30, label %if.end35, !dbg !2072

if.then30:                                        ; preds = %if.then27
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2069
  %exception31 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 58, !dbg !2069
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2069
  %filename32 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 53, !dbg !2069
  %arraydecay33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename32, i64 0, i64 0, !dbg !2069
  %call34 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1251, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay33), !dbg !2069
  br label %if.end35, !dbg !2069

if.end35:                                         ; preds = %if.then30, %if.then27
  store i32 0, i32* %retval, align 4, !dbg !2072
  br label %return, !dbg !2072

if.end36:                                         ; preds = %if.end23
  %30 = load i64, i64* %x_offset.addr, align 8, !dbg !2073
  store i64 %30, i64* %x, align 8, !dbg !2074
  %31 = load i64, i64* %y_offset.addr, align 8, !dbg !2075
  store i64 %31, i64* %y, align 8, !dbg !2076
  store i64 0, i64* %start, align 8, !dbg !2077
  %32 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2078
  store %struct._SegmentInfo* %32, %struct._SegmentInfo** %s, align 8, !dbg !2079
  %33 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2080
  %34 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2080
  %add.ptr = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %34, i64 32768, !dbg !2080
  %cmp37 = icmp uge %struct._SegmentInfo* %33, %add.ptr, !dbg !2080
  br i1 %cmp37, label %if.then38, label %if.else, !dbg !2083

if.then38:                                        ; preds = %if.end36
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2084
  %cmp39 = icmp ne %struct._Image* %35, null, !dbg !2084
  br i1 %cmp39, label %if.then40, label %if.end45, !dbg !2087

if.then40:                                        ; preds = %if.then38
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2084
  %exception41 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 58, !dbg !2084
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2084
  %filename42 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 53, !dbg !2084
  %arraydecay43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename42, i64 0, i64 0, !dbg !2084
  %call44 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception41, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1260, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay43), !dbg !2084
  br label %if.end45, !dbg !2084

if.end45:                                         ; preds = %if.then40, %if.then38
  store i32 0, i32* %retval, align 4, !dbg !2087
  br label %return, !dbg !2087

if.else:                                          ; preds = %if.end36
  %38 = load i64, i64* %y, align 8, !dbg !2088
  %add = add nsw i64 %38, 1, !dbg !2088
  %cmp46 = icmp sge i64 %add, 0, !dbg !2088
  br i1 %cmp46, label %land.lhs.true, label %if.end55, !dbg !2088

land.lhs.true:                                    ; preds = %if.else
  %39 = load i64, i64* %y, align 8, !dbg !2088
  %add47 = add nsw i64 %39, 1, !dbg !2088
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2088
  %rows48 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 8, !dbg !2088
  %41 = load i64, i64* %rows48, align 8, !dbg !2088
  %cmp49 = icmp slt i64 %add47, %41, !dbg !2088
  br i1 %cmp49, label %if.then50, label %if.end55, !dbg !2091

if.then50:                                        ; preds = %land.lhs.true
  %42 = load i64, i64* %x, align 8, !dbg !2092
  %conv = sitofp i64 %42 to double, !dbg !2092
  %43 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2092
  %x151 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %43, i32 0, i32 0, !dbg !2092
  store double %conv, double* %x151, align 8, !dbg !2092
  %44 = load i64, i64* %y, align 8, !dbg !2092
  %conv52 = sitofp i64 %44 to double, !dbg !2092
  %45 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2092
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %45, i32 0, i32 1, !dbg !2092
  store double %conv52, double* %y1, align 8, !dbg !2092
  %46 = load i64, i64* %x, align 8, !dbg !2092
  %conv53 = sitofp i64 %46 to double, !dbg !2092
  %47 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2092
  %x254 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %47, i32 0, i32 2, !dbg !2092
  store double %conv53, double* %x254, align 8, !dbg !2092
  %48 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2092
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %48, i32 0, i32 3, !dbg !2092
  store double 1.000000e+00, double* %y2, align 8, !dbg !2092
  %49 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2092
  %incdec.ptr = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %49, i32 1, !dbg !2092
  store %struct._SegmentInfo* %incdec.ptr, %struct._SegmentInfo** %s, align 8, !dbg !2092
  br label %if.end55, !dbg !2092

if.end55:                                         ; preds = %if.then50, %land.lhs.true, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  %50 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2094
  %51 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2094
  %add.ptr57 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %51, i64 32768, !dbg !2094
  %cmp58 = icmp uge %struct._SegmentInfo* %50, %add.ptr57, !dbg !2094
  br i1 %cmp58, label %if.then60, label %if.else69, !dbg !2097

if.then60:                                        ; preds = %if.end56
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2098
  %cmp61 = icmp ne %struct._Image* %52, null, !dbg !2098
  br i1 %cmp61, label %if.then63, label %if.end68, !dbg !2101

if.then63:                                        ; preds = %if.then60
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2098
  %exception64 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !2098
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2098
  %filename65 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 53, !dbg !2098
  %arraydecay66 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename65, i64 0, i64 0, !dbg !2098
  %call67 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1261, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay66), !dbg !2098
  br label %if.end68, !dbg !2098

if.end68:                                         ; preds = %if.then63, %if.then60
  store i32 0, i32* %retval, align 4, !dbg !2101
  br label %return, !dbg !2101

if.else69:                                        ; preds = %if.end56
  %55 = load i64, i64* %y, align 8, !dbg !2102
  %add70 = add nsw i64 %55, 1, !dbg !2102
  %add71 = add nsw i64 %add70, -1, !dbg !2102
  %cmp72 = icmp sge i64 %add71, 0, !dbg !2102
  br i1 %cmp72, label %land.lhs.true74, label %if.end90, !dbg !2102

land.lhs.true74:                                  ; preds = %if.else69
  %56 = load i64, i64* %y, align 8, !dbg !2102
  %add75 = add nsw i64 %56, 1, !dbg !2102
  %add76 = add nsw i64 %add75, -1, !dbg !2102
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2102
  %rows77 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 8, !dbg !2102
  %58 = load i64, i64* %rows77, align 8, !dbg !2102
  %cmp78 = icmp slt i64 %add76, %58, !dbg !2102
  br i1 %cmp78, label %if.then80, label %if.end90, !dbg !2105

if.then80:                                        ; preds = %land.lhs.true74
  %59 = load i64, i64* %x, align 8, !dbg !2106
  %conv81 = sitofp i64 %59 to double, !dbg !2106
  %60 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2106
  %x182 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %60, i32 0, i32 0, !dbg !2106
  store double %conv81, double* %x182, align 8, !dbg !2106
  %61 = load i64, i64* %y, align 8, !dbg !2106
  %add83 = add nsw i64 %61, 1, !dbg !2106
  %conv84 = sitofp i64 %add83 to double, !dbg !2106
  %62 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2106
  %y185 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %62, i32 0, i32 1, !dbg !2106
  store double %conv84, double* %y185, align 8, !dbg !2106
  %63 = load i64, i64* %x, align 8, !dbg !2106
  %conv86 = sitofp i64 %63 to double, !dbg !2106
  %64 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2106
  %x287 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %64, i32 0, i32 2, !dbg !2106
  store double %conv86, double* %x287, align 8, !dbg !2106
  %65 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2106
  %y288 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %65, i32 0, i32 3, !dbg !2106
  store double -1.000000e+00, double* %y288, align 8, !dbg !2106
  %66 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2106
  %incdec.ptr89 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %66, i32 1, !dbg !2106
  store %struct._SegmentInfo* %incdec.ptr89, %struct._SegmentInfo** %s, align 8, !dbg !2106
  br label %if.end90, !dbg !2106

if.end90:                                         ; preds = %if.then80, %land.lhs.true74, %if.else69
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  br label %while.cond, !dbg !2108

while.cond:                                       ; preds = %do.end, %if.end91
  %67 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2109
  %68 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2110
  %cmp92 = icmp ugt %struct._SegmentInfo* %67, %68, !dbg !2111
  br i1 %cmp92, label %while.body, label %while.end, !dbg !2108

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2112, metadata !DIExpression()), !dbg !2115
  call void @llvm.dbg.declare(metadata i64* %x94, metadata !2116, metadata !DIExpression()), !dbg !2117
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2118, metadata !DIExpression()), !dbg !2120
  %69 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2121
  %incdec.ptr95 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %69, i32 -1, !dbg !2121
  store %struct._SegmentInfo* %incdec.ptr95, %struct._SegmentInfo** %s, align 8, !dbg !2121
  %70 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2122
  %x196 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %70, i32 0, i32 0, !dbg !2123
  %71 = load double, double* %x196, align 8, !dbg !2123
  %conv97 = fptosi double %71 to i64, !dbg !2124
  store i64 %conv97, i64* %x1, align 8, !dbg !2125
  %72 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2126
  %x298 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %72, i32 0, i32 2, !dbg !2127
  %73 = load double, double* %x298, align 8, !dbg !2127
  %conv99 = fptosi double %73 to i64, !dbg !2128
  store i64 %conv99, i64* %x2, align 8, !dbg !2129
  %74 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2130
  %y2100 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %74, i32 0, i32 3, !dbg !2131
  %75 = load double, double* %y2100, align 8, !dbg !2131
  %conv101 = fptosi double %75 to i64, !dbg !2132
  store i64 %conv101, i64* %offset, align 8, !dbg !2133
  %76 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2134
  %y1102 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %76, i32 0, i32 1, !dbg !2135
  %77 = load double, double* %y1102, align 8, !dbg !2135
  %conv103 = fptosi double %77 to i64, !dbg !2136
  %78 = load i64, i64* %offset, align 8, !dbg !2137
  %add104 = add nsw i64 %conv103, %78, !dbg !2138
  store i64 %add104, i64* %y, align 8, !dbg !2139
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2140
  %80 = load i64, i64* %y, align 8, !dbg !2141
  %81 = load i64, i64* %x1, align 8, !dbg !2142
  %add105 = add nsw i64 %81, 1, !dbg !2143
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2144
  %exception106 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 58, !dbg !2145
  %call107 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %79, i64 0, i64 %80, i64 %add105, i64 1, %struct._ExceptionInfo* %exception106), !dbg !2146
  store %struct._PixelPacket* %call107, %struct._PixelPacket** %p, align 8, !dbg !2147
  %83 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2148
  %84 = load i64, i64* %y, align 8, !dbg !2149
  %85 = load i64, i64* %x1, align 8, !dbg !2150
  %add108 = add nsw i64 %85, 1, !dbg !2151
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2152
  %exception109 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 58, !dbg !2153
  %call110 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %83, i64 0, i64 %84, i64 %add108, i64 1, %struct._ExceptionInfo* %exception109), !dbg !2154
  store %struct._PixelPacket* %call110, %struct._PixelPacket** %q, align 8, !dbg !2155
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2156
  %cmp111 = icmp eq %struct._PixelPacket* %87, null, !dbg !2158
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !2159

lor.lhs.false113:                                 ; preds = %while.body
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2160
  %cmp114 = icmp eq %struct._PixelPacket* %88, null, !dbg !2161
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !2162

if.then116:                                       ; preds = %lor.lhs.false113, %while.body
  br label %while.end, !dbg !2163

if.end117:                                        ; preds = %lor.lhs.false113
  %89 = load i64, i64* %x1, align 8, !dbg !2164
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2165
  %add.ptr118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i64 %89, !dbg !2165
  store %struct._PixelPacket* %add.ptr118, %struct._PixelPacket** %p, align 8, !dbg !2165
  %91 = load i64, i64* %x1, align 8, !dbg !2166
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2167
  %add.ptr119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i64 %91, !dbg !2167
  store %struct._PixelPacket* %add.ptr119, %struct._PixelPacket** %q, align 8, !dbg !2167
  %93 = load i64, i64* %x1, align 8, !dbg !2168
  store i64 %93, i64* %x94, align 8, !dbg !2170
  br label %for.cond, !dbg !2171

for.cond:                                         ; preds = %for.inc, %if.end117
  %94 = load i64, i64* %x94, align 8, !dbg !2172
  %cmp120 = icmp sge i64 %94, 0, !dbg !2174
  br i1 %cmp120, label %for.body, label %for.end, !dbg !2175

for.body:                                         ; preds = %for.cond
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2176
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 3, !dbg !2179
  %96 = load i16, i16* %opacity, align 2, !dbg !2179
  %conv122 = zext i16 %96 to i32, !dbg !2176
  %cmp123 = icmp eq i32 %conv122, 65535, !dbg !2180
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !2181

if.then125:                                       ; preds = %for.body
  br label %for.end, !dbg !2182

if.end126:                                        ; preds = %for.body
  %97 = load i32, i32* %method.addr, align 4, !dbg !2183
  %cmp127 = icmp eq i32 %97, 3, !dbg !2185
  br i1 %cmp127, label %if.then129, label %if.else135, !dbg !2186

if.then129:                                       ; preds = %if.end126
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2187
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2190
  %call130 = call i32 @IsColorSimilar(%struct._Image* %98, %struct._PixelPacket* %99, %struct._PixelPacket* %target), !dbg !2191
  %cmp131 = icmp eq i32 %call130, 0, !dbg !2192
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !2193

if.then133:                                       ; preds = %if.then129
  br label %for.end, !dbg !2194

if.end134:                                        ; preds = %if.then129
  br label %if.end141, !dbg !2195

if.else135:                                       ; preds = %if.end126
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2196
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2198
  %call136 = call i32 @IsColorSimilar(%struct._Image* %100, %struct._PixelPacket* %101, %struct._PixelPacket* %target), !dbg !2199
  %cmp137 = icmp ne i32 %call136, 0, !dbg !2200
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !2201

if.then139:                                       ; preds = %if.else135
  br label %for.end, !dbg !2202

if.end140:                                        ; preds = %if.else135
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.end134
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2203
  %opacity142 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 3, !dbg !2204
  store i16 -1, i16* %opacity142, align 2, !dbg !2205
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2206
  %incdec.ptr143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 -1, !dbg !2206
  store %struct._PixelPacket* %incdec.ptr143, %struct._PixelPacket** %p, align 8, !dbg !2206
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2207
  %incdec.ptr144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 -1, !dbg !2207
  store %struct._PixelPacket* %incdec.ptr144, %struct._PixelPacket** %q, align 8, !dbg !2207
  br label %for.inc, !dbg !2208

for.inc:                                          ; preds = %if.end141
  %105 = load i64, i64* %x94, align 8, !dbg !2209
  %dec = add nsw i64 %105, -1, !dbg !2209
  store i64 %dec, i64* %x94, align 8, !dbg !2209
  br label %for.cond, !dbg !2210, !llvm.loop !2211

for.end:                                          ; preds = %if.then139, %if.then133, %if.then125, %for.cond
  %106 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2213
  %107 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2215
  %exception145 = getelementptr inbounds %struct._Image, %struct._Image* %107, i32 0, i32 58, !dbg !2216
  %call146 = call i32 @SyncAuthenticPixels(%struct._Image* %106, %struct._ExceptionInfo* %exception145), !dbg !2217
  %cmp147 = icmp eq i32 %call146, 0, !dbg !2218
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !2219

if.then149:                                       ; preds = %for.end
  br label %while.end, !dbg !2220

if.end150:                                        ; preds = %for.end
  %108 = load i64, i64* %x94, align 8, !dbg !2221
  %109 = load i64, i64* %x1, align 8, !dbg !2222
  %cmp151 = icmp sge i64 %108, %109, !dbg !2223
  %110 = zext i1 %cmp151 to i64, !dbg !2221
  %cond = select i1 %cmp151, i32 1, i32 0, !dbg !2221
  store i32 %cond, i32* %skip, align 4, !dbg !2224
  %111 = load i32, i32* %skip, align 4, !dbg !2225
  %cmp153 = icmp eq i32 %111, 0, !dbg !2227
  br i1 %cmp153, label %if.then155, label %if.end198, !dbg !2228

if.then155:                                       ; preds = %if.end150
  %112 = load i64, i64* %x94, align 8, !dbg !2229
  %add156 = add nsw i64 %112, 1, !dbg !2231
  store i64 %add156, i64* %start, align 8, !dbg !2232
  %113 = load i64, i64* %start, align 8, !dbg !2233
  %114 = load i64, i64* %x1, align 8, !dbg !2235
  %cmp157 = icmp slt i64 %113, %114, !dbg !2236
  br i1 %cmp157, label %if.then159, label %if.end196, !dbg !2237

if.then159:                                       ; preds = %if.then155
  %115 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2238
  %116 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2238
  %add.ptr160 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %116, i64 32768, !dbg !2238
  %cmp161 = icmp uge %struct._SegmentInfo* %115, %add.ptr160, !dbg !2238
  br i1 %cmp161, label %if.then163, label %if.else172, !dbg !2241

if.then163:                                       ; preds = %if.then159
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2242
  %cmp164 = icmp ne %struct._Image* %117, null, !dbg !2242
  br i1 %cmp164, label %if.then166, label %if.end171, !dbg !2245

if.then166:                                       ; preds = %if.then163
  %118 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2242
  %exception167 = getelementptr inbounds %struct._Image, %struct._Image* %118, i32 0, i32 58, !dbg !2242
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2242
  %filename168 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 53, !dbg !2242
  %arraydecay169 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename168, i64 0, i64 0, !dbg !2242
  %call170 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception167, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1314, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay169), !dbg !2242
  br label %if.end171, !dbg !2242

if.end171:                                        ; preds = %if.then166, %if.then163
  store i32 0, i32* %retval, align 4, !dbg !2245
  br label %return, !dbg !2245

if.else172:                                       ; preds = %if.then159
  %120 = load i64, i64* %y, align 8, !dbg !2246
  %121 = load i64, i64* %offset, align 8, !dbg !2246
  %sub = sub nsw i64 0, %121, !dbg !2246
  %add173 = add nsw i64 %120, %sub, !dbg !2246
  %cmp174 = icmp sge i64 %add173, 0, !dbg !2246
  br i1 %cmp174, label %land.lhs.true176, label %if.end194, !dbg !2246

land.lhs.true176:                                 ; preds = %if.else172
  %122 = load i64, i64* %y, align 8, !dbg !2246
  %123 = load i64, i64* %offset, align 8, !dbg !2246
  %sub177 = sub nsw i64 0, %123, !dbg !2246
  %add178 = add nsw i64 %122, %sub177, !dbg !2246
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2246
  %rows179 = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 8, !dbg !2246
  %125 = load i64, i64* %rows179, align 8, !dbg !2246
  %cmp180 = icmp slt i64 %add178, %125, !dbg !2246
  br i1 %cmp180, label %if.then182, label %if.end194, !dbg !2249

if.then182:                                       ; preds = %land.lhs.true176
  %126 = load i64, i64* %start, align 8, !dbg !2250
  %conv183 = sitofp i64 %126 to double, !dbg !2250
  %127 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2250
  %x1184 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %127, i32 0, i32 0, !dbg !2250
  store double %conv183, double* %x1184, align 8, !dbg !2250
  %128 = load i64, i64* %y, align 8, !dbg !2250
  %conv185 = sitofp i64 %128 to double, !dbg !2250
  %129 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2250
  %y1186 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %129, i32 0, i32 1, !dbg !2250
  store double %conv185, double* %y1186, align 8, !dbg !2250
  %130 = load i64, i64* %x1, align 8, !dbg !2250
  %sub187 = sub nsw i64 %130, 1, !dbg !2250
  %conv188 = sitofp i64 %sub187 to double, !dbg !2250
  %131 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2250
  %x2189 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %131, i32 0, i32 2, !dbg !2250
  store double %conv188, double* %x2189, align 8, !dbg !2250
  %132 = load i64, i64* %offset, align 8, !dbg !2250
  %sub190 = sub nsw i64 0, %132, !dbg !2250
  %conv191 = sitofp i64 %sub190 to double, !dbg !2250
  %133 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2250
  %y2192 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %133, i32 0, i32 3, !dbg !2250
  store double %conv191, double* %y2192, align 8, !dbg !2250
  %134 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2250
  %incdec.ptr193 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %134, i32 1, !dbg !2250
  store %struct._SegmentInfo* %incdec.ptr193, %struct._SegmentInfo** %s, align 8, !dbg !2250
  br label %if.end194, !dbg !2250

if.end194:                                        ; preds = %if.then182, %land.lhs.true176, %if.else172
  br label %if.end195

if.end195:                                        ; preds = %if.end194
  br label %if.end196, !dbg !2241

if.end196:                                        ; preds = %if.end195, %if.then155
  %135 = load i64, i64* %x1, align 8, !dbg !2252
  %add197 = add nsw i64 %135, 1, !dbg !2253
  store i64 %add197, i64* %x94, align 8, !dbg !2254
  br label %if.end198, !dbg !2255

if.end198:                                        ; preds = %if.end196, %if.end150
  br label %do.body, !dbg !2256

do.body:                                          ; preds = %do.cond, %if.end198
  %136 = load i32, i32* %skip, align 4, !dbg !2257
  %cmp199 = icmp eq i32 %136, 0, !dbg !2260
  br i1 %cmp199, label %if.then201, label %if.end336, !dbg !2261

if.then201:                                       ; preds = %do.body
  %137 = load i64, i64* %x94, align 8, !dbg !2262
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2265
  %columns202 = getelementptr inbounds %struct._Image, %struct._Image* %138, i32 0, i32 7, !dbg !2266
  %139 = load i64, i64* %columns202, align 8, !dbg !2266
  %cmp203 = icmp slt i64 %137, %139, !dbg !2267
  br i1 %cmp203, label %if.then205, label %if.end258, !dbg !2268

if.then205:                                       ; preds = %if.then201
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2269
  %141 = load i64, i64* %x94, align 8, !dbg !2271
  %142 = load i64, i64* %y, align 8, !dbg !2272
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2273
  %columns206 = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 7, !dbg !2274
  %144 = load i64, i64* %columns206, align 8, !dbg !2274
  %145 = load i64, i64* %x94, align 8, !dbg !2275
  %sub207 = sub i64 %144, %145, !dbg !2276
  %146 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2277
  %exception208 = getelementptr inbounds %struct._Image, %struct._Image* %146, i32 0, i32 58, !dbg !2278
  %call209 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %140, i64 %141, i64 %142, i64 %sub207, i64 1, %struct._ExceptionInfo* %exception208), !dbg !2279
  store %struct._PixelPacket* %call209, %struct._PixelPacket** %p, align 8, !dbg !2280
  %147 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2281
  %148 = load i64, i64* %x94, align 8, !dbg !2282
  %149 = load i64, i64* %y, align 8, !dbg !2283
  %150 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2284
  %columns210 = getelementptr inbounds %struct._Image, %struct._Image* %150, i32 0, i32 7, !dbg !2285
  %151 = load i64, i64* %columns210, align 8, !dbg !2285
  %152 = load i64, i64* %x94, align 8, !dbg !2286
  %sub211 = sub i64 %151, %152, !dbg !2287
  %153 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2288
  %exception212 = getelementptr inbounds %struct._Image, %struct._Image* %153, i32 0, i32 58, !dbg !2289
  %call213 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %147, i64 %148, i64 %149, i64 %sub211, i64 1, %struct._ExceptionInfo* %exception212), !dbg !2290
  store %struct._PixelPacket* %call213, %struct._PixelPacket** %q, align 8, !dbg !2291
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2292
  %cmp214 = icmp eq %struct._PixelPacket* %154, null, !dbg !2294
  br i1 %cmp214, label %if.then219, label %lor.lhs.false216, !dbg !2295

lor.lhs.false216:                                 ; preds = %if.then205
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2296
  %cmp217 = icmp eq %struct._PixelPacket* %155, null, !dbg !2297
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !2298

if.then219:                                       ; preds = %lor.lhs.false216, %if.then205
  br label %do.end, !dbg !2299

if.end220:                                        ; preds = %lor.lhs.false216
  br label %for.cond221, !dbg !2300

for.cond221:                                      ; preds = %for.inc250, %if.end220
  %156 = load i64, i64* %x94, align 8, !dbg !2301
  %157 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2304
  %columns222 = getelementptr inbounds %struct._Image, %struct._Image* %157, i32 0, i32 7, !dbg !2305
  %158 = load i64, i64* %columns222, align 8, !dbg !2305
  %cmp223 = icmp slt i64 %156, %158, !dbg !2306
  br i1 %cmp223, label %for.body225, label %for.end251, !dbg !2307

for.body225:                                      ; preds = %for.cond221
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2308
  %opacity226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 3, !dbg !2311
  %160 = load i16, i16* %opacity226, align 2, !dbg !2311
  %conv227 = zext i16 %160 to i32, !dbg !2308
  %cmp228 = icmp eq i32 %conv227, 65535, !dbg !2312
  br i1 %cmp228, label %if.then230, label %if.end231, !dbg !2313

if.then230:                                       ; preds = %for.body225
  br label %for.end251, !dbg !2314

if.end231:                                        ; preds = %for.body225
  %161 = load i32, i32* %method.addr, align 4, !dbg !2315
  %cmp232 = icmp eq i32 %161, 3, !dbg !2317
  br i1 %cmp232, label %if.then234, label %if.else240, !dbg !2318

if.then234:                                       ; preds = %if.end231
  %162 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2319
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2322
  %call235 = call i32 @IsColorSimilar(%struct._Image* %162, %struct._PixelPacket* %163, %struct._PixelPacket* %target), !dbg !2323
  %cmp236 = icmp eq i32 %call235, 0, !dbg !2324
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !2325

if.then238:                                       ; preds = %if.then234
  br label %for.end251, !dbg !2326

if.end239:                                        ; preds = %if.then234
  br label %if.end246, !dbg !2327

if.else240:                                       ; preds = %if.end231
  %164 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2328
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2330
  %call241 = call i32 @IsColorSimilar(%struct._Image* %164, %struct._PixelPacket* %165, %struct._PixelPacket* %target), !dbg !2331
  %cmp242 = icmp ne i32 %call241, 0, !dbg !2332
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !2333

if.then244:                                       ; preds = %if.else240
  br label %for.end251, !dbg !2334

if.end245:                                        ; preds = %if.else240
  br label %if.end246

if.end246:                                        ; preds = %if.end245, %if.end239
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2335
  %opacity247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 3, !dbg !2336
  store i16 -1, i16* %opacity247, align 2, !dbg !2337
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2338
  %incdec.ptr248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 1, !dbg !2338
  store %struct._PixelPacket* %incdec.ptr248, %struct._PixelPacket** %p, align 8, !dbg !2338
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2339
  %incdec.ptr249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 1, !dbg !2339
  store %struct._PixelPacket* %incdec.ptr249, %struct._PixelPacket** %q, align 8, !dbg !2339
  br label %for.inc250, !dbg !2340

for.inc250:                                       ; preds = %if.end246
  %169 = load i64, i64* %x94, align 8, !dbg !2341
  %inc = add nsw i64 %169, 1, !dbg !2341
  store i64 %inc, i64* %x94, align 8, !dbg !2341
  br label %for.cond221, !dbg !2342, !llvm.loop !2343

for.end251:                                       ; preds = %if.then244, %if.then238, %if.then230, %for.cond221
  %170 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2345
  %171 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2347
  %exception252 = getelementptr inbounds %struct._Image, %struct._Image* %171, i32 0, i32 58, !dbg !2348
  %call253 = call i32 @SyncAuthenticPixels(%struct._Image* %170, %struct._ExceptionInfo* %exception252), !dbg !2349
  %cmp254 = icmp eq i32 %call253, 0, !dbg !2350
  br i1 %cmp254, label %if.then256, label %if.end257, !dbg !2351

if.then256:                                       ; preds = %for.end251
  br label %do.end, !dbg !2352

if.end257:                                        ; preds = %for.end251
  br label %if.end258, !dbg !2353

if.end258:                                        ; preds = %if.end257, %if.then201
  %172 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2354
  %173 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2354
  %add.ptr259 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %173, i64 32768, !dbg !2354
  %cmp260 = icmp uge %struct._SegmentInfo* %172, %add.ptr259, !dbg !2354
  br i1 %cmp260, label %if.then262, label %if.else271, !dbg !2357

if.then262:                                       ; preds = %if.end258
  %174 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2358
  %cmp263 = icmp ne %struct._Image* %174, null, !dbg !2358
  br i1 %cmp263, label %if.then265, label %if.end270, !dbg !2361

if.then265:                                       ; preds = %if.then262
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2358
  %exception266 = getelementptr inbounds %struct._Image, %struct._Image* %175, i32 0, i32 58, !dbg !2358
  %176 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2358
  %filename267 = getelementptr inbounds %struct._Image, %struct._Image* %176, i32 0, i32 53, !dbg !2358
  %arraydecay268 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename267, i64 0, i64 0, !dbg !2358
  %call269 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception266, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1349, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay268), !dbg !2358
  br label %if.end270, !dbg !2358

if.end270:                                        ; preds = %if.then265, %if.then262
  store i32 0, i32* %retval, align 4, !dbg !2361
  br label %return, !dbg !2361

if.else271:                                       ; preds = %if.end258
  %177 = load i64, i64* %y, align 8, !dbg !2362
  %178 = load i64, i64* %offset, align 8, !dbg !2362
  %add272 = add nsw i64 %177, %178, !dbg !2362
  %cmp273 = icmp sge i64 %add272, 0, !dbg !2362
  br i1 %cmp273, label %land.lhs.true275, label %if.end291, !dbg !2362

land.lhs.true275:                                 ; preds = %if.else271
  %179 = load i64, i64* %y, align 8, !dbg !2362
  %180 = load i64, i64* %offset, align 8, !dbg !2362
  %add276 = add nsw i64 %179, %180, !dbg !2362
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2362
  %rows277 = getelementptr inbounds %struct._Image, %struct._Image* %181, i32 0, i32 8, !dbg !2362
  %182 = load i64, i64* %rows277, align 8, !dbg !2362
  %cmp278 = icmp slt i64 %add276, %182, !dbg !2362
  br i1 %cmp278, label %if.then280, label %if.end291, !dbg !2365

if.then280:                                       ; preds = %land.lhs.true275
  %183 = load i64, i64* %start, align 8, !dbg !2366
  %conv281 = sitofp i64 %183 to double, !dbg !2366
  %184 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2366
  %x1282 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %184, i32 0, i32 0, !dbg !2366
  store double %conv281, double* %x1282, align 8, !dbg !2366
  %185 = load i64, i64* %y, align 8, !dbg !2366
  %conv283 = sitofp i64 %185 to double, !dbg !2366
  %186 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2366
  %y1284 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %186, i32 0, i32 1, !dbg !2366
  store double %conv283, double* %y1284, align 8, !dbg !2366
  %187 = load i64, i64* %x94, align 8, !dbg !2366
  %sub285 = sub nsw i64 %187, 1, !dbg !2366
  %conv286 = sitofp i64 %sub285 to double, !dbg !2366
  %188 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2366
  %x2287 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %188, i32 0, i32 2, !dbg !2366
  store double %conv286, double* %x2287, align 8, !dbg !2366
  %189 = load i64, i64* %offset, align 8, !dbg !2366
  %conv288 = sitofp i64 %189 to double, !dbg !2366
  %190 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2366
  %y2289 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %190, i32 0, i32 3, !dbg !2366
  store double %conv288, double* %y2289, align 8, !dbg !2366
  %191 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2366
  %incdec.ptr290 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %191, i32 1, !dbg !2366
  store %struct._SegmentInfo* %incdec.ptr290, %struct._SegmentInfo** %s, align 8, !dbg !2366
  br label %if.end291, !dbg !2366

if.end291:                                        ; preds = %if.then280, %land.lhs.true275, %if.else271
  br label %if.end292

if.end292:                                        ; preds = %if.end291
  %192 = load i64, i64* %x94, align 8, !dbg !2368
  %193 = load i64, i64* %x2, align 8, !dbg !2370
  %add293 = add nsw i64 %193, 1, !dbg !2371
  %cmp294 = icmp sgt i64 %192, %add293, !dbg !2372
  br i1 %cmp294, label %if.then296, label %if.end335, !dbg !2373

if.then296:                                       ; preds = %if.end292
  %194 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2374
  %195 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2374
  %add.ptr297 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %195, i64 32768, !dbg !2374
  %cmp298 = icmp uge %struct._SegmentInfo* %194, %add.ptr297, !dbg !2374
  br i1 %cmp298, label %if.then300, label %if.else309, !dbg !2377

if.then300:                                       ; preds = %if.then296
  %196 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2378
  %cmp301 = icmp ne %struct._Image* %196, null, !dbg !2378
  br i1 %cmp301, label %if.then303, label %if.end308, !dbg !2381

if.then303:                                       ; preds = %if.then300
  %197 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2378
  %exception304 = getelementptr inbounds %struct._Image, %struct._Image* %197, i32 0, i32 58, !dbg !2378
  %198 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2378
  %filename305 = getelementptr inbounds %struct._Image, %struct._Image* %198, i32 0, i32 53, !dbg !2378
  %arraydecay306 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename305, i64 0, i64 0, !dbg !2378
  %call307 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception304, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1351, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay306), !dbg !2378
  br label %if.end308, !dbg !2378

if.end308:                                        ; preds = %if.then303, %if.then300
  store i32 0, i32* %retval, align 4, !dbg !2381
  br label %return, !dbg !2381

if.else309:                                       ; preds = %if.then296
  %199 = load i64, i64* %y, align 8, !dbg !2382
  %200 = load i64, i64* %offset, align 8, !dbg !2382
  %sub310 = sub nsw i64 0, %200, !dbg !2382
  %add311 = add nsw i64 %199, %sub310, !dbg !2382
  %cmp312 = icmp sge i64 %add311, 0, !dbg !2382
  br i1 %cmp312, label %land.lhs.true314, label %if.end333, !dbg !2382

land.lhs.true314:                                 ; preds = %if.else309
  %201 = load i64, i64* %y, align 8, !dbg !2382
  %202 = load i64, i64* %offset, align 8, !dbg !2382
  %sub315 = sub nsw i64 0, %202, !dbg !2382
  %add316 = add nsw i64 %201, %sub315, !dbg !2382
  %203 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2382
  %rows317 = getelementptr inbounds %struct._Image, %struct._Image* %203, i32 0, i32 8, !dbg !2382
  %204 = load i64, i64* %rows317, align 8, !dbg !2382
  %cmp318 = icmp slt i64 %add316, %204, !dbg !2382
  br i1 %cmp318, label %if.then320, label %if.end333, !dbg !2385

if.then320:                                       ; preds = %land.lhs.true314
  %205 = load i64, i64* %x2, align 8, !dbg !2386
  %add321 = add nsw i64 %205, 1, !dbg !2386
  %conv322 = sitofp i64 %add321 to double, !dbg !2386
  %206 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2386
  %x1323 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %206, i32 0, i32 0, !dbg !2386
  store double %conv322, double* %x1323, align 8, !dbg !2386
  %207 = load i64, i64* %y, align 8, !dbg !2386
  %conv324 = sitofp i64 %207 to double, !dbg !2386
  %208 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2386
  %y1325 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %208, i32 0, i32 1, !dbg !2386
  store double %conv324, double* %y1325, align 8, !dbg !2386
  %209 = load i64, i64* %x94, align 8, !dbg !2386
  %sub326 = sub nsw i64 %209, 1, !dbg !2386
  %conv327 = sitofp i64 %sub326 to double, !dbg !2386
  %210 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2386
  %x2328 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %210, i32 0, i32 2, !dbg !2386
  store double %conv327, double* %x2328, align 8, !dbg !2386
  %211 = load i64, i64* %offset, align 8, !dbg !2386
  %sub329 = sub nsw i64 0, %211, !dbg !2386
  %conv330 = sitofp i64 %sub329 to double, !dbg !2386
  %212 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2386
  %y2331 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %212, i32 0, i32 3, !dbg !2386
  store double %conv330, double* %y2331, align 8, !dbg !2386
  %213 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !2386
  %incdec.ptr332 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %213, i32 1, !dbg !2386
  store %struct._SegmentInfo* %incdec.ptr332, %struct._SegmentInfo** %s, align 8, !dbg !2386
  br label %if.end333, !dbg !2386

if.end333:                                        ; preds = %if.then320, %land.lhs.true314, %if.else309
  br label %if.end334

if.end334:                                        ; preds = %if.end333
  br label %if.end335, !dbg !2377

if.end335:                                        ; preds = %if.end334, %if.end292
  br label %if.end336, !dbg !2388

if.end336:                                        ; preds = %if.end335, %do.body
  store i32 0, i32* %skip, align 4, !dbg !2389
  %214 = load i64, i64* %x94, align 8, !dbg !2390
  %inc337 = add nsw i64 %214, 1, !dbg !2390
  store i64 %inc337, i64* %x94, align 8, !dbg !2390
  %215 = load i64, i64* %x94, align 8, !dbg !2391
  %216 = load i64, i64* %x2, align 8, !dbg !2393
  %cmp338 = icmp sle i64 %215, %216, !dbg !2394
  br i1 %cmp338, label %if.then340, label %if.end386, !dbg !2395

if.then340:                                       ; preds = %if.end336
  %217 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2396
  %218 = load i64, i64* %x94, align 8, !dbg !2398
  %219 = load i64, i64* %y, align 8, !dbg !2399
  %220 = load i64, i64* %x2, align 8, !dbg !2400
  %221 = load i64, i64* %x94, align 8, !dbg !2401
  %sub341 = sub nsw i64 %220, %221, !dbg !2402
  %add342 = add nsw i64 %sub341, 1, !dbg !2403
  %222 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2404
  %exception343 = getelementptr inbounds %struct._Image, %struct._Image* %222, i32 0, i32 58, !dbg !2405
  %call344 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %217, i64 %218, i64 %219, i64 %add342, i64 1, %struct._ExceptionInfo* %exception343), !dbg !2406
  store %struct._PixelPacket* %call344, %struct._PixelPacket** %p, align 8, !dbg !2407
  %223 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2408
  %224 = load i64, i64* %x94, align 8, !dbg !2409
  %225 = load i64, i64* %y, align 8, !dbg !2410
  %226 = load i64, i64* %x2, align 8, !dbg !2411
  %227 = load i64, i64* %x94, align 8, !dbg !2412
  %sub345 = sub nsw i64 %226, %227, !dbg !2413
  %add346 = add nsw i64 %sub345, 1, !dbg !2414
  %228 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2415
  %exception347 = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 58, !dbg !2416
  %call348 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %223, i64 %224, i64 %225, i64 %add346, i64 1, %struct._ExceptionInfo* %exception347), !dbg !2417
  store %struct._PixelPacket* %call348, %struct._PixelPacket** %q, align 8, !dbg !2418
  %229 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2419
  %cmp349 = icmp eq %struct._PixelPacket* %229, null, !dbg !2421
  br i1 %cmp349, label %if.then354, label %lor.lhs.false351, !dbg !2422

lor.lhs.false351:                                 ; preds = %if.then340
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2423
  %cmp352 = icmp eq %struct._PixelPacket* %230, null, !dbg !2424
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !2425

if.then354:                                       ; preds = %lor.lhs.false351, %if.then340
  br label %do.end, !dbg !2426

if.end355:                                        ; preds = %lor.lhs.false351
  br label %for.cond356, !dbg !2427

for.cond356:                                      ; preds = %for.inc383, %if.end355
  %231 = load i64, i64* %x94, align 8, !dbg !2428
  %232 = load i64, i64* %x2, align 8, !dbg !2431
  %cmp357 = icmp sle i64 %231, %232, !dbg !2432
  br i1 %cmp357, label %for.body359, label %for.end385, !dbg !2433

for.body359:                                      ; preds = %for.cond356
  %233 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2434
  %opacity360 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %233, i32 0, i32 3, !dbg !2437
  %234 = load i16, i16* %opacity360, align 2, !dbg !2437
  %conv361 = zext i16 %234 to i32, !dbg !2434
  %cmp362 = icmp eq i32 %conv361, 65535, !dbg !2438
  br i1 %cmp362, label %if.then364, label %if.end365, !dbg !2439

if.then364:                                       ; preds = %for.body359
  br label %for.end385, !dbg !2440

if.end365:                                        ; preds = %for.body359
  %235 = load i32, i32* %method.addr, align 4, !dbg !2441
  %cmp366 = icmp eq i32 %235, 3, !dbg !2443
  br i1 %cmp366, label %if.then368, label %if.else374, !dbg !2444

if.then368:                                       ; preds = %if.end365
  %236 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2445
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2448
  %call369 = call i32 @IsColorSimilar(%struct._Image* %236, %struct._PixelPacket* %237, %struct._PixelPacket* %target), !dbg !2449
  %cmp370 = icmp ne i32 %call369, 0, !dbg !2450
  br i1 %cmp370, label %if.then372, label %if.end373, !dbg !2451

if.then372:                                       ; preds = %if.then368
  br label %for.end385, !dbg !2452

if.end373:                                        ; preds = %if.then368
  br label %if.end380, !dbg !2453

if.else374:                                       ; preds = %if.end365
  %238 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2454
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2456
  %call375 = call i32 @IsColorSimilar(%struct._Image* %238, %struct._PixelPacket* %239, %struct._PixelPacket* %target), !dbg !2457
  %cmp376 = icmp eq i32 %call375, 0, !dbg !2458
  br i1 %cmp376, label %if.then378, label %if.end379, !dbg !2459

if.then378:                                       ; preds = %if.else374
  br label %for.end385, !dbg !2460

if.end379:                                        ; preds = %if.else374
  br label %if.end380

if.end380:                                        ; preds = %if.end379, %if.end373
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2461
  %incdec.ptr381 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 1, !dbg !2461
  store %struct._PixelPacket* %incdec.ptr381, %struct._PixelPacket** %p, align 8, !dbg !2461
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2462
  %incdec.ptr382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 1, !dbg !2462
  store %struct._PixelPacket* %incdec.ptr382, %struct._PixelPacket** %q, align 8, !dbg !2462
  br label %for.inc383, !dbg !2463

for.inc383:                                       ; preds = %if.end380
  %242 = load i64, i64* %x94, align 8, !dbg !2464
  %inc384 = add nsw i64 %242, 1, !dbg !2464
  store i64 %inc384, i64* %x94, align 8, !dbg !2464
  br label %for.cond356, !dbg !2465, !llvm.loop !2466

for.end385:                                       ; preds = %if.then378, %if.then372, %if.then364, %for.cond356
  br label %if.end386, !dbg !2468

if.end386:                                        ; preds = %for.end385, %if.end336
  %243 = load i64, i64* %x94, align 8, !dbg !2469
  store i64 %243, i64* %start, align 8, !dbg !2470
  br label %do.cond, !dbg !2471

do.cond:                                          ; preds = %if.end386
  %244 = load i64, i64* %x94, align 8, !dbg !2472
  %245 = load i64, i64* %x2, align 8, !dbg !2473
  %cmp387 = icmp sle i64 %244, %245, !dbg !2474
  br i1 %cmp387, label %do.body, label %do.end, !dbg !2471, !llvm.loop !2475

do.end:                                           ; preds = %do.cond, %if.then354, %if.then256, %if.then219
  br label %while.cond, !dbg !2108, !llvm.loop !2477

while.end:                                        ; preds = %if.then149, %if.then116, %while.cond
  store i64 0, i64* %y, align 8, !dbg !2479
  br label %for.cond389, !dbg !2481

for.cond389:                                      ; preds = %for.inc437, %while.end
  %246 = load i64, i64* %y, align 8, !dbg !2482
  %247 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2484
  %rows390 = getelementptr inbounds %struct._Image, %struct._Image* %247, i32 0, i32 8, !dbg !2485
  %248 = load i64, i64* %rows390, align 8, !dbg !2485
  %cmp391 = icmp slt i64 %246, %248, !dbg !2486
  br i1 %cmp391, label %for.body393, label %for.end439, !dbg !2487

for.body393:                                      ; preds = %for.cond389
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p394, metadata !2488, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata i64* %x395, metadata !2491, metadata !DIExpression()), !dbg !2492
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q396, metadata !2493, metadata !DIExpression()), !dbg !2494
  %249 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2495
  %250 = load i64, i64* %y, align 8, !dbg !2496
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2497
  %columns397 = getelementptr inbounds %struct._Image, %struct._Image* %251, i32 0, i32 7, !dbg !2498
  %252 = load i64, i64* %columns397, align 8, !dbg !2498
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2499
  %exception398 = getelementptr inbounds %struct._Image, %struct._Image* %253, i32 0, i32 58, !dbg !2500
  %call399 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %249, i64 0, i64 %250, i64 %252, i64 1, %struct._ExceptionInfo* %exception398), !dbg !2501
  store %struct._PixelPacket* %call399, %struct._PixelPacket** %p394, align 8, !dbg !2502
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2503
  %255 = load i64, i64* %y, align 8, !dbg !2504
  %256 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2505
  %columns400 = getelementptr inbounds %struct._Image, %struct._Image* %256, i32 0, i32 7, !dbg !2506
  %257 = load i64, i64* %columns400, align 8, !dbg !2506
  %258 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2507
  %exception401 = getelementptr inbounds %struct._Image, %struct._Image* %258, i32 0, i32 58, !dbg !2508
  %call402 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %254, i64 0, i64 %255, i64 %257, i64 1, %struct._ExceptionInfo* %exception401), !dbg !2509
  store %struct._PixelPacket* %call402, %struct._PixelPacket** %q396, align 8, !dbg !2510
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %p394, align 8, !dbg !2511
  %cmp403 = icmp eq %struct._PixelPacket* %259, null, !dbg !2513
  br i1 %cmp403, label %if.then408, label %lor.lhs.false405, !dbg !2514

lor.lhs.false405:                                 ; preds = %for.body393
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %q396, align 8, !dbg !2515
  %cmp406 = icmp eq %struct._PixelPacket* %260, null, !dbg !2516
  br i1 %cmp406, label %if.then408, label %if.end409, !dbg !2517

if.then408:                                       ; preds = %lor.lhs.false405, %for.body393
  br label %for.end439, !dbg !2518

if.end409:                                        ; preds = %lor.lhs.false405
  store i64 0, i64* %x395, align 8, !dbg !2519
  br label %for.cond410, !dbg !2521

for.cond410:                                      ; preds = %for.inc428, %if.end409
  %261 = load i64, i64* %x395, align 8, !dbg !2522
  %262 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2524
  %columns411 = getelementptr inbounds %struct._Image, %struct._Image* %262, i32 0, i32 7, !dbg !2525
  %263 = load i64, i64* %columns411, align 8, !dbg !2525
  %cmp412 = icmp slt i64 %261, %263, !dbg !2526
  br i1 %cmp412, label %for.body414, label %for.end430, !dbg !2527

for.body414:                                      ; preds = %for.cond410
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %p394, align 8, !dbg !2528
  %opacity415 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !2528
  %265 = load i16, i16* %opacity415, align 2, !dbg !2528
  %conv416 = zext i16 %265 to i32, !dbg !2528
  %cmp417 = icmp ne i32 %conv416, 0, !dbg !2531
  br i1 %cmp417, label %if.then419, label %if.end425, !dbg !2532

if.then419:                                       ; preds = %for.body414
  %266 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2533
  %267 = load i64, i64* %x395, align 8, !dbg !2535
  %268 = load i64, i64* %y, align 8, !dbg !2536
  %call420 = call i32 @GetFillColor(%struct._DrawInfo* %266, i64 %267, i64 %268, %struct._PixelPacket* %fill_color), !dbg !2537
  %opacity421 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill_color, i32 0, i32 3, !dbg !2538
  %269 = load i16, i16* %opacity421, align 2, !dbg !2538
  %conv422 = uitofp i16 %269 to float, !dbg !2539
  %270 = load %struct._PixelPacket*, %struct._PixelPacket** %q396, align 8, !dbg !2540
  %271 = load %struct._PixelPacket*, %struct._PixelPacket** %q396, align 8, !dbg !2541
  %opacity423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %271, i32 0, i32 3, !dbg !2542
  %272 = load i16, i16* %opacity423, align 2, !dbg !2542
  %conv424 = uitofp i16 %272 to float, !dbg !2543
  %273 = load %struct._PixelPacket*, %struct._PixelPacket** %q396, align 8, !dbg !2544
  call void @MagickCompositeOver(%struct._PixelPacket* %fill_color, float %conv422, %struct._PixelPacket* %270, float %conv424, %struct._PixelPacket* %273), !dbg !2545
  br label %if.end425, !dbg !2546

if.end425:                                        ; preds = %if.then419, %for.body414
  %274 = load %struct._PixelPacket*, %struct._PixelPacket** %p394, align 8, !dbg !2547
  %incdec.ptr426 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %274, i32 1, !dbg !2547
  store %struct._PixelPacket* %incdec.ptr426, %struct._PixelPacket** %p394, align 8, !dbg !2547
  %275 = load %struct._PixelPacket*, %struct._PixelPacket** %q396, align 8, !dbg !2548
  %incdec.ptr427 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %275, i32 1, !dbg !2548
  store %struct._PixelPacket* %incdec.ptr427, %struct._PixelPacket** %q396, align 8, !dbg !2548
  br label %for.inc428, !dbg !2549

for.inc428:                                       ; preds = %if.end425
  %276 = load i64, i64* %x395, align 8, !dbg !2550
  %inc429 = add nsw i64 %276, 1, !dbg !2550
  store i64 %inc429, i64* %x395, align 8, !dbg !2550
  br label %for.cond410, !dbg !2551, !llvm.loop !2552

for.end430:                                       ; preds = %for.cond410
  %277 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2554
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2556
  %exception431 = getelementptr inbounds %struct._Image, %struct._Image* %278, i32 0, i32 58, !dbg !2557
  %call432 = call i32 @SyncAuthenticPixels(%struct._Image* %277, %struct._ExceptionInfo* %exception431), !dbg !2558
  %cmp433 = icmp eq i32 %call432, 0, !dbg !2559
  br i1 %cmp433, label %if.then435, label %if.end436, !dbg !2560

if.then435:                                       ; preds = %for.end430
  br label %for.end439, !dbg !2561

if.end436:                                        ; preds = %for.end430
  br label %for.inc437, !dbg !2562

for.inc437:                                       ; preds = %if.end436
  %279 = load i64, i64* %y, align 8, !dbg !2563
  %inc438 = add nsw i64 %279, 1, !dbg !2563
  store i64 %inc438, i64* %y, align 8, !dbg !2563
  br label %for.cond389, !dbg !2564, !llvm.loop !2565

for.end439:                                       ; preds = %if.then435, %if.then408, %for.cond389
  %280 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2567
  %281 = bitcast %struct._SegmentInfo* %280 to i8*, !dbg !2567
  %call440 = call i8* @RelinquishMagickMemory(i8* %281), !dbg !2568
  %282 = bitcast i8* %call440 to %struct._SegmentInfo*, !dbg !2569
  store %struct._SegmentInfo* %282, %struct._SegmentInfo** %segment_stack, align 8, !dbg !2570
  %283 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !2571
  %call441 = call %struct._Image* @DestroyImage(%struct._Image* %283), !dbg !2572
  store %struct._Image* %call441, %struct._Image** %floodplane_image, align 8, !dbg !2573
  %284 = load i64, i64* %y, align 8, !dbg !2574
  %285 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2575
  %rows442 = getelementptr inbounds %struct._Image, %struct._Image* %285, i32 0, i32 8, !dbg !2576
  %286 = load i64, i64* %rows442, align 8, !dbg !2576
  %cmp443 = icmp eq i64 %284, %286, !dbg !2577
  %287 = zext i1 %cmp443 to i64, !dbg !2574
  %cond445 = select i1 %cmp443, i32 1, i32 0, !dbg !2574
  store i32 %cond445, i32* %retval, align 4, !dbg !2578
  br label %return, !dbg !2578

return:                                           ; preds = %for.end439, %if.end308, %if.end270, %if.end171, %if.end68, %if.end45, %if.end35, %if.then22, %if.then12, %if.then8, %if.then3
  %288 = load i32, i32* %retval, align 4, !dbg !2579
  ret i32 %288, !dbg !2579
}

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #2

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

declare dso_local %struct._PixelPacket* @GetAuthenticPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i32 @IsColorSimilar(%struct._Image*, %struct._PixelPacket*, %struct._PixelPacket*) #2

declare dso_local i32 @SyncAuthenticPixels(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetFillColor(%struct._DrawInfo* %draw_info, i64 %x, i64 %y, %struct._PixelPacket* %pixel) #0 !dbg !2580 {
entry:
  %retval = alloca i32, align 4
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %pattern = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !2584, metadata !DIExpression()), !dbg !2585
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !2586, metadata !DIExpression()), !dbg !2587
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !2588, metadata !DIExpression()), !dbg !2589
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !2590, metadata !DIExpression()), !dbg !2591
  call void @llvm.dbg.declare(metadata %struct._Image** %pattern, metadata !2592, metadata !DIExpression()), !dbg !2593
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2594, metadata !DIExpression()), !dbg !2595
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2596
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %0, i32 0, i32 9, !dbg !2597
  %1 = load %struct._Image*, %struct._Image** %fill_pattern, align 8, !dbg !2597
  store %struct._Image* %1, %struct._Image** %pattern, align 8, !dbg !2598
  %2 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2599
  %cmp = icmp eq %struct._Image* %2, null, !dbg !2601
  br i1 %cmp, label %if.then, label %if.end, !dbg !2602

if.then:                                          ; preds = %entry
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2603
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2605
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 5, !dbg !2606
  %5 = bitcast %struct._PixelPacket* %3 to i8*, !dbg !2606
  %6 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !2606
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 4 %6, i64 8, i1 false), !dbg !2606
  store i32 1, i32* %retval, align 4, !dbg !2607
  br label %return, !dbg !2607

if.end:                                           ; preds = %entry
  %7 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2608
  %8 = load i64, i64* %x.addr, align 8, !dbg !2609
  %9 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2610
  %tile_offset = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 74, !dbg !2611
  %x1 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset, i32 0, i32 2, !dbg !2612
  %10 = load i64, i64* %x1, align 8, !dbg !2612
  %add = add nsw i64 %8, %10, !dbg !2613
  %11 = load i64, i64* %y.addr, align 8, !dbg !2614
  %12 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2615
  %tile_offset2 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 74, !dbg !2616
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset2, i32 0, i32 3, !dbg !2617
  %13 = load i64, i64* %y3, align 8, !dbg !2617
  %add4 = add nsw i64 %11, %13, !dbg !2618
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2619
  %15 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2620
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !2621
  %call = call i32 @GetOneVirtualMethodPixel(%struct._Image* %7, i32 7, i64 %add, i64 %add4, %struct._PixelPacket* %14, %struct._ExceptionInfo* %exception), !dbg !2622
  store i32 %call, i32* %status, align 4, !dbg !2623
  %16 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !2624
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !2626
  %17 = load i32, i32* %matte, align 8, !dbg !2626
  %cmp5 = icmp eq i32 %17, 0, !dbg !2627
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !2628

if.then6:                                         ; preds = %if.end
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !2629
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 3, !dbg !2630
  store i16 0, i16* %opacity, align 2, !dbg !2631
  br label %if.end7, !dbg !2629

if.end7:                                          ; preds = %if.then6, %if.end
  %19 = load i32, i32* %status, align 4, !dbg !2632
  store i32 %19, i32* %retval, align 4, !dbg !2633
  br label %return, !dbg !2633

return:                                           ; preds = %if.end7, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !2634
  ret i32 %20, !dbg !2634
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickCompositeOver(%struct._PixelPacket* %p, float %alpha, %struct._PixelPacket* %q, float %beta, %struct._PixelPacket* %composite) #0 !dbg !2635 {
entry:
  %p.addr = alloca %struct._PixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._PixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._PixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !2640, metadata !DIExpression()), !dbg !2641
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !2642, metadata !DIExpression()), !dbg !2643
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !2644, metadata !DIExpression()), !dbg !2645
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !2646, metadata !DIExpression()), !dbg !2647
  store %struct._PixelPacket* %composite, %struct._PixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %composite.addr, metadata !2648, metadata !DIExpression()), !dbg !2649
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !2650, metadata !DIExpression()), !dbg !2651
  %0 = load float, float* %alpha.addr, align 4, !dbg !2652
  %cmp = fcmp oeq float %0, 6.553500e+04, !dbg !2654
  br i1 %cmp, label %if.then, label %if.end3, !dbg !2655

if.then:                                          ; preds = %entry
  %1 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2656
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2659
  %cmp1 = icmp ne %struct._PixelPacket* %1, %2, !dbg !2660
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !2661

if.then2:                                         ; preds = %if.then
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2662
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2663
  %5 = bitcast %struct._PixelPacket* %3 to i8*, !dbg !2664
  %6 = bitcast %struct._PixelPacket* %4 to i8*, !dbg !2664
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 2 %6, i64 8, i1 false), !dbg !2664
  br label %if.end, !dbg !2665

if.end:                                           ; preds = %if.then2, %if.then
  br label %return, !dbg !2666

if.end3:                                          ; preds = %entry
  %7 = load float, float* %alpha.addr, align 4, !dbg !2667
  %conv = fpext float %7 to double, !dbg !2667
  %mul = fmul double 0x3DF0002000300040, %conv, !dbg !2668
  %8 = load float, float* %beta.addr, align 4, !dbg !2669
  %conv4 = fpext float %8 to double, !dbg !2669
  %mul5 = fmul double %mul, %conv4, !dbg !2670
  %sub = fsub double 1.000000e+00, %mul5, !dbg !2671
  store double %sub, double* %gamma, align 8, !dbg !2672
  %9 = load double, double* %gamma, align 8, !dbg !2673
  %cmp6 = fcmp olt double %9, 0.000000e+00, !dbg !2675
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !2676

if.then8:                                         ; preds = %if.end3
  store double 0.000000e+00, double* %gamma, align 8, !dbg !2677
  br label %if.end9, !dbg !2678

if.end9:                                          ; preds = %if.then8, %if.end3
  %10 = load double, double* %gamma, align 8, !dbg !2679
  %sub10 = fsub double 1.000000e+00, %10, !dbg !2680
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !2681
  %add = fadd double %mul11, 5.000000e-01, !dbg !2682
  %conv12 = fptoui double %add to i16, !dbg !2683
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2684
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !2685
  store i16 %conv12, i16* %opacity, align 2, !dbg !2686
  %12 = load double, double* %gamma, align 8, !dbg !2687
  %call = call double @PerceptibleReciprocal(double %12), !dbg !2688
  store double %call, double* %gamma, align 8, !dbg !2689
  %13 = load double, double* %gamma, align 8, !dbg !2690
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2690
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 2, !dbg !2690
  %15 = load i16, i16* %red, align 2, !dbg !2690
  %conv13 = uitofp i16 %15 to float, !dbg !2690
  %16 = load float, float* %alpha.addr, align 4, !dbg !2690
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2690
  %red14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 2, !dbg !2690
  %18 = load i16, i16* %red14, align 2, !dbg !2690
  %conv15 = uitofp i16 %18 to float, !dbg !2690
  %19 = load float, float* %beta.addr, align 4, !dbg !2690
  %call16 = call float @MagickOver_(float %conv13, float %16, float %conv15, float %19), !dbg !2690
  %conv17 = fpext float %call16 to double, !dbg !2690
  %mul18 = fmul double %13, %conv17, !dbg !2690
  %add19 = fadd double %mul18, 5.000000e-01, !dbg !2690
  %conv20 = fptoui double %add19 to i16, !dbg !2690
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2690
  %red21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 2, !dbg !2690
  store i16 %conv20, i16* %red21, align 2, !dbg !2690
  %21 = load double, double* %gamma, align 8, !dbg !2691
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2691
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !2691
  %23 = load i16, i16* %green, align 2, !dbg !2691
  %conv22 = uitofp i16 %23 to float, !dbg !2691
  %24 = load float, float* %alpha.addr, align 4, !dbg !2691
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2691
  %green23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 1, !dbg !2691
  %26 = load i16, i16* %green23, align 2, !dbg !2691
  %conv24 = uitofp i16 %26 to float, !dbg !2691
  %27 = load float, float* %beta.addr, align 4, !dbg !2691
  %call25 = call float @MagickOver_(float %conv22, float %24, float %conv24, float %27), !dbg !2691
  %conv26 = fpext float %call25 to double, !dbg !2691
  %mul27 = fmul double %21, %conv26, !dbg !2691
  %add28 = fadd double %mul27, 5.000000e-01, !dbg !2691
  %conv29 = fptoui double %add28 to i16, !dbg !2691
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2691
  %green30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 0, i32 1, !dbg !2691
  store i16 %conv29, i16* %green30, align 2, !dbg !2691
  %29 = load double, double* %gamma, align 8, !dbg !2692
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !2692
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !2692
  %31 = load i16, i16* %blue, align 2, !dbg !2692
  %conv31 = uitofp i16 %31 to float, !dbg !2692
  %32 = load float, float* %alpha.addr, align 4, !dbg !2692
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !2692
  %blue32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 0, !dbg !2692
  %34 = load i16, i16* %blue32, align 2, !dbg !2692
  %conv33 = uitofp i16 %34 to float, !dbg !2692
  %35 = load float, float* %beta.addr, align 4, !dbg !2692
  %call34 = call float @MagickOver_(float %conv31, float %32, float %conv33, float %35), !dbg !2692
  %conv35 = fpext float %call34 to double, !dbg !2692
  %mul36 = fmul double %29, %conv35, !dbg !2692
  %add37 = fadd double %mul36, 5.000000e-01, !dbg !2692
  %conv38 = fptoui double %add37 to i16, !dbg !2692
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !2692
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !2692
  store i16 %conv38, i16* %blue39, align 2, !dbg !2692
  br label %return, !dbg !2693

return:                                           ; preds = %if.end9, %if.end
  ret void, !dbg !2693
}

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ConstituteComponentGenesis() #0 !dbg !2694 {
entry:
  ret i32 1, !dbg !2697
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ConstituteComponentTerminus() #0 !dbg !2698 {
entry:
  ret void, !dbg !2699
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DeleteImageAttribute(%struct._Image* %image, i8* %key) #0 !dbg !2700 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %key.addr = alloca i8*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2703, metadata !DIExpression()), !dbg !2704
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !2705, metadata !DIExpression()), !dbg !2706
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2707
  %1 = load i8*, i8** %key.addr, align 8, !dbg !2708
  %call = call i32 @DeleteImageProperty(%struct._Image* %0, i8* %1), !dbg !2709
  ret i32 %call, !dbg !2710
}

declare dso_local i32 @DeleteImageProperty(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DeleteImageList(%struct._Image* %images, i64 %offset) #0 !dbg !2711 {
entry:
  %retval = alloca i32, align 4
  %images.addr = alloca %struct._Image*, align 8
  %offset.addr = alloca i64, align 8
  %i = alloca i64, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !2714, metadata !DIExpression()), !dbg !2715
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2716, metadata !DIExpression()), !dbg !2717
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2720
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2722
  %1 = load i32, i32* %debug, align 8, !dbg !2722
  %cmp = icmp ne i32 %1, 0, !dbg !2723
  br i1 %cmp, label %if.then, label %if.end, !dbg !2724

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1529, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !2725
  br label %if.end, !dbg !2726

if.end:                                           ; preds = %if.then, %entry
  br label %while.cond, !dbg !2727

while.cond:                                       ; preds = %while.body, %if.end
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2728
  %call1 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %2), !dbg !2729
  %cmp2 = icmp ne %struct._Image* %call1, null, !dbg !2730
  br i1 %cmp2, label %while.body, label %while.end, !dbg !2727

while.body:                                       ; preds = %while.cond
  %3 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2731
  %call3 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %3), !dbg !2732
  store %struct._Image* %call3, %struct._Image** %images.addr, align 8, !dbg !2733
  br label %while.cond, !dbg !2727, !llvm.loop !2734

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %i, align 8, !dbg !2736
  br label %for.cond, !dbg !2738

for.cond:                                         ; preds = %for.inc, %while.end
  %4 = load i64, i64* %i, align 8, !dbg !2739
  %5 = load i64, i64* %offset.addr, align 8, !dbg !2741
  %cmp4 = icmp slt i64 %4, %5, !dbg !2742
  br i1 %cmp4, label %for.body, label %for.end, !dbg !2743

for.body:                                         ; preds = %for.cond
  %6 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2744
  %call5 = call %struct._Image* @GetNextImageInList(%struct._Image* %6), !dbg !2747
  %cmp6 = icmp eq %struct._Image* %call5, null, !dbg !2748
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !2749

if.then7:                                         ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !2750
  br label %return, !dbg !2750

if.end8:                                          ; preds = %for.body
  %7 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !2751
  %call9 = call %struct._Image* @GetNextImageInList(%struct._Image* %7), !dbg !2752
  store %struct._Image* %call9, %struct._Image** %images.addr, align 8, !dbg !2753
  br label %for.inc, !dbg !2754

for.inc:                                          ; preds = %if.end8
  %8 = load i64, i64* %i, align 8, !dbg !2755
  %inc = add nsw i64 %8, 1, !dbg !2755
  store i64 %inc, i64* %i, align 8, !dbg !2755
  br label %for.cond, !dbg !2756, !llvm.loop !2757

for.end:                                          ; preds = %for.cond
  call void @DeleteImageFromList(%struct._Image** %images.addr), !dbg !2759
  store i32 1, i32* %retval, align 4, !dbg !2760
  br label %return, !dbg !2760

return:                                           ; preds = %for.end, %if.then7
  %9 = load i32, i32* %retval, align 4, !dbg !2761
  ret i32 %9, !dbg !2761
}

declare dso_local %struct._Image* @GetPreviousImageInList(%struct._Image*) #2

declare dso_local %struct._Image* @GetNextImageInList(%struct._Image*) #2

declare dso_local void @DeleteImageFromList(%struct._Image**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DeleteMagickRegistry(i64 %id) #0 !dbg !2762 {
entry:
  %id.addr = alloca i64, align 8
  %key = alloca [4096 x i8], align 16
  store i64 %id, i64* %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !2765, metadata !DIExpression()), !dbg !2766
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !2767, metadata !DIExpression()), !dbg !2768
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !2769
  %0 = load i64, i64* %id.addr, align 8, !dbg !2770
  %conv = sitofp i64 %0 to double, !dbg !2771
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), double %conv), !dbg !2772
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !2773
  %call2 = call i32 @DeleteImageRegistry(i8* %arraydecay1), !dbg !2774
  ret i32 %call2, !dbg !2775
}

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

declare dso_local i32 @DeleteImageRegistry(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DestroyConstitute() #0 !dbg !2776 {
entry:
  ret void, !dbg !2777
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @DestroyMagickRegistry() #0 !dbg !2778 {
entry:
  call void @RegistryComponentTerminus(), !dbg !2779
  ret void, !dbg !2780
}

declare dso_local void @RegistryComponentTerminus() #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DescribeImage(%struct._Image* %image, %struct._IO_FILE* %file, i32 %verbose) #0 !dbg !2781 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %file.addr = alloca %struct._IO_FILE*, align 8
  %verbose.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2784, metadata !DIExpression()), !dbg !2785
  store %struct._IO_FILE* %file, %struct._IO_FILE** %file.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file.addr, metadata !2786, metadata !DIExpression()), !dbg !2787
  store i32 %verbose, i32* %verbose.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %verbose.addr, metadata !2788, metadata !DIExpression()), !dbg !2789
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2790
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** %file.addr, align 8, !dbg !2791
  %2 = load i32, i32* %verbose.addr, align 4, !dbg !2792
  %call = call i32 @IdentifyImage(%struct._Image* %0, %struct._IO_FILE* %1, i32 %2), !dbg !2793
  ret i32 %call, !dbg !2794
}

declare dso_local i32 @IdentifyImage(%struct._Image*, %struct._IO_FILE*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DestroyImageAttributes(%struct._Image* %image) #0 !dbg !2795 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2798, metadata !DIExpression()), !dbg !2799
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2800
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2802
  %1 = load i32, i32* %debug, align 8, !dbg !2802
  %cmp = icmp ne i32 %1, 0, !dbg !2803
  br i1 %cmp, label %if.then, label %if.end, !dbg !2804

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2805
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2806
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2805
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1697, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !2807
  br label %if.end, !dbg !2808

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2809
  %attributes = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 50, !dbg !2811
  %4 = load i8*, i8** %attributes, align 8, !dbg !2811
  %cmp1 = icmp ne i8* %4, null, !dbg !2812
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !2813

if.then2:                                         ; preds = %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2814
  %attributes3 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 50, !dbg !2815
  %6 = load i8*, i8** %attributes3, align 8, !dbg !2815
  %7 = bitcast i8* %6 to %struct._SplayTreeInfo*, !dbg !2816
  %call4 = call %struct._SplayTreeInfo* @DestroySplayTree(%struct._SplayTreeInfo* %7), !dbg !2817
  %8 = bitcast %struct._SplayTreeInfo* %call4 to i8*, !dbg !2818
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2819
  %attributes5 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 50, !dbg !2820
  store i8* %8, i8** %attributes5, align 8, !dbg !2821
  br label %if.end6, !dbg !2819

if.end6:                                          ; preds = %if.then2, %if.end
  ret void, !dbg !2822
}

declare dso_local %struct._SplayTreeInfo* @DestroySplayTree(%struct._SplayTreeInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DestroyImages(%struct._Image* %image) #0 !dbg !2823 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2824, metadata !DIExpression()), !dbg !2825
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2826
  %cmp = icmp eq %struct._Image* %0, null, !dbg !2828
  br i1 %cmp, label %if.then, label %if.end, !dbg !2829

if.then:                                          ; preds = %entry
  br label %return, !dbg !2830

if.end:                                           ; preds = %entry
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2831
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !2833
  %2 = load i32, i32* %debug, align 8, !dbg !2833
  %cmp1 = icmp ne i32 %2, 0, !dbg !2834
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2835

if.then2:                                         ; preds = %if.end
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1734, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)), !dbg !2836
  br label %if.end3, !dbg !2837

if.end3:                                          ; preds = %if.then2, %if.end
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2838
  %call4 = call %struct._Image* @DestroyImageList(%struct._Image* %3), !dbg !2839
  store %struct._Image* %call4, %struct._Image** %image.addr, align 8, !dbg !2840
  br label %return, !dbg !2841

return:                                           ; preds = %if.end3, %if.then
  ret void, !dbg !2841
}

declare dso_local %struct._Image* @DestroyImageList(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @DestroyMagick() #0 !dbg !2842 {
entry:
  call void @MagickCoreTerminus(), !dbg !2843
  ret void, !dbg !2844
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DispatchImage(%struct._Image* %image, i64 %x_offset, i64 %y_offset, i64 %columns, i64 %rows, i8* %map, i32 %type, i8* %pixels, %struct._ExceptionInfo* %exception) #0 !dbg !2845 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %map.addr = alloca i8*, align 8
  %type.addr = alloca i32, align 4
  %pixels.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2850, metadata !DIExpression()), !dbg !2851
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !2852, metadata !DIExpression()), !dbg !2853
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !2854, metadata !DIExpression()), !dbg !2855
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !2856, metadata !DIExpression()), !dbg !2857
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !2858, metadata !DIExpression()), !dbg !2859
  store i8* %map, i8** %map.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %map.addr, metadata !2860, metadata !DIExpression()), !dbg !2861
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2862, metadata !DIExpression()), !dbg !2863
  store i8* %pixels, i8** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pixels.addr, metadata !2864, metadata !DIExpression()), !dbg !2865
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2866, metadata !DIExpression()), !dbg !2867
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2868, metadata !DIExpression()), !dbg !2869
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2870
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2872
  %1 = load i32, i32* %debug, align 8, !dbg !2872
  %cmp = icmp ne i32 %1, 0, !dbg !2873
  br i1 %cmp, label %if.then, label %if.end, !dbg !2874

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1830, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !2875
  br label %if.end, !dbg !2876

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2877
  %3 = load i64, i64* %x_offset.addr, align 8, !dbg !2878
  %4 = load i64, i64* %y_offset.addr, align 8, !dbg !2879
  %5 = load i64, i64* %columns.addr, align 8, !dbg !2880
  %6 = load i64, i64* %rows.addr, align 8, !dbg !2881
  %7 = load i8*, i8** %map.addr, align 8, !dbg !2882
  %8 = load i32, i32* %type.addr, align 4, !dbg !2883
  %9 = load i8*, i8** %pixels.addr, align 8, !dbg !2884
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2885
  %call1 = call i32 @ExportImagePixels(%struct._Image* %2, i64 %3, i64 %4, i64 %5, i64 %6, i8* %7, i32 %8, i8* %9, %struct._ExceptionInfo* %10), !dbg !2886
  store i32 %call1, i32* %status, align 4, !dbg !2887
  %11 = load i32, i32* %status, align 4, !dbg !2888
  ret i32 %11, !dbg !2889
}

declare dso_local i32 @ExportImagePixels(%struct._Image*, i64, i64, i64, i64, i8*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ExtractSubimageFromImage(%struct._Image* %image, %struct._Image* %reference, %struct._ExceptionInfo* %exception) #0 !dbg !2890 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %reference.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %similarity_threshold = alloca double, align 8
  %offset = alloca %struct._RectangleInfo, align 8
  %y = alloca i64, align 8
  %similarity = alloca double, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2893, metadata !DIExpression()), !dbg !2894
  store %struct._Image* %reference, %struct._Image** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %reference.addr, metadata !2895, metadata !DIExpression()), !dbg !2896
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata double* %similarity_threshold, metadata !2899, metadata !DIExpression()), !dbg !2900
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %offset, metadata !2901, metadata !DIExpression()), !dbg !2902
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2903, metadata !DIExpression()), !dbg !2904
  %0 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2905
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 7, !dbg !2907
  %1 = load i64, i64* %columns, align 8, !dbg !2907
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2908
  %columns1 = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 7, !dbg !2909
  %3 = load i64, i64* %columns1, align 8, !dbg !2909
  %cmp = icmp ugt i64 %1, %3, !dbg !2910
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2911

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2912
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 8, !dbg !2913
  %5 = load i64, i64* %rows, align 8, !dbg !2913
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2914
  %rows2 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !2915
  %7 = load i64, i64* %rows2, align 8, !dbg !2915
  %cmp3 = icmp ugt i64 %5, %7, !dbg !2916
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2917

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2918
  br label %return, !dbg !2918

if.end:                                           ; preds = %lor.lhs.false
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2919
  %columns4 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !2920
  %9 = load i64, i64* %columns4, align 8, !dbg !2920
  %conv = uitofp i64 %9 to double, !dbg !2921
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2922
  %rows5 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !2923
  %11 = load i64, i64* %rows5, align 8, !dbg !2923
  %conv6 = uitofp i64 %11 to double, !dbg !2922
  %mul = fmul double %conv, %conv6, !dbg !2924
  store double %mul, double* %similarity_threshold, align 8, !dbg !2925
  %12 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2926
  call void @SetGeometry(%struct._Image* %12, %struct._RectangleInfo* %offset), !dbg !2927
  store i64 0, i64* %y, align 8, !dbg !2928
  br label %for.cond, !dbg !2930

for.cond:                                         ; preds = %for.inc24, %if.end
  %13 = load i64, i64* %y, align 8, !dbg !2931
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2933
  %rows7 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 8, !dbg !2934
  %15 = load i64, i64* %rows7, align 8, !dbg !2934
  %16 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2935
  %rows8 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 8, !dbg !2936
  %17 = load i64, i64* %rows8, align 8, !dbg !2936
  %sub = sub i64 %15, %17, !dbg !2937
  %cmp9 = icmp slt i64 %13, %sub, !dbg !2938
  br i1 %cmp9, label %for.body, label %for.end26, !dbg !2939

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %similarity, metadata !2940, metadata !DIExpression()), !dbg !2942
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2943, metadata !DIExpression()), !dbg !2944
  store i64 0, i64* %x, align 8, !dbg !2945
  br label %for.cond11, !dbg !2947

for.cond11:                                       ; preds = %for.inc, %for.body
  %18 = load i64, i64* %x, align 8, !dbg !2948
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2950
  %columns12 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !2951
  %20 = load i64, i64* %columns12, align 8, !dbg !2951
  %21 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2952
  %columns13 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 7, !dbg !2953
  %22 = load i64, i64* %columns13, align 8, !dbg !2953
  %sub14 = sub i64 %20, %22, !dbg !2954
  %cmp15 = icmp slt i64 %18, %sub14, !dbg !2955
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !2956

for.body17:                                       ; preds = %for.cond11
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2957
  %24 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2959
  %25 = load i64, i64* %x, align 8, !dbg !2960
  %26 = load i64, i64* %y, align 8, !dbg !2961
  %27 = load double, double* %similarity_threshold, align 8, !dbg !2962
  %28 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2963
  %call = call double @GetSimilarityMetric(%struct._Image* %23, %struct._Image* %24, i64 %25, i64 %26, double %27, %struct._ExceptionInfo* %28), !dbg !2964
  store double %call, double* %similarity, align 8, !dbg !2965
  %29 = load double, double* %similarity, align 8, !dbg !2966
  %30 = load double, double* %similarity_threshold, align 8, !dbg !2968
  %cmp18 = fcmp olt double %29, %30, !dbg !2969
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !2970

if.then20:                                        ; preds = %for.body17
  %31 = load double, double* %similarity, align 8, !dbg !2971
  store double %31, double* %similarity_threshold, align 8, !dbg !2973
  %32 = load i64, i64* %x, align 8, !dbg !2974
  %x21 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %offset, i32 0, i32 2, !dbg !2975
  store i64 %32, i64* %x21, align 8, !dbg !2976
  %33 = load i64, i64* %y, align 8, !dbg !2977
  %y22 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %offset, i32 0, i32 3, !dbg !2978
  store i64 %33, i64* %y22, align 8, !dbg !2979
  br label %if.end23, !dbg !2980

if.end23:                                         ; preds = %if.then20, %for.body17
  br label %for.inc, !dbg !2981

for.inc:                                          ; preds = %if.end23
  %34 = load i64, i64* %x, align 8, !dbg !2982
  %inc = add nsw i64 %34, 1, !dbg !2982
  store i64 %inc, i64* %x, align 8, !dbg !2982
  br label %for.cond11, !dbg !2983, !llvm.loop !2984

for.end:                                          ; preds = %for.cond11
  br label %for.inc24, !dbg !2986

for.inc24:                                        ; preds = %for.end
  %35 = load i64, i64* %y, align 8, !dbg !2987
  %inc25 = add nsw i64 %35, 1, !dbg !2987
  store i64 %inc25, i64* %y, align 8, !dbg !2987
  br label %for.cond, !dbg !2988, !llvm.loop !2989

for.end26:                                        ; preds = %for.cond
  %36 = load double, double* %similarity_threshold, align 8, !dbg !2991
  %37 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !2993
  %fuzz = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 31, !dbg !2994
  %38 = load double, double* %fuzz, align 8, !dbg !2994
  %mul27 = fmul double 0x3EF0001000100010, %38, !dbg !2995
  %div = fdiv double %mul27, 1.000000e+02, !dbg !2996
  %cmp28 = fcmp ogt double %36, %div, !dbg !2997
  br i1 %cmp28, label %if.then30, label %if.end31, !dbg !2998

if.then30:                                        ; preds = %for.end26
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !2999
  br label %return, !dbg !2999

if.end31:                                         ; preds = %for.end26
  %39 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3000
  %40 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3001
  %call32 = call %struct._Image* @CropImage(%struct._Image* %39, %struct._RectangleInfo* %offset, %struct._ExceptionInfo* %40), !dbg !3002
  store %struct._Image* %call32, %struct._Image** %retval, align 8, !dbg !3003
  br label %return, !dbg !3003

return:                                           ; preds = %if.end31, %if.then30, %if.then
  %41 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !3004
  ret %struct._Image* %41, !dbg !3004
}

declare dso_local void @SetGeometry(%struct._Image*, %struct._RectangleInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal double @GetSimilarityMetric(%struct._Image* %image, %struct._Image* %reference, i64 %x_offset, i64 %y_offset, double %similarity_threshold, %struct._ExceptionInfo* %exception) #0 !dbg !3005 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %reference.addr = alloca %struct._Image*, align 8
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %similarity_threshold.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %reference_view = alloca %struct._CacheView*, align 8
  %channels = alloca double, align 8
  %normalized_similarity = alloca double, align 8
  %similarity = alloca double, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %reference_indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca float, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3009, metadata !DIExpression()), !dbg !3010
  store %struct._Image* %reference, %struct._Image** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %reference.addr, metadata !3011, metadata !DIExpression()), !dbg !3012
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !3013, metadata !DIExpression()), !dbg !3014
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !3015, metadata !DIExpression()), !dbg !3016
  store double %similarity_threshold, double* %similarity_threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %similarity_threshold.addr, metadata !3017, metadata !DIExpression()), !dbg !3018
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !3021, metadata !DIExpression()), !dbg !3022
  call void @llvm.dbg.declare(metadata %struct._CacheView** %reference_view, metadata !3023, metadata !DIExpression()), !dbg !3024
  call void @llvm.dbg.declare(metadata double* %channels, metadata !3025, metadata !DIExpression()), !dbg !3026
  call void @llvm.dbg.declare(metadata double* %normalized_similarity, metadata !3027, metadata !DIExpression()), !dbg !3028
  call void @llvm.dbg.declare(metadata double* %similarity, metadata !3029, metadata !DIExpression()), !dbg !3030
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3031, metadata !DIExpression()), !dbg !3032
  store double 1.000000e+00, double* %normalized_similarity, align 8, !dbg !3033
  store double 0.000000e+00, double* %similarity, align 8, !dbg !3034
  store double 3.000000e+00, double* %channels, align 8, !dbg !3035
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3036
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 6, !dbg !3038
  %1 = load i32, i32* %matte, align 8, !dbg !3038
  %cmp = icmp ne i32 %1, 0, !dbg !3039
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3040

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3041
  %matte1 = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 6, !dbg !3042
  %3 = load i32, i32* %matte1, align 8, !dbg !3042
  %cmp2 = icmp ne i32 %3, 0, !dbg !3043
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3044

if.then:                                          ; preds = %land.lhs.true
  %4 = load double, double* %channels, align 8, !dbg !3045
  %inc = fadd double %4, 1.000000e+00, !dbg !3045
  store double %inc, double* %channels, align 8, !dbg !3045
  br label %if.end, !dbg !3046

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3047
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 1, !dbg !3049
  %6 = load i32, i32* %colorspace, align 4, !dbg !3049
  %cmp3 = icmp eq i32 %6, 12, !dbg !3050
  br i1 %cmp3, label %land.lhs.true4, label %if.end9, !dbg !3051

land.lhs.true4:                                   ; preds = %if.end
  %7 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3052
  %colorspace5 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 1, !dbg !3053
  %8 = load i32, i32* %colorspace5, align 4, !dbg !3053
  %cmp6 = icmp eq i32 %8, 12, !dbg !3054
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !3055

if.then7:                                         ; preds = %land.lhs.true4
  %9 = load double, double* %channels, align 8, !dbg !3056
  %inc8 = fadd double %9, 1.000000e+00, !dbg !3056
  store double %inc8, double* %channels, align 8, !dbg !3056
  br label %if.end9, !dbg !3057

if.end9:                                          ; preds = %if.then7, %land.lhs.true4, %if.end
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3058
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3059
  %call = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %10, %struct._ExceptionInfo* %11), !dbg !3060
  store %struct._CacheView* %call, %struct._CacheView** %image_view, align 8, !dbg !3061
  %12 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3062
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3063
  %call10 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %12, %struct._ExceptionInfo* %13), !dbg !3064
  store %struct._CacheView* %call10, %struct._CacheView** %reference_view, align 8, !dbg !3065
  store i64 0, i64* %y, align 8, !dbg !3066
  br label %for.cond, !dbg !3068

for.cond:                                         ; preds = %for.inc114, %if.end9
  %14 = load i64, i64* %y, align 8, !dbg !3069
  %15 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3071
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !3072
  %16 = load i64, i64* %rows, align 8, !dbg !3072
  %cmp11 = icmp slt i64 %14, %16, !dbg !3073
  br i1 %cmp11, label %for.body, label %for.end116, !dbg !3074

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3075, metadata !DIExpression()), !dbg !3077
  call void @llvm.dbg.declare(metadata i16** %reference_indexes, metadata !3078, metadata !DIExpression()), !dbg !3079
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3080, metadata !DIExpression()), !dbg !3081
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !3082, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3084, metadata !DIExpression()), !dbg !3085
  %17 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3086
  %18 = load i64, i64* %x_offset.addr, align 8, !dbg !3087
  %19 = load i64, i64* %y_offset.addr, align 8, !dbg !3088
  %20 = load i64, i64* %y, align 8, !dbg !3089
  %add = add nsw i64 %19, %20, !dbg !3090
  %21 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3091
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 7, !dbg !3092
  %22 = load i64, i64* %columns, align 8, !dbg !3092
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3093
  %call12 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %17, i64 %18, i64 %add, i64 %22, i64 1, %struct._ExceptionInfo* %23), !dbg !3094
  store %struct._PixelPacket* %call12, %struct._PixelPacket** %p, align 8, !dbg !3095
  %24 = load %struct._CacheView*, %struct._CacheView** %reference_view, align 8, !dbg !3096
  %25 = load i64, i64* %y, align 8, !dbg !3097
  %26 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3098
  %columns13 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !3099
  %27 = load i64, i64* %columns13, align 8, !dbg !3099
  %28 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3100
  %call14 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %24, i64 0, i64 %25, i64 %27, i64 1, %struct._ExceptionInfo* %28), !dbg !3101
  store %struct._PixelPacket* %call14, %struct._PixelPacket** %q, align 8, !dbg !3102
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3103
  %cmp15 = icmp eq %struct._PixelPacket* %29, null, !dbg !3105
  br i1 %cmp15, label %if.then17, label %lor.lhs.false, !dbg !3106

lor.lhs.false:                                    ; preds = %for.body
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3107
  %cmp16 = icmp eq %struct._PixelPacket* %30, null, !dbg !3108
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !3109

if.then17:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc114, !dbg !3110

if.end18:                                         ; preds = %lor.lhs.false
  %31 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3111
  %call19 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %31), !dbg !3112
  store i16* %call19, i16** %indexes, align 8, !dbg !3113
  %32 = load %struct._CacheView*, %struct._CacheView** %reference_view, align 8, !dbg !3114
  %call20 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %32), !dbg !3115
  store i16* %call20, i16** %reference_indexes, align 8, !dbg !3116
  store i64 0, i64* %x, align 8, !dbg !3117
  br label %for.cond21, !dbg !3119

for.cond21:                                       ; preds = %for.inc, %if.end18
  %33 = load i64, i64* %x, align 8, !dbg !3120
  %34 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3122
  %columns22 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !3123
  %35 = load i64, i64* %columns22, align 8, !dbg !3123
  %cmp23 = icmp slt i64 %33, %35, !dbg !3124
  br i1 %cmp23, label %for.body24, label %for.end, !dbg !3125

for.body24:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata float* %pixel, metadata !3126, metadata !DIExpression()), !dbg !3128
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3129
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !3129
  %37 = load i16, i16* %red, align 2, !dbg !3129
  %conv = zext i16 %37 to i32, !dbg !3129
  %conv25 = sitofp i32 %conv to double, !dbg !3129
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3130
  %red26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %38, i32 0, i32 2, !dbg !3130
  %39 = load i16, i16* %red26, align 2, !dbg !3130
  %conv27 = uitofp i16 %39 to double, !dbg !3131
  %sub = fsub double %conv25, %conv27, !dbg !3132
  %mul = fmul double 0x3EF0001000100010, %sub, !dbg !3133
  %conv28 = fptrunc double %mul to float, !dbg !3134
  store float %conv28, float* %pixel, align 4, !dbg !3135
  %40 = load float, float* %pixel, align 4, !dbg !3136
  %41 = load float, float* %pixel, align 4, !dbg !3137
  %mul29 = fmul float %40, %41, !dbg !3138
  %conv30 = fpext float %mul29 to double, !dbg !3136
  %42 = load double, double* %similarity, align 8, !dbg !3139
  %add31 = fadd double %42, %conv30, !dbg !3139
  store double %add31, double* %similarity, align 8, !dbg !3139
  %43 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3140
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %43, i32 0, i32 1, !dbg !3140
  %44 = load i16, i16* %green, align 2, !dbg !3140
  %conv32 = zext i16 %44 to i32, !dbg !3140
  %conv33 = sitofp i32 %conv32 to double, !dbg !3140
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3141
  %green34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 1, !dbg !3141
  %46 = load i16, i16* %green34, align 2, !dbg !3141
  %conv35 = uitofp i16 %46 to double, !dbg !3142
  %sub36 = fsub double %conv33, %conv35, !dbg !3143
  %mul37 = fmul double 0x3EF0001000100010, %sub36, !dbg !3144
  %conv38 = fptrunc double %mul37 to float, !dbg !3145
  store float %conv38, float* %pixel, align 4, !dbg !3146
  %47 = load float, float* %pixel, align 4, !dbg !3147
  %48 = load float, float* %pixel, align 4, !dbg !3148
  %mul39 = fmul float %47, %48, !dbg !3149
  %conv40 = fpext float %mul39 to double, !dbg !3147
  %49 = load double, double* %similarity, align 8, !dbg !3150
  %add41 = fadd double %49, %conv40, !dbg !3150
  store double %add41, double* %similarity, align 8, !dbg !3150
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3151
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 0, !dbg !3151
  %51 = load i16, i16* %blue, align 2, !dbg !3151
  %conv42 = zext i16 %51 to i32, !dbg !3151
  %conv43 = sitofp i32 %conv42 to double, !dbg !3151
  %52 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3152
  %blue44 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %52, i32 0, i32 0, !dbg !3152
  %53 = load i16, i16* %blue44, align 2, !dbg !3152
  %conv45 = uitofp i16 %53 to double, !dbg !3153
  %sub46 = fsub double %conv43, %conv45, !dbg !3154
  %mul47 = fmul double 0x3EF0001000100010, %sub46, !dbg !3155
  %conv48 = fptrunc double %mul47 to float, !dbg !3156
  store float %conv48, float* %pixel, align 4, !dbg !3157
  %54 = load float, float* %pixel, align 4, !dbg !3158
  %55 = load float, float* %pixel, align 4, !dbg !3159
  %mul49 = fmul float %54, %55, !dbg !3160
  %conv50 = fpext float %mul49 to double, !dbg !3158
  %56 = load double, double* %similarity, align 8, !dbg !3161
  %add51 = fadd double %56, %conv50, !dbg !3161
  store double %add51, double* %similarity, align 8, !dbg !3161
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3162
  %matte52 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 6, !dbg !3164
  %58 = load i32, i32* %matte52, align 8, !dbg !3164
  %cmp53 = icmp ne i32 %58, 0, !dbg !3165
  br i1 %cmp53, label %land.lhs.true55, label %if.end70, !dbg !3166

land.lhs.true55:                                  ; preds = %for.body24
  %59 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3167
  %matte56 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 6, !dbg !3168
  %60 = load i32, i32* %matte56, align 8, !dbg !3168
  %cmp57 = icmp ne i32 %60, 0, !dbg !3169
  br i1 %cmp57, label %if.then59, label %if.end70, !dbg !3170

if.then59:                                        ; preds = %land.lhs.true55
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3171
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 3, !dbg !3171
  %62 = load i16, i16* %opacity, align 2, !dbg !3171
  %conv60 = zext i16 %62 to i32, !dbg !3171
  %conv61 = sitofp i32 %conv60 to double, !dbg !3171
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3173
  %opacity62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 3, !dbg !3173
  %64 = load i16, i16* %opacity62, align 2, !dbg !3173
  %conv63 = uitofp i16 %64 to double, !dbg !3174
  %sub64 = fsub double %conv61, %conv63, !dbg !3175
  %mul65 = fmul double 0x3EF0001000100010, %sub64, !dbg !3176
  %conv66 = fptrunc double %mul65 to float, !dbg !3177
  store float %conv66, float* %pixel, align 4, !dbg !3178
  %65 = load float, float* %pixel, align 4, !dbg !3179
  %66 = load float, float* %pixel, align 4, !dbg !3180
  %mul67 = fmul float %65, %66, !dbg !3181
  %conv68 = fpext float %mul67 to double, !dbg !3179
  %67 = load double, double* %similarity, align 8, !dbg !3182
  %add69 = fadd double %67, %conv68, !dbg !3182
  store double %add69, double* %similarity, align 8, !dbg !3182
  br label %if.end70, !dbg !3183

if.end70:                                         ; preds = %if.then59, %land.lhs.true55, %for.body24
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3184
  %colorspace71 = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 1, !dbg !3186
  %69 = load i32, i32* %colorspace71, align 4, !dbg !3186
  %cmp72 = icmp eq i32 %69, 12, !dbg !3187
  br i1 %cmp72, label %land.lhs.true74, label %if.end100, !dbg !3188

land.lhs.true74:                                  ; preds = %if.end70
  %70 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3189
  %colorspace75 = getelementptr inbounds %struct._Image, %struct._Image* %70, i32 0, i32 1, !dbg !3190
  %71 = load i32, i32* %colorspace75, align 4, !dbg !3190
  %cmp76 = icmp eq i32 %71, 12, !dbg !3191
  br i1 %cmp76, label %if.then78, label %if.end100, !dbg !3192

if.then78:                                        ; preds = %land.lhs.true74
  %72 = load i16*, i16** %indexes, align 8, !dbg !3193
  %73 = load i64, i64* %x, align 8, !dbg !3193
  %add.ptr = getelementptr inbounds i16, i16* %72, i64 %73, !dbg !3193
  %cmp79 = icmp eq i16* %add.ptr, null, !dbg !3193
  br i1 %cmp79, label %cond.true, label %cond.false, !dbg !3193

cond.true:                                        ; preds = %if.then78
  br label %cond.end, !dbg !3193

cond.false:                                       ; preds = %if.then78
  %74 = load i16*, i16** %indexes, align 8, !dbg !3193
  %75 = load i64, i64* %x, align 8, !dbg !3193
  %add.ptr81 = getelementptr inbounds i16, i16* %74, i64 %75, !dbg !3193
  %76 = load i16, i16* %add.ptr81, align 2, !dbg !3193
  %conv82 = zext i16 %76 to i32, !dbg !3193
  br label %cond.end, !dbg !3193

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv82, %cond.false ], !dbg !3193
  %conv83 = sitofp i32 %cond to double, !dbg !3193
  %77 = load i16*, i16** %reference_indexes, align 8, !dbg !3195
  %78 = load i64, i64* %x, align 8, !dbg !3195
  %add.ptr84 = getelementptr inbounds i16, i16* %77, i64 %78, !dbg !3195
  %cmp85 = icmp eq i16* %add.ptr84, null, !dbg !3195
  br i1 %cmp85, label %cond.true87, label %cond.false88, !dbg !3195

cond.true87:                                      ; preds = %cond.end
  br label %cond.end91, !dbg !3195

cond.false88:                                     ; preds = %cond.end
  %79 = load i16*, i16** %reference_indexes, align 8, !dbg !3195
  %80 = load i64, i64* %x, align 8, !dbg !3195
  %add.ptr89 = getelementptr inbounds i16, i16* %79, i64 %80, !dbg !3195
  %81 = load i16, i16* %add.ptr89, align 2, !dbg !3195
  %conv90 = zext i16 %81 to i32, !dbg !3195
  br label %cond.end91, !dbg !3195

cond.end91:                                       ; preds = %cond.false88, %cond.true87
  %cond92 = phi i32 [ 0, %cond.true87 ], [ %conv90, %cond.false88 ], !dbg !3195
  %conv93 = sitofp i32 %cond92 to double, !dbg !3196
  %sub94 = fsub double %conv83, %conv93, !dbg !3197
  %mul95 = fmul double 0x3EF0001000100010, %sub94, !dbg !3198
  %conv96 = fptrunc double %mul95 to float, !dbg !3199
  store float %conv96, float* %pixel, align 4, !dbg !3200
  %82 = load float, float* %pixel, align 4, !dbg !3201
  %83 = load float, float* %pixel, align 4, !dbg !3202
  %mul97 = fmul float %82, %83, !dbg !3203
  %conv98 = fpext float %mul97 to double, !dbg !3201
  %84 = load double, double* %similarity, align 8, !dbg !3204
  %add99 = fadd double %84, %conv98, !dbg !3204
  store double %add99, double* %similarity, align 8, !dbg !3204
  br label %if.end100, !dbg !3205

if.end100:                                        ; preds = %cond.end91, %land.lhs.true74, %if.end70
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3206
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i32 1, !dbg !3206
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !3206
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3207
  %incdec.ptr101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 1, !dbg !3207
  store %struct._PixelPacket* %incdec.ptr101, %struct._PixelPacket** %q, align 8, !dbg !3207
  br label %for.inc, !dbg !3208

for.inc:                                          ; preds = %if.end100
  %87 = load i64, i64* %x, align 8, !dbg !3209
  %inc102 = add nsw i64 %87, 1, !dbg !3209
  store i64 %inc102, i64* %x, align 8, !dbg !3209
  br label %for.cond21, !dbg !3210, !llvm.loop !3211

for.end:                                          ; preds = %for.cond21
  %88 = load double, double* %similarity, align 8, !dbg !3213
  %call103 = call double @sqrt(double %88) #8, !dbg !3214
  %89 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3215
  %columns104 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 7, !dbg !3216
  %90 = load i64, i64* %columns104, align 8, !dbg !3216
  %conv105 = uitofp i64 %90 to double, !dbg !3215
  %div = fdiv double %call103, %conv105, !dbg !3217
  %91 = load %struct._Image*, %struct._Image** %reference.addr, align 8, !dbg !3218
  %rows106 = getelementptr inbounds %struct._Image, %struct._Image* %91, i32 0, i32 8, !dbg !3219
  %92 = load i64, i64* %rows106, align 8, !dbg !3219
  %conv107 = uitofp i64 %92 to double, !dbg !3218
  %div108 = fdiv double %div, %conv107, !dbg !3220
  %93 = load double, double* %channels, align 8, !dbg !3221
  %div109 = fdiv double %div108, %93, !dbg !3222
  store double %div109, double* %normalized_similarity, align 8, !dbg !3223
  %94 = load double, double* %normalized_similarity, align 8, !dbg !3224
  %95 = load double, double* %similarity_threshold.addr, align 8, !dbg !3226
  %cmp110 = fcmp ogt double %94, %95, !dbg !3227
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !3228

if.then112:                                       ; preds = %for.end
  br label %for.end116, !dbg !3229

if.end113:                                        ; preds = %for.end
  br label %for.inc114, !dbg !3230

for.inc114:                                       ; preds = %if.end113, %if.then17
  %96 = load i64, i64* %y, align 8, !dbg !3231
  %inc115 = add nsw i64 %96, 1, !dbg !3231
  store i64 %inc115, i64* %y, align 8, !dbg !3231
  br label %for.cond, !dbg !3232, !llvm.loop !3233

for.end116:                                       ; preds = %if.then112, %for.cond
  %97 = load %struct._CacheView*, %struct._CacheView** %reference_view, align 8, !dbg !3235
  %call117 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %97), !dbg !3236
  store %struct._CacheView* %call117, %struct._CacheView** %reference_view, align 8, !dbg !3237
  %98 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3238
  %call118 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %98), !dbg !3239
  store %struct._CacheView* %call118, %struct._CacheView** %image_view, align 8, !dbg !3240
  %99 = load double, double* %normalized_similarity, align 8, !dbg !3241
  ret double %99, !dbg !3242
}

declare dso_local %struct._Image* @CropImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @FlattenImages(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !3243 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3246, metadata !DIExpression()), !dbg !3247
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3248, metadata !DIExpression()), !dbg !3249
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3250
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3251
  %call = call %struct._Image* @MergeImageLayers(%struct._Image* %0, i32 14, %struct._ExceptionInfo* %1), !dbg !3252
  ret %struct._Image* %call, !dbg !3253
}

declare dso_local %struct._Image* @MergeImageLayers(%struct._Image*, i32, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FormatImageAttributeList(%struct._Image* %image, i8* %key, i8* %format, %struct.__va_list_tag* %operands) #0 !dbg !3254 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %key.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %operands.addr = alloca %struct.__va_list_tag*, align 8
  %value = alloca [4096 x i8], align 16
  %n = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3264, metadata !DIExpression()), !dbg !3265
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3266, metadata !DIExpression()), !dbg !3267
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3268, metadata !DIExpression()), !dbg !3269
  store %struct.__va_list_tag* %operands, %struct.__va_list_tag** %operands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %operands.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  call void @llvm.dbg.declare(metadata [4096 x i8]* %value, metadata !3272, metadata !DIExpression()), !dbg !3273
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3274, metadata !DIExpression()), !dbg !3275
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3276
  %0 = load i8*, i8** %format.addr, align 8, !dbg !3277
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %operands.addr, align 8, !dbg !3278
  %call = call i32 @vsnprintf(i8* %arraydecay, i64 4096, i8* %0, %struct.__va_list_tag* %1) #8, !dbg !3279
  store i32 %call, i32* %n, align 4, !dbg !3280
  %2 = load i32, i32* %n, align 4, !dbg !3281
  %cmp = icmp slt i32 %2, 0, !dbg !3283
  br i1 %cmp, label %if.then, label %if.end, !dbg !3284

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 4095, !dbg !3285
  store i8 0, i8* %arrayidx, align 1, !dbg !3286
  br label %if.end, !dbg !3285

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3287
  %4 = load i8*, i8** %key.addr, align 8, !dbg !3288
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3289
  %call2 = call i32 @SetImageProperty(%struct._Image* %3, i8* %4, i8* %arraydecay1), !dbg !3290
  ret i32 %call2, !dbg !3291
}

; Function Attrs: nounwind
declare dso_local i32 @vsnprintf(i8*, i64, i8*, %struct.__va_list_tag*) #3

declare dso_local i32 @SetImageProperty(%struct._Image*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FormatImagePropertyList(%struct._Image* %image, i8* %property, i8* %format, %struct.__va_list_tag* %operands) #0 !dbg !3292 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %property.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %operands.addr = alloca %struct.__va_list_tag*, align 8
  %value = alloca [4096 x i8], align 16
  %n = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3293, metadata !DIExpression()), !dbg !3294
  store i8* %property, i8** %property.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %property.addr, metadata !3295, metadata !DIExpression()), !dbg !3296
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3297, metadata !DIExpression()), !dbg !3298
  store %struct.__va_list_tag* %operands, %struct.__va_list_tag** %operands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %operands.addr, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.declare(metadata [4096 x i8]* %value, metadata !3301, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3303, metadata !DIExpression()), !dbg !3304
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3305
  %0 = load i8*, i8** %format.addr, align 8, !dbg !3306
  %1 = load %struct.__va_list_tag*, %struct.__va_list_tag** %operands.addr, align 8, !dbg !3307
  %call = call i32 @vsnprintf(i8* %arraydecay, i64 4096, i8* %0, %struct.__va_list_tag* %1) #8, !dbg !3308
  store i32 %call, i32* %n, align 4, !dbg !3309
  %2 = load i32, i32* %n, align 4, !dbg !3310
  %cmp = icmp slt i32 %2, 0, !dbg !3312
  br i1 %cmp, label %if.then, label %if.end, !dbg !3313

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 4095, !dbg !3314
  store i8 0, i8* %arrayidx, align 1, !dbg !3315
  br label %if.end, !dbg !3314

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3316
  %4 = load i8*, i8** %property.addr, align 8, !dbg !3317
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3318
  %call2 = call i32 @SetImageProperty(%struct._Image* %3, i8* %4, i8* %arraydecay1), !dbg !3319
  ret i32 %call2, !dbg !3320
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FormatImageAttribute(%struct._Image* %image, i8* %key, i8* %format, ...) #0 !dbg !3321 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %key.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %value = alloca [4096 x i8], align 16
  %n = alloca i32, align 4
  %operands = alloca [1 x %struct.__va_list_tag], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3324, metadata !DIExpression()), !dbg !3325
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3326, metadata !DIExpression()), !dbg !3327
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3328, metadata !DIExpression()), !dbg !3329
  call void @llvm.dbg.declare(metadata [4096 x i8]* %value, metadata !3330, metadata !DIExpression()), !dbg !3331
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3332, metadata !DIExpression()), !dbg !3333
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %operands, metadata !3334, metadata !DIExpression()), !dbg !3340
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3341
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3341
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3341
  %arraydecay2 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3342
  %0 = load i8*, i8** %format.addr, align 8, !dbg !3343
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3344
  %call = call i64 @FormatLocaleStringList(i8* %arraydecay2, i64 4096, i8* %0, %struct.__va_list_tag* %arraydecay3), !dbg !3345
  %conv = trunc i64 %call to i32, !dbg !3345
  store i32 %conv, i32* %n, align 4, !dbg !3346
  %1 = load i32, i32* %n, align 4, !dbg !3347
  %arraydecay4 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3348
  %arraydecay45 = bitcast %struct.__va_list_tag* %arraydecay4 to i8*, !dbg !3348
  call void @llvm.va_end(i8* %arraydecay45), !dbg !3348
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3349
  %3 = load i8*, i8** %key.addr, align 8, !dbg !3350
  %arraydecay6 = getelementptr inbounds [4096 x i8], [4096 x i8]* %value, i64 0, i64 0, !dbg !3351
  %call7 = call i32 @SetImageProperty(%struct._Image* %2, i8* %3, i8* %arraydecay6), !dbg !3352
  ret i32 %call7, !dbg !3353
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

declare dso_local i64 @FormatLocaleStringList(i8*, i64, i8*, %struct.__va_list_tag*) #2

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @FormatMagickStringList(i8* %string, i64 %length, i8* %format, %struct.__va_list_tag* %operands) #0 !dbg !3354 {
entry:
  %string.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %operands.addr = alloca %struct.__va_list_tag*, align 8
  %n = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3357, metadata !DIExpression()), !dbg !3358
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !3359, metadata !DIExpression()), !dbg !3360
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3361, metadata !DIExpression()), !dbg !3362
  store %struct.__va_list_tag* %operands, %struct.__va_list_tag** %operands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %operands.addr, metadata !3363, metadata !DIExpression()), !dbg !3364
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3365, metadata !DIExpression()), !dbg !3366
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3367
  %1 = load i64, i64* %length.addr, align 8, !dbg !3368
  %2 = load i8*, i8** %format.addr, align 8, !dbg !3369
  %3 = load %struct.__va_list_tag*, %struct.__va_list_tag** %operands.addr, align 8, !dbg !3370
  %call = call i32 @vsnprintf(i8* %0, i64 %1, i8* %2, %struct.__va_list_tag* %3) #8, !dbg !3371
  store i32 %call, i32* %n, align 4, !dbg !3372
  %4 = load i32, i32* %n, align 4, !dbg !3373
  %cmp = icmp slt i32 %4, 0, !dbg !3375
  br i1 %cmp, label %if.then, label %if.end, !dbg !3376

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %string.addr, align 8, !dbg !3377
  %6 = load i64, i64* %length.addr, align 8, !dbg !3378
  %sub = sub i64 %6, 1, !dbg !3379
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 %sub, !dbg !3377
  store i8 0, i8* %arrayidx, align 1, !dbg !3380
  br label %if.end, !dbg !3377

if.end:                                           ; preds = %if.then, %entry
  %7 = load i32, i32* %n, align 4, !dbg !3381
  %conv = sext i32 %7 to i64, !dbg !3382
  ret i64 %conv, !dbg !3383
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @FormatMagickString(i8* %string, i64 %length, i8* %format, ...) #0 !dbg !3384 {
entry:
  %string.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %format.addr = alloca i8*, align 8
  %n = alloca i64, align 8
  %operands = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3387, metadata !DIExpression()), !dbg !3388
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !3389, metadata !DIExpression()), !dbg !3390
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3391, metadata !DIExpression()), !dbg !3392
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3393, metadata !DIExpression()), !dbg !3394
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %operands, metadata !3395, metadata !DIExpression()), !dbg !3396
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3397
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3397
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3397
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3398
  %1 = load i64, i64* %length.addr, align 8, !dbg !3399
  %2 = load i8*, i8** %format.addr, align 8, !dbg !3400
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3401
  %call = call i64 @FormatMagickStringList(i8* %0, i64 %1, i8* %2, %struct.__va_list_tag* %arraydecay2), !dbg !3402
  store i64 %call, i64* %n, align 8, !dbg !3403
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3404
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !3404
  call void @llvm.va_end(i8* %arraydecay34), !dbg !3404
  %3 = load i64, i64* %n, align 8, !dbg !3405
  ret i64 %3, !dbg !3406
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @FormatStringList(i8* %string, i8* %format, %struct.__va_list_tag* %operands) #0 !dbg !3407 {
entry:
  %string.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %operands.addr = alloca %struct.__va_list_tag*, align 8
  %n = alloca i32, align 4
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3410, metadata !DIExpression()), !dbg !3411
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3412, metadata !DIExpression()), !dbg !3413
  store %struct.__va_list_tag* %operands, %struct.__va_list_tag** %operands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.__va_list_tag** %operands.addr, metadata !3414, metadata !DIExpression()), !dbg !3415
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3416, metadata !DIExpression()), !dbg !3417
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2219, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !3418
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3419
  %1 = load i8*, i8** %format.addr, align 8, !dbg !3420
  %2 = load %struct.__va_list_tag*, %struct.__va_list_tag** %operands.addr, align 8, !dbg !3421
  %call1 = call i32 @vsnprintf(i8* %0, i64 4096, i8* %1, %struct.__va_list_tag* %2) #8, !dbg !3422
  store i32 %call1, i32* %n, align 4, !dbg !3423
  %3 = load i32, i32* %n, align 4, !dbg !3424
  %cmp = icmp slt i32 %3, 0, !dbg !3426
  br i1 %cmp, label %if.then, label %if.end, !dbg !3427

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %string.addr, align 8, !dbg !3428
  %arrayidx = getelementptr inbounds i8, i8* %4, i64 4095, !dbg !3428
  store i8 0, i8* %arrayidx, align 1, !dbg !3429
  br label %if.end, !dbg !3428

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !3430
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @FormatString(i8* %string, i8* %format, ...) #0 !dbg !3431 {
entry:
  %string.addr = alloca i8*, align 8
  %format.addr = alloca i8*, align 8
  %operands = alloca [1 x %struct.__va_list_tag], align 16
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3434, metadata !DIExpression()), !dbg !3435
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3436, metadata !DIExpression()), !dbg !3437
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %operands, metadata !3438, metadata !DIExpression()), !dbg !3439
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3440
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3440
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3440
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3441
  %1 = load i8*, i8** %format.addr, align 8, !dbg !3442
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3443
  %call = call i64 @FormatLocaleStringList(i8* %0, i64 4096, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !3444
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %operands, i64 0, i64 0, !dbg !3445
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !3445
  call void @llvm.va_end(i8* %arraydecay34), !dbg !3445
  ret void, !dbg !3446
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FuzzyColorMatch(%struct._PixelPacket* %p, %struct._PixelPacket* %q, double %fuzz) #0 !dbg !3447 {
entry:
  %retval = alloca i32, align 4
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  %fuzz.addr = alloca double, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %distance = alloca float, align 4
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3450, metadata !DIExpression()), !dbg !3451
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3452, metadata !DIExpression()), !dbg !3453
  store double %fuzz, double* %fuzz.addr, align 8
  call void @llvm.dbg.declare(metadata double* %fuzz.addr, metadata !3454, metadata !DIExpression()), !dbg !3455
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !3456, metadata !DIExpression()), !dbg !3457
  call void @llvm.dbg.declare(metadata float* %distance, metadata !3458, metadata !DIExpression()), !dbg !3459
  %0 = load double, double* %fuzz.addr, align 8, !dbg !3460
  %cmp = fcmp oeq double %0, 0.000000e+00, !dbg !3462
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3463

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3464
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %1, i32 0, i32 2, !dbg !3464
  %2 = load i16, i16* %red, align 2, !dbg !3464
  %conv = zext i16 %2 to i32, !dbg !3464
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3465
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 2, !dbg !3465
  %4 = load i16, i16* %red1, align 2, !dbg !3465
  %conv2 = zext i16 %4 to i32, !dbg !3465
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !3466
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !3467

land.lhs.true5:                                   ; preds = %land.lhs.true
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3468
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !3468
  %6 = load i16, i16* %green, align 2, !dbg !3468
  %conv6 = zext i16 %6 to i32, !dbg !3468
  %7 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3469
  %green7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %7, i32 0, i32 1, !dbg !3469
  %8 = load i16, i16* %green7, align 2, !dbg !3469
  %conv8 = zext i16 %8 to i32, !dbg !3469
  %cmp9 = icmp eq i32 %conv6, %conv8, !dbg !3470
  br i1 %cmp9, label %land.lhs.true11, label %if.end, !dbg !3471

land.lhs.true11:                                  ; preds = %land.lhs.true5
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3472
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 0, !dbg !3472
  %10 = load i16, i16* %blue, align 2, !dbg !3472
  %conv12 = zext i16 %10 to i32, !dbg !3472
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3473
  %blue13 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 0, !dbg !3473
  %12 = load i16, i16* %blue13, align 2, !dbg !3473
  %conv14 = zext i16 %12 to i32, !dbg !3473
  %cmp15 = icmp eq i32 %conv12, %conv14, !dbg !3474
  br i1 %cmp15, label %if.then, label %if.end, !dbg !3475

if.then:                                          ; preds = %land.lhs.true11
  store i32 1, i32* %retval, align 4, !dbg !3476
  br label %return, !dbg !3476

if.end:                                           ; preds = %land.lhs.true11, %land.lhs.true5, %land.lhs.true, %entry
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3477
  %red17 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %13, i32 0, i32 2, !dbg !3477
  %14 = load i16, i16* %red17, align 2, !dbg !3477
  %conv18 = zext i16 %14 to i32, !dbg !3477
  %conv19 = sitofp i32 %conv18 to float, !dbg !3477
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3478
  %red20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 2, !dbg !3478
  %16 = load i16, i16* %red20, align 2, !dbg !3478
  %conv21 = uitofp i16 %16 to float, !dbg !3479
  %sub = fsub float %conv19, %conv21, !dbg !3480
  %red22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3481
  store float %sub, float* %red22, align 8, !dbg !3482
  %red23 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3483
  %17 = load float, float* %red23, align 8, !dbg !3483
  %red24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3484
  %18 = load float, float* %red24, align 8, !dbg !3484
  %mul = fmul float %17, %18, !dbg !3485
  store float %mul, float* %distance, align 4, !dbg !3486
  %19 = load float, float* %distance, align 4, !dbg !3487
  %conv25 = fpext float %19 to double, !dbg !3487
  %20 = load double, double* %fuzz.addr, align 8, !dbg !3489
  %21 = load double, double* %fuzz.addr, align 8, !dbg !3490
  %mul26 = fmul double %20, %21, !dbg !3491
  %cmp27 = fcmp ogt double %conv25, %mul26, !dbg !3492
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !3493

if.then29:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3494
  br label %return, !dbg !3494

if.end30:                                         ; preds = %if.end
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3495
  %green31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !3495
  %23 = load i16, i16* %green31, align 2, !dbg !3495
  %conv32 = zext i16 %23 to i32, !dbg !3495
  %conv33 = sitofp i32 %conv32 to float, !dbg !3495
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3496
  %green34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 1, !dbg !3496
  %25 = load i16, i16* %green34, align 2, !dbg !3496
  %conv35 = uitofp i16 %25 to float, !dbg !3497
  %sub36 = fsub float %conv33, %conv35, !dbg !3498
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3499
  store float %sub36, float* %green37, align 4, !dbg !3500
  %green38 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3501
  %26 = load float, float* %green38, align 4, !dbg !3501
  %green39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3502
  %27 = load float, float* %green39, align 4, !dbg !3502
  %mul40 = fmul float %26, %27, !dbg !3503
  %28 = load float, float* %distance, align 4, !dbg !3504
  %add = fadd float %28, %mul40, !dbg !3504
  store float %add, float* %distance, align 4, !dbg !3504
  %29 = load float, float* %distance, align 4, !dbg !3505
  %conv41 = fpext float %29 to double, !dbg !3505
  %30 = load double, double* %fuzz.addr, align 8, !dbg !3507
  %31 = load double, double* %fuzz.addr, align 8, !dbg !3508
  %mul42 = fmul double %30, %31, !dbg !3509
  %cmp43 = fcmp ogt double %conv41, %mul42, !dbg !3510
  br i1 %cmp43, label %if.then45, label %if.end46, !dbg !3511

if.then45:                                        ; preds = %if.end30
  store i32 0, i32* %retval, align 4, !dbg !3512
  br label %return, !dbg !3512

if.end46:                                         ; preds = %if.end30
  %32 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3513
  %blue47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %32, i32 0, i32 0, !dbg !3513
  %33 = load i16, i16* %blue47, align 2, !dbg !3513
  %conv48 = zext i16 %33 to i32, !dbg !3513
  %conv49 = sitofp i32 %conv48 to float, !dbg !3513
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3514
  %blue50 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 0, i32 0, !dbg !3514
  %35 = load i16, i16* %blue50, align 2, !dbg !3514
  %conv51 = uitofp i16 %35 to float, !dbg !3515
  %sub52 = fsub float %conv49, %conv51, !dbg !3516
  %blue53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3517
  store float %sub52, float* %blue53, align 8, !dbg !3518
  %blue54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3519
  %36 = load float, float* %blue54, align 8, !dbg !3519
  %blue55 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3520
  %37 = load float, float* %blue55, align 8, !dbg !3520
  %mul56 = fmul float %36, %37, !dbg !3521
  %38 = load float, float* %distance, align 4, !dbg !3522
  %add57 = fadd float %38, %mul56, !dbg !3522
  store float %add57, float* %distance, align 4, !dbg !3522
  %39 = load float, float* %distance, align 4, !dbg !3523
  %conv58 = fpext float %39 to double, !dbg !3523
  %40 = load double, double* %fuzz.addr, align 8, !dbg !3525
  %41 = load double, double* %fuzz.addr, align 8, !dbg !3526
  %mul59 = fmul double %40, %41, !dbg !3527
  %cmp60 = fcmp ogt double %conv58, %mul59, !dbg !3528
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !3529

if.then62:                                        ; preds = %if.end46
  store i32 0, i32* %retval, align 4, !dbg !3530
  br label %return, !dbg !3530

if.end63:                                         ; preds = %if.end46
  store i32 1, i32* %retval, align 4, !dbg !3531
  br label %return, !dbg !3531

return:                                           ; preds = %if.end63, %if.then62, %if.then45, %if.then29, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !3532
  ret i32 %42, !dbg !3532
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FuzzyColorCompare(%struct._Image* %image, %struct._PixelPacket* %p, %struct._PixelPacket* %q) #0 !dbg !3533 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3536, metadata !DIExpression()), !dbg !3537
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3538, metadata !DIExpression()), !dbg !3539
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3540, metadata !DIExpression()), !dbg !3541
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2330, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !3542
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3543
  %1 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3544
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3545
  %call1 = call i32 @IsColorSimilar(%struct._Image* %0, %struct._PixelPacket* %1, %struct._PixelPacket* %2), !dbg !3546
  ret i32 %call1, !dbg !3547
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FuzzyOpacityCompare(%struct._Image* %image, %struct._PixelPacket* %p, %struct._PixelPacket* %q) #0 !dbg !3548 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %p.addr = alloca %struct._PixelPacket*, align 8
  %q.addr = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !3553, metadata !DIExpression()), !dbg !3554
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2371, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !3555
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3556
  %1 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !3557
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !3558
  %call1 = call i32 @IsOpacitySimilar(%struct._Image* %0, %struct._PixelPacket* %1, %struct._PixelPacket* %2), !dbg !3559
  ret i32 %call1, !dbg !3560
}

declare dso_local i32 @IsOpacitySimilar(%struct._Image*, %struct._PixelPacket*, %struct._PixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @GetConfigureBlob(i8* %filename, i8* %path, i64* %length, %struct._ExceptionInfo* %exception) #0 !dbg !3561 {
entry:
  %filename.addr = alloca i8*, align 8
  %path.addr = alloca i8*, align 8
  %length.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %blob = alloca i8*, align 8
  %home = alloca i8*, align 8
  %prefix = alloca [4096 x i8], align 16
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !3565, metadata !DIExpression()), !dbg !3566
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !3567, metadata !DIExpression()), !dbg !3568
  store i64* %length, i64** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %length.addr, metadata !3569, metadata !DIExpression()), !dbg !3570
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3571, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata i8** %blob, metadata !3573, metadata !DIExpression()), !dbg !3574
  %0 = load i8*, i8** %filename.addr, align 8, !dbg !3575
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2411, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %0), !dbg !3576
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2412, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !3577
  store i8* null, i8** %blob, align 8, !dbg !3578
  %1 = load i8*, i8** %path.addr, align 8, !dbg !3579
  %2 = load i8*, i8** %filename.addr, align 8, !dbg !3580
  %call2 = call i64 @CopyMagickString(i8* %1, i8* %2, i64 4096), !dbg !3581
  %3 = load i8*, i8** %blob, align 8, !dbg !3582
  %cmp = icmp eq i8* %3, null, !dbg !3584
  br i1 %cmp, label %if.then, label %if.end29, !dbg !3585

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %home, metadata !3586, metadata !DIExpression()), !dbg !3588
  %call3 = call i8* @GetEnvironmentValue(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)), !dbg !3589
  store i8* %call3, i8** %home, align 8, !dbg !3590
  %4 = load i8*, i8** %home, align 8, !dbg !3591
  %cmp4 = icmp ne i8* %4, null, !dbg !3593
  br i1 %cmp4, label %if.then5, label %if.end12, !dbg !3594

if.then5:                                         ; preds = %if.then
  %5 = load i8*, i8** %path.addr, align 8, !dbg !3595
  %6 = load i8*, i8** %home, align 8, !dbg !3597
  %7 = load i8*, i8** %filename.addr, align 8, !dbg !3598
  %call6 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %5, i64 4096, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %6, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %7), !dbg !3599
  %8 = load i8*, i8** %path.addr, align 8, !dbg !3600
  %call7 = call i32 @IsPathAccessible(i8* %8), !dbg !3602
  %cmp8 = icmp ne i32 %call7, 0, !dbg !3603
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !3604

if.then9:                                         ; preds = %if.then5
  %9 = load i8*, i8** %path.addr, align 8, !dbg !3605
  %10 = load i64*, i64** %length.addr, align 8, !dbg !3606
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3607
  %call10 = call i8* @FileToBlob(i8* %9, i64 -1, i64* %10, %struct._ExceptionInfo* %11), !dbg !3608
  store i8* %call10, i8** %blob, align 8, !dbg !3609
  br label %if.end, !dbg !3610

if.end:                                           ; preds = %if.then9, %if.then5
  %12 = load i8*, i8** %home, align 8, !dbg !3611
  %call11 = call i8* @DestroyString(i8* %12), !dbg !3612
  store i8* %call11, i8** %home, align 8, !dbg !3613
  br label %if.end12, !dbg !3614

if.end12:                                         ; preds = %if.end, %if.then
  %call13 = call i8* @GetEnvironmentValue(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0)), !dbg !3615
  store i8* %call13, i8** %home, align 8, !dbg !3616
  %13 = load i8*, i8** %home, align 8, !dbg !3617
  %cmp14 = icmp eq i8* %13, null, !dbg !3619
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !3620

if.then15:                                        ; preds = %if.end12
  %call16 = call i8* @GetEnvironmentValue(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)), !dbg !3621
  store i8* %call16, i8** %home, align 8, !dbg !3622
  br label %if.end17, !dbg !3623

if.end17:                                         ; preds = %if.then15, %if.end12
  %14 = load i8*, i8** %home, align 8, !dbg !3624
  %cmp18 = icmp ne i8* %14, null, !dbg !3626
  br i1 %cmp18, label %if.then19, label %if.end28, !dbg !3627

if.then19:                                        ; preds = %if.end17
  %15 = load i8*, i8** %path.addr, align 8, !dbg !3628
  %16 = load i8*, i8** %home, align 8, !dbg !3630
  %17 = load i8*, i8** %filename.addr, align 8, !dbg !3631
  %call20 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %15, i64 4096, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.17, i64 0, i64 0), i8* %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i8* %17), !dbg !3632
  %18 = load i8*, i8** %path.addr, align 8, !dbg !3633
  %call21 = call i32 @IsPathAccessible(i8* %18), !dbg !3635
  %cmp22 = icmp ne i32 %call21, 0, !dbg !3636
  br i1 %cmp22, label %land.lhs.true, label %if.end26, !dbg !3637

land.lhs.true:                                    ; preds = %if.then19
  %19 = load i8*, i8** %blob, align 8, !dbg !3638
  %cmp23 = icmp eq i8* %19, null, !dbg !3639
  br i1 %cmp23, label %if.then24, label %if.end26, !dbg !3640

if.then24:                                        ; preds = %land.lhs.true
  %20 = load i8*, i8** %path.addr, align 8, !dbg !3641
  %21 = load i64*, i64** %length.addr, align 8, !dbg !3642
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3643
  %call25 = call i8* @FileToBlob(i8* %20, i64 -1, i64* %21, %struct._ExceptionInfo* %22), !dbg !3644
  store i8* %call25, i8** %blob, align 8, !dbg !3645
  br label %if.end26, !dbg !3646

if.end26:                                         ; preds = %if.then24, %land.lhs.true, %if.then19
  %23 = load i8*, i8** %home, align 8, !dbg !3647
  %call27 = call i8* @DestroyString(i8* %23), !dbg !3648
  store i8* %call27, i8** %home, align 8, !dbg !3649
  br label %if.end28, !dbg !3650

if.end28:                                         ; preds = %if.end26, %if.end17
  br label %if.end29, !dbg !3651

if.end29:                                         ; preds = %if.end28, %entry
  %24 = load i8*, i8** %blob, align 8, !dbg !3652
  %cmp30 = icmp eq i8* %24, null, !dbg !3654
  br i1 %cmp30, label %land.lhs.true31, label %if.end47, !dbg !3655

land.lhs.true31:                                  ; preds = %if.end29
  %call32 = call i8* @GetClientPath(), !dbg !3656
  %25 = load i8, i8* %call32, align 1, !dbg !3657
  %conv = sext i8 %25 to i32, !dbg !3657
  %cmp33 = icmp ne i32 %conv, 0, !dbg !3658
  br i1 %cmp33, label %if.then35, label %if.end47, !dbg !3659

if.then35:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata [4096 x i8]* %prefix, metadata !3660, metadata !DIExpression()), !dbg !3662
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %prefix, i64 0, i64 0, !dbg !3663
  %call36 = call i8* @GetClientPath(), !dbg !3664
  %call37 = call i64 @CopyMagickString(i8* %arraydecay, i8* %call36, i64 4096), !dbg !3665
  %arraydecay38 = getelementptr inbounds [4096 x i8], [4096 x i8]* %prefix, i64 0, i64 0, !dbg !3666
  call void @ChopPathComponents(i8* %arraydecay38, i64 1), !dbg !3667
  %26 = load i8*, i8** %path.addr, align 8, !dbg !3668
  %arraydecay39 = getelementptr inbounds [4096 x i8], [4096 x i8]* %prefix, i64 0, i64 0, !dbg !3669
  %27 = load i8*, i8** %filename.addr, align 8, !dbg !3670
  %call40 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %26, i64 4096, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0), i8* %arraydecay39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %27), !dbg !3671
  %28 = load i8*, i8** %path.addr, align 8, !dbg !3672
  %call41 = call i32 @IsPathAccessible(i8* %28), !dbg !3674
  %cmp42 = icmp ne i32 %call41, 0, !dbg !3675
  br i1 %cmp42, label %if.then44, label %if.end46, !dbg !3676

if.then44:                                        ; preds = %if.then35
  %29 = load i8*, i8** %path.addr, align 8, !dbg !3677
  %30 = load i64*, i64** %length.addr, align 8, !dbg !3678
  %31 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3679
  %call45 = call i8* @FileToBlob(i8* %29, i64 -1, i64* %30, %struct._ExceptionInfo* %31), !dbg !3680
  store i8* %call45, i8** %blob, align 8, !dbg !3681
  br label %if.end46, !dbg !3682

if.end46:                                         ; preds = %if.then44, %if.then35
  br label %if.end47, !dbg !3683

if.end47:                                         ; preds = %if.end46, %land.lhs.true31, %if.end29
  %32 = load i8*, i8** %blob, align 8, !dbg !3684
  %cmp48 = icmp eq i8* %32, null, !dbg !3686
  br i1 %cmp48, label %land.lhs.true50, label %if.end56, !dbg !3687

land.lhs.true50:                                  ; preds = %if.end47
  %33 = load i8*, i8** %path.addr, align 8, !dbg !3688
  %call51 = call i32 @IsPathAccessible(i8* %33), !dbg !3689
  %cmp52 = icmp ne i32 %call51, 0, !dbg !3690
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !3691

if.then54:                                        ; preds = %land.lhs.true50
  %34 = load i8*, i8** %path.addr, align 8, !dbg !3692
  %35 = load i64*, i64** %length.addr, align 8, !dbg !3693
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3694
  %call55 = call i8* @FileToBlob(i8* %34, i64 -1, i64* %35, %struct._ExceptionInfo* %36), !dbg !3695
  store i8* %call55, i8** %blob, align 8, !dbg !3696
  br label %if.end56, !dbg !3697

if.end56:                                         ; preds = %if.then54, %land.lhs.true50, %if.end47
  %37 = load i8*, i8** %blob, align 8, !dbg !3698
  %cmp57 = icmp eq i8* %37, null, !dbg !3700
  br i1 %cmp57, label %if.then59, label %if.end61, !dbg !3701

if.then59:                                        ; preds = %if.end56
  %38 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3702
  %39 = load i8*, i8** %path.addr, align 8, !dbg !3703
  %call60 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2523, i32 395, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %39), !dbg !3704
  br label %if.end61, !dbg !3705

if.end61:                                         ; preds = %if.then59, %if.end56
  %40 = load i8*, i8** %blob, align 8, !dbg !3706
  ret i8* %40, !dbg !3707
}

declare dso_local i8* @GetEnvironmentValue(i8*) #2

declare dso_local i32 @IsPathAccessible(i8*) #2

declare dso_local i8* @FileToBlob(i8*, i64, i64*, %struct._ExceptionInfo*) #2

declare dso_local i8* @GetClientPath() #2

declare dso_local void @ChopPathComponents(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @GetCacheView(%struct._CacheView* %cache_view, i64 %x, i64 %y, i64 %columns, i64 %rows) #0 !dbg !3708 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %pixels = alloca %struct._PixelPacket*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !3711, metadata !DIExpression()), !dbg !3712
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3713, metadata !DIExpression()), !dbg !3714
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !3717, metadata !DIExpression()), !dbg !3718
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !3719, metadata !DIExpression()), !dbg !3720
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixels, metadata !3721, metadata !DIExpression()), !dbg !3722
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !3723
  %1 = load i64, i64* %x.addr, align 8, !dbg !3724
  %2 = load i64, i64* %y.addr, align 8, !dbg !3725
  %3 = load i64, i64* %columns.addr, align 8, !dbg !3726
  %4 = load i64, i64* %rows.addr, align 8, !dbg !3727
  %5 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !3728
  %call = call %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView* %5), !dbg !3729
  %call1 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %call), !dbg !3730
  store %struct._PixelPacket* %call1, %struct._PixelPacket** %pixels, align 8, !dbg !3731
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !3732
  ret %struct._PixelPacket* %6, !dbg !3733
}

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @GetCacheViewIndexes(%struct._CacheView* %cache_view) #0 !dbg !3734 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !3737, metadata !DIExpression()), !dbg !3738
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !3739
  %call = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %0), !dbg !3740
  ret i16* %call, !dbg !3741
}

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @GetCacheViewPixels(%struct._CacheView* %cache_view, i64 %x, i64 %y, i64 %columns, i64 %rows) #0 !dbg !3742 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %pixels = alloca %struct._PixelPacket*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !3743, metadata !DIExpression()), !dbg !3744
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !3747, metadata !DIExpression()), !dbg !3748
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !3749, metadata !DIExpression()), !dbg !3750
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !3751, metadata !DIExpression()), !dbg !3752
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixels, metadata !3753, metadata !DIExpression()), !dbg !3754
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !3755
  %1 = load i64, i64* %x.addr, align 8, !dbg !3756
  %2 = load i64, i64* %y.addr, align 8, !dbg !3757
  %3 = load i64, i64* %columns.addr, align 8, !dbg !3758
  %4 = load i64, i64* %rows.addr, align 8, !dbg !3759
  %5 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !3760
  %call = call %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView* %5), !dbg !3761
  %call1 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %call), !dbg !3762
  store %struct._PixelPacket* %call1, %struct._PixelPacket** %pixels, align 8, !dbg !3763
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !3764
  ret %struct._PixelPacket* %6, !dbg !3765
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ImageAttribute* @GetImageAttribute(%struct._Image* %image, i8* %key) #0 !dbg !3766 {
entry:
  %retval = alloca %struct._ImageAttribute*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %key.addr = alloca i8*, align 8
  %value = alloca i8*, align 8
  %attribute = alloca %struct._ImageAttribute*, align 8
  %attribute6 = alloca %struct._ImageAttribute*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3769, metadata !DIExpression()), !dbg !3770
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !3771, metadata !DIExpression()), !dbg !3772
  call void @llvm.dbg.declare(metadata i8** %value, metadata !3773, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.declare(metadata %struct._ImageAttribute** %attribute, metadata !3775, metadata !DIExpression()), !dbg !3776
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2696, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0)), !dbg !3777
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3778
  %1 = load i8*, i8** %key.addr, align 8, !dbg !3779
  %call1 = call i8* @GetImageProperty(%struct._Image* %0, i8* %1), !dbg !3780
  store i8* %call1, i8** %value, align 8, !dbg !3781
  %2 = load i8*, i8** %value, align 8, !dbg !3782
  %cmp = icmp eq i8* %2, null, !dbg !3784
  br i1 %cmp, label %if.then, label %if.end, !dbg !3785

if.then:                                          ; preds = %entry
  store %struct._ImageAttribute* null, %struct._ImageAttribute** %retval, align 8, !dbg !3786
  br label %return, !dbg !3786

if.end:                                           ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3787
  %attributes = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 50, !dbg !3789
  %4 = load i8*, i8** %attributes, align 8, !dbg !3789
  %cmp2 = icmp eq i8* %4, null, !dbg !3790
  br i1 %cmp2, label %if.then3, label %if.else, !dbg !3791

if.then3:                                         ; preds = %if.end
  %call4 = call %struct._SplayTreeInfo* @NewSplayTree(i32 (i8*, i8*)* @CompareSplayTreeString, i8* (i8*)* @RelinquishMagickMemory, i8* (i8*)* @DestroyAttribute), !dbg !3792
  %5 = bitcast %struct._SplayTreeInfo* %call4 to i8*, !dbg !3792
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3793
  %attributes5 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 50, !dbg !3794
  store i8* %5, i8** %attributes5, align 8, !dbg !3795
  br label %if.end12, !dbg !3796

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._ImageAttribute** %attribute6, metadata !3797, metadata !DIExpression()), !dbg !3799
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3800
  %attributes7 = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 50, !dbg !3801
  %8 = load i8*, i8** %attributes7, align 8, !dbg !3801
  %9 = bitcast i8* %8 to %struct._SplayTreeInfo*, !dbg !3802
  %10 = load i8*, i8** %key.addr, align 8, !dbg !3803
  %call8 = call i8* @GetValueFromSplayTree(%struct._SplayTreeInfo* %9, i8* %10), !dbg !3804
  %11 = bitcast i8* %call8 to %struct._ImageAttribute*, !dbg !3805
  store %struct._ImageAttribute* %11, %struct._ImageAttribute** %attribute6, align 8, !dbg !3806
  %12 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute6, align 8, !dbg !3807
  %cmp9 = icmp ne %struct._ImageAttribute* %12, null, !dbg !3809
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3810

if.then10:                                        ; preds = %if.else
  %13 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute6, align 8, !dbg !3811
  store %struct._ImageAttribute* %13, %struct._ImageAttribute** %retval, align 8, !dbg !3812
  br label %return, !dbg !3812

if.end11:                                         ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then3
  %call13 = call i8* @AcquireMagickMemory(i64 40) #15, !dbg !3813
  %14 = bitcast i8* %call13 to %struct._ImageAttribute*, !dbg !3814
  store %struct._ImageAttribute* %14, %struct._ImageAttribute** %attribute, align 8, !dbg !3815
  %15 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3816
  %cmp14 = icmp eq %struct._ImageAttribute* %15, null, !dbg !3818
  br i1 %cmp14, label %if.then15, label %if.end21, !dbg !3819

if.then15:                                        ; preds = %if.end12
  call void @llvm.dbg.declare(metadata i8** %message, metadata !3820, metadata !DIExpression()), !dbg !3822
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !3823, metadata !DIExpression()), !dbg !3822
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !3822
  %call16 = call i32* @__errno_location() #13, !dbg !3822
  %16 = load i32, i32* %call16, align 4, !dbg !3822
  %call17 = call i8* @GetExceptionMessage(i32 %16), !dbg !3822
  store i8* %call17, i8** %message, align 8, !dbg !3822
  %17 = load i8*, i8** %message, align 8, !dbg !3822
  %call18 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2715, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %17), !dbg !3822
  %18 = load i8*, i8** %message, align 8, !dbg !3822
  %call19 = call i8* @DestroyString(i8* %18), !dbg !3822
  store i8* %call19, i8** %message, align 8, !dbg !3822
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !3822
  %call20 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !3822
  call void @MagickCoreTerminus(), !dbg !3822
  call void @_exit(i32 1) #14, !dbg !3822
  unreachable, !dbg !3822

if.end21:                                         ; preds = %if.end12
  %19 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3824
  %20 = bitcast %struct._ImageAttribute* %19 to i8*, !dbg !3824
  %call22 = call i8* @ResetMagickMemory(i8* %20, i32 0, i64 40), !dbg !3825
  %21 = load i8*, i8** %key.addr, align 8, !dbg !3826
  %call23 = call i8* @ConstantString(i8* %21), !dbg !3827
  %22 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3828
  %key24 = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %22, i32 0, i32 0, !dbg !3829
  store i8* %call23, i8** %key24, align 8, !dbg !3830
  %23 = load i8*, i8** %value, align 8, !dbg !3831
  %call25 = call i8* @ConstantString(i8* %23), !dbg !3832
  %24 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3833
  %value26 = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %24, i32 0, i32 1, !dbg !3834
  store i8* %call25, i8** %value26, align 8, !dbg !3835
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3836
  %attributes27 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 50, !dbg !3837
  %26 = load i8*, i8** %attributes27, align 8, !dbg !3837
  %27 = bitcast i8* %26 to %struct._SplayTreeInfo*, !dbg !3838
  %28 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3839
  %key28 = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %28, i32 0, i32 0, !dbg !3840
  %29 = load i8*, i8** %key28, align 8, !dbg !3840
  %30 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3841
  %31 = bitcast %struct._ImageAttribute* %30 to i8*, !dbg !3841
  %call29 = call i32 @AddValueToSplayTree(%struct._SplayTreeInfo* %27, i8* %29, i8* %31), !dbg !3842
  %32 = load %struct._ImageAttribute*, %struct._ImageAttribute** %attribute, align 8, !dbg !3843
  store %struct._ImageAttribute* %32, %struct._ImageAttribute** %retval, align 8, !dbg !3844
  br label %return, !dbg !3844

return:                                           ; preds = %if.end21, %if.then10, %if.then
  %33 = load %struct._ImageAttribute*, %struct._ImageAttribute** %retval, align 8, !dbg !3845
  ret %struct._ImageAttribute* %33, !dbg !3845
}

declare dso_local i8* @GetImageProperty(%struct._Image*, i8*) #2

declare dso_local %struct._SplayTreeInfo* @NewSplayTree(i32 (i8*, i8*)*, i8* (i8*)*, i8* (i8*)*) #2

declare dso_local i32 @CompareSplayTreeString(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @DestroyAttribute(i8* %attribute) #0 !dbg !3846 {
entry:
  %attribute.addr = alloca i8*, align 8
  %p = alloca %struct._ImageAttribute*, align 8
  store i8* %attribute, i8** %attribute.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %attribute.addr, metadata !3849, metadata !DIExpression()), !dbg !3850
  call void @llvm.dbg.declare(metadata %struct._ImageAttribute** %p, metadata !3851, metadata !DIExpression()), !dbg !3852
  %0 = load i8*, i8** %attribute.addr, align 8, !dbg !3853
  %1 = bitcast i8* %0 to %struct._ImageAttribute*, !dbg !3854
  store %struct._ImageAttribute* %1, %struct._ImageAttribute** %p, align 8, !dbg !3855
  %2 = load %struct._ImageAttribute*, %struct._ImageAttribute** %p, align 8, !dbg !3856
  %value = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %2, i32 0, i32 1, !dbg !3858
  %3 = load i8*, i8** %value, align 8, !dbg !3858
  %cmp = icmp ne i8* %3, null, !dbg !3859
  br i1 %cmp, label %if.then, label %if.end, !dbg !3860

if.then:                                          ; preds = %entry
  %4 = load %struct._ImageAttribute*, %struct._ImageAttribute** %p, align 8, !dbg !3861
  %value1 = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %4, i32 0, i32 1, !dbg !3862
  %5 = load i8*, i8** %value1, align 8, !dbg !3862
  %call = call i8* @DestroyString(i8* %5), !dbg !3863
  %6 = load %struct._ImageAttribute*, %struct._ImageAttribute** %p, align 8, !dbg !3864
  %value2 = getelementptr inbounds %struct._ImageAttribute, %struct._ImageAttribute* %6, i32 0, i32 1, !dbg !3865
  store i8* %call, i8** %value2, align 8, !dbg !3866
  br label %if.end, !dbg !3864

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct._ImageAttribute*, %struct._ImageAttribute** %p, align 8, !dbg !3867
  %8 = bitcast %struct._ImageAttribute* %7 to i8*, !dbg !3867
  %call3 = call i8* @RelinquishMagickMemory(i8* %8), !dbg !3868
  ret i8* %call3, !dbg !3869
}

declare dso_local i8* @GetValueFromSplayTree(%struct._SplayTreeInfo*, i8*) #2

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #9

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

declare dso_local i8* @ConstantString(i8*) #2

declare dso_local i32 @AddValueToSplayTree(%struct._SplayTreeInfo*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ImageAttribute* @GetImageClippingPathAttribute(%struct._Image* %image) #0 !dbg !3870 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3875
  %call = call %struct._ImageAttribute* @GetImageAttribute(%struct._Image* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)), !dbg !3876
  ret %struct._ImageAttribute* %call, !dbg !3877
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @GetImageFromMagickRegistry(i8* %name, i64* %id, %struct._ExceptionInfo* %exception) #0 !dbg !3878 {
entry:
  %name.addr = alloca i8*, align 8
  %id.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3882, metadata !DIExpression()), !dbg !3883
  store i64* %id, i64** %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %id.addr, metadata !3884, metadata !DIExpression()), !dbg !3885
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3886, metadata !DIExpression()), !dbg !3887
  %0 = load i64*, i64** %id.addr, align 8, !dbg !3888
  store i64 0, i64* %0, align 8, !dbg !3889
  %1 = load i8*, i8** %name.addr, align 8, !dbg !3890
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3891
  %call = call i8* @GetImageRegistry(i32 1, i8* %1, %struct._ExceptionInfo* %2), !dbg !3892
  %3 = bitcast i8* %call to %struct._Image*, !dbg !3893
  ret %struct._Image* %3, !dbg !3894
}

declare dso_local i8* @GetImageRegistry(i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @GetMagickRegistry(i64 %id, i32* %type, i64* %length, %struct._ExceptionInfo* %exception) #0 !dbg !3895 {
entry:
  %retval = alloca i8*, align 8
  %id.addr = alloca i64, align 8
  %type.addr = alloca i32*, align 8
  %length.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %key = alloca [4096 x i8], align 16
  %blob = alloca i8*, align 8
  store i64 %id, i64* %id.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %id.addr, metadata !3899, metadata !DIExpression()), !dbg !3900
  store i32* %type, i32** %type.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %type.addr, metadata !3901, metadata !DIExpression()), !dbg !3902
  store i64* %length, i64** %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %length.addr, metadata !3903, metadata !DIExpression()), !dbg !3904
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3905, metadata !DIExpression()), !dbg !3906
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !3907, metadata !DIExpression()), !dbg !3908
  call void @llvm.dbg.declare(metadata i8** %blob, metadata !3909, metadata !DIExpression()), !dbg !3910
  %0 = load i32*, i32** %type.addr, align 8, !dbg !3911
  store i32 0, i32* %0, align 4, !dbg !3912
  %1 = load i64*, i64** %length.addr, align 8, !dbg !3913
  store i64 0, i64* %1, align 8, !dbg !3914
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !3915
  %2 = load i64, i64* %id.addr, align 8, !dbg !3916
  %conv = sitofp i64 %2 to double, !dbg !3917
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), double %conv), !dbg !3918
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !3919
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3920
  %call2 = call i8* @GetImageRegistry(i32 1, i8* %arraydecay1, %struct._ExceptionInfo* %3), !dbg !3921
  store i8* %call2, i8** %blob, align 8, !dbg !3922
  %4 = load i8*, i8** %blob, align 8, !dbg !3923
  %cmp = icmp ne i8* %4, null, !dbg !3925
  br i1 %cmp, label %if.then, label %if.end, !dbg !3926

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %blob, align 8, !dbg !3927
  store i8* %5, i8** %retval, align 8, !dbg !3928
  br label %return, !dbg !3928

if.end:                                           ; preds = %entry
  %arraydecay4 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !3929
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3930
  %call5 = call i8* @GetImageRegistry(i32 2, i8* %arraydecay4, %struct._ExceptionInfo* %6), !dbg !3931
  store i8* %call5, i8** %blob, align 8, !dbg !3932
  %7 = load i8*, i8** %blob, align 8, !dbg !3933
  %cmp6 = icmp ne i8* %7, null, !dbg !3935
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !3936

if.then8:                                         ; preds = %if.end
  %8 = load i8*, i8** %blob, align 8, !dbg !3937
  store i8* %8, i8** %retval, align 8, !dbg !3938
  br label %return, !dbg !3938

if.end9:                                          ; preds = %if.end
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !3939
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3940
  %call11 = call i8* @GetImageRegistry(i32 0, i8* %arraydecay10, %struct._ExceptionInfo* %9), !dbg !3941
  store i8* %call11, i8** %retval, align 8, !dbg !3942
  br label %return, !dbg !3942

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %10 = load i8*, i8** %retval, align 8, !dbg !3943
  ret i8* %10, !dbg !3943
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageGeometry(%struct._Image* %image, i8* %geometry, i32 %size_to_fit, %struct._RectangleInfo* %region_info) #0 !dbg !3944 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %geometry.addr = alloca i8*, align 8
  %size_to_fit.addr = alloca i32, align 4
  %region_info.addr = alloca %struct._RectangleInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  store i32 %size_to_fit, i32* %size_to_fit.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size_to_fit.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  store %struct._RectangleInfo* %region_info, %struct._RectangleInfo** %region_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %region_info.addr, metadata !3954, metadata !DIExpression()), !dbg !3955
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3956
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3958
  %1 = load i32, i32* %debug, align 8, !dbg !3958
  %cmp = icmp ne i32 %1, 0, !dbg !3959
  br i1 %cmp, label %if.then, label %if.end, !dbg !3960

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2892, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)), !dbg !3961
  br label %if.end, !dbg !3962

if.end:                                           ; preds = %if.then, %entry
  %2 = load i32, i32* %size_to_fit.addr, align 4, !dbg !3963
  %cmp1 = icmp ne i32 %2, 0, !dbg !3965
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !3966

if.then2:                                         ; preds = %if.end
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3967
  %4 = load i8*, i8** %geometry.addr, align 8, !dbg !3968
  %5 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !3969
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3970
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 58, !dbg !3971
  %call3 = call i32 @ParseRegionGeometry(%struct._Image* %3, i8* %4, %struct._RectangleInfo* %5, %struct._ExceptionInfo* %exception), !dbg !3972
  store i32 %call3, i32* %retval, align 4, !dbg !3973
  br label %return, !dbg !3973

if.end4:                                          ; preds = %if.end
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3974
  %8 = load i8*, i8** %geometry.addr, align 8, !dbg !3975
  %9 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !3976
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3977
  %exception5 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 58, !dbg !3978
  %call6 = call i32 @ParsePageGeometry(%struct._Image* %7, i8* %8, %struct._RectangleInfo* %9, %struct._ExceptionInfo* %exception5), !dbg !3979
  store i32 %call6, i32* %retval, align 4, !dbg !3980
  br label %return, !dbg !3980

return:                                           ; preds = %if.end4, %if.then2
  %11 = load i32, i32* %retval, align 4, !dbg !3981
  ret i32 %11, !dbg !3981
}

declare dso_local i32 @ParseRegionGeometry(%struct._Image*, i8*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

declare dso_local i32 @ParsePageGeometry(%struct._Image*, i8*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @GetImageList(%struct._Image* %images, i64 %offset, %struct._ExceptionInfo* %exception) #0 !dbg !3982 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %offset.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !3985, metadata !DIExpression()), !dbg !3986
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !3987, metadata !DIExpression()), !dbg !3988
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3989, metadata !DIExpression()), !dbg !3990
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !3991, metadata !DIExpression()), !dbg !3992
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !3993
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3995
  %1 = load i32, i32* %debug, align 8, !dbg !3995
  %cmp = icmp ne i32 %1, 0, !dbg !3996
  br i1 %cmp, label %if.then, label %if.end, !dbg !3997

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2937, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !3998
  br label %if.end, !dbg !3999

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4000
  %3 = load i64, i64* %offset.addr, align 8, !dbg !4001
  %call1 = call %struct._Image* @GetImageFromList(%struct._Image* %2, i64 %3), !dbg !4002
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4003
  %call2 = call %struct._Image* @CloneImage(%struct._Image* %call1, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %4), !dbg !4004
  store %struct._Image* %call2, %struct._Image** %image, align 8, !dbg !4005
  %5 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !4006
  ret %struct._Image* %5, !dbg !4007
}

declare dso_local %struct._Image* @GetImageFromList(%struct._Image*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @GetImageListIndex(%struct._Image* %images) #0 !dbg !4008 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4011, metadata !DIExpression()), !dbg !4012
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4013
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4015
  %1 = load i32, i32* %debug, align 8, !dbg !4015
  %cmp = icmp ne i32 %1, 0, !dbg !4016
  br i1 %cmp, label %if.then, label %if.end, !dbg !4017

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2973, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !4018
  br label %if.end, !dbg !4019

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4020
  %call1 = call i64 @GetImageIndexInList(%struct._Image* %2), !dbg !4021
  ret i64 %call1, !dbg !4022
}

declare dso_local i64 @GetImageIndexInList(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @GetImageListSize(%struct._Image* %images) #0 !dbg !4023 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4026, metadata !DIExpression()), !dbg !4027
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4028
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4030
  %1 = load i32, i32* %debug, align 8, !dbg !4030
  %cmp = icmp ne i32 %1, 0, !dbg !4031
  br i1 %cmp, label %if.then, label %if.end, !dbg !4032

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3006, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !4033
  br label %if.end, !dbg !4034

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4035
  %call1 = call i64 @GetImageListLength(%struct._Image* %2), !dbg !4036
  ret i64 %call1, !dbg !4037
}

declare dso_local i64 @GetImageListLength(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @GetImagePixels(%struct._Image* %image, i64 %x, i64 %y, i64 %columns, i64 %rows) #0 !dbg !4038 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4041, metadata !DIExpression()), !dbg !4042
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4043, metadata !DIExpression()), !dbg !4044
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !4045, metadata !DIExpression()), !dbg !4046
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !4047, metadata !DIExpression()), !dbg !4048
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !4049, metadata !DIExpression()), !dbg !4050
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4051
  %1 = load i64, i64* %x.addr, align 8, !dbg !4052
  %2 = load i64, i64* %y.addr, align 8, !dbg !4053
  %3 = load i64, i64* %columns.addr, align 8, !dbg !4054
  %4 = load i64, i64* %rows.addr, align 8, !dbg !4055
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4056
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !4057
  %call = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %exception), !dbg !4058
  ret %struct._PixelPacket* %call, !dbg !4059
}

; Function Attrs: noinline nounwind uwtable
define dso_local i16* @GetIndexes(%struct._Image* %image) #0 !dbg !4060 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4065
  %call = call i16* @GetAuthenticIndexQueue(%struct._Image* %0), !dbg !4066
  ret i16* %call, !dbg !4067
}

declare dso_local i16* @GetAuthenticIndexQueue(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetMagickGeometry(i8* %geometry, i64* %x, i64* %y, i64* %width, i64* %height) #0 !dbg !4068 {
entry:
  %geometry.addr = alloca i8*, align 8
  %x.addr = alloca i64*, align 8
  %y.addr = alloca i64*, align 8
  %width.addr = alloca i64*, align 8
  %height.addr = alloca i64*, align 8
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !4071, metadata !DIExpression()), !dbg !4072
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !4073, metadata !DIExpression()), !dbg !4074
  store i64* %y, i64** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %y.addr, metadata !4075, metadata !DIExpression()), !dbg !4076
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !4077, metadata !DIExpression()), !dbg !4078
  store i64* %height, i64** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %height.addr, metadata !4079, metadata !DIExpression()), !dbg !4080
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3138, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)), !dbg !4081
  %0 = load i8*, i8** %geometry.addr, align 8, !dbg !4082
  %1 = load i64*, i64** %x.addr, align 8, !dbg !4083
  %2 = load i64*, i64** %y.addr, align 8, !dbg !4084
  %3 = load i64*, i64** %width.addr, align 8, !dbg !4085
  %4 = load i64*, i64** %height.addr, align 8, !dbg !4086
  %call1 = call i32 @ParseMetaGeometry(i8* %0, i64* %1, i64* %2, i64* %3, i64* %4), !dbg !4087
  ret i32 %call1, !dbg !4088
}

declare dso_local i32 @ParseMetaGeometry(i8*, i64*, i64*, i64*, i64*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @GetNextImage(%struct._Image* %images) #0 !dbg !4089 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4094
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4096
  %1 = load i32, i32* %debug, align 8, !dbg !4096
  %cmp = icmp ne i32 %1, 0, !dbg !4097
  br i1 %cmp, label %if.then, label %if.end, !dbg !4098

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3171, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !4099
  br label %if.end, !dbg !4100

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4101
  %call1 = call %struct._Image* @GetNextImageInList(%struct._Image* %2), !dbg !4102
  ret %struct._Image* %call1, !dbg !4103
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ImageAttribute* @GetNextImageAttribute(%struct._Image* %image) #0 !dbg !4104 {
entry:
  %retval = alloca %struct._ImageAttribute*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %property = alloca i8*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4107, metadata !DIExpression()), !dbg !4108
  call void @llvm.dbg.declare(metadata i8** %property, metadata !4109, metadata !DIExpression()), !dbg !4110
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4111
  %call = call i8* @GetNextImageProperty(%struct._Image* %0), !dbg !4112
  store i8* %call, i8** %property, align 8, !dbg !4113
  %1 = load i8*, i8** %property, align 8, !dbg !4114
  %cmp = icmp eq i8* %1, null, !dbg !4116
  br i1 %cmp, label %if.then, label %if.end, !dbg !4117

if.then:                                          ; preds = %entry
  store %struct._ImageAttribute* null, %struct._ImageAttribute** %retval, align 8, !dbg !4118
  br label %return, !dbg !4118

if.end:                                           ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4119
  %3 = load i8*, i8** %property, align 8, !dbg !4120
  %call1 = call %struct._ImageAttribute* @GetImageAttribute(%struct._Image* %2, i8* %3), !dbg !4121
  store %struct._ImageAttribute* %call1, %struct._ImageAttribute** %retval, align 8, !dbg !4122
  br label %return, !dbg !4122

return:                                           ; preds = %if.end, %if.then
  %4 = load %struct._ImageAttribute*, %struct._ImageAttribute** %retval, align 8, !dbg !4123
  ret %struct._ImageAttribute* %4, !dbg !4123
}

declare dso_local i8* @GetNextImageProperty(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetNumberScenes(%struct._Image* %image) #0 !dbg !4124 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4127, metadata !DIExpression()), !dbg !4128
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4129
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4131
  %1 = load i32, i32* %debug, align 8, !dbg !4131
  %cmp = icmp ne i32 %1, 0, !dbg !4132
  br i1 %cmp, label %if.then, label %if.end, !dbg !4133

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3244, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !4134
  br label %if.end, !dbg !4135

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4136
  %call1 = call i64 @GetImageListLength(%struct._Image* %2), !dbg !4137
  %conv = trunc i64 %call1 to i32, !dbg !4138
  ret i32 %conv, !dbg !4139
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @GetOnePixel(%struct._Image* %image, i64 %x, i64 %y) #0 !dbg !4140 {
entry:
  %retval = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4143, metadata !DIExpression()), !dbg !4144
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !4145, metadata !DIExpression()), !dbg !4146
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !4147, metadata !DIExpression()), !dbg !4148
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %retval, metadata !4149, metadata !DIExpression()), !dbg !4150
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4151
  %1 = load i64, i64* %x.addr, align 8, !dbg !4152
  %2 = load i64, i64* %y.addr, align 8, !dbg !4153
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4154
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !4155
  %call = call i32 @GetOneAuthenticPixel(%struct._Image* %0, i64 %1, i64 %2, %struct._PixelPacket* %retval, %struct._ExceptionInfo* %exception), !dbg !4156
  %4 = bitcast %struct._PixelPacket* %retval to i64*, !dbg !4157
  %5 = load i64, i64* %4, align 2, !dbg !4157
  ret i64 %5, !dbg !4157
}

declare dso_local i32 @GetOneAuthenticPixel(%struct._Image*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @GetPixels(%struct._Image* %image) #0 !dbg !4158 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4161, metadata !DIExpression()), !dbg !4162
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4163
  %call = call %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image* %0), !dbg !4164
  ret %struct._PixelPacket* %call, !dbg !4165
}

declare dso_local %struct._PixelPacket* @GetAuthenticPixelQueue(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @GetPreviousImage(%struct._Image* %images) #0 !dbg !4166 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !4167, metadata !DIExpression()), !dbg !4168
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4169
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4171
  %1 = load i32, i32* %debug, align 8, !dbg !4171
  %cmp = icmp ne i32 %1, 0, !dbg !4172
  br i1 %cmp, label %if.then, label %if.end, !dbg !4173

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3350, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !4174
  br label %if.end, !dbg !4175

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !4176
  %call1 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %2), !dbg !4177
  ret %struct._Image* %call1, !dbg !4178
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @HSLTransform(double %hue, double %saturation, double %lightness, i16* %red, i16* %green, i16* %blue) #0 !dbg !4179 {
entry:
  %hue.addr = alloca double, align 8
  %saturation.addr = alloca double, align 8
  %lightness.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %b = alloca float, align 4
  %g = alloca float, align 4
  %r = alloca float, align 4
  %m1 = alloca float, align 4
  %m2 = alloca float, align 4
  store double %hue, double* %hue.addr, align 8
  call void @llvm.dbg.declare(metadata double* %hue.addr, metadata !4183, metadata !DIExpression()), !dbg !4184
  store double %saturation, double* %saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double* %saturation.addr, metadata !4185, metadata !DIExpression()), !dbg !4186
  store double %lightness, double* %lightness.addr, align 8
  call void @llvm.dbg.declare(metadata double* %lightness.addr, metadata !4187, metadata !DIExpression()), !dbg !4188
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !4189, metadata !DIExpression()), !dbg !4190
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !4191, metadata !DIExpression()), !dbg !4192
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !4193, metadata !DIExpression()), !dbg !4194
  call void @llvm.dbg.declare(metadata float* %b, metadata !4195, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.declare(metadata float* %g, metadata !4197, metadata !DIExpression()), !dbg !4198
  call void @llvm.dbg.declare(metadata float* %r, metadata !4199, metadata !DIExpression()), !dbg !4200
  call void @llvm.dbg.declare(metadata float* %m1, metadata !4201, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.declare(metadata float* %m2, metadata !4203, metadata !DIExpression()), !dbg !4204
  %0 = load double, double* %lightness.addr, align 8, !dbg !4205
  %cmp = fcmp ole double %0, 5.000000e-01, !dbg !4207
  br i1 %cmp, label %if.then, label %if.else, !dbg !4208

if.then:                                          ; preds = %entry
  %1 = load double, double* %lightness.addr, align 8, !dbg !4209
  %2 = load double, double* %saturation.addr, align 8, !dbg !4210
  %add = fadd double %2, 1.000000e+00, !dbg !4211
  %mul = fmul double %1, %add, !dbg !4212
  %conv = fptrunc double %mul to float, !dbg !4209
  store float %conv, float* %m2, align 4, !dbg !4213
  br label %if.end, !dbg !4214

if.else:                                          ; preds = %entry
  %3 = load double, double* %lightness.addr, align 8, !dbg !4215
  %4 = load double, double* %saturation.addr, align 8, !dbg !4216
  %add1 = fadd double %3, %4, !dbg !4217
  %5 = load double, double* %lightness.addr, align 8, !dbg !4218
  %6 = load double, double* %saturation.addr, align 8, !dbg !4219
  %mul2 = fmul double %5, %6, !dbg !4220
  %sub = fsub double %add1, %mul2, !dbg !4221
  %conv3 = fptrunc double %sub to float, !dbg !4215
  store float %conv3, float* %m2, align 4, !dbg !4222
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %7 = load double, double* %lightness.addr, align 8, !dbg !4223
  %mul4 = fmul double 2.000000e+00, %7, !dbg !4224
  %8 = load float, float* %m2, align 4, !dbg !4225
  %conv5 = fpext float %8 to double, !dbg !4225
  %sub6 = fsub double %mul4, %conv5, !dbg !4226
  %conv7 = fptrunc double %sub6 to float, !dbg !4227
  store float %conv7, float* %m1, align 4, !dbg !4228
  %9 = load float, float* %m1, align 4, !dbg !4229
  %10 = load float, float* %m2, align 4, !dbg !4230
  %11 = load double, double* %hue.addr, align 8, !dbg !4231
  %add8 = fadd double %11, 0x3FD5555555555555, !dbg !4232
  %conv9 = fptrunc double %add8 to float, !dbg !4231
  %call = call float @HueToRGB(float %9, float %10, float %conv9), !dbg !4233
  store float %call, float* %r, align 4, !dbg !4234
  %12 = load float, float* %m1, align 4, !dbg !4235
  %13 = load float, float* %m2, align 4, !dbg !4236
  %14 = load double, double* %hue.addr, align 8, !dbg !4237
  %conv10 = fptrunc double %14 to float, !dbg !4237
  %call11 = call float @HueToRGB(float %12, float %13, float %conv10), !dbg !4238
  store float %call11, float* %g, align 4, !dbg !4239
  %15 = load float, float* %m1, align 4, !dbg !4240
  %16 = load float, float* %m2, align 4, !dbg !4241
  %17 = load double, double* %hue.addr, align 8, !dbg !4242
  %sub12 = fsub double %17, 0x3FD5555555555555, !dbg !4243
  %conv13 = fptrunc double %sub12 to float, !dbg !4242
  %call14 = call float @HueToRGB(float %15, float %16, float %conv13), !dbg !4244
  store float %call14, float* %b, align 4, !dbg !4245
  %18 = load float, float* %r, align 4, !dbg !4246
  %mul15 = fmul float 6.553500e+04, %18, !dbg !4247
  %call16 = call zeroext i16 @ClampToQuantum(float %mul15), !dbg !4248
  %19 = load i16*, i16** %red.addr, align 8, !dbg !4249
  store i16 %call16, i16* %19, align 2, !dbg !4250
  %20 = load float, float* %g, align 4, !dbg !4251
  %mul17 = fmul float 6.553500e+04, %20, !dbg !4252
  %call18 = call zeroext i16 @ClampToQuantum(float %mul17), !dbg !4253
  %21 = load i16*, i16** %green.addr, align 8, !dbg !4254
  store i16 %call18, i16* %21, align 2, !dbg !4255
  %22 = load float, float* %b, align 4, !dbg !4256
  %mul19 = fmul float 6.553500e+04, %22, !dbg !4257
  %call20 = call zeroext i16 @ClampToQuantum(float %mul19), !dbg !4258
  %23 = load i16*, i16** %blue.addr, align 8, !dbg !4259
  store i16 %call20, i16* %23, align 2, !dbg !4260
  ret void, !dbg !4261
}

; Function Attrs: noinline nounwind uwtable
define internal float @HueToRGB(float %m1, float %m2, float %hue) #0 !dbg !4262 {
entry:
  %retval = alloca float, align 4
  %m1.addr = alloca float, align 4
  %m2.addr = alloca float, align 4
  %hue.addr = alloca float, align 4
  store float %m1, float* %m1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %m1.addr, metadata !4265, metadata !DIExpression()), !dbg !4266
  store float %m2, float* %m2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %m2.addr, metadata !4267, metadata !DIExpression()), !dbg !4268
  store float %hue, float* %hue.addr, align 4
  call void @llvm.dbg.declare(metadata float* %hue.addr, metadata !4269, metadata !DIExpression()), !dbg !4270
  %0 = load float, float* %hue.addr, align 4, !dbg !4271
  %conv = fpext float %0 to double, !dbg !4271
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !4273
  br i1 %cmp, label %if.then, label %if.end, !dbg !4274

if.then:                                          ; preds = %entry
  %1 = load float, float* %hue.addr, align 4, !dbg !4275
  %conv2 = fpext float %1 to double, !dbg !4275
  %add = fadd double %conv2, 1.000000e+00, !dbg !4275
  %conv3 = fptrunc double %add to float, !dbg !4275
  store float %conv3, float* %hue.addr, align 4, !dbg !4275
  br label %if.end, !dbg !4276

if.end:                                           ; preds = %if.then, %entry
  %2 = load float, float* %hue.addr, align 4, !dbg !4277
  %conv4 = fpext float %2 to double, !dbg !4277
  %cmp5 = fcmp ogt double %conv4, 1.000000e+00, !dbg !4279
  br i1 %cmp5, label %if.then7, label %if.end10, !dbg !4280

if.then7:                                         ; preds = %if.end
  %3 = load float, float* %hue.addr, align 4, !dbg !4281
  %conv8 = fpext float %3 to double, !dbg !4281
  %sub = fsub double %conv8, 1.000000e+00, !dbg !4281
  %conv9 = fptrunc double %sub to float, !dbg !4281
  store float %conv9, float* %hue.addr, align 4, !dbg !4281
  br label %if.end10, !dbg !4282

if.end10:                                         ; preds = %if.then7, %if.end
  %4 = load float, float* %hue.addr, align 4, !dbg !4283
  %conv11 = fpext float %4 to double, !dbg !4283
  %mul = fmul double 6.000000e+00, %conv11, !dbg !4285
  %cmp12 = fcmp olt double %mul, 1.000000e+00, !dbg !4286
  br i1 %cmp12, label %if.then14, label %if.end23, !dbg !4287

if.then14:                                        ; preds = %if.end10
  %5 = load float, float* %m1.addr, align 4, !dbg !4288
  %conv15 = fpext float %5 to double, !dbg !4288
  %6 = load float, float* %m2.addr, align 4, !dbg !4289
  %7 = load float, float* %m1.addr, align 4, !dbg !4290
  %sub16 = fsub float %6, %7, !dbg !4291
  %conv17 = fpext float %sub16 to double, !dbg !4292
  %mul18 = fmul double 6.000000e+00, %conv17, !dbg !4293
  %8 = load float, float* %hue.addr, align 4, !dbg !4294
  %conv19 = fpext float %8 to double, !dbg !4294
  %mul20 = fmul double %mul18, %conv19, !dbg !4295
  %add21 = fadd double %conv15, %mul20, !dbg !4296
  %conv22 = fptrunc double %add21 to float, !dbg !4297
  store float %conv22, float* %retval, align 4, !dbg !4298
  br label %return, !dbg !4298

if.end23:                                         ; preds = %if.end10
  %9 = load float, float* %hue.addr, align 4, !dbg !4299
  %conv24 = fpext float %9 to double, !dbg !4299
  %mul25 = fmul double 2.000000e+00, %conv24, !dbg !4301
  %cmp26 = fcmp olt double %mul25, 1.000000e+00, !dbg !4302
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !4303

if.then28:                                        ; preds = %if.end23
  %10 = load float, float* %m2.addr, align 4, !dbg !4304
  store float %10, float* %retval, align 4, !dbg !4305
  br label %return, !dbg !4305

if.end29:                                         ; preds = %if.end23
  %11 = load float, float* %hue.addr, align 4, !dbg !4306
  %conv30 = fpext float %11 to double, !dbg !4306
  %mul31 = fmul double 3.000000e+00, %conv30, !dbg !4308
  %cmp32 = fcmp olt double %mul31, 2.000000e+00, !dbg !4309
  br i1 %cmp32, label %if.then34, label %if.end44, !dbg !4310

if.then34:                                        ; preds = %if.end29
  %12 = load float, float* %m1.addr, align 4, !dbg !4311
  %conv35 = fpext float %12 to double, !dbg !4311
  %13 = load float, float* %m2.addr, align 4, !dbg !4312
  %14 = load float, float* %m1.addr, align 4, !dbg !4313
  %sub36 = fsub float %13, %14, !dbg !4314
  %conv37 = fpext float %sub36 to double, !dbg !4315
  %mul38 = fmul double 6.000000e+00, %conv37, !dbg !4316
  %15 = load float, float* %hue.addr, align 4, !dbg !4317
  %conv39 = fpext float %15 to double, !dbg !4317
  %sub40 = fsub double 0x3FE5555555555555, %conv39, !dbg !4318
  %mul41 = fmul double %mul38, %sub40, !dbg !4319
  %add42 = fadd double %conv35, %mul41, !dbg !4320
  %conv43 = fptrunc double %add42 to float, !dbg !4321
  store float %conv43, float* %retval, align 4, !dbg !4322
  br label %return, !dbg !4322

if.end44:                                         ; preds = %if.end29
  %16 = load float, float* %m1.addr, align 4, !dbg !4323
  store float %16, float* %retval, align 4, !dbg !4324
  br label %return, !dbg !4324

return:                                           ; preds = %if.end44, %if.then34, %if.then28, %if.then14
  %17 = load float, float* %retval, align 4, !dbg !4325
  ret float %17, !dbg !4325
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !4326 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !4329, metadata !DIExpression()), !dbg !4330
  %0 = load float, float* %value.addr, align 4, !dbg !4331
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !4333
  br i1 %cmp, label %if.then, label %if.end, !dbg !4334

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !4335
  br label %return, !dbg !4335

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !4336
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !4338
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !4339

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !4340
  br label %return, !dbg !4340

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !4341
  %add = fadd float %2, 5.000000e-01, !dbg !4342
  %conv = fptoui float %add to i16, !dbg !4343
  store i16 %conv, i16* %retval, align 2, !dbg !4344
  br label %return, !dbg !4344

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !4345
  ret i16 %3, !dbg !4345
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @IdentityAffine(%struct._AffineMatrix* %affine) #0 !dbg !4346 {
entry:
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !4350, metadata !DIExpression()), !dbg !4351
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3451, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)), !dbg !4352
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3452, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !4353
  %0 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !4354
  %1 = bitcast %struct._AffineMatrix* %0 to i8*, !dbg !4354
  %call2 = call i8* @ResetMagickMemory(i8* %1, i32 0, i64 48), !dbg !4355
  %2 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !4356
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %2, i32 0, i32 0, !dbg !4357
  store double 1.000000e+00, double* %sx, align 8, !dbg !4358
  %3 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !4359
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %3, i32 0, i32 3, !dbg !4360
  store double 1.000000e+00, double* %sy, align 8, !dbg !4361
  ret void, !dbg !4362
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @InitializeMagick(i8* %path) #0 !dbg !4363 {
entry:
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !4366, metadata !DIExpression()), !dbg !4367
  %0 = load i8*, i8** %path.addr, align 8, !dbg !4368
  call void @MagickCoreGenesis(i8* %0, i32 0), !dbg !4369
  ret void, !dbg !4370
}

declare dso_local void @MagickCoreGenesis(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @InterpolatePixelColor(%struct._MagickPixelPacket* noalias sret %agg.result, %struct._Image* %image, %struct._CacheView* %image_view, i32 %method, double %x, double %y, %struct._ExceptionInfo* %exception) #0 !dbg !4371 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %image_view.addr = alloca %struct._CacheView*, align 8
  %method.addr = alloca i32, align 4
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %gamma = alloca double, align 8
  %pixels = alloca [16 x %struct._MagickPixelPacket], align 16
  %alpha = alloca [16 x float], align 16
  %pixels92 = alloca [16 x %struct._MagickPixelPacket], align 16
  %u = alloca [4 x %struct._MagickPixelPacket], align 16
  %alpha93 = alloca [16 x float], align 16
  %delta = alloca %struct._PointInfo, align 8
  %gamma184 = alloca double, align 8
  %pixels185 = alloca [16 x %struct._MagickPixelPacket], align 16
  %alpha186 = alloca [16 x float], align 16
  %delta187 = alloca %struct._PointInfo, align 8
  %excerpt_image = alloca %struct._Image*, align 8
  %filter_image = alloca %struct._Image*, align 8
  %pixels449 = alloca [1 x %struct._MagickPixelPacket], align 16
  %geometry = alloca %struct._RectangleInfo, align 8
  %pixels477 = alloca [1 x %struct._MagickPixelPacket], align 16
  %gamma488 = alloca double, align 8
  %pixels489 = alloca [4 x %struct._MagickPixelPacket], align 16
  %alpha490 = alloca [4 x float], align 16
  %delta491 = alloca %struct._PointInfo, align 8
  %luminance = alloca %struct._PointInfo, align 8
  %pixels932 = alloca [1 x %struct._MagickPixelPacket], align 16
  %gamma945 = alloca double, align 8
  %pixels946 = alloca [16 x %struct._MagickPixelPacket], align 16
  %alpha947 = alloca [16 x float], align 16
  %dx = alloca float, align 4
  %dy = alloca float, align 4
  %delta948 = alloca %struct._PointInfo, align 8
  %j = alloca i64, align 8
  %n = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4375, metadata !DIExpression()), !dbg !4376
  store %struct._CacheView* %image_view, %struct._CacheView** %image_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view.addr, metadata !4377, metadata !DIExpression()), !dbg !4378
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !4379, metadata !DIExpression()), !dbg !4380
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !4381, metadata !DIExpression()), !dbg !4382
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !4383, metadata !DIExpression()), !dbg !4384
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4385, metadata !DIExpression()), !dbg !4386
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %agg.result, metadata !4387, metadata !DIExpression()), !dbg !4388
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4389, metadata !DIExpression()), !dbg !4390
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4391, metadata !DIExpression()), !dbg !4392
  call void @llvm.dbg.declare(metadata i64* %i, metadata !4393, metadata !DIExpression()), !dbg !4394
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4395
  call void @GetMagickPixelPacket(%struct._Image* %0, %struct._MagickPixelPacket* %agg.result), !dbg !4396
  %1 = load i32, i32* %method.addr, align 4, !dbg !4397
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb91
    i32 3, label %sw.bb183
    i32 4, label %sw.bb448
    i32 5, label %sw.bb476
    i32 6, label %sw.bb487
    i32 7, label %sw.bb931
    i32 8, label %sw.bb944
  ], !dbg !4398

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4399, metadata !DIExpression()), !dbg !4402
  call void @llvm.dbg.declare(metadata [16 x %struct._MagickPixelPacket]* %pixels, metadata !4403, metadata !DIExpression()), !dbg !4405
  call void @llvm.dbg.declare(metadata [16 x float]* %alpha, metadata !4406, metadata !DIExpression()), !dbg !4407
  %2 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4408
  %3 = load double, double* %x.addr, align 8, !dbg !4409
  %4 = call double @llvm.floor.f64(double %3), !dbg !4410
  %conv = fptosi double %4 to i64, !dbg !4411
  %sub = sub nsw i64 %conv, 1, !dbg !4412
  %5 = load double, double* %y.addr, align 8, !dbg !4413
  %6 = call double @llvm.floor.f64(double %5), !dbg !4414
  %conv1 = fptosi double %6 to i64, !dbg !4415
  %sub2 = sub nsw i64 %conv1, 1, !dbg !4416
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4417
  %call = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %2, i64 %sub, i64 %sub2, i64 4, i64 4, %struct._ExceptionInfo* %7), !dbg !4418
  store %struct._PixelPacket* %call, %struct._PixelPacket** %p, align 8, !dbg !4419
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4420
  %cmp = icmp eq %struct._PixelPacket* %8, null, !dbg !4422
  br i1 %cmp, label %if.then, label %if.end, !dbg !4423

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !4424

if.end:                                           ; preds = %sw.bb
  %9 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4425
  %call4 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %9), !dbg !4426
  store i16* %call4, i16** %indexes, align 8, !dbg !4427
  store i64 0, i64* %i, align 8, !dbg !4428
  br label %for.cond, !dbg !4430

for.cond:                                         ; preds = %for.inc, %if.end
  %10 = load i64, i64* %i, align 8, !dbg !4431
  %cmp5 = icmp slt i64 %10, 16, !dbg !4433
  br i1 %cmp5, label %for.body, label %for.end, !dbg !4434

for.body:                                         ; preds = %for.cond
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4435
  %arraydecay = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !4437
  %12 = load i64, i64* %i, align 8, !dbg !4438
  %add.ptr = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay, i64 %12, !dbg !4439
  call void @GetMagickPixelPacket(%struct._Image* %11, %struct._MagickPixelPacket* %add.ptr), !dbg !4440
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4441
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4442
  %15 = load i16*, i16** %indexes, align 8, !dbg !4443
  %16 = load i64, i64* %i, align 8, !dbg !4444
  %add.ptr7 = getelementptr inbounds i16, i16* %15, i64 %16, !dbg !4445
  %arraydecay8 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 0, !dbg !4446
  %17 = load i64, i64* %i, align 8, !dbg !4447
  %add.ptr9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay8, i64 %17, !dbg !4448
  call void @SetMagickPixelPacket(%struct._Image* %13, %struct._PixelPacket* %14, i16* %add.ptr7, %struct._MagickPixelPacket* %add.ptr9), !dbg !4449
  %18 = load i64, i64* %i, align 8, !dbg !4450
  %arrayidx = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %18, !dbg !4451
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !4452
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4453
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 6, !dbg !4455
  %20 = load i32, i32* %matte, align 8, !dbg !4455
  %cmp10 = icmp ne i32 %20, 0, !dbg !4456
  br i1 %cmp10, label %if.then12, label %if.end35, !dbg !4457

if.then12:                                        ; preds = %for.body
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4458
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %21, i32 0, i32 3, !dbg !4458
  %22 = load i16, i16* %opacity, align 2, !dbg !4458
  %conv13 = zext i16 %22 to i32, !dbg !4458
  %sub14 = sub nsw i32 65535, %conv13, !dbg !4458
  %conv15 = sitofp i32 %sub14 to float, !dbg !4460
  %conv16 = fpext float %conv15 to double, !dbg !4461
  %mul = fmul double 0x3EF0001000100010, %conv16, !dbg !4462
  %conv17 = fptrunc double %mul to float, !dbg !4463
  %23 = load i64, i64* %i, align 8, !dbg !4464
  %arrayidx18 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %23, !dbg !4465
  store float %conv17, float* %arrayidx18, align 4, !dbg !4466
  %24 = load i64, i64* %i, align 8, !dbg !4467
  %arrayidx19 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %24, !dbg !4468
  %25 = load float, float* %arrayidx19, align 4, !dbg !4468
  %26 = load i64, i64* %i, align 8, !dbg !4469
  %arrayidx20 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %26, !dbg !4470
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx20, i32 0, i32 5, !dbg !4471
  %27 = load float, float* %red, align 8, !dbg !4472
  %mul21 = fmul float %27, %25, !dbg !4472
  store float %mul21, float* %red, align 8, !dbg !4472
  %28 = load i64, i64* %i, align 8, !dbg !4473
  %arrayidx22 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %28, !dbg !4474
  %29 = load float, float* %arrayidx22, align 4, !dbg !4474
  %30 = load i64, i64* %i, align 8, !dbg !4475
  %arrayidx23 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %30, !dbg !4476
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx23, i32 0, i32 6, !dbg !4477
  %31 = load float, float* %green, align 4, !dbg !4478
  %mul24 = fmul float %31, %29, !dbg !4478
  store float %mul24, float* %green, align 4, !dbg !4478
  %32 = load i64, i64* %i, align 8, !dbg !4479
  %arrayidx25 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %32, !dbg !4480
  %33 = load float, float* %arrayidx25, align 4, !dbg !4480
  %34 = load i64, i64* %i, align 8, !dbg !4481
  %arrayidx26 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %34, !dbg !4482
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx26, i32 0, i32 7, !dbg !4483
  %35 = load float, float* %blue, align 8, !dbg !4484
  %mul27 = fmul float %35, %33, !dbg !4484
  store float %mul27, float* %blue, align 8, !dbg !4484
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4485
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 1, !dbg !4487
  %37 = load i32, i32* %colorspace, align 4, !dbg !4487
  %cmp28 = icmp eq i32 %37, 12, !dbg !4488
  br i1 %cmp28, label %if.then30, label %if.end34, !dbg !4489

if.then30:                                        ; preds = %if.then12
  %38 = load i64, i64* %i, align 8, !dbg !4490
  %arrayidx31 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %38, !dbg !4491
  %39 = load float, float* %arrayidx31, align 4, !dbg !4491
  %40 = load i64, i64* %i, align 8, !dbg !4492
  %arrayidx32 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %40, !dbg !4493
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx32, i32 0, i32 9, !dbg !4494
  %41 = load float, float* %index, align 8, !dbg !4495
  %mul33 = fmul float %41, %39, !dbg !4495
  store float %mul33, float* %index, align 8, !dbg !4495
  br label %if.end34, !dbg !4493

if.end34:                                         ; preds = %if.then30, %if.then12
  br label %if.end35, !dbg !4496

if.end35:                                         ; preds = %if.end34, %for.body
  %42 = load i64, i64* %i, align 8, !dbg !4497
  %arrayidx36 = getelementptr inbounds [16 x float], [16 x float]* %alpha, i64 0, i64 %42, !dbg !4498
  %43 = load float, float* %arrayidx36, align 4, !dbg !4498
  %conv37 = fpext float %43 to double, !dbg !4498
  store double %conv37, double* %gamma, align 8, !dbg !4499
  %44 = load double, double* %gamma, align 8, !dbg !4500
  %call38 = call double @PerceptibleReciprocal(double %44), !dbg !4501
  store double %call38, double* %gamma, align 8, !dbg !4502
  %45 = load double, double* %gamma, align 8, !dbg !4503
  %cmp39 = fcmp olt double %45, 0.000000e+00, !dbg !4505
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !4506

if.then41:                                        ; preds = %if.end35
  store double 0.000000e+00, double* %gamma, align 8, !dbg !4507
  br label %if.end42, !dbg !4508

if.end42:                                         ; preds = %if.then41, %if.end35
  %46 = load double, double* %gamma, align 8, !dbg !4509
  %mul43 = fmul double %46, 6.250000e-02, !dbg !4510
  %47 = load i64, i64* %i, align 8, !dbg !4511
  %arrayidx44 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %47, !dbg !4512
  %red45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx44, i32 0, i32 5, !dbg !4513
  %48 = load float, float* %red45, align 8, !dbg !4513
  %conv46 = fpext float %48 to double, !dbg !4512
  %mul47 = fmul double %mul43, %conv46, !dbg !4514
  %red48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !4515
  %49 = load float, float* %red48, align 8, !dbg !4516
  %conv49 = fpext float %49 to double, !dbg !4516
  %add = fadd double %conv49, %mul47, !dbg !4516
  %conv50 = fptrunc double %add to float, !dbg !4516
  store float %conv50, float* %red48, align 8, !dbg !4516
  %50 = load double, double* %gamma, align 8, !dbg !4517
  %mul51 = fmul double %50, 6.250000e-02, !dbg !4518
  %51 = load i64, i64* %i, align 8, !dbg !4519
  %arrayidx52 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %51, !dbg !4520
  %green53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx52, i32 0, i32 6, !dbg !4521
  %52 = load float, float* %green53, align 4, !dbg !4521
  %conv54 = fpext float %52 to double, !dbg !4520
  %mul55 = fmul double %mul51, %conv54, !dbg !4522
  %green56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !4523
  %53 = load float, float* %green56, align 4, !dbg !4524
  %conv57 = fpext float %53 to double, !dbg !4524
  %add58 = fadd double %conv57, %mul55, !dbg !4524
  %conv59 = fptrunc double %add58 to float, !dbg !4524
  store float %conv59, float* %green56, align 4, !dbg !4524
  %54 = load double, double* %gamma, align 8, !dbg !4525
  %mul60 = fmul double %54, 6.250000e-02, !dbg !4526
  %55 = load i64, i64* %i, align 8, !dbg !4527
  %arrayidx61 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %55, !dbg !4528
  %blue62 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx61, i32 0, i32 7, !dbg !4529
  %56 = load float, float* %blue62, align 8, !dbg !4529
  %conv63 = fpext float %56 to double, !dbg !4528
  %mul64 = fmul double %mul60, %conv63, !dbg !4530
  %blue65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !4531
  %57 = load float, float* %blue65, align 8, !dbg !4532
  %conv66 = fpext float %57 to double, !dbg !4532
  %add67 = fadd double %conv66, %mul64, !dbg !4532
  %conv68 = fptrunc double %add67 to float, !dbg !4532
  store float %conv68, float* %blue65, align 8, !dbg !4532
  %58 = load i64, i64* %i, align 8, !dbg !4533
  %arrayidx69 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %58, !dbg !4534
  %opacity70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx69, i32 0, i32 8, !dbg !4535
  %59 = load float, float* %opacity70, align 4, !dbg !4535
  %conv71 = fpext float %59 to double, !dbg !4534
  %mul72 = fmul double 6.250000e-02, %conv71, !dbg !4536
  %opacity73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !4537
  %60 = load float, float* %opacity73, align 4, !dbg !4538
  %conv74 = fpext float %60 to double, !dbg !4538
  %add75 = fadd double %conv74, %mul72, !dbg !4538
  %conv76 = fptrunc double %add75 to float, !dbg !4538
  store float %conv76, float* %opacity73, align 4, !dbg !4538
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4539
  %colorspace77 = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 1, !dbg !4541
  %62 = load i32, i32* %colorspace77, align 4, !dbg !4541
  %cmp78 = icmp eq i32 %62, 12, !dbg !4542
  br i1 %cmp78, label %if.then80, label %if.end90, !dbg !4543

if.then80:                                        ; preds = %if.end42
  %63 = load double, double* %gamma, align 8, !dbg !4544
  %mul81 = fmul double %63, 6.250000e-02, !dbg !4545
  %64 = load i64, i64* %i, align 8, !dbg !4546
  %arrayidx82 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels, i64 0, i64 %64, !dbg !4547
  %index83 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx82, i32 0, i32 9, !dbg !4548
  %65 = load float, float* %index83, align 8, !dbg !4548
  %conv84 = fpext float %65 to double, !dbg !4547
  %mul85 = fmul double %mul81, %conv84, !dbg !4549
  %index86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !4550
  %66 = load float, float* %index86, align 8, !dbg !4551
  %conv87 = fpext float %66 to double, !dbg !4551
  %add88 = fadd double %conv87, %mul85, !dbg !4551
  %conv89 = fptrunc double %add88 to float, !dbg !4551
  store float %conv89, float* %index86, align 8, !dbg !4551
  br label %if.end90, !dbg !4552

if.end90:                                         ; preds = %if.then80, %if.end42
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4553
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 1, !dbg !4553
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !4553
  br label %for.inc, !dbg !4554

for.inc:                                          ; preds = %if.end90
  %68 = load i64, i64* %i, align 8, !dbg !4555
  %inc = add nsw i64 %68, 1, !dbg !4555
  store i64 %inc, i64* %i, align 8, !dbg !4555
  br label %for.cond, !dbg !4556, !llvm.loop !4557

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !4559

sw.bb91:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [16 x %struct._MagickPixelPacket]* %pixels92, metadata !4560, metadata !DIExpression()), !dbg !4562
  call void @llvm.dbg.declare(metadata [4 x %struct._MagickPixelPacket]* %u, metadata !4563, metadata !DIExpression()), !dbg !4565
  call void @llvm.dbg.declare(metadata [16 x float]* %alpha93, metadata !4566, metadata !DIExpression()), !dbg !4567
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta, metadata !4568, metadata !DIExpression()), !dbg !4569
  %69 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4570
  %70 = load double, double* %x.addr, align 8, !dbg !4571
  %71 = call double @llvm.floor.f64(double %70), !dbg !4572
  %conv94 = fptosi double %71 to i64, !dbg !4573
  %sub95 = sub nsw i64 %conv94, 1, !dbg !4574
  %72 = load double, double* %y.addr, align 8, !dbg !4575
  %73 = call double @llvm.floor.f64(double %72), !dbg !4576
  %conv96 = fptosi double %73 to i64, !dbg !4577
  %sub97 = sub nsw i64 %conv96, 1, !dbg !4578
  %74 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4579
  %call98 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %69, i64 %sub95, i64 %sub97, i64 4, i64 4, %struct._ExceptionInfo* %74), !dbg !4580
  store %struct._PixelPacket* %call98, %struct._PixelPacket** %p, align 8, !dbg !4581
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4582
  %cmp99 = icmp eq %struct._PixelPacket* %75, null, !dbg !4584
  br i1 %cmp99, label %if.then101, label %if.end102, !dbg !4585

if.then101:                                       ; preds = %sw.bb91
  br label %sw.epilog, !dbg !4586

if.end102:                                        ; preds = %sw.bb91
  %76 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4587
  %call103 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %76), !dbg !4588
  store i16* %call103, i16** %indexes, align 8, !dbg !4589
  store i64 0, i64* %i, align 8, !dbg !4590
  br label %for.cond104, !dbg !4592

for.cond104:                                      ; preds = %for.inc110, %if.end102
  %77 = load i64, i64* %i, align 8, !dbg !4593
  %cmp105 = icmp slt i64 %77, 4, !dbg !4595
  br i1 %cmp105, label %for.body107, label %for.end112, !dbg !4596

for.body107:                                      ; preds = %for.cond104
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4597
  %arraydecay108 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %u, i64 0, i64 0, !dbg !4598
  %79 = load i64, i64* %i, align 8, !dbg !4599
  %add.ptr109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay108, i64 %79, !dbg !4600
  call void @GetMagickPixelPacket(%struct._Image* %78, %struct._MagickPixelPacket* %add.ptr109), !dbg !4601
  br label %for.inc110, !dbg !4601

for.inc110:                                       ; preds = %for.body107
  %80 = load i64, i64* %i, align 8, !dbg !4602
  %inc111 = add nsw i64 %80, 1, !dbg !4602
  store i64 %inc111, i64* %i, align 8, !dbg !4602
  br label %for.cond104, !dbg !4603, !llvm.loop !4604

for.end112:                                       ; preds = %for.cond104
  store i64 0, i64* %i, align 8, !dbg !4606
  br label %for.cond113, !dbg !4608

for.cond113:                                      ; preds = %for.inc158, %for.end112
  %81 = load i64, i64* %i, align 8, !dbg !4609
  %cmp114 = icmp slt i64 %81, 16, !dbg !4611
  br i1 %cmp114, label %for.body116, label %for.end160, !dbg !4612

for.body116:                                      ; preds = %for.cond113
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4613
  %arraydecay117 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 0, !dbg !4615
  %83 = load i64, i64* %i, align 8, !dbg !4616
  %add.ptr118 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay117, i64 %83, !dbg !4617
  call void @GetMagickPixelPacket(%struct._Image* %82, %struct._MagickPixelPacket* %add.ptr118), !dbg !4618
  %84 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4619
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4620
  %86 = load i16*, i16** %indexes, align 8, !dbg !4621
  %87 = load i64, i64* %i, align 8, !dbg !4622
  %add.ptr119 = getelementptr inbounds i16, i16* %86, i64 %87, !dbg !4623
  %arraydecay120 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 0, !dbg !4624
  %88 = load i64, i64* %i, align 8, !dbg !4625
  %add.ptr121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay120, i64 %88, !dbg !4626
  call void @SetMagickPixelPacket(%struct._Image* %84, %struct._PixelPacket* %85, i16* %add.ptr119, %struct._MagickPixelPacket* %add.ptr121), !dbg !4627
  %89 = load i64, i64* %i, align 8, !dbg !4628
  %arrayidx122 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %89, !dbg !4629
  store float 1.000000e+00, float* %arrayidx122, align 4, !dbg !4630
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4631
  %matte123 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 6, !dbg !4633
  %91 = load i32, i32* %matte123, align 8, !dbg !4633
  %cmp124 = icmp ne i32 %91, 0, !dbg !4634
  br i1 %cmp124, label %if.then126, label %if.end156, !dbg !4635

if.then126:                                       ; preds = %for.body116
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4636
  %opacity127 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 3, !dbg !4636
  %93 = load i16, i16* %opacity127, align 2, !dbg !4636
  %conv128 = zext i16 %93 to i32, !dbg !4636
  %sub129 = sub nsw i32 65535, %conv128, !dbg !4636
  %conv130 = sitofp i32 %sub129 to float, !dbg !4638
  %conv131 = fpext float %conv130 to double, !dbg !4639
  %mul132 = fmul double 0x3EF0001000100010, %conv131, !dbg !4640
  %conv133 = fptrunc double %mul132 to float, !dbg !4641
  %94 = load i64, i64* %i, align 8, !dbg !4642
  %arrayidx134 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %94, !dbg !4643
  store float %conv133, float* %arrayidx134, align 4, !dbg !4644
  %95 = load i64, i64* %i, align 8, !dbg !4645
  %arrayidx135 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %95, !dbg !4646
  %96 = load float, float* %arrayidx135, align 4, !dbg !4646
  %97 = load i64, i64* %i, align 8, !dbg !4647
  %arrayidx136 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 %97, !dbg !4648
  %red137 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx136, i32 0, i32 5, !dbg !4649
  %98 = load float, float* %red137, align 8, !dbg !4650
  %mul138 = fmul float %98, %96, !dbg !4650
  store float %mul138, float* %red137, align 8, !dbg !4650
  %99 = load i64, i64* %i, align 8, !dbg !4651
  %arrayidx139 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %99, !dbg !4652
  %100 = load float, float* %arrayidx139, align 4, !dbg !4652
  %101 = load i64, i64* %i, align 8, !dbg !4653
  %arrayidx140 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 %101, !dbg !4654
  %green141 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx140, i32 0, i32 6, !dbg !4655
  %102 = load float, float* %green141, align 4, !dbg !4656
  %mul142 = fmul float %102, %100, !dbg !4656
  store float %mul142, float* %green141, align 4, !dbg !4656
  %103 = load i64, i64* %i, align 8, !dbg !4657
  %arrayidx143 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %103, !dbg !4658
  %104 = load float, float* %arrayidx143, align 4, !dbg !4658
  %105 = load i64, i64* %i, align 8, !dbg !4659
  %arrayidx144 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 %105, !dbg !4660
  %blue145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx144, i32 0, i32 7, !dbg !4661
  %106 = load float, float* %blue145, align 8, !dbg !4662
  %mul146 = fmul float %106, %104, !dbg !4662
  store float %mul146, float* %blue145, align 8, !dbg !4662
  %107 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4663
  %colorspace147 = getelementptr inbounds %struct._Image, %struct._Image* %107, i32 0, i32 1, !dbg !4665
  %108 = load i32, i32* %colorspace147, align 4, !dbg !4665
  %cmp148 = icmp eq i32 %108, 12, !dbg !4666
  br i1 %cmp148, label %if.then150, label %if.end155, !dbg !4667

if.then150:                                       ; preds = %if.then126
  %109 = load i64, i64* %i, align 8, !dbg !4668
  %arrayidx151 = getelementptr inbounds [16 x float], [16 x float]* %alpha93, i64 0, i64 %109, !dbg !4669
  %110 = load float, float* %arrayidx151, align 4, !dbg !4669
  %111 = load i64, i64* %i, align 8, !dbg !4670
  %arrayidx152 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 %111, !dbg !4671
  %index153 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx152, i32 0, i32 9, !dbg !4672
  %112 = load float, float* %index153, align 8, !dbg !4673
  %mul154 = fmul float %112, %110, !dbg !4673
  store float %mul154, float* %index153, align 8, !dbg !4673
  br label %if.end155, !dbg !4671

if.end155:                                        ; preds = %if.then150, %if.then126
  br label %if.end156, !dbg !4674

if.end156:                                        ; preds = %if.end155, %for.body116
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4675
  %incdec.ptr157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !4675
  store %struct._PixelPacket* %incdec.ptr157, %struct._PixelPacket** %p, align 8, !dbg !4675
  br label %for.inc158, !dbg !4676

for.inc158:                                       ; preds = %if.end156
  %114 = load i64, i64* %i, align 8, !dbg !4677
  %inc159 = add nsw i64 %114, 1, !dbg !4677
  store i64 %inc159, i64* %i, align 8, !dbg !4677
  br label %for.cond113, !dbg !4678, !llvm.loop !4679

for.end160:                                       ; preds = %for.cond113
  %115 = load double, double* %x.addr, align 8, !dbg !4681
  %116 = load double, double* %x.addr, align 8, !dbg !4682
  %117 = call double @llvm.floor.f64(double %116), !dbg !4683
  %sub161 = fsub double %115, %117, !dbg !4684
  %x162 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !4685
  store double %sub161, double* %x162, align 8, !dbg !4686
  store i64 0, i64* %i, align 8, !dbg !4687
  br label %for.cond163, !dbg !4689

for.cond163:                                      ; preds = %for.inc176, %for.end160
  %118 = load i64, i64* %i, align 8, !dbg !4690
  %cmp164 = icmp slt i64 %118, 4, !dbg !4692
  br i1 %cmp164, label %for.body166, label %for.end178, !dbg !4693

for.body166:                                      ; preds = %for.cond163
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4694
  %arraydecay167 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 0, !dbg !4696
  %120 = load i64, i64* %i, align 8, !dbg !4697
  %mul168 = mul nsw i64 4, %120, !dbg !4698
  %add.ptr169 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay167, i64 %mul168, !dbg !4699
  call void @GetMagickPixelPacket(%struct._Image* %119, %struct._MagickPixelPacket* %add.ptr169), !dbg !4700
  %arraydecay170 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels92, i64 0, i64 0, !dbg !4701
  %121 = load i64, i64* %i, align 8, !dbg !4702
  %mul171 = mul nsw i64 4, %121, !dbg !4703
  %add.ptr172 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay170, i64 %mul171, !dbg !4704
  %x173 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !4705
  %122 = load double, double* %x173, align 8, !dbg !4705
  %arraydecay174 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %u, i64 0, i64 0, !dbg !4706
  %123 = load i64, i64* %i, align 8, !dbg !4707
  %add.ptr175 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay174, i64 %123, !dbg !4708
  call void @BicubicInterpolate(%struct._MagickPixelPacket* %add.ptr172, double %122, %struct._MagickPixelPacket* %add.ptr175), !dbg !4709
  br label %for.inc176, !dbg !4710

for.inc176:                                       ; preds = %for.body166
  %124 = load i64, i64* %i, align 8, !dbg !4711
  %inc177 = add nsw i64 %124, 1, !dbg !4711
  store i64 %inc177, i64* %i, align 8, !dbg !4711
  br label %for.cond163, !dbg !4712, !llvm.loop !4713

for.end178:                                       ; preds = %for.cond163
  %125 = load double, double* %y.addr, align 8, !dbg !4715
  %126 = load double, double* %y.addr, align 8, !dbg !4716
  %127 = call double @llvm.floor.f64(double %126), !dbg !4717
  %sub179 = fsub double %125, %127, !dbg !4718
  %y180 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !4719
  store double %sub179, double* %y180, align 8, !dbg !4720
  %arraydecay181 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %u, i64 0, i64 0, !dbg !4721
  %y182 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !4722
  %128 = load double, double* %y182, align 8, !dbg !4722
  call void @BicubicInterpolate(%struct._MagickPixelPacket* %arraydecay181, double %128, %struct._MagickPixelPacket* %agg.result), !dbg !4723
  br label %sw.epilog, !dbg !4724

sw.bb183:                                         ; preds = %entry
  br label %sw.default, !dbg !4725

sw.default:                                       ; preds = %entry, %sw.bb183
  call void @llvm.dbg.declare(metadata double* %gamma184, metadata !4726, metadata !DIExpression()), !dbg !4728
  call void @llvm.dbg.declare(metadata [16 x %struct._MagickPixelPacket]* %pixels185, metadata !4729, metadata !DIExpression()), !dbg !4730
  call void @llvm.dbg.declare(metadata [16 x float]* %alpha186, metadata !4731, metadata !DIExpression()), !dbg !4732
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta187, metadata !4733, metadata !DIExpression()), !dbg !4734
  %129 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4735
  %130 = load double, double* %x.addr, align 8, !dbg !4736
  %131 = call double @llvm.floor.f64(double %130), !dbg !4737
  %conv188 = fptosi double %131 to i64, !dbg !4738
  %132 = load double, double* %y.addr, align 8, !dbg !4739
  %133 = call double @llvm.floor.f64(double %132), !dbg !4740
  %conv189 = fptosi double %133 to i64, !dbg !4741
  %134 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4742
  %call190 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %129, i64 %conv188, i64 %conv189, i64 2, i64 2, %struct._ExceptionInfo* %134), !dbg !4743
  store %struct._PixelPacket* %call190, %struct._PixelPacket** %p, align 8, !dbg !4744
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4745
  %cmp191 = icmp eq %struct._PixelPacket* %135, null, !dbg !4747
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !4748

if.then193:                                       ; preds = %sw.default
  br label %sw.epilog, !dbg !4749

if.end194:                                        ; preds = %sw.default
  %136 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !4750
  %call195 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %136), !dbg !4751
  store i16* %call195, i16** %indexes, align 8, !dbg !4752
  store i64 0, i64* %i, align 8, !dbg !4753
  br label %for.cond196, !dbg !4755

for.cond196:                                      ; preds = %for.inc241, %if.end194
  %137 = load i64, i64* %i, align 8, !dbg !4756
  %cmp197 = icmp slt i64 %137, 4, !dbg !4758
  br i1 %cmp197, label %for.body199, label %for.end243, !dbg !4759

for.body199:                                      ; preds = %for.cond196
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4760
  %arraydecay200 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4762
  %139 = load i64, i64* %i, align 8, !dbg !4763
  %add.ptr201 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay200, i64 %139, !dbg !4764
  call void @GetMagickPixelPacket(%struct._Image* %138, %struct._MagickPixelPacket* %add.ptr201), !dbg !4765
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4766
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4767
  %142 = load i16*, i16** %indexes, align 8, !dbg !4768
  %143 = load i64, i64* %i, align 8, !dbg !4769
  %add.ptr202 = getelementptr inbounds i16, i16* %142, i64 %143, !dbg !4770
  %arraydecay203 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4771
  %144 = load i64, i64* %i, align 8, !dbg !4772
  %add.ptr204 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay203, i64 %144, !dbg !4773
  call void @SetMagickPixelPacket(%struct._Image* %140, %struct._PixelPacket* %141, i16* %add.ptr202, %struct._MagickPixelPacket* %add.ptr204), !dbg !4774
  %145 = load i64, i64* %i, align 8, !dbg !4775
  %arrayidx205 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %145, !dbg !4776
  store float 1.000000e+00, float* %arrayidx205, align 4, !dbg !4777
  %146 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4778
  %matte206 = getelementptr inbounds %struct._Image, %struct._Image* %146, i32 0, i32 6, !dbg !4780
  %147 = load i32, i32* %matte206, align 8, !dbg !4780
  %cmp207 = icmp ne i32 %147, 0, !dbg !4781
  br i1 %cmp207, label %if.then209, label %if.end239, !dbg !4782

if.then209:                                       ; preds = %for.body199
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4783
  %opacity210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 3, !dbg !4783
  %149 = load i16, i16* %opacity210, align 2, !dbg !4783
  %conv211 = zext i16 %149 to i32, !dbg !4783
  %sub212 = sub nsw i32 65535, %conv211, !dbg !4783
  %conv213 = sitofp i32 %sub212 to float, !dbg !4785
  %conv214 = fpext float %conv213 to double, !dbg !4786
  %mul215 = fmul double 0x3EF0001000100010, %conv214, !dbg !4787
  %conv216 = fptrunc double %mul215 to float, !dbg !4788
  %150 = load i64, i64* %i, align 8, !dbg !4789
  %arrayidx217 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %150, !dbg !4790
  store float %conv216, float* %arrayidx217, align 4, !dbg !4791
  %151 = load i64, i64* %i, align 8, !dbg !4792
  %arrayidx218 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %151, !dbg !4793
  %152 = load float, float* %arrayidx218, align 4, !dbg !4793
  %153 = load i64, i64* %i, align 8, !dbg !4794
  %arrayidx219 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 %153, !dbg !4795
  %red220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx219, i32 0, i32 5, !dbg !4796
  %154 = load float, float* %red220, align 8, !dbg !4797
  %mul221 = fmul float %154, %152, !dbg !4797
  store float %mul221, float* %red220, align 8, !dbg !4797
  %155 = load i64, i64* %i, align 8, !dbg !4798
  %arrayidx222 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %155, !dbg !4799
  %156 = load float, float* %arrayidx222, align 4, !dbg !4799
  %157 = load i64, i64* %i, align 8, !dbg !4800
  %arrayidx223 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 %157, !dbg !4801
  %green224 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx223, i32 0, i32 6, !dbg !4802
  %158 = load float, float* %green224, align 4, !dbg !4803
  %mul225 = fmul float %158, %156, !dbg !4803
  store float %mul225, float* %green224, align 4, !dbg !4803
  %159 = load i64, i64* %i, align 8, !dbg !4804
  %arrayidx226 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %159, !dbg !4805
  %160 = load float, float* %arrayidx226, align 4, !dbg !4805
  %161 = load i64, i64* %i, align 8, !dbg !4806
  %arrayidx227 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 %161, !dbg !4807
  %blue228 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx227, i32 0, i32 7, !dbg !4808
  %162 = load float, float* %blue228, align 8, !dbg !4809
  %mul229 = fmul float %162, %160, !dbg !4809
  store float %mul229, float* %blue228, align 8, !dbg !4809
  %163 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4810
  %colorspace230 = getelementptr inbounds %struct._Image, %struct._Image* %163, i32 0, i32 1, !dbg !4812
  %164 = load i32, i32* %colorspace230, align 4, !dbg !4812
  %cmp231 = icmp eq i32 %164, 12, !dbg !4813
  br i1 %cmp231, label %if.then233, label %if.end238, !dbg !4814

if.then233:                                       ; preds = %if.then209
  %165 = load i64, i64* %i, align 8, !dbg !4815
  %arrayidx234 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 %165, !dbg !4816
  %166 = load float, float* %arrayidx234, align 4, !dbg !4816
  %167 = load i64, i64* %i, align 8, !dbg !4817
  %arrayidx235 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 %167, !dbg !4818
  %index236 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx235, i32 0, i32 9, !dbg !4819
  %168 = load float, float* %index236, align 8, !dbg !4820
  %mul237 = fmul float %168, %166, !dbg !4820
  store float %mul237, float* %index236, align 8, !dbg !4820
  br label %if.end238, !dbg !4818

if.end238:                                        ; preds = %if.then233, %if.then209
  br label %if.end239, !dbg !4821

if.end239:                                        ; preds = %if.end238, %for.body199
  %169 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4822
  %incdec.ptr240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %169, i32 1, !dbg !4822
  store %struct._PixelPacket* %incdec.ptr240, %struct._PixelPacket** %p, align 8, !dbg !4822
  br label %for.inc241, !dbg !4823

for.inc241:                                       ; preds = %if.end239
  %170 = load i64, i64* %i, align 8, !dbg !4824
  %inc242 = add nsw i64 %170, 1, !dbg !4824
  store i64 %inc242, i64* %i, align 8, !dbg !4824
  br label %for.cond196, !dbg !4825, !llvm.loop !4826

for.end243:                                       ; preds = %for.cond196
  %171 = load double, double* %x.addr, align 8, !dbg !4828
  %172 = load double, double* %x.addr, align 8, !dbg !4829
  %173 = call double @llvm.floor.f64(double %172), !dbg !4830
  %sub244 = fsub double %171, %173, !dbg !4831
  %x245 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4832
  store double %sub244, double* %x245, align 8, !dbg !4833
  %174 = load double, double* %y.addr, align 8, !dbg !4834
  %175 = load double, double* %y.addr, align 8, !dbg !4835
  %176 = call double @llvm.floor.f64(double %175), !dbg !4836
  %sub246 = fsub double %174, %176, !dbg !4837
  %y247 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4838
  store double %sub246, double* %y247, align 8, !dbg !4839
  %y248 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4840
  %177 = load double, double* %y248, align 8, !dbg !4840
  %sub249 = fsub double 1.000000e+00, %177, !dbg !4841
  %x250 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4842
  %178 = load double, double* %x250, align 8, !dbg !4842
  %sub251 = fsub double 1.000000e+00, %178, !dbg !4843
  %arrayidx252 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 0, !dbg !4844
  %179 = load float, float* %arrayidx252, align 16, !dbg !4844
  %conv253 = fpext float %179 to double, !dbg !4844
  %mul254 = fmul double %sub251, %conv253, !dbg !4845
  %x255 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4846
  %180 = load double, double* %x255, align 8, !dbg !4846
  %arrayidx256 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 1, !dbg !4847
  %181 = load float, float* %arrayidx256, align 4, !dbg !4847
  %conv257 = fpext float %181 to double, !dbg !4847
  %mul258 = fmul double %180, %conv257, !dbg !4848
  %add259 = fadd double %mul254, %mul258, !dbg !4849
  %mul260 = fmul double %sub249, %add259, !dbg !4850
  %y261 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4851
  %182 = load double, double* %y261, align 8, !dbg !4851
  %x262 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4852
  %183 = load double, double* %x262, align 8, !dbg !4852
  %sub263 = fsub double 1.000000e+00, %183, !dbg !4853
  %arrayidx264 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 2, !dbg !4854
  %184 = load float, float* %arrayidx264, align 8, !dbg !4854
  %conv265 = fpext float %184 to double, !dbg !4854
  %mul266 = fmul double %sub263, %conv265, !dbg !4855
  %x267 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4856
  %185 = load double, double* %x267, align 8, !dbg !4856
  %arrayidx268 = getelementptr inbounds [16 x float], [16 x float]* %alpha186, i64 0, i64 3, !dbg !4857
  %186 = load float, float* %arrayidx268, align 4, !dbg !4857
  %conv269 = fpext float %186 to double, !dbg !4857
  %mul270 = fmul double %185, %conv269, !dbg !4858
  %add271 = fadd double %mul266, %mul270, !dbg !4859
  %mul272 = fmul double %182, %add271, !dbg !4860
  %add273 = fadd double %mul260, %mul272, !dbg !4861
  store double %add273, double* %gamma184, align 8, !dbg !4862
  %187 = load double, double* %gamma184, align 8, !dbg !4863
  %cmp274 = fcmp olt double %187, 0.000000e+00, !dbg !4865
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !4866

if.then276:                                       ; preds = %for.end243
  store double 0.000000e+00, double* %gamma184, align 8, !dbg !4867
  br label %if.end277, !dbg !4868

if.end277:                                        ; preds = %if.then276, %for.end243
  %188 = load double, double* %gamma184, align 8, !dbg !4869
  %call278 = call double @PerceptibleReciprocal(double %188), !dbg !4870
  store double %call278, double* %gamma184, align 8, !dbg !4871
  %189 = load double, double* %gamma184, align 8, !dbg !4872
  %y279 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4873
  %190 = load double, double* %y279, align 8, !dbg !4873
  %sub280 = fsub double 1.000000e+00, %190, !dbg !4874
  %x281 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4875
  %191 = load double, double* %x281, align 8, !dbg !4875
  %sub282 = fsub double 1.000000e+00, %191, !dbg !4876
  %arrayidx283 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4877
  %red284 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx283, i32 0, i32 5, !dbg !4878
  %192 = load float, float* %red284, align 16, !dbg !4878
  %conv285 = fpext float %192 to double, !dbg !4877
  %mul286 = fmul double %sub282, %conv285, !dbg !4879
  %x287 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4880
  %193 = load double, double* %x287, align 8, !dbg !4880
  %arrayidx288 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 1, !dbg !4881
  %red289 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx288, i32 0, i32 5, !dbg !4882
  %194 = load float, float* %red289, align 8, !dbg !4882
  %conv290 = fpext float %194 to double, !dbg !4881
  %mul291 = fmul double %193, %conv290, !dbg !4883
  %add292 = fadd double %mul286, %mul291, !dbg !4884
  %mul293 = fmul double %sub280, %add292, !dbg !4885
  %y294 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4886
  %195 = load double, double* %y294, align 8, !dbg !4886
  %x295 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4887
  %196 = load double, double* %x295, align 8, !dbg !4887
  %sub296 = fsub double 1.000000e+00, %196, !dbg !4888
  %arrayidx297 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 2, !dbg !4889
  %red298 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx297, i32 0, i32 5, !dbg !4890
  %197 = load float, float* %red298, align 16, !dbg !4890
  %conv299 = fpext float %197 to double, !dbg !4889
  %mul300 = fmul double %sub296, %conv299, !dbg !4891
  %x301 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4892
  %198 = load double, double* %x301, align 8, !dbg !4892
  %arrayidx302 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 3, !dbg !4893
  %red303 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx302, i32 0, i32 5, !dbg !4894
  %199 = load float, float* %red303, align 8, !dbg !4894
  %conv304 = fpext float %199 to double, !dbg !4893
  %mul305 = fmul double %198, %conv304, !dbg !4895
  %add306 = fadd double %mul300, %mul305, !dbg !4896
  %mul307 = fmul double %195, %add306, !dbg !4897
  %add308 = fadd double %mul293, %mul307, !dbg !4898
  %mul309 = fmul double %189, %add308, !dbg !4899
  %conv310 = fptrunc double %mul309 to float, !dbg !4872
  %red311 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !4900
  store float %conv310, float* %red311, align 8, !dbg !4901
  %200 = load double, double* %gamma184, align 8, !dbg !4902
  %y312 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4903
  %201 = load double, double* %y312, align 8, !dbg !4903
  %sub313 = fsub double 1.000000e+00, %201, !dbg !4904
  %x314 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4905
  %202 = load double, double* %x314, align 8, !dbg !4905
  %sub315 = fsub double 1.000000e+00, %202, !dbg !4906
  %arrayidx316 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4907
  %green317 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx316, i32 0, i32 6, !dbg !4908
  %203 = load float, float* %green317, align 4, !dbg !4908
  %conv318 = fpext float %203 to double, !dbg !4907
  %mul319 = fmul double %sub315, %conv318, !dbg !4909
  %x320 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4910
  %204 = load double, double* %x320, align 8, !dbg !4910
  %arrayidx321 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 1, !dbg !4911
  %green322 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx321, i32 0, i32 6, !dbg !4912
  %205 = load float, float* %green322, align 4, !dbg !4912
  %conv323 = fpext float %205 to double, !dbg !4911
  %mul324 = fmul double %204, %conv323, !dbg !4913
  %add325 = fadd double %mul319, %mul324, !dbg !4914
  %mul326 = fmul double %sub313, %add325, !dbg !4915
  %y327 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4916
  %206 = load double, double* %y327, align 8, !dbg !4916
  %x328 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4917
  %207 = load double, double* %x328, align 8, !dbg !4917
  %sub329 = fsub double 1.000000e+00, %207, !dbg !4918
  %arrayidx330 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 2, !dbg !4919
  %green331 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx330, i32 0, i32 6, !dbg !4920
  %208 = load float, float* %green331, align 4, !dbg !4920
  %conv332 = fpext float %208 to double, !dbg !4919
  %mul333 = fmul double %sub329, %conv332, !dbg !4921
  %x334 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4922
  %209 = load double, double* %x334, align 8, !dbg !4922
  %arrayidx335 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 3, !dbg !4923
  %green336 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx335, i32 0, i32 6, !dbg !4924
  %210 = load float, float* %green336, align 4, !dbg !4924
  %conv337 = fpext float %210 to double, !dbg !4923
  %mul338 = fmul double %209, %conv337, !dbg !4925
  %add339 = fadd double %mul333, %mul338, !dbg !4926
  %mul340 = fmul double %206, %add339, !dbg !4927
  %add341 = fadd double %mul326, %mul340, !dbg !4928
  %mul342 = fmul double %200, %add341, !dbg !4929
  %conv343 = fptrunc double %mul342 to float, !dbg !4902
  %green344 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !4930
  store float %conv343, float* %green344, align 4, !dbg !4931
  %211 = load double, double* %gamma184, align 8, !dbg !4932
  %y345 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4933
  %212 = load double, double* %y345, align 8, !dbg !4933
  %sub346 = fsub double 1.000000e+00, %212, !dbg !4934
  %x347 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4935
  %213 = load double, double* %x347, align 8, !dbg !4935
  %sub348 = fsub double 1.000000e+00, %213, !dbg !4936
  %arrayidx349 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4937
  %blue350 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx349, i32 0, i32 7, !dbg !4938
  %214 = load float, float* %blue350, align 8, !dbg !4938
  %conv351 = fpext float %214 to double, !dbg !4937
  %mul352 = fmul double %sub348, %conv351, !dbg !4939
  %x353 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4940
  %215 = load double, double* %x353, align 8, !dbg !4940
  %arrayidx354 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 1, !dbg !4941
  %blue355 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx354, i32 0, i32 7, !dbg !4942
  %216 = load float, float* %blue355, align 8, !dbg !4942
  %conv356 = fpext float %216 to double, !dbg !4941
  %mul357 = fmul double %215, %conv356, !dbg !4943
  %add358 = fadd double %mul352, %mul357, !dbg !4944
  %mul359 = fmul double %sub346, %add358, !dbg !4945
  %y360 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4946
  %217 = load double, double* %y360, align 8, !dbg !4946
  %x361 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4947
  %218 = load double, double* %x361, align 8, !dbg !4947
  %sub362 = fsub double 1.000000e+00, %218, !dbg !4948
  %arrayidx363 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 2, !dbg !4949
  %blue364 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx363, i32 0, i32 7, !dbg !4950
  %219 = load float, float* %blue364, align 8, !dbg !4950
  %conv365 = fpext float %219 to double, !dbg !4949
  %mul366 = fmul double %sub362, %conv365, !dbg !4951
  %x367 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4952
  %220 = load double, double* %x367, align 8, !dbg !4952
  %arrayidx368 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 3, !dbg !4953
  %blue369 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx368, i32 0, i32 7, !dbg !4954
  %221 = load float, float* %blue369, align 8, !dbg !4954
  %conv370 = fpext float %221 to double, !dbg !4953
  %mul371 = fmul double %220, %conv370, !dbg !4955
  %add372 = fadd double %mul366, %mul371, !dbg !4956
  %mul373 = fmul double %217, %add372, !dbg !4957
  %add374 = fadd double %mul359, %mul373, !dbg !4958
  %mul375 = fmul double %211, %add374, !dbg !4959
  %conv376 = fptrunc double %mul375 to float, !dbg !4932
  %blue377 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !4960
  store float %conv376, float* %blue377, align 8, !dbg !4961
  %y378 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4962
  %222 = load double, double* %y378, align 8, !dbg !4962
  %sub379 = fsub double 1.000000e+00, %222, !dbg !4963
  %x380 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4964
  %223 = load double, double* %x380, align 8, !dbg !4964
  %sub381 = fsub double 1.000000e+00, %223, !dbg !4965
  %arrayidx382 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !4966
  %opacity383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx382, i32 0, i32 8, !dbg !4967
  %224 = load float, float* %opacity383, align 4, !dbg !4967
  %conv384 = fpext float %224 to double, !dbg !4966
  %mul385 = fmul double %sub381, %conv384, !dbg !4968
  %x386 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4969
  %225 = load double, double* %x386, align 8, !dbg !4969
  %arrayidx387 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 1, !dbg !4970
  %opacity388 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx387, i32 0, i32 8, !dbg !4971
  %226 = load float, float* %opacity388, align 4, !dbg !4971
  %conv389 = fpext float %226 to double, !dbg !4970
  %mul390 = fmul double %225, %conv389, !dbg !4972
  %add391 = fadd double %mul385, %mul390, !dbg !4973
  %mul392 = fmul double %sub379, %add391, !dbg !4974
  %y393 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4975
  %227 = load double, double* %y393, align 8, !dbg !4975
  %x394 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4976
  %228 = load double, double* %x394, align 8, !dbg !4976
  %sub395 = fsub double 1.000000e+00, %228, !dbg !4977
  %arrayidx396 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 2, !dbg !4978
  %opacity397 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx396, i32 0, i32 8, !dbg !4979
  %229 = load float, float* %opacity397, align 4, !dbg !4979
  %conv398 = fpext float %229 to double, !dbg !4978
  %mul399 = fmul double %sub395, %conv398, !dbg !4980
  %x400 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4981
  %230 = load double, double* %x400, align 8, !dbg !4981
  %arrayidx401 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 3, !dbg !4982
  %opacity402 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx401, i32 0, i32 8, !dbg !4983
  %231 = load float, float* %opacity402, align 4, !dbg !4983
  %conv403 = fpext float %231 to double, !dbg !4982
  %mul404 = fmul double %230, %conv403, !dbg !4984
  %add405 = fadd double %mul399, %mul404, !dbg !4985
  %mul406 = fmul double %227, %add405, !dbg !4986
  %add407 = fadd double %mul392, %mul406, !dbg !4987
  %conv408 = fptrunc double %add407 to float, !dbg !4988
  %opacity409 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !4989
  store float %conv408, float* %opacity409, align 4, !dbg !4990
  %232 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4991
  %colorspace410 = getelementptr inbounds %struct._Image, %struct._Image* %232, i32 0, i32 1, !dbg !4993
  %233 = load i32, i32* %colorspace410, align 4, !dbg !4993
  %cmp411 = icmp eq i32 %233, 12, !dbg !4994
  br i1 %cmp411, label %if.then413, label %if.end447, !dbg !4995

if.then413:                                       ; preds = %if.end277
  %234 = load double, double* %gamma184, align 8, !dbg !4996
  %y414 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !4997
  %235 = load double, double* %y414, align 8, !dbg !4997
  %sub415 = fsub double 1.000000e+00, %235, !dbg !4998
  %x416 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !4999
  %236 = load double, double* %x416, align 8, !dbg !4999
  %sub417 = fsub double 1.000000e+00, %236, !dbg !5000
  %arrayidx418 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 0, !dbg !5001
  %index419 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx418, i32 0, i32 9, !dbg !5002
  %237 = load float, float* %index419, align 16, !dbg !5002
  %conv420 = fpext float %237 to double, !dbg !5001
  %mul421 = fmul double %sub417, %conv420, !dbg !5003
  %x422 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !5004
  %238 = load double, double* %x422, align 8, !dbg !5004
  %arrayidx423 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 1, !dbg !5005
  %index424 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx423, i32 0, i32 9, !dbg !5006
  %239 = load float, float* %index424, align 8, !dbg !5006
  %conv425 = fpext float %239 to double, !dbg !5005
  %mul426 = fmul double %238, %conv425, !dbg !5007
  %add427 = fadd double %mul421, %mul426, !dbg !5008
  %mul428 = fmul double %sub415, %add427, !dbg !5009
  %y429 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 1, !dbg !5010
  %240 = load double, double* %y429, align 8, !dbg !5010
  %x430 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !5011
  %241 = load double, double* %x430, align 8, !dbg !5011
  %sub431 = fsub double 1.000000e+00, %241, !dbg !5012
  %arrayidx432 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 2, !dbg !5013
  %index433 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx432, i32 0, i32 9, !dbg !5014
  %242 = load float, float* %index433, align 16, !dbg !5014
  %conv434 = fpext float %242 to double, !dbg !5013
  %mul435 = fmul double %sub431, %conv434, !dbg !5015
  %x436 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta187, i32 0, i32 0, !dbg !5016
  %243 = load double, double* %x436, align 8, !dbg !5016
  %arrayidx437 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels185, i64 0, i64 3, !dbg !5017
  %index438 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx437, i32 0, i32 9, !dbg !5018
  %244 = load float, float* %index438, align 8, !dbg !5018
  %conv439 = fpext float %244 to double, !dbg !5017
  %mul440 = fmul double %243, %conv439, !dbg !5019
  %add441 = fadd double %mul435, %mul440, !dbg !5020
  %mul442 = fmul double %240, %add441, !dbg !5021
  %add443 = fadd double %mul428, %mul442, !dbg !5022
  %mul444 = fmul double %234, %add443, !dbg !5023
  %conv445 = fptrunc double %mul444 to float, !dbg !4996
  %index446 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5024
  store float %conv445, float* %index446, align 8, !dbg !5025
  br label %if.end447, !dbg !5026

if.end447:                                        ; preds = %if.then413, %if.end277
  br label %sw.epilog, !dbg !5027

sw.bb448:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct._Image** %excerpt_image, metadata !5028, metadata !DIExpression()), !dbg !5030
  call void @llvm.dbg.declare(metadata %struct._Image** %filter_image, metadata !5031, metadata !DIExpression()), !dbg !5032
  call void @llvm.dbg.declare(metadata [1 x %struct._MagickPixelPacket]* %pixels449, metadata !5033, metadata !DIExpression()), !dbg !5035
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %geometry, metadata !5036, metadata !DIExpression()), !dbg !5037
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 0, !dbg !5038
  store i64 4, i64* %width, align 8, !dbg !5039
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 1, !dbg !5040
  store i64 4, i64* %height, align 8, !dbg !5041
  %245 = load double, double* %x.addr, align 8, !dbg !5042
  %246 = call double @llvm.floor.f64(double %245), !dbg !5043
  %conv450 = fptosi double %246 to i64, !dbg !5044
  %sub451 = sub nsw i64 %conv450, 1, !dbg !5045
  %x452 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 2, !dbg !5046
  store i64 %sub451, i64* %x452, align 8, !dbg !5047
  %247 = load double, double* %y.addr, align 8, !dbg !5048
  %248 = call double @llvm.floor.f64(double %247), !dbg !5049
  %conv453 = fptosi double %248 to i64, !dbg !5050
  %sub454 = sub nsw i64 %conv453, 1, !dbg !5051
  %y455 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry, i32 0, i32 3, !dbg !5052
  store i64 %sub454, i64* %y455, align 8, !dbg !5053
  %249 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5054
  %250 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5055
  %call456 = call %struct._Image* @ExcerptImage(%struct._Image* %249, %struct._RectangleInfo* %geometry, %struct._ExceptionInfo* %250), !dbg !5056
  store %struct._Image* %call456, %struct._Image** %excerpt_image, align 8, !dbg !5057
  %251 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !5058
  %cmp457 = icmp eq %struct._Image* %251, null, !dbg !5060
  br i1 %cmp457, label %if.then459, label %if.end460, !dbg !5061

if.then459:                                       ; preds = %sw.bb448
  br label %sw.epilog, !dbg !5062

if.end460:                                        ; preds = %sw.bb448
  %252 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !5063
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5064
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %253, i32 0, i32 32, !dbg !5065
  %254 = load i32, i32* %filter, align 8, !dbg !5065
  %255 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5066
  %blur = getelementptr inbounds %struct._Image, %struct._Image* %255, i32 0, i32 30, !dbg !5067
  %256 = load double, double* %blur, align 8, !dbg !5067
  %257 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5068
  %call461 = call %struct._Image* @ResizeImage(%struct._Image* %252, i64 1, i64 1, i32 %254, double %256, %struct._ExceptionInfo* %257), !dbg !5069
  store %struct._Image* %call461, %struct._Image** %filter_image, align 8, !dbg !5070
  %258 = load %struct._Image*, %struct._Image** %excerpt_image, align 8, !dbg !5071
  %call462 = call %struct._Image* @DestroyImage(%struct._Image* %258), !dbg !5072
  store %struct._Image* %call462, %struct._Image** %excerpt_image, align 8, !dbg !5073
  %259 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !5074
  %cmp463 = icmp eq %struct._Image* %259, null, !dbg !5076
  br i1 %cmp463, label %if.then465, label %if.end466, !dbg !5077

if.then465:                                       ; preds = %if.end460
  br label %sw.epilog, !dbg !5078

if.end466:                                        ; preds = %if.end460
  %260 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !5079
  %261 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5080
  %call467 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %260, i64 0, i64 0, i64 1, i64 1, %struct._ExceptionInfo* %261), !dbg !5081
  store %struct._PixelPacket* %call467, %struct._PixelPacket** %p, align 8, !dbg !5082
  %262 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5083
  %cmp468 = icmp eq %struct._PixelPacket* %262, null, !dbg !5085
  br i1 %cmp468, label %if.then470, label %if.end472, !dbg !5086

if.then470:                                       ; preds = %if.end466
  %263 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !5087
  %call471 = call %struct._Image* @DestroyImage(%struct._Image* %263), !dbg !5089
  store %struct._Image* %call471, %struct._Image** %filter_image, align 8, !dbg !5090
  br label %sw.epilog, !dbg !5091

if.end472:                                        ; preds = %if.end466
  %264 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !5092
  %call473 = call i16* @GetVirtualIndexQueue(%struct._Image* %264), !dbg !5093
  store i16* %call473, i16** %indexes, align 8, !dbg !5094
  %265 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5095
  %arraydecay474 = getelementptr inbounds [1 x %struct._MagickPixelPacket], [1 x %struct._MagickPixelPacket]* %pixels449, i64 0, i64 0, !dbg !5096
  call void @GetMagickPixelPacket(%struct._Image* %265, %struct._MagickPixelPacket* %arraydecay474), !dbg !5097
  %266 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5098
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5099
  %268 = load i16*, i16** %indexes, align 8, !dbg !5100
  call void @SetMagickPixelPacket(%struct._Image* %266, %struct._PixelPacket* %267, i16* %268, %struct._MagickPixelPacket* %agg.result), !dbg !5101
  %269 = load %struct._Image*, %struct._Image** %filter_image, align 8, !dbg !5102
  %call475 = call %struct._Image* @DestroyImage(%struct._Image* %269), !dbg !5103
  store %struct._Image* %call475, %struct._Image** %filter_image, align 8, !dbg !5104
  br label %sw.epilog, !dbg !5105

sw.bb476:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct._MagickPixelPacket]* %pixels477, metadata !5106, metadata !DIExpression()), !dbg !5108
  %270 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5109
  %271 = load double, double* %x.addr, align 8, !dbg !5110
  %272 = call double @llvm.floor.f64(double %271), !dbg !5111
  %conv478 = fptosi double %272 to i64, !dbg !5112
  %273 = load double, double* %y.addr, align 8, !dbg !5113
  %274 = call double @llvm.floor.f64(double %273), !dbg !5114
  %conv479 = fptosi double %274 to i64, !dbg !5115
  %275 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5116
  %call480 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %270, i64 %conv478, i64 %conv479, i64 1, i64 1, %struct._ExceptionInfo* %275), !dbg !5117
  store %struct._PixelPacket* %call480, %struct._PixelPacket** %p, align 8, !dbg !5118
  %276 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5119
  %cmp481 = icmp eq %struct._PixelPacket* %276, null, !dbg !5121
  br i1 %cmp481, label %if.then483, label %if.end484, !dbg !5122

if.then483:                                       ; preds = %sw.bb476
  br label %sw.epilog, !dbg !5123

if.end484:                                        ; preds = %sw.bb476
  %277 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5124
  %call485 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %277), !dbg !5125
  store i16* %call485, i16** %indexes, align 8, !dbg !5126
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5127
  %arraydecay486 = getelementptr inbounds [1 x %struct._MagickPixelPacket], [1 x %struct._MagickPixelPacket]* %pixels477, i64 0, i64 0, !dbg !5128
  call void @GetMagickPixelPacket(%struct._Image* %278, %struct._MagickPixelPacket* %arraydecay486), !dbg !5129
  %279 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5130
  %280 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5131
  %281 = load i16*, i16** %indexes, align 8, !dbg !5132
  call void @SetMagickPixelPacket(%struct._Image* %279, %struct._PixelPacket* %280, i16* %281, %struct._MagickPixelPacket* %agg.result), !dbg !5133
  br label %sw.epilog, !dbg !5134

sw.bb487:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %gamma488, metadata !5135, metadata !DIExpression()), !dbg !5137
  call void @llvm.dbg.declare(metadata [4 x %struct._MagickPixelPacket]* %pixels489, metadata !5138, metadata !DIExpression()), !dbg !5139
  call void @llvm.dbg.declare(metadata [4 x float]* %alpha490, metadata !5140, metadata !DIExpression()), !dbg !5141
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta491, metadata !5142, metadata !DIExpression()), !dbg !5143
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %luminance, metadata !5144, metadata !DIExpression()), !dbg !5145
  %282 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5146
  %283 = load double, double* %x.addr, align 8, !dbg !5147
  %284 = call double @llvm.floor.f64(double %283), !dbg !5148
  %conv492 = fptosi double %284 to i64, !dbg !5149
  %285 = load double, double* %y.addr, align 8, !dbg !5150
  %286 = call double @llvm.floor.f64(double %285), !dbg !5151
  %conv493 = fptosi double %286 to i64, !dbg !5152
  %287 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5153
  %call494 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %282, i64 %conv492, i64 %conv493, i64 2, i64 2, %struct._ExceptionInfo* %287), !dbg !5154
  store %struct._PixelPacket* %call494, %struct._PixelPacket** %p, align 8, !dbg !5155
  %288 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5156
  %cmp495 = icmp eq %struct._PixelPacket* %288, null, !dbg !5158
  br i1 %cmp495, label %if.then497, label %if.end498, !dbg !5159

if.then497:                                       ; preds = %sw.bb487
  br label %sw.epilog, !dbg !5160

if.end498:                                        ; preds = %sw.bb487
  %289 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5161
  %call499 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %289), !dbg !5162
  store i16* %call499, i16** %indexes, align 8, !dbg !5163
  store i64 0, i64* %i, align 8, !dbg !5164
  br label %for.cond500, !dbg !5166

for.cond500:                                      ; preds = %for.inc545, %if.end498
  %290 = load i64, i64* %i, align 8, !dbg !5167
  %cmp501 = icmp slt i64 %290, 4, !dbg !5169
  br i1 %cmp501, label %for.body503, label %for.end547, !dbg !5170

for.body503:                                      ; preds = %for.cond500
  %291 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5171
  %arraydecay504 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5173
  %292 = load i64, i64* %i, align 8, !dbg !5174
  %add.ptr505 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay504, i64 %292, !dbg !5175
  call void @GetMagickPixelPacket(%struct._Image* %291, %struct._MagickPixelPacket* %add.ptr505), !dbg !5176
  %293 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5177
  %294 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5178
  %295 = load i16*, i16** %indexes, align 8, !dbg !5179
  %296 = load i64, i64* %i, align 8, !dbg !5180
  %add.ptr506 = getelementptr inbounds i16, i16* %295, i64 %296, !dbg !5181
  %arraydecay507 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5182
  %297 = load i64, i64* %i, align 8, !dbg !5183
  %add.ptr508 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay507, i64 %297, !dbg !5184
  call void @SetMagickPixelPacket(%struct._Image* %293, %struct._PixelPacket* %294, i16* %add.ptr506, %struct._MagickPixelPacket* %add.ptr508), !dbg !5185
  %298 = load i64, i64* %i, align 8, !dbg !5186
  %arrayidx509 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %298, !dbg !5187
  store float 1.000000e+00, float* %arrayidx509, align 4, !dbg !5188
  %299 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5189
  %matte510 = getelementptr inbounds %struct._Image, %struct._Image* %299, i32 0, i32 6, !dbg !5191
  %300 = load i32, i32* %matte510, align 8, !dbg !5191
  %cmp511 = icmp ne i32 %300, 0, !dbg !5192
  br i1 %cmp511, label %if.then513, label %if.end543, !dbg !5193

if.then513:                                       ; preds = %for.body503
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5194
  %opacity514 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 3, !dbg !5194
  %302 = load i16, i16* %opacity514, align 2, !dbg !5194
  %conv515 = zext i16 %302 to i32, !dbg !5194
  %sub516 = sub nsw i32 65535, %conv515, !dbg !5194
  %conv517 = sitofp i32 %sub516 to float, !dbg !5196
  %conv518 = fpext float %conv517 to double, !dbg !5197
  %mul519 = fmul double 0x3EF0001000100010, %conv518, !dbg !5198
  %conv520 = fptrunc double %mul519 to float, !dbg !5199
  %303 = load i64, i64* %i, align 8, !dbg !5200
  %arrayidx521 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %303, !dbg !5201
  store float %conv520, float* %arrayidx521, align 4, !dbg !5202
  %304 = load i64, i64* %i, align 8, !dbg !5203
  %arrayidx522 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %304, !dbg !5204
  %305 = load float, float* %arrayidx522, align 4, !dbg !5204
  %306 = load i64, i64* %i, align 8, !dbg !5205
  %arrayidx523 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 %306, !dbg !5206
  %red524 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx523, i32 0, i32 5, !dbg !5207
  %307 = load float, float* %red524, align 8, !dbg !5208
  %mul525 = fmul float %307, %305, !dbg !5208
  store float %mul525, float* %red524, align 8, !dbg !5208
  %308 = load i64, i64* %i, align 8, !dbg !5209
  %arrayidx526 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %308, !dbg !5210
  %309 = load float, float* %arrayidx526, align 4, !dbg !5210
  %310 = load i64, i64* %i, align 8, !dbg !5211
  %arrayidx527 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 %310, !dbg !5212
  %green528 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx527, i32 0, i32 6, !dbg !5213
  %311 = load float, float* %green528, align 4, !dbg !5214
  %mul529 = fmul float %311, %309, !dbg !5214
  store float %mul529, float* %green528, align 4, !dbg !5214
  %312 = load i64, i64* %i, align 8, !dbg !5215
  %arrayidx530 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %312, !dbg !5216
  %313 = load float, float* %arrayidx530, align 4, !dbg !5216
  %314 = load i64, i64* %i, align 8, !dbg !5217
  %arrayidx531 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 %314, !dbg !5218
  %blue532 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx531, i32 0, i32 7, !dbg !5219
  %315 = load float, float* %blue532, align 8, !dbg !5220
  %mul533 = fmul float %315, %313, !dbg !5220
  store float %mul533, float* %blue532, align 8, !dbg !5220
  %316 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5221
  %colorspace534 = getelementptr inbounds %struct._Image, %struct._Image* %316, i32 0, i32 1, !dbg !5223
  %317 = load i32, i32* %colorspace534, align 4, !dbg !5223
  %cmp535 = icmp eq i32 %317, 12, !dbg !5224
  br i1 %cmp535, label %if.then537, label %if.end542, !dbg !5225

if.then537:                                       ; preds = %if.then513
  %318 = load i64, i64* %i, align 8, !dbg !5226
  %arrayidx538 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 %318, !dbg !5227
  %319 = load float, float* %arrayidx538, align 4, !dbg !5227
  %320 = load i64, i64* %i, align 8, !dbg !5228
  %arrayidx539 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 %320, !dbg !5229
  %index540 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx539, i32 0, i32 9, !dbg !5230
  %321 = load float, float* %index540, align 8, !dbg !5231
  %mul541 = fmul float %321, %319, !dbg !5231
  store float %mul541, float* %index540, align 8, !dbg !5231
  br label %if.end542, !dbg !5229

if.end542:                                        ; preds = %if.then537, %if.then513
  br label %if.end543, !dbg !5232

if.end543:                                        ; preds = %if.end542, %for.body503
  %322 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5233
  %incdec.ptr544 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %322, i32 1, !dbg !5233
  store %struct._PixelPacket* %incdec.ptr544, %struct._PixelPacket** %p, align 8, !dbg !5233
  br label %for.inc545, !dbg !5234

for.inc545:                                       ; preds = %if.end543
  %323 = load i64, i64* %i, align 8, !dbg !5235
  %inc546 = add nsw i64 %323, 1, !dbg !5235
  store i64 %inc546, i64* %i, align 8, !dbg !5235
  br label %for.cond500, !dbg !5236, !llvm.loop !5237

for.end547:                                       ; preds = %for.cond500
  %324 = load double, double* %x.addr, align 8, !dbg !5239
  %325 = load double, double* %x.addr, align 8, !dbg !5240
  %326 = call double @llvm.floor.f64(double %325), !dbg !5241
  %sub548 = fsub double %324, %326, !dbg !5242
  %x549 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5243
  store double %sub548, double* %x549, align 8, !dbg !5244
  %327 = load double, double* %y.addr, align 8, !dbg !5245
  %328 = load double, double* %y.addr, align 8, !dbg !5246
  %329 = call double @llvm.floor.f64(double %328), !dbg !5247
  %sub550 = fsub double %327, %329, !dbg !5248
  %y551 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5249
  store double %sub550, double* %y551, align 8, !dbg !5250
  %arraydecay552 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5251
  %add.ptr553 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay552, i64 0, !dbg !5252
  %call554 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr553), !dbg !5253
  %arraydecay555 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5254
  %add.ptr556 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay555, i64 3, !dbg !5255
  %call557 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr556), !dbg !5256
  %sub558 = fsub float %call554, %call557, !dbg !5257
  %conv559 = fpext float %sub558 to double, !dbg !5253
  %x560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luminance, i32 0, i32 0, !dbg !5258
  store double %conv559, double* %x560, align 8, !dbg !5259
  %arraydecay561 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5260
  %add.ptr562 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay561, i64 1, !dbg !5261
  %call563 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr562), !dbg !5262
  %arraydecay564 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5263
  %add.ptr565 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay564, i64 2, !dbg !5264
  %call566 = call float @MagickPixelLuma(%struct._MagickPixelPacket* %add.ptr565), !dbg !5265
  %sub567 = fsub float %call563, %call566, !dbg !5266
  %conv568 = fpext float %sub567 to double, !dbg !5262
  %y569 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luminance, i32 0, i32 1, !dbg !5267
  store double %conv568, double* %y569, align 8, !dbg !5268
  %x570 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luminance, i32 0, i32 0, !dbg !5269
  %330 = load double, double* %x570, align 8, !dbg !5269
  %331 = call double @llvm.fabs.f64(double %330), !dbg !5271
  %y571 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %luminance, i32 0, i32 1, !dbg !5272
  %332 = load double, double* %y571, align 8, !dbg !5272
  %333 = call double @llvm.fabs.f64(double %332), !dbg !5273
  %cmp572 = fcmp olt double %331, %333, !dbg !5274
  br i1 %cmp572, label %if.then574, label %if.else751, !dbg !5275

if.then574:                                       ; preds = %for.end547
  %x575 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5276
  %334 = load double, double* %x575, align 8, !dbg !5276
  %y576 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5279
  %335 = load double, double* %y576, align 8, !dbg !5279
  %cmp577 = fcmp ole double %334, %335, !dbg !5280
  br i1 %cmp577, label %if.then579, label %if.else, !dbg !5281

if.then579:                                       ; preds = %if.then574
  %y580 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5282
  %336 = load double, double* %y580, align 8, !dbg !5282
  %sub581 = fsub double 1.000000e+00, %336, !dbg !5284
  %y582 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5285
  store double %sub581, double* %y582, align 8, !dbg !5286
  %arrayidx583 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 2, !dbg !5287
  %337 = load float, float* %arrayidx583, align 8, !dbg !5287
  %conv584 = fpext float %337 to double, !dbg !5287
  %arrayidx585 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 3, !dbg !5288
  %338 = load float, float* %arrayidx585, align 4, !dbg !5288
  %conv586 = fpext float %338 to double, !dbg !5288
  %arrayidx587 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 0, !dbg !5289
  %339 = load float, float* %arrayidx587, align 16, !dbg !5289
  %conv588 = fpext float %339 to double, !dbg !5289
  %call589 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv584, double %conv586, double %conv588), !dbg !5290
  store double %call589, double* %gamma488, align 8, !dbg !5291
  %340 = load double, double* %gamma488, align 8, !dbg !5292
  %cmp590 = fcmp olt double %340, 0.000000e+00, !dbg !5294
  br i1 %cmp590, label %if.then592, label %if.end593, !dbg !5295

if.then592:                                       ; preds = %if.then579
  store double 0.000000e+00, double* %gamma488, align 8, !dbg !5296
  br label %if.end593, !dbg !5297

if.end593:                                        ; preds = %if.then592, %if.then579
  %341 = load double, double* %gamma488, align 8, !dbg !5298
  %call594 = call double @PerceptibleReciprocal(double %341), !dbg !5299
  store double %call594, double* %gamma488, align 8, !dbg !5300
  %342 = load double, double* %gamma488, align 8, !dbg !5301
  %arrayidx595 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5302
  %red596 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx595, i32 0, i32 5, !dbg !5303
  %343 = load float, float* %red596, align 16, !dbg !5303
  %conv597 = fpext float %343 to double, !dbg !5302
  %arrayidx598 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5304
  %red599 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx598, i32 0, i32 5, !dbg !5305
  %344 = load float, float* %red599, align 8, !dbg !5305
  %conv600 = fpext float %344 to double, !dbg !5304
  %arrayidx601 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5306
  %red602 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx601, i32 0, i32 5, !dbg !5307
  %345 = load float, float* %red602, align 16, !dbg !5307
  %conv603 = fpext float %345 to double, !dbg !5306
  %call604 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv597, double %conv600, double %conv603), !dbg !5308
  %mul605 = fmul double %342, %call604, !dbg !5309
  %conv606 = fptrunc double %mul605 to float, !dbg !5301
  %red607 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !5310
  store float %conv606, float* %red607, align 8, !dbg !5311
  %346 = load double, double* %gamma488, align 8, !dbg !5312
  %arrayidx608 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5313
  %green609 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx608, i32 0, i32 6, !dbg !5314
  %347 = load float, float* %green609, align 4, !dbg !5314
  %conv610 = fpext float %347 to double, !dbg !5313
  %arrayidx611 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5315
  %green612 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx611, i32 0, i32 6, !dbg !5316
  %348 = load float, float* %green612, align 4, !dbg !5316
  %conv613 = fpext float %348 to double, !dbg !5315
  %arrayidx614 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5317
  %green615 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx614, i32 0, i32 6, !dbg !5318
  %349 = load float, float* %green615, align 4, !dbg !5318
  %conv616 = fpext float %349 to double, !dbg !5317
  %call617 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv610, double %conv613, double %conv616), !dbg !5319
  %mul618 = fmul double %346, %call617, !dbg !5320
  %conv619 = fptrunc double %mul618 to float, !dbg !5312
  %green620 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !5321
  store float %conv619, float* %green620, align 4, !dbg !5322
  %350 = load double, double* %gamma488, align 8, !dbg !5323
  %arrayidx621 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5324
  %blue622 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx621, i32 0, i32 7, !dbg !5325
  %351 = load float, float* %blue622, align 8, !dbg !5325
  %conv623 = fpext float %351 to double, !dbg !5324
  %arrayidx624 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5326
  %blue625 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx624, i32 0, i32 7, !dbg !5327
  %352 = load float, float* %blue625, align 8, !dbg !5327
  %conv626 = fpext float %352 to double, !dbg !5326
  %arrayidx627 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5328
  %blue628 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx627, i32 0, i32 7, !dbg !5329
  %353 = load float, float* %blue628, align 8, !dbg !5329
  %conv629 = fpext float %353 to double, !dbg !5328
  %call630 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv623, double %conv626, double %conv629), !dbg !5330
  %mul631 = fmul double %350, %call630, !dbg !5331
  %conv632 = fptrunc double %mul631 to float, !dbg !5323
  %blue633 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !5332
  store float %conv632, float* %blue633, align 8, !dbg !5333
  %354 = load double, double* %gamma488, align 8, !dbg !5334
  %arrayidx634 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5335
  %opacity635 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx634, i32 0, i32 8, !dbg !5336
  %355 = load float, float* %opacity635, align 4, !dbg !5336
  %conv636 = fpext float %355 to double, !dbg !5335
  %arrayidx637 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5337
  %opacity638 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx637, i32 0, i32 8, !dbg !5338
  %356 = load float, float* %opacity638, align 4, !dbg !5338
  %conv639 = fpext float %356 to double, !dbg !5337
  %arrayidx640 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5339
  %opacity641 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx640, i32 0, i32 8, !dbg !5340
  %357 = load float, float* %opacity641, align 4, !dbg !5340
  %conv642 = fpext float %357 to double, !dbg !5339
  %call643 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv636, double %conv639, double %conv642), !dbg !5341
  %mul644 = fmul double %354, %call643, !dbg !5342
  %conv645 = fptrunc double %mul644 to float, !dbg !5334
  %opacity646 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !5343
  store float %conv645, float* %opacity646, align 4, !dbg !5344
  %358 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5345
  %colorspace647 = getelementptr inbounds %struct._Image, %struct._Image* %358, i32 0, i32 1, !dbg !5347
  %359 = load i32, i32* %colorspace647, align 4, !dbg !5347
  %cmp648 = icmp eq i32 %359, 12, !dbg !5348
  br i1 %cmp648, label %if.then650, label %if.end664, !dbg !5349

if.then650:                                       ; preds = %if.end593
  %360 = load double, double* %gamma488, align 8, !dbg !5350
  %arrayidx651 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5351
  %index652 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx651, i32 0, i32 9, !dbg !5352
  %361 = load float, float* %index652, align 16, !dbg !5352
  %conv653 = fpext float %361 to double, !dbg !5351
  %arrayidx654 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5353
  %index655 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx654, i32 0, i32 9, !dbg !5354
  %362 = load float, float* %index655, align 8, !dbg !5354
  %conv656 = fpext float %362 to double, !dbg !5353
  %arrayidx657 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5355
  %index658 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx657, i32 0, i32 9, !dbg !5356
  %363 = load float, float* %index658, align 16, !dbg !5356
  %conv659 = fpext float %363 to double, !dbg !5355
  %call660 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv653, double %conv656, double %conv659), !dbg !5357
  %mul661 = fmul double %360, %call660, !dbg !5358
  %conv662 = fptrunc double %mul661 to float, !dbg !5350
  %index663 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5359
  store float %conv662, float* %index663, align 8, !dbg !5360
  br label %if.end664, !dbg !5361

if.end664:                                        ; preds = %if.then650, %if.end593
  br label %if.end750, !dbg !5362

if.else:                                          ; preds = %if.then574
  %x665 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5363
  %364 = load double, double* %x665, align 8, !dbg !5363
  %sub666 = fsub double 1.000000e+00, %364, !dbg !5365
  %x667 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5366
  store double %sub666, double* %x667, align 8, !dbg !5367
  %arrayidx668 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 1, !dbg !5368
  %365 = load float, float* %arrayidx668, align 4, !dbg !5368
  %conv669 = fpext float %365 to double, !dbg !5368
  %arrayidx670 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 0, !dbg !5369
  %366 = load float, float* %arrayidx670, align 16, !dbg !5369
  %conv671 = fpext float %366 to double, !dbg !5369
  %arrayidx672 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 3, !dbg !5370
  %367 = load float, float* %arrayidx672, align 4, !dbg !5370
  %conv673 = fpext float %367 to double, !dbg !5370
  %call674 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv669, double %conv671, double %conv673), !dbg !5371
  store double %call674, double* %gamma488, align 8, !dbg !5372
  %368 = load double, double* %gamma488, align 8, !dbg !5373
  %cmp675 = fcmp olt double %368, 0.000000e+00, !dbg !5375
  br i1 %cmp675, label %if.then677, label %if.end678, !dbg !5376

if.then677:                                       ; preds = %if.else
  store double 0.000000e+00, double* %gamma488, align 8, !dbg !5377
  br label %if.end678, !dbg !5378

if.end678:                                        ; preds = %if.then677, %if.else
  %369 = load double, double* %gamma488, align 8, !dbg !5379
  %call679 = call double @PerceptibleReciprocal(double %369), !dbg !5380
  store double %call679, double* %gamma488, align 8, !dbg !5381
  %370 = load double, double* %gamma488, align 8, !dbg !5382
  %arrayidx680 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5383
  %red681 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx680, i32 0, i32 5, !dbg !5384
  %371 = load float, float* %red681, align 8, !dbg !5384
  %conv682 = fpext float %371 to double, !dbg !5383
  %arrayidx683 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5385
  %red684 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx683, i32 0, i32 5, !dbg !5386
  %372 = load float, float* %red684, align 16, !dbg !5386
  %conv685 = fpext float %372 to double, !dbg !5385
  %arrayidx686 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5387
  %red687 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx686, i32 0, i32 5, !dbg !5388
  %373 = load float, float* %red687, align 8, !dbg !5388
  %conv688 = fpext float %373 to double, !dbg !5387
  %call689 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv682, double %conv685, double %conv688), !dbg !5389
  %mul690 = fmul double %370, %call689, !dbg !5390
  %conv691 = fptrunc double %mul690 to float, !dbg !5382
  %red692 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !5391
  store float %conv691, float* %red692, align 8, !dbg !5392
  %374 = load double, double* %gamma488, align 8, !dbg !5393
  %arrayidx693 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5394
  %green694 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx693, i32 0, i32 6, !dbg !5395
  %375 = load float, float* %green694, align 4, !dbg !5395
  %conv695 = fpext float %375 to double, !dbg !5394
  %arrayidx696 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5396
  %green697 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx696, i32 0, i32 6, !dbg !5397
  %376 = load float, float* %green697, align 4, !dbg !5397
  %conv698 = fpext float %376 to double, !dbg !5396
  %arrayidx699 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5398
  %green700 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx699, i32 0, i32 6, !dbg !5399
  %377 = load float, float* %green700, align 4, !dbg !5399
  %conv701 = fpext float %377 to double, !dbg !5398
  %call702 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv695, double %conv698, double %conv701), !dbg !5400
  %mul703 = fmul double %374, %call702, !dbg !5401
  %conv704 = fptrunc double %mul703 to float, !dbg !5393
  %green705 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !5402
  store float %conv704, float* %green705, align 4, !dbg !5403
  %378 = load double, double* %gamma488, align 8, !dbg !5404
  %arrayidx706 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5405
  %blue707 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx706, i32 0, i32 7, !dbg !5406
  %379 = load float, float* %blue707, align 8, !dbg !5406
  %conv708 = fpext float %379 to double, !dbg !5405
  %arrayidx709 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5407
  %blue710 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx709, i32 0, i32 7, !dbg !5408
  %380 = load float, float* %blue710, align 8, !dbg !5408
  %conv711 = fpext float %380 to double, !dbg !5407
  %arrayidx712 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5409
  %blue713 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx712, i32 0, i32 7, !dbg !5410
  %381 = load float, float* %blue713, align 8, !dbg !5410
  %conv714 = fpext float %381 to double, !dbg !5409
  %call715 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv708, double %conv711, double %conv714), !dbg !5411
  %mul716 = fmul double %378, %call715, !dbg !5412
  %conv717 = fptrunc double %mul716 to float, !dbg !5404
  %blue718 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !5413
  store float %conv717, float* %blue718, align 8, !dbg !5414
  %382 = load double, double* %gamma488, align 8, !dbg !5415
  %arrayidx719 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5416
  %opacity720 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx719, i32 0, i32 8, !dbg !5417
  %383 = load float, float* %opacity720, align 4, !dbg !5417
  %conv721 = fpext float %383 to double, !dbg !5416
  %arrayidx722 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5418
  %opacity723 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx722, i32 0, i32 8, !dbg !5419
  %384 = load float, float* %opacity723, align 4, !dbg !5419
  %conv724 = fpext float %384 to double, !dbg !5418
  %arrayidx725 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5420
  %opacity726 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx725, i32 0, i32 8, !dbg !5421
  %385 = load float, float* %opacity726, align 4, !dbg !5421
  %conv727 = fpext float %385 to double, !dbg !5420
  %call728 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv721, double %conv724, double %conv727), !dbg !5422
  %mul729 = fmul double %382, %call728, !dbg !5423
  %conv730 = fptrunc double %mul729 to float, !dbg !5415
  %opacity731 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !5424
  store float %conv730, float* %opacity731, align 4, !dbg !5425
  %386 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5426
  %colorspace732 = getelementptr inbounds %struct._Image, %struct._Image* %386, i32 0, i32 1, !dbg !5428
  %387 = load i32, i32* %colorspace732, align 4, !dbg !5428
  %cmp733 = icmp eq i32 %387, 12, !dbg !5429
  br i1 %cmp733, label %if.then735, label %if.end749, !dbg !5430

if.then735:                                       ; preds = %if.end678
  %388 = load double, double* %gamma488, align 8, !dbg !5431
  %arrayidx736 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5432
  %index737 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx736, i32 0, i32 9, !dbg !5433
  %389 = load float, float* %index737, align 8, !dbg !5433
  %conv738 = fpext float %389 to double, !dbg !5432
  %arrayidx739 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5434
  %index740 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx739, i32 0, i32 9, !dbg !5435
  %390 = load float, float* %index740, align 16, !dbg !5435
  %conv741 = fpext float %390 to double, !dbg !5434
  %arrayidx742 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5436
  %index743 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx742, i32 0, i32 9, !dbg !5437
  %391 = load float, float* %index743, align 8, !dbg !5437
  %conv744 = fpext float %391 to double, !dbg !5436
  %call745 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv738, double %conv741, double %conv744), !dbg !5438
  %mul746 = fmul double %388, %call745, !dbg !5439
  %conv747 = fptrunc double %mul746 to float, !dbg !5431
  %index748 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5440
  store float %conv747, float* %index748, align 8, !dbg !5441
  br label %if.end749, !dbg !5442

if.end749:                                        ; preds = %if.then735, %if.end678
  br label %if.end750

if.end750:                                        ; preds = %if.end749, %if.end664
  br label %if.end930, !dbg !5443

if.else751:                                       ; preds = %for.end547
  %x752 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5444
  %392 = load double, double* %x752, align 8, !dbg !5444
  %y753 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5447
  %393 = load double, double* %y753, align 8, !dbg !5447
  %sub754 = fsub double 1.000000e+00, %393, !dbg !5448
  %cmp755 = fcmp ole double %392, %sub754, !dbg !5449
  br i1 %cmp755, label %if.then757, label %if.else840, !dbg !5450

if.then757:                                       ; preds = %if.else751
  %arrayidx758 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 0, !dbg !5451
  %394 = load float, float* %arrayidx758, align 16, !dbg !5451
  %conv759 = fpext float %394 to double, !dbg !5451
  %arrayidx760 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 1, !dbg !5453
  %395 = load float, float* %arrayidx760, align 4, !dbg !5453
  %conv761 = fpext float %395 to double, !dbg !5453
  %arrayidx762 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 2, !dbg !5454
  %396 = load float, float* %arrayidx762, align 8, !dbg !5454
  %conv763 = fpext float %396 to double, !dbg !5454
  %call764 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv759, double %conv761, double %conv763), !dbg !5455
  store double %call764, double* %gamma488, align 8, !dbg !5456
  %397 = load double, double* %gamma488, align 8, !dbg !5457
  %cmp765 = fcmp olt double %397, 0.000000e+00, !dbg !5459
  br i1 %cmp765, label %if.then767, label %if.end768, !dbg !5460

if.then767:                                       ; preds = %if.then757
  store double 0.000000e+00, double* %gamma488, align 8, !dbg !5461
  br label %if.end768, !dbg !5462

if.end768:                                        ; preds = %if.then767, %if.then757
  %398 = load double, double* %gamma488, align 8, !dbg !5463
  %call769 = call double @PerceptibleReciprocal(double %398), !dbg !5464
  store double %call769, double* %gamma488, align 8, !dbg !5465
  %399 = load double, double* %gamma488, align 8, !dbg !5466
  %arrayidx770 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5467
  %red771 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx770, i32 0, i32 5, !dbg !5468
  %400 = load float, float* %red771, align 16, !dbg !5468
  %conv772 = fpext float %400 to double, !dbg !5467
  %arrayidx773 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5469
  %red774 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx773, i32 0, i32 5, !dbg !5470
  %401 = load float, float* %red774, align 8, !dbg !5470
  %conv775 = fpext float %401 to double, !dbg !5469
  %arrayidx776 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5471
  %red777 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx776, i32 0, i32 5, !dbg !5472
  %402 = load float, float* %red777, align 16, !dbg !5472
  %conv778 = fpext float %402 to double, !dbg !5471
  %call779 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv772, double %conv775, double %conv778), !dbg !5473
  %mul780 = fmul double %399, %call779, !dbg !5474
  %conv781 = fptrunc double %mul780 to float, !dbg !5466
  %red782 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !5475
  store float %conv781, float* %red782, align 8, !dbg !5476
  %403 = load double, double* %gamma488, align 8, !dbg !5477
  %arrayidx783 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5478
  %green784 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx783, i32 0, i32 6, !dbg !5479
  %404 = load float, float* %green784, align 4, !dbg !5479
  %conv785 = fpext float %404 to double, !dbg !5478
  %arrayidx786 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5480
  %green787 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx786, i32 0, i32 6, !dbg !5481
  %405 = load float, float* %green787, align 4, !dbg !5481
  %conv788 = fpext float %405 to double, !dbg !5480
  %arrayidx789 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5482
  %green790 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx789, i32 0, i32 6, !dbg !5483
  %406 = load float, float* %green790, align 4, !dbg !5483
  %conv791 = fpext float %406 to double, !dbg !5482
  %call792 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv785, double %conv788, double %conv791), !dbg !5484
  %mul793 = fmul double %403, %call792, !dbg !5485
  %conv794 = fptrunc double %mul793 to float, !dbg !5477
  %green795 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !5486
  store float %conv794, float* %green795, align 4, !dbg !5487
  %407 = load double, double* %gamma488, align 8, !dbg !5488
  %arrayidx796 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5489
  %blue797 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx796, i32 0, i32 7, !dbg !5490
  %408 = load float, float* %blue797, align 8, !dbg !5490
  %conv798 = fpext float %408 to double, !dbg !5489
  %arrayidx799 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5491
  %blue800 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx799, i32 0, i32 7, !dbg !5492
  %409 = load float, float* %blue800, align 8, !dbg !5492
  %conv801 = fpext float %409 to double, !dbg !5491
  %arrayidx802 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5493
  %blue803 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx802, i32 0, i32 7, !dbg !5494
  %410 = load float, float* %blue803, align 8, !dbg !5494
  %conv804 = fpext float %410 to double, !dbg !5493
  %call805 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv798, double %conv801, double %conv804), !dbg !5495
  %mul806 = fmul double %407, %call805, !dbg !5496
  %conv807 = fptrunc double %mul806 to float, !dbg !5488
  %blue808 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !5497
  store float %conv807, float* %blue808, align 8, !dbg !5498
  %411 = load double, double* %gamma488, align 8, !dbg !5499
  %arrayidx809 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5500
  %opacity810 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx809, i32 0, i32 8, !dbg !5501
  %412 = load float, float* %opacity810, align 4, !dbg !5501
  %conv811 = fpext float %412 to double, !dbg !5500
  %arrayidx812 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5502
  %opacity813 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx812, i32 0, i32 8, !dbg !5503
  %413 = load float, float* %opacity813, align 4, !dbg !5503
  %conv814 = fpext float %413 to double, !dbg !5502
  %arrayidx815 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5504
  %opacity816 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx815, i32 0, i32 8, !dbg !5505
  %414 = load float, float* %opacity816, align 4, !dbg !5505
  %conv817 = fpext float %414 to double, !dbg !5504
  %call818 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv811, double %conv814, double %conv817), !dbg !5506
  %mul819 = fmul double %411, %call818, !dbg !5507
  %conv820 = fptrunc double %mul819 to float, !dbg !5499
  %opacity821 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !5508
  store float %conv820, float* %opacity821, align 4, !dbg !5509
  %415 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5510
  %colorspace822 = getelementptr inbounds %struct._Image, %struct._Image* %415, i32 0, i32 1, !dbg !5512
  %416 = load i32, i32* %colorspace822, align 4, !dbg !5512
  %cmp823 = icmp eq i32 %416, 12, !dbg !5513
  br i1 %cmp823, label %if.then825, label %if.end839, !dbg !5514

if.then825:                                       ; preds = %if.end768
  %417 = load double, double* %gamma488, align 8, !dbg !5515
  %arrayidx826 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 0, !dbg !5516
  %index827 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx826, i32 0, i32 9, !dbg !5517
  %418 = load float, float* %index827, align 16, !dbg !5517
  %conv828 = fpext float %418 to double, !dbg !5516
  %arrayidx829 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5518
  %index830 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx829, i32 0, i32 9, !dbg !5519
  %419 = load float, float* %index830, align 8, !dbg !5519
  %conv831 = fpext float %419 to double, !dbg !5518
  %arrayidx832 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5520
  %index833 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx832, i32 0, i32 9, !dbg !5521
  %420 = load float, float* %index833, align 16, !dbg !5521
  %conv834 = fpext float %420 to double, !dbg !5520
  %call835 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv828, double %conv831, double %conv834), !dbg !5522
  %mul836 = fmul double %417, %call835, !dbg !5523
  %conv837 = fptrunc double %mul836 to float, !dbg !5515
  %index838 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5524
  store float %conv837, float* %index838, align 8, !dbg !5525
  br label %if.end839, !dbg !5526

if.end839:                                        ; preds = %if.then825, %if.end768
  br label %if.end929, !dbg !5527

if.else840:                                       ; preds = %if.else751
  %x841 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5528
  %421 = load double, double* %x841, align 8, !dbg !5528
  %sub842 = fsub double 1.000000e+00, %421, !dbg !5530
  %x843 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 0, !dbg !5531
  store double %sub842, double* %x843, align 8, !dbg !5532
  %y844 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5533
  %422 = load double, double* %y844, align 8, !dbg !5533
  %sub845 = fsub double 1.000000e+00, %422, !dbg !5534
  %y846 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta491, i32 0, i32 1, !dbg !5535
  store double %sub845, double* %y846, align 8, !dbg !5536
  %arrayidx847 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 3, !dbg !5537
  %423 = load float, float* %arrayidx847, align 4, !dbg !5537
  %conv848 = fpext float %423 to double, !dbg !5537
  %arrayidx849 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 2, !dbg !5538
  %424 = load float, float* %arrayidx849, align 8, !dbg !5538
  %conv850 = fpext float %424 to double, !dbg !5538
  %arrayidx851 = getelementptr inbounds [4 x float], [4 x float]* %alpha490, i64 0, i64 1, !dbg !5539
  %425 = load float, float* %arrayidx851, align 4, !dbg !5539
  %conv852 = fpext float %425 to double, !dbg !5539
  %call853 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv848, double %conv850, double %conv852), !dbg !5540
  store double %call853, double* %gamma488, align 8, !dbg !5541
  %426 = load double, double* %gamma488, align 8, !dbg !5542
  %cmp854 = fcmp olt double %426, 0.000000e+00, !dbg !5544
  br i1 %cmp854, label %if.then856, label %if.end857, !dbg !5545

if.then856:                                       ; preds = %if.else840
  store double 0.000000e+00, double* %gamma488, align 8, !dbg !5546
  br label %if.end857, !dbg !5547

if.end857:                                        ; preds = %if.then856, %if.else840
  %427 = load double, double* %gamma488, align 8, !dbg !5548
  %call858 = call double @PerceptibleReciprocal(double %427), !dbg !5549
  store double %call858, double* %gamma488, align 8, !dbg !5550
  %428 = load double, double* %gamma488, align 8, !dbg !5551
  %arrayidx859 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5552
  %red860 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx859, i32 0, i32 5, !dbg !5553
  %429 = load float, float* %red860, align 8, !dbg !5553
  %conv861 = fpext float %429 to double, !dbg !5552
  %arrayidx862 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5554
  %red863 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx862, i32 0, i32 5, !dbg !5555
  %430 = load float, float* %red863, align 16, !dbg !5555
  %conv864 = fpext float %430 to double, !dbg !5554
  %arrayidx865 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5556
  %red866 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx865, i32 0, i32 5, !dbg !5557
  %431 = load float, float* %red866, align 8, !dbg !5557
  %conv867 = fpext float %431 to double, !dbg !5556
  %call868 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv861, double %conv864, double %conv867), !dbg !5558
  %mul869 = fmul double %428, %call868, !dbg !5559
  %conv870 = fptrunc double %mul869 to float, !dbg !5551
  %red871 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !5560
  store float %conv870, float* %red871, align 8, !dbg !5561
  %432 = load double, double* %gamma488, align 8, !dbg !5562
  %arrayidx872 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5563
  %green873 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx872, i32 0, i32 6, !dbg !5564
  %433 = load float, float* %green873, align 4, !dbg !5564
  %conv874 = fpext float %433 to double, !dbg !5563
  %arrayidx875 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5565
  %green876 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx875, i32 0, i32 6, !dbg !5566
  %434 = load float, float* %green876, align 4, !dbg !5566
  %conv877 = fpext float %434 to double, !dbg !5565
  %arrayidx878 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5567
  %green879 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx878, i32 0, i32 6, !dbg !5568
  %435 = load float, float* %green879, align 4, !dbg !5568
  %conv880 = fpext float %435 to double, !dbg !5567
  %call881 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv874, double %conv877, double %conv880), !dbg !5569
  %mul882 = fmul double %432, %call881, !dbg !5570
  %conv883 = fptrunc double %mul882 to float, !dbg !5562
  %green884 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !5571
  store float %conv883, float* %green884, align 4, !dbg !5572
  %436 = load double, double* %gamma488, align 8, !dbg !5573
  %arrayidx885 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5574
  %blue886 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx885, i32 0, i32 7, !dbg !5575
  %437 = load float, float* %blue886, align 8, !dbg !5575
  %conv887 = fpext float %437 to double, !dbg !5574
  %arrayidx888 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5576
  %blue889 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx888, i32 0, i32 7, !dbg !5577
  %438 = load float, float* %blue889, align 8, !dbg !5577
  %conv890 = fpext float %438 to double, !dbg !5576
  %arrayidx891 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5578
  %blue892 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx891, i32 0, i32 7, !dbg !5579
  %439 = load float, float* %blue892, align 8, !dbg !5579
  %conv893 = fpext float %439 to double, !dbg !5578
  %call894 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv887, double %conv890, double %conv893), !dbg !5580
  %mul895 = fmul double %436, %call894, !dbg !5581
  %conv896 = fptrunc double %mul895 to float, !dbg !5573
  %blue897 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !5582
  store float %conv896, float* %blue897, align 8, !dbg !5583
  %440 = load double, double* %gamma488, align 8, !dbg !5584
  %arrayidx898 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5585
  %opacity899 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx898, i32 0, i32 8, !dbg !5586
  %441 = load float, float* %opacity899, align 4, !dbg !5586
  %conv900 = fpext float %441 to double, !dbg !5585
  %arrayidx901 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5587
  %opacity902 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx901, i32 0, i32 8, !dbg !5588
  %442 = load float, float* %opacity902, align 4, !dbg !5588
  %conv903 = fpext float %442 to double, !dbg !5587
  %arrayidx904 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5589
  %opacity905 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx904, i32 0, i32 8, !dbg !5590
  %443 = load float, float* %opacity905, align 4, !dbg !5590
  %conv906 = fpext float %443 to double, !dbg !5589
  %call907 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv900, double %conv903, double %conv906), !dbg !5591
  %mul908 = fmul double %440, %call907, !dbg !5592
  %conv909 = fptrunc double %mul908 to float, !dbg !5584
  %opacity910 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !5593
  store float %conv909, float* %opacity910, align 4, !dbg !5594
  %444 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5595
  %colorspace911 = getelementptr inbounds %struct._Image, %struct._Image* %444, i32 0, i32 1, !dbg !5597
  %445 = load i32, i32* %colorspace911, align 4, !dbg !5597
  %cmp912 = icmp eq i32 %445, 12, !dbg !5598
  br i1 %cmp912, label %if.then914, label %if.end928, !dbg !5599

if.then914:                                       ; preds = %if.end857
  %446 = load double, double* %gamma488, align 8, !dbg !5600
  %arrayidx915 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 3, !dbg !5601
  %index916 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx915, i32 0, i32 9, !dbg !5602
  %447 = load float, float* %index916, align 8, !dbg !5602
  %conv917 = fpext float %447 to double, !dbg !5601
  %arrayidx918 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 2, !dbg !5603
  %index919 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx918, i32 0, i32 9, !dbg !5604
  %448 = load float, float* %index919, align 16, !dbg !5604
  %conv920 = fpext float %448 to double, !dbg !5603
  %arrayidx921 = getelementptr inbounds [4 x %struct._MagickPixelPacket], [4 x %struct._MagickPixelPacket]* %pixels489, i64 0, i64 1, !dbg !5605
  %index922 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx921, i32 0, i32 9, !dbg !5606
  %449 = load float, float* %index922, align 8, !dbg !5606
  %conv923 = fpext float %449 to double, !dbg !5605
  %call924 = call double @MeshInterpolate(%struct._PointInfo* %delta491, double %conv917, double %conv920, double %conv923), !dbg !5607
  %mul925 = fmul double %446, %call924, !dbg !5608
  %conv926 = fptrunc double %mul925 to float, !dbg !5600
  %index927 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5609
  store float %conv926, float* %index927, align 8, !dbg !5610
  br label %if.end928, !dbg !5611

if.end928:                                        ; preds = %if.then914, %if.end857
  br label %if.end929

if.end929:                                        ; preds = %if.end928, %if.end839
  br label %if.end930

if.end930:                                        ; preds = %if.end929, %if.end750
  br label %sw.epilog, !dbg !5612

sw.bb931:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata [1 x %struct._MagickPixelPacket]* %pixels932, metadata !5613, metadata !DIExpression()), !dbg !5615
  %450 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5616
  %451 = load double, double* %x.addr, align 8, !dbg !5617
  %conv933 = fptrunc double %451 to float, !dbg !5617
  %call934 = call i64 @NearestNeighbor(float %conv933), !dbg !5618
  %452 = load double, double* %y.addr, align 8, !dbg !5619
  %conv935 = fptrunc double %452 to float, !dbg !5619
  %call936 = call i64 @NearestNeighbor(float %conv935), !dbg !5620
  %453 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5621
  %call937 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %450, i64 %call934, i64 %call936, i64 1, i64 1, %struct._ExceptionInfo* %453), !dbg !5622
  store %struct._PixelPacket* %call937, %struct._PixelPacket** %p, align 8, !dbg !5623
  %454 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5624
  %cmp938 = icmp eq %struct._PixelPacket* %454, null, !dbg !5626
  br i1 %cmp938, label %if.then940, label %if.end941, !dbg !5627

if.then940:                                       ; preds = %sw.bb931
  br label %sw.epilog, !dbg !5628

if.end941:                                        ; preds = %sw.bb931
  %455 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5629
  %call942 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %455), !dbg !5630
  store i16* %call942, i16** %indexes, align 8, !dbg !5631
  %456 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5632
  %arraydecay943 = getelementptr inbounds [1 x %struct._MagickPixelPacket], [1 x %struct._MagickPixelPacket]* %pixels932, i64 0, i64 0, !dbg !5633
  call void @GetMagickPixelPacket(%struct._Image* %456, %struct._MagickPixelPacket* %arraydecay943), !dbg !5634
  %457 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5635
  %458 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5636
  %459 = load i16*, i16** %indexes, align 8, !dbg !5637
  call void @SetMagickPixelPacket(%struct._Image* %457, %struct._PixelPacket* %458, i16* %459, %struct._MagickPixelPacket* %agg.result), !dbg !5638
  br label %sw.epilog, !dbg !5639

sw.bb944:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %gamma945, metadata !5640, metadata !DIExpression()), !dbg !5642
  call void @llvm.dbg.declare(metadata [16 x %struct._MagickPixelPacket]* %pixels946, metadata !5643, metadata !DIExpression()), !dbg !5644
  call void @llvm.dbg.declare(metadata [16 x float]* %alpha947, metadata !5645, metadata !DIExpression()), !dbg !5646
  call void @llvm.dbg.declare(metadata float* %dx, metadata !5647, metadata !DIExpression()), !dbg !5648
  call void @llvm.dbg.declare(metadata float* %dy, metadata !5649, metadata !DIExpression()), !dbg !5650
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta948, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.declare(metadata i64* %j, metadata !5653, metadata !DIExpression()), !dbg !5654
  call void @llvm.dbg.declare(metadata i64* %n, metadata !5655, metadata !DIExpression()), !dbg !5656
  %460 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5657
  %461 = load double, double* %x.addr, align 8, !dbg !5658
  %462 = call double @llvm.floor.f64(double %461), !dbg !5659
  %conv949 = fptosi double %462 to i64, !dbg !5660
  %sub950 = sub nsw i64 %conv949, 1, !dbg !5661
  %463 = load double, double* %y.addr, align 8, !dbg !5662
  %464 = call double @llvm.floor.f64(double %463), !dbg !5663
  %conv951 = fptosi double %464 to i64, !dbg !5664
  %sub952 = sub nsw i64 %conv951, 1, !dbg !5665
  %465 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5666
  %call953 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %460, i64 %sub950, i64 %sub952, i64 4, i64 4, %struct._ExceptionInfo* %465), !dbg !5667
  store %struct._PixelPacket* %call953, %struct._PixelPacket** %p, align 8, !dbg !5668
  %466 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5669
  %cmp954 = icmp eq %struct._PixelPacket* %466, null, !dbg !5671
  br i1 %cmp954, label %if.then956, label %if.end957, !dbg !5672

if.then956:                                       ; preds = %sw.bb944
  br label %sw.epilog, !dbg !5673

if.end957:                                        ; preds = %sw.bb944
  %467 = load %struct._CacheView*, %struct._CacheView** %image_view.addr, align 8, !dbg !5674
  %call958 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %467), !dbg !5675
  store i16* %call958, i16** %indexes, align 8, !dbg !5676
  store i64 0, i64* %n, align 8, !dbg !5677
  %468 = load double, double* %x.addr, align 8, !dbg !5678
  %469 = load double, double* %x.addr, align 8, !dbg !5679
  %470 = call double @llvm.floor.f64(double %469), !dbg !5680
  %sub959 = fsub double %468, %470, !dbg !5681
  %x960 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta948, i32 0, i32 0, !dbg !5682
  store double %sub959, double* %x960, align 8, !dbg !5683
  %471 = load double, double* %y.addr, align 8, !dbg !5684
  %472 = load double, double* %y.addr, align 8, !dbg !5685
  %473 = call double @llvm.floor.f64(double %472), !dbg !5686
  %sub961 = fsub double %471, %473, !dbg !5687
  %y962 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta948, i32 0, i32 1, !dbg !5688
  store double %sub961, double* %y962, align 8, !dbg !5689
  store i64 -1, i64* %i, align 8, !dbg !5690
  br label %for.cond963, !dbg !5692

for.cond963:                                      ; preds = %for.inc1099, %if.end957
  %474 = load i64, i64* %i, align 8, !dbg !5693
  %cmp964 = icmp slt i64 %474, 3, !dbg !5695
  br i1 %cmp964, label %for.body966, label %for.end1101, !dbg !5696

for.body966:                                      ; preds = %for.cond963
  %475 = load i64, i64* %i, align 8, !dbg !5697
  %conv967 = sitofp i64 %475 to float, !dbg !5699
  %conv968 = fpext float %conv967 to double, !dbg !5699
  %y969 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta948, i32 0, i32 1, !dbg !5700
  %476 = load double, double* %y969, align 8, !dbg !5700
  %sub970 = fsub double %conv968, %476, !dbg !5701
  %conv971 = fptrunc double %sub970 to float, !dbg !5699
  %call972 = call float @CubicWeightingFunction(float %conv971), !dbg !5702
  store float %call972, float* %dy, align 4, !dbg !5703
  store i64 -1, i64* %j, align 8, !dbg !5704
  br label %for.cond973, !dbg !5706

for.cond973:                                      ; preds = %for.inc1096, %for.body966
  %477 = load i64, i64* %j, align 8, !dbg !5707
  %cmp974 = icmp slt i64 %477, 3, !dbg !5709
  br i1 %cmp974, label %for.body976, label %for.end1098, !dbg !5710

for.body976:                                      ; preds = %for.cond973
  %478 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5711
  %arraydecay977 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 0, !dbg !5713
  %479 = load i64, i64* %n, align 8, !dbg !5714
  %add.ptr978 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay977, i64 %479, !dbg !5715
  call void @GetMagickPixelPacket(%struct._Image* %478, %struct._MagickPixelPacket* %add.ptr978), !dbg !5716
  %480 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5717
  %481 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5718
  %482 = load i16*, i16** %indexes, align 8, !dbg !5719
  %483 = load i64, i64* %n, align 8, !dbg !5720
  %add.ptr979 = getelementptr inbounds i16, i16* %482, i64 %483, !dbg !5721
  %arraydecay980 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 0, !dbg !5722
  %484 = load i64, i64* %n, align 8, !dbg !5723
  %add.ptr981 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arraydecay980, i64 %484, !dbg !5724
  call void @SetMagickPixelPacket(%struct._Image* %480, %struct._PixelPacket* %481, i16* %add.ptr979, %struct._MagickPixelPacket* %add.ptr981), !dbg !5725
  %485 = load i64, i64* %n, align 8, !dbg !5726
  %arrayidx982 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %485, !dbg !5727
  store float 1.000000e+00, float* %arrayidx982, align 4, !dbg !5728
  %486 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5729
  %matte983 = getelementptr inbounds %struct._Image, %struct._Image* %486, i32 0, i32 6, !dbg !5731
  %487 = load i32, i32* %matte983, align 8, !dbg !5731
  %cmp984 = icmp ne i32 %487, 0, !dbg !5732
  br i1 %cmp984, label %if.then986, label %if.end1016, !dbg !5733

if.then986:                                       ; preds = %for.body976
  %488 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5734
  %opacity987 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %488, i32 0, i32 3, !dbg !5734
  %489 = load i16, i16* %opacity987, align 2, !dbg !5734
  %conv988 = zext i16 %489 to i32, !dbg !5734
  %sub989 = sub nsw i32 65535, %conv988, !dbg !5734
  %conv990 = sitofp i32 %sub989 to float, !dbg !5736
  %conv991 = fpext float %conv990 to double, !dbg !5737
  %mul992 = fmul double 0x3EF0001000100010, %conv991, !dbg !5738
  %conv993 = fptrunc double %mul992 to float, !dbg !5739
  %490 = load i64, i64* %n, align 8, !dbg !5740
  %arrayidx994 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %490, !dbg !5741
  store float %conv993, float* %arrayidx994, align 4, !dbg !5742
  %491 = load i64, i64* %n, align 8, !dbg !5743
  %arrayidx995 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %491, !dbg !5744
  %492 = load float, float* %arrayidx995, align 4, !dbg !5744
  %493 = load i64, i64* %n, align 8, !dbg !5745
  %arrayidx996 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %493, !dbg !5746
  %red997 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx996, i32 0, i32 5, !dbg !5747
  %494 = load float, float* %red997, align 8, !dbg !5748
  %mul998 = fmul float %494, %492, !dbg !5748
  store float %mul998, float* %red997, align 8, !dbg !5748
  %495 = load i64, i64* %n, align 8, !dbg !5749
  %arrayidx999 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %495, !dbg !5750
  %496 = load float, float* %arrayidx999, align 4, !dbg !5750
  %497 = load i64, i64* %n, align 8, !dbg !5751
  %arrayidx1000 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %497, !dbg !5752
  %green1001 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1000, i32 0, i32 6, !dbg !5753
  %498 = load float, float* %green1001, align 4, !dbg !5754
  %mul1002 = fmul float %498, %496, !dbg !5754
  store float %mul1002, float* %green1001, align 4, !dbg !5754
  %499 = load i64, i64* %n, align 8, !dbg !5755
  %arrayidx1003 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %499, !dbg !5756
  %500 = load float, float* %arrayidx1003, align 4, !dbg !5756
  %501 = load i64, i64* %n, align 8, !dbg !5757
  %arrayidx1004 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %501, !dbg !5758
  %blue1005 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1004, i32 0, i32 7, !dbg !5759
  %502 = load float, float* %blue1005, align 8, !dbg !5760
  %mul1006 = fmul float %502, %500, !dbg !5760
  store float %mul1006, float* %blue1005, align 8, !dbg !5760
  %503 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5761
  %colorspace1007 = getelementptr inbounds %struct._Image, %struct._Image* %503, i32 0, i32 1, !dbg !5763
  %504 = load i32, i32* %colorspace1007, align 4, !dbg !5763
  %cmp1008 = icmp eq i32 %504, 12, !dbg !5764
  br i1 %cmp1008, label %if.then1010, label %if.end1015, !dbg !5765

if.then1010:                                      ; preds = %if.then986
  %505 = load i64, i64* %n, align 8, !dbg !5766
  %arrayidx1011 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %505, !dbg !5767
  %506 = load float, float* %arrayidx1011, align 4, !dbg !5767
  %507 = load i64, i64* %n, align 8, !dbg !5768
  %arrayidx1012 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %507, !dbg !5769
  %index1013 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1012, i32 0, i32 9, !dbg !5770
  %508 = load float, float* %index1013, align 8, !dbg !5771
  %mul1014 = fmul float %508, %506, !dbg !5771
  store float %mul1014, float* %index1013, align 8, !dbg !5771
  br label %if.end1015, !dbg !5769

if.end1015:                                       ; preds = %if.then1010, %if.then986
  br label %if.end1016, !dbg !5772

if.end1016:                                       ; preds = %if.end1015, %for.body976
  %x1017 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta948, i32 0, i32 0, !dbg !5773
  %509 = load double, double* %x1017, align 8, !dbg !5773
  %510 = load i64, i64* %j, align 8, !dbg !5774
  %conv1018 = sitofp i64 %510 to float, !dbg !5775
  %conv1019 = fpext float %conv1018 to double, !dbg !5775
  %sub1020 = fsub double %509, %conv1019, !dbg !5776
  %conv1021 = fptrunc double %sub1020 to float, !dbg !5777
  %call1022 = call float @CubicWeightingFunction(float %conv1021), !dbg !5778
  store float %call1022, float* %dx, align 4, !dbg !5779
  %511 = load i64, i64* %n, align 8, !dbg !5780
  %arrayidx1023 = getelementptr inbounds [16 x float], [16 x float]* %alpha947, i64 0, i64 %511, !dbg !5781
  %512 = load float, float* %arrayidx1023, align 4, !dbg !5781
  %conv1024 = fpext float %512 to double, !dbg !5781
  store double %conv1024, double* %gamma945, align 8, !dbg !5782
  %513 = load double, double* %gamma945, align 8, !dbg !5783
  %cmp1025 = fcmp olt double %513, 0.000000e+00, !dbg !5785
  br i1 %cmp1025, label %if.then1027, label %if.end1028, !dbg !5786

if.then1027:                                      ; preds = %if.end1016
  store double 0.000000e+00, double* %gamma945, align 8, !dbg !5787
  br label %if.end1028, !dbg !5788

if.end1028:                                       ; preds = %if.then1027, %if.end1016
  %514 = load double, double* %gamma945, align 8, !dbg !5789
  %call1029 = call double @PerceptibleReciprocal(double %514), !dbg !5790
  store double %call1029, double* %gamma945, align 8, !dbg !5791
  %515 = load double, double* %gamma945, align 8, !dbg !5792
  %516 = load float, float* %dx, align 4, !dbg !5793
  %conv1030 = fpext float %516 to double, !dbg !5793
  %mul1031 = fmul double %515, %conv1030, !dbg !5794
  %517 = load float, float* %dy, align 4, !dbg !5795
  %conv1032 = fpext float %517 to double, !dbg !5795
  %mul1033 = fmul double %mul1031, %conv1032, !dbg !5796
  %518 = load i64, i64* %n, align 8, !dbg !5797
  %arrayidx1034 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %518, !dbg !5798
  %red1035 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1034, i32 0, i32 5, !dbg !5799
  %519 = load float, float* %red1035, align 8, !dbg !5799
  %conv1036 = fpext float %519 to double, !dbg !5798
  %mul1037 = fmul double %mul1033, %conv1036, !dbg !5800
  %red1038 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 5, !dbg !5801
  %520 = load float, float* %red1038, align 8, !dbg !5802
  %conv1039 = fpext float %520 to double, !dbg !5802
  %add1040 = fadd double %conv1039, %mul1037, !dbg !5802
  %conv1041 = fptrunc double %add1040 to float, !dbg !5802
  store float %conv1041, float* %red1038, align 8, !dbg !5802
  %521 = load double, double* %gamma945, align 8, !dbg !5803
  %522 = load float, float* %dx, align 4, !dbg !5804
  %conv1042 = fpext float %522 to double, !dbg !5804
  %mul1043 = fmul double %521, %conv1042, !dbg !5805
  %523 = load float, float* %dy, align 4, !dbg !5806
  %conv1044 = fpext float %523 to double, !dbg !5806
  %mul1045 = fmul double %mul1043, %conv1044, !dbg !5807
  %524 = load i64, i64* %n, align 8, !dbg !5808
  %arrayidx1046 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %524, !dbg !5809
  %green1047 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1046, i32 0, i32 6, !dbg !5810
  %525 = load float, float* %green1047, align 4, !dbg !5810
  %conv1048 = fpext float %525 to double, !dbg !5809
  %mul1049 = fmul double %mul1045, %conv1048, !dbg !5811
  %green1050 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 6, !dbg !5812
  %526 = load float, float* %green1050, align 4, !dbg !5813
  %conv1051 = fpext float %526 to double, !dbg !5813
  %add1052 = fadd double %conv1051, %mul1049, !dbg !5813
  %conv1053 = fptrunc double %add1052 to float, !dbg !5813
  store float %conv1053, float* %green1050, align 4, !dbg !5813
  %527 = load double, double* %gamma945, align 8, !dbg !5814
  %528 = load float, float* %dx, align 4, !dbg !5815
  %conv1054 = fpext float %528 to double, !dbg !5815
  %mul1055 = fmul double %527, %conv1054, !dbg !5816
  %529 = load float, float* %dy, align 4, !dbg !5817
  %conv1056 = fpext float %529 to double, !dbg !5817
  %mul1057 = fmul double %mul1055, %conv1056, !dbg !5818
  %530 = load i64, i64* %n, align 8, !dbg !5819
  %arrayidx1058 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %530, !dbg !5820
  %blue1059 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1058, i32 0, i32 7, !dbg !5821
  %531 = load float, float* %blue1059, align 8, !dbg !5821
  %conv1060 = fpext float %531 to double, !dbg !5820
  %mul1061 = fmul double %mul1057, %conv1060, !dbg !5822
  %blue1062 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 7, !dbg !5823
  %532 = load float, float* %blue1062, align 8, !dbg !5824
  %conv1063 = fpext float %532 to double, !dbg !5824
  %add1064 = fadd double %conv1063, %mul1061, !dbg !5824
  %conv1065 = fptrunc double %add1064 to float, !dbg !5824
  store float %conv1065, float* %blue1062, align 8, !dbg !5824
  %533 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5825
  %matte1066 = getelementptr inbounds %struct._Image, %struct._Image* %533, i32 0, i32 6, !dbg !5827
  %534 = load i32, i32* %matte1066, align 8, !dbg !5827
  %cmp1067 = icmp ne i32 %534, 0, !dbg !5828
  br i1 %cmp1067, label %if.then1069, label %if.end1076, !dbg !5829

if.then1069:                                      ; preds = %if.end1028
  %535 = load float, float* %dx, align 4, !dbg !5830
  %536 = load float, float* %dy, align 4, !dbg !5831
  %mul1070 = fmul float %535, %536, !dbg !5832
  %537 = load i64, i64* %n, align 8, !dbg !5833
  %arrayidx1071 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %537, !dbg !5834
  %opacity1072 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1071, i32 0, i32 8, !dbg !5835
  %538 = load float, float* %opacity1072, align 4, !dbg !5835
  %mul1073 = fmul float %mul1070, %538, !dbg !5836
  %opacity1074 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 8, !dbg !5837
  %539 = load float, float* %opacity1074, align 4, !dbg !5838
  %add1075 = fadd float %539, %mul1073, !dbg !5838
  store float %add1075, float* %opacity1074, align 4, !dbg !5838
  br label %if.end1076, !dbg !5839

if.end1076:                                       ; preds = %if.then1069, %if.end1028
  %540 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5840
  %colorspace1077 = getelementptr inbounds %struct._Image, %struct._Image* %540, i32 0, i32 1, !dbg !5842
  %541 = load i32, i32* %colorspace1077, align 4, !dbg !5842
  %cmp1078 = icmp eq i32 %541, 12, !dbg !5843
  br i1 %cmp1078, label %if.then1080, label %if.end1093, !dbg !5844

if.then1080:                                      ; preds = %if.end1076
  %542 = load double, double* %gamma945, align 8, !dbg !5845
  %543 = load float, float* %dx, align 4, !dbg !5846
  %conv1081 = fpext float %543 to double, !dbg !5846
  %mul1082 = fmul double %542, %conv1081, !dbg !5847
  %544 = load float, float* %dy, align 4, !dbg !5848
  %conv1083 = fpext float %544 to double, !dbg !5848
  %mul1084 = fmul double %mul1082, %conv1083, !dbg !5849
  %545 = load i64, i64* %n, align 8, !dbg !5850
  %arrayidx1085 = getelementptr inbounds [16 x %struct._MagickPixelPacket], [16 x %struct._MagickPixelPacket]* %pixels946, i64 0, i64 %545, !dbg !5851
  %index1086 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1085, i32 0, i32 9, !dbg !5852
  %546 = load float, float* %index1086, align 8, !dbg !5852
  %conv1087 = fpext float %546 to double, !dbg !5851
  %mul1088 = fmul double %mul1084, %conv1087, !dbg !5853
  %index1089 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %agg.result, i32 0, i32 9, !dbg !5854
  %547 = load float, float* %index1089, align 8, !dbg !5855
  %conv1090 = fpext float %547 to double, !dbg !5855
  %add1091 = fadd double %conv1090, %mul1088, !dbg !5855
  %conv1092 = fptrunc double %add1091 to float, !dbg !5855
  store float %conv1092, float* %index1089, align 8, !dbg !5855
  br label %if.end1093, !dbg !5856

if.end1093:                                       ; preds = %if.then1080, %if.end1076
  %548 = load i64, i64* %n, align 8, !dbg !5857
  %inc1094 = add nsw i64 %548, 1, !dbg !5857
  store i64 %inc1094, i64* %n, align 8, !dbg !5857
  %549 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !5858
  %incdec.ptr1095 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %549, i32 1, !dbg !5858
  store %struct._PixelPacket* %incdec.ptr1095, %struct._PixelPacket** %p, align 8, !dbg !5858
  br label %for.inc1096, !dbg !5859

for.inc1096:                                      ; preds = %if.end1093
  %550 = load i64, i64* %j, align 8, !dbg !5860
  %inc1097 = add nsw i64 %550, 1, !dbg !5860
  store i64 %inc1097, i64* %j, align 8, !dbg !5860
  br label %for.cond973, !dbg !5861, !llvm.loop !5862

for.end1098:                                      ; preds = %for.cond973
  br label %for.inc1099, !dbg !5864

for.inc1099:                                      ; preds = %for.end1098
  %551 = load i64, i64* %i, align 8, !dbg !5865
  %inc1100 = add nsw i64 %551, 1, !dbg !5865
  store i64 %inc1100, i64* %i, align 8, !dbg !5865
  br label %for.cond963, !dbg !5866, !llvm.loop !5867

for.end1101:                                      ; preds = %for.cond963
  br label %sw.epilog, !dbg !5869

sw.epilog:                                        ; preds = %for.end1101, %if.then956, %if.end941, %if.then940, %if.end930, %if.then497, %if.end484, %if.then483, %if.end472, %if.then470, %if.then465, %if.then459, %if.end447, %if.then193, %for.end178, %if.then101, %for.end, %if.then
  ret void, !dbg !5870
}

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !5871 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !5876, metadata !DIExpression()), !dbg !5877
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !5878, metadata !DIExpression()), !dbg !5879
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !5880, metadata !DIExpression()), !dbg !5881
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !5882, metadata !DIExpression()), !dbg !5883
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5884
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !5884
  %1 = load i16, i16* %red, align 2, !dbg !5884
  %conv = uitofp i16 %1 to float, !dbg !5885
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5886
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !5887
  store float %conv, float* %red1, align 8, !dbg !5888
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5889
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !5889
  %4 = load i16, i16* %green, align 2, !dbg !5889
  %conv2 = uitofp i16 %4 to float, !dbg !5890
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5891
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !5892
  store float %conv2, float* %green3, align 4, !dbg !5893
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5894
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !5894
  %7 = load i16, i16* %blue, align 2, !dbg !5894
  %conv4 = uitofp i16 %7 to float, !dbg !5895
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5896
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !5897
  store float %conv4, float* %blue5, align 8, !dbg !5898
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !5899
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !5899
  %10 = load i16, i16* %opacity, align 2, !dbg !5899
  %conv6 = uitofp i16 %10 to float, !dbg !5900
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5901
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !5902
  store float %conv6, float* %opacity7, align 4, !dbg !5903
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5904
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !5906
  %13 = load i32, i32* %colorspace, align 4, !dbg !5906
  %cmp = icmp eq i32 %13, 12, !dbg !5907
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5908

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !5909
  %cmp9 = icmp ne i16* %14, null, !dbg !5910
  br i1 %cmp9, label %if.then, label %if.end, !dbg !5911

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !5912
  %cmp11 = icmp eq i16* %15, null, !dbg !5912
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !5912

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !5912

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !5912
  %17 = load i16, i16* %16, align 2, !dbg !5912
  %conv13 = zext i16 %17 to i32, !dbg !5912
  br label %cond.end, !dbg !5912

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !5912
  %conv14 = sitofp i32 %cond to float, !dbg !5913
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5914
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !5915
  store float %conv14, float* %index15, align 8, !dbg !5916
  br label %if.end, !dbg !5914

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !5917
}

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !5918 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !5921, metadata !DIExpression()), !dbg !5922
  call void @llvm.dbg.declare(metadata double* %sign, metadata !5923, metadata !DIExpression()), !dbg !5924
  %0 = load double, double* %x.addr, align 8, !dbg !5925
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !5926
  %1 = zext i1 %cmp to i64, !dbg !5925
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !5925
  store double %cond, double* %sign, align 8, !dbg !5927
  %2 = load double, double* %sign, align 8, !dbg !5928
  %3 = load double, double* %x.addr, align 8, !dbg !5930
  %mul = fmul double %2, %3, !dbg !5931
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !5932
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5933

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !5934
  %div = fdiv double 1.000000e+00, %4, !dbg !5935
  store double %div, double* %retval, align 8, !dbg !5936
  br label %return, !dbg !5936

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !5937
  %div2 = fdiv double %5, 1.000000e-15, !dbg !5938
  store double %div2, double* %retval, align 8, !dbg !5939
  br label %return, !dbg !5939

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !5940
  ret double %6, !dbg !5940
}

; Function Attrs: noinline nounwind uwtable
define internal void @BicubicInterpolate(%struct._MagickPixelPacket* %pixels, double %dx, %struct._MagickPixelPacket* %pixel) #0 !dbg !5941 {
entry:
  %pixels.addr = alloca %struct._MagickPixelPacket*, align 8
  %dx.addr = alloca double, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %dx2 = alloca float, align 4
  %p = alloca float, align 4
  %q = alloca float, align 4
  %r = alloca float, align 4
  %s = alloca float, align 4
  store %struct._MagickPixelPacket* %pixels, %struct._MagickPixelPacket** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixels.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  store double %dx, double* %dx.addr, align 8
  call void @llvm.dbg.declare(metadata double* %dx.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  call void @llvm.dbg.declare(metadata float* %dx2, metadata !5952, metadata !DIExpression()), !dbg !5953
  call void @llvm.dbg.declare(metadata float* %p, metadata !5954, metadata !DIExpression()), !dbg !5955
  call void @llvm.dbg.declare(metadata float* %q, metadata !5956, metadata !DIExpression()), !dbg !5957
  call void @llvm.dbg.declare(metadata float* %r, metadata !5958, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata float* %s, metadata !5960, metadata !DIExpression()), !dbg !5961
  %0 = load double, double* %dx.addr, align 8, !dbg !5962
  %1 = load double, double* %dx.addr, align 8, !dbg !5963
  %mul = fmul double %0, %1, !dbg !5964
  %conv = fptrunc double %mul to float, !dbg !5962
  store float %conv, float* %dx2, align 4, !dbg !5965
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5966
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i64 3, !dbg !5966
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx, i32 0, i32 5, !dbg !5967
  %3 = load float, float* %red, align 8, !dbg !5967
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5968
  %arrayidx1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i64 2, !dbg !5968
  %red2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx1, i32 0, i32 5, !dbg !5969
  %5 = load float, float* %red2, align 8, !dbg !5969
  %sub = fsub float %3, %5, !dbg !5970
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5971
  %arrayidx3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i64 0, !dbg !5971
  %red4 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx3, i32 0, i32 5, !dbg !5972
  %7 = load float, float* %red4, align 8, !dbg !5972
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5973
  %arrayidx5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i64 1, !dbg !5973
  %red6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx5, i32 0, i32 5, !dbg !5974
  %9 = load float, float* %red6, align 8, !dbg !5974
  %sub7 = fsub float %7, %9, !dbg !5975
  %sub8 = fsub float %sub, %sub7, !dbg !5976
  store float %sub8, float* %p, align 4, !dbg !5977
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5978
  %arrayidx9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i64 0, !dbg !5978
  %red10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx9, i32 0, i32 5, !dbg !5979
  %11 = load float, float* %red10, align 8, !dbg !5979
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5980
  %arrayidx11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i64 1, !dbg !5980
  %red12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx11, i32 0, i32 5, !dbg !5981
  %13 = load float, float* %red12, align 8, !dbg !5981
  %sub13 = fsub float %11, %13, !dbg !5982
  %14 = load float, float* %p, align 4, !dbg !5983
  %sub14 = fsub float %sub13, %14, !dbg !5984
  store float %sub14, float* %q, align 4, !dbg !5985
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5986
  %arrayidx15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i64 2, !dbg !5986
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx15, i32 0, i32 5, !dbg !5987
  %16 = load float, float* %red16, align 8, !dbg !5987
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5988
  %arrayidx17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i64 0, !dbg !5988
  %red18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx17, i32 0, i32 5, !dbg !5989
  %18 = load float, float* %red18, align 8, !dbg !5989
  %sub19 = fsub float %16, %18, !dbg !5990
  store float %sub19, float* %r, align 4, !dbg !5991
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !5992
  %arrayidx20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %19, i64 1, !dbg !5992
  %red21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx20, i32 0, i32 5, !dbg !5993
  %20 = load float, float* %red21, align 8, !dbg !5993
  store float %20, float* %s, align 4, !dbg !5994
  %21 = load double, double* %dx.addr, align 8, !dbg !5995
  %22 = load float, float* %dx2, align 4, !dbg !5996
  %conv22 = fpext float %22 to double, !dbg !5996
  %mul23 = fmul double %21, %conv22, !dbg !5997
  %23 = load float, float* %p, align 4, !dbg !5998
  %conv24 = fpext float %23 to double, !dbg !5998
  %mul25 = fmul double %mul23, %conv24, !dbg !5999
  %24 = load float, float* %dx2, align 4, !dbg !6000
  %25 = load float, float* %q, align 4, !dbg !6001
  %mul26 = fmul float %24, %25, !dbg !6002
  %conv27 = fpext float %mul26 to double, !dbg !6003
  %add = fadd double %mul25, %conv27, !dbg !6004
  %26 = load double, double* %dx.addr, align 8, !dbg !6005
  %27 = load float, float* %r, align 4, !dbg !6006
  %conv28 = fpext float %27 to double, !dbg !6006
  %mul29 = fmul double %26, %conv28, !dbg !6007
  %add30 = fadd double %add, %mul29, !dbg !6008
  %28 = load float, float* %s, align 4, !dbg !6009
  %conv31 = fpext float %28 to double, !dbg !6009
  %add32 = fadd double %add30, %conv31, !dbg !6010
  %conv33 = fptrunc double %add32 to float, !dbg !6011
  %29 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6012
  %red34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %29, i32 0, i32 5, !dbg !6013
  store float %conv33, float* %red34, align 8, !dbg !6014
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6015
  %arrayidx35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i64 3, !dbg !6015
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx35, i32 0, i32 6, !dbg !6016
  %31 = load float, float* %green, align 4, !dbg !6016
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6017
  %arrayidx36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i64 2, !dbg !6017
  %green37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx36, i32 0, i32 6, !dbg !6018
  %33 = load float, float* %green37, align 4, !dbg !6018
  %sub38 = fsub float %31, %33, !dbg !6019
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6020
  %arrayidx39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i64 0, !dbg !6020
  %green40 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx39, i32 0, i32 6, !dbg !6021
  %35 = load float, float* %green40, align 4, !dbg !6021
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6022
  %arrayidx41 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i64 1, !dbg !6022
  %green42 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx41, i32 0, i32 6, !dbg !6023
  %37 = load float, float* %green42, align 4, !dbg !6023
  %sub43 = fsub float %35, %37, !dbg !6024
  %sub44 = fsub float %sub38, %sub43, !dbg !6025
  store float %sub44, float* %p, align 4, !dbg !6026
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6027
  %arrayidx45 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i64 0, !dbg !6027
  %green46 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx45, i32 0, i32 6, !dbg !6028
  %39 = load float, float* %green46, align 4, !dbg !6028
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6029
  %arrayidx47 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i64 1, !dbg !6029
  %green48 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx47, i32 0, i32 6, !dbg !6030
  %41 = load float, float* %green48, align 4, !dbg !6030
  %sub49 = fsub float %39, %41, !dbg !6031
  %42 = load float, float* %p, align 4, !dbg !6032
  %sub50 = fsub float %sub49, %42, !dbg !6033
  store float %sub50, float* %q, align 4, !dbg !6034
  %43 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6035
  %arrayidx51 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %43, i64 2, !dbg !6035
  %green52 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx51, i32 0, i32 6, !dbg !6036
  %44 = load float, float* %green52, align 4, !dbg !6036
  %45 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6037
  %arrayidx53 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %45, i64 0, !dbg !6037
  %green54 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx53, i32 0, i32 6, !dbg !6038
  %46 = load float, float* %green54, align 4, !dbg !6038
  %sub55 = fsub float %44, %46, !dbg !6039
  store float %sub55, float* %r, align 4, !dbg !6040
  %47 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6041
  %arrayidx56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %47, i64 1, !dbg !6041
  %green57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx56, i32 0, i32 6, !dbg !6042
  %48 = load float, float* %green57, align 4, !dbg !6042
  store float %48, float* %s, align 4, !dbg !6043
  %49 = load double, double* %dx.addr, align 8, !dbg !6044
  %50 = load float, float* %dx2, align 4, !dbg !6045
  %conv58 = fpext float %50 to double, !dbg !6045
  %mul59 = fmul double %49, %conv58, !dbg !6046
  %51 = load float, float* %p, align 4, !dbg !6047
  %conv60 = fpext float %51 to double, !dbg !6047
  %mul61 = fmul double %mul59, %conv60, !dbg !6048
  %52 = load float, float* %dx2, align 4, !dbg !6049
  %53 = load float, float* %q, align 4, !dbg !6050
  %mul62 = fmul float %52, %53, !dbg !6051
  %conv63 = fpext float %mul62 to double, !dbg !6052
  %add64 = fadd double %mul61, %conv63, !dbg !6053
  %54 = load double, double* %dx.addr, align 8, !dbg !6054
  %55 = load float, float* %r, align 4, !dbg !6055
  %conv65 = fpext float %55 to double, !dbg !6055
  %mul66 = fmul double %54, %conv65, !dbg !6056
  %add67 = fadd double %add64, %mul66, !dbg !6057
  %56 = load float, float* %s, align 4, !dbg !6058
  %conv68 = fpext float %56 to double, !dbg !6058
  %add69 = fadd double %add67, %conv68, !dbg !6059
  %conv70 = fptrunc double %add69 to float, !dbg !6060
  %57 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6061
  %green71 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %57, i32 0, i32 6, !dbg !6062
  store float %conv70, float* %green71, align 4, !dbg !6063
  %58 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6064
  %arrayidx72 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %58, i64 3, !dbg !6064
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx72, i32 0, i32 7, !dbg !6065
  %59 = load float, float* %blue, align 8, !dbg !6065
  %60 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6066
  %arrayidx73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %60, i64 2, !dbg !6066
  %blue74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx73, i32 0, i32 7, !dbg !6067
  %61 = load float, float* %blue74, align 8, !dbg !6067
  %sub75 = fsub float %59, %61, !dbg !6068
  %62 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6069
  %arrayidx76 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %62, i64 0, !dbg !6069
  %blue77 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx76, i32 0, i32 7, !dbg !6070
  %63 = load float, float* %blue77, align 8, !dbg !6070
  %64 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6071
  %arrayidx78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %64, i64 1, !dbg !6071
  %blue79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx78, i32 0, i32 7, !dbg !6072
  %65 = load float, float* %blue79, align 8, !dbg !6072
  %sub80 = fsub float %63, %65, !dbg !6073
  %sub81 = fsub float %sub75, %sub80, !dbg !6074
  store float %sub81, float* %p, align 4, !dbg !6075
  %66 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6076
  %arrayidx82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %66, i64 0, !dbg !6076
  %blue83 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx82, i32 0, i32 7, !dbg !6077
  %67 = load float, float* %blue83, align 8, !dbg !6077
  %68 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6078
  %arrayidx84 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %68, i64 1, !dbg !6078
  %blue85 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx84, i32 0, i32 7, !dbg !6079
  %69 = load float, float* %blue85, align 8, !dbg !6079
  %sub86 = fsub float %67, %69, !dbg !6080
  %70 = load float, float* %p, align 4, !dbg !6081
  %sub87 = fsub float %sub86, %70, !dbg !6082
  store float %sub87, float* %q, align 4, !dbg !6083
  %71 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6084
  %arrayidx88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %71, i64 2, !dbg !6084
  %blue89 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx88, i32 0, i32 7, !dbg !6085
  %72 = load float, float* %blue89, align 8, !dbg !6085
  %73 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6086
  %arrayidx90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %73, i64 0, !dbg !6086
  %blue91 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx90, i32 0, i32 7, !dbg !6087
  %74 = load float, float* %blue91, align 8, !dbg !6087
  %sub92 = fsub float %72, %74, !dbg !6088
  store float %sub92, float* %r, align 4, !dbg !6089
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6090
  %arrayidx93 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i64 1, !dbg !6090
  %blue94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx93, i32 0, i32 7, !dbg !6091
  %76 = load float, float* %blue94, align 8, !dbg !6091
  store float %76, float* %s, align 4, !dbg !6092
  %77 = load double, double* %dx.addr, align 8, !dbg !6093
  %78 = load float, float* %dx2, align 4, !dbg !6094
  %conv95 = fpext float %78 to double, !dbg !6094
  %mul96 = fmul double %77, %conv95, !dbg !6095
  %79 = load float, float* %p, align 4, !dbg !6096
  %conv97 = fpext float %79 to double, !dbg !6096
  %mul98 = fmul double %mul96, %conv97, !dbg !6097
  %80 = load float, float* %dx2, align 4, !dbg !6098
  %81 = load float, float* %q, align 4, !dbg !6099
  %mul99 = fmul float %80, %81, !dbg !6100
  %conv100 = fpext float %mul99 to double, !dbg !6101
  %add101 = fadd double %mul98, %conv100, !dbg !6102
  %82 = load double, double* %dx.addr, align 8, !dbg !6103
  %83 = load float, float* %r, align 4, !dbg !6104
  %conv102 = fpext float %83 to double, !dbg !6104
  %mul103 = fmul double %82, %conv102, !dbg !6105
  %add104 = fadd double %add101, %mul103, !dbg !6106
  %84 = load float, float* %s, align 4, !dbg !6107
  %conv105 = fpext float %84 to double, !dbg !6107
  %add106 = fadd double %add104, %conv105, !dbg !6108
  %conv107 = fptrunc double %add106 to float, !dbg !6109
  %85 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6110
  %blue108 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %85, i32 0, i32 7, !dbg !6111
  store float %conv107, float* %blue108, align 8, !dbg !6112
  %86 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6113
  %arrayidx109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %86, i64 3, !dbg !6113
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx109, i32 0, i32 8, !dbg !6114
  %87 = load float, float* %opacity, align 4, !dbg !6114
  %88 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6115
  %arrayidx110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %88, i64 2, !dbg !6115
  %opacity111 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx110, i32 0, i32 8, !dbg !6116
  %89 = load float, float* %opacity111, align 4, !dbg !6116
  %sub112 = fsub float %87, %89, !dbg !6117
  %90 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6118
  %arrayidx113 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %90, i64 0, !dbg !6118
  %opacity114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx113, i32 0, i32 8, !dbg !6119
  %91 = load float, float* %opacity114, align 4, !dbg !6119
  %92 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6120
  %arrayidx115 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %92, i64 1, !dbg !6120
  %opacity116 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx115, i32 0, i32 8, !dbg !6121
  %93 = load float, float* %opacity116, align 4, !dbg !6121
  %sub117 = fsub float %91, %93, !dbg !6122
  %sub118 = fsub float %sub112, %sub117, !dbg !6123
  store float %sub118, float* %p, align 4, !dbg !6124
  %94 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6125
  %arrayidx119 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %94, i64 0, !dbg !6125
  %opacity120 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx119, i32 0, i32 8, !dbg !6126
  %95 = load float, float* %opacity120, align 4, !dbg !6126
  %96 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6127
  %arrayidx121 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %96, i64 1, !dbg !6127
  %opacity122 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx121, i32 0, i32 8, !dbg !6128
  %97 = load float, float* %opacity122, align 4, !dbg !6128
  %sub123 = fsub float %95, %97, !dbg !6129
  %98 = load float, float* %p, align 4, !dbg !6130
  %sub124 = fsub float %sub123, %98, !dbg !6131
  store float %sub124, float* %q, align 4, !dbg !6132
  %99 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6133
  %arrayidx125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %99, i64 2, !dbg !6133
  %opacity126 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx125, i32 0, i32 8, !dbg !6134
  %100 = load float, float* %opacity126, align 4, !dbg !6134
  %101 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6135
  %arrayidx127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %101, i64 0, !dbg !6135
  %opacity128 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx127, i32 0, i32 8, !dbg !6136
  %102 = load float, float* %opacity128, align 4, !dbg !6136
  %sub129 = fsub float %100, %102, !dbg !6137
  store float %sub129, float* %r, align 4, !dbg !6138
  %103 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6139
  %arrayidx130 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %103, i64 1, !dbg !6139
  %opacity131 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx130, i32 0, i32 8, !dbg !6140
  %104 = load float, float* %opacity131, align 4, !dbg !6140
  store float %104, float* %s, align 4, !dbg !6141
  %105 = load double, double* %dx.addr, align 8, !dbg !6142
  %106 = load float, float* %dx2, align 4, !dbg !6143
  %conv132 = fpext float %106 to double, !dbg !6143
  %mul133 = fmul double %105, %conv132, !dbg !6144
  %107 = load float, float* %p, align 4, !dbg !6145
  %conv134 = fpext float %107 to double, !dbg !6145
  %mul135 = fmul double %mul133, %conv134, !dbg !6146
  %108 = load float, float* %dx2, align 4, !dbg !6147
  %109 = load float, float* %q, align 4, !dbg !6148
  %mul136 = fmul float %108, %109, !dbg !6149
  %conv137 = fpext float %mul136 to double, !dbg !6150
  %add138 = fadd double %mul135, %conv137, !dbg !6151
  %110 = load double, double* %dx.addr, align 8, !dbg !6152
  %111 = load float, float* %r, align 4, !dbg !6153
  %conv139 = fpext float %111 to double, !dbg !6153
  %mul140 = fmul double %110, %conv139, !dbg !6154
  %add141 = fadd double %add138, %mul140, !dbg !6155
  %112 = load float, float* %s, align 4, !dbg !6156
  %conv142 = fpext float %112 to double, !dbg !6156
  %add143 = fadd double %add141, %conv142, !dbg !6157
  %conv144 = fptrunc double %add143 to float, !dbg !6158
  %113 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6159
  %opacity145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %113, i32 0, i32 8, !dbg !6160
  store float %conv144, float* %opacity145, align 4, !dbg !6161
  %114 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6162
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %114, i32 0, i32 1, !dbg !6164
  %115 = load i32, i32* %colorspace, align 4, !dbg !6164
  %cmp = icmp eq i32 %115, 12, !dbg !6165
  br i1 %cmp, label %if.then, label %if.end, !dbg !6166

if.then:                                          ; preds = %entry
  %116 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6167
  %arrayidx147 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %116, i64 3, !dbg !6167
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx147, i32 0, i32 9, !dbg !6169
  %117 = load float, float* %index, align 8, !dbg !6169
  %118 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6170
  %arrayidx148 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %118, i64 2, !dbg !6170
  %index149 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx148, i32 0, i32 9, !dbg !6171
  %119 = load float, float* %index149, align 8, !dbg !6171
  %sub150 = fsub float %117, %119, !dbg !6172
  %120 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6173
  %arrayidx151 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %120, i64 0, !dbg !6173
  %index152 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx151, i32 0, i32 9, !dbg !6174
  %121 = load float, float* %index152, align 8, !dbg !6174
  %122 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6175
  %arrayidx153 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %122, i64 1, !dbg !6175
  %index154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx153, i32 0, i32 9, !dbg !6176
  %123 = load float, float* %index154, align 8, !dbg !6176
  %sub155 = fsub float %121, %123, !dbg !6177
  %sub156 = fsub float %sub150, %sub155, !dbg !6178
  store float %sub156, float* %p, align 4, !dbg !6179
  %124 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6180
  %arrayidx157 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %124, i64 0, !dbg !6180
  %index158 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx157, i32 0, i32 9, !dbg !6181
  %125 = load float, float* %index158, align 8, !dbg !6181
  %126 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6182
  %arrayidx159 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %126, i64 1, !dbg !6182
  %index160 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx159, i32 0, i32 9, !dbg !6183
  %127 = load float, float* %index160, align 8, !dbg !6183
  %sub161 = fsub float %125, %127, !dbg !6184
  %128 = load float, float* %p, align 4, !dbg !6185
  %sub162 = fsub float %sub161, %128, !dbg !6186
  store float %sub162, float* %q, align 4, !dbg !6187
  %129 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6188
  %arrayidx163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %129, i64 2, !dbg !6188
  %index164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx163, i32 0, i32 9, !dbg !6189
  %130 = load float, float* %index164, align 8, !dbg !6189
  %131 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6190
  %arrayidx165 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %131, i64 0, !dbg !6190
  %index166 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx165, i32 0, i32 9, !dbg !6191
  %132 = load float, float* %index166, align 8, !dbg !6191
  %sub167 = fsub float %130, %132, !dbg !6192
  store float %sub167, float* %r, align 4, !dbg !6193
  %133 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixels.addr, align 8, !dbg !6194
  %arrayidx168 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %133, i64 1, !dbg !6194
  %index169 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx168, i32 0, i32 9, !dbg !6195
  %134 = load float, float* %index169, align 8, !dbg !6195
  store float %134, float* %s, align 4, !dbg !6196
  %135 = load double, double* %dx.addr, align 8, !dbg !6197
  %136 = load float, float* %dx2, align 4, !dbg !6198
  %conv170 = fpext float %136 to double, !dbg !6198
  %mul171 = fmul double %135, %conv170, !dbg !6199
  %137 = load float, float* %p, align 4, !dbg !6200
  %conv172 = fpext float %137 to double, !dbg !6200
  %mul173 = fmul double %mul171, %conv172, !dbg !6201
  %138 = load float, float* %dx2, align 4, !dbg !6202
  %139 = load float, float* %q, align 4, !dbg !6203
  %mul174 = fmul float %138, %139, !dbg !6204
  %conv175 = fpext float %mul174 to double, !dbg !6205
  %add176 = fadd double %mul173, %conv175, !dbg !6206
  %140 = load double, double* %dx.addr, align 8, !dbg !6207
  %141 = load float, float* %r, align 4, !dbg !6208
  %conv177 = fpext float %141 to double, !dbg !6208
  %mul178 = fmul double %140, %conv177, !dbg !6209
  %add179 = fadd double %add176, %mul178, !dbg !6210
  %142 = load float, float* %s, align 4, !dbg !6211
  %conv180 = fpext float %142 to double, !dbg !6211
  %add181 = fadd double %add179, %conv180, !dbg !6212
  %conv182 = fptrunc double %add181 to float, !dbg !6213
  %143 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6214
  %index183 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %143, i32 0, i32 9, !dbg !6215
  store float %conv182, float* %index183, align 8, !dbg !6216
  br label %if.end, !dbg !6217

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6218
}

declare dso_local %struct._Image* @ExcerptImage(%struct._Image*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #2

declare dso_local %struct._Image* @ResizeImage(%struct._Image*, i64, i64, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @MagickPixelLuma(%struct._MagickPixelPacket* %pixel) #0 !dbg !6219 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %red = alloca float, align 4
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata float* %blue, metadata !6225, metadata !DIExpression()), !dbg !6226
  call void @llvm.dbg.declare(metadata float* %green, metadata !6227, metadata !DIExpression()), !dbg !6228
  call void @llvm.dbg.declare(metadata float* %red, metadata !6229, metadata !DIExpression()), !dbg !6230
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6231
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !6233
  %1 = load i32, i32* %colorspace, align 4, !dbg !6233
  %cmp = icmp eq i32 %1, 2, !dbg !6234
  br i1 %cmp, label %if.then, label %if.end, !dbg !6235

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6236
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !6237
  %3 = load float, float* %red1, align 8, !dbg !6237
  store float %3, float* %retval, align 4, !dbg !6238
  br label %return, !dbg !6238

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6239
  %colorspace2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 1, !dbg !6241
  %5 = load i32, i32* %colorspace2, align 4, !dbg !6241
  %cmp3 = icmp eq i32 %5, 13, !dbg !6242
  br i1 %cmp3, label %if.then4, label %if.end14, !dbg !6243

if.then4:                                         ; preds = %if.end
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6244
  %red5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 5, !dbg !6245
  %7 = load float, float* %red5, align 8, !dbg !6245
  %conv = fpext float %7 to double, !dbg !6244
  %mul = fmul double 2.126560e-01, %conv, !dbg !6246
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6247
  %green6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 6, !dbg !6248
  %9 = load float, float* %green6, align 4, !dbg !6248
  %conv7 = fpext float %9 to double, !dbg !6247
  %mul8 = fmul double 0x3FE6E29307AF20EA, %conv7, !dbg !6249
  %add = fadd double %mul, %mul8, !dbg !6250
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6251
  %blue9 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 7, !dbg !6252
  %11 = load float, float* %blue9, align 8, !dbg !6252
  %conv10 = fpext float %11 to double, !dbg !6251
  %mul11 = fmul double 7.218600e-02, %conv10, !dbg !6253
  %add12 = fadd double %add, %mul11, !dbg !6254
  %conv13 = fptrunc double %add12 to float, !dbg !6255
  store float %conv13, float* %retval, align 4, !dbg !6256
  br label %return, !dbg !6256

if.end14:                                         ; preds = %if.end
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6257
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !6258
  %13 = load float, float* %red15, align 8, !dbg !6258
  %call = call float @EncodePixelGamma(float %13), !dbg !6259
  store float %call, float* %red, align 4, !dbg !6260
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6261
  %green16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 6, !dbg !6262
  %15 = load float, float* %green16, align 4, !dbg !6262
  %call17 = call float @EncodePixelGamma(float %15), !dbg !6263
  store float %call17, float* %green, align 4, !dbg !6264
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6265
  %blue18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 7, !dbg !6266
  %17 = load float, float* %blue18, align 8, !dbg !6266
  %call19 = call float @EncodePixelGamma(float %17), !dbg !6267
  store float %call19, float* %blue, align 4, !dbg !6268
  %18 = load float, float* %red, align 4, !dbg !6269
  %conv20 = fpext float %18 to double, !dbg !6269
  %mul21 = fmul double 2.126560e-01, %conv20, !dbg !6270
  %19 = load float, float* %green, align 4, !dbg !6271
  %conv22 = fpext float %19 to double, !dbg !6271
  %mul23 = fmul double 0x3FE6E29307AF20EA, %conv22, !dbg !6272
  %add24 = fadd double %mul21, %mul23, !dbg !6273
  %20 = load float, float* %blue, align 4, !dbg !6274
  %conv25 = fpext float %20 to double, !dbg !6274
  %mul26 = fmul double 7.218600e-02, %conv25, !dbg !6275
  %add27 = fadd double %add24, %mul26, !dbg !6276
  %conv28 = fptrunc double %add27 to float, !dbg !6277
  store float %conv28, float* %retval, align 4, !dbg !6278
  br label %return, !dbg !6278

return:                                           ; preds = %if.end14, %if.then4, %if.then
  %21 = load float, float* %retval, align 4, !dbg !6279
  ret float %21, !dbg !6279
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal double @MeshInterpolate(%struct._PointInfo* %delta, double %p, double %x, double %y) #0 !dbg !6280 {
entry:
  %delta.addr = alloca %struct._PointInfo*, align 8
  %p.addr = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store %struct._PointInfo* %delta, %struct._PointInfo** %delta.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %delta.addr, metadata !6285, metadata !DIExpression()), !dbg !6286
  store double %p, double* %p.addr, align 8
  call void @llvm.dbg.declare(metadata double* %p.addr, metadata !6287, metadata !DIExpression()), !dbg !6288
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6289, metadata !DIExpression()), !dbg !6290
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6291, metadata !DIExpression()), !dbg !6292
  %0 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !6293
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %0, i32 0, i32 0, !dbg !6294
  %1 = load double, double* %x1, align 8, !dbg !6294
  %2 = load double, double* %x.addr, align 8, !dbg !6295
  %mul = fmul double %1, %2, !dbg !6296
  %3 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !6297
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %3, i32 0, i32 1, !dbg !6298
  %4 = load double, double* %y2, align 8, !dbg !6298
  %5 = load double, double* %y.addr, align 8, !dbg !6299
  %mul3 = fmul double %4, %5, !dbg !6300
  %add = fadd double %mul, %mul3, !dbg !6301
  %6 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !6302
  %x4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %6, i32 0, i32 0, !dbg !6303
  %7 = load double, double* %x4, align 8, !dbg !6303
  %sub = fsub double 1.000000e+00, %7, !dbg !6304
  %8 = load %struct._PointInfo*, %struct._PointInfo** %delta.addr, align 8, !dbg !6305
  %y5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %8, i32 0, i32 1, !dbg !6306
  %9 = load double, double* %y5, align 8, !dbg !6306
  %sub6 = fsub double %sub, %9, !dbg !6307
  %10 = load double, double* %p.addr, align 8, !dbg !6308
  %mul7 = fmul double %sub6, %10, !dbg !6309
  %add8 = fadd double %add, %mul7, !dbg !6310
  ret double %add8, !dbg !6311
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @NearestNeighbor(float %x) #0 !dbg !6312 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6315, metadata !DIExpression()), !dbg !6316
  %0 = load float, float* %x.addr, align 4, !dbg !6317
  %conv = fpext float %0 to double, !dbg !6317
  %cmp = fcmp oge double %conv, 0.000000e+00, !dbg !6319
  br i1 %cmp, label %if.then, label %if.end, !dbg !6320

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !6321
  %conv2 = fpext float %1 to double, !dbg !6321
  %add = fadd double %conv2, 5.000000e-01, !dbg !6322
  %conv3 = fptosi double %add to i64, !dbg !6323
  store i64 %conv3, i64* %retval, align 8, !dbg !6324
  br label %return, !dbg !6324

if.end:                                           ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !6325
  %conv4 = fpext float %2 to double, !dbg !6325
  %sub = fsub double %conv4, 5.000000e-01, !dbg !6326
  %conv5 = fptosi double %sub to i64, !dbg !6327
  store i64 %conv5, i64* %retval, align 8, !dbg !6328
  br label %return, !dbg !6328

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !6329
  ret i64 %3, !dbg !6329
}

; Function Attrs: noinline nounwind uwtable
define internal float @CubicWeightingFunction(float %x) #0 !dbg !6330 {
entry:
  %x.addr = alloca float, align 4
  %alpha = alloca float, align 4
  %gamma = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !6335, metadata !DIExpression()), !dbg !6336
  call void @llvm.dbg.declare(metadata float* %gamma, metadata !6337, metadata !DIExpression()), !dbg !6338
  %0 = load float, float* %x.addr, align 4, !dbg !6339
  %conv = fpext float %0 to double, !dbg !6339
  %add = fadd double %conv, 2.000000e+00, !dbg !6340
  %call = call double @MagickMax(double %add, double 0.000000e+00), !dbg !6341
  %conv1 = fptrunc double %call to float, !dbg !6341
  store float %conv1, float* %alpha, align 4, !dbg !6342
  %1 = load float, float* %alpha, align 4, !dbg !6343
  %conv2 = fpext float %1 to double, !dbg !6343
  %mul = fmul double 1.000000e+00, %conv2, !dbg !6344
  %2 = load float, float* %alpha, align 4, !dbg !6345
  %conv3 = fpext float %2 to double, !dbg !6345
  %mul4 = fmul double %mul, %conv3, !dbg !6346
  %3 = load float, float* %alpha, align 4, !dbg !6347
  %conv5 = fpext float %3 to double, !dbg !6347
  %mul6 = fmul double %mul4, %conv5, !dbg !6348
  %conv7 = fptrunc double %mul6 to float, !dbg !6349
  store float %conv7, float* %gamma, align 4, !dbg !6350
  %4 = load float, float* %x.addr, align 4, !dbg !6351
  %conv8 = fpext float %4 to double, !dbg !6351
  %add9 = fadd double %conv8, 1.000000e+00, !dbg !6352
  %call10 = call double @MagickMax(double %add9, double 0.000000e+00), !dbg !6353
  %conv11 = fptrunc double %call10 to float, !dbg !6353
  store float %conv11, float* %alpha, align 4, !dbg !6354
  %5 = load float, float* %alpha, align 4, !dbg !6355
  %conv12 = fpext float %5 to double, !dbg !6355
  %mul13 = fmul double 4.000000e+00, %conv12, !dbg !6356
  %6 = load float, float* %alpha, align 4, !dbg !6357
  %conv14 = fpext float %6 to double, !dbg !6357
  %mul15 = fmul double %mul13, %conv14, !dbg !6358
  %7 = load float, float* %alpha, align 4, !dbg !6359
  %conv16 = fpext float %7 to double, !dbg !6359
  %mul17 = fmul double %mul15, %conv16, !dbg !6360
  %8 = load float, float* %gamma, align 4, !dbg !6361
  %conv18 = fpext float %8 to double, !dbg !6361
  %sub = fsub double %conv18, %mul17, !dbg !6361
  %conv19 = fptrunc double %sub to float, !dbg !6361
  store float %conv19, float* %gamma, align 4, !dbg !6361
  %9 = load float, float* %x.addr, align 4, !dbg !6362
  %conv20 = fpext float %9 to double, !dbg !6362
  %add21 = fadd double %conv20, 0.000000e+00, !dbg !6363
  %call22 = call double @MagickMax(double %add21, double 0.000000e+00), !dbg !6364
  %conv23 = fptrunc double %call22 to float, !dbg !6364
  store float %conv23, float* %alpha, align 4, !dbg !6365
  %10 = load float, float* %alpha, align 4, !dbg !6366
  %conv24 = fpext float %10 to double, !dbg !6366
  %mul25 = fmul double 6.000000e+00, %conv24, !dbg !6367
  %11 = load float, float* %alpha, align 4, !dbg !6368
  %conv26 = fpext float %11 to double, !dbg !6368
  %mul27 = fmul double %mul25, %conv26, !dbg !6369
  %12 = load float, float* %alpha, align 4, !dbg !6370
  %conv28 = fpext float %12 to double, !dbg !6370
  %mul29 = fmul double %mul27, %conv28, !dbg !6371
  %13 = load float, float* %gamma, align 4, !dbg !6372
  %conv30 = fpext float %13 to double, !dbg !6372
  %add31 = fadd double %conv30, %mul29, !dbg !6372
  %conv32 = fptrunc double %add31 to float, !dbg !6372
  store float %conv32, float* %gamma, align 4, !dbg !6372
  %14 = load float, float* %x.addr, align 4, !dbg !6373
  %conv33 = fpext float %14 to double, !dbg !6373
  %sub34 = fsub double %conv33, 1.000000e+00, !dbg !6374
  %call35 = call double @MagickMax(double %sub34, double 0.000000e+00), !dbg !6375
  %conv36 = fptrunc double %call35 to float, !dbg !6375
  store float %conv36, float* %alpha, align 4, !dbg !6376
  %15 = load float, float* %alpha, align 4, !dbg !6377
  %conv37 = fpext float %15 to double, !dbg !6377
  %mul38 = fmul double 4.000000e+00, %conv37, !dbg !6378
  %16 = load float, float* %alpha, align 4, !dbg !6379
  %conv39 = fpext float %16 to double, !dbg !6379
  %mul40 = fmul double %mul38, %conv39, !dbg !6380
  %17 = load float, float* %alpha, align 4, !dbg !6381
  %conv41 = fpext float %17 to double, !dbg !6381
  %mul42 = fmul double %mul40, %conv41, !dbg !6382
  %18 = load float, float* %gamma, align 4, !dbg !6383
  %conv43 = fpext float %18 to double, !dbg !6383
  %sub44 = fsub double %conv43, %mul42, !dbg !6383
  %conv45 = fptrunc double %sub44 to float, !dbg !6383
  store float %conv45, float* %gamma, align 4, !dbg !6383
  %19 = load float, float* %gamma, align 4, !dbg !6384
  %conv46 = fpext float %19 to double, !dbg !6384
  %div = fdiv double %conv46, 6.000000e+00, !dbg !6385
  %conv47 = fptrunc double %div to float, !dbg !6386
  ret float %conv47, !dbg !6387
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @InterpretImageAttributes(%struct._ImageInfo* %image_info, %struct._Image* %image, i8* %embed_text) #0 !dbg !6388 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %embed_text.addr = alloca i8*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6393, metadata !DIExpression()), !dbg !6394
  store i8* %embed_text, i8** %embed_text.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %embed_text.addr, metadata !6395, metadata !DIExpression()), !dbg !6396
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4091, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0)), !dbg !6397
  %0 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !6398
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6399
  %2 = load i8*, i8** %embed_text.addr, align 8, !dbg !6400
  %call1 = call i8* @InterpretImageProperties(%struct._ImageInfo* %0, %struct._Image* %1, i8* %2), !dbg !6401
  ret i8* %call1, !dbg !6402
}

declare dso_local i8* @InterpretImageProperties(%struct._ImageInfo*, %struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @InversesRGBCompandor(float %pixel) #0 !dbg !6403 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca float, align 4
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !6404, metadata !DIExpression()), !dbg !6405
  %0 = load float, float* %pixel.addr, align 4, !dbg !6406
  %conv = fpext float %0 to double, !dbg !6406
  %cmp = fcmp ole double %conv, 0x40A4B58CE259D3F7, !dbg !6408
  br i1 %cmp, label %if.then, label %if.end, !dbg !6409

if.then:                                          ; preds = %entry
  %1 = load float, float* %pixel.addr, align 4, !dbg !6410
  %conv2 = fpext float %1 to double, !dbg !6410
  %div = fdiv double %conv2, 1.292000e+01, !dbg !6411
  %conv3 = fptrunc double %div to float, !dbg !6412
  store float %conv3, float* %retval, align 4, !dbg !6413
  br label %return, !dbg !6413

if.end:                                           ; preds = %entry
  %2 = load float, float* %pixel.addr, align 4, !dbg !6414
  %conv4 = fpext float %2 to double, !dbg !6414
  %mul = fmul double 0x3EF0001000100010, %conv4, !dbg !6415
  %add = fadd double %mul, 5.500000e-02, !dbg !6416
  %div5 = fdiv double %add, 1.055000e+00, !dbg !6417
  %call = call double @pow(double %div5, double 2.400000e+00) #8, !dbg !6418
  %mul6 = fmul double 6.553500e+04, %call, !dbg !6419
  %conv7 = fptrunc double %mul6 to float, !dbg !6420
  store float %conv7, float* %retval, align 4, !dbg !6421
  br label %return, !dbg !6421

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !6422
  ret float %3, !dbg !6422
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @IsMagickInstantiated() #0 !dbg !6423 {
entry:
  %call = call i32 @IsMagickCoreInstantiated(), !dbg !6424
  ret i32 %call, !dbg !6425
}

declare dso_local i32 @IsMagickCoreInstantiated() #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @IsSubimage(i8* %geometry, i32 %pedantic) #0 !dbg !6426 {
entry:
  %retval = alloca i32, align 4
  %geometry.addr = alloca i8*, align 8
  %pedantic.addr = alloca i32, align 4
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !6429, metadata !DIExpression()), !dbg !6430
  store i32 %pedantic, i32* %pedantic.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pedantic.addr, metadata !6431, metadata !DIExpression()), !dbg !6432
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4178, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !6433
  %0 = load i8*, i8** %geometry.addr, align 8, !dbg !6434
  %cmp = icmp eq i8* %0, null, !dbg !6436
  br i1 %cmp, label %if.then, label %if.end, !dbg !6437

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6438
  br label %return, !dbg !6438

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %geometry.addr, align 8, !dbg !6439
  %call1 = call i8* @strchr(i8* %1, i32 120) #11, !dbg !6441
  %cmp2 = icmp ne i8* %call1, null, !dbg !6442
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !6443

lor.lhs.false:                                    ; preds = %if.end
  %2 = load i8*, i8** %geometry.addr, align 8, !dbg !6444
  %call3 = call i8* @strchr(i8* %2, i32 88) #11, !dbg !6445
  %cmp4 = icmp ne i8* %call3, null, !dbg !6446
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !6447

if.then5:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6448
  br label %return, !dbg !6448

if.end6:                                          ; preds = %lor.lhs.false
  %3 = load i32, i32* %pedantic.addr, align 4, !dbg !6449
  %cmp7 = icmp ne i32 %3, 0, !dbg !6451
  br i1 %cmp7, label %land.lhs.true, label %if.end11, !dbg !6452

land.lhs.true:                                    ; preds = %if.end6
  %4 = load i8*, i8** %geometry.addr, align 8, !dbg !6453
  %call8 = call i8* @strchr(i8* %4, i32 44) #11, !dbg !6454
  %cmp9 = icmp ne i8* %call8, null, !dbg !6455
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !6456

if.then10:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !6457
  br label %return, !dbg !6457

if.end11:                                         ; preds = %land.lhs.true, %if.end6
  store i32 1, i32* %retval, align 4, !dbg !6458
  br label %return, !dbg !6458

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !6459
  ret i32 %5, !dbg !6459
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @LevelImageColors(%struct._Image* %image, i32 %channel, %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket* %white_color, i32 %invert) #0 !dbg !6460 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %black_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %white_color.addr = alloca %struct._MagickPixelPacket*, align 8
  %invert.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store %struct._MagickPixelPacket* %black_color, %struct._MagickPixelPacket** %black_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %black_color.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  store %struct._MagickPixelPacket* %white_color, %struct._MagickPixelPacket** %white_color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %white_color.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  store i32 %invert, i32* %invert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %invert.addr, metadata !6471, metadata !DIExpression()), !dbg !6472
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6473
  %1 = load i32, i32* %channel.addr, align 4, !dbg !6474
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %black_color.addr, align 8, !dbg !6475
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %white_color.addr, align 8, !dbg !6476
  %4 = load i32, i32* %invert.addr, align 4, !dbg !6477
  %call = call i32 @LevelColorsImageChannel(%struct._Image* %0, i32 %1, %struct._MagickPixelPacket* %2, %struct._MagickPixelPacket* %3, i32 %4), !dbg !6478
  ret i32 %call, !dbg !6479
}

declare dso_local i32 @LevelColorsImageChannel(%struct._Image*, i32, %struct._MagickPixelPacket*, %struct._MagickPixelPacket*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @LiberateMemory(i8** %memory) #0 !dbg !6480 {
entry:
  %memory.addr = alloca i8**, align 8
  store i8** %memory, i8*** %memory.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %memory.addr, metadata !6484, metadata !DIExpression()), !dbg !6485
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4267, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !6486
  %0 = load i8**, i8*** %memory.addr, align 8, !dbg !6487
  %1 = load i8*, i8** %0, align 8, !dbg !6489
  %cmp = icmp eq i8* %1, null, !dbg !6490
  br i1 %cmp, label %if.then, label %if.end, !dbg !6491

if.then:                                          ; preds = %entry
  br label %return, !dbg !6492

if.end:                                           ; preds = %entry
  %2 = load i8**, i8*** %memory.addr, align 8, !dbg !6493
  %3 = load i8*, i8** %2, align 8, !dbg !6494
  call void @free(i8* %3) #8, !dbg !6495
  %4 = load i8**, i8*** %memory.addr, align 8, !dbg !6496
  store i8* null, i8** %4, align 8, !dbg !6497
  br label %return, !dbg !6498

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6498
}

; Function Attrs: nounwind
declare dso_local void @free(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @LiberateSemaphoreInfo(%struct.SemaphoreInfo** %semaphore_info) #0 !dbg !6499 {
entry:
  %semaphore_info.addr = alloca %struct.SemaphoreInfo**, align 8
  store %struct.SemaphoreInfo** %semaphore_info, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SemaphoreInfo*** %semaphore_info.addr, metadata !6500, metadata !DIExpression()), !dbg !6501
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4302, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !6502
  %0 = load %struct.SemaphoreInfo**, %struct.SemaphoreInfo*** %semaphore_info.addr, align 8, !dbg !6503
  %1 = load %struct.SemaphoreInfo*, %struct.SemaphoreInfo** %0, align 8, !dbg !6504
  call void @UnlockSemaphoreInfo(%struct.SemaphoreInfo* %1), !dbg !6505
  ret void, !dbg !6506
}

declare dso_local void @UnlockSemaphoreInfo(%struct.SemaphoreInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @MagickIncarnate(i8* %path) #0 !dbg !6507 {
entry:
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !6508, metadata !DIExpression()), !dbg !6509
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4335, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)), !dbg !6510
  %0 = load i8*, i8** %path.addr, align 8, !dbg !6511
  call void @MagickCoreGenesis(i8* %0, i32 0), !dbg !6512
  ret void, !dbg !6513
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MagickMonitor(i8* %text, i64 %offset, i64 %span, i8* %client_data) #0 !dbg !6514 {
entry:
  %text.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %span.addr = alloca i64, align 8
  %client_data.addr = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store i8* %text, i8** %text.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %text.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  store i64 %span, i64* %span.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %span.addr, metadata !6519, metadata !DIExpression()), !dbg !6520
  store i8* %client_data, i8** %client_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %client_data.addr, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !6523, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6525, metadata !DIExpression()), !dbg !6526
  %0 = load i8*, i8** %text.addr, align 8, !dbg !6527
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4384, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %0), !dbg !6528
  store i32 1, i32* %status, align 4, !dbg !6529
  %call1 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !6530
  store %struct._ExceptionInfo* %call1, %struct._ExceptionInfo** %exception, align 8, !dbg !6531
  %1 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** @monitor_handler, align 8, !dbg !6532
  %cmp = icmp ne i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %1, null, !dbg !6534
  br i1 %cmp, label %if.then, label %if.end, !dbg !6535

if.then:                                          ; preds = %entry
  %2 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** @monitor_handler, align 8, !dbg !6536
  %3 = load i8*, i8** %text.addr, align 8, !dbg !6537
  %4 = load i64, i64* %offset.addr, align 8, !dbg !6538
  %5 = load i64, i64* %span.addr, align 8, !dbg !6539
  %6 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6540
  %call2 = call i32 %2(i8* %3, i64 %4, i64 %5, %struct._ExceptionInfo* %6), !dbg !6541
  store i32 %call2, i32* %status, align 4, !dbg !6542
  br label %if.end, !dbg !6543

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !6544
  %call3 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %7), !dbg !6545
  store %struct._ExceptionInfo* %call3, %struct._ExceptionInfo** %exception, align 8, !dbg !6546
  %8 = load i32, i32* %status, align 4, !dbg !6547
  ret i32 %8, !dbg !6548
}

declare dso_local %struct._ExceptionInfo* @AcquireExceptionInfo() #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MapImage(%struct._Image* %image, %struct._Image* %map_image, i32 %dither) #0 !dbg !6549 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %map_image.addr = alloca %struct._Image*, align 8
  %dither.addr = alloca i32, align 4
  %quantize_info = alloca %struct._QuantizeInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6552, metadata !DIExpression()), !dbg !6553
  store %struct._Image* %map_image, %struct._Image** %map_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %map_image.addr, metadata !6554, metadata !DIExpression()), !dbg !6555
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !6556, metadata !DIExpression()), !dbg !6557
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo* %quantize_info, metadata !6558, metadata !DIExpression()), !dbg !6559
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6560
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6562
  %1 = load i32, i32* %debug, align 8, !dbg !6562
  %cmp = icmp ne i32 %1, 0, !dbg !6563
  br i1 %cmp, label %if.then, label %if.end, !dbg !6564

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6565
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6566
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6565
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4443, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !6567
  br label %if.end, !dbg !6568

if.end:                                           ; preds = %if.then, %entry
  call void @GetQuantizeInfo(%struct._QuantizeInfo* %quantize_info), !dbg !6569
  %3 = load i32, i32* %dither.addr, align 4, !dbg !6570
  %dither1 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %quantize_info, i32 0, i32 2, !dbg !6571
  store i32 %3, i32* %dither1, align 8, !dbg !6572
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6573
  %5 = load %struct._Image*, %struct._Image** %map_image.addr, align 8, !dbg !6574
  %call2 = call i32 @RemapImage(%struct._QuantizeInfo* %quantize_info, %struct._Image* %4, %struct._Image* %5), !dbg !6575
  ret i32 %call2, !dbg !6576
}

declare dso_local void @GetQuantizeInfo(%struct._QuantizeInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MapImages(%struct._Image* %images, %struct._Image* %map_image, i32 %dither) #0 !dbg !6577 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %map_image.addr = alloca %struct._Image*, align 8
  %dither.addr = alloca i32, align 4
  %quantize_info = alloca %struct._QuantizeInfo, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !6578, metadata !DIExpression()), !dbg !6579
  store %struct._Image* %map_image, %struct._Image** %map_image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %map_image.addr, metadata !6580, metadata !DIExpression()), !dbg !6581
  store i32 %dither, i32* %dither.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dither.addr, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata %struct._QuantizeInfo* %quantize_info, metadata !6584, metadata !DIExpression()), !dbg !6585
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !6586
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6588
  %1 = load i32, i32* %debug, align 8, !dbg !6588
  %cmp = icmp ne i32 %1, 0, !dbg !6589
  br i1 %cmp, label %if.then, label %if.end, !dbg !6590

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !6591
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6592
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6591
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4497, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !6593
  br label %if.end, !dbg !6594

if.end:                                           ; preds = %if.then, %entry
  call void @GetQuantizeInfo(%struct._QuantizeInfo* %quantize_info), !dbg !6595
  %3 = load i32, i32* %dither.addr, align 4, !dbg !6596
  %dither1 = getelementptr inbounds %struct._QuantizeInfo, %struct._QuantizeInfo* %quantize_info, i32 0, i32 2, !dbg !6597
  store i32 %3, i32* %dither1, align 8, !dbg !6598
  %4 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !6599
  %5 = load %struct._Image*, %struct._Image** %map_image.addr, align 8, !dbg !6600
  %call2 = call i32 @RemapImages(%struct._QuantizeInfo* %quantize_info, %struct._Image* %4, %struct._Image* %5), !dbg !6601
  ret i32 %call2, !dbg !6602
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @MatteFloodfillImage(%struct._Image* %image, i64 %target.coerce, i16 zeroext %opacity, i64 %x_offset, i64 %y_offset, i32 %method) #0 !dbg !6603 {
entry:
  %retval = alloca i32, align 4
  %target = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca i16, align 2
  %x_offset.addr = alloca i64, align 8
  %y_offset.addr = alloca i64, align 8
  %method.addr = alloca i32, align 4
  %floodplane_image = alloca %struct._Image*, align 8
  %skip = alloca i32, align 4
  %s = alloca %struct._SegmentInfo*, align 8
  %segment_stack = alloca %struct._SegmentInfo*, align 8
  %offset = alloca i64, align 8
  %start = alloca i64, align 8
  %x = alloca i64, align 8
  %x1 = alloca i64, align 8
  %x2 = alloca i64, align 8
  %y = alloca i64, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x94 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %p395 = alloca %struct._PixelPacket*, align 8
  %x396 = alloca i64, align 8
  %q397 = alloca %struct._PixelPacket*, align 8
  %0 = bitcast %struct._PixelPacket* %target to i64*
  store i64 %target.coerce, i64* %0, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !6609, metadata !DIExpression()), !dbg !6610
  store i16 %opacity, i16* %opacity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opacity.addr, metadata !6611, metadata !DIExpression()), !dbg !6612
  store i64 %x_offset, i64* %x_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x_offset.addr, metadata !6613, metadata !DIExpression()), !dbg !6614
  store i64 %y_offset, i64* %y_offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y_offset.addr, metadata !6615, metadata !DIExpression()), !dbg !6616
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !6617, metadata !DIExpression()), !dbg !6618
  call void @llvm.dbg.declare(metadata %struct._Image** %floodplane_image, metadata !6619, metadata !DIExpression()), !dbg !6620
  call void @llvm.dbg.declare(metadata i32* %skip, metadata !6621, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %s, metadata !6623, metadata !DIExpression()), !dbg !6624
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %segment_stack, metadata !6625, metadata !DIExpression()), !dbg !6626
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !6627, metadata !DIExpression()), !dbg !6628
  call void @llvm.dbg.declare(metadata i64* %start, metadata !6629, metadata !DIExpression()), !dbg !6630
  call void @llvm.dbg.declare(metadata i64* %x, metadata !6631, metadata !DIExpression()), !dbg !6632
  call void @llvm.dbg.declare(metadata i64* %x1, metadata !6633, metadata !DIExpression()), !dbg !6634
  call void @llvm.dbg.declare(metadata i64* %x2, metadata !6635, metadata !DIExpression()), !dbg !6636
  call void @llvm.dbg.declare(metadata i64* %y, metadata !6637, metadata !DIExpression()), !dbg !6638
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6639
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !6641
  %2 = load i32, i32* %debug, align 8, !dbg !6641
  %cmp = icmp ne i32 %2, 0, !dbg !6642
  br i1 %cmp, label %if.then, label %if.end, !dbg !6643

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6644
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !6645
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6644
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4576, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !6646
  br label %if.end, !dbg !6647

if.end:                                           ; preds = %if.then, %entry
  %4 = load i64, i64* %x_offset.addr, align 8, !dbg !6648
  %cmp1 = icmp slt i64 %4, 0, !dbg !6650
  br i1 %cmp1, label %if.then3, label %lor.lhs.false, !dbg !6651

lor.lhs.false:                                    ; preds = %if.end
  %5 = load i64, i64* %x_offset.addr, align 8, !dbg !6652
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6653
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 7, !dbg !6654
  %7 = load i64, i64* %columns, align 8, !dbg !6654
  %cmp2 = icmp sge i64 %5, %7, !dbg !6655
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6656

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  store i32 0, i32* %retval, align 4, !dbg !6657
  br label %return, !dbg !6657

if.end4:                                          ; preds = %lor.lhs.false
  %8 = load i64, i64* %y_offset.addr, align 8, !dbg !6658
  %cmp5 = icmp slt i64 %8, 0, !dbg !6660
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6, !dbg !6661

lor.lhs.false6:                                   ; preds = %if.end4
  %9 = load i64, i64* %y_offset.addr, align 8, !dbg !6662
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6663
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 8, !dbg !6664
  %11 = load i64, i64* %rows, align 8, !dbg !6664
  %cmp7 = icmp sge i64 %9, %11, !dbg !6665
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6666

if.then8:                                         ; preds = %lor.lhs.false6, %if.end4
  store i32 0, i32* %retval, align 4, !dbg !6667
  br label %return, !dbg !6667

if.end9:                                          ; preds = %lor.lhs.false6
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6668
  %call10 = call i32 @SetImageStorageClass(%struct._Image* %12, i32 1), !dbg !6670
  %cmp11 = icmp eq i32 %call10, 0, !dbg !6671
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6672

if.then12:                                        ; preds = %if.end9
  store i32 0, i32* %retval, align 4, !dbg !6673
  br label %return, !dbg !6673

if.end13:                                         ; preds = %if.end9
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6674
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 6, !dbg !6676
  %14 = load i32, i32* %matte, align 8, !dbg !6676
  %cmp14 = icmp eq i32 %14, 0, !dbg !6677
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !6678

if.then15:                                        ; preds = %if.end13
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6679
  %call16 = call i32 @SetImageAlphaChannel(%struct._Image* %15, i32 6), !dbg !6680
  br label %if.end17, !dbg !6681

if.end17:                                         ; preds = %if.then15, %if.end13
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6682
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6683
  %columns18 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !6684
  %18 = load i64, i64* %columns18, align 8, !dbg !6684
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6685
  %rows19 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !6686
  %20 = load i64, i64* %rows19, align 8, !dbg !6686
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6687
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !6688
  %call20 = call %struct._Image* @CloneImage(%struct._Image* %16, i64 %18, i64 %20, i32 1, %struct._ExceptionInfo* %exception), !dbg !6689
  store %struct._Image* %call20, %struct._Image** %floodplane_image, align 8, !dbg !6690
  %22 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6691
  %cmp21 = icmp eq %struct._Image* %22, null, !dbg !6693
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !6694

if.then22:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !6695
  br label %return, !dbg !6695

if.end23:                                         ; preds = %if.end17
  %23 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6696
  %call24 = call i32 @SetImageAlphaChannel(%struct._Image* %23, i32 6), !dbg !6697
  %call25 = call i8* @AcquireQuantumMemory(i64 32768, i64 32) #12, !dbg !6698
  %24 = bitcast i8* %call25 to %struct._SegmentInfo*, !dbg !6699
  store %struct._SegmentInfo* %24, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6700
  %25 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6701
  %cmp26 = icmp eq %struct._SegmentInfo* %25, null, !dbg !6703
  br i1 %cmp26, label %if.then27, label %if.end36, !dbg !6704

if.then27:                                        ; preds = %if.end23
  %26 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6705
  %call28 = call %struct._Image* @DestroyImage(%struct._Image* %26), !dbg !6707
  store %struct._Image* %call28, %struct._Image** %floodplane_image, align 8, !dbg !6708
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6709
  %cmp29 = icmp ne %struct._Image* %27, null, !dbg !6709
  br i1 %cmp29, label %if.then30, label %if.end35, !dbg !6712

if.then30:                                        ; preds = %if.then27
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6709
  %exception31 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 58, !dbg !6709
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6709
  %filename32 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 53, !dbg !6709
  %arraydecay33 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename32, i64 0, i64 0, !dbg !6709
  %call34 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception31, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4599, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay33), !dbg !6709
  br label %if.end35, !dbg !6709

if.end35:                                         ; preds = %if.then30, %if.then27
  store i32 0, i32* %retval, align 4, !dbg !6712
  br label %return, !dbg !6712

if.end36:                                         ; preds = %if.end23
  %30 = load i64, i64* %x_offset.addr, align 8, !dbg !6713
  store i64 %30, i64* %x, align 8, !dbg !6714
  %31 = load i64, i64* %y_offset.addr, align 8, !dbg !6715
  store i64 %31, i64* %y, align 8, !dbg !6716
  store i64 0, i64* %start, align 8, !dbg !6717
  %32 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6718
  store %struct._SegmentInfo* %32, %struct._SegmentInfo** %s, align 8, !dbg !6719
  %33 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6720
  %34 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6720
  %add.ptr = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %34, i64 32768, !dbg !6720
  %cmp37 = icmp uge %struct._SegmentInfo* %33, %add.ptr, !dbg !6720
  br i1 %cmp37, label %if.then38, label %if.else, !dbg !6723

if.then38:                                        ; preds = %if.end36
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6724
  %cmp39 = icmp ne %struct._Image* %35, null, !dbg !6724
  br i1 %cmp39, label %if.then40, label %if.end45, !dbg !6727

if.then40:                                        ; preds = %if.then38
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6724
  %exception41 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 58, !dbg !6724
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6724
  %filename42 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 53, !dbg !6724
  %arraydecay43 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename42, i64 0, i64 0, !dbg !6724
  %call44 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception41, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4608, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay43), !dbg !6724
  br label %if.end45, !dbg !6724

if.end45:                                         ; preds = %if.then40, %if.then38
  store i32 0, i32* %retval, align 4, !dbg !6727
  br label %return, !dbg !6727

if.else:                                          ; preds = %if.end36
  %38 = load i64, i64* %y, align 8, !dbg !6728
  %add = add nsw i64 %38, 1, !dbg !6728
  %cmp46 = icmp sge i64 %add, 0, !dbg !6728
  br i1 %cmp46, label %land.lhs.true, label %if.end55, !dbg !6728

land.lhs.true:                                    ; preds = %if.else
  %39 = load i64, i64* %y, align 8, !dbg !6728
  %add47 = add nsw i64 %39, 1, !dbg !6728
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6728
  %rows48 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 8, !dbg !6728
  %41 = load i64, i64* %rows48, align 8, !dbg !6728
  %cmp49 = icmp slt i64 %add47, %41, !dbg !6728
  br i1 %cmp49, label %if.then50, label %if.end55, !dbg !6731

if.then50:                                        ; preds = %land.lhs.true
  %42 = load i64, i64* %x, align 8, !dbg !6732
  %conv = sitofp i64 %42 to double, !dbg !6732
  %43 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6732
  %x151 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %43, i32 0, i32 0, !dbg !6732
  store double %conv, double* %x151, align 8, !dbg !6732
  %44 = load i64, i64* %y, align 8, !dbg !6732
  %conv52 = sitofp i64 %44 to double, !dbg !6732
  %45 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6732
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %45, i32 0, i32 1, !dbg !6732
  store double %conv52, double* %y1, align 8, !dbg !6732
  %46 = load i64, i64* %x, align 8, !dbg !6732
  %conv53 = sitofp i64 %46 to double, !dbg !6732
  %47 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6732
  %x254 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %47, i32 0, i32 2, !dbg !6732
  store double %conv53, double* %x254, align 8, !dbg !6732
  %48 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6732
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %48, i32 0, i32 3, !dbg !6732
  store double 1.000000e+00, double* %y2, align 8, !dbg !6732
  %49 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6732
  %incdec.ptr = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %49, i32 1, !dbg !6732
  store %struct._SegmentInfo* %incdec.ptr, %struct._SegmentInfo** %s, align 8, !dbg !6732
  br label %if.end55, !dbg !6732

if.end55:                                         ; preds = %if.then50, %land.lhs.true, %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55
  %50 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6734
  %51 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6734
  %add.ptr57 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %51, i64 32768, !dbg !6734
  %cmp58 = icmp uge %struct._SegmentInfo* %50, %add.ptr57, !dbg !6734
  br i1 %cmp58, label %if.then60, label %if.else69, !dbg !6737

if.then60:                                        ; preds = %if.end56
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6738
  %cmp61 = icmp ne %struct._Image* %52, null, !dbg !6738
  br i1 %cmp61, label %if.then63, label %if.end68, !dbg !6741

if.then63:                                        ; preds = %if.then60
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6738
  %exception64 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !6738
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6738
  %filename65 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 53, !dbg !6738
  %arraydecay66 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename65, i64 0, i64 0, !dbg !6738
  %call67 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4609, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay66), !dbg !6738
  br label %if.end68, !dbg !6738

if.end68:                                         ; preds = %if.then63, %if.then60
  store i32 0, i32* %retval, align 4, !dbg !6741
  br label %return, !dbg !6741

if.else69:                                        ; preds = %if.end56
  %55 = load i64, i64* %y, align 8, !dbg !6742
  %add70 = add nsw i64 %55, 1, !dbg !6742
  %add71 = add nsw i64 %add70, -1, !dbg !6742
  %cmp72 = icmp sge i64 %add71, 0, !dbg !6742
  br i1 %cmp72, label %land.lhs.true74, label %if.end90, !dbg !6742

land.lhs.true74:                                  ; preds = %if.else69
  %56 = load i64, i64* %y, align 8, !dbg !6742
  %add75 = add nsw i64 %56, 1, !dbg !6742
  %add76 = add nsw i64 %add75, -1, !dbg !6742
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6742
  %rows77 = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 8, !dbg !6742
  %58 = load i64, i64* %rows77, align 8, !dbg !6742
  %cmp78 = icmp slt i64 %add76, %58, !dbg !6742
  br i1 %cmp78, label %if.then80, label %if.end90, !dbg !6745

if.then80:                                        ; preds = %land.lhs.true74
  %59 = load i64, i64* %x, align 8, !dbg !6746
  %conv81 = sitofp i64 %59 to double, !dbg !6746
  %60 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6746
  %x182 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %60, i32 0, i32 0, !dbg !6746
  store double %conv81, double* %x182, align 8, !dbg !6746
  %61 = load i64, i64* %y, align 8, !dbg !6746
  %add83 = add nsw i64 %61, 1, !dbg !6746
  %conv84 = sitofp i64 %add83 to double, !dbg !6746
  %62 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6746
  %y185 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %62, i32 0, i32 1, !dbg !6746
  store double %conv84, double* %y185, align 8, !dbg !6746
  %63 = load i64, i64* %x, align 8, !dbg !6746
  %conv86 = sitofp i64 %63 to double, !dbg !6746
  %64 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6746
  %x287 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %64, i32 0, i32 2, !dbg !6746
  store double %conv86, double* %x287, align 8, !dbg !6746
  %65 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6746
  %y288 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %65, i32 0, i32 3, !dbg !6746
  store double -1.000000e+00, double* %y288, align 8, !dbg !6746
  %66 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6746
  %incdec.ptr89 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %66, i32 1, !dbg !6746
  store %struct._SegmentInfo* %incdec.ptr89, %struct._SegmentInfo** %s, align 8, !dbg !6746
  br label %if.end90, !dbg !6746

if.end90:                                         ; preds = %if.then80, %land.lhs.true74, %if.else69
  br label %if.end91

if.end91:                                         ; preds = %if.end90
  br label %while.cond, !dbg !6748

while.cond:                                       ; preds = %do.end, %if.end91
  %67 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6749
  %68 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6750
  %cmp92 = icmp ugt %struct._SegmentInfo* %67, %68, !dbg !6751
  br i1 %cmp92, label %while.body, label %while.end, !dbg !6748

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !6752, metadata !DIExpression()), !dbg !6754
  call void @llvm.dbg.declare(metadata i64* %x94, metadata !6755, metadata !DIExpression()), !dbg !6756
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !6757, metadata !DIExpression()), !dbg !6758
  %69 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6759
  %incdec.ptr95 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %69, i32 -1, !dbg !6759
  store %struct._SegmentInfo* %incdec.ptr95, %struct._SegmentInfo** %s, align 8, !dbg !6759
  %70 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6760
  %x196 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %70, i32 0, i32 0, !dbg !6761
  %71 = load double, double* %x196, align 8, !dbg !6761
  %conv97 = fptosi double %71 to i64, !dbg !6762
  store i64 %conv97, i64* %x1, align 8, !dbg !6763
  %72 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6764
  %x298 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %72, i32 0, i32 2, !dbg !6765
  %73 = load double, double* %x298, align 8, !dbg !6765
  %conv99 = fptosi double %73 to i64, !dbg !6766
  store i64 %conv99, i64* %x2, align 8, !dbg !6767
  %74 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6768
  %y2100 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %74, i32 0, i32 3, !dbg !6769
  %75 = load double, double* %y2100, align 8, !dbg !6769
  %conv101 = fptosi double %75 to i64, !dbg !6770
  store i64 %conv101, i64* %offset, align 8, !dbg !6771
  %76 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6772
  %y1102 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %76, i32 0, i32 1, !dbg !6773
  %77 = load double, double* %y1102, align 8, !dbg !6773
  %conv103 = fptosi double %77 to i64, !dbg !6774
  %78 = load i64, i64* %offset, align 8, !dbg !6775
  %add104 = add nsw i64 %conv103, %78, !dbg !6776
  store i64 %add104, i64* %y, align 8, !dbg !6777
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6778
  %80 = load i64, i64* %y, align 8, !dbg !6779
  %81 = load i64, i64* %x1, align 8, !dbg !6780
  %add105 = add nsw i64 %81, 1, !dbg !6781
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6782
  %exception106 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 58, !dbg !6783
  %call107 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %79, i64 0, i64 %80, i64 %add105, i64 1, %struct._ExceptionInfo* %exception106), !dbg !6784
  store %struct._PixelPacket* %call107, %struct._PixelPacket** %p, align 8, !dbg !6785
  %83 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6786
  %84 = load i64, i64* %y, align 8, !dbg !6787
  %85 = load i64, i64* %x1, align 8, !dbg !6788
  %add108 = add nsw i64 %85, 1, !dbg !6789
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6790
  %exception109 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 58, !dbg !6791
  %call110 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %83, i64 0, i64 %84, i64 %add108, i64 1, %struct._ExceptionInfo* %exception109), !dbg !6792
  store %struct._PixelPacket* %call110, %struct._PixelPacket** %q, align 8, !dbg !6793
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6794
  %cmp111 = icmp eq %struct._PixelPacket* %87, null, !dbg !6796
  br i1 %cmp111, label %if.then116, label %lor.lhs.false113, !dbg !6797

lor.lhs.false113:                                 ; preds = %while.body
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6798
  %cmp114 = icmp eq %struct._PixelPacket* %88, null, !dbg !6799
  br i1 %cmp114, label %if.then116, label %if.end117, !dbg !6800

if.then116:                                       ; preds = %lor.lhs.false113, %while.body
  br label %while.end, !dbg !6801

if.end117:                                        ; preds = %lor.lhs.false113
  %89 = load i64, i64* %x1, align 8, !dbg !6802
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6803
  %add.ptr118 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i64 %89, !dbg !6803
  store %struct._PixelPacket* %add.ptr118, %struct._PixelPacket** %p, align 8, !dbg !6803
  %91 = load i64, i64* %x1, align 8, !dbg !6804
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6805
  %add.ptr119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i64 %91, !dbg !6805
  store %struct._PixelPacket* %add.ptr119, %struct._PixelPacket** %q, align 8, !dbg !6805
  %93 = load i64, i64* %x1, align 8, !dbg !6806
  store i64 %93, i64* %x94, align 8, !dbg !6808
  br label %for.cond, !dbg !6809

for.cond:                                         ; preds = %for.inc, %if.end117
  %94 = load i64, i64* %x94, align 8, !dbg !6810
  %cmp120 = icmp sge i64 %94, 0, !dbg !6812
  br i1 %cmp120, label %for.body, label %for.end, !dbg !6813

for.body:                                         ; preds = %for.cond
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6814
  %opacity122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 3, !dbg !6817
  %96 = load i16, i16* %opacity122, align 2, !dbg !6817
  %conv123 = zext i16 %96 to i32, !dbg !6814
  %cmp124 = icmp eq i32 %conv123, 65535, !dbg !6818
  br i1 %cmp124, label %if.then126, label %if.end127, !dbg !6819

if.then126:                                       ; preds = %for.body
  br label %for.end, !dbg !6820

if.end127:                                        ; preds = %for.body
  %97 = load i32, i32* %method.addr, align 4, !dbg !6821
  %cmp128 = icmp eq i32 %97, 3, !dbg !6823
  br i1 %cmp128, label %if.then130, label %if.else136, !dbg !6824

if.then130:                                       ; preds = %if.end127
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6825
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6828
  %call131 = call i32 @IsColorSimilar(%struct._Image* %98, %struct._PixelPacket* %99, %struct._PixelPacket* %target), !dbg !6829
  %cmp132 = icmp eq i32 %call131, 0, !dbg !6830
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !6831

if.then134:                                       ; preds = %if.then130
  br label %for.end, !dbg !6832

if.end135:                                        ; preds = %if.then130
  br label %if.end142, !dbg !6833

if.else136:                                       ; preds = %if.end127
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6834
  %101 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6836
  %call137 = call i32 @IsColorSimilar(%struct._Image* %100, %struct._PixelPacket* %101, %struct._PixelPacket* %target), !dbg !6837
  %cmp138 = icmp ne i32 %call137, 0, !dbg !6838
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !6839

if.then140:                                       ; preds = %if.else136
  br label %for.end, !dbg !6840

if.end141:                                        ; preds = %if.else136
  br label %if.end142

if.end142:                                        ; preds = %if.end141, %if.end135
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6841
  %opacity143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 3, !dbg !6842
  store i16 -1, i16* %opacity143, align 2, !dbg !6843
  %103 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6844
  %incdec.ptr144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %103, i32 -1, !dbg !6844
  store %struct._PixelPacket* %incdec.ptr144, %struct._PixelPacket** %q, align 8, !dbg !6844
  %104 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6845
  %incdec.ptr145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %104, i32 -1, !dbg !6845
  store %struct._PixelPacket* %incdec.ptr145, %struct._PixelPacket** %p, align 8, !dbg !6845
  br label %for.inc, !dbg !6846

for.inc:                                          ; preds = %if.end142
  %105 = load i64, i64* %x94, align 8, !dbg !6847
  %dec = add nsw i64 %105, -1, !dbg !6847
  store i64 %dec, i64* %x94, align 8, !dbg !6847
  br label %for.cond, !dbg !6848, !llvm.loop !6849

for.end:                                          ; preds = %if.then140, %if.then134, %if.then126, %for.cond
  %106 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6851
  %107 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6853
  %exception146 = getelementptr inbounds %struct._Image, %struct._Image* %107, i32 0, i32 58, !dbg !6854
  %call147 = call i32 @SyncAuthenticPixels(%struct._Image* %106, %struct._ExceptionInfo* %exception146), !dbg !6855
  %cmp148 = icmp eq i32 %call147, 0, !dbg !6856
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !6857

if.then150:                                       ; preds = %for.end
  br label %while.end, !dbg !6858

if.end151:                                        ; preds = %for.end
  %108 = load i64, i64* %x94, align 8, !dbg !6859
  %109 = load i64, i64* %x1, align 8, !dbg !6860
  %cmp152 = icmp sge i64 %108, %109, !dbg !6861
  %110 = zext i1 %cmp152 to i64, !dbg !6859
  %cond = select i1 %cmp152, i32 1, i32 0, !dbg !6859
  store i32 %cond, i32* %skip, align 4, !dbg !6862
  %111 = load i32, i32* %skip, align 4, !dbg !6863
  %cmp154 = icmp eq i32 %111, 0, !dbg !6865
  br i1 %cmp154, label %if.then156, label %if.end199, !dbg !6866

if.then156:                                       ; preds = %if.end151
  %112 = load i64, i64* %x94, align 8, !dbg !6867
  %add157 = add nsw i64 %112, 1, !dbg !6869
  store i64 %add157, i64* %start, align 8, !dbg !6870
  %113 = load i64, i64* %start, align 8, !dbg !6871
  %114 = load i64, i64* %x1, align 8, !dbg !6873
  %cmp158 = icmp slt i64 %113, %114, !dbg !6874
  br i1 %cmp158, label %if.then160, label %if.end197, !dbg !6875

if.then160:                                       ; preds = %if.then156
  %115 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6876
  %116 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6876
  %add.ptr161 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %116, i64 32768, !dbg !6876
  %cmp162 = icmp uge %struct._SegmentInfo* %115, %add.ptr161, !dbg !6876
  br i1 %cmp162, label %if.then164, label %if.else173, !dbg !6879

if.then164:                                       ; preds = %if.then160
  %117 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6880
  %cmp165 = icmp ne %struct._Image* %117, null, !dbg !6880
  br i1 %cmp165, label %if.then167, label %if.end172, !dbg !6883

if.then167:                                       ; preds = %if.then164
  %118 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6880
  %exception168 = getelementptr inbounds %struct._Image, %struct._Image* %118, i32 0, i32 58, !dbg !6880
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6880
  %filename169 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 53, !dbg !6880
  %arraydecay170 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename169, i64 0, i64 0, !dbg !6880
  %call171 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception168, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4662, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay170), !dbg !6880
  br label %if.end172, !dbg !6880

if.end172:                                        ; preds = %if.then167, %if.then164
  store i32 0, i32* %retval, align 4, !dbg !6883
  br label %return, !dbg !6883

if.else173:                                       ; preds = %if.then160
  %120 = load i64, i64* %y, align 8, !dbg !6884
  %121 = load i64, i64* %offset, align 8, !dbg !6884
  %sub = sub nsw i64 0, %121, !dbg !6884
  %add174 = add nsw i64 %120, %sub, !dbg !6884
  %cmp175 = icmp sge i64 %add174, 0, !dbg !6884
  br i1 %cmp175, label %land.lhs.true177, label %if.end195, !dbg !6884

land.lhs.true177:                                 ; preds = %if.else173
  %122 = load i64, i64* %y, align 8, !dbg !6884
  %123 = load i64, i64* %offset, align 8, !dbg !6884
  %sub178 = sub nsw i64 0, %123, !dbg !6884
  %add179 = add nsw i64 %122, %sub178, !dbg !6884
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6884
  %rows180 = getelementptr inbounds %struct._Image, %struct._Image* %124, i32 0, i32 8, !dbg !6884
  %125 = load i64, i64* %rows180, align 8, !dbg !6884
  %cmp181 = icmp slt i64 %add179, %125, !dbg !6884
  br i1 %cmp181, label %if.then183, label %if.end195, !dbg !6887

if.then183:                                       ; preds = %land.lhs.true177
  %126 = load i64, i64* %start, align 8, !dbg !6888
  %conv184 = sitofp i64 %126 to double, !dbg !6888
  %127 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6888
  %x1185 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %127, i32 0, i32 0, !dbg !6888
  store double %conv184, double* %x1185, align 8, !dbg !6888
  %128 = load i64, i64* %y, align 8, !dbg !6888
  %conv186 = sitofp i64 %128 to double, !dbg !6888
  %129 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6888
  %y1187 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %129, i32 0, i32 1, !dbg !6888
  store double %conv186, double* %y1187, align 8, !dbg !6888
  %130 = load i64, i64* %x1, align 8, !dbg !6888
  %sub188 = sub nsw i64 %130, 1, !dbg !6888
  %conv189 = sitofp i64 %sub188 to double, !dbg !6888
  %131 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6888
  %x2190 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %131, i32 0, i32 2, !dbg !6888
  store double %conv189, double* %x2190, align 8, !dbg !6888
  %132 = load i64, i64* %offset, align 8, !dbg !6888
  %sub191 = sub nsw i64 0, %132, !dbg !6888
  %conv192 = sitofp i64 %sub191 to double, !dbg !6888
  %133 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6888
  %y2193 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %133, i32 0, i32 3, !dbg !6888
  store double %conv192, double* %y2193, align 8, !dbg !6888
  %134 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6888
  %incdec.ptr194 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %134, i32 1, !dbg !6888
  store %struct._SegmentInfo* %incdec.ptr194, %struct._SegmentInfo** %s, align 8, !dbg !6888
  br label %if.end195, !dbg !6888

if.end195:                                        ; preds = %if.then183, %land.lhs.true177, %if.else173
  br label %if.end196

if.end196:                                        ; preds = %if.end195
  br label %if.end197, !dbg !6879

if.end197:                                        ; preds = %if.end196, %if.then156
  %135 = load i64, i64* %x1, align 8, !dbg !6890
  %add198 = add nsw i64 %135, 1, !dbg !6891
  store i64 %add198, i64* %x94, align 8, !dbg !6892
  br label %if.end199, !dbg !6893

if.end199:                                        ; preds = %if.end197, %if.end151
  br label %do.body, !dbg !6894

do.body:                                          ; preds = %do.cond, %if.end199
  %136 = load i32, i32* %skip, align 4, !dbg !6895
  %cmp200 = icmp eq i32 %136, 0, !dbg !6898
  br i1 %cmp200, label %if.then202, label %if.end337, !dbg !6899

if.then202:                                       ; preds = %do.body
  %137 = load i64, i64* %x94, align 8, !dbg !6900
  %138 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6903
  %columns203 = getelementptr inbounds %struct._Image, %struct._Image* %138, i32 0, i32 7, !dbg !6904
  %139 = load i64, i64* %columns203, align 8, !dbg !6904
  %cmp204 = icmp slt i64 %137, %139, !dbg !6905
  br i1 %cmp204, label %if.then206, label %if.end259, !dbg !6906

if.then206:                                       ; preds = %if.then202
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6907
  %141 = load i64, i64* %x94, align 8, !dbg !6909
  %142 = load i64, i64* %y, align 8, !dbg !6910
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6911
  %columns207 = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 7, !dbg !6912
  %144 = load i64, i64* %columns207, align 8, !dbg !6912
  %145 = load i64, i64* %x94, align 8, !dbg !6913
  %sub208 = sub i64 %144, %145, !dbg !6914
  %146 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6915
  %exception209 = getelementptr inbounds %struct._Image, %struct._Image* %146, i32 0, i32 58, !dbg !6916
  %call210 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %140, i64 %141, i64 %142, i64 %sub208, i64 1, %struct._ExceptionInfo* %exception209), !dbg !6917
  store %struct._PixelPacket* %call210, %struct._PixelPacket** %p, align 8, !dbg !6918
  %147 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6919
  %148 = load i64, i64* %x94, align 8, !dbg !6920
  %149 = load i64, i64* %y, align 8, !dbg !6921
  %150 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6922
  %columns211 = getelementptr inbounds %struct._Image, %struct._Image* %150, i32 0, i32 7, !dbg !6923
  %151 = load i64, i64* %columns211, align 8, !dbg !6923
  %152 = load i64, i64* %x94, align 8, !dbg !6924
  %sub212 = sub i64 %151, %152, !dbg !6925
  %153 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6926
  %exception213 = getelementptr inbounds %struct._Image, %struct._Image* %153, i32 0, i32 58, !dbg !6927
  %call214 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %147, i64 %148, i64 %149, i64 %sub212, i64 1, %struct._ExceptionInfo* %exception213), !dbg !6928
  store %struct._PixelPacket* %call214, %struct._PixelPacket** %q, align 8, !dbg !6929
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6930
  %cmp215 = icmp eq %struct._PixelPacket* %154, null, !dbg !6932
  br i1 %cmp215, label %if.then220, label %lor.lhs.false217, !dbg !6933

lor.lhs.false217:                                 ; preds = %if.then206
  %155 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6934
  %cmp218 = icmp eq %struct._PixelPacket* %155, null, !dbg !6935
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !6936

if.then220:                                       ; preds = %lor.lhs.false217, %if.then206
  br label %do.end, !dbg !6937

if.end221:                                        ; preds = %lor.lhs.false217
  br label %for.cond222, !dbg !6938

for.cond222:                                      ; preds = %for.inc251, %if.end221
  %156 = load i64, i64* %x94, align 8, !dbg !6939
  %157 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6942
  %columns223 = getelementptr inbounds %struct._Image, %struct._Image* %157, i32 0, i32 7, !dbg !6943
  %158 = load i64, i64* %columns223, align 8, !dbg !6943
  %cmp224 = icmp slt i64 %156, %158, !dbg !6944
  br i1 %cmp224, label %for.body226, label %for.end252, !dbg !6945

for.body226:                                      ; preds = %for.cond222
  %159 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6946
  %opacity227 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %159, i32 0, i32 3, !dbg !6949
  %160 = load i16, i16* %opacity227, align 2, !dbg !6949
  %conv228 = zext i16 %160 to i32, !dbg !6946
  %cmp229 = icmp eq i32 %conv228, 65535, !dbg !6950
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !6951

if.then231:                                       ; preds = %for.body226
  br label %for.end252, !dbg !6952

if.end232:                                        ; preds = %for.body226
  %161 = load i32, i32* %method.addr, align 4, !dbg !6953
  %cmp233 = icmp eq i32 %161, 3, !dbg !6955
  br i1 %cmp233, label %if.then235, label %if.else241, !dbg !6956

if.then235:                                       ; preds = %if.end232
  %162 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6957
  %163 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6960
  %call236 = call i32 @IsColorSimilar(%struct._Image* %162, %struct._PixelPacket* %163, %struct._PixelPacket* %target), !dbg !6961
  %cmp237 = icmp eq i32 %call236, 0, !dbg !6962
  br i1 %cmp237, label %if.then239, label %if.end240, !dbg !6963

if.then239:                                       ; preds = %if.then235
  br label %for.end252, !dbg !6964

if.end240:                                        ; preds = %if.then235
  br label %if.end247, !dbg !6965

if.else241:                                       ; preds = %if.end232
  %164 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6966
  %165 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6968
  %call242 = call i32 @IsColorSimilar(%struct._Image* %164, %struct._PixelPacket* %165, %struct._PixelPacket* %target), !dbg !6969
  %cmp243 = icmp ne i32 %call242, 0, !dbg !6970
  br i1 %cmp243, label %if.then245, label %if.end246, !dbg !6971

if.then245:                                       ; preds = %if.else241
  br label %for.end252, !dbg !6972

if.end246:                                        ; preds = %if.else241
  br label %if.end247

if.end247:                                        ; preds = %if.end246, %if.end240
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6973
  %opacity248 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 3, !dbg !6974
  store i16 -1, i16* %opacity248, align 2, !dbg !6975
  %167 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !6976
  %incdec.ptr249 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %167, i32 1, !dbg !6976
  store %struct._PixelPacket* %incdec.ptr249, %struct._PixelPacket** %q, align 8, !dbg !6976
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !6977
  %incdec.ptr250 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 1, !dbg !6977
  store %struct._PixelPacket* %incdec.ptr250, %struct._PixelPacket** %p, align 8, !dbg !6977
  br label %for.inc251, !dbg !6978

for.inc251:                                       ; preds = %if.end247
  %169 = load i64, i64* %x94, align 8, !dbg !6979
  %inc = add nsw i64 %169, 1, !dbg !6979
  store i64 %inc, i64* %x94, align 8, !dbg !6979
  br label %for.cond222, !dbg !6980, !llvm.loop !6981

for.end252:                                       ; preds = %if.then245, %if.then239, %if.then231, %for.cond222
  %170 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !6983
  %171 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6985
  %exception253 = getelementptr inbounds %struct._Image, %struct._Image* %171, i32 0, i32 58, !dbg !6986
  %call254 = call i32 @SyncAuthenticPixels(%struct._Image* %170, %struct._ExceptionInfo* %exception253), !dbg !6987
  %cmp255 = icmp eq i32 %call254, 0, !dbg !6988
  br i1 %cmp255, label %if.then257, label %if.end258, !dbg !6989

if.then257:                                       ; preds = %for.end252
  br label %do.end, !dbg !6990

if.end258:                                        ; preds = %for.end252
  br label %if.end259, !dbg !6991

if.end259:                                        ; preds = %if.end258, %if.then202
  %172 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !6992
  %173 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !6992
  %add.ptr260 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %173, i64 32768, !dbg !6992
  %cmp261 = icmp uge %struct._SegmentInfo* %172, %add.ptr260, !dbg !6992
  br i1 %cmp261, label %if.then263, label %if.else272, !dbg !6995

if.then263:                                       ; preds = %if.end259
  %174 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6996
  %cmp264 = icmp ne %struct._Image* %174, null, !dbg !6996
  br i1 %cmp264, label %if.then266, label %if.end271, !dbg !6999

if.then266:                                       ; preds = %if.then263
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6996
  %exception267 = getelementptr inbounds %struct._Image, %struct._Image* %175, i32 0, i32 58, !dbg !6996
  %176 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6996
  %filename268 = getelementptr inbounds %struct._Image, %struct._Image* %176, i32 0, i32 53, !dbg !6996
  %arraydecay269 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename268, i64 0, i64 0, !dbg !6996
  %call270 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception267, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4697, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay269), !dbg !6996
  br label %if.end271, !dbg !6996

if.end271:                                        ; preds = %if.then266, %if.then263
  store i32 0, i32* %retval, align 4, !dbg !6999
  br label %return, !dbg !6999

if.else272:                                       ; preds = %if.end259
  %177 = load i64, i64* %y, align 8, !dbg !7000
  %178 = load i64, i64* %offset, align 8, !dbg !7000
  %add273 = add nsw i64 %177, %178, !dbg !7000
  %cmp274 = icmp sge i64 %add273, 0, !dbg !7000
  br i1 %cmp274, label %land.lhs.true276, label %if.end292, !dbg !7000

land.lhs.true276:                                 ; preds = %if.else272
  %179 = load i64, i64* %y, align 8, !dbg !7000
  %180 = load i64, i64* %offset, align 8, !dbg !7000
  %add277 = add nsw i64 %179, %180, !dbg !7000
  %181 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7000
  %rows278 = getelementptr inbounds %struct._Image, %struct._Image* %181, i32 0, i32 8, !dbg !7000
  %182 = load i64, i64* %rows278, align 8, !dbg !7000
  %cmp279 = icmp slt i64 %add277, %182, !dbg !7000
  br i1 %cmp279, label %if.then281, label %if.end292, !dbg !7003

if.then281:                                       ; preds = %land.lhs.true276
  %183 = load i64, i64* %start, align 8, !dbg !7004
  %conv282 = sitofp i64 %183 to double, !dbg !7004
  %184 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7004
  %x1283 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %184, i32 0, i32 0, !dbg !7004
  store double %conv282, double* %x1283, align 8, !dbg !7004
  %185 = load i64, i64* %y, align 8, !dbg !7004
  %conv284 = sitofp i64 %185 to double, !dbg !7004
  %186 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7004
  %y1285 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %186, i32 0, i32 1, !dbg !7004
  store double %conv284, double* %y1285, align 8, !dbg !7004
  %187 = load i64, i64* %x94, align 8, !dbg !7004
  %sub286 = sub nsw i64 %187, 1, !dbg !7004
  %conv287 = sitofp i64 %sub286 to double, !dbg !7004
  %188 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7004
  %x2288 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %188, i32 0, i32 2, !dbg !7004
  store double %conv287, double* %x2288, align 8, !dbg !7004
  %189 = load i64, i64* %offset, align 8, !dbg !7004
  %conv289 = sitofp i64 %189 to double, !dbg !7004
  %190 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7004
  %y2290 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %190, i32 0, i32 3, !dbg !7004
  store double %conv289, double* %y2290, align 8, !dbg !7004
  %191 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7004
  %incdec.ptr291 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %191, i32 1, !dbg !7004
  store %struct._SegmentInfo* %incdec.ptr291, %struct._SegmentInfo** %s, align 8, !dbg !7004
  br label %if.end292, !dbg !7004

if.end292:                                        ; preds = %if.then281, %land.lhs.true276, %if.else272
  br label %if.end293

if.end293:                                        ; preds = %if.end292
  %192 = load i64, i64* %x94, align 8, !dbg !7006
  %193 = load i64, i64* %x2, align 8, !dbg !7008
  %add294 = add nsw i64 %193, 1, !dbg !7009
  %cmp295 = icmp sgt i64 %192, %add294, !dbg !7010
  br i1 %cmp295, label %if.then297, label %if.end336, !dbg !7011

if.then297:                                       ; preds = %if.end293
  %194 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7012
  %195 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !7012
  %add.ptr298 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %195, i64 32768, !dbg !7012
  %cmp299 = icmp uge %struct._SegmentInfo* %194, %add.ptr298, !dbg !7012
  br i1 %cmp299, label %if.then301, label %if.else310, !dbg !7015

if.then301:                                       ; preds = %if.then297
  %196 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7016
  %cmp302 = icmp ne %struct._Image* %196, null, !dbg !7016
  br i1 %cmp302, label %if.then304, label %if.end309, !dbg !7019

if.then304:                                       ; preds = %if.then301
  %197 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7016
  %exception305 = getelementptr inbounds %struct._Image, %struct._Image* %197, i32 0, i32 58, !dbg !7016
  %198 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7016
  %filename306 = getelementptr inbounds %struct._Image, %struct._Image* %198, i32 0, i32 53, !dbg !7016
  %arraydecay307 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename306, i64 0, i64 0, !dbg !7016
  %call308 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception305, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4699, i32 460, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay307), !dbg !7016
  br label %if.end309, !dbg !7016

if.end309:                                        ; preds = %if.then304, %if.then301
  store i32 0, i32* %retval, align 4, !dbg !7019
  br label %return, !dbg !7019

if.else310:                                       ; preds = %if.then297
  %199 = load i64, i64* %y, align 8, !dbg !7020
  %200 = load i64, i64* %offset, align 8, !dbg !7020
  %sub311 = sub nsw i64 0, %200, !dbg !7020
  %add312 = add nsw i64 %199, %sub311, !dbg !7020
  %cmp313 = icmp sge i64 %add312, 0, !dbg !7020
  br i1 %cmp313, label %land.lhs.true315, label %if.end334, !dbg !7020

land.lhs.true315:                                 ; preds = %if.else310
  %201 = load i64, i64* %y, align 8, !dbg !7020
  %202 = load i64, i64* %offset, align 8, !dbg !7020
  %sub316 = sub nsw i64 0, %202, !dbg !7020
  %add317 = add nsw i64 %201, %sub316, !dbg !7020
  %203 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7020
  %rows318 = getelementptr inbounds %struct._Image, %struct._Image* %203, i32 0, i32 8, !dbg !7020
  %204 = load i64, i64* %rows318, align 8, !dbg !7020
  %cmp319 = icmp slt i64 %add317, %204, !dbg !7020
  br i1 %cmp319, label %if.then321, label %if.end334, !dbg !7023

if.then321:                                       ; preds = %land.lhs.true315
  %205 = load i64, i64* %x2, align 8, !dbg !7024
  %add322 = add nsw i64 %205, 1, !dbg !7024
  %conv323 = sitofp i64 %add322 to double, !dbg !7024
  %206 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7024
  %x1324 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %206, i32 0, i32 0, !dbg !7024
  store double %conv323, double* %x1324, align 8, !dbg !7024
  %207 = load i64, i64* %y, align 8, !dbg !7024
  %conv325 = sitofp i64 %207 to double, !dbg !7024
  %208 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7024
  %y1326 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %208, i32 0, i32 1, !dbg !7024
  store double %conv325, double* %y1326, align 8, !dbg !7024
  %209 = load i64, i64* %x94, align 8, !dbg !7024
  %sub327 = sub nsw i64 %209, 1, !dbg !7024
  %conv328 = sitofp i64 %sub327 to double, !dbg !7024
  %210 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7024
  %x2329 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %210, i32 0, i32 2, !dbg !7024
  store double %conv328, double* %x2329, align 8, !dbg !7024
  %211 = load i64, i64* %offset, align 8, !dbg !7024
  %sub330 = sub nsw i64 0, %211, !dbg !7024
  %conv331 = sitofp i64 %sub330 to double, !dbg !7024
  %212 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7024
  %y2332 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %212, i32 0, i32 3, !dbg !7024
  store double %conv331, double* %y2332, align 8, !dbg !7024
  %213 = load %struct._SegmentInfo*, %struct._SegmentInfo** %s, align 8, !dbg !7024
  %incdec.ptr333 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %213, i32 1, !dbg !7024
  store %struct._SegmentInfo* %incdec.ptr333, %struct._SegmentInfo** %s, align 8, !dbg !7024
  br label %if.end334, !dbg !7024

if.end334:                                        ; preds = %if.then321, %land.lhs.true315, %if.else310
  br label %if.end335

if.end335:                                        ; preds = %if.end334
  br label %if.end336, !dbg !7015

if.end336:                                        ; preds = %if.end335, %if.end293
  br label %if.end337, !dbg !7026

if.end337:                                        ; preds = %if.end336, %do.body
  store i32 0, i32* %skip, align 4, !dbg !7027
  %214 = load i64, i64* %x94, align 8, !dbg !7028
  %inc338 = add nsw i64 %214, 1, !dbg !7028
  store i64 %inc338, i64* %x94, align 8, !dbg !7028
  %215 = load i64, i64* %x94, align 8, !dbg !7029
  %216 = load i64, i64* %x2, align 8, !dbg !7031
  %cmp339 = icmp sle i64 %215, %216, !dbg !7032
  br i1 %cmp339, label %if.then341, label %if.end387, !dbg !7033

if.then341:                                       ; preds = %if.end337
  %217 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7034
  %218 = load i64, i64* %x94, align 8, !dbg !7036
  %219 = load i64, i64* %y, align 8, !dbg !7037
  %220 = load i64, i64* %x2, align 8, !dbg !7038
  %221 = load i64, i64* %x94, align 8, !dbg !7039
  %sub342 = sub nsw i64 %220, %221, !dbg !7040
  %add343 = add nsw i64 %sub342, 1, !dbg !7041
  %222 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7042
  %exception344 = getelementptr inbounds %struct._Image, %struct._Image* %222, i32 0, i32 58, !dbg !7043
  %call345 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %217, i64 %218, i64 %219, i64 %add343, i64 1, %struct._ExceptionInfo* %exception344), !dbg !7044
  store %struct._PixelPacket* %call345, %struct._PixelPacket** %p, align 8, !dbg !7045
  %223 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !7046
  %224 = load i64, i64* %x94, align 8, !dbg !7047
  %225 = load i64, i64* %y, align 8, !dbg !7048
  %226 = load i64, i64* %x2, align 8, !dbg !7049
  %227 = load i64, i64* %x94, align 8, !dbg !7050
  %sub346 = sub nsw i64 %226, %227, !dbg !7051
  %add347 = add nsw i64 %sub346, 1, !dbg !7052
  %228 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7053
  %exception348 = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 58, !dbg !7054
  %call349 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %223, i64 %224, i64 %225, i64 %add347, i64 1, %struct._ExceptionInfo* %exception348), !dbg !7055
  store %struct._PixelPacket* %call349, %struct._PixelPacket** %q, align 8, !dbg !7056
  %229 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7057
  %cmp350 = icmp eq %struct._PixelPacket* %229, null, !dbg !7059
  br i1 %cmp350, label %if.then355, label %lor.lhs.false352, !dbg !7060

lor.lhs.false352:                                 ; preds = %if.then341
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7061
  %cmp353 = icmp eq %struct._PixelPacket* %230, null, !dbg !7062
  br i1 %cmp353, label %if.then355, label %if.end356, !dbg !7063

if.then355:                                       ; preds = %lor.lhs.false352, %if.then341
  br label %do.end, !dbg !7064

if.end356:                                        ; preds = %lor.lhs.false352
  br label %for.cond357, !dbg !7065

for.cond357:                                      ; preds = %for.inc384, %if.end356
  %231 = load i64, i64* %x94, align 8, !dbg !7066
  %232 = load i64, i64* %x2, align 8, !dbg !7069
  %cmp358 = icmp sle i64 %231, %232, !dbg !7070
  br i1 %cmp358, label %for.body360, label %for.end386, !dbg !7071

for.body360:                                      ; preds = %for.cond357
  %233 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7072
  %opacity361 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %233, i32 0, i32 3, !dbg !7075
  %234 = load i16, i16* %opacity361, align 2, !dbg !7075
  %conv362 = zext i16 %234 to i32, !dbg !7072
  %cmp363 = icmp eq i32 %conv362, 65535, !dbg !7076
  br i1 %cmp363, label %if.then365, label %if.end366, !dbg !7077

if.then365:                                       ; preds = %for.body360
  br label %for.end386, !dbg !7078

if.end366:                                        ; preds = %for.body360
  %235 = load i32, i32* %method.addr, align 4, !dbg !7079
  %cmp367 = icmp eq i32 %235, 3, !dbg !7081
  br i1 %cmp367, label %if.then369, label %if.else375, !dbg !7082

if.then369:                                       ; preds = %if.end366
  %236 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7083
  %237 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7086
  %call370 = call i32 @IsColorSimilar(%struct._Image* %236, %struct._PixelPacket* %237, %struct._PixelPacket* %target), !dbg !7087
  %cmp371 = icmp ne i32 %call370, 0, !dbg !7088
  br i1 %cmp371, label %if.then373, label %if.end374, !dbg !7089

if.then373:                                       ; preds = %if.then369
  br label %for.end386, !dbg !7090

if.end374:                                        ; preds = %if.then369
  br label %if.end381, !dbg !7091

if.else375:                                       ; preds = %if.end366
  %238 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7092
  %239 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7094
  %call376 = call i32 @IsColorSimilar(%struct._Image* %238, %struct._PixelPacket* %239, %struct._PixelPacket* %target), !dbg !7095
  %cmp377 = icmp eq i32 %call376, 0, !dbg !7096
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !7097

if.then379:                                       ; preds = %if.else375
  br label %for.end386, !dbg !7098

if.end380:                                        ; preds = %if.else375
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.end374
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7099
  %incdec.ptr382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 1, !dbg !7099
  store %struct._PixelPacket* %incdec.ptr382, %struct._PixelPacket** %p, align 8, !dbg !7099
  %241 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7100
  %incdec.ptr383 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %241, i32 1, !dbg !7100
  store %struct._PixelPacket* %incdec.ptr383, %struct._PixelPacket** %q, align 8, !dbg !7100
  br label %for.inc384, !dbg !7101

for.inc384:                                       ; preds = %if.end381
  %242 = load i64, i64* %x94, align 8, !dbg !7102
  %inc385 = add nsw i64 %242, 1, !dbg !7102
  store i64 %inc385, i64* %x94, align 8, !dbg !7102
  br label %for.cond357, !dbg !7103, !llvm.loop !7104

for.end386:                                       ; preds = %if.then379, %if.then373, %if.then365, %for.cond357
  br label %if.end387, !dbg !7106

if.end387:                                        ; preds = %for.end386, %if.end337
  %243 = load i64, i64* %x94, align 8, !dbg !7107
  store i64 %243, i64* %start, align 8, !dbg !7108
  br label %do.cond, !dbg !7109

do.cond:                                          ; preds = %if.end387
  %244 = load i64, i64* %x94, align 8, !dbg !7110
  %245 = load i64, i64* %x2, align 8, !dbg !7111
  %cmp388 = icmp sle i64 %244, %245, !dbg !7112
  br i1 %cmp388, label %do.body, label %do.end, !dbg !7109, !llvm.loop !7113

do.end:                                           ; preds = %do.cond, %if.then355, %if.then257, %if.then220
  br label %while.cond, !dbg !6748, !llvm.loop !7115

while.end:                                        ; preds = %if.then150, %if.then116, %while.cond
  store i64 0, i64* %y, align 8, !dbg !7117
  br label %for.cond390, !dbg !7119

for.cond390:                                      ; preds = %for.inc434, %while.end
  %246 = load i64, i64* %y, align 8, !dbg !7120
  %247 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7122
  %rows391 = getelementptr inbounds %struct._Image, %struct._Image* %247, i32 0, i32 8, !dbg !7123
  %248 = load i64, i64* %rows391, align 8, !dbg !7123
  %cmp392 = icmp slt i64 %246, %248, !dbg !7124
  br i1 %cmp392, label %for.body394, label %for.end436, !dbg !7125

for.body394:                                      ; preds = %for.cond390
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p395, metadata !7126, metadata !DIExpression()), !dbg !7128
  call void @llvm.dbg.declare(metadata i64* %x396, metadata !7129, metadata !DIExpression()), !dbg !7130
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q397, metadata !7131, metadata !DIExpression()), !dbg !7132
  %249 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !7133
  %250 = load i64, i64* %y, align 8, !dbg !7134
  %251 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7135
  %columns398 = getelementptr inbounds %struct._Image, %struct._Image* %251, i32 0, i32 7, !dbg !7136
  %252 = load i64, i64* %columns398, align 8, !dbg !7136
  %253 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7137
  %exception399 = getelementptr inbounds %struct._Image, %struct._Image* %253, i32 0, i32 58, !dbg !7138
  %call400 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %249, i64 0, i64 %250, i64 %252, i64 1, %struct._ExceptionInfo* %exception399), !dbg !7139
  store %struct._PixelPacket* %call400, %struct._PixelPacket** %p395, align 8, !dbg !7140
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7141
  %255 = load i64, i64* %y, align 8, !dbg !7142
  %256 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7143
  %columns401 = getelementptr inbounds %struct._Image, %struct._Image* %256, i32 0, i32 7, !dbg !7144
  %257 = load i64, i64* %columns401, align 8, !dbg !7144
  %258 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7145
  %exception402 = getelementptr inbounds %struct._Image, %struct._Image* %258, i32 0, i32 58, !dbg !7146
  %call403 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %254, i64 0, i64 %255, i64 %257, i64 1, %struct._ExceptionInfo* %exception402), !dbg !7147
  store %struct._PixelPacket* %call403, %struct._PixelPacket** %q397, align 8, !dbg !7148
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %p395, align 8, !dbg !7149
  %cmp404 = icmp eq %struct._PixelPacket* %259, null, !dbg !7151
  br i1 %cmp404, label %if.then409, label %lor.lhs.false406, !dbg !7152

lor.lhs.false406:                                 ; preds = %for.body394
  %260 = load %struct._PixelPacket*, %struct._PixelPacket** %q397, align 8, !dbg !7153
  %cmp407 = icmp eq %struct._PixelPacket* %260, null, !dbg !7154
  br i1 %cmp407, label %if.then409, label %if.end410, !dbg !7155

if.then409:                                       ; preds = %lor.lhs.false406, %for.body394
  br label %for.end436, !dbg !7156

if.end410:                                        ; preds = %lor.lhs.false406
  store i64 0, i64* %x396, align 8, !dbg !7157
  br label %for.cond411, !dbg !7159

for.cond411:                                      ; preds = %for.inc425, %if.end410
  %261 = load i64, i64* %x396, align 8, !dbg !7160
  %262 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7162
  %columns412 = getelementptr inbounds %struct._Image, %struct._Image* %262, i32 0, i32 7, !dbg !7163
  %263 = load i64, i64* %columns412, align 8, !dbg !7163
  %cmp413 = icmp slt i64 %261, %263, !dbg !7164
  br i1 %cmp413, label %for.body415, label %for.end427, !dbg !7165

for.body415:                                      ; preds = %for.cond411
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %p395, align 8, !dbg !7166
  %opacity416 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 0, i32 3, !dbg !7166
  %265 = load i16, i16* %opacity416, align 2, !dbg !7166
  %conv417 = zext i16 %265 to i32, !dbg !7166
  %cmp418 = icmp ne i32 %conv417, 0, !dbg !7169
  br i1 %cmp418, label %if.then420, label %if.end422, !dbg !7170

if.then420:                                       ; preds = %for.body415
  %266 = load i16, i16* %opacity.addr, align 2, !dbg !7171
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %q397, align 8, !dbg !7172
  %opacity421 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %267, i32 0, i32 3, !dbg !7173
  store i16 %266, i16* %opacity421, align 2, !dbg !7174
  br label %if.end422, !dbg !7172

if.end422:                                        ; preds = %if.then420, %for.body415
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %p395, align 8, !dbg !7175
  %incdec.ptr423 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 1, !dbg !7175
  store %struct._PixelPacket* %incdec.ptr423, %struct._PixelPacket** %p395, align 8, !dbg !7175
  %269 = load %struct._PixelPacket*, %struct._PixelPacket** %q397, align 8, !dbg !7176
  %incdec.ptr424 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %269, i32 1, !dbg !7176
  store %struct._PixelPacket* %incdec.ptr424, %struct._PixelPacket** %q397, align 8, !dbg !7176
  br label %for.inc425, !dbg !7177

for.inc425:                                       ; preds = %if.end422
  %270 = load i64, i64* %x396, align 8, !dbg !7178
  %inc426 = add nsw i64 %270, 1, !dbg !7178
  store i64 %inc426, i64* %x396, align 8, !dbg !7178
  br label %for.cond411, !dbg !7179, !llvm.loop !7180

for.end427:                                       ; preds = %for.cond411
  %271 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7182
  %272 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7184
  %exception428 = getelementptr inbounds %struct._Image, %struct._Image* %272, i32 0, i32 58, !dbg !7185
  %call429 = call i32 @SyncAuthenticPixels(%struct._Image* %271, %struct._ExceptionInfo* %exception428), !dbg !7186
  %cmp430 = icmp eq i32 %call429, 0, !dbg !7187
  br i1 %cmp430, label %if.then432, label %if.end433, !dbg !7188

if.then432:                                       ; preds = %for.end427
  br label %for.end436, !dbg !7189

if.end433:                                        ; preds = %for.end427
  br label %for.inc434, !dbg !7190

for.inc434:                                       ; preds = %if.end433
  %273 = load i64, i64* %y, align 8, !dbg !7191
  %inc435 = add nsw i64 %273, 1, !dbg !7191
  store i64 %inc435, i64* %y, align 8, !dbg !7191
  br label %for.cond390, !dbg !7192, !llvm.loop !7193

for.end436:                                       ; preds = %if.then432, %if.then409, %for.cond390
  %274 = load %struct._SegmentInfo*, %struct._SegmentInfo** %segment_stack, align 8, !dbg !7195
  %275 = bitcast %struct._SegmentInfo* %274 to i8*, !dbg !7195
  %call437 = call i8* @RelinquishMagickMemory(i8* %275), !dbg !7196
  %276 = bitcast i8* %call437 to %struct._SegmentInfo*, !dbg !7197
  store %struct._SegmentInfo* %276, %struct._SegmentInfo** %segment_stack, align 8, !dbg !7198
  %277 = load %struct._Image*, %struct._Image** %floodplane_image, align 8, !dbg !7199
  %call438 = call %struct._Image* @DestroyImage(%struct._Image* %277), !dbg !7200
  store %struct._Image* %call438, %struct._Image** %floodplane_image, align 8, !dbg !7201
  %278 = load i64, i64* %y, align 8, !dbg !7202
  %279 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7203
  %rows439 = getelementptr inbounds %struct._Image, %struct._Image* %279, i32 0, i32 8, !dbg !7204
  %280 = load i64, i64* %rows439, align 8, !dbg !7204
  %cmp440 = icmp eq i64 %278, %280, !dbg !7205
  %281 = zext i1 %cmp440 to i64, !dbg !7202
  %cond442 = select i1 %cmp440, i32 1, i32 0, !dbg !7202
  store i32 %cond442, i32* %retval, align 4, !dbg !7206
  br label %return, !dbg !7206

return:                                           ; preds = %for.end436, %if.end309, %if.end271, %if.end172, %if.end68, %if.end45, %if.end35, %if.then22, %if.then12, %if.then8, %if.then3
  %282 = load i32, i32* %retval, align 4, !dbg !7207
  ret i32 %282, !dbg !7207
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MaximumImages(%struct._Image* %images, %struct._ExceptionInfo* %exception) #0 !dbg !7208 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !7209, metadata !DIExpression()), !dbg !7210
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7211, metadata !DIExpression()), !dbg !7212
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7213
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7214
  %call = call %struct._Image* @EvaluateImages(%struct._Image* %0, i32 6, %struct._ExceptionInfo* %1), !dbg !7215
  ret %struct._Image* %call, !dbg !7216
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MinimumImages(%struct._Image* %images, %struct._ExceptionInfo* %exception) #0 !dbg !7217 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7222
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7223
  %call = call %struct._Image* @EvaluateImages(%struct._Image* %0, i32 6, %struct._ExceptionInfo* %1), !dbg !7224
  ret %struct._Image* %call, !dbg !7225
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MedianFilterImage(%struct._Image* %image, double %radius, %struct._ExceptionInfo* %exception) #0 !dbg !7226 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %median_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7229, metadata !DIExpression()), !dbg !7230
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  call void @llvm.dbg.declare(metadata %struct._Image** %median_image, metadata !7235, metadata !DIExpression()), !dbg !7236
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7237
  %1 = load double, double* %radius.addr, align 8, !dbg !7238
  %conv = fptoui double %1 to i64, !dbg !7239
  %2 = load double, double* %radius.addr, align 8, !dbg !7240
  %conv1 = fptoui double %2 to i64, !dbg !7241
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7242
  %call = call %struct._Image* @StatisticImage(%struct._Image* %0, i32 4, i64 %conv, i64 %conv1, %struct._ExceptionInfo* %3), !dbg !7243
  store %struct._Image* %call, %struct._Image** %median_image, align 8, !dbg !7244
  %4 = load %struct._Image*, %struct._Image** %median_image, align 8, !dbg !7245
  ret %struct._Image* %4, !dbg !7246
}

declare dso_local %struct._Image* @StatisticImage(%struct._Image*, i32, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ModeImage(%struct._Image* %image, double %radius, %struct._ExceptionInfo* %exception) #0 !dbg !7247 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %mode_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7248, metadata !DIExpression()), !dbg !7249
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !7250, metadata !DIExpression()), !dbg !7251
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7252, metadata !DIExpression()), !dbg !7253
  call void @llvm.dbg.declare(metadata %struct._Image** %mode_image, metadata !7254, metadata !DIExpression()), !dbg !7255
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7256
  %1 = load double, double* %radius.addr, align 8, !dbg !7257
  %conv = fptoui double %1 to i64, !dbg !7258
  %2 = load double, double* %radius.addr, align 8, !dbg !7259
  %conv1 = fptoui double %2 to i64, !dbg !7260
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7261
  %call = call %struct._Image* @StatisticImage(%struct._Image* %0, i32 6, i64 %conv, i64 %conv1, %struct._ExceptionInfo* %3), !dbg !7262
  store %struct._Image* %call, %struct._Image** %mode_image, align 8, !dbg !7263
  %4 = load %struct._Image*, %struct._Image** %mode_image, align 8, !dbg !7264
  ret %struct._Image* %4, !dbg !7265
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @MosaicImages(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !7266 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7271
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7272
  %call = call %struct._Image* @MergeImageLayers(%struct._Image* %0, i32 15, %struct._ExceptionInfo* %1), !dbg !7273
  ret %struct._Image* %call, !dbg !7274
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @OpaqueImage(%struct._Image* %image, i64 %target.coerce, i64 %fill.coerce) #0 !dbg !7275 {
entry:
  %target = alloca %struct._PixelPacket, align 2
  %fill = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %proceed = alloca i32, align 4
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x49 = alloca i64, align 8
  %q50 = alloca %struct._PixelPacket*, align 8
  %0 = bitcast %struct._PixelPacket* %target to i64*
  store i64 %target.coerce, i64* %0, align 2
  %1 = bitcast %struct._PixelPacket* %fill to i64*
  store i64 %fill.coerce, i64* %1, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7278, metadata !DIExpression()), !dbg !7279
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %fill, metadata !7282, metadata !DIExpression()), !dbg !7283
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7284, metadata !DIExpression()), !dbg !7285
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7286, metadata !DIExpression()), !dbg !7287
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7288, metadata !DIExpression()), !dbg !7289
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5000, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0)), !dbg !7290
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7291
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 59, !dbg !7293
  %3 = load i32, i32* %debug, align 8, !dbg !7293
  %cmp = icmp ne i32 %3, 0, !dbg !7294
  br i1 %cmp, label %if.then, label %if.end, !dbg !7295

if.then:                                          ; preds = %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7296
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 53, !dbg !7297
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7296
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5002, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !7298
  br label %if.end, !dbg !7299

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7300
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 0, !dbg !7301
  %6 = load i32, i32* %storage_class, align 8, !dbg !7301
  switch i32 %6, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb28
  ], !dbg !7302

sw.bb:                                            ; preds = %if.end
  br label %sw.default, !dbg !7303

sw.default:                                       ; preds = %if.end, %sw.bb
  store i64 0, i64* %y, align 8, !dbg !7304
  br label %for.cond, !dbg !7308

for.cond:                                         ; preds = %for.inc25, %sw.default
  %7 = load i64, i64* %y, align 8, !dbg !7309
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7311
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 8, !dbg !7312
  %9 = load i64, i64* %rows, align 8, !dbg !7312
  %cmp2 = icmp slt i64 %7, %9, !dbg !7313
  br i1 %cmp2, label %for.body, label %for.end27, !dbg !7314

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7315, metadata !DIExpression()), !dbg !7317
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7318, metadata !DIExpression()), !dbg !7319
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7320
  %11 = load i64, i64* %y, align 8, !dbg !7321
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7322
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 7, !dbg !7323
  %13 = load i64, i64* %columns, align 8, !dbg !7323
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7324
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !7325
  %call3 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %10, i64 0, i64 %11, i64 %13, i64 1, %struct._ExceptionInfo* %exception), !dbg !7326
  store %struct._PixelPacket* %call3, %struct._PixelPacket** %q, align 8, !dbg !7327
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7328
  %cmp4 = icmp eq %struct._PixelPacket* %15, null, !dbg !7330
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !7331

if.then5:                                         ; preds = %for.body
  br label %for.end27, !dbg !7332

if.end6:                                          ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !7333
  br label %for.cond7, !dbg !7335

for.cond7:                                        ; preds = %for.inc, %if.end6
  %16 = load i64, i64* %x, align 8, !dbg !7336
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7338
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !7339
  %18 = load i64, i64* %columns8, align 8, !dbg !7339
  %cmp9 = icmp slt i64 %16, %18, !dbg !7340
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !7341

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7342
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7345
  %call11 = call i32 @IsColorSimilar(%struct._Image* %19, %struct._PixelPacket* %20, %struct._PixelPacket* %target), !dbg !7346
  %cmp12 = icmp ne i32 %call11, 0, !dbg !7347
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !7348

if.then13:                                        ; preds = %for.body10
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7349
  %22 = bitcast %struct._PixelPacket* %21 to i8*, !dbg !7350
  %23 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !7350
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %22, i8* align 2 %23, i64 8, i1 false), !dbg !7350
  br label %if.end14, !dbg !7351

if.end14:                                         ; preds = %if.then13, %for.body10
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7352
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 1, !dbg !7352
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !7352
  br label %for.inc, !dbg !7353

for.inc:                                          ; preds = %if.end14
  %25 = load i64, i64* %x, align 8, !dbg !7354
  %inc = add nsw i64 %25, 1, !dbg !7354
  store i64 %inc, i64* %x, align 8, !dbg !7354
  br label %for.cond7, !dbg !7355, !llvm.loop !7356

for.end:                                          ; preds = %for.cond7
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7358
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7360
  %exception15 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 58, !dbg !7361
  %call16 = call i32 @SyncAuthenticPixels(%struct._Image* %26, %struct._ExceptionInfo* %exception15), !dbg !7362
  %cmp17 = icmp eq i32 %call16, 0, !dbg !7363
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !7364

if.then18:                                        ; preds = %for.end
  br label %for.end27, !dbg !7365

if.end19:                                         ; preds = %for.end
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7366
  %29 = load i64, i64* %y, align 8, !dbg !7367
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7368
  %rows20 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !7369
  %31 = load i64, i64* %rows20, align 8, !dbg !7369
  %call21 = call i32 @SetImageProgress(%struct._Image* %28, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.27, i64 0, i64 0), i64 %29, i64 %31), !dbg !7370
  store i32 %call21, i32* %proceed, align 4, !dbg !7371
  %32 = load i32, i32* %proceed, align 4, !dbg !7372
  %cmp22 = icmp eq i32 %32, 0, !dbg !7374
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !7375

if.then23:                                        ; preds = %if.end19
  br label %for.end27, !dbg !7376

if.end24:                                         ; preds = %if.end19
  br label %for.inc25, !dbg !7377

for.inc25:                                        ; preds = %if.end24
  %33 = load i64, i64* %y, align 8, !dbg !7378
  %inc26 = add nsw i64 %33, 1, !dbg !7378
  store i64 %inc26, i64* %y, align 8, !dbg !7378
  br label %for.cond, !dbg !7379, !llvm.loop !7380

for.end27:                                        ; preds = %if.then23, %if.then18, %if.then5, %for.cond
  br label %sw.epilog, !dbg !7382

sw.bb28:                                          ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !7383
  br label %for.cond29, !dbg !7386

for.cond29:                                       ; preds = %for.inc38, %sw.bb28
  %34 = load i64, i64* %i, align 8, !dbg !7387
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7389
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 10, !dbg !7390
  %36 = load i64, i64* %colors, align 8, !dbg !7390
  %cmp30 = icmp slt i64 %34, %36, !dbg !7391
  br i1 %cmp30, label %for.body31, label %for.end40, !dbg !7392

for.body31:                                       ; preds = %for.cond29
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7393
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7396
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 11, !dbg !7397
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !7397
  %40 = load i64, i64* %i, align 8, !dbg !7398
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i64 %40, !dbg !7396
  %call32 = call i32 @IsColorSimilar(%struct._Image* %37, %struct._PixelPacket* %arrayidx, %struct._PixelPacket* %target), !dbg !7399
  %cmp33 = icmp ne i32 %call32, 0, !dbg !7400
  br i1 %cmp33, label %if.then34, label %if.end37, !dbg !7401

if.then34:                                        ; preds = %for.body31
  %41 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7402
  %colormap35 = getelementptr inbounds %struct._Image, %struct._Image* %41, i32 0, i32 11, !dbg !7403
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap35, align 8, !dbg !7403
  %43 = load i64, i64* %i, align 8, !dbg !7404
  %arrayidx36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %42, i64 %43, !dbg !7402
  %44 = bitcast %struct._PixelPacket* %arrayidx36 to i8*, !dbg !7405
  %45 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !7405
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %44, i8* align 2 %45, i64 8, i1 false), !dbg !7405
  br label %if.end37, !dbg !7402

if.end37:                                         ; preds = %if.then34, %for.body31
  br label %for.inc38, !dbg !7406

for.inc38:                                        ; preds = %if.end37
  %46 = load i64, i64* %i, align 8, !dbg !7407
  %inc39 = add nsw i64 %46, 1, !dbg !7407
  store i64 %inc39, i64* %i, align 8, !dbg !7407
  br label %for.cond29, !dbg !7408, !llvm.loop !7409

for.end40:                                        ; preds = %for.cond29
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !7411
  %47 = load i16, i16* %opacity, align 2, !dbg !7411
  %conv = zext i16 %47 to i32, !dbg !7413
  %cmp41 = icmp ne i32 %conv, 0, !dbg !7414
  br i1 %cmp41, label %if.then43, label %if.end83, !dbg !7415

if.then43:                                        ; preds = %for.end40
  store i64 0, i64* %y, align 8, !dbg !7416
  br label %for.cond44, !dbg !7419

for.cond44:                                       ; preds = %for.inc80, %if.then43
  %48 = load i64, i64* %y, align 8, !dbg !7420
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7422
  %rows45 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 8, !dbg !7423
  %50 = load i64, i64* %rows45, align 8, !dbg !7423
  %cmp46 = icmp slt i64 %48, %50, !dbg !7424
  br i1 %cmp46, label %for.body48, label %for.end82, !dbg !7425

for.body48:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata i64* %x49, metadata !7426, metadata !DIExpression()), !dbg !7428
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q50, metadata !7429, metadata !DIExpression()), !dbg !7430
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7431
  %52 = load i64, i64* %y, align 8, !dbg !7432
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7433
  %columns51 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 7, !dbg !7434
  %54 = load i64, i64* %columns51, align 8, !dbg !7434
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7435
  %exception52 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 58, !dbg !7436
  %call53 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %51, i64 0, i64 %52, i64 %54, i64 1, %struct._ExceptionInfo* %exception52), !dbg !7437
  store %struct._PixelPacket* %call53, %struct._PixelPacket** %q50, align 8, !dbg !7438
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q50, align 8, !dbg !7439
  %cmp54 = icmp eq %struct._PixelPacket* %56, null, !dbg !7441
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !7442

if.then56:                                        ; preds = %for.body48
  br label %for.end82, !dbg !7443

if.end57:                                         ; preds = %for.body48
  store i64 0, i64* %x49, align 8, !dbg !7444
  br label %for.cond58, !dbg !7446

for.cond58:                                       ; preds = %for.inc71, %if.end57
  %57 = load i64, i64* %x49, align 8, !dbg !7447
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7449
  %columns59 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !7450
  %59 = load i64, i64* %columns59, align 8, !dbg !7450
  %cmp60 = icmp slt i64 %57, %59, !dbg !7451
  br i1 %cmp60, label %for.body62, label %for.end73, !dbg !7452

for.body62:                                       ; preds = %for.cond58
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7453
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q50, align 8, !dbg !7456
  %call63 = call i32 @IsColorSimilar(%struct._Image* %60, %struct._PixelPacket* %61, %struct._PixelPacket* %target), !dbg !7457
  %cmp64 = icmp ne i32 %call63, 0, !dbg !7458
  br i1 %cmp64, label %if.then66, label %if.end69, !dbg !7459

if.then66:                                        ; preds = %for.body62
  %opacity67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !7460
  %62 = load i16, i16* %opacity67, align 2, !dbg !7460
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q50, align 8, !dbg !7461
  %opacity68 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 3, !dbg !7462
  store i16 %62, i16* %opacity68, align 2, !dbg !7463
  br label %if.end69, !dbg !7461

if.end69:                                         ; preds = %if.then66, %for.body62
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q50, align 8, !dbg !7464
  %incdec.ptr70 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 1, !dbg !7464
  store %struct._PixelPacket* %incdec.ptr70, %struct._PixelPacket** %q50, align 8, !dbg !7464
  br label %for.inc71, !dbg !7465

for.inc71:                                        ; preds = %if.end69
  %65 = load i64, i64* %x49, align 8, !dbg !7466
  %inc72 = add nsw i64 %65, 1, !dbg !7466
  store i64 %inc72, i64* %x49, align 8, !dbg !7466
  br label %for.cond58, !dbg !7467, !llvm.loop !7468

for.end73:                                        ; preds = %for.cond58
  %66 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7470
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7472
  %exception74 = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 58, !dbg !7473
  %call75 = call i32 @SyncAuthenticPixels(%struct._Image* %66, %struct._ExceptionInfo* %exception74), !dbg !7474
  %cmp76 = icmp eq i32 %call75, 0, !dbg !7475
  br i1 %cmp76, label %if.then78, label %if.end79, !dbg !7476

if.then78:                                        ; preds = %for.end73
  br label %for.end82, !dbg !7477

if.end79:                                         ; preds = %for.end73
  br label %for.inc80, !dbg !7478

for.inc80:                                        ; preds = %if.end79
  %68 = load i64, i64* %y, align 8, !dbg !7479
  %inc81 = add nsw i64 %68, 1, !dbg !7479
  store i64 %inc81, i64* %y, align 8, !dbg !7479
  br label %for.cond44, !dbg !7480, !llvm.loop !7481

for.end82:                                        ; preds = %if.then78, %if.then56, %for.cond44
  br label %if.end83, !dbg !7483

if.end83:                                         ; preds = %for.end82, %for.end40
  %69 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7484
  %call84 = call i32 @SyncImage(%struct._Image* %69), !dbg !7485
  br label %sw.epilog, !dbg !7486

sw.epilog:                                        ; preds = %if.end83, %for.end27
  %opacity85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill, i32 0, i32 3, !dbg !7487
  %70 = load i16, i16* %opacity85, align 2, !dbg !7487
  %conv86 = zext i16 %70 to i32, !dbg !7489
  %cmp87 = icmp ne i32 %conv86, 0, !dbg !7490
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !7491

if.then89:                                        ; preds = %sw.epilog
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7492
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 6, !dbg !7493
  store i32 1, i32* %matte, align 8, !dbg !7494
  br label %if.end90, !dbg !7492

if.end90:                                         ; preds = %if.then89, %sw.epilog
  ret i32 1, !dbg !7495
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !7496 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7500, metadata !DIExpression()), !dbg !7501
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !7504, metadata !DIExpression()), !dbg !7505
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !7506, metadata !DIExpression()), !dbg !7507
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !7508, metadata !DIExpression()), !dbg !7509
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7510
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !7512
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7512
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !7513
  br i1 %cmp, label %if.then, label %if.end, !dbg !7514

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !7515
  br label %return, !dbg !7515

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !7516
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !7517
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7518
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !7519
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7518
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !7520
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7521
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !7522
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !7522
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !7523
  %6 = load i64, i64* %offset.addr, align 8, !dbg !7524
  %7 = load i64, i64* %extent.addr, align 8, !dbg !7525
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7526
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !7527
  %9 = load i8*, i8** %client_data, align 8, !dbg !7527
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !7521
  store i32 %call4, i32* %retval, align 4, !dbg !7528
  br label %return, !dbg !7528

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !7529
  ret i32 %10, !dbg !7529
}

declare dso_local i32 @SyncImage(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._CacheView* @OpenCacheView(%struct._Image* %image) #0 !dbg !7530 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7533, metadata !DIExpression()), !dbg !7534
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7535
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7536
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 58, !dbg !7537
  %call = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %0, %struct._ExceptionInfo* %exception), !dbg !7538
  ret %struct._CacheView* %call, !dbg !7539
}

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._IO_FILE* @OpenMagickStream(i8* %path, i8* %mode) #0 !dbg !7540 {
entry:
  %retval = alloca %struct._IO_FILE*, align 8
  %path.addr = alloca i8*, align 8
  %mode.addr = alloca i8*, align 8
  %file = alloca %struct._IO_FILE*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !7543, metadata !DIExpression()), !dbg !7544
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !7545, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %file, metadata !7547, metadata !DIExpression()), !dbg !7548
  %0 = load i8*, i8** %path.addr, align 8, !dbg !7549
  %cmp = icmp eq i8* %0, null, !dbg !7551
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7552

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !7553
  %cmp1 = icmp eq i8* %1, null, !dbg !7554
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7555

if.then:                                          ; preds = %lor.lhs.false, %entry
  %call = call i32* @__errno_location() #13, !dbg !7556
  store i32 22, i32* %call, align 4, !dbg !7558
  store %struct._IO_FILE* null, %struct._IO_FILE** %retval, align 8, !dbg !7559
  br label %return, !dbg !7559

if.end:                                           ; preds = %lor.lhs.false
  store %struct._IO_FILE* null, %struct._IO_FILE** %file, align 8, !dbg !7560
  %2 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !7561
  %cmp2 = icmp eq %struct._IO_FILE* %2, null, !dbg !7563
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7564

if.then3:                                         ; preds = %if.end
  %3 = load i8*, i8** %path.addr, align 8, !dbg !7565
  %4 = load i8*, i8** %mode.addr, align 8, !dbg !7566
  %call4 = call %struct._IO_FILE* @fopen(i8* %3, i8* %4), !dbg !7567
  store %struct._IO_FILE* %call4, %struct._IO_FILE** %file, align 8, !dbg !7568
  br label %if.end5, !dbg !7569

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load %struct._IO_FILE*, %struct._IO_FILE** %file, align 8, !dbg !7570
  store %struct._IO_FILE* %5, %struct._IO_FILE** %retval, align 8, !dbg !7571
  br label %return, !dbg !7571

return:                                           ; preds = %if.end5, %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** %retval, align 8, !dbg !7572
  ret %struct._IO_FILE* %6, !dbg !7572
}

declare dso_local %struct._IO_FILE* @fopen(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PaintFloodfillImage(%struct._Image* %image, i32 %channel, %struct._MagickPixelPacket* %target, i64 %x, i64 %y, %struct._DrawInfo* %draw_info, i32 %method) #0 !dbg !7573 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %target.addr = alloca %struct._MagickPixelPacket*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %method.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  store %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %target.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !7582, metadata !DIExpression()), !dbg !7583
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !7584, metadata !DIExpression()), !dbg !7585
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !7586, metadata !DIExpression()), !dbg !7587
  store i32 %method, i32* %method.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %method.addr, metadata !7588, metadata !DIExpression()), !dbg !7589
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7590, metadata !DIExpression()), !dbg !7591
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7592
  %1 = load i32, i32* %channel.addr, align 4, !dbg !7593
  %2 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !7594
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %target.addr, align 8, !dbg !7595
  %4 = load i64, i64* %x.addr, align 8, !dbg !7596
  %5 = load i64, i64* %y.addr, align 8, !dbg !7597
  %6 = load i32, i32* %method.addr, align 4, !dbg !7598
  %cmp = icmp eq i32 %6, 3, !dbg !7599
  %7 = zext i1 %cmp to i64, !dbg !7598
  %cond = select i1 %cmp, i32 0, i32 1, !dbg !7598
  %call = call i32 @FloodfillPaintImage(%struct._Image* %0, i32 %1, %struct._DrawInfo* %2, %struct._MagickPixelPacket* %3, i64 %4, i64 %5, i32 %cond), !dbg !7600
  store i32 %call, i32* %status, align 4, !dbg !7601
  %8 = load i32, i32* %status, align 4, !dbg !7602
  ret i32 %8, !dbg !7603
}

declare dso_local i32 @FloodfillPaintImage(%struct._Image*, i32, %struct._DrawInfo*, %struct._MagickPixelPacket*, i64, i64, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PaintOpaqueImage(%struct._Image* %image, %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket* %fill) #0 !dbg !7604 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %target.addr = alloca %struct._MagickPixelPacket*, align 8
  %fill.addr = alloca %struct._MagickPixelPacket*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7607, metadata !DIExpression()), !dbg !7608
  store %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %target.addr, metadata !7609, metadata !DIExpression()), !dbg !7610
  store %struct._MagickPixelPacket* %fill, %struct._MagickPixelPacket** %fill.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %fill.addr, metadata !7611, metadata !DIExpression()), !dbg !7612
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7613, metadata !DIExpression()), !dbg !7614
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7615
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %target.addr, align 8, !dbg !7616
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %fill.addr, align 8, !dbg !7617
  %call = call i32 @OpaquePaintImageChannel(%struct._Image* %0, i32 134217719, %struct._MagickPixelPacket* %1, %struct._MagickPixelPacket* %2, i32 0), !dbg !7618
  store i32 %call, i32* %status, align 4, !dbg !7619
  %3 = load i32, i32* %status, align 4, !dbg !7620
  ret i32 %3, !dbg !7621
}

declare dso_local i32 @OpaquePaintImageChannel(%struct._Image*, i32, %struct._MagickPixelPacket*, %struct._MagickPixelPacket*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PaintOpaqueImageChannel(%struct._Image* %image, i32 %channel, %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket* %fill) #0 !dbg !7622 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %target.addr = alloca %struct._MagickPixelPacket*, align 8
  %fill.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  store %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %target.addr, metadata !7629, metadata !DIExpression()), !dbg !7630
  store %struct._MagickPixelPacket* %fill, %struct._MagickPixelPacket** %fill.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %fill.addr, metadata !7631, metadata !DIExpression()), !dbg !7632
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7633
  %1 = load i32, i32* %channel.addr, align 4, !dbg !7634
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %target.addr, align 8, !dbg !7635
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %fill.addr, align 8, !dbg !7636
  %call = call i32 @OpaquePaintImageChannel(%struct._Image* %0, i32 %1, %struct._MagickPixelPacket* %2, %struct._MagickPixelPacket* %3, i32 0), !dbg !7637
  ret i32 %call, !dbg !7638
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PaintTransparentImage(%struct._Image* %image, %struct._MagickPixelPacket* %target, i16 zeroext %opacity) #0 !dbg !7639 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %target.addr = alloca %struct._MagickPixelPacket*, align 8
  %opacity.addr = alloca i16, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7642, metadata !DIExpression()), !dbg !7643
  store %struct._MagickPixelPacket* %target, %struct._MagickPixelPacket** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %target.addr, metadata !7644, metadata !DIExpression()), !dbg !7645
  store i16 %opacity, i16* %opacity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opacity.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7648
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %target.addr, align 8, !dbg !7649
  %2 = load i16, i16* %opacity.addr, align 2, !dbg !7650
  %call = call i32 @TransparentPaintImage(%struct._Image* %0, %struct._MagickPixelPacket* %1, i16 zeroext %2, i32 0), !dbg !7651
  ret i32 %call, !dbg !7652
}

declare dso_local i32 @TransparentPaintImage(%struct._Image*, %struct._MagickPixelPacket*, i16 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ParseImageGeometry(i8* %geometry, i64* %x, i64* %y, i64* %width, i64* %height) #0 !dbg !7653 {
entry:
  %geometry.addr = alloca i8*, align 8
  %x.addr = alloca i64*, align 8
  %y.addr = alloca i64*, align 8
  %width.addr = alloca i64*, align 8
  %height.addr = alloca i64*, align 8
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !7656, metadata !DIExpression()), !dbg !7657
  store i64* %x, i64** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %x.addr, metadata !7658, metadata !DIExpression()), !dbg !7659
  store i64* %y, i64** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %y.addr, metadata !7660, metadata !DIExpression()), !dbg !7661
  store i64* %width, i64** %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %width.addr, metadata !7662, metadata !DIExpression()), !dbg !7663
  store i64* %height, i64** %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %height.addr, metadata !7664, metadata !DIExpression()), !dbg !7665
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5498, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)), !dbg !7666
  %0 = load i8*, i8** %geometry.addr, align 8, !dbg !7667
  %1 = load i64*, i64** %x.addr, align 8, !dbg !7668
  %2 = load i64*, i64** %y.addr, align 8, !dbg !7669
  %3 = load i64*, i64** %width.addr, align 8, !dbg !7670
  %4 = load i64*, i64** %height.addr, align 8, !dbg !7671
  %call1 = call i32 @ParseMetaGeometry(i8* %0, i64* %1, i64* %2, i64* %3, i64* %4), !dbg !7672
  ret i32 %call1, !dbg !7673
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ParseSizeGeometry(%struct._Image* %image, i8* %geometry, %struct._RectangleInfo* %region_info) #0 !dbg !7674 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %geometry.addr = alloca i8*, align 8
  %region_info.addr = alloca %struct._RectangleInfo*, align 8
  %flags = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7678, metadata !DIExpression()), !dbg !7679
  store i8* %geometry, i8** %geometry.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %geometry.addr, metadata !7680, metadata !DIExpression()), !dbg !7681
  store %struct._RectangleInfo* %region_info, %struct._RectangleInfo** %region_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo** %region_info.addr, metadata !7682, metadata !DIExpression()), !dbg !7683
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !7684, metadata !DIExpression()), !dbg !7685
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5539, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.28, i64 0, i64 0)), !dbg !7686
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7687
  %1 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !7688
  call void @SetGeometry(%struct._Image* %0, %struct._RectangleInfo* %1), !dbg !7689
  %2 = load i8*, i8** %geometry.addr, align 8, !dbg !7690
  %3 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !7691
  %x = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %3, i32 0, i32 2, !dbg !7692
  %4 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !7693
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %4, i32 0, i32 3, !dbg !7694
  %5 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !7695
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %5, i32 0, i32 0, !dbg !7696
  %6 = load %struct._RectangleInfo*, %struct._RectangleInfo** %region_info.addr, align 8, !dbg !7697
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %6, i32 0, i32 1, !dbg !7698
  %call1 = call i32 @ParseMetaGeometry(i8* %2, i64* %x, i64* %y, i64* %width, i64* %height), !dbg !7699
  store i32 %call1, i32* %flags, align 4, !dbg !7700
  %7 = load i32, i32* %flags, align 4, !dbg !7701
  ret i32 %7, !dbg !7702
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @PopImageList(%struct._Image** %images) #0 !dbg !7703 {
entry:
  %images.addr = alloca %struct._Image**, align 8
  store %struct._Image** %images, %struct._Image*** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %images.addr, metadata !7707, metadata !DIExpression()), !dbg !7708
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5574, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !7709
  %0 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !7710
  %call1 = call %struct._Image* @RemoveLastImageFromList(%struct._Image** %0), !dbg !7711
  ret %struct._Image* %call1, !dbg !7712
}

declare dso_local %struct._Image* @RemoveLastImageFromList(%struct._Image**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @PopImagePixels(%struct._Image* %image, i32 %quantum, i8* %destination) #0 !dbg !7713 {
entry:
  %retval = alloca i64, align 8
  %image.addr = alloca %struct._Image*, align 8
  %quantum.addr = alloca i32, align 4
  %destination.addr = alloca i8*, align 8
  %quantum_info = alloca %struct._QuantumInfo*, align 8
  %length = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7718, metadata !DIExpression()), !dbg !7719
  store i32 %quantum, i32* %quantum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quantum.addr, metadata !7720, metadata !DIExpression()), !dbg !7721
  store i8* %destination, i8** %destination.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %destination.addr, metadata !7722, metadata !DIExpression()), !dbg !7723
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info, metadata !7724, metadata !DIExpression()), !dbg !7725
  call void @llvm.dbg.declare(metadata i64* %length, metadata !7726, metadata !DIExpression()), !dbg !7727
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7728
  %call = call %struct._QuantumInfo* @AcquireQuantumInfo(%struct._ImageInfo* null, %struct._Image* %0), !dbg !7729
  store %struct._QuantumInfo* %call, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7730
  %1 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7731
  %cmp = icmp eq %struct._QuantumInfo* %1, null, !dbg !7733
  br i1 %cmp, label %if.then, label %if.end, !dbg !7734

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !7735
  br label %return, !dbg !7735

if.end:                                           ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7736
  %3 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7737
  %4 = load i32, i32* %quantum.addr, align 4, !dbg !7738
  %5 = load i8*, i8** %destination.addr, align 8, !dbg !7739
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7740
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 58, !dbg !7741
  %call1 = call i64 @ExportQuantumPixels(%struct._Image* %2, %struct._CacheView* null, %struct._QuantumInfo* %3, i32 %4, i8* %5, %struct._ExceptionInfo* %exception), !dbg !7742
  store i64 %call1, i64* %length, align 8, !dbg !7743
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7744
  %call2 = call %struct._QuantumInfo* @DestroyQuantumInfo(%struct._QuantumInfo* %7), !dbg !7745
  store %struct._QuantumInfo* %call2, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7746
  %8 = load i64, i64* %length, align 8, !dbg !7747
  store i64 %8, i64* %retval, align 8, !dbg !7748
  br label %return, !dbg !7748

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !7749
  ret i64 %9, !dbg !7749
}

declare dso_local %struct._QuantumInfo* @AcquireQuantumInfo(%struct._ImageInfo*, %struct._Image*) #2

declare dso_local i64 @ExportQuantumPixels(%struct._Image*, %struct._CacheView*, %struct._QuantumInfo*, i32, i8*, %struct._ExceptionInfo*) #2

declare dso_local %struct._QuantumInfo* @DestroyQuantumInfo(%struct._QuantumInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @PostscriptGeometry(i8* %page) #0 !dbg !7750 {
entry:
  %page.addr = alloca i8*, align 8
  store i8* %page, i8** %page.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %page.addr, metadata !7751, metadata !DIExpression()), !dbg !7752
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5657, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)), !dbg !7753
  %0 = load i8*, i8** %page.addr, align 8, !dbg !7754
  %call1 = call i8* @GetPageGeometry(i8* %0), !dbg !7755
  ret i8* %call1, !dbg !7756
}

declare dso_local i8* @GetPageGeometry(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @PushImageList(%struct._Image** %images, %struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !7757 {
entry:
  %images.addr = alloca %struct._Image**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image** %images, %struct._Image*** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %images.addr, metadata !7760, metadata !DIExpression()), !dbg !7761
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7762, metadata !DIExpression()), !dbg !7763
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7764, metadata !DIExpression()), !dbg !7765
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5695, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !7766
  %0 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !7767
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7768
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7769
  %call1 = call %struct._Image* @CloneImageList(%struct._Image* %1, %struct._ExceptionInfo* %2), !dbg !7770
  call void @AppendImageToList(%struct._Image** %0, %struct._Image* %call1), !dbg !7771
  ret i32 1, !dbg !7772
}

declare dso_local void @AppendImageToList(%struct._Image**, %struct._Image*) #2

declare dso_local %struct._Image* @CloneImageList(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @PushImagePixels(%struct._Image* %image, i32 %quantum, i8* %source) #0 !dbg !7773 {
entry:
  %retval = alloca i64, align 8
  %image.addr = alloca %struct._Image*, align 8
  %quantum.addr = alloca i32, align 4
  %source.addr = alloca i8*, align 8
  %quantum_info = alloca %struct._QuantumInfo*, align 8
  %length = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7776, metadata !DIExpression()), !dbg !7777
  store i32 %quantum, i32* %quantum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quantum.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i8* %source, i8** %source.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %source.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct._QuantumInfo** %quantum_info, metadata !7782, metadata !DIExpression()), !dbg !7783
  call void @llvm.dbg.declare(metadata i64* %length, metadata !7784, metadata !DIExpression()), !dbg !7785
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7786
  %call = call %struct._QuantumInfo* @AcquireQuantumInfo(%struct._ImageInfo* null, %struct._Image* %0), !dbg !7787
  store %struct._QuantumInfo* %call, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7788
  %1 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7789
  %cmp = icmp eq %struct._QuantumInfo* %1, null, !dbg !7791
  br i1 %cmp, label %if.then, label %if.end, !dbg !7792

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !7793
  br label %return, !dbg !7793

if.end:                                           ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7794
  %3 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7795
  %4 = load i32, i32* %quantum.addr, align 4, !dbg !7796
  %5 = load i8*, i8** %source.addr, align 8, !dbg !7797
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7798
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 58, !dbg !7799
  %call1 = call i64 @ImportQuantumPixels(%struct._Image* %2, %struct._CacheView* null, %struct._QuantumInfo* %3, i32 %4, i8* %5, %struct._ExceptionInfo* %exception), !dbg !7800
  store i64 %call1, i64* %length, align 8, !dbg !7801
  %7 = load %struct._QuantumInfo*, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7802
  %call2 = call %struct._QuantumInfo* @DestroyQuantumInfo(%struct._QuantumInfo* %7), !dbg !7803
  store %struct._QuantumInfo* %call2, %struct._QuantumInfo** %quantum_info, align 8, !dbg !7804
  %8 = load i64, i64* %length, align 8, !dbg !7805
  store i64 %8, i64* %retval, align 8, !dbg !7806
  br label %return, !dbg !7806

return:                                           ; preds = %if.end, %if.then
  %9 = load i64, i64* %retval, align 8, !dbg !7807
  ret i64 %9, !dbg !7807
}

declare dso_local i64 @ImportQuantumPixels(%struct._Image*, %struct._CacheView*, %struct._QuantumInfo*, i32, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @QuantizationError(%struct._Image* %image) #0 !dbg !7808 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7813
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7815
  %1 = load i32, i32* %debug, align 8, !dbg !7815
  %cmp = icmp ne i32 %1, 0, !dbg !7816
  br i1 %cmp, label %if.then, label %if.end, !dbg !7817

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5796, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.23, i64 0, i64 0)), !dbg !7818
  br label %if.end, !dbg !7819

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7820
  %call1 = call i32 @GetImageQuantizeError(%struct._Image* %2), !dbg !7821
  ret i32 %call1, !dbg !7822
}

declare dso_local i32 @GetImageQuantizeError(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @RadialBlurImage(%struct._Image* %image, double %angle, %struct._ExceptionInfo* %exception) #0 !dbg !7823 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %angle.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7824, metadata !DIExpression()), !dbg !7825
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !7826, metadata !DIExpression()), !dbg !7827
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7828, metadata !DIExpression()), !dbg !7829
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7830
  %1 = load double, double* %angle.addr, align 8, !dbg !7831
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7832
  %call = call %struct._Image* @RotationalBlurImage(%struct._Image* %0, double %1, %struct._ExceptionInfo* %2), !dbg !7833
  ret %struct._Image* %call, !dbg !7834
}

declare dso_local %struct._Image* @RotationalBlurImage(%struct._Image*, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @RadialBlurImageChannel(%struct._Image* %image, i32 %channel, double %angle, %struct._ExceptionInfo* %exception) #0 !dbg !7835 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %angle.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7838, metadata !DIExpression()), !dbg !7839
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7840, metadata !DIExpression()), !dbg !7841
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !7842, metadata !DIExpression()), !dbg !7843
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7844, metadata !DIExpression()), !dbg !7845
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7846
  %1 = load i32, i32* %channel.addr, align 4, !dbg !7847
  %2 = load double, double* %angle.addr, align 8, !dbg !7848
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7849
  %call = call %struct._Image* @RotationalBlurImageChannel(%struct._Image* %0, i32 %1, double %2, %struct._ExceptionInfo* %3), !dbg !7850
  ret %struct._Image* %call, !dbg !7851
}

declare dso_local %struct._Image* @RotationalBlurImageChannel(%struct._Image*, i32, double, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RandomChannelThresholdImage(%struct._Image* %image, i8* %channel, i8* %thresholds, %struct._ExceptionInfo* %exception) #0 !dbg !1257 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i8*, align 8
  %thresholds.addr = alloca i8*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %lower_threshold = alloca double, align 8
  %upper_threshold = alloca double, align 8
  %random_info = alloca %struct._RandomInfo*, align 8
  %count = alloca i64, align 8
  %y = alloca i64, align 8
  %order = alloca i64, align 8
  %x = alloca i64, align 8
  %index = alloca i16, align 2
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %intensity = alloca float, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7852, metadata !DIExpression()), !dbg !7853
  store i8* %channel, i8** %channel.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %channel.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  store i8* %thresholds, i8** %thresholds.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %thresholds.addr, metadata !7856, metadata !DIExpression()), !dbg !7857
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7858, metadata !DIExpression()), !dbg !7859
  call void @llvm.dbg.declare(metadata double* %lower_threshold, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata double* %upper_threshold, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata %struct._RandomInfo** %random_info, metadata !7864, metadata !DIExpression()), !dbg !7869
  call void @llvm.dbg.declare(metadata i64* %count, metadata !7870, metadata !DIExpression()), !dbg !7871
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7872, metadata !DIExpression()), !dbg !7873
  call void @llvm.dbg.declare(metadata i64* %order, metadata !7874, metadata !DIExpression()), !dbg !7875
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7876
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7878
  %1 = load i32, i32* %debug, align 8, !dbg !7878
  %cmp = icmp ne i32 %1, 0, !dbg !7879
  br i1 %cmp, label %if.then, label %if.end, !dbg !7880

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7881
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7882
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7881
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5911, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !7883
  br label %if.end, !dbg !7884

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7885
  %debug1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 59, !dbg !7887
  %4 = load i32, i32* %debug1, align 8, !dbg !7887
  %cmp2 = icmp ne i32 %4, 0, !dbg !7888
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !7889

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5915, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !7890
  br label %if.end5, !dbg !7891

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load i8*, i8** %thresholds.addr, align 8, !dbg !7892
  %cmp6 = icmp eq i8* %5, null, !dbg !7894
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !7895

if.then7:                                         ; preds = %if.end5
  store i32 1, i32* %retval, align 4, !dbg !7896
  br label %return, !dbg !7896

if.end8:                                          ; preds = %if.end5
  store double 0.000000e+00, double* %lower_threshold, align 8, !dbg !7897
  store double 0.000000e+00, double* %upper_threshold, align 8, !dbg !7898
  %6 = load i8*, i8** %thresholds.addr, align 8, !dbg !7899
  %call9 = call i32 @LocaleCompare(i8* %6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0)), !dbg !7901
  %cmp10 = icmp eq i32 %call9, 0, !dbg !7902
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !7903

if.then11:                                        ; preds = %if.end8
  store i64 2, i64* %order, align 8, !dbg !7904
  br label %if.end33, !dbg !7905

if.else:                                          ; preds = %if.end8
  %7 = load i8*, i8** %thresholds.addr, align 8, !dbg !7906
  %call12 = call i32 @LocaleCompare(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.30, i64 0, i64 0)), !dbg !7908
  %cmp13 = icmp eq i32 %call12, 0, !dbg !7909
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !7910

if.then14:                                        ; preds = %if.else
  store i64 3, i64* %order, align 8, !dbg !7911
  br label %if.end32, !dbg !7912

if.else15:                                        ; preds = %if.else
  %8 = load i8*, i8** %thresholds.addr, align 8, !dbg !7913
  %call16 = call i32 @LocaleCompare(i8* %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0)), !dbg !7915
  %cmp17 = icmp eq i32 %call16, 0, !dbg !7916
  br i1 %cmp17, label %if.then18, label %if.else19, !dbg !7917

if.then18:                                        ; preds = %if.else15
  store i64 4, i64* %order, align 8, !dbg !7918
  br label %if.end31, !dbg !7919

if.else19:                                        ; preds = %if.else15
  store i64 1, i64* %order, align 8, !dbg !7920
  %9 = load i8*, i8** %thresholds.addr, align 8, !dbg !7922
  %call20 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %9, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), double* %lower_threshold, double* %upper_threshold) #8, !dbg !7923
  %conv = sext i32 %call20 to i64, !dbg !7924
  store i64 %conv, i64* %count, align 8, !dbg !7925
  %10 = load i8*, i8** %thresholds.addr, align 8, !dbg !7926
  %call21 = call i8* @strchr(i8* %10, i32 37) #11, !dbg !7928
  %cmp22 = icmp ne i8* %call21, null, !dbg !7929
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !7930

if.then24:                                        ; preds = %if.else19
  %11 = load double, double* %upper_threshold, align 8, !dbg !7931
  %mul = fmul double %11, 6.553500e+02, !dbg !7931
  store double %mul, double* %upper_threshold, align 8, !dbg !7931
  %12 = load double, double* %lower_threshold, align 8, !dbg !7933
  %mul25 = fmul double %12, 6.553500e+02, !dbg !7933
  store double %mul25, double* %lower_threshold, align 8, !dbg !7933
  br label %if.end26, !dbg !7934

if.end26:                                         ; preds = %if.then24, %if.else19
  %13 = load i64, i64* %count, align 8, !dbg !7935
  %cmp27 = icmp eq i64 %13, 1, !dbg !7937
  br i1 %cmp27, label %if.then29, label %if.end30, !dbg !7938

if.then29:                                        ; preds = %if.end26
  %14 = load double, double* %lower_threshold, align 8, !dbg !7939
  %sub = fsub double 6.553500e+04, %14, !dbg !7940
  store double %sub, double* %upper_threshold, align 8, !dbg !7941
  br label %if.end30, !dbg !7942

if.end30:                                         ; preds = %if.then29, %if.end26
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then18
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then14
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then11
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7943
  %debug34 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 59, !dbg !7945
  %16 = load i32, i32* %debug34, align 8, !dbg !7945
  %cmp35 = icmp ne i32 %16, 0, !dbg !7946
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !7947

if.then37:                                        ; preds = %if.end33
  %17 = load i8*, i8** %channel.addr, align 8, !dbg !7948
  %call38 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5942, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.33, i64 0, i64 0), i8* %17), !dbg !7949
  br label %if.end39, !dbg !7950

if.end39:                                         ; preds = %if.then37, %if.end33
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7951
  %debug40 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 59, !dbg !7953
  %19 = load i32, i32* %debug40, align 8, !dbg !7953
  %cmp41 = icmp ne i32 %19, 0, !dbg !7954
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !7955

if.then43:                                        ; preds = %if.end39
  %20 = load i8*, i8** %thresholds.addr, align 8, !dbg !7956
  %21 = load double, double* %lower_threshold, align 8, !dbg !7957
  %22 = load double, double* %upper_threshold, align 8, !dbg !7958
  %call44 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 16384, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5945, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34, i64 0, i64 0), i8* %20, double %21, double %22), !dbg !7959
  br label %if.end45, !dbg !7960

if.end45:                                         ; preds = %if.then43, %if.end39
  %23 = load i8*, i8** %channel.addr, align 8, !dbg !7961
  %call46 = call i32 @LocaleCompare(i8* %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0)), !dbg !7963
  %cmp47 = icmp eq i32 %call46, 0, !dbg !7964
  br i1 %cmp47, label %if.then52, label %lor.lhs.false, !dbg !7965

lor.lhs.false:                                    ; preds = %if.end45
  %24 = load i8*, i8** %channel.addr, align 8, !dbg !7966
  %call49 = call i32 @LocaleCompare(i8* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0)), !dbg !7967
  %cmp50 = icmp eq i32 %call49, 0, !dbg !7968
  br i1 %cmp50, label %if.then52, label %if.end66, !dbg !7969

if.then52:                                        ; preds = %lor.lhs.false, %if.end45
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7970
  %call53 = call i32 @AcquireImageColormap(%struct._Image* %25, i64 2), !dbg !7972
  %cmp54 = icmp eq i32 %call53, 0, !dbg !7973
  br i1 %cmp54, label %if.then56, label %if.end65, !dbg !7974

if.then56:                                        ; preds = %if.then52
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7975
  %cmp57 = icmp ne %struct._Image* %26, null, !dbg !7975
  br i1 %cmp57, label %if.then59, label %if.end64, !dbg !7978

if.then59:                                        ; preds = %if.then56
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7975
  %exception60 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 58, !dbg !7975
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7975
  %filename61 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 53, !dbg !7975
  %arraydecay62 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename61, i64 0, i64 0, !dbg !7975
  %call63 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception60, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5951, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay62), !dbg !7975
  br label %if.end64, !dbg !7975

if.end64:                                         ; preds = %if.then59, %if.then56
  store i32 0, i32* %retval, align 4, !dbg !7978
  br label %return, !dbg !7978

if.end65:                                         ; preds = %if.then52
  br label %if.end66, !dbg !7979

if.end66:                                         ; preds = %if.end65, %lor.lhs.false
  %call67 = call %struct._RandomInfo* @AcquireRandomInfo(), !dbg !7980
  store %struct._RandomInfo* %call67, %struct._RandomInfo** %random_info, align 8, !dbg !7981
  store i64 0, i64* %y, align 8, !dbg !7982
  br label %for.cond, !dbg !7984

for.cond:                                         ; preds = %for.inc277, %if.end66
  %29 = load i64, i64* %y, align 8, !dbg !7985
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7987
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 8, !dbg !7988
  %31 = load i64, i64* %rows, align 8, !dbg !7988
  %cmp68 = icmp slt i64 %29, %31, !dbg !7989
  br i1 %cmp68, label %for.body, label %for.end279, !dbg !7990

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7991, metadata !DIExpression()), !dbg !7993
  call void @llvm.dbg.declare(metadata i16* %index, metadata !7994, metadata !DIExpression()), !dbg !7995
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7996, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7999, metadata !DIExpression()), !dbg !8000
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8001
  %33 = load i64, i64* %y, align 8, !dbg !8002
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8003
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !8004
  %35 = load i64, i64* %columns, align 8, !dbg !8004
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8005
  %call70 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %32, i64 0, i64 %33, i64 %35, i64 1, %struct._ExceptionInfo* %36), !dbg !8006
  store %struct._PixelPacket* %call70, %struct._PixelPacket** %q, align 8, !dbg !8007
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8008
  %cmp71 = icmp eq %struct._PixelPacket* %37, null, !dbg !8010
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !8011

if.then73:                                        ; preds = %for.body
  br label %for.end279, !dbg !8012

if.end74:                                         ; preds = %for.body
  %38 = load i8*, i8** %channel.addr, align 8, !dbg !8013
  %call75 = call i32 @LocaleCompare(i8* %38, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0)), !dbg !8015
  %cmp76 = icmp eq i32 %call75, 0, !dbg !8016
  br i1 %cmp76, label %if.then82, label %lor.lhs.false78, !dbg !8017

lor.lhs.false78:                                  ; preds = %if.end74
  %39 = load i8*, i8** %channel.addr, align 8, !dbg !8018
  %call79 = call i32 @LocaleCompare(i8* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0)), !dbg !8019
  %cmp80 = icmp eq i32 %call79, 0, !dbg !8020
  br i1 %cmp80, label %if.then82, label %if.end164, !dbg !8021

if.then82:                                        ; preds = %lor.lhs.false78, %if.end74
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8022
  %call83 = call i16* @GetAuthenticIndexQueue(%struct._Image* %40), !dbg !8024
  store i16* %call83, i16** %indexes, align 8, !dbg !8025
  store i64 0, i64* %x, align 8, !dbg !8026
  br label %for.cond84, !dbg !8028

for.cond84:                                       ; preds = %for.inc, %if.then82
  %41 = load i64, i64* %x, align 8, !dbg !8029
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8031
  %columns85 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 7, !dbg !8032
  %43 = load i64, i64* %columns85, align 8, !dbg !8032
  %cmp86 = icmp slt i64 %41, %43, !dbg !8033
  br i1 %cmp86, label %for.body88, label %for.end, !dbg !8034

for.body88:                                       ; preds = %for.cond84
  call void @llvm.dbg.declare(metadata float* %intensity, metadata !8035, metadata !DIExpression()), !dbg !8037
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8038
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8039
  %call89 = call float @GetPixelIntensity(%struct._Image* %44, %struct._PixelPacket* %45), !dbg !8040
  store float %call89, float* %intensity, align 4, !dbg !8041
  %46 = load i64, i64* %order, align 8, !dbg !8042
  %cmp90 = icmp eq i64 %46, 1, !dbg !8044
  br i1 %cmp90, label %if.then92, label %if.else110, !dbg !8045

if.then92:                                        ; preds = %for.body88
  %47 = load float, float* %intensity, align 4, !dbg !8046
  %conv93 = fpext float %47 to double, !dbg !8046
  %48 = load double, double* %lower_threshold, align 8, !dbg !8049
  %cmp94 = fcmp olt double %conv93, %48, !dbg !8050
  br i1 %cmp94, label %if.then96, label %if.else98, !dbg !8051

if.then96:                                        ; preds = %if.then92
  %49 = load double, double* %lower_threshold, align 8, !dbg !8052
  %conv97 = fptrunc double %49 to float, !dbg !8052
  store float %conv97, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8053
  br label %if.end109, !dbg !8054

if.else98:                                        ; preds = %if.then92
  %50 = load float, float* %intensity, align 4, !dbg !8055
  %conv99 = fpext float %50 to double, !dbg !8055
  %51 = load double, double* %upper_threshold, align 8, !dbg !8057
  %cmp100 = fcmp ogt double %conv99, %51, !dbg !8058
  br i1 %cmp100, label %if.then102, label %if.else104, !dbg !8059

if.then102:                                       ; preds = %if.else98
  %52 = load double, double* %upper_threshold, align 8, !dbg !8060
  %conv103 = fptrunc double %52 to float, !dbg !8060
  store float %conv103, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8061
  br label %if.end108, !dbg !8062

if.else104:                                       ; preds = %if.else98
  %53 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !8063
  %call105 = call double @GetPseudoRandomValue(%struct._RandomInfo* %53), !dbg !8064
  %mul106 = fmul double 6.553500e+04, %call105, !dbg !8065
  %conv107 = fptrunc double %mul106 to float, !dbg !8066
  store float %conv107, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8067
  br label %if.end108

if.end108:                                        ; preds = %if.else104, %if.then102
  br label %if.end109

if.end109:                                        ; preds = %if.end108, %if.then96
  br label %if.end140, !dbg !8068

if.else110:                                       ; preds = %for.body88
  %54 = load i64, i64* %order, align 8, !dbg !8069
  %cmp111 = icmp eq i64 %54, 2, !dbg !8071
  br i1 %cmp111, label %if.then113, label %if.else117, !dbg !8072

if.then113:                                       ; preds = %if.else110
  %55 = load i64, i64* %x, align 8, !dbg !8073
  %rem = srem i64 %55, 2, !dbg !8074
  %56 = load i64, i64* %y, align 8, !dbg !8075
  %rem114 = srem i64 %56, 2, !dbg !8076
  %mul115 = mul nsw i64 2, %rem114, !dbg !8077
  %add = add nsw i64 %rem, %mul115, !dbg !8078
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* @RandomChannelThresholdImage.o2, i64 0, i64 %add, !dbg !8079
  %57 = load float, float* %arrayidx, align 4, !dbg !8079
  %mul116 = fmul float 6.553500e+04, %57, !dbg !8080
  store float %mul116, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8081
  br label %if.end139, !dbg !8082

if.else117:                                       ; preds = %if.else110
  %58 = load i64, i64* %order, align 8, !dbg !8083
  %cmp118 = icmp eq i64 %58, 3, !dbg !8085
  br i1 %cmp118, label %if.then120, label %if.else127, !dbg !8086

if.then120:                                       ; preds = %if.else117
  %59 = load i64, i64* %x, align 8, !dbg !8087
  %rem121 = srem i64 %59, 3, !dbg !8088
  %60 = load i64, i64* %y, align 8, !dbg !8089
  %rem122 = srem i64 %60, 3, !dbg !8090
  %mul123 = mul nsw i64 3, %rem122, !dbg !8091
  %add124 = add nsw i64 %rem121, %mul123, !dbg !8092
  %arrayidx125 = getelementptr inbounds [9 x float], [9 x float]* @RandomChannelThresholdImage.o3, i64 0, i64 %add124, !dbg !8093
  %61 = load float, float* %arrayidx125, align 4, !dbg !8093
  %mul126 = fmul float 6.553500e+04, %61, !dbg !8094
  store float %mul126, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8095
  br label %if.end138, !dbg !8096

if.else127:                                       ; preds = %if.else117
  %62 = load i64, i64* %order, align 8, !dbg !8097
  %cmp128 = icmp eq i64 %62, 4, !dbg !8099
  br i1 %cmp128, label %if.then130, label %if.end137, !dbg !8100

if.then130:                                       ; preds = %if.else127
  %63 = load i64, i64* %x, align 8, !dbg !8101
  %rem131 = srem i64 %63, 4, !dbg !8102
  %64 = load i64, i64* %y, align 8, !dbg !8103
  %rem132 = srem i64 %64, 4, !dbg !8104
  %mul133 = mul nsw i64 4, %rem132, !dbg !8105
  %add134 = add nsw i64 %rem131, %mul133, !dbg !8106
  %arrayidx135 = getelementptr inbounds [16 x float], [16 x float]* @RandomChannelThresholdImage.o4, i64 0, i64 %add134, !dbg !8107
  %65 = load float, float* %arrayidx135, align 4, !dbg !8107
  %mul136 = fmul float 6.553500e+04, %65, !dbg !8108
  store float %mul136, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8109
  br label %if.end137, !dbg !8110

if.end137:                                        ; preds = %if.then130, %if.else127
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.then120
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then113
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.end109
  %66 = load float, float* %intensity, align 4, !dbg !8111
  %67 = load float, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8112
  %cmp141 = fcmp ole float %66, %67, !dbg !8113
  %68 = zext i1 %cmp141 to i64, !dbg !8111
  %cond = select i1 %cmp141, i32 0, i32 1, !dbg !8111
  %conv143 = trunc i32 %cond to i16, !dbg !8114
  store i16 %conv143, i16* %index, align 2, !dbg !8115
  %69 = load i16*, i16** %indexes, align 8, !dbg !8116
  %70 = load i64, i64* %x, align 8, !dbg !8116
  %add.ptr = getelementptr inbounds i16, i16* %69, i64 %70, !dbg !8116
  %cmp144 = icmp ne i16* %add.ptr, null, !dbg !8116
  br i1 %cmp144, label %if.then146, label %if.end148, !dbg !8119

if.then146:                                       ; preds = %if.end140
  %71 = load i16, i16* %index, align 2, !dbg !8116
  %72 = load i16*, i16** %indexes, align 8, !dbg !8116
  %73 = load i64, i64* %x, align 8, !dbg !8116
  %add.ptr147 = getelementptr inbounds i16, i16* %72, i64 %73, !dbg !8116
  store i16 %71, i16* %add.ptr147, align 2, !dbg !8116
  br label %if.end148, !dbg !8116

if.end148:                                        ; preds = %if.then146, %if.end140
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8120
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 11, !dbg !8120
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !8120
  %76 = load i16, i16* %index, align 2, !dbg !8120
  %conv149 = zext i16 %76 to i64, !dbg !8120
  %add.ptr150 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i64 %conv149, !dbg !8120
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr150, i32 0, i32 2, !dbg !8120
  %77 = load i16, i16* %red, align 2, !dbg !8120
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8120
  %red151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 2, !dbg !8120
  store i16 %77, i16* %red151, align 2, !dbg !8120
  %79 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8120
  %colormap152 = getelementptr inbounds %struct._Image, %struct._Image* %79, i32 0, i32 11, !dbg !8120
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap152, align 8, !dbg !8120
  %81 = load i16, i16* %index, align 2, !dbg !8120
  %conv153 = zext i16 %81 to i64, !dbg !8120
  %add.ptr154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i64 %conv153, !dbg !8120
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr154, i32 0, i32 1, !dbg !8120
  %82 = load i16, i16* %green, align 2, !dbg !8120
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8120
  %green155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 1, !dbg !8120
  store i16 %82, i16* %green155, align 2, !dbg !8120
  %84 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8120
  %colormap156 = getelementptr inbounds %struct._Image, %struct._Image* %84, i32 0, i32 11, !dbg !8120
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap156, align 8, !dbg !8120
  %86 = load i16, i16* %index, align 2, !dbg !8120
  %conv157 = zext i16 %86 to i64, !dbg !8120
  %add.ptr158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i64 %conv157, !dbg !8120
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr158, i32 0, i32 0, !dbg !8120
  %87 = load i16, i16* %blue, align 2, !dbg !8120
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8120
  %blue159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 0, !dbg !8120
  store i16 %87, i16* %blue159, align 2, !dbg !8120
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8120
  %colormap160 = getelementptr inbounds %struct._Image, %struct._Image* %89, i32 0, i32 11, !dbg !8120
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap160, align 8, !dbg !8120
  %91 = load i16, i16* %index, align 2, !dbg !8120
  %conv161 = zext i16 %91 to i64, !dbg !8120
  %add.ptr162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i64 %conv161, !dbg !8120
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr162, i32 0, i32 3, !dbg !8120
  %92 = load i16, i16* %opacity, align 2, !dbg !8120
  %93 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8120
  %opacity163 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %93, i32 0, i32 3, !dbg !8120
  store i16 %92, i16* %opacity163, align 2, !dbg !8120
  %94 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8122
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %94, i32 1, !dbg !8122
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8122
  br label %for.inc, !dbg !8123

for.inc:                                          ; preds = %if.end148
  %95 = load i64, i64* %x, align 8, !dbg !8124
  %inc = add nsw i64 %95, 1, !dbg !8124
  store i64 %inc, i64* %x, align 8, !dbg !8124
  br label %for.cond84, !dbg !8125, !llvm.loop !8126

for.end:                                          ; preds = %for.cond84
  br label %if.end164, !dbg !8128

if.end164:                                        ; preds = %for.end, %lor.lhs.false78
  %96 = load i8*, i8** %channel.addr, align 8, !dbg !8129
  %call165 = call i32 @LocaleCompare(i8* %96, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0)), !dbg !8131
  %cmp166 = icmp eq i32 %call165, 0, !dbg !8132
  br i1 %cmp166, label %if.then176, label %lor.lhs.false168, !dbg !8133

lor.lhs.false168:                                 ; preds = %if.end164
  %97 = load i8*, i8** %channel.addr, align 8, !dbg !8134
  %call169 = call i32 @LocaleCompare(i8* %97, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.35, i64 0, i64 0)), !dbg !8135
  %cmp170 = icmp eq i32 %call169, 0, !dbg !8136
  br i1 %cmp170, label %if.then176, label %lor.lhs.false172, !dbg !8137

lor.lhs.false172:                                 ; preds = %lor.lhs.false168
  %98 = load i8*, i8** %channel.addr, align 8, !dbg !8138
  %call173 = call i32 @LocaleCompare(i8* %98, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i64 0, i64 0)), !dbg !8139
  %cmp174 = icmp eq i32 %call173, 0, !dbg !8140
  br i1 %cmp174, label %if.then176, label %if.else257, !dbg !8141

if.then176:                                       ; preds = %lor.lhs.false172, %lor.lhs.false168, %if.end164
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8142
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 6, !dbg !8145
  %100 = load i32, i32* %matte, align 8, !dbg !8145
  %cmp177 = icmp ne i32 %100, 0, !dbg !8146
  br i1 %cmp177, label %if.then179, label %if.end256, !dbg !8147

if.then179:                                       ; preds = %if.then176
  store i64 0, i64* %x, align 8, !dbg !8148
  br label %for.cond180, !dbg !8150

for.cond180:                                      ; preds = %for.inc253, %if.then179
  %101 = load i64, i64* %x, align 8, !dbg !8151
  %102 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8153
  %columns181 = getelementptr inbounds %struct._Image, %struct._Image* %102, i32 0, i32 7, !dbg !8154
  %103 = load i64, i64* %columns181, align 8, !dbg !8154
  %cmp182 = icmp slt i64 %101, %103, !dbg !8155
  br i1 %cmp182, label %for.body184, label %for.end255, !dbg !8156

for.body184:                                      ; preds = %for.cond180
  %104 = load i64, i64* %order, align 8, !dbg !8157
  %cmp185 = icmp eq i64 %104, 1, !dbg !8160
  br i1 %cmp185, label %if.then187, label %if.else209, !dbg !8161

if.then187:                                       ; preds = %for.body184
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8162
  %opacity188 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 3, !dbg !8165
  %106 = load i16, i16* %opacity188, align 2, !dbg !8165
  %conv189 = uitofp i16 %106 to float, !dbg !8166
  %conv190 = fpext float %conv189 to double, !dbg !8166
  %107 = load double, double* %lower_threshold, align 8, !dbg !8167
  %cmp191 = fcmp olt double %conv190, %107, !dbg !8168
  br i1 %cmp191, label %if.then193, label %if.else195, !dbg !8169

if.then193:                                       ; preds = %if.then187
  %108 = load double, double* %lower_threshold, align 8, !dbg !8170
  %conv194 = fptrunc double %108 to float, !dbg !8170
  store float %conv194, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8171
  br label %if.end208, !dbg !8172

if.else195:                                       ; preds = %if.then187
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8173
  %opacity196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 3, !dbg !8175
  %110 = load i16, i16* %opacity196, align 2, !dbg !8175
  %conv197 = uitofp i16 %110 to float, !dbg !8176
  %conv198 = fpext float %conv197 to double, !dbg !8176
  %111 = load double, double* %upper_threshold, align 8, !dbg !8177
  %cmp199 = fcmp ogt double %conv198, %111, !dbg !8178
  br i1 %cmp199, label %if.then201, label %if.else203, !dbg !8179

if.then201:                                       ; preds = %if.else195
  %112 = load double, double* %upper_threshold, align 8, !dbg !8180
  %conv202 = fptrunc double %112 to float, !dbg !8180
  store float %conv202, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8181
  br label %if.end207, !dbg !8182

if.else203:                                       ; preds = %if.else195
  %113 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !8183
  %call204 = call double @GetPseudoRandomValue(%struct._RandomInfo* %113), !dbg !8184
  %mul205 = fmul double 6.553500e+04, %call204, !dbg !8185
  %conv206 = fptrunc double %mul205 to float, !dbg !8186
  store float %conv206, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8187
  br label %if.end207

if.end207:                                        ; preds = %if.else203, %if.then201
  br label %if.end208

if.end208:                                        ; preds = %if.end207, %if.then193
  br label %if.end244, !dbg !8188

if.else209:                                       ; preds = %for.body184
  %114 = load i64, i64* %order, align 8, !dbg !8189
  %cmp210 = icmp eq i64 %114, 2, !dbg !8191
  br i1 %cmp210, label %if.then212, label %if.else219, !dbg !8192

if.then212:                                       ; preds = %if.else209
  %115 = load i64, i64* %x, align 8, !dbg !8193
  %rem213 = srem i64 %115, 2, !dbg !8194
  %116 = load i64, i64* %y, align 8, !dbg !8195
  %rem214 = srem i64 %116, 2, !dbg !8196
  %mul215 = mul nsw i64 2, %rem214, !dbg !8197
  %add216 = add nsw i64 %rem213, %mul215, !dbg !8198
  %arrayidx217 = getelementptr inbounds [4 x float], [4 x float]* @RandomChannelThresholdImage.o2, i64 0, i64 %add216, !dbg !8199
  %117 = load float, float* %arrayidx217, align 4, !dbg !8199
  %mul218 = fmul float 6.553500e+04, %117, !dbg !8200
  store float %mul218, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8201
  br label %if.end243, !dbg !8202

if.else219:                                       ; preds = %if.else209
  %118 = load i64, i64* %order, align 8, !dbg !8203
  %cmp220 = icmp eq i64 %118, 3, !dbg !8205
  br i1 %cmp220, label %if.then222, label %if.else229, !dbg !8206

if.then222:                                       ; preds = %if.else219
  %119 = load i64, i64* %x, align 8, !dbg !8207
  %rem223 = srem i64 %119, 3, !dbg !8208
  %120 = load i64, i64* %y, align 8, !dbg !8209
  %rem224 = srem i64 %120, 3, !dbg !8210
  %mul225 = mul nsw i64 3, %rem224, !dbg !8211
  %add226 = add nsw i64 %rem223, %mul225, !dbg !8212
  %arrayidx227 = getelementptr inbounds [9 x float], [9 x float]* @RandomChannelThresholdImage.o3, i64 0, i64 %add226, !dbg !8213
  %121 = load float, float* %arrayidx227, align 4, !dbg !8213
  %mul228 = fmul float 6.553500e+04, %121, !dbg !8214
  store float %mul228, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8215
  br label %if.end242, !dbg !8216

if.else229:                                       ; preds = %if.else219
  %122 = load i64, i64* %order, align 8, !dbg !8217
  %cmp230 = icmp eq i64 %122, 4, !dbg !8219
  br i1 %cmp230, label %if.then232, label %if.end241, !dbg !8220

if.then232:                                       ; preds = %if.else229
  %123 = load i64, i64* %x, align 8, !dbg !8221
  %rem233 = srem i64 %123, 4, !dbg !8222
  %124 = load i64, i64* %y, align 8, !dbg !8223
  %rem234 = srem i64 %124, 4, !dbg !8224
  %mul235 = mul nsw i64 4, %rem234, !dbg !8225
  %add236 = add nsw i64 %rem233, %mul235, !dbg !8226
  %arrayidx237 = getelementptr inbounds [16 x float], [16 x float]* @RandomChannelThresholdImage.o4, i64 0, i64 %add236, !dbg !8227
  %125 = load float, float* %arrayidx237, align 4, !dbg !8227
  %mul238 = fmul float 6.553500e+04, %125, !dbg !8228
  %conv239 = fpext float %mul238 to double, !dbg !8229
  %div = fdiv double %conv239, 1.700000e+00, !dbg !8230
  %conv240 = fptrunc double %div to float, !dbg !8229
  store float %conv240, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8231
  br label %if.end241, !dbg !8232

if.end241:                                        ; preds = %if.then232, %if.else229
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %if.then222
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then212
  br label %if.end244

if.end244:                                        ; preds = %if.end243, %if.end208
  %126 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8233
  %opacity245 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %126, i32 0, i32 3, !dbg !8233
  %127 = load i16, i16* %opacity245, align 2, !dbg !8233
  %conv246 = uitofp i16 %127 to float, !dbg !8233
  %128 = load float, float* @RandomChannelThresholdImage.threshold, align 4, !dbg !8233
  %cmp247 = fcmp ole float %conv246, %128, !dbg !8233
  %129 = zext i1 %cmp247 to i64, !dbg !8233
  %cond249 = select i1 %cmp247, i32 0, i32 65535, !dbg !8233
  %conv250 = trunc i32 %cond249 to i16, !dbg !8233
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8233
  %opacity251 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 3, !dbg !8233
  store i16 %conv250, i16* %opacity251, align 2, !dbg !8233
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8234
  %incdec.ptr252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 1, !dbg !8234
  store %struct._PixelPacket* %incdec.ptr252, %struct._PixelPacket** %q, align 8, !dbg !8234
  br label %for.inc253, !dbg !8235

for.inc253:                                       ; preds = %if.end244
  %132 = load i64, i64* %x, align 8, !dbg !8236
  %inc254 = add nsw i64 %132, 1, !dbg !8236
  store i64 %inc254, i64* %x, align 8, !dbg !8236
  br label %for.cond180, !dbg !8237, !llvm.loop !8238

for.end255:                                       ; preds = %for.cond180
  br label %if.end256, !dbg !8239

if.end256:                                        ; preds = %for.end255, %if.then176
  br label %if.end271, !dbg !8240

if.else257:                                       ; preds = %lor.lhs.false172
  %133 = load i8*, i8** %channel.addr, align 8, !dbg !8241
  %call258 = call i32 @LocaleCompare(i8* %133, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0)), !dbg !8244
  %cmp259 = icmp ne i32 %call258, 0, !dbg !8245
  br i1 %cmp259, label %if.then261, label %if.end270, !dbg !8246

if.then261:                                       ; preds = %if.else257
  %134 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8247
  %cmp262 = icmp ne %struct._Image* %134, null, !dbg !8247
  br i1 %cmp262, label %if.then264, label %if.end269, !dbg !8250

if.then264:                                       ; preds = %if.then261
  %135 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8247
  %exception265 = getelementptr inbounds %struct._Image, %struct._Image* %135, i32 0, i32 58, !dbg !8247
  %136 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8247
  %filename266 = getelementptr inbounds %struct._Image, %struct._Image* %136, i32 0, i32 53, !dbg !8247
  %arraydecay267 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename266, i64 0, i64 0, !dbg !8247
  %call268 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception265, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6033, i32 410, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay267), !dbg !8247
  br label %if.end269, !dbg !8247

if.end269:                                        ; preds = %if.then264, %if.then261
  store i32 0, i32* %retval, align 4, !dbg !8250
  br label %return, !dbg !8250

if.end270:                                        ; preds = %if.else257
  br label %if.end271

if.end271:                                        ; preds = %if.end270, %if.end256
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8251
  %138 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8253
  %call272 = call i32 @SyncAuthenticPixels(%struct._Image* %137, %struct._ExceptionInfo* %138), !dbg !8254
  %cmp273 = icmp eq i32 %call272, 0, !dbg !8255
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !8256

if.then275:                                       ; preds = %if.end271
  br label %for.end279, !dbg !8257

if.end276:                                        ; preds = %if.end271
  br label %for.inc277, !dbg !8258

for.inc277:                                       ; preds = %if.end276
  %139 = load i64, i64* %y, align 8, !dbg !8259
  %inc278 = add nsw i64 %139, 1, !dbg !8259
  store i64 %inc278, i64* %y, align 8, !dbg !8259
  br label %for.cond, !dbg !8260, !llvm.loop !8261

for.end279:                                       ; preds = %if.then275, %if.then73, %for.cond
  %140 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info, align 8, !dbg !8263
  %call280 = call %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo* %140), !dbg !8264
  store %struct._RandomInfo* %call280, %struct._RandomInfo** %random_info, align 8, !dbg !8265
  store i32 1, i32* %retval, align 4, !dbg !8266
  br label %return, !dbg !8266

return:                                           ; preds = %for.end279, %if.end269, %if.end64, %if.then7
  %141 = load i32, i32* %retval, align 4, !dbg !8267
  ret i32 %141, !dbg !8267
}

declare dso_local i32 @LocaleCompare(i8*, i8*) #2

; Function Attrs: nounwind
declare dso_local i32 @__isoc99_sscanf(i8*, i8*, ...) #3

declare dso_local %struct._RandomInfo* @AcquireRandomInfo() #2

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #2

declare dso_local double @GetPseudoRandomValue(%struct._RandomInfo*) #2

declare dso_local %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @ReacquireMemory(i8** %memory, i64 %size) #0 !dbg !8268 {
entry:
  %memory.addr = alloca i8**, align 8
  %size.addr = alloca i64, align 8
  %allocation = alloca i8*, align 8
  store i8** %memory, i8*** %memory.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %memory.addr, metadata !8271, metadata !DIExpression()), !dbg !8272
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata i8** %allocation, metadata !8275, metadata !DIExpression()), !dbg !8276
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6075, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !8277
  %0 = load i8**, i8*** %memory.addr, align 8, !dbg !8278
  %1 = load i8*, i8** %0, align 8, !dbg !8280
  %cmp = icmp eq i8* %1, null, !dbg !8281
  br i1 %cmp, label %if.then, label %if.end, !dbg !8282

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !8283
  %call1 = call i8* @AcquireMagickMemory(i64 %2) #15, !dbg !8285
  %3 = load i8**, i8*** %memory.addr, align 8, !dbg !8286
  store i8* %call1, i8** %3, align 8, !dbg !8287
  br label %return, !dbg !8288

if.end:                                           ; preds = %entry
  %4 = load i8**, i8*** %memory.addr, align 8, !dbg !8289
  %5 = load i8*, i8** %4, align 8, !dbg !8290
  %6 = load i64, i64* %size.addr, align 8, !dbg !8291
  %call2 = call i8* @realloc(i8* %5, i64 %6) #8, !dbg !8292
  store i8* %call2, i8** %allocation, align 8, !dbg !8293
  %7 = load i8*, i8** %allocation, align 8, !dbg !8294
  %cmp3 = icmp eq i8* %7, null, !dbg !8296
  br i1 %cmp3, label %if.then4, label %if.end6, !dbg !8297

if.then4:                                         ; preds = %if.end
  %8 = load i8**, i8*** %memory.addr, align 8, !dbg !8298
  %9 = load i8*, i8** %8, align 8, !dbg !8299
  %call5 = call i8* @RelinquishMagickMemory(i8* %9), !dbg !8300
  %10 = load i8**, i8*** %memory.addr, align 8, !dbg !8301
  store i8* %call5, i8** %10, align 8, !dbg !8302
  br label %if.end6, !dbg !8303

if.end6:                                          ; preds = %if.then4, %if.end
  %11 = load i8*, i8** %allocation, align 8, !dbg !8304
  %12 = load i8**, i8*** %memory.addr, align 8, !dbg !8305
  store i8* %11, i8** %12, align 8, !dbg !8306
  br label %return, !dbg !8307

return:                                           ; preds = %if.end6, %if.then
  ret void, !dbg !8307
}

; Function Attrs: nounwind
declare dso_local i8* @realloc(i8*, i64) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @RecolorImage(%struct._Image* %image, i64 %order, double* %color_matrix, %struct._ExceptionInfo* %exception) #0 !dbg !8308 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %order.addr = alloca i64, align 8
  %color_matrix.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %kernel_info = alloca %struct.KernelInfo*, align 8
  %recolor_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8312, metadata !DIExpression()), !dbg !8313
  store i64 %order, i64* %order.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %order.addr, metadata !8314, metadata !DIExpression()), !dbg !8315
  store double* %color_matrix, double** %color_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata double** %color_matrix.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  call void @llvm.dbg.declare(metadata %struct.KernelInfo** %kernel_info, metadata !8320, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.declare(metadata %struct._Image** %recolor_image, metadata !8322, metadata !DIExpression()), !dbg !8323
  %call = call %struct.KernelInfo* @AcquireKernelInfo(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40, i64 0, i64 0)), !dbg !8324
  store %struct.KernelInfo* %call, %struct.KernelInfo** %kernel_info, align 8, !dbg !8325
  %0 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8326
  %cmp = icmp eq %struct.KernelInfo* %0, null, !dbg !8328
  br i1 %cmp, label %if.then, label %if.end, !dbg !8329

if.then:                                          ; preds = %entry
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8330
  br label %return, !dbg !8330

if.end:                                           ; preds = %entry
  %1 = load i64, i64* %order.addr, align 8, !dbg !8331
  %2 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8332
  %width = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %2, i32 0, i32 1, !dbg !8333
  store i64 %1, i64* %width, align 8, !dbg !8334
  %3 = load i64, i64* %order.addr, align 8, !dbg !8335
  %4 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8336
  %height = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %4, i32 0, i32 2, !dbg !8337
  store i64 %3, i64* %height, align 8, !dbg !8338
  %5 = load double*, double** %color_matrix.addr, align 8, !dbg !8339
  %6 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8340
  %values = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %6, i32 0, i32 5, !dbg !8341
  store double* %5, double** %values, align 8, !dbg !8342
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8343
  %8 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8344
  %9 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8345
  %call1 = call %struct._Image* @ColorMatrixImage(%struct._Image* %7, %struct.KernelInfo* %8, %struct._ExceptionInfo* %9), !dbg !8346
  store %struct._Image* %call1, %struct._Image** %recolor_image, align 8, !dbg !8347
  %10 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8348
  %values2 = getelementptr inbounds %struct.KernelInfo, %struct.KernelInfo* %10, i32 0, i32 5, !dbg !8349
  store double* null, double** %values2, align 8, !dbg !8350
  %11 = load %struct.KernelInfo*, %struct.KernelInfo** %kernel_info, align 8, !dbg !8351
  %call3 = call %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo* %11), !dbg !8352
  store %struct.KernelInfo* %call3, %struct.KernelInfo** %kernel_info, align 8, !dbg !8353
  %12 = load %struct._Image*, %struct._Image** %recolor_image, align 8, !dbg !8354
  store %struct._Image* %12, %struct._Image** %retval, align 8, !dbg !8355
  br label %return, !dbg !8355

return:                                           ; preds = %if.end, %if.then
  %13 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8356
  ret %struct._Image* %13, !dbg !8356
}

declare dso_local %struct.KernelInfo* @AcquireKernelInfo(i8*) #2

declare dso_local %struct._Image* @ColorMatrixImage(%struct._Image*, %struct.KernelInfo*, %struct._ExceptionInfo*) #2

declare dso_local %struct.KernelInfo* @DestroyKernelInfo(%struct.KernelInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ReduceNoiseImage(%struct._Image* %image, double %radius, %struct._ExceptionInfo* %exception) #0 !dbg !8357 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %radius.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %reduce_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8358, metadata !DIExpression()), !dbg !8359
  store double %radius, double* %radius.addr, align 8
  call void @llvm.dbg.declare(metadata double* %radius.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  call void @llvm.dbg.declare(metadata %struct._Image** %reduce_image, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8366
  %1 = load double, double* %radius.addr, align 8, !dbg !8367
  %conv = fptoui double %1 to i64, !dbg !8368
  %2 = load double, double* %radius.addr, align 8, !dbg !8369
  %conv1 = fptoui double %2 to i64, !dbg !8370
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8371
  %call = call %struct._Image* @StatisticImage(%struct._Image* %0, i32 7, i64 %conv, i64 %conv1, %struct._ExceptionInfo* %3), !dbg !8372
  store %struct._Image* %call, %struct._Image** %reduce_image, align 8, !dbg !8373
  %4 = load %struct._Image*, %struct._Image** %reduce_image, align 8, !dbg !8374
  ret %struct._Image* %4, !dbg !8375
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @RelinquishSemaphoreInfo(%struct.SemaphoreInfo* %semaphore_info) #0 !dbg !8376 {
entry:
  %semaphore_info.addr = alloca %struct.SemaphoreInfo*, align 8
  store %struct.SemaphoreInfo* %semaphore_info, %struct.SemaphoreInfo** %semaphore_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SemaphoreInfo** %semaphore_info.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load %struct.SemaphoreInfo*, %struct.SemaphoreInfo** %semaphore_info.addr, align 8, !dbg !8381
  call void @UnlockSemaphoreInfo(%struct.SemaphoreInfo* %0), !dbg !8382
  ret void, !dbg !8383
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @ResetImageAttributeIterator(%struct._Image* %image) #0 !dbg !8384 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8387, metadata !DIExpression()), !dbg !8388
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8389
  call void @ResetImagePropertyIterator(%struct._Image* %0), !dbg !8390
  ret void, !dbg !8391
}

declare dso_local void @ResetImagePropertyIterator(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @SetCacheViewPixels(%struct._CacheView* %cache_view, i64 %x, i64 %y, i64 %columns, i64 %rows) #0 !dbg !8392 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %pixels = alloca %struct._PixelPacket*, align 8
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !8393, metadata !DIExpression()), !dbg !8394
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !8395, metadata !DIExpression()), !dbg !8396
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !8397, metadata !DIExpression()), !dbg !8398
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !8399, metadata !DIExpression()), !dbg !8400
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !8401, metadata !DIExpression()), !dbg !8402
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixels, metadata !8403, metadata !DIExpression()), !dbg !8404
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8405
  %1 = load i64, i64* %x.addr, align 8, !dbg !8406
  %2 = load i64, i64* %y.addr, align 8, !dbg !8407
  %3 = load i64, i64* %columns.addr, align 8, !dbg !8408
  %4 = load i64, i64* %rows.addr, align 8, !dbg !8409
  %5 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8410
  %call = call %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView* %5), !dbg !8411
  %call1 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %call), !dbg !8412
  store %struct._PixelPacket* %call1, %struct._PixelPacket** %pixels, align 8, !dbg !8413
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %pixels, align 8, !dbg !8414
  ret %struct._PixelPacket* %6, !dbg !8415
}

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @SetCacheThreshold(i64 %size) #0 !dbg !8416 {
entry:
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8419, metadata !DIExpression()), !dbg !8420
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6316, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0)), !dbg !8421
  %0 = load i64, i64* %size.addr, align 8, !dbg !8422
  %mul = mul i64 %0, 1024, !dbg !8423
  %mul1 = mul i64 %mul, 1024, !dbg !8424
  %call2 = call i32 @SetMagickResourceLimit(i32 5, i64 %mul1), !dbg !8425
  %1 = load i64, i64* %size.addr, align 8, !dbg !8426
  %mul3 = mul i64 2, %1, !dbg !8427
  %mul4 = mul i64 %mul3, 1024, !dbg !8428
  %mul5 = mul i64 %mul4, 1024, !dbg !8429
  %call6 = call i32 @SetMagickResourceLimit(i32 4, i64 %mul5), !dbg !8430
  ret void, !dbg !8431
}

declare dso_local i32 @SetMagickResourceLimit(i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SetExceptionInfo(%struct._ExceptionInfo* %exception, i32 %severity) #0 !dbg !8432 {
entry:
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %severity.addr = alloca i32, align 4
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  store i32 %severity, i32* %severity.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %severity.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8439
  call void @ClearMagickException(%struct._ExceptionInfo* %0), !dbg !8440
  %1 = load i32, i32* %severity.addr, align 4, !dbg !8441
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8442
  %severity1 = getelementptr inbounds %struct._ExceptionInfo, %struct._ExceptionInfo* %2, i32 0, i32 0, !dbg !8443
  store i32 %1, i32* %severity1, align 8, !dbg !8444
  ret i32 1, !dbg !8445
}

declare dso_local void @ClearMagickException(%struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @SetImage(%struct._Image* %image, i16 zeroext %opacity) #0 !dbg !8446 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca i16, align 2
  %background_color = alloca %struct._PixelPacket, align 2
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x66 = alloca i64, align 8
  %q67 = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8449, metadata !DIExpression()), !dbg !8450
  store i16 %opacity, i16* %opacity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opacity.addr, metadata !8451, metadata !DIExpression()), !dbg !8452
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %background_color, metadata !8453, metadata !DIExpression()), !dbg !8454
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8455, metadata !DIExpression()), !dbg !8456
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6390, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.41, i64 0, i64 0)), !dbg !8457
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8458
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8460
  %1 = load i32, i32* %debug, align 8, !dbg !8460
  %cmp = icmp ne i32 %1, 0, !dbg !8461
  br i1 %cmp, label %if.then, label %if.end, !dbg !8462

if.then:                                          ; preds = %entry
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6393, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)), !dbg !8463
  br label %if.end, !dbg !8464

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8465
  %background_color2 = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 12, !dbg !8466
  %3 = bitcast %struct._PixelPacket* %background_color to i8*, !dbg !8466
  %4 = bitcast %struct._PixelPacket* %background_color2 to i8*, !dbg !8466
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %3, i8* align 8 %4, i64 8, i1 false), !dbg !8466
  %5 = load i16, i16* %opacity.addr, align 2, !dbg !8467
  %conv = zext i16 %5 to i32, !dbg !8467
  %cmp3 = icmp ne i32 %conv, 0, !dbg !8469
  br i1 %cmp3, label %if.then5, label %if.end7, !dbg !8470

if.then5:                                         ; preds = %if.end
  %6 = load i16, i16* %opacity.addr, align 2, !dbg !8471
  %opacity6 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !8472
  store i16 %6, i16* %opacity6, align 2, !dbg !8473
  br label %if.end7, !dbg !8474

if.end7:                                          ; preds = %if.then5, %if.end
  %opacity8 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !8475
  %7 = load i16, i16* %opacity8, align 2, !dbg !8475
  %conv9 = zext i16 %7 to i32, !dbg !8477
  %cmp10 = icmp ne i32 %conv9, 0, !dbg !8478
  br i1 %cmp10, label %if.then12, label %if.end14, !dbg !8479

if.then12:                                        ; preds = %if.end7
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8480
  %call13 = call i32 @SetImageStorageClass(%struct._Image* %8, i32 1), !dbg !8482
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8483
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 6, !dbg !8484
  store i32 1, i32* %matte, align 8, !dbg !8485
  br label %if.end14, !dbg !8486

if.end14:                                         ; preds = %if.then12, %if.end7
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8487
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 0, !dbg !8489
  %11 = load i32, i32* %storage_class, align 8, !dbg !8489
  %cmp15 = icmp eq i32 %11, 2, !dbg !8490
  br i1 %cmp15, label %if.then19, label %lor.lhs.false, !dbg !8491

lor.lhs.false:                                    ; preds = %if.end14
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8492
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !8493
  %13 = load i32, i32* %colorspace, align 4, !dbg !8493
  %cmp17 = icmp eq i32 %13, 12, !dbg !8494
  br i1 %cmp17, label %if.then19, label %if.end60, !dbg !8495

if.then19:                                        ; preds = %lor.lhs.false, %if.end14
  store i64 0, i64* %y, align 8, !dbg !8496
  br label %for.cond, !dbg !8499

for.cond:                                         ; preds = %for.inc57, %if.then19
  %14 = load i64, i64* %y, align 8, !dbg !8500
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8502
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !8503
  %16 = load i64, i64* %rows, align 8, !dbg !8503
  %cmp20 = icmp slt i64 %14, %16, !dbg !8504
  br i1 %cmp20, label %for.body, label %for.end59, !dbg !8505

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !8506, metadata !DIExpression()), !dbg !8508
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8509, metadata !DIExpression()), !dbg !8510
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !8511, metadata !DIExpression()), !dbg !8512
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8513
  %18 = load i64, i64* %y, align 8, !dbg !8514
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8515
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !8516
  %20 = load i64, i64* %columns, align 8, !dbg !8516
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8517
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !8518
  %call22 = call %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image* %17, i64 0, i64 %18, i64 %20, i64 1, %struct._ExceptionInfo* %exception), !dbg !8519
  store %struct._PixelPacket* %call22, %struct._PixelPacket** %q, align 8, !dbg !8520
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8521
  %cmp23 = icmp eq %struct._PixelPacket* %22, null, !dbg !8523
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !8524

if.then25:                                        ; preds = %for.body
  br label %for.end59, !dbg !8525

if.end26:                                         ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !8526
  br label %for.cond27, !dbg !8528

for.cond27:                                       ; preds = %for.inc, %if.end26
  %23 = load i64, i64* %x, align 8, !dbg !8529
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8531
  %columns28 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 7, !dbg !8532
  %25 = load i64, i64* %columns28, align 8, !dbg !8532
  %cmp29 = icmp slt i64 %23, %25, !dbg !8533
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !8534

for.body31:                                       ; preds = %for.cond27
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 2, !dbg !8535
  %26 = load i16, i16* %red, align 2, !dbg !8535
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8535
  %red32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !8535
  store i16 %26, i16* %red32, align 2, !dbg !8535
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 1, !dbg !8535
  %28 = load i16, i16* %green, align 2, !dbg !8535
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8535
  %green33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 1, !dbg !8535
  store i16 %28, i16* %green33, align 2, !dbg !8535
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 0, !dbg !8535
  %30 = load i16, i16* %blue, align 2, !dbg !8535
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8535
  %blue34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 0, !dbg !8535
  store i16 %30, i16* %blue34, align 2, !dbg !8535
  %opacity35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !8535
  %32 = load i16, i16* %opacity35, align 2, !dbg !8535
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8535
  %opacity36 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 3, !dbg !8535
  store i16 %32, i16* %opacity36, align 2, !dbg !8535
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !8538
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 1, !dbg !8538
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !8538
  br label %for.inc, !dbg !8539

for.inc:                                          ; preds = %for.body31
  %35 = load i64, i64* %x, align 8, !dbg !8540
  %inc = add nsw i64 %35, 1, !dbg !8540
  store i64 %inc, i64* %x, align 8, !dbg !8540
  br label %for.cond27, !dbg !8541, !llvm.loop !8542

for.end:                                          ; preds = %for.cond27
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8544
  %call37 = call i16* @GetAuthenticIndexQueue(%struct._Image* %36), !dbg !8545
  store i16* %call37, i16** %indexes, align 8, !dbg !8546
  store i64 0, i64* %x, align 8, !dbg !8547
  br label %for.cond38, !dbg !8549

for.cond38:                                       ; preds = %for.inc48, %for.end
  %37 = load i64, i64* %x, align 8, !dbg !8550
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8552
  %columns39 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !8553
  %39 = load i64, i64* %columns39, align 8, !dbg !8553
  %cmp40 = icmp slt i64 %37, %39, !dbg !8554
  br i1 %cmp40, label %for.body42, label %for.end50, !dbg !8555

for.body42:                                       ; preds = %for.cond38
  %40 = load i16*, i16** %indexes, align 8, !dbg !8556
  %41 = load i64, i64* %x, align 8, !dbg !8556
  %add.ptr = getelementptr inbounds i16, i16* %40, i64 %41, !dbg !8556
  %cmp43 = icmp ne i16* %add.ptr, null, !dbg !8556
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !8559

if.then45:                                        ; preds = %for.body42
  %42 = load i16*, i16** %indexes, align 8, !dbg !8556
  %43 = load i64, i64* %x, align 8, !dbg !8556
  %add.ptr46 = getelementptr inbounds i16, i16* %42, i64 %43, !dbg !8556
  store i16 0, i16* %add.ptr46, align 2, !dbg !8556
  br label %if.end47, !dbg !8556

if.end47:                                         ; preds = %if.then45, %for.body42
  br label %for.inc48, !dbg !8559

for.inc48:                                        ; preds = %if.end47
  %44 = load i64, i64* %x, align 8, !dbg !8560
  %inc49 = add nsw i64 %44, 1, !dbg !8560
  store i64 %inc49, i64* %x, align 8, !dbg !8560
  br label %for.cond38, !dbg !8561, !llvm.loop !8562

for.end50:                                        ; preds = %for.cond38
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8564
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8566
  %exception51 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 58, !dbg !8567
  %call52 = call i32 @SyncAuthenticPixels(%struct._Image* %45, %struct._ExceptionInfo* %exception51), !dbg !8568
  %cmp53 = icmp eq i32 %call52, 0, !dbg !8569
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !8570

if.then55:                                        ; preds = %for.end50
  br label %for.end59, !dbg !8571

if.end56:                                         ; preds = %for.end50
  br label %for.inc57, !dbg !8572

for.inc57:                                        ; preds = %if.end56
  %47 = load i64, i64* %y, align 8, !dbg !8573
  %inc58 = add nsw i64 %47, 1, !dbg !8573
  store i64 %inc58, i64* %y, align 8, !dbg !8573
  br label %for.cond, !dbg !8574, !llvm.loop !8575

for.end59:                                        ; preds = %if.then55, %if.then25, %for.cond
  br label %for.end100, !dbg !8577

if.end60:                                         ; preds = %lor.lhs.false
  store i64 0, i64* %y, align 8, !dbg !8578
  br label %for.cond61, !dbg !8580

for.cond61:                                       ; preds = %for.inc98, %if.end60
  %48 = load i64, i64* %y, align 8, !dbg !8581
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8583
  %rows62 = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 8, !dbg !8584
  %50 = load i64, i64* %rows62, align 8, !dbg !8584
  %cmp63 = icmp slt i64 %48, %50, !dbg !8585
  br i1 %cmp63, label %for.body65, label %for.end100, !dbg !8586

for.body65:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata i64* %x66, metadata !8587, metadata !DIExpression()), !dbg !8589
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q67, metadata !8590, metadata !DIExpression()), !dbg !8591
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8592
  %52 = load i64, i64* %y, align 8, !dbg !8593
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8594
  %columns68 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 7, !dbg !8595
  %54 = load i64, i64* %columns68, align 8, !dbg !8595
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8596
  %exception69 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 58, !dbg !8597
  %call70 = call %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image* %51, i64 0, i64 %52, i64 %54, i64 1, %struct._ExceptionInfo* %exception69), !dbg !8598
  store %struct._PixelPacket* %call70, %struct._PixelPacket** %q67, align 8, !dbg !8599
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8600
  %cmp71 = icmp eq %struct._PixelPacket* %56, null, !dbg !8602
  br i1 %cmp71, label %if.then73, label %if.end74, !dbg !8603

if.then73:                                        ; preds = %for.body65
  br label %for.end100, !dbg !8604

if.end74:                                         ; preds = %for.body65
  store i64 0, i64* %x66, align 8, !dbg !8605
  br label %for.cond75, !dbg !8607

for.cond75:                                       ; preds = %for.inc89, %if.end74
  %57 = load i64, i64* %x66, align 8, !dbg !8608
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8610
  %columns76 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !8611
  %59 = load i64, i64* %columns76, align 8, !dbg !8611
  %cmp77 = icmp slt i64 %57, %59, !dbg !8612
  br i1 %cmp77, label %for.body79, label %for.end91, !dbg !8613

for.body79:                                       ; preds = %for.cond75
  %red80 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 2, !dbg !8614
  %60 = load i16, i16* %red80, align 2, !dbg !8614
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8614
  %red81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %61, i32 0, i32 2, !dbg !8614
  store i16 %60, i16* %red81, align 2, !dbg !8614
  %green82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 1, !dbg !8614
  %62 = load i16, i16* %green82, align 2, !dbg !8614
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8614
  %green83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 1, !dbg !8614
  store i16 %62, i16* %green83, align 2, !dbg !8614
  %blue84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 0, !dbg !8614
  %64 = load i16, i16* %blue84, align 2, !dbg !8614
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8614
  %blue85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 0, !dbg !8614
  store i16 %64, i16* %blue85, align 2, !dbg !8614
  %opacity86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color, i32 0, i32 3, !dbg !8614
  %66 = load i16, i16* %opacity86, align 2, !dbg !8614
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8614
  %opacity87 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !8614
  store i16 %66, i16* %opacity87, align 2, !dbg !8614
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %q67, align 8, !dbg !8617
  %incdec.ptr88 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 1, !dbg !8617
  store %struct._PixelPacket* %incdec.ptr88, %struct._PixelPacket** %q67, align 8, !dbg !8617
  br label %for.inc89, !dbg !8618

for.inc89:                                        ; preds = %for.body79
  %69 = load i64, i64* %x66, align 8, !dbg !8619
  %inc90 = add nsw i64 %69, 1, !dbg !8619
  store i64 %inc90, i64* %x66, align 8, !dbg !8619
  br label %for.cond75, !dbg !8620, !llvm.loop !8621

for.end91:                                        ; preds = %for.cond75
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8623
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8625
  %exception92 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 58, !dbg !8626
  %call93 = call i32 @SyncAuthenticPixels(%struct._Image* %70, %struct._ExceptionInfo* %exception92), !dbg !8627
  %cmp94 = icmp eq i32 %call93, 0, !dbg !8628
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !8629

if.then96:                                        ; preds = %for.end91
  br label %for.end100, !dbg !8630

if.end97:                                         ; preds = %for.end91
  br label %for.inc98, !dbg !8631

for.inc98:                                        ; preds = %if.end97
  %72 = load i64, i64* %y, align 8, !dbg !8632
  %inc99 = add nsw i64 %72, 1, !dbg !8632
  store i64 %inc99, i64* %y, align 8, !dbg !8632
  br label %for.cond61, !dbg !8633, !llvm.loop !8634

for.end100:                                       ; preds = %for.end59, %if.then96, %if.then73, %for.cond61
  ret void, !dbg !8636
}

declare dso_local %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SetImageAttribute(%struct._Image* %image, i8* %key, i8* %value) #0 !dbg !8637 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %key.addr = alloca i8*, align 8
  %value.addr = alloca i8*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8640, metadata !DIExpression()), !dbg !8641
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !8642, metadata !DIExpression()), !dbg !8643
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !8644, metadata !DIExpression()), !dbg !8645
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6496, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.20, i64 0, i64 0)), !dbg !8646
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8647
  %1 = load i8*, i8** %key.addr, align 8, !dbg !8648
  %2 = load i8*, i8** %value.addr, align 8, !dbg !8649
  %call1 = call i32 @SetImageProperty(%struct._Image* %0, i8* %1, i8* %2), !dbg !8650
  ret i32 %call1, !dbg !8651
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SetImageList(%struct._Image** %images, %struct._Image* %image, i64 %offset, %struct._ExceptionInfo* %exception) #0 !dbg !8652 {
entry:
  %retval = alloca i32, align 4
  %images.addr = alloca %struct._Image**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %offset.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %clone = alloca %struct._Image*, align 8
  %i = alloca i64, align 8
  store %struct._Image** %images, %struct._Image*** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %images.addr, metadata !8655, metadata !DIExpression()), !dbg !8656
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8657, metadata !DIExpression()), !dbg !8658
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8659, metadata !DIExpression()), !dbg !8660
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  call void @llvm.dbg.declare(metadata %struct._Image** %clone, metadata !8663, metadata !DIExpression()), !dbg !8664
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8665, metadata !DIExpression()), !dbg !8666
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6538, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !8667
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8668
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8669
  %call1 = call %struct._Image* @CloneImageList(%struct._Image* %0, %struct._ExceptionInfo* %1), !dbg !8670
  store %struct._Image* %call1, %struct._Image** %clone, align 8, !dbg !8671
  br label %while.cond, !dbg !8672

while.cond:                                       ; preds = %while.body, %entry
  %2 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8673
  %3 = load %struct._Image*, %struct._Image** %2, align 8, !dbg !8674
  %call2 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %3), !dbg !8675
  %cmp = icmp ne %struct._Image* %call2, null, !dbg !8676
  br i1 %cmp, label %while.body, label %while.end, !dbg !8672

while.body:                                       ; preds = %while.cond
  %4 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8677
  %5 = load %struct._Image*, %struct._Image** %4, align 8, !dbg !8678
  %call3 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %5), !dbg !8679
  %6 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8680
  store %struct._Image* %call3, %struct._Image** %6, align 8, !dbg !8681
  br label %while.cond, !dbg !8672, !llvm.loop !8682

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %i, align 8, !dbg !8684
  br label %for.cond, !dbg !8686

for.cond:                                         ; preds = %for.inc, %while.end
  %7 = load i64, i64* %i, align 8, !dbg !8687
  %8 = load i64, i64* %offset.addr, align 8, !dbg !8689
  %cmp4 = icmp slt i64 %7, %8, !dbg !8690
  br i1 %cmp4, label %for.body, label %for.end, !dbg !8691

for.body:                                         ; preds = %for.cond
  %9 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8692
  %10 = load %struct._Image*, %struct._Image** %9, align 8, !dbg !8695
  %call5 = call %struct._Image* @GetNextImageInList(%struct._Image* %10), !dbg !8696
  %cmp6 = icmp eq %struct._Image* %call5, null, !dbg !8697
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8698

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !8699
  br label %return, !dbg !8699

if.end:                                           ; preds = %for.body
  %11 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8700
  %12 = load %struct._Image*, %struct._Image** %11, align 8, !dbg !8701
  %call7 = call %struct._Image* @GetNextImageInList(%struct._Image* %12), !dbg !8702
  %13 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8703
  store %struct._Image* %call7, %struct._Image** %13, align 8, !dbg !8704
  br label %for.inc, !dbg !8705

for.inc:                                          ; preds = %if.end
  %14 = load i64, i64* %i, align 8, !dbg !8706
  %inc = add nsw i64 %14, 1, !dbg !8706
  store i64 %inc, i64* %i, align 8, !dbg !8706
  br label %for.cond, !dbg !8707, !llvm.loop !8708

for.end:                                          ; preds = %for.cond
  %15 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8710
  %16 = load %struct._Image*, %struct._Image** %clone, align 8, !dbg !8711
  call void @InsertImageInList(%struct._Image** %15, %struct._Image* %16), !dbg !8712
  store i32 1, i32* %retval, align 4, !dbg !8713
  br label %return, !dbg !8713

return:                                           ; preds = %for.end, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !8714
  ret i32 %17, !dbg !8714
}

declare dso_local void @InsertImageInList(%struct._Image**, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._PixelPacket* @SetImagePixels(%struct._Image* %image, i64 %x, i64 %y, i64 %columns, i64 %rows) #0 !dbg !8715 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8716, metadata !DIExpression()), !dbg !8717
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !8718, metadata !DIExpression()), !dbg !8719
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !8720, metadata !DIExpression()), !dbg !8721
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !8722, metadata !DIExpression()), !dbg !8723
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !8724, metadata !DIExpression()), !dbg !8725
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8726
  %1 = load i64, i64* %x.addr, align 8, !dbg !8727
  %2 = load i64, i64* %y.addr, align 8, !dbg !8728
  %3 = load i64, i64* %columns.addr, align 8, !dbg !8729
  %4 = load i64, i64* %rows.addr, align 8, !dbg !8730
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8731
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !8732
  %call = call %struct._PixelPacket* @QueueAuthenticPixels(%struct._Image* %0, i64 %1, i64 %2, i64 %3, i64 %4, %struct._ExceptionInfo* %exception), !dbg !8733
  ret %struct._PixelPacket* %call, !dbg !8734
}

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @SetMagickRegistry(i32 %type, i8* %blob, i64 %length, %struct._ExceptionInfo* %exception) #0 !dbg !1278 {
entry:
  %retval = alloca i64, align 8
  %type.addr = alloca i32, align 4
  %blob.addr = alloca i8*, align 8
  %length.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %key = alloca [4096 x i8], align 16
  %status = alloca i32, align 4
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8735, metadata !DIExpression()), !dbg !8736
  store i8* %blob, i8** %blob.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %blob.addr, metadata !8737, metadata !DIExpression()), !dbg !8738
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8739, metadata !DIExpression()), !dbg !8740
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata [4096 x i8]* %key, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8745, metadata !DIExpression()), !dbg !8746
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !8747
  %0 = load i64, i64* @SetMagickRegistry.id, align 8, !dbg !8748
  %conv = sitofp i64 %0 to double, !dbg !8749
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), double %conv), !dbg !8750
  %1 = load i32, i32* %type.addr, align 4, !dbg !8751
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %key, i64 0, i64 0, !dbg !8752
  %2 = load i8*, i8** %blob.addr, align 8, !dbg !8753
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8754
  %call2 = call i32 @SetImageRegistry(i32 %1, i8* %arraydecay1, i8* %2, %struct._ExceptionInfo* %3), !dbg !8755
  store i32 %call2, i32* %status, align 4, !dbg !8756
  %4 = load i32, i32* %status, align 4, !dbg !8757
  %cmp = icmp eq i32 %4, 0, !dbg !8759
  br i1 %cmp, label %if.then, label %if.end, !dbg !8760

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !8761
  br label %return, !dbg !8761

if.end:                                           ; preds = %entry
  %5 = load i64, i64* @SetMagickRegistry.id, align 8, !dbg !8762
  %inc = add nsw i64 %5, 1, !dbg !8762
  store i64 %inc, i64* @SetMagickRegistry.id, align 8, !dbg !8762
  store i64 %5, i64* %retval, align 8, !dbg !8763
  br label %return, !dbg !8763

return:                                           ; preds = %if.end, %if.then
  %6 = load i64, i64* %retval, align 8, !dbg !8764
  ret i64 %6, !dbg !8764
}

declare dso_local i32 @SetImageRegistry(i32, i8*, i8*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 (i8*, i64, i64, %struct._ExceptionInfo*)* @GetMonitorHandler() #0 !dbg !8765 {
entry:
  %0 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** @monitor_handler, align 8, !dbg !8768
  ret i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %0, !dbg !8769
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 (i8*, i64, i64, %struct._ExceptionInfo*)* @SetMonitorHandler(i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %handler) #0 !dbg !8770 {
entry:
  %handler.addr = alloca i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, align 8
  %previous_handler = alloca i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, align 8
  store i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %handler, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %handler.addr, metadata !8773, metadata !DIExpression()), !dbg !8774
  call void @llvm.dbg.declare(metadata i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %previous_handler, metadata !8775, metadata !DIExpression()), !dbg !8776
  %0 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** @monitor_handler, align 8, !dbg !8777
  store i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %0, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %previous_handler, align 8, !dbg !8778
  %1 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %handler.addr, align 8, !dbg !8779
  store i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %1, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** @monitor_handler, align 8, !dbg !8780
  %2 = load i32 (i8*, i64, i64, %struct._ExceptionInfo*)*, i32 (i8*, i64, i64, %struct._ExceptionInfo*)** %previous_handler, align 8, !dbg !8781
  ret i32 (i8*, i64, i64, %struct._ExceptionInfo*)* %2, !dbg !8782
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ShiftImageList(%struct._Image** %images) #0 !dbg !8783 {
entry:
  %images.addr = alloca %struct._Image**, align 8
  store %struct._Image** %images, %struct._Image*** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %images.addr, metadata !8784, metadata !DIExpression()), !dbg !8785
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6737, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !8786
  %0 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !8787
  %call1 = call %struct._Image* @RemoveFirstImageFromList(%struct._Image** %0), !dbg !8788
  ret %struct._Image* %call1, !dbg !8789
}

declare dso_local %struct._Image* @RemoveFirstImageFromList(%struct._Image**) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i64 @SizeBlob(%struct._Image* %image) #0 !dbg !8790 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8793, metadata !DIExpression()), !dbg !8794
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8795
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8797
  %1 = load i32, i32* %debug, align 8, !dbg !8797
  %cmp = icmp ne i32 %1, 0, !dbg !8798
  br i1 %cmp, label %if.then, label %if.end, !dbg !8799

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6773, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0)), !dbg !8800
  br label %if.end, !dbg !8801

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8802
  %call1 = call i64 @GetBlobSize(%struct._Image* %2), !dbg !8803
  ret i64 %call1, !dbg !8804
}

declare dso_local i64 @GetBlobSize(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @SpliceImageList(%struct._Image* %images, i64 %offset, i64 %length, %struct._Image* %splices, %struct._ExceptionInfo* %exception) #0 !dbg !8805 {
entry:
  %retval = alloca %struct._Image*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %offset.addr = alloca i64, align 8
  %length.addr = alloca i64, align 8
  %splices.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %clone = alloca %struct._Image*, align 8
  %i = alloca i64, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !8808, metadata !DIExpression()), !dbg !8809
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8810, metadata !DIExpression()), !dbg !8811
  store i64 %length, i64* %length.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %length.addr, metadata !8812, metadata !DIExpression()), !dbg !8813
  store %struct._Image* %splices, %struct._Image** %splices.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %splices.addr, metadata !8814, metadata !DIExpression()), !dbg !8815
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !8816, metadata !DIExpression()), !dbg !8817
  call void @llvm.dbg.declare(metadata %struct._Image** %clone, metadata !8818, metadata !DIExpression()), !dbg !8819
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8820, metadata !DIExpression()), !dbg !8821
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8822
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8824
  %1 = load i32, i32* %debug, align 8, !dbg !8824
  %cmp = icmp ne i32 %1, 0, !dbg !8825
  br i1 %cmp, label %if.then, label %if.end, !dbg !8826

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6820, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !8827
  br label %if.end, !dbg !8828

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %splices.addr, align 8, !dbg !8829
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !8830
  %call1 = call %struct._Image* @CloneImageList(%struct._Image* %2, %struct._ExceptionInfo* %3), !dbg !8831
  store %struct._Image* %call1, %struct._Image** %clone, align 8, !dbg !8832
  br label %while.cond, !dbg !8833

while.cond:                                       ; preds = %while.body, %if.end
  %4 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8834
  %call2 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %4), !dbg !8835
  %cmp3 = icmp ne %struct._Image* %call2, null, !dbg !8836
  br i1 %cmp3, label %while.body, label %while.end, !dbg !8833

while.body:                                       ; preds = %while.cond
  %5 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8837
  %call4 = call %struct._Image* @GetPreviousImageInList(%struct._Image* %5), !dbg !8838
  store %struct._Image* %call4, %struct._Image** %images.addr, align 8, !dbg !8839
  br label %while.cond, !dbg !8833, !llvm.loop !8840

while.end:                                        ; preds = %while.cond
  store i64 0, i64* %i, align 8, !dbg !8842
  br label %for.cond, !dbg !8844

for.cond:                                         ; preds = %for.inc, %while.end
  %6 = load i64, i64* %i, align 8, !dbg !8845
  %7 = load i64, i64* %offset.addr, align 8, !dbg !8847
  %cmp5 = icmp slt i64 %6, %7, !dbg !8848
  br i1 %cmp5, label %for.body, label %for.end, !dbg !8849

for.body:                                         ; preds = %for.cond
  %8 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8850
  %call6 = call %struct._Image* @GetNextImageInList(%struct._Image* %8), !dbg !8853
  %cmp7 = icmp eq %struct._Image* %call6, null, !dbg !8854
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8855

if.then8:                                         ; preds = %for.body
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !8856
  br label %return, !dbg !8856

if.end9:                                          ; preds = %for.body
  %9 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8857
  %call10 = call %struct._Image* @GetNextImageInList(%struct._Image* %9), !dbg !8858
  store %struct._Image* %call10, %struct._Image** %images.addr, align 8, !dbg !8859
  br label %for.inc, !dbg !8860

for.inc:                                          ; preds = %if.end9
  %10 = load i64, i64* %i, align 8, !dbg !8861
  %inc = add nsw i64 %10, 1, !dbg !8861
  store i64 %inc, i64* %i, align 8, !dbg !8861
  br label %for.cond, !dbg !8862, !llvm.loop !8863

for.end:                                          ; preds = %for.cond
  %11 = load i64, i64* %length.addr, align 8, !dbg !8865
  %12 = load %struct._Image*, %struct._Image** %clone, align 8, !dbg !8866
  %call11 = call %struct._Image* @SpliceImageIntoList(%struct._Image** %images.addr, i64 %11, %struct._Image* %12), !dbg !8867
  %13 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !8868
  store %struct._Image* %13, %struct._Image** %retval, align 8, !dbg !8869
  br label %return, !dbg !8869

return:                                           ; preds = %for.end, %if.then8
  %14 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !8870
  ret %struct._Image* %14, !dbg !8870
}

declare dso_local %struct._Image* @SpliceImageIntoList(%struct._Image**, i64, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @sRGBCompandor(float %pixel) #0 !dbg !8871 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca float, align 4
  store float %pixel, float* %pixel.addr, align 4
  call void @llvm.dbg.declare(metadata float* %pixel.addr, metadata !8872, metadata !DIExpression()), !dbg !8873
  %0 = load float, float* %pixel.addr, align 4, !dbg !8874
  %conv = fpext float %0 to double, !dbg !8874
  %cmp = fcmp ole double %conv, 0x4069A5632CEAE209, !dbg !8876
  br i1 %cmp, label %if.then, label %if.end, !dbg !8877

if.then:                                          ; preds = %entry
  %1 = load float, float* %pixel.addr, align 4, !dbg !8878
  %conv2 = fpext float %1 to double, !dbg !8878
  %mul = fmul double 1.292000e+01, %conv2, !dbg !8879
  %conv3 = fptrunc double %mul to float, !dbg !8880
  store float %conv3, float* %retval, align 4, !dbg !8881
  br label %return, !dbg !8881

if.end:                                           ; preds = %entry
  %2 = load float, float* %pixel.addr, align 4, !dbg !8882
  %conv4 = fpext float %2 to double, !dbg !8882
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !8883
  %call = call double @pow(double %mul5, double 0x3FDAAAAAAAAAAAAB) #8, !dbg !8884
  %mul6 = fmul double 1.055000e+00, %call, !dbg !8885
  %sub = fsub double %mul6, 5.500000e-02, !dbg !8886
  %mul7 = fmul double 6.553500e+04, %sub, !dbg !8887
  %conv8 = fptrunc double %mul7 to float, !dbg !8888
  store float %conv8, float* %retval, align 4, !dbg !8889
  br label %return, !dbg !8889

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !8890
  ret float %3, !dbg !8890
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @Strip(i8* %message) #0 !dbg !8891 {
entry:
  %message.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %q = alloca i8*, align 8
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !8894, metadata !DIExpression()), !dbg !8895
  call void @llvm.dbg.declare(metadata i8** %p, metadata !8896, metadata !DIExpression()), !dbg !8897
  call void @llvm.dbg.declare(metadata i8** %q, metadata !8898, metadata !DIExpression()), !dbg !8899
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 6893, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !8900
  %0 = load i8*, i8** %message.addr, align 8, !dbg !8901
  %1 = load i8, i8* %0, align 1, !dbg !8903
  %conv = sext i8 %1 to i32, !dbg !8903
  %cmp = icmp eq i32 %conv, 0, !dbg !8904
  br i1 %cmp, label %if.then, label %if.end, !dbg !8905

if.then:                                          ; preds = %entry
  br label %return, !dbg !8906

if.end:                                           ; preds = %entry
  %2 = load i8*, i8** %message.addr, align 8, !dbg !8907
  %call2 = call i64 @strlen(i8* %2) #11, !dbg !8909
  %cmp3 = icmp eq i64 %call2, 1, !dbg !8910
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !8911

if.then5:                                         ; preds = %if.end
  br label %return, !dbg !8912

if.end6:                                          ; preds = %if.end
  %3 = load i8*, i8** %message.addr, align 8, !dbg !8913
  store i8* %3, i8** %p, align 8, !dbg !8914
  br label %while.cond, !dbg !8915

while.cond:                                       ; preds = %while.body, %if.end6
  %call7 = call i16** @__ctype_b_loc() #13, !dbg !8916
  %4 = load i16*, i16** %call7, align 8, !dbg !8916
  %5 = load i8*, i8** %p, align 8, !dbg !8916
  %6 = load i8, i8* %5, align 1, !dbg !8916
  %conv8 = zext i8 %6 to i32, !dbg !8916
  %idxprom = sext i32 %conv8 to i64, !dbg !8916
  %arrayidx = getelementptr inbounds i16, i16* %4, i64 %idxprom, !dbg !8916
  %7 = load i16, i16* %arrayidx, align 2, !dbg !8916
  %conv9 = zext i16 %7 to i32, !dbg !8916
  %and = and i32 %conv9, 8192, !dbg !8916
  %cmp10 = icmp ne i32 %and, 0, !dbg !8917
  br i1 %cmp10, label %while.body, label %while.end, !dbg !8915

while.body:                                       ; preds = %while.cond
  %8 = load i8*, i8** %p, align 8, !dbg !8918
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !8918
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8918
  br label %while.cond, !dbg !8915, !llvm.loop !8919

while.end:                                        ; preds = %while.cond
  %9 = load i8*, i8** %p, align 8, !dbg !8920
  %10 = load i8, i8* %9, align 1, !dbg !8922
  %conv12 = sext i8 %10 to i32, !dbg !8922
  %cmp13 = icmp eq i32 %conv12, 39, !dbg !8923
  br i1 %cmp13, label %if.then18, label %lor.lhs.false, !dbg !8924

lor.lhs.false:                                    ; preds = %while.end
  %11 = load i8*, i8** %p, align 8, !dbg !8925
  %12 = load i8, i8* %11, align 1, !dbg !8926
  %conv15 = sext i8 %12 to i32, !dbg !8926
  %cmp16 = icmp eq i32 %conv15, 34, !dbg !8927
  br i1 %cmp16, label %if.then18, label %if.end20, !dbg !8928

if.then18:                                        ; preds = %lor.lhs.false, %while.end
  %13 = load i8*, i8** %p, align 8, !dbg !8929
  %incdec.ptr19 = getelementptr inbounds i8, i8* %13, i32 1, !dbg !8929
  store i8* %incdec.ptr19, i8** %p, align 8, !dbg !8929
  br label %if.end20, !dbg !8930

if.end20:                                         ; preds = %if.then18, %lor.lhs.false
  %14 = load i8*, i8** %message.addr, align 8, !dbg !8931
  %15 = load i8*, i8** %message.addr, align 8, !dbg !8932
  %call21 = call i64 @strlen(i8* %15) #11, !dbg !8933
  %add.ptr = getelementptr inbounds i8, i8* %14, i64 %call21, !dbg !8934
  %add.ptr22 = getelementptr inbounds i8, i8* %add.ptr, i64 -1, !dbg !8935
  store i8* %add.ptr22, i8** %q, align 8, !dbg !8936
  br label %while.cond23, !dbg !8937

while.cond23:                                     ; preds = %while.body34, %if.end20
  %call24 = call i16** @__ctype_b_loc() #13, !dbg !8938
  %16 = load i16*, i16** %call24, align 8, !dbg !8938
  %17 = load i8*, i8** %q, align 8, !dbg !8938
  %18 = load i8, i8* %17, align 1, !dbg !8938
  %conv25 = zext i8 %18 to i32, !dbg !8938
  %idxprom26 = sext i32 %conv25 to i64, !dbg !8938
  %arrayidx27 = getelementptr inbounds i16, i16* %16, i64 %idxprom26, !dbg !8938
  %19 = load i16, i16* %arrayidx27, align 2, !dbg !8938
  %conv28 = zext i16 %19 to i32, !dbg !8938
  %and29 = and i32 %conv28, 8192, !dbg !8938
  %cmp30 = icmp ne i32 %and29, 0, !dbg !8939
  br i1 %cmp30, label %land.rhs, label %land.end, !dbg !8940

land.rhs:                                         ; preds = %while.cond23
  %20 = load i8*, i8** %q, align 8, !dbg !8941
  %21 = load i8*, i8** %p, align 8, !dbg !8942
  %cmp32 = icmp ugt i8* %20, %21, !dbg !8943
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond23
  %22 = phi i1 [ false, %while.cond23 ], [ %cmp32, %land.rhs ], !dbg !8944
  br i1 %22, label %while.body34, label %while.end36, !dbg !8937

while.body34:                                     ; preds = %land.end
  %23 = load i8*, i8** %q, align 8, !dbg !8945
  %incdec.ptr35 = getelementptr inbounds i8, i8* %23, i32 -1, !dbg !8945
  store i8* %incdec.ptr35, i8** %q, align 8, !dbg !8945
  br label %while.cond23, !dbg !8937, !llvm.loop !8946

while.end36:                                      ; preds = %land.end
  %24 = load i8*, i8** %q, align 8, !dbg !8947
  %25 = load i8*, i8** %p, align 8, !dbg !8949
  %cmp37 = icmp ugt i8* %24, %25, !dbg !8950
  br i1 %cmp37, label %if.then39, label %if.end50, !dbg !8951

if.then39:                                        ; preds = %while.end36
  %26 = load i8*, i8** %q, align 8, !dbg !8952
  %27 = load i8, i8* %26, align 1, !dbg !8954
  %conv40 = sext i8 %27 to i32, !dbg !8954
  %cmp41 = icmp eq i32 %conv40, 39, !dbg !8955
  br i1 %cmp41, label %if.then47, label %lor.lhs.false43, !dbg !8956

lor.lhs.false43:                                  ; preds = %if.then39
  %28 = load i8*, i8** %q, align 8, !dbg !8957
  %29 = load i8, i8* %28, align 1, !dbg !8958
  %conv44 = sext i8 %29 to i32, !dbg !8958
  %cmp45 = icmp eq i32 %conv44, 34, !dbg !8959
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !8960

if.then47:                                        ; preds = %lor.lhs.false43, %if.then39
  %30 = load i8*, i8** %q, align 8, !dbg !8961
  %incdec.ptr48 = getelementptr inbounds i8, i8* %30, i32 -1, !dbg !8961
  store i8* %incdec.ptr48, i8** %q, align 8, !dbg !8961
  br label %if.end49, !dbg !8962

if.end49:                                         ; preds = %if.then47, %lor.lhs.false43
  br label %if.end50, !dbg !8963

if.end50:                                         ; preds = %if.end49, %while.end36
  %31 = load i8*, i8** %message.addr, align 8, !dbg !8964
  %32 = load i8*, i8** %p, align 8, !dbg !8965
  %33 = load i8*, i8** %q, align 8, !dbg !8966
  %34 = load i8*, i8** %p, align 8, !dbg !8967
  %sub.ptr.lhs.cast = ptrtoint i8* %33 to i64, !dbg !8968
  %sub.ptr.rhs.cast = ptrtoint i8* %34 to i64, !dbg !8968
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8968
  %add = add nsw i64 %sub.ptr.sub, 1, !dbg !8969
  %call51 = call i8* @CopyMagickMemory(i8* %31, i8* %32, i64 %add), !dbg !8970
  %35 = load i8*, i8** %message.addr, align 8, !dbg !8971
  %36 = load i8*, i8** %q, align 8, !dbg !8972
  %37 = load i8*, i8** %p, align 8, !dbg !8973
  %sub.ptr.lhs.cast52 = ptrtoint i8* %36 to i64, !dbg !8974
  %sub.ptr.rhs.cast53 = ptrtoint i8* %37 to i64, !dbg !8974
  %sub.ptr.sub54 = sub i64 %sub.ptr.lhs.cast52, %sub.ptr.rhs.cast53, !dbg !8974
  %add55 = add nsw i64 %sub.ptr.sub54, 1, !dbg !8975
  %arrayidx56 = getelementptr inbounds i8, i8* %35, i64 %add55, !dbg !8971
  store i8 0, i8* %arrayidx56, align 1, !dbg !8976
  br label %return, !dbg !8977

return:                                           ; preds = %if.end50, %if.then5, %if.then
  ret void, !dbg !8977
}

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #6

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SyncCacheView(%struct._CacheView* %cache_view) #0 !dbg !8978 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !8981, metadata !DIExpression()), !dbg !8982
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8983, metadata !DIExpression()), !dbg !8984
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8985
  %1 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8986
  %call = call %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView* %1), !dbg !8987
  %call1 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %0, %struct._ExceptionInfo* %call), !dbg !8988
  store i32 %call1, i32* %status, align 4, !dbg !8989
  %2 = load i32, i32* %status, align 4, !dbg !8990
  ret i32 %2, !dbg !8991
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SyncCacheViewPixels(%struct._CacheView* %cache_view) #0 !dbg !8992 {
entry:
  %cache_view.addr = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  store %struct._CacheView* %cache_view, %struct._CacheView** %cache_view.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._CacheView** %cache_view.addr, metadata !8993, metadata !DIExpression()), !dbg !8994
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8995, metadata !DIExpression()), !dbg !8996
  %0 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8997
  %1 = load %struct._CacheView*, %struct._CacheView** %cache_view.addr, align 8, !dbg !8998
  %call = call %struct._ExceptionInfo* @GetCacheViewException(%struct._CacheView* %1), !dbg !8999
  %call1 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %0, %struct._ExceptionInfo* %call), !dbg !9000
  store i32 %call1, i32* %status, align 4, !dbg !9001
  %2 = load i32, i32* %status, align 4, !dbg !9002
  ret i32 %2, !dbg !9003
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SyncImagePixels(%struct._Image* %image) #0 !dbg !9004 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9009
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9010
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 58, !dbg !9011
  %call = call i32 @SyncAuthenticPixels(%struct._Image* %0, %struct._ExceptionInfo* %exception), !dbg !9012
  ret i32 %call, !dbg !9013
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @TemporaryFilename(i8* %path) #0 !dbg !9014 {
entry:
  %path.addr = alloca i8*, align 8
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !9015, metadata !DIExpression()), !dbg !9016
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7049, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !9017
  %0 = load i8*, i8** %path.addr, align 8, !dbg !9018
  %call1 = call i32 @AcquireUniqueFilename(i8* %0), !dbg !9019
  %1 = load i8*, i8** %path.addr, align 8, !dbg !9020
  %call2 = call i32 @RelinquishUniqueFileResource(i8* %1), !dbg !9021
  ret void, !dbg !9022
}

declare dso_local i32 @AcquireUniqueFilename(i8*) #2

declare dso_local i32 @RelinquishUniqueFileResource(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ThresholdImage(%struct._Image* %image, double %threshold) #0 !dbg !9023 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %threshold.addr = alloca double, align 8
  %index = alloca i16, align 2
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9026, metadata !DIExpression()), !dbg !9027
  store double %threshold, double* %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata double* %threshold.addr, metadata !9028, metadata !DIExpression()), !dbg !9029
  call void @llvm.dbg.declare(metadata i16* %index, metadata !9030, metadata !DIExpression()), !dbg !9031
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9032, metadata !DIExpression()), !dbg !9033
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9034
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9036
  %1 = load i32, i32* %debug, align 8, !dbg !9036
  %cmp = icmp ne i32 %1, 0, !dbg !9037
  br i1 %cmp, label %if.then, label %if.end, !dbg !9038

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9039
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !9040
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9039
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !9041
  br label %if.end, !dbg !9042

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9043
  %debug1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 59, !dbg !9045
  %4 = load i32, i32* %debug1, align 8, !dbg !9045
  %cmp2 = icmp ne i32 %4, 0, !dbg !9046
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !9047

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7098, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2, i64 0, i64 0)), !dbg !9048
  br label %if.end5, !dbg !9049

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9050
  %call6 = call i32 @AcquireImageColormap(%struct._Image* %5, i64 2), !dbg !9052
  %tobool = icmp ne i32 %call6, 0, !dbg !9052
  br i1 %tobool, label %if.end12, label %if.then7, !dbg !9053

if.then7:                                         ; preds = %if.end5
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9054
  %cmp8 = icmp ne %struct._Image* %6, null, !dbg !9054
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !9057

if.then9:                                         ; preds = %if.then7
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9054
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 58, !dbg !9054
  %call10 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7101, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0)), !dbg !9054
  br label %if.end11, !dbg !9054

if.end11:                                         ; preds = %if.then9, %if.then7
  store i32 0, i32* %retval, align 4, !dbg !9057
  br label %return, !dbg !9057

if.end12:                                         ; preds = %if.end5
  store i64 0, i64* %y, align 8, !dbg !9058
  br label %for.cond, !dbg !9060

for.cond:                                         ; preds = %for.inc53, %if.end12
  %8 = load i64, i64* %y, align 8, !dbg !9061
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9063
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !9064
  %10 = load i64, i64* %rows, align 8, !dbg !9064
  %cmp13 = icmp slt i64 %8, %10, !dbg !9065
  br i1 %cmp13, label %for.body, label %for.end55, !dbg !9066

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !9067, metadata !DIExpression()), !dbg !9069
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9072, metadata !DIExpression()), !dbg !9073
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9074
  %12 = load i64, i64* %y, align 8, !dbg !9075
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9076
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 7, !dbg !9077
  %14 = load i64, i64* %columns, align 8, !dbg !9077
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9078
  %exception14 = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !9079
  %call15 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %11, i64 0, i64 %12, i64 %14, i64 1, %struct._ExceptionInfo* %exception14), !dbg !9080
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %q, align 8, !dbg !9081
  %16 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9082
  %cmp16 = icmp eq %struct._PixelPacket* %16, null, !dbg !9084
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !9085

if.then17:                                        ; preds = %for.body
  br label %for.end55, !dbg !9086

if.end18:                                         ; preds = %for.body
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9087
  %call19 = call i16* @GetAuthenticIndexQueue(%struct._Image* %17), !dbg !9088
  store i16* %call19, i16** %indexes, align 8, !dbg !9089
  store i64 0, i64* %x, align 8, !dbg !9090
  br label %for.cond20, !dbg !9092

for.cond20:                                       ; preds = %for.inc, %if.end18
  %18 = load i64, i64* %x, align 8, !dbg !9093
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9095
  %columns21 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 7, !dbg !9096
  %20 = load i64, i64* %columns21, align 8, !dbg !9096
  %cmp22 = icmp slt i64 %18, %20, !dbg !9097
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !9098

for.body23:                                       ; preds = %for.cond20
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9099
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9101
  %call24 = call float @GetPixelIntensity(%struct._Image* %21, %struct._PixelPacket* %22), !dbg !9102
  %conv = fpext float %call24 to double, !dbg !9102
  %23 = load double, double* %threshold.addr, align 8, !dbg !9103
  %cmp25 = fcmp ole double %conv, %23, !dbg !9104
  %24 = zext i1 %cmp25 to i64, !dbg !9102
  %cond = select i1 %cmp25, i32 0, i32 1, !dbg !9102
  %conv27 = trunc i32 %cond to i16, !dbg !9105
  store i16 %conv27, i16* %index, align 2, !dbg !9106
  %25 = load i16*, i16** %indexes, align 8, !dbg !9107
  %26 = load i64, i64* %x, align 8, !dbg !9107
  %add.ptr = getelementptr inbounds i16, i16* %25, i64 %26, !dbg !9107
  %cmp28 = icmp ne i16* %add.ptr, null, !dbg !9107
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !9110

if.then30:                                        ; preds = %for.body23
  %27 = load i16, i16* %index, align 2, !dbg !9107
  %28 = load i16*, i16** %indexes, align 8, !dbg !9107
  %29 = load i64, i64* %x, align 8, !dbg !9107
  %add.ptr31 = getelementptr inbounds i16, i16* %28, i64 %29, !dbg !9107
  store i16 %27, i16* %add.ptr31, align 2, !dbg !9107
  br label %if.end32, !dbg !9107

if.end32:                                         ; preds = %if.then30, %for.body23
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9111
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 11, !dbg !9111
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !9111
  %32 = load i16, i16* %index, align 2, !dbg !9111
  %conv33 = zext i16 %32 to i64, !dbg !9111
  %add.ptr34 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i64 %conv33, !dbg !9111
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr34, i32 0, i32 2, !dbg !9111
  %33 = load i16, i16* %red, align 2, !dbg !9111
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9111
  %red35 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 0, i32 2, !dbg !9111
  store i16 %33, i16* %red35, align 2, !dbg !9111
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9111
  %colormap36 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 11, !dbg !9111
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap36, align 8, !dbg !9111
  %37 = load i16, i16* %index, align 2, !dbg !9111
  %conv37 = zext i16 %37 to i64, !dbg !9111
  %add.ptr38 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i64 %conv37, !dbg !9111
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr38, i32 0, i32 1, !dbg !9111
  %38 = load i16, i16* %green, align 2, !dbg !9111
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9111
  %green39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !9111
  store i16 %38, i16* %green39, align 2, !dbg !9111
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9111
  %colormap40 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 11, !dbg !9111
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap40, align 8, !dbg !9111
  %42 = load i16, i16* %index, align 2, !dbg !9111
  %conv41 = zext i16 %42 to i64, !dbg !9111
  %add.ptr42 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i64 %conv41, !dbg !9111
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr42, i32 0, i32 0, !dbg !9111
  %43 = load i16, i16* %blue, align 2, !dbg !9111
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9111
  %blue43 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 0, !dbg !9111
  store i16 %43, i16* %blue43, align 2, !dbg !9111
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9111
  %colormap44 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 11, !dbg !9111
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap44, align 8, !dbg !9111
  %47 = load i16, i16* %index, align 2, !dbg !9111
  %conv45 = zext i16 %47 to i64, !dbg !9111
  %add.ptr46 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i64 %conv45, !dbg !9111
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %add.ptr46, i32 0, i32 3, !dbg !9111
  %48 = load i16, i16* %opacity, align 2, !dbg !9111
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9111
  %opacity47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %49, i32 0, i32 3, !dbg !9111
  store i16 %48, i16* %opacity47, align 2, !dbg !9111
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9113
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 1, !dbg !9113
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !9113
  br label %for.inc, !dbg !9114

for.inc:                                          ; preds = %if.end32
  %51 = load i64, i64* %x, align 8, !dbg !9115
  %inc = add nsw i64 %51, 1, !dbg !9115
  store i64 %inc, i64* %x, align 8, !dbg !9115
  br label %for.cond20, !dbg !9116, !llvm.loop !9117

for.end:                                          ; preds = %for.cond20
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9119
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9121
  %exception48 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !9122
  %call49 = call i32 @SyncAuthenticPixels(%struct._Image* %52, %struct._ExceptionInfo* %exception48), !dbg !9123
  %tobool50 = icmp ne i32 %call49, 0, !dbg !9123
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !9124

if.then51:                                        ; preds = %for.end
  br label %for.end55, !dbg !9125

if.end52:                                         ; preds = %for.end
  br label %for.inc53, !dbg !9126

for.inc53:                                        ; preds = %if.end52
  %54 = load i64, i64* %y, align 8, !dbg !9127
  %inc54 = add nsw i64 %54, 1, !dbg !9127
  store i64 %inc54, i64* %y, align 8, !dbg !9127
  br label %for.cond, !dbg !9128, !llvm.loop !9129

for.end55:                                        ; preds = %if.then51, %if.then17, %for.cond
  store i32 1, i32* %retval, align 4, !dbg !9131
  br label %return, !dbg !9131

return:                                           ; preds = %for.end55, %if.end11
  %55 = load i32, i32* %retval, align 4, !dbg !9132
  ret i32 %55, !dbg !9132
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ThresholdImageChannel(%struct._Image* %image, i8* %threshold) #0 !dbg !9133 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %threshold.addr = alloca i8*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %geometry_info = alloca %struct._GeometryInfo, align 8
  %index = alloca i16, align 2
  %y = alloca i64, align 8
  %flags = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i8* %threshold, i8** %threshold.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %threshold.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata %struct._GeometryInfo* %geometry_info, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata i16* %index, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9144, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !9146, metadata !DIExpression()), !dbg !9147
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9148
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9150
  %1 = load i32, i32* %debug, align 8, !dbg !9150
  %cmp = icmp ne i32 %1, 0, !dbg !9151
  br i1 %cmp, label %if.then, label %if.end, !dbg !9152

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9153
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !9154
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9153
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !9155
  br label %if.end, !dbg !9156

if.end:                                           ; preds = %if.then, %entry
  %3 = load i8*, i8** %threshold.addr, align 8, !dbg !9157
  %cmp1 = icmp eq i8* %3, null, !dbg !9159
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !9160

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9161
  br label %return, !dbg !9161

if.end3:                                          ; preds = %if.end
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9162
  %call4 = call i32 @SetImageStorageClass(%struct._Image* %4, i32 1), !dbg !9164
  %cmp5 = icmp eq i32 %call4, 0, !dbg !9165
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !9166

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !9167
  br label %return, !dbg !9167

if.end7:                                          ; preds = %if.end3
  %5 = load i8*, i8** %threshold.addr, align 8, !dbg !9168
  %call8 = call i32 @ParseGeometry(i8* %5, %struct._GeometryInfo* %geometry_info), !dbg !9169
  store i32 %call8, i32* %flags, align 4, !dbg !9170
  %rho = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 0, !dbg !9171
  %6 = load double, double* %rho, align 8, !dbg !9171
  %conv = fptrunc double %6 to float, !dbg !9172
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9173
  store float %conv, float* %red, align 8, !dbg !9174
  %7 = load i32, i32* %flags, align 4, !dbg !9175
  %and = and i32 %7, 8, !dbg !9177
  %tobool = icmp ne i32 %and, 0, !dbg !9177
  br i1 %tobool, label %if.then9, label %if.else, !dbg !9178

if.then9:                                         ; preds = %if.end7
  %sigma = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 1, !dbg !9179
  %8 = load double, double* %sigma, align 8, !dbg !9179
  %conv10 = fptrunc double %8 to float, !dbg !9180
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9181
  store float %conv10, float* %green, align 4, !dbg !9182
  br label %if.end13, !dbg !9183

if.else:                                          ; preds = %if.end7
  %red11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9184
  %9 = load float, float* %red11, align 8, !dbg !9184
  %green12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9185
  store float %9, float* %green12, align 4, !dbg !9186
  br label %if.end13

if.end13:                                         ; preds = %if.else, %if.then9
  %10 = load i32, i32* %flags, align 4, !dbg !9187
  %and14 = and i32 %10, 1, !dbg !9189
  %tobool15 = icmp ne i32 %and14, 0, !dbg !9189
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !9190

if.then16:                                        ; preds = %if.end13
  %xi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 2, !dbg !9191
  %11 = load double, double* %xi, align 8, !dbg !9191
  %conv17 = fptrunc double %11 to float, !dbg !9192
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9193
  store float %conv17, float* %blue, align 8, !dbg !9194
  br label %if.end21, !dbg !9195

if.else18:                                        ; preds = %if.end13
  %red19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9196
  %12 = load float, float* %red19, align 8, !dbg !9196
  %blue20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9197
  store float %12, float* %blue20, align 8, !dbg !9198
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.then16
  %13 = load i32, i32* %flags, align 4, !dbg !9199
  %and22 = and i32 %13, 2, !dbg !9201
  %tobool23 = icmp ne i32 %and22, 0, !dbg !9201
  br i1 %tobool23, label %if.then24, label %if.else26, !dbg !9202

if.then24:                                        ; preds = %if.end21
  %psi = getelementptr inbounds %struct._GeometryInfo, %struct._GeometryInfo* %geometry_info, i32 0, i32 3, !dbg !9203
  %14 = load double, double* %psi, align 8, !dbg !9203
  %conv25 = fptrunc double %14 to float, !dbg !9204
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9205
  store float %conv25, float* %opacity, align 4, !dbg !9206
  br label %if.end28, !dbg !9207

if.else26:                                        ; preds = %if.end21
  %opacity27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9208
  store float 0.000000e+00, float* %opacity27, align 4, !dbg !9209
  br label %if.end28

if.end28:                                         ; preds = %if.else26, %if.then24
  %15 = load i32, i32* %flags, align 4, !dbg !9210
  %and29 = and i32 %15, 4096, !dbg !9212
  %tobool30 = icmp ne i32 %and29, 0, !dbg !9212
  br i1 %tobool30, label %if.then31, label %if.end39, !dbg !9213

if.then31:                                        ; preds = %if.end28
  %red32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9214
  %16 = load float, float* %red32, align 8, !dbg !9216
  %mul = fmul float %16, 0x40847ACCC0000000, !dbg !9216
  store float %mul, float* %red32, align 8, !dbg !9216
  %green33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9217
  %17 = load float, float* %green33, align 4, !dbg !9218
  %mul34 = fmul float %17, 0x40847ACCC0000000, !dbg !9218
  store float %mul34, float* %green33, align 4, !dbg !9218
  %blue35 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9219
  %18 = load float, float* %blue35, align 8, !dbg !9220
  %mul36 = fmul float %18, 0x40847ACCC0000000, !dbg !9220
  store float %mul36, float* %blue35, align 8, !dbg !9220
  %opacity37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9221
  %19 = load float, float* %opacity37, align 4, !dbg !9222
  %mul38 = fmul float %19, 0x40847ACCC0000000, !dbg !9222
  store float %mul38, float* %opacity37, align 4, !dbg !9222
  br label %if.end39, !dbg !9223

if.end39:                                         ; preds = %if.then31, %if.end28
  %20 = load i32, i32* %flags, align 4, !dbg !9224
  %and40 = and i32 %20, 8, !dbg !9226
  %tobool41 = icmp ne i32 %and40, 0, !dbg !9226
  br i1 %tobool41, label %if.end59, label %if.then42, !dbg !9227

if.then42:                                        ; preds = %if.end39
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9228
  %call43 = call i32 @AcquireImageColormap(%struct._Image* %21, i64 2), !dbg !9231
  %tobool44 = icmp ne i32 %call43, 0, !dbg !9231
  br i1 %tobool44, label %if.end51, label %if.then45, !dbg !9232

if.then45:                                        ; preds = %if.then42
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9233
  %cmp46 = icmp ne %struct._Image* %22, null, !dbg !9233
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !9236

if.then48:                                        ; preds = %if.then45
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9233
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 58, !dbg !9233
  %call49 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7212, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.42, i64 0, i64 0)), !dbg !9233
  br label %if.end50, !dbg !9233

if.end50:                                         ; preds = %if.then48, %if.then45
  store i32 0, i32* %retval, align 4, !dbg !9236
  br label %return, !dbg !9236

if.end51:                                         ; preds = %if.then42
  %red52 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9237
  %24 = load float, float* %red52, align 8, !dbg !9237
  %cmp53 = fcmp oeq float %24, 0.000000e+00, !dbg !9239
  br i1 %cmp53, label %if.then55, label %if.end58, !dbg !9240

if.then55:                                        ; preds = %if.end51
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9241
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9242
  %exception56 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !9243
  %call57 = call i32 @GetImageDynamicThreshold(%struct._Image* %25, double 2.000000e+00, double 2.000000e+00, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %exception56), !dbg !9244
  br label %if.end58, !dbg !9245

if.end58:                                         ; preds = %if.then55, %if.end51
  br label %if.end59, !dbg !9246

if.end59:                                         ; preds = %if.end58, %if.end39
  store i64 0, i64* %y, align 8, !dbg !9247
  br label %for.cond, !dbg !9249

for.cond:                                         ; preds = %for.inc149, %if.end59
  %27 = load i64, i64* %y, align 8, !dbg !9250
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9252
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 8, !dbg !9253
  %29 = load i64, i64* %rows, align 8, !dbg !9253
  %cmp60 = icmp slt i64 %27, %29, !dbg !9254
  br i1 %cmp60, label %for.body, label %for.end151, !dbg !9255

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !9256, metadata !DIExpression()), !dbg !9258
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9259, metadata !DIExpression()), !dbg !9260
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9261, metadata !DIExpression()), !dbg !9262
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9263
  %31 = load i64, i64* %y, align 8, !dbg !9264
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9265
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 7, !dbg !9266
  %33 = load i64, i64* %columns, align 8, !dbg !9266
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9267
  %exception62 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 58, !dbg !9268
  %call63 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %30, i64 0, i64 %31, i64 %33, i64 1, %struct._ExceptionInfo* %exception62), !dbg !9269
  store %struct._PixelPacket* %call63, %struct._PixelPacket** %q, align 8, !dbg !9270
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9271
  %cmp64 = icmp eq %struct._PixelPacket* %35, null, !dbg !9273
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !9274

if.then66:                                        ; preds = %for.body
  br label %for.end151, !dbg !9275

if.end67:                                         ; preds = %for.body
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9276
  %call68 = call i16* @GetAuthenticIndexQueue(%struct._Image* %36), !dbg !9277
  store i16* %call68, i16** %indexes, align 8, !dbg !9278
  %call69 = call i32 @IsMagickGray(%struct._MagickPixelPacket* %pixel), !dbg !9279
  %cmp70 = icmp ne i32 %call69, 0, !dbg !9281
  br i1 %cmp70, label %if.then72, label %if.else101, !dbg !9282

if.then72:                                        ; preds = %if.end67
  store i64 0, i64* %x, align 8, !dbg !9283
  br label %for.cond73, !dbg !9285

for.cond73:                                       ; preds = %for.inc, %if.then72
  %37 = load i64, i64* %x, align 8, !dbg !9286
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9288
  %columns74 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !9289
  %39 = load i64, i64* %columns74, align 8, !dbg !9289
  %cmp75 = icmp slt i64 %37, %39, !dbg !9290
  br i1 %cmp75, label %for.body77, label %for.end, !dbg !9291

for.body77:                                       ; preds = %for.cond73
  %40 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9292
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9294
  %call78 = call float @GetPixelIntensity(%struct._Image* %40, %struct._PixelPacket* %41), !dbg !9295
  %red79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9296
  %42 = load float, float* %red79, align 8, !dbg !9296
  %cmp80 = fcmp ole float %call78, %42, !dbg !9297
  %43 = zext i1 %cmp80 to i64, !dbg !9295
  %cond = select i1 %cmp80, i32 0, i32 1, !dbg !9295
  %conv82 = trunc i32 %cond to i16, !dbg !9298
  store i16 %conv82, i16* %index, align 2, !dbg !9299
  %44 = load i16*, i16** %indexes, align 8, !dbg !9300
  %45 = load i64, i64* %x, align 8, !dbg !9300
  %add.ptr = getelementptr inbounds i16, i16* %44, i64 %45, !dbg !9300
  %cmp83 = icmp ne i16* %add.ptr, null, !dbg !9300
  br i1 %cmp83, label %if.then85, label %if.end87, !dbg !9303

if.then85:                                        ; preds = %for.body77
  %46 = load i16, i16* %index, align 2, !dbg !9300
  %47 = load i16*, i16** %indexes, align 8, !dbg !9300
  %48 = load i64, i64* %x, align 8, !dbg !9300
  %add.ptr86 = getelementptr inbounds i16, i16* %47, i64 %48, !dbg !9300
  store i16 %46, i16* %add.ptr86, align 2, !dbg !9300
  br label %if.end87, !dbg !9300

if.end87:                                         ; preds = %if.then85, %for.body77
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9304
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %49, i32 0, i32 11, !dbg !9304
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !9304
  %51 = load i16, i16* %index, align 2, !dbg !9304
  %conv88 = zext i16 %51 to i64, !dbg !9304
  %arrayidx = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i64 %conv88, !dbg !9304
  %red89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx, i32 0, i32 2, !dbg !9304
  %52 = load i16, i16* %red89, align 2, !dbg !9304
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9304
  %red90 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 2, !dbg !9304
  store i16 %52, i16* %red90, align 2, !dbg !9304
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9305
  %colormap91 = getelementptr inbounds %struct._Image, %struct._Image* %54, i32 0, i32 11, !dbg !9305
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap91, align 8, !dbg !9305
  %56 = load i16, i16* %index, align 2, !dbg !9305
  %conv92 = zext i16 %56 to i64, !dbg !9305
  %arrayidx93 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i64 %conv92, !dbg !9305
  %green94 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx93, i32 0, i32 1, !dbg !9305
  %57 = load i16, i16* %green94, align 2, !dbg !9305
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9305
  %green95 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %58, i32 0, i32 1, !dbg !9305
  store i16 %57, i16* %green95, align 2, !dbg !9305
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9306
  %colormap96 = getelementptr inbounds %struct._Image, %struct._Image* %59, i32 0, i32 11, !dbg !9306
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap96, align 8, !dbg !9306
  %61 = load i16, i16* %index, align 2, !dbg !9306
  %conv97 = zext i16 %61 to i64, !dbg !9306
  %arrayidx98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i64 %conv97, !dbg !9306
  %blue99 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx98, i32 0, i32 0, !dbg !9306
  %62 = load i16, i16* %blue99, align 2, !dbg !9306
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9306
  %blue100 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 0, !dbg !9306
  store i16 %62, i16* %blue100, align 2, !dbg !9306
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9307
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 1, !dbg !9307
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !9307
  br label %for.inc, !dbg !9308

for.inc:                                          ; preds = %if.end87
  %65 = load i64, i64* %x, align 8, !dbg !9309
  %inc = add nsw i64 %65, 1, !dbg !9309
  store i64 %inc, i64* %x, align 8, !dbg !9309
  br label %for.cond73, !dbg !9310, !llvm.loop !9311

for.end:                                          ; preds = %for.cond73
  br label %if.end143, !dbg !9312

if.else101:                                       ; preds = %if.end67
  store i64 0, i64* %x, align 8, !dbg !9313
  br label %for.cond102, !dbg !9315

for.cond102:                                      ; preds = %for.inc140, %if.else101
  %66 = load i64, i64* %x, align 8, !dbg !9316
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9318
  %columns103 = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 7, !dbg !9319
  %68 = load i64, i64* %columns103, align 8, !dbg !9319
  %cmp104 = icmp slt i64 %66, %68, !dbg !9320
  br i1 %cmp104, label %for.body106, label %for.end142, !dbg !9321

for.body106:                                      ; preds = %for.cond102
  %69 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9322
  %red107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %69, i32 0, i32 2, !dbg !9322
  %70 = load i16, i16* %red107, align 2, !dbg !9322
  %conv108 = uitofp i16 %70 to float, !dbg !9322
  %red109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !9322
  %71 = load float, float* %red109, align 8, !dbg !9322
  %cmp110 = fcmp ole float %conv108, %71, !dbg !9322
  %72 = zext i1 %cmp110 to i64, !dbg !9322
  %cond112 = select i1 %cmp110, i32 0, i32 65535, !dbg !9322
  %conv113 = trunc i32 %cond112 to i16, !dbg !9322
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9322
  %red114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 0, i32 2, !dbg !9322
  store i16 %conv113, i16* %red114, align 2, !dbg !9322
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9324
  %green115 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 1, !dbg !9324
  %75 = load i16, i16* %green115, align 2, !dbg !9324
  %conv116 = uitofp i16 %75 to float, !dbg !9324
  %green117 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !9324
  %76 = load float, float* %green117, align 4, !dbg !9324
  %cmp118 = fcmp ole float %conv116, %76, !dbg !9324
  %77 = zext i1 %cmp118 to i64, !dbg !9324
  %cond120 = select i1 %cmp118, i32 0, i32 65535, !dbg !9324
  %conv121 = trunc i32 %cond120 to i16, !dbg !9324
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9324
  %green122 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 1, !dbg !9324
  store i16 %conv121, i16* %green122, align 2, !dbg !9324
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9325
  %blue123 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !9325
  %80 = load i16, i16* %blue123, align 2, !dbg !9325
  %conv124 = uitofp i16 %80 to float, !dbg !9325
  %blue125 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !9325
  %81 = load float, float* %blue125, align 8, !dbg !9325
  %cmp126 = fcmp ole float %conv124, %81, !dbg !9325
  %82 = zext i1 %cmp126 to i64, !dbg !9325
  %cond128 = select i1 %cmp126, i32 0, i32 65535, !dbg !9325
  %conv129 = trunc i32 %cond128 to i16, !dbg !9325
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9325
  %blue130 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !9325
  store i16 %conv129, i16* %blue130, align 2, !dbg !9325
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9326
  %opacity131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 0, i32 3, !dbg !9326
  %85 = load i16, i16* %opacity131, align 2, !dbg !9326
  %conv132 = uitofp i16 %85 to float, !dbg !9326
  %opacity133 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !9326
  %86 = load float, float* %opacity133, align 4, !dbg !9326
  %cmp134 = fcmp ole float %conv132, %86, !dbg !9326
  %87 = zext i1 %cmp134 to i64, !dbg !9326
  %cond136 = select i1 %cmp134, i32 0, i32 65535, !dbg !9326
  %conv137 = trunc i32 %cond136 to i16, !dbg !9326
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9326
  %opacity138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 3, !dbg !9326
  store i16 %conv137, i16* %opacity138, align 2, !dbg !9326
  %89 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9327
  %incdec.ptr139 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %89, i32 1, !dbg !9327
  store %struct._PixelPacket* %incdec.ptr139, %struct._PixelPacket** %q, align 8, !dbg !9327
  br label %for.inc140, !dbg !9328

for.inc140:                                       ; preds = %for.body106
  %90 = load i64, i64* %x, align 8, !dbg !9329
  %inc141 = add nsw i64 %90, 1, !dbg !9329
  store i64 %inc141, i64* %x, align 8, !dbg !9329
  br label %for.cond102, !dbg !9330, !llvm.loop !9331

for.end142:                                       ; preds = %for.cond102
  br label %if.end143

if.end143:                                        ; preds = %for.end142, %for.end
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9333
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9335
  %exception144 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 58, !dbg !9336
  %call145 = call i32 @SyncAuthenticPixels(%struct._Image* %91, %struct._ExceptionInfo* %exception144), !dbg !9337
  %tobool146 = icmp ne i32 %call145, 0, !dbg !9337
  br i1 %tobool146, label %if.end148, label %if.then147, !dbg !9338

if.then147:                                       ; preds = %if.end143
  br label %for.end151, !dbg !9339

if.end148:                                        ; preds = %if.end143
  br label %for.inc149, !dbg !9340

for.inc149:                                       ; preds = %if.end148
  %93 = load i64, i64* %y, align 8, !dbg !9341
  %inc150 = add nsw i64 %93, 1, !dbg !9341
  store i64 %inc150, i64* %y, align 8, !dbg !9341
  br label %for.cond, !dbg !9342, !llvm.loop !9343

for.end151:                                       ; preds = %if.then147, %if.then66, %for.cond
  store i32 1, i32* %retval, align 4, !dbg !9345
  br label %return, !dbg !9345

return:                                           ; preds = %for.end151, %if.end50, %if.then6, %if.then2
  %94 = load i32, i32* %retval, align 4, !dbg !9346
  ret i32 %94, !dbg !9346
}

declare dso_local i32 @GetImageDynamicThreshold(%struct._Image*, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsMagickGray(%struct._MagickPixelPacket* %pixel) #0 !dbg !9347 {
entry:
  %retval = alloca i32, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9352
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !9354
  %1 = load i32, i32* %colorspace, align 4, !dbg !9354
  %cmp = icmp ne i32 %1, 2, !dbg !9355
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !9356

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9357
  %colorspace1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 1, !dbg !9358
  %3 = load i32, i32* %colorspace1, align 4, !dbg !9358
  %cmp2 = icmp ne i32 %3, 1, !dbg !9359
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9360

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !9361
  br label %return, !dbg !9361

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9362
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !9364
  %5 = load float, float* %red, align 8, !dbg !9364
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9365
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !9366
  %7 = load float, float* %green, align 4, !dbg !9366
  %sub = fsub float %5, %7, !dbg !9367
  %conv = fpext float %sub to double, !dbg !9362
  %8 = call double @llvm.fabs.f64(double %conv), !dbg !9368
  %cmp3 = fcmp olt double %8, 1.000000e-15, !dbg !9369
  br i1 %cmp3, label %land.lhs.true5, label %if.end12, !dbg !9370

land.lhs.true5:                                   ; preds = %if.end
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9371
  %green6 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 6, !dbg !9372
  %10 = load float, float* %green6, align 4, !dbg !9372
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !9373
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 7, !dbg !9374
  %12 = load float, float* %blue, align 8, !dbg !9374
  %sub7 = fsub float %10, %12, !dbg !9375
  %conv8 = fpext float %sub7 to double, !dbg !9371
  %13 = call double @llvm.fabs.f64(double %conv8), !dbg !9376
  %cmp9 = fcmp olt double %13, 1.000000e-15, !dbg !9377
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9378

if.then11:                                        ; preds = %land.lhs.true5
  store i32 1, i32* %retval, align 4, !dbg !9379
  br label %return, !dbg !9379

if.end12:                                         ; preds = %land.lhs.true5, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9380
  br label %return, !dbg !9380

return:                                           ; preds = %if.end12, %if.then11, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !9381
  ret i32 %14, !dbg !9381
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @TransformColorspace(%struct._Image* %image, i32 %colorspace) #0 !dbg !9382 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %colorspace.addr = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9386, metadata !DIExpression()), !dbg !9387
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !9388, metadata !DIExpression()), !dbg !9389
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9390
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9392
  %1 = load i32, i32* %debug, align 8, !dbg !9392
  %cmp = icmp ne i32 %1, 0, !dbg !9393
  br i1 %cmp, label %if.then, label %if.end, !dbg !9394

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7300, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i64 0, i64 0)), !dbg !9395
  br label %if.end, !dbg !9396

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9397
  %3 = load i32, i32* %colorspace.addr, align 4, !dbg !9398
  %call1 = call i32 @TransformImageColorspace(%struct._Image* %2, i32 %3), !dbg !9399
  ret i32 %call1, !dbg !9400
}

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @TransformHSL(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %hue, double* %saturation, double* %lightness) #0 !dbg !9401 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %hue.addr = alloca double*, align 8
  %saturation.addr = alloca double*, align 8
  %lightness.addr = alloca double*, align 8
  %b = alloca float, align 4
  %delta = alloca float, align 4
  %g = alloca float, align 4
  %max = alloca float, align 4
  %min = alloca float, align 4
  %r = alloca float, align 4
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !9404, metadata !DIExpression()), !dbg !9405
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !9406, metadata !DIExpression()), !dbg !9407
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !9408, metadata !DIExpression()), !dbg !9409
  store double* %hue, double** %hue.addr, align 8
  call void @llvm.dbg.declare(metadata double** %hue.addr, metadata !9410, metadata !DIExpression()), !dbg !9411
  store double* %saturation, double** %saturation.addr, align 8
  call void @llvm.dbg.declare(metadata double** %saturation.addr, metadata !9412, metadata !DIExpression()), !dbg !9413
  store double* %lightness, double** %lightness.addr, align 8
  call void @llvm.dbg.declare(metadata double** %lightness.addr, metadata !9414, metadata !DIExpression()), !dbg !9415
  call void @llvm.dbg.declare(metadata float* %b, metadata !9416, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.declare(metadata float* %delta, metadata !9418, metadata !DIExpression()), !dbg !9419
  call void @llvm.dbg.declare(metadata float* %g, metadata !9420, metadata !DIExpression()), !dbg !9421
  call void @llvm.dbg.declare(metadata float* %max, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata float* %min, metadata !9424, metadata !DIExpression()), !dbg !9425
  call void @llvm.dbg.declare(metadata float* %r, metadata !9426, metadata !DIExpression()), !dbg !9427
  %0 = load i16, i16* %red.addr, align 2, !dbg !9428
  %conv = zext i16 %0 to i32, !dbg !9428
  %conv1 = sitofp i32 %conv to double, !dbg !9428
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !9429
  %conv2 = fptrunc double %mul to float, !dbg !9430
  store float %conv2, float* %r, align 4, !dbg !9431
  %1 = load i16, i16* %green.addr, align 2, !dbg !9432
  %conv3 = zext i16 %1 to i32, !dbg !9432
  %conv4 = sitofp i32 %conv3 to double, !dbg !9432
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !9433
  %conv6 = fptrunc double %mul5 to float, !dbg !9434
  store float %conv6, float* %g, align 4, !dbg !9435
  %2 = load i16, i16* %blue.addr, align 2, !dbg !9436
  %conv7 = zext i16 %2 to i32, !dbg !9436
  %conv8 = sitofp i32 %conv7 to double, !dbg !9436
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !9437
  %conv10 = fptrunc double %mul9 to float, !dbg !9438
  store float %conv10, float* %b, align 4, !dbg !9439
  %3 = load float, float* %r, align 4, !dbg !9440
  %conv11 = fpext float %3 to double, !dbg !9440
  %4 = load float, float* %g, align 4, !dbg !9441
  %conv12 = fpext float %4 to double, !dbg !9441
  %5 = load float, float* %b, align 4, !dbg !9442
  %conv13 = fpext float %5 to double, !dbg !9442
  %call = call double @MagickMax(double %conv12, double %conv13), !dbg !9443
  %call14 = call double @MagickMax(double %conv11, double %call), !dbg !9444
  %conv15 = fptrunc double %call14 to float, !dbg !9444
  store float %conv15, float* %max, align 4, !dbg !9445
  %6 = load float, float* %r, align 4, !dbg !9446
  %conv16 = fpext float %6 to double, !dbg !9446
  %7 = load float, float* %g, align 4, !dbg !9447
  %conv17 = fpext float %7 to double, !dbg !9447
  %8 = load float, float* %b, align 4, !dbg !9448
  %conv18 = fpext float %8 to double, !dbg !9448
  %call19 = call double @MagickMin(double %conv17, double %conv18), !dbg !9449
  %call20 = call double @MagickMin(double %conv16, double %call19), !dbg !9450
  %conv21 = fptrunc double %call20 to float, !dbg !9450
  store float %conv21, float* %min, align 4, !dbg !9451
  %9 = load double*, double** %hue.addr, align 8, !dbg !9452
  store double 0.000000e+00, double* %9, align 8, !dbg !9453
  %10 = load double*, double** %saturation.addr, align 8, !dbg !9454
  store double 0.000000e+00, double* %10, align 8, !dbg !9455
  %11 = load float, float* %min, align 4, !dbg !9456
  %12 = load float, float* %max, align 4, !dbg !9457
  %add = fadd float %11, %12, !dbg !9458
  %conv22 = fpext float %add to double, !dbg !9459
  %div = fdiv double %conv22, 2.000000e+00, !dbg !9460
  %13 = load double*, double** %lightness.addr, align 8, !dbg !9461
  store double %div, double* %13, align 8, !dbg !9462
  %14 = load float, float* %max, align 4, !dbg !9463
  %15 = load float, float* %min, align 4, !dbg !9464
  %sub = fsub float %14, %15, !dbg !9465
  store float %sub, float* %delta, align 4, !dbg !9466
  %16 = load float, float* %delta, align 4, !dbg !9467
  %conv23 = fpext float %16 to double, !dbg !9467
  %cmp = fcmp oeq double %conv23, 0.000000e+00, !dbg !9469
  br i1 %cmp, label %if.then, label %if.end, !dbg !9470

if.then:                                          ; preds = %entry
  br label %return, !dbg !9471

if.end:                                           ; preds = %entry
  %17 = load float, float* %delta, align 4, !dbg !9472
  %conv25 = fpext float %17 to double, !dbg !9472
  %18 = load double*, double** %lightness.addr, align 8, !dbg !9473
  %19 = load double, double* %18, align 8, !dbg !9474
  %cmp26 = fcmp olt double %19, 5.000000e-01, !dbg !9475
  br i1 %cmp26, label %cond.true, label %cond.false, !dbg !9476

cond.true:                                        ; preds = %if.end
  %20 = load float, float* %min, align 4, !dbg !9477
  %21 = load float, float* %max, align 4, !dbg !9478
  %add28 = fadd float %20, %21, !dbg !9479
  %conv29 = fpext float %add28 to double, !dbg !9480
  br label %cond.end, !dbg !9476

cond.false:                                       ; preds = %if.end
  %22 = load float, float* %max, align 4, !dbg !9481
  %conv30 = fpext float %22 to double, !dbg !9481
  %sub31 = fsub double 2.000000e+00, %conv30, !dbg !9482
  %23 = load float, float* %min, align 4, !dbg !9483
  %conv32 = fpext float %23 to double, !dbg !9483
  %sub33 = fsub double %sub31, %conv32, !dbg !9484
  br label %cond.end, !dbg !9476

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %conv29, %cond.true ], [ %sub33, %cond.false ], !dbg !9476
  %div34 = fdiv double %conv25, %cond, !dbg !9485
  %24 = load double*, double** %saturation.addr, align 8, !dbg !9486
  store double %div34, double* %24, align 8, !dbg !9487
  %25 = load float, float* %r, align 4, !dbg !9488
  %26 = load float, float* %max, align 4, !dbg !9490
  %cmp35 = fcmp oeq float %25, %26, !dbg !9491
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !9492

if.then37:                                        ; preds = %cond.end
  %27 = load float, float* %g, align 4, !dbg !9493
  %28 = load float, float* %min, align 4, !dbg !9494
  %cmp38 = fcmp oeq float %27, %28, !dbg !9495
  br i1 %cmp38, label %cond.true40, label %cond.false45, !dbg !9493

cond.true40:                                      ; preds = %if.then37
  %29 = load float, float* %max, align 4, !dbg !9496
  %30 = load float, float* %b, align 4, !dbg !9497
  %sub41 = fsub float %29, %30, !dbg !9498
  %31 = load float, float* %delta, align 4, !dbg !9499
  %div42 = fdiv float %sub41, %31, !dbg !9500
  %conv43 = fpext float %div42 to double, !dbg !9501
  %add44 = fadd double 5.000000e+00, %conv43, !dbg !9502
  br label %cond.end50, !dbg !9493

cond.false45:                                     ; preds = %if.then37
  %32 = load float, float* %max, align 4, !dbg !9503
  %33 = load float, float* %g, align 4, !dbg !9504
  %sub46 = fsub float %32, %33, !dbg !9505
  %34 = load float, float* %delta, align 4, !dbg !9506
  %div47 = fdiv float %sub46, %34, !dbg !9507
  %conv48 = fpext float %div47 to double, !dbg !9508
  %sub49 = fsub double 1.000000e+00, %conv48, !dbg !9509
  br label %cond.end50, !dbg !9493

cond.end50:                                       ; preds = %cond.false45, %cond.true40
  %cond51 = phi double [ %add44, %cond.true40 ], [ %sub49, %cond.false45 ], !dbg !9493
  %35 = load double*, double** %hue.addr, align 8, !dbg !9510
  store double %cond51, double* %35, align 8, !dbg !9511
  br label %if.end85, !dbg !9512

if.else:                                          ; preds = %cond.end
  %36 = load float, float* %g, align 4, !dbg !9513
  %37 = load float, float* %max, align 4, !dbg !9515
  %cmp52 = fcmp oeq float %36, %37, !dbg !9516
  br i1 %cmp52, label %if.then54, label %if.else69, !dbg !9517

if.then54:                                        ; preds = %if.else
  %38 = load float, float* %b, align 4, !dbg !9518
  %39 = load float, float* %min, align 4, !dbg !9519
  %cmp55 = fcmp oeq float %38, %39, !dbg !9520
  br i1 %cmp55, label %cond.true57, label %cond.false62, !dbg !9518

cond.true57:                                      ; preds = %if.then54
  %40 = load float, float* %max, align 4, !dbg !9521
  %41 = load float, float* %r, align 4, !dbg !9522
  %sub58 = fsub float %40, %41, !dbg !9523
  %42 = load float, float* %delta, align 4, !dbg !9524
  %div59 = fdiv float %sub58, %42, !dbg !9525
  %conv60 = fpext float %div59 to double, !dbg !9526
  %add61 = fadd double 1.000000e+00, %conv60, !dbg !9527
  br label %cond.end67, !dbg !9518

cond.false62:                                     ; preds = %if.then54
  %43 = load float, float* %max, align 4, !dbg !9528
  %44 = load float, float* %b, align 4, !dbg !9529
  %sub63 = fsub float %43, %44, !dbg !9530
  %45 = load float, float* %delta, align 4, !dbg !9531
  %div64 = fdiv float %sub63, %45, !dbg !9532
  %conv65 = fpext float %div64 to double, !dbg !9533
  %sub66 = fsub double 3.000000e+00, %conv65, !dbg !9534
  br label %cond.end67, !dbg !9518

cond.end67:                                       ; preds = %cond.false62, %cond.true57
  %cond68 = phi double [ %add61, %cond.true57 ], [ %sub66, %cond.false62 ], !dbg !9518
  %46 = load double*, double** %hue.addr, align 8, !dbg !9535
  store double %cond68, double* %46, align 8, !dbg !9536
  br label %if.end84, !dbg !9537

if.else69:                                        ; preds = %if.else
  %47 = load float, float* %r, align 4, !dbg !9538
  %48 = load float, float* %min, align 4, !dbg !9539
  %cmp70 = fcmp oeq float %47, %48, !dbg !9540
  br i1 %cmp70, label %cond.true72, label %cond.false77, !dbg !9538

cond.true72:                                      ; preds = %if.else69
  %49 = load float, float* %max, align 4, !dbg !9541
  %50 = load float, float* %g, align 4, !dbg !9542
  %sub73 = fsub float %49, %50, !dbg !9543
  %51 = load float, float* %delta, align 4, !dbg !9544
  %div74 = fdiv float %sub73, %51, !dbg !9545
  %conv75 = fpext float %div74 to double, !dbg !9546
  %add76 = fadd double 3.000000e+00, %conv75, !dbg !9547
  br label %cond.end82, !dbg !9538

cond.false77:                                     ; preds = %if.else69
  %52 = load float, float* %max, align 4, !dbg !9548
  %53 = load float, float* %r, align 4, !dbg !9549
  %sub78 = fsub float %52, %53, !dbg !9550
  %54 = load float, float* %delta, align 4, !dbg !9551
  %div79 = fdiv float %sub78, %54, !dbg !9552
  %conv80 = fpext float %div79 to double, !dbg !9553
  %sub81 = fsub double 5.000000e+00, %conv80, !dbg !9554
  br label %cond.end82, !dbg !9538

cond.end82:                                       ; preds = %cond.false77, %cond.true72
  %cond83 = phi double [ %add76, %cond.true72 ], [ %sub81, %cond.false77 ], !dbg !9538
  %55 = load double*, double** %hue.addr, align 8, !dbg !9555
  store double %cond83, double* %55, align 8, !dbg !9556
  br label %if.end84

if.end84:                                         ; preds = %cond.end82, %cond.end67
  br label %if.end85

if.end85:                                         ; preds = %if.end84, %cond.end50
  %56 = load double*, double** %hue.addr, align 8, !dbg !9557
  %57 = load double, double* %56, align 8, !dbg !9558
  %div86 = fdiv double %57, 6.000000e+00, !dbg !9558
  store double %div86, double* %56, align 8, !dbg !9558
  br label %return, !dbg !9559

return:                                           ; preds = %if.end85, %if.then
  ret void, !dbg !9559
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !9560 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  %0 = load double, double* %x.addr, align 8, !dbg !9567
  %1 = load double, double* %y.addr, align 8, !dbg !9569
  %cmp = fcmp ogt double %0, %1, !dbg !9570
  br i1 %cmp, label %if.then, label %if.end, !dbg !9571

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !9572
  store double %2, double* %retval, align 8, !dbg !9573
  br label %return, !dbg !9573

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !9574
  store double %3, double* %retval, align 8, !dbg !9575
  br label %return, !dbg !9575

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !9576
  ret double %4, !dbg !9576
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !9577 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !9580, metadata !DIExpression()), !dbg !9581
  %0 = load double, double* %x.addr, align 8, !dbg !9582
  %1 = load double, double* %y.addr, align 8, !dbg !9584
  %cmp = fcmp olt double %0, %1, !dbg !9585
  br i1 %cmp, label %if.then, label %if.end, !dbg !9586

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !9587
  store double %2, double* %retval, align 8, !dbg !9588
  br label %return, !dbg !9588

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !9589
  store double %3, double* %retval, align 8, !dbg !9590
  br label %return, !dbg !9590

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !9591
  ret double %4, !dbg !9591
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @TranslateText(%struct._ImageInfo* %image_info, %struct._Image* %image, i8* %embed_text) #0 !dbg !9592 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %embed_text.addr = alloca i8*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !9593, metadata !DIExpression()), !dbg !9594
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9595, metadata !DIExpression()), !dbg !9596
  store i8* %embed_text, i8** %embed_text.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %embed_text.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9599
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9601
  %1 = load i32, i32* %debug, align 8, !dbg !9601
  %cmp = icmp ne i32 %1, 0, !dbg !9602
  br i1 %cmp, label %if.then, label %if.end, !dbg !9603

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7419, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.43, i64 0, i64 0)), !dbg !9604
  br label %if.end, !dbg !9605

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !9606
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9607
  %4 = load i8*, i8** %embed_text.addr, align 8, !dbg !9608
  %call1 = call i8* @InterpretImageProperties(%struct._ImageInfo* %2, %struct._Image* %3, i8* %4), !dbg !9609
  ret i8* %call1, !dbg !9610
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @TransparentImage(%struct._Image* %image, i64 %target.coerce, i16 zeroext %opacity) #0 !dbg !9611 {
entry:
  %target = alloca %struct._PixelPacket, align 2
  %image.addr = alloca %struct._Image*, align 8
  %opacity.addr = alloca i16, align 2
  %proceed = alloca i32, align 4
  %y = alloca i64, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %0 = bitcast %struct._PixelPacket* %target to i64*
  store i64 %target.coerce, i64* %0, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9614, metadata !DIExpression()), !dbg !9615
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !9616, metadata !DIExpression()), !dbg !9617
  store i16 %opacity, i16* %opacity.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %opacity.addr, metadata !9618, metadata !DIExpression()), !dbg !9619
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !9620, metadata !DIExpression()), !dbg !9621
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9622, metadata !DIExpression()), !dbg !9623
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7473, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i64 0, i64 0)), !dbg !9624
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9625
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 59, !dbg !9627
  %2 = load i32, i32* %debug, align 8, !dbg !9627
  %cmp = icmp ne i32 %2, 0, !dbg !9628
  br i1 %cmp, label %if.then, label %if.end, !dbg !9629

if.then:                                          ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9630
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !9631
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9630
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7475, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !9632
  br label %if.end, !dbg !9633

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9634
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 6, !dbg !9636
  %5 = load i32, i32* %matte, align 8, !dbg !9636
  %cmp2 = icmp eq i32 %5, 0, !dbg !9637
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !9638

if.then3:                                         ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9639
  %call4 = call i32 @SetImageAlphaChannel(%struct._Image* %6, i32 6), !dbg !9640
  br label %if.end5, !dbg !9641

if.end5:                                          ; preds = %if.then3, %if.end
  store i64 0, i64* %y, align 8, !dbg !9642
  br label %for.cond, !dbg !9644

for.cond:                                         ; preds = %for.inc30, %if.end5
  %7 = load i64, i64* %y, align 8, !dbg !9645
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9647
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 8, !dbg !9648
  %9 = load i64, i64* %rows, align 8, !dbg !9648
  %cmp6 = icmp slt i64 %7, %9, !dbg !9649
  br i1 %cmp6, label %for.body, label %for.end32, !dbg !9650

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i64* %x, metadata !9651, metadata !DIExpression()), !dbg !9653
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9654, metadata !DIExpression()), !dbg !9655
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9656
  %11 = load i64, i64* %y, align 8, !dbg !9657
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9658
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 7, !dbg !9659
  %13 = load i64, i64* %columns, align 8, !dbg !9659
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9660
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 58, !dbg !9661
  %call7 = call %struct._PixelPacket* @GetAuthenticPixels(%struct._Image* %10, i64 0, i64 %11, i64 %13, i64 1, %struct._ExceptionInfo* %exception), !dbg !9662
  store %struct._PixelPacket* %call7, %struct._PixelPacket** %q, align 8, !dbg !9663
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9664
  %cmp8 = icmp eq %struct._PixelPacket* %15, null, !dbg !9666
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !9667

if.then9:                                         ; preds = %for.body
  br label %for.end32, !dbg !9668

if.end10:                                         ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !9669
  br label %for.cond11, !dbg !9671

for.cond11:                                       ; preds = %for.inc, %if.end10
  %16 = load i64, i64* %x, align 8, !dbg !9672
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9674
  %columns12 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !9675
  %18 = load i64, i64* %columns12, align 8, !dbg !9675
  %cmp13 = icmp slt i64 %16, %18, !dbg !9676
  br i1 %cmp13, label %for.body14, label %for.end, !dbg !9677

for.body14:                                       ; preds = %for.cond11
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9678
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9681
  %call15 = call i32 @IsColorSimilar(%struct._Image* %19, %struct._PixelPacket* %20, %struct._PixelPacket* %target), !dbg !9682
  %cmp16 = icmp ne i32 %call15, 0, !dbg !9683
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !9684

if.then17:                                        ; preds = %for.body14
  %21 = load i16, i16* %opacity.addr, align 2, !dbg !9685
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9686
  %opacity18 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 3, !dbg !9687
  store i16 %21, i16* %opacity18, align 2, !dbg !9688
  br label %if.end19, !dbg !9686

if.end19:                                         ; preds = %if.then17, %for.body14
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9689
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %23, i32 1, !dbg !9689
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !9689
  br label %for.inc, !dbg !9690

for.inc:                                          ; preds = %if.end19
  %24 = load i64, i64* %x, align 8, !dbg !9691
  %inc = add nsw i64 %24, 1, !dbg !9691
  store i64 %inc, i64* %x, align 8, !dbg !9691
  br label %for.cond11, !dbg !9692, !llvm.loop !9693

for.end:                                          ; preds = %for.cond11
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9695
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9697
  %exception20 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 58, !dbg !9698
  %call21 = call i32 @SyncAuthenticPixels(%struct._Image* %25, %struct._ExceptionInfo* %exception20), !dbg !9699
  %cmp22 = icmp eq i32 %call21, 0, !dbg !9700
  br i1 %cmp22, label %if.then23, label %if.end24, !dbg !9701

if.then23:                                        ; preds = %for.end
  br label %for.end32, !dbg !9702

if.end24:                                         ; preds = %for.end
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9703
  %28 = load i64, i64* %y, align 8, !dbg !9704
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9705
  %rows25 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 8, !dbg !9706
  %30 = load i64, i64* %rows25, align 8, !dbg !9706
  %call26 = call i32 @SetImageProgress(%struct._Image* %27, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.44, i64 0, i64 0), i64 %28, i64 %30), !dbg !9707
  store i32 %call26, i32* %proceed, align 4, !dbg !9708
  %31 = load i32, i32* %proceed, align 4, !dbg !9709
  %cmp27 = icmp eq i32 %31, 0, !dbg !9711
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !9712

if.then28:                                        ; preds = %if.end24
  br label %for.end32, !dbg !9713

if.end29:                                         ; preds = %if.end24
  br label %for.inc30, !dbg !9714

for.inc30:                                        ; preds = %if.end29
  %32 = load i64, i64* %y, align 8, !dbg !9715
  %inc31 = add nsw i64 %32, 1, !dbg !9715
  store i64 %inc31, i64* %y, align 8, !dbg !9715
  br label %for.cond, !dbg !9716, !llvm.loop !9717

for.end32:                                        ; preds = %if.then28, %if.then23, %if.then9, %for.cond
  ret i32 1, !dbg !9719
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @UnshiftImageList(%struct._Image** %images, %struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !9720 {
entry:
  %images.addr = alloca %struct._Image**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image** %images, %struct._Image*** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %images.addr, metadata !9721, metadata !DIExpression()), !dbg !9722
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9723, metadata !DIExpression()), !dbg !9724
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9725, metadata !DIExpression()), !dbg !9726
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7539, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0)), !dbg !9727
  %0 = load %struct._Image**, %struct._Image*** %images.addr, align 8, !dbg !9728
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9729
  %2 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9730
  %call1 = call %struct._Image* @CloneImageList(%struct._Image* %1, %struct._ExceptionInfo* %2), !dbg !9731
  call void @PrependImageToList(%struct._Image** %0, %struct._Image* %call1), !dbg !9732
  ret i32 1, !dbg !9733
}

declare dso_local void @PrependImageToList(%struct._Image**, %struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i16 @ValidateColormapIndex(%struct._Image* %image, i64 %index) #0 !dbg !9734 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %index.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9737, metadata !DIExpression()), !dbg !9738
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !9739, metadata !DIExpression()), !dbg !9740
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9741
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9743
  %1 = load i32, i32* %debug, align 8, !dbg !9743
  %cmp = icmp ne i32 %1, 0, !dbg !9744
  br i1 %cmp, label %if.then, label %if.end, !dbg !9745

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 64, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7581, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.45, i64 0, i64 0)), !dbg !9746
  br label %if.end, !dbg !9747

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9748
  %3 = load i64, i64* %index.addr, align 8, !dbg !9749
  %call1 = call zeroext i16 @ConstrainColormapIndex(%struct._Image* %2, i64 %3), !dbg !9750
  ret i16 %call1, !dbg !9751
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ConstrainColormapIndex(%struct._Image* %image, i64 %index) #0 !dbg !9752 {
entry:
  %retval = alloca i16, align 2
  %image.addr = alloca %struct._Image*, align 8
  %index.addr = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9754, metadata !DIExpression()), !dbg !9755
  store i64 %index, i64* %index.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %index.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  %0 = load i64, i64* %index.addr, align 8, !dbg !9758
  %1 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9760
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %1, i32 0, i32 10, !dbg !9761
  %2 = load i64, i64* %colors, align 8, !dbg !9761
  %cmp = icmp ult i64 %0, %2, !dbg !9762
  br i1 %cmp, label %if.then, label %if.end, !dbg !9763

if.then:                                          ; preds = %entry
  %3 = load i64, i64* %index.addr, align 8, !dbg !9764
  %conv = trunc i64 %3 to i16, !dbg !9765
  store i16 %conv, i16* %retval, align 2, !dbg !9766
  br label %return, !dbg !9766

if.end:                                           ; preds = %entry
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9767
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 58, !dbg !9768
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9769
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 53, !dbg !9770
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9769
  %call = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 34, i32 425, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay), !dbg !9771
  store i16 0, i16* %retval, align 2, !dbg !9772
  br label %return, !dbg !9772

return:                                           ; preds = %if.end, %if.then
  %6 = load i16, i16* %retval, align 2, !dbg !9773
  ret i16 %6, !dbg !9773
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @ZoomImage(%struct._Image* %image, i64 %columns, i64 %rows, %struct._ExceptionInfo* %exception) #0 !dbg !9774 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %columns.addr = alloca i64, align 8
  %rows.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %zoom_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  store i64 %columns, i64* %columns.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %columns.addr, metadata !9779, metadata !DIExpression()), !dbg !9780
  store i64 %rows, i64* %rows.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %rows.addr, metadata !9781, metadata !DIExpression()), !dbg !9782
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata %struct._Image** %zoom_image, metadata !9785, metadata !DIExpression()), !dbg !9786
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9787
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !9789
  %1 = load i32, i32* %debug, align 8, !dbg !9789
  %cmp = icmp ne i32 %1, 0, !dbg !9790
  br i1 %cmp, label %if.then, label %if.end, !dbg !9791

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9792
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !9793
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9792
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 7633, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* %arraydecay), !dbg !9794
  br label %if.end, !dbg !9795

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9796
  %4 = load i64, i64* %columns.addr, align 8, !dbg !9797
  %5 = load i64, i64* %rows.addr, align 8, !dbg !9798
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9799
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 32, !dbg !9800
  %7 = load i32, i32* %filter, align 8, !dbg !9800
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9801
  %blur = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 30, !dbg !9802
  %9 = load double, double* %blur, align 8, !dbg !9802
  %10 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !9803
  %call1 = call %struct._Image* @ResizeImage(%struct._Image* %3, i64 %4, i64 %5, i32 %7, double %9, %struct._ExceptionInfo* %10), !dbg !9804
  store %struct._Image* %call1, %struct._Image** %zoom_image, align 8, !dbg !9805
  %11 = load %struct._Image*, %struct._Image** %zoom_image, align 8, !dbg !9806
  ret %struct._Image* %11, !dbg !9807
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickOver_(float %p, float %alpha, float %q, float %beta) #0 !dbg !9808 {
entry:
  %p.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %beta.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !9811, metadata !DIExpression()), !dbg !9812
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !9813, metadata !DIExpression()), !dbg !9814
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !9815, metadata !DIExpression()), !dbg !9816
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !9817, metadata !DIExpression()), !dbg !9818
  %0 = load float, float* %alpha.addr, align 4, !dbg !9819
  %conv = fpext float %0 to double, !dbg !9819
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !9820
  %sub = fsub double 1.000000e+00, %mul, !dbg !9821
  %1 = load float, float* %p.addr, align 4, !dbg !9822
  %conv1 = fpext float %1 to double, !dbg !9822
  %mul2 = fmul double %sub, %conv1, !dbg !9823
  %2 = load float, float* %beta.addr, align 4, !dbg !9824
  %conv3 = fpext float %2 to double, !dbg !9824
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !9825
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !9826
  %3 = load float, float* %q.addr, align 4, !dbg !9827
  %conv6 = fpext float %3 to double, !dbg !9827
  %mul7 = fmul double %sub5, %conv6, !dbg !9828
  %mul8 = fmul double %mul7, 0x3EF0001000100010, !dbg !9829
  %4 = load float, float* %alpha.addr, align 4, !dbg !9830
  %conv9 = fpext float %4 to double, !dbg !9830
  %mul10 = fmul double %mul8, %conv9, !dbg !9831
  %add = fadd double %mul2, %mul10, !dbg !9832
  %conv11 = fptrunc double %add to float, !dbg !9833
  ret float %conv11, !dbg !9834
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #3

declare dso_local float @EncodePixelGamma(float) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind willreturn }
attributes #11 = { nounwind readonly }
attributes #12 = { allocsize(0,1) }
attributes #13 = { nounwind readnone }
attributes #14 = { noreturn }
attributes #15 = { allocsize(0) }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!1286, !1287, !1288}
!llvm.ident = !{!1289}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "monitor_handler", scope: !2, file: !3, line: 100, type: !1053, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !799, globals: !1254, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "magick/deprecate.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !79, !84, !89, !126, !151, !163, !171, !176, !211, !221, !227, !242, !313, !321, !327, !344, !358, !370, !395, !416, !423, !456, !478, !513, !541, !547, !553, !558, !564, !570, !577, !585, !598, !604, !610, !614, !619, !627, !642, !653, !672, !679, !690, !720, !726, !731, !772, !784}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6, line: 28, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78}
!9 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!11 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!12 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!13 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!14 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!15 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!16 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!17 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!18 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!19 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!20 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!21 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!22 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!23 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!24 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!25 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!26 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!27 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!28 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!29 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!30 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!31 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!32 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!33 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!34 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!35 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!36 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!37 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!38 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!39 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!40 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!41 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!42 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!43 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!44 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!45 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!46 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!47 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!48 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!49 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!50 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!51 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!52 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!53 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!54 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!55 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!56 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!57 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!58 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!59 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!60 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!61 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!62 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!63 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!64 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!65 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!66 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!67 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!68 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!69 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!70 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!71 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!72 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!73 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!74 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!75 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!76 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!77 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!78 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !80, line: 211, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!81 = !{!82, !83}
!82 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!84 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !80, line: 204, baseType: !7, size: 32, elements: !85)
!85 = !{!86, !87, !88}
!86 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!89 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !90, line: 25, baseType: !7, size: 32, elements: !91)
!90 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!91 = !{!92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125}
!92 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!93 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!94 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!95 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!96 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!97 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!98 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!99 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!100 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!101 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!102 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!103 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!104 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!105 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!106 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!107 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!108 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!109 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!110 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!111 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!112 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!113 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!114 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!115 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!116 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!117 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!118 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!119 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!120 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!121 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!122 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!123 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!124 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!125 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!126 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !127, line: 25, baseType: !7, size: 32, elements: !128)
!127 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!128 = !{!129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150}
!129 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!135 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!136 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!137 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!138 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!139 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!140 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!141 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!142 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!143 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!144 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!145 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!146 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!147 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!148 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!149 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!150 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 75, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!153 = !{!154, !155, !156, !157, !158, !159, !160, !161, !162}
!154 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!155 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!156 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!157 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!158 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!161 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!162 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !164, line: 42, baseType: !7, size: 32, elements: !165)
!164 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!165 = !{!166, !167, !168, !169, !170}
!166 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!167 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!168 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!169 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!170 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 88, baseType: !7, size: 32, elements: !172)
!172 = !{!173, !174, !175}
!173 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!174 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!175 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !177, line: 32, baseType: !7, size: 32, elements: !178)
!177 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!178 = !{!179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210}
!179 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!180 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!181 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!182 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!183 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!184 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!185 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!186 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!187 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!188 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!189 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!190 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!191 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!192 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!193 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!194 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!195 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!196 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!197 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!198 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!199 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!200 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!201 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!202 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!203 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!204 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!205 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!206 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!207 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!208 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!209 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!210 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!211 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 63, baseType: !7, size: 32, elements: !212)
!212 = !{!213, !214, !215, !216, !217, !218, !219, !220}
!213 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!214 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!215 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!216 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!217 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!218 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!219 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!220 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 30, baseType: !7, size: 32, elements: !223)
!222 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!223 = !{!224, !225, !226}
!224 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!225 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!226 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!227 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 77, baseType: !7, size: 32, elements: !229)
!228 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!229 = !{!230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241}
!230 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!231 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!232 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!233 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!234 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!235 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!236 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!237 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!238 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!239 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!240 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!241 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!242 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !243, line: 25, baseType: !7, size: 32, elements: !244)
!243 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!244 = !{!245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312}
!245 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!248 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!249 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!250 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!251 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!252 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!253 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!254 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!255 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!256 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!257 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!258 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!259 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!260 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!261 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!262 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!263 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!264 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!265 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!266 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!267 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!268 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!269 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!270 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!271 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!272 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!273 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!274 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!275 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!276 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!277 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!278 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!279 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!280 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!281 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!282 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!283 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!284 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!285 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!286 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!287 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!288 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!289 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!290 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!291 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!292 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!293 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!294 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!295 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!296 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!297 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!298 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!299 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!300 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!301 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!302 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!303 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!304 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!305 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!306 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!307 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!308 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!309 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!310 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!311 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!312 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!313 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !314, line: 25, baseType: !7, size: 32, elements: !315)
!314 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!315 = !{!316, !317, !318, !319, !320}
!316 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!317 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!318 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!319 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!320 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!321 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !322, line: 25, baseType: !7, size: 32, elements: !323)
!322 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!323 = !{!324, !325, !326}
!324 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!325 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!326 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !328, line: 31, baseType: !7, size: 32, elements: !329)
!328 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!329 = !{!330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343}
!330 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!334 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!335 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!336 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!337 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!338 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!339 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!340 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!341 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!342 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!343 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!344 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 47, baseType: !7, size: 32, elements: !345)
!345 = !{!346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357}
!346 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!347 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!348 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!349 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!350 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!351 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!352 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!353 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!354 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!355 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!356 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!357 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!358 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !328, line: 67, baseType: !7, size: 32, elements: !359)
!359 = !{!360, !361, !362, !363, !364, !365, !366, !367, !368, !369}
!360 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!361 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!362 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!363 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!366 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!367 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!368 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!369 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!370 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !371, line: 34, baseType: !7, size: 32, elements: !372)
!371 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!372 = !{!373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394}
!373 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!374 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!375 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!376 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!377 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!378 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!379 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!380 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!381 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!382 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!383 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!384 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!385 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!386 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!387 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!388 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!389 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!390 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!391 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!392 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!393 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!394 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!395 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !396, line: 27, baseType: !7, size: 32, elements: !397)
!396 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!397 = !{!398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415}
!398 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!399 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!400 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!401 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!402 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!403 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!404 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!405 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!406 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!407 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!408 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!409 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!410 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!411 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!412 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!413 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!414 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!415 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!416 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !417, line: 27, baseType: !7, size: 32, elements: !418)
!417 = !DIFile(filename: "./magick/quantize.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!418 = !{!419, !420, !421, !422}
!419 = !DIEnumerator(name: "UndefinedDitherMethod", value: 0, isUnsigned: true)
!420 = !DIEnumerator(name: "NoDitherMethod", value: 1, isUnsigned: true)
!421 = !DIEnumerator(name: "RiemersmaDitherMethod", value: 2, isUnsigned: true)
!422 = !DIEnumerator(name: "FloydSteinbergDitherMethod", value: 3, isUnsigned: true)
!423 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !424, line: 27, baseType: !7, size: 32, elements: !425)
!424 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455}
!426 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!427 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!428 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!429 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!430 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!431 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!432 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!433 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!434 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!435 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!436 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!437 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!438 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!439 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!440 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!441 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!442 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!443 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!444 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!445 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!446 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!447 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!448 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!449 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!450 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!451 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!452 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!453 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!454 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!455 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!456 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !80, line: 177, baseType: !7, size: 32, elements: !457)
!457 = !{!458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477}
!458 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!459 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!460 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!461 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!462 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!463 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!464 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!465 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!466 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!467 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!468 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!469 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!470 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!471 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!472 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!473 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!474 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!475 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!476 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!477 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!478 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !479, line: 68, baseType: !7, size: 32, elements: !480)
!479 = !DIFile(filename: "./magick/statistic.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!480 = !{!481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512}
!481 = !DIEnumerator(name: "UndefinedEvaluateOperator", value: 0, isUnsigned: true)
!482 = !DIEnumerator(name: "AddEvaluateOperator", value: 1, isUnsigned: true)
!483 = !DIEnumerator(name: "AndEvaluateOperator", value: 2, isUnsigned: true)
!484 = !DIEnumerator(name: "DivideEvaluateOperator", value: 3, isUnsigned: true)
!485 = !DIEnumerator(name: "LeftShiftEvaluateOperator", value: 4, isUnsigned: true)
!486 = !DIEnumerator(name: "MaxEvaluateOperator", value: 5, isUnsigned: true)
!487 = !DIEnumerator(name: "MinEvaluateOperator", value: 6, isUnsigned: true)
!488 = !DIEnumerator(name: "MultiplyEvaluateOperator", value: 7, isUnsigned: true)
!489 = !DIEnumerator(name: "OrEvaluateOperator", value: 8, isUnsigned: true)
!490 = !DIEnumerator(name: "RightShiftEvaluateOperator", value: 9, isUnsigned: true)
!491 = !DIEnumerator(name: "SetEvaluateOperator", value: 10, isUnsigned: true)
!492 = !DIEnumerator(name: "SubtractEvaluateOperator", value: 11, isUnsigned: true)
!493 = !DIEnumerator(name: "XorEvaluateOperator", value: 12, isUnsigned: true)
!494 = !DIEnumerator(name: "PowEvaluateOperator", value: 13, isUnsigned: true)
!495 = !DIEnumerator(name: "LogEvaluateOperator", value: 14, isUnsigned: true)
!496 = !DIEnumerator(name: "ThresholdEvaluateOperator", value: 15, isUnsigned: true)
!497 = !DIEnumerator(name: "ThresholdBlackEvaluateOperator", value: 16, isUnsigned: true)
!498 = !DIEnumerator(name: "ThresholdWhiteEvaluateOperator", value: 17, isUnsigned: true)
!499 = !DIEnumerator(name: "GaussianNoiseEvaluateOperator", value: 18, isUnsigned: true)
!500 = !DIEnumerator(name: "ImpulseNoiseEvaluateOperator", value: 19, isUnsigned: true)
!501 = !DIEnumerator(name: "LaplacianNoiseEvaluateOperator", value: 20, isUnsigned: true)
!502 = !DIEnumerator(name: "MultiplicativeNoiseEvaluateOperator", value: 21, isUnsigned: true)
!503 = !DIEnumerator(name: "PoissonNoiseEvaluateOperator", value: 22, isUnsigned: true)
!504 = !DIEnumerator(name: "UniformNoiseEvaluateOperator", value: 23, isUnsigned: true)
!505 = !DIEnumerator(name: "CosineEvaluateOperator", value: 24, isUnsigned: true)
!506 = !DIEnumerator(name: "SineEvaluateOperator", value: 25, isUnsigned: true)
!507 = !DIEnumerator(name: "AddModulusEvaluateOperator", value: 26, isUnsigned: true)
!508 = !DIEnumerator(name: "MeanEvaluateOperator", value: 27, isUnsigned: true)
!509 = !DIEnumerator(name: "AbsEvaluateOperator", value: 28, isUnsigned: true)
!510 = !DIEnumerator(name: "ExponentialEvaluateOperator", value: 29, isUnsigned: true)
!511 = !DIEnumerator(name: "MedianEvaluateOperator", value: 30, isUnsigned: true)
!512 = !DIEnumerator(name: "SumEvaluateOperator", value: 31, isUnsigned: true)
!513 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !228, line: 25, baseType: !7, size: 32, elements: !514)
!514 = !{!515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540}
!515 = !DIEnumerator(name: "NoValue", value: 0, isUnsigned: true)
!516 = !DIEnumerator(name: "XValue", value: 1, isUnsigned: true)
!517 = !DIEnumerator(name: "XiValue", value: 1, isUnsigned: true)
!518 = !DIEnumerator(name: "YValue", value: 2, isUnsigned: true)
!519 = !DIEnumerator(name: "PsiValue", value: 2, isUnsigned: true)
!520 = !DIEnumerator(name: "WidthValue", value: 4, isUnsigned: true)
!521 = !DIEnumerator(name: "RhoValue", value: 4, isUnsigned: true)
!522 = !DIEnumerator(name: "HeightValue", value: 8, isUnsigned: true)
!523 = !DIEnumerator(name: "SigmaValue", value: 8, isUnsigned: true)
!524 = !DIEnumerator(name: "ChiValue", value: 16, isUnsigned: true)
!525 = !DIEnumerator(name: "XiNegative", value: 32, isUnsigned: true)
!526 = !DIEnumerator(name: "XNegative", value: 32, isUnsigned: true)
!527 = !DIEnumerator(name: "PsiNegative", value: 64, isUnsigned: true)
!528 = !DIEnumerator(name: "YNegative", value: 64, isUnsigned: true)
!529 = !DIEnumerator(name: "ChiNegative", value: 128, isUnsigned: true)
!530 = !DIEnumerator(name: "PercentValue", value: 4096, isUnsigned: true)
!531 = !DIEnumerator(name: "AspectValue", value: 8192, isUnsigned: true)
!532 = !DIEnumerator(name: "NormalizeValue", value: 8192, isUnsigned: true)
!533 = !DIEnumerator(name: "LessValue", value: 16384, isUnsigned: true)
!534 = !DIEnumerator(name: "GreaterValue", value: 32768, isUnsigned: true)
!535 = !DIEnumerator(name: "MinimumValue", value: 65536, isUnsigned: true)
!536 = !DIEnumerator(name: "CorrelateNormalizeValue", value: 65536, isUnsigned: true)
!537 = !DIEnumerator(name: "AreaValue", value: 131072, isUnsigned: true)
!538 = !DIEnumerator(name: "DecimalValue", value: 262144, isUnsigned: true)
!539 = !DIEnumerator(name: "SeparatorValue", value: 524288, isUnsigned: true)
!540 = !DIEnumerator(name: "AllValues", value: 2147483647, isUnsigned: true)
!541 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 70, baseType: !7, size: 32, elements: !543)
!542 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!543 = !{!544, !545, !546}
!544 = !DIEnumerator(name: "UndefinedGradient", value: 0, isUnsigned: true)
!545 = !DIEnumerator(name: "LinearGradient", value: 1, isUnsigned: true)
!546 = !DIEnumerator(name: "RadialGradient", value: 2, isUnsigned: true)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 129, baseType: !7, size: 32, elements: !548)
!548 = !{!549, !550, !551, !552}
!549 = !DIEnumerator(name: "UndefinedSpread", value: 0, isUnsigned: true)
!550 = !DIEnumerator(name: "PadSpread", value: 1, isUnsigned: true)
!551 = !DIEnumerator(name: "ReflectSpread", value: 2, isUnsigned: true)
!552 = !DIEnumerator(name: "RepeatSpread", value: 3, isUnsigned: true)
!553 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 62, baseType: !7, size: 32, elements: !554)
!554 = !{!555, !556, !557}
!555 = !DIEnumerator(name: "UndefinedRule", value: 0, isUnsigned: true)
!556 = !DIEnumerator(name: "EvenOddRule", value: 1, isUnsigned: true)
!557 = !DIEnumerator(name: "NonZeroRule", value: 2, isUnsigned: true)
!558 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 77, baseType: !7, size: 32, elements: !559)
!559 = !{!560, !561, !562, !563}
!560 = !DIEnumerator(name: "UndefinedCap", value: 0, isUnsigned: true)
!561 = !DIEnumerator(name: "ButtCap", value: 1, isUnsigned: true)
!562 = !DIEnumerator(name: "RoundCap", value: 2, isUnsigned: true)
!563 = !DIEnumerator(name: "SquareCap", value: 3, isUnsigned: true)
!564 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 85, baseType: !7, size: 32, elements: !565)
!565 = !{!566, !567, !568, !569}
!566 = !DIEnumerator(name: "UndefinedJoin", value: 0, isUnsigned: true)
!567 = !DIEnumerator(name: "MiterJoin", value: 1, isUnsigned: true)
!568 = !DIEnumerator(name: "RoundJoin", value: 2, isUnsigned: true)
!569 = !DIEnumerator(name: "BevelJoin", value: 3, isUnsigned: true)
!570 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 46, baseType: !7, size: 32, elements: !571)
!571 = !{!572, !573, !574, !575, !576}
!572 = !DIEnumerator(name: "UndefinedDecoration", value: 0, isUnsigned: true)
!573 = !DIEnumerator(name: "NoDecoration", value: 1, isUnsigned: true)
!574 = !DIEnumerator(name: "UnderlineDecoration", value: 2, isUnsigned: true)
!575 = !DIEnumerator(name: "OverlineDecoration", value: 3, isUnsigned: true)
!576 = !DIEnumerator(name: "LineThroughDecoration", value: 4, isUnsigned: true)
!577 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !578, line: 40, baseType: !7, size: 32, elements: !579)
!578 = !DIFile(filename: "./magick/type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!579 = !{!580, !581, !582, !583, !584}
!580 = !DIEnumerator(name: "UndefinedStyle", value: 0, isUnsigned: true)
!581 = !DIEnumerator(name: "NormalStyle", value: 1, isUnsigned: true)
!582 = !DIEnumerator(name: "ItalicStyle", value: 2, isUnsigned: true)
!583 = !DIEnumerator(name: "ObliqueStyle", value: 3, isUnsigned: true)
!584 = !DIEnumerator(name: "AnyStyle", value: 4, isUnsigned: true)
!585 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !578, line: 25, baseType: !7, size: 32, elements: !586)
!586 = !{!587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597}
!587 = !DIEnumerator(name: "UndefinedStretch", value: 0, isUnsigned: true)
!588 = !DIEnumerator(name: "NormalStretch", value: 1, isUnsigned: true)
!589 = !DIEnumerator(name: "UltraCondensedStretch", value: 2, isUnsigned: true)
!590 = !DIEnumerator(name: "ExtraCondensedStretch", value: 3, isUnsigned: true)
!591 = !DIEnumerator(name: "CondensedStretch", value: 4, isUnsigned: true)
!592 = !DIEnumerator(name: "SemiCondensedStretch", value: 5, isUnsigned: true)
!593 = !DIEnumerator(name: "SemiExpandedStretch", value: 6, isUnsigned: true)
!594 = !DIEnumerator(name: "ExpandedStretch", value: 7, isUnsigned: true)
!595 = !DIEnumerator(name: "ExtraExpandedStretch", value: 8, isUnsigned: true)
!596 = !DIEnumerator(name: "UltraExpandedStretch", value: 9, isUnsigned: true)
!597 = !DIEnumerator(name: "AnyStretch", value: 10, isUnsigned: true)
!598 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 30, baseType: !7, size: 32, elements: !599)
!599 = !{!600, !601, !602, !603}
!600 = !DIEnumerator(name: "UndefinedAlign", value: 0, isUnsigned: true)
!601 = !DIEnumerator(name: "LeftAlign", value: 1, isUnsigned: true)
!602 = !DIEnumerator(name: "CenterAlign", value: 2, isUnsigned: true)
!603 = !DIEnumerator(name: "RightAlign", value: 3, isUnsigned: true)
!604 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 38, baseType: !7, size: 32, elements: !605)
!605 = !{!606, !607, !608, !609}
!606 = !DIEnumerator(name: "UndefinedPathUnits", value: 0, isUnsigned: true)
!607 = !DIEnumerator(name: "UserSpace", value: 1, isUnsigned: true)
!608 = !DIEnumerator(name: "UserSpaceOnUse", value: 2, isUnsigned: true)
!609 = !DIEnumerator(name: "ObjectBoundingBox", value: 3, isUnsigned: true)
!610 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 123, baseType: !7, size: 32, elements: !611)
!611 = !{!612, !613}
!612 = !DIEnumerator(name: "UndefinedReference", value: 0, isUnsigned: true)
!613 = !DIEnumerator(name: "GradientReference", value: 1, isUnsigned: true)
!614 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 55, baseType: !7, size: 32, elements: !615)
!615 = !{!616, !617, !618}
!616 = !DIEnumerator(name: "UndefinedDirection", value: 0, isUnsigned: true)
!617 = !DIEnumerator(name: "RightToLeftDirection", value: 1, isUnsigned: true)
!618 = !DIEnumerator(name: "LeftToRightDirection", value: 2, isUnsigned: true)
!619 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !542, line: 93, baseType: !7, size: 32, elements: !620)
!620 = !{!621, !622, !623, !624, !625, !626}
!621 = !DIEnumerator(name: "UndefinedMethod", value: 0, isUnsigned: true)
!622 = !DIEnumerator(name: "PointMethod", value: 1, isUnsigned: true)
!623 = !DIEnumerator(name: "ReplaceMethod", value: 2, isUnsigned: true)
!624 = !DIEnumerator(name: "FloodfillMethod", value: 3, isUnsigned: true)
!625 = !DIEnumerator(name: "FillToBorderMethod", value: 4, isUnsigned: true)
!626 = !DIEnumerator(name: "ResetMethod", value: 5, isUnsigned: true)
!627 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 30, baseType: !7, size: 32, elements: !628)
!628 = !{!629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641}
!629 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!630 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!631 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!632 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!633 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!634 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!635 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!636 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!637 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!638 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!639 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!640 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!641 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!642 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !643, line: 25, baseType: !7, size: 32, elements: !644)
!643 = !DIFile(filename: "./magick/constitute.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!644 = !{!645, !646, !647, !648, !649, !650, !651, !652}
!645 = !DIEnumerator(name: "UndefinedPixel", value: 0, isUnsigned: true)
!646 = !DIEnumerator(name: "CharPixel", value: 1, isUnsigned: true)
!647 = !DIEnumerator(name: "DoublePixel", value: 2, isUnsigned: true)
!648 = !DIEnumerator(name: "FloatPixel", value: 3, isUnsigned: true)
!649 = !DIEnumerator(name: "IntegerPixel", value: 4, isUnsigned: true)
!650 = !DIEnumerator(name: "LongPixel", value: 5, isUnsigned: true)
!651 = !DIEnumerator(name: "QuantumPixel", value: 6, isUnsigned: true)
!652 = !DIEnumerator(name: "ShortPixel", value: 7, isUnsigned: true)
!653 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !314, line: 34, baseType: !7, size: 32, elements: !654)
!654 = !{!655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!655 = !DIEnumerator(name: "UndefinedLayer", value: 0, isUnsigned: true)
!656 = !DIEnumerator(name: "CoalesceLayer", value: 1, isUnsigned: true)
!657 = !DIEnumerator(name: "CompareAnyLayer", value: 2, isUnsigned: true)
!658 = !DIEnumerator(name: "CompareClearLayer", value: 3, isUnsigned: true)
!659 = !DIEnumerator(name: "CompareOverlayLayer", value: 4, isUnsigned: true)
!660 = !DIEnumerator(name: "DisposeLayer", value: 5, isUnsigned: true)
!661 = !DIEnumerator(name: "OptimizeLayer", value: 6, isUnsigned: true)
!662 = !DIEnumerator(name: "OptimizeImageLayer", value: 7, isUnsigned: true)
!663 = !DIEnumerator(name: "OptimizePlusLayer", value: 8, isUnsigned: true)
!664 = !DIEnumerator(name: "OptimizeTransLayer", value: 9, isUnsigned: true)
!665 = !DIEnumerator(name: "RemoveDupsLayer", value: 10, isUnsigned: true)
!666 = !DIEnumerator(name: "RemoveZeroLayer", value: 11, isUnsigned: true)
!667 = !DIEnumerator(name: "CompositeLayer", value: 12, isUnsigned: true)
!668 = !DIEnumerator(name: "MergeLayer", value: 13, isUnsigned: true)
!669 = !DIEnumerator(name: "FlattenLayer", value: 14, isUnsigned: true)
!670 = !DIEnumerator(name: "MosaicLayer", value: 15, isUnsigned: true)
!671 = !DIEnumerator(name: "TrimBoundsLayer", value: 16, isUnsigned: true)
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 25, baseType: !7, size: 32, elements: !674)
!673 = !DIFile(filename: "./magick/registry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!674 = !{!675, !676, !677, !678}
!675 = !DIEnumerator(name: "UndefinedRegistryType", value: 0, isUnsigned: true)
!676 = !DIEnumerator(name: "ImageRegistryType", value: 1, isUnsigned: true)
!677 = !DIEnumerator(name: "ImageInfoRegistryType", value: 2, isUnsigned: true)
!678 = !DIEnumerator(name: "StringRegistryType", value: 3, isUnsigned: true)
!679 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !479, line: 113, baseType: !7, size: 32, elements: !680)
!680 = !{!681, !682, !683, !684, !685, !686, !687, !688, !689}
!681 = !DIEnumerator(name: "UndefinedStatistic", value: 0, isUnsigned: true)
!682 = !DIEnumerator(name: "GradientStatistic", value: 1, isUnsigned: true)
!683 = !DIEnumerator(name: "MaximumStatistic", value: 2, isUnsigned: true)
!684 = !DIEnumerator(name: "MeanStatistic", value: 3, isUnsigned: true)
!685 = !DIEnumerator(name: "MedianStatistic", value: 4, isUnsigned: true)
!686 = !DIEnumerator(name: "MinimumStatistic", value: 5, isUnsigned: true)
!687 = !DIEnumerator(name: "ModeStatistic", value: 6, isUnsigned: true)
!688 = !DIEnumerator(name: "NonpeakStatistic", value: 7, isUnsigned: true)
!689 = !DIEnumerator(name: "StandardDeviationStatistic", value: 8, isUnsigned: true)
!690 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 52, baseType: !7, size: 32, elements: !691)
!691 = !{!692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719}
!692 = !DIEnumerator(name: "UndefinedQuantum", value: 0, isUnsigned: true)
!693 = !DIEnumerator(name: "AlphaQuantum", value: 1, isUnsigned: true)
!694 = !DIEnumerator(name: "BlackQuantum", value: 2, isUnsigned: true)
!695 = !DIEnumerator(name: "BlueQuantum", value: 3, isUnsigned: true)
!696 = !DIEnumerator(name: "CMYKAQuantum", value: 4, isUnsigned: true)
!697 = !DIEnumerator(name: "CMYKQuantum", value: 5, isUnsigned: true)
!698 = !DIEnumerator(name: "CyanQuantum", value: 6, isUnsigned: true)
!699 = !DIEnumerator(name: "GrayAlphaQuantum", value: 7, isUnsigned: true)
!700 = !DIEnumerator(name: "GrayQuantum", value: 8, isUnsigned: true)
!701 = !DIEnumerator(name: "GreenQuantum", value: 9, isUnsigned: true)
!702 = !DIEnumerator(name: "IndexAlphaQuantum", value: 10, isUnsigned: true)
!703 = !DIEnumerator(name: "IndexQuantum", value: 11, isUnsigned: true)
!704 = !DIEnumerator(name: "MagentaQuantum", value: 12, isUnsigned: true)
!705 = !DIEnumerator(name: "OpacityQuantum", value: 13, isUnsigned: true)
!706 = !DIEnumerator(name: "RedQuantum", value: 14, isUnsigned: true)
!707 = !DIEnumerator(name: "RGBAQuantum", value: 15, isUnsigned: true)
!708 = !DIEnumerator(name: "BGRAQuantum", value: 16, isUnsigned: true)
!709 = !DIEnumerator(name: "RGBOQuantum", value: 17, isUnsigned: true)
!710 = !DIEnumerator(name: "RGBQuantum", value: 18, isUnsigned: true)
!711 = !DIEnumerator(name: "YellowQuantum", value: 19, isUnsigned: true)
!712 = !DIEnumerator(name: "GrayPadQuantum", value: 20, isUnsigned: true)
!713 = !DIEnumerator(name: "RGBPadQuantum", value: 21, isUnsigned: true)
!714 = !DIEnumerator(name: "CbYCrYQuantum", value: 22, isUnsigned: true)
!715 = !DIEnumerator(name: "CbYCrQuantum", value: 23, isUnsigned: true)
!716 = !DIEnumerator(name: "CbYCrAQuantum", value: 24, isUnsigned: true)
!717 = !DIEnumerator(name: "CMYKOQuantum", value: 25, isUnsigned: true)
!718 = !DIEnumerator(name: "BGRQuantum", value: 26, isUnsigned: true)
!719 = !DIEnumerator(name: "BGROQuantum", value: 27, isUnsigned: true)
!720 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 44, baseType: !7, size: 32, elements: !721)
!721 = !{!722, !723, !724, !725}
!722 = !DIEnumerator(name: "UndefinedQuantumFormat", value: 0, isUnsigned: true)
!723 = !DIEnumerator(name: "FloatingPointQuantumFormat", value: 1, isUnsigned: true)
!724 = !DIEnumerator(name: "SignedQuantumFormat", value: 2, isUnsigned: true)
!725 = !DIEnumerator(name: "UnsignedQuantumFormat", value: 3, isUnsigned: true)
!726 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !222, line: 37, baseType: !7, size: 32, elements: !727)
!727 = !{!728, !729, !730}
!728 = !DIEnumerator(name: "UndefinedQuantumAlpha", value: 0, isUnsigned: true)
!729 = !DIEnumerator(name: "AssociatedQuantumAlpha", value: 1, isUnsigned: true)
!730 = !DIEnumerator(name: "DisassociatedQuantumAlpha", value: 2, isUnsigned: true)
!731 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !732, line: 27, baseType: !7, size: 32, elements: !733)
!732 = !DIFile(filename: "./magick/morphology.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!733 = !{!734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!734 = !DIEnumerator(name: "UndefinedKernel", value: 0, isUnsigned: true)
!735 = !DIEnumerator(name: "UnityKernel", value: 1, isUnsigned: true)
!736 = !DIEnumerator(name: "GaussianKernel", value: 2, isUnsigned: true)
!737 = !DIEnumerator(name: "DoGKernel", value: 3, isUnsigned: true)
!738 = !DIEnumerator(name: "LoGKernel", value: 4, isUnsigned: true)
!739 = !DIEnumerator(name: "BlurKernel", value: 5, isUnsigned: true)
!740 = !DIEnumerator(name: "CometKernel", value: 6, isUnsigned: true)
!741 = !DIEnumerator(name: "LaplacianKernel", value: 7, isUnsigned: true)
!742 = !DIEnumerator(name: "SobelKernel", value: 8, isUnsigned: true)
!743 = !DIEnumerator(name: "FreiChenKernel", value: 9, isUnsigned: true)
!744 = !DIEnumerator(name: "RobertsKernel", value: 10, isUnsigned: true)
!745 = !DIEnumerator(name: "PrewittKernel", value: 11, isUnsigned: true)
!746 = !DIEnumerator(name: "CompassKernel", value: 12, isUnsigned: true)
!747 = !DIEnumerator(name: "KirschKernel", value: 13, isUnsigned: true)
!748 = !DIEnumerator(name: "DiamondKernel", value: 14, isUnsigned: true)
!749 = !DIEnumerator(name: "SquareKernel", value: 15, isUnsigned: true)
!750 = !DIEnumerator(name: "RectangleKernel", value: 16, isUnsigned: true)
!751 = !DIEnumerator(name: "OctagonKernel", value: 17, isUnsigned: true)
!752 = !DIEnumerator(name: "DiskKernel", value: 18, isUnsigned: true)
!753 = !DIEnumerator(name: "PlusKernel", value: 19, isUnsigned: true)
!754 = !DIEnumerator(name: "CrossKernel", value: 20, isUnsigned: true)
!755 = !DIEnumerator(name: "RingKernel", value: 21, isUnsigned: true)
!756 = !DIEnumerator(name: "PeaksKernel", value: 22, isUnsigned: true)
!757 = !DIEnumerator(name: "EdgesKernel", value: 23, isUnsigned: true)
!758 = !DIEnumerator(name: "CornersKernel", value: 24, isUnsigned: true)
!759 = !DIEnumerator(name: "DiagonalsKernel", value: 25, isUnsigned: true)
!760 = !DIEnumerator(name: "LineEndsKernel", value: 26, isUnsigned: true)
!761 = !DIEnumerator(name: "LineJunctionsKernel", value: 27, isUnsigned: true)
!762 = !DIEnumerator(name: "RidgesKernel", value: 28, isUnsigned: true)
!763 = !DIEnumerator(name: "ConvexHullKernel", value: 29, isUnsigned: true)
!764 = !DIEnumerator(name: "ThinSEKernel", value: 30, isUnsigned: true)
!765 = !DIEnumerator(name: "SkeletonKernel", value: 31, isUnsigned: true)
!766 = !DIEnumerator(name: "ChebyshevKernel", value: 32, isUnsigned: true)
!767 = !DIEnumerator(name: "ManhattanKernel", value: 33, isUnsigned: true)
!768 = !DIEnumerator(name: "OctagonalKernel", value: 34, isUnsigned: true)
!769 = !DIEnumerator(name: "EuclideanKernel", value: 35, isUnsigned: true)
!770 = !DIEnumerator(name: "UserDefinedKernel", value: 36, isUnsigned: true)
!771 = !DIEnumerator(name: "BinomialKernel", value: 37, isUnsigned: true)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !773, line: 25, baseType: !7, size: 32, elements: !774)
!773 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!774 = !{!775, !776, !777, !778, !779, !780, !781, !782, !783}
!775 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!776 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!777 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!778 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!779 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!780 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!781 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!782 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!783 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!784 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !785, line: 46, baseType: !7, size: 32, elements: !786)
!785 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!786 = !{!787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798}
!787 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!788 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!789 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!790 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!791 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!792 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!793 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!794 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!795 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!796 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!797 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!798 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!799 = !{!800, !801, !805, !806, !808, !809, !812, !813, !818, !1024, !855, !829, !1032, !841, !846, !1034, !1036, !943, !1040, !1052, !7, !1053, !946, !1058, !1111, !1191, !1225, !1229, !1230, !1231, !1232, !1243, !811, !847, !1252, !938}
!800 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !803, line: 26, baseType: !804)
!803 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!804 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !803, line: 25, flags: DIFlagFwdDecl)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!808 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !811)
!811 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!813 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !814, line: 77, baseType: !815)
!814 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !816, line: 193, baseType: !817)
!816 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!817 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !80, line: 221, baseType: !820)
!820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !152, line: 150, size: 105920, elements: !821)
!821 = !{!822, !824, !826, !828, !831, !833, !835, !836, !837, !838, !839, !840, !851, !852, !853, !854, !856, !870, !872, !873, !875, !876, !877, !878, !879, !880, !881, !889, !890, !891, !892, !893, !894, !896, !898, !900, !902, !904, !906, !908, !909, !910, !911, !912, !913, !914, !922, !937, !951, !952, !953, !954, !958, !962, !966, !967, !968, !969, !970, !983, !984, !986, !987, !995, !996, !998, !999, !1000, !1001, !1002, !1003, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1014, !1015, !1016, !1017, !1021, !1023}
!822 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !820, file: !152, line: 153, baseType: !823, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !80, line: 209, baseType: !84)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !820, file: !152, line: 156, baseType: !825, size: 32, offset: 32)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !90, line: 61, baseType: !89)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !820, file: !152, line: 159, baseType: !827, size: 32, offset: 64)
!827 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !127, line: 49, baseType: !126)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !820, file: !152, line: 162, baseType: !829, size: 64, offset: 128)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !830, line: 46, baseType: !800)
!830 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!831 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !820, file: !152, line: 165, baseType: !832, size: 32, offset: 192)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !152, line: 86, baseType: !151)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !820, file: !152, line: 168, baseType: !834, size: 32, offset: 224)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !80, line: 215, baseType: !79)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !820, file: !152, line: 169, baseType: !834, size: 32, offset: 256)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !820, file: !152, line: 172, baseType: !829, size: 64, offset: 320)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !820, file: !152, line: 173, baseType: !829, size: 64, offset: 384)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !820, file: !152, line: 174, baseType: !829, size: 64, offset: 448)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !820, file: !152, line: 175, baseType: !829, size: 64, offset: 512)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !820, file: !152, line: 178, baseType: !841, size: 64, offset: 576)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !328, line: 148, baseType: !843)
!843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !328, line: 131, size: 64, elements: !844)
!844 = !{!845, !848, !849, !850}
!845 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !843, file: !328, line: 143, baseType: !846, size: 16)
!846 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !80, line: 93, baseType: !847)
!847 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !843, file: !328, line: 144, baseType: !846, size: 16, offset: 16)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !843, file: !328, line: 145, baseType: !846, size: 16, offset: 32)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !843, file: !328, line: 146, baseType: !846, size: 16, offset: 48)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !820, file: !152, line: 179, baseType: !842, size: 64, offset: 640)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !820, file: !152, line: 180, baseType: !842, size: 64, offset: 704)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !820, file: !152, line: 181, baseType: !842, size: 64, offset: 768)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !820, file: !152, line: 184, baseType: !855, size: 64, offset: 832)
!855 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !820, file: !152, line: 187, baseType: !857, size: 768, offset: 896)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !152, line: 128, baseType: !858)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !152, line: 121, size: 768, elements: !859)
!859 = !{!860, !867, !868, !869}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !858, file: !152, line: 124, baseType: !861, size: 192)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !152, line: 101, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !152, line: 95, size: 192, elements: !863)
!863 = !{!864, !865, !866}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !862, file: !152, line: 98, baseType: !855, size: 64)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !862, file: !152, line: 99, baseType: !855, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !862, file: !152, line: 100, baseType: !855, size: 64, offset: 128)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !858, file: !152, line: 125, baseType: !861, size: 192, offset: 192)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !858, file: !152, line: 126, baseType: !861, size: 192, offset: 384)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !858, file: !152, line: 127, baseType: !861, size: 192, offset: 576)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !820, file: !152, line: 190, baseType: !871, size: 32, offset: 1664)
!871 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !164, line: 49, baseType: !163)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !820, file: !152, line: 193, baseType: !805, size: 64, offset: 1728)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !820, file: !152, line: 196, baseType: !874, size: 32, offset: 1792)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !152, line: 93, baseType: !171)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !820, file: !152, line: 199, baseType: !806, size: 64, offset: 1856)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !820, file: !152, line: 200, baseType: !806, size: 64, offset: 1920)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !820, file: !152, line: 201, baseType: !806, size: 64, offset: 1984)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !820, file: !152, line: 204, baseType: !813, size: 64, offset: 2048)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !820, file: !152, line: 207, baseType: !855, size: 64, offset: 2112)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !820, file: !152, line: 208, baseType: !855, size: 64, offset: 2176)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !820, file: !152, line: 211, baseType: !882, size: 256, offset: 2240)
!882 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !228, line: 130, baseType: !883)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !228, line: 121, size: 256, elements: !884)
!884 = !{!885, !886, !887, !888}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !883, file: !228, line: 124, baseType: !829, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !883, file: !228, line: 125, baseType: !829, size: 64, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !883, file: !228, line: 128, baseType: !813, size: 64, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !883, file: !228, line: 129, baseType: !813, size: 64, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !820, file: !152, line: 212, baseType: !882, size: 256, offset: 2496)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !820, file: !152, line: 213, baseType: !882, size: 256, offset: 2752)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !820, file: !152, line: 216, baseType: !855, size: 64, offset: 3008)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !820, file: !152, line: 217, baseType: !855, size: 64, offset: 3072)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !820, file: !152, line: 218, baseType: !855, size: 64, offset: 3136)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !820, file: !152, line: 221, baseType: !895, size: 32, offset: 3200)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !177, line: 66, baseType: !176)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !820, file: !152, line: 224, baseType: !897, size: 32, offset: 3232)
!897 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !152, line: 73, baseType: !211)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !820, file: !152, line: 227, baseType: !899, size: 32, offset: 3264)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !222, line: 35, baseType: !221)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !820, file: !152, line: 230, baseType: !901, size: 32, offset: 3296)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !228, line: 91, baseType: !227)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !820, file: !152, line: 233, baseType: !903, size: 32, offset: 3328)
!903 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !243, line: 99, baseType: !242)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !820, file: !152, line: 236, baseType: !905, size: 32, offset: 3360)
!905 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !314, line: 32, baseType: !313)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !820, file: !152, line: 239, baseType: !907, size: 64, offset: 3392)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !820, size: 64)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !820, file: !152, line: 242, baseType: !829, size: 64, offset: 3456)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !820, file: !152, line: 243, baseType: !829, size: 64, offset: 3520)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !820, file: !152, line: 246, baseType: !813, size: 64, offset: 3584)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !820, file: !152, line: 249, baseType: !829, size: 64, offset: 3648)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !820, file: !152, line: 250, baseType: !829, size: 64, offset: 3712)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !820, file: !152, line: 253, baseType: !813, size: 64, offset: 3776)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !820, file: !152, line: 256, baseType: !915, size: 192, offset: 3840)
!915 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !916, line: 68, baseType: !917)
!916 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !916, line: 62, size: 192, elements: !918)
!918 = !{!919, !920, !921}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !917, file: !916, line: 65, baseType: !855, size: 64)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !917, file: !916, line: 66, baseType: !855, size: 64, offset: 64)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !917, file: !916, line: 67, baseType: !855, size: 64, offset: 128)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !820, file: !152, line: 259, baseType: !923, size: 512, offset: 4032)
!923 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !322, line: 51, baseType: !924)
!924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !322, line: 40, size: 512, elements: !925)
!925 = !{!926, !933, !934, !936}
!926 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !924, file: !322, line: 43, baseType: !927, size: 192)
!927 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !322, line: 38, baseType: !928)
!928 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !322, line: 32, size: 192, elements: !929)
!929 = !{!930, !931, !932}
!930 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !928, file: !322, line: 35, baseType: !855, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !928, file: !322, line: 36, baseType: !855, size: 64, offset: 64)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !928, file: !322, line: 37, baseType: !855, size: 64, offset: 128)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !924, file: !322, line: 44, baseType: !927, size: 192, offset: 192)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !924, file: !322, line: 47, baseType: !935, size: 32, offset: 384)
!935 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !322, line: 30, baseType: !321)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !924, file: !322, line: 50, baseType: !829, size: 64, offset: 448)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !820, file: !152, line: 262, baseType: !938, size: 64, offset: 4544)
!938 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !939, line: 26, baseType: !940)
!939 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!834, !943, !945, !948, !805}
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !807)
!945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !946)
!946 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !80, line: 150, baseType: !947)
!947 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!948 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !949)
!949 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !80, line: 151, baseType: !950)
!950 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !820, file: !152, line: 265, baseType: !805, size: 64, offset: 4608)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !820, file: !152, line: 266, baseType: !805, size: 64, offset: 4672)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !820, file: !152, line: 267, baseType: !805, size: 64, offset: 4736)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !820, file: !152, line: 270, baseType: !955, size: 64, offset: 4800)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !127, line: 52, baseType: !957)
!957 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !127, line: 51, flags: DIFlagFwdDecl)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !820, file: !152, line: 273, baseType: !959, size: 64, offset: 4864)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !80, line: 217, baseType: !961)
!961 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !80, line: 217, flags: DIFlagFwdDecl)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !820, file: !152, line: 276, baseType: !963, size: 32768, offset: 4928)
!963 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 32768, elements: !964)
!964 = !{!965}
!965 = !DISubrange(count: 4096)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !820, file: !152, line: 277, baseType: !963, size: 32768, offset: 37696)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !820, file: !152, line: 278, baseType: !963, size: 32768, offset: 70464)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !820, file: !152, line: 281, baseType: !829, size: 64, offset: 103232)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !820, file: !152, line: 282, baseType: !829, size: 64, offset: 103296)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !820, file: !152, line: 285, baseType: !971, size: 448, offset: 103360)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !80, line: 219, baseType: !972)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !6, line: 102, size: 448, elements: !973)
!973 = !{!974, !976, !977, !978, !979, !980, !981, !982}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !972, file: !6, line: 105, baseType: !975, size: 32)
!975 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !6, line: 100, baseType: !5)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !972, file: !6, line: 108, baseType: !808, size: 32, offset: 32)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !972, file: !6, line: 111, baseType: !806, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !972, file: !6, line: 112, baseType: !806, size: 64, offset: 128)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !972, file: !6, line: 115, baseType: !805, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !972, file: !6, line: 118, baseType: !834, size: 32, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !972, file: !6, line: 121, baseType: !801, size: 64, offset: 320)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !972, file: !6, line: 124, baseType: !829, size: 64, offset: 384)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !820, file: !152, line: 288, baseType: !834, size: 32, offset: 103808)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !820, file: !152, line: 291, baseType: !985, size: 64, offset: 103872)
!985 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !813)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !820, file: !152, line: 294, baseType: !801, size: 64, offset: 103936)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !820, file: !152, line: 297, baseType: !988, size: 256, offset: 104000)
!988 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !164, line: 40, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !164, line: 27, size: 256, elements: !990)
!990 = !{!991, !992, !993, !994}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !989, file: !164, line: 30, baseType: !806, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !989, file: !164, line: 33, baseType: !829, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !989, file: !164, line: 36, baseType: !812, size: 64, offset: 128)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !989, file: !164, line: 39, baseType: !829, size: 64, offset: 192)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !820, file: !152, line: 298, baseType: !988, size: 256, offset: 104256)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !820, file: !152, line: 299, baseType: !997, size: 64, offset: 104512)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !820, file: !152, line: 302, baseType: !829, size: 64, offset: 104576)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !820, file: !152, line: 305, baseType: !829, size: 64, offset: 104640)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !820, file: !152, line: 308, baseType: !907, size: 64, offset: 104704)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !820, file: !152, line: 309, baseType: !907, size: 64, offset: 104768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !820, file: !152, line: 310, baseType: !907, size: 64, offset: 104832)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !820, file: !152, line: 313, baseType: !1004, size: 32, offset: 104896)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !328, line: 47, baseType: !327)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !820, file: !152, line: 316, baseType: !834, size: 32, offset: 104928)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !820, file: !152, line: 319, baseType: !842, size: 64, offset: 104960)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !820, file: !152, line: 322, baseType: !907, size: 64, offset: 105024)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !820, file: !152, line: 325, baseType: !882, size: 256, offset: 105088)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !820, file: !152, line: 328, baseType: !805, size: 64, offset: 105344)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !820, file: !152, line: 329, baseType: !805, size: 64, offset: 105408)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !820, file: !152, line: 332, baseType: !1012, size: 32, offset: 105472)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !152, line: 61, baseType: !344)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !820, file: !152, line: 335, baseType: !834, size: 32, offset: 105504)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !820, file: !152, line: 338, baseType: !949, size: 64, offset: 105536)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !820, file: !152, line: 341, baseType: !834, size: 32, offset: 105600)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !820, file: !152, line: 344, baseType: !829, size: 64, offset: 105664)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !820, file: !152, line: 347, baseType: !1018, size: 64, offset: 105728)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !1019, line: 7, baseType: !1020)
!1019 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !816, line: 160, baseType: !817)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !820, file: !152, line: 350, baseType: !1022, size: 32, offset: 105792)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !328, line: 79, baseType: !358)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !820, file: !152, line: 353, baseType: !829, size: 64, offset: 105856)
!1024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !152, line: 110, baseType: !1026)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !152, line: 103, size: 256, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !1026, file: !152, line: 106, baseType: !855, size: 64)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !1026, file: !152, line: 107, baseType: !855, size: 64, offset: 64)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !1026, file: !152, line: 108, baseType: !855, size: 64, offset: 128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !1026, file: !152, line: 109, baseType: !855, size: 64, offset: 192)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !842)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !80, line: 78, baseType: !1035)
!1035 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1037, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_typedef, name: "SplayTreeInfo", file: !1038, line: 26, baseType: !1039)
!1038 = !DIFile(filename: "./magick/splay-tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1039 = !DICompositeType(tag: DW_TAG_structure_type, name: "_SplayTreeInfo", file: !1038, line: 25, flags: DIFlagFwdDecl)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1042)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageAttribute", file: !1043, line: 92, baseType: !1044)
!1043 = !DIFile(filename: "./magick/deprecate.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageAttribute", file: !1043, line: 80, size: 320, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1051}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1044, file: !1043, line: 83, baseType: !806, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1044, file: !1043, line: 84, baseType: !806, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1044, file: !1043, line: 87, baseType: !834, size: 32, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1044, file: !1043, line: 90, baseType: !1050, size: 64, offset: 192)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1044, file: !1043, line: 91, baseType: !1050, size: 64, offset: 256)
!1052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1042, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_typedef, name: "MonitorHandler", file: !1043, line: 77, baseType: !1054)
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{!834, !943, !945, !948, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!1058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1059, size: 64)
!1059 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1060, line: 7, baseType: !1061)
!1060 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1061 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1062, line: 49, size: 1728, elements: !1063)
!1062 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1063 = !{!1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1079, !1081, !1082, !1083, !1085, !1086, !1088, !1092, !1095, !1097, !1100, !1103, !1104, !1105, !1106, !1107}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1061, file: !1062, line: 51, baseType: !808, size: 32)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1061, file: !1062, line: 54, baseType: !806, size: 64, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1061, file: !1062, line: 55, baseType: !806, size: 64, offset: 128)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1061, file: !1062, line: 56, baseType: !806, size: 64, offset: 192)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1061, file: !1062, line: 57, baseType: !806, size: 64, offset: 256)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1061, file: !1062, line: 58, baseType: !806, size: 64, offset: 320)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1061, file: !1062, line: 59, baseType: !806, size: 64, offset: 384)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1061, file: !1062, line: 60, baseType: !806, size: 64, offset: 448)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1061, file: !1062, line: 61, baseType: !806, size: 64, offset: 512)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1061, file: !1062, line: 64, baseType: !806, size: 64, offset: 576)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1061, file: !1062, line: 65, baseType: !806, size: 64, offset: 640)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1061, file: !1062, line: 66, baseType: !806, size: 64, offset: 704)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1061, file: !1062, line: 68, baseType: !1077, size: 64, offset: 768)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1062, line: 36, flags: DIFlagFwdDecl)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1061, file: !1062, line: 70, baseType: !1080, size: 64, offset: 832)
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1061, file: !1062, line: 72, baseType: !808, size: 32, offset: 896)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1061, file: !1062, line: 73, baseType: !808, size: 32, offset: 928)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1061, file: !1062, line: 74, baseType: !1084, size: 64, offset: 960)
!1084 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !816, line: 152, baseType: !817)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1061, file: !1062, line: 77, baseType: !847, size: 16, offset: 1024)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1061, file: !1062, line: 78, baseType: !1087, size: 8, offset: 1040)
!1087 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1061, file: !1062, line: 79, baseType: !1089, size: 8, offset: 1048)
!1089 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 8, elements: !1090)
!1090 = !{!1091}
!1091 = !DISubrange(count: 1)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1061, file: !1062, line: 81, baseType: !1093, size: 64, offset: 1088)
!1093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1094, size: 64)
!1094 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1062, line: 43, baseType: null)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1061, file: !1062, line: 89, baseType: !1096, size: 64, offset: 1152)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !816, line: 153, baseType: !817)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1061, file: !1062, line: 91, baseType: !1098, size: 64, offset: 1216)
!1098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1099, size: 64)
!1099 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1062, line: 37, flags: DIFlagFwdDecl)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1061, file: !1062, line: 92, baseType: !1101, size: 64, offset: 1280)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1062, line: 38, flags: DIFlagFwdDecl)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1061, file: !1062, line: 93, baseType: !1080, size: 64, offset: 1344)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1061, file: !1062, line: 94, baseType: !805, size: 64, offset: 1408)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1061, file: !1062, line: 95, baseType: !829, size: 64, offset: 1472)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1061, file: !1062, line: 96, baseType: !808, size: 32, offset: 1536)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1061, file: !1062, line: 98, baseType: !1108, size: 160, offset: 1568)
!1108 = !DICompositeType(tag: DW_TAG_array_type, baseType: !807, size: 160, elements: !1109)
!1109 = !{!1110}
!1110 = !DISubrange(count: 20)
!1111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1112, size: 64)
!1112 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1113)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !80, line: 223, baseType: !1114)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !152, line: 356, size: 134336, elements: !1115)
!1115 = !{!1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1150, !1151, !1152, !1153, !1154, !1155, !1157, !1158, !1159, !1160, !1161, !1162, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1188, !1189, !1190}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1114, file: !152, line: 359, baseType: !827, size: 32)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !1114, file: !152, line: 362, baseType: !832, size: 32, offset: 32)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !1114, file: !152, line: 365, baseType: !834, size: 32, offset: 64)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1114, file: !152, line: 366, baseType: !834, size: 32, offset: 96)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !1114, file: !152, line: 367, baseType: !834, size: 32, offset: 128)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !1114, file: !152, line: 368, baseType: !834, size: 32, offset: 160)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1114, file: !152, line: 371, baseType: !806, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !1114, file: !152, line: 372, baseType: !806, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1114, file: !152, line: 373, baseType: !806, size: 64, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !1114, file: !152, line: 374, baseType: !806, size: 64, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1114, file: !152, line: 377, baseType: !829, size: 64, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !1114, file: !152, line: 378, baseType: !829, size: 64, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1114, file: !152, line: 379, baseType: !829, size: 64, offset: 576)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !1114, file: !152, line: 382, baseType: !897, size: 32, offset: 640)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1114, file: !152, line: 385, baseType: !899, size: 32, offset: 672)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1114, file: !152, line: 388, baseType: !874, size: 32, offset: 704)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1114, file: !152, line: 391, baseType: !829, size: 64, offset: 768)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !1114, file: !152, line: 394, baseType: !806, size: 64, offset: 832)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1114, file: !152, line: 395, baseType: !806, size: 64, offset: 896)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1114, file: !152, line: 396, baseType: !806, size: 64, offset: 960)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1114, file: !152, line: 397, baseType: !806, size: 64, offset: 1024)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1114, file: !152, line: 398, baseType: !806, size: 64, offset: 1088)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1114, file: !152, line: 401, baseType: !855, size: 64, offset: 1152)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1114, file: !152, line: 402, baseType: !855, size: 64, offset: 1216)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1114, file: !152, line: 405, baseType: !842, size: 64, offset: 1280)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1114, file: !152, line: 406, baseType: !842, size: 64, offset: 1344)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1114, file: !152, line: 407, baseType: !842, size: 64, offset: 1408)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1114, file: !152, line: 410, baseType: !834, size: 32, offset: 1472)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !1114, file: !152, line: 411, baseType: !834, size: 32, offset: 1504)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1114, file: !152, line: 414, baseType: !829, size: 64, offset: 1536)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1114, file: !152, line: 417, baseType: !825, size: 32, offset: 1600)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1114, file: !152, line: 420, baseType: !1012, size: 32, offset: 1632)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !1114, file: !152, line: 423, baseType: !1149, size: 32, offset: 1664)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !424, line: 59, baseType: !423)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1114, file: !152, line: 426, baseType: !813, size: 64, offset: 1728)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !1114, file: !152, line: 429, baseType: !834, size: 32, offset: 1792)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1114, file: !152, line: 430, baseType: !834, size: 32, offset: 1824)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1114, file: !152, line: 433, baseType: !806, size: 64, offset: 1856)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !1114, file: !152, line: 434, baseType: !806, size: 64, offset: 1920)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1114, file: !152, line: 437, baseType: !1156, size: 32, offset: 1984)
!1156 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !80, line: 202, baseType: !456)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1114, file: !152, line: 440, baseType: !818, size: 64, offset: 2048)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1114, file: !152, line: 443, baseType: !805, size: 64, offset: 2112)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !1114, file: !152, line: 446, baseType: !938, size: 64, offset: 2176)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1114, file: !152, line: 449, baseType: !805, size: 64, offset: 2240)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1114, file: !152, line: 450, baseType: !805, size: 64, offset: 2304)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1114, file: !152, line: 453, baseType: !1163, size: 64, offset: 2368)
!1163 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !1164, line: 26, baseType: !1165)
!1164 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DISubroutineType(types: !1167)
!1167 = !{!829, !1168, !1170, !1172}
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !819)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !829)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1114, file: !152, line: 456, baseType: !1058, size: 64, offset: 2432)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !1114, file: !152, line: 459, baseType: !805, size: 64, offset: 2496)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1114, file: !152, line: 462, baseType: !829, size: 64, offset: 2560)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1114, file: !152, line: 465, baseType: !963, size: 32768, offset: 2624)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1114, file: !152, line: 466, baseType: !963, size: 32768, offset: 35392)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1114, file: !152, line: 467, baseType: !963, size: 32768, offset: 68160)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1114, file: !152, line: 468, baseType: !963, size: 32768, offset: 100928)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1114, file: !152, line: 471, baseType: !834, size: 32, offset: 133696)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1114, file: !152, line: 474, baseType: !806, size: 64, offset: 133760)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !1114, file: !152, line: 477, baseType: !829, size: 64, offset: 133824)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !1114, file: !152, line: 478, baseType: !829, size: 64, offset: 133888)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !1114, file: !152, line: 481, baseType: !842, size: 64, offset: 133952)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1114, file: !152, line: 484, baseType: !829, size: 64, offset: 134016)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !1114, file: !152, line: 487, baseType: !1187, size: 32, offset: 134080)
!1187 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !396, line: 47, baseType: !395)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !1114, file: !152, line: 490, baseType: !842, size: 64, offset: 134112)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1114, file: !152, line: 493, baseType: !805, size: 64, offset: 134208)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !1114, file: !152, line: 496, baseType: !834, size: 32, offset: 134272)
!1191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1192, size: 64)
!1192 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumInfo", file: !222, line: 85, baseType: !1193)
!1193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumInfo", file: !1194, line: 42, size: 1216, elements: !1195)
!1194 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1195 = !{!1196, !1197, !1198, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1208, !1209, !1211, !1212, !1213, !1223, !1224}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1193, file: !1194, line: 45, baseType: !829, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "quantum", scope: !1193, file: !1194, line: 46, baseType: !829, size: 64, offset: 64)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !1193, file: !1194, line: 49, baseType: !1199, size: 32, offset: 128)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumFormatType", file: !222, line: 50, baseType: !720)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !1193, file: !1194, line: 52, baseType: !855, size: 64, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !1193, file: !1194, line: 53, baseType: !855, size: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1193, file: !1194, line: 54, baseType: !855, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1193, file: !1194, line: 57, baseType: !829, size: 64, offset: 384)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "min_is_white", scope: !1193, file: !1194, line: 60, baseType: !834, size: 32, offset: 448)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pack", scope: !1193, file: !1194, line: 61, baseType: !834, size: 32, offset: 480)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_type", scope: !1193, file: !1194, line: 64, baseType: !1207, size: 32, offset: 512)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAlphaType", file: !222, line: 42, baseType: !726)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "number_threads", scope: !1193, file: !1194, line: 67, baseType: !829, size: 64, offset: 576)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pixels", scope: !1193, file: !1194, line: 70, baseType: !1210, size: 64, offset: 640)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1193, file: !1194, line: 73, baseType: !829, size: 64, offset: 704)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1193, file: !1194, line: 76, baseType: !899, size: 32, offset: 768)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1193, file: !1194, line: 79, baseType: !1214, size: 256, offset: 832)
!1214 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumState", file: !1194, line: 40, baseType: !1215)
!1215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantumState", file: !1194, line: 27, size: 256, elements: !1216)
!1216 = !{!1217, !1218, !1219, !1220}
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "inverse_scale", scope: !1215, file: !1194, line: 30, baseType: !855, size: 64)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "pixel", scope: !1215, file: !1194, line: 33, baseType: !7, size: 32, offset: 64)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1215, file: !1194, line: 36, baseType: !829, size: 64, offset: 128)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1215, file: !1194, line: 39, baseType: !1221, size: 64, offset: 192)
!1221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1222, size: 64)
!1222 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !1193, file: !1194, line: 82, baseType: !801, size: 64, offset: 1088)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1193, file: !1194, line: 85, baseType: !829, size: 64, offset: 1152)
!1225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1226, size: 64)
!1226 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1227)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !396, line: 50, baseType: !1228)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !328, line: 160, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1230 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !328, line: 129, baseType: !846)
!1231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfo", file: !732, line: 128, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KernelInfo", file: !732, line: 102, size: 832, elements: !1235)
!1235 = !{!1236, !1238, !1239, !1240, !1241, !1242, !1244, !1245, !1246, !1247, !1248, !1249, !1251}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1234, file: !732, line: 105, baseType: !1237, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_typedef, name: "KernelInfoType", file: !732, line: 67, baseType: !731)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1234, file: !732, line: 108, baseType: !829, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1234, file: !732, line: 109, baseType: !829, size: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1234, file: !732, line: 112, baseType: !813, size: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1234, file: !732, line: 113, baseType: !813, size: 64, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1234, file: !732, line: 116, baseType: !1243, size: 64, offset: 320)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !1234, file: !732, line: 117, baseType: !855, size: 64, offset: 384)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !1234, file: !732, line: 118, baseType: !855, size: 64, offset: 448)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "negative_range", scope: !1234, file: !732, line: 119, baseType: !855, size: 64, offset: 512)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "positive_range", scope: !1234, file: !732, line: 120, baseType: !855, size: 64, offset: 576)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1234, file: !732, line: 121, baseType: !855, size: 64, offset: 640)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1234, file: !732, line: 124, baseType: !1250, size: 64, offset: 704)
!1250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1234, file: !732, line: 127, baseType: !829, size: 64, offset: 768)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1230)
!1254 = !{!1255, !1264, !1269, !1274, !1276, !1283, !0}
!1255 = !DIGlobalVariableExpression(var: !1256, expr: !DIExpression())
!1256 = distinct !DIGlobalVariable(name: "o2", scope: !1257, file: !3, line: 5896, type: !1261, isLocal: true, isDefinition: true)
!1257 = distinct !DISubprogram(name: "RandomChannelThresholdImage", scope: !3, file: !3, line: 5879, type: !1258, scopeLine: 5881, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!7, !818, !943, !943, !1057}
!1260 = !{}
!1261 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 128, elements: !1262)
!1262 = !{!1263}
!1263 = !DISubrange(count: 4)
!1264 = !DIGlobalVariableExpression(var: !1265, expr: !DIExpression())
!1265 = distinct !DIGlobalVariable(name: "o3", scope: !1257, file: !3, line: 5897, type: !1266, isLocal: true, isDefinition: true)
!1266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 288, elements: !1267)
!1267 = !{!1268}
!1268 = !DISubrange(count: 9)
!1269 = !DIGlobalVariableExpression(var: !1270, expr: !DIExpression())
!1270 = distinct !DIGlobalVariable(name: "o4", scope: !1257, file: !3, line: 5898, type: !1271, isLocal: true, isDefinition: true)
!1271 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 512, elements: !1272)
!1272 = !{!1273}
!1273 = !DISubrange(count: 16)
!1274 = !DIGlobalVariableExpression(var: !1275, expr: !DIExpression())
!1275 = distinct !DIGlobalVariable(name: "threshold", scope: !1257, file: !3, line: 5900, type: !1034, isLocal: true, isDefinition: true)
!1276 = !DIGlobalVariableExpression(var: !1277, expr: !DIExpression())
!1277 = distinct !DIGlobalVariable(name: "id", scope: !1278, file: !3, line: 6659, type: !813, isLocal: true, isDefinition: true)
!1278 = distinct !DISubprogram(name: "SetMagickRegistry", scope: !3, file: !3, line: 6649, type: !1279, scopeLine: 6651, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1279 = !DISubroutineType(types: !1280)
!1280 = !{!813, !1281, !1170, !1172, !1057}
!1281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1282)
!1282 = !DIDerivedType(tag: DW_TAG_typedef, name: "RegistryType", file: !673, line: 31, baseType: !672)
!1283 = !DIGlobalVariableExpression(var: !1284, expr: !DIExpression())
!1284 = distinct !DIGlobalVariable(name: "active_mutex", scope: !2, file: !1285, line: 40, type: !834, isLocal: true, isDefinition: true)
!1285 = !DIFile(filename: "./magick/semaphore-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1286 = !{i32 7, !"Dwarf Version", i32 4}
!1287 = !{i32 2, !"Debug Info Version", i32 3}
!1288 = !{i32 1, !"wchar_size", i32 4}
!1289 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1290 = distinct !DISubprogram(name: "AcquireCacheViewIndexes", scope: !3, file: !3, line: 129, type: !1291, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1291 = !DISubroutineType(types: !1292)
!1292 = !{!1252, !1225}
!1293 = !DILocalVariable(name: "cache_view", arg: 1, scope: !1290, file: !3, line: 130, type: !1225)
!1294 = !DILocation(line: 130, column: 20, scope: !1290)
!1295 = !DILocation(line: 132, column: 40, scope: !1290)
!1296 = !DILocation(line: 132, column: 10, scope: !1290)
!1297 = !DILocation(line: 132, column: 3, scope: !1290)
!1298 = distinct !DISubprogram(name: "AcquireCacheViewPixels", scope: !3, file: !3, line: 170, type: !1299, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1299 = !DISubroutineType(types: !1300)
!1300 = !{!1032, !1225, !1301, !1301, !1172, !1172, !1057}
!1301 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !813)
!1302 = !DILocalVariable(name: "cache_view", arg: 1, scope: !1298, file: !3, line: 171, type: !1225)
!1303 = !DILocation(line: 171, column: 20, scope: !1298)
!1304 = !DILocalVariable(name: "x", arg: 2, scope: !1298, file: !3, line: 171, type: !1301)
!1305 = !DILocation(line: 171, column: 45, scope: !1298)
!1306 = !DILocalVariable(name: "y", arg: 3, scope: !1298, file: !3, line: 171, type: !1301)
!1307 = !DILocation(line: 171, column: 61, scope: !1298)
!1308 = !DILocalVariable(name: "columns", arg: 4, scope: !1298, file: !3, line: 172, type: !1172)
!1309 = !DILocation(line: 172, column: 16, scope: !1298)
!1310 = !DILocalVariable(name: "rows", arg: 5, scope: !1298, file: !3, line: 172, type: !1172)
!1311 = !DILocation(line: 172, column: 37, scope: !1298)
!1312 = !DILocalVariable(name: "exception", arg: 6, scope: !1298, file: !3, line: 172, type: !1057)
!1313 = !DILocation(line: 172, column: 57, scope: !1298)
!1314 = !DILocation(line: 174, column: 36, scope: !1298)
!1315 = !DILocation(line: 174, column: 47, scope: !1298)
!1316 = !DILocation(line: 174, column: 49, scope: !1298)
!1317 = !DILocation(line: 174, column: 51, scope: !1298)
!1318 = !DILocation(line: 174, column: 59, scope: !1298)
!1319 = !DILocation(line: 174, column: 64, scope: !1298)
!1320 = !DILocation(line: 174, column: 10, scope: !1298)
!1321 = !DILocation(line: 174, column: 3, scope: !1298)
!1322 = distinct !DISubprogram(name: "AcquireImagePixels", scope: !3, file: !3, line: 229, type: !1323, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!1032, !1168, !1301, !1301, !1172, !1172, !1057}
!1325 = !DILocalVariable(name: "image", arg: 1, scope: !1322, file: !3, line: 229, type: !1168)
!1326 = !DILocation(line: 229, column: 65, scope: !1322)
!1327 = !DILocalVariable(name: "x", arg: 2, scope: !1322, file: !3, line: 230, type: !1301)
!1328 = !DILocation(line: 230, column: 17, scope: !1322)
!1329 = !DILocalVariable(name: "y", arg: 3, scope: !1322, file: !3, line: 230, type: !1301)
!1330 = !DILocation(line: 230, column: 33, scope: !1322)
!1331 = !DILocalVariable(name: "columns", arg: 4, scope: !1322, file: !3, line: 230, type: !1172)
!1332 = !DILocation(line: 230, column: 48, scope: !1322)
!1333 = !DILocalVariable(name: "rows", arg: 5, scope: !1322, file: !3, line: 231, type: !1172)
!1334 = !DILocation(line: 231, column: 16, scope: !1322)
!1335 = !DILocalVariable(name: "exception", arg: 6, scope: !1322, file: !3, line: 231, type: !1057)
!1336 = !DILocation(line: 231, column: 36, scope: !1322)
!1337 = !DILocation(line: 233, column: 27, scope: !1322)
!1338 = !DILocation(line: 233, column: 33, scope: !1322)
!1339 = !DILocation(line: 233, column: 35, scope: !1322)
!1340 = !DILocation(line: 233, column: 37, scope: !1322)
!1341 = !DILocation(line: 233, column: 45, scope: !1322)
!1342 = !DILocation(line: 233, column: 50, scope: !1322)
!1343 = !DILocation(line: 233, column: 10, scope: !1322)
!1344 = !DILocation(line: 233, column: 3, scope: !1322)
!1345 = distinct !DISubprogram(name: "AcquireIndexes", scope: !3, file: !3, line: 268, type: !1346, scopeLine: 269, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1346 = !DISubroutineType(types: !1347)
!1347 = !{!1252, !1168}
!1348 = !DILocalVariable(name: "image", arg: 1, scope: !1345, file: !3, line: 268, type: !1168)
!1349 = !DILocation(line: 268, column: 61, scope: !1345)
!1350 = !DILocation(line: 270, column: 31, scope: !1345)
!1351 = !DILocation(line: 270, column: 10, scope: !1345)
!1352 = !DILocation(line: 270, column: 3, scope: !1345)
!1353 = distinct !DISubprogram(name: "AcquireMemory", scope: !3, file: !3, line: 296, type: !1354, scopeLine: 297, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1354 = !DISubroutineType(types: !1355)
!1355 = !{!805, !1172}
!1356 = !DILocalVariable(name: "size", arg: 1, scope: !1353, file: !3, line: 296, type: !1172)
!1357 = !DILocation(line: 296, column: 47, scope: !1353)
!1358 = !DILocalVariable(name: "allocation", scope: !1353, file: !3, line: 299, type: !805)
!1359 = !DILocation(line: 299, column: 6, scope: !1353)
!1360 = !DILocation(line: 302, column: 10, scope: !1353)
!1361 = !DILocation(line: 303, column: 21, scope: !1353)
!1362 = !DILocation(line: 303, column: 14, scope: !1353)
!1363 = !DILocation(line: 303, column: 13, scope: !1353)
!1364 = !DILocation(line: 304, column: 10, scope: !1353)
!1365 = !DILocation(line: 304, column: 3, scope: !1353)
!1366 = distinct !DISubprogram(name: "AcquireOneCacheViewPixel", scope: !3, file: !3, line: 343, type: !1367, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1367 = !DISubroutineType(types: !1368)
!1368 = !{!834, !1225, !1301, !1301, !841, !1057}
!1369 = !DILocalVariable(name: "cache_view", arg: 1, scope: !1366, file: !3, line: 344, type: !1225)
!1370 = !DILocation(line: 344, column: 20, scope: !1366)
!1371 = !DILocalVariable(name: "x", arg: 2, scope: !1366, file: !3, line: 344, type: !1301)
!1372 = !DILocation(line: 344, column: 45, scope: !1366)
!1373 = !DILocalVariable(name: "y", arg: 3, scope: !1366, file: !3, line: 344, type: !1301)
!1374 = !DILocation(line: 344, column: 61, scope: !1366)
!1375 = !DILocalVariable(name: "pixel", arg: 4, scope: !1366, file: !3, line: 345, type: !841)
!1376 = !DILocation(line: 345, column: 16, scope: !1366)
!1377 = !DILocalVariable(name: "exception", arg: 5, scope: !1366, file: !3, line: 345, type: !1057)
!1378 = !DILocation(line: 345, column: 37, scope: !1366)
!1379 = !DILocation(line: 347, column: 38, scope: !1366)
!1380 = !DILocation(line: 347, column: 49, scope: !1366)
!1381 = !DILocation(line: 347, column: 51, scope: !1366)
!1382 = !DILocation(line: 347, column: 53, scope: !1366)
!1383 = !DILocation(line: 347, column: 59, scope: !1366)
!1384 = !DILocation(line: 347, column: 10, scope: !1366)
!1385 = !DILocation(line: 347, column: 3, scope: !1366)
!1386 = distinct !DISubprogram(name: "AcquireOneCacheViewVirtualPixel", scope: !3, file: !3, line: 390, type: !1387, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1387 = !DISubroutineType(types: !1388)
!1388 = !{!834, !1225, !1389, !1301, !1301, !841, !1057}
!1389 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1187)
!1390 = !DILocalVariable(name: "cache_view", arg: 1, scope: !1386, file: !3, line: 391, type: !1225)
!1391 = !DILocation(line: 391, column: 20, scope: !1386)
!1392 = !DILocalVariable(name: "virtual_pixel_method", arg: 2, scope: !1386, file: !3, line: 391, type: !1389)
!1393 = !DILocation(line: 391, column: 56, scope: !1386)
!1394 = !DILocalVariable(name: "x", arg: 3, scope: !1386, file: !3, line: 392, type: !1301)
!1395 = !DILocation(line: 392, column: 17, scope: !1386)
!1396 = !DILocalVariable(name: "y", arg: 4, scope: !1386, file: !3, line: 392, type: !1301)
!1397 = !DILocation(line: 392, column: 33, scope: !1386)
!1398 = !DILocalVariable(name: "pixel", arg: 5, scope: !1386, file: !3, line: 392, type: !841)
!1399 = !DILocation(line: 392, column: 48, scope: !1386)
!1400 = !DILocalVariable(name: "exception", arg: 6, scope: !1386, file: !3, line: 392, type: !1057)
!1401 = !DILocation(line: 392, column: 69, scope: !1386)
!1402 = !DILocalVariable(name: "status", scope: !1386, file: !3, line: 395, type: !834)
!1403 = !DILocation(line: 395, column: 5, scope: !1386)
!1404 = !DILocation(line: 397, column: 44, scope: !1386)
!1405 = !DILocation(line: 397, column: 55, scope: !1386)
!1406 = !DILocation(line: 398, column: 5, scope: !1386)
!1407 = !DILocation(line: 398, column: 7, scope: !1386)
!1408 = !DILocation(line: 398, column: 9, scope: !1386)
!1409 = !DILocation(line: 398, column: 15, scope: !1386)
!1410 = !DILocation(line: 397, column: 10, scope: !1386)
!1411 = !DILocation(line: 397, column: 9, scope: !1386)
!1412 = !DILocation(line: 399, column: 10, scope: !1386)
!1413 = !DILocation(line: 399, column: 3, scope: !1386)
!1414 = distinct !DISubprogram(name: "AcquireOneMagickPixel", scope: !3, file: !3, line: 436, type: !1415, scopeLine: 438, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1415 = !DISubroutineType(types: !1416)
!1416 = !{!1417, !1168, !1301, !1301, !1057}
!1417 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !328, line: 127, baseType: !1418)
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !328, line: 104, size: 448, elements: !1419)
!1419 = !{!1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !1418, file: !328, line: 107, baseType: !823, size: 32)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1418, file: !328, line: 110, baseType: !825, size: 32, offset: 32)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !1418, file: !328, line: 113, baseType: !834, size: 32, offset: 64)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1418, file: !328, line: 116, baseType: !855, size: 64, offset: 128)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1418, file: !328, line: 119, baseType: !829, size: 64, offset: 192)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !1418, file: !328, line: 122, baseType: !1034, size: 32, offset: 256)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !1418, file: !328, line: 123, baseType: !1034, size: 32, offset: 288)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !1418, file: !328, line: 124, baseType: !1034, size: 32, offset: 320)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1418, file: !328, line: 125, baseType: !1034, size: 32, offset: 352)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1418, file: !328, line: 126, baseType: !1034, size: 32, offset: 384)
!1430 = !DILocalVariable(name: "image", arg: 1, scope: !1414, file: !3, line: 436, type: !1168)
!1431 = !DILocation(line: 436, column: 67, scope: !1414)
!1432 = !DILocalVariable(name: "x", arg: 2, scope: !1414, file: !3, line: 437, type: !1301)
!1433 = !DILocation(line: 437, column: 17, scope: !1414)
!1434 = !DILocalVariable(name: "y", arg: 3, scope: !1414, file: !3, line: 437, type: !1301)
!1435 = !DILocation(line: 437, column: 33, scope: !1414)
!1436 = !DILocalVariable(name: "exception", arg: 4, scope: !1414, file: !3, line: 437, type: !1057)
!1437 = !DILocation(line: 437, column: 50, scope: !1414)
!1438 = !DILocalVariable(name: "pixel", scope: !1414, file: !3, line: 440, type: !1417)
!1439 = !DILocation(line: 440, column: 5, scope: !1414)
!1440 = !DILocation(line: 442, column: 35, scope: !1414)
!1441 = !DILocation(line: 442, column: 41, scope: !1414)
!1442 = !DILocation(line: 442, column: 43, scope: !1414)
!1443 = !DILocation(line: 442, column: 52, scope: !1414)
!1444 = !DILocation(line: 442, column: 10, scope: !1414)
!1445 = !DILocation(line: 443, column: 3, scope: !1414)
!1446 = distinct !DISubprogram(name: "AcquireOnePixel", scope: !3, file: !3, line: 480, type: !1447, scopeLine: 482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!842, !1168, !1301, !1301, !1057}
!1449 = !DILocalVariable(name: "image", arg: 1, scope: !1446, file: !3, line: 480, type: !1168)
!1450 = !DILocation(line: 480, column: 55, scope: !1446)
!1451 = !DILocalVariable(name: "x", arg: 2, scope: !1446, file: !3, line: 480, type: !1301)
!1452 = !DILocation(line: 480, column: 75, scope: !1446)
!1453 = !DILocalVariable(name: "y", arg: 3, scope: !1446, file: !3, line: 481, type: !1301)
!1454 = !DILocation(line: 481, column: 17, scope: !1446)
!1455 = !DILocalVariable(name: "exception", arg: 4, scope: !1446, file: !3, line: 481, type: !1057)
!1456 = !DILocation(line: 481, column: 34, scope: !1446)
!1457 = !DILocalVariable(name: "pixel", scope: !1446, file: !3, line: 484, type: !842)
!1458 = !DILocation(line: 484, column: 5, scope: !1446)
!1459 = !DILocation(line: 486, column: 29, scope: !1446)
!1460 = !DILocation(line: 486, column: 35, scope: !1446)
!1461 = !DILocation(line: 486, column: 37, scope: !1446)
!1462 = !DILocation(line: 486, column: 46, scope: !1446)
!1463 = !DILocation(line: 486, column: 10, scope: !1446)
!1464 = !DILocation(line: 487, column: 3, scope: !1446)
!1465 = distinct !DISubprogram(name: "AcquireOneVirtualPixel", scope: !3, file: !3, line: 528, type: !1466, scopeLine: 531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1466 = !DISubroutineType(types: !1467)
!1467 = !{!842, !1168, !1389, !1301, !1301, !1057}
!1468 = !DILocalVariable(name: "image", arg: 1, scope: !1465, file: !3, line: 528, type: !1168)
!1469 = !DILocation(line: 528, column: 62, scope: !1465)
!1470 = !DILocalVariable(name: "virtual_pixel_method", arg: 2, scope: !1465, file: !3, line: 529, type: !1389)
!1471 = !DILocation(line: 529, column: 28, scope: !1465)
!1472 = !DILocalVariable(name: "x", arg: 3, scope: !1465, file: !3, line: 529, type: !1301)
!1473 = !DILocation(line: 529, column: 63, scope: !1465)
!1474 = !DILocalVariable(name: "y", arg: 4, scope: !1465, file: !3, line: 529, type: !1301)
!1475 = !DILocation(line: 529, column: 79, scope: !1465)
!1476 = !DILocalVariable(name: "exception", arg: 5, scope: !1465, file: !3, line: 530, type: !1057)
!1477 = !DILocation(line: 530, column: 18, scope: !1465)
!1478 = !DILocalVariable(name: "pixel", scope: !1465, file: !3, line: 533, type: !842)
!1479 = !DILocation(line: 533, column: 5, scope: !1465)
!1480 = !DILocation(line: 535, column: 35, scope: !1465)
!1481 = !DILocation(line: 535, column: 41, scope: !1465)
!1482 = !DILocation(line: 535, column: 62, scope: !1465)
!1483 = !DILocation(line: 535, column: 64, scope: !1465)
!1484 = !DILocation(line: 536, column: 5, scope: !1465)
!1485 = !DILocation(line: 535, column: 10, scope: !1465)
!1486 = !DILocation(line: 537, column: 3, scope: !1465)
!1487 = distinct !DISubprogram(name: "AcquirePixels", scope: !3, file: !3, line: 567, type: !1488, scopeLine: 568, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1488 = !DISubroutineType(types: !1489)
!1489 = !{!1032, !1168}
!1490 = !DILocalVariable(name: "image", arg: 1, scope: !1487, file: !3, line: 567, type: !1168)
!1491 = !DILocation(line: 567, column: 60, scope: !1487)
!1492 = !DILocation(line: 569, column: 31, scope: !1487)
!1493 = !DILocation(line: 569, column: 10, scope: !1487)
!1494 = !DILocation(line: 569, column: 3, scope: !1487)
!1495 = distinct !DISubprogram(name: "AcquireSemaphoreInfo", scope: !3, file: !3, line: 594, type: !1496, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1496 = !DISubroutineType(types: !1497)
!1497 = !{null, !1498}
!1498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!1499 = !DILocalVariable(name: "semaphore_info", arg: 1, scope: !1495, file: !3, line: 594, type: !1498)
!1500 = !DILocation(line: 594, column: 56, scope: !1495)
!1501 = !DILocation(line: 597, column: 8, scope: !1502)
!1502 = distinct !DILexicalBlock(scope: !1495, file: !3, line: 597, column: 7)
!1503 = !DILocation(line: 597, column: 7, scope: !1502)
!1504 = !DILocation(line: 597, column: 23, scope: !1502)
!1505 = !DILocation(line: 597, column: 7, scope: !1495)
!1506 = !DILocation(line: 599, column: 7, scope: !1507)
!1507 = distinct !DILexicalBlock(scope: !1502, file: !3, line: 598, column: 5)
!1508 = !DILocation(line: 600, column: 7, scope: !1507)
!1509 = !DILocation(line: 601, column: 12, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1507, file: !3, line: 601, column: 11)
!1511 = !DILocation(line: 601, column: 11, scope: !1510)
!1512 = !DILocation(line: 601, column: 27, scope: !1510)
!1513 = !DILocation(line: 601, column: 11, scope: !1507)
!1514 = !DILocation(line: 602, column: 25, scope: !1510)
!1515 = !DILocation(line: 602, column: 10, scope: !1510)
!1516 = !DILocation(line: 602, column: 24, scope: !1510)
!1517 = !DILocation(line: 602, column: 9, scope: !1510)
!1518 = !DILocation(line: 603, column: 7, scope: !1507)
!1519 = !DILocation(line: 604, column: 5, scope: !1507)
!1520 = !DILocation(line: 605, column: 1, scope: !1495)
!1521 = distinct !DISubprogram(name: "InitializeMagickMutex", scope: !1285, file: !1285, line: 51, type: !1522, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1522 = !DISubroutineType(types: !1523)
!1523 = !{null}
!1524 = !DILocation(line: 57, column: 15, scope: !1521)
!1525 = !DILocation(line: 58, column: 1, scope: !1521)
!1526 = distinct !DISubprogram(name: "LockMagickMutex", scope: !1285, file: !1285, line: 60, type: !1522, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1527 = !DILocation(line: 80, column: 1, scope: !1526)
!1528 = distinct !DISubprogram(name: "UnlockMagickMutex", scope: !1285, file: !1285, line: 82, type: !1522, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1529 = !DILocation(line: 101, column: 1, scope: !1528)
!1530 = distinct !DISubprogram(name: "AffinityImage", scope: !3, file: !3, line: 639, type: !1531, scopeLine: 641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1531 = !DISubroutineType(types: !1532)
!1532 = !{!834, !1533, !818, !1168}
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1535)
!1535 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantizeInfo", file: !417, line: 57, baseType: !1536)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_QuantizeInfo", file: !417, line: 35, size: 384, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "number_colors", scope: !1536, file: !417, line: 38, baseType: !829, size: 64)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "tree_depth", scope: !1536, file: !417, line: 41, baseType: !829, size: 64, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1536, file: !417, line: 44, baseType: !834, size: 32, offset: 128)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1536, file: !417, line: 47, baseType: !825, size: 32, offset: 160)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "measure_error", scope: !1536, file: !417, line: 50, baseType: !834, size: 32, offset: 192)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1536, file: !417, line: 53, baseType: !829, size: 64, offset: 256)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "dither_method", scope: !1536, file: !417, line: 56, baseType: !1545, size: 32, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_typedef, name: "DitherMethod", file: !417, line: 33, baseType: !416)
!1546 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1530, file: !3, line: 639, type: !1533)
!1547 = !DILocation(line: 639, column: 66, scope: !1530)
!1548 = !DILocalVariable(name: "image", arg: 2, scope: !1530, file: !3, line: 640, type: !818)
!1549 = !DILocation(line: 640, column: 10, scope: !1530)
!1550 = !DILocalVariable(name: "affinity_image", arg: 3, scope: !1530, file: !3, line: 640, type: !1168)
!1551 = !DILocation(line: 640, column: 29, scope: !1530)
!1552 = !DILocation(line: 642, column: 21, scope: !1530)
!1553 = !DILocation(line: 642, column: 35, scope: !1530)
!1554 = !DILocation(line: 642, column: 41, scope: !1530)
!1555 = !DILocation(line: 642, column: 10, scope: !1530)
!1556 = !DILocation(line: 642, column: 3, scope: !1530)
!1557 = distinct !DISubprogram(name: "AffinityImages", scope: !3, file: !3, line: 677, type: !1531, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1558 = !DILocalVariable(name: "quantize_info", arg: 1, scope: !1557, file: !3, line: 677, type: !1533)
!1559 = !DILocation(line: 677, column: 67, scope: !1557)
!1560 = !DILocalVariable(name: "images", arg: 2, scope: !1557, file: !3, line: 678, type: !818)
!1561 = !DILocation(line: 678, column: 10, scope: !1557)
!1562 = !DILocalVariable(name: "affinity_image", arg: 3, scope: !1557, file: !3, line: 678, type: !1168)
!1563 = !DILocation(line: 678, column: 30, scope: !1557)
!1564 = !DILocation(line: 680, column: 22, scope: !1557)
!1565 = !DILocation(line: 680, column: 36, scope: !1557)
!1566 = !DILocation(line: 680, column: 43, scope: !1557)
!1567 = !DILocation(line: 680, column: 10, scope: !1557)
!1568 = !DILocation(line: 680, column: 3, scope: !1557)
!1569 = distinct !DISubprogram(name: "AllocateImage", scope: !3, file: !3, line: 712, type: !1570, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1570 = !DISubroutineType(types: !1571)
!1571 = !{!818, !1111}
!1572 = !DILocalVariable(name: "image_info", arg: 1, scope: !1569, file: !3, line: 712, type: !1111)
!1573 = !DILocation(line: 712, column: 52, scope: !1569)
!1574 = !DILocation(line: 714, column: 23, scope: !1569)
!1575 = !DILocation(line: 714, column: 10, scope: !1569)
!1576 = !DILocation(line: 714, column: 3, scope: !1569)
!1577 = distinct !DISubprogram(name: "AllocateImageColormap", scope: !3, file: !3, line: 749, type: !1578, scopeLine: 751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1578 = !DISubroutineType(types: !1579)
!1579 = !{!834, !818, !1172}
!1580 = !DILocalVariable(name: "image", arg: 1, scope: !1577, file: !3, line: 749, type: !818)
!1581 = !DILocation(line: 749, column: 61, scope: !1577)
!1582 = !DILocalVariable(name: "colors", arg: 2, scope: !1577, file: !3, line: 750, type: !1172)
!1583 = !DILocation(line: 750, column: 16, scope: !1577)
!1584 = !DILocation(line: 752, column: 31, scope: !1577)
!1585 = !DILocation(line: 752, column: 37, scope: !1577)
!1586 = !DILocation(line: 752, column: 10, scope: !1577)
!1587 = !DILocation(line: 752, column: 3, scope: !1577)
!1588 = distinct !DISubprogram(name: "AllocateNextImage", scope: !3, file: !3, line: 787, type: !1589, scopeLine: 788, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1589 = !DISubroutineType(types: !1590)
!1590 = !{null, !1111, !818}
!1591 = !DILocalVariable(name: "image_info", arg: 1, scope: !1588, file: !3, line: 787, type: !1111)
!1592 = !DILocation(line: 787, column: 54, scope: !1588)
!1593 = !DILocalVariable(name: "image", arg: 2, scope: !1588, file: !3, line: 787, type: !818)
!1594 = !DILocation(line: 787, column: 72, scope: !1588)
!1595 = !DILocation(line: 789, column: 20, scope: !1588)
!1596 = !DILocation(line: 789, column: 31, scope: !1588)
!1597 = !DILocation(line: 789, column: 3, scope: !1588)
!1598 = !DILocation(line: 790, column: 1, scope: !1588)
!1599 = distinct !DISubprogram(name: "AllocateString", scope: !3, file: !3, line: 815, type: !1600, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1600 = !DISubroutineType(types: !1601)
!1601 = !{!806, !943}
!1602 = !DILocalVariable(name: "source", arg: 1, scope: !1599, file: !3, line: 815, type: !943)
!1603 = !DILocation(line: 815, column: 47, scope: !1599)
!1604 = !DILocalVariable(name: "destination", scope: !1599, file: !3, line: 818, type: !806)
!1605 = !DILocation(line: 818, column: 6, scope: !1599)
!1606 = !DILocalVariable(name: "length", scope: !1599, file: !3, line: 821, type: !829)
!1607 = !DILocation(line: 821, column: 5, scope: !1599)
!1608 = !DILocation(line: 824, column: 10, scope: !1599)
!1609 = !DILocation(line: 825, column: 17, scope: !1599)
!1610 = !DILocation(line: 825, column: 10, scope: !1599)
!1611 = !DILocation(line: 825, column: 24, scope: !1599)
!1612 = !DILocation(line: 825, column: 38, scope: !1599)
!1613 = !DILocation(line: 825, column: 9, scope: !1599)
!1614 = !DILocation(line: 826, column: 45, scope: !1599)
!1615 = !DILocation(line: 826, column: 24, scope: !1599)
!1616 = !DILocation(line: 826, column: 14, scope: !1599)
!1617 = !DILocation(line: 827, column: 7, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 827, column: 7)
!1619 = !DILocation(line: 827, column: 19, scope: !1618)
!1620 = !DILocation(line: 827, column: 7, scope: !1599)
!1621 = !DILocalVariable(name: "message", scope: !1622, file: !3, line: 828, type: !806)
!1622 = distinct !DILexicalBlock(scope: !1618, file: !3, line: 828, column: 5)
!1623 = !DILocation(line: 828, column: 5, scope: !1622)
!1624 = !DILocalVariable(name: "exception", scope: !1622, file: !3, line: 828, type: !971)
!1625 = !DILocation(line: 829, column: 4, scope: !1599)
!1626 = !DILocation(line: 829, column: 15, scope: !1599)
!1627 = !DILocation(line: 830, column: 7, scope: !1628)
!1628 = distinct !DILexicalBlock(scope: !1599, file: !3, line: 830, column: 7)
!1629 = !DILocation(line: 830, column: 14, scope: !1628)
!1630 = !DILocation(line: 830, column: 7, scope: !1599)
!1631 = !DILocation(line: 831, column: 29, scope: !1628)
!1632 = !DILocation(line: 831, column: 41, scope: !1628)
!1633 = !DILocation(line: 831, column: 48, scope: !1628)
!1634 = !DILocation(line: 831, column: 12, scope: !1628)
!1635 = !DILocation(line: 831, column: 5, scope: !1628)
!1636 = !DILocation(line: 832, column: 10, scope: !1599)
!1637 = !DILocation(line: 832, column: 3, scope: !1599)
!1638 = distinct !DISubprogram(name: "AverageImages", scope: !3, file: !3, line: 867, type: !1639, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1639 = !DISubroutineType(types: !1640)
!1640 = !{!818, !1168, !1057}
!1641 = !DILocalVariable(name: "images", arg: 1, scope: !1638, file: !3, line: 867, type: !1168)
!1642 = !DILocation(line: 867, column: 48, scope: !1638)
!1643 = !DILocalVariable(name: "exception", arg: 2, scope: !1638, file: !3, line: 867, type: !1057)
!1644 = !DILocation(line: 867, column: 70, scope: !1638)
!1645 = !DILocation(line: 869, column: 25, scope: !1638)
!1646 = !DILocation(line: 869, column: 53, scope: !1638)
!1647 = !DILocation(line: 869, column: 10, scope: !1638)
!1648 = !DILocation(line: 869, column: 3, scope: !1638)
!1649 = distinct !DISubprogram(name: "ChannelImage", scope: !3, file: !3, line: 903, type: !1650, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{!7, !818, !1652}
!1652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1156)
!1653 = !DILocalVariable(name: "image", arg: 1, scope: !1649, file: !3, line: 903, type: !818)
!1654 = !DILocation(line: 903, column: 47, scope: !1649)
!1655 = !DILocalVariable(name: "channel", arg: 2, scope: !1649, file: !3, line: 903, type: !1652)
!1656 = !DILocation(line: 903, column: 71, scope: !1649)
!1657 = !DILocation(line: 905, column: 31, scope: !1649)
!1658 = !DILocation(line: 905, column: 37, scope: !1649)
!1659 = !DILocation(line: 905, column: 10, scope: !1649)
!1660 = !DILocation(line: 905, column: 3, scope: !1649)
!1661 = distinct !DISubprogram(name: "ChannelThresholdImage", scope: !3, file: !3, line: 933, type: !1662, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{!7, !818, !943}
!1664 = !DILocalVariable(name: "image", arg: 1, scope: !1661, file: !3, line: 933, type: !818)
!1665 = !DILocation(line: 933, column: 56, scope: !1661)
!1666 = !DILocalVariable(name: "level", arg: 2, scope: !1661, file: !3, line: 933, type: !943)
!1667 = !DILocation(line: 933, column: 74, scope: !1661)
!1668 = !DILocalVariable(name: "threshold", scope: !1661, file: !3, line: 936, type: !1417)
!1669 = !DILocation(line: 936, column: 5, scope: !1661)
!1670 = !DILocalVariable(name: "geometry_info", scope: !1661, file: !3, line: 939, type: !1671)
!1671 = !DIDerivedType(tag: DW_TAG_typedef, name: "GeometryInfo", file: !228, line: 112, baseType: !1672)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GeometryInfo", file: !228, line: 104, size: 320, elements: !1673)
!1673 = !{!1674, !1675, !1676, !1677, !1678}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "rho", scope: !1672, file: !228, line: 107, baseType: !855, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "sigma", scope: !1672, file: !228, line: 108, baseType: !855, size: 64, offset: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "xi", scope: !1672, file: !228, line: 109, baseType: !855, size: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "psi", scope: !1672, file: !228, line: 110, baseType: !855, size: 64, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "chi", scope: !1672, file: !228, line: 111, baseType: !855, size: 64, offset: 256)
!1679 = !DILocation(line: 939, column: 5, scope: !1661)
!1680 = !DILocalVariable(name: "flags", scope: !1661, file: !3, line: 942, type: !7)
!1681 = !DILocation(line: 942, column: 5, scope: !1661)
!1682 = !DILocalVariable(name: "status", scope: !1661, file: !3, line: 943, type: !7)
!1683 = !DILocation(line: 943, column: 5, scope: !1661)
!1684 = !DILocation(line: 947, column: 7, scope: !1685)
!1685 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 947, column: 7)
!1686 = !DILocation(line: 947, column: 14, scope: !1685)
!1687 = !DILocation(line: 947, column: 20, scope: !1685)
!1688 = !DILocation(line: 947, column: 7, scope: !1661)
!1689 = !DILocation(line: 948, column: 61, scope: !1685)
!1690 = !DILocation(line: 948, column: 68, scope: !1685)
!1691 = !DILocation(line: 948, column: 12, scope: !1685)
!1692 = !DILocation(line: 948, column: 5, scope: !1685)
!1693 = !DILocation(line: 949, column: 7, scope: !1694)
!1694 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 949, column: 7)
!1695 = !DILocation(line: 949, column: 14, scope: !1694)
!1696 = !DILocation(line: 949, column: 20, scope: !1694)
!1697 = !DILocation(line: 949, column: 7, scope: !1661)
!1698 = !DILocation(line: 950, column: 12, scope: !1694)
!1699 = !DILocation(line: 950, column: 5, scope: !1694)
!1700 = !DILocation(line: 951, column: 7, scope: !1701)
!1701 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 951, column: 7)
!1702 = !DILocation(line: 951, column: 13, scope: !1701)
!1703 = !DILocation(line: 951, column: 7, scope: !1661)
!1704 = !DILocation(line: 952, column: 5, scope: !1701)
!1705 = !DILocation(line: 953, column: 23, scope: !1661)
!1706 = !DILocation(line: 953, column: 9, scope: !1661)
!1707 = !DILocation(line: 953, column: 8, scope: !1661)
!1708 = !DILocation(line: 954, column: 31, scope: !1661)
!1709 = !DILocation(line: 954, column: 17, scope: !1661)
!1710 = !DILocation(line: 954, column: 13, scope: !1661)
!1711 = !DILocation(line: 954, column: 16, scope: !1661)
!1712 = !DILocation(line: 955, column: 33, scope: !1661)
!1713 = !DILocation(line: 955, column: 19, scope: !1661)
!1714 = !DILocation(line: 955, column: 13, scope: !1661)
!1715 = !DILocation(line: 955, column: 18, scope: !1661)
!1716 = !DILocation(line: 956, column: 8, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 956, column: 7)
!1718 = !DILocation(line: 956, column: 14, scope: !1717)
!1719 = !DILocation(line: 956, column: 28, scope: !1717)
!1720 = !DILocation(line: 956, column: 7, scope: !1661)
!1721 = !DILocation(line: 957, column: 31, scope: !1717)
!1722 = !DILocation(line: 957, column: 15, scope: !1717)
!1723 = !DILocation(line: 957, column: 20, scope: !1717)
!1724 = !DILocation(line: 957, column: 5, scope: !1717)
!1725 = !DILocation(line: 958, column: 32, scope: !1661)
!1726 = !DILocation(line: 958, column: 18, scope: !1661)
!1727 = !DILocation(line: 958, column: 13, scope: !1661)
!1728 = !DILocation(line: 958, column: 17, scope: !1661)
!1729 = !DILocation(line: 959, column: 8, scope: !1730)
!1730 = distinct !DILexicalBlock(scope: !1661, file: !3, line: 959, column: 7)
!1731 = !DILocation(line: 959, column: 14, scope: !1730)
!1732 = !DILocation(line: 959, column: 25, scope: !1730)
!1733 = !DILocation(line: 959, column: 7, scope: !1661)
!1734 = !DILocation(line: 960, column: 30, scope: !1730)
!1735 = !DILocation(line: 960, column: 15, scope: !1730)
!1736 = !DILocation(line: 960, column: 19, scope: !1730)
!1737 = !DILocation(line: 960, column: 5, scope: !1730)
!1738 = !DILocation(line: 961, column: 30, scope: !1661)
!1739 = !DILocation(line: 961, column: 57, scope: !1661)
!1740 = !DILocation(line: 961, column: 47, scope: !1661)
!1741 = !DILocation(line: 961, column: 10, scope: !1661)
!1742 = !DILocation(line: 961, column: 9, scope: !1661)
!1743 = !DILocation(line: 962, column: 31, scope: !1661)
!1744 = !DILocation(line: 962, column: 60, scope: !1661)
!1745 = !DILocation(line: 962, column: 50, scope: !1661)
!1746 = !DILocation(line: 962, column: 11, scope: !1661)
!1747 = !DILocation(line: 962, column: 9, scope: !1661)
!1748 = !DILocation(line: 963, column: 31, scope: !1661)
!1749 = !DILocation(line: 963, column: 59, scope: !1661)
!1750 = !DILocation(line: 963, column: 49, scope: !1661)
!1751 = !DILocation(line: 963, column: 11, scope: !1661)
!1752 = !DILocation(line: 963, column: 9, scope: !1661)
!1753 = !DILocation(line: 964, column: 10, scope: !1661)
!1754 = !DILocation(line: 964, column: 3, scope: !1661)
!1755 = !DILocation(line: 965, column: 1, scope: !1661)
!1756 = distinct !DISubprogram(name: "ClipPathImage", scope: !3, file: !3, line: 1001, type: !1757, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1757 = !DISubroutineType(types: !1758)
!1758 = !{!834, !818, !943, !1759}
!1759 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !834)
!1760 = !DILocalVariable(name: "image", arg: 1, scope: !1756, file: !3, line: 1001, type: !818)
!1761 = !DILocation(line: 1001, column: 53, scope: !1756)
!1762 = !DILocalVariable(name: "pathname", arg: 2, scope: !1756, file: !3, line: 1001, type: !943)
!1763 = !DILocation(line: 1001, column: 71, scope: !1756)
!1764 = !DILocalVariable(name: "inside", arg: 3, scope: !1756, file: !3, line: 1002, type: !1759)
!1765 = !DILocation(line: 1002, column: 27, scope: !1756)
!1766 = !DILocation(line: 1004, column: 24, scope: !1756)
!1767 = !DILocation(line: 1004, column: 30, scope: !1756)
!1768 = !DILocation(line: 1004, column: 39, scope: !1756)
!1769 = !DILocation(line: 1004, column: 10, scope: !1756)
!1770 = !DILocation(line: 1004, column: 3, scope: !1756)
!1771 = distinct !DISubprogram(name: "CloneImageAttributes", scope: !3, file: !3, line: 1036, type: !1772, scopeLine: 1038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!834, !818, !1168}
!1774 = !DILocalVariable(name: "image", arg: 1, scope: !1771, file: !3, line: 1036, type: !818)
!1775 = !DILocation(line: 1036, column: 60, scope: !1771)
!1776 = !DILocalVariable(name: "clone_image", arg: 2, scope: !1771, file: !3, line: 1037, type: !1168)
!1777 = !DILocation(line: 1037, column: 16, scope: !1771)
!1778 = !DILocation(line: 1039, column: 31, scope: !1771)
!1779 = !DILocation(line: 1039, column: 37, scope: !1771)
!1780 = !DILocation(line: 1039, column: 10, scope: !1771)
!1781 = !DILocation(line: 1039, column: 3, scope: !1771)
!1782 = distinct !DISubprogram(name: "CloneMemory", scope: !3, file: !3, line: 1071, type: !1783, scopeLine: 1073, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1783 = !DISubroutineType(types: !1784)
!1784 = !{!805, !805, !1170, !1172}
!1785 = !DILocalVariable(name: "destination", arg: 1, scope: !1782, file: !3, line: 1071, type: !805)
!1786 = !DILocation(line: 1071, column: 38, scope: !1782)
!1787 = !DILocalVariable(name: "source", arg: 2, scope: !1782, file: !3, line: 1071, type: !1170)
!1788 = !DILocation(line: 1071, column: 62, scope: !1782)
!1789 = !DILocalVariable(name: "size", arg: 3, scope: !1782, file: !3, line: 1072, type: !1172)
!1790 = !DILocation(line: 1072, column: 16, scope: !1782)
!1791 = !DILocalVariable(name: "p", scope: !1782, file: !3, line: 1075, type: !809)
!1792 = !DILocation(line: 1075, column: 6, scope: !1782)
!1793 = !DILocalVariable(name: "q", scope: !1782, file: !3, line: 1078, type: !812)
!1794 = !DILocation(line: 1078, column: 6, scope: !1782)
!1795 = !DILocalVariable(name: "i", scope: !1782, file: !3, line: 1081, type: !813)
!1796 = !DILocation(line: 1081, column: 5, scope: !1782)
!1797 = !DILocation(line: 1085, column: 10, scope: !1782)
!1798 = !DILocation(line: 1086, column: 29, scope: !1782)
!1799 = !DILocation(line: 1086, column: 4, scope: !1782)
!1800 = !DILocation(line: 1087, column: 23, scope: !1782)
!1801 = !DILocation(line: 1087, column: 4, scope: !1782)
!1802 = !DILocation(line: 1088, column: 8, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1088, column: 7)
!1804 = !DILocation(line: 1088, column: 13, scope: !1803)
!1805 = !DILocation(line: 1088, column: 10, scope: !1803)
!1806 = !DILocation(line: 1088, column: 16, scope: !1803)
!1807 = !DILocation(line: 1088, column: 21, scope: !1803)
!1808 = !DILocation(line: 1088, column: 23, scope: !1803)
!1809 = !DILocation(line: 1088, column: 22, scope: !1803)
!1810 = !DILocation(line: 1088, column: 32, scope: !1803)
!1811 = !DILocation(line: 1088, column: 29, scope: !1803)
!1812 = !DILocation(line: 1088, column: 7, scope: !1782)
!1813 = !DILocation(line: 1089, column: 29, scope: !1803)
!1814 = !DILocation(line: 1089, column: 41, scope: !1803)
!1815 = !DILocation(line: 1089, column: 48, scope: !1803)
!1816 = !DILocation(line: 1089, column: 12, scope: !1803)
!1817 = !DILocation(line: 1089, column: 5, scope: !1803)
!1818 = !DILocation(line: 1093, column: 6, scope: !1782)
!1819 = !DILocation(line: 1093, column: 4, scope: !1782)
!1820 = !DILocation(line: 1094, column: 6, scope: !1782)
!1821 = !DILocation(line: 1094, column: 4, scope: !1782)
!1822 = !DILocation(line: 1095, column: 21, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1782, file: !3, line: 1095, column: 3)
!1824 = !DILocation(line: 1095, column: 25, scope: !1823)
!1825 = !DILocation(line: 1095, column: 9, scope: !1823)
!1826 = !DILocation(line: 1095, column: 8, scope: !1823)
!1827 = !DILocation(line: 1095, column: 30, scope: !1828)
!1828 = distinct !DILexicalBlock(scope: !1823, file: !3, line: 1095, column: 3)
!1829 = !DILocation(line: 1095, column: 32, scope: !1828)
!1830 = !DILocation(line: 1095, column: 3, scope: !1823)
!1831 = !DILocation(line: 1096, column: 12, scope: !1828)
!1832 = !DILocation(line: 1096, column: 11, scope: !1828)
!1833 = !DILocation(line: 1096, column: 6, scope: !1828)
!1834 = !DILocation(line: 1096, column: 9, scope: !1828)
!1835 = !DILocation(line: 1096, column: 5, scope: !1828)
!1836 = !DILocation(line: 1095, column: 39, scope: !1828)
!1837 = !DILocation(line: 1095, column: 3, scope: !1828)
!1838 = distinct !{!1838, !1830, !1839}
!1839 = !DILocation(line: 1096, column: 15, scope: !1823)
!1840 = !DILocation(line: 1097, column: 10, scope: !1782)
!1841 = !DILocation(line: 1097, column: 3, scope: !1782)
!1842 = !DILocation(line: 1098, column: 1, scope: !1782)
!1843 = distinct !DISubprogram(name: "CloseCacheView", scope: !3, file: !3, line: 1127, type: !1844, scopeLine: 1128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1844 = !DISubroutineType(types: !1845)
!1845 = !{!1229, !1229}
!1846 = !DILocalVariable(name: "view_info", arg: 1, scope: !1843, file: !3, line: 1127, type: !1229)
!1847 = !DILocation(line: 1127, column: 51, scope: !1843)
!1848 = !DILocation(line: 1129, column: 27, scope: !1843)
!1849 = !DILocation(line: 1129, column: 10, scope: !1843)
!1850 = !DILocation(line: 1129, column: 3, scope: !1843)
!1851 = distinct !DISubprogram(name: "ColorFloodfillImage", scope: !3, file: !3, line: 1193, type: !1852, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!1852 = !DISubroutineType(types: !1853)
!1853 = !{!834, !818, !1854, !1033, !1301, !1301, !1963}
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawInfo", file: !542, line: 333, baseType: !1857)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawInfo", file: !542, line: 205, size: 5760, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1862, !1872, !1873, !1874, !1875, !1876, !1903, !1904, !1905, !1906, !1907, !1908, !1910, !1912, !1914, !1915, !1916, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1926, !1928, !1929, !1930, !1931, !1932, !1934, !1935, !1936, !1937, !1938, !1939, !1940, !1942, !1943, !1944, !1956, !1957, !1958, !1959, !1960, !1961}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !1857, file: !542, line: 208, baseType: !806, size: 64)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !1857, file: !542, line: 209, baseType: !806, size: 64, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "viewbox", scope: !1857, file: !542, line: 212, baseType: !882, size: 256, offset: 128)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "affine", scope: !1857, file: !542, line: 215, baseType: !1863, size: 384, offset: 384)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !228, line: 102, baseType: !1864)
!1864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !228, line: 93, size: 384, elements: !1865)
!1865 = !{!1866, !1867, !1868, !1869, !1870, !1871}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1864, file: !228, line: 96, baseType: !855, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !1864, file: !228, line: 97, baseType: !855, size: 64, offset: 64)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !1864, file: !228, line: 98, baseType: !855, size: 64, offset: 128)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1864, file: !228, line: 99, baseType: !855, size: 64, offset: 192)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !1864, file: !228, line: 100, baseType: !855, size: 64, offset: 256)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !1864, file: !228, line: 101, baseType: !855, size: 64, offset: 320)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1857, file: !542, line: 218, baseType: !901, size: 32, offset: 768)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !1857, file: !542, line: 221, baseType: !842, size: 64, offset: 800)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !1857, file: !542, line: 222, baseType: !842, size: 64, offset: 864)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_width", scope: !1857, file: !542, line: 225, baseType: !855, size: 64, offset: 960)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1857, file: !542, line: 228, baseType: !1877, size: 1024, offset: 1024)
!1877 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientInfo", file: !542, line: 184, baseType: !1878)
!1878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GradientInfo", file: !542, line: 153, size: 1024, elements: !1879)
!1879 = !{!1880, !1882, !1883, !1884, !1891, !1892, !1894, !1895, !1896, !1902}
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1878, file: !542, line: 156, baseType: !1881, size: 32)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientType", file: !542, line: 75, baseType: !541)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_box", scope: !1878, file: !542, line: 159, baseType: !882, size: 256, offset: 64)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_vector", scope: !1878, file: !542, line: 162, baseType: !1025, size: 256, offset: 320)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "stops", scope: !1878, file: !542, line: 165, baseType: !1885, size: 64, offset: 576)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DIDerivedType(tag: DW_TAG_typedef, name: "StopInfo", file: !542, line: 151, baseType: !1887)
!1887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_StopInfo", file: !542, line: 144, size: 512, elements: !1888)
!1888 = !{!1889, !1890}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !1887, file: !542, line: 147, baseType: !1417, size: 448)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1887, file: !542, line: 150, baseType: !1034, size: 32, offset: 448)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "number_stops", scope: !1878, file: !542, line: 168, baseType: !829, size: 64, offset: 640)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !1878, file: !542, line: 171, baseType: !1893, size: 32, offset: 704)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpreadMethod", file: !542, line: 135, baseType: !547)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1878, file: !542, line: 174, baseType: !834, size: 32, offset: 736)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1878, file: !542, line: 177, baseType: !829, size: 64, offset: 768)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !1878, file: !542, line: 180, baseType: !1897, size: 128, offset: 832)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !542, line: 142, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !542, line: 137, size: 128, elements: !1899)
!1899 = !{!1900, !1901}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1898, file: !542, line: 140, baseType: !855, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1898, file: !542, line: 141, baseType: !855, size: 64, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1878, file: !542, line: 183, baseType: !1034, size: 32, offset: 960)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "fill_pattern", scope: !1857, file: !542, line: 231, baseType: !818, size: 64, offset: 2048)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1857, file: !542, line: 232, baseType: !818, size: 64, offset: 2112)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_pattern", scope: !1857, file: !542, line: 233, baseType: !818, size: 64, offset: 2176)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_antialias", scope: !1857, file: !542, line: 236, baseType: !834, size: 32, offset: 2240)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "text_antialias", scope: !1857, file: !542, line: 237, baseType: !834, size: 32, offset: 2272)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "fill_rule", scope: !1857, file: !542, line: 240, baseType: !1909, size: 32, offset: 2304)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "FillRule", file: !542, line: 68, baseType: !553)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "linecap", scope: !1857, file: !542, line: 243, baseType: !1911, size: 32, offset: 2336)
!1911 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineCap", file: !542, line: 83, baseType: !558)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "linejoin", scope: !1857, file: !542, line: 246, baseType: !1913, size: 32, offset: 2368)
!1913 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineJoin", file: !542, line: 91, baseType: !564)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "miterlimit", scope: !1857, file: !542, line: 249, baseType: !829, size: 64, offset: 2432)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "dash_offset", scope: !1857, file: !542, line: 252, baseType: !855, size: 64, offset: 2496)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "decorate", scope: !1857, file: !542, line: 255, baseType: !1917, size: 32, offset: 2560)
!1917 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecorationType", file: !542, line: 53, baseType: !570)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !1857, file: !542, line: 258, baseType: !903, size: 32, offset: 2592)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1857, file: !542, line: 261, baseType: !806, size: 64, offset: 2624)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !1857, file: !542, line: 264, baseType: !829, size: 64, offset: 2688)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1857, file: !542, line: 267, baseType: !806, size: 64, offset: 2752)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !1857, file: !542, line: 268, baseType: !806, size: 64, offset: 2816)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !1857, file: !542, line: 269, baseType: !806, size: 64, offset: 2880)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !1857, file: !542, line: 272, baseType: !1925, size: 32, offset: 2944)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "StyleType", file: !578, line: 47, baseType: !577)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "stretch", scope: !1857, file: !542, line: 275, baseType: !1927, size: 32, offset: 2976)
!1927 = !DIDerivedType(tag: DW_TAG_typedef, name: "StretchType", file: !578, line: 38, baseType: !585)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1857, file: !542, line: 278, baseType: !829, size: 64, offset: 3008)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !1857, file: !542, line: 281, baseType: !806, size: 64, offset: 3072)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1857, file: !542, line: 284, baseType: !855, size: 64, offset: 3136)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1857, file: !542, line: 287, baseType: !806, size: 64, offset: 3200)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1857, file: !542, line: 290, baseType: !1933, size: 32, offset: 3264)
!1933 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlignType", file: !542, line: 36, baseType: !598)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "undercolor", scope: !1857, file: !542, line: 293, baseType: !842, size: 64, offset: 3296)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1857, file: !542, line: 294, baseType: !842, size: 64, offset: 3360)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1857, file: !542, line: 297, baseType: !806, size: 64, offset: 3456)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "dash_pattern", scope: !1857, file: !542, line: 300, baseType: !1243, size: 64, offset: 3520)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !1857, file: !542, line: 303, baseType: !806, size: 64, offset: 3584)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1857, file: !542, line: 306, baseType: !1025, size: 256, offset: 3648)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "clip_units", scope: !1857, file: !542, line: 309, baseType: !1941, size: 32, offset: 3904)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClipPathUnits", file: !542, line: 44, baseType: !604)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !1857, file: !542, line: 312, baseType: !846, size: 16, offset: 3936)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !1857, file: !542, line: 315, baseType: !834, size: 32, offset: 3968)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "element_reference", scope: !1857, file: !542, line: 318, baseType: !1945, size: 1344, offset: 4032)
!1945 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementReference", file: !542, line: 203, baseType: !1946)
!1946 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ElementReference", file: !542, line: 186, size: 1344, elements: !1947)
!1947 = !{!1948, !1949, !1951, !1952, !1953, !1955}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1946, file: !542, line: 189, baseType: !806, size: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1946, file: !542, line: 192, baseType: !1950, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceType", file: !542, line: 127, baseType: !610)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1946, file: !542, line: 195, baseType: !1877, size: 1024, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1946, file: !542, line: 198, baseType: !829, size: 64, offset: 1152)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1946, file: !542, line: 201, baseType: !1954, size: 64, offset: 1216)
!1954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1946, file: !542, line: 202, baseType: !1954, size: 64, offset: 1280)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1857, file: !542, line: 321, baseType: !834, size: 32, offset: 5376)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1857, file: !542, line: 324, baseType: !829, size: 64, offset: 5440)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !1857, file: !542, line: 327, baseType: !855, size: 64, offset: 5504)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "interword_spacing", scope: !1857, file: !542, line: 328, baseType: !855, size: 64, offset: 5568)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "interline_spacing", scope: !1857, file: !542, line: 329, baseType: !855, size: 64, offset: 5632)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1857, file: !542, line: 332, baseType: !1962, size: 32, offset: 5696)
!1962 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirectionType", file: !542, line: 60, baseType: !614)
!1963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1964)
!1964 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintMethod", file: !542, line: 101, baseType: !619)
!1965 = !DILocalVariable(name: "image", arg: 1, scope: !1851, file: !3, line: 1193, type: !818)
!1966 = !DILocation(line: 1193, column: 59, scope: !1851)
!1967 = !DILocalVariable(name: "draw_info", arg: 2, scope: !1851, file: !3, line: 1194, type: !1854)
!1968 = !DILocation(line: 1194, column: 19, scope: !1851)
!1969 = !DILocalVariable(name: "target", arg: 3, scope: !1851, file: !3, line: 1194, type: !1033)
!1970 = !DILocation(line: 1194, column: 47, scope: !1851)
!1971 = !DILocalVariable(name: "x_offset", arg: 4, scope: !1851, file: !3, line: 1194, type: !1301)
!1972 = !DILocation(line: 1194, column: 68, scope: !1851)
!1973 = !DILocalVariable(name: "y_offset", arg: 5, scope: !1851, file: !3, line: 1195, type: !1301)
!1974 = !DILocation(line: 1195, column: 17, scope: !1851)
!1975 = !DILocalVariable(name: "method", arg: 6, scope: !1851, file: !3, line: 1195, type: !1963)
!1976 = !DILocation(line: 1195, column: 44, scope: !1851)
!1977 = !DILocalVariable(name: "floodplane_image", scope: !1851, file: !3, line: 1198, type: !818)
!1978 = !DILocation(line: 1198, column: 6, scope: !1851)
!1979 = !DILocalVariable(name: "skip", scope: !1851, file: !3, line: 1201, type: !834)
!1980 = !DILocation(line: 1201, column: 5, scope: !1851)
!1981 = !DILocalVariable(name: "fill_color", scope: !1851, file: !3, line: 1204, type: !842)
!1982 = !DILocation(line: 1204, column: 5, scope: !1851)
!1983 = !DILocalVariable(name: "s", scope: !1851, file: !3, line: 1207, type: !1024)
!1984 = !DILocation(line: 1207, column: 6, scope: !1851)
!1985 = !DILocalVariable(name: "segment_stack", scope: !1851, file: !3, line: 1210, type: !1024)
!1986 = !DILocation(line: 1210, column: 6, scope: !1851)
!1987 = !DILocalVariable(name: "offset", scope: !1851, file: !3, line: 1213, type: !813)
!1988 = !DILocation(line: 1213, column: 5, scope: !1851)
!1989 = !DILocalVariable(name: "start", scope: !1851, file: !3, line: 1214, type: !813)
!1990 = !DILocation(line: 1214, column: 5, scope: !1851)
!1991 = !DILocalVariable(name: "x", scope: !1851, file: !3, line: 1215, type: !813)
!1992 = !DILocation(line: 1215, column: 5, scope: !1851)
!1993 = !DILocalVariable(name: "x1", scope: !1851, file: !3, line: 1216, type: !813)
!1994 = !DILocation(line: 1216, column: 5, scope: !1851)
!1995 = !DILocalVariable(name: "x2", scope: !1851, file: !3, line: 1217, type: !813)
!1996 = !DILocation(line: 1217, column: 5, scope: !1851)
!1997 = !DILocalVariable(name: "y", scope: !1851, file: !3, line: 1218, type: !813)
!1998 = !DILocation(line: 1218, column: 5, scope: !1851)
!1999 = !DILocation(line: 1225, column: 7, scope: !2000)
!2000 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1225, column: 7)
!2001 = !DILocation(line: 1225, column: 14, scope: !2000)
!2002 = !DILocation(line: 1225, column: 20, scope: !2000)
!2003 = !DILocation(line: 1225, column: 7, scope: !1851)
!2004 = !DILocation(line: 1226, column: 61, scope: !2000)
!2005 = !DILocation(line: 1226, column: 68, scope: !2000)
!2006 = !DILocation(line: 1226, column: 12, scope: !2000)
!2007 = !DILocation(line: 1226, column: 5, scope: !2000)
!2008 = !DILocation(line: 1229, column: 8, scope: !2009)
!2009 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1229, column: 7)
!2010 = !DILocation(line: 1229, column: 17, scope: !2009)
!2011 = !DILocation(line: 1229, column: 22, scope: !2009)
!2012 = !DILocation(line: 1229, column: 26, scope: !2009)
!2013 = !DILocation(line: 1229, column: 48, scope: !2009)
!2014 = !DILocation(line: 1229, column: 55, scope: !2009)
!2015 = !DILocation(line: 1229, column: 35, scope: !2009)
!2016 = !DILocation(line: 1229, column: 7, scope: !1851)
!2017 = !DILocation(line: 1230, column: 5, scope: !2009)
!2018 = !DILocation(line: 1231, column: 8, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1231, column: 7)
!2020 = !DILocation(line: 1231, column: 17, scope: !2019)
!2021 = !DILocation(line: 1231, column: 22, scope: !2019)
!2022 = !DILocation(line: 1231, column: 26, scope: !2019)
!2023 = !DILocation(line: 1231, column: 48, scope: !2019)
!2024 = !DILocation(line: 1231, column: 55, scope: !2019)
!2025 = !DILocation(line: 1231, column: 35, scope: !2019)
!2026 = !DILocation(line: 1231, column: 7, scope: !1851)
!2027 = !DILocation(line: 1232, column: 5, scope: !2019)
!2028 = !DILocation(line: 1233, column: 28, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1233, column: 7)
!2030 = !DILocation(line: 1233, column: 7, scope: !2029)
!2031 = !DILocation(line: 1233, column: 47, scope: !2029)
!2032 = !DILocation(line: 1233, column: 7, scope: !1851)
!2033 = !DILocation(line: 1234, column: 5, scope: !2029)
!2034 = !DILocation(line: 1235, column: 7, scope: !2035)
!2035 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1235, column: 7)
!2036 = !DILocation(line: 1235, column: 14, scope: !2035)
!2037 = !DILocation(line: 1235, column: 20, scope: !2035)
!2038 = !DILocation(line: 1235, column: 7, scope: !1851)
!2039 = !DILocation(line: 1236, column: 33, scope: !2035)
!2040 = !DILocation(line: 1236, column: 12, scope: !2035)
!2041 = !DILocation(line: 1236, column: 5, scope: !2035)
!2042 = !DILocation(line: 1237, column: 31, scope: !1851)
!2043 = !DILocation(line: 1237, column: 37, scope: !1851)
!2044 = !DILocation(line: 1237, column: 44, scope: !1851)
!2045 = !DILocation(line: 1237, column: 52, scope: !1851)
!2046 = !DILocation(line: 1237, column: 59, scope: !1851)
!2047 = !DILocation(line: 1238, column: 6, scope: !1851)
!2048 = !DILocation(line: 1238, column: 13, scope: !1851)
!2049 = !DILocation(line: 1237, column: 20, scope: !1851)
!2050 = !DILocation(line: 1237, column: 19, scope: !1851)
!2051 = !DILocation(line: 1239, column: 7, scope: !2052)
!2052 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1239, column: 7)
!2053 = !DILocation(line: 1239, column: 24, scope: !2052)
!2054 = !DILocation(line: 1239, column: 7, scope: !1851)
!2055 = !DILocation(line: 1240, column: 5, scope: !2052)
!2056 = !DILocation(line: 1241, column: 31, scope: !1851)
!2057 = !DILocation(line: 1241, column: 10, scope: !1851)
!2058 = !DILocation(line: 1245, column: 33, scope: !1851)
!2059 = !DILocation(line: 1245, column: 17, scope: !1851)
!2060 = !DILocation(line: 1245, column: 16, scope: !1851)
!2061 = !DILocation(line: 1247, column: 7, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1247, column: 7)
!2063 = !DILocation(line: 1247, column: 21, scope: !2062)
!2064 = !DILocation(line: 1247, column: 7, scope: !1851)
!2065 = !DILocation(line: 1249, column: 37, scope: !2066)
!2066 = distinct !DILexicalBlock(scope: !2062, file: !3, line: 1248, column: 5)
!2067 = !DILocation(line: 1249, column: 24, scope: !2066)
!2068 = !DILocation(line: 1249, column: 23, scope: !2066)
!2069 = !DILocation(line: 1250, column: 7, scope: !2070)
!2070 = distinct !DILexicalBlock(scope: !2071, file: !3, line: 1250, column: 7)
!2071 = distinct !DILexicalBlock(scope: !2066, file: !3, line: 1250, column: 7)
!2072 = !DILocation(line: 1250, column: 7, scope: !2071)
!2073 = !DILocation(line: 1256, column: 5, scope: !1851)
!2074 = !DILocation(line: 1256, column: 4, scope: !1851)
!2075 = !DILocation(line: 1257, column: 5, scope: !1851)
!2076 = !DILocation(line: 1257, column: 4, scope: !1851)
!2077 = !DILocation(line: 1258, column: 8, scope: !1851)
!2078 = !DILocation(line: 1259, column: 5, scope: !1851)
!2079 = !DILocation(line: 1259, column: 4, scope: !1851)
!2080 = !DILocation(line: 1260, column: 3, scope: !2081)
!2081 = distinct !DILexicalBlock(scope: !2082, file: !3, line: 1260, column: 3)
!2082 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1260, column: 3)
!2083 = !DILocation(line: 1260, column: 3, scope: !2082)
!2084 = !DILocation(line: 1260, column: 3, scope: !2085)
!2085 = distinct !DILexicalBlock(scope: !2086, file: !3, line: 1260, column: 3)
!2086 = distinct !DILexicalBlock(scope: !2081, file: !3, line: 1260, column: 3)
!2087 = !DILocation(line: 1260, column: 3, scope: !2086)
!2088 = !DILocation(line: 1260, column: 3, scope: !2089)
!2089 = distinct !DILexicalBlock(scope: !2090, file: !3, line: 1260, column: 3)
!2090 = distinct !DILexicalBlock(scope: !2081, file: !3, line: 1260, column: 3)
!2091 = !DILocation(line: 1260, column: 3, scope: !2090)
!2092 = !DILocation(line: 1260, column: 3, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2089, file: !3, line: 1260, column: 3)
!2094 = !DILocation(line: 1261, column: 3, scope: !2095)
!2095 = distinct !DILexicalBlock(scope: !2096, file: !3, line: 1261, column: 3)
!2096 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1261, column: 3)
!2097 = !DILocation(line: 1261, column: 3, scope: !2096)
!2098 = !DILocation(line: 1261, column: 3, scope: !2099)
!2099 = distinct !DILexicalBlock(scope: !2100, file: !3, line: 1261, column: 3)
!2100 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 1261, column: 3)
!2101 = !DILocation(line: 1261, column: 3, scope: !2100)
!2102 = !DILocation(line: 1261, column: 3, scope: !2103)
!2103 = distinct !DILexicalBlock(scope: !2104, file: !3, line: 1261, column: 3)
!2104 = distinct !DILexicalBlock(scope: !2095, file: !3, line: 1261, column: 3)
!2105 = !DILocation(line: 1261, column: 3, scope: !2104)
!2106 = !DILocation(line: 1261, column: 3, scope: !2107)
!2107 = distinct !DILexicalBlock(scope: !2103, file: !3, line: 1261, column: 3)
!2108 = !DILocation(line: 1262, column: 3, scope: !1851)
!2109 = !DILocation(line: 1262, column: 10, scope: !1851)
!2110 = !DILocation(line: 1262, column: 14, scope: !1851)
!2111 = !DILocation(line: 1262, column: 12, scope: !1851)
!2112 = !DILocalVariable(name: "p", scope: !2113, file: !3, line: 1265, type: !2114)
!2113 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1263, column: 3)
!2114 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1032)
!2115 = !DILocation(line: 1265, column: 17, scope: !2113)
!2116 = !DILocalVariable(name: "x", scope: !2113, file: !3, line: 1268, type: !813)
!2117 = !DILocation(line: 1268, column: 7, scope: !2113)
!2118 = !DILocalVariable(name: "q", scope: !2113, file: !3, line: 1271, type: !2119)
!2119 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !841)
!2120 = !DILocation(line: 1271, column: 17, scope: !2113)
!2121 = !DILocation(line: 1276, column: 6, scope: !2113)
!2122 = !DILocation(line: 1277, column: 18, scope: !2113)
!2123 = !DILocation(line: 1277, column: 21, scope: !2113)
!2124 = !DILocation(line: 1277, column: 8, scope: !2113)
!2125 = !DILocation(line: 1277, column: 7, scope: !2113)
!2126 = !DILocation(line: 1278, column: 18, scope: !2113)
!2127 = !DILocation(line: 1278, column: 21, scope: !2113)
!2128 = !DILocation(line: 1278, column: 8, scope: !2113)
!2129 = !DILocation(line: 1278, column: 7, scope: !2113)
!2130 = !DILocation(line: 1279, column: 22, scope: !2113)
!2131 = !DILocation(line: 1279, column: 25, scope: !2113)
!2132 = !DILocation(line: 1279, column: 12, scope: !2113)
!2133 = !DILocation(line: 1279, column: 11, scope: !2113)
!2134 = !DILocation(line: 1280, column: 17, scope: !2113)
!2135 = !DILocation(line: 1280, column: 20, scope: !2113)
!2136 = !DILocation(line: 1280, column: 7, scope: !2113)
!2137 = !DILocation(line: 1280, column: 23, scope: !2113)
!2138 = !DILocation(line: 1280, column: 22, scope: !2113)
!2139 = !DILocation(line: 1280, column: 6, scope: !2113)
!2140 = !DILocation(line: 1284, column: 24, scope: !2113)
!2141 = !DILocation(line: 1284, column: 32, scope: !2113)
!2142 = !DILocation(line: 1284, column: 44, scope: !2113)
!2143 = !DILocation(line: 1284, column: 46, scope: !2113)
!2144 = !DILocation(line: 1284, column: 53, scope: !2113)
!2145 = !DILocation(line: 1284, column: 60, scope: !2113)
!2146 = !DILocation(line: 1284, column: 7, scope: !2113)
!2147 = !DILocation(line: 1284, column: 6, scope: !2113)
!2148 = !DILocation(line: 1285, column: 26, scope: !2113)
!2149 = !DILocation(line: 1285, column: 45, scope: !2113)
!2150 = !DILocation(line: 1285, column: 57, scope: !2113)
!2151 = !DILocation(line: 1285, column: 59, scope: !2113)
!2152 = !DILocation(line: 1286, column: 8, scope: !2113)
!2153 = !DILocation(line: 1286, column: 15, scope: !2113)
!2154 = !DILocation(line: 1285, column: 7, scope: !2113)
!2155 = !DILocation(line: 1285, column: 6, scope: !2113)
!2156 = !DILocation(line: 1287, column: 10, scope: !2157)
!2157 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1287, column: 9)
!2158 = !DILocation(line: 1287, column: 12, scope: !2157)
!2159 = !DILocation(line: 1287, column: 43, scope: !2157)
!2160 = !DILocation(line: 1287, column: 47, scope: !2157)
!2161 = !DILocation(line: 1287, column: 49, scope: !2157)
!2162 = !DILocation(line: 1287, column: 9, scope: !2113)
!2163 = !DILocation(line: 1288, column: 7, scope: !2157)
!2164 = !DILocation(line: 1289, column: 8, scope: !2113)
!2165 = !DILocation(line: 1289, column: 6, scope: !2113)
!2166 = !DILocation(line: 1290, column: 8, scope: !2113)
!2167 = !DILocation(line: 1290, column: 6, scope: !2113)
!2168 = !DILocation(line: 1291, column: 12, scope: !2169)
!2169 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1291, column: 5)
!2170 = !DILocation(line: 1291, column: 11, scope: !2169)
!2171 = !DILocation(line: 1291, column: 10, scope: !2169)
!2172 = !DILocation(line: 1291, column: 16, scope: !2173)
!2173 = distinct !DILexicalBlock(scope: !2169, file: !3, line: 1291, column: 5)
!2174 = !DILocation(line: 1291, column: 18, scope: !2173)
!2175 = !DILocation(line: 1291, column: 5, scope: !2169)
!2176 = !DILocation(line: 1293, column: 11, scope: !2177)
!2177 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1293, column: 11)
!2178 = distinct !DILexicalBlock(scope: !2173, file: !3, line: 1292, column: 5)
!2179 = !DILocation(line: 1293, column: 14, scope: !2177)
!2180 = !DILocation(line: 1293, column: 22, scope: !2177)
!2181 = !DILocation(line: 1293, column: 11, scope: !2178)
!2182 = !DILocation(line: 1294, column: 9, scope: !2177)
!2183 = !DILocation(line: 1295, column: 11, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2178, file: !3, line: 1295, column: 11)
!2185 = !DILocation(line: 1295, column: 18, scope: !2184)
!2186 = !DILocation(line: 1295, column: 11, scope: !2178)
!2187 = !DILocation(line: 1297, column: 30, scope: !2188)
!2188 = distinct !DILexicalBlock(scope: !2189, file: !3, line: 1297, column: 15)
!2189 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 1296, column: 9)
!2190 = !DILocation(line: 1297, column: 36, scope: !2188)
!2191 = !DILocation(line: 1297, column: 15, scope: !2188)
!2192 = !DILocation(line: 1297, column: 47, scope: !2188)
!2193 = !DILocation(line: 1297, column: 15, scope: !2189)
!2194 = !DILocation(line: 1298, column: 13, scope: !2188)
!2195 = !DILocation(line: 1299, column: 9, scope: !2189)
!2196 = !DILocation(line: 1301, column: 28, scope: !2197)
!2197 = distinct !DILexicalBlock(scope: !2184, file: !3, line: 1301, column: 13)
!2198 = !DILocation(line: 1301, column: 34, scope: !2197)
!2199 = !DILocation(line: 1301, column: 13, scope: !2197)
!2200 = !DILocation(line: 1301, column: 45, scope: !2197)
!2201 = !DILocation(line: 1301, column: 13, scope: !2184)
!2202 = !DILocation(line: 1302, column: 11, scope: !2197)
!2203 = !DILocation(line: 1303, column: 7, scope: !2178)
!2204 = !DILocation(line: 1303, column: 10, scope: !2178)
!2205 = !DILocation(line: 1303, column: 17, scope: !2178)
!2206 = !DILocation(line: 1304, column: 8, scope: !2178)
!2207 = !DILocation(line: 1305, column: 8, scope: !2178)
!2208 = !DILocation(line: 1306, column: 5, scope: !2178)
!2209 = !DILocation(line: 1291, column: 25, scope: !2173)
!2210 = !DILocation(line: 1291, column: 5, scope: !2173)
!2211 = distinct !{!2211, !2175, !2212}
!2212 = !DILocation(line: 1306, column: 5, scope: !2169)
!2213 = !DILocation(line: 1307, column: 29, scope: !2214)
!2214 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1307, column: 9)
!2215 = !DILocation(line: 1307, column: 47, scope: !2214)
!2216 = !DILocation(line: 1307, column: 54, scope: !2214)
!2217 = !DILocation(line: 1307, column: 9, scope: !2214)
!2218 = !DILocation(line: 1307, column: 65, scope: !2214)
!2219 = !DILocation(line: 1307, column: 9, scope: !2113)
!2220 = !DILocation(line: 1308, column: 7, scope: !2214)
!2221 = !DILocation(line: 1309, column: 10, scope: !2113)
!2222 = !DILocation(line: 1309, column: 15, scope: !2113)
!2223 = !DILocation(line: 1309, column: 12, scope: !2113)
!2224 = !DILocation(line: 1309, column: 9, scope: !2113)
!2225 = !DILocation(line: 1310, column: 9, scope: !2226)
!2226 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1310, column: 9)
!2227 = !DILocation(line: 1310, column: 14, scope: !2226)
!2228 = !DILocation(line: 1310, column: 9, scope: !2113)
!2229 = !DILocation(line: 1312, column: 15, scope: !2230)
!2230 = distinct !DILexicalBlock(scope: !2226, file: !3, line: 1311, column: 7)
!2231 = !DILocation(line: 1312, column: 16, scope: !2230)
!2232 = !DILocation(line: 1312, column: 14, scope: !2230)
!2233 = !DILocation(line: 1313, column: 13, scope: !2234)
!2234 = distinct !DILexicalBlock(scope: !2230, file: !3, line: 1313, column: 13)
!2235 = !DILocation(line: 1313, column: 21, scope: !2234)
!2236 = !DILocation(line: 1313, column: 19, scope: !2234)
!2237 = !DILocation(line: 1313, column: 13, scope: !2230)
!2238 = !DILocation(line: 1314, column: 11, scope: !2239)
!2239 = distinct !DILexicalBlock(scope: !2240, file: !3, line: 1314, column: 11)
!2240 = distinct !DILexicalBlock(scope: !2234, file: !3, line: 1314, column: 11)
!2241 = !DILocation(line: 1314, column: 11, scope: !2240)
!2242 = !DILocation(line: 1314, column: 11, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2244, file: !3, line: 1314, column: 11)
!2244 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1314, column: 11)
!2245 = !DILocation(line: 1314, column: 11, scope: !2244)
!2246 = !DILocation(line: 1314, column: 11, scope: !2247)
!2247 = distinct !DILexicalBlock(scope: !2248, file: !3, line: 1314, column: 11)
!2248 = distinct !DILexicalBlock(scope: !2239, file: !3, line: 1314, column: 11)
!2249 = !DILocation(line: 1314, column: 11, scope: !2248)
!2250 = !DILocation(line: 1314, column: 11, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2247, file: !3, line: 1314, column: 11)
!2252 = !DILocation(line: 1315, column: 11, scope: !2230)
!2253 = !DILocation(line: 1315, column: 13, scope: !2230)
!2254 = !DILocation(line: 1315, column: 10, scope: !2230)
!2255 = !DILocation(line: 1316, column: 7, scope: !2230)
!2256 = !DILocation(line: 1317, column: 5, scope: !2113)
!2257 = !DILocation(line: 1319, column: 11, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1319, column: 11)
!2259 = distinct !DILexicalBlock(scope: !2113, file: !3, line: 1318, column: 5)
!2260 = !DILocation(line: 1319, column: 16, scope: !2258)
!2261 = !DILocation(line: 1319, column: 11, scope: !2259)
!2262 = !DILocation(line: 1321, column: 15, scope: !2263)
!2263 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1321, column: 15)
!2264 = distinct !DILexicalBlock(scope: !2258, file: !3, line: 1320, column: 9)
!2265 = !DILocation(line: 1321, column: 29, scope: !2263)
!2266 = !DILocation(line: 1321, column: 36, scope: !2263)
!2267 = !DILocation(line: 1321, column: 17, scope: !2263)
!2268 = !DILocation(line: 1321, column: 15, scope: !2264)
!2269 = !DILocation(line: 1323, column: 34, scope: !2270)
!2270 = distinct !DILexicalBlock(scope: !2263, file: !3, line: 1322, column: 13)
!2271 = !DILocation(line: 1323, column: 40, scope: !2270)
!2272 = !DILocation(line: 1323, column: 42, scope: !2270)
!2273 = !DILocation(line: 1323, column: 44, scope: !2270)
!2274 = !DILocation(line: 1323, column: 51, scope: !2270)
!2275 = !DILocation(line: 1323, column: 59, scope: !2270)
!2276 = !DILocation(line: 1323, column: 58, scope: !2270)
!2277 = !DILocation(line: 1324, column: 18, scope: !2270)
!2278 = !DILocation(line: 1324, column: 25, scope: !2270)
!2279 = !DILocation(line: 1323, column: 17, scope: !2270)
!2280 = !DILocation(line: 1323, column: 16, scope: !2270)
!2281 = !DILocation(line: 1325, column: 36, scope: !2270)
!2282 = !DILocation(line: 1325, column: 53, scope: !2270)
!2283 = !DILocation(line: 1325, column: 55, scope: !2270)
!2284 = !DILocation(line: 1325, column: 57, scope: !2270)
!2285 = !DILocation(line: 1325, column: 64, scope: !2270)
!2286 = !DILocation(line: 1325, column: 72, scope: !2270)
!2287 = !DILocation(line: 1325, column: 71, scope: !2270)
!2288 = !DILocation(line: 1326, column: 18, scope: !2270)
!2289 = !DILocation(line: 1326, column: 25, scope: !2270)
!2290 = !DILocation(line: 1325, column: 17, scope: !2270)
!2291 = !DILocation(line: 1325, column: 16, scope: !2270)
!2292 = !DILocation(line: 1327, column: 20, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 1327, column: 19)
!2294 = !DILocation(line: 1327, column: 22, scope: !2293)
!2295 = !DILocation(line: 1327, column: 53, scope: !2293)
!2296 = !DILocation(line: 1328, column: 20, scope: !2293)
!2297 = !DILocation(line: 1328, column: 22, scope: !2293)
!2298 = !DILocation(line: 1327, column: 19, scope: !2270)
!2299 = !DILocation(line: 1329, column: 17, scope: !2293)
!2300 = !DILocation(line: 1330, column: 15, scope: !2270)
!2301 = !DILocation(line: 1330, column: 23, scope: !2302)
!2302 = distinct !DILexicalBlock(scope: !2303, file: !3, line: 1330, column: 15)
!2303 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 1330, column: 15)
!2304 = !DILocation(line: 1330, column: 37, scope: !2302)
!2305 = !DILocation(line: 1330, column: 44, scope: !2302)
!2306 = !DILocation(line: 1330, column: 25, scope: !2302)
!2307 = !DILocation(line: 1330, column: 15, scope: !2303)
!2308 = !DILocation(line: 1332, column: 21, scope: !2309)
!2309 = distinct !DILexicalBlock(scope: !2310, file: !3, line: 1332, column: 21)
!2310 = distinct !DILexicalBlock(scope: !2302, file: !3, line: 1331, column: 15)
!2311 = !DILocation(line: 1332, column: 24, scope: !2309)
!2312 = !DILocation(line: 1332, column: 32, scope: !2309)
!2313 = !DILocation(line: 1332, column: 21, scope: !2310)
!2314 = !DILocation(line: 1333, column: 19, scope: !2309)
!2315 = !DILocation(line: 1334, column: 21, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2310, file: !3, line: 1334, column: 21)
!2317 = !DILocation(line: 1334, column: 28, scope: !2316)
!2318 = !DILocation(line: 1334, column: 21, scope: !2310)
!2319 = !DILocation(line: 1336, column: 40, scope: !2320)
!2320 = distinct !DILexicalBlock(scope: !2321, file: !3, line: 1336, column: 25)
!2321 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 1335, column: 19)
!2322 = !DILocation(line: 1336, column: 46, scope: !2320)
!2323 = !DILocation(line: 1336, column: 25, scope: !2320)
!2324 = !DILocation(line: 1336, column: 57, scope: !2320)
!2325 = !DILocation(line: 1336, column: 25, scope: !2321)
!2326 = !DILocation(line: 1337, column: 23, scope: !2320)
!2327 = !DILocation(line: 1338, column: 19, scope: !2321)
!2328 = !DILocation(line: 1340, column: 38, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2316, file: !3, line: 1340, column: 23)
!2330 = !DILocation(line: 1340, column: 44, scope: !2329)
!2331 = !DILocation(line: 1340, column: 23, scope: !2329)
!2332 = !DILocation(line: 1340, column: 55, scope: !2329)
!2333 = !DILocation(line: 1340, column: 23, scope: !2316)
!2334 = !DILocation(line: 1341, column: 21, scope: !2329)
!2335 = !DILocation(line: 1342, column: 17, scope: !2310)
!2336 = !DILocation(line: 1342, column: 20, scope: !2310)
!2337 = !DILocation(line: 1342, column: 27, scope: !2310)
!2338 = !DILocation(line: 1343, column: 18, scope: !2310)
!2339 = !DILocation(line: 1344, column: 18, scope: !2310)
!2340 = !DILocation(line: 1345, column: 15, scope: !2310)
!2341 = !DILocation(line: 1330, column: 54, scope: !2302)
!2342 = !DILocation(line: 1330, column: 15, scope: !2302)
!2343 = distinct !{!2343, !2307, !2344}
!2344 = !DILocation(line: 1345, column: 15, scope: !2303)
!2345 = !DILocation(line: 1346, column: 39, scope: !2346)
!2346 = distinct !DILexicalBlock(scope: !2270, file: !3, line: 1346, column: 19)
!2347 = !DILocation(line: 1346, column: 57, scope: !2346)
!2348 = !DILocation(line: 1346, column: 64, scope: !2346)
!2349 = !DILocation(line: 1346, column: 19, scope: !2346)
!2350 = !DILocation(line: 1346, column: 75, scope: !2346)
!2351 = !DILocation(line: 1346, column: 19, scope: !2270)
!2352 = !DILocation(line: 1347, column: 17, scope: !2346)
!2353 = !DILocation(line: 1348, column: 13, scope: !2270)
!2354 = !DILocation(line: 1349, column: 11, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2356, file: !3, line: 1349, column: 11)
!2356 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1349, column: 11)
!2357 = !DILocation(line: 1349, column: 11, scope: !2356)
!2358 = !DILocation(line: 1349, column: 11, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 1349, column: 11)
!2360 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 1349, column: 11)
!2361 = !DILocation(line: 1349, column: 11, scope: !2360)
!2362 = !DILocation(line: 1349, column: 11, scope: !2363)
!2363 = distinct !DILexicalBlock(scope: !2364, file: !3, line: 1349, column: 11)
!2364 = distinct !DILexicalBlock(scope: !2355, file: !3, line: 1349, column: 11)
!2365 = !DILocation(line: 1349, column: 11, scope: !2364)
!2366 = !DILocation(line: 1349, column: 11, scope: !2367)
!2367 = distinct !DILexicalBlock(scope: !2363, file: !3, line: 1349, column: 11)
!2368 = !DILocation(line: 1350, column: 15, scope: !2369)
!2369 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 1350, column: 15)
!2370 = !DILocation(line: 1350, column: 20, scope: !2369)
!2371 = !DILocation(line: 1350, column: 22, scope: !2369)
!2372 = !DILocation(line: 1350, column: 17, scope: !2369)
!2373 = !DILocation(line: 1350, column: 15, scope: !2264)
!2374 = !DILocation(line: 1351, column: 13, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2376, file: !3, line: 1351, column: 13)
!2376 = distinct !DILexicalBlock(scope: !2369, file: !3, line: 1351, column: 13)
!2377 = !DILocation(line: 1351, column: 13, scope: !2376)
!2378 = !DILocation(line: 1351, column: 13, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2380, file: !3, line: 1351, column: 13)
!2380 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 1351, column: 13)
!2381 = !DILocation(line: 1351, column: 13, scope: !2380)
!2382 = !DILocation(line: 1351, column: 13, scope: !2383)
!2383 = distinct !DILexicalBlock(scope: !2384, file: !3, line: 1351, column: 13)
!2384 = distinct !DILexicalBlock(scope: !2375, file: !3, line: 1351, column: 13)
!2385 = !DILocation(line: 1351, column: 13, scope: !2384)
!2386 = !DILocation(line: 1351, column: 13, scope: !2387)
!2387 = distinct !DILexicalBlock(scope: !2383, file: !3, line: 1351, column: 13)
!2388 = !DILocation(line: 1352, column: 9, scope: !2264)
!2389 = !DILocation(line: 1353, column: 11, scope: !2259)
!2390 = !DILocation(line: 1354, column: 8, scope: !2259)
!2391 = !DILocation(line: 1355, column: 11, scope: !2392)
!2392 = distinct !DILexicalBlock(scope: !2259, file: !3, line: 1355, column: 11)
!2393 = !DILocation(line: 1355, column: 16, scope: !2392)
!2394 = !DILocation(line: 1355, column: 13, scope: !2392)
!2395 = !DILocation(line: 1355, column: 11, scope: !2259)
!2396 = !DILocation(line: 1357, column: 30, scope: !2397)
!2397 = distinct !DILexicalBlock(scope: !2392, file: !3, line: 1356, column: 9)
!2398 = !DILocation(line: 1357, column: 36, scope: !2397)
!2399 = !DILocation(line: 1357, column: 38, scope: !2397)
!2400 = !DILocation(line: 1357, column: 50, scope: !2397)
!2401 = !DILocation(line: 1357, column: 53, scope: !2397)
!2402 = !DILocation(line: 1357, column: 52, scope: !2397)
!2403 = !DILocation(line: 1357, column: 54, scope: !2397)
!2404 = !DILocation(line: 1358, column: 14, scope: !2397)
!2405 = !DILocation(line: 1358, column: 21, scope: !2397)
!2406 = !DILocation(line: 1357, column: 13, scope: !2397)
!2407 = !DILocation(line: 1357, column: 12, scope: !2397)
!2408 = !DILocation(line: 1359, column: 32, scope: !2397)
!2409 = !DILocation(line: 1359, column: 49, scope: !2397)
!2410 = !DILocation(line: 1359, column: 51, scope: !2397)
!2411 = !DILocation(line: 1359, column: 63, scope: !2397)
!2412 = !DILocation(line: 1359, column: 66, scope: !2397)
!2413 = !DILocation(line: 1359, column: 65, scope: !2397)
!2414 = !DILocation(line: 1359, column: 67, scope: !2397)
!2415 = !DILocation(line: 1360, column: 14, scope: !2397)
!2416 = !DILocation(line: 1360, column: 21, scope: !2397)
!2417 = !DILocation(line: 1359, column: 13, scope: !2397)
!2418 = !DILocation(line: 1359, column: 12, scope: !2397)
!2419 = !DILocation(line: 1361, column: 16, scope: !2420)
!2420 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 1361, column: 15)
!2421 = !DILocation(line: 1361, column: 18, scope: !2420)
!2422 = !DILocation(line: 1361, column: 49, scope: !2420)
!2423 = !DILocation(line: 1361, column: 53, scope: !2420)
!2424 = !DILocation(line: 1361, column: 55, scope: !2420)
!2425 = !DILocation(line: 1361, column: 15, scope: !2397)
!2426 = !DILocation(line: 1362, column: 13, scope: !2420)
!2427 = !DILocation(line: 1363, column: 11, scope: !2397)
!2428 = !DILocation(line: 1363, column: 19, scope: !2429)
!2429 = distinct !DILexicalBlock(scope: !2430, file: !3, line: 1363, column: 11)
!2430 = distinct !DILexicalBlock(scope: !2397, file: !3, line: 1363, column: 11)
!2431 = !DILocation(line: 1363, column: 24, scope: !2429)
!2432 = !DILocation(line: 1363, column: 21, scope: !2429)
!2433 = !DILocation(line: 1363, column: 11, scope: !2430)
!2434 = !DILocation(line: 1365, column: 17, scope: !2435)
!2435 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 1365, column: 17)
!2436 = distinct !DILexicalBlock(scope: !2429, file: !3, line: 1364, column: 11)
!2437 = !DILocation(line: 1365, column: 20, scope: !2435)
!2438 = !DILocation(line: 1365, column: 28, scope: !2435)
!2439 = !DILocation(line: 1365, column: 17, scope: !2436)
!2440 = !DILocation(line: 1366, column: 15, scope: !2435)
!2441 = !DILocation(line: 1367, column: 17, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2436, file: !3, line: 1367, column: 17)
!2443 = !DILocation(line: 1367, column: 24, scope: !2442)
!2444 = !DILocation(line: 1367, column: 17, scope: !2436)
!2445 = !DILocation(line: 1369, column: 36, scope: !2446)
!2446 = distinct !DILexicalBlock(scope: !2447, file: !3, line: 1369, column: 21)
!2447 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 1368, column: 15)
!2448 = !DILocation(line: 1369, column: 42, scope: !2446)
!2449 = !DILocation(line: 1369, column: 21, scope: !2446)
!2450 = !DILocation(line: 1369, column: 53, scope: !2446)
!2451 = !DILocation(line: 1369, column: 21, scope: !2447)
!2452 = !DILocation(line: 1370, column: 19, scope: !2446)
!2453 = !DILocation(line: 1371, column: 15, scope: !2447)
!2454 = !DILocation(line: 1373, column: 34, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2442, file: !3, line: 1373, column: 19)
!2456 = !DILocation(line: 1373, column: 40, scope: !2455)
!2457 = !DILocation(line: 1373, column: 19, scope: !2455)
!2458 = !DILocation(line: 1373, column: 51, scope: !2455)
!2459 = !DILocation(line: 1373, column: 19, scope: !2442)
!2460 = !DILocation(line: 1374, column: 17, scope: !2455)
!2461 = !DILocation(line: 1375, column: 14, scope: !2436)
!2462 = !DILocation(line: 1376, column: 14, scope: !2436)
!2463 = !DILocation(line: 1377, column: 11, scope: !2436)
!2464 = !DILocation(line: 1363, column: 29, scope: !2429)
!2465 = !DILocation(line: 1363, column: 11, scope: !2429)
!2466 = distinct !{!2466, !2433, !2467}
!2467 = !DILocation(line: 1377, column: 11, scope: !2430)
!2468 = !DILocation(line: 1378, column: 9, scope: !2397)
!2469 = !DILocation(line: 1379, column: 13, scope: !2259)
!2470 = !DILocation(line: 1379, column: 12, scope: !2259)
!2471 = !DILocation(line: 1380, column: 5, scope: !2259)
!2472 = !DILocation(line: 1380, column: 14, scope: !2113)
!2473 = !DILocation(line: 1380, column: 19, scope: !2113)
!2474 = !DILocation(line: 1380, column: 16, scope: !2113)
!2475 = distinct !{!2475, !2256, !2476}
!2476 = !DILocation(line: 1380, column: 21, scope: !2113)
!2477 = distinct !{!2477, !2108, !2478}
!2478 = !DILocation(line: 1381, column: 3, scope: !1851)
!2479 = !DILocation(line: 1382, column: 9, scope: !2480)
!2480 = distinct !DILexicalBlock(scope: !1851, file: !3, line: 1382, column: 3)
!2481 = !DILocation(line: 1382, column: 8, scope: !2480)
!2482 = !DILocation(line: 1382, column: 13, scope: !2483)
!2483 = distinct !DILexicalBlock(scope: !2480, file: !3, line: 1382, column: 3)
!2484 = !DILocation(line: 1382, column: 27, scope: !2483)
!2485 = !DILocation(line: 1382, column: 34, scope: !2483)
!2486 = !DILocation(line: 1382, column: 15, scope: !2483)
!2487 = !DILocation(line: 1382, column: 3, scope: !2480)
!2488 = !DILocalVariable(name: "p", scope: !2489, file: !3, line: 1385, type: !2114)
!2489 = distinct !DILexicalBlock(scope: !2483, file: !3, line: 1383, column: 3)
!2490 = !DILocation(line: 1385, column: 17, scope: !2489)
!2491 = !DILocalVariable(name: "x", scope: !2489, file: !3, line: 1388, type: !813)
!2492 = !DILocation(line: 1388, column: 7, scope: !2489)
!2493 = !DILocalVariable(name: "q", scope: !2489, file: !3, line: 1391, type: !2119)
!2494 = !DILocation(line: 1391, column: 17, scope: !2489)
!2495 = !DILocation(line: 1396, column: 24, scope: !2489)
!2496 = !DILocation(line: 1396, column: 43, scope: !2489)
!2497 = !DILocation(line: 1396, column: 45, scope: !2489)
!2498 = !DILocation(line: 1396, column: 52, scope: !2489)
!2499 = !DILocation(line: 1397, column: 8, scope: !2489)
!2500 = !DILocation(line: 1397, column: 15, scope: !2489)
!2501 = !DILocation(line: 1396, column: 7, scope: !2489)
!2502 = !DILocation(line: 1396, column: 6, scope: !2489)
!2503 = !DILocation(line: 1398, column: 26, scope: !2489)
!2504 = !DILocation(line: 1398, column: 34, scope: !2489)
!2505 = !DILocation(line: 1398, column: 36, scope: !2489)
!2506 = !DILocation(line: 1398, column: 43, scope: !2489)
!2507 = !DILocation(line: 1398, column: 54, scope: !2489)
!2508 = !DILocation(line: 1398, column: 61, scope: !2489)
!2509 = !DILocation(line: 1398, column: 7, scope: !2489)
!2510 = !DILocation(line: 1398, column: 6, scope: !2489)
!2511 = !DILocation(line: 1399, column: 10, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 1399, column: 9)
!2513 = !DILocation(line: 1399, column: 12, scope: !2512)
!2514 = !DILocation(line: 1399, column: 43, scope: !2512)
!2515 = !DILocation(line: 1399, column: 47, scope: !2512)
!2516 = !DILocation(line: 1399, column: 49, scope: !2512)
!2517 = !DILocation(line: 1399, column: 9, scope: !2489)
!2518 = !DILocation(line: 1400, column: 7, scope: !2512)
!2519 = !DILocation(line: 1401, column: 11, scope: !2520)
!2520 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 1401, column: 5)
!2521 = !DILocation(line: 1401, column: 10, scope: !2520)
!2522 = !DILocation(line: 1401, column: 15, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2520, file: !3, line: 1401, column: 5)
!2524 = !DILocation(line: 1401, column: 29, scope: !2523)
!2525 = !DILocation(line: 1401, column: 36, scope: !2523)
!2526 = !DILocation(line: 1401, column: 17, scope: !2523)
!2527 = !DILocation(line: 1401, column: 5, scope: !2520)
!2528 = !DILocation(line: 1403, column: 11, scope: !2529)
!2529 = distinct !DILexicalBlock(scope: !2530, file: !3, line: 1403, column: 11)
!2530 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 1402, column: 5)
!2531 = !DILocation(line: 1403, column: 30, scope: !2529)
!2532 = !DILocation(line: 1403, column: 11, scope: !2530)
!2533 = !DILocation(line: 1405, column: 31, scope: !2534)
!2534 = distinct !DILexicalBlock(scope: !2529, file: !3, line: 1404, column: 9)
!2535 = !DILocation(line: 1405, column: 41, scope: !2534)
!2536 = !DILocation(line: 1405, column: 43, scope: !2534)
!2537 = !DILocation(line: 1405, column: 18, scope: !2534)
!2538 = !DILocation(line: 1406, column: 71, scope: !2534)
!2539 = !DILocation(line: 1406, column: 43, scope: !2534)
!2540 = !DILocation(line: 1406, column: 79, scope: !2534)
!2541 = !DILocation(line: 1407, column: 30, scope: !2534)
!2542 = !DILocation(line: 1407, column: 33, scope: !2534)
!2543 = !DILocation(line: 1407, column: 13, scope: !2534)
!2544 = !DILocation(line: 1407, column: 41, scope: !2534)
!2545 = !DILocation(line: 1406, column: 11, scope: !2534)
!2546 = !DILocation(line: 1408, column: 9, scope: !2534)
!2547 = !DILocation(line: 1409, column: 8, scope: !2530)
!2548 = !DILocation(line: 1410, column: 8, scope: !2530)
!2549 = !DILocation(line: 1411, column: 5, scope: !2530)
!2550 = !DILocation(line: 1401, column: 46, scope: !2523)
!2551 = !DILocation(line: 1401, column: 5, scope: !2523)
!2552 = distinct !{!2552, !2527, !2553}
!2553 = !DILocation(line: 1411, column: 5, scope: !2520)
!2554 = !DILocation(line: 1412, column: 29, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 1412, column: 9)
!2556 = !DILocation(line: 1412, column: 36, scope: !2555)
!2557 = !DILocation(line: 1412, column: 43, scope: !2555)
!2558 = !DILocation(line: 1412, column: 9, scope: !2555)
!2559 = !DILocation(line: 1412, column: 54, scope: !2555)
!2560 = !DILocation(line: 1412, column: 9, scope: !2489)
!2561 = !DILocation(line: 1413, column: 7, scope: !2555)
!2562 = !DILocation(line: 1414, column: 3, scope: !2489)
!2563 = !DILocation(line: 1382, column: 41, scope: !2483)
!2564 = !DILocation(line: 1382, column: 3, scope: !2483)
!2565 = distinct !{!2565, !2487, !2566}
!2566 = !DILocation(line: 1414, column: 3, scope: !2480)
!2567 = !DILocation(line: 1415, column: 56, scope: !1851)
!2568 = !DILocation(line: 1415, column: 33, scope: !1851)
!2569 = !DILocation(line: 1415, column: 17, scope: !1851)
!2570 = !DILocation(line: 1415, column: 16, scope: !1851)
!2571 = !DILocation(line: 1416, column: 33, scope: !1851)
!2572 = !DILocation(line: 1416, column: 20, scope: !1851)
!2573 = !DILocation(line: 1416, column: 19, scope: !1851)
!2574 = !DILocation(line: 1417, column: 10, scope: !1851)
!2575 = !DILocation(line: 1417, column: 25, scope: !1851)
!2576 = !DILocation(line: 1417, column: 32, scope: !1851)
!2577 = !DILocation(line: 1417, column: 12, scope: !1851)
!2578 = !DILocation(line: 1417, column: 3, scope: !1851)
!2579 = !DILocation(line: 1418, column: 1, scope: !1851)
!2580 = distinct !DISubprogram(name: "GetFillColor", scope: !2581, file: !2581, line: 29, type: !2582, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2581 = !DIFile(filename: "./magick/draw-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2582 = !DISubroutineType(types: !2583)
!2583 = !{!834, !1854, !1301, !1301, !841}
!2584 = !DILocalVariable(name: "draw_info", arg: 1, scope: !2580, file: !2581, line: 29, type: !1854)
!2585 = !DILocation(line: 29, column: 62, scope: !2580)
!2586 = !DILocalVariable(name: "x", arg: 2, scope: !2580, file: !2581, line: 30, type: !1301)
!2587 = !DILocation(line: 30, column: 17, scope: !2580)
!2588 = !DILocalVariable(name: "y", arg: 3, scope: !2580, file: !2581, line: 30, type: !1301)
!2589 = !DILocation(line: 30, column: 33, scope: !2580)
!2590 = !DILocalVariable(name: "pixel", arg: 4, scope: !2580, file: !2581, line: 30, type: !841)
!2591 = !DILocation(line: 30, column: 48, scope: !2580)
!2592 = !DILocalVariable(name: "pattern", scope: !2580, file: !2581, line: 33, type: !818)
!2593 = !DILocation(line: 33, column: 6, scope: !2580)
!2594 = !DILocalVariable(name: "status", scope: !2580, file: !2581, line: 36, type: !834)
!2595 = !DILocation(line: 36, column: 5, scope: !2580)
!2596 = !DILocation(line: 38, column: 11, scope: !2580)
!2597 = !DILocation(line: 38, column: 22, scope: !2580)
!2598 = !DILocation(line: 38, column: 10, scope: !2580)
!2599 = !DILocation(line: 39, column: 7, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2580, file: !2581, line: 39, column: 7)
!2601 = !DILocation(line: 39, column: 15, scope: !2600)
!2602 = !DILocation(line: 39, column: 7, scope: !2580)
!2603 = !DILocation(line: 41, column: 8, scope: !2604)
!2604 = distinct !DILexicalBlock(scope: !2600, file: !2581, line: 40, column: 5)
!2605 = !DILocation(line: 41, column: 14, scope: !2604)
!2606 = !DILocation(line: 41, column: 25, scope: !2604)
!2607 = !DILocation(line: 42, column: 7, scope: !2604)
!2608 = !DILocation(line: 44, column: 35, scope: !2580)
!2609 = !DILocation(line: 45, column: 5, scope: !2580)
!2610 = !DILocation(line: 45, column: 7, scope: !2580)
!2611 = !DILocation(line: 45, column: 16, scope: !2580)
!2612 = !DILocation(line: 45, column: 28, scope: !2580)
!2613 = !DILocation(line: 45, column: 6, scope: !2580)
!2614 = !DILocation(line: 45, column: 30, scope: !2580)
!2615 = !DILocation(line: 45, column: 32, scope: !2580)
!2616 = !DILocation(line: 45, column: 41, scope: !2580)
!2617 = !DILocation(line: 45, column: 53, scope: !2580)
!2618 = !DILocation(line: 45, column: 31, scope: !2580)
!2619 = !DILocation(line: 45, column: 55, scope: !2580)
!2620 = !DILocation(line: 46, column: 6, scope: !2580)
!2621 = !DILocation(line: 46, column: 15, scope: !2580)
!2622 = !DILocation(line: 44, column: 10, scope: !2580)
!2623 = !DILocation(line: 44, column: 9, scope: !2580)
!2624 = !DILocation(line: 47, column: 7, scope: !2625)
!2625 = distinct !DILexicalBlock(scope: !2580, file: !2581, line: 47, column: 7)
!2626 = !DILocation(line: 47, column: 16, scope: !2625)
!2627 = !DILocation(line: 47, column: 22, scope: !2625)
!2628 = !DILocation(line: 47, column: 7, scope: !2580)
!2629 = !DILocation(line: 48, column: 5, scope: !2625)
!2630 = !DILocation(line: 48, column: 12, scope: !2625)
!2631 = !DILocation(line: 48, column: 19, scope: !2625)
!2632 = !DILocation(line: 49, column: 10, scope: !2580)
!2633 = !DILocation(line: 49, column: 3, scope: !2580)
!2634 = !DILocation(line: 50, column: 1, scope: !2580)
!2635 = distinct !DISubprogram(name: "MagickCompositeOver", scope: !2636, file: !2636, line: 45, type: !2637, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2636 = !DIFile(filename: "./magick/composite-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2637 = !DISubroutineType(types: !2638)
!2638 = !{null, !1032, !2639, !1032, !2639, !841}
!2639 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1034)
!2640 = !DILocalVariable(name: "p", arg: 1, scope: !2635, file: !2636, line: 45, type: !1032)
!2641 = !DILocation(line: 45, column: 59, scope: !2635)
!2642 = !DILocalVariable(name: "alpha", arg: 2, scope: !2635, file: !2636, line: 46, type: !2639)
!2643 = !DILocation(line: 46, column: 24, scope: !2635)
!2644 = !DILocalVariable(name: "q", arg: 3, scope: !2635, file: !2636, line: 46, type: !1032)
!2645 = !DILocation(line: 46, column: 49, scope: !2635)
!2646 = !DILocalVariable(name: "beta", arg: 4, scope: !2635, file: !2636, line: 46, type: !2639)
!2647 = !DILocation(line: 46, column: 72, scope: !2635)
!2648 = !DILocalVariable(name: "composite", arg: 5, scope: !2635, file: !2636, line: 47, type: !841)
!2649 = !DILocation(line: 47, column: 16, scope: !2635)
!2650 = !DILocalVariable(name: "gamma", scope: !2635, file: !2636, line: 50, type: !855)
!2651 = !DILocation(line: 50, column: 5, scope: !2635)
!2652 = !DILocation(line: 55, column: 7, scope: !2653)
!2653 = distinct !DILexicalBlock(scope: !2635, file: !2636, line: 55, column: 7)
!2654 = !DILocation(line: 55, column: 13, scope: !2653)
!2655 = !DILocation(line: 55, column: 7, scope: !2635)
!2656 = !DILocation(line: 57, column: 11, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2658, file: !2636, line: 57, column: 11)
!2658 = distinct !DILexicalBlock(scope: !2653, file: !2636, line: 56, column: 5)
!2659 = !DILocation(line: 57, column: 24, scope: !2657)
!2660 = !DILocation(line: 57, column: 21, scope: !2657)
!2661 = !DILocation(line: 57, column: 11, scope: !2658)
!2662 = !DILocation(line: 58, column: 10, scope: !2657)
!2663 = !DILocation(line: 58, column: 22, scope: !2657)
!2664 = !DILocation(line: 58, column: 21, scope: !2657)
!2665 = !DILocation(line: 58, column: 9, scope: !2657)
!2666 = !DILocation(line: 59, column: 7, scope: !2658)
!2667 = !DILocation(line: 61, column: 39, scope: !2635)
!2668 = !DILocation(line: 61, column: 38, scope: !2635)
!2669 = !DILocation(line: 61, column: 45, scope: !2635)
!2670 = !DILocation(line: 61, column: 44, scope: !2635)
!2671 = !DILocation(line: 61, column: 12, scope: !2635)
!2672 = !DILocation(line: 61, column: 8, scope: !2635)
!2673 = !DILocation(line: 63, column: 7, scope: !2674)
!2674 = distinct !DILexicalBlock(scope: !2635, file: !2636, line: 63, column: 7)
!2675 = !DILocation(line: 63, column: 13, scope: !2674)
!2676 = !DILocation(line: 63, column: 7, scope: !2635)
!2677 = !DILocation(line: 63, column: 26, scope: !2674)
!2678 = !DILocation(line: 63, column: 20, scope: !2674)
!2679 = !DILocation(line: 66, column: 51, scope: !2635)
!2680 = !DILocation(line: 66, column: 50, scope: !2635)
!2681 = !DILocation(line: 66, column: 45, scope: !2635)
!2682 = !DILocation(line: 66, column: 57, scope: !2635)
!2683 = !DILocation(line: 66, column: 22, scope: !2635)
!2684 = !DILocation(line: 66, column: 3, scope: !2635)
!2685 = !DILocation(line: 66, column: 14, scope: !2635)
!2686 = !DILocation(line: 66, column: 21, scope: !2635)
!2687 = !DILocation(line: 67, column: 31, scope: !2635)
!2688 = !DILocation(line: 67, column: 9, scope: !2635)
!2689 = !DILocation(line: 67, column: 8, scope: !2635)
!2690 = !DILocation(line: 68, column: 3, scope: !2635)
!2691 = !DILocation(line: 70, column: 3, scope: !2635)
!2692 = !DILocation(line: 72, column: 3, scope: !2635)
!2693 = !DILocation(line: 84, column: 1, scope: !2635)
!2694 = distinct !DISubprogram(name: "ConstituteComponentGenesis", scope: !3, file: !3, line: 1438, type: !2695, scopeLine: 1439, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{!834}
!2697 = !DILocation(line: 1440, column: 3, scope: !2694)
!2698 = distinct !DISubprogram(name: "ConstituteComponentTerminus", scope: !3, file: !3, line: 1461, type: !1522, scopeLine: 1462, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2699 = !DILocation(line: 1463, column: 1, scope: !2698)
!2700 = distinct !DISubprogram(name: "DeleteImageAttribute", scope: !3, file: !3, line: 1493, type: !2701, scopeLine: 1495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{!834, !818, !943}
!2703 = !DILocalVariable(name: "image", arg: 1, scope: !2700, file: !3, line: 1493, type: !818)
!2704 = !DILocation(line: 1493, column: 60, scope: !2700)
!2705 = !DILocalVariable(name: "key", arg: 2, scope: !2700, file: !3, line: 1494, type: !943)
!2706 = !DILocation(line: 1494, column: 15, scope: !2700)
!2707 = !DILocation(line: 1496, column: 30, scope: !2700)
!2708 = !DILocation(line: 1496, column: 36, scope: !2700)
!2709 = !DILocation(line: 1496, column: 10, scope: !2700)
!2710 = !DILocation(line: 1496, column: 3, scope: !2700)
!2711 = distinct !DISubprogram(name: "DeleteImageList", scope: !3, file: !3, line: 1523, type: !2712, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2712 = !DISubroutineType(types: !2713)
!2713 = !{!7, !818, !1301}
!2714 = !DILocalVariable(name: "images", arg: 1, scope: !2711, file: !3, line: 1523, type: !818)
!2715 = !DILocation(line: 1523, column: 50, scope: !2711)
!2716 = !DILocalVariable(name: "offset", arg: 2, scope: !2711, file: !3, line: 1523, type: !1301)
!2717 = !DILocation(line: 1523, column: 71, scope: !2711)
!2718 = !DILocalVariable(name: "i", scope: !2711, file: !3, line: 1526, type: !813)
!2719 = !DILocation(line: 1526, column: 5, scope: !2711)
!2720 = !DILocation(line: 1528, column: 7, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 1528, column: 7)
!2722 = !DILocation(line: 1528, column: 15, scope: !2721)
!2723 = !DILocation(line: 1528, column: 21, scope: !2721)
!2724 = !DILocation(line: 1528, column: 7, scope: !2711)
!2725 = !DILocation(line: 1529, column: 12, scope: !2721)
!2726 = !DILocation(line: 1529, column: 5, scope: !2721)
!2727 = !DILocation(line: 1530, column: 3, scope: !2711)
!2728 = !DILocation(line: 1530, column: 33, scope: !2711)
!2729 = !DILocation(line: 1530, column: 10, scope: !2711)
!2730 = !DILocation(line: 1530, column: 41, scope: !2711)
!2731 = !DILocation(line: 1531, column: 35, scope: !2711)
!2732 = !DILocation(line: 1531, column: 12, scope: !2711)
!2733 = !DILocation(line: 1531, column: 11, scope: !2711)
!2734 = distinct !{!2734, !2727, !2735}
!2735 = !DILocation(line: 1531, column: 41, scope: !2711)
!2736 = !DILocation(line: 1532, column: 9, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2711, file: !3, line: 1532, column: 3)
!2738 = !DILocation(line: 1532, column: 8, scope: !2737)
!2739 = !DILocation(line: 1532, column: 13, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 1532, column: 3)
!2741 = !DILocation(line: 1532, column: 17, scope: !2740)
!2742 = !DILocation(line: 1532, column: 15, scope: !2740)
!2743 = !DILocation(line: 1532, column: 3, scope: !2737)
!2744 = !DILocation(line: 1534, column: 28, scope: !2745)
!2745 = distinct !DILexicalBlock(scope: !2746, file: !3, line: 1534, column: 9)
!2746 = distinct !DILexicalBlock(scope: !2740, file: !3, line: 1533, column: 3)
!2747 = !DILocation(line: 1534, column: 9, scope: !2745)
!2748 = !DILocation(line: 1534, column: 36, scope: !2745)
!2749 = !DILocation(line: 1534, column: 9, scope: !2746)
!2750 = !DILocation(line: 1535, column: 7, scope: !2745)
!2751 = !DILocation(line: 1536, column: 31, scope: !2746)
!2752 = !DILocation(line: 1536, column: 12, scope: !2746)
!2753 = !DILocation(line: 1536, column: 11, scope: !2746)
!2754 = !DILocation(line: 1537, column: 3, scope: !2746)
!2755 = !DILocation(line: 1532, column: 26, scope: !2740)
!2756 = !DILocation(line: 1532, column: 3, scope: !2740)
!2757 = distinct !{!2757, !2743, !2758}
!2758 = !DILocation(line: 1537, column: 3, scope: !2737)
!2759 = !DILocation(line: 1538, column: 3, scope: !2711)
!2760 = !DILocation(line: 1539, column: 3, scope: !2711)
!2761 = !DILocation(line: 1540, column: 1, scope: !2711)
!2762 = distinct !DISubprogram(name: "DeleteMagickRegistry", scope: !3, file: !3, line: 1572, type: !2763, scopeLine: 1573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!834, !1301}
!2765 = !DILocalVariable(name: "id", arg: 1, scope: !2762, file: !3, line: 1572, type: !1301)
!2766 = !DILocation(line: 1572, column: 67, scope: !2762)
!2767 = !DILocalVariable(name: "key", scope: !2762, file: !3, line: 1575, type: !963)
!2768 = !DILocation(line: 1575, column: 5, scope: !2762)
!2769 = !DILocation(line: 1577, column: 29, scope: !2762)
!2770 = !DILocation(line: 1577, column: 66, scope: !2762)
!2771 = !DILocation(line: 1577, column: 57, scope: !2762)
!2772 = !DILocation(line: 1577, column: 10, scope: !2762)
!2773 = !DILocation(line: 1578, column: 30, scope: !2762)
!2774 = !DILocation(line: 1578, column: 10, scope: !2762)
!2775 = !DILocation(line: 1578, column: 3, scope: !2762)
!2776 = distinct !DISubprogram(name: "DestroyConstitute", scope: !3, file: !3, line: 1599, type: !1522, scopeLine: 1600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2777 = !DILocation(line: 1601, column: 1, scope: !2776)
!2778 = distinct !DISubprogram(name: "DestroyMagickRegistry", scope: !3, file: !3, line: 1625, type: !1522, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2779 = !DILocation(line: 1627, column: 3, scope: !2778)
!2780 = !DILocation(line: 1628, column: 1, scope: !2778)
!2781 = distinct !DISubprogram(name: "DescribeImage", scope: !3, file: !3, line: 1663, type: !2782, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2782 = !DISubroutineType(types: !2783)
!2783 = !{!834, !818, !1058, !1759}
!2784 = !DILocalVariable(name: "image", arg: 1, scope: !2781, file: !3, line: 1663, type: !818)
!2785 = !DILocation(line: 1663, column: 53, scope: !2781)
!2786 = !DILocalVariable(name: "file", arg: 2, scope: !2781, file: !3, line: 1663, type: !1058)
!2787 = !DILocation(line: 1663, column: 65, scope: !2781)
!2788 = !DILocalVariable(name: "verbose", arg: 3, scope: !2781, file: !3, line: 1664, type: !1759)
!2789 = !DILocation(line: 1664, column: 27, scope: !2781)
!2790 = !DILocation(line: 1666, column: 24, scope: !2781)
!2791 = !DILocation(line: 1666, column: 30, scope: !2781)
!2792 = !DILocation(line: 1666, column: 35, scope: !2781)
!2793 = !DILocation(line: 1666, column: 10, scope: !2781)
!2794 = !DILocation(line: 1666, column: 3, scope: !2781)
!2795 = distinct !DISubprogram(name: "DestroyImageAttributes", scope: !3, file: !3, line: 1692, type: !2796, scopeLine: 1693, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2796 = !DISubroutineType(types: !2797)
!2797 = !{null, !818}
!2798 = !DILocalVariable(name: "image", arg: 1, scope: !2795, file: !3, line: 1692, type: !818)
!2799 = !DILocation(line: 1692, column: 49, scope: !2795)
!2800 = !DILocation(line: 1696, column: 7, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 1696, column: 7)
!2802 = !DILocation(line: 1696, column: 14, scope: !2801)
!2803 = !DILocation(line: 1696, column: 20, scope: !2801)
!2804 = !DILocation(line: 1696, column: 7, scope: !2795)
!2805 = !DILocation(line: 1697, column: 61, scope: !2801)
!2806 = !DILocation(line: 1697, column: 68, scope: !2801)
!2807 = !DILocation(line: 1697, column: 12, scope: !2801)
!2808 = !DILocation(line: 1697, column: 5, scope: !2801)
!2809 = !DILocation(line: 1698, column: 7, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2795, file: !3, line: 1698, column: 7)
!2811 = !DILocation(line: 1698, column: 14, scope: !2810)
!2812 = !DILocation(line: 1698, column: 25, scope: !2810)
!2813 = !DILocation(line: 1698, column: 7, scope: !2795)
!2814 = !DILocation(line: 1700, column: 7, scope: !2810)
!2815 = !DILocation(line: 1700, column: 14, scope: !2810)
!2816 = !DILocation(line: 1699, column: 49, scope: !2810)
!2817 = !DILocation(line: 1699, column: 32, scope: !2810)
!2818 = !DILocation(line: 1699, column: 23, scope: !2810)
!2819 = !DILocation(line: 1699, column: 5, scope: !2810)
!2820 = !DILocation(line: 1699, column: 12, scope: !2810)
!2821 = !DILocation(line: 1699, column: 22, scope: !2810)
!2822 = !DILocation(line: 1701, column: 1, scope: !2795)
!2823 = distinct !DISubprogram(name: "DestroyImages", scope: !3, file: !3, line: 1729, type: !2796, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2824 = !DILocalVariable(name: "image", arg: 1, scope: !2823, file: !3, line: 1729, type: !818)
!2825 = !DILocation(line: 1729, column: 40, scope: !2823)
!2826 = !DILocation(line: 1731, column: 7, scope: !2827)
!2827 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 1731, column: 7)
!2828 = !DILocation(line: 1731, column: 13, scope: !2827)
!2829 = !DILocation(line: 1731, column: 7, scope: !2823)
!2830 = !DILocation(line: 1732, column: 5, scope: !2827)
!2831 = !DILocation(line: 1733, column: 7, scope: !2832)
!2832 = distinct !DILexicalBlock(scope: !2823, file: !3, line: 1733, column: 7)
!2833 = !DILocation(line: 1733, column: 14, scope: !2832)
!2834 = !DILocation(line: 1733, column: 20, scope: !2832)
!2835 = !DILocation(line: 1733, column: 7, scope: !2823)
!2836 = !DILocation(line: 1734, column: 12, scope: !2832)
!2837 = !DILocation(line: 1734, column: 5, scope: !2832)
!2838 = !DILocation(line: 1735, column: 26, scope: !2823)
!2839 = !DILocation(line: 1735, column: 9, scope: !2823)
!2840 = !DILocation(line: 1735, column: 8, scope: !2823)
!2841 = !DILocation(line: 1736, column: 1, scope: !2823)
!2842 = distinct !DISubprogram(name: "DestroyMagick", scope: !3, file: !3, line: 1760, type: !1522, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2843 = !DILocation(line: 1762, column: 3, scope: !2842)
!2844 = !DILocation(line: 1763, column: 1, scope: !2842)
!2845 = distinct !DISubprogram(name: "DispatchImage", scope: !3, file: !3, line: 1822, type: !2846, scopeLine: 1825, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2846 = !DISubroutineType(types: !2847)
!2847 = !{!7, !1168, !1301, !1301, !1172, !1172, !943, !2848, !805, !1057}
!2848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2849)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "StorageType", file: !643, line: 35, baseType: !642)
!2850 = !DILocalVariable(name: "image", arg: 1, scope: !2845, file: !3, line: 1822, type: !1168)
!2851 = !DILocation(line: 1822, column: 54, scope: !2845)
!2852 = !DILocalVariable(name: "x_offset", arg: 2, scope: !2845, file: !3, line: 1822, type: !1301)
!2853 = !DILocation(line: 1822, column: 74, scope: !2845)
!2854 = !DILocalVariable(name: "y_offset", arg: 3, scope: !2845, file: !3, line: 1823, type: !1301)
!2855 = !DILocation(line: 1823, column: 17, scope: !2845)
!2856 = !DILocalVariable(name: "columns", arg: 4, scope: !2845, file: !3, line: 1823, type: !1172)
!2857 = !DILocation(line: 1823, column: 39, scope: !2845)
!2858 = !DILocalVariable(name: "rows", arg: 5, scope: !2845, file: !3, line: 1823, type: !1172)
!2859 = !DILocation(line: 1823, column: 60, scope: !2845)
!2860 = !DILocalVariable(name: "map", arg: 6, scope: !2845, file: !3, line: 1824, type: !943)
!2861 = !DILocation(line: 1824, column: 15, scope: !2845)
!2862 = !DILocalVariable(name: "type", arg: 7, scope: !2845, file: !3, line: 1824, type: !2848)
!2863 = !DILocation(line: 1824, column: 37, scope: !2845)
!2864 = !DILocalVariable(name: "pixels", arg: 8, scope: !2845, file: !3, line: 1824, type: !805)
!2865 = !DILocation(line: 1824, column: 48, scope: !2845)
!2866 = !DILocalVariable(name: "exception", arg: 9, scope: !2845, file: !3, line: 1824, type: !1057)
!2867 = !DILocation(line: 1824, column: 70, scope: !2845)
!2868 = !DILocalVariable(name: "status", scope: !2845, file: !3, line: 1827, type: !7)
!2869 = !DILocation(line: 1827, column: 5, scope: !2845)
!2870 = !DILocation(line: 1829, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2845, file: !3, line: 1829, column: 7)
!2872 = !DILocation(line: 1829, column: 14, scope: !2871)
!2873 = !DILocation(line: 1829, column: 20, scope: !2871)
!2874 = !DILocation(line: 1829, column: 7, scope: !2845)
!2875 = !DILocation(line: 1830, column: 12, scope: !2871)
!2876 = !DILocation(line: 1830, column: 5, scope: !2871)
!2877 = !DILocation(line: 1831, column: 28, scope: !2845)
!2878 = !DILocation(line: 1831, column: 34, scope: !2845)
!2879 = !DILocation(line: 1831, column: 43, scope: !2845)
!2880 = !DILocation(line: 1831, column: 52, scope: !2845)
!2881 = !DILocation(line: 1831, column: 60, scope: !2845)
!2882 = !DILocation(line: 1831, column: 65, scope: !2845)
!2883 = !DILocation(line: 1831, column: 69, scope: !2845)
!2884 = !DILocation(line: 1831, column: 74, scope: !2845)
!2885 = !DILocation(line: 1832, column: 5, scope: !2845)
!2886 = !DILocation(line: 1831, column: 10, scope: !2845)
!2887 = !DILocation(line: 1831, column: 9, scope: !2845)
!2888 = !DILocation(line: 1833, column: 10, scope: !2845)
!2889 = !DILocation(line: 1833, column: 3, scope: !2845)
!2890 = distinct !DISubprogram(name: "ExtractSubimageFromImage", scope: !3, file: !3, line: 1955, type: !2891, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!2891 = !DISubroutineType(types: !2892)
!2892 = !{!818, !818, !1168, !1057}
!2893 = !DILocalVariable(name: "image", arg: 1, scope: !2890, file: !3, line: 1955, type: !818)
!2894 = !DILocation(line: 1955, column: 53, scope: !2890)
!2895 = !DILocalVariable(name: "reference", arg: 2, scope: !2890, file: !3, line: 1956, type: !1168)
!2896 = !DILocation(line: 1956, column: 16, scope: !2890)
!2897 = !DILocalVariable(name: "exception", arg: 3, scope: !2890, file: !3, line: 1956, type: !1057)
!2898 = !DILocation(line: 1956, column: 41, scope: !2890)
!2899 = !DILocalVariable(name: "similarity_threshold", scope: !2890, file: !3, line: 1959, type: !855)
!2900 = !DILocation(line: 1959, column: 5, scope: !2890)
!2901 = !DILocalVariable(name: "offset", scope: !2890, file: !3, line: 1962, type: !882)
!2902 = !DILocation(line: 1962, column: 5, scope: !2890)
!2903 = !DILocalVariable(name: "y", scope: !2890, file: !3, line: 1965, type: !813)
!2904 = !DILocation(line: 1965, column: 5, scope: !2890)
!2905 = !DILocation(line: 1970, column: 8, scope: !2906)
!2906 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 1970, column: 7)
!2907 = !DILocation(line: 1970, column: 19, scope: !2906)
!2908 = !DILocation(line: 1970, column: 29, scope: !2906)
!2909 = !DILocation(line: 1970, column: 36, scope: !2906)
!2910 = !DILocation(line: 1970, column: 27, scope: !2906)
!2911 = !DILocation(line: 1970, column: 45, scope: !2906)
!2912 = !DILocation(line: 1970, column: 49, scope: !2906)
!2913 = !DILocation(line: 1970, column: 60, scope: !2906)
!2914 = !DILocation(line: 1970, column: 67, scope: !2906)
!2915 = !DILocation(line: 1970, column: 74, scope: !2906)
!2916 = !DILocation(line: 1970, column: 65, scope: !2906)
!2917 = !DILocation(line: 1970, column: 7, scope: !2890)
!2918 = !DILocation(line: 1971, column: 5, scope: !2906)
!2919 = !DILocation(line: 1972, column: 33, scope: !2890)
!2920 = !DILocation(line: 1972, column: 40, scope: !2890)
!2921 = !DILocation(line: 1972, column: 24, scope: !2890)
!2922 = !DILocation(line: 1972, column: 48, scope: !2890)
!2923 = !DILocation(line: 1972, column: 55, scope: !2890)
!2924 = !DILocation(line: 1972, column: 47, scope: !2890)
!2925 = !DILocation(line: 1972, column: 23, scope: !2890)
!2926 = !DILocation(line: 1973, column: 15, scope: !2890)
!2927 = !DILocation(line: 1973, column: 3, scope: !2890)
!2928 = !DILocation(line: 1977, column: 9, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 1977, column: 3)
!2930 = !DILocation(line: 1977, column: 8, scope: !2929)
!2931 = !DILocation(line: 1977, column: 13, scope: !2932)
!2932 = distinct !DILexicalBlock(scope: !2929, file: !3, line: 1977, column: 3)
!2933 = !DILocation(line: 1977, column: 28, scope: !2932)
!2934 = !DILocation(line: 1977, column: 35, scope: !2932)
!2935 = !DILocation(line: 1977, column: 40, scope: !2932)
!2936 = !DILocation(line: 1977, column: 51, scope: !2932)
!2937 = !DILocation(line: 1977, column: 39, scope: !2932)
!2938 = !DILocation(line: 1977, column: 15, scope: !2932)
!2939 = !DILocation(line: 1977, column: 3, scope: !2929)
!2940 = !DILocalVariable(name: "similarity", scope: !2941, file: !3, line: 1980, type: !855)
!2941 = distinct !DILexicalBlock(scope: !2932, file: !3, line: 1978, column: 3)
!2942 = !DILocation(line: 1980, column: 7, scope: !2941)
!2943 = !DILocalVariable(name: "x", scope: !2941, file: !3, line: 1983, type: !813)
!2944 = !DILocation(line: 1983, column: 7, scope: !2941)
!2945 = !DILocation(line: 1985, column: 11, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2941, file: !3, line: 1985, column: 5)
!2947 = !DILocation(line: 1985, column: 10, scope: !2946)
!2948 = !DILocation(line: 1985, column: 15, scope: !2949)
!2949 = distinct !DILexicalBlock(scope: !2946, file: !3, line: 1985, column: 5)
!2950 = !DILocation(line: 1985, column: 30, scope: !2949)
!2951 = !DILocation(line: 1985, column: 37, scope: !2949)
!2952 = !DILocation(line: 1985, column: 45, scope: !2949)
!2953 = !DILocation(line: 1985, column: 56, scope: !2949)
!2954 = !DILocation(line: 1985, column: 44, scope: !2949)
!2955 = !DILocation(line: 1985, column: 17, scope: !2949)
!2956 = !DILocation(line: 1985, column: 5, scope: !2946)
!2957 = !DILocation(line: 1987, column: 38, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2949, file: !3, line: 1986, column: 5)
!2959 = !DILocation(line: 1987, column: 44, scope: !2958)
!2960 = !DILocation(line: 1987, column: 54, scope: !2958)
!2961 = !DILocation(line: 1987, column: 56, scope: !2958)
!2962 = !DILocation(line: 1987, column: 58, scope: !2958)
!2963 = !DILocation(line: 1988, column: 9, scope: !2958)
!2964 = !DILocation(line: 1987, column: 18, scope: !2958)
!2965 = !DILocation(line: 1987, column: 17, scope: !2958)
!2966 = !DILocation(line: 1992, column: 11, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2958, file: !3, line: 1992, column: 11)
!2968 = !DILocation(line: 1992, column: 24, scope: !2967)
!2969 = !DILocation(line: 1992, column: 22, scope: !2967)
!2970 = !DILocation(line: 1992, column: 11, scope: !2958)
!2971 = !DILocation(line: 1994, column: 32, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2967, file: !3, line: 1993, column: 9)
!2973 = !DILocation(line: 1994, column: 31, scope: !2972)
!2974 = !DILocation(line: 1995, column: 20, scope: !2972)
!2975 = !DILocation(line: 1995, column: 18, scope: !2972)
!2976 = !DILocation(line: 1995, column: 19, scope: !2972)
!2977 = !DILocation(line: 1996, column: 20, scope: !2972)
!2978 = !DILocation(line: 1996, column: 18, scope: !2972)
!2979 = !DILocation(line: 1996, column: 19, scope: !2972)
!2980 = !DILocation(line: 1997, column: 9, scope: !2972)
!2981 = !DILocation(line: 1998, column: 5, scope: !2958)
!2982 = !DILocation(line: 1985, column: 67, scope: !2949)
!2983 = !DILocation(line: 1985, column: 5, scope: !2949)
!2984 = distinct !{!2984, !2956, !2985}
!2985 = !DILocation(line: 1998, column: 5, scope: !2946)
!2986 = !DILocation(line: 1999, column: 3, scope: !2941)
!2987 = !DILocation(line: 1977, column: 59, scope: !2932)
!2988 = !DILocation(line: 1977, column: 3, scope: !2932)
!2989 = distinct !{!2989, !2939, !2990}
!2990 = !DILocation(line: 1999, column: 3, scope: !2929)
!2991 = !DILocation(line: 2000, column: 7, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 2000, column: 7)
!2993 = !DILocation(line: 2000, column: 44, scope: !2992)
!2994 = !DILocation(line: 2000, column: 55, scope: !2992)
!2995 = !DILocation(line: 2000, column: 43, scope: !2992)
!2996 = !DILocation(line: 2000, column: 59, scope: !2992)
!2997 = !DILocation(line: 2000, column: 28, scope: !2992)
!2998 = !DILocation(line: 2000, column: 7, scope: !2890)
!2999 = !DILocation(line: 2001, column: 5, scope: !2992)
!3000 = !DILocation(line: 2002, column: 20, scope: !2890)
!3001 = !DILocation(line: 2002, column: 34, scope: !2890)
!3002 = !DILocation(line: 2002, column: 10, scope: !2890)
!3003 = !DILocation(line: 2002, column: 3, scope: !2890)
!3004 = !DILocation(line: 2003, column: 1, scope: !2890)
!3005 = distinct !DISubprogram(name: "GetSimilarityMetric", scope: !3, file: !3, line: 1865, type: !3006, scopeLine: 1868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!855, !1168, !1168, !1301, !1301, !3008, !1057}
!3008 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !855)
!3009 = !DILocalVariable(name: "image", arg: 1, scope: !3005, file: !3, line: 1865, type: !1168)
!3010 = !DILocation(line: 1865, column: 48, scope: !3005)
!3011 = !DILocalVariable(name: "reference", arg: 2, scope: !3005, file: !3, line: 1865, type: !1168)
!3012 = !DILocation(line: 1865, column: 67, scope: !3005)
!3013 = !DILocalVariable(name: "x_offset", arg: 3, scope: !3005, file: !3, line: 1866, type: !1301)
!3014 = !DILocation(line: 1866, column: 17, scope: !3005)
!3015 = !DILocalVariable(name: "y_offset", arg: 4, scope: !3005, file: !3, line: 1866, type: !1301)
!3016 = !DILocation(line: 1866, column: 40, scope: !3005)
!3017 = !DILocalVariable(name: "similarity_threshold", arg: 5, scope: !3005, file: !3, line: 1867, type: !3008)
!3018 = !DILocation(line: 1867, column: 16, scope: !3005)
!3019 = !DILocalVariable(name: "exception", arg: 6, scope: !3005, file: !3, line: 1867, type: !1057)
!3020 = !DILocation(line: 1867, column: 52, scope: !3005)
!3021 = !DILocalVariable(name: "image_view", scope: !3005, file: !3, line: 1870, type: !1229)
!3022 = !DILocation(line: 1870, column: 6, scope: !3005)
!3023 = !DILocalVariable(name: "reference_view", scope: !3005, file: !3, line: 1871, type: !1229)
!3024 = !DILocation(line: 1871, column: 6, scope: !3005)
!3025 = !DILocalVariable(name: "channels", scope: !3005, file: !3, line: 1874, type: !855)
!3026 = !DILocation(line: 1874, column: 5, scope: !3005)
!3027 = !DILocalVariable(name: "normalized_similarity", scope: !3005, file: !3, line: 1875, type: !855)
!3028 = !DILocation(line: 1875, column: 5, scope: !3005)
!3029 = !DILocalVariable(name: "similarity", scope: !3005, file: !3, line: 1876, type: !855)
!3030 = !DILocation(line: 1876, column: 5, scope: !3005)
!3031 = !DILocalVariable(name: "y", scope: !3005, file: !3, line: 1879, type: !813)
!3032 = !DILocation(line: 1879, column: 5, scope: !3005)
!3033 = !DILocation(line: 1884, column: 24, scope: !3005)
!3034 = !DILocation(line: 1885, column: 13, scope: !3005)
!3035 = !DILocation(line: 1886, column: 11, scope: !3005)
!3036 = !DILocation(line: 1887, column: 8, scope: !3037)
!3037 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1887, column: 7)
!3038 = !DILocation(line: 1887, column: 15, scope: !3037)
!3039 = !DILocation(line: 1887, column: 21, scope: !3037)
!3040 = !DILocation(line: 1887, column: 37, scope: !3037)
!3041 = !DILocation(line: 1887, column: 41, scope: !3037)
!3042 = !DILocation(line: 1887, column: 52, scope: !3037)
!3043 = !DILocation(line: 1887, column: 58, scope: !3037)
!3044 = !DILocation(line: 1887, column: 7, scope: !3005)
!3045 = !DILocation(line: 1888, column: 13, scope: !3037)
!3046 = !DILocation(line: 1888, column: 5, scope: !3037)
!3047 = !DILocation(line: 1889, column: 8, scope: !3048)
!3048 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1889, column: 7)
!3049 = !DILocation(line: 1889, column: 15, scope: !3048)
!3050 = !DILocation(line: 1889, column: 26, scope: !3048)
!3051 = !DILocation(line: 1889, column: 45, scope: !3048)
!3052 = !DILocation(line: 1890, column: 8, scope: !3048)
!3053 = !DILocation(line: 1890, column: 19, scope: !3048)
!3054 = !DILocation(line: 1890, column: 30, scope: !3048)
!3055 = !DILocation(line: 1889, column: 7, scope: !3005)
!3056 = !DILocation(line: 1891, column: 13, scope: !3048)
!3057 = !DILocation(line: 1891, column: 5, scope: !3048)
!3058 = !DILocation(line: 1892, column: 38, scope: !3005)
!3059 = !DILocation(line: 1892, column: 44, scope: !3005)
!3060 = !DILocation(line: 1892, column: 14, scope: !3005)
!3061 = !DILocation(line: 1892, column: 13, scope: !3005)
!3062 = !DILocation(line: 1893, column: 42, scope: !3005)
!3063 = !DILocation(line: 1893, column: 52, scope: !3005)
!3064 = !DILocation(line: 1893, column: 18, scope: !3005)
!3065 = !DILocation(line: 1893, column: 17, scope: !3005)
!3066 = !DILocation(line: 1894, column: 9, scope: !3067)
!3067 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 1894, column: 3)
!3068 = !DILocation(line: 1894, column: 8, scope: !3067)
!3069 = !DILocation(line: 1894, column: 13, scope: !3070)
!3070 = distinct !DILexicalBlock(scope: !3067, file: !3, line: 1894, column: 3)
!3071 = !DILocation(line: 1894, column: 27, scope: !3070)
!3072 = !DILocation(line: 1894, column: 38, scope: !3070)
!3073 = !DILocation(line: 1894, column: 15, scope: !3070)
!3074 = !DILocation(line: 1894, column: 3, scope: !3067)
!3075 = !DILocalVariable(name: "indexes", scope: !3076, file: !3, line: 1897, type: !1252)
!3076 = distinct !DILexicalBlock(scope: !3070, file: !3, line: 1895, column: 3)
!3077 = !DILocation(line: 1897, column: 8, scope: !3076)
!3078 = !DILocalVariable(name: "reference_indexes", scope: !3076, file: !3, line: 1898, type: !1252)
!3079 = !DILocation(line: 1898, column: 8, scope: !3076)
!3080 = !DILocalVariable(name: "p", scope: !3076, file: !3, line: 1901, type: !1032)
!3081 = !DILocation(line: 1901, column: 8, scope: !3076)
!3082 = !DILocalVariable(name: "q", scope: !3076, file: !3, line: 1902, type: !1032)
!3083 = !DILocation(line: 1902, column: 8, scope: !3076)
!3084 = !DILocalVariable(name: "x", scope: !3076, file: !3, line: 1905, type: !813)
!3085 = !DILocation(line: 1905, column: 7, scope: !3076)
!3086 = !DILocation(line: 1907, column: 33, scope: !3076)
!3087 = !DILocation(line: 1907, column: 44, scope: !3076)
!3088 = !DILocation(line: 1907, column: 53, scope: !3076)
!3089 = !DILocation(line: 1907, column: 62, scope: !3076)
!3090 = !DILocation(line: 1907, column: 61, scope: !3076)
!3091 = !DILocation(line: 1908, column: 7, scope: !3076)
!3092 = !DILocation(line: 1908, column: 18, scope: !3076)
!3093 = !DILocation(line: 1908, column: 28, scope: !3076)
!3094 = !DILocation(line: 1907, column: 7, scope: !3076)
!3095 = !DILocation(line: 1907, column: 6, scope: !3076)
!3096 = !DILocation(line: 1909, column: 33, scope: !3076)
!3097 = !DILocation(line: 1909, column: 50, scope: !3076)
!3098 = !DILocation(line: 1909, column: 52, scope: !3076)
!3099 = !DILocation(line: 1909, column: 63, scope: !3076)
!3100 = !DILocation(line: 1910, column: 7, scope: !3076)
!3101 = !DILocation(line: 1909, column: 7, scope: !3076)
!3102 = !DILocation(line: 1909, column: 6, scope: !3076)
!3103 = !DILocation(line: 1911, column: 10, scope: !3104)
!3104 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 1911, column: 9)
!3105 = !DILocation(line: 1911, column: 12, scope: !3104)
!3106 = !DILocation(line: 1911, column: 43, scope: !3104)
!3107 = !DILocation(line: 1911, column: 47, scope: !3104)
!3108 = !DILocation(line: 1911, column: 49, scope: !3104)
!3109 = !DILocation(line: 1911, column: 9, scope: !3076)
!3110 = !DILocation(line: 1912, column: 7, scope: !3104)
!3111 = !DILocation(line: 1913, column: 43, scope: !3076)
!3112 = !DILocation(line: 1913, column: 13, scope: !3076)
!3113 = !DILocation(line: 1913, column: 12, scope: !3076)
!3114 = !DILocation(line: 1914, column: 53, scope: !3076)
!3115 = !DILocation(line: 1914, column: 23, scope: !3076)
!3116 = !DILocation(line: 1914, column: 22, scope: !3076)
!3117 = !DILocation(line: 1915, column: 11, scope: !3118)
!3118 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 1915, column: 5)
!3119 = !DILocation(line: 1915, column: 10, scope: !3118)
!3120 = !DILocation(line: 1915, column: 15, scope: !3121)
!3121 = distinct !DILexicalBlock(scope: !3118, file: !3, line: 1915, column: 5)
!3122 = !DILocation(line: 1915, column: 29, scope: !3121)
!3123 = !DILocation(line: 1915, column: 40, scope: !3121)
!3124 = !DILocation(line: 1915, column: 17, scope: !3121)
!3125 = !DILocation(line: 1915, column: 5, scope: !3118)
!3126 = !DILocalVariable(name: "pixel", scope: !3127, file: !3, line: 1918, type: !1034)
!3127 = distinct !DILexicalBlock(scope: !3121, file: !3, line: 1916, column: 5)
!3128 = !DILocation(line: 1918, column: 9, scope: !3127)
!3129 = !DILocation(line: 1920, column: 27, scope: !3127)
!3130 = !DILocation(line: 1921, column: 9, scope: !3127)
!3131 = !DILocation(line: 1920, column: 42, scope: !3127)
!3132 = !DILocation(line: 1920, column: 41, scope: !3127)
!3133 = !DILocation(line: 1920, column: 25, scope: !3127)
!3134 = !DILocation(line: 1920, column: 13, scope: !3127)
!3135 = !DILocation(line: 1920, column: 12, scope: !3127)
!3136 = !DILocation(line: 1922, column: 19, scope: !3127)
!3137 = !DILocation(line: 1922, column: 25, scope: !3127)
!3138 = !DILocation(line: 1922, column: 24, scope: !3127)
!3139 = !DILocation(line: 1922, column: 17, scope: !3127)
!3140 = !DILocation(line: 1923, column: 27, scope: !3127)
!3141 = !DILocation(line: 1924, column: 9, scope: !3127)
!3142 = !DILocation(line: 1923, column: 44, scope: !3127)
!3143 = !DILocation(line: 1923, column: 43, scope: !3127)
!3144 = !DILocation(line: 1923, column: 25, scope: !3127)
!3145 = !DILocation(line: 1923, column: 13, scope: !3127)
!3146 = !DILocation(line: 1923, column: 12, scope: !3127)
!3147 = !DILocation(line: 1925, column: 19, scope: !3127)
!3148 = !DILocation(line: 1925, column: 25, scope: !3127)
!3149 = !DILocation(line: 1925, column: 24, scope: !3127)
!3150 = !DILocation(line: 1925, column: 17, scope: !3127)
!3151 = !DILocation(line: 1926, column: 27, scope: !3127)
!3152 = !DILocation(line: 1927, column: 9, scope: !3127)
!3153 = !DILocation(line: 1926, column: 43, scope: !3127)
!3154 = !DILocation(line: 1926, column: 42, scope: !3127)
!3155 = !DILocation(line: 1926, column: 25, scope: !3127)
!3156 = !DILocation(line: 1926, column: 13, scope: !3127)
!3157 = !DILocation(line: 1926, column: 12, scope: !3127)
!3158 = !DILocation(line: 1928, column: 19, scope: !3127)
!3159 = !DILocation(line: 1928, column: 25, scope: !3127)
!3160 = !DILocation(line: 1928, column: 24, scope: !3127)
!3161 = !DILocation(line: 1928, column: 17, scope: !3127)
!3162 = !DILocation(line: 1929, column: 12, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 1929, column: 11)
!3164 = !DILocation(line: 1929, column: 19, scope: !3163)
!3165 = !DILocation(line: 1929, column: 25, scope: !3163)
!3166 = !DILocation(line: 1929, column: 41, scope: !3163)
!3167 = !DILocation(line: 1929, column: 45, scope: !3163)
!3168 = !DILocation(line: 1929, column: 56, scope: !3163)
!3169 = !DILocation(line: 1929, column: 62, scope: !3163)
!3170 = !DILocation(line: 1929, column: 11, scope: !3127)
!3171 = !DILocation(line: 1931, column: 31, scope: !3172)
!3172 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1930, column: 9)
!3173 = !DILocation(line: 1932, column: 13, scope: !3172)
!3174 = !DILocation(line: 1931, column: 50, scope: !3172)
!3175 = !DILocation(line: 1931, column: 49, scope: !3172)
!3176 = !DILocation(line: 1931, column: 29, scope: !3172)
!3177 = !DILocation(line: 1931, column: 17, scope: !3172)
!3178 = !DILocation(line: 1931, column: 16, scope: !3172)
!3179 = !DILocation(line: 1933, column: 23, scope: !3172)
!3180 = !DILocation(line: 1933, column: 29, scope: !3172)
!3181 = !DILocation(line: 1933, column: 28, scope: !3172)
!3182 = !DILocation(line: 1933, column: 21, scope: !3172)
!3183 = !DILocation(line: 1934, column: 9, scope: !3172)
!3184 = !DILocation(line: 1935, column: 12, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 1935, column: 11)
!3186 = !DILocation(line: 1935, column: 19, scope: !3185)
!3187 = !DILocation(line: 1935, column: 30, scope: !3185)
!3188 = !DILocation(line: 1935, column: 49, scope: !3185)
!3189 = !DILocation(line: 1936, column: 12, scope: !3185)
!3190 = !DILocation(line: 1936, column: 23, scope: !3185)
!3191 = !DILocation(line: 1936, column: 34, scope: !3185)
!3192 = !DILocation(line: 1935, column: 11, scope: !3127)
!3193 = !DILocation(line: 1938, column: 31, scope: !3194)
!3194 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1937, column: 9)
!3195 = !DILocation(line: 1939, column: 13, scope: !3194)
!3196 = !DILocation(line: 1938, column: 56, scope: !3194)
!3197 = !DILocation(line: 1938, column: 55, scope: !3194)
!3198 = !DILocation(line: 1938, column: 29, scope: !3194)
!3199 = !DILocation(line: 1938, column: 17, scope: !3194)
!3200 = !DILocation(line: 1938, column: 16, scope: !3194)
!3201 = !DILocation(line: 1940, column: 23, scope: !3194)
!3202 = !DILocation(line: 1940, column: 29, scope: !3194)
!3203 = !DILocation(line: 1940, column: 28, scope: !3194)
!3204 = !DILocation(line: 1940, column: 21, scope: !3194)
!3205 = !DILocation(line: 1941, column: 9, scope: !3194)
!3206 = !DILocation(line: 1942, column: 8, scope: !3127)
!3207 = !DILocation(line: 1943, column: 8, scope: !3127)
!3208 = !DILocation(line: 1944, column: 5, scope: !3127)
!3209 = !DILocation(line: 1915, column: 50, scope: !3121)
!3210 = !DILocation(line: 1915, column: 5, scope: !3121)
!3211 = distinct !{!3211, !3125, !3212}
!3212 = !DILocation(line: 1944, column: 5, scope: !3118)
!3213 = !DILocation(line: 1945, column: 32, scope: !3076)
!3214 = !DILocation(line: 1945, column: 27, scope: !3076)
!3215 = !DILocation(line: 1945, column: 44, scope: !3076)
!3216 = !DILocation(line: 1945, column: 55, scope: !3076)
!3217 = !DILocation(line: 1945, column: 43, scope: !3076)
!3218 = !DILocation(line: 1945, column: 63, scope: !3076)
!3219 = !DILocation(line: 1945, column: 74, scope: !3076)
!3220 = !DILocation(line: 1945, column: 62, scope: !3076)
!3221 = !DILocation(line: 1946, column: 7, scope: !3076)
!3222 = !DILocation(line: 1945, column: 78, scope: !3076)
!3223 = !DILocation(line: 1945, column: 26, scope: !3076)
!3224 = !DILocation(line: 1947, column: 9, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3076, file: !3, line: 1947, column: 9)
!3226 = !DILocation(line: 1947, column: 33, scope: !3225)
!3227 = !DILocation(line: 1947, column: 31, scope: !3225)
!3228 = !DILocation(line: 1947, column: 9, scope: !3076)
!3229 = !DILocation(line: 1948, column: 7, scope: !3225)
!3230 = !DILocation(line: 1949, column: 3, scope: !3076)
!3231 = !DILocation(line: 1894, column: 45, scope: !3070)
!3232 = !DILocation(line: 1894, column: 3, scope: !3070)
!3233 = distinct !{!3233, !3074, !3234}
!3234 = !DILocation(line: 1949, column: 3, scope: !3067)
!3235 = !DILocation(line: 1950, column: 35, scope: !3005)
!3236 = !DILocation(line: 1950, column: 18, scope: !3005)
!3237 = !DILocation(line: 1950, column: 17, scope: !3005)
!3238 = !DILocation(line: 1951, column: 31, scope: !3005)
!3239 = !DILocation(line: 1951, column: 14, scope: !3005)
!3240 = !DILocation(line: 1951, column: 13, scope: !3005)
!3241 = !DILocation(line: 1952, column: 10, scope: !3005)
!3242 = !DILocation(line: 1952, column: 3, scope: !3005)
!3243 = distinct !DISubprogram(name: "FlattenImages", scope: !3, file: !3, line: 2033, type: !3244, scopeLine: 2034, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!818, !818, !1057}
!3246 = !DILocalVariable(name: "image", arg: 1, scope: !3243, file: !3, line: 2033, type: !818)
!3247 = !DILocation(line: 2033, column: 42, scope: !3243)
!3248 = !DILocalVariable(name: "exception", arg: 2, scope: !3243, file: !3, line: 2033, type: !1057)
!3249 = !DILocation(line: 2033, column: 63, scope: !3243)
!3250 = !DILocation(line: 2035, column: 27, scope: !3243)
!3251 = !DILocation(line: 2035, column: 46, scope: !3243)
!3252 = !DILocation(line: 2035, column: 10, scope: !3243)
!3253 = !DILocation(line: 2035, column: 3, scope: !3243)
!3254 = distinct !DISubprogram(name: "FormatImageAttributeList", scope: !3, file: !3, line: 2068, type: !3255, scopeLine: 2070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3255 = !DISubroutineType(types: !3256)
!3256 = !{!834, !818, !943, !943, !3257}
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 2036, size: 192, elements: !3259)
!3259 = !{!3260, !3261, !3262, !3263}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3258, file: !3, line: 2036, baseType: !7, size: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3258, file: !3, line: 2036, baseType: !7, size: 32, offset: 32)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3258, file: !3, line: 2036, baseType: !805, size: 64, offset: 64)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3258, file: !3, line: 2036, baseType: !805, size: 64, offset: 128)
!3264 = !DILocalVariable(name: "image", arg: 1, scope: !3254, file: !3, line: 2068, type: !818)
!3265 = !DILocation(line: 2068, column: 64, scope: !3254)
!3266 = !DILocalVariable(name: "key", arg: 2, scope: !3254, file: !3, line: 2069, type: !943)
!3267 = !DILocation(line: 2069, column: 15, scope: !3254)
!3268 = !DILocalVariable(name: "format", arg: 3, scope: !3254, file: !3, line: 2069, type: !943)
!3269 = !DILocation(line: 2069, column: 31, scope: !3254)
!3270 = !DILocalVariable(name: "operands", arg: 4, scope: !3254, file: !3, line: 2069, type: !3257)
!3271 = !DILocation(line: 2069, column: 46, scope: !3254)
!3272 = !DILocalVariable(name: "value", scope: !3254, file: !3, line: 2072, type: !963)
!3273 = !DILocation(line: 2072, column: 5, scope: !3254)
!3274 = !DILocalVariable(name: "n", scope: !3254, file: !3, line: 2075, type: !808)
!3275 = !DILocation(line: 2075, column: 5, scope: !3254)
!3276 = !DILocation(line: 2078, column: 15, scope: !3254)
!3277 = !DILocation(line: 2078, column: 35, scope: !3254)
!3278 = !DILocation(line: 2078, column: 42, scope: !3254)
!3279 = !DILocation(line: 2078, column: 5, scope: !3254)
!3280 = !DILocation(line: 2078, column: 4, scope: !3254)
!3281 = !DILocation(line: 2082, column: 7, scope: !3282)
!3282 = distinct !DILexicalBlock(scope: !3254, file: !3, line: 2082, column: 7)
!3283 = !DILocation(line: 2082, column: 9, scope: !3282)
!3284 = !DILocation(line: 2082, column: 7, scope: !3254)
!3285 = !DILocation(line: 2083, column: 5, scope: !3282)
!3286 = !DILocation(line: 2083, column: 27, scope: !3282)
!3287 = !DILocation(line: 2084, column: 27, scope: !3254)
!3288 = !DILocation(line: 2084, column: 33, scope: !3254)
!3289 = !DILocation(line: 2084, column: 37, scope: !3254)
!3290 = !DILocation(line: 2084, column: 10, scope: !3254)
!3291 = !DILocation(line: 2084, column: 3, scope: !3254)
!3292 = distinct !DISubprogram(name: "FormatImagePropertyList", scope: !3, file: !3, line: 2087, type: !3255, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3293 = !DILocalVariable(name: "image", arg: 1, scope: !3292, file: !3, line: 2087, type: !818)
!3294 = !DILocation(line: 2087, column: 63, scope: !3292)
!3295 = !DILocalVariable(name: "property", arg: 2, scope: !3292, file: !3, line: 2088, type: !943)
!3296 = !DILocation(line: 2088, column: 15, scope: !3292)
!3297 = !DILocalVariable(name: "format", arg: 3, scope: !3292, file: !3, line: 2088, type: !943)
!3298 = !DILocation(line: 2088, column: 36, scope: !3292)
!3299 = !DILocalVariable(name: "operands", arg: 4, scope: !3292, file: !3, line: 2088, type: !3257)
!3300 = !DILocation(line: 2088, column: 51, scope: !3292)
!3301 = !DILocalVariable(name: "value", scope: !3292, file: !3, line: 2091, type: !963)
!3302 = !DILocation(line: 2091, column: 5, scope: !3292)
!3303 = !DILocalVariable(name: "n", scope: !3292, file: !3, line: 2094, type: !808)
!3304 = !DILocation(line: 2094, column: 5, scope: !3292)
!3305 = !DILocation(line: 2097, column: 15, scope: !3292)
!3306 = !DILocation(line: 2097, column: 35, scope: !3292)
!3307 = !DILocation(line: 2097, column: 42, scope: !3292)
!3308 = !DILocation(line: 2097, column: 5, scope: !3292)
!3309 = !DILocation(line: 2097, column: 4, scope: !3292)
!3310 = !DILocation(line: 2101, column: 7, scope: !3311)
!3311 = distinct !DILexicalBlock(scope: !3292, file: !3, line: 2101, column: 7)
!3312 = !DILocation(line: 2101, column: 9, scope: !3311)
!3313 = !DILocation(line: 2101, column: 7, scope: !3292)
!3314 = !DILocation(line: 2102, column: 5, scope: !3311)
!3315 = !DILocation(line: 2102, column: 27, scope: !3311)
!3316 = !DILocation(line: 2103, column: 27, scope: !3292)
!3317 = !DILocation(line: 2103, column: 33, scope: !3292)
!3318 = !DILocation(line: 2103, column: 42, scope: !3292)
!3319 = !DILocation(line: 2103, column: 10, scope: !3292)
!3320 = !DILocation(line: 2103, column: 3, scope: !3292)
!3321 = distinct !DISubprogram(name: "FormatImageAttribute", scope: !3, file: !3, line: 2106, type: !3322, scopeLine: 2108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3322 = !DISubroutineType(types: !3323)
!3323 = !{!834, !818, !943, !943, null}
!3324 = !DILocalVariable(name: "image", arg: 1, scope: !3321, file: !3, line: 2106, type: !818)
!3325 = !DILocation(line: 2106, column: 60, scope: !3321)
!3326 = !DILocalVariable(name: "key", arg: 2, scope: !3321, file: !3, line: 2107, type: !943)
!3327 = !DILocation(line: 2107, column: 15, scope: !3321)
!3328 = !DILocalVariable(name: "format", arg: 3, scope: !3321, file: !3, line: 2107, type: !943)
!3329 = !DILocation(line: 2107, column: 31, scope: !3321)
!3330 = !DILocalVariable(name: "value", scope: !3321, file: !3, line: 2110, type: !963)
!3331 = !DILocation(line: 2110, column: 5, scope: !3321)
!3332 = !DILocalVariable(name: "n", scope: !3321, file: !3, line: 2113, type: !808)
!3333 = !DILocation(line: 2113, column: 5, scope: !3321)
!3334 = !DILocalVariable(name: "operands", scope: !3321, file: !3, line: 2116, type: !3335)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !814, line: 52, baseType: !3336)
!3336 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3337, line: 32, baseType: !3338)
!3337 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stdarg.h", directory: "/home/venkat/IF-DV")
!3338 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 2116, baseType: !3339)
!3339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3258, size: 192, elements: !1090)
!3340 = !DILocation(line: 2116, column: 5, scope: !3321)
!3341 = !DILocation(line: 2118, column: 3, scope: !3321)
!3342 = !DILocation(line: 2119, column: 28, scope: !3321)
!3343 = !DILocation(line: 2119, column: 48, scope: !3321)
!3344 = !DILocation(line: 2119, column: 55, scope: !3321)
!3345 = !DILocation(line: 2119, column: 5, scope: !3321)
!3346 = !DILocation(line: 2119, column: 4, scope: !3321)
!3347 = !DILocation(line: 2120, column: 10, scope: !3321)
!3348 = !DILocation(line: 2121, column: 3, scope: !3321)
!3349 = !DILocation(line: 2122, column: 27, scope: !3321)
!3350 = !DILocation(line: 2122, column: 33, scope: !3321)
!3351 = !DILocation(line: 2122, column: 37, scope: !3321)
!3352 = !DILocation(line: 2122, column: 10, scope: !3321)
!3353 = !DILocation(line: 2122, column: 3, scope: !3321)
!3354 = distinct !DISubprogram(name: "FormatMagickStringList", scope: !3, file: !3, line: 2155, type: !3355, scopeLine: 2157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!813, !806, !1172, !943, !3257}
!3357 = !DILocalVariable(name: "string", arg: 1, scope: !3354, file: !3, line: 2155, type: !806)
!3358 = !DILocation(line: 2155, column: 51, scope: !3354)
!3359 = !DILocalVariable(name: "length", arg: 2, scope: !3354, file: !3, line: 2155, type: !1172)
!3360 = !DILocation(line: 2155, column: 71, scope: !3354)
!3361 = !DILocalVariable(name: "format", arg: 3, scope: !3354, file: !3, line: 2156, type: !943)
!3362 = !DILocation(line: 2156, column: 15, scope: !3354)
!3363 = !DILocalVariable(name: "operands", arg: 4, scope: !3354, file: !3, line: 2156, type: !3257)
!3364 = !DILocation(line: 2156, column: 30, scope: !3354)
!3365 = !DILocalVariable(name: "n", scope: !3354, file: !3, line: 2159, type: !808)
!3366 = !DILocation(line: 2159, column: 5, scope: !3354)
!3367 = !DILocation(line: 2162, column: 15, scope: !3354)
!3368 = !DILocation(line: 2162, column: 22, scope: !3354)
!3369 = !DILocation(line: 2162, column: 29, scope: !3354)
!3370 = !DILocation(line: 2162, column: 36, scope: !3354)
!3371 = !DILocation(line: 2162, column: 5, scope: !3354)
!3372 = !DILocation(line: 2162, column: 4, scope: !3354)
!3373 = !DILocation(line: 2166, column: 7, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3354, file: !3, line: 2166, column: 7)
!3375 = !DILocation(line: 2166, column: 9, scope: !3374)
!3376 = !DILocation(line: 2166, column: 7, scope: !3354)
!3377 = !DILocation(line: 2167, column: 5, scope: !3374)
!3378 = !DILocation(line: 2167, column: 12, scope: !3374)
!3379 = !DILocation(line: 2167, column: 18, scope: !3374)
!3380 = !DILocation(line: 2167, column: 21, scope: !3374)
!3381 = !DILocation(line: 2168, column: 20, scope: !3354)
!3382 = !DILocation(line: 2168, column: 10, scope: !3354)
!3383 = !DILocation(line: 2168, column: 3, scope: !3354)
!3384 = distinct !DISubprogram(name: "FormatMagickString", scope: !3, file: !3, line: 2171, type: !3385, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3385 = !DISubroutineType(types: !3386)
!3386 = !{!813, !806, !1172, !943, null}
!3387 = !DILocalVariable(name: "string", arg: 1, scope: !3384, file: !3, line: 2171, type: !806)
!3388 = !DILocation(line: 2171, column: 47, scope: !3384)
!3389 = !DILocalVariable(name: "length", arg: 2, scope: !3384, file: !3, line: 2171, type: !1172)
!3390 = !DILocation(line: 2171, column: 67, scope: !3384)
!3391 = !DILocalVariable(name: "format", arg: 3, scope: !3384, file: !3, line: 2172, type: !943)
!3392 = !DILocation(line: 2172, column: 15, scope: !3384)
!3393 = !DILocalVariable(name: "n", scope: !3384, file: !3, line: 2175, type: !813)
!3394 = !DILocation(line: 2175, column: 5, scope: !3384)
!3395 = !DILocalVariable(name: "operands", scope: !3384, file: !3, line: 2178, type: !3335)
!3396 = !DILocation(line: 2178, column: 5, scope: !3384)
!3397 = !DILocation(line: 2180, column: 3, scope: !3384)
!3398 = !DILocation(line: 2181, column: 38, scope: !3384)
!3399 = !DILocation(line: 2181, column: 45, scope: !3384)
!3400 = !DILocation(line: 2181, column: 52, scope: !3384)
!3401 = !DILocation(line: 2181, column: 59, scope: !3384)
!3402 = !DILocation(line: 2181, column: 15, scope: !3384)
!3403 = !DILocation(line: 2181, column: 4, scope: !3384)
!3404 = !DILocation(line: 2182, column: 3, scope: !3384)
!3405 = !DILocation(line: 2183, column: 10, scope: !3384)
!3406 = !DILocation(line: 2183, column: 3, scope: !3384)
!3407 = distinct !DISubprogram(name: "FormatStringList", scope: !3, file: !3, line: 2213, type: !3408, scopeLine: 2215, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{null, !806, !943, !3257}
!3410 = !DILocalVariable(name: "string", arg: 1, scope: !3407, file: !3, line: 2213, type: !806)
!3411 = !DILocation(line: 2213, column: 42, scope: !3407)
!3412 = !DILocalVariable(name: "format", arg: 2, scope: !3407, file: !3, line: 2213, type: !943)
!3413 = !DILocation(line: 2213, column: 61, scope: !3407)
!3414 = !DILocalVariable(name: "operands", arg: 3, scope: !3407, file: !3, line: 2214, type: !3257)
!3415 = !DILocation(line: 2214, column: 11, scope: !3407)
!3416 = !DILocalVariable(name: "n", scope: !3407, file: !3, line: 2217, type: !808)
!3417 = !DILocation(line: 2217, column: 5, scope: !3407)
!3418 = !DILocation(line: 2219, column: 9, scope: !3407)
!3419 = !DILocation(line: 2221, column: 15, scope: !3407)
!3420 = !DILocation(line: 2221, column: 36, scope: !3407)
!3421 = !DILocation(line: 2221, column: 43, scope: !3407)
!3422 = !DILocation(line: 2221, column: 5, scope: !3407)
!3423 = !DILocation(line: 2221, column: 4, scope: !3407)
!3424 = !DILocation(line: 2225, column: 7, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3407, file: !3, line: 2225, column: 7)
!3426 = !DILocation(line: 2225, column: 9, scope: !3425)
!3427 = !DILocation(line: 2225, column: 7, scope: !3407)
!3428 = !DILocation(line: 2226, column: 5, scope: !3425)
!3429 = !DILocation(line: 2226, column: 28, scope: !3425)
!3430 = !DILocation(line: 2227, column: 1, scope: !3407)
!3431 = distinct !DISubprogram(name: "FormatString", scope: !3, file: !3, line: 2229, type: !3432, scopeLine: 2230, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{null, !806, !943, null}
!3434 = !DILocalVariable(name: "string", arg: 1, scope: !3431, file: !3, line: 2229, type: !806)
!3435 = !DILocation(line: 2229, column: 38, scope: !3431)
!3436 = !DILocalVariable(name: "format", arg: 2, scope: !3431, file: !3, line: 2229, type: !943)
!3437 = !DILocation(line: 2229, column: 57, scope: !3431)
!3438 = !DILocalVariable(name: "operands", scope: !3431, file: !3, line: 2232, type: !3335)
!3439 = !DILocation(line: 2232, column: 5, scope: !3431)
!3440 = !DILocation(line: 2234, column: 3, scope: !3431)
!3441 = !DILocation(line: 2235, column: 33, scope: !3431)
!3442 = !DILocation(line: 2235, column: 54, scope: !3431)
!3443 = !DILocation(line: 2235, column: 61, scope: !3431)
!3444 = !DILocation(line: 2235, column: 10, scope: !3431)
!3445 = !DILocation(line: 2236, column: 3, scope: !3431)
!3446 = !DILocation(line: 2237, column: 3, scope: !3431)
!3447 = distinct !DISubprogram(name: "FuzzyColorMatch", scope: !3, file: !3, line: 2268, type: !3448, scopeLine: 2270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{!7, !1032, !1032, !3008}
!3450 = !DILocalVariable(name: "p", arg: 1, scope: !3447, file: !3, line: 2268, type: !1032)
!3451 = !DILocation(line: 2268, column: 62, scope: !3447)
!3452 = !DILocalVariable(name: "q", arg: 2, scope: !3447, file: !3, line: 2269, type: !1032)
!3453 = !DILocation(line: 2269, column: 22, scope: !3447)
!3454 = !DILocalVariable(name: "fuzz", arg: 3, scope: !3447, file: !3, line: 2269, type: !3008)
!3455 = !DILocation(line: 2269, column: 37, scope: !3447)
!3456 = !DILocalVariable(name: "pixel", scope: !3447, file: !3, line: 2272, type: !1417)
!3457 = !DILocation(line: 2272, column: 5, scope: !3447)
!3458 = !DILocalVariable(name: "distance", scope: !3447, file: !3, line: 2275, type: !1034)
!3459 = !DILocation(line: 2275, column: 5, scope: !3447)
!3460 = !DILocation(line: 2277, column: 8, scope: !3461)
!3461 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 2277, column: 7)
!3462 = !DILocation(line: 2277, column: 13, scope: !3461)
!3463 = !DILocation(line: 2277, column: 21, scope: !3461)
!3464 = !DILocation(line: 2277, column: 25, scope: !3461)
!3465 = !DILocation(line: 2277, column: 43, scope: !3461)
!3466 = !DILocation(line: 2277, column: 40, scope: !3461)
!3467 = !DILocation(line: 2277, column: 59, scope: !3461)
!3468 = !DILocation(line: 2278, column: 8, scope: !3461)
!3469 = !DILocation(line: 2278, column: 28, scope: !3461)
!3470 = !DILocation(line: 2278, column: 25, scope: !3461)
!3471 = !DILocation(line: 2278, column: 46, scope: !3461)
!3472 = !DILocation(line: 2279, column: 8, scope: !3461)
!3473 = !DILocation(line: 2279, column: 27, scope: !3461)
!3474 = !DILocation(line: 2279, column: 24, scope: !3461)
!3475 = !DILocation(line: 2277, column: 7, scope: !3447)
!3476 = !DILocation(line: 2280, column: 5, scope: !3461)
!3477 = !DILocation(line: 2281, column: 13, scope: !3447)
!3478 = !DILocation(line: 2281, column: 45, scope: !3447)
!3479 = !DILocation(line: 2281, column: 28, scope: !3447)
!3480 = !DILocation(line: 2281, column: 27, scope: !3447)
!3481 = !DILocation(line: 2281, column: 9, scope: !3447)
!3482 = !DILocation(line: 2281, column: 12, scope: !3447)
!3483 = !DILocation(line: 2282, column: 18, scope: !3447)
!3484 = !DILocation(line: 2282, column: 28, scope: !3447)
!3485 = !DILocation(line: 2282, column: 21, scope: !3447)
!3486 = !DILocation(line: 2282, column: 11, scope: !3447)
!3487 = !DILocation(line: 2283, column: 7, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 2283, column: 7)
!3489 = !DILocation(line: 2283, column: 19, scope: !3488)
!3490 = !DILocation(line: 2283, column: 24, scope: !3488)
!3491 = !DILocation(line: 2283, column: 23, scope: !3488)
!3492 = !DILocation(line: 2283, column: 16, scope: !3488)
!3493 = !DILocation(line: 2283, column: 7, scope: !3447)
!3494 = !DILocation(line: 2284, column: 5, scope: !3488)
!3495 = !DILocation(line: 2285, column: 15, scope: !3447)
!3496 = !DILocation(line: 2286, column: 5, scope: !3447)
!3497 = !DILocation(line: 2285, column: 32, scope: !3447)
!3498 = !DILocation(line: 2285, column: 31, scope: !3447)
!3499 = !DILocation(line: 2285, column: 9, scope: !3447)
!3500 = !DILocation(line: 2285, column: 14, scope: !3447)
!3501 = !DILocation(line: 2287, column: 19, scope: !3447)
!3502 = !DILocation(line: 2287, column: 31, scope: !3447)
!3503 = !DILocation(line: 2287, column: 24, scope: !3447)
!3504 = !DILocation(line: 2287, column: 11, scope: !3447)
!3505 = !DILocation(line: 2288, column: 7, scope: !3506)
!3506 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 2288, column: 7)
!3507 = !DILocation(line: 2288, column: 19, scope: !3506)
!3508 = !DILocation(line: 2288, column: 24, scope: !3506)
!3509 = !DILocation(line: 2288, column: 23, scope: !3506)
!3510 = !DILocation(line: 2288, column: 16, scope: !3506)
!3511 = !DILocation(line: 2288, column: 7, scope: !3447)
!3512 = !DILocation(line: 2289, column: 5, scope: !3506)
!3513 = !DILocation(line: 2290, column: 14, scope: !3447)
!3514 = !DILocation(line: 2290, column: 47, scope: !3447)
!3515 = !DILocation(line: 2290, column: 30, scope: !3447)
!3516 = !DILocation(line: 2290, column: 29, scope: !3447)
!3517 = !DILocation(line: 2290, column: 9, scope: !3447)
!3518 = !DILocation(line: 2290, column: 13, scope: !3447)
!3519 = !DILocation(line: 2291, column: 19, scope: !3447)
!3520 = !DILocation(line: 2291, column: 30, scope: !3447)
!3521 = !DILocation(line: 2291, column: 23, scope: !3447)
!3522 = !DILocation(line: 2291, column: 11, scope: !3447)
!3523 = !DILocation(line: 2292, column: 7, scope: !3524)
!3524 = distinct !DILexicalBlock(scope: !3447, file: !3, line: 2292, column: 7)
!3525 = !DILocation(line: 2292, column: 19, scope: !3524)
!3526 = !DILocation(line: 2292, column: 24, scope: !3524)
!3527 = !DILocation(line: 2292, column: 23, scope: !3524)
!3528 = !DILocation(line: 2292, column: 16, scope: !3524)
!3529 = !DILocation(line: 2292, column: 7, scope: !3447)
!3530 = !DILocation(line: 2293, column: 5, scope: !3524)
!3531 = !DILocation(line: 2294, column: 3, scope: !3447)
!3532 = !DILocation(line: 2295, column: 1, scope: !3447)
!3533 = distinct !DISubprogram(name: "FuzzyColorCompare", scope: !3, file: !3, line: 2327, type: !3534, scopeLine: 2329, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3534 = !DISubroutineType(types: !3535)
!3535 = !{!834, !1168, !1032, !1032}
!3536 = !DILocalVariable(name: "image", arg: 1, scope: !3533, file: !3, line: 2327, type: !1168)
!3537 = !DILocation(line: 2327, column: 63, scope: !3533)
!3538 = !DILocalVariable(name: "p", arg: 2, scope: !3533, file: !3, line: 2328, type: !1032)
!3539 = !DILocation(line: 2328, column: 22, scope: !3533)
!3540 = !DILocalVariable(name: "q", arg: 3, scope: !3533, file: !3, line: 2328, type: !1032)
!3541 = !DILocation(line: 2328, column: 43, scope: !3533)
!3542 = !DILocation(line: 2330, column: 10, scope: !3533)
!3543 = !DILocation(line: 2331, column: 25, scope: !3533)
!3544 = !DILocation(line: 2331, column: 31, scope: !3533)
!3545 = !DILocation(line: 2331, column: 33, scope: !3533)
!3546 = !DILocation(line: 2331, column: 10, scope: !3533)
!3547 = !DILocation(line: 2331, column: 3, scope: !3533)
!3548 = distinct !DISubprogram(name: "FuzzyOpacityCompare", scope: !3, file: !3, line: 2368, type: !3534, scopeLine: 2370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3549 = !DILocalVariable(name: "image", arg: 1, scope: !3548, file: !3, line: 2368, type: !1168)
!3550 = !DILocation(line: 2368, column: 65, scope: !3548)
!3551 = !DILocalVariable(name: "p", arg: 2, scope: !3548, file: !3, line: 2369, type: !1032)
!3552 = !DILocation(line: 2369, column: 22, scope: !3548)
!3553 = !DILocalVariable(name: "q", arg: 3, scope: !3548, file: !3, line: 2369, type: !1032)
!3554 = !DILocation(line: 2369, column: 43, scope: !3548)
!3555 = !DILocation(line: 2371, column: 10, scope: !3548)
!3556 = !DILocation(line: 2372, column: 27, scope: !3548)
!3557 = !DILocation(line: 2372, column: 33, scope: !3548)
!3558 = !DILocation(line: 2372, column: 35, scope: !3548)
!3559 = !DILocation(line: 2372, column: 10, scope: !3548)
!3560 = !DILocation(line: 2372, column: 3, scope: !3548)
!3561 = distinct !DISubprogram(name: "GetConfigureBlob", scope: !3, file: !3, line: 2404, type: !3562, scopeLine: 2406, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{!805, !943, !806, !3564, !1057}
!3564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!3565 = !DILocalVariable(name: "filename", arg: 1, scope: !3561, file: !3, line: 2404, type: !943)
!3566 = !DILocation(line: 2404, column: 49, scope: !3561)
!3567 = !DILocalVariable(name: "path", arg: 2, scope: !3561, file: !3, line: 2404, type: !806)
!3568 = !DILocation(line: 2404, column: 64, scope: !3561)
!3569 = !DILocalVariable(name: "length", arg: 3, scope: !3561, file: !3, line: 2405, type: !3564)
!3570 = !DILocation(line: 2405, column: 11, scope: !3561)
!3571 = !DILocalVariable(name: "exception", arg: 4, scope: !3561, file: !3, line: 2405, type: !1057)
!3572 = !DILocation(line: 2405, column: 33, scope: !3561)
!3573 = !DILocalVariable(name: "blob", scope: !3561, file: !3, line: 2408, type: !805)
!3574 = !DILocation(line: 2408, column: 6, scope: !3561)
!3575 = !DILocation(line: 2411, column: 59, scope: !3561)
!3576 = !DILocation(line: 2411, column: 10, scope: !3561)
!3577 = !DILocation(line: 2412, column: 10, scope: !3561)
!3578 = !DILocation(line: 2416, column: 7, scope: !3561)
!3579 = !DILocation(line: 2417, column: 27, scope: !3561)
!3580 = !DILocation(line: 2417, column: 32, scope: !3561)
!3581 = !DILocation(line: 2417, column: 10, scope: !3561)
!3582 = !DILocation(line: 2451, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2451, column: 7)
!3584 = !DILocation(line: 2451, column: 12, scope: !3583)
!3585 = !DILocation(line: 2451, column: 7, scope: !3561)
!3586 = !DILocalVariable(name: "home", scope: !3587, file: !3, line: 2454, type: !806)
!3587 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 2452, column: 5)
!3588 = !DILocation(line: 2454, column: 10, scope: !3587)
!3589 = !DILocation(line: 2456, column: 12, scope: !3587)
!3590 = !DILocation(line: 2456, column: 11, scope: !3587)
!3591 = !DILocation(line: 2457, column: 11, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2457, column: 11)
!3593 = !DILocation(line: 2457, column: 16, scope: !3592)
!3594 = !DILocation(line: 2457, column: 11, scope: !3587)
!3595 = !DILocation(line: 2466, column: 37, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3592, file: !3, line: 2458, column: 9)
!3597 = !DILocation(line: 2466, column: 71, scope: !3596)
!3598 = !DILocation(line: 2467, column: 46, scope: !3596)
!3599 = !DILocation(line: 2466, column: 18, scope: !3596)
!3600 = !DILocation(line: 2469, column: 32, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 2469, column: 15)
!3602 = !DILocation(line: 2469, column: 15, scope: !3601)
!3603 = !DILocation(line: 2469, column: 38, scope: !3601)
!3604 = !DILocation(line: 2469, column: 15, scope: !3596)
!3605 = !DILocation(line: 2470, column: 29, scope: !3601)
!3606 = !DILocation(line: 2470, column: 39, scope: !3601)
!3607 = !DILocation(line: 2470, column: 46, scope: !3601)
!3608 = !DILocation(line: 2470, column: 18, scope: !3601)
!3609 = !DILocation(line: 2470, column: 17, scope: !3601)
!3610 = !DILocation(line: 2470, column: 13, scope: !3601)
!3611 = !DILocation(line: 2471, column: 30, scope: !3596)
!3612 = !DILocation(line: 2471, column: 16, scope: !3596)
!3613 = !DILocation(line: 2471, column: 15, scope: !3596)
!3614 = !DILocation(line: 2472, column: 9, scope: !3596)
!3615 = !DILocation(line: 2473, column: 12, scope: !3587)
!3616 = !DILocation(line: 2473, column: 11, scope: !3587)
!3617 = !DILocation(line: 2474, column: 11, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2474, column: 11)
!3619 = !DILocation(line: 2474, column: 16, scope: !3618)
!3620 = !DILocation(line: 2474, column: 11, scope: !3587)
!3621 = !DILocation(line: 2475, column: 14, scope: !3618)
!3622 = !DILocation(line: 2475, column: 13, scope: !3618)
!3623 = !DILocation(line: 2475, column: 9, scope: !3618)
!3624 = !DILocation(line: 2476, column: 11, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3587, file: !3, line: 2476, column: 11)
!3626 = !DILocation(line: 2476, column: 16, scope: !3625)
!3627 = !DILocation(line: 2476, column: 11, scope: !3587)
!3628 = !DILocation(line: 2481, column: 37, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 2477, column: 9)
!3630 = !DILocation(line: 2481, column: 74, scope: !3629)
!3631 = !DILocation(line: 2482, column: 51, scope: !3629)
!3632 = !DILocation(line: 2481, column: 18, scope: !3629)
!3633 = !DILocation(line: 2483, column: 33, scope: !3634)
!3634 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 2483, column: 15)
!3635 = !DILocation(line: 2483, column: 16, scope: !3634)
!3636 = !DILocation(line: 2483, column: 39, scope: !3634)
!3637 = !DILocation(line: 2483, column: 55, scope: !3634)
!3638 = !DILocation(line: 2483, column: 59, scope: !3634)
!3639 = !DILocation(line: 2483, column: 64, scope: !3634)
!3640 = !DILocation(line: 2483, column: 15, scope: !3629)
!3641 = !DILocation(line: 2484, column: 29, scope: !3634)
!3642 = !DILocation(line: 2484, column: 39, scope: !3634)
!3643 = !DILocation(line: 2484, column: 46, scope: !3634)
!3644 = !DILocation(line: 2484, column: 18, scope: !3634)
!3645 = !DILocation(line: 2484, column: 17, scope: !3634)
!3646 = !DILocation(line: 2484, column: 13, scope: !3634)
!3647 = !DILocation(line: 2485, column: 30, scope: !3629)
!3648 = !DILocation(line: 2485, column: 16, scope: !3629)
!3649 = !DILocation(line: 2485, column: 15, scope: !3629)
!3650 = !DILocation(line: 2486, column: 9, scope: !3629)
!3651 = !DILocation(line: 2487, column: 5, scope: !3587)
!3652 = !DILocation(line: 2488, column: 8, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2488, column: 7)
!3654 = !DILocation(line: 2488, column: 13, scope: !3653)
!3655 = !DILocation(line: 2488, column: 31, scope: !3653)
!3656 = !DILocation(line: 2488, column: 36, scope: !3653)
!3657 = !DILocation(line: 2488, column: 35, scope: !3653)
!3658 = !DILocation(line: 2488, column: 52, scope: !3653)
!3659 = !DILocation(line: 2488, column: 7, scope: !3561)
!3660 = !DILocalVariable(name: "prefix", scope: !3661, file: !3, line: 2495, type: !963)
!3661 = distinct !DILexicalBlock(scope: !3653, file: !3, line: 2489, column: 5)
!3662 = !DILocation(line: 2495, column: 9, scope: !3661)
!3663 = !DILocation(line: 2500, column: 31, scope: !3661)
!3664 = !DILocation(line: 2500, column: 38, scope: !3661)
!3665 = !DILocation(line: 2500, column: 14, scope: !3661)
!3666 = !DILocation(line: 2502, column: 26, scope: !3661)
!3667 = !DILocation(line: 2502, column: 7, scope: !3661)
!3668 = !DILocation(line: 2503, column: 33, scope: !3661)
!3669 = !DILocation(line: 2503, column: 67, scope: !3661)
!3670 = !DILocation(line: 2504, column: 42, scope: !3661)
!3671 = !DILocation(line: 2503, column: 14, scope: !3661)
!3672 = !DILocation(line: 2506, column: 28, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 2506, column: 11)
!3674 = !DILocation(line: 2506, column: 11, scope: !3673)
!3675 = !DILocation(line: 2506, column: 34, scope: !3673)
!3676 = !DILocation(line: 2506, column: 11, scope: !3661)
!3677 = !DILocation(line: 2507, column: 25, scope: !3673)
!3678 = !DILocation(line: 2507, column: 35, scope: !3673)
!3679 = !DILocation(line: 2507, column: 42, scope: !3673)
!3680 = !DILocation(line: 2507, column: 14, scope: !3673)
!3681 = !DILocation(line: 2507, column: 13, scope: !3673)
!3682 = !DILocation(line: 2507, column: 9, scope: !3673)
!3683 = !DILocation(line: 2508, column: 5, scope: !3661)
!3684 = !DILocation(line: 2512, column: 8, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2512, column: 7)
!3686 = !DILocation(line: 2512, column: 13, scope: !3685)
!3687 = !DILocation(line: 2512, column: 31, scope: !3685)
!3688 = !DILocation(line: 2512, column: 52, scope: !3685)
!3689 = !DILocation(line: 2512, column: 35, scope: !3685)
!3690 = !DILocation(line: 2512, column: 58, scope: !3685)
!3691 = !DILocation(line: 2512, column: 7, scope: !3561)
!3692 = !DILocation(line: 2513, column: 21, scope: !3685)
!3693 = !DILocation(line: 2513, column: 31, scope: !3685)
!3694 = !DILocation(line: 2513, column: 38, scope: !3685)
!3695 = !DILocation(line: 2513, column: 10, scope: !3685)
!3696 = !DILocation(line: 2513, column: 9, scope: !3685)
!3697 = !DILocation(line: 2513, column: 5, scope: !3685)
!3698 = !DILocation(line: 2522, column: 7, scope: !3699)
!3699 = distinct !DILexicalBlock(scope: !3561, file: !3, line: 2522, column: 7)
!3700 = !DILocation(line: 2522, column: 12, scope: !3699)
!3701 = !DILocation(line: 2522, column: 7, scope: !3561)
!3702 = !DILocation(line: 2523, column: 33, scope: !3699)
!3703 = !DILocation(line: 2524, column: 42, scope: !3699)
!3704 = !DILocation(line: 2523, column: 12, scope: !3699)
!3705 = !DILocation(line: 2523, column: 5, scope: !3699)
!3706 = !DILocation(line: 2525, column: 10, scope: !3561)
!3707 = !DILocation(line: 2525, column: 3, scope: !3561)
!3708 = distinct !DISubprogram(name: "GetCacheView", scope: !3, file: !3, line: 2561, type: !3709, scopeLine: 2563, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!841, !1229, !1301, !1301, !1172, !1172}
!3711 = !DILocalVariable(name: "cache_view", arg: 1, scope: !3708, file: !3, line: 2561, type: !1229)
!3712 = !DILocation(line: 2561, column: 51, scope: !3708)
!3713 = !DILocalVariable(name: "x", arg: 2, scope: !3708, file: !3, line: 2561, type: !1301)
!3714 = !DILocation(line: 2561, column: 76, scope: !3708)
!3715 = !DILocalVariable(name: "y", arg: 3, scope: !3708, file: !3, line: 2562, type: !1301)
!3716 = !DILocation(line: 2562, column: 17, scope: !3708)
!3717 = !DILocalVariable(name: "columns", arg: 4, scope: !3708, file: !3, line: 2562, type: !1172)
!3718 = !DILocation(line: 2562, column: 32, scope: !3708)
!3719 = !DILocalVariable(name: "rows", arg: 5, scope: !3708, file: !3, line: 2562, type: !1172)
!3720 = !DILocation(line: 2562, column: 53, scope: !3708)
!3721 = !DILocalVariable(name: "pixels", scope: !3708, file: !3, line: 2565, type: !841)
!3722 = !DILocation(line: 2565, column: 6, scope: !3708)
!3723 = !DILocation(line: 2567, column: 38, scope: !3708)
!3724 = !DILocation(line: 2567, column: 49, scope: !3708)
!3725 = !DILocation(line: 2567, column: 51, scope: !3708)
!3726 = !DILocation(line: 2567, column: 53, scope: !3708)
!3727 = !DILocation(line: 2567, column: 61, scope: !3708)
!3728 = !DILocation(line: 2568, column: 27, scope: !3708)
!3729 = !DILocation(line: 2568, column: 5, scope: !3708)
!3730 = !DILocation(line: 2567, column: 10, scope: !3708)
!3731 = !DILocation(line: 2567, column: 9, scope: !3708)
!3732 = !DILocation(line: 2569, column: 10, scope: !3708)
!3733 = !DILocation(line: 2569, column: 3, scope: !3708)
!3734 = distinct !DISubprogram(name: "GetCacheViewIndexes", scope: !3, file: !3, line: 2599, type: !3735, scopeLine: 2600, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3735 = !DISubroutineType(types: !3736)
!3736 = !{!1231, !1229}
!3737 = !DILocalVariable(name: "cache_view", arg: 1, scope: !3734, file: !3, line: 2599, type: !1229)
!3738 = !DILocation(line: 2599, column: 58, scope: !3734)
!3739 = !DILocation(line: 2601, column: 42, scope: !3734)
!3740 = !DILocation(line: 2601, column: 10, scope: !3734)
!3741 = !DILocation(line: 2601, column: 3, scope: !3734)
!3742 = distinct !DISubprogram(name: "GetCacheViewPixels", scope: !3, file: !3, line: 2637, type: !3709, scopeLine: 2639, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3743 = !DILocalVariable(name: "cache_view", arg: 1, scope: !3742, file: !3, line: 2637, type: !1229)
!3744 = !DILocation(line: 2637, column: 57, scope: !3742)
!3745 = !DILocalVariable(name: "x", arg: 2, scope: !3742, file: !3, line: 2637, type: !1301)
!3746 = !DILocation(line: 2637, column: 82, scope: !3742)
!3747 = !DILocalVariable(name: "y", arg: 3, scope: !3742, file: !3, line: 2638, type: !1301)
!3748 = !DILocation(line: 2638, column: 17, scope: !3742)
!3749 = !DILocalVariable(name: "columns", arg: 4, scope: !3742, file: !3, line: 2638, type: !1172)
!3750 = !DILocation(line: 2638, column: 32, scope: !3742)
!3751 = !DILocalVariable(name: "rows", arg: 5, scope: !3742, file: !3, line: 2638, type: !1172)
!3752 = !DILocation(line: 2638, column: 53, scope: !3742)
!3753 = !DILocalVariable(name: "pixels", scope: !3742, file: !3, line: 2641, type: !841)
!3754 = !DILocation(line: 2641, column: 6, scope: !3742)
!3755 = !DILocation(line: 2643, column: 38, scope: !3742)
!3756 = !DILocation(line: 2643, column: 49, scope: !3742)
!3757 = !DILocation(line: 2643, column: 51, scope: !3742)
!3758 = !DILocation(line: 2643, column: 53, scope: !3742)
!3759 = !DILocation(line: 2643, column: 61, scope: !3742)
!3760 = !DILocation(line: 2644, column: 27, scope: !3742)
!3761 = !DILocation(line: 2644, column: 5, scope: !3742)
!3762 = !DILocation(line: 2643, column: 10, scope: !3742)
!3763 = !DILocation(line: 2643, column: 9, scope: !3742)
!3764 = !DILocation(line: 2645, column: 10, scope: !3742)
!3765 = !DILocation(line: 2645, column: 3, scope: !3742)
!3766 = distinct !DISubprogram(name: "GetImageAttribute", scope: !3, file: !3, line: 2687, type: !3767, scopeLine: 2689, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3767 = !DISubroutineType(types: !3768)
!3768 = !{!1040, !1168, !943}
!3769 = !DILocalVariable(name: "image", arg: 1, scope: !3766, file: !3, line: 2687, type: !1168)
!3770 = !DILocation(line: 2687, column: 67, scope: !3766)
!3771 = !DILocalVariable(name: "key", arg: 2, scope: !3766, file: !3, line: 2688, type: !943)
!3772 = !DILocation(line: 2688, column: 15, scope: !3766)
!3773 = !DILocalVariable(name: "value", scope: !3766, file: !3, line: 2691, type: !943)
!3774 = !DILocation(line: 2691, column: 6, scope: !3766)
!3775 = !DILocalVariable(name: "attribute", scope: !3766, file: !3, line: 2694, type: !1052)
!3776 = !DILocation(line: 2694, column: 6, scope: !3766)
!3777 = !DILocation(line: 2696, column: 10, scope: !3766)
!3778 = !DILocation(line: 2697, column: 26, scope: !3766)
!3779 = !DILocation(line: 2697, column: 32, scope: !3766)
!3780 = !DILocation(line: 2697, column: 9, scope: !3766)
!3781 = !DILocation(line: 2697, column: 8, scope: !3766)
!3782 = !DILocation(line: 2698, column: 7, scope: !3783)
!3783 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2698, column: 7)
!3784 = !DILocation(line: 2698, column: 13, scope: !3783)
!3785 = !DILocation(line: 2698, column: 7, scope: !3766)
!3786 = !DILocation(line: 2699, column: 5, scope: !3783)
!3787 = !DILocation(line: 2700, column: 7, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2700, column: 7)
!3789 = !DILocation(line: 2700, column: 14, scope: !3788)
!3790 = !DILocation(line: 2700, column: 25, scope: !3788)
!3791 = !DILocation(line: 2700, column: 7, scope: !3766)
!3792 = !DILocation(line: 2701, column: 35, scope: !3788)
!3793 = !DILocation(line: 2701, column: 16, scope: !3788)
!3794 = !DILocation(line: 2701, column: 24, scope: !3788)
!3795 = !DILocation(line: 2701, column: 34, scope: !3788)
!3796 = !DILocation(line: 2701, column: 5, scope: !3788)
!3797 = !DILocalVariable(name: "attribute", scope: !3798, file: !3, line: 2706, type: !1040)
!3798 = distinct !DILexicalBlock(scope: !3788, file: !3, line: 2704, column: 5)
!3799 = !DILocation(line: 2706, column: 10, scope: !3798)
!3800 = !DILocation(line: 2709, column: 9, scope: !3798)
!3801 = !DILocation(line: 2709, column: 16, scope: !3798)
!3802 = !DILocation(line: 2708, column: 64, scope: !3798)
!3803 = !DILocation(line: 2709, column: 27, scope: !3798)
!3804 = !DILocation(line: 2708, column: 42, scope: !3798)
!3805 = !DILocation(line: 2708, column: 17, scope: !3798)
!3806 = !DILocation(line: 2708, column: 16, scope: !3798)
!3807 = !DILocation(line: 2710, column: 11, scope: !3808)
!3808 = distinct !DILexicalBlock(scope: !3798, file: !3, line: 2710, column: 11)
!3809 = !DILocation(line: 2710, column: 21, scope: !3808)
!3810 = !DILocation(line: 2710, column: 11, scope: !3798)
!3811 = !DILocation(line: 2711, column: 16, scope: !3808)
!3812 = !DILocation(line: 2711, column: 9, scope: !3808)
!3813 = !DILocation(line: 2713, column: 32, scope: !3766)
!3814 = !DILocation(line: 2713, column: 13, scope: !3766)
!3815 = !DILocation(line: 2713, column: 12, scope: !3766)
!3816 = !DILocation(line: 2714, column: 7, scope: !3817)
!3817 = distinct !DILexicalBlock(scope: !3766, file: !3, line: 2714, column: 7)
!3818 = !DILocation(line: 2714, column: 17, scope: !3817)
!3819 = !DILocation(line: 2714, column: 7, scope: !3766)
!3820 = !DILocalVariable(name: "message", scope: !3821, file: !3, line: 2715, type: !806)
!3821 = distinct !DILexicalBlock(scope: !3817, file: !3, line: 2715, column: 5)
!3822 = !DILocation(line: 2715, column: 5, scope: !3821)
!3823 = !DILocalVariable(name: "exception", scope: !3821, file: !3, line: 2715, type: !971)
!3824 = !DILocation(line: 2716, column: 28, scope: !3766)
!3825 = !DILocation(line: 2716, column: 10, scope: !3766)
!3826 = !DILocation(line: 2717, column: 33, scope: !3766)
!3827 = !DILocation(line: 2717, column: 18, scope: !3766)
!3828 = !DILocation(line: 2717, column: 3, scope: !3766)
!3829 = !DILocation(line: 2717, column: 14, scope: !3766)
!3830 = !DILocation(line: 2717, column: 17, scope: !3766)
!3831 = !DILocation(line: 2718, column: 35, scope: !3766)
!3832 = !DILocation(line: 2718, column: 20, scope: !3766)
!3833 = !DILocation(line: 2718, column: 3, scope: !3766)
!3834 = !DILocation(line: 2718, column: 14, scope: !3766)
!3835 = !DILocation(line: 2718, column: 19, scope: !3766)
!3836 = !DILocation(line: 2719, column: 59, scope: !3766)
!3837 = !DILocation(line: 2719, column: 67, scope: !3766)
!3838 = !DILocation(line: 2719, column: 30, scope: !3766)
!3839 = !DILocation(line: 2720, column: 5, scope: !3766)
!3840 = !DILocation(line: 2720, column: 16, scope: !3766)
!3841 = !DILocation(line: 2720, column: 20, scope: !3766)
!3842 = !DILocation(line: 2719, column: 10, scope: !3766)
!3843 = !DILocation(line: 2721, column: 35, scope: !3766)
!3844 = !DILocation(line: 2721, column: 3, scope: !3766)
!3845 = !DILocation(line: 2722, column: 1, scope: !3766)
!3846 = distinct !DISubprogram(name: "DestroyAttribute", scope: !3, file: !3, line: 2676, type: !3847, scopeLine: 2677, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3847 = !DISubroutineType(types: !3848)
!3848 = !{!805, !805}
!3849 = !DILocalVariable(name: "attribute", arg: 1, scope: !3846, file: !3, line: 2676, type: !805)
!3850 = !DILocation(line: 2676, column: 37, scope: !3846)
!3851 = !DILocalVariable(name: "p", scope: !3846, file: !3, line: 2679, type: !1052)
!3852 = !DILocation(line: 2679, column: 6, scope: !3846)
!3853 = !DILocation(line: 2681, column: 24, scope: !3846)
!3854 = !DILocation(line: 2681, column: 5, scope: !3846)
!3855 = !DILocation(line: 2681, column: 4, scope: !3846)
!3856 = !DILocation(line: 2682, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3846, file: !3, line: 2682, column: 7)
!3858 = !DILocation(line: 2682, column: 10, scope: !3857)
!3859 = !DILocation(line: 2682, column: 16, scope: !3857)
!3860 = !DILocation(line: 2682, column: 7, scope: !3846)
!3861 = !DILocation(line: 2683, column: 28, scope: !3857)
!3862 = !DILocation(line: 2683, column: 31, scope: !3857)
!3863 = !DILocation(line: 2683, column: 14, scope: !3857)
!3864 = !DILocation(line: 2683, column: 5, scope: !3857)
!3865 = !DILocation(line: 2683, column: 8, scope: !3857)
!3866 = !DILocation(line: 2683, column: 13, scope: !3857)
!3867 = !DILocation(line: 2684, column: 33, scope: !3846)
!3868 = !DILocation(line: 2684, column: 10, scope: !3846)
!3869 = !DILocation(line: 2684, column: 3, scope: !3846)
!3870 = distinct !DISubprogram(name: "GetImageClippingPathAttribute", scope: !3, file: !3, line: 2754, type: !3871, scopeLine: 2755, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!1040, !818}
!3873 = !DILocalVariable(name: "image", arg: 1, scope: !3870, file: !3, line: 2754, type: !818)
!3874 = !DILocation(line: 2754, column: 73, scope: !3870)
!3875 = !DILocation(line: 2756, column: 28, scope: !3870)
!3876 = !DILocation(line: 2756, column: 10, scope: !3870)
!3877 = !DILocation(line: 2756, column: 3, scope: !3870)
!3878 = distinct !DISubprogram(name: "GetImageFromMagickRegistry", scope: !3, file: !3, line: 2791, type: !3879, scopeLine: 2793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3879 = !DISubroutineType(types: !3880)
!3880 = !{!818, !943, !3881, !1057}
!3881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!3882 = !DILocalVariable(name: "name", arg: 1, scope: !3878, file: !3, line: 2791, type: !943)
!3883 = !DILocation(line: 2791, column: 60, scope: !3878)
!3884 = !DILocalVariable(name: "id", arg: 2, scope: !3878, file: !3, line: 2791, type: !3881)
!3885 = !DILocation(line: 2791, column: 74, scope: !3878)
!3886 = !DILocalVariable(name: "exception", arg: 3, scope: !3878, file: !3, line: 2792, type: !1057)
!3887 = !DILocation(line: 2792, column: 18, scope: !3878)
!3888 = !DILocation(line: 2794, column: 4, scope: !3878)
!3889 = !DILocation(line: 2794, column: 6, scope: !3878)
!3890 = !DILocation(line: 2795, column: 55, scope: !3878)
!3891 = !DILocation(line: 2795, column: 60, scope: !3878)
!3892 = !DILocation(line: 2795, column: 20, scope: !3878)
!3893 = !DILocation(line: 2795, column: 10, scope: !3878)
!3894 = !DILocation(line: 2795, column: 3, scope: !3878)
!3895 = distinct !DISubprogram(name: "GetMagickRegistry", scope: !3, file: !3, line: 2828, type: !3896, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3896 = !DISubroutineType(types: !3897)
!3897 = !{!805, !1301, !3898, !3564, !1057}
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!3899 = !DILocalVariable(name: "id", arg: 1, scope: !3895, file: !3, line: 2828, type: !1301)
!3900 = !DILocation(line: 2828, column: 52, scope: !3895)
!3901 = !DILocalVariable(name: "type", arg: 2, scope: !3895, file: !3, line: 2828, type: !3898)
!3902 = !DILocation(line: 2828, column: 69, scope: !3895)
!3903 = !DILocalVariable(name: "length", arg: 3, scope: !3895, file: !3, line: 2829, type: !3564)
!3904 = !DILocation(line: 2829, column: 11, scope: !3895)
!3905 = !DILocalVariable(name: "exception", arg: 4, scope: !3895, file: !3, line: 2829, type: !1057)
!3906 = !DILocation(line: 2829, column: 33, scope: !3895)
!3907 = !DILocalVariable(name: "key", scope: !3895, file: !3, line: 2832, type: !963)
!3908 = !DILocation(line: 2832, column: 5, scope: !3895)
!3909 = !DILocalVariable(name: "blob", scope: !3895, file: !3, line: 2835, type: !805)
!3910 = !DILocation(line: 2835, column: 6, scope: !3895)
!3911 = !DILocation(line: 2837, column: 4, scope: !3895)
!3912 = !DILocation(line: 2837, column: 8, scope: !3895)
!3913 = !DILocation(line: 2838, column: 4, scope: !3895)
!3914 = !DILocation(line: 2838, column: 10, scope: !3895)
!3915 = !DILocation(line: 2839, column: 29, scope: !3895)
!3916 = !DILocation(line: 2839, column: 66, scope: !3895)
!3917 = !DILocation(line: 2839, column: 57, scope: !3895)
!3918 = !DILocation(line: 2839, column: 10, scope: !3895)
!3919 = !DILocation(line: 2840, column: 52, scope: !3895)
!3920 = !DILocation(line: 2840, column: 56, scope: !3895)
!3921 = !DILocation(line: 2840, column: 17, scope: !3895)
!3922 = !DILocation(line: 2840, column: 7, scope: !3895)
!3923 = !DILocation(line: 2841, column: 7, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 2841, column: 7)
!3925 = !DILocation(line: 2841, column: 12, scope: !3924)
!3926 = !DILocation(line: 2841, column: 7, scope: !3895)
!3927 = !DILocation(line: 2842, column: 12, scope: !3924)
!3928 = !DILocation(line: 2842, column: 5, scope: !3924)
!3929 = !DILocation(line: 2843, column: 56, scope: !3895)
!3930 = !DILocation(line: 2843, column: 60, scope: !3895)
!3931 = !DILocation(line: 2843, column: 17, scope: !3895)
!3932 = !DILocation(line: 2843, column: 7, scope: !3895)
!3933 = !DILocation(line: 2844, column: 7, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3895, file: !3, line: 2844, column: 7)
!3935 = !DILocation(line: 2844, column: 12, scope: !3934)
!3936 = !DILocation(line: 2844, column: 7, scope: !3895)
!3937 = !DILocation(line: 2845, column: 12, scope: !3934)
!3938 = !DILocation(line: 2845, column: 5, scope: !3934)
!3939 = !DILocation(line: 2846, column: 58, scope: !3895)
!3940 = !DILocation(line: 2846, column: 62, scope: !3895)
!3941 = !DILocation(line: 2846, column: 19, scope: !3895)
!3942 = !DILocation(line: 2846, column: 3, scope: !3895)
!3943 = !DILocation(line: 2847, column: 1, scope: !3895)
!3944 = distinct !DISubprogram(name: "GetImageGeometry", scope: !3, file: !3, line: 2888, type: !3945, scopeLine: 2890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3945 = !DISubroutineType(types: !3946)
!3946 = !{!808, !818, !943, !1222, !3947}
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!3948 = !DILocalVariable(name: "image", arg: 1, scope: !3944, file: !3, line: 2888, type: !818)
!3949 = !DILocation(line: 2888, column: 42, scope: !3944)
!3950 = !DILocalVariable(name: "geometry", arg: 2, scope: !3944, file: !3, line: 2888, type: !943)
!3951 = !DILocation(line: 2888, column: 60, scope: !3944)
!3952 = !DILocalVariable(name: "size_to_fit", arg: 3, scope: !3944, file: !3, line: 2889, type: !1222)
!3953 = !DILocation(line: 2889, column: 22, scope: !3944)
!3954 = !DILocalVariable(name: "region_info", arg: 4, scope: !3944, file: !3, line: 2889, type: !3947)
!3955 = !DILocation(line: 2889, column: 49, scope: !3944)
!3956 = !DILocation(line: 2891, column: 7, scope: !3957)
!3957 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2891, column: 7)
!3958 = !DILocation(line: 2891, column: 14, scope: !3957)
!3959 = !DILocation(line: 2891, column: 20, scope: !3957)
!3960 = !DILocation(line: 2891, column: 7, scope: !3944)
!3961 = !DILocation(line: 2892, column: 12, scope: !3957)
!3962 = !DILocation(line: 2892, column: 5, scope: !3957)
!3963 = !DILocation(line: 2893, column: 7, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3944, file: !3, line: 2893, column: 7)
!3965 = !DILocation(line: 2893, column: 19, scope: !3964)
!3966 = !DILocation(line: 2893, column: 7, scope: !3944)
!3967 = !DILocation(line: 2894, column: 38, scope: !3964)
!3968 = !DILocation(line: 2894, column: 44, scope: !3964)
!3969 = !DILocation(line: 2894, column: 53, scope: !3964)
!3970 = !DILocation(line: 2894, column: 66, scope: !3964)
!3971 = !DILocation(line: 2894, column: 73, scope: !3964)
!3972 = !DILocation(line: 2894, column: 18, scope: !3964)
!3973 = !DILocation(line: 2894, column: 5, scope: !3964)
!3974 = !DILocation(line: 2895, column: 34, scope: !3944)
!3975 = !DILocation(line: 2895, column: 40, scope: !3944)
!3976 = !DILocation(line: 2895, column: 49, scope: !3944)
!3977 = !DILocation(line: 2895, column: 62, scope: !3944)
!3978 = !DILocation(line: 2895, column: 69, scope: !3944)
!3979 = !DILocation(line: 2895, column: 16, scope: !3944)
!3980 = !DILocation(line: 2895, column: 3, scope: !3944)
!3981 = !DILocation(line: 2896, column: 1, scope: !3944)
!3982 = distinct !DISubprogram(name: "GetImageList", scope: !3, file: !3, line: 2930, type: !3983, scopeLine: 2932, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!3983 = !DISubroutineType(types: !3984)
!3984 = !{!818, !1168, !1301, !1057}
!3985 = !DILocalVariable(name: "images", arg: 1, scope: !3982, file: !3, line: 2930, type: !1168)
!3986 = !DILocation(line: 2930, column: 47, scope: !3982)
!3987 = !DILocalVariable(name: "offset", arg: 2, scope: !3982, file: !3, line: 2930, type: !1301)
!3988 = !DILocation(line: 2930, column: 68, scope: !3982)
!3989 = !DILocalVariable(name: "exception", arg: 3, scope: !3982, file: !3, line: 2931, type: !1057)
!3990 = !DILocation(line: 2931, column: 18, scope: !3982)
!3991 = !DILocalVariable(name: "image", scope: !3982, file: !3, line: 2934, type: !818)
!3992 = !DILocation(line: 2934, column: 6, scope: !3982)
!3993 = !DILocation(line: 2936, column: 7, scope: !3994)
!3994 = distinct !DILexicalBlock(scope: !3982, file: !3, line: 2936, column: 7)
!3995 = !DILocation(line: 2936, column: 15, scope: !3994)
!3996 = !DILocation(line: 2936, column: 21, scope: !3994)
!3997 = !DILocation(line: 2936, column: 7, scope: !3982)
!3998 = !DILocation(line: 2937, column: 12, scope: !3994)
!3999 = !DILocation(line: 2937, column: 5, scope: !3994)
!4000 = !DILocation(line: 2938, column: 37, scope: !3982)
!4001 = !DILocation(line: 2938, column: 54, scope: !3982)
!4002 = !DILocation(line: 2938, column: 20, scope: !3982)
!4003 = !DILocation(line: 2939, column: 5, scope: !3982)
!4004 = !DILocation(line: 2938, column: 9, scope: !3982)
!4005 = !DILocation(line: 2938, column: 8, scope: !3982)
!4006 = !DILocation(line: 2940, column: 10, scope: !3982)
!4007 = !DILocation(line: 2940, column: 3, scope: !3982)
!4008 = distinct !DISubprogram(name: "GetImageListIndex", scope: !3, file: !3, line: 2970, type: !4009, scopeLine: 2971, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!813, !1168}
!4011 = !DILocalVariable(name: "images", arg: 1, scope: !4008, file: !3, line: 2970, type: !1168)
!4012 = !DILocation(line: 2970, column: 53, scope: !4008)
!4013 = !DILocation(line: 2972, column: 7, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 2972, column: 7)
!4015 = !DILocation(line: 2972, column: 15, scope: !4014)
!4016 = !DILocation(line: 2972, column: 21, scope: !4014)
!4017 = !DILocation(line: 2972, column: 7, scope: !4008)
!4018 = !DILocation(line: 2973, column: 12, scope: !4014)
!4019 = !DILocation(line: 2973, column: 5, scope: !4014)
!4020 = !DILocation(line: 2974, column: 30, scope: !4008)
!4021 = !DILocation(line: 2974, column: 10, scope: !4008)
!4022 = !DILocation(line: 2974, column: 3, scope: !4008)
!4023 = distinct !DISubprogram(name: "GetImageListSize", scope: !3, file: !3, line: 3003, type: !4024, scopeLine: 3004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!829, !1168}
!4026 = !DILocalVariable(name: "images", arg: 1, scope: !4023, file: !3, line: 3003, type: !1168)
!4027 = !DILocation(line: 3003, column: 51, scope: !4023)
!4028 = !DILocation(line: 3005, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 3005, column: 7)
!4030 = !DILocation(line: 3005, column: 15, scope: !4029)
!4031 = !DILocation(line: 3005, column: 21, scope: !4029)
!4032 = !DILocation(line: 3005, column: 7, scope: !4023)
!4033 = !DILocation(line: 3006, column: 12, scope: !4029)
!4034 = !DILocation(line: 3006, column: 5, scope: !4029)
!4035 = !DILocation(line: 3007, column: 29, scope: !4023)
!4036 = !DILocation(line: 3007, column: 10, scope: !4023)
!4037 = !DILocation(line: 3007, column: 3, scope: !4023)
!4038 = distinct !DISubprogram(name: "GetImagePixels", scope: !3, file: !3, line: 3057, type: !4039, scopeLine: 3059, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4039 = !DISubroutineType(types: !4040)
!4040 = !{!841, !818, !1301, !1301, !1172, !1172}
!4041 = !DILocalVariable(name: "image", arg: 1, scope: !4038, file: !3, line: 3057, type: !818)
!4042 = !DILocation(line: 3057, column: 49, scope: !4038)
!4043 = !DILocalVariable(name: "x", arg: 2, scope: !4038, file: !3, line: 3057, type: !1301)
!4044 = !DILocation(line: 3057, column: 69, scope: !4038)
!4045 = !DILocalVariable(name: "y", arg: 3, scope: !4038, file: !3, line: 3057, type: !1301)
!4046 = !DILocation(line: 3057, column: 85, scope: !4038)
!4047 = !DILocalVariable(name: "columns", arg: 4, scope: !4038, file: !3, line: 3058, type: !1172)
!4048 = !DILocation(line: 3058, column: 16, scope: !4038)
!4049 = !DILocalVariable(name: "rows", arg: 5, scope: !4038, file: !3, line: 3058, type: !1172)
!4050 = !DILocation(line: 3058, column: 37, scope: !4038)
!4051 = !DILocation(line: 3060, column: 29, scope: !4038)
!4052 = !DILocation(line: 3060, column: 35, scope: !4038)
!4053 = !DILocation(line: 3060, column: 37, scope: !4038)
!4054 = !DILocation(line: 3060, column: 39, scope: !4038)
!4055 = !DILocation(line: 3060, column: 47, scope: !4038)
!4056 = !DILocation(line: 3060, column: 53, scope: !4038)
!4057 = !DILocation(line: 3060, column: 60, scope: !4038)
!4058 = !DILocation(line: 3060, column: 10, scope: !4038)
!4059 = !DILocation(line: 3060, column: 3, scope: !4038)
!4060 = distinct !DISubprogram(name: "GetIndexes", scope: !3, file: !3, line: 3094, type: !4061, scopeLine: 3095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!1231, !1168}
!4063 = !DILocalVariable(name: "image", arg: 1, scope: !4060, file: !3, line: 3094, type: !1168)
!4064 = !DILocation(line: 3094, column: 51, scope: !4060)
!4065 = !DILocation(line: 3096, column: 33, scope: !4060)
!4066 = !DILocation(line: 3096, column: 10, scope: !4060)
!4067 = !DILocation(line: 3096, column: 3, scope: !4060)
!4068 = distinct !DISubprogram(name: "GetMagickGeometry", scope: !3, file: !3, line: 3135, type: !4069, scopeLine: 3137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!7, !943, !3881, !3881, !3564, !3564}
!4071 = !DILocalVariable(name: "geometry", arg: 1, scope: !4068, file: !3, line: 3135, type: !943)
!4072 = !DILocation(line: 3135, column: 57, scope: !4068)
!4073 = !DILocalVariable(name: "x", arg: 2, scope: !4068, file: !3, line: 3135, type: !3881)
!4074 = !DILocation(line: 3135, column: 75, scope: !4068)
!4075 = !DILocalVariable(name: "y", arg: 3, scope: !4068, file: !3, line: 3136, type: !3881)
!4076 = !DILocation(line: 3136, column: 12, scope: !4068)
!4077 = !DILocalVariable(name: "width", arg: 4, scope: !4068, file: !3, line: 3136, type: !3564)
!4078 = !DILocation(line: 3136, column: 22, scope: !4068)
!4079 = !DILocalVariable(name: "height", arg: 5, scope: !4068, file: !3, line: 3136, type: !3564)
!4080 = !DILocation(line: 3136, column: 36, scope: !4068)
!4081 = !DILocation(line: 3138, column: 10, scope: !4068)
!4082 = !DILocation(line: 3139, column: 28, scope: !4068)
!4083 = !DILocation(line: 3139, column: 37, scope: !4068)
!4084 = !DILocation(line: 3139, column: 39, scope: !4068)
!4085 = !DILocation(line: 3139, column: 41, scope: !4068)
!4086 = !DILocation(line: 3139, column: 47, scope: !4068)
!4087 = !DILocation(line: 3139, column: 10, scope: !4068)
!4088 = !DILocation(line: 3139, column: 3, scope: !4068)
!4089 = distinct !DISubprogram(name: "GetNextImage", scope: !3, file: !3, line: 3168, type: !4090, scopeLine: 3169, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4090 = !DISubroutineType(types: !4091)
!4091 = !{!818, !1168}
!4092 = !DILocalVariable(name: "images", arg: 1, scope: !4089, file: !3, line: 3168, type: !1168)
!4093 = !DILocation(line: 3168, column: 47, scope: !4089)
!4094 = !DILocation(line: 3170, column: 7, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4089, file: !3, line: 3170, column: 7)
!4096 = !DILocation(line: 3170, column: 15, scope: !4095)
!4097 = !DILocation(line: 3170, column: 21, scope: !4095)
!4098 = !DILocation(line: 3170, column: 7, scope: !4089)
!4099 = !DILocation(line: 3171, column: 12, scope: !4095)
!4100 = !DILocation(line: 3171, column: 5, scope: !4095)
!4101 = !DILocation(line: 3172, column: 29, scope: !4089)
!4102 = !DILocation(line: 3172, column: 10, scope: !4089)
!4103 = !DILocation(line: 3172, column: 3, scope: !4089)
!4104 = distinct !DISubprogram(name: "GetNextImageAttribute", scope: !3, file: !3, line: 3204, type: !4105, scopeLine: 3205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!1040, !1168}
!4107 = !DILocalVariable(name: "image", arg: 1, scope: !4104, file: !3, line: 3204, type: !1168)
!4108 = !DILocation(line: 3204, column: 71, scope: !4104)
!4109 = !DILocalVariable(name: "property", scope: !4104, file: !3, line: 3207, type: !943)
!4110 = !DILocation(line: 3207, column: 6, scope: !4104)
!4111 = !DILocation(line: 3209, column: 33, scope: !4104)
!4112 = !DILocation(line: 3209, column: 12, scope: !4104)
!4113 = !DILocation(line: 3209, column: 11, scope: !4104)
!4114 = !DILocation(line: 3210, column: 7, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4104, file: !3, line: 3210, column: 7)
!4116 = !DILocation(line: 3210, column: 16, scope: !4115)
!4117 = !DILocation(line: 3210, column: 7, scope: !4104)
!4118 = !DILocation(line: 3211, column: 5, scope: !4115)
!4119 = !DILocation(line: 3212, column: 28, scope: !4104)
!4120 = !DILocation(line: 3212, column: 34, scope: !4104)
!4121 = !DILocation(line: 3212, column: 10, scope: !4104)
!4122 = !DILocation(line: 3212, column: 3, scope: !4104)
!4123 = !DILocation(line: 3213, column: 1, scope: !4104)
!4124 = distinct !DISubprogram(name: "GetNumberScenes", scope: !3, file: !3, line: 3241, type: !4125, scopeLine: 3242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4125 = !DISubroutineType(types: !4126)
!4126 = !{!7, !1168}
!4127 = !DILocalVariable(name: "image", arg: 1, scope: !4124, file: !3, line: 3241, type: !1168)
!4128 = !DILocation(line: 3241, column: 56, scope: !4124)
!4129 = !DILocation(line: 3243, column: 7, scope: !4130)
!4130 = distinct !DILexicalBlock(scope: !4124, file: !3, line: 3243, column: 7)
!4131 = !DILocation(line: 3243, column: 14, scope: !4130)
!4132 = !DILocation(line: 3243, column: 20, scope: !4130)
!4133 = !DILocation(line: 3243, column: 7, scope: !4124)
!4134 = !DILocation(line: 3244, column: 12, scope: !4130)
!4135 = !DILocation(line: 3244, column: 5, scope: !4130)
!4136 = !DILocation(line: 3245, column: 44, scope: !4124)
!4137 = !DILocation(line: 3245, column: 25, scope: !4124)
!4138 = !DILocation(line: 3245, column: 10, scope: !4124)
!4139 = !DILocation(line: 3245, column: 3, scope: !4124)
!4140 = distinct !DISubprogram(name: "GetOnePixel", scope: !3, file: !3, line: 3277, type: !4141, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!842, !818, !1301, !1301}
!4143 = !DILocalVariable(name: "image", arg: 1, scope: !4140, file: !3, line: 3277, type: !818)
!4144 = !DILocation(line: 3277, column: 45, scope: !4140)
!4145 = !DILocalVariable(name: "x", arg: 2, scope: !4140, file: !3, line: 3277, type: !1301)
!4146 = !DILocation(line: 3277, column: 65, scope: !4140)
!4147 = !DILocalVariable(name: "y", arg: 3, scope: !4140, file: !3, line: 3277, type: !1301)
!4148 = !DILocation(line: 3277, column: 81, scope: !4140)
!4149 = !DILocalVariable(name: "pixel", scope: !4140, file: !3, line: 3280, type: !842)
!4150 = !DILocation(line: 3280, column: 5, scope: !4140)
!4151 = !DILocation(line: 3282, column: 31, scope: !4140)
!4152 = !DILocation(line: 3282, column: 37, scope: !4140)
!4153 = !DILocation(line: 3282, column: 39, scope: !4140)
!4154 = !DILocation(line: 3282, column: 49, scope: !4140)
!4155 = !DILocation(line: 3282, column: 56, scope: !4140)
!4156 = !DILocation(line: 3282, column: 10, scope: !4140)
!4157 = !DILocation(line: 3283, column: 3, scope: !4140)
!4158 = distinct !DISubprogram(name: "GetPixels", scope: !3, file: !3, line: 3316, type: !4159, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4159 = !DISubroutineType(types: !4160)
!4160 = !{!841, !1168}
!4161 = !DILocalVariable(name: "image", arg: 1, scope: !4158, file: !3, line: 3316, type: !1168)
!4162 = !DILocation(line: 3316, column: 50, scope: !4158)
!4163 = !DILocation(line: 3318, column: 33, scope: !4158)
!4164 = !DILocation(line: 3318, column: 10, scope: !4158)
!4165 = !DILocation(line: 3318, column: 3, scope: !4158)
!4166 = distinct !DISubprogram(name: "GetPreviousImage", scope: !3, file: !3, line: 3347, type: !4090, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4167 = !DILocalVariable(name: "images", arg: 1, scope: !4166, file: !3, line: 3347, type: !1168)
!4168 = !DILocation(line: 3347, column: 51, scope: !4166)
!4169 = !DILocation(line: 3349, column: 7, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4166, file: !3, line: 3349, column: 7)
!4171 = !DILocation(line: 3349, column: 15, scope: !4170)
!4172 = !DILocation(line: 3349, column: 21, scope: !4170)
!4173 = !DILocation(line: 3349, column: 7, scope: !4166)
!4174 = !DILocation(line: 3350, column: 12, scope: !4170)
!4175 = !DILocation(line: 3350, column: 5, scope: !4170)
!4176 = !DILocation(line: 3351, column: 33, scope: !4166)
!4177 = !DILocation(line: 3351, column: 10, scope: !4166)
!4178 = !DILocation(line: 3351, column: 3, scope: !4166)
!4179 = distinct !DISubprogram(name: "HSLTransform", scope: !3, file: !3, line: 3398, type: !4180, scopeLine: 3400, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{null, !3008, !3008, !3008, !4182, !4182, !4182}
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!4183 = !DILocalVariable(name: "hue", arg: 1, scope: !4179, file: !3, line: 3398, type: !3008)
!4184 = !DILocation(line: 3398, column: 45, scope: !4179)
!4185 = !DILocalVariable(name: "saturation", arg: 2, scope: !4179, file: !3, line: 3398, type: !3008)
!4186 = !DILocation(line: 3398, column: 62, scope: !4179)
!4187 = !DILocalVariable(name: "lightness", arg: 3, scope: !4179, file: !3, line: 3399, type: !3008)
!4188 = !DILocation(line: 3399, column: 16, scope: !4179)
!4189 = !DILocalVariable(name: "red", arg: 4, scope: !4179, file: !3, line: 3399, type: !4182)
!4190 = !DILocation(line: 3399, column: 35, scope: !4179)
!4191 = !DILocalVariable(name: "green", arg: 5, scope: !4179, file: !3, line: 3399, type: !4182)
!4192 = !DILocation(line: 3399, column: 48, scope: !4179)
!4193 = !DILocalVariable(name: "blue", arg: 6, scope: !4179, file: !3, line: 3399, type: !4182)
!4194 = !DILocation(line: 3399, column: 63, scope: !4179)
!4195 = !DILocalVariable(name: "b", scope: !4179, file: !3, line: 3402, type: !1034)
!4196 = !DILocation(line: 3402, column: 5, scope: !4179)
!4197 = !DILocalVariable(name: "g", scope: !4179, file: !3, line: 3403, type: !1034)
!4198 = !DILocation(line: 3403, column: 5, scope: !4179)
!4199 = !DILocalVariable(name: "r", scope: !4179, file: !3, line: 3404, type: !1034)
!4200 = !DILocation(line: 3404, column: 5, scope: !4179)
!4201 = !DILocalVariable(name: "m1", scope: !4179, file: !3, line: 3405, type: !1034)
!4202 = !DILocation(line: 3405, column: 5, scope: !4179)
!4203 = !DILocalVariable(name: "m2", scope: !4179, file: !3, line: 3406, type: !1034)
!4204 = !DILocation(line: 3406, column: 5, scope: !4179)
!4205 = !DILocation(line: 3414, column: 7, scope: !4206)
!4206 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 3414, column: 7)
!4207 = !DILocation(line: 3414, column: 17, scope: !4206)
!4208 = !DILocation(line: 3414, column: 7, scope: !4179)
!4209 = !DILocation(line: 3415, column: 8, scope: !4206)
!4210 = !DILocation(line: 3415, column: 19, scope: !4206)
!4211 = !DILocation(line: 3415, column: 29, scope: !4206)
!4212 = !DILocation(line: 3415, column: 17, scope: !4206)
!4213 = !DILocation(line: 3415, column: 7, scope: !4206)
!4214 = !DILocation(line: 3415, column: 5, scope: !4206)
!4215 = !DILocation(line: 3417, column: 8, scope: !4206)
!4216 = !DILocation(line: 3417, column: 18, scope: !4206)
!4217 = !DILocation(line: 3417, column: 17, scope: !4206)
!4218 = !DILocation(line: 3417, column: 29, scope: !4206)
!4219 = !DILocation(line: 3417, column: 39, scope: !4206)
!4220 = !DILocation(line: 3417, column: 38, scope: !4206)
!4221 = !DILocation(line: 3417, column: 28, scope: !4206)
!4222 = !DILocation(line: 3417, column: 7, scope: !4206)
!4223 = !DILocation(line: 3418, column: 10, scope: !4179)
!4224 = !DILocation(line: 3418, column: 9, scope: !4179)
!4225 = !DILocation(line: 3418, column: 20, scope: !4179)
!4226 = !DILocation(line: 3418, column: 19, scope: !4179)
!4227 = !DILocation(line: 3418, column: 6, scope: !4179)
!4228 = !DILocation(line: 3418, column: 5, scope: !4179)
!4229 = !DILocation(line: 3419, column: 14, scope: !4179)
!4230 = !DILocation(line: 3419, column: 17, scope: !4179)
!4231 = !DILocation(line: 3419, column: 20, scope: !4179)
!4232 = !DILocation(line: 3419, column: 23, scope: !4179)
!4233 = !DILocation(line: 3419, column: 5, scope: !4179)
!4234 = !DILocation(line: 3419, column: 4, scope: !4179)
!4235 = !DILocation(line: 3420, column: 14, scope: !4179)
!4236 = !DILocation(line: 3420, column: 17, scope: !4179)
!4237 = !DILocation(line: 3420, column: 20, scope: !4179)
!4238 = !DILocation(line: 3420, column: 5, scope: !4179)
!4239 = !DILocation(line: 3420, column: 4, scope: !4179)
!4240 = !DILocation(line: 3421, column: 14, scope: !4179)
!4241 = !DILocation(line: 3421, column: 17, scope: !4179)
!4242 = !DILocation(line: 3421, column: 20, scope: !4179)
!4243 = !DILocation(line: 3421, column: 23, scope: !4179)
!4244 = !DILocation(line: 3421, column: 5, scope: !4179)
!4245 = !DILocation(line: 3421, column: 4, scope: !4179)
!4246 = !DILocation(line: 3422, column: 53, scope: !4179)
!4247 = !DILocation(line: 3422, column: 52, scope: !4179)
!4248 = !DILocation(line: 3422, column: 8, scope: !4179)
!4249 = !DILocation(line: 3422, column: 4, scope: !4179)
!4250 = !DILocation(line: 3422, column: 7, scope: !4179)
!4251 = !DILocation(line: 3423, column: 55, scope: !4179)
!4252 = !DILocation(line: 3423, column: 54, scope: !4179)
!4253 = !DILocation(line: 3423, column: 10, scope: !4179)
!4254 = !DILocation(line: 3423, column: 4, scope: !4179)
!4255 = !DILocation(line: 3423, column: 9, scope: !4179)
!4256 = !DILocation(line: 3424, column: 54, scope: !4179)
!4257 = !DILocation(line: 3424, column: 53, scope: !4179)
!4258 = !DILocation(line: 3424, column: 9, scope: !4179)
!4259 = !DILocation(line: 3424, column: 4, scope: !4179)
!4260 = !DILocation(line: 3424, column: 8, scope: !4179)
!4261 = !DILocation(line: 3425, column: 1, scope: !4179)
!4262 = distinct !DISubprogram(name: "HueToRGB", scope: !3, file: !3, line: 3382, type: !4263, scopeLine: 3384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4263 = !DISubroutineType(types: !4264)
!4264 = !{!1034, !1034, !1034, !1034}
!4265 = !DILocalVariable(name: "m1", arg: 1, scope: !4262, file: !3, line: 3382, type: !1034)
!4266 = !DILocation(line: 3382, column: 54, scope: !4262)
!4267 = !DILocalVariable(name: "m2", arg: 2, scope: !4262, file: !3, line: 3382, type: !1034)
!4268 = !DILocation(line: 3382, column: 72, scope: !4262)
!4269 = !DILocalVariable(name: "hue", arg: 3, scope: !4262, file: !3, line: 3383, type: !1034)
!4270 = !DILocation(line: 3383, column: 18, scope: !4262)
!4271 = !DILocation(line: 3385, column: 7, scope: !4272)
!4272 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3385, column: 7)
!4273 = !DILocation(line: 3385, column: 11, scope: !4272)
!4274 = !DILocation(line: 3385, column: 7, scope: !4262)
!4275 = !DILocation(line: 3386, column: 8, scope: !4272)
!4276 = !DILocation(line: 3386, column: 5, scope: !4272)
!4277 = !DILocation(line: 3387, column: 7, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3387, column: 7)
!4279 = !DILocation(line: 3387, column: 11, scope: !4278)
!4280 = !DILocation(line: 3387, column: 7, scope: !4262)
!4281 = !DILocation(line: 3388, column: 8, scope: !4278)
!4282 = !DILocation(line: 3388, column: 5, scope: !4278)
!4283 = !DILocation(line: 3389, column: 12, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3389, column: 7)
!4285 = !DILocation(line: 3389, column: 11, scope: !4284)
!4286 = !DILocation(line: 3389, column: 17, scope: !4284)
!4287 = !DILocation(line: 3389, column: 7, scope: !4262)
!4288 = !DILocation(line: 3390, column: 12, scope: !4284)
!4289 = !DILocation(line: 3390, column: 20, scope: !4284)
!4290 = !DILocation(line: 3390, column: 23, scope: !4284)
!4291 = !DILocation(line: 3390, column: 22, scope: !4284)
!4292 = !DILocation(line: 3390, column: 19, scope: !4284)
!4293 = !DILocation(line: 3390, column: 18, scope: !4284)
!4294 = !DILocation(line: 3390, column: 27, scope: !4284)
!4295 = !DILocation(line: 3390, column: 26, scope: !4284)
!4296 = !DILocation(line: 3390, column: 14, scope: !4284)
!4297 = !DILocation(line: 3390, column: 11, scope: !4284)
!4298 = !DILocation(line: 3390, column: 5, scope: !4284)
!4299 = !DILocation(line: 3391, column: 12, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3391, column: 7)
!4301 = !DILocation(line: 3391, column: 11, scope: !4300)
!4302 = !DILocation(line: 3391, column: 17, scope: !4300)
!4303 = !DILocation(line: 3391, column: 7, scope: !4262)
!4304 = !DILocation(line: 3392, column: 12, scope: !4300)
!4305 = !DILocation(line: 3392, column: 5, scope: !4300)
!4306 = !DILocation(line: 3393, column: 12, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4262, file: !3, line: 3393, column: 7)
!4308 = !DILocation(line: 3393, column: 11, scope: !4307)
!4309 = !DILocation(line: 3393, column: 17, scope: !4307)
!4310 = !DILocation(line: 3393, column: 7, scope: !4262)
!4311 = !DILocation(line: 3394, column: 12, scope: !4307)
!4312 = !DILocation(line: 3394, column: 20, scope: !4307)
!4313 = !DILocation(line: 3394, column: 23, scope: !4307)
!4314 = !DILocation(line: 3394, column: 22, scope: !4307)
!4315 = !DILocation(line: 3394, column: 19, scope: !4307)
!4316 = !DILocation(line: 3394, column: 18, scope: !4307)
!4317 = !DILocation(line: 3394, column: 36, scope: !4307)
!4318 = !DILocation(line: 3394, column: 35, scope: !4307)
!4319 = !DILocation(line: 3394, column: 26, scope: !4307)
!4320 = !DILocation(line: 3394, column: 14, scope: !4307)
!4321 = !DILocation(line: 3394, column: 11, scope: !4307)
!4322 = !DILocation(line: 3394, column: 5, scope: !4307)
!4323 = !DILocation(line: 3395, column: 10, scope: !4262)
!4324 = !DILocation(line: 3395, column: 3, scope: !4262)
!4325 = !DILocation(line: 3396, column: 1, scope: !4262)
!4326 = distinct !DISubprogram(name: "ClampToQuantum", scope: !222, file: !222, line: 87, type: !4327, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4327 = !DISubroutineType(types: !4328)
!4328 = !{!846, !2639}
!4329 = !DILocalVariable(name: "value", arg: 1, scope: !4326, file: !222, line: 87, type: !2639)
!4330 = !DILocation(line: 87, column: 59, scope: !4326)
!4331 = !DILocation(line: 92, column: 7, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !222, line: 92, column: 7)
!4333 = !DILocation(line: 92, column: 13, scope: !4332)
!4334 = !DILocation(line: 92, column: 7, scope: !4326)
!4335 = !DILocation(line: 93, column: 5, scope: !4332)
!4336 = !DILocation(line: 94, column: 7, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4326, file: !222, line: 94, column: 7)
!4338 = !DILocation(line: 94, column: 13, scope: !4337)
!4339 = !DILocation(line: 94, column: 7, scope: !4326)
!4340 = !DILocation(line: 95, column: 5, scope: !4337)
!4341 = !DILocation(line: 96, column: 21, scope: !4326)
!4342 = !DILocation(line: 96, column: 26, scope: !4326)
!4343 = !DILocation(line: 96, column: 10, scope: !4326)
!4344 = !DILocation(line: 96, column: 3, scope: !4326)
!4345 = !DILocation(line: 98, column: 1, scope: !4326)
!4346 = distinct !DISubprogram(name: "IdentityAffine", scope: !3, file: !3, line: 3449, type: !4347, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4347 = !DISubroutineType(types: !4348)
!4348 = !{null, !4349}
!4349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!4350 = !DILocalVariable(name: "affine", arg: 1, scope: !4346, file: !3, line: 3449, type: !4349)
!4351 = !DILocation(line: 3449, column: 48, scope: !4346)
!4352 = !DILocation(line: 3451, column: 10, scope: !4346)
!4353 = !DILocation(line: 3452, column: 10, scope: !4346)
!4354 = !DILocation(line: 3454, column: 28, scope: !4346)
!4355 = !DILocation(line: 3454, column: 10, scope: !4346)
!4356 = !DILocation(line: 3455, column: 3, scope: !4346)
!4357 = !DILocation(line: 3455, column: 11, scope: !4346)
!4358 = !DILocation(line: 3455, column: 13, scope: !4346)
!4359 = !DILocation(line: 3456, column: 3, scope: !4346)
!4360 = !DILocation(line: 3456, column: 11, scope: !4346)
!4361 = !DILocation(line: 3456, column: 13, scope: !4346)
!4362 = !DILocation(line: 3457, column: 1, scope: !4346)
!4363 = distinct !DISubprogram(name: "InitializeMagick", scope: !3, file: !3, line: 3485, type: !4364, scopeLine: 3486, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4364 = !DISubroutineType(types: !4365)
!4365 = !{null, !943}
!4366 = !DILocalVariable(name: "path", arg: 1, scope: !4363, file: !3, line: 3485, type: !943)
!4367 = !DILocation(line: 3485, column: 48, scope: !4363)
!4368 = !DILocation(line: 3487, column: 21, scope: !4363)
!4369 = !DILocation(line: 3487, column: 3, scope: !4363)
!4370 = !DILocation(line: 3488, column: 1, scope: !4363)
!4371 = distinct !DISubprogram(name: "InterpolatePixelColor", scope: !3, file: !3, line: 3602, type: !4372, scopeLine: 3605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!1417, !1168, !1229, !4374, !3008, !3008, !1057}
!4374 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!4375 = !DILocalVariable(name: "image", arg: 1, scope: !4371, file: !3, line: 3602, type: !1168)
!4376 = !DILocation(line: 3602, column: 67, scope: !4371)
!4377 = !DILocalVariable(name: "image_view", arg: 2, scope: !4371, file: !3, line: 3603, type: !1229)
!4378 = !DILocation(line: 3603, column: 14, scope: !4371)
!4379 = !DILocalVariable(name: "method", arg: 3, scope: !4371, file: !3, line: 3603, type: !4374)
!4380 = !DILocation(line: 3603, column: 54, scope: !4371)
!4381 = !DILocalVariable(name: "x", arg: 4, scope: !4371, file: !3, line: 3603, type: !3008)
!4382 = !DILocation(line: 3603, column: 74, scope: !4371)
!4383 = !DILocalVariable(name: "y", arg: 5, scope: !4371, file: !3, line: 3604, type: !3008)
!4384 = !DILocation(line: 3604, column: 16, scope: !4371)
!4385 = !DILocalVariable(name: "exception", arg: 6, scope: !4371, file: !3, line: 3604, type: !1057)
!4386 = !DILocation(line: 3604, column: 33, scope: !4371)
!4387 = !DILocalVariable(name: "pixel", scope: !4371, file: !3, line: 3607, type: !1417)
!4388 = !DILocation(line: 3607, column: 5, scope: !4371)
!4389 = !DILocalVariable(name: "indexes", scope: !4371, file: !3, line: 3610, type: !1252)
!4390 = !DILocation(line: 3610, column: 6, scope: !4371)
!4391 = !DILocalVariable(name: "p", scope: !4371, file: !3, line: 3613, type: !1032)
!4392 = !DILocation(line: 3613, column: 6, scope: !4371)
!4393 = !DILocalVariable(name: "i", scope: !4371, file: !3, line: 3616, type: !813)
!4394 = !DILocation(line: 3616, column: 5, scope: !4371)
!4395 = !DILocation(line: 3621, column: 24, scope: !4371)
!4396 = !DILocation(line: 3621, column: 3, scope: !4371)
!4397 = !DILocation(line: 3622, column: 11, scope: !4371)
!4398 = !DILocation(line: 3622, column: 3, scope: !4371)
!4399 = !DILocalVariable(name: "gamma", scope: !4400, file: !3, line: 3627, type: !855)
!4400 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3625, column: 5)
!4401 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 3623, column: 3)
!4402 = !DILocation(line: 3627, column: 9, scope: !4400)
!4403 = !DILocalVariable(name: "pixels", scope: !4400, file: !3, line: 3630, type: !4404)
!4404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1417, size: 7168, elements: !1272)
!4405 = !DILocation(line: 3630, column: 9, scope: !4400)
!4406 = !DILocalVariable(name: "alpha", scope: !4400, file: !3, line: 3633, type: !1271)
!4407 = !DILocation(line: 3633, column: 9, scope: !4400)
!4408 = !DILocation(line: 3635, column: 35, scope: !4400)
!4409 = !DILocation(line: 3635, column: 62, scope: !4400)
!4410 = !DILocation(line: 3635, column: 56, scope: !4400)
!4411 = !DILocation(line: 3635, column: 46, scope: !4400)
!4412 = !DILocation(line: 3635, column: 64, scope: !4400)
!4413 = !DILocation(line: 3636, column: 15, scope: !4400)
!4414 = !DILocation(line: 3636, column: 9, scope: !4400)
!4415 = !DILocation(line: 3635, column: 67, scope: !4400)
!4416 = !DILocation(line: 3636, column: 17, scope: !4400)
!4417 = !DILocation(line: 3636, column: 24, scope: !4400)
!4418 = !DILocation(line: 3635, column: 9, scope: !4400)
!4419 = !DILocation(line: 3635, column: 8, scope: !4400)
!4420 = !DILocation(line: 3637, column: 11, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 3637, column: 11)
!4422 = !DILocation(line: 3637, column: 13, scope: !4421)
!4423 = !DILocation(line: 3637, column: 11, scope: !4400)
!4424 = !DILocation(line: 3638, column: 9, scope: !4421)
!4425 = !DILocation(line: 3639, column: 45, scope: !4400)
!4426 = !DILocation(line: 3639, column: 15, scope: !4400)
!4427 = !DILocation(line: 3639, column: 14, scope: !4400)
!4428 = !DILocation(line: 3640, column: 13, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4400, file: !3, line: 3640, column: 7)
!4430 = !DILocation(line: 3640, column: 12, scope: !4429)
!4431 = !DILocation(line: 3640, column: 17, scope: !4432)
!4432 = distinct !DILexicalBlock(scope: !4429, file: !3, line: 3640, column: 7)
!4433 = !DILocation(line: 3640, column: 19, scope: !4432)
!4434 = !DILocation(line: 3640, column: 7, scope: !4429)
!4435 = !DILocation(line: 3642, column: 30, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4432, file: !3, line: 3641, column: 7)
!4437 = !DILocation(line: 3642, column: 36, scope: !4436)
!4438 = !DILocation(line: 3642, column: 43, scope: !4436)
!4439 = !DILocation(line: 3642, column: 42, scope: !4436)
!4440 = !DILocation(line: 3642, column: 9, scope: !4436)
!4441 = !DILocation(line: 3643, column: 30, scope: !4436)
!4442 = !DILocation(line: 3643, column: 36, scope: !4436)
!4443 = !DILocation(line: 3643, column: 38, scope: !4436)
!4444 = !DILocation(line: 3643, column: 46, scope: !4436)
!4445 = !DILocation(line: 3643, column: 45, scope: !4436)
!4446 = !DILocation(line: 3643, column: 48, scope: !4436)
!4447 = !DILocation(line: 3643, column: 55, scope: !4436)
!4448 = !DILocation(line: 3643, column: 54, scope: !4436)
!4449 = !DILocation(line: 3643, column: 9, scope: !4436)
!4450 = !DILocation(line: 3644, column: 15, scope: !4436)
!4451 = !DILocation(line: 3644, column: 9, scope: !4436)
!4452 = !DILocation(line: 3644, column: 17, scope: !4436)
!4453 = !DILocation(line: 3645, column: 13, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 3645, column: 13)
!4455 = !DILocation(line: 3645, column: 20, scope: !4454)
!4456 = !DILocation(line: 3645, column: 26, scope: !4454)
!4457 = !DILocation(line: 3645, column: 13, scope: !4436)
!4458 = !DILocation(line: 3647, column: 53, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 3646, column: 11)
!4460 = !DILocation(line: 3647, column: 36, scope: !4459)
!4461 = !DILocation(line: 3647, column: 35, scope: !4459)
!4462 = !DILocation(line: 3647, column: 34, scope: !4459)
!4463 = !DILocation(line: 3647, column: 22, scope: !4459)
!4464 = !DILocation(line: 3647, column: 19, scope: !4459)
!4465 = !DILocation(line: 3647, column: 13, scope: !4459)
!4466 = !DILocation(line: 3647, column: 21, scope: !4459)
!4467 = !DILocation(line: 3648, column: 34, scope: !4459)
!4468 = !DILocation(line: 3648, column: 28, scope: !4459)
!4469 = !DILocation(line: 3648, column: 20, scope: !4459)
!4470 = !DILocation(line: 3648, column: 13, scope: !4459)
!4471 = !DILocation(line: 3648, column: 23, scope: !4459)
!4472 = !DILocation(line: 3648, column: 26, scope: !4459)
!4473 = !DILocation(line: 3649, column: 36, scope: !4459)
!4474 = !DILocation(line: 3649, column: 30, scope: !4459)
!4475 = !DILocation(line: 3649, column: 20, scope: !4459)
!4476 = !DILocation(line: 3649, column: 13, scope: !4459)
!4477 = !DILocation(line: 3649, column: 23, scope: !4459)
!4478 = !DILocation(line: 3649, column: 28, scope: !4459)
!4479 = !DILocation(line: 3650, column: 35, scope: !4459)
!4480 = !DILocation(line: 3650, column: 29, scope: !4459)
!4481 = !DILocation(line: 3650, column: 20, scope: !4459)
!4482 = !DILocation(line: 3650, column: 13, scope: !4459)
!4483 = !DILocation(line: 3650, column: 23, scope: !4459)
!4484 = !DILocation(line: 3650, column: 27, scope: !4459)
!4485 = !DILocation(line: 3651, column: 17, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 3651, column: 17)
!4487 = !DILocation(line: 3651, column: 24, scope: !4486)
!4488 = !DILocation(line: 3651, column: 35, scope: !4486)
!4489 = !DILocation(line: 3651, column: 17, scope: !4459)
!4490 = !DILocation(line: 3652, column: 38, scope: !4486)
!4491 = !DILocation(line: 3652, column: 32, scope: !4486)
!4492 = !DILocation(line: 3652, column: 22, scope: !4486)
!4493 = !DILocation(line: 3652, column: 15, scope: !4486)
!4494 = !DILocation(line: 3652, column: 25, scope: !4486)
!4495 = !DILocation(line: 3652, column: 30, scope: !4486)
!4496 = !DILocation(line: 3653, column: 11, scope: !4459)
!4497 = !DILocation(line: 3654, column: 21, scope: !4436)
!4498 = !DILocation(line: 3654, column: 15, scope: !4436)
!4499 = !DILocation(line: 3654, column: 14, scope: !4436)
!4500 = !DILocation(line: 3655, column: 37, scope: !4436)
!4501 = !DILocation(line: 3655, column: 15, scope: !4436)
!4502 = !DILocation(line: 3655, column: 14, scope: !4436)
!4503 = !DILocation(line: 3657, column: 13, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 3657, column: 13)
!4505 = !DILocation(line: 3657, column: 19, scope: !4504)
!4506 = !DILocation(line: 3657, column: 13, scope: !4436)
!4507 = !DILocation(line: 3657, column: 32, scope: !4504)
!4508 = !DILocation(line: 3657, column: 26, scope: !4504)
!4509 = !DILocation(line: 3659, column: 20, scope: !4436)
!4510 = !DILocation(line: 3659, column: 25, scope: !4436)
!4511 = !DILocation(line: 3659, column: 40, scope: !4436)
!4512 = !DILocation(line: 3659, column: 33, scope: !4436)
!4513 = !DILocation(line: 3659, column: 43, scope: !4436)
!4514 = !DILocation(line: 3659, column: 32, scope: !4436)
!4515 = !DILocation(line: 3659, column: 15, scope: !4436)
!4516 = !DILocation(line: 3659, column: 18, scope: !4436)
!4517 = !DILocation(line: 3660, column: 22, scope: !4436)
!4518 = !DILocation(line: 3660, column: 27, scope: !4436)
!4519 = !DILocation(line: 3660, column: 42, scope: !4436)
!4520 = !DILocation(line: 3660, column: 35, scope: !4436)
!4521 = !DILocation(line: 3660, column: 45, scope: !4436)
!4522 = !DILocation(line: 3660, column: 34, scope: !4436)
!4523 = !DILocation(line: 3660, column: 15, scope: !4436)
!4524 = !DILocation(line: 3660, column: 20, scope: !4436)
!4525 = !DILocation(line: 3661, column: 21, scope: !4436)
!4526 = !DILocation(line: 3661, column: 26, scope: !4436)
!4527 = !DILocation(line: 3661, column: 41, scope: !4436)
!4528 = !DILocation(line: 3661, column: 34, scope: !4436)
!4529 = !DILocation(line: 3661, column: 44, scope: !4436)
!4530 = !DILocation(line: 3661, column: 33, scope: !4436)
!4531 = !DILocation(line: 3661, column: 15, scope: !4436)
!4532 = !DILocation(line: 3661, column: 19, scope: !4436)
!4533 = !DILocation(line: 3662, column: 38, scope: !4436)
!4534 = !DILocation(line: 3662, column: 31, scope: !4436)
!4535 = !DILocation(line: 3662, column: 41, scope: !4436)
!4536 = !DILocation(line: 3662, column: 30, scope: !4436)
!4537 = !DILocation(line: 3662, column: 15, scope: !4436)
!4538 = !DILocation(line: 3662, column: 22, scope: !4436)
!4539 = !DILocation(line: 3663, column: 13, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4436, file: !3, line: 3663, column: 13)
!4541 = !DILocation(line: 3663, column: 20, scope: !4540)
!4542 = !DILocation(line: 3663, column: 31, scope: !4540)
!4543 = !DILocation(line: 3663, column: 13, scope: !4436)
!4544 = !DILocation(line: 3664, column: 24, scope: !4540)
!4545 = !DILocation(line: 3664, column: 29, scope: !4540)
!4546 = !DILocation(line: 3664, column: 44, scope: !4540)
!4547 = !DILocation(line: 3664, column: 37, scope: !4540)
!4548 = !DILocation(line: 3664, column: 47, scope: !4540)
!4549 = !DILocation(line: 3664, column: 36, scope: !4540)
!4550 = !DILocation(line: 3664, column: 17, scope: !4540)
!4551 = !DILocation(line: 3664, column: 22, scope: !4540)
!4552 = !DILocation(line: 3664, column: 11, scope: !4540)
!4553 = !DILocation(line: 3665, column: 10, scope: !4436)
!4554 = !DILocation(line: 3666, column: 7, scope: !4436)
!4555 = !DILocation(line: 3640, column: 27, scope: !4432)
!4556 = !DILocation(line: 3640, column: 7, scope: !4432)
!4557 = distinct !{!4557, !4434, !4558}
!4558 = !DILocation(line: 3666, column: 7, scope: !4429)
!4559 = !DILocation(line: 3667, column: 7, scope: !4400)
!4560 = !DILocalVariable(name: "pixels", scope: !4561, file: !3, line: 3672, type: !4404)
!4561 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3670, column: 5)
!4562 = !DILocation(line: 3672, column: 9, scope: !4561)
!4563 = !DILocalVariable(name: "u", scope: !4561, file: !3, line: 3673, type: !4564)
!4564 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1417, size: 1792, elements: !1262)
!4565 = !DILocation(line: 3673, column: 9, scope: !4561)
!4566 = !DILocalVariable(name: "alpha", scope: !4561, file: !3, line: 3676, type: !1271)
!4567 = !DILocation(line: 3676, column: 9, scope: !4561)
!4568 = !DILocalVariable(name: "delta", scope: !4561, file: !3, line: 3679, type: !1897)
!4569 = !DILocation(line: 3679, column: 9, scope: !4561)
!4570 = !DILocation(line: 3681, column: 35, scope: !4561)
!4571 = !DILocation(line: 3681, column: 62, scope: !4561)
!4572 = !DILocation(line: 3681, column: 56, scope: !4561)
!4573 = !DILocation(line: 3681, column: 46, scope: !4561)
!4574 = !DILocation(line: 3681, column: 64, scope: !4561)
!4575 = !DILocation(line: 3682, column: 15, scope: !4561)
!4576 = !DILocation(line: 3682, column: 9, scope: !4561)
!4577 = !DILocation(line: 3681, column: 67, scope: !4561)
!4578 = !DILocation(line: 3682, column: 17, scope: !4561)
!4579 = !DILocation(line: 3682, column: 24, scope: !4561)
!4580 = !DILocation(line: 3681, column: 9, scope: !4561)
!4581 = !DILocation(line: 3681, column: 8, scope: !4561)
!4582 = !DILocation(line: 3683, column: 11, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 3683, column: 11)
!4584 = !DILocation(line: 3683, column: 13, scope: !4583)
!4585 = !DILocation(line: 3683, column: 11, scope: !4561)
!4586 = !DILocation(line: 3684, column: 9, scope: !4583)
!4587 = !DILocation(line: 3685, column: 45, scope: !4561)
!4588 = !DILocation(line: 3685, column: 15, scope: !4561)
!4589 = !DILocation(line: 3685, column: 14, scope: !4561)
!4590 = !DILocation(line: 3686, column: 13, scope: !4591)
!4591 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 3686, column: 7)
!4592 = !DILocation(line: 3686, column: 12, scope: !4591)
!4593 = !DILocation(line: 3686, column: 17, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 3686, column: 7)
!4595 = !DILocation(line: 3686, column: 19, scope: !4594)
!4596 = !DILocation(line: 3686, column: 7, scope: !4591)
!4597 = !DILocation(line: 3687, column: 30, scope: !4594)
!4598 = !DILocation(line: 3687, column: 36, scope: !4594)
!4599 = !DILocation(line: 3687, column: 38, scope: !4594)
!4600 = !DILocation(line: 3687, column: 37, scope: !4594)
!4601 = !DILocation(line: 3687, column: 9, scope: !4594)
!4602 = !DILocation(line: 3686, column: 26, scope: !4594)
!4603 = !DILocation(line: 3686, column: 7, scope: !4594)
!4604 = distinct !{!4604, !4596, !4605}
!4605 = !DILocation(line: 3687, column: 39, scope: !4591)
!4606 = !DILocation(line: 3688, column: 13, scope: !4607)
!4607 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 3688, column: 7)
!4608 = !DILocation(line: 3688, column: 12, scope: !4607)
!4609 = !DILocation(line: 3688, column: 17, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4607, file: !3, line: 3688, column: 7)
!4611 = !DILocation(line: 3688, column: 19, scope: !4610)
!4612 = !DILocation(line: 3688, column: 7, scope: !4607)
!4613 = !DILocation(line: 3690, column: 30, scope: !4614)
!4614 = distinct !DILexicalBlock(scope: !4610, file: !3, line: 3689, column: 7)
!4615 = !DILocation(line: 3690, column: 36, scope: !4614)
!4616 = !DILocation(line: 3690, column: 43, scope: !4614)
!4617 = !DILocation(line: 3690, column: 42, scope: !4614)
!4618 = !DILocation(line: 3690, column: 9, scope: !4614)
!4619 = !DILocation(line: 3691, column: 30, scope: !4614)
!4620 = !DILocation(line: 3691, column: 36, scope: !4614)
!4621 = !DILocation(line: 3691, column: 38, scope: !4614)
!4622 = !DILocation(line: 3691, column: 46, scope: !4614)
!4623 = !DILocation(line: 3691, column: 45, scope: !4614)
!4624 = !DILocation(line: 3691, column: 48, scope: !4614)
!4625 = !DILocation(line: 3691, column: 55, scope: !4614)
!4626 = !DILocation(line: 3691, column: 54, scope: !4614)
!4627 = !DILocation(line: 3691, column: 9, scope: !4614)
!4628 = !DILocation(line: 3692, column: 15, scope: !4614)
!4629 = !DILocation(line: 3692, column: 9, scope: !4614)
!4630 = !DILocation(line: 3692, column: 17, scope: !4614)
!4631 = !DILocation(line: 3693, column: 13, scope: !4632)
!4632 = distinct !DILexicalBlock(scope: !4614, file: !3, line: 3693, column: 13)
!4633 = !DILocation(line: 3693, column: 20, scope: !4632)
!4634 = !DILocation(line: 3693, column: 26, scope: !4632)
!4635 = !DILocation(line: 3693, column: 13, scope: !4614)
!4636 = !DILocation(line: 3695, column: 53, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4632, file: !3, line: 3694, column: 11)
!4638 = !DILocation(line: 3695, column: 36, scope: !4637)
!4639 = !DILocation(line: 3695, column: 35, scope: !4637)
!4640 = !DILocation(line: 3695, column: 34, scope: !4637)
!4641 = !DILocation(line: 3695, column: 22, scope: !4637)
!4642 = !DILocation(line: 3695, column: 19, scope: !4637)
!4643 = !DILocation(line: 3695, column: 13, scope: !4637)
!4644 = !DILocation(line: 3695, column: 21, scope: !4637)
!4645 = !DILocation(line: 3696, column: 34, scope: !4637)
!4646 = !DILocation(line: 3696, column: 28, scope: !4637)
!4647 = !DILocation(line: 3696, column: 20, scope: !4637)
!4648 = !DILocation(line: 3696, column: 13, scope: !4637)
!4649 = !DILocation(line: 3696, column: 23, scope: !4637)
!4650 = !DILocation(line: 3696, column: 26, scope: !4637)
!4651 = !DILocation(line: 3697, column: 36, scope: !4637)
!4652 = !DILocation(line: 3697, column: 30, scope: !4637)
!4653 = !DILocation(line: 3697, column: 20, scope: !4637)
!4654 = !DILocation(line: 3697, column: 13, scope: !4637)
!4655 = !DILocation(line: 3697, column: 23, scope: !4637)
!4656 = !DILocation(line: 3697, column: 28, scope: !4637)
!4657 = !DILocation(line: 3698, column: 35, scope: !4637)
!4658 = !DILocation(line: 3698, column: 29, scope: !4637)
!4659 = !DILocation(line: 3698, column: 20, scope: !4637)
!4660 = !DILocation(line: 3698, column: 13, scope: !4637)
!4661 = !DILocation(line: 3698, column: 23, scope: !4637)
!4662 = !DILocation(line: 3698, column: 27, scope: !4637)
!4663 = !DILocation(line: 3699, column: 17, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4637, file: !3, line: 3699, column: 17)
!4665 = !DILocation(line: 3699, column: 24, scope: !4664)
!4666 = !DILocation(line: 3699, column: 35, scope: !4664)
!4667 = !DILocation(line: 3699, column: 17, scope: !4637)
!4668 = !DILocation(line: 3700, column: 38, scope: !4664)
!4669 = !DILocation(line: 3700, column: 32, scope: !4664)
!4670 = !DILocation(line: 3700, column: 22, scope: !4664)
!4671 = !DILocation(line: 3700, column: 15, scope: !4664)
!4672 = !DILocation(line: 3700, column: 25, scope: !4664)
!4673 = !DILocation(line: 3700, column: 30, scope: !4664)
!4674 = !DILocation(line: 3701, column: 11, scope: !4637)
!4675 = !DILocation(line: 3702, column: 10, scope: !4614)
!4676 = !DILocation(line: 3703, column: 7, scope: !4614)
!4677 = !DILocation(line: 3688, column: 27, scope: !4610)
!4678 = !DILocation(line: 3688, column: 7, scope: !4610)
!4679 = distinct !{!4679, !4612, !4680}
!4680 = !DILocation(line: 3703, column: 7, scope: !4607)
!4681 = !DILocation(line: 3704, column: 15, scope: !4561)
!4682 = !DILocation(line: 3704, column: 23, scope: !4561)
!4683 = !DILocation(line: 3704, column: 17, scope: !4561)
!4684 = !DILocation(line: 3704, column: 16, scope: !4561)
!4685 = !DILocation(line: 3704, column: 13, scope: !4561)
!4686 = !DILocation(line: 3704, column: 14, scope: !4561)
!4687 = !DILocation(line: 3705, column: 13, scope: !4688)
!4688 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 3705, column: 7)
!4689 = !DILocation(line: 3705, column: 12, scope: !4688)
!4690 = !DILocation(line: 3705, column: 17, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4688, file: !3, line: 3705, column: 7)
!4692 = !DILocation(line: 3705, column: 19, scope: !4691)
!4693 = !DILocation(line: 3705, column: 7, scope: !4688)
!4694 = !DILocation(line: 3707, column: 30, scope: !4695)
!4695 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 3706, column: 7)
!4696 = !DILocation(line: 3707, column: 36, scope: !4695)
!4697 = !DILocation(line: 3707, column: 45, scope: !4695)
!4698 = !DILocation(line: 3707, column: 44, scope: !4695)
!4699 = !DILocation(line: 3707, column: 42, scope: !4695)
!4700 = !DILocation(line: 3707, column: 9, scope: !4695)
!4701 = !DILocation(line: 3708, column: 28, scope: !4695)
!4702 = !DILocation(line: 3708, column: 37, scope: !4695)
!4703 = !DILocation(line: 3708, column: 36, scope: !4695)
!4704 = !DILocation(line: 3708, column: 34, scope: !4695)
!4705 = !DILocation(line: 3708, column: 45, scope: !4695)
!4706 = !DILocation(line: 3708, column: 47, scope: !4695)
!4707 = !DILocation(line: 3708, column: 49, scope: !4695)
!4708 = !DILocation(line: 3708, column: 48, scope: !4695)
!4709 = !DILocation(line: 3708, column: 9, scope: !4695)
!4710 = !DILocation(line: 3709, column: 7, scope: !4695)
!4711 = !DILocation(line: 3705, column: 26, scope: !4691)
!4712 = !DILocation(line: 3705, column: 7, scope: !4691)
!4713 = distinct !{!4713, !4693, !4714}
!4714 = !DILocation(line: 3709, column: 7, scope: !4688)
!4715 = !DILocation(line: 3710, column: 15, scope: !4561)
!4716 = !DILocation(line: 3710, column: 23, scope: !4561)
!4717 = !DILocation(line: 3710, column: 17, scope: !4561)
!4718 = !DILocation(line: 3710, column: 16, scope: !4561)
!4719 = !DILocation(line: 3710, column: 13, scope: !4561)
!4720 = !DILocation(line: 3710, column: 14, scope: !4561)
!4721 = !DILocation(line: 3711, column: 26, scope: !4561)
!4722 = !DILocation(line: 3711, column: 34, scope: !4561)
!4723 = !DILocation(line: 3711, column: 7, scope: !4561)
!4724 = !DILocation(line: 3712, column: 7, scope: !4561)
!4725 = !DILocation(line: 3713, column: 5, scope: !4561)
!4726 = !DILocalVariable(name: "gamma", scope: !4727, file: !3, line: 3718, type: !855)
!4727 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3716, column: 5)
!4728 = !DILocation(line: 3718, column: 9, scope: !4727)
!4729 = !DILocalVariable(name: "pixels", scope: !4727, file: !3, line: 3721, type: !4404)
!4730 = !DILocation(line: 3721, column: 9, scope: !4727)
!4731 = !DILocalVariable(name: "alpha", scope: !4727, file: !3, line: 3724, type: !1271)
!4732 = !DILocation(line: 3724, column: 9, scope: !4727)
!4733 = !DILocalVariable(name: "delta", scope: !4727, file: !3, line: 3727, type: !1897)
!4734 = !DILocation(line: 3727, column: 9, scope: !4727)
!4735 = !DILocation(line: 3729, column: 35, scope: !4727)
!4736 = !DILocation(line: 3729, column: 62, scope: !4727)
!4737 = !DILocation(line: 3729, column: 56, scope: !4727)
!4738 = !DILocation(line: 3729, column: 46, scope: !4727)
!4739 = !DILocation(line: 3730, column: 15, scope: !4727)
!4740 = !DILocation(line: 3730, column: 9, scope: !4727)
!4741 = !DILocation(line: 3729, column: 65, scope: !4727)
!4742 = !DILocation(line: 3730, column: 22, scope: !4727)
!4743 = !DILocation(line: 3729, column: 9, scope: !4727)
!4744 = !DILocation(line: 3729, column: 8, scope: !4727)
!4745 = !DILocation(line: 3731, column: 11, scope: !4746)
!4746 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 3731, column: 11)
!4747 = !DILocation(line: 3731, column: 13, scope: !4746)
!4748 = !DILocation(line: 3731, column: 11, scope: !4727)
!4749 = !DILocation(line: 3732, column: 9, scope: !4746)
!4750 = !DILocation(line: 3733, column: 45, scope: !4727)
!4751 = !DILocation(line: 3733, column: 15, scope: !4727)
!4752 = !DILocation(line: 3733, column: 14, scope: !4727)
!4753 = !DILocation(line: 3734, column: 13, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 3734, column: 7)
!4755 = !DILocation(line: 3734, column: 12, scope: !4754)
!4756 = !DILocation(line: 3734, column: 17, scope: !4757)
!4757 = distinct !DILexicalBlock(scope: !4754, file: !3, line: 3734, column: 7)
!4758 = !DILocation(line: 3734, column: 19, scope: !4757)
!4759 = !DILocation(line: 3734, column: 7, scope: !4754)
!4760 = !DILocation(line: 3736, column: 30, scope: !4761)
!4761 = distinct !DILexicalBlock(scope: !4757, file: !3, line: 3735, column: 7)
!4762 = !DILocation(line: 3736, column: 36, scope: !4761)
!4763 = !DILocation(line: 3736, column: 43, scope: !4761)
!4764 = !DILocation(line: 3736, column: 42, scope: !4761)
!4765 = !DILocation(line: 3736, column: 9, scope: !4761)
!4766 = !DILocation(line: 3737, column: 30, scope: !4761)
!4767 = !DILocation(line: 3737, column: 36, scope: !4761)
!4768 = !DILocation(line: 3737, column: 38, scope: !4761)
!4769 = !DILocation(line: 3737, column: 46, scope: !4761)
!4770 = !DILocation(line: 3737, column: 45, scope: !4761)
!4771 = !DILocation(line: 3737, column: 48, scope: !4761)
!4772 = !DILocation(line: 3737, column: 55, scope: !4761)
!4773 = !DILocation(line: 3737, column: 54, scope: !4761)
!4774 = !DILocation(line: 3737, column: 9, scope: !4761)
!4775 = !DILocation(line: 3738, column: 15, scope: !4761)
!4776 = !DILocation(line: 3738, column: 9, scope: !4761)
!4777 = !DILocation(line: 3738, column: 17, scope: !4761)
!4778 = !DILocation(line: 3739, column: 13, scope: !4779)
!4779 = distinct !DILexicalBlock(scope: !4761, file: !3, line: 3739, column: 13)
!4780 = !DILocation(line: 3739, column: 20, scope: !4779)
!4781 = !DILocation(line: 3739, column: 26, scope: !4779)
!4782 = !DILocation(line: 3739, column: 13, scope: !4761)
!4783 = !DILocation(line: 3741, column: 53, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4779, file: !3, line: 3740, column: 11)
!4785 = !DILocation(line: 3741, column: 36, scope: !4784)
!4786 = !DILocation(line: 3741, column: 35, scope: !4784)
!4787 = !DILocation(line: 3741, column: 34, scope: !4784)
!4788 = !DILocation(line: 3741, column: 22, scope: !4784)
!4789 = !DILocation(line: 3741, column: 19, scope: !4784)
!4790 = !DILocation(line: 3741, column: 13, scope: !4784)
!4791 = !DILocation(line: 3741, column: 21, scope: !4784)
!4792 = !DILocation(line: 3742, column: 34, scope: !4784)
!4793 = !DILocation(line: 3742, column: 28, scope: !4784)
!4794 = !DILocation(line: 3742, column: 20, scope: !4784)
!4795 = !DILocation(line: 3742, column: 13, scope: !4784)
!4796 = !DILocation(line: 3742, column: 23, scope: !4784)
!4797 = !DILocation(line: 3742, column: 26, scope: !4784)
!4798 = !DILocation(line: 3743, column: 36, scope: !4784)
!4799 = !DILocation(line: 3743, column: 30, scope: !4784)
!4800 = !DILocation(line: 3743, column: 20, scope: !4784)
!4801 = !DILocation(line: 3743, column: 13, scope: !4784)
!4802 = !DILocation(line: 3743, column: 23, scope: !4784)
!4803 = !DILocation(line: 3743, column: 28, scope: !4784)
!4804 = !DILocation(line: 3744, column: 35, scope: !4784)
!4805 = !DILocation(line: 3744, column: 29, scope: !4784)
!4806 = !DILocation(line: 3744, column: 20, scope: !4784)
!4807 = !DILocation(line: 3744, column: 13, scope: !4784)
!4808 = !DILocation(line: 3744, column: 23, scope: !4784)
!4809 = !DILocation(line: 3744, column: 27, scope: !4784)
!4810 = !DILocation(line: 3745, column: 17, scope: !4811)
!4811 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 3745, column: 17)
!4812 = !DILocation(line: 3745, column: 24, scope: !4811)
!4813 = !DILocation(line: 3745, column: 35, scope: !4811)
!4814 = !DILocation(line: 3745, column: 17, scope: !4784)
!4815 = !DILocation(line: 3746, column: 38, scope: !4811)
!4816 = !DILocation(line: 3746, column: 32, scope: !4811)
!4817 = !DILocation(line: 3746, column: 22, scope: !4811)
!4818 = !DILocation(line: 3746, column: 15, scope: !4811)
!4819 = !DILocation(line: 3746, column: 25, scope: !4811)
!4820 = !DILocation(line: 3746, column: 30, scope: !4811)
!4821 = !DILocation(line: 3747, column: 11, scope: !4784)
!4822 = !DILocation(line: 3748, column: 10, scope: !4761)
!4823 = !DILocation(line: 3749, column: 7, scope: !4761)
!4824 = !DILocation(line: 3734, column: 26, scope: !4757)
!4825 = !DILocation(line: 3734, column: 7, scope: !4757)
!4826 = distinct !{!4826, !4759, !4827}
!4827 = !DILocation(line: 3749, column: 7, scope: !4754)
!4828 = !DILocation(line: 3750, column: 15, scope: !4727)
!4829 = !DILocation(line: 3750, column: 23, scope: !4727)
!4830 = !DILocation(line: 3750, column: 17, scope: !4727)
!4831 = !DILocation(line: 3750, column: 16, scope: !4727)
!4832 = !DILocation(line: 3750, column: 13, scope: !4727)
!4833 = !DILocation(line: 3750, column: 14, scope: !4727)
!4834 = !DILocation(line: 3751, column: 15, scope: !4727)
!4835 = !DILocation(line: 3751, column: 23, scope: !4727)
!4836 = !DILocation(line: 3751, column: 17, scope: !4727)
!4837 = !DILocation(line: 3751, column: 16, scope: !4727)
!4838 = !DILocation(line: 3751, column: 13, scope: !4727)
!4839 = !DILocation(line: 3751, column: 14, scope: !4727)
!4840 = !DILocation(line: 3752, column: 26, scope: !4727)
!4841 = !DILocation(line: 3752, column: 19, scope: !4727)
!4842 = !DILocation(line: 3752, column: 41, scope: !4727)
!4843 = !DILocation(line: 3752, column: 34, scope: !4727)
!4844 = !DILocation(line: 3752, column: 44, scope: !4727)
!4845 = !DILocation(line: 3752, column: 43, scope: !4727)
!4846 = !DILocation(line: 3752, column: 59, scope: !4727)
!4847 = !DILocation(line: 3752, column: 61, scope: !4727)
!4848 = !DILocation(line: 3752, column: 60, scope: !4727)
!4849 = !DILocation(line: 3752, column: 52, scope: !4727)
!4850 = !DILocation(line: 3752, column: 28, scope: !4727)
!4851 = !DILocation(line: 3752, column: 77, scope: !4727)
!4852 = !DILocation(line: 3753, column: 21, scope: !4727)
!4853 = !DILocation(line: 3753, column: 14, scope: !4727)
!4854 = !DILocation(line: 3753, column: 24, scope: !4727)
!4855 = !DILocation(line: 3753, column: 23, scope: !4727)
!4856 = !DILocation(line: 3753, column: 39, scope: !4727)
!4857 = !DILocation(line: 3753, column: 41, scope: !4727)
!4858 = !DILocation(line: 3753, column: 40, scope: !4727)
!4859 = !DILocation(line: 3753, column: 32, scope: !4727)
!4860 = !DILocation(line: 3752, column: 78, scope: !4727)
!4861 = !DILocation(line: 3752, column: 70, scope: !4727)
!4862 = !DILocation(line: 3752, column: 12, scope: !4727)
!4863 = !DILocation(line: 3755, column: 11, scope: !4864)
!4864 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 3755, column: 11)
!4865 = !DILocation(line: 3755, column: 17, scope: !4864)
!4866 = !DILocation(line: 3755, column: 11, scope: !4727)
!4867 = !DILocation(line: 3755, column: 30, scope: !4864)
!4868 = !DILocation(line: 3755, column: 24, scope: !4864)
!4869 = !DILocation(line: 3757, column: 35, scope: !4727)
!4870 = !DILocation(line: 3757, column: 13, scope: !4727)
!4871 = !DILocation(line: 3757, column: 12, scope: !4727)
!4872 = !DILocation(line: 3758, column: 17, scope: !4727)
!4873 = !DILocation(line: 3758, column: 35, scope: !4727)
!4874 = !DILocation(line: 3758, column: 28, scope: !4727)
!4875 = !DILocation(line: 3758, column: 50, scope: !4727)
!4876 = !DILocation(line: 3758, column: 43, scope: !4727)
!4877 = !DILocation(line: 3758, column: 53, scope: !4727)
!4878 = !DILocation(line: 3758, column: 63, scope: !4727)
!4879 = !DILocation(line: 3758, column: 52, scope: !4727)
!4880 = !DILocation(line: 3758, column: 73, scope: !4727)
!4881 = !DILocation(line: 3759, column: 9, scope: !4727)
!4882 = !DILocation(line: 3759, column: 19, scope: !4727)
!4883 = !DILocation(line: 3758, column: 74, scope: !4727)
!4884 = !DILocation(line: 3758, column: 66, scope: !4727)
!4885 = !DILocation(line: 3758, column: 37, scope: !4727)
!4886 = !DILocation(line: 3759, column: 30, scope: !4727)
!4887 = !DILocation(line: 3759, column: 44, scope: !4727)
!4888 = !DILocation(line: 3759, column: 37, scope: !4727)
!4889 = !DILocation(line: 3759, column: 47, scope: !4727)
!4890 = !DILocation(line: 3759, column: 57, scope: !4727)
!4891 = !DILocation(line: 3759, column: 46, scope: !4727)
!4892 = !DILocation(line: 3759, column: 67, scope: !4727)
!4893 = !DILocation(line: 3760, column: 9, scope: !4727)
!4894 = !DILocation(line: 3760, column: 19, scope: !4727)
!4895 = !DILocation(line: 3759, column: 68, scope: !4727)
!4896 = !DILocation(line: 3759, column: 60, scope: !4727)
!4897 = !DILocation(line: 3759, column: 31, scope: !4727)
!4898 = !DILocation(line: 3759, column: 23, scope: !4727)
!4899 = !DILocation(line: 3758, column: 22, scope: !4727)
!4900 = !DILocation(line: 3758, column: 13, scope: !4727)
!4901 = !DILocation(line: 3758, column: 16, scope: !4727)
!4902 = !DILocation(line: 3761, column: 19, scope: !4727)
!4903 = !DILocation(line: 3761, column: 37, scope: !4727)
!4904 = !DILocation(line: 3761, column: 30, scope: !4727)
!4905 = !DILocation(line: 3761, column: 52, scope: !4727)
!4906 = !DILocation(line: 3761, column: 45, scope: !4727)
!4907 = !DILocation(line: 3761, column: 55, scope: !4727)
!4908 = !DILocation(line: 3761, column: 65, scope: !4727)
!4909 = !DILocation(line: 3761, column: 54, scope: !4727)
!4910 = !DILocation(line: 3761, column: 77, scope: !4727)
!4911 = !DILocation(line: 3762, column: 9, scope: !4727)
!4912 = !DILocation(line: 3762, column: 19, scope: !4727)
!4913 = !DILocation(line: 3761, column: 78, scope: !4727)
!4914 = !DILocation(line: 3761, column: 70, scope: !4727)
!4915 = !DILocation(line: 3761, column: 39, scope: !4727)
!4916 = !DILocation(line: 3762, column: 32, scope: !4727)
!4917 = !DILocation(line: 3762, column: 46, scope: !4727)
!4918 = !DILocation(line: 3762, column: 39, scope: !4727)
!4919 = !DILocation(line: 3762, column: 49, scope: !4727)
!4920 = !DILocation(line: 3762, column: 59, scope: !4727)
!4921 = !DILocation(line: 3762, column: 48, scope: !4727)
!4922 = !DILocation(line: 3763, column: 15, scope: !4727)
!4923 = !DILocation(line: 3763, column: 17, scope: !4727)
!4924 = !DILocation(line: 3763, column: 27, scope: !4727)
!4925 = !DILocation(line: 3763, column: 16, scope: !4727)
!4926 = !DILocation(line: 3762, column: 64, scope: !4727)
!4927 = !DILocation(line: 3762, column: 33, scope: !4727)
!4928 = !DILocation(line: 3762, column: 25, scope: !4727)
!4929 = !DILocation(line: 3761, column: 24, scope: !4727)
!4930 = !DILocation(line: 3761, column: 13, scope: !4727)
!4931 = !DILocation(line: 3761, column: 18, scope: !4727)
!4932 = !DILocation(line: 3764, column: 18, scope: !4727)
!4933 = !DILocation(line: 3764, column: 36, scope: !4727)
!4934 = !DILocation(line: 3764, column: 29, scope: !4727)
!4935 = !DILocation(line: 3764, column: 51, scope: !4727)
!4936 = !DILocation(line: 3764, column: 44, scope: !4727)
!4937 = !DILocation(line: 3764, column: 54, scope: !4727)
!4938 = !DILocation(line: 3764, column: 64, scope: !4727)
!4939 = !DILocation(line: 3764, column: 53, scope: !4727)
!4940 = !DILocation(line: 3764, column: 75, scope: !4727)
!4941 = !DILocation(line: 3765, column: 9, scope: !4727)
!4942 = !DILocation(line: 3765, column: 19, scope: !4727)
!4943 = !DILocation(line: 3764, column: 76, scope: !4727)
!4944 = !DILocation(line: 3764, column: 68, scope: !4727)
!4945 = !DILocation(line: 3764, column: 38, scope: !4727)
!4946 = !DILocation(line: 3765, column: 31, scope: !4727)
!4947 = !DILocation(line: 3765, column: 45, scope: !4727)
!4948 = !DILocation(line: 3765, column: 38, scope: !4727)
!4949 = !DILocation(line: 3765, column: 48, scope: !4727)
!4950 = !DILocation(line: 3765, column: 58, scope: !4727)
!4951 = !DILocation(line: 3765, column: 47, scope: !4727)
!4952 = !DILocation(line: 3765, column: 69, scope: !4727)
!4953 = !DILocation(line: 3766, column: 9, scope: !4727)
!4954 = !DILocation(line: 3766, column: 19, scope: !4727)
!4955 = !DILocation(line: 3765, column: 70, scope: !4727)
!4956 = !DILocation(line: 3765, column: 62, scope: !4727)
!4957 = !DILocation(line: 3765, column: 32, scope: !4727)
!4958 = !DILocation(line: 3765, column: 24, scope: !4727)
!4959 = !DILocation(line: 3764, column: 23, scope: !4727)
!4960 = !DILocation(line: 3764, column: 13, scope: !4727)
!4961 = !DILocation(line: 3764, column: 17, scope: !4727)
!4962 = !DILocation(line: 3767, column: 33, scope: !4727)
!4963 = !DILocation(line: 3767, column: 26, scope: !4727)
!4964 = !DILocation(line: 3767, column: 48, scope: !4727)
!4965 = !DILocation(line: 3767, column: 41, scope: !4727)
!4966 = !DILocation(line: 3767, column: 51, scope: !4727)
!4967 = !DILocation(line: 3767, column: 61, scope: !4727)
!4968 = !DILocation(line: 3767, column: 50, scope: !4727)
!4969 = !DILocation(line: 3767, column: 75, scope: !4727)
!4970 = !DILocation(line: 3768, column: 9, scope: !4727)
!4971 = !DILocation(line: 3768, column: 19, scope: !4727)
!4972 = !DILocation(line: 3767, column: 76, scope: !4727)
!4973 = !DILocation(line: 3767, column: 68, scope: !4727)
!4974 = !DILocation(line: 3767, column: 35, scope: !4727)
!4975 = !DILocation(line: 3768, column: 34, scope: !4727)
!4976 = !DILocation(line: 3768, column: 48, scope: !4727)
!4977 = !DILocation(line: 3768, column: 41, scope: !4727)
!4978 = !DILocation(line: 3768, column: 51, scope: !4727)
!4979 = !DILocation(line: 3768, column: 61, scope: !4727)
!4980 = !DILocation(line: 3768, column: 50, scope: !4727)
!4981 = !DILocation(line: 3768, column: 75, scope: !4727)
!4982 = !DILocation(line: 3769, column: 9, scope: !4727)
!4983 = !DILocation(line: 3769, column: 19, scope: !4727)
!4984 = !DILocation(line: 3768, column: 76, scope: !4727)
!4985 = !DILocation(line: 3768, column: 68, scope: !4727)
!4986 = !DILocation(line: 3768, column: 35, scope: !4727)
!4987 = !DILocation(line: 3768, column: 27, scope: !4727)
!4988 = !DILocation(line: 3767, column: 21, scope: !4727)
!4989 = !DILocation(line: 3767, column: 13, scope: !4727)
!4990 = !DILocation(line: 3767, column: 20, scope: !4727)
!4991 = !DILocation(line: 3770, column: 11, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 3770, column: 11)
!4993 = !DILocation(line: 3770, column: 18, scope: !4992)
!4994 = !DILocation(line: 3770, column: 29, scope: !4992)
!4995 = !DILocation(line: 3770, column: 11, scope: !4727)
!4996 = !DILocation(line: 3771, column: 21, scope: !4992)
!4997 = !DILocation(line: 3771, column: 39, scope: !4992)
!4998 = !DILocation(line: 3771, column: 32, scope: !4992)
!4999 = !DILocation(line: 3771, column: 54, scope: !4992)
!5000 = !DILocation(line: 3771, column: 47, scope: !4992)
!5001 = !DILocation(line: 3771, column: 57, scope: !4992)
!5002 = !DILocation(line: 3771, column: 67, scope: !4992)
!5003 = !DILocation(line: 3771, column: 56, scope: !4992)
!5004 = !DILocation(line: 3771, column: 79, scope: !4992)
!5005 = !DILocation(line: 3772, column: 11, scope: !4992)
!5006 = !DILocation(line: 3772, column: 21, scope: !4992)
!5007 = !DILocation(line: 3771, column: 80, scope: !4992)
!5008 = !DILocation(line: 3771, column: 72, scope: !4992)
!5009 = !DILocation(line: 3771, column: 41, scope: !4992)
!5010 = !DILocation(line: 3772, column: 34, scope: !4992)
!5011 = !DILocation(line: 3772, column: 48, scope: !4992)
!5012 = !DILocation(line: 3772, column: 41, scope: !4992)
!5013 = !DILocation(line: 3772, column: 51, scope: !4992)
!5014 = !DILocation(line: 3772, column: 61, scope: !4992)
!5015 = !DILocation(line: 3772, column: 50, scope: !4992)
!5016 = !DILocation(line: 3772, column: 73, scope: !4992)
!5017 = !DILocation(line: 3773, column: 11, scope: !4992)
!5018 = !DILocation(line: 3773, column: 21, scope: !4992)
!5019 = !DILocation(line: 3772, column: 74, scope: !4992)
!5020 = !DILocation(line: 3772, column: 66, scope: !4992)
!5021 = !DILocation(line: 3772, column: 35, scope: !4992)
!5022 = !DILocation(line: 3772, column: 27, scope: !4992)
!5023 = !DILocation(line: 3771, column: 26, scope: !4992)
!5024 = !DILocation(line: 3771, column: 15, scope: !4992)
!5025 = !DILocation(line: 3771, column: 20, scope: !4992)
!5026 = !DILocation(line: 3771, column: 9, scope: !4992)
!5027 = !DILocation(line: 3774, column: 7, scope: !4727)
!5028 = !DILocalVariable(name: "excerpt_image", scope: !5029, file: !3, line: 3779, type: !818)
!5029 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3777, column: 5)
!5030 = !DILocation(line: 3779, column: 10, scope: !5029)
!5031 = !DILocalVariable(name: "filter_image", scope: !5029, file: !3, line: 3780, type: !818)
!5032 = !DILocation(line: 3780, column: 10, scope: !5029)
!5033 = !DILocalVariable(name: "pixels", scope: !5029, file: !3, line: 3783, type: !5034)
!5034 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1417, size: 448, elements: !1090)
!5035 = !DILocation(line: 3783, column: 9, scope: !5029)
!5036 = !DILocalVariable(name: "geometry", scope: !5029, file: !3, line: 3786, type: !882)
!5037 = !DILocation(line: 3786, column: 9, scope: !5029)
!5038 = !DILocation(line: 3788, column: 16, scope: !5029)
!5039 = !DILocation(line: 3788, column: 21, scope: !5029)
!5040 = !DILocation(line: 3789, column: 16, scope: !5029)
!5041 = !DILocation(line: 3789, column: 22, scope: !5029)
!5042 = !DILocation(line: 3790, column: 34, scope: !5029)
!5043 = !DILocation(line: 3790, column: 28, scope: !5029)
!5044 = !DILocation(line: 3790, column: 18, scope: !5029)
!5045 = !DILocation(line: 3790, column: 36, scope: !5029)
!5046 = !DILocation(line: 3790, column: 16, scope: !5029)
!5047 = !DILocation(line: 3790, column: 17, scope: !5029)
!5048 = !DILocation(line: 3791, column: 34, scope: !5029)
!5049 = !DILocation(line: 3791, column: 28, scope: !5029)
!5050 = !DILocation(line: 3791, column: 18, scope: !5029)
!5051 = !DILocation(line: 3791, column: 36, scope: !5029)
!5052 = !DILocation(line: 3791, column: 16, scope: !5029)
!5053 = !DILocation(line: 3791, column: 17, scope: !5029)
!5054 = !DILocation(line: 3792, column: 34, scope: !5029)
!5055 = !DILocation(line: 3792, column: 50, scope: !5029)
!5056 = !DILocation(line: 3792, column: 21, scope: !5029)
!5057 = !DILocation(line: 3792, column: 20, scope: !5029)
!5058 = !DILocation(line: 3793, column: 11, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3793, column: 11)
!5060 = !DILocation(line: 3793, column: 25, scope: !5059)
!5061 = !DILocation(line: 3793, column: 11, scope: !5029)
!5062 = !DILocation(line: 3794, column: 9, scope: !5059)
!5063 = !DILocation(line: 3795, column: 32, scope: !5029)
!5064 = !DILocation(line: 3795, column: 50, scope: !5029)
!5065 = !DILocation(line: 3795, column: 57, scope: !5029)
!5066 = !DILocation(line: 3795, column: 64, scope: !5029)
!5067 = !DILocation(line: 3795, column: 71, scope: !5029)
!5068 = !DILocation(line: 3796, column: 9, scope: !5029)
!5069 = !DILocation(line: 3795, column: 20, scope: !5029)
!5070 = !DILocation(line: 3795, column: 19, scope: !5029)
!5071 = !DILocation(line: 3797, column: 34, scope: !5029)
!5072 = !DILocation(line: 3797, column: 21, scope: !5029)
!5073 = !DILocation(line: 3797, column: 20, scope: !5029)
!5074 = !DILocation(line: 3798, column: 11, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3798, column: 11)
!5076 = !DILocation(line: 3798, column: 24, scope: !5075)
!5077 = !DILocation(line: 3798, column: 11, scope: !5029)
!5078 = !DILocation(line: 3799, column: 9, scope: !5075)
!5079 = !DILocation(line: 3800, column: 26, scope: !5029)
!5080 = !DILocation(line: 3800, column: 47, scope: !5029)
!5081 = !DILocation(line: 3800, column: 9, scope: !5029)
!5082 = !DILocation(line: 3800, column: 8, scope: !5029)
!5083 = !DILocation(line: 3801, column: 11, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 3801, column: 11)
!5085 = !DILocation(line: 3801, column: 13, scope: !5084)
!5086 = !DILocation(line: 3801, column: 11, scope: !5029)
!5087 = !DILocation(line: 3803, column: 37, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 3802, column: 9)
!5089 = !DILocation(line: 3803, column: 24, scope: !5088)
!5090 = !DILocation(line: 3803, column: 23, scope: !5088)
!5091 = !DILocation(line: 3804, column: 11, scope: !5088)
!5092 = !DILocation(line: 3806, column: 36, scope: !5029)
!5093 = !DILocation(line: 3806, column: 15, scope: !5029)
!5094 = !DILocation(line: 3806, column: 14, scope: !5029)
!5095 = !DILocation(line: 3807, column: 28, scope: !5029)
!5096 = !DILocation(line: 3807, column: 34, scope: !5029)
!5097 = !DILocation(line: 3807, column: 7, scope: !5029)
!5098 = !DILocation(line: 3808, column: 28, scope: !5029)
!5099 = !DILocation(line: 3808, column: 34, scope: !5029)
!5100 = !DILocation(line: 3808, column: 36, scope: !5029)
!5101 = !DILocation(line: 3808, column: 7, scope: !5029)
!5102 = !DILocation(line: 3809, column: 33, scope: !5029)
!5103 = !DILocation(line: 3809, column: 20, scope: !5029)
!5104 = !DILocation(line: 3809, column: 19, scope: !5029)
!5105 = !DILocation(line: 3810, column: 7, scope: !5029)
!5106 = !DILocalVariable(name: "pixels", scope: !5107, file: !3, line: 3815, type: !5034)
!5107 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3813, column: 5)
!5108 = !DILocation(line: 3815, column: 9, scope: !5107)
!5109 = !DILocation(line: 3817, column: 35, scope: !5107)
!5110 = !DILocation(line: 3817, column: 62, scope: !5107)
!5111 = !DILocation(line: 3817, column: 56, scope: !5107)
!5112 = !DILocation(line: 3817, column: 46, scope: !5107)
!5113 = !DILocation(line: 3818, column: 15, scope: !5107)
!5114 = !DILocation(line: 3818, column: 9, scope: !5107)
!5115 = !DILocation(line: 3817, column: 65, scope: !5107)
!5116 = !DILocation(line: 3818, column: 22, scope: !5107)
!5117 = !DILocation(line: 3817, column: 9, scope: !5107)
!5118 = !DILocation(line: 3817, column: 8, scope: !5107)
!5119 = !DILocation(line: 3819, column: 11, scope: !5120)
!5120 = distinct !DILexicalBlock(scope: !5107, file: !3, line: 3819, column: 11)
!5121 = !DILocation(line: 3819, column: 13, scope: !5120)
!5122 = !DILocation(line: 3819, column: 11, scope: !5107)
!5123 = !DILocation(line: 3820, column: 9, scope: !5120)
!5124 = !DILocation(line: 3821, column: 45, scope: !5107)
!5125 = !DILocation(line: 3821, column: 15, scope: !5107)
!5126 = !DILocation(line: 3821, column: 14, scope: !5107)
!5127 = !DILocation(line: 3822, column: 28, scope: !5107)
!5128 = !DILocation(line: 3822, column: 34, scope: !5107)
!5129 = !DILocation(line: 3822, column: 7, scope: !5107)
!5130 = !DILocation(line: 3823, column: 28, scope: !5107)
!5131 = !DILocation(line: 3823, column: 34, scope: !5107)
!5132 = !DILocation(line: 3823, column: 36, scope: !5107)
!5133 = !DILocation(line: 3823, column: 7, scope: !5107)
!5134 = !DILocation(line: 3824, column: 7, scope: !5107)
!5135 = !DILocalVariable(name: "gamma", scope: !5136, file: !3, line: 3829, type: !855)
!5136 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3827, column: 5)
!5137 = !DILocation(line: 3829, column: 9, scope: !5136)
!5138 = !DILocalVariable(name: "pixels", scope: !5136, file: !3, line: 3832, type: !4564)
!5139 = !DILocation(line: 3832, column: 9, scope: !5136)
!5140 = !DILocalVariable(name: "alpha", scope: !5136, file: !3, line: 3835, type: !1261)
!5141 = !DILocation(line: 3835, column: 9, scope: !5136)
!5142 = !DILocalVariable(name: "delta", scope: !5136, file: !3, line: 3838, type: !1897)
!5143 = !DILocation(line: 3838, column: 9, scope: !5136)
!5144 = !DILocalVariable(name: "luminance", scope: !5136, file: !3, line: 3839, type: !1897)
!5145 = !DILocation(line: 3839, column: 9, scope: !5136)
!5146 = !DILocation(line: 3841, column: 35, scope: !5136)
!5147 = !DILocation(line: 3841, column: 62, scope: !5136)
!5148 = !DILocation(line: 3841, column: 56, scope: !5136)
!5149 = !DILocation(line: 3841, column: 46, scope: !5136)
!5150 = !DILocation(line: 3842, column: 15, scope: !5136)
!5151 = !DILocation(line: 3842, column: 9, scope: !5136)
!5152 = !DILocation(line: 3841, column: 65, scope: !5136)
!5153 = !DILocation(line: 3842, column: 22, scope: !5136)
!5154 = !DILocation(line: 3841, column: 9, scope: !5136)
!5155 = !DILocation(line: 3841, column: 8, scope: !5136)
!5156 = !DILocation(line: 3843, column: 11, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3843, column: 11)
!5158 = !DILocation(line: 3843, column: 13, scope: !5157)
!5159 = !DILocation(line: 3843, column: 11, scope: !5136)
!5160 = !DILocation(line: 3844, column: 9, scope: !5157)
!5161 = !DILocation(line: 3845, column: 45, scope: !5136)
!5162 = !DILocation(line: 3845, column: 15, scope: !5136)
!5163 = !DILocation(line: 3845, column: 14, scope: !5136)
!5164 = !DILocation(line: 3846, column: 13, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3846, column: 7)
!5166 = !DILocation(line: 3846, column: 12, scope: !5165)
!5167 = !DILocation(line: 3846, column: 17, scope: !5168)
!5168 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 3846, column: 7)
!5169 = !DILocation(line: 3846, column: 19, scope: !5168)
!5170 = !DILocation(line: 3846, column: 7, scope: !5165)
!5171 = !DILocation(line: 3848, column: 30, scope: !5172)
!5172 = distinct !DILexicalBlock(scope: !5168, file: !3, line: 3847, column: 7)
!5173 = !DILocation(line: 3848, column: 36, scope: !5172)
!5174 = !DILocation(line: 3848, column: 43, scope: !5172)
!5175 = !DILocation(line: 3848, column: 42, scope: !5172)
!5176 = !DILocation(line: 3848, column: 9, scope: !5172)
!5177 = !DILocation(line: 3849, column: 30, scope: !5172)
!5178 = !DILocation(line: 3849, column: 36, scope: !5172)
!5179 = !DILocation(line: 3849, column: 38, scope: !5172)
!5180 = !DILocation(line: 3849, column: 46, scope: !5172)
!5181 = !DILocation(line: 3849, column: 45, scope: !5172)
!5182 = !DILocation(line: 3849, column: 48, scope: !5172)
!5183 = !DILocation(line: 3849, column: 55, scope: !5172)
!5184 = !DILocation(line: 3849, column: 54, scope: !5172)
!5185 = !DILocation(line: 3849, column: 9, scope: !5172)
!5186 = !DILocation(line: 3850, column: 15, scope: !5172)
!5187 = !DILocation(line: 3850, column: 9, scope: !5172)
!5188 = !DILocation(line: 3850, column: 17, scope: !5172)
!5189 = !DILocation(line: 3851, column: 13, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5172, file: !3, line: 3851, column: 13)
!5191 = !DILocation(line: 3851, column: 20, scope: !5190)
!5192 = !DILocation(line: 3851, column: 26, scope: !5190)
!5193 = !DILocation(line: 3851, column: 13, scope: !5172)
!5194 = !DILocation(line: 3853, column: 53, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 3852, column: 11)
!5196 = !DILocation(line: 3853, column: 36, scope: !5195)
!5197 = !DILocation(line: 3853, column: 35, scope: !5195)
!5198 = !DILocation(line: 3853, column: 34, scope: !5195)
!5199 = !DILocation(line: 3853, column: 22, scope: !5195)
!5200 = !DILocation(line: 3853, column: 19, scope: !5195)
!5201 = !DILocation(line: 3853, column: 13, scope: !5195)
!5202 = !DILocation(line: 3853, column: 21, scope: !5195)
!5203 = !DILocation(line: 3854, column: 34, scope: !5195)
!5204 = !DILocation(line: 3854, column: 28, scope: !5195)
!5205 = !DILocation(line: 3854, column: 20, scope: !5195)
!5206 = !DILocation(line: 3854, column: 13, scope: !5195)
!5207 = !DILocation(line: 3854, column: 23, scope: !5195)
!5208 = !DILocation(line: 3854, column: 26, scope: !5195)
!5209 = !DILocation(line: 3855, column: 36, scope: !5195)
!5210 = !DILocation(line: 3855, column: 30, scope: !5195)
!5211 = !DILocation(line: 3855, column: 20, scope: !5195)
!5212 = !DILocation(line: 3855, column: 13, scope: !5195)
!5213 = !DILocation(line: 3855, column: 23, scope: !5195)
!5214 = !DILocation(line: 3855, column: 28, scope: !5195)
!5215 = !DILocation(line: 3856, column: 35, scope: !5195)
!5216 = !DILocation(line: 3856, column: 29, scope: !5195)
!5217 = !DILocation(line: 3856, column: 20, scope: !5195)
!5218 = !DILocation(line: 3856, column: 13, scope: !5195)
!5219 = !DILocation(line: 3856, column: 23, scope: !5195)
!5220 = !DILocation(line: 3856, column: 27, scope: !5195)
!5221 = !DILocation(line: 3857, column: 17, scope: !5222)
!5222 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 3857, column: 17)
!5223 = !DILocation(line: 3857, column: 24, scope: !5222)
!5224 = !DILocation(line: 3857, column: 35, scope: !5222)
!5225 = !DILocation(line: 3857, column: 17, scope: !5195)
!5226 = !DILocation(line: 3858, column: 38, scope: !5222)
!5227 = !DILocation(line: 3858, column: 32, scope: !5222)
!5228 = !DILocation(line: 3858, column: 22, scope: !5222)
!5229 = !DILocation(line: 3858, column: 15, scope: !5222)
!5230 = !DILocation(line: 3858, column: 25, scope: !5222)
!5231 = !DILocation(line: 3858, column: 30, scope: !5222)
!5232 = !DILocation(line: 3859, column: 11, scope: !5195)
!5233 = !DILocation(line: 3860, column: 10, scope: !5172)
!5234 = !DILocation(line: 3861, column: 7, scope: !5172)
!5235 = !DILocation(line: 3846, column: 26, scope: !5168)
!5236 = !DILocation(line: 3846, column: 7, scope: !5168)
!5237 = distinct !{!5237, !5170, !5238}
!5238 = !DILocation(line: 3861, column: 7, scope: !5165)
!5239 = !DILocation(line: 3862, column: 15, scope: !5136)
!5240 = !DILocation(line: 3862, column: 23, scope: !5136)
!5241 = !DILocation(line: 3862, column: 17, scope: !5136)
!5242 = !DILocation(line: 3862, column: 16, scope: !5136)
!5243 = !DILocation(line: 3862, column: 13, scope: !5136)
!5244 = !DILocation(line: 3862, column: 14, scope: !5136)
!5245 = !DILocation(line: 3863, column: 15, scope: !5136)
!5246 = !DILocation(line: 3863, column: 23, scope: !5136)
!5247 = !DILocation(line: 3863, column: 17, scope: !5136)
!5248 = !DILocation(line: 3863, column: 16, scope: !5136)
!5249 = !DILocation(line: 3863, column: 13, scope: !5136)
!5250 = !DILocation(line: 3863, column: 14, scope: !5136)
!5251 = !DILocation(line: 3864, column: 35, scope: !5136)
!5252 = !DILocation(line: 3864, column: 41, scope: !5136)
!5253 = !DILocation(line: 3864, column: 19, scope: !5136)
!5254 = !DILocation(line: 3864, column: 61, scope: !5136)
!5255 = !DILocation(line: 3864, column: 67, scope: !5136)
!5256 = !DILocation(line: 3864, column: 45, scope: !5136)
!5257 = !DILocation(line: 3864, column: 44, scope: !5136)
!5258 = !DILocation(line: 3864, column: 17, scope: !5136)
!5259 = !DILocation(line: 3864, column: 18, scope: !5136)
!5260 = !DILocation(line: 3865, column: 35, scope: !5136)
!5261 = !DILocation(line: 3865, column: 41, scope: !5136)
!5262 = !DILocation(line: 3865, column: 19, scope: !5136)
!5263 = !DILocation(line: 3865, column: 61, scope: !5136)
!5264 = !DILocation(line: 3865, column: 67, scope: !5136)
!5265 = !DILocation(line: 3865, column: 45, scope: !5136)
!5266 = !DILocation(line: 3865, column: 44, scope: !5136)
!5267 = !DILocation(line: 3865, column: 17, scope: !5136)
!5268 = !DILocation(line: 3865, column: 18, scope: !5136)
!5269 = !DILocation(line: 3866, column: 26, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 3866, column: 11)
!5271 = !DILocation(line: 3866, column: 11, scope: !5270)
!5272 = !DILocation(line: 3866, column: 46, scope: !5270)
!5273 = !DILocation(line: 3866, column: 31, scope: !5270)
!5274 = !DILocation(line: 3866, column: 29, scope: !5270)
!5275 = !DILocation(line: 3866, column: 11, scope: !5136)
!5276 = !DILocation(line: 3871, column: 21, scope: !5277)
!5277 = distinct !DILexicalBlock(scope: !5278, file: !3, line: 3871, column: 15)
!5278 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 3867, column: 9)
!5279 = !DILocation(line: 3871, column: 32, scope: !5277)
!5280 = !DILocation(line: 3871, column: 23, scope: !5277)
!5281 = !DILocation(line: 3871, column: 15, scope: !5278)
!5282 = !DILocation(line: 3876, column: 33, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 3872, column: 13)
!5284 = !DILocation(line: 3876, column: 26, scope: !5283)
!5285 = !DILocation(line: 3876, column: 21, scope: !5283)
!5286 = !DILocation(line: 3876, column: 22, scope: !5283)
!5287 = !DILocation(line: 3877, column: 44, scope: !5283)
!5288 = !DILocation(line: 3877, column: 53, scope: !5283)
!5289 = !DILocation(line: 3877, column: 62, scope: !5283)
!5290 = !DILocation(line: 3877, column: 21, scope: !5283)
!5291 = !DILocation(line: 3877, column: 20, scope: !5283)
!5292 = !DILocation(line: 3879, column: 19, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 3879, column: 19)
!5294 = !DILocation(line: 3879, column: 25, scope: !5293)
!5295 = !DILocation(line: 3879, column: 19, scope: !5283)
!5296 = !DILocation(line: 3879, column: 38, scope: !5293)
!5297 = !DILocation(line: 3879, column: 32, scope: !5293)
!5298 = !DILocation(line: 3881, column: 43, scope: !5283)
!5299 = !DILocation(line: 3881, column: 21, scope: !5283)
!5300 = !DILocation(line: 3881, column: 20, scope: !5283)
!5301 = !DILocation(line: 3882, column: 25, scope: !5283)
!5302 = !DILocation(line: 3882, column: 54, scope: !5283)
!5303 = !DILocation(line: 3882, column: 64, scope: !5283)
!5304 = !DILocation(line: 3883, column: 17, scope: !5283)
!5305 = !DILocation(line: 3883, column: 27, scope: !5283)
!5306 = !DILocation(line: 3883, column: 31, scope: !5283)
!5307 = !DILocation(line: 3883, column: 41, scope: !5283)
!5308 = !DILocation(line: 3882, column: 31, scope: !5283)
!5309 = !DILocation(line: 3882, column: 30, scope: !5283)
!5310 = !DILocation(line: 3882, column: 21, scope: !5283)
!5311 = !DILocation(line: 3882, column: 24, scope: !5283)
!5312 = !DILocation(line: 3884, column: 27, scope: !5283)
!5313 = !DILocation(line: 3884, column: 56, scope: !5283)
!5314 = !DILocation(line: 3884, column: 66, scope: !5283)
!5315 = !DILocation(line: 3885, column: 17, scope: !5283)
!5316 = !DILocation(line: 3885, column: 27, scope: !5283)
!5317 = !DILocation(line: 3885, column: 33, scope: !5283)
!5318 = !DILocation(line: 3885, column: 43, scope: !5283)
!5319 = !DILocation(line: 3884, column: 33, scope: !5283)
!5320 = !DILocation(line: 3884, column: 32, scope: !5283)
!5321 = !DILocation(line: 3884, column: 21, scope: !5283)
!5322 = !DILocation(line: 3884, column: 26, scope: !5283)
!5323 = !DILocation(line: 3886, column: 26, scope: !5283)
!5324 = !DILocation(line: 3886, column: 55, scope: !5283)
!5325 = !DILocation(line: 3886, column: 65, scope: !5283)
!5326 = !DILocation(line: 3887, column: 17, scope: !5283)
!5327 = !DILocation(line: 3887, column: 27, scope: !5283)
!5328 = !DILocation(line: 3887, column: 32, scope: !5283)
!5329 = !DILocation(line: 3887, column: 42, scope: !5283)
!5330 = !DILocation(line: 3886, column: 32, scope: !5283)
!5331 = !DILocation(line: 3886, column: 31, scope: !5283)
!5332 = !DILocation(line: 3886, column: 21, scope: !5283)
!5333 = !DILocation(line: 3886, column: 25, scope: !5283)
!5334 = !DILocation(line: 3888, column: 29, scope: !5283)
!5335 = !DILocation(line: 3888, column: 58, scope: !5283)
!5336 = !DILocation(line: 3888, column: 68, scope: !5283)
!5337 = !DILocation(line: 3889, column: 17, scope: !5283)
!5338 = !DILocation(line: 3889, column: 27, scope: !5283)
!5339 = !DILocation(line: 3889, column: 35, scope: !5283)
!5340 = !DILocation(line: 3889, column: 45, scope: !5283)
!5341 = !DILocation(line: 3888, column: 35, scope: !5283)
!5342 = !DILocation(line: 3888, column: 34, scope: !5283)
!5343 = !DILocation(line: 3888, column: 21, scope: !5283)
!5344 = !DILocation(line: 3888, column: 28, scope: !5283)
!5345 = !DILocation(line: 3890, column: 19, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 3890, column: 19)
!5347 = !DILocation(line: 3890, column: 26, scope: !5346)
!5348 = !DILocation(line: 3890, column: 37, scope: !5346)
!5349 = !DILocation(line: 3890, column: 19, scope: !5283)
!5350 = !DILocation(line: 3891, column: 29, scope: !5346)
!5351 = !DILocation(line: 3891, column: 58, scope: !5346)
!5352 = !DILocation(line: 3891, column: 68, scope: !5346)
!5353 = !DILocation(line: 3892, column: 19, scope: !5346)
!5354 = !DILocation(line: 3892, column: 29, scope: !5346)
!5355 = !DILocation(line: 3892, column: 35, scope: !5346)
!5356 = !DILocation(line: 3892, column: 45, scope: !5346)
!5357 = !DILocation(line: 3891, column: 35, scope: !5346)
!5358 = !DILocation(line: 3891, column: 34, scope: !5346)
!5359 = !DILocation(line: 3891, column: 23, scope: !5346)
!5360 = !DILocation(line: 3891, column: 28, scope: !5346)
!5361 = !DILocation(line: 3891, column: 17, scope: !5346)
!5362 = !DILocation(line: 3893, column: 13, scope: !5283)
!5363 = !DILocation(line: 3899, column: 33, scope: !5364)
!5364 = distinct !DILexicalBlock(scope: !5277, file: !3, line: 3895, column: 13)
!5365 = !DILocation(line: 3899, column: 26, scope: !5364)
!5366 = !DILocation(line: 3899, column: 21, scope: !5364)
!5367 = !DILocation(line: 3899, column: 22, scope: !5364)
!5368 = !DILocation(line: 3900, column: 44, scope: !5364)
!5369 = !DILocation(line: 3900, column: 53, scope: !5364)
!5370 = !DILocation(line: 3900, column: 62, scope: !5364)
!5371 = !DILocation(line: 3900, column: 21, scope: !5364)
!5372 = !DILocation(line: 3900, column: 20, scope: !5364)
!5373 = !DILocation(line: 3902, column: 19, scope: !5374)
!5374 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 3902, column: 19)
!5375 = !DILocation(line: 3902, column: 25, scope: !5374)
!5376 = !DILocation(line: 3902, column: 19, scope: !5364)
!5377 = !DILocation(line: 3902, column: 38, scope: !5374)
!5378 = !DILocation(line: 3902, column: 32, scope: !5374)
!5379 = !DILocation(line: 3904, column: 43, scope: !5364)
!5380 = !DILocation(line: 3904, column: 21, scope: !5364)
!5381 = !DILocation(line: 3904, column: 20, scope: !5364)
!5382 = !DILocation(line: 3905, column: 25, scope: !5364)
!5383 = !DILocation(line: 3905, column: 54, scope: !5364)
!5384 = !DILocation(line: 3905, column: 64, scope: !5364)
!5385 = !DILocation(line: 3906, column: 17, scope: !5364)
!5386 = !DILocation(line: 3906, column: 27, scope: !5364)
!5387 = !DILocation(line: 3906, column: 31, scope: !5364)
!5388 = !DILocation(line: 3906, column: 41, scope: !5364)
!5389 = !DILocation(line: 3905, column: 31, scope: !5364)
!5390 = !DILocation(line: 3905, column: 30, scope: !5364)
!5391 = !DILocation(line: 3905, column: 21, scope: !5364)
!5392 = !DILocation(line: 3905, column: 24, scope: !5364)
!5393 = !DILocation(line: 3907, column: 27, scope: !5364)
!5394 = !DILocation(line: 3907, column: 56, scope: !5364)
!5395 = !DILocation(line: 3907, column: 66, scope: !5364)
!5396 = !DILocation(line: 3908, column: 17, scope: !5364)
!5397 = !DILocation(line: 3908, column: 27, scope: !5364)
!5398 = !DILocation(line: 3908, column: 33, scope: !5364)
!5399 = !DILocation(line: 3908, column: 43, scope: !5364)
!5400 = !DILocation(line: 3907, column: 33, scope: !5364)
!5401 = !DILocation(line: 3907, column: 32, scope: !5364)
!5402 = !DILocation(line: 3907, column: 21, scope: !5364)
!5403 = !DILocation(line: 3907, column: 26, scope: !5364)
!5404 = !DILocation(line: 3909, column: 26, scope: !5364)
!5405 = !DILocation(line: 3909, column: 55, scope: !5364)
!5406 = !DILocation(line: 3909, column: 65, scope: !5364)
!5407 = !DILocation(line: 3910, column: 17, scope: !5364)
!5408 = !DILocation(line: 3910, column: 27, scope: !5364)
!5409 = !DILocation(line: 3910, column: 32, scope: !5364)
!5410 = !DILocation(line: 3910, column: 42, scope: !5364)
!5411 = !DILocation(line: 3909, column: 32, scope: !5364)
!5412 = !DILocation(line: 3909, column: 31, scope: !5364)
!5413 = !DILocation(line: 3909, column: 21, scope: !5364)
!5414 = !DILocation(line: 3909, column: 25, scope: !5364)
!5415 = !DILocation(line: 3911, column: 29, scope: !5364)
!5416 = !DILocation(line: 3911, column: 58, scope: !5364)
!5417 = !DILocation(line: 3911, column: 68, scope: !5364)
!5418 = !DILocation(line: 3912, column: 17, scope: !5364)
!5419 = !DILocation(line: 3912, column: 27, scope: !5364)
!5420 = !DILocation(line: 3912, column: 35, scope: !5364)
!5421 = !DILocation(line: 3912, column: 45, scope: !5364)
!5422 = !DILocation(line: 3911, column: 35, scope: !5364)
!5423 = !DILocation(line: 3911, column: 34, scope: !5364)
!5424 = !DILocation(line: 3911, column: 21, scope: !5364)
!5425 = !DILocation(line: 3911, column: 28, scope: !5364)
!5426 = !DILocation(line: 3913, column: 19, scope: !5427)
!5427 = distinct !DILexicalBlock(scope: !5364, file: !3, line: 3913, column: 19)
!5428 = !DILocation(line: 3913, column: 26, scope: !5427)
!5429 = !DILocation(line: 3913, column: 37, scope: !5427)
!5430 = !DILocation(line: 3913, column: 19, scope: !5364)
!5431 = !DILocation(line: 3914, column: 29, scope: !5427)
!5432 = !DILocation(line: 3914, column: 58, scope: !5427)
!5433 = !DILocation(line: 3914, column: 68, scope: !5427)
!5434 = !DILocation(line: 3915, column: 19, scope: !5427)
!5435 = !DILocation(line: 3915, column: 29, scope: !5427)
!5436 = !DILocation(line: 3915, column: 35, scope: !5427)
!5437 = !DILocation(line: 3915, column: 45, scope: !5427)
!5438 = !DILocation(line: 3914, column: 35, scope: !5427)
!5439 = !DILocation(line: 3914, column: 34, scope: !5427)
!5440 = !DILocation(line: 3914, column: 23, scope: !5427)
!5441 = !DILocation(line: 3914, column: 28, scope: !5427)
!5442 = !DILocation(line: 3914, column: 17, scope: !5427)
!5443 = !DILocation(line: 3917, column: 9, scope: !5278)
!5444 = !DILocation(line: 3923, column: 21, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 3923, column: 15)
!5446 = distinct !DILexicalBlock(scope: !5270, file: !3, line: 3919, column: 9)
!5447 = !DILocation(line: 3923, column: 37, scope: !5445)
!5448 = !DILocation(line: 3923, column: 30, scope: !5445)
!5449 = !DILocation(line: 3923, column: 23, scope: !5445)
!5450 = !DILocation(line: 3923, column: 15, scope: !5446)
!5451 = !DILocation(line: 3928, column: 44, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 3924, column: 13)
!5453 = !DILocation(line: 3928, column: 53, scope: !5452)
!5454 = !DILocation(line: 3928, column: 62, scope: !5452)
!5455 = !DILocation(line: 3928, column: 21, scope: !5452)
!5456 = !DILocation(line: 3928, column: 20, scope: !5452)
!5457 = !DILocation(line: 3930, column: 19, scope: !5458)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 3930, column: 19)
!5459 = !DILocation(line: 3930, column: 25, scope: !5458)
!5460 = !DILocation(line: 3930, column: 19, scope: !5452)
!5461 = !DILocation(line: 3930, column: 38, scope: !5458)
!5462 = !DILocation(line: 3930, column: 32, scope: !5458)
!5463 = !DILocation(line: 3932, column: 43, scope: !5452)
!5464 = !DILocation(line: 3932, column: 21, scope: !5452)
!5465 = !DILocation(line: 3932, column: 20, scope: !5452)
!5466 = !DILocation(line: 3933, column: 25, scope: !5452)
!5467 = !DILocation(line: 3933, column: 54, scope: !5452)
!5468 = !DILocation(line: 3933, column: 64, scope: !5452)
!5469 = !DILocation(line: 3934, column: 17, scope: !5452)
!5470 = !DILocation(line: 3934, column: 27, scope: !5452)
!5471 = !DILocation(line: 3934, column: 31, scope: !5452)
!5472 = !DILocation(line: 3934, column: 41, scope: !5452)
!5473 = !DILocation(line: 3933, column: 31, scope: !5452)
!5474 = !DILocation(line: 3933, column: 30, scope: !5452)
!5475 = !DILocation(line: 3933, column: 21, scope: !5452)
!5476 = !DILocation(line: 3933, column: 24, scope: !5452)
!5477 = !DILocation(line: 3935, column: 27, scope: !5452)
!5478 = !DILocation(line: 3935, column: 56, scope: !5452)
!5479 = !DILocation(line: 3935, column: 66, scope: !5452)
!5480 = !DILocation(line: 3936, column: 17, scope: !5452)
!5481 = !DILocation(line: 3936, column: 27, scope: !5452)
!5482 = !DILocation(line: 3936, column: 33, scope: !5452)
!5483 = !DILocation(line: 3936, column: 43, scope: !5452)
!5484 = !DILocation(line: 3935, column: 33, scope: !5452)
!5485 = !DILocation(line: 3935, column: 32, scope: !5452)
!5486 = !DILocation(line: 3935, column: 21, scope: !5452)
!5487 = !DILocation(line: 3935, column: 26, scope: !5452)
!5488 = !DILocation(line: 3937, column: 26, scope: !5452)
!5489 = !DILocation(line: 3937, column: 55, scope: !5452)
!5490 = !DILocation(line: 3937, column: 65, scope: !5452)
!5491 = !DILocation(line: 3938, column: 17, scope: !5452)
!5492 = !DILocation(line: 3938, column: 27, scope: !5452)
!5493 = !DILocation(line: 3938, column: 32, scope: !5452)
!5494 = !DILocation(line: 3938, column: 42, scope: !5452)
!5495 = !DILocation(line: 3937, column: 32, scope: !5452)
!5496 = !DILocation(line: 3937, column: 31, scope: !5452)
!5497 = !DILocation(line: 3937, column: 21, scope: !5452)
!5498 = !DILocation(line: 3937, column: 25, scope: !5452)
!5499 = !DILocation(line: 3939, column: 29, scope: !5452)
!5500 = !DILocation(line: 3939, column: 58, scope: !5452)
!5501 = !DILocation(line: 3939, column: 68, scope: !5452)
!5502 = !DILocation(line: 3940, column: 17, scope: !5452)
!5503 = !DILocation(line: 3940, column: 27, scope: !5452)
!5504 = !DILocation(line: 3940, column: 35, scope: !5452)
!5505 = !DILocation(line: 3940, column: 45, scope: !5452)
!5506 = !DILocation(line: 3939, column: 35, scope: !5452)
!5507 = !DILocation(line: 3939, column: 34, scope: !5452)
!5508 = !DILocation(line: 3939, column: 21, scope: !5452)
!5509 = !DILocation(line: 3939, column: 28, scope: !5452)
!5510 = !DILocation(line: 3941, column: 19, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 3941, column: 19)
!5512 = !DILocation(line: 3941, column: 26, scope: !5511)
!5513 = !DILocation(line: 3941, column: 37, scope: !5511)
!5514 = !DILocation(line: 3941, column: 19, scope: !5452)
!5515 = !DILocation(line: 3942, column: 29, scope: !5511)
!5516 = !DILocation(line: 3942, column: 58, scope: !5511)
!5517 = !DILocation(line: 3942, column: 68, scope: !5511)
!5518 = !DILocation(line: 3943, column: 19, scope: !5511)
!5519 = !DILocation(line: 3943, column: 29, scope: !5511)
!5520 = !DILocation(line: 3943, column: 35, scope: !5511)
!5521 = !DILocation(line: 3943, column: 45, scope: !5511)
!5522 = !DILocation(line: 3942, column: 35, scope: !5511)
!5523 = !DILocation(line: 3942, column: 34, scope: !5511)
!5524 = !DILocation(line: 3942, column: 23, scope: !5511)
!5525 = !DILocation(line: 3942, column: 28, scope: !5511)
!5526 = !DILocation(line: 3942, column: 17, scope: !5511)
!5527 = !DILocation(line: 3944, column: 13, scope: !5452)
!5528 = !DILocation(line: 3950, column: 33, scope: !5529)
!5529 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 3946, column: 13)
!5530 = !DILocation(line: 3950, column: 26, scope: !5529)
!5531 = !DILocation(line: 3950, column: 21, scope: !5529)
!5532 = !DILocation(line: 3950, column: 22, scope: !5529)
!5533 = !DILocation(line: 3951, column: 33, scope: !5529)
!5534 = !DILocation(line: 3951, column: 26, scope: !5529)
!5535 = !DILocation(line: 3951, column: 21, scope: !5529)
!5536 = !DILocation(line: 3951, column: 22, scope: !5529)
!5537 = !DILocation(line: 3952, column: 44, scope: !5529)
!5538 = !DILocation(line: 3952, column: 53, scope: !5529)
!5539 = !DILocation(line: 3952, column: 62, scope: !5529)
!5540 = !DILocation(line: 3952, column: 21, scope: !5529)
!5541 = !DILocation(line: 3952, column: 20, scope: !5529)
!5542 = !DILocation(line: 3954, column: 19, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 3954, column: 19)
!5544 = !DILocation(line: 3954, column: 25, scope: !5543)
!5545 = !DILocation(line: 3954, column: 19, scope: !5529)
!5546 = !DILocation(line: 3954, column: 38, scope: !5543)
!5547 = !DILocation(line: 3954, column: 32, scope: !5543)
!5548 = !DILocation(line: 3956, column: 43, scope: !5529)
!5549 = !DILocation(line: 3956, column: 21, scope: !5529)
!5550 = !DILocation(line: 3956, column: 20, scope: !5529)
!5551 = !DILocation(line: 3957, column: 25, scope: !5529)
!5552 = !DILocation(line: 3957, column: 54, scope: !5529)
!5553 = !DILocation(line: 3957, column: 64, scope: !5529)
!5554 = !DILocation(line: 3958, column: 17, scope: !5529)
!5555 = !DILocation(line: 3958, column: 27, scope: !5529)
!5556 = !DILocation(line: 3958, column: 31, scope: !5529)
!5557 = !DILocation(line: 3958, column: 41, scope: !5529)
!5558 = !DILocation(line: 3957, column: 31, scope: !5529)
!5559 = !DILocation(line: 3957, column: 30, scope: !5529)
!5560 = !DILocation(line: 3957, column: 21, scope: !5529)
!5561 = !DILocation(line: 3957, column: 24, scope: !5529)
!5562 = !DILocation(line: 3959, column: 27, scope: !5529)
!5563 = !DILocation(line: 3959, column: 56, scope: !5529)
!5564 = !DILocation(line: 3959, column: 66, scope: !5529)
!5565 = !DILocation(line: 3960, column: 17, scope: !5529)
!5566 = !DILocation(line: 3960, column: 27, scope: !5529)
!5567 = !DILocation(line: 3960, column: 33, scope: !5529)
!5568 = !DILocation(line: 3960, column: 43, scope: !5529)
!5569 = !DILocation(line: 3959, column: 33, scope: !5529)
!5570 = !DILocation(line: 3959, column: 32, scope: !5529)
!5571 = !DILocation(line: 3959, column: 21, scope: !5529)
!5572 = !DILocation(line: 3959, column: 26, scope: !5529)
!5573 = !DILocation(line: 3961, column: 26, scope: !5529)
!5574 = !DILocation(line: 3961, column: 55, scope: !5529)
!5575 = !DILocation(line: 3961, column: 65, scope: !5529)
!5576 = !DILocation(line: 3962, column: 17, scope: !5529)
!5577 = !DILocation(line: 3962, column: 27, scope: !5529)
!5578 = !DILocation(line: 3962, column: 32, scope: !5529)
!5579 = !DILocation(line: 3962, column: 42, scope: !5529)
!5580 = !DILocation(line: 3961, column: 32, scope: !5529)
!5581 = !DILocation(line: 3961, column: 31, scope: !5529)
!5582 = !DILocation(line: 3961, column: 21, scope: !5529)
!5583 = !DILocation(line: 3961, column: 25, scope: !5529)
!5584 = !DILocation(line: 3963, column: 29, scope: !5529)
!5585 = !DILocation(line: 3963, column: 58, scope: !5529)
!5586 = !DILocation(line: 3963, column: 68, scope: !5529)
!5587 = !DILocation(line: 3964, column: 17, scope: !5529)
!5588 = !DILocation(line: 3964, column: 27, scope: !5529)
!5589 = !DILocation(line: 3964, column: 35, scope: !5529)
!5590 = !DILocation(line: 3964, column: 45, scope: !5529)
!5591 = !DILocation(line: 3963, column: 35, scope: !5529)
!5592 = !DILocation(line: 3963, column: 34, scope: !5529)
!5593 = !DILocation(line: 3963, column: 21, scope: !5529)
!5594 = !DILocation(line: 3963, column: 28, scope: !5529)
!5595 = !DILocation(line: 3965, column: 19, scope: !5596)
!5596 = distinct !DILexicalBlock(scope: !5529, file: !3, line: 3965, column: 19)
!5597 = !DILocation(line: 3965, column: 26, scope: !5596)
!5598 = !DILocation(line: 3965, column: 37, scope: !5596)
!5599 = !DILocation(line: 3965, column: 19, scope: !5529)
!5600 = !DILocation(line: 3966, column: 29, scope: !5596)
!5601 = !DILocation(line: 3966, column: 58, scope: !5596)
!5602 = !DILocation(line: 3966, column: 68, scope: !5596)
!5603 = !DILocation(line: 3967, column: 19, scope: !5596)
!5604 = !DILocation(line: 3967, column: 29, scope: !5596)
!5605 = !DILocation(line: 3967, column: 35, scope: !5596)
!5606 = !DILocation(line: 3967, column: 45, scope: !5596)
!5607 = !DILocation(line: 3966, column: 35, scope: !5596)
!5608 = !DILocation(line: 3966, column: 34, scope: !5596)
!5609 = !DILocation(line: 3966, column: 23, scope: !5596)
!5610 = !DILocation(line: 3966, column: 28, scope: !5596)
!5611 = !DILocation(line: 3966, column: 17, scope: !5596)
!5612 = !DILocation(line: 3970, column: 7, scope: !5136)
!5613 = !DILocalVariable(name: "pixels", scope: !5614, file: !3, line: 3975, type: !5034)
!5614 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3973, column: 5)
!5615 = !DILocation(line: 3975, column: 9, scope: !5614)
!5616 = !DILocation(line: 3977, column: 35, scope: !5614)
!5617 = !DILocation(line: 3977, column: 62, scope: !5614)
!5618 = !DILocation(line: 3977, column: 46, scope: !5614)
!5619 = !DILocation(line: 3978, column: 25, scope: !5614)
!5620 = !DILocation(line: 3978, column: 9, scope: !5614)
!5621 = !DILocation(line: 3978, column: 32, scope: !5614)
!5622 = !DILocation(line: 3977, column: 9, scope: !5614)
!5623 = !DILocation(line: 3977, column: 8, scope: !5614)
!5624 = !DILocation(line: 3979, column: 11, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5614, file: !3, line: 3979, column: 11)
!5626 = !DILocation(line: 3979, column: 13, scope: !5625)
!5627 = !DILocation(line: 3979, column: 11, scope: !5614)
!5628 = !DILocation(line: 3980, column: 9, scope: !5625)
!5629 = !DILocation(line: 3981, column: 45, scope: !5614)
!5630 = !DILocation(line: 3981, column: 15, scope: !5614)
!5631 = !DILocation(line: 3981, column: 14, scope: !5614)
!5632 = !DILocation(line: 3982, column: 28, scope: !5614)
!5633 = !DILocation(line: 3982, column: 34, scope: !5614)
!5634 = !DILocation(line: 3982, column: 7, scope: !5614)
!5635 = !DILocation(line: 3983, column: 28, scope: !5614)
!5636 = !DILocation(line: 3983, column: 34, scope: !5614)
!5637 = !DILocation(line: 3983, column: 36, scope: !5614)
!5638 = !DILocation(line: 3983, column: 7, scope: !5614)
!5639 = !DILocation(line: 3984, column: 7, scope: !5614)
!5640 = !DILocalVariable(name: "gamma", scope: !5641, file: !3, line: 3989, type: !855)
!5641 = distinct !DILexicalBlock(scope: !4401, file: !3, line: 3987, column: 5)
!5642 = !DILocation(line: 3989, column: 9, scope: !5641)
!5643 = !DILocalVariable(name: "pixels", scope: !5641, file: !3, line: 3992, type: !4404)
!5644 = !DILocation(line: 3992, column: 9, scope: !5641)
!5645 = !DILocalVariable(name: "alpha", scope: !5641, file: !3, line: 3995, type: !1271)
!5646 = !DILocation(line: 3995, column: 9, scope: !5641)
!5647 = !DILocalVariable(name: "dx", scope: !5641, file: !3, line: 3996, type: !1034)
!5648 = !DILocation(line: 3996, column: 9, scope: !5641)
!5649 = !DILocalVariable(name: "dy", scope: !5641, file: !3, line: 3997, type: !1034)
!5650 = !DILocation(line: 3997, column: 9, scope: !5641)
!5651 = !DILocalVariable(name: "delta", scope: !5641, file: !3, line: 4000, type: !1897)
!5652 = !DILocation(line: 4000, column: 9, scope: !5641)
!5653 = !DILocalVariable(name: "j", scope: !5641, file: !3, line: 4003, type: !813)
!5654 = !DILocation(line: 4003, column: 9, scope: !5641)
!5655 = !DILocalVariable(name: "n", scope: !5641, file: !3, line: 4004, type: !813)
!5656 = !DILocation(line: 4004, column: 9, scope: !5641)
!5657 = !DILocation(line: 4006, column: 35, scope: !5641)
!5658 = !DILocation(line: 4006, column: 62, scope: !5641)
!5659 = !DILocation(line: 4006, column: 56, scope: !5641)
!5660 = !DILocation(line: 4006, column: 46, scope: !5641)
!5661 = !DILocation(line: 4006, column: 64, scope: !5641)
!5662 = !DILocation(line: 4007, column: 15, scope: !5641)
!5663 = !DILocation(line: 4007, column: 9, scope: !5641)
!5664 = !DILocation(line: 4006, column: 67, scope: !5641)
!5665 = !DILocation(line: 4007, column: 17, scope: !5641)
!5666 = !DILocation(line: 4007, column: 24, scope: !5641)
!5667 = !DILocation(line: 4006, column: 9, scope: !5641)
!5668 = !DILocation(line: 4006, column: 8, scope: !5641)
!5669 = !DILocation(line: 4008, column: 11, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 4008, column: 11)
!5671 = !DILocation(line: 4008, column: 13, scope: !5670)
!5672 = !DILocation(line: 4008, column: 11, scope: !5641)
!5673 = !DILocation(line: 4009, column: 9, scope: !5670)
!5674 = !DILocation(line: 4010, column: 45, scope: !5641)
!5675 = !DILocation(line: 4010, column: 15, scope: !5641)
!5676 = !DILocation(line: 4010, column: 14, scope: !5641)
!5677 = !DILocation(line: 4011, column: 8, scope: !5641)
!5678 = !DILocation(line: 4012, column: 15, scope: !5641)
!5679 = !DILocation(line: 4012, column: 23, scope: !5641)
!5680 = !DILocation(line: 4012, column: 17, scope: !5641)
!5681 = !DILocation(line: 4012, column: 16, scope: !5641)
!5682 = !DILocation(line: 4012, column: 13, scope: !5641)
!5683 = !DILocation(line: 4012, column: 14, scope: !5641)
!5684 = !DILocation(line: 4013, column: 15, scope: !5641)
!5685 = !DILocation(line: 4013, column: 23, scope: !5641)
!5686 = !DILocation(line: 4013, column: 17, scope: !5641)
!5687 = !DILocation(line: 4013, column: 16, scope: !5641)
!5688 = !DILocation(line: 4013, column: 13, scope: !5641)
!5689 = !DILocation(line: 4013, column: 14, scope: !5641)
!5690 = !DILocation(line: 4014, column: 13, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5641, file: !3, line: 4014, column: 7)
!5692 = !DILocation(line: 4014, column: 12, scope: !5691)
!5693 = !DILocation(line: 4014, column: 20, scope: !5694)
!5694 = distinct !DILexicalBlock(scope: !5691, file: !3, line: 4014, column: 7)
!5695 = !DILocation(line: 4014, column: 22, scope: !5694)
!5696 = !DILocation(line: 4014, column: 7, scope: !5691)
!5697 = !DILocation(line: 4016, column: 52, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5694, file: !3, line: 4015, column: 7)
!5699 = !DILocation(line: 4016, column: 35, scope: !5698)
!5700 = !DILocation(line: 4016, column: 60, scope: !5698)
!5701 = !DILocation(line: 4016, column: 53, scope: !5698)
!5702 = !DILocation(line: 4016, column: 12, scope: !5698)
!5703 = !DILocation(line: 4016, column: 11, scope: !5698)
!5704 = !DILocation(line: 4017, column: 15, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 4017, column: 9)
!5706 = !DILocation(line: 4017, column: 14, scope: !5705)
!5707 = !DILocation(line: 4017, column: 22, scope: !5708)
!5708 = distinct !DILexicalBlock(scope: !5705, file: !3, line: 4017, column: 9)
!5709 = !DILocation(line: 4017, column: 24, scope: !5708)
!5710 = !DILocation(line: 4017, column: 9, scope: !5705)
!5711 = !DILocation(line: 4019, column: 32, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5708, file: !3, line: 4018, column: 9)
!5713 = !DILocation(line: 4019, column: 38, scope: !5712)
!5714 = !DILocation(line: 4019, column: 45, scope: !5712)
!5715 = !DILocation(line: 4019, column: 44, scope: !5712)
!5716 = !DILocation(line: 4019, column: 11, scope: !5712)
!5717 = !DILocation(line: 4020, column: 32, scope: !5712)
!5718 = !DILocation(line: 4020, column: 38, scope: !5712)
!5719 = !DILocation(line: 4020, column: 40, scope: !5712)
!5720 = !DILocation(line: 4020, column: 48, scope: !5712)
!5721 = !DILocation(line: 4020, column: 47, scope: !5712)
!5722 = !DILocation(line: 4020, column: 50, scope: !5712)
!5723 = !DILocation(line: 4020, column: 57, scope: !5712)
!5724 = !DILocation(line: 4020, column: 56, scope: !5712)
!5725 = !DILocation(line: 4020, column: 11, scope: !5712)
!5726 = !DILocation(line: 4021, column: 17, scope: !5712)
!5727 = !DILocation(line: 4021, column: 11, scope: !5712)
!5728 = !DILocation(line: 4021, column: 19, scope: !5712)
!5729 = !DILocation(line: 4022, column: 15, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 4022, column: 15)
!5731 = !DILocation(line: 4022, column: 22, scope: !5730)
!5732 = !DILocation(line: 4022, column: 28, scope: !5730)
!5733 = !DILocation(line: 4022, column: 15, scope: !5712)
!5734 = !DILocation(line: 4025, column: 17, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 4023, column: 13)
!5736 = !DILocation(line: 4024, column: 38, scope: !5735)
!5737 = !DILocation(line: 4024, column: 37, scope: !5735)
!5738 = !DILocation(line: 4024, column: 36, scope: !5735)
!5739 = !DILocation(line: 4024, column: 24, scope: !5735)
!5740 = !DILocation(line: 4024, column: 21, scope: !5735)
!5741 = !DILocation(line: 4024, column: 15, scope: !5735)
!5742 = !DILocation(line: 4024, column: 23, scope: !5735)
!5743 = !DILocation(line: 4026, column: 36, scope: !5735)
!5744 = !DILocation(line: 4026, column: 30, scope: !5735)
!5745 = !DILocation(line: 4026, column: 22, scope: !5735)
!5746 = !DILocation(line: 4026, column: 15, scope: !5735)
!5747 = !DILocation(line: 4026, column: 25, scope: !5735)
!5748 = !DILocation(line: 4026, column: 28, scope: !5735)
!5749 = !DILocation(line: 4027, column: 38, scope: !5735)
!5750 = !DILocation(line: 4027, column: 32, scope: !5735)
!5751 = !DILocation(line: 4027, column: 22, scope: !5735)
!5752 = !DILocation(line: 4027, column: 15, scope: !5735)
!5753 = !DILocation(line: 4027, column: 25, scope: !5735)
!5754 = !DILocation(line: 4027, column: 30, scope: !5735)
!5755 = !DILocation(line: 4028, column: 37, scope: !5735)
!5756 = !DILocation(line: 4028, column: 31, scope: !5735)
!5757 = !DILocation(line: 4028, column: 22, scope: !5735)
!5758 = !DILocation(line: 4028, column: 15, scope: !5735)
!5759 = !DILocation(line: 4028, column: 25, scope: !5735)
!5760 = !DILocation(line: 4028, column: 29, scope: !5735)
!5761 = !DILocation(line: 4029, column: 19, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 4029, column: 19)
!5763 = !DILocation(line: 4029, column: 26, scope: !5762)
!5764 = !DILocation(line: 4029, column: 37, scope: !5762)
!5765 = !DILocation(line: 4029, column: 19, scope: !5735)
!5766 = !DILocation(line: 4030, column: 40, scope: !5762)
!5767 = !DILocation(line: 4030, column: 34, scope: !5762)
!5768 = !DILocation(line: 4030, column: 24, scope: !5762)
!5769 = !DILocation(line: 4030, column: 17, scope: !5762)
!5770 = !DILocation(line: 4030, column: 27, scope: !5762)
!5771 = !DILocation(line: 4030, column: 32, scope: !5762)
!5772 = !DILocation(line: 4031, column: 13, scope: !5735)
!5773 = !DILocation(line: 4032, column: 43, scope: !5712)
!5774 = !DILocation(line: 4032, column: 62, scope: !5712)
!5775 = !DILocation(line: 4032, column: 45, scope: !5712)
!5776 = !DILocation(line: 4032, column: 44, scope: !5712)
!5777 = !DILocation(line: 4032, column: 37, scope: !5712)
!5778 = !DILocation(line: 4032, column: 14, scope: !5712)
!5779 = !DILocation(line: 4032, column: 13, scope: !5712)
!5780 = !DILocation(line: 4033, column: 23, scope: !5712)
!5781 = !DILocation(line: 4033, column: 17, scope: !5712)
!5782 = !DILocation(line: 4033, column: 16, scope: !5712)
!5783 = !DILocation(line: 4035, column: 15, scope: !5784)
!5784 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 4035, column: 15)
!5785 = !DILocation(line: 4035, column: 21, scope: !5784)
!5786 = !DILocation(line: 4035, column: 15, scope: !5712)
!5787 = !DILocation(line: 4035, column: 34, scope: !5784)
!5788 = !DILocation(line: 4035, column: 28, scope: !5784)
!5789 = !DILocation(line: 4037, column: 39, scope: !5712)
!5790 = !DILocation(line: 4037, column: 17, scope: !5712)
!5791 = !DILocation(line: 4037, column: 16, scope: !5712)
!5792 = !DILocation(line: 4038, column: 22, scope: !5712)
!5793 = !DILocation(line: 4038, column: 28, scope: !5712)
!5794 = !DILocation(line: 4038, column: 27, scope: !5712)
!5795 = !DILocation(line: 4038, column: 31, scope: !5712)
!5796 = !DILocation(line: 4038, column: 30, scope: !5712)
!5797 = !DILocation(line: 4038, column: 41, scope: !5712)
!5798 = !DILocation(line: 4038, column: 34, scope: !5712)
!5799 = !DILocation(line: 4038, column: 44, scope: !5712)
!5800 = !DILocation(line: 4038, column: 33, scope: !5712)
!5801 = !DILocation(line: 4038, column: 17, scope: !5712)
!5802 = !DILocation(line: 4038, column: 20, scope: !5712)
!5803 = !DILocation(line: 4039, column: 24, scope: !5712)
!5804 = !DILocation(line: 4039, column: 30, scope: !5712)
!5805 = !DILocation(line: 4039, column: 29, scope: !5712)
!5806 = !DILocation(line: 4039, column: 33, scope: !5712)
!5807 = !DILocation(line: 4039, column: 32, scope: !5712)
!5808 = !DILocation(line: 4039, column: 43, scope: !5712)
!5809 = !DILocation(line: 4039, column: 36, scope: !5712)
!5810 = !DILocation(line: 4039, column: 46, scope: !5712)
!5811 = !DILocation(line: 4039, column: 35, scope: !5712)
!5812 = !DILocation(line: 4039, column: 17, scope: !5712)
!5813 = !DILocation(line: 4039, column: 22, scope: !5712)
!5814 = !DILocation(line: 4040, column: 23, scope: !5712)
!5815 = !DILocation(line: 4040, column: 29, scope: !5712)
!5816 = !DILocation(line: 4040, column: 28, scope: !5712)
!5817 = !DILocation(line: 4040, column: 32, scope: !5712)
!5818 = !DILocation(line: 4040, column: 31, scope: !5712)
!5819 = !DILocation(line: 4040, column: 42, scope: !5712)
!5820 = !DILocation(line: 4040, column: 35, scope: !5712)
!5821 = !DILocation(line: 4040, column: 45, scope: !5712)
!5822 = !DILocation(line: 4040, column: 34, scope: !5712)
!5823 = !DILocation(line: 4040, column: 17, scope: !5712)
!5824 = !DILocation(line: 4040, column: 21, scope: !5712)
!5825 = !DILocation(line: 4041, column: 15, scope: !5826)
!5826 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 4041, column: 15)
!5827 = !DILocation(line: 4041, column: 22, scope: !5826)
!5828 = !DILocation(line: 4041, column: 28, scope: !5826)
!5829 = !DILocation(line: 4041, column: 15, scope: !5712)
!5830 = !DILocation(line: 4042, column: 28, scope: !5826)
!5831 = !DILocation(line: 4042, column: 31, scope: !5826)
!5832 = !DILocation(line: 4042, column: 30, scope: !5826)
!5833 = !DILocation(line: 4042, column: 41, scope: !5826)
!5834 = !DILocation(line: 4042, column: 34, scope: !5826)
!5835 = !DILocation(line: 4042, column: 44, scope: !5826)
!5836 = !DILocation(line: 4042, column: 33, scope: !5826)
!5837 = !DILocation(line: 4042, column: 19, scope: !5826)
!5838 = !DILocation(line: 4042, column: 26, scope: !5826)
!5839 = !DILocation(line: 4042, column: 13, scope: !5826)
!5840 = !DILocation(line: 4043, column: 15, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5712, file: !3, line: 4043, column: 15)
!5842 = !DILocation(line: 4043, column: 22, scope: !5841)
!5843 = !DILocation(line: 4043, column: 33, scope: !5841)
!5844 = !DILocation(line: 4043, column: 15, scope: !5712)
!5845 = !DILocation(line: 4044, column: 26, scope: !5841)
!5846 = !DILocation(line: 4044, column: 32, scope: !5841)
!5847 = !DILocation(line: 4044, column: 31, scope: !5841)
!5848 = !DILocation(line: 4044, column: 35, scope: !5841)
!5849 = !DILocation(line: 4044, column: 34, scope: !5841)
!5850 = !DILocation(line: 4044, column: 45, scope: !5841)
!5851 = !DILocation(line: 4044, column: 38, scope: !5841)
!5852 = !DILocation(line: 4044, column: 48, scope: !5841)
!5853 = !DILocation(line: 4044, column: 37, scope: !5841)
!5854 = !DILocation(line: 4044, column: 19, scope: !5841)
!5855 = !DILocation(line: 4044, column: 24, scope: !5841)
!5856 = !DILocation(line: 4044, column: 13, scope: !5841)
!5857 = !DILocation(line: 4045, column: 12, scope: !5712)
!5858 = !DILocation(line: 4046, column: 12, scope: !5712)
!5859 = !DILocation(line: 4047, column: 9, scope: !5712)
!5860 = !DILocation(line: 4017, column: 31, scope: !5708)
!5861 = !DILocation(line: 4017, column: 9, scope: !5708)
!5862 = distinct !{!5862, !5710, !5863}
!5863 = !DILocation(line: 4047, column: 9, scope: !5705)
!5864 = !DILocation(line: 4048, column: 7, scope: !5698)
!5865 = !DILocation(line: 4014, column: 29, scope: !5694)
!5866 = !DILocation(line: 4014, column: 7, scope: !5694)
!5867 = distinct !{!5867, !5696, !5868}
!5868 = !DILocation(line: 4048, column: 7, scope: !5691)
!5869 = !DILocation(line: 4049, column: 7, scope: !5641)
!5870 = !DILocation(line: 4052, column: 3, scope: !4371)
!5871 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !5872, file: !5872, line: 92, type: !5873, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!5872 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5873 = !DISubroutineType(types: !5874)
!5874 = !{null, !1168, !1032, !1252, !5875}
!5875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!5876 = !DILocalVariable(name: "image", arg: 1, scope: !5871, file: !5872, line: 92, type: !1168)
!5877 = !DILocation(line: 92, column: 54, scope: !5871)
!5878 = !DILocalVariable(name: "color", arg: 2, scope: !5871, file: !5872, line: 93, type: !1032)
!5879 = !DILocation(line: 93, column: 22, scope: !5871)
!5880 = !DILocalVariable(name: "index", arg: 3, scope: !5871, file: !5872, line: 93, type: !1252)
!5881 = !DILocation(line: 93, column: 47, scope: !5871)
!5882 = !DILocalVariable(name: "pixel", arg: 4, scope: !5871, file: !5872, line: 93, type: !5875)
!5883 = !DILocation(line: 93, column: 72, scope: !5871)
!5884 = !DILocation(line: 95, column: 31, scope: !5871)
!5885 = !DILocation(line: 95, column: 14, scope: !5871)
!5886 = !DILocation(line: 95, column: 3, scope: !5871)
!5887 = !DILocation(line: 95, column: 10, scope: !5871)
!5888 = !DILocation(line: 95, column: 13, scope: !5871)
!5889 = !DILocation(line: 96, column: 33, scope: !5871)
!5890 = !DILocation(line: 96, column: 16, scope: !5871)
!5891 = !DILocation(line: 96, column: 3, scope: !5871)
!5892 = !DILocation(line: 96, column: 10, scope: !5871)
!5893 = !DILocation(line: 96, column: 15, scope: !5871)
!5894 = !DILocation(line: 97, column: 32, scope: !5871)
!5895 = !DILocation(line: 97, column: 15, scope: !5871)
!5896 = !DILocation(line: 97, column: 3, scope: !5871)
!5897 = !DILocation(line: 97, column: 10, scope: !5871)
!5898 = !DILocation(line: 97, column: 14, scope: !5871)
!5899 = !DILocation(line: 98, column: 35, scope: !5871)
!5900 = !DILocation(line: 98, column: 18, scope: !5871)
!5901 = !DILocation(line: 98, column: 3, scope: !5871)
!5902 = !DILocation(line: 98, column: 10, scope: !5871)
!5903 = !DILocation(line: 98, column: 17, scope: !5871)
!5904 = !DILocation(line: 99, column: 8, scope: !5905)
!5905 = distinct !DILexicalBlock(scope: !5871, file: !5872, line: 99, column: 7)
!5906 = !DILocation(line: 99, column: 15, scope: !5905)
!5907 = !DILocation(line: 99, column: 26, scope: !5905)
!5908 = !DILocation(line: 99, column: 45, scope: !5905)
!5909 = !DILocation(line: 100, column: 8, scope: !5905)
!5910 = !DILocation(line: 100, column: 14, scope: !5905)
!5911 = !DILocation(line: 99, column: 7, scope: !5871)
!5912 = !DILocation(line: 101, column: 35, scope: !5905)
!5913 = !DILocation(line: 101, column: 18, scope: !5905)
!5914 = !DILocation(line: 101, column: 5, scope: !5905)
!5915 = !DILocation(line: 101, column: 12, scope: !5905)
!5916 = !DILocation(line: 101, column: 17, scope: !5905)
!5917 = !DILocation(line: 102, column: 1, scope: !5871)
!5918 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !5872, file: !5872, line: 78, type: !5919, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!5919 = !DISubroutineType(types: !5920)
!5920 = !{!855, !3008}
!5921 = !DILocalVariable(name: "x", arg: 1, scope: !5918, file: !5872, line: 78, type: !3008)
!5922 = !DILocation(line: 78, column: 57, scope: !5918)
!5923 = !DILocalVariable(name: "sign", scope: !5918, file: !5872, line: 81, type: !855)
!5924 = !DILocation(line: 81, column: 5, scope: !5918)
!5925 = !DILocation(line: 86, column: 8, scope: !5918)
!5926 = !DILocation(line: 86, column: 10, scope: !5918)
!5927 = !DILocation(line: 86, column: 7, scope: !5918)
!5928 = !DILocation(line: 87, column: 8, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5918, file: !5872, line: 87, column: 7)
!5930 = !DILocation(line: 87, column: 13, scope: !5929)
!5931 = !DILocation(line: 87, column: 12, scope: !5929)
!5932 = !DILocation(line: 87, column: 16, scope: !5929)
!5933 = !DILocation(line: 87, column: 7, scope: !5918)
!5934 = !DILocation(line: 88, column: 16, scope: !5929)
!5935 = !DILocation(line: 88, column: 15, scope: !5929)
!5936 = !DILocation(line: 88, column: 5, scope: !5929)
!5937 = !DILocation(line: 89, column: 10, scope: !5918)
!5938 = !DILocation(line: 89, column: 14, scope: !5918)
!5939 = !DILocation(line: 89, column: 3, scope: !5918)
!5940 = !DILocation(line: 90, column: 1, scope: !5918)
!5941 = distinct !DISubprogram(name: "BicubicInterpolate", scope: !3, file: !3, line: 3531, type: !5942, scopeLine: 3533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !5944, !3008, !5875}
!5944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5945, size: 64)
!5945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1417)
!5946 = !DILocalVariable(name: "pixels", arg: 1, scope: !5941, file: !3, line: 3531, type: !5944)
!5947 = !DILocation(line: 3531, column: 57, scope: !5941)
!5948 = !DILocalVariable(name: "dx", arg: 2, scope: !5941, file: !3, line: 3531, type: !3008)
!5949 = !DILocation(line: 3531, column: 77, scope: !5941)
!5950 = !DILocalVariable(name: "pixel", arg: 3, scope: !5941, file: !3, line: 3532, type: !5875)
!5951 = !DILocation(line: 3532, column: 22, scope: !5941)
!5952 = !DILocalVariable(name: "dx2", scope: !5941, file: !3, line: 3535, type: !1034)
!5953 = !DILocation(line: 3535, column: 5, scope: !5941)
!5954 = !DILocalVariable(name: "p", scope: !5941, file: !3, line: 3536, type: !1034)
!5955 = !DILocation(line: 3536, column: 5, scope: !5941)
!5956 = !DILocalVariable(name: "q", scope: !5941, file: !3, line: 3537, type: !1034)
!5957 = !DILocation(line: 3537, column: 5, scope: !5941)
!5958 = !DILocalVariable(name: "r", scope: !5941, file: !3, line: 3538, type: !1034)
!5959 = !DILocation(line: 3538, column: 5, scope: !5941)
!5960 = !DILocalVariable(name: "s", scope: !5941, file: !3, line: 3539, type: !1034)
!5961 = !DILocation(line: 3539, column: 5, scope: !5941)
!5962 = !DILocation(line: 3541, column: 7, scope: !5941)
!5963 = !DILocation(line: 3541, column: 10, scope: !5941)
!5964 = !DILocation(line: 3541, column: 9, scope: !5941)
!5965 = !DILocation(line: 3541, column: 6, scope: !5941)
!5966 = !DILocation(line: 3542, column: 6, scope: !5941)
!5967 = !DILocation(line: 3542, column: 16, scope: !5941)
!5968 = !DILocation(line: 3542, column: 20, scope: !5941)
!5969 = !DILocation(line: 3542, column: 30, scope: !5941)
!5970 = !DILocation(line: 3542, column: 19, scope: !5941)
!5971 = !DILocation(line: 3542, column: 36, scope: !5941)
!5972 = !DILocation(line: 3542, column: 46, scope: !5941)
!5973 = !DILocation(line: 3542, column: 50, scope: !5941)
!5974 = !DILocation(line: 3542, column: 60, scope: !5941)
!5975 = !DILocation(line: 3542, column: 49, scope: !5941)
!5976 = !DILocation(line: 3542, column: 34, scope: !5941)
!5977 = !DILocation(line: 3542, column: 4, scope: !5941)
!5978 = !DILocation(line: 3543, column: 6, scope: !5941)
!5979 = !DILocation(line: 3543, column: 16, scope: !5941)
!5980 = !DILocation(line: 3543, column: 20, scope: !5941)
!5981 = !DILocation(line: 3543, column: 30, scope: !5941)
!5982 = !DILocation(line: 3543, column: 19, scope: !5941)
!5983 = !DILocation(line: 3543, column: 35, scope: !5941)
!5984 = !DILocation(line: 3543, column: 34, scope: !5941)
!5985 = !DILocation(line: 3543, column: 4, scope: !5941)
!5986 = !DILocation(line: 3544, column: 5, scope: !5941)
!5987 = !DILocation(line: 3544, column: 15, scope: !5941)
!5988 = !DILocation(line: 3544, column: 19, scope: !5941)
!5989 = !DILocation(line: 3544, column: 29, scope: !5941)
!5990 = !DILocation(line: 3544, column: 18, scope: !5941)
!5991 = !DILocation(line: 3544, column: 4, scope: !5941)
!5992 = !DILocation(line: 3545, column: 5, scope: !5941)
!5993 = !DILocation(line: 3545, column: 15, scope: !5941)
!5994 = !DILocation(line: 3545, column: 4, scope: !5941)
!5995 = !DILocation(line: 3546, column: 15, scope: !5941)
!5996 = !DILocation(line: 3546, column: 18, scope: !5941)
!5997 = !DILocation(line: 3546, column: 17, scope: !5941)
!5998 = !DILocation(line: 3546, column: 22, scope: !5941)
!5999 = !DILocation(line: 3546, column: 21, scope: !5941)
!6000 = !DILocation(line: 3546, column: 26, scope: !5941)
!6001 = !DILocation(line: 3546, column: 30, scope: !5941)
!6002 = !DILocation(line: 3546, column: 29, scope: !5941)
!6003 = !DILocation(line: 3546, column: 25, scope: !5941)
!6004 = !DILocation(line: 3546, column: 24, scope: !5941)
!6005 = !DILocation(line: 3546, column: 34, scope: !5941)
!6006 = !DILocation(line: 3546, column: 37, scope: !5941)
!6007 = !DILocation(line: 3546, column: 36, scope: !5941)
!6008 = !DILocation(line: 3546, column: 32, scope: !5941)
!6009 = !DILocation(line: 3546, column: 40, scope: !5941)
!6010 = !DILocation(line: 3546, column: 39, scope: !5941)
!6011 = !DILocation(line: 3546, column: 14, scope: !5941)
!6012 = !DILocation(line: 3546, column: 3, scope: !5941)
!6013 = !DILocation(line: 3546, column: 10, scope: !5941)
!6014 = !DILocation(line: 3546, column: 13, scope: !5941)
!6015 = !DILocation(line: 3547, column: 6, scope: !5941)
!6016 = !DILocation(line: 3547, column: 16, scope: !5941)
!6017 = !DILocation(line: 3547, column: 22, scope: !5941)
!6018 = !DILocation(line: 3547, column: 32, scope: !5941)
!6019 = !DILocation(line: 3547, column: 21, scope: !5941)
!6020 = !DILocation(line: 3547, column: 40, scope: !5941)
!6021 = !DILocation(line: 3547, column: 50, scope: !5941)
!6022 = !DILocation(line: 3547, column: 56, scope: !5941)
!6023 = !DILocation(line: 3547, column: 66, scope: !5941)
!6024 = !DILocation(line: 3547, column: 55, scope: !5941)
!6025 = !DILocation(line: 3547, column: 38, scope: !5941)
!6026 = !DILocation(line: 3547, column: 4, scope: !5941)
!6027 = !DILocation(line: 3548, column: 6, scope: !5941)
!6028 = !DILocation(line: 3548, column: 16, scope: !5941)
!6029 = !DILocation(line: 3548, column: 22, scope: !5941)
!6030 = !DILocation(line: 3548, column: 32, scope: !5941)
!6031 = !DILocation(line: 3548, column: 21, scope: !5941)
!6032 = !DILocation(line: 3548, column: 39, scope: !5941)
!6033 = !DILocation(line: 3548, column: 38, scope: !5941)
!6034 = !DILocation(line: 3548, column: 4, scope: !5941)
!6035 = !DILocation(line: 3549, column: 5, scope: !5941)
!6036 = !DILocation(line: 3549, column: 15, scope: !5941)
!6037 = !DILocation(line: 3549, column: 21, scope: !5941)
!6038 = !DILocation(line: 3549, column: 31, scope: !5941)
!6039 = !DILocation(line: 3549, column: 20, scope: !5941)
!6040 = !DILocation(line: 3549, column: 4, scope: !5941)
!6041 = !DILocation(line: 3550, column: 5, scope: !5941)
!6042 = !DILocation(line: 3550, column: 15, scope: !5941)
!6043 = !DILocation(line: 3550, column: 4, scope: !5941)
!6044 = !DILocation(line: 3551, column: 17, scope: !5941)
!6045 = !DILocation(line: 3551, column: 20, scope: !5941)
!6046 = !DILocation(line: 3551, column: 19, scope: !5941)
!6047 = !DILocation(line: 3551, column: 24, scope: !5941)
!6048 = !DILocation(line: 3551, column: 23, scope: !5941)
!6049 = !DILocation(line: 3551, column: 28, scope: !5941)
!6050 = !DILocation(line: 3551, column: 32, scope: !5941)
!6051 = !DILocation(line: 3551, column: 31, scope: !5941)
!6052 = !DILocation(line: 3551, column: 27, scope: !5941)
!6053 = !DILocation(line: 3551, column: 26, scope: !5941)
!6054 = !DILocation(line: 3551, column: 36, scope: !5941)
!6055 = !DILocation(line: 3551, column: 39, scope: !5941)
!6056 = !DILocation(line: 3551, column: 38, scope: !5941)
!6057 = !DILocation(line: 3551, column: 34, scope: !5941)
!6058 = !DILocation(line: 3551, column: 42, scope: !5941)
!6059 = !DILocation(line: 3551, column: 41, scope: !5941)
!6060 = !DILocation(line: 3551, column: 16, scope: !5941)
!6061 = !DILocation(line: 3551, column: 3, scope: !5941)
!6062 = !DILocation(line: 3551, column: 10, scope: !5941)
!6063 = !DILocation(line: 3551, column: 15, scope: !5941)
!6064 = !DILocation(line: 3552, column: 6, scope: !5941)
!6065 = !DILocation(line: 3552, column: 16, scope: !5941)
!6066 = !DILocation(line: 3552, column: 21, scope: !5941)
!6067 = !DILocation(line: 3552, column: 31, scope: !5941)
!6068 = !DILocation(line: 3552, column: 20, scope: !5941)
!6069 = !DILocation(line: 3552, column: 38, scope: !5941)
!6070 = !DILocation(line: 3552, column: 48, scope: !5941)
!6071 = !DILocation(line: 3552, column: 53, scope: !5941)
!6072 = !DILocation(line: 3552, column: 63, scope: !5941)
!6073 = !DILocation(line: 3552, column: 52, scope: !5941)
!6074 = !DILocation(line: 3552, column: 36, scope: !5941)
!6075 = !DILocation(line: 3552, column: 4, scope: !5941)
!6076 = !DILocation(line: 3553, column: 6, scope: !5941)
!6077 = !DILocation(line: 3553, column: 16, scope: !5941)
!6078 = !DILocation(line: 3553, column: 21, scope: !5941)
!6079 = !DILocation(line: 3553, column: 31, scope: !5941)
!6080 = !DILocation(line: 3553, column: 20, scope: !5941)
!6081 = !DILocation(line: 3553, column: 37, scope: !5941)
!6082 = !DILocation(line: 3553, column: 36, scope: !5941)
!6083 = !DILocation(line: 3553, column: 4, scope: !5941)
!6084 = !DILocation(line: 3554, column: 5, scope: !5941)
!6085 = !DILocation(line: 3554, column: 15, scope: !5941)
!6086 = !DILocation(line: 3554, column: 20, scope: !5941)
!6087 = !DILocation(line: 3554, column: 30, scope: !5941)
!6088 = !DILocation(line: 3554, column: 19, scope: !5941)
!6089 = !DILocation(line: 3554, column: 4, scope: !5941)
!6090 = !DILocation(line: 3555, column: 5, scope: !5941)
!6091 = !DILocation(line: 3555, column: 15, scope: !5941)
!6092 = !DILocation(line: 3555, column: 4, scope: !5941)
!6093 = !DILocation(line: 3556, column: 16, scope: !5941)
!6094 = !DILocation(line: 3556, column: 19, scope: !5941)
!6095 = !DILocation(line: 3556, column: 18, scope: !5941)
!6096 = !DILocation(line: 3556, column: 23, scope: !5941)
!6097 = !DILocation(line: 3556, column: 22, scope: !5941)
!6098 = !DILocation(line: 3556, column: 27, scope: !5941)
!6099 = !DILocation(line: 3556, column: 31, scope: !5941)
!6100 = !DILocation(line: 3556, column: 30, scope: !5941)
!6101 = !DILocation(line: 3556, column: 26, scope: !5941)
!6102 = !DILocation(line: 3556, column: 25, scope: !5941)
!6103 = !DILocation(line: 3556, column: 35, scope: !5941)
!6104 = !DILocation(line: 3556, column: 38, scope: !5941)
!6105 = !DILocation(line: 3556, column: 37, scope: !5941)
!6106 = !DILocation(line: 3556, column: 33, scope: !5941)
!6107 = !DILocation(line: 3556, column: 41, scope: !5941)
!6108 = !DILocation(line: 3556, column: 40, scope: !5941)
!6109 = !DILocation(line: 3556, column: 15, scope: !5941)
!6110 = !DILocation(line: 3556, column: 3, scope: !5941)
!6111 = !DILocation(line: 3556, column: 10, scope: !5941)
!6112 = !DILocation(line: 3556, column: 14, scope: !5941)
!6113 = !DILocation(line: 3557, column: 6, scope: !5941)
!6114 = !DILocation(line: 3557, column: 16, scope: !5941)
!6115 = !DILocation(line: 3557, column: 24, scope: !5941)
!6116 = !DILocation(line: 3557, column: 34, scope: !5941)
!6117 = !DILocation(line: 3557, column: 23, scope: !5941)
!6118 = !DILocation(line: 3557, column: 44, scope: !5941)
!6119 = !DILocation(line: 3557, column: 54, scope: !5941)
!6120 = !DILocation(line: 3557, column: 62, scope: !5941)
!6121 = !DILocation(line: 3557, column: 72, scope: !5941)
!6122 = !DILocation(line: 3557, column: 61, scope: !5941)
!6123 = !DILocation(line: 3557, column: 42, scope: !5941)
!6124 = !DILocation(line: 3557, column: 4, scope: !5941)
!6125 = !DILocation(line: 3558, column: 6, scope: !5941)
!6126 = !DILocation(line: 3558, column: 16, scope: !5941)
!6127 = !DILocation(line: 3558, column: 24, scope: !5941)
!6128 = !DILocation(line: 3558, column: 34, scope: !5941)
!6129 = !DILocation(line: 3558, column: 23, scope: !5941)
!6130 = !DILocation(line: 3558, column: 43, scope: !5941)
!6131 = !DILocation(line: 3558, column: 42, scope: !5941)
!6132 = !DILocation(line: 3558, column: 4, scope: !5941)
!6133 = !DILocation(line: 3559, column: 5, scope: !5941)
!6134 = !DILocation(line: 3559, column: 15, scope: !5941)
!6135 = !DILocation(line: 3559, column: 23, scope: !5941)
!6136 = !DILocation(line: 3559, column: 33, scope: !5941)
!6137 = !DILocation(line: 3559, column: 22, scope: !5941)
!6138 = !DILocation(line: 3559, column: 4, scope: !5941)
!6139 = !DILocation(line: 3560, column: 5, scope: !5941)
!6140 = !DILocation(line: 3560, column: 15, scope: !5941)
!6141 = !DILocation(line: 3560, column: 4, scope: !5941)
!6142 = !DILocation(line: 3561, column: 19, scope: !5941)
!6143 = !DILocation(line: 3561, column: 22, scope: !5941)
!6144 = !DILocation(line: 3561, column: 21, scope: !5941)
!6145 = !DILocation(line: 3561, column: 26, scope: !5941)
!6146 = !DILocation(line: 3561, column: 25, scope: !5941)
!6147 = !DILocation(line: 3561, column: 30, scope: !5941)
!6148 = !DILocation(line: 3561, column: 34, scope: !5941)
!6149 = !DILocation(line: 3561, column: 33, scope: !5941)
!6150 = !DILocation(line: 3561, column: 29, scope: !5941)
!6151 = !DILocation(line: 3561, column: 28, scope: !5941)
!6152 = !DILocation(line: 3561, column: 38, scope: !5941)
!6153 = !DILocation(line: 3561, column: 41, scope: !5941)
!6154 = !DILocation(line: 3561, column: 40, scope: !5941)
!6155 = !DILocation(line: 3561, column: 36, scope: !5941)
!6156 = !DILocation(line: 3561, column: 44, scope: !5941)
!6157 = !DILocation(line: 3561, column: 43, scope: !5941)
!6158 = !DILocation(line: 3561, column: 18, scope: !5941)
!6159 = !DILocation(line: 3561, column: 3, scope: !5941)
!6160 = !DILocation(line: 3561, column: 10, scope: !5941)
!6161 = !DILocation(line: 3561, column: 17, scope: !5941)
!6162 = !DILocation(line: 3562, column: 7, scope: !6163)
!6163 = distinct !DILexicalBlock(scope: !5941, file: !3, line: 3562, column: 7)
!6164 = !DILocation(line: 3562, column: 14, scope: !6163)
!6165 = !DILocation(line: 3562, column: 25, scope: !6163)
!6166 = !DILocation(line: 3562, column: 7, scope: !5941)
!6167 = !DILocation(line: 3564, column: 10, scope: !6168)
!6168 = distinct !DILexicalBlock(scope: !6163, file: !3, line: 3563, column: 5)
!6169 = !DILocation(line: 3564, column: 20, scope: !6168)
!6170 = !DILocation(line: 3564, column: 26, scope: !6168)
!6171 = !DILocation(line: 3564, column: 36, scope: !6168)
!6172 = !DILocation(line: 3564, column: 25, scope: !6168)
!6173 = !DILocation(line: 3564, column: 44, scope: !6168)
!6174 = !DILocation(line: 3564, column: 54, scope: !6168)
!6175 = !DILocation(line: 3564, column: 60, scope: !6168)
!6176 = !DILocation(line: 3564, column: 70, scope: !6168)
!6177 = !DILocation(line: 3564, column: 59, scope: !6168)
!6178 = !DILocation(line: 3564, column: 42, scope: !6168)
!6179 = !DILocation(line: 3564, column: 8, scope: !6168)
!6180 = !DILocation(line: 3565, column: 10, scope: !6168)
!6181 = !DILocation(line: 3565, column: 20, scope: !6168)
!6182 = !DILocation(line: 3565, column: 26, scope: !6168)
!6183 = !DILocation(line: 3565, column: 36, scope: !6168)
!6184 = !DILocation(line: 3565, column: 25, scope: !6168)
!6185 = !DILocation(line: 3565, column: 43, scope: !6168)
!6186 = !DILocation(line: 3565, column: 42, scope: !6168)
!6187 = !DILocation(line: 3565, column: 8, scope: !6168)
!6188 = !DILocation(line: 3566, column: 9, scope: !6168)
!6189 = !DILocation(line: 3566, column: 19, scope: !6168)
!6190 = !DILocation(line: 3566, column: 25, scope: !6168)
!6191 = !DILocation(line: 3566, column: 35, scope: !6168)
!6192 = !DILocation(line: 3566, column: 24, scope: !6168)
!6193 = !DILocation(line: 3566, column: 8, scope: !6168)
!6194 = !DILocation(line: 3567, column: 9, scope: !6168)
!6195 = !DILocation(line: 3567, column: 19, scope: !6168)
!6196 = !DILocation(line: 3567, column: 8, scope: !6168)
!6197 = !DILocation(line: 3568, column: 21, scope: !6168)
!6198 = !DILocation(line: 3568, column: 24, scope: !6168)
!6199 = !DILocation(line: 3568, column: 23, scope: !6168)
!6200 = !DILocation(line: 3568, column: 28, scope: !6168)
!6201 = !DILocation(line: 3568, column: 27, scope: !6168)
!6202 = !DILocation(line: 3568, column: 32, scope: !6168)
!6203 = !DILocation(line: 3568, column: 36, scope: !6168)
!6204 = !DILocation(line: 3568, column: 35, scope: !6168)
!6205 = !DILocation(line: 3568, column: 31, scope: !6168)
!6206 = !DILocation(line: 3568, column: 30, scope: !6168)
!6207 = !DILocation(line: 3568, column: 40, scope: !6168)
!6208 = !DILocation(line: 3568, column: 43, scope: !6168)
!6209 = !DILocation(line: 3568, column: 42, scope: !6168)
!6210 = !DILocation(line: 3568, column: 38, scope: !6168)
!6211 = !DILocation(line: 3568, column: 46, scope: !6168)
!6212 = !DILocation(line: 3568, column: 45, scope: !6168)
!6213 = !DILocation(line: 3568, column: 20, scope: !6168)
!6214 = !DILocation(line: 3568, column: 7, scope: !6168)
!6215 = !DILocation(line: 3568, column: 14, scope: !6168)
!6216 = !DILocation(line: 3568, column: 19, scope: !6168)
!6217 = !DILocation(line: 3569, column: 5, scope: !6168)
!6218 = !DILocation(line: 3570, column: 1, scope: !5941)
!6219 = distinct !DISubprogram(name: "MagickPixelLuma", scope: !6220, file: !6220, line: 104, type: !6221, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6220 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!1034, !5944}
!6223 = !DILocalVariable(name: "pixel", arg: 1, scope: !6219, file: !6220, line: 105, type: !5944)
!6224 = !DILocation(line: 105, column: 28, scope: !6219)
!6225 = !DILocalVariable(name: "blue", scope: !6219, file: !6220, line: 108, type: !1034)
!6226 = !DILocation(line: 108, column: 5, scope: !6219)
!6227 = !DILocalVariable(name: "green", scope: !6219, file: !6220, line: 109, type: !1034)
!6228 = !DILocation(line: 109, column: 5, scope: !6219)
!6229 = !DILocalVariable(name: "red", scope: !6219, file: !6220, line: 110, type: !1034)
!6230 = !DILocation(line: 110, column: 5, scope: !6219)
!6231 = !DILocation(line: 112, column: 7, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6219, file: !6220, line: 112, column: 7)
!6233 = !DILocation(line: 112, column: 14, scope: !6232)
!6234 = !DILocation(line: 112, column: 25, scope: !6232)
!6235 = !DILocation(line: 112, column: 7, scope: !6219)
!6236 = !DILocation(line: 113, column: 12, scope: !6232)
!6237 = !DILocation(line: 113, column: 19, scope: !6232)
!6238 = !DILocation(line: 113, column: 5, scope: !6232)
!6239 = !DILocation(line: 114, column: 7, scope: !6240)
!6240 = distinct !DILexicalBlock(scope: !6219, file: !6220, line: 114, column: 7)
!6241 = !DILocation(line: 114, column: 14, scope: !6240)
!6242 = !DILocation(line: 114, column: 25, scope: !6240)
!6243 = !DILocation(line: 114, column: 7, scope: !6219)
!6244 = !DILocation(line: 115, column: 21, scope: !6240)
!6245 = !DILocation(line: 115, column: 28, scope: !6240)
!6246 = !DILocation(line: 115, column: 20, scope: !6240)
!6247 = !DILocation(line: 115, column: 41, scope: !6240)
!6248 = !DILocation(line: 115, column: 48, scope: !6240)
!6249 = !DILocation(line: 115, column: 40, scope: !6240)
!6250 = !DILocation(line: 115, column: 31, scope: !6240)
!6251 = !DILocation(line: 115, column: 63, scope: !6240)
!6252 = !DILocation(line: 115, column: 70, scope: !6240)
!6253 = !DILocation(line: 115, column: 62, scope: !6240)
!6254 = !DILocation(line: 115, column: 53, scope: !6240)
!6255 = !DILocation(line: 115, column: 11, scope: !6240)
!6256 = !DILocation(line: 115, column: 5, scope: !6240)
!6257 = !DILocation(line: 116, column: 24, scope: !6219)
!6258 = !DILocation(line: 116, column: 31, scope: !6219)
!6259 = !DILocation(line: 116, column: 7, scope: !6219)
!6260 = !DILocation(line: 116, column: 6, scope: !6219)
!6261 = !DILocation(line: 117, column: 26, scope: !6219)
!6262 = !DILocation(line: 117, column: 33, scope: !6219)
!6263 = !DILocation(line: 117, column: 9, scope: !6219)
!6264 = !DILocation(line: 117, column: 8, scope: !6219)
!6265 = !DILocation(line: 118, column: 25, scope: !6219)
!6266 = !DILocation(line: 118, column: 32, scope: !6219)
!6267 = !DILocation(line: 118, column: 8, scope: !6219)
!6268 = !DILocation(line: 118, column: 7, scope: !6219)
!6269 = !DILocation(line: 119, column: 19, scope: !6219)
!6270 = !DILocation(line: 119, column: 18, scope: !6219)
!6271 = !DILocation(line: 119, column: 32, scope: !6219)
!6272 = !DILocation(line: 119, column: 31, scope: !6219)
!6273 = !DILocation(line: 119, column: 22, scope: !6219)
!6274 = !DILocation(line: 119, column: 47, scope: !6219)
!6275 = !DILocation(line: 119, column: 46, scope: !6219)
!6276 = !DILocation(line: 119, column: 37, scope: !6219)
!6277 = !DILocation(line: 119, column: 9, scope: !6219)
!6278 = !DILocation(line: 119, column: 3, scope: !6219)
!6279 = !DILocation(line: 120, column: 1, scope: !6219)
!6280 = distinct !DISubprogram(name: "MeshInterpolate", scope: !3, file: !3, line: 3589, type: !6281, scopeLine: 3591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6281 = !DISubroutineType(types: !6282)
!6282 = !{!855, !6283, !3008, !3008, !3008}
!6283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6284, size: 64)
!6284 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1897)
!6285 = !DILocalVariable(name: "delta", arg: 1, scope: !6280, file: !3, line: 3589, type: !6283)
!6286 = !DILocation(line: 3589, column: 55, scope: !6280)
!6287 = !DILocalVariable(name: "p", arg: 2, scope: !6280, file: !3, line: 3589, type: !3008)
!6288 = !DILocation(line: 3589, column: 74, scope: !6280)
!6289 = !DILocalVariable(name: "x", arg: 3, scope: !6280, file: !3, line: 3590, type: !3008)
!6290 = !DILocation(line: 3590, column: 16, scope: !6280)
!6291 = !DILocalVariable(name: "y", arg: 4, scope: !6280, file: !3, line: 3590, type: !3008)
!6292 = !DILocation(line: 3590, column: 31, scope: !6280)
!6293 = !DILocation(line: 3592, column: 10, scope: !6280)
!6294 = !DILocation(line: 3592, column: 17, scope: !6280)
!6295 = !DILocation(line: 3592, column: 19, scope: !6280)
!6296 = !DILocation(line: 3592, column: 18, scope: !6280)
!6297 = !DILocation(line: 3592, column: 21, scope: !6280)
!6298 = !DILocation(line: 3592, column: 28, scope: !6280)
!6299 = !DILocation(line: 3592, column: 30, scope: !6280)
!6300 = !DILocation(line: 3592, column: 29, scope: !6280)
!6301 = !DILocation(line: 3592, column: 20, scope: !6280)
!6302 = !DILocation(line: 3592, column: 37, scope: !6280)
!6303 = !DILocation(line: 3592, column: 44, scope: !6280)
!6304 = !DILocation(line: 3592, column: 36, scope: !6280)
!6305 = !DILocation(line: 3592, column: 46, scope: !6280)
!6306 = !DILocation(line: 3592, column: 53, scope: !6280)
!6307 = !DILocation(line: 3592, column: 45, scope: !6280)
!6308 = !DILocation(line: 3592, column: 56, scope: !6280)
!6309 = !DILocation(line: 3592, column: 55, scope: !6280)
!6310 = !DILocation(line: 3592, column: 31, scope: !6280)
!6311 = !DILocation(line: 3592, column: 3, scope: !6280)
!6312 = distinct !DISubprogram(name: "NearestNeighbor", scope: !3, file: !3, line: 3595, type: !6313, scopeLine: 3596, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!813, !1034}
!6315 = !DILocalVariable(name: "x", arg: 1, scope: !6312, file: !3, line: 3595, type: !1034)
!6316 = !DILocation(line: 3595, column: 54, scope: !6312)
!6317 = !DILocation(line: 3597, column: 7, scope: !6318)
!6318 = distinct !DILexicalBlock(scope: !6312, file: !3, line: 3597, column: 7)
!6319 = !DILocation(line: 3597, column: 9, scope: !6318)
!6320 = !DILocation(line: 3597, column: 7, scope: !6312)
!6321 = !DILocation(line: 3598, column: 23, scope: !6318)
!6322 = !DILocation(line: 3598, column: 24, scope: !6318)
!6323 = !DILocation(line: 3598, column: 12, scope: !6318)
!6324 = !DILocation(line: 3598, column: 5, scope: !6318)
!6325 = !DILocation(line: 3599, column: 21, scope: !6312)
!6326 = !DILocation(line: 3599, column: 22, scope: !6312)
!6327 = !DILocation(line: 3599, column: 10, scope: !6312)
!6328 = !DILocation(line: 3599, column: 3, scope: !6312)
!6329 = !DILocation(line: 3600, column: 1, scope: !6312)
!6330 = distinct !DISubprogram(name: "CubicWeightingFunction", scope: !3, file: !3, line: 3572, type: !6331, scopeLine: 3573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!1034, !2639}
!6333 = !DILocalVariable(name: "x", arg: 1, scope: !6330, file: !3, line: 3572, type: !2639)
!6334 = !DILocation(line: 3572, column: 74, scope: !6330)
!6335 = !DILocalVariable(name: "alpha", scope: !6330, file: !3, line: 3575, type: !1034)
!6336 = !DILocation(line: 3575, column: 5, scope: !6330)
!6337 = !DILocalVariable(name: "gamma", scope: !6330, file: !3, line: 3576, type: !1034)
!6338 = !DILocation(line: 3576, column: 5, scope: !6330)
!6339 = !DILocation(line: 3578, column: 19, scope: !6330)
!6340 = !DILocation(line: 3578, column: 20, scope: !6330)
!6341 = !DILocation(line: 3578, column: 9, scope: !6330)
!6342 = !DILocation(line: 3578, column: 8, scope: !6330)
!6343 = !DILocation(line: 3579, column: 13, scope: !6330)
!6344 = !DILocation(line: 3579, column: 12, scope: !6330)
!6345 = !DILocation(line: 3579, column: 19, scope: !6330)
!6346 = !DILocation(line: 3579, column: 18, scope: !6330)
!6347 = !DILocation(line: 3579, column: 25, scope: !6330)
!6348 = !DILocation(line: 3579, column: 24, scope: !6330)
!6349 = !DILocation(line: 3579, column: 9, scope: !6330)
!6350 = !DILocation(line: 3579, column: 8, scope: !6330)
!6351 = !DILocation(line: 3580, column: 19, scope: !6330)
!6352 = !DILocation(line: 3580, column: 20, scope: !6330)
!6353 = !DILocation(line: 3580, column: 9, scope: !6330)
!6354 = !DILocation(line: 3580, column: 8, scope: !6330)
!6355 = !DILocation(line: 3581, column: 14, scope: !6330)
!6356 = !DILocation(line: 3581, column: 13, scope: !6330)
!6357 = !DILocation(line: 3581, column: 20, scope: !6330)
!6358 = !DILocation(line: 3581, column: 19, scope: !6330)
!6359 = !DILocation(line: 3581, column: 26, scope: !6330)
!6360 = !DILocation(line: 3581, column: 25, scope: !6330)
!6361 = !DILocation(line: 3581, column: 8, scope: !6330)
!6362 = !DILocation(line: 3582, column: 19, scope: !6330)
!6363 = !DILocation(line: 3582, column: 20, scope: !6330)
!6364 = !DILocation(line: 3582, column: 9, scope: !6330)
!6365 = !DILocation(line: 3582, column: 8, scope: !6330)
!6366 = !DILocation(line: 3583, column: 14, scope: !6330)
!6367 = !DILocation(line: 3583, column: 13, scope: !6330)
!6368 = !DILocation(line: 3583, column: 20, scope: !6330)
!6369 = !DILocation(line: 3583, column: 19, scope: !6330)
!6370 = !DILocation(line: 3583, column: 26, scope: !6330)
!6371 = !DILocation(line: 3583, column: 25, scope: !6330)
!6372 = !DILocation(line: 3583, column: 8, scope: !6330)
!6373 = !DILocation(line: 3584, column: 19, scope: !6330)
!6374 = !DILocation(line: 3584, column: 20, scope: !6330)
!6375 = !DILocation(line: 3584, column: 9, scope: !6330)
!6376 = !DILocation(line: 3584, column: 8, scope: !6330)
!6377 = !DILocation(line: 3585, column: 14, scope: !6330)
!6378 = !DILocation(line: 3585, column: 13, scope: !6330)
!6379 = !DILocation(line: 3585, column: 20, scope: !6330)
!6380 = !DILocation(line: 3585, column: 19, scope: !6330)
!6381 = !DILocation(line: 3585, column: 26, scope: !6330)
!6382 = !DILocation(line: 3585, column: 25, scope: !6330)
!6383 = !DILocation(line: 3585, column: 8, scope: !6330)
!6384 = !DILocation(line: 3586, column: 10, scope: !6330)
!6385 = !DILocation(line: 3586, column: 15, scope: !6330)
!6386 = !DILocation(line: 3586, column: 9, scope: !6330)
!6387 = !DILocation(line: 3586, column: 3, scope: !6330)
!6388 = distinct !DISubprogram(name: "InterpretImageAttributes", scope: !3, file: !3, line: 4088, type: !6389, scopeLine: 4090, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6389 = !DISubroutineType(types: !6390)
!6390 = !{!806, !1111, !818, !943}
!6391 = !DILocalVariable(name: "image_info", arg: 1, scope: !6388, file: !3, line: 4088, type: !1111)
!6392 = !DILocation(line: 4088, column: 62, scope: !6388)
!6393 = !DILocalVariable(name: "image", arg: 2, scope: !6388, file: !3, line: 4089, type: !818)
!6394 = !DILocation(line: 4089, column: 10, scope: !6388)
!6395 = !DILocalVariable(name: "embed_text", arg: 3, scope: !6388, file: !3, line: 4089, type: !943)
!6396 = !DILocation(line: 4089, column: 28, scope: !6388)
!6397 = !DILocation(line: 4091, column: 10, scope: !6388)
!6398 = !DILocation(line: 4092, column: 35, scope: !6388)
!6399 = !DILocation(line: 4092, column: 46, scope: !6388)
!6400 = !DILocation(line: 4092, column: 52, scope: !6388)
!6401 = !DILocation(line: 4092, column: 10, scope: !6388)
!6402 = !DILocation(line: 4092, column: 3, scope: !6388)
!6403 = distinct !DISubprogram(name: "InversesRGBCompandor", scope: !3, file: !3, line: 4117, type: !6331, scopeLine: 4118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6404 = !DILocalVariable(name: "pixel", arg: 1, scope: !6403, file: !3, line: 4117, type: !2639)
!6405 = !DILocation(line: 4117, column: 71, scope: !6403)
!6406 = !DILocation(line: 4119, column: 7, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 4119, column: 7)
!6408 = !DILocation(line: 4119, column: 13, scope: !6407)
!6409 = !DILocation(line: 4119, column: 7, scope: !6403)
!6410 = !DILocation(line: 4120, column: 12, scope: !6407)
!6411 = !DILocation(line: 4120, column: 17, scope: !6407)
!6412 = !DILocation(line: 4120, column: 11, scope: !6407)
!6413 = !DILocation(line: 4120, column: 5, scope: !6407)
!6414 = !DILocation(line: 4121, column: 41, scope: !6403)
!6415 = !DILocation(line: 4121, column: 40, scope: !6403)
!6416 = !DILocation(line: 4121, column: 46, scope: !6403)
!6417 = !DILocation(line: 4121, column: 53, scope: !6403)
!6418 = !DILocation(line: 4121, column: 23, scope: !6403)
!6419 = !DILocation(line: 4121, column: 22, scope: !6403)
!6420 = !DILocation(line: 4121, column: 9, scope: !6403)
!6421 = !DILocation(line: 4121, column: 3, scope: !6403)
!6422 = !DILocation(line: 4122, column: 1, scope: !6403)
!6423 = distinct !DISubprogram(name: "IsMagickInstantiated", scope: !3, file: !3, line: 4144, type: !2695, scopeLine: 4145, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6424 = !DILocation(line: 4146, column: 10, scope: !6423)
!6425 = !DILocation(line: 4146, column: 3, scope: !6423)
!6426 = distinct !DISubprogram(name: "IsSubimage", scope: !3, file: !3, line: 4175, type: !6427, scopeLine: 4177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6427 = !DISubroutineType(types: !6428)
!6428 = !{!7, !943, !1222}
!6429 = !DILocalVariable(name: "geometry", arg: 1, scope: !6426, file: !3, line: 4175, type: !943)
!6430 = !DILocation(line: 4175, column: 50, scope: !6426)
!6431 = !DILocalVariable(name: "pedantic", arg: 2, scope: !6426, file: !3, line: 4176, type: !1222)
!6432 = !DILocation(line: 4176, column: 22, scope: !6426)
!6433 = !DILocation(line: 4178, column: 10, scope: !6426)
!6434 = !DILocation(line: 4179, column: 7, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 4179, column: 7)
!6436 = !DILocation(line: 4179, column: 16, scope: !6435)
!6437 = !DILocation(line: 4179, column: 7, scope: !6426)
!6438 = !DILocation(line: 4180, column: 5, scope: !6435)
!6439 = !DILocation(line: 4181, column: 15, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 4181, column: 7)
!6441 = !DILocation(line: 4181, column: 8, scope: !6440)
!6442 = !DILocation(line: 4181, column: 29, scope: !6440)
!6443 = !DILocation(line: 4181, column: 47, scope: !6440)
!6444 = !DILocation(line: 4182, column: 15, scope: !6440)
!6445 = !DILocation(line: 4182, column: 8, scope: !6440)
!6446 = !DILocation(line: 4182, column: 29, scope: !6440)
!6447 = !DILocation(line: 4181, column: 7, scope: !6426)
!6448 = !DILocation(line: 4183, column: 5, scope: !6440)
!6449 = !DILocation(line: 4184, column: 8, scope: !6450)
!6450 = distinct !DILexicalBlock(scope: !6426, file: !3, line: 4184, column: 7)
!6451 = !DILocation(line: 4184, column: 17, scope: !6450)
!6452 = !DILocation(line: 4184, column: 33, scope: !6450)
!6453 = !DILocation(line: 4184, column: 44, scope: !6450)
!6454 = !DILocation(line: 4184, column: 37, scope: !6450)
!6455 = !DILocation(line: 4184, column: 58, scope: !6450)
!6456 = !DILocation(line: 4184, column: 7, scope: !6426)
!6457 = !DILocation(line: 4185, column: 5, scope: !6450)
!6458 = !DILocation(line: 4186, column: 3, scope: !6426)
!6459 = !DILocation(line: 4187, column: 1, scope: !6426)
!6460 = distinct !DISubprogram(name: "LevelImageColors", scope: !3, file: !3, line: 4234, type: !6461, scopeLine: 4237, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6461 = !DISubroutineType(types: !6462)
!6462 = !{!834, !818, !1652, !5944, !5944, !1759}
!6463 = !DILocalVariable(name: "image", arg: 1, scope: !6460, file: !3, line: 4234, type: !818)
!6464 = !DILocation(line: 4234, column: 43, scope: !6460)
!6465 = !DILocalVariable(name: "channel", arg: 2, scope: !6460, file: !3, line: 4234, type: !1652)
!6466 = !DILocation(line: 4234, column: 67, scope: !6460)
!6467 = !DILocalVariable(name: "black_color", arg: 3, scope: !6460, file: !3, line: 4235, type: !5944)
!6468 = !DILocation(line: 4235, column: 28, scope: !6460)
!6469 = !DILocalVariable(name: "white_color", arg: 4, scope: !6460, file: !3, line: 4235, type: !5944)
!6470 = !DILocation(line: 4235, column: 65, scope: !6460)
!6471 = !DILocalVariable(name: "invert", arg: 5, scope: !6460, file: !3, line: 4236, type: !1759)
!6472 = !DILocation(line: 4236, column: 27, scope: !6460)
!6473 = !DILocation(line: 4238, column: 34, scope: !6460)
!6474 = !DILocation(line: 4238, column: 40, scope: !6460)
!6475 = !DILocation(line: 4238, column: 48, scope: !6460)
!6476 = !DILocation(line: 4238, column: 60, scope: !6460)
!6477 = !DILocation(line: 4238, column: 72, scope: !6460)
!6478 = !DILocation(line: 4238, column: 10, scope: !6460)
!6479 = !DILocation(line: 4238, column: 3, scope: !6460)
!6480 = distinct !DISubprogram(name: "LiberateMemory", scope: !3, file: !3, line: 4264, type: !6481, scopeLine: 4265, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6481 = !DISubroutineType(types: !6482)
!6482 = !{null, !6483}
!6483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!6484 = !DILocalVariable(name: "memory", arg: 1, scope: !6480, file: !3, line: 4264, type: !6483)
!6485 = !DILocation(line: 4264, column: 41, scope: !6480)
!6486 = !DILocation(line: 4267, column: 10, scope: !6480)
!6487 = !DILocation(line: 4268, column: 8, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6480, file: !3, line: 4268, column: 7)
!6489 = !DILocation(line: 4268, column: 7, scope: !6488)
!6490 = !DILocation(line: 4268, column: 15, scope: !6488)
!6491 = !DILocation(line: 4268, column: 7, scope: !6480)
!6492 = !DILocation(line: 4269, column: 5, scope: !6488)
!6493 = !DILocation(line: 4270, column: 9, scope: !6480)
!6494 = !DILocation(line: 4270, column: 8, scope: !6480)
!6495 = !DILocation(line: 4270, column: 3, scope: !6480)
!6496 = !DILocation(line: 4271, column: 4, scope: !6480)
!6497 = !DILocation(line: 4271, column: 10, scope: !6480)
!6498 = !DILocation(line: 4272, column: 1, scope: !6480)
!6499 = distinct !DISubprogram(name: "LiberateSemaphoreInfo", scope: !3, file: !3, line: 4300, type: !1496, scopeLine: 4301, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6500 = !DILocalVariable(name: "semaphore_info", arg: 1, scope: !6499, file: !3, line: 4300, type: !1498)
!6501 = !DILocation(line: 4300, column: 57, scope: !6499)
!6502 = !DILocation(line: 4302, column: 10, scope: !6499)
!6503 = !DILocation(line: 4303, column: 24, scope: !6499)
!6504 = !DILocation(line: 4303, column: 23, scope: !6499)
!6505 = !DILocation(line: 4303, column: 3, scope: !6499)
!6506 = !DILocation(line: 4304, column: 1, scope: !6499)
!6507 = distinct !DISubprogram(name: "MagickIncarnate", scope: !3, file: !3, line: 4333, type: !4364, scopeLine: 4334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6508 = !DILocalVariable(name: "path", arg: 1, scope: !6507, file: !3, line: 4333, type: !943)
!6509 = !DILocation(line: 4333, column: 47, scope: !6507)
!6510 = !DILocation(line: 4335, column: 10, scope: !6507)
!6511 = !DILocation(line: 4336, column: 21, scope: !6507)
!6512 = !DILocation(line: 4336, column: 3, scope: !6507)
!6513 = !DILocation(line: 4337, column: 1, scope: !6507)
!6514 = distinct !DISubprogram(name: "MagickMonitor", scope: !3, file: !3, line: 4371, type: !941, scopeLine: 4374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6515 = !DILocalVariable(name: "text", arg: 1, scope: !6514, file: !3, line: 4371, type: !943)
!6516 = !DILocation(line: 4371, column: 58, scope: !6514)
!6517 = !DILocalVariable(name: "offset", arg: 2, scope: !6514, file: !3, line: 4372, type: !945)
!6518 = !DILocation(line: 4372, column: 26, scope: !6514)
!6519 = !DILocalVariable(name: "span", arg: 3, scope: !6514, file: !3, line: 4372, type: !948)
!6520 = !DILocation(line: 4372, column: 54, scope: !6514)
!6521 = !DILocalVariable(name: "client_data", arg: 4, scope: !6514, file: !3, line: 4373, type: !805)
!6522 = !DILocation(line: 4373, column: 9, scope: !6514)
!6523 = !DILocalVariable(name: "exception", scope: !6514, file: !3, line: 4376, type: !1057)
!6524 = !DILocation(line: 4376, column: 6, scope: !6514)
!6525 = !DILocalVariable(name: "status", scope: !6514, file: !3, line: 4379, type: !834)
!6526 = !DILocation(line: 4379, column: 5, scope: !6514)
!6527 = !DILocation(line: 4384, column: 59, scope: !6514)
!6528 = !DILocation(line: 4384, column: 10, scope: !6514)
!6529 = !DILocation(line: 4386, column: 9, scope: !6514)
!6530 = !DILocation(line: 4387, column: 13, scope: !6514)
!6531 = !DILocation(line: 4387, column: 12, scope: !6514)
!6532 = !DILocation(line: 4388, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6514, file: !3, line: 4388, column: 7)
!6534 = !DILocation(line: 4388, column: 23, scope: !6533)
!6535 = !DILocation(line: 4388, column: 7, scope: !6514)
!6536 = !DILocation(line: 4389, column: 14, scope: !6533)
!6537 = !DILocation(line: 4389, column: 31, scope: !6533)
!6538 = !DILocation(line: 4389, column: 36, scope: !6533)
!6539 = !DILocation(line: 4389, column: 43, scope: !6533)
!6540 = !DILocation(line: 4389, column: 48, scope: !6533)
!6541 = !DILocation(line: 4389, column: 12, scope: !6533)
!6542 = !DILocation(line: 4389, column: 11, scope: !6533)
!6543 = !DILocation(line: 4389, column: 5, scope: !6533)
!6544 = !DILocation(line: 4390, column: 34, scope: !6514)
!6545 = !DILocation(line: 4390, column: 13, scope: !6514)
!6546 = !DILocation(line: 4390, column: 12, scope: !6514)
!6547 = !DILocation(line: 4391, column: 10, scope: !6514)
!6548 = !DILocation(line: 4391, column: 3, scope: !6514)
!6549 = distinct !DISubprogram(name: "MapImage", scope: !3, file: !3, line: 4431, type: !6550, scopeLine: 4433, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6550 = !DISubroutineType(types: !6551)
!6551 = !{!834, !818, !1168, !1759}
!6552 = !DILocalVariable(name: "image", arg: 1, scope: !6549, file: !3, line: 4431, type: !818)
!6553 = !DILocation(line: 4431, column: 48, scope: !6549)
!6554 = !DILocalVariable(name: "map_image", arg: 2, scope: !6549, file: !3, line: 4431, type: !1168)
!6555 = !DILocation(line: 4431, column: 67, scope: !6549)
!6556 = !DILocalVariable(name: "dither", arg: 3, scope: !6549, file: !3, line: 4432, type: !1759)
!6557 = !DILocation(line: 4432, column: 27, scope: !6549)
!6558 = !DILocalVariable(name: "quantize_info", scope: !6549, file: !3, line: 4435, type: !1535)
!6559 = !DILocation(line: 4435, column: 5, scope: !6549)
!6560 = !DILocation(line: 4442, column: 7, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6549, file: !3, line: 4442, column: 7)
!6562 = !DILocation(line: 4442, column: 14, scope: !6561)
!6563 = !DILocation(line: 4442, column: 20, scope: !6561)
!6564 = !DILocation(line: 4442, column: 7, scope: !6549)
!6565 = !DILocation(line: 4443, column: 61, scope: !6561)
!6566 = !DILocation(line: 4443, column: 68, scope: !6561)
!6567 = !DILocation(line: 4443, column: 12, scope: !6561)
!6568 = !DILocation(line: 4443, column: 5, scope: !6561)
!6569 = !DILocation(line: 4446, column: 3, scope: !6549)
!6570 = !DILocation(line: 4447, column: 24, scope: !6549)
!6571 = !DILocation(line: 4447, column: 17, scope: !6549)
!6572 = !DILocation(line: 4447, column: 23, scope: !6549)
!6573 = !DILocation(line: 4448, column: 36, scope: !6549)
!6574 = !DILocation(line: 4448, column: 42, scope: !6549)
!6575 = !DILocation(line: 4448, column: 10, scope: !6549)
!6576 = !DILocation(line: 4448, column: 3, scope: !6549)
!6577 = distinct !DISubprogram(name: "MapImages", scope: !3, file: !3, line: 4488, type: !6550, scopeLine: 4490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6578 = !DILocalVariable(name: "images", arg: 1, scope: !6577, file: !3, line: 4488, type: !818)
!6579 = !DILocation(line: 4488, column: 49, scope: !6577)
!6580 = !DILocalVariable(name: "map_image", arg: 2, scope: !6577, file: !3, line: 4488, type: !1168)
!6581 = !DILocation(line: 4488, column: 69, scope: !6577)
!6582 = !DILocalVariable(name: "dither", arg: 3, scope: !6577, file: !3, line: 4489, type: !1759)
!6583 = !DILocation(line: 4489, column: 27, scope: !6577)
!6584 = !DILocalVariable(name: "quantize_info", scope: !6577, file: !3, line: 4492, type: !1535)
!6585 = !DILocation(line: 4492, column: 5, scope: !6577)
!6586 = !DILocation(line: 4496, column: 7, scope: !6587)
!6587 = distinct !DILexicalBlock(scope: !6577, file: !3, line: 4496, column: 7)
!6588 = !DILocation(line: 4496, column: 15, scope: !6587)
!6589 = !DILocation(line: 4496, column: 21, scope: !6587)
!6590 = !DILocation(line: 4496, column: 7, scope: !6577)
!6591 = !DILocation(line: 4497, column: 61, scope: !6587)
!6592 = !DILocation(line: 4497, column: 69, scope: !6587)
!6593 = !DILocation(line: 4497, column: 12, scope: !6587)
!6594 = !DILocation(line: 4497, column: 5, scope: !6587)
!6595 = !DILocation(line: 4498, column: 3, scope: !6577)
!6596 = !DILocation(line: 4499, column: 24, scope: !6577)
!6597 = !DILocation(line: 4499, column: 17, scope: !6577)
!6598 = !DILocation(line: 4499, column: 23, scope: !6577)
!6599 = !DILocation(line: 4500, column: 37, scope: !6577)
!6600 = !DILocation(line: 4500, column: 44, scope: !6577)
!6601 = !DILocation(line: 4500, column: 10, scope: !6577)
!6602 = !DILocation(line: 4500, column: 3, scope: !6577)
!6603 = distinct !DISubprogram(name: "MatteFloodfillImage", scope: !3, file: !3, line: 4546, type: !6604, scopeLine: 4549, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!834, !818, !1033, !6606, !1301, !1301, !1963}
!6606 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!6607 = !DILocalVariable(name: "image", arg: 1, scope: !6603, file: !3, line: 4546, type: !818)
!6608 = !DILocation(line: 4546, column: 59, scope: !6603)
!6609 = !DILocalVariable(name: "target", arg: 2, scope: !6603, file: !3, line: 4547, type: !1033)
!6610 = !DILocation(line: 4547, column: 21, scope: !6603)
!6611 = !DILocalVariable(name: "opacity", arg: 3, scope: !6603, file: !3, line: 4547, type: !6606)
!6612 = !DILocation(line: 4547, column: 42, scope: !6603)
!6613 = !DILocalVariable(name: "x_offset", arg: 4, scope: !6603, file: !3, line: 4547, type: !1301)
!6614 = !DILocation(line: 4547, column: 64, scope: !6603)
!6615 = !DILocalVariable(name: "y_offset", arg: 5, scope: !6603, file: !3, line: 4548, type: !1301)
!6616 = !DILocation(line: 4548, column: 17, scope: !6603)
!6617 = !DILocalVariable(name: "method", arg: 6, scope: !6603, file: !3, line: 4548, type: !1963)
!6618 = !DILocation(line: 4548, column: 44, scope: !6603)
!6619 = !DILocalVariable(name: "floodplane_image", scope: !6603, file: !3, line: 4551, type: !818)
!6620 = !DILocation(line: 4551, column: 6, scope: !6603)
!6621 = !DILocalVariable(name: "skip", scope: !6603, file: !3, line: 4554, type: !834)
!6622 = !DILocation(line: 4554, column: 5, scope: !6603)
!6623 = !DILocalVariable(name: "s", scope: !6603, file: !3, line: 4557, type: !1024)
!6624 = !DILocation(line: 4557, column: 6, scope: !6603)
!6625 = !DILocalVariable(name: "segment_stack", scope: !6603, file: !3, line: 4560, type: !1024)
!6626 = !DILocation(line: 4560, column: 6, scope: !6603)
!6627 = !DILocalVariable(name: "offset", scope: !6603, file: !3, line: 4563, type: !813)
!6628 = !DILocation(line: 4563, column: 5, scope: !6603)
!6629 = !DILocalVariable(name: "start", scope: !6603, file: !3, line: 4564, type: !813)
!6630 = !DILocation(line: 4564, column: 5, scope: !6603)
!6631 = !DILocalVariable(name: "x", scope: !6603, file: !3, line: 4565, type: !813)
!6632 = !DILocation(line: 4565, column: 5, scope: !6603)
!6633 = !DILocalVariable(name: "x1", scope: !6603, file: !3, line: 4566, type: !813)
!6634 = !DILocation(line: 4566, column: 5, scope: !6603)
!6635 = !DILocalVariable(name: "x2", scope: !6603, file: !3, line: 4567, type: !813)
!6636 = !DILocation(line: 4567, column: 5, scope: !6603)
!6637 = !DILocalVariable(name: "y", scope: !6603, file: !3, line: 4568, type: !813)
!6638 = !DILocation(line: 4568, column: 5, scope: !6603)
!6639 = !DILocation(line: 4575, column: 7, scope: !6640)
!6640 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4575, column: 7)
!6641 = !DILocation(line: 4575, column: 14, scope: !6640)
!6642 = !DILocation(line: 4575, column: 20, scope: !6640)
!6643 = !DILocation(line: 4575, column: 7, scope: !6603)
!6644 = !DILocation(line: 4576, column: 61, scope: !6640)
!6645 = !DILocation(line: 4576, column: 68, scope: !6640)
!6646 = !DILocation(line: 4576, column: 12, scope: !6640)
!6647 = !DILocation(line: 4576, column: 5, scope: !6640)
!6648 = !DILocation(line: 4577, column: 8, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4577, column: 7)
!6650 = !DILocation(line: 4577, column: 17, scope: !6649)
!6651 = !DILocation(line: 4577, column: 22, scope: !6649)
!6652 = !DILocation(line: 4577, column: 26, scope: !6649)
!6653 = !DILocation(line: 4577, column: 48, scope: !6649)
!6654 = !DILocation(line: 4577, column: 55, scope: !6649)
!6655 = !DILocation(line: 4577, column: 35, scope: !6649)
!6656 = !DILocation(line: 4577, column: 7, scope: !6603)
!6657 = !DILocation(line: 4578, column: 5, scope: !6649)
!6658 = !DILocation(line: 4579, column: 8, scope: !6659)
!6659 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4579, column: 7)
!6660 = !DILocation(line: 4579, column: 17, scope: !6659)
!6661 = !DILocation(line: 4579, column: 22, scope: !6659)
!6662 = !DILocation(line: 4579, column: 26, scope: !6659)
!6663 = !DILocation(line: 4579, column: 48, scope: !6659)
!6664 = !DILocation(line: 4579, column: 55, scope: !6659)
!6665 = !DILocation(line: 4579, column: 35, scope: !6659)
!6666 = !DILocation(line: 4579, column: 7, scope: !6603)
!6667 = !DILocation(line: 4580, column: 5, scope: !6659)
!6668 = !DILocation(line: 4581, column: 28, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4581, column: 7)
!6670 = !DILocation(line: 4581, column: 7, scope: !6669)
!6671 = !DILocation(line: 4581, column: 47, scope: !6669)
!6672 = !DILocation(line: 4581, column: 7, scope: !6603)
!6673 = !DILocation(line: 4582, column: 5, scope: !6669)
!6674 = !DILocation(line: 4583, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4583, column: 7)
!6676 = !DILocation(line: 4583, column: 14, scope: !6675)
!6677 = !DILocation(line: 4583, column: 20, scope: !6675)
!6678 = !DILocation(line: 4583, column: 7, scope: !6603)
!6679 = !DILocation(line: 4584, column: 33, scope: !6675)
!6680 = !DILocation(line: 4584, column: 12, scope: !6675)
!6681 = !DILocation(line: 4584, column: 5, scope: !6675)
!6682 = !DILocation(line: 4585, column: 31, scope: !6603)
!6683 = !DILocation(line: 4585, column: 37, scope: !6603)
!6684 = !DILocation(line: 4585, column: 44, scope: !6603)
!6685 = !DILocation(line: 4585, column: 52, scope: !6603)
!6686 = !DILocation(line: 4585, column: 59, scope: !6603)
!6687 = !DILocation(line: 4586, column: 6, scope: !6603)
!6688 = !DILocation(line: 4586, column: 13, scope: !6603)
!6689 = !DILocation(line: 4585, column: 20, scope: !6603)
!6690 = !DILocation(line: 4585, column: 19, scope: !6603)
!6691 = !DILocation(line: 4587, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4587, column: 7)
!6693 = !DILocation(line: 4587, column: 24, scope: !6692)
!6694 = !DILocation(line: 4587, column: 7, scope: !6603)
!6695 = !DILocation(line: 4588, column: 5, scope: !6692)
!6696 = !DILocation(line: 4589, column: 31, scope: !6603)
!6697 = !DILocation(line: 4589, column: 10, scope: !6603)
!6698 = !DILocation(line: 4593, column: 33, scope: !6603)
!6699 = !DILocation(line: 4593, column: 17, scope: !6603)
!6700 = !DILocation(line: 4593, column: 16, scope: !6603)
!6701 = !DILocation(line: 4595, column: 7, scope: !6702)
!6702 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4595, column: 7)
!6703 = !DILocation(line: 4595, column: 21, scope: !6702)
!6704 = !DILocation(line: 4595, column: 7, scope: !6603)
!6705 = !DILocation(line: 4597, column: 37, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6702, file: !3, line: 4596, column: 5)
!6707 = !DILocation(line: 4597, column: 24, scope: !6706)
!6708 = !DILocation(line: 4597, column: 23, scope: !6706)
!6709 = !DILocation(line: 4598, column: 7, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6711, file: !3, line: 4598, column: 7)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 4598, column: 7)
!6712 = !DILocation(line: 4598, column: 7, scope: !6711)
!6713 = !DILocation(line: 4604, column: 5, scope: !6603)
!6714 = !DILocation(line: 4604, column: 4, scope: !6603)
!6715 = !DILocation(line: 4605, column: 5, scope: !6603)
!6716 = !DILocation(line: 4605, column: 4, scope: !6603)
!6717 = !DILocation(line: 4606, column: 8, scope: !6603)
!6718 = !DILocation(line: 4607, column: 5, scope: !6603)
!6719 = !DILocation(line: 4607, column: 4, scope: !6603)
!6720 = !DILocation(line: 4608, column: 3, scope: !6721)
!6721 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 4608, column: 3)
!6722 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4608, column: 3)
!6723 = !DILocation(line: 4608, column: 3, scope: !6722)
!6724 = !DILocation(line: 4608, column: 3, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6726, file: !3, line: 4608, column: 3)
!6726 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 4608, column: 3)
!6727 = !DILocation(line: 4608, column: 3, scope: !6726)
!6728 = !DILocation(line: 4608, column: 3, scope: !6729)
!6729 = distinct !DILexicalBlock(scope: !6730, file: !3, line: 4608, column: 3)
!6730 = distinct !DILexicalBlock(scope: !6721, file: !3, line: 4608, column: 3)
!6731 = !DILocation(line: 4608, column: 3, scope: !6730)
!6732 = !DILocation(line: 4608, column: 3, scope: !6733)
!6733 = distinct !DILexicalBlock(scope: !6729, file: !3, line: 4608, column: 3)
!6734 = !DILocation(line: 4609, column: 3, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6736, file: !3, line: 4609, column: 3)
!6736 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4609, column: 3)
!6737 = !DILocation(line: 4609, column: 3, scope: !6736)
!6738 = !DILocation(line: 4609, column: 3, scope: !6739)
!6739 = distinct !DILexicalBlock(scope: !6740, file: !3, line: 4609, column: 3)
!6740 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 4609, column: 3)
!6741 = !DILocation(line: 4609, column: 3, scope: !6740)
!6742 = !DILocation(line: 4609, column: 3, scope: !6743)
!6743 = distinct !DILexicalBlock(scope: !6744, file: !3, line: 4609, column: 3)
!6744 = distinct !DILexicalBlock(scope: !6735, file: !3, line: 4609, column: 3)
!6745 = !DILocation(line: 4609, column: 3, scope: !6744)
!6746 = !DILocation(line: 4609, column: 3, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6743, file: !3, line: 4609, column: 3)
!6748 = !DILocation(line: 4610, column: 3, scope: !6603)
!6749 = !DILocation(line: 4610, column: 10, scope: !6603)
!6750 = !DILocation(line: 4610, column: 14, scope: !6603)
!6751 = !DILocation(line: 4610, column: 12, scope: !6603)
!6752 = !DILocalVariable(name: "p", scope: !6753, file: !3, line: 4613, type: !2114)
!6753 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4611, column: 3)
!6754 = !DILocation(line: 4613, column: 17, scope: !6753)
!6755 = !DILocalVariable(name: "x", scope: !6753, file: !3, line: 4616, type: !813)
!6756 = !DILocation(line: 4616, column: 7, scope: !6753)
!6757 = !DILocalVariable(name: "q", scope: !6753, file: !3, line: 4619, type: !2119)
!6758 = !DILocation(line: 4619, column: 17, scope: !6753)
!6759 = !DILocation(line: 4624, column: 6, scope: !6753)
!6760 = !DILocation(line: 4625, column: 18, scope: !6753)
!6761 = !DILocation(line: 4625, column: 21, scope: !6753)
!6762 = !DILocation(line: 4625, column: 8, scope: !6753)
!6763 = !DILocation(line: 4625, column: 7, scope: !6753)
!6764 = !DILocation(line: 4626, column: 18, scope: !6753)
!6765 = !DILocation(line: 4626, column: 21, scope: !6753)
!6766 = !DILocation(line: 4626, column: 8, scope: !6753)
!6767 = !DILocation(line: 4626, column: 7, scope: !6753)
!6768 = !DILocation(line: 4627, column: 22, scope: !6753)
!6769 = !DILocation(line: 4627, column: 25, scope: !6753)
!6770 = !DILocation(line: 4627, column: 12, scope: !6753)
!6771 = !DILocation(line: 4627, column: 11, scope: !6753)
!6772 = !DILocation(line: 4628, column: 17, scope: !6753)
!6773 = !DILocation(line: 4628, column: 20, scope: !6753)
!6774 = !DILocation(line: 4628, column: 7, scope: !6753)
!6775 = !DILocation(line: 4628, column: 23, scope: !6753)
!6776 = !DILocation(line: 4628, column: 22, scope: !6753)
!6777 = !DILocation(line: 4628, column: 6, scope: !6753)
!6778 = !DILocation(line: 4632, column: 24, scope: !6753)
!6779 = !DILocation(line: 4632, column: 32, scope: !6753)
!6780 = !DILocation(line: 4632, column: 44, scope: !6753)
!6781 = !DILocation(line: 4632, column: 46, scope: !6753)
!6782 = !DILocation(line: 4632, column: 53, scope: !6753)
!6783 = !DILocation(line: 4632, column: 60, scope: !6753)
!6784 = !DILocation(line: 4632, column: 7, scope: !6753)
!6785 = !DILocation(line: 4632, column: 6, scope: !6753)
!6786 = !DILocation(line: 4633, column: 26, scope: !6753)
!6787 = !DILocation(line: 4633, column: 45, scope: !6753)
!6788 = !DILocation(line: 4633, column: 57, scope: !6753)
!6789 = !DILocation(line: 4633, column: 59, scope: !6753)
!6790 = !DILocation(line: 4634, column: 8, scope: !6753)
!6791 = !DILocation(line: 4634, column: 15, scope: !6753)
!6792 = !DILocation(line: 4633, column: 7, scope: !6753)
!6793 = !DILocation(line: 4633, column: 6, scope: !6753)
!6794 = !DILocation(line: 4635, column: 10, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4635, column: 9)
!6796 = !DILocation(line: 4635, column: 12, scope: !6795)
!6797 = !DILocation(line: 4635, column: 43, scope: !6795)
!6798 = !DILocation(line: 4635, column: 47, scope: !6795)
!6799 = !DILocation(line: 4635, column: 49, scope: !6795)
!6800 = !DILocation(line: 4635, column: 9, scope: !6753)
!6801 = !DILocation(line: 4636, column: 7, scope: !6795)
!6802 = !DILocation(line: 4637, column: 8, scope: !6753)
!6803 = !DILocation(line: 4637, column: 6, scope: !6753)
!6804 = !DILocation(line: 4638, column: 8, scope: !6753)
!6805 = !DILocation(line: 4638, column: 6, scope: !6753)
!6806 = !DILocation(line: 4639, column: 12, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4639, column: 5)
!6808 = !DILocation(line: 4639, column: 11, scope: !6807)
!6809 = !DILocation(line: 4639, column: 10, scope: !6807)
!6810 = !DILocation(line: 4639, column: 16, scope: !6811)
!6811 = distinct !DILexicalBlock(scope: !6807, file: !3, line: 4639, column: 5)
!6812 = !DILocation(line: 4639, column: 18, scope: !6811)
!6813 = !DILocation(line: 4639, column: 5, scope: !6807)
!6814 = !DILocation(line: 4641, column: 11, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 4641, column: 11)
!6816 = distinct !DILexicalBlock(scope: !6811, file: !3, line: 4640, column: 5)
!6817 = !DILocation(line: 4641, column: 14, scope: !6815)
!6818 = !DILocation(line: 4641, column: 22, scope: !6815)
!6819 = !DILocation(line: 4641, column: 11, scope: !6816)
!6820 = !DILocation(line: 4642, column: 9, scope: !6815)
!6821 = !DILocation(line: 4643, column: 11, scope: !6822)
!6822 = distinct !DILexicalBlock(scope: !6816, file: !3, line: 4643, column: 11)
!6823 = !DILocation(line: 4643, column: 18, scope: !6822)
!6824 = !DILocation(line: 4643, column: 11, scope: !6816)
!6825 = !DILocation(line: 4645, column: 30, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6827, file: !3, line: 4645, column: 15)
!6827 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 4644, column: 9)
!6828 = !DILocation(line: 4645, column: 36, scope: !6826)
!6829 = !DILocation(line: 4645, column: 15, scope: !6826)
!6830 = !DILocation(line: 4645, column: 47, scope: !6826)
!6831 = !DILocation(line: 4645, column: 15, scope: !6827)
!6832 = !DILocation(line: 4646, column: 13, scope: !6826)
!6833 = !DILocation(line: 4647, column: 9, scope: !6827)
!6834 = !DILocation(line: 4649, column: 28, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6822, file: !3, line: 4649, column: 13)
!6836 = !DILocation(line: 4649, column: 34, scope: !6835)
!6837 = !DILocation(line: 4649, column: 13, scope: !6835)
!6838 = !DILocation(line: 4649, column: 45, scope: !6835)
!6839 = !DILocation(line: 4649, column: 13, scope: !6822)
!6840 = !DILocation(line: 4650, column: 11, scope: !6835)
!6841 = !DILocation(line: 4651, column: 7, scope: !6816)
!6842 = !DILocation(line: 4651, column: 10, scope: !6816)
!6843 = !DILocation(line: 4651, column: 17, scope: !6816)
!6844 = !DILocation(line: 4652, column: 8, scope: !6816)
!6845 = !DILocation(line: 4653, column: 8, scope: !6816)
!6846 = !DILocation(line: 4654, column: 5, scope: !6816)
!6847 = !DILocation(line: 4639, column: 25, scope: !6811)
!6848 = !DILocation(line: 4639, column: 5, scope: !6811)
!6849 = distinct !{!6849, !6813, !6850}
!6850 = !DILocation(line: 4654, column: 5, scope: !6807)
!6851 = !DILocation(line: 4655, column: 29, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4655, column: 9)
!6853 = !DILocation(line: 4655, column: 47, scope: !6852)
!6854 = !DILocation(line: 4655, column: 54, scope: !6852)
!6855 = !DILocation(line: 4655, column: 9, scope: !6852)
!6856 = !DILocation(line: 4655, column: 65, scope: !6852)
!6857 = !DILocation(line: 4655, column: 9, scope: !6753)
!6858 = !DILocation(line: 4656, column: 7, scope: !6852)
!6859 = !DILocation(line: 4657, column: 10, scope: !6753)
!6860 = !DILocation(line: 4657, column: 15, scope: !6753)
!6861 = !DILocation(line: 4657, column: 12, scope: !6753)
!6862 = !DILocation(line: 4657, column: 9, scope: !6753)
!6863 = !DILocation(line: 4658, column: 9, scope: !6864)
!6864 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4658, column: 9)
!6865 = !DILocation(line: 4658, column: 14, scope: !6864)
!6866 = !DILocation(line: 4658, column: 9, scope: !6753)
!6867 = !DILocation(line: 4660, column: 15, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 4659, column: 7)
!6869 = !DILocation(line: 4660, column: 16, scope: !6868)
!6870 = !DILocation(line: 4660, column: 14, scope: !6868)
!6871 = !DILocation(line: 4661, column: 13, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 4661, column: 13)
!6873 = !DILocation(line: 4661, column: 21, scope: !6872)
!6874 = !DILocation(line: 4661, column: 19, scope: !6872)
!6875 = !DILocation(line: 4661, column: 13, scope: !6868)
!6876 = !DILocation(line: 4662, column: 11, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6878, file: !3, line: 4662, column: 11)
!6878 = distinct !DILexicalBlock(scope: !6872, file: !3, line: 4662, column: 11)
!6879 = !DILocation(line: 4662, column: 11, scope: !6878)
!6880 = !DILocation(line: 4662, column: 11, scope: !6881)
!6881 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 4662, column: 11)
!6882 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 4662, column: 11)
!6883 = !DILocation(line: 4662, column: 11, scope: !6882)
!6884 = !DILocation(line: 4662, column: 11, scope: !6885)
!6885 = distinct !DILexicalBlock(scope: !6886, file: !3, line: 4662, column: 11)
!6886 = distinct !DILexicalBlock(scope: !6877, file: !3, line: 4662, column: 11)
!6887 = !DILocation(line: 4662, column: 11, scope: !6886)
!6888 = !DILocation(line: 4662, column: 11, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6885, file: !3, line: 4662, column: 11)
!6890 = !DILocation(line: 4663, column: 11, scope: !6868)
!6891 = !DILocation(line: 4663, column: 13, scope: !6868)
!6892 = !DILocation(line: 4663, column: 10, scope: !6868)
!6893 = !DILocation(line: 4664, column: 7, scope: !6868)
!6894 = !DILocation(line: 4665, column: 5, scope: !6753)
!6895 = !DILocation(line: 4667, column: 11, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4667, column: 11)
!6897 = distinct !DILexicalBlock(scope: !6753, file: !3, line: 4666, column: 5)
!6898 = !DILocation(line: 4667, column: 16, scope: !6896)
!6899 = !DILocation(line: 4667, column: 11, scope: !6897)
!6900 = !DILocation(line: 4669, column: 15, scope: !6901)
!6901 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 4669, column: 15)
!6902 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 4668, column: 9)
!6903 = !DILocation(line: 4669, column: 29, scope: !6901)
!6904 = !DILocation(line: 4669, column: 36, scope: !6901)
!6905 = !DILocation(line: 4669, column: 17, scope: !6901)
!6906 = !DILocation(line: 4669, column: 15, scope: !6902)
!6907 = !DILocation(line: 4671, column: 34, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6901, file: !3, line: 4670, column: 13)
!6909 = !DILocation(line: 4671, column: 40, scope: !6908)
!6910 = !DILocation(line: 4671, column: 42, scope: !6908)
!6911 = !DILocation(line: 4671, column: 44, scope: !6908)
!6912 = !DILocation(line: 4671, column: 51, scope: !6908)
!6913 = !DILocation(line: 4671, column: 59, scope: !6908)
!6914 = !DILocation(line: 4671, column: 58, scope: !6908)
!6915 = !DILocation(line: 4672, column: 18, scope: !6908)
!6916 = !DILocation(line: 4672, column: 25, scope: !6908)
!6917 = !DILocation(line: 4671, column: 17, scope: !6908)
!6918 = !DILocation(line: 4671, column: 16, scope: !6908)
!6919 = !DILocation(line: 4673, column: 36, scope: !6908)
!6920 = !DILocation(line: 4673, column: 53, scope: !6908)
!6921 = !DILocation(line: 4673, column: 55, scope: !6908)
!6922 = !DILocation(line: 4673, column: 57, scope: !6908)
!6923 = !DILocation(line: 4673, column: 64, scope: !6908)
!6924 = !DILocation(line: 4673, column: 72, scope: !6908)
!6925 = !DILocation(line: 4673, column: 71, scope: !6908)
!6926 = !DILocation(line: 4674, column: 18, scope: !6908)
!6927 = !DILocation(line: 4674, column: 25, scope: !6908)
!6928 = !DILocation(line: 4673, column: 17, scope: !6908)
!6929 = !DILocation(line: 4673, column: 16, scope: !6908)
!6930 = !DILocation(line: 4675, column: 20, scope: !6931)
!6931 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 4675, column: 19)
!6932 = !DILocation(line: 4675, column: 22, scope: !6931)
!6933 = !DILocation(line: 4675, column: 53, scope: !6931)
!6934 = !DILocation(line: 4676, column: 20, scope: !6931)
!6935 = !DILocation(line: 4676, column: 22, scope: !6931)
!6936 = !DILocation(line: 4675, column: 19, scope: !6908)
!6937 = !DILocation(line: 4677, column: 17, scope: !6931)
!6938 = !DILocation(line: 4678, column: 15, scope: !6908)
!6939 = !DILocation(line: 4678, column: 23, scope: !6940)
!6940 = distinct !DILexicalBlock(scope: !6941, file: !3, line: 4678, column: 15)
!6941 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 4678, column: 15)
!6942 = !DILocation(line: 4678, column: 37, scope: !6940)
!6943 = !DILocation(line: 4678, column: 44, scope: !6940)
!6944 = !DILocation(line: 4678, column: 25, scope: !6940)
!6945 = !DILocation(line: 4678, column: 15, scope: !6941)
!6946 = !DILocation(line: 4680, column: 21, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 4680, column: 21)
!6948 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 4679, column: 15)
!6949 = !DILocation(line: 4680, column: 24, scope: !6947)
!6950 = !DILocation(line: 4680, column: 32, scope: !6947)
!6951 = !DILocation(line: 4680, column: 21, scope: !6948)
!6952 = !DILocation(line: 4681, column: 19, scope: !6947)
!6953 = !DILocation(line: 4682, column: 21, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 4682, column: 21)
!6955 = !DILocation(line: 4682, column: 28, scope: !6954)
!6956 = !DILocation(line: 4682, column: 21, scope: !6948)
!6957 = !DILocation(line: 4684, column: 40, scope: !6958)
!6958 = distinct !DILexicalBlock(scope: !6959, file: !3, line: 4684, column: 25)
!6959 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 4683, column: 19)
!6960 = !DILocation(line: 4684, column: 46, scope: !6958)
!6961 = !DILocation(line: 4684, column: 25, scope: !6958)
!6962 = !DILocation(line: 4684, column: 57, scope: !6958)
!6963 = !DILocation(line: 4684, column: 25, scope: !6959)
!6964 = !DILocation(line: 4685, column: 23, scope: !6958)
!6965 = !DILocation(line: 4686, column: 19, scope: !6959)
!6966 = !DILocation(line: 4688, column: 38, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 4688, column: 23)
!6968 = !DILocation(line: 4688, column: 44, scope: !6967)
!6969 = !DILocation(line: 4688, column: 23, scope: !6967)
!6970 = !DILocation(line: 4688, column: 55, scope: !6967)
!6971 = !DILocation(line: 4688, column: 23, scope: !6954)
!6972 = !DILocation(line: 4689, column: 21, scope: !6967)
!6973 = !DILocation(line: 4690, column: 17, scope: !6948)
!6974 = !DILocation(line: 4690, column: 20, scope: !6948)
!6975 = !DILocation(line: 4690, column: 27, scope: !6948)
!6976 = !DILocation(line: 4691, column: 18, scope: !6948)
!6977 = !DILocation(line: 4692, column: 18, scope: !6948)
!6978 = !DILocation(line: 4693, column: 15, scope: !6948)
!6979 = !DILocation(line: 4678, column: 54, scope: !6940)
!6980 = !DILocation(line: 4678, column: 15, scope: !6940)
!6981 = distinct !{!6981, !6945, !6982}
!6982 = !DILocation(line: 4693, column: 15, scope: !6941)
!6983 = !DILocation(line: 4694, column: 39, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6908, file: !3, line: 4694, column: 19)
!6985 = !DILocation(line: 4694, column: 57, scope: !6984)
!6986 = !DILocation(line: 4694, column: 64, scope: !6984)
!6987 = !DILocation(line: 4694, column: 19, scope: !6984)
!6988 = !DILocation(line: 4694, column: 75, scope: !6984)
!6989 = !DILocation(line: 4694, column: 19, scope: !6908)
!6990 = !DILocation(line: 4695, column: 17, scope: !6984)
!6991 = !DILocation(line: 4696, column: 13, scope: !6908)
!6992 = !DILocation(line: 4697, column: 11, scope: !6993)
!6993 = distinct !DILexicalBlock(scope: !6994, file: !3, line: 4697, column: 11)
!6994 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 4697, column: 11)
!6995 = !DILocation(line: 4697, column: 11, scope: !6994)
!6996 = !DILocation(line: 4697, column: 11, scope: !6997)
!6997 = distinct !DILexicalBlock(scope: !6998, file: !3, line: 4697, column: 11)
!6998 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 4697, column: 11)
!6999 = !DILocation(line: 4697, column: 11, scope: !6998)
!7000 = !DILocation(line: 4697, column: 11, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !7002, file: !3, line: 4697, column: 11)
!7002 = distinct !DILexicalBlock(scope: !6993, file: !3, line: 4697, column: 11)
!7003 = !DILocation(line: 4697, column: 11, scope: !7002)
!7004 = !DILocation(line: 4697, column: 11, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 4697, column: 11)
!7006 = !DILocation(line: 4698, column: 15, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 4698, column: 15)
!7008 = !DILocation(line: 4698, column: 20, scope: !7007)
!7009 = !DILocation(line: 4698, column: 22, scope: !7007)
!7010 = !DILocation(line: 4698, column: 17, scope: !7007)
!7011 = !DILocation(line: 4698, column: 15, scope: !6902)
!7012 = !DILocation(line: 4699, column: 13, scope: !7013)
!7013 = distinct !DILexicalBlock(scope: !7014, file: !3, line: 4699, column: 13)
!7014 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 4699, column: 13)
!7015 = !DILocation(line: 4699, column: 13, scope: !7014)
!7016 = !DILocation(line: 4699, column: 13, scope: !7017)
!7017 = distinct !DILexicalBlock(scope: !7018, file: !3, line: 4699, column: 13)
!7018 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 4699, column: 13)
!7019 = !DILocation(line: 4699, column: 13, scope: !7018)
!7020 = !DILocation(line: 4699, column: 13, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7022, file: !3, line: 4699, column: 13)
!7022 = distinct !DILexicalBlock(scope: !7013, file: !3, line: 4699, column: 13)
!7023 = !DILocation(line: 4699, column: 13, scope: !7022)
!7024 = !DILocation(line: 4699, column: 13, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 4699, column: 13)
!7026 = !DILocation(line: 4700, column: 9, scope: !6902)
!7027 = !DILocation(line: 4701, column: 11, scope: !6897)
!7028 = !DILocation(line: 4702, column: 8, scope: !6897)
!7029 = !DILocation(line: 4703, column: 11, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 4703, column: 11)
!7031 = !DILocation(line: 4703, column: 16, scope: !7030)
!7032 = !DILocation(line: 4703, column: 13, scope: !7030)
!7033 = !DILocation(line: 4703, column: 11, scope: !6897)
!7034 = !DILocation(line: 4705, column: 30, scope: !7035)
!7035 = distinct !DILexicalBlock(scope: !7030, file: !3, line: 4704, column: 9)
!7036 = !DILocation(line: 4705, column: 36, scope: !7035)
!7037 = !DILocation(line: 4705, column: 38, scope: !7035)
!7038 = !DILocation(line: 4705, column: 50, scope: !7035)
!7039 = !DILocation(line: 4705, column: 53, scope: !7035)
!7040 = !DILocation(line: 4705, column: 52, scope: !7035)
!7041 = !DILocation(line: 4705, column: 54, scope: !7035)
!7042 = !DILocation(line: 4706, column: 14, scope: !7035)
!7043 = !DILocation(line: 4706, column: 21, scope: !7035)
!7044 = !DILocation(line: 4705, column: 13, scope: !7035)
!7045 = !DILocation(line: 4705, column: 12, scope: !7035)
!7046 = !DILocation(line: 4707, column: 32, scope: !7035)
!7047 = !DILocation(line: 4707, column: 49, scope: !7035)
!7048 = !DILocation(line: 4707, column: 51, scope: !7035)
!7049 = !DILocation(line: 4707, column: 63, scope: !7035)
!7050 = !DILocation(line: 4707, column: 66, scope: !7035)
!7051 = !DILocation(line: 4707, column: 65, scope: !7035)
!7052 = !DILocation(line: 4707, column: 67, scope: !7035)
!7053 = !DILocation(line: 4708, column: 14, scope: !7035)
!7054 = !DILocation(line: 4708, column: 21, scope: !7035)
!7055 = !DILocation(line: 4707, column: 13, scope: !7035)
!7056 = !DILocation(line: 4707, column: 12, scope: !7035)
!7057 = !DILocation(line: 4709, column: 16, scope: !7058)
!7058 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4709, column: 15)
!7059 = !DILocation(line: 4709, column: 18, scope: !7058)
!7060 = !DILocation(line: 4709, column: 49, scope: !7058)
!7061 = !DILocation(line: 4709, column: 53, scope: !7058)
!7062 = !DILocation(line: 4709, column: 55, scope: !7058)
!7063 = !DILocation(line: 4709, column: 15, scope: !7035)
!7064 = !DILocation(line: 4710, column: 13, scope: !7058)
!7065 = !DILocation(line: 4711, column: 11, scope: !7035)
!7066 = !DILocation(line: 4711, column: 19, scope: !7067)
!7067 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 4711, column: 11)
!7068 = distinct !DILexicalBlock(scope: !7035, file: !3, line: 4711, column: 11)
!7069 = !DILocation(line: 4711, column: 24, scope: !7067)
!7070 = !DILocation(line: 4711, column: 21, scope: !7067)
!7071 = !DILocation(line: 4711, column: 11, scope: !7068)
!7072 = !DILocation(line: 4713, column: 17, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 4713, column: 17)
!7074 = distinct !DILexicalBlock(scope: !7067, file: !3, line: 4712, column: 11)
!7075 = !DILocation(line: 4713, column: 20, scope: !7073)
!7076 = !DILocation(line: 4713, column: 28, scope: !7073)
!7077 = !DILocation(line: 4713, column: 17, scope: !7074)
!7078 = !DILocation(line: 4714, column: 15, scope: !7073)
!7079 = !DILocation(line: 4715, column: 17, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7074, file: !3, line: 4715, column: 17)
!7081 = !DILocation(line: 4715, column: 24, scope: !7080)
!7082 = !DILocation(line: 4715, column: 17, scope: !7074)
!7083 = !DILocation(line: 4717, column: 36, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 4717, column: 21)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 4716, column: 15)
!7086 = !DILocation(line: 4717, column: 42, scope: !7084)
!7087 = !DILocation(line: 4717, column: 21, scope: !7084)
!7088 = !DILocation(line: 4717, column: 53, scope: !7084)
!7089 = !DILocation(line: 4717, column: 21, scope: !7085)
!7090 = !DILocation(line: 4718, column: 19, scope: !7084)
!7091 = !DILocation(line: 4719, column: 15, scope: !7085)
!7092 = !DILocation(line: 4721, column: 34, scope: !7093)
!7093 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 4721, column: 19)
!7094 = !DILocation(line: 4721, column: 40, scope: !7093)
!7095 = !DILocation(line: 4721, column: 19, scope: !7093)
!7096 = !DILocation(line: 4721, column: 51, scope: !7093)
!7097 = !DILocation(line: 4721, column: 19, scope: !7080)
!7098 = !DILocation(line: 4722, column: 17, scope: !7093)
!7099 = !DILocation(line: 4723, column: 14, scope: !7074)
!7100 = !DILocation(line: 4724, column: 14, scope: !7074)
!7101 = !DILocation(line: 4725, column: 11, scope: !7074)
!7102 = !DILocation(line: 4711, column: 29, scope: !7067)
!7103 = !DILocation(line: 4711, column: 11, scope: !7067)
!7104 = distinct !{!7104, !7071, !7105}
!7105 = !DILocation(line: 4725, column: 11, scope: !7068)
!7106 = !DILocation(line: 4726, column: 9, scope: !7035)
!7107 = !DILocation(line: 4727, column: 13, scope: !6897)
!7108 = !DILocation(line: 4727, column: 12, scope: !6897)
!7109 = !DILocation(line: 4728, column: 5, scope: !6897)
!7110 = !DILocation(line: 4728, column: 14, scope: !6753)
!7111 = !DILocation(line: 4728, column: 19, scope: !6753)
!7112 = !DILocation(line: 4728, column: 16, scope: !6753)
!7113 = distinct !{!7113, !6894, !7114}
!7114 = !DILocation(line: 4728, column: 21, scope: !6753)
!7115 = distinct !{!7115, !6748, !7116}
!7116 = !DILocation(line: 4729, column: 3, scope: !6603)
!7117 = !DILocation(line: 4730, column: 9, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 4730, column: 3)
!7119 = !DILocation(line: 4730, column: 8, scope: !7118)
!7120 = !DILocation(line: 4730, column: 13, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 4730, column: 3)
!7122 = !DILocation(line: 4730, column: 27, scope: !7121)
!7123 = !DILocation(line: 4730, column: 34, scope: !7121)
!7124 = !DILocation(line: 4730, column: 15, scope: !7121)
!7125 = !DILocation(line: 4730, column: 3, scope: !7118)
!7126 = !DILocalVariable(name: "p", scope: !7127, file: !3, line: 4733, type: !2114)
!7127 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 4731, column: 3)
!7128 = !DILocation(line: 4733, column: 17, scope: !7127)
!7129 = !DILocalVariable(name: "x", scope: !7127, file: !3, line: 4736, type: !813)
!7130 = !DILocation(line: 4736, column: 7, scope: !7127)
!7131 = !DILocalVariable(name: "q", scope: !7127, file: !3, line: 4739, type: !2119)
!7132 = !DILocation(line: 4739, column: 17, scope: !7127)
!7133 = !DILocation(line: 4744, column: 24, scope: !7127)
!7134 = !DILocation(line: 4744, column: 43, scope: !7127)
!7135 = !DILocation(line: 4744, column: 45, scope: !7127)
!7136 = !DILocation(line: 4744, column: 52, scope: !7127)
!7137 = !DILocation(line: 4745, column: 8, scope: !7127)
!7138 = !DILocation(line: 4745, column: 15, scope: !7127)
!7139 = !DILocation(line: 4744, column: 7, scope: !7127)
!7140 = !DILocation(line: 4744, column: 6, scope: !7127)
!7141 = !DILocation(line: 4746, column: 26, scope: !7127)
!7142 = !DILocation(line: 4746, column: 34, scope: !7127)
!7143 = !DILocation(line: 4746, column: 36, scope: !7127)
!7144 = !DILocation(line: 4746, column: 43, scope: !7127)
!7145 = !DILocation(line: 4746, column: 54, scope: !7127)
!7146 = !DILocation(line: 4746, column: 61, scope: !7127)
!7147 = !DILocation(line: 4746, column: 7, scope: !7127)
!7148 = !DILocation(line: 4746, column: 6, scope: !7127)
!7149 = !DILocation(line: 4747, column: 10, scope: !7150)
!7150 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 4747, column: 9)
!7151 = !DILocation(line: 4747, column: 12, scope: !7150)
!7152 = !DILocation(line: 4747, column: 43, scope: !7150)
!7153 = !DILocation(line: 4747, column: 47, scope: !7150)
!7154 = !DILocation(line: 4747, column: 49, scope: !7150)
!7155 = !DILocation(line: 4747, column: 9, scope: !7127)
!7156 = !DILocation(line: 4748, column: 7, scope: !7150)
!7157 = !DILocation(line: 4749, column: 11, scope: !7158)
!7158 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 4749, column: 5)
!7159 = !DILocation(line: 4749, column: 10, scope: !7158)
!7160 = !DILocation(line: 4749, column: 15, scope: !7161)
!7161 = distinct !DILexicalBlock(scope: !7158, file: !3, line: 4749, column: 5)
!7162 = !DILocation(line: 4749, column: 29, scope: !7161)
!7163 = !DILocation(line: 4749, column: 36, scope: !7161)
!7164 = !DILocation(line: 4749, column: 17, scope: !7161)
!7165 = !DILocation(line: 4749, column: 5, scope: !7158)
!7166 = !DILocation(line: 4751, column: 11, scope: !7167)
!7167 = distinct !DILexicalBlock(scope: !7168, file: !3, line: 4751, column: 11)
!7168 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 4750, column: 5)
!7169 = !DILocation(line: 4751, column: 30, scope: !7167)
!7170 = !DILocation(line: 4751, column: 11, scope: !7168)
!7171 = !DILocation(line: 4752, column: 20, scope: !7167)
!7172 = !DILocation(line: 4752, column: 9, scope: !7167)
!7173 = !DILocation(line: 4752, column: 12, scope: !7167)
!7174 = !DILocation(line: 4752, column: 19, scope: !7167)
!7175 = !DILocation(line: 4753, column: 8, scope: !7168)
!7176 = !DILocation(line: 4754, column: 8, scope: !7168)
!7177 = !DILocation(line: 4755, column: 5, scope: !7168)
!7178 = !DILocation(line: 4749, column: 46, scope: !7161)
!7179 = !DILocation(line: 4749, column: 5, scope: !7161)
!7180 = distinct !{!7180, !7165, !7181}
!7181 = !DILocation(line: 4755, column: 5, scope: !7158)
!7182 = !DILocation(line: 4756, column: 29, scope: !7183)
!7183 = distinct !DILexicalBlock(scope: !7127, file: !3, line: 4756, column: 9)
!7184 = !DILocation(line: 4756, column: 36, scope: !7183)
!7185 = !DILocation(line: 4756, column: 43, scope: !7183)
!7186 = !DILocation(line: 4756, column: 9, scope: !7183)
!7187 = !DILocation(line: 4756, column: 54, scope: !7183)
!7188 = !DILocation(line: 4756, column: 9, scope: !7127)
!7189 = !DILocation(line: 4757, column: 7, scope: !7183)
!7190 = !DILocation(line: 4758, column: 3, scope: !7127)
!7191 = !DILocation(line: 4730, column: 41, scope: !7121)
!7192 = !DILocation(line: 4730, column: 3, scope: !7121)
!7193 = distinct !{!7193, !7125, !7194}
!7194 = !DILocation(line: 4758, column: 3, scope: !7118)
!7195 = !DILocation(line: 4759, column: 56, scope: !6603)
!7196 = !DILocation(line: 4759, column: 33, scope: !6603)
!7197 = !DILocation(line: 4759, column: 17, scope: !6603)
!7198 = !DILocation(line: 4759, column: 16, scope: !6603)
!7199 = !DILocation(line: 4760, column: 33, scope: !6603)
!7200 = !DILocation(line: 4760, column: 20, scope: !6603)
!7201 = !DILocation(line: 4760, column: 19, scope: !6603)
!7202 = !DILocation(line: 4761, column: 10, scope: !6603)
!7203 = !DILocation(line: 4761, column: 25, scope: !6603)
!7204 = !DILocation(line: 4761, column: 32, scope: !6603)
!7205 = !DILocation(line: 4761, column: 12, scope: !6603)
!7206 = !DILocation(line: 4761, column: 3, scope: !6603)
!7207 = !DILocation(line: 4762, column: 1, scope: !6603)
!7208 = distinct !DISubprogram(name: "MaximumImages", scope: !3, file: !3, line: 4792, type: !1639, scopeLine: 4793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7209 = !DILocalVariable(name: "images", arg: 1, scope: !7208, file: !3, line: 4792, type: !1168)
!7210 = !DILocation(line: 4792, column: 48, scope: !7208)
!7211 = !DILocalVariable(name: "exception", arg: 2, scope: !7208, file: !3, line: 4792, type: !1057)
!7212 = !DILocation(line: 4792, column: 70, scope: !7208)
!7213 = !DILocation(line: 4794, column: 25, scope: !7208)
!7214 = !DILocation(line: 4794, column: 52, scope: !7208)
!7215 = !DILocation(line: 4794, column: 10, scope: !7208)
!7216 = !DILocation(line: 4794, column: 3, scope: !7208)
!7217 = distinct !DISubprogram(name: "MinimumImages", scope: !3, file: !3, line: 4825, type: !1639, scopeLine: 4826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7218 = !DILocalVariable(name: "images", arg: 1, scope: !7217, file: !3, line: 4825, type: !1168)
!7219 = !DILocation(line: 4825, column: 48, scope: !7217)
!7220 = !DILocalVariable(name: "exception", arg: 2, scope: !7217, file: !3, line: 4825, type: !1057)
!7221 = !DILocation(line: 4825, column: 70, scope: !7217)
!7222 = !DILocation(line: 4827, column: 25, scope: !7217)
!7223 = !DILocation(line: 4827, column: 52, scope: !7217)
!7224 = !DILocation(line: 4827, column: 10, scope: !7217)
!7225 = !DILocation(line: 4827, column: 3, scope: !7217)
!7226 = distinct !DISubprogram(name: "MedianFilterImage", scope: !3, file: !3, line: 4864, type: !7227, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7227 = !DISubroutineType(types: !7228)
!7228 = !{!818, !1168, !3008, !1057}
!7229 = !DILocalVariable(name: "image", arg: 1, scope: !7226, file: !3, line: 4864, type: !1168)
!7230 = !DILocation(line: 4864, column: 52, scope: !7226)
!7231 = !DILocalVariable(name: "radius", arg: 2, scope: !7226, file: !3, line: 4864, type: !3008)
!7232 = !DILocation(line: 4864, column: 71, scope: !7226)
!7233 = !DILocalVariable(name: "exception", arg: 3, scope: !7226, file: !3, line: 4865, type: !1057)
!7234 = !DILocation(line: 4865, column: 18, scope: !7226)
!7235 = !DILocalVariable(name: "median_image", scope: !7226, file: !3, line: 4868, type: !818)
!7236 = !DILocation(line: 4868, column: 6, scope: !7226)
!7237 = !DILocation(line: 4870, column: 31, scope: !7226)
!7238 = !DILocation(line: 4870, column: 62, scope: !7226)
!7239 = !DILocation(line: 4870, column: 53, scope: !7226)
!7240 = !DILocation(line: 4871, column: 5, scope: !7226)
!7241 = !DILocation(line: 4870, column: 69, scope: !7226)
!7242 = !DILocation(line: 4871, column: 12, scope: !7226)
!7243 = !DILocation(line: 4870, column: 16, scope: !7226)
!7244 = !DILocation(line: 4870, column: 15, scope: !7226)
!7245 = !DILocation(line: 4872, column: 10, scope: !7226)
!7246 = !DILocation(line: 4872, column: 3, scope: !7226)
!7247 = distinct !DISubprogram(name: "ModeImage", scope: !3, file: !3, line: 4903, type: !7227, scopeLine: 4905, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7248 = !DILocalVariable(name: "image", arg: 1, scope: !7247, file: !3, line: 4903, type: !1168)
!7249 = !DILocation(line: 4903, column: 44, scope: !7247)
!7250 = !DILocalVariable(name: "radius", arg: 2, scope: !7247, file: !3, line: 4903, type: !3008)
!7251 = !DILocation(line: 4903, column: 63, scope: !7247)
!7252 = !DILocalVariable(name: "exception", arg: 3, scope: !7247, file: !3, line: 4904, type: !1057)
!7253 = !DILocation(line: 4904, column: 18, scope: !7247)
!7254 = !DILocalVariable(name: "mode_image", scope: !7247, file: !3, line: 4907, type: !818)
!7255 = !DILocation(line: 4907, column: 6, scope: !7247)
!7256 = !DILocation(line: 4909, column: 29, scope: !7247)
!7257 = !DILocation(line: 4909, column: 58, scope: !7247)
!7258 = !DILocation(line: 4909, column: 49, scope: !7247)
!7259 = !DILocation(line: 4909, column: 74, scope: !7247)
!7260 = !DILocation(line: 4909, column: 65, scope: !7247)
!7261 = !DILocation(line: 4910, column: 5, scope: !7247)
!7262 = !DILocation(line: 4909, column: 14, scope: !7247)
!7263 = !DILocation(line: 4909, column: 13, scope: !7247)
!7264 = !DILocation(line: 4911, column: 10, scope: !7247)
!7265 = !DILocation(line: 4911, column: 3, scope: !7247)
!7266 = distinct !DISubprogram(name: "MosaicImages", scope: !3, file: !3, line: 4942, type: !3244, scopeLine: 4943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7267 = !DILocalVariable(name: "image", arg: 1, scope: !7266, file: !3, line: 4942, type: !818)
!7268 = !DILocation(line: 4942, column: 41, scope: !7266)
!7269 = !DILocalVariable(name: "exception", arg: 2, scope: !7266, file: !3, line: 4942, type: !1057)
!7270 = !DILocation(line: 4942, column: 62, scope: !7266)
!7271 = !DILocation(line: 4944, column: 27, scope: !7266)
!7272 = !DILocation(line: 4944, column: 45, scope: !7266)
!7273 = !DILocation(line: 4944, column: 10, scope: !7266)
!7274 = !DILocation(line: 4944, column: 3, scope: !7266)
!7275 = distinct !DISubprogram(name: "OpaqueImage", scope: !3, file: !3, line: 4981, type: !7276, scopeLine: 4983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7276 = !DISubroutineType(types: !7277)
!7277 = !{!834, !818, !1033, !1033}
!7278 = !DILocalVariable(name: "image", arg: 1, scope: !7275, file: !3, line: 4981, type: !818)
!7279 = !DILocation(line: 4981, column: 51, scope: !7275)
!7280 = !DILocalVariable(name: "target", arg: 2, scope: !7275, file: !3, line: 4982, type: !1033)
!7281 = !DILocation(line: 4982, column: 21, scope: !7275)
!7282 = !DILocalVariable(name: "fill", arg: 3, scope: !7275, file: !3, line: 4982, type: !1033)
!7283 = !DILocation(line: 4982, column: 46, scope: !7275)
!7284 = !DILocalVariable(name: "proceed", scope: !7275, file: !3, line: 4987, type: !834)
!7285 = !DILocation(line: 4987, column: 5, scope: !7275)
!7286 = !DILocalVariable(name: "i", scope: !7275, file: !3, line: 4990, type: !813)
!7287 = !DILocation(line: 4990, column: 5, scope: !7275)
!7288 = !DILocalVariable(name: "y", scope: !7275, file: !3, line: 4993, type: !813)
!7289 = !DILocation(line: 4993, column: 5, scope: !7275)
!7290 = !DILocation(line: 5000, column: 10, scope: !7275)
!7291 = !DILocation(line: 5001, column: 7, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 5001, column: 7)
!7293 = !DILocation(line: 5001, column: 14, scope: !7292)
!7294 = !DILocation(line: 5001, column: 20, scope: !7292)
!7295 = !DILocation(line: 5001, column: 7, scope: !7275)
!7296 = !DILocation(line: 5002, column: 61, scope: !7292)
!7297 = !DILocation(line: 5002, column: 68, scope: !7292)
!7298 = !DILocation(line: 5002, column: 12, scope: !7292)
!7299 = !DILocation(line: 5002, column: 5, scope: !7292)
!7300 = !DILocation(line: 5003, column: 11, scope: !7275)
!7301 = !DILocation(line: 5003, column: 18, scope: !7275)
!7302 = !DILocation(line: 5003, column: 3, scope: !7275)
!7303 = !DILocation(line: 5004, column: 3, scope: !7275)
!7304 = !DILocation(line: 5011, column: 13, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 5011, column: 7)
!7306 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 5007, column: 5)
!7307 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 5004, column: 3)
!7308 = !DILocation(line: 5011, column: 12, scope: !7305)
!7309 = !DILocation(line: 5011, column: 17, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7305, file: !3, line: 5011, column: 7)
!7311 = !DILocation(line: 5011, column: 31, scope: !7310)
!7312 = !DILocation(line: 5011, column: 38, scope: !7310)
!7313 = !DILocation(line: 5011, column: 19, scope: !7310)
!7314 = !DILocation(line: 5011, column: 7, scope: !7305)
!7315 = !DILocalVariable(name: "x", scope: !7316, file: !3, line: 5014, type: !813)
!7316 = distinct !DILexicalBlock(scope: !7310, file: !3, line: 5012, column: 7)
!7317 = !DILocation(line: 5014, column: 11, scope: !7316)
!7318 = !DILocalVariable(name: "q", scope: !7316, file: !3, line: 5017, type: !2119)
!7319 = !DILocation(line: 5017, column: 21, scope: !7316)
!7320 = !DILocation(line: 5019, column: 30, scope: !7316)
!7321 = !DILocation(line: 5019, column: 38, scope: !7316)
!7322 = !DILocation(line: 5019, column: 40, scope: !7316)
!7323 = !DILocation(line: 5019, column: 47, scope: !7316)
!7324 = !DILocation(line: 5019, column: 58, scope: !7316)
!7325 = !DILocation(line: 5019, column: 65, scope: !7316)
!7326 = !DILocation(line: 5019, column: 11, scope: !7316)
!7327 = !DILocation(line: 5019, column: 10, scope: !7316)
!7328 = !DILocation(line: 5020, column: 13, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5020, column: 13)
!7330 = !DILocation(line: 5020, column: 15, scope: !7329)
!7331 = !DILocation(line: 5020, column: 13, scope: !7316)
!7332 = !DILocation(line: 5021, column: 11, scope: !7329)
!7333 = !DILocation(line: 5022, column: 15, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5022, column: 9)
!7335 = !DILocation(line: 5022, column: 14, scope: !7334)
!7336 = !DILocation(line: 5022, column: 19, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 5022, column: 9)
!7338 = !DILocation(line: 5022, column: 33, scope: !7337)
!7339 = !DILocation(line: 5022, column: 40, scope: !7337)
!7340 = !DILocation(line: 5022, column: 21, scope: !7337)
!7341 = !DILocation(line: 5022, column: 9, scope: !7334)
!7342 = !DILocation(line: 5024, column: 30, scope: !7343)
!7343 = distinct !DILexicalBlock(scope: !7344, file: !3, line: 5024, column: 15)
!7344 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 5023, column: 9)
!7345 = !DILocation(line: 5024, column: 36, scope: !7343)
!7346 = !DILocation(line: 5024, column: 15, scope: !7343)
!7347 = !DILocation(line: 5024, column: 47, scope: !7343)
!7348 = !DILocation(line: 5024, column: 15, scope: !7344)
!7349 = !DILocation(line: 5025, column: 14, scope: !7343)
!7350 = !DILocation(line: 5025, column: 16, scope: !7343)
!7351 = !DILocation(line: 5025, column: 13, scope: !7343)
!7352 = !DILocation(line: 5026, column: 12, scope: !7344)
!7353 = !DILocation(line: 5027, column: 9, scope: !7344)
!7354 = !DILocation(line: 5022, column: 50, scope: !7337)
!7355 = !DILocation(line: 5022, column: 9, scope: !7337)
!7356 = distinct !{!7356, !7341, !7357}
!7357 = !DILocation(line: 5027, column: 9, scope: !7334)
!7358 = !DILocation(line: 5028, column: 33, scope: !7359)
!7359 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5028, column: 13)
!7360 = !DILocation(line: 5028, column: 40, scope: !7359)
!7361 = !DILocation(line: 5028, column: 47, scope: !7359)
!7362 = !DILocation(line: 5028, column: 13, scope: !7359)
!7363 = !DILocation(line: 5028, column: 58, scope: !7359)
!7364 = !DILocation(line: 5028, column: 13, scope: !7316)
!7365 = !DILocation(line: 5029, column: 11, scope: !7359)
!7366 = !DILocation(line: 5030, column: 34, scope: !7316)
!7367 = !DILocation(line: 5030, column: 74, scope: !7316)
!7368 = !DILocation(line: 5031, column: 11, scope: !7316)
!7369 = !DILocation(line: 5031, column: 18, scope: !7316)
!7370 = !DILocation(line: 5030, column: 17, scope: !7316)
!7371 = !DILocation(line: 5030, column: 16, scope: !7316)
!7372 = !DILocation(line: 5032, column: 13, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7316, file: !3, line: 5032, column: 13)
!7374 = !DILocation(line: 5032, column: 21, scope: !7373)
!7375 = !DILocation(line: 5032, column: 13, scope: !7316)
!7376 = !DILocation(line: 5033, column: 11, scope: !7373)
!7377 = !DILocation(line: 5034, column: 7, scope: !7316)
!7378 = !DILocation(line: 5011, column: 45, scope: !7310)
!7379 = !DILocation(line: 5011, column: 7, scope: !7310)
!7380 = distinct !{!7380, !7314, !7381}
!7381 = !DILocation(line: 5034, column: 7, scope: !7305)
!7382 = !DILocation(line: 5035, column: 7, scope: !7306)
!7383 = !DILocation(line: 5042, column: 13, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 5042, column: 7)
!7385 = distinct !DILexicalBlock(scope: !7307, file: !3, line: 5038, column: 5)
!7386 = !DILocation(line: 5042, column: 12, scope: !7384)
!7387 = !DILocation(line: 5042, column: 17, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 5042, column: 7)
!7389 = !DILocation(line: 5042, column: 31, scope: !7388)
!7390 = !DILocation(line: 5042, column: 38, scope: !7388)
!7391 = !DILocation(line: 5042, column: 19, scope: !7388)
!7392 = !DILocation(line: 5042, column: 7, scope: !7384)
!7393 = !DILocation(line: 5044, column: 28, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7395, file: !3, line: 5044, column: 13)
!7395 = distinct !DILexicalBlock(scope: !7388, file: !3, line: 5043, column: 7)
!7396 = !DILocation(line: 5044, column: 35, scope: !7394)
!7397 = !DILocation(line: 5044, column: 42, scope: !7394)
!7398 = !DILocation(line: 5044, column: 51, scope: !7394)
!7399 = !DILocation(line: 5044, column: 13, scope: !7394)
!7400 = !DILocation(line: 5044, column: 63, scope: !7394)
!7401 = !DILocation(line: 5044, column: 13, scope: !7395)
!7402 = !DILocation(line: 5045, column: 11, scope: !7394)
!7403 = !DILocation(line: 5045, column: 18, scope: !7394)
!7404 = !DILocation(line: 5045, column: 27, scope: !7394)
!7405 = !DILocation(line: 5045, column: 30, scope: !7394)
!7406 = !DILocation(line: 5046, column: 7, scope: !7395)
!7407 = !DILocation(line: 5042, column: 47, scope: !7388)
!7408 = !DILocation(line: 5042, column: 7, scope: !7388)
!7409 = distinct !{!7409, !7392, !7410}
!7410 = !DILocation(line: 5046, column: 7, scope: !7384)
!7411 = !DILocation(line: 5047, column: 16, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7385, file: !3, line: 5047, column: 11)
!7413 = !DILocation(line: 5047, column: 11, scope: !7412)
!7414 = !DILocation(line: 5047, column: 24, scope: !7412)
!7415 = !DILocation(line: 5047, column: 11, scope: !7385)
!7416 = !DILocation(line: 5049, column: 17, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 5049, column: 11)
!7418 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 5048, column: 9)
!7419 = !DILocation(line: 5049, column: 16, scope: !7417)
!7420 = !DILocation(line: 5049, column: 21, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 5049, column: 11)
!7422 = !DILocation(line: 5049, column: 35, scope: !7421)
!7423 = !DILocation(line: 5049, column: 42, scope: !7421)
!7424 = !DILocation(line: 5049, column: 23, scope: !7421)
!7425 = !DILocation(line: 5049, column: 11, scope: !7417)
!7426 = !DILocalVariable(name: "x", scope: !7427, file: !3, line: 5052, type: !813)
!7427 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 5050, column: 11)
!7428 = !DILocation(line: 5052, column: 15, scope: !7427)
!7429 = !DILocalVariable(name: "q", scope: !7427, file: !3, line: 5055, type: !2119)
!7430 = !DILocation(line: 5055, column: 25, scope: !7427)
!7431 = !DILocation(line: 5057, column: 34, scope: !7427)
!7432 = !DILocation(line: 5057, column: 42, scope: !7427)
!7433 = !DILocation(line: 5057, column: 44, scope: !7427)
!7434 = !DILocation(line: 5057, column: 51, scope: !7427)
!7435 = !DILocation(line: 5057, column: 62, scope: !7427)
!7436 = !DILocation(line: 5057, column: 69, scope: !7427)
!7437 = !DILocation(line: 5057, column: 15, scope: !7427)
!7438 = !DILocation(line: 5057, column: 14, scope: !7427)
!7439 = !DILocation(line: 5058, column: 17, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 5058, column: 17)
!7441 = !DILocation(line: 5058, column: 19, scope: !7440)
!7442 = !DILocation(line: 5058, column: 17, scope: !7427)
!7443 = !DILocation(line: 5059, column: 15, scope: !7440)
!7444 = !DILocation(line: 5060, column: 19, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 5060, column: 13)
!7446 = !DILocation(line: 5060, column: 18, scope: !7445)
!7447 = !DILocation(line: 5060, column: 23, scope: !7448)
!7448 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 5060, column: 13)
!7449 = !DILocation(line: 5060, column: 37, scope: !7448)
!7450 = !DILocation(line: 5060, column: 44, scope: !7448)
!7451 = !DILocation(line: 5060, column: 25, scope: !7448)
!7452 = !DILocation(line: 5060, column: 13, scope: !7445)
!7453 = !DILocation(line: 5062, column: 34, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7455, file: !3, line: 5062, column: 19)
!7455 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 5061, column: 13)
!7456 = !DILocation(line: 5062, column: 40, scope: !7454)
!7457 = !DILocation(line: 5062, column: 19, scope: !7454)
!7458 = !DILocation(line: 5062, column: 51, scope: !7454)
!7459 = !DILocation(line: 5062, column: 19, scope: !7455)
!7460 = !DILocation(line: 5063, column: 33, scope: !7454)
!7461 = !DILocation(line: 5063, column: 17, scope: !7454)
!7462 = !DILocation(line: 5063, column: 20, scope: !7454)
!7463 = !DILocation(line: 5063, column: 27, scope: !7454)
!7464 = !DILocation(line: 5064, column: 16, scope: !7455)
!7465 = !DILocation(line: 5065, column: 13, scope: !7455)
!7466 = !DILocation(line: 5060, column: 54, scope: !7448)
!7467 = !DILocation(line: 5060, column: 13, scope: !7448)
!7468 = distinct !{!7468, !7452, !7469}
!7469 = !DILocation(line: 5065, column: 13, scope: !7445)
!7470 = !DILocation(line: 5066, column: 37, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7427, file: !3, line: 5066, column: 17)
!7472 = !DILocation(line: 5066, column: 44, scope: !7471)
!7473 = !DILocation(line: 5066, column: 51, scope: !7471)
!7474 = !DILocation(line: 5066, column: 17, scope: !7471)
!7475 = !DILocation(line: 5066, column: 62, scope: !7471)
!7476 = !DILocation(line: 5066, column: 17, scope: !7427)
!7477 = !DILocation(line: 5067, column: 15, scope: !7471)
!7478 = !DILocation(line: 5068, column: 11, scope: !7427)
!7479 = !DILocation(line: 5049, column: 49, scope: !7421)
!7480 = !DILocation(line: 5049, column: 11, scope: !7421)
!7481 = distinct !{!7481, !7425, !7482}
!7482 = !DILocation(line: 5068, column: 11, scope: !7417)
!7483 = !DILocation(line: 5069, column: 9, scope: !7418)
!7484 = !DILocation(line: 5070, column: 24, scope: !7385)
!7485 = !DILocation(line: 5070, column: 14, scope: !7385)
!7486 = !DILocation(line: 5071, column: 7, scope: !7385)
!7487 = !DILocation(line: 5074, column: 12, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 5074, column: 7)
!7489 = !DILocation(line: 5074, column: 7, scope: !7488)
!7490 = !DILocation(line: 5074, column: 20, scope: !7488)
!7491 = !DILocation(line: 5074, column: 7, scope: !7275)
!7492 = !DILocation(line: 5075, column: 5, scope: !7488)
!7493 = !DILocation(line: 5075, column: 12, scope: !7488)
!7494 = !DILocation(line: 5075, column: 17, scope: !7488)
!7495 = !DILocation(line: 5076, column: 3, scope: !7275)
!7496 = distinct !DISubprogram(name: "SetImageProgress", scope: !7497, file: !7497, line: 27, type: !7498, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7497 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7498 = !DISubroutineType(types: !7499)
!7499 = !{!834, !1168, !943, !945, !948}
!7500 = !DILocalVariable(name: "image", arg: 1, scope: !7496, file: !7497, line: 27, type: !1168)
!7501 = !DILocation(line: 27, column: 63, scope: !7496)
!7502 = !DILocalVariable(name: "tag", arg: 2, scope: !7496, file: !7497, line: 28, type: !943)
!7503 = !DILocation(line: 28, column: 15, scope: !7496)
!7504 = !DILocalVariable(name: "offset", arg: 3, scope: !7496, file: !7497, line: 28, type: !945)
!7505 = !DILocation(line: 28, column: 42, scope: !7496)
!7506 = !DILocalVariable(name: "extent", arg: 4, scope: !7496, file: !7497, line: 28, type: !948)
!7507 = !DILocation(line: 28, column: 70, scope: !7496)
!7508 = !DILocalVariable(name: "message", scope: !7496, file: !7497, line: 31, type: !963)
!7509 = !DILocation(line: 31, column: 5, scope: !7496)
!7510 = !DILocation(line: 33, column: 7, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7496, file: !7497, line: 33, column: 7)
!7512 = !DILocation(line: 33, column: 14, scope: !7511)
!7513 = !DILocation(line: 33, column: 31, scope: !7511)
!7514 = !DILocation(line: 33, column: 7, scope: !7496)
!7515 = !DILocation(line: 34, column: 5, scope: !7511)
!7516 = !DILocation(line: 35, column: 29, scope: !7496)
!7517 = !DILocation(line: 35, column: 59, scope: !7496)
!7518 = !DILocation(line: 35, column: 63, scope: !7496)
!7519 = !DILocation(line: 35, column: 70, scope: !7496)
!7520 = !DILocation(line: 35, column: 10, scope: !7496)
!7521 = !DILocation(line: 36, column: 10, scope: !7496)
!7522 = !DILocation(line: 36, column: 17, scope: !7496)
!7523 = !DILocation(line: 36, column: 34, scope: !7496)
!7524 = !DILocation(line: 36, column: 42, scope: !7496)
!7525 = !DILocation(line: 36, column: 49, scope: !7496)
!7526 = !DILocation(line: 36, column: 56, scope: !7496)
!7527 = !DILocation(line: 36, column: 63, scope: !7496)
!7528 = !DILocation(line: 36, column: 3, scope: !7496)
!7529 = !DILocation(line: 37, column: 1, scope: !7496)
!7530 = distinct !DISubprogram(name: "OpenCacheView", scope: !3, file: !3, line: 5106, type: !7531, scopeLine: 5107, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7531 = !DISubroutineType(types: !7532)
!7532 = !{!1229, !1168}
!7533 = !DILocalVariable(name: "image", arg: 1, scope: !7530, file: !3, line: 5106, type: !1168)
!7534 = !DILocation(line: 5106, column: 52, scope: !7530)
!7535 = !DILocation(line: 5108, column: 34, scope: !7530)
!7536 = !DILocation(line: 5108, column: 52, scope: !7530)
!7537 = !DILocation(line: 5108, column: 60, scope: !7530)
!7538 = !DILocation(line: 5108, column: 10, scope: !7530)
!7539 = !DILocation(line: 5108, column: 3, scope: !7530)
!7540 = distinct !DISubprogram(name: "OpenMagickStream", scope: !3, file: !3, line: 5254, type: !7541, scopeLine: 5255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7541 = !DISubroutineType(types: !7542)
!7542 = !{!1058, !943, !943}
!7543 = !DILocalVariable(name: "path", arg: 1, scope: !7540, file: !3, line: 5254, type: !943)
!7544 = !DILocation(line: 5254, column: 49, scope: !7540)
!7545 = !DILocalVariable(name: "mode", arg: 2, scope: !7540, file: !3, line: 5254, type: !943)
!7546 = !DILocation(line: 5254, column: 66, scope: !7540)
!7547 = !DILocalVariable(name: "file", scope: !7540, file: !3, line: 5257, type: !1058)
!7548 = !DILocation(line: 5257, column: 6, scope: !7540)
!7549 = !DILocation(line: 5259, column: 8, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 5259, column: 7)
!7551 = !DILocation(line: 5259, column: 13, scope: !7550)
!7552 = !DILocation(line: 5259, column: 37, scope: !7550)
!7553 = !DILocation(line: 5259, column: 41, scope: !7550)
!7554 = !DILocation(line: 5259, column: 46, scope: !7550)
!7555 = !DILocation(line: 5259, column: 7, scope: !7540)
!7556 = !DILocation(line: 5261, column: 7, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 5260, column: 5)
!7558 = !DILocation(line: 5261, column: 12, scope: !7557)
!7559 = !DILocation(line: 5262, column: 7, scope: !7557)
!7560 = !DILocation(line: 5264, column: 7, scope: !7540)
!7561 = !DILocation(line: 5285, column: 7, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7540, file: !3, line: 5285, column: 7)
!7563 = !DILocation(line: 5285, column: 12, scope: !7562)
!7564 = !DILocation(line: 5285, column: 7, scope: !7540)
!7565 = !DILocation(line: 5286, column: 16, scope: !7562)
!7566 = !DILocation(line: 5286, column: 21, scope: !7562)
!7567 = !DILocation(line: 5286, column: 10, scope: !7562)
!7568 = !DILocation(line: 5286, column: 9, scope: !7562)
!7569 = !DILocation(line: 5286, column: 5, scope: !7562)
!7570 = !DILocation(line: 5287, column: 10, scope: !7540)
!7571 = !DILocation(line: 5287, column: 3, scope: !7540)
!7572 = !DILocation(line: 5288, column: 1, scope: !7540)
!7573 = distinct !DISubprogram(name: "PaintFloodfillImage", scope: !3, file: !3, line: 5340, type: !7574, scopeLine: 5343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{!834, !818, !1652, !5944, !1301, !1301, !1854, !1963}
!7576 = !DILocalVariable(name: "image", arg: 1, scope: !7573, file: !3, line: 5340, type: !818)
!7577 = !DILocation(line: 5340, column: 59, scope: !7573)
!7578 = !DILocalVariable(name: "channel", arg: 2, scope: !7573, file: !3, line: 5341, type: !1652)
!7579 = !DILocation(line: 5341, column: 21, scope: !7573)
!7580 = !DILocalVariable(name: "target", arg: 3, scope: !7573, file: !3, line: 5341, type: !5944)
!7581 = !DILocation(line: 5341, column: 54, scope: !7573)
!7582 = !DILocalVariable(name: "x", arg: 4, scope: !7573, file: !3, line: 5341, type: !1301)
!7583 = !DILocation(line: 5341, column: 75, scope: !7573)
!7584 = !DILocalVariable(name: "y", arg: 5, scope: !7573, file: !3, line: 5342, type: !1301)
!7585 = !DILocation(line: 5342, column: 17, scope: !7573)
!7586 = !DILocalVariable(name: "draw_info", arg: 6, scope: !7573, file: !3, line: 5342, type: !1854)
!7587 = !DILocation(line: 5342, column: 35, scope: !7573)
!7588 = !DILocalVariable(name: "method", arg: 7, scope: !7573, file: !3, line: 5342, type: !1963)
!7589 = !DILocation(line: 5342, column: 63, scope: !7573)
!7590 = !DILocalVariable(name: "status", scope: !7573, file: !3, line: 5345, type: !834)
!7591 = !DILocation(line: 5345, column: 5, scope: !7573)
!7592 = !DILocation(line: 5347, column: 30, scope: !7573)
!7593 = !DILocation(line: 5347, column: 36, scope: !7573)
!7594 = !DILocation(line: 5347, column: 44, scope: !7573)
!7595 = !DILocation(line: 5347, column: 54, scope: !7573)
!7596 = !DILocation(line: 5347, column: 61, scope: !7573)
!7597 = !DILocation(line: 5347, column: 63, scope: !7573)
!7598 = !DILocation(line: 5348, column: 5, scope: !7573)
!7599 = !DILocation(line: 5348, column: 12, scope: !7573)
!7600 = !DILocation(line: 5347, column: 10, scope: !7573)
!7601 = !DILocation(line: 5347, column: 9, scope: !7573)
!7602 = !DILocation(line: 5349, column: 10, scope: !7573)
!7603 = !DILocation(line: 5349, column: 3, scope: !7573)
!7604 = distinct !DISubprogram(name: "PaintOpaqueImage", scope: !3, file: !3, line: 5395, type: !7605, scopeLine: 5397, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7605 = !DISubroutineType(types: !7606)
!7606 = !{!834, !818, !5944, !5944}
!7607 = !DILocalVariable(name: "image", arg: 1, scope: !7604, file: !3, line: 5395, type: !818)
!7608 = !DILocation(line: 5395, column: 56, scope: !7604)
!7609 = !DILocalVariable(name: "target", arg: 2, scope: !7604, file: !3, line: 5396, type: !5944)
!7610 = !DILocation(line: 5396, column: 28, scope: !7604)
!7611 = !DILocalVariable(name: "fill", arg: 3, scope: !7604, file: !3, line: 5396, type: !5944)
!7612 = !DILocation(line: 5396, column: 60, scope: !7604)
!7613 = !DILocalVariable(name: "status", scope: !7604, file: !3, line: 5399, type: !834)
!7614 = !DILocation(line: 5399, column: 5, scope: !7604)
!7615 = !DILocation(line: 5401, column: 34, scope: !7604)
!7616 = !DILocation(line: 5401, column: 56, scope: !7604)
!7617 = !DILocation(line: 5401, column: 63, scope: !7604)
!7618 = !DILocation(line: 5401, column: 10, scope: !7604)
!7619 = !DILocation(line: 5401, column: 9, scope: !7604)
!7620 = !DILocation(line: 5402, column: 10, scope: !7604)
!7621 = !DILocation(line: 5402, column: 3, scope: !7604)
!7622 = distinct !DISubprogram(name: "PaintOpaqueImageChannel", scope: !3, file: !3, line: 5405, type: !7623, scopeLine: 5408, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7623 = !DISubroutineType(types: !7624)
!7624 = !{!834, !818, !1652, !5944, !5944}
!7625 = !DILocalVariable(name: "image", arg: 1, scope: !7622, file: !3, line: 5405, type: !818)
!7626 = !DILocation(line: 5405, column: 63, scope: !7622)
!7627 = !DILocalVariable(name: "channel", arg: 2, scope: !7622, file: !3, line: 5406, type: !1652)
!7628 = !DILocation(line: 5406, column: 21, scope: !7622)
!7629 = !DILocalVariable(name: "target", arg: 3, scope: !7622, file: !3, line: 5406, type: !5944)
!7630 = !DILocation(line: 5406, column: 54, scope: !7622)
!7631 = !DILocalVariable(name: "fill", arg: 4, scope: !7622, file: !3, line: 5407, type: !5944)
!7632 = !DILocation(line: 5407, column: 28, scope: !7622)
!7633 = !DILocation(line: 5409, column: 34, scope: !7622)
!7634 = !DILocation(line: 5409, column: 40, scope: !7622)
!7635 = !DILocation(line: 5409, column: 48, scope: !7622)
!7636 = !DILocation(line: 5409, column: 55, scope: !7622)
!7637 = !DILocation(line: 5409, column: 10, scope: !7622)
!7638 = !DILocation(line: 5409, column: 3, scope: !7622)
!7639 = distinct !DISubprogram(name: "PaintTransparentImage", scope: !3, file: !3, line: 5450, type: !7640, scopeLine: 5452, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7640 = !DISubroutineType(types: !7641)
!7641 = !{!834, !818, !5944, !6606}
!7642 = !DILocalVariable(name: "image", arg: 1, scope: !7639, file: !3, line: 5450, type: !818)
!7643 = !DILocation(line: 5450, column: 61, scope: !7639)
!7644 = !DILocalVariable(name: "target", arg: 2, scope: !7639, file: !3, line: 5451, type: !5944)
!7645 = !DILocation(line: 5451, column: 28, scope: !7639)
!7646 = !DILocalVariable(name: "opacity", arg: 3, scope: !7639, file: !3, line: 5451, type: !6606)
!7647 = !DILocation(line: 5451, column: 49, scope: !7639)
!7648 = !DILocation(line: 5453, column: 32, scope: !7639)
!7649 = !DILocation(line: 5453, column: 38, scope: !7639)
!7650 = !DILocation(line: 5453, column: 45, scope: !7639)
!7651 = !DILocation(line: 5453, column: 10, scope: !7639)
!7652 = !DILocation(line: 5453, column: 3, scope: !7639)
!7653 = distinct !DISubprogram(name: "ParseImageGeometry", scope: !3, file: !3, line: 5495, type: !7654, scopeLine: 5497, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7654 = !DISubroutineType(types: !7655)
!7655 = !{!808, !943, !3881, !3881, !3564, !3564}
!7656 = !DILocalVariable(name: "geometry", arg: 1, scope: !7653, file: !3, line: 5495, type: !943)
!7657 = !DILocation(line: 5495, column: 49, scope: !7653)
!7658 = !DILocalVariable(name: "x", arg: 2, scope: !7653, file: !3, line: 5495, type: !3881)
!7659 = !DILocation(line: 5495, column: 67, scope: !7653)
!7660 = !DILocalVariable(name: "y", arg: 3, scope: !7653, file: !3, line: 5495, type: !3881)
!7661 = !DILocation(line: 5495, column: 78, scope: !7653)
!7662 = !DILocalVariable(name: "width", arg: 4, scope: !7653, file: !3, line: 5496, type: !3564)
!7663 = !DILocation(line: 5496, column: 11, scope: !7653)
!7664 = !DILocalVariable(name: "height", arg: 5, scope: !7653, file: !3, line: 5496, type: !3564)
!7665 = !DILocation(line: 5496, column: 25, scope: !7653)
!7666 = !DILocation(line: 5498, column: 10, scope: !7653)
!7667 = !DILocation(line: 5499, column: 34, scope: !7653)
!7668 = !DILocation(line: 5499, column: 43, scope: !7653)
!7669 = !DILocation(line: 5499, column: 45, scope: !7653)
!7670 = !DILocation(line: 5499, column: 47, scope: !7653)
!7671 = !DILocation(line: 5499, column: 53, scope: !7653)
!7672 = !DILocation(line: 5499, column: 16, scope: !7653)
!7673 = !DILocation(line: 5499, column: 3, scope: !7653)
!7674 = distinct !DISubprogram(name: "ParseSizeGeometry", scope: !3, file: !3, line: 5533, type: !7675, scopeLine: 5535, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7675 = !DISubroutineType(types: !7676)
!7676 = !{!7677, !1168, !943, !3947}
!7677 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !80, line: 147, baseType: !7)
!7678 = !DILocalVariable(name: "image", arg: 1, scope: !7674, file: !3, line: 5533, type: !1168)
!7679 = !DILocation(line: 5533, column: 62, scope: !7674)
!7680 = !DILocalVariable(name: "geometry", arg: 2, scope: !7674, file: !3, line: 5534, type: !943)
!7681 = !DILocation(line: 5534, column: 15, scope: !7674)
!7682 = !DILocalVariable(name: "region_info", arg: 3, scope: !7674, file: !3, line: 5534, type: !3947)
!7683 = !DILocation(line: 5534, column: 39, scope: !7674)
!7684 = !DILocalVariable(name: "flags", scope: !7674, file: !3, line: 5537, type: !7677)
!7685 = !DILocation(line: 5537, column: 5, scope: !7674)
!7686 = !DILocation(line: 5539, column: 10, scope: !7674)
!7687 = !DILocation(line: 5540, column: 15, scope: !7674)
!7688 = !DILocation(line: 5540, column: 21, scope: !7674)
!7689 = !DILocation(line: 5540, column: 3, scope: !7674)
!7690 = !DILocation(line: 5541, column: 27, scope: !7674)
!7691 = !DILocation(line: 5541, column: 37, scope: !7674)
!7692 = !DILocation(line: 5541, column: 50, scope: !7674)
!7693 = !DILocation(line: 5541, column: 53, scope: !7674)
!7694 = !DILocation(line: 5541, column: 66, scope: !7674)
!7695 = !DILocation(line: 5542, column: 6, scope: !7674)
!7696 = !DILocation(line: 5542, column: 19, scope: !7674)
!7697 = !DILocation(line: 5542, column: 26, scope: !7674)
!7698 = !DILocation(line: 5542, column: 39, scope: !7674)
!7699 = !DILocation(line: 5541, column: 9, scope: !7674)
!7700 = !DILocation(line: 5541, column: 8, scope: !7674)
!7701 = !DILocation(line: 5543, column: 10, scope: !7674)
!7702 = !DILocation(line: 5543, column: 3, scope: !7674)
!7703 = distinct !DISubprogram(name: "PopImageList", scope: !3, file: !3, line: 5572, type: !7704, scopeLine: 5573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7704 = !DISubroutineType(types: !7705)
!7705 = !{!818, !7706}
!7706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !818, size: 64)
!7707 = !DILocalVariable(name: "images", arg: 1, scope: !7703, file: !3, line: 5572, type: !7706)
!7708 = !DILocation(line: 5572, column: 42, scope: !7703)
!7709 = !DILocation(line: 5574, column: 10, scope: !7703)
!7710 = !DILocation(line: 5575, column: 34, scope: !7703)
!7711 = !DILocation(line: 5575, column: 10, scope: !7703)
!7712 = !DILocation(line: 5575, column: 3, scope: !7703)
!7713 = distinct !DISubprogram(name: "PopImagePixels", scope: !3, file: !3, line: 5608, type: !7714, scopeLine: 5610, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7714 = !DISubroutineType(types: !7715)
!7715 = !{!829, !818, !7716, !812}
!7716 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7717)
!7717 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumType", file: !222, line: 82, baseType: !690)
!7718 = !DILocalVariable(name: "image", arg: 1, scope: !7713, file: !3, line: 5608, type: !818)
!7719 = !DILocation(line: 5608, column: 43, scope: !7713)
!7720 = !DILocalVariable(name: "quantum", arg: 2, scope: !7713, file: !3, line: 5608, type: !7716)
!7721 = !DILocation(line: 5608, column: 67, scope: !7713)
!7722 = !DILocalVariable(name: "destination", arg: 3, scope: !7713, file: !3, line: 5609, type: !812)
!7723 = !DILocation(line: 5609, column: 18, scope: !7713)
!7724 = !DILocalVariable(name: "quantum_info", scope: !7713, file: !3, line: 5612, type: !1191)
!7725 = !DILocation(line: 5612, column: 6, scope: !7713)
!7726 = !DILocalVariable(name: "length", scope: !7713, file: !3, line: 5615, type: !829)
!7727 = !DILocation(line: 5615, column: 5, scope: !7713)
!7728 = !DILocation(line: 5617, column: 60, scope: !7713)
!7729 = !DILocation(line: 5617, column: 16, scope: !7713)
!7730 = !DILocation(line: 5617, column: 15, scope: !7713)
!7731 = !DILocation(line: 5618, column: 7, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7713, file: !3, line: 5618, column: 7)
!7733 = !DILocation(line: 5618, column: 20, scope: !7732)
!7734 = !DILocation(line: 5618, column: 7, scope: !7713)
!7735 = !DILocation(line: 5619, column: 5, scope: !7732)
!7736 = !DILocation(line: 5620, column: 30, scope: !7713)
!7737 = !DILocation(line: 5620, column: 61, scope: !7713)
!7738 = !DILocation(line: 5621, column: 5, scope: !7713)
!7739 = !DILocation(line: 5621, column: 13, scope: !7713)
!7740 = !DILocation(line: 5621, column: 26, scope: !7713)
!7741 = !DILocation(line: 5621, column: 33, scope: !7713)
!7742 = !DILocation(line: 5620, column: 10, scope: !7713)
!7743 = !DILocation(line: 5620, column: 9, scope: !7713)
!7744 = !DILocation(line: 5622, column: 35, scope: !7713)
!7745 = !DILocation(line: 5622, column: 16, scope: !7713)
!7746 = !DILocation(line: 5622, column: 15, scope: !7713)
!7747 = !DILocation(line: 5623, column: 10, scope: !7713)
!7748 = !DILocation(line: 5623, column: 3, scope: !7713)
!7749 = !DILocation(line: 5624, column: 1, scope: !7713)
!7750 = distinct !DISubprogram(name: "PostscriptGeometry", scope: !3, file: !3, line: 5655, type: !1600, scopeLine: 5656, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7751 = !DILocalVariable(name: "page", arg: 1, scope: !7750, file: !3, line: 5655, type: !943)
!7752 = !DILocation(line: 5655, column: 51, scope: !7750)
!7753 = !DILocation(line: 5657, column: 10, scope: !7750)
!7754 = !DILocation(line: 5658, column: 26, scope: !7750)
!7755 = !DILocation(line: 5658, column: 10, scope: !7750)
!7756 = !DILocation(line: 5658, column: 3, scope: !7750)
!7757 = distinct !DISubprogram(name: "PushImageList", scope: !3, file: !3, line: 5692, type: !7758, scopeLine: 5694, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7758 = !DISubroutineType(types: !7759)
!7759 = !{!7, !7706, !1168, !1057}
!7760 = !DILocalVariable(name: "images", arg: 1, scope: !7757, file: !3, line: 5692, type: !7706)
!7761 = !DILocation(line: 5692, column: 49, scope: !7757)
!7762 = !DILocalVariable(name: "image", arg: 2, scope: !7757, file: !3, line: 5692, type: !1168)
!7763 = !DILocation(line: 5692, column: 69, scope: !7757)
!7764 = !DILocalVariable(name: "exception", arg: 3, scope: !7757, file: !3, line: 5693, type: !1057)
!7765 = !DILocation(line: 5693, column: 18, scope: !7757)
!7766 = !DILocation(line: 5695, column: 10, scope: !7757)
!7767 = !DILocation(line: 5696, column: 21, scope: !7757)
!7768 = !DILocation(line: 5696, column: 43, scope: !7757)
!7769 = !DILocation(line: 5696, column: 49, scope: !7757)
!7770 = !DILocation(line: 5696, column: 28, scope: !7757)
!7771 = !DILocation(line: 5696, column: 3, scope: !7757)
!7772 = !DILocation(line: 5697, column: 3, scope: !7757)
!7773 = distinct !DISubprogram(name: "PushImagePixels", scope: !3, file: !3, line: 5731, type: !7774, scopeLine: 5733, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7774 = !DISubroutineType(types: !7775)
!7775 = !{!829, !818, !7716, !809}
!7776 = !DILocalVariable(name: "image", arg: 1, scope: !7773, file: !3, line: 5731, type: !818)
!7777 = !DILocation(line: 5731, column: 44, scope: !7773)
!7778 = !DILocalVariable(name: "quantum", arg: 2, scope: !7773, file: !3, line: 5731, type: !7716)
!7779 = !DILocation(line: 5731, column: 68, scope: !7773)
!7780 = !DILocalVariable(name: "source", arg: 3, scope: !7773, file: !3, line: 5732, type: !809)
!7781 = !DILocation(line: 5732, column: 24, scope: !7773)
!7782 = !DILocalVariable(name: "quantum_info", scope: !7773, file: !3, line: 5735, type: !1191)
!7783 = !DILocation(line: 5735, column: 6, scope: !7773)
!7784 = !DILocalVariable(name: "length", scope: !7773, file: !3, line: 5738, type: !829)
!7785 = !DILocation(line: 5738, column: 5, scope: !7773)
!7786 = !DILocation(line: 5740, column: 60, scope: !7773)
!7787 = !DILocation(line: 5740, column: 16, scope: !7773)
!7788 = !DILocation(line: 5740, column: 15, scope: !7773)
!7789 = !DILocation(line: 5741, column: 7, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 5741, column: 7)
!7791 = !DILocation(line: 5741, column: 20, scope: !7790)
!7792 = !DILocation(line: 5741, column: 7, scope: !7773)
!7793 = !DILocation(line: 5742, column: 5, scope: !7790)
!7794 = !DILocation(line: 5743, column: 30, scope: !7773)
!7795 = !DILocation(line: 5743, column: 55, scope: !7773)
!7796 = !DILocation(line: 5743, column: 68, scope: !7773)
!7797 = !DILocation(line: 5744, column: 5, scope: !7773)
!7798 = !DILocation(line: 5744, column: 13, scope: !7773)
!7799 = !DILocation(line: 5744, column: 20, scope: !7773)
!7800 = !DILocation(line: 5743, column: 10, scope: !7773)
!7801 = !DILocation(line: 5743, column: 9, scope: !7773)
!7802 = !DILocation(line: 5745, column: 35, scope: !7773)
!7803 = !DILocation(line: 5745, column: 16, scope: !7773)
!7804 = !DILocation(line: 5745, column: 15, scope: !7773)
!7805 = !DILocation(line: 5746, column: 10, scope: !7773)
!7806 = !DILocation(line: 5746, column: 3, scope: !7773)
!7807 = !DILocation(line: 5747, column: 1, scope: !7773)
!7808 = distinct !DISubprogram(name: "QuantizationError", scope: !3, file: !3, line: 5793, type: !7809, scopeLine: 5794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7809 = !DISubroutineType(types: !7810)
!7810 = !{!7, !818}
!7811 = !DILocalVariable(name: "image", arg: 1, scope: !7808, file: !3, line: 5793, type: !818)
!7812 = !DILocation(line: 5793, column: 52, scope: !7808)
!7813 = !DILocation(line: 5795, column: 7, scope: !7814)
!7814 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 5795, column: 7)
!7815 = !DILocation(line: 5795, column: 14, scope: !7814)
!7816 = !DILocation(line: 5795, column: 20, scope: !7814)
!7817 = !DILocation(line: 5795, column: 7, scope: !7808)
!7818 = !DILocation(line: 5796, column: 12, scope: !7814)
!7819 = !DILocation(line: 5796, column: 5, scope: !7814)
!7820 = !DILocation(line: 5797, column: 32, scope: !7808)
!7821 = !DILocation(line: 5797, column: 10, scope: !7808)
!7822 = !DILocation(line: 5797, column: 3, scope: !7808)
!7823 = distinct !DISubprogram(name: "RadialBlurImage", scope: !3, file: !3, line: 5834, type: !7227, scopeLine: 5836, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7824 = !DILocalVariable(name: "image", arg: 1, scope: !7823, file: !3, line: 5834, type: !1168)
!7825 = !DILocation(line: 5834, column: 50, scope: !7823)
!7826 = !DILocalVariable(name: "angle", arg: 2, scope: !7823, file: !3, line: 5834, type: !3008)
!7827 = !DILocation(line: 5834, column: 69, scope: !7823)
!7828 = !DILocalVariable(name: "exception", arg: 3, scope: !7823, file: !3, line: 5835, type: !1057)
!7829 = !DILocation(line: 5835, column: 18, scope: !7823)
!7830 = !DILocation(line: 5837, column: 30, scope: !7823)
!7831 = !DILocation(line: 5837, column: 36, scope: !7823)
!7832 = !DILocation(line: 5837, column: 42, scope: !7823)
!7833 = !DILocation(line: 5837, column: 10, scope: !7823)
!7834 = !DILocation(line: 5837, column: 3, scope: !7823)
!7835 = distinct !DISubprogram(name: "RadialBlurImageChannel", scope: !3, file: !3, line: 5840, type: !7836, scopeLine: 5842, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!7836 = !DISubroutineType(types: !7837)
!7837 = !{!818, !1168, !1652, !3008, !1057}
!7838 = !DILocalVariable(name: "image", arg: 1, scope: !7835, file: !3, line: 5840, type: !1168)
!7839 = !DILocation(line: 5840, column: 57, scope: !7835)
!7840 = !DILocalVariable(name: "channel", arg: 2, scope: !7835, file: !3, line: 5841, type: !1652)
!7841 = !DILocation(line: 5841, column: 21, scope: !7835)
!7842 = !DILocalVariable(name: "angle", arg: 3, scope: !7835, file: !3, line: 5841, type: !3008)
!7843 = !DILocation(line: 5841, column: 42, scope: !7835)
!7844 = !DILocalVariable(name: "exception", arg: 4, scope: !7835, file: !3, line: 5841, type: !1057)
!7845 = !DILocation(line: 5841, column: 63, scope: !7835)
!7846 = !DILocation(line: 5843, column: 37, scope: !7835)
!7847 = !DILocation(line: 5843, column: 43, scope: !7835)
!7848 = !DILocation(line: 5843, column: 51, scope: !7835)
!7849 = !DILocation(line: 5843, column: 57, scope: !7835)
!7850 = !DILocation(line: 5843, column: 10, scope: !7835)
!7851 = !DILocation(line: 5843, column: 3, scope: !7835)
!7852 = !DILocalVariable(name: "image", arg: 1, scope: !1257, file: !3, line: 5879, type: !818)
!7853 = !DILocation(line: 5879, column: 62, scope: !1257)
!7854 = !DILocalVariable(name: "channel", arg: 2, scope: !1257, file: !3, line: 5880, type: !943)
!7855 = !DILocation(line: 5880, column: 6, scope: !1257)
!7856 = !DILocalVariable(name: "thresholds", arg: 3, scope: !1257, file: !3, line: 5880, type: !943)
!7857 = !DILocation(line: 5880, column: 26, scope: !1257)
!7858 = !DILocalVariable(name: "exception", arg: 4, scope: !1257, file: !3, line: 5880, type: !1057)
!7859 = !DILocation(line: 5880, column: 52, scope: !1257)
!7860 = !DILocalVariable(name: "lower_threshold", scope: !1257, file: !3, line: 5885, type: !855)
!7861 = !DILocation(line: 5885, column: 5, scope: !1257)
!7862 = !DILocalVariable(name: "upper_threshold", scope: !1257, file: !3, line: 5886, type: !855)
!7863 = !DILocation(line: 5886, column: 5, scope: !1257)
!7864 = !DILocalVariable(name: "random_info", scope: !1257, file: !3, line: 5889, type: !7865)
!7865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7866, size: 64)
!7866 = !DIDerivedType(tag: DW_TAG_typedef, name: "RandomInfo", file: !7867, line: 31, baseType: !7868)
!7867 = !DIFile(filename: "./magick/random_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7868 = !DICompositeType(tag: DW_TAG_structure_type, name: "_RandomInfo", file: !7867, line: 30, flags: DIFlagFwdDecl)
!7869 = !DILocation(line: 5889, column: 6, scope: !1257)
!7870 = !DILocalVariable(name: "count", scope: !1257, file: !3, line: 5892, type: !813)
!7871 = !DILocation(line: 5892, column: 5, scope: !1257)
!7872 = !DILocalVariable(name: "y", scope: !1257, file: !3, line: 5893, type: !813)
!7873 = !DILocation(line: 5893, column: 5, scope: !1257)
!7874 = !DILocalVariable(name: "order", scope: !1257, file: !3, line: 5903, type: !829)
!7875 = !DILocation(line: 5903, column: 5, scope: !1257)
!7876 = !DILocation(line: 5910, column: 7, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5910, column: 7)
!7878 = !DILocation(line: 5910, column: 14, scope: !7877)
!7879 = !DILocation(line: 5910, column: 20, scope: !7877)
!7880 = !DILocation(line: 5910, column: 7, scope: !1257)
!7881 = !DILocation(line: 5911, column: 61, scope: !7877)
!7882 = !DILocation(line: 5911, column: 68, scope: !7877)
!7883 = !DILocation(line: 5911, column: 12, scope: !7877)
!7884 = !DILocation(line: 5911, column: 5, scope: !7877)
!7885 = !DILocation(line: 5914, column: 7, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5914, column: 7)
!7887 = !DILocation(line: 5914, column: 14, scope: !7886)
!7888 = !DILocation(line: 5914, column: 20, scope: !7886)
!7889 = !DILocation(line: 5914, column: 7, scope: !1257)
!7890 = !DILocation(line: 5915, column: 12, scope: !7886)
!7891 = !DILocation(line: 5915, column: 5, scope: !7886)
!7892 = !DILocation(line: 5916, column: 7, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5916, column: 7)
!7894 = !DILocation(line: 5916, column: 18, scope: !7893)
!7895 = !DILocation(line: 5916, column: 7, scope: !1257)
!7896 = !DILocation(line: 5917, column: 5, scope: !7893)
!7897 = !DILocation(line: 5918, column: 18, scope: !1257)
!7898 = !DILocation(line: 5919, column: 18, scope: !1257)
!7899 = !DILocation(line: 5920, column: 21, scope: !7900)
!7900 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5920, column: 7)
!7901 = !DILocation(line: 5920, column: 7, scope: !7900)
!7902 = !DILocation(line: 5920, column: 39, scope: !7900)
!7903 = !DILocation(line: 5920, column: 7, scope: !1257)
!7904 = !DILocation(line: 5921, column: 10, scope: !7900)
!7905 = !DILocation(line: 5921, column: 5, scope: !7900)
!7906 = !DILocation(line: 5923, column: 23, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7900, file: !3, line: 5923, column: 9)
!7908 = !DILocation(line: 5923, column: 9, scope: !7907)
!7909 = !DILocation(line: 5923, column: 41, scope: !7907)
!7910 = !DILocation(line: 5923, column: 9, scope: !7900)
!7911 = !DILocation(line: 5924, column: 12, scope: !7907)
!7912 = !DILocation(line: 5924, column: 7, scope: !7907)
!7913 = !DILocation(line: 5926, column: 25, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 5926, column: 11)
!7915 = !DILocation(line: 5926, column: 11, scope: !7914)
!7916 = !DILocation(line: 5926, column: 43, scope: !7914)
!7917 = !DILocation(line: 5926, column: 11, scope: !7907)
!7918 = !DILocation(line: 5927, column: 14, scope: !7914)
!7919 = !DILocation(line: 5927, column: 9, scope: !7914)
!7920 = !DILocation(line: 5930, column: 16, scope: !7921)
!7921 = distinct !DILexicalBlock(scope: !7914, file: !3, line: 5929, column: 9)
!7922 = !DILocation(line: 5931, column: 34, scope: !7921)
!7923 = !DILocation(line: 5931, column: 27, scope: !7921)
!7924 = !DILocation(line: 5931, column: 17, scope: !7921)
!7925 = !DILocation(line: 5931, column: 16, scope: !7921)
!7926 = !DILocation(line: 5933, column: 22, scope: !7927)
!7927 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 5933, column: 15)
!7928 = !DILocation(line: 5933, column: 15, scope: !7927)
!7929 = !DILocation(line: 5933, column: 38, scope: !7927)
!7930 = !DILocation(line: 5933, column: 15, scope: !7921)
!7931 = !DILocation(line: 5935, column: 30, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 5934, column: 13)
!7933 = !DILocation(line: 5936, column: 30, scope: !7932)
!7934 = !DILocation(line: 5937, column: 13, scope: !7932)
!7935 = !DILocation(line: 5938, column: 15, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7921, file: !3, line: 5938, column: 15)
!7937 = !DILocation(line: 5938, column: 21, scope: !7936)
!7938 = !DILocation(line: 5938, column: 15, scope: !7921)
!7939 = !DILocation(line: 5939, column: 59, scope: !7936)
!7940 = !DILocation(line: 5939, column: 58, scope: !7936)
!7941 = !DILocation(line: 5939, column: 28, scope: !7936)
!7942 = !DILocation(line: 5939, column: 13, scope: !7936)
!7943 = !DILocation(line: 5941, column: 7, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5941, column: 7)
!7945 = !DILocation(line: 5941, column: 14, scope: !7944)
!7946 = !DILocation(line: 5941, column: 20, scope: !7944)
!7947 = !DILocation(line: 5941, column: 7, scope: !1257)
!7948 = !DILocation(line: 5943, column: 56, scope: !7944)
!7949 = !DILocation(line: 5942, column: 12, scope: !7944)
!7950 = !DILocation(line: 5942, column: 5, scope: !7944)
!7951 = !DILocation(line: 5944, column: 7, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5944, column: 7)
!7953 = !DILocation(line: 5944, column: 14, scope: !7952)
!7954 = !DILocation(line: 5944, column: 20, scope: !7952)
!7955 = !DILocation(line: 5944, column: 7, scope: !1257)
!7956 = !DILocation(line: 5946, column: 36, scope: !7952)
!7957 = !DILocation(line: 5946, column: 47, scope: !7952)
!7958 = !DILocation(line: 5946, column: 63, scope: !7952)
!7959 = !DILocation(line: 5945, column: 12, scope: !7952)
!7960 = !DILocation(line: 5945, column: 5, scope: !7952)
!7961 = !DILocation(line: 5947, column: 21, scope: !7962)
!7962 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5947, column: 7)
!7963 = !DILocation(line: 5947, column: 7, scope: !7962)
!7964 = !DILocation(line: 5947, column: 36, scope: !7962)
!7965 = !DILocation(line: 5947, column: 41, scope: !7962)
!7966 = !DILocation(line: 5948, column: 21, scope: !7962)
!7967 = !DILocation(line: 5948, column: 7, scope: !7962)
!7968 = !DILocation(line: 5948, column: 42, scope: !7962)
!7969 = !DILocation(line: 5947, column: 7, scope: !1257)
!7970 = !DILocation(line: 5949, column: 30, scope: !7971)
!7971 = distinct !DILexicalBlock(scope: !7962, file: !3, line: 5949, column: 9)
!7972 = !DILocation(line: 5949, column: 9, scope: !7971)
!7973 = !DILocation(line: 5949, column: 39, scope: !7971)
!7974 = !DILocation(line: 5949, column: 9, scope: !7962)
!7975 = !DILocation(line: 5950, column: 7, scope: !7976)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 5950, column: 7)
!7977 = distinct !DILexicalBlock(scope: !7971, file: !3, line: 5950, column: 7)
!7978 = !DILocation(line: 5950, column: 7, scope: !7977)
!7979 = !DILocation(line: 5949, column: 42, scope: !7971)
!7980 = !DILocation(line: 5952, column: 15, scope: !1257)
!7981 = !DILocation(line: 5952, column: 14, scope: !1257)
!7982 = !DILocation(line: 5953, column: 9, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !1257, file: !3, line: 5953, column: 3)
!7984 = !DILocation(line: 5953, column: 8, scope: !7983)
!7985 = !DILocation(line: 5953, column: 13, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 5953, column: 3)
!7987 = !DILocation(line: 5953, column: 27, scope: !7986)
!7988 = !DILocation(line: 5953, column: 34, scope: !7986)
!7989 = !DILocation(line: 5953, column: 15, scope: !7986)
!7990 = !DILocation(line: 5953, column: 3, scope: !7983)
!7991 = !DILocalVariable(name: "x", scope: !7992, file: !3, line: 5956, type: !813)
!7992 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 5954, column: 3)
!7993 = !DILocation(line: 5956, column: 7, scope: !7992)
!7994 = !DILocalVariable(name: "index", scope: !7992, file: !3, line: 5959, type: !1230)
!7995 = !DILocation(line: 5959, column: 7, scope: !7992)
!7996 = !DILocalVariable(name: "indexes", scope: !7992, file: !3, line: 5960, type: !7997)
!7997 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1231)
!7998 = !DILocation(line: 5960, column: 17, scope: !7992)
!7999 = !DILocalVariable(name: "q", scope: !7992, file: !3, line: 5963, type: !2119)
!8000 = !DILocation(line: 5963, column: 17, scope: !7992)
!8001 = !DILocation(line: 5965, column: 26, scope: !7992)
!8002 = !DILocation(line: 5965, column: 34, scope: !7992)
!8003 = !DILocation(line: 5965, column: 36, scope: !7992)
!8004 = !DILocation(line: 5965, column: 43, scope: !7992)
!8005 = !DILocation(line: 5965, column: 53, scope: !7992)
!8006 = !DILocation(line: 5965, column: 7, scope: !7992)
!8007 = !DILocation(line: 5965, column: 6, scope: !7992)
!8008 = !DILocation(line: 5966, column: 9, scope: !8009)
!8009 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 5966, column: 9)
!8010 = !DILocation(line: 5966, column: 11, scope: !8009)
!8011 = !DILocation(line: 5966, column: 9, scope: !7992)
!8012 = !DILocation(line: 5967, column: 7, scope: !8009)
!8013 = !DILocation(line: 5968, column: 23, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 5968, column: 9)
!8015 = !DILocation(line: 5968, column: 9, scope: !8014)
!8016 = !DILocation(line: 5968, column: 38, scope: !8014)
!8017 = !DILocation(line: 5968, column: 43, scope: !8014)
!8018 = !DILocation(line: 5969, column: 23, scope: !8014)
!8019 = !DILocation(line: 5969, column: 9, scope: !8014)
!8020 = !DILocation(line: 5969, column: 44, scope: !8014)
!8021 = !DILocation(line: 5968, column: 9, scope: !7992)
!8022 = !DILocation(line: 5971, column: 40, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 5970, column: 7)
!8024 = !DILocation(line: 5971, column: 17, scope: !8023)
!8025 = !DILocation(line: 5971, column: 16, scope: !8023)
!8026 = !DILocation(line: 5972, column: 15, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 5972, column: 9)
!8028 = !DILocation(line: 5972, column: 14, scope: !8027)
!8029 = !DILocation(line: 5972, column: 19, scope: !8030)
!8030 = distinct !DILexicalBlock(scope: !8027, file: !3, line: 5972, column: 9)
!8031 = !DILocation(line: 5972, column: 33, scope: !8030)
!8032 = !DILocation(line: 5972, column: 40, scope: !8030)
!8033 = !DILocation(line: 5972, column: 21, scope: !8030)
!8034 = !DILocation(line: 5972, column: 9, scope: !8027)
!8035 = !DILocalVariable(name: "intensity", scope: !8036, file: !3, line: 5975, type: !1034)
!8036 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 5973, column: 9)
!8037 = !DILocation(line: 5975, column: 13, scope: !8036)
!8038 = !DILocation(line: 5977, column: 39, scope: !8036)
!8039 = !DILocation(line: 5977, column: 45, scope: !8036)
!8040 = !DILocation(line: 5977, column: 21, scope: !8036)
!8041 = !DILocation(line: 5977, column: 20, scope: !8036)
!8042 = !DILocation(line: 5978, column: 15, scope: !8043)
!8043 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 5978, column: 15)
!8044 = !DILocation(line: 5978, column: 21, scope: !8043)
!8045 = !DILocation(line: 5978, column: 15, scope: !8036)
!8046 = !DILocation(line: 5980, column: 19, scope: !8047)
!8047 = distinct !DILexicalBlock(scope: !8048, file: !3, line: 5980, column: 19)
!8048 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5979, column: 13)
!8049 = !DILocation(line: 5980, column: 31, scope: !8047)
!8050 = !DILocation(line: 5980, column: 29, scope: !8047)
!8051 = !DILocation(line: 5980, column: 19, scope: !8048)
!8052 = !DILocation(line: 5981, column: 27, scope: !8047)
!8053 = !DILocation(line: 5981, column: 26, scope: !8047)
!8054 = !DILocation(line: 5981, column: 17, scope: !8047)
!8055 = !DILocation(line: 5982, column: 24, scope: !8056)
!8056 = distinct !DILexicalBlock(scope: !8047, file: !3, line: 5982, column: 24)
!8057 = !DILocation(line: 5982, column: 36, scope: !8056)
!8058 = !DILocation(line: 5982, column: 34, scope: !8056)
!8059 = !DILocation(line: 5982, column: 24, scope: !8047)
!8060 = !DILocation(line: 5983, column: 27, scope: !8056)
!8061 = !DILocation(line: 5983, column: 26, scope: !8056)
!8062 = !DILocation(line: 5983, column: 17, scope: !8056)
!8063 = !DILocation(line: 5986, column: 40, scope: !8056)
!8064 = !DILocation(line: 5986, column: 19, scope: !8056)
!8065 = !DILocation(line: 5985, column: 57, scope: !8056)
!8066 = !DILocation(line: 5985, column: 27, scope: !8056)
!8067 = !DILocation(line: 5985, column: 26, scope: !8056)
!8068 = !DILocation(line: 5987, column: 13, scope: !8048)
!8069 = !DILocation(line: 5988, column: 20, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8043, file: !3, line: 5988, column: 20)
!8071 = !DILocation(line: 5988, column: 26, scope: !8070)
!8072 = !DILocation(line: 5988, column: 20, scope: !8043)
!8073 = !DILocation(line: 5989, column: 57, scope: !8070)
!8074 = !DILocation(line: 5989, column: 58, scope: !8070)
!8075 = !DILocation(line: 5989, column: 65, scope: !8070)
!8076 = !DILocation(line: 5989, column: 66, scope: !8070)
!8077 = !DILocation(line: 5989, column: 63, scope: !8070)
!8078 = !DILocation(line: 5989, column: 61, scope: !8070)
!8079 = !DILocation(line: 5989, column: 53, scope: !8070)
!8080 = !DILocation(line: 5989, column: 52, scope: !8070)
!8081 = !DILocation(line: 5989, column: 22, scope: !8070)
!8082 = !DILocation(line: 5989, column: 13, scope: !8070)
!8083 = !DILocation(line: 5990, column: 20, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8070, file: !3, line: 5990, column: 20)
!8085 = !DILocation(line: 5990, column: 26, scope: !8084)
!8086 = !DILocation(line: 5990, column: 20, scope: !8070)
!8087 = !DILocation(line: 5991, column: 57, scope: !8084)
!8088 = !DILocation(line: 5991, column: 58, scope: !8084)
!8089 = !DILocation(line: 5991, column: 65, scope: !8084)
!8090 = !DILocation(line: 5991, column: 66, scope: !8084)
!8091 = !DILocation(line: 5991, column: 63, scope: !8084)
!8092 = !DILocation(line: 5991, column: 61, scope: !8084)
!8093 = !DILocation(line: 5991, column: 53, scope: !8084)
!8094 = !DILocation(line: 5991, column: 52, scope: !8084)
!8095 = !DILocation(line: 5991, column: 22, scope: !8084)
!8096 = !DILocation(line: 5991, column: 13, scope: !8084)
!8097 = !DILocation(line: 5992, column: 20, scope: !8098)
!8098 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 5992, column: 20)
!8099 = !DILocation(line: 5992, column: 26, scope: !8098)
!8100 = !DILocation(line: 5992, column: 20, scope: !8084)
!8101 = !DILocation(line: 5993, column: 57, scope: !8098)
!8102 = !DILocation(line: 5993, column: 58, scope: !8098)
!8103 = !DILocation(line: 5993, column: 65, scope: !8098)
!8104 = !DILocation(line: 5993, column: 66, scope: !8098)
!8105 = !DILocation(line: 5993, column: 63, scope: !8098)
!8106 = !DILocation(line: 5993, column: 61, scope: !8098)
!8107 = !DILocation(line: 5993, column: 53, scope: !8098)
!8108 = !DILocation(line: 5993, column: 52, scope: !8098)
!8109 = !DILocation(line: 5993, column: 22, scope: !8098)
!8110 = !DILocation(line: 5993, column: 13, scope: !8098)
!8111 = !DILocation(line: 5994, column: 32, scope: !8036)
!8112 = !DILocation(line: 5994, column: 45, scope: !8036)
!8113 = !DILocation(line: 5994, column: 42, scope: !8036)
!8114 = !DILocation(line: 5994, column: 17, scope: !8036)
!8115 = !DILocation(line: 5994, column: 16, scope: !8036)
!8116 = !DILocation(line: 5995, column: 11, scope: !8117)
!8117 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 5995, column: 11)
!8118 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 5995, column: 11)
!8119 = !DILocation(line: 5995, column: 11, scope: !8118)
!8120 = !DILocation(line: 5996, column: 11, scope: !8121)
!8121 = distinct !DILexicalBlock(scope: !8036, file: !3, line: 5996, column: 11)
!8122 = !DILocation(line: 5997, column: 12, scope: !8036)
!8123 = !DILocation(line: 5998, column: 9, scope: !8036)
!8124 = !DILocation(line: 5972, column: 50, scope: !8030)
!8125 = !DILocation(line: 5972, column: 9, scope: !8030)
!8126 = distinct !{!8126, !8034, !8127}
!8127 = !DILocation(line: 5998, column: 9, scope: !8027)
!8128 = !DILocation(line: 5999, column: 7, scope: !8023)
!8129 = !DILocation(line: 6000, column: 23, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 6000, column: 9)
!8131 = !DILocation(line: 6000, column: 9, scope: !8130)
!8132 = !DILocation(line: 6000, column: 42, scope: !8130)
!8133 = !DILocation(line: 6000, column: 47, scope: !8130)
!8134 = !DILocation(line: 6001, column: 23, scope: !8130)
!8135 = !DILocation(line: 6001, column: 9, scope: !8130)
!8136 = !DILocation(line: 6001, column: 38, scope: !8130)
!8137 = !DILocation(line: 6001, column: 43, scope: !8130)
!8138 = !DILocation(line: 6002, column: 23, scope: !8130)
!8139 = !DILocation(line: 6002, column: 9, scope: !8130)
!8140 = !DILocation(line: 6002, column: 40, scope: !8130)
!8141 = !DILocation(line: 6000, column: 9, scope: !7992)
!8142 = !DILocation(line: 6004, column: 13, scope: !8143)
!8143 = distinct !DILexicalBlock(scope: !8144, file: !3, line: 6004, column: 13)
!8144 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 6003, column: 7)
!8145 = !DILocation(line: 6004, column: 20, scope: !8143)
!8146 = !DILocation(line: 6004, column: 26, scope: !8143)
!8147 = !DILocation(line: 6004, column: 13, scope: !8144)
!8148 = !DILocation(line: 6005, column: 17, scope: !8149)
!8149 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 6005, column: 11)
!8150 = !DILocation(line: 6005, column: 16, scope: !8149)
!8151 = !DILocation(line: 6005, column: 21, scope: !8152)
!8152 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 6005, column: 11)
!8153 = !DILocation(line: 6005, column: 35, scope: !8152)
!8154 = !DILocation(line: 6005, column: 42, scope: !8152)
!8155 = !DILocation(line: 6005, column: 23, scope: !8152)
!8156 = !DILocation(line: 6005, column: 11, scope: !8149)
!8157 = !DILocation(line: 6007, column: 19, scope: !8158)
!8158 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 6007, column: 19)
!8159 = distinct !DILexicalBlock(scope: !8152, file: !3, line: 6006, column: 13)
!8160 = !DILocation(line: 6007, column: 25, scope: !8158)
!8161 = !DILocation(line: 6007, column: 19, scope: !8159)
!8162 = !DILocation(line: 6009, column: 40, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 6009, column: 23)
!8164 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 6008, column: 17)
!8165 = !DILocation(line: 6009, column: 43, scope: !8163)
!8166 = !DILocation(line: 6009, column: 23, scope: !8163)
!8167 = !DILocation(line: 6009, column: 53, scope: !8163)
!8168 = !DILocation(line: 6009, column: 51, scope: !8163)
!8169 = !DILocation(line: 6009, column: 23, scope: !8164)
!8170 = !DILocation(line: 6010, column: 31, scope: !8163)
!8171 = !DILocation(line: 6010, column: 30, scope: !8163)
!8172 = !DILocation(line: 6010, column: 21, scope: !8163)
!8173 = !DILocation(line: 6011, column: 45, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 6011, column: 28)
!8175 = !DILocation(line: 6011, column: 48, scope: !8174)
!8176 = !DILocation(line: 6011, column: 28, scope: !8174)
!8177 = !DILocation(line: 6011, column: 58, scope: !8174)
!8178 = !DILocation(line: 6011, column: 56, scope: !8174)
!8179 = !DILocation(line: 6011, column: 28, scope: !8163)
!8180 = !DILocation(line: 6012, column: 31, scope: !8174)
!8181 = !DILocation(line: 6012, column: 30, scope: !8174)
!8182 = !DILocation(line: 6012, column: 21, scope: !8174)
!8183 = !DILocation(line: 6015, column: 44, scope: !8174)
!8184 = !DILocation(line: 6015, column: 23, scope: !8174)
!8185 = !DILocation(line: 6014, column: 61, scope: !8174)
!8186 = !DILocation(line: 6014, column: 31, scope: !8174)
!8187 = !DILocation(line: 6014, column: 30, scope: !8174)
!8188 = !DILocation(line: 6016, column: 17, scope: !8164)
!8189 = !DILocation(line: 6017, column: 24, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 6017, column: 24)
!8191 = !DILocation(line: 6017, column: 30, scope: !8190)
!8192 = !DILocation(line: 6017, column: 24, scope: !8158)
!8193 = !DILocation(line: 6018, column: 61, scope: !8190)
!8194 = !DILocation(line: 6018, column: 62, scope: !8190)
!8195 = !DILocation(line: 6018, column: 69, scope: !8190)
!8196 = !DILocation(line: 6018, column: 70, scope: !8190)
!8197 = !DILocation(line: 6018, column: 67, scope: !8190)
!8198 = !DILocation(line: 6018, column: 65, scope: !8190)
!8199 = !DILocation(line: 6018, column: 57, scope: !8190)
!8200 = !DILocation(line: 6018, column: 56, scope: !8190)
!8201 = !DILocation(line: 6018, column: 26, scope: !8190)
!8202 = !DILocation(line: 6018, column: 17, scope: !8190)
!8203 = !DILocation(line: 6019, column: 24, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 6019, column: 24)
!8205 = !DILocation(line: 6019, column: 30, scope: !8204)
!8206 = !DILocation(line: 6019, column: 24, scope: !8190)
!8207 = !DILocation(line: 6020, column: 61, scope: !8204)
!8208 = !DILocation(line: 6020, column: 62, scope: !8204)
!8209 = !DILocation(line: 6020, column: 69, scope: !8204)
!8210 = !DILocation(line: 6020, column: 70, scope: !8204)
!8211 = !DILocation(line: 6020, column: 67, scope: !8204)
!8212 = !DILocation(line: 6020, column: 65, scope: !8204)
!8213 = !DILocation(line: 6020, column: 57, scope: !8204)
!8214 = !DILocation(line: 6020, column: 56, scope: !8204)
!8215 = !DILocation(line: 6020, column: 26, scope: !8204)
!8216 = !DILocation(line: 6020, column: 17, scope: !8204)
!8217 = !DILocation(line: 6021, column: 24, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 6021, column: 24)
!8219 = !DILocation(line: 6021, column: 30, scope: !8218)
!8220 = !DILocation(line: 6021, column: 24, scope: !8204)
!8221 = !DILocation(line: 6022, column: 61, scope: !8218)
!8222 = !DILocation(line: 6022, column: 62, scope: !8218)
!8223 = !DILocation(line: 6022, column: 69, scope: !8218)
!8224 = !DILocation(line: 6022, column: 70, scope: !8218)
!8225 = !DILocation(line: 6022, column: 67, scope: !8218)
!8226 = !DILocation(line: 6022, column: 65, scope: !8218)
!8227 = !DILocation(line: 6022, column: 57, scope: !8218)
!8228 = !DILocation(line: 6022, column: 56, scope: !8218)
!8229 = !DILocation(line: 6022, column: 27, scope: !8218)
!8230 = !DILocation(line: 6022, column: 74, scope: !8218)
!8231 = !DILocation(line: 6022, column: 26, scope: !8218)
!8232 = !DILocation(line: 6022, column: 17, scope: !8218)
!8233 = !DILocation(line: 6023, column: 15, scope: !8159)
!8234 = !DILocation(line: 6025, column: 16, scope: !8159)
!8235 = !DILocation(line: 6026, column: 13, scope: !8159)
!8236 = !DILocation(line: 6005, column: 52, scope: !8152)
!8237 = !DILocation(line: 6005, column: 11, scope: !8152)
!8238 = distinct !{!8238, !8156, !8239}
!8239 = !DILocation(line: 6026, column: 13, scope: !8149)
!8240 = !DILocation(line: 6027, column: 7, scope: !8144)
!8241 = !DILocation(line: 6031, column: 27, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8243, file: !3, line: 6031, column: 13)
!8243 = distinct !DILexicalBlock(scope: !8130, file: !3, line: 6029, column: 7)
!8244 = !DILocation(line: 6031, column: 13, scope: !8242)
!8245 = !DILocation(line: 6031, column: 48, scope: !8242)
!8246 = !DILocation(line: 6031, column: 13, scope: !8243)
!8247 = !DILocation(line: 6032, column: 11, scope: !8248)
!8248 = distinct !DILexicalBlock(scope: !8249, file: !3, line: 6032, column: 11)
!8249 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 6032, column: 11)
!8250 = !DILocation(line: 6032, column: 11, scope: !8249)
!8251 = !DILocation(line: 6035, column: 29, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !7992, file: !3, line: 6035, column: 9)
!8253 = !DILocation(line: 6035, column: 35, scope: !8252)
!8254 = !DILocation(line: 6035, column: 9, scope: !8252)
!8255 = !DILocation(line: 6035, column: 46, scope: !8252)
!8256 = !DILocation(line: 6035, column: 9, scope: !7992)
!8257 = !DILocation(line: 6036, column: 7, scope: !8252)
!8258 = !DILocation(line: 6037, column: 3, scope: !7992)
!8259 = !DILocation(line: 5953, column: 41, scope: !7986)
!8260 = !DILocation(line: 5953, column: 3, scope: !7986)
!8261 = distinct !{!8261, !7990, !8262}
!8262 = !DILocation(line: 6037, column: 3, scope: !7983)
!8263 = !DILocation(line: 6038, column: 33, scope: !1257)
!8264 = !DILocation(line: 6038, column: 15, scope: !1257)
!8265 = !DILocation(line: 6038, column: 14, scope: !1257)
!8266 = !DILocation(line: 6039, column: 3, scope: !1257)
!8267 = !DILocation(line: 6040, column: 1, scope: !1257)
!8268 = distinct !DISubprogram(name: "ReacquireMemory", scope: !3, file: !3, line: 6069, type: !8269, scopeLine: 6070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8269 = !DISubroutineType(types: !8270)
!8270 = !{null, !6483, !1172}
!8271 = !DILocalVariable(name: "memory", arg: 1, scope: !8268, file: !3, line: 6069, type: !6483)
!8272 = !DILocation(line: 6069, column: 42, scope: !8268)
!8273 = !DILocalVariable(name: "size", arg: 2, scope: !8268, file: !3, line: 6069, type: !1172)
!8274 = !DILocation(line: 6069, column: 62, scope: !8268)
!8275 = !DILocalVariable(name: "allocation", scope: !8268, file: !3, line: 6072, type: !805)
!8276 = !DILocation(line: 6072, column: 6, scope: !8268)
!8277 = !DILocation(line: 6075, column: 10, scope: !8268)
!8278 = !DILocation(line: 6076, column: 8, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 6076, column: 7)
!8280 = !DILocation(line: 6076, column: 7, scope: !8279)
!8281 = !DILocation(line: 6076, column: 15, scope: !8279)
!8282 = !DILocation(line: 6076, column: 7, scope: !8268)
!8283 = !DILocation(line: 6078, column: 35, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 6077, column: 5)
!8285 = !DILocation(line: 6078, column: 15, scope: !8284)
!8286 = !DILocation(line: 6078, column: 8, scope: !8284)
!8287 = !DILocation(line: 6078, column: 14, scope: !8284)
!8288 = !DILocation(line: 6079, column: 7, scope: !8284)
!8289 = !DILocation(line: 6081, column: 23, scope: !8268)
!8290 = !DILocation(line: 6081, column: 22, scope: !8268)
!8291 = !DILocation(line: 6081, column: 30, scope: !8268)
!8292 = !DILocation(line: 6081, column: 14, scope: !8268)
!8293 = !DILocation(line: 6081, column: 13, scope: !8268)
!8294 = !DILocation(line: 6082, column: 7, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8268, file: !3, line: 6082, column: 7)
!8296 = !DILocation(line: 6082, column: 18, scope: !8295)
!8297 = !DILocation(line: 6082, column: 7, scope: !8268)
!8298 = !DILocation(line: 6083, column: 37, scope: !8295)
!8299 = !DILocation(line: 6083, column: 36, scope: !8295)
!8300 = !DILocation(line: 6083, column: 13, scope: !8295)
!8301 = !DILocation(line: 6083, column: 6, scope: !8295)
!8302 = !DILocation(line: 6083, column: 12, scope: !8295)
!8303 = !DILocation(line: 6083, column: 5, scope: !8295)
!8304 = !DILocation(line: 6084, column: 11, scope: !8268)
!8305 = !DILocation(line: 6084, column: 4, scope: !8268)
!8306 = !DILocation(line: 6084, column: 10, scope: !8268)
!8307 = !DILocation(line: 6085, column: 1, scope: !8268)
!8308 = distinct !DISubprogram(name: "RecolorImage", scope: !3, file: !3, line: 6122, type: !8309, scopeLine: 6124, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8309 = !DISubroutineType(types: !8310)
!8310 = !{!818, !1168, !1172, !8311, !1057}
!8311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!8312 = !DILocalVariable(name: "image", arg: 1, scope: !8308, file: !3, line: 6122, type: !1168)
!8313 = !DILocation(line: 6122, column: 47, scope: !8308)
!8314 = !DILocalVariable(name: "order", arg: 2, scope: !8308, file: !3, line: 6122, type: !1172)
!8315 = !DILocation(line: 6122, column: 66, scope: !8308)
!8316 = !DILocalVariable(name: "color_matrix", arg: 3, scope: !8308, file: !3, line: 6123, type: !8311)
!8317 = !DILocation(line: 6123, column: 17, scope: !8308)
!8318 = !DILocalVariable(name: "exception", arg: 4, scope: !8308, file: !3, line: 6123, type: !1057)
!8319 = !DILocation(line: 6123, column: 45, scope: !8308)
!8320 = !DILocalVariable(name: "kernel_info", scope: !8308, file: !3, line: 6126, type: !1232)
!8321 = !DILocation(line: 6126, column: 6, scope: !8308)
!8322 = !DILocalVariable(name: "recolor_image", scope: !8308, file: !3, line: 6129, type: !818)
!8323 = !DILocation(line: 6129, column: 6, scope: !8308)
!8324 = !DILocation(line: 6131, column: 15, scope: !8308)
!8325 = !DILocation(line: 6131, column: 14, scope: !8308)
!8326 = !DILocation(line: 6132, column: 7, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 6132, column: 7)
!8328 = !DILocation(line: 6132, column: 19, scope: !8327)
!8329 = !DILocation(line: 6132, column: 7, scope: !8308)
!8330 = !DILocation(line: 6133, column: 5, scope: !8327)
!8331 = !DILocation(line: 6134, column: 22, scope: !8308)
!8332 = !DILocation(line: 6134, column: 3, scope: !8308)
!8333 = !DILocation(line: 6134, column: 16, scope: !8308)
!8334 = !DILocation(line: 6134, column: 21, scope: !8308)
!8335 = !DILocation(line: 6135, column: 23, scope: !8308)
!8336 = !DILocation(line: 6135, column: 3, scope: !8308)
!8337 = !DILocation(line: 6135, column: 16, scope: !8308)
!8338 = !DILocation(line: 6135, column: 22, scope: !8308)
!8339 = !DILocation(line: 6136, column: 34, scope: !8308)
!8340 = !DILocation(line: 6136, column: 3, scope: !8308)
!8341 = !DILocation(line: 6136, column: 16, scope: !8308)
!8342 = !DILocation(line: 6136, column: 22, scope: !8308)
!8343 = !DILocation(line: 6137, column: 34, scope: !8308)
!8344 = !DILocation(line: 6137, column: 40, scope: !8308)
!8345 = !DILocation(line: 6137, column: 52, scope: !8308)
!8346 = !DILocation(line: 6137, column: 17, scope: !8308)
!8347 = !DILocation(line: 6137, column: 16, scope: !8308)
!8348 = !DILocation(line: 6138, column: 3, scope: !8308)
!8349 = !DILocation(line: 6138, column: 16, scope: !8308)
!8350 = !DILocation(line: 6138, column: 22, scope: !8308)
!8351 = !DILocation(line: 6139, column: 33, scope: !8308)
!8352 = !DILocation(line: 6139, column: 15, scope: !8308)
!8353 = !DILocation(line: 6139, column: 14, scope: !8308)
!8354 = !DILocation(line: 6140, column: 10, scope: !8308)
!8355 = !DILocation(line: 6140, column: 3, scope: !8308)
!8356 = !DILocation(line: 6141, column: 1, scope: !8308)
!8357 = distinct !DISubprogram(name: "ReduceNoiseImage", scope: !3, file: !3, line: 6173, type: !7227, scopeLine: 6175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8358 = !DILocalVariable(name: "image", arg: 1, scope: !8357, file: !3, line: 6173, type: !1168)
!8359 = !DILocation(line: 6173, column: 51, scope: !8357)
!8360 = !DILocalVariable(name: "radius", arg: 2, scope: !8357, file: !3, line: 6173, type: !3008)
!8361 = !DILocation(line: 6173, column: 70, scope: !8357)
!8362 = !DILocalVariable(name: "exception", arg: 3, scope: !8357, file: !3, line: 6174, type: !1057)
!8363 = !DILocation(line: 6174, column: 18, scope: !8357)
!8364 = !DILocalVariable(name: "reduce_image", scope: !8357, file: !3, line: 6177, type: !818)
!8365 = !DILocation(line: 6177, column: 6, scope: !8357)
!8366 = !DILocation(line: 6179, column: 31, scope: !8357)
!8367 = !DILocation(line: 6179, column: 63, scope: !8357)
!8368 = !DILocation(line: 6179, column: 54, scope: !8357)
!8369 = !DILocation(line: 6180, column: 5, scope: !8357)
!8370 = !DILocation(line: 6179, column: 70, scope: !8357)
!8371 = !DILocation(line: 6180, column: 12, scope: !8357)
!8372 = !DILocation(line: 6179, column: 16, scope: !8357)
!8373 = !DILocation(line: 6179, column: 15, scope: !8357)
!8374 = !DILocation(line: 6181, column: 10, scope: !8357)
!8375 = !DILocation(line: 6181, column: 3, scope: !8357)
!8376 = distinct !DISubprogram(name: "RelinquishSemaphoreInfo", scope: !3, file: !3, line: 6206, type: !8377, scopeLine: 6207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8377 = !DISubroutineType(types: !8378)
!8378 = !{null, !801}
!8379 = !DILocalVariable(name: "semaphore_info", arg: 1, scope: !8376, file: !3, line: 6206, type: !801)
!8380 = !DILocation(line: 6206, column: 58, scope: !8376)
!8381 = !DILocation(line: 6209, column: 23, scope: !8376)
!8382 = !DILocation(line: 6209, column: 3, scope: !8376)
!8383 = !DILocation(line: 6210, column: 1, scope: !8376)
!8384 = distinct !DISubprogram(name: "ResetImageAttributeIterator", scope: !3, file: !3, line: 6240, type: !8385, scopeLine: 6241, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8385 = !DISubroutineType(types: !8386)
!8386 = !{null, !1168}
!8387 = !DILocalVariable(name: "image", arg: 1, scope: !8384, file: !3, line: 6240, type: !1168)
!8388 = !DILocation(line: 6240, column: 60, scope: !8384)
!8389 = !DILocation(line: 6242, column: 30, scope: !8384)
!8390 = !DILocation(line: 6242, column: 3, scope: !8384)
!8391 = !DILocation(line: 6243, column: 1, scope: !8384)
!8392 = distinct !DISubprogram(name: "SetCacheViewPixels", scope: !3, file: !3, line: 6278, type: !3709, scopeLine: 6280, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8393 = !DILocalVariable(name: "cache_view", arg: 1, scope: !8392, file: !3, line: 6278, type: !1229)
!8394 = !DILocation(line: 6278, column: 57, scope: !8392)
!8395 = !DILocalVariable(name: "x", arg: 2, scope: !8392, file: !3, line: 6278, type: !1301)
!8396 = !DILocation(line: 6278, column: 82, scope: !8392)
!8397 = !DILocalVariable(name: "y", arg: 3, scope: !8392, file: !3, line: 6279, type: !1301)
!8398 = !DILocation(line: 6279, column: 17, scope: !8392)
!8399 = !DILocalVariable(name: "columns", arg: 4, scope: !8392, file: !3, line: 6279, type: !1172)
!8400 = !DILocation(line: 6279, column: 32, scope: !8392)
!8401 = !DILocalVariable(name: "rows", arg: 5, scope: !8392, file: !3, line: 6279, type: !1172)
!8402 = !DILocation(line: 6279, column: 53, scope: !8392)
!8403 = !DILocalVariable(name: "pixels", scope: !8392, file: !3, line: 6282, type: !841)
!8404 = !DILocation(line: 6282, column: 6, scope: !8392)
!8405 = !DILocation(line: 6284, column: 40, scope: !8392)
!8406 = !DILocation(line: 6284, column: 51, scope: !8392)
!8407 = !DILocation(line: 6284, column: 53, scope: !8392)
!8408 = !DILocation(line: 6284, column: 55, scope: !8392)
!8409 = !DILocation(line: 6284, column: 63, scope: !8392)
!8410 = !DILocation(line: 6285, column: 27, scope: !8392)
!8411 = !DILocation(line: 6285, column: 5, scope: !8392)
!8412 = !DILocation(line: 6284, column: 10, scope: !8392)
!8413 = !DILocation(line: 6284, column: 9, scope: !8392)
!8414 = !DILocation(line: 6286, column: 10, scope: !8392)
!8415 = !DILocation(line: 6286, column: 3, scope: !8392)
!8416 = distinct !DISubprogram(name: "SetCacheThreshold", scope: !3, file: !3, line: 6314, type: !8417, scopeLine: 6315, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8417 = !DISubroutineType(types: !8418)
!8418 = !{null, !1172}
!8419 = !DILocalVariable(name: "size", arg: 1, scope: !8416, file: !3, line: 6314, type: !1172)
!8420 = !DILocation(line: 6314, column: 50, scope: !8416)
!8421 = !DILocation(line: 6316, column: 10, scope: !8416)
!8422 = !DILocation(line: 6317, column: 48, scope: !8416)
!8423 = !DILocation(line: 6317, column: 52, scope: !8416)
!8424 = !DILocation(line: 6317, column: 57, scope: !8416)
!8425 = !DILocation(line: 6317, column: 10, scope: !8416)
!8426 = !DILocation(line: 6318, column: 47, scope: !8416)
!8427 = !DILocation(line: 6318, column: 46, scope: !8416)
!8428 = !DILocation(line: 6318, column: 51, scope: !8416)
!8429 = !DILocation(line: 6318, column: 56, scope: !8416)
!8430 = !DILocation(line: 6318, column: 10, scope: !8416)
!8431 = !DILocation(line: 6319, column: 1, scope: !8416)
!8432 = distinct !DISubprogram(name: "SetExceptionInfo", scope: !3, file: !3, line: 6346, type: !8433, scopeLine: 6348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8433 = !DISubroutineType(types: !8434)
!8434 = !{!834, !1057, !975}
!8435 = !DILocalVariable(name: "exception", arg: 1, scope: !8432, file: !3, line: 6346, type: !1057)
!8436 = !DILocation(line: 6346, column: 64, scope: !8432)
!8437 = !DILocalVariable(name: "severity", arg: 2, scope: !8432, file: !3, line: 6347, type: !975)
!8438 = !DILocation(line: 6347, column: 17, scope: !8432)
!8439 = !DILocation(line: 6350, column: 24, scope: !8432)
!8440 = !DILocation(line: 6350, column: 3, scope: !8432)
!8441 = !DILocation(line: 6351, column: 23, scope: !8432)
!8442 = !DILocation(line: 6351, column: 3, scope: !8432)
!8443 = !DILocation(line: 6351, column: 14, scope: !8432)
!8444 = !DILocation(line: 6351, column: 22, scope: !8432)
!8445 = !DILocation(line: 6352, column: 3, scope: !8432)
!8446 = distinct !DISubprogram(name: "SetImage", scope: !3, file: !3, line: 6382, type: !8447, scopeLine: 6383, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8447 = !DISubroutineType(types: !8448)
!8448 = !{null, !818, !6606}
!8449 = !DILocalVariable(name: "image", arg: 1, scope: !8446, file: !3, line: 6382, type: !818)
!8450 = !DILocation(line: 6382, column: 35, scope: !8446)
!8451 = !DILocalVariable(name: "opacity", arg: 2, scope: !8446, file: !3, line: 6382, type: !6606)
!8452 = !DILocation(line: 6382, column: 55, scope: !8446)
!8453 = !DILocalVariable(name: "background_color", scope: !8446, file: !3, line: 6385, type: !842)
!8454 = !DILocation(line: 6385, column: 5, scope: !8446)
!8455 = !DILocalVariable(name: "y", scope: !8446, file: !3, line: 6388, type: !813)
!8456 = !DILocation(line: 6388, column: 5, scope: !8446)
!8457 = !DILocation(line: 6390, column: 10, scope: !8446)
!8458 = !DILocation(line: 6392, column: 7, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 6392, column: 7)
!8460 = !DILocation(line: 6392, column: 14, scope: !8459)
!8461 = !DILocation(line: 6392, column: 20, scope: !8459)
!8462 = !DILocation(line: 6392, column: 7, scope: !8446)
!8463 = !DILocation(line: 6393, column: 12, scope: !8459)
!8464 = !DILocation(line: 6393, column: 5, scope: !8459)
!8465 = !DILocation(line: 6395, column: 20, scope: !8446)
!8466 = !DILocation(line: 6395, column: 27, scope: !8446)
!8467 = !DILocation(line: 6396, column: 7, scope: !8468)
!8468 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 6396, column: 7)
!8469 = !DILocation(line: 6396, column: 15, scope: !8468)
!8470 = !DILocation(line: 6396, column: 7, scope: !8446)
!8471 = !DILocation(line: 6397, column: 30, scope: !8468)
!8472 = !DILocation(line: 6397, column: 22, scope: !8468)
!8473 = !DILocation(line: 6397, column: 29, scope: !8468)
!8474 = !DILocation(line: 6397, column: 5, scope: !8468)
!8475 = !DILocation(line: 6398, column: 24, scope: !8476)
!8476 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 6398, column: 7)
!8477 = !DILocation(line: 6398, column: 7, scope: !8476)
!8478 = !DILocation(line: 6398, column: 32, scope: !8476)
!8479 = !DILocation(line: 6398, column: 7, scope: !8446)
!8480 = !DILocation(line: 6400, column: 35, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8476, file: !3, line: 6399, column: 5)
!8482 = !DILocation(line: 6400, column: 14, scope: !8481)
!8483 = !DILocation(line: 6401, column: 7, scope: !8481)
!8484 = !DILocation(line: 6401, column: 14, scope: !8481)
!8485 = !DILocation(line: 6401, column: 19, scope: !8481)
!8486 = !DILocation(line: 6402, column: 5, scope: !8481)
!8487 = !DILocation(line: 6403, column: 8, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 6403, column: 7)
!8489 = !DILocation(line: 6403, column: 15, scope: !8488)
!8490 = !DILocation(line: 6403, column: 29, scope: !8488)
!8491 = !DILocation(line: 6403, column: 45, scope: !8488)
!8492 = !DILocation(line: 6404, column: 8, scope: !8488)
!8493 = !DILocation(line: 6404, column: 15, scope: !8488)
!8494 = !DILocation(line: 6404, column: 26, scope: !8488)
!8495 = !DILocation(line: 6403, column: 7, scope: !8446)
!8496 = !DILocation(line: 6409, column: 13, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 6409, column: 7)
!8498 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 6405, column: 5)
!8499 = !DILocation(line: 6409, column: 12, scope: !8497)
!8500 = !DILocation(line: 6409, column: 17, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8497, file: !3, line: 6409, column: 7)
!8502 = !DILocation(line: 6409, column: 31, scope: !8501)
!8503 = !DILocation(line: 6409, column: 38, scope: !8501)
!8504 = !DILocation(line: 6409, column: 19, scope: !8501)
!8505 = !DILocation(line: 6409, column: 7, scope: !8497)
!8506 = !DILocalVariable(name: "indexes", scope: !8507, file: !3, line: 6412, type: !7997)
!8507 = distinct !DILexicalBlock(scope: !8501, file: !3, line: 6410, column: 7)
!8508 = !DILocation(line: 6412, column: 21, scope: !8507)
!8509 = !DILocalVariable(name: "x", scope: !8507, file: !3, line: 6415, type: !813)
!8510 = !DILocation(line: 6415, column: 11, scope: !8507)
!8511 = !DILocalVariable(name: "q", scope: !8507, file: !3, line: 6418, type: !2119)
!8512 = !DILocation(line: 6418, column: 21, scope: !8507)
!8513 = !DILocation(line: 6420, column: 32, scope: !8507)
!8514 = !DILocation(line: 6420, column: 40, scope: !8507)
!8515 = !DILocation(line: 6420, column: 42, scope: !8507)
!8516 = !DILocation(line: 6420, column: 49, scope: !8507)
!8517 = !DILocation(line: 6420, column: 60, scope: !8507)
!8518 = !DILocation(line: 6420, column: 67, scope: !8507)
!8519 = !DILocation(line: 6420, column: 11, scope: !8507)
!8520 = !DILocation(line: 6420, column: 10, scope: !8507)
!8521 = !DILocation(line: 6421, column: 13, scope: !8522)
!8522 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 6421, column: 13)
!8523 = !DILocation(line: 6421, column: 15, scope: !8522)
!8524 = !DILocation(line: 6421, column: 13, scope: !8507)
!8525 = !DILocation(line: 6422, column: 11, scope: !8522)
!8526 = !DILocation(line: 6423, column: 15, scope: !8527)
!8527 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 6423, column: 9)
!8528 = !DILocation(line: 6423, column: 14, scope: !8527)
!8529 = !DILocation(line: 6423, column: 19, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8527, file: !3, line: 6423, column: 9)
!8531 = !DILocation(line: 6423, column: 33, scope: !8530)
!8532 = !DILocation(line: 6423, column: 40, scope: !8530)
!8533 = !DILocation(line: 6423, column: 21, scope: !8530)
!8534 = !DILocation(line: 6423, column: 9, scope: !8527)
!8535 = !DILocation(line: 6425, column: 11, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8537, file: !3, line: 6425, column: 11)
!8537 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 6424, column: 9)
!8538 = !DILocation(line: 6426, column: 12, scope: !8537)
!8539 = !DILocation(line: 6427, column: 9, scope: !8537)
!8540 = !DILocation(line: 6423, column: 50, scope: !8530)
!8541 = !DILocation(line: 6423, column: 9, scope: !8530)
!8542 = distinct !{!8542, !8534, !8543}
!8543 = !DILocation(line: 6427, column: 9, scope: !8527)
!8544 = !DILocation(line: 6428, column: 40, scope: !8507)
!8545 = !DILocation(line: 6428, column: 17, scope: !8507)
!8546 = !DILocation(line: 6428, column: 16, scope: !8507)
!8547 = !DILocation(line: 6429, column: 15, scope: !8548)
!8548 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 6429, column: 9)
!8549 = !DILocation(line: 6429, column: 14, scope: !8548)
!8550 = !DILocation(line: 6429, column: 19, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 6429, column: 9)
!8552 = !DILocation(line: 6429, column: 33, scope: !8551)
!8553 = !DILocation(line: 6429, column: 40, scope: !8551)
!8554 = !DILocation(line: 6429, column: 21, scope: !8551)
!8555 = !DILocation(line: 6429, column: 9, scope: !8548)
!8556 = !DILocation(line: 6430, column: 11, scope: !8557)
!8557 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 6430, column: 11)
!8558 = distinct !DILexicalBlock(scope: !8551, file: !3, line: 6430, column: 11)
!8559 = !DILocation(line: 6430, column: 11, scope: !8558)
!8560 = !DILocation(line: 6429, column: 50, scope: !8551)
!8561 = !DILocation(line: 6429, column: 9, scope: !8551)
!8562 = distinct !{!8562, !8555, !8563}
!8563 = !DILocation(line: 6430, column: 11, scope: !8548)
!8564 = !DILocation(line: 6431, column: 33, scope: !8565)
!8565 = distinct !DILexicalBlock(scope: !8507, file: !3, line: 6431, column: 13)
!8566 = !DILocation(line: 6431, column: 40, scope: !8565)
!8567 = !DILocation(line: 6431, column: 47, scope: !8565)
!8568 = !DILocation(line: 6431, column: 13, scope: !8565)
!8569 = !DILocation(line: 6431, column: 58, scope: !8565)
!8570 = !DILocation(line: 6431, column: 13, scope: !8507)
!8571 = !DILocation(line: 6432, column: 11, scope: !8565)
!8572 = !DILocation(line: 6433, column: 7, scope: !8507)
!8573 = !DILocation(line: 6409, column: 45, scope: !8501)
!8574 = !DILocation(line: 6409, column: 7, scope: !8501)
!8575 = distinct !{!8575, !8505, !8576}
!8576 = !DILocation(line: 6433, column: 7, scope: !8497)
!8577 = !DILocation(line: 6434, column: 7, scope: !8498)
!8578 = !DILocation(line: 6439, column: 9, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8446, file: !3, line: 6439, column: 3)
!8580 = !DILocation(line: 6439, column: 8, scope: !8579)
!8581 = !DILocation(line: 6439, column: 13, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8579, file: !3, line: 6439, column: 3)
!8583 = !DILocation(line: 6439, column: 27, scope: !8582)
!8584 = !DILocation(line: 6439, column: 34, scope: !8582)
!8585 = !DILocation(line: 6439, column: 15, scope: !8582)
!8586 = !DILocation(line: 6439, column: 3, scope: !8579)
!8587 = !DILocalVariable(name: "x", scope: !8588, file: !3, line: 6442, type: !813)
!8588 = distinct !DILexicalBlock(scope: !8582, file: !3, line: 6440, column: 3)
!8589 = !DILocation(line: 6442, column: 7, scope: !8588)
!8590 = !DILocalVariable(name: "q", scope: !8588, file: !3, line: 6445, type: !2119)
!8591 = !DILocation(line: 6445, column: 17, scope: !8588)
!8592 = !DILocation(line: 6447, column: 28, scope: !8588)
!8593 = !DILocation(line: 6447, column: 36, scope: !8588)
!8594 = !DILocation(line: 6447, column: 38, scope: !8588)
!8595 = !DILocation(line: 6447, column: 45, scope: !8588)
!8596 = !DILocation(line: 6447, column: 56, scope: !8588)
!8597 = !DILocation(line: 6447, column: 63, scope: !8588)
!8598 = !DILocation(line: 6447, column: 7, scope: !8588)
!8599 = !DILocation(line: 6447, column: 6, scope: !8588)
!8600 = !DILocation(line: 6448, column: 9, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 6448, column: 9)
!8602 = !DILocation(line: 6448, column: 11, scope: !8601)
!8603 = !DILocation(line: 6448, column: 9, scope: !8588)
!8604 = !DILocation(line: 6449, column: 7, scope: !8601)
!8605 = !DILocation(line: 6450, column: 11, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 6450, column: 5)
!8607 = !DILocation(line: 6450, column: 10, scope: !8606)
!8608 = !DILocation(line: 6450, column: 15, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 6450, column: 5)
!8610 = !DILocation(line: 6450, column: 29, scope: !8609)
!8611 = !DILocation(line: 6450, column: 36, scope: !8609)
!8612 = !DILocation(line: 6450, column: 17, scope: !8609)
!8613 = !DILocation(line: 6450, column: 5, scope: !8606)
!8614 = !DILocation(line: 6452, column: 7, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 6452, column: 7)
!8616 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 6451, column: 5)
!8617 = !DILocation(line: 6453, column: 8, scope: !8616)
!8618 = !DILocation(line: 6454, column: 5, scope: !8616)
!8619 = !DILocation(line: 6450, column: 46, scope: !8609)
!8620 = !DILocation(line: 6450, column: 5, scope: !8609)
!8621 = distinct !{!8621, !8613, !8622}
!8622 = !DILocation(line: 6454, column: 5, scope: !8606)
!8623 = !DILocation(line: 6455, column: 29, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8588, file: !3, line: 6455, column: 9)
!8625 = !DILocation(line: 6455, column: 36, scope: !8624)
!8626 = !DILocation(line: 6455, column: 43, scope: !8624)
!8627 = !DILocation(line: 6455, column: 9, scope: !8624)
!8628 = !DILocation(line: 6455, column: 54, scope: !8624)
!8629 = !DILocation(line: 6455, column: 9, scope: !8588)
!8630 = !DILocation(line: 6456, column: 7, scope: !8624)
!8631 = !DILocation(line: 6457, column: 3, scope: !8588)
!8632 = !DILocation(line: 6439, column: 41, scope: !8582)
!8633 = !DILocation(line: 6439, column: 3, scope: !8582)
!8634 = distinct !{!8634, !8586, !8635}
!8635 = !DILocation(line: 6457, column: 3, scope: !8579)
!8636 = !DILocation(line: 6458, column: 1, scope: !8446)
!8637 = distinct !DISubprogram(name: "SetImageAttribute", scope: !3, file: !3, line: 6493, type: !8638, scopeLine: 6495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8638 = !DISubroutineType(types: !8639)
!8639 = !{!834, !818, !943, !943}
!8640 = !DILocalVariable(name: "image", arg: 1, scope: !8637, file: !3, line: 6493, type: !818)
!8641 = !DILocation(line: 6493, column: 57, scope: !8637)
!8642 = !DILocalVariable(name: "key", arg: 2, scope: !8637, file: !3, line: 6493, type: !943)
!8643 = !DILocation(line: 6493, column: 75, scope: !8637)
!8644 = !DILocalVariable(name: "value", arg: 3, scope: !8637, file: !3, line: 6494, type: !943)
!8645 = !DILocation(line: 6494, column: 15, scope: !8637)
!8646 = !DILocation(line: 6496, column: 10, scope: !8637)
!8647 = !DILocation(line: 6497, column: 27, scope: !8637)
!8648 = !DILocation(line: 6497, column: 33, scope: !8637)
!8649 = !DILocation(line: 6497, column: 37, scope: !8637)
!8650 = !DILocation(line: 6497, column: 10, scope: !8637)
!8651 = !DILocation(line: 6497, column: 3, scope: !8637)
!8652 = distinct !DISubprogram(name: "SetImageList", scope: !3, file: !3, line: 6529, type: !8653, scopeLine: 6531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8653 = !DISubroutineType(types: !8654)
!8654 = !{!7, !7706, !1168, !1301, !1057}
!8655 = !DILocalVariable(name: "images", arg: 1, scope: !8652, file: !3, line: 6529, type: !7706)
!8656 = !DILocation(line: 6529, column: 48, scope: !8652)
!8657 = !DILocalVariable(name: "image", arg: 2, scope: !8652, file: !3, line: 6529, type: !1168)
!8658 = !DILocation(line: 6529, column: 68, scope: !8652)
!8659 = !DILocalVariable(name: "offset", arg: 3, scope: !8652, file: !3, line: 6530, type: !1301)
!8660 = !DILocation(line: 6530, column: 17, scope: !8652)
!8661 = !DILocalVariable(name: "exception", arg: 4, scope: !8652, file: !3, line: 6530, type: !1057)
!8662 = !DILocation(line: 6530, column: 39, scope: !8652)
!8663 = !DILocalVariable(name: "clone", scope: !8652, file: !3, line: 6533, type: !818)
!8664 = !DILocation(line: 6533, column: 6, scope: !8652)
!8665 = !DILocalVariable(name: "i", scope: !8652, file: !3, line: 6536, type: !813)
!8666 = !DILocation(line: 6536, column: 5, scope: !8652)
!8667 = !DILocation(line: 6538, column: 10, scope: !8652)
!8668 = !DILocation(line: 6539, column: 24, scope: !8652)
!8669 = !DILocation(line: 6539, column: 30, scope: !8652)
!8670 = !DILocation(line: 6539, column: 9, scope: !8652)
!8671 = !DILocation(line: 6539, column: 8, scope: !8652)
!8672 = !DILocation(line: 6540, column: 3, scope: !8652)
!8673 = !DILocation(line: 6540, column: 34, scope: !8652)
!8674 = !DILocation(line: 6540, column: 33, scope: !8652)
!8675 = !DILocation(line: 6540, column: 10, scope: !8652)
!8676 = !DILocation(line: 6540, column: 42, scope: !8652)
!8677 = !DILocation(line: 6541, column: 39, scope: !8652)
!8678 = !DILocation(line: 6541, column: 38, scope: !8652)
!8679 = !DILocation(line: 6541, column: 15, scope: !8652)
!8680 = !DILocation(line: 6541, column: 7, scope: !8652)
!8681 = !DILocation(line: 6541, column: 14, scope: !8652)
!8682 = distinct !{!8682, !8672, !8683}
!8683 = !DILocation(line: 6541, column: 45, scope: !8652)
!8684 = !DILocation(line: 6542, column: 9, scope: !8685)
!8685 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 6542, column: 3)
!8686 = !DILocation(line: 6542, column: 8, scope: !8685)
!8687 = !DILocation(line: 6542, column: 13, scope: !8688)
!8688 = distinct !DILexicalBlock(scope: !8685, file: !3, line: 6542, column: 3)
!8689 = !DILocation(line: 6542, column: 17, scope: !8688)
!8690 = !DILocation(line: 6542, column: 15, scope: !8688)
!8691 = !DILocation(line: 6542, column: 3, scope: !8685)
!8692 = !DILocation(line: 6544, column: 29, scope: !8693)
!8693 = distinct !DILexicalBlock(scope: !8694, file: !3, line: 6544, column: 9)
!8694 = distinct !DILexicalBlock(scope: !8688, file: !3, line: 6543, column: 3)
!8695 = !DILocation(line: 6544, column: 28, scope: !8693)
!8696 = !DILocation(line: 6544, column: 9, scope: !8693)
!8697 = !DILocation(line: 6544, column: 37, scope: !8693)
!8698 = !DILocation(line: 6544, column: 9, scope: !8694)
!8699 = !DILocation(line: 6545, column: 7, scope: !8693)
!8700 = !DILocation(line: 6546, column: 35, scope: !8694)
!8701 = !DILocation(line: 6546, column: 34, scope: !8694)
!8702 = !DILocation(line: 6546, column: 15, scope: !8694)
!8703 = !DILocation(line: 6546, column: 7, scope: !8694)
!8704 = !DILocation(line: 6546, column: 14, scope: !8694)
!8705 = !DILocation(line: 6547, column: 3, scope: !8694)
!8706 = !DILocation(line: 6542, column: 26, scope: !8688)
!8707 = !DILocation(line: 6542, column: 3, scope: !8688)
!8708 = distinct !{!8708, !8691, !8709}
!8709 = !DILocation(line: 6547, column: 3, scope: !8685)
!8710 = !DILocation(line: 6548, column: 21, scope: !8652)
!8711 = !DILocation(line: 6548, column: 28, scope: !8652)
!8712 = !DILocation(line: 6548, column: 3, scope: !8652)
!8713 = !DILocation(line: 6549, column: 3, scope: !8652)
!8714 = !DILocation(line: 6550, column: 1, scope: !8652)
!8715 = distinct !DISubprogram(name: "SetImagePixels", scope: !3, file: !3, line: 6612, type: !4039, scopeLine: 6614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8716 = !DILocalVariable(name: "image", arg: 1, scope: !8715, file: !3, line: 6612, type: !818)
!8717 = !DILocation(line: 6612, column: 49, scope: !8715)
!8718 = !DILocalVariable(name: "x", arg: 2, scope: !8715, file: !3, line: 6612, type: !1301)
!8719 = !DILocation(line: 6612, column: 69, scope: !8715)
!8720 = !DILocalVariable(name: "y", arg: 3, scope: !8715, file: !3, line: 6612, type: !1301)
!8721 = !DILocation(line: 6612, column: 85, scope: !8715)
!8722 = !DILocalVariable(name: "columns", arg: 4, scope: !8715, file: !3, line: 6613, type: !1172)
!8723 = !DILocation(line: 6613, column: 16, scope: !8715)
!8724 = !DILocalVariable(name: "rows", arg: 5, scope: !8715, file: !3, line: 6613, type: !1172)
!8725 = !DILocation(line: 6613, column: 37, scope: !8715)
!8726 = !DILocation(line: 6615, column: 31, scope: !8715)
!8727 = !DILocation(line: 6615, column: 37, scope: !8715)
!8728 = !DILocation(line: 6615, column: 39, scope: !8715)
!8729 = !DILocation(line: 6615, column: 41, scope: !8715)
!8730 = !DILocation(line: 6615, column: 49, scope: !8715)
!8731 = !DILocation(line: 6615, column: 55, scope: !8715)
!8732 = !DILocation(line: 6615, column: 62, scope: !8715)
!8733 = !DILocation(line: 6615, column: 10, scope: !8715)
!8734 = !DILocation(line: 6615, column: 3, scope: !8715)
!8735 = !DILocalVariable(name: "type", arg: 1, scope: !1278, file: !3, line: 6649, type: !1281)
!8736 = !DILocation(line: 6649, column: 59, scope: !1278)
!8737 = !DILocalVariable(name: "blob", arg: 2, scope: !1278, file: !3, line: 6649, type: !1170)
!8738 = !DILocation(line: 6649, column: 76, scope: !1278)
!8739 = !DILocalVariable(name: "length", arg: 3, scope: !1278, file: !3, line: 6650, type: !1172)
!8740 = !DILocation(line: 6650, column: 16, scope: !1278)
!8741 = !DILocalVariable(name: "exception", arg: 4, scope: !1278, file: !3, line: 6650, type: !1057)
!8742 = !DILocation(line: 6650, column: 53, scope: !1278)
!8743 = !DILocalVariable(name: "key", scope: !1278, file: !3, line: 6653, type: !963)
!8744 = !DILocation(line: 6653, column: 5, scope: !1278)
!8745 = !DILocalVariable(name: "status", scope: !1278, file: !3, line: 6656, type: !834)
!8746 = !DILocation(line: 6656, column: 5, scope: !1278)
!8747 = !DILocation(line: 6663, column: 29, scope: !1278)
!8748 = !DILocation(line: 6663, column: 66, scope: !1278)
!8749 = !DILocation(line: 6663, column: 57, scope: !1278)
!8750 = !DILocation(line: 6663, column: 10, scope: !1278)
!8751 = !DILocation(line: 6664, column: 27, scope: !1278)
!8752 = !DILocation(line: 6664, column: 32, scope: !1278)
!8753 = !DILocation(line: 6664, column: 36, scope: !1278)
!8754 = !DILocation(line: 6664, column: 41, scope: !1278)
!8755 = !DILocation(line: 6664, column: 10, scope: !1278)
!8756 = !DILocation(line: 6664, column: 9, scope: !1278)
!8757 = !DILocation(line: 6665, column: 7, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !1278, file: !3, line: 6665, column: 7)
!8759 = !DILocation(line: 6665, column: 14, scope: !8758)
!8760 = !DILocation(line: 6665, column: 7, scope: !1278)
!8761 = !DILocation(line: 6666, column: 5, scope: !8758)
!8762 = !DILocation(line: 6667, column: 12, scope: !1278)
!8763 = !DILocation(line: 6667, column: 3, scope: !1278)
!8764 = !DILocation(line: 6668, column: 1, scope: !1278)
!8765 = distinct !DISubprogram(name: "GetMonitorHandler", scope: !3, file: !3, line: 6694, type: !8766, scopeLine: 6695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8766 = !DISubroutineType(types: !8767)
!8767 = !{!1053}
!8768 = !DILocation(line: 6696, column: 10, scope: !8765)
!8769 = !DILocation(line: 6696, column: 3, scope: !8765)
!8770 = distinct !DISubprogram(name: "SetMonitorHandler", scope: !3, file: !3, line: 6699, type: !8771, scopeLine: 6700, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8771 = !DISubroutineType(types: !8772)
!8772 = !{!1053, !1053}
!8773 = !DILocalVariable(name: "handler", arg: 1, scope: !8770, file: !3, line: 6699, type: !1053)
!8774 = !DILocation(line: 6699, column: 62, scope: !8770)
!8775 = !DILocalVariable(name: "previous_handler", scope: !8770, file: !3, line: 6702, type: !1053)
!8776 = !DILocation(line: 6702, column: 5, scope: !8770)
!8777 = !DILocation(line: 6704, column: 20, scope: !8770)
!8778 = !DILocation(line: 6704, column: 19, scope: !8770)
!8779 = !DILocation(line: 6705, column: 19, scope: !8770)
!8780 = !DILocation(line: 6705, column: 18, scope: !8770)
!8781 = !DILocation(line: 6706, column: 10, scope: !8770)
!8782 = !DILocation(line: 6706, column: 3, scope: !8770)
!8783 = distinct !DISubprogram(name: "ShiftImageList", scope: !3, file: !3, line: 6735, type: !7704, scopeLine: 6736, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8784 = !DILocalVariable(name: "images", arg: 1, scope: !8783, file: !3, line: 6735, type: !7706)
!8785 = !DILocation(line: 6735, column: 44, scope: !8783)
!8786 = !DILocation(line: 6737, column: 10, scope: !8783)
!8787 = !DILocation(line: 6738, column: 35, scope: !8783)
!8788 = !DILocation(line: 6738, column: 10, scope: !8783)
!8789 = !DILocation(line: 6738, column: 3, scope: !8783)
!8790 = distinct !DISubprogram(name: "SizeBlob", scope: !3, file: !3, line: 6770, type: !8791, scopeLine: 6771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8791 = !DISubroutineType(types: !8792)
!8792 = !{!946, !818}
!8793 = !DILocalVariable(name: "image", arg: 1, scope: !8790, file: !3, line: 6770, type: !818)
!8794 = !DILocation(line: 6770, column: 47, scope: !8790)
!8795 = !DILocation(line: 6772, column: 7, scope: !8796)
!8796 = distinct !DILexicalBlock(scope: !8790, file: !3, line: 6772, column: 7)
!8797 = !DILocation(line: 6772, column: 14, scope: !8796)
!8798 = !DILocation(line: 6772, column: 20, scope: !8796)
!8799 = !DILocation(line: 6772, column: 7, scope: !8790)
!8800 = !DILocation(line: 6773, column: 12, scope: !8796)
!8801 = !DILocation(line: 6773, column: 5, scope: !8796)
!8802 = !DILocation(line: 6774, column: 41, scope: !8790)
!8803 = !DILocation(line: 6774, column: 29, scope: !8790)
!8804 = !DILocation(line: 6774, column: 3, scope: !8790)
!8805 = distinct !DISubprogram(name: "SpliceImageList", scope: !3, file: !3, line: 6810, type: !8806, scopeLine: 6812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8806 = !DISubroutineType(types: !8807)
!8807 = !{!818, !818, !1301, !1172, !1168, !1057}
!8808 = !DILocalVariable(name: "images", arg: 1, scope: !8805, file: !3, line: 6810, type: !818)
!8809 = !DILocation(line: 6810, column: 44, scope: !8805)
!8810 = !DILocalVariable(name: "offset", arg: 2, scope: !8805, file: !3, line: 6810, type: !1301)
!8811 = !DILocation(line: 6810, column: 65, scope: !8805)
!8812 = !DILocalVariable(name: "length", arg: 3, scope: !8805, file: !3, line: 6811, type: !1172)
!8813 = !DILocation(line: 6811, column: 16, scope: !8805)
!8814 = !DILocalVariable(name: "splices", arg: 4, scope: !8805, file: !3, line: 6811, type: !1168)
!8815 = !DILocation(line: 6811, column: 36, scope: !8805)
!8816 = !DILocalVariable(name: "exception", arg: 5, scope: !8805, file: !3, line: 6811, type: !1057)
!8817 = !DILocation(line: 6811, column: 59, scope: !8805)
!8818 = !DILocalVariable(name: "clone", scope: !8805, file: !3, line: 6814, type: !818)
!8819 = !DILocation(line: 6814, column: 6, scope: !8805)
!8820 = !DILocalVariable(name: "i", scope: !8805, file: !3, line: 6817, type: !813)
!8821 = !DILocation(line: 6817, column: 5, scope: !8805)
!8822 = !DILocation(line: 6819, column: 7, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 6819, column: 7)
!8824 = !DILocation(line: 6819, column: 15, scope: !8823)
!8825 = !DILocation(line: 6819, column: 21, scope: !8823)
!8826 = !DILocation(line: 6819, column: 7, scope: !8805)
!8827 = !DILocation(line: 6820, column: 12, scope: !8823)
!8828 = !DILocation(line: 6820, column: 5, scope: !8823)
!8829 = !DILocation(line: 6821, column: 24, scope: !8805)
!8830 = !DILocation(line: 6821, column: 32, scope: !8805)
!8831 = !DILocation(line: 6821, column: 9, scope: !8805)
!8832 = !DILocation(line: 6821, column: 8, scope: !8805)
!8833 = !DILocation(line: 6822, column: 3, scope: !8805)
!8834 = !DILocation(line: 6822, column: 33, scope: !8805)
!8835 = !DILocation(line: 6822, column: 10, scope: !8805)
!8836 = !DILocation(line: 6822, column: 41, scope: !8805)
!8837 = !DILocation(line: 6823, column: 35, scope: !8805)
!8838 = !DILocation(line: 6823, column: 12, scope: !8805)
!8839 = !DILocation(line: 6823, column: 11, scope: !8805)
!8840 = distinct !{!8840, !8833, !8841}
!8841 = !DILocation(line: 6823, column: 41, scope: !8805)
!8842 = !DILocation(line: 6824, column: 9, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 6824, column: 3)
!8844 = !DILocation(line: 6824, column: 8, scope: !8843)
!8845 = !DILocation(line: 6824, column: 13, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 6824, column: 3)
!8847 = !DILocation(line: 6824, column: 17, scope: !8846)
!8848 = !DILocation(line: 6824, column: 15, scope: !8846)
!8849 = !DILocation(line: 6824, column: 3, scope: !8843)
!8850 = !DILocation(line: 6826, column: 28, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 6826, column: 9)
!8852 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 6825, column: 3)
!8853 = !DILocation(line: 6826, column: 9, scope: !8851)
!8854 = !DILocation(line: 6826, column: 36, scope: !8851)
!8855 = !DILocation(line: 6826, column: 9, scope: !8852)
!8856 = !DILocation(line: 6827, column: 7, scope: !8851)
!8857 = !DILocation(line: 6828, column: 31, scope: !8852)
!8858 = !DILocation(line: 6828, column: 12, scope: !8852)
!8859 = !DILocation(line: 6828, column: 11, scope: !8852)
!8860 = !DILocation(line: 6829, column: 3, scope: !8852)
!8861 = !DILocation(line: 6824, column: 26, scope: !8846)
!8862 = !DILocation(line: 6824, column: 3, scope: !8846)
!8863 = distinct !{!8863, !8849, !8864}
!8864 = !DILocation(line: 6829, column: 3, scope: !8843)
!8865 = !DILocation(line: 6830, column: 38, scope: !8805)
!8866 = !DILocation(line: 6830, column: 45, scope: !8805)
!8867 = !DILocation(line: 6830, column: 10, scope: !8805)
!8868 = !DILocation(line: 6831, column: 10, scope: !8805)
!8869 = !DILocation(line: 6831, column: 3, scope: !8805)
!8870 = !DILocation(line: 6832, column: 1, scope: !8805)
!8871 = distinct !DISubprogram(name: "sRGBCompandor", scope: !3, file: !3, line: 6856, type: !6331, scopeLine: 6857, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8872 = !DILocalVariable(name: "pixel", arg: 1, scope: !8871, file: !3, line: 6856, type: !2639)
!8873 = !DILocation(line: 6856, column: 64, scope: !8871)
!8874 = !DILocation(line: 6858, column: 7, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 6858, column: 7)
!8876 = !DILocation(line: 6858, column: 13, scope: !8875)
!8877 = !DILocation(line: 6858, column: 7, scope: !8871)
!8878 = !DILocation(line: 6859, column: 18, scope: !8875)
!8879 = !DILocation(line: 6859, column: 17, scope: !8875)
!8880 = !DILocation(line: 6859, column: 11, scope: !8875)
!8881 = !DILocation(line: 6859, column: 5, scope: !8875)
!8882 = !DILocation(line: 6860, column: 47, scope: !8871)
!8883 = !DILocation(line: 6860, column: 46, scope: !8871)
!8884 = !DILocation(line: 6860, column: 30, scope: !8871)
!8885 = !DILocation(line: 6860, column: 29, scope: !8871)
!8886 = !DILocation(line: 6860, column: 61, scope: !8871)
!8887 = !DILocation(line: 6860, column: 22, scope: !8871)
!8888 = !DILocation(line: 6860, column: 9, scope: !8871)
!8889 = !DILocation(line: 6860, column: 3, scope: !8871)
!8890 = !DILocation(line: 6861, column: 1, scope: !8871)
!8891 = distinct !DISubprogram(name: "Strip", scope: !3, file: !3, line: 6886, type: !8892, scopeLine: 6887, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8892 = !DISubroutineType(types: !8893)
!8893 = !{null, !806}
!8894 = !DILocalVariable(name: "message", arg: 1, scope: !8891, file: !3, line: 6886, type: !806)
!8895 = !DILocation(line: 6886, column: 31, scope: !8891)
!8896 = !DILocalVariable(name: "p", scope: !8891, file: !3, line: 6889, type: !806)
!8897 = !DILocation(line: 6889, column: 6, scope: !8891)
!8898 = !DILocalVariable(name: "q", scope: !8891, file: !3, line: 6890, type: !806)
!8899 = !DILocation(line: 6890, column: 6, scope: !8891)
!8900 = !DILocation(line: 6893, column: 10, scope: !8891)
!8901 = !DILocation(line: 6894, column: 8, scope: !8902)
!8902 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 6894, column: 7)
!8903 = !DILocation(line: 6894, column: 7, scope: !8902)
!8904 = !DILocation(line: 6894, column: 16, scope: !8902)
!8905 = !DILocation(line: 6894, column: 7, scope: !8891)
!8906 = !DILocation(line: 6895, column: 5, scope: !8902)
!8907 = !DILocation(line: 6896, column: 14, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 6896, column: 7)
!8909 = !DILocation(line: 6896, column: 7, scope: !8908)
!8910 = !DILocation(line: 6896, column: 23, scope: !8908)
!8911 = !DILocation(line: 6896, column: 7, scope: !8891)
!8912 = !DILocation(line: 6897, column: 5, scope: !8908)
!8913 = !DILocation(line: 6898, column: 5, scope: !8891)
!8914 = !DILocation(line: 6898, column: 4, scope: !8891)
!8915 = !DILocation(line: 6899, column: 3, scope: !8891)
!8916 = !DILocation(line: 6899, column: 10, scope: !8891)
!8917 = !DILocation(line: 6899, column: 46, scope: !8891)
!8918 = !DILocation(line: 6900, column: 6, scope: !8891)
!8919 = distinct !{!8919, !8915, !8918}
!8920 = !DILocation(line: 6901, column: 9, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 6901, column: 7)
!8922 = !DILocation(line: 6901, column: 8, scope: !8921)
!8923 = !DILocation(line: 6901, column: 11, scope: !8921)
!8924 = !DILocation(line: 6901, column: 20, scope: !8921)
!8925 = !DILocation(line: 6901, column: 25, scope: !8921)
!8926 = !DILocation(line: 6901, column: 24, scope: !8921)
!8927 = !DILocation(line: 6901, column: 27, scope: !8921)
!8928 = !DILocation(line: 6901, column: 7, scope: !8891)
!8929 = !DILocation(line: 6902, column: 6, scope: !8921)
!8930 = !DILocation(line: 6902, column: 5, scope: !8921)
!8931 = !DILocation(line: 6903, column: 5, scope: !8891)
!8932 = !DILocation(line: 6903, column: 20, scope: !8891)
!8933 = !DILocation(line: 6903, column: 13, scope: !8891)
!8934 = !DILocation(line: 6903, column: 12, scope: !8891)
!8935 = !DILocation(line: 6903, column: 28, scope: !8891)
!8936 = !DILocation(line: 6903, column: 4, scope: !8891)
!8937 = !DILocation(line: 6904, column: 3, scope: !8891)
!8938 = !DILocation(line: 6904, column: 11, scope: !8891)
!8939 = !DILocation(line: 6904, column: 47, scope: !8891)
!8940 = !DILocation(line: 6904, column: 53, scope: !8891)
!8941 = !DILocation(line: 6904, column: 57, scope: !8891)
!8942 = !DILocation(line: 6904, column: 61, scope: !8891)
!8943 = !DILocation(line: 6904, column: 59, scope: !8891)
!8944 = !DILocation(line: 0, scope: !8891)
!8945 = !DILocation(line: 6905, column: 6, scope: !8891)
!8946 = distinct !{!8946, !8937, !8945}
!8947 = !DILocation(line: 6906, column: 7, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 6906, column: 7)
!8949 = !DILocation(line: 6906, column: 11, scope: !8948)
!8950 = !DILocation(line: 6906, column: 9, scope: !8948)
!8951 = !DILocation(line: 6906, column: 7, scope: !8891)
!8952 = !DILocation(line: 6907, column: 11, scope: !8953)
!8953 = distinct !DILexicalBlock(scope: !8948, file: !3, line: 6907, column: 9)
!8954 = !DILocation(line: 6907, column: 10, scope: !8953)
!8955 = !DILocation(line: 6907, column: 13, scope: !8953)
!8956 = !DILocation(line: 6907, column: 22, scope: !8953)
!8957 = !DILocation(line: 6907, column: 27, scope: !8953)
!8958 = !DILocation(line: 6907, column: 26, scope: !8953)
!8959 = !DILocation(line: 6907, column: 29, scope: !8953)
!8960 = !DILocation(line: 6907, column: 9, scope: !8948)
!8961 = !DILocation(line: 6908, column: 8, scope: !8953)
!8962 = !DILocation(line: 6908, column: 7, scope: !8953)
!8963 = !DILocation(line: 6907, column: 35, scope: !8953)
!8964 = !DILocation(line: 6909, column: 27, scope: !8891)
!8965 = !DILocation(line: 6909, column: 35, scope: !8891)
!8966 = !DILocation(line: 6909, column: 47, scope: !8891)
!8967 = !DILocation(line: 6909, column: 49, scope: !8891)
!8968 = !DILocation(line: 6909, column: 48, scope: !8891)
!8969 = !DILocation(line: 6909, column: 50, scope: !8891)
!8970 = !DILocation(line: 6909, column: 10, scope: !8891)
!8971 = !DILocation(line: 6910, column: 3, scope: !8891)
!8972 = !DILocation(line: 6910, column: 11, scope: !8891)
!8973 = !DILocation(line: 6910, column: 13, scope: !8891)
!8974 = !DILocation(line: 6910, column: 12, scope: !8891)
!8975 = !DILocation(line: 6910, column: 14, scope: !8891)
!8976 = !DILocation(line: 6910, column: 17, scope: !8891)
!8977 = !DILocation(line: 6911, column: 1, scope: !8891)
!8978 = distinct !DISubprogram(name: "SyncCacheView", scope: !3, file: !3, line: 6941, type: !8979, scopeLine: 6942, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8979 = !DISubroutineType(types: !8980)
!8980 = !{!834, !1229}
!8981 = !DILocalVariable(name: "cache_view", arg: 1, scope: !8978, file: !3, line: 6941, type: !1229)
!8982 = !DILocation(line: 6941, column: 57, scope: !8978)
!8983 = !DILocalVariable(name: "status", scope: !8978, file: !3, line: 6944, type: !834)
!8984 = !DILocation(line: 6944, column: 5, scope: !8978)
!8985 = !DILocation(line: 6946, column: 39, scope: !8978)
!8986 = !DILocation(line: 6947, column: 27, scope: !8978)
!8987 = !DILocation(line: 6947, column: 5, scope: !8978)
!8988 = !DILocation(line: 6946, column: 10, scope: !8978)
!8989 = !DILocation(line: 6946, column: 9, scope: !8978)
!8990 = !DILocation(line: 6948, column: 10, scope: !8978)
!8991 = !DILocation(line: 6948, column: 3, scope: !8978)
!8992 = distinct !DISubprogram(name: "SyncCacheViewPixels", scope: !3, file: !3, line: 6981, type: !8979, scopeLine: 6982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!8993 = !DILocalVariable(name: "cache_view", arg: 1, scope: !8992, file: !3, line: 6981, type: !1229)
!8994 = !DILocation(line: 6981, column: 63, scope: !8992)
!8995 = !DILocalVariable(name: "status", scope: !8992, file: !3, line: 6984, type: !834)
!8996 = !DILocation(line: 6984, column: 5, scope: !8992)
!8997 = !DILocation(line: 6986, column: 39, scope: !8992)
!8998 = !DILocation(line: 6987, column: 27, scope: !8992)
!8999 = !DILocation(line: 6987, column: 5, scope: !8992)
!9000 = !DILocation(line: 6986, column: 10, scope: !8992)
!9001 = !DILocation(line: 6986, column: 9, scope: !8992)
!9002 = !DILocation(line: 6988, column: 10, scope: !8992)
!9003 = !DILocation(line: 6988, column: 3, scope: !8992)
!9004 = distinct !DISubprogram(name: "SyncImagePixels", scope: !3, file: !3, line: 7019, type: !9005, scopeLine: 7020, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{!834, !818}
!9007 = !DILocalVariable(name: "image", arg: 1, scope: !9004, file: !3, line: 7019, type: !818)
!9008 = !DILocation(line: 7019, column: 55, scope: !9004)
!9009 = !DILocation(line: 7021, column: 30, scope: !9004)
!9010 = !DILocation(line: 7021, column: 37, scope: !9004)
!9011 = !DILocation(line: 7021, column: 44, scope: !9004)
!9012 = !DILocation(line: 7021, column: 10, scope: !9004)
!9013 = !DILocation(line: 7021, column: 3, scope: !9004)
!9014 = distinct !DISubprogram(name: "TemporaryFilename", scope: !3, file: !3, line: 7047, type: !8892, scopeLine: 7048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9015 = !DILocalVariable(name: "path", arg: 1, scope: !9014, file: !3, line: 7047, type: !806)
!9016 = !DILocation(line: 7047, column: 43, scope: !9014)
!9017 = !DILocation(line: 7049, column: 10, scope: !9014)
!9018 = !DILocation(line: 7050, column: 32, scope: !9014)
!9019 = !DILocation(line: 7050, column: 10, scope: !9014)
!9020 = !DILocation(line: 7051, column: 39, scope: !9014)
!9021 = !DILocation(line: 7051, column: 10, scope: !9014)
!9022 = !DILocation(line: 7052, column: 1, scope: !9014)
!9023 = distinct !DISubprogram(name: "ThresholdImage", scope: !3, file: !3, line: 7080, type: !9024, scopeLine: 7081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9024 = !DISubroutineType(types: !9025)
!9025 = !{!7, !818, !3008}
!9026 = !DILocalVariable(name: "image", arg: 1, scope: !9023, file: !3, line: 7080, type: !818)
!9027 = !DILocation(line: 7080, column: 49, scope: !9023)
!9028 = !DILocalVariable(name: "threshold", arg: 2, scope: !9023, file: !3, line: 7080, type: !3008)
!9029 = !DILocation(line: 7080, column: 68, scope: !9023)
!9030 = !DILocalVariable(name: "index", scope: !9023, file: !3, line: 7085, type: !1230)
!9031 = !DILocation(line: 7085, column: 5, scope: !9023)
!9032 = !DILocalVariable(name: "y", scope: !9023, file: !3, line: 7088, type: !813)
!9033 = !DILocation(line: 7088, column: 5, scope: !9023)
!9034 = !DILocation(line: 7095, column: 7, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 7095, column: 7)
!9036 = !DILocation(line: 7095, column: 14, scope: !9035)
!9037 = !DILocation(line: 7095, column: 20, scope: !9035)
!9038 = !DILocation(line: 7095, column: 7, scope: !9023)
!9039 = !DILocation(line: 7096, column: 61, scope: !9035)
!9040 = !DILocation(line: 7096, column: 68, scope: !9035)
!9041 = !DILocation(line: 7096, column: 12, scope: !9035)
!9042 = !DILocation(line: 7096, column: 5, scope: !9035)
!9043 = !DILocation(line: 7097, column: 7, scope: !9044)
!9044 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 7097, column: 7)
!9045 = !DILocation(line: 7097, column: 14, scope: !9044)
!9046 = !DILocation(line: 7097, column: 20, scope: !9044)
!9047 = !DILocation(line: 7097, column: 7, scope: !9023)
!9048 = !DILocation(line: 7098, column: 12, scope: !9044)
!9049 = !DILocation(line: 7098, column: 5, scope: !9044)
!9050 = !DILocation(line: 7099, column: 29, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 7099, column: 7)
!9052 = !DILocation(line: 7099, column: 8, scope: !9051)
!9053 = !DILocation(line: 7099, column: 7, scope: !9023)
!9054 = !DILocation(line: 7100, column: 5, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 7100, column: 5)
!9056 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 7100, column: 5)
!9057 = !DILocation(line: 7100, column: 5, scope: !9056)
!9058 = !DILocation(line: 7102, column: 9, scope: !9059)
!9059 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 7102, column: 3)
!9060 = !DILocation(line: 7102, column: 8, scope: !9059)
!9061 = !DILocation(line: 7102, column: 13, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 7102, column: 3)
!9063 = !DILocation(line: 7102, column: 27, scope: !9062)
!9064 = !DILocation(line: 7102, column: 34, scope: !9062)
!9065 = !DILocation(line: 7102, column: 15, scope: !9062)
!9066 = !DILocation(line: 7102, column: 3, scope: !9059)
!9067 = !DILocalVariable(name: "indexes", scope: !9068, file: !3, line: 7105, type: !7997)
!9068 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 7103, column: 3)
!9069 = !DILocation(line: 7105, column: 17, scope: !9068)
!9070 = !DILocalVariable(name: "x", scope: !9068, file: !3, line: 7108, type: !813)
!9071 = !DILocation(line: 7108, column: 7, scope: !9068)
!9072 = !DILocalVariable(name: "q", scope: !9068, file: !3, line: 7111, type: !2119)
!9073 = !DILocation(line: 7111, column: 17, scope: !9068)
!9074 = !DILocation(line: 7113, column: 26, scope: !9068)
!9075 = !DILocation(line: 7113, column: 34, scope: !9068)
!9076 = !DILocation(line: 7113, column: 36, scope: !9068)
!9077 = !DILocation(line: 7113, column: 43, scope: !9068)
!9078 = !DILocation(line: 7113, column: 54, scope: !9068)
!9079 = !DILocation(line: 7113, column: 61, scope: !9068)
!9080 = !DILocation(line: 7113, column: 7, scope: !9068)
!9081 = !DILocation(line: 7113, column: 6, scope: !9068)
!9082 = !DILocation(line: 7114, column: 9, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 7114, column: 9)
!9084 = !DILocation(line: 7114, column: 11, scope: !9083)
!9085 = !DILocation(line: 7114, column: 9, scope: !9068)
!9086 = !DILocation(line: 7115, column: 7, scope: !9083)
!9087 = !DILocation(line: 7116, column: 36, scope: !9068)
!9088 = !DILocation(line: 7116, column: 13, scope: !9068)
!9089 = !DILocation(line: 7116, column: 12, scope: !9068)
!9090 = !DILocation(line: 7117, column: 11, scope: !9091)
!9091 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 7117, column: 5)
!9092 = !DILocation(line: 7117, column: 10, scope: !9091)
!9093 = !DILocation(line: 7117, column: 15, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9091, file: !3, line: 7117, column: 5)
!9095 = !DILocation(line: 7117, column: 29, scope: !9094)
!9096 = !DILocation(line: 7117, column: 36, scope: !9094)
!9097 = !DILocation(line: 7117, column: 17, scope: !9094)
!9098 = !DILocation(line: 7117, column: 5, scope: !9091)
!9099 = !DILocation(line: 7119, column: 46, scope: !9100)
!9100 = distinct !DILexicalBlock(scope: !9094, file: !3, line: 7118, column: 5)
!9101 = !DILocation(line: 7119, column: 52, scope: !9100)
!9102 = !DILocation(line: 7119, column: 28, scope: !9100)
!9103 = !DILocation(line: 7120, column: 9, scope: !9100)
!9104 = !DILocation(line: 7119, column: 55, scope: !9100)
!9105 = !DILocation(line: 7119, column: 13, scope: !9100)
!9106 = !DILocation(line: 7119, column: 12, scope: !9100)
!9107 = !DILocation(line: 7121, column: 7, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !9109, file: !3, line: 7121, column: 7)
!9109 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 7121, column: 7)
!9110 = !DILocation(line: 7121, column: 7, scope: !9109)
!9111 = !DILocation(line: 7122, column: 7, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9100, file: !3, line: 7122, column: 7)
!9113 = !DILocation(line: 7123, column: 8, scope: !9100)
!9114 = !DILocation(line: 7124, column: 5, scope: !9100)
!9115 = !DILocation(line: 7117, column: 46, scope: !9094)
!9116 = !DILocation(line: 7117, column: 5, scope: !9094)
!9117 = distinct !{!9117, !9098, !9118}
!9118 = !DILocation(line: 7124, column: 5, scope: !9091)
!9119 = !DILocation(line: 7125, column: 30, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 7125, column: 9)
!9121 = !DILocation(line: 7125, column: 37, scope: !9120)
!9122 = !DILocation(line: 7125, column: 44, scope: !9120)
!9123 = !DILocation(line: 7125, column: 10, scope: !9120)
!9124 = !DILocation(line: 7125, column: 9, scope: !9068)
!9125 = !DILocation(line: 7126, column: 7, scope: !9120)
!9126 = !DILocation(line: 7127, column: 3, scope: !9068)
!9127 = !DILocation(line: 7102, column: 41, scope: !9062)
!9128 = !DILocation(line: 7102, column: 3, scope: !9062)
!9129 = distinct !{!9129, !9066, !9130}
!9130 = !DILocation(line: 7127, column: 3, scope: !9059)
!9131 = !DILocation(line: 7128, column: 3, scope: !9023)
!9132 = !DILocation(line: 7129, column: 1, scope: !9023)
!9133 = distinct !DISubprogram(name: "ThresholdImageChannel", scope: !3, file: !3, line: 7156, type: !1662, scopeLine: 7158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9134 = !DILocalVariable(name: "image", arg: 1, scope: !9133, file: !3, line: 7156, type: !818)
!9135 = !DILocation(line: 7156, column: 56, scope: !9133)
!9136 = !DILocalVariable(name: "threshold", arg: 2, scope: !9133, file: !3, line: 7157, type: !943)
!9137 = !DILocation(line: 7157, column: 15, scope: !9133)
!9138 = !DILocalVariable(name: "pixel", scope: !9133, file: !3, line: 7162, type: !1417)
!9139 = !DILocation(line: 7162, column: 5, scope: !9133)
!9140 = !DILocalVariable(name: "geometry_info", scope: !9133, file: !3, line: 7165, type: !1671)
!9141 = !DILocation(line: 7165, column: 5, scope: !9133)
!9142 = !DILocalVariable(name: "index", scope: !9133, file: !3, line: 7168, type: !1230)
!9143 = !DILocation(line: 7168, column: 5, scope: !9133)
!9144 = !DILocalVariable(name: "y", scope: !9133, file: !3, line: 7171, type: !813)
!9145 = !DILocation(line: 7171, column: 5, scope: !9133)
!9146 = !DILocalVariable(name: "flags", scope: !9133, file: !3, line: 7174, type: !7)
!9147 = !DILocation(line: 7174, column: 5, scope: !9133)
!9148 = !DILocation(line: 7181, column: 7, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7181, column: 7)
!9150 = !DILocation(line: 7181, column: 14, scope: !9149)
!9151 = !DILocation(line: 7181, column: 20, scope: !9149)
!9152 = !DILocation(line: 7181, column: 7, scope: !9133)
!9153 = !DILocation(line: 7182, column: 61, scope: !9149)
!9154 = !DILocation(line: 7182, column: 68, scope: !9149)
!9155 = !DILocation(line: 7182, column: 12, scope: !9149)
!9156 = !DILocation(line: 7182, column: 5, scope: !9149)
!9157 = !DILocation(line: 7183, column: 7, scope: !9158)
!9158 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7183, column: 7)
!9159 = !DILocation(line: 7183, column: 17, scope: !9158)
!9160 = !DILocation(line: 7183, column: 7, scope: !9133)
!9161 = !DILocation(line: 7184, column: 5, scope: !9158)
!9162 = !DILocation(line: 7185, column: 28, scope: !9163)
!9163 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7185, column: 7)
!9164 = !DILocation(line: 7185, column: 7, scope: !9163)
!9165 = !DILocation(line: 7185, column: 47, scope: !9163)
!9166 = !DILocation(line: 7185, column: 7, scope: !9133)
!9167 = !DILocation(line: 7186, column: 5, scope: !9163)
!9168 = !DILocation(line: 7187, column: 23, scope: !9133)
!9169 = !DILocation(line: 7187, column: 9, scope: !9133)
!9170 = !DILocation(line: 7187, column: 8, scope: !9133)
!9171 = !DILocation(line: 7188, column: 27, scope: !9133)
!9172 = !DILocation(line: 7188, column: 13, scope: !9133)
!9173 = !DILocation(line: 7188, column: 9, scope: !9133)
!9174 = !DILocation(line: 7188, column: 12, scope: !9133)
!9175 = !DILocation(line: 7189, column: 7, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7189, column: 7)
!9177 = !DILocation(line: 7189, column: 13, scope: !9176)
!9178 = !DILocation(line: 7189, column: 7, scope: !9133)
!9179 = !DILocation(line: 7190, column: 31, scope: !9176)
!9180 = !DILocation(line: 7190, column: 17, scope: !9176)
!9181 = !DILocation(line: 7190, column: 11, scope: !9176)
!9182 = !DILocation(line: 7190, column: 16, scope: !9176)
!9183 = !DILocation(line: 7190, column: 5, scope: !9176)
!9184 = !DILocation(line: 7192, column: 23, scope: !9176)
!9185 = !DILocation(line: 7192, column: 11, scope: !9176)
!9186 = !DILocation(line: 7192, column: 16, scope: !9176)
!9187 = !DILocation(line: 7193, column: 7, scope: !9188)
!9188 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7193, column: 7)
!9189 = !DILocation(line: 7193, column: 13, scope: !9188)
!9190 = !DILocation(line: 7193, column: 7, scope: !9133)
!9191 = !DILocation(line: 7194, column: 30, scope: !9188)
!9192 = !DILocation(line: 7194, column: 16, scope: !9188)
!9193 = !DILocation(line: 7194, column: 11, scope: !9188)
!9194 = !DILocation(line: 7194, column: 15, scope: !9188)
!9195 = !DILocation(line: 7194, column: 5, scope: !9188)
!9196 = !DILocation(line: 7196, column: 22, scope: !9188)
!9197 = !DILocation(line: 7196, column: 11, scope: !9188)
!9198 = !DILocation(line: 7196, column: 15, scope: !9188)
!9199 = !DILocation(line: 7197, column: 7, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7197, column: 7)
!9201 = !DILocation(line: 7197, column: 13, scope: !9200)
!9202 = !DILocation(line: 7197, column: 7, scope: !9133)
!9203 = !DILocation(line: 7198, column: 33, scope: !9200)
!9204 = !DILocation(line: 7198, column: 19, scope: !9200)
!9205 = !DILocation(line: 7198, column: 11, scope: !9200)
!9206 = !DILocation(line: 7198, column: 18, scope: !9200)
!9207 = !DILocation(line: 7198, column: 5, scope: !9200)
!9208 = !DILocation(line: 7200, column: 11, scope: !9200)
!9209 = !DILocation(line: 7200, column: 18, scope: !9200)
!9210 = !DILocation(line: 7201, column: 7, scope: !9211)
!9211 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7201, column: 7)
!9212 = !DILocation(line: 7201, column: 13, scope: !9211)
!9213 = !DILocation(line: 7201, column: 7, scope: !9133)
!9214 = !DILocation(line: 7203, column: 13, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9211, file: !3, line: 7202, column: 5)
!9216 = !DILocation(line: 7203, column: 16, scope: !9215)
!9217 = !DILocation(line: 7204, column: 13, scope: !9215)
!9218 = !DILocation(line: 7204, column: 18, scope: !9215)
!9219 = !DILocation(line: 7205, column: 13, scope: !9215)
!9220 = !DILocation(line: 7205, column: 17, scope: !9215)
!9221 = !DILocation(line: 7206, column: 13, scope: !9215)
!9222 = !DILocation(line: 7206, column: 20, scope: !9215)
!9223 = !DILocation(line: 7207, column: 5, scope: !9215)
!9224 = !DILocation(line: 7208, column: 9, scope: !9225)
!9225 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7208, column: 7)
!9226 = !DILocation(line: 7208, column: 15, scope: !9225)
!9227 = !DILocation(line: 7208, column: 7, scope: !9133)
!9228 = !DILocation(line: 7210, column: 33, scope: !9229)
!9229 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 7210, column: 11)
!9230 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 7209, column: 5)
!9231 = !DILocation(line: 7210, column: 12, scope: !9229)
!9232 = !DILocation(line: 7210, column: 11, scope: !9230)
!9233 = !DILocation(line: 7211, column: 9, scope: !9234)
!9234 = distinct !DILexicalBlock(scope: !9235, file: !3, line: 7211, column: 9)
!9235 = distinct !DILexicalBlock(scope: !9229, file: !3, line: 7211, column: 9)
!9236 = !DILocation(line: 7211, column: 9, scope: !9235)
!9237 = !DILocation(line: 7213, column: 17, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 7213, column: 11)
!9239 = !DILocation(line: 7213, column: 21, scope: !9238)
!9240 = !DILocation(line: 7213, column: 11, scope: !9230)
!9241 = !DILocation(line: 7214, column: 41, scope: !9238)
!9242 = !DILocation(line: 7214, column: 63, scope: !9238)
!9243 = !DILocation(line: 7214, column: 70, scope: !9238)
!9244 = !DILocation(line: 7214, column: 16, scope: !9238)
!9245 = !DILocation(line: 7214, column: 9, scope: !9238)
!9246 = !DILocation(line: 7215, column: 5, scope: !9230)
!9247 = !DILocation(line: 7216, column: 9, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 7216, column: 3)
!9249 = !DILocation(line: 7216, column: 8, scope: !9248)
!9250 = !DILocation(line: 7216, column: 13, scope: !9251)
!9251 = distinct !DILexicalBlock(scope: !9248, file: !3, line: 7216, column: 3)
!9252 = !DILocation(line: 7216, column: 27, scope: !9251)
!9253 = !DILocation(line: 7216, column: 34, scope: !9251)
!9254 = !DILocation(line: 7216, column: 15, scope: !9251)
!9255 = !DILocation(line: 7216, column: 3, scope: !9248)
!9256 = !DILocalVariable(name: "indexes", scope: !9257, file: !3, line: 7219, type: !7997)
!9257 = distinct !DILexicalBlock(scope: !9251, file: !3, line: 7217, column: 3)
!9258 = !DILocation(line: 7219, column: 17, scope: !9257)
!9259 = !DILocalVariable(name: "x", scope: !9257, file: !3, line: 7222, type: !813)
!9260 = !DILocation(line: 7222, column: 7, scope: !9257)
!9261 = !DILocalVariable(name: "q", scope: !9257, file: !3, line: 7225, type: !2119)
!9262 = !DILocation(line: 7225, column: 17, scope: !9257)
!9263 = !DILocation(line: 7227, column: 26, scope: !9257)
!9264 = !DILocation(line: 7227, column: 34, scope: !9257)
!9265 = !DILocation(line: 7227, column: 36, scope: !9257)
!9266 = !DILocation(line: 7227, column: 43, scope: !9257)
!9267 = !DILocation(line: 7227, column: 54, scope: !9257)
!9268 = !DILocation(line: 7227, column: 61, scope: !9257)
!9269 = !DILocation(line: 7227, column: 7, scope: !9257)
!9270 = !DILocation(line: 7227, column: 6, scope: !9257)
!9271 = !DILocation(line: 7228, column: 9, scope: !9272)
!9272 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 7228, column: 9)
!9273 = !DILocation(line: 7228, column: 11, scope: !9272)
!9274 = !DILocation(line: 7228, column: 9, scope: !9257)
!9275 = !DILocation(line: 7229, column: 7, scope: !9272)
!9276 = !DILocation(line: 7230, column: 36, scope: !9257)
!9277 = !DILocation(line: 7230, column: 13, scope: !9257)
!9278 = !DILocation(line: 7230, column: 12, scope: !9257)
!9279 = !DILocation(line: 7231, column: 9, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 7231, column: 9)
!9281 = !DILocation(line: 7231, column: 30, scope: !9280)
!9282 = !DILocation(line: 7231, column: 9, scope: !9257)
!9283 = !DILocation(line: 7232, column: 13, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 7232, column: 7)
!9285 = !DILocation(line: 7232, column: 12, scope: !9284)
!9286 = !DILocation(line: 7232, column: 17, scope: !9287)
!9287 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 7232, column: 7)
!9288 = !DILocation(line: 7232, column: 31, scope: !9287)
!9289 = !DILocation(line: 7232, column: 38, scope: !9287)
!9290 = !DILocation(line: 7232, column: 19, scope: !9287)
!9291 = !DILocation(line: 7232, column: 7, scope: !9284)
!9292 = !DILocation(line: 7234, column: 48, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9287, file: !3, line: 7233, column: 7)
!9294 = !DILocation(line: 7234, column: 54, scope: !9293)
!9295 = !DILocation(line: 7234, column: 30, scope: !9293)
!9296 = !DILocation(line: 7234, column: 66, scope: !9293)
!9297 = !DILocation(line: 7234, column: 57, scope: !9293)
!9298 = !DILocation(line: 7234, column: 15, scope: !9293)
!9299 = !DILocation(line: 7234, column: 14, scope: !9293)
!9300 = !DILocation(line: 7235, column: 9, scope: !9301)
!9301 = distinct !DILexicalBlock(scope: !9302, file: !3, line: 7235, column: 9)
!9302 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 7235, column: 9)
!9303 = !DILocation(line: 7235, column: 9, scope: !9302)
!9304 = !DILocation(line: 7236, column: 9, scope: !9293)
!9305 = !DILocation(line: 7237, column: 9, scope: !9293)
!9306 = !DILocation(line: 7238, column: 9, scope: !9293)
!9307 = !DILocation(line: 7239, column: 10, scope: !9293)
!9308 = !DILocation(line: 7240, column: 7, scope: !9293)
!9309 = !DILocation(line: 7232, column: 48, scope: !9287)
!9310 = !DILocation(line: 7232, column: 7, scope: !9287)
!9311 = distinct !{!9311, !9291, !9312}
!9312 = !DILocation(line: 7240, column: 7, scope: !9284)
!9313 = !DILocation(line: 7242, column: 13, scope: !9314)
!9314 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 7242, column: 7)
!9315 = !DILocation(line: 7242, column: 12, scope: !9314)
!9316 = !DILocation(line: 7242, column: 17, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9314, file: !3, line: 7242, column: 7)
!9318 = !DILocation(line: 7242, column: 31, scope: !9317)
!9319 = !DILocation(line: 7242, column: 38, scope: !9317)
!9320 = !DILocation(line: 7242, column: 19, scope: !9317)
!9321 = !DILocation(line: 7242, column: 7, scope: !9314)
!9322 = !DILocation(line: 7244, column: 9, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 7243, column: 7)
!9324 = !DILocation(line: 7246, column: 9, scope: !9323)
!9325 = !DILocation(line: 7248, column: 9, scope: !9323)
!9326 = !DILocation(line: 7250, column: 9, scope: !9323)
!9327 = !DILocation(line: 7252, column: 10, scope: !9323)
!9328 = !DILocation(line: 7253, column: 7, scope: !9323)
!9329 = !DILocation(line: 7242, column: 48, scope: !9317)
!9330 = !DILocation(line: 7242, column: 7, scope: !9317)
!9331 = distinct !{!9331, !9321, !9332}
!9332 = !DILocation(line: 7253, column: 7, scope: !9314)
!9333 = !DILocation(line: 7254, column: 30, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 7254, column: 9)
!9335 = !DILocation(line: 7254, column: 37, scope: !9334)
!9336 = !DILocation(line: 7254, column: 44, scope: !9334)
!9337 = !DILocation(line: 7254, column: 10, scope: !9334)
!9338 = !DILocation(line: 7254, column: 9, scope: !9257)
!9339 = !DILocation(line: 7255, column: 7, scope: !9334)
!9340 = !DILocation(line: 7256, column: 3, scope: !9257)
!9341 = !DILocation(line: 7216, column: 41, scope: !9251)
!9342 = !DILocation(line: 7216, column: 3, scope: !9251)
!9343 = distinct !{!9343, !9255, !9344}
!9344 = !DILocation(line: 7256, column: 3, scope: !9248)
!9345 = !DILocation(line: 7257, column: 3, scope: !9133)
!9346 = !DILocation(line: 7258, column: 1, scope: !9133)
!9347 = distinct !DISubprogram(name: "IsMagickGray", scope: !6220, file: !6220, line: 76, type: !9348, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9348 = !DISubroutineType(types: !9349)
!9349 = !{!834, !5944}
!9350 = !DILocalVariable(name: "pixel", arg: 1, scope: !9347, file: !6220, line: 76, type: !5944)
!9351 = !DILocation(line: 76, column: 71, scope: !9347)
!9352 = !DILocation(line: 78, column: 8, scope: !9353)
!9353 = distinct !DILexicalBlock(scope: !9347, file: !6220, line: 78, column: 7)
!9354 = !DILocation(line: 78, column: 15, scope: !9353)
!9355 = !DILocation(line: 78, column: 26, scope: !9353)
!9356 = !DILocation(line: 78, column: 45, scope: !9353)
!9357 = !DILocation(line: 79, column: 8, scope: !9353)
!9358 = !DILocation(line: 79, column: 15, scope: !9353)
!9359 = !DILocation(line: 79, column: 26, scope: !9353)
!9360 = !DILocation(line: 78, column: 7, scope: !9347)
!9361 = !DILocation(line: 80, column: 5, scope: !9353)
!9362 = !DILocation(line: 81, column: 13, scope: !9363)
!9363 = distinct !DILexicalBlock(scope: !9347, file: !6220, line: 81, column: 7)
!9364 = !DILocation(line: 81, column: 20, scope: !9363)
!9365 = !DILocation(line: 81, column: 24, scope: !9363)
!9366 = !DILocation(line: 81, column: 31, scope: !9363)
!9367 = !DILocation(line: 81, column: 23, scope: !9363)
!9368 = !DILocation(line: 81, column: 8, scope: !9363)
!9369 = !DILocation(line: 81, column: 38, scope: !9363)
!9370 = !DILocation(line: 81, column: 55, scope: !9363)
!9371 = !DILocation(line: 82, column: 13, scope: !9363)
!9372 = !DILocation(line: 82, column: 20, scope: !9363)
!9373 = !DILocation(line: 82, column: 26, scope: !9363)
!9374 = !DILocation(line: 82, column: 33, scope: !9363)
!9375 = !DILocation(line: 82, column: 25, scope: !9363)
!9376 = !DILocation(line: 82, column: 8, scope: !9363)
!9377 = !DILocation(line: 82, column: 39, scope: !9363)
!9378 = !DILocation(line: 81, column: 7, scope: !9347)
!9379 = !DILocation(line: 83, column: 5, scope: !9363)
!9380 = !DILocation(line: 84, column: 3, scope: !9347)
!9381 = !DILocation(line: 85, column: 1, scope: !9347)
!9382 = distinct !DISubprogram(name: "TransformColorspace", scope: !3, file: !3, line: 7294, type: !9383, scopeLine: 7296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9383 = !DISubroutineType(types: !9384)
!9384 = !{!7, !818, !9385}
!9385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !825)
!9386 = !DILocalVariable(name: "image", arg: 1, scope: !9382, file: !3, line: 7294, type: !818)
!9387 = !DILocation(line: 7294, column: 54, scope: !9382)
!9388 = !DILocalVariable(name: "colorspace", arg: 2, scope: !9382, file: !3, line: 7295, type: !9385)
!9389 = !DILocation(line: 7295, column: 24, scope: !9382)
!9390 = !DILocation(line: 7299, column: 7, scope: !9391)
!9391 = distinct !DILexicalBlock(scope: !9382, file: !3, line: 7299, column: 7)
!9392 = !DILocation(line: 7299, column: 14, scope: !9391)
!9393 = !DILocation(line: 7299, column: 20, scope: !9391)
!9394 = !DILocation(line: 7299, column: 7, scope: !9382)
!9395 = !DILocation(line: 7300, column: 12, scope: !9391)
!9396 = !DILocation(line: 7300, column: 5, scope: !9391)
!9397 = !DILocation(line: 7301, column: 35, scope: !9382)
!9398 = !DILocation(line: 7301, column: 41, scope: !9382)
!9399 = !DILocation(line: 7301, column: 10, scope: !9382)
!9400 = !DILocation(line: 7301, column: 3, scope: !9382)
!9401 = distinct !DISubprogram(name: "TransformHSL", scope: !3, file: !3, line: 7340, type: !9402, scopeLine: 7342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9402 = !DISubroutineType(types: !9403)
!9403 = !{null, !6606, !6606, !6606, !1243, !1243, !1243}
!9404 = !DILocalVariable(name: "red", arg: 1, scope: !9401, file: !3, line: 7340, type: !6606)
!9405 = !DILocation(line: 7340, column: 46, scope: !9401)
!9406 = !DILocalVariable(name: "green", arg: 2, scope: !9401, file: !3, line: 7340, type: !6606)
!9407 = !DILocation(line: 7340, column: 64, scope: !9401)
!9408 = !DILocalVariable(name: "blue", arg: 3, scope: !9401, file: !3, line: 7341, type: !6606)
!9409 = !DILocation(line: 7341, column: 17, scope: !9401)
!9410 = !DILocalVariable(name: "hue", arg: 4, scope: !9401, file: !3, line: 7341, type: !1243)
!9411 = !DILocation(line: 7341, column: 30, scope: !9401)
!9412 = !DILocalVariable(name: "saturation", arg: 5, scope: !9401, file: !3, line: 7341, type: !1243)
!9413 = !DILocation(line: 7341, column: 42, scope: !9401)
!9414 = !DILocalVariable(name: "lightness", arg: 6, scope: !9401, file: !3, line: 7341, type: !1243)
!9415 = !DILocation(line: 7341, column: 61, scope: !9401)
!9416 = !DILocalVariable(name: "b", scope: !9401, file: !3, line: 7344, type: !1034)
!9417 = !DILocation(line: 7344, column: 5, scope: !9401)
!9418 = !DILocalVariable(name: "delta", scope: !9401, file: !3, line: 7345, type: !1034)
!9419 = !DILocation(line: 7345, column: 5, scope: !9401)
!9420 = !DILocalVariable(name: "g", scope: !9401, file: !3, line: 7346, type: !1034)
!9421 = !DILocation(line: 7346, column: 5, scope: !9401)
!9422 = !DILocalVariable(name: "max", scope: !9401, file: !3, line: 7347, type: !1034)
!9423 = !DILocation(line: 7347, column: 5, scope: !9401)
!9424 = !DILocalVariable(name: "min", scope: !9401, file: !3, line: 7348, type: !1034)
!9425 = !DILocation(line: 7348, column: 5, scope: !9401)
!9426 = !DILocalVariable(name: "r", scope: !9401, file: !3, line: 7349, type: !1034)
!9427 = !DILocation(line: 7349, column: 5, scope: !9401)
!9428 = !DILocation(line: 7357, column: 18, scope: !9401)
!9429 = !DILocation(line: 7357, column: 17, scope: !9401)
!9430 = !DILocation(line: 7357, column: 5, scope: !9401)
!9431 = !DILocation(line: 7357, column: 4, scope: !9401)
!9432 = !DILocation(line: 7358, column: 18, scope: !9401)
!9433 = !DILocation(line: 7358, column: 17, scope: !9401)
!9434 = !DILocation(line: 7358, column: 5, scope: !9401)
!9435 = !DILocation(line: 7358, column: 4, scope: !9401)
!9436 = !DILocation(line: 7359, column: 18, scope: !9401)
!9437 = !DILocation(line: 7359, column: 17, scope: !9401)
!9438 = !DILocation(line: 7359, column: 5, scope: !9401)
!9439 = !DILocation(line: 7359, column: 4, scope: !9401)
!9440 = !DILocation(line: 7360, column: 17, scope: !9401)
!9441 = !DILocation(line: 7360, column: 29, scope: !9401)
!9442 = !DILocation(line: 7360, column: 31, scope: !9401)
!9443 = !DILocation(line: 7360, column: 19, scope: !9401)
!9444 = !DILocation(line: 7360, column: 7, scope: !9401)
!9445 = !DILocation(line: 7360, column: 6, scope: !9401)
!9446 = !DILocation(line: 7361, column: 17, scope: !9401)
!9447 = !DILocation(line: 7361, column: 29, scope: !9401)
!9448 = !DILocation(line: 7361, column: 31, scope: !9401)
!9449 = !DILocation(line: 7361, column: 19, scope: !9401)
!9450 = !DILocation(line: 7361, column: 7, scope: !9401)
!9451 = !DILocation(line: 7361, column: 6, scope: !9401)
!9452 = !DILocation(line: 7362, column: 4, scope: !9401)
!9453 = !DILocation(line: 7362, column: 7, scope: !9401)
!9454 = !DILocation(line: 7363, column: 4, scope: !9401)
!9455 = !DILocation(line: 7363, column: 14, scope: !9401)
!9456 = !DILocation(line: 7364, column: 25, scope: !9401)
!9457 = !DILocation(line: 7364, column: 29, scope: !9401)
!9458 = !DILocation(line: 7364, column: 28, scope: !9401)
!9459 = !DILocation(line: 7364, column: 24, scope: !9401)
!9460 = !DILocation(line: 7364, column: 33, scope: !9401)
!9461 = !DILocation(line: 7364, column: 4, scope: !9401)
!9462 = !DILocation(line: 7364, column: 13, scope: !9401)
!9463 = !DILocation(line: 7365, column: 9, scope: !9401)
!9464 = !DILocation(line: 7365, column: 13, scope: !9401)
!9465 = !DILocation(line: 7365, column: 12, scope: !9401)
!9466 = !DILocation(line: 7365, column: 8, scope: !9401)
!9467 = !DILocation(line: 7366, column: 7, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 7366, column: 7)
!9469 = !DILocation(line: 7366, column: 13, scope: !9468)
!9470 = !DILocation(line: 7366, column: 7, scope: !9401)
!9471 = !DILocation(line: 7367, column: 5, scope: !9468)
!9472 = !DILocation(line: 7368, column: 25, scope: !9401)
!9473 = !DILocation(line: 7368, column: 34, scope: !9401)
!9474 = !DILocation(line: 7368, column: 33, scope: !9401)
!9475 = !DILocation(line: 7368, column: 44, scope: !9401)
!9476 = !DILocation(line: 7368, column: 32, scope: !9401)
!9477 = !DILocation(line: 7368, column: 54, scope: !9401)
!9478 = !DILocation(line: 7368, column: 58, scope: !9401)
!9479 = !DILocation(line: 7368, column: 57, scope: !9401)
!9480 = !DILocation(line: 7368, column: 53, scope: !9401)
!9481 = !DILocation(line: 7369, column: 10, scope: !9401)
!9482 = !DILocation(line: 7369, column: 9, scope: !9401)
!9483 = !DILocation(line: 7369, column: 14, scope: !9401)
!9484 = !DILocation(line: 7369, column: 13, scope: !9401)
!9485 = !DILocation(line: 7368, column: 30, scope: !9401)
!9486 = !DILocation(line: 7368, column: 4, scope: !9401)
!9487 = !DILocation(line: 7368, column: 14, scope: !9401)
!9488 = !DILocation(line: 7370, column: 7, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 7370, column: 7)
!9490 = !DILocation(line: 7370, column: 12, scope: !9489)
!9491 = !DILocation(line: 7370, column: 9, scope: !9489)
!9492 = !DILocation(line: 7370, column: 7, scope: !9401)
!9493 = !DILocation(line: 7371, column: 20, scope: !9489)
!9494 = !DILocation(line: 7371, column: 25, scope: !9489)
!9495 = !DILocation(line: 7371, column: 22, scope: !9489)
!9496 = !DILocation(line: 7371, column: 36, scope: !9489)
!9497 = !DILocation(line: 7371, column: 40, scope: !9489)
!9498 = !DILocation(line: 7371, column: 39, scope: !9489)
!9499 = !DILocation(line: 7371, column: 43, scope: !9489)
!9500 = !DILocation(line: 7371, column: 42, scope: !9489)
!9501 = !DILocation(line: 7371, column: 35, scope: !9489)
!9502 = !DILocation(line: 7371, column: 34, scope: !9489)
!9503 = !DILocation(line: 7371, column: 56, scope: !9489)
!9504 = !DILocation(line: 7371, column: 60, scope: !9489)
!9505 = !DILocation(line: 7371, column: 59, scope: !9489)
!9506 = !DILocation(line: 7371, column: 63, scope: !9489)
!9507 = !DILocation(line: 7371, column: 62, scope: !9489)
!9508 = !DILocation(line: 7371, column: 55, scope: !9489)
!9509 = !DILocation(line: 7371, column: 54, scope: !9489)
!9510 = !DILocation(line: 7371, column: 6, scope: !9489)
!9511 = !DILocation(line: 7371, column: 9, scope: !9489)
!9512 = !DILocation(line: 7371, column: 5, scope: !9489)
!9513 = !DILocation(line: 7373, column: 9, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 7373, column: 9)
!9515 = !DILocation(line: 7373, column: 14, scope: !9514)
!9516 = !DILocation(line: 7373, column: 11, scope: !9514)
!9517 = !DILocation(line: 7373, column: 9, scope: !9489)
!9518 = !DILocation(line: 7374, column: 22, scope: !9514)
!9519 = !DILocation(line: 7374, column: 27, scope: !9514)
!9520 = !DILocation(line: 7374, column: 24, scope: !9514)
!9521 = !DILocation(line: 7374, column: 38, scope: !9514)
!9522 = !DILocation(line: 7374, column: 42, scope: !9514)
!9523 = !DILocation(line: 7374, column: 41, scope: !9514)
!9524 = !DILocation(line: 7374, column: 45, scope: !9514)
!9525 = !DILocation(line: 7374, column: 44, scope: !9514)
!9526 = !DILocation(line: 7374, column: 37, scope: !9514)
!9527 = !DILocation(line: 7374, column: 36, scope: !9514)
!9528 = !DILocation(line: 7374, column: 58, scope: !9514)
!9529 = !DILocation(line: 7374, column: 62, scope: !9514)
!9530 = !DILocation(line: 7374, column: 61, scope: !9514)
!9531 = !DILocation(line: 7374, column: 65, scope: !9514)
!9532 = !DILocation(line: 7374, column: 64, scope: !9514)
!9533 = !DILocation(line: 7374, column: 57, scope: !9514)
!9534 = !DILocation(line: 7374, column: 56, scope: !9514)
!9535 = !DILocation(line: 7374, column: 8, scope: !9514)
!9536 = !DILocation(line: 7374, column: 11, scope: !9514)
!9537 = !DILocation(line: 7374, column: 7, scope: !9514)
!9538 = !DILocation(line: 7376, column: 22, scope: !9514)
!9539 = !DILocation(line: 7376, column: 27, scope: !9514)
!9540 = !DILocation(line: 7376, column: 24, scope: !9514)
!9541 = !DILocation(line: 7376, column: 38, scope: !9514)
!9542 = !DILocation(line: 7376, column: 42, scope: !9514)
!9543 = !DILocation(line: 7376, column: 41, scope: !9514)
!9544 = !DILocation(line: 7376, column: 45, scope: !9514)
!9545 = !DILocation(line: 7376, column: 44, scope: !9514)
!9546 = !DILocation(line: 7376, column: 37, scope: !9514)
!9547 = !DILocation(line: 7376, column: 36, scope: !9514)
!9548 = !DILocation(line: 7376, column: 58, scope: !9514)
!9549 = !DILocation(line: 7376, column: 62, scope: !9514)
!9550 = !DILocation(line: 7376, column: 61, scope: !9514)
!9551 = !DILocation(line: 7376, column: 65, scope: !9514)
!9552 = !DILocation(line: 7376, column: 64, scope: !9514)
!9553 = !DILocation(line: 7376, column: 57, scope: !9514)
!9554 = !DILocation(line: 7376, column: 56, scope: !9514)
!9555 = !DILocation(line: 7376, column: 8, scope: !9514)
!9556 = !DILocation(line: 7376, column: 11, scope: !9514)
!9557 = !DILocation(line: 7377, column: 4, scope: !9401)
!9558 = !DILocation(line: 7377, column: 7, scope: !9401)
!9559 = !DILocation(line: 7378, column: 1, scope: !9401)
!9560 = distinct !DISubprogram(name: "MagickMax", scope: !3, file: !3, line: 3524, type: !9561, scopeLine: 3525, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!855, !3008, !3008}
!9563 = !DILocalVariable(name: "x", arg: 1, scope: !9560, file: !3, line: 3524, type: !3008)
!9564 = !DILocation(line: 3524, column: 45, scope: !9560)
!9565 = !DILocalVariable(name: "y", arg: 2, scope: !9560, file: !3, line: 3524, type: !3008)
!9566 = !DILocation(line: 3524, column: 60, scope: !9560)
!9567 = !DILocation(line: 3526, column: 7, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 3526, column: 7)
!9569 = !DILocation(line: 3526, column: 11, scope: !9568)
!9570 = !DILocation(line: 3526, column: 9, scope: !9568)
!9571 = !DILocation(line: 3526, column: 7, scope: !9560)
!9572 = !DILocation(line: 3527, column: 12, scope: !9568)
!9573 = !DILocation(line: 3527, column: 5, scope: !9568)
!9574 = !DILocation(line: 3528, column: 10, scope: !9560)
!9575 = !DILocation(line: 3528, column: 3, scope: !9560)
!9576 = !DILocation(line: 3529, column: 1, scope: !9560)
!9577 = distinct !DISubprogram(name: "MagickMin", scope: !3, file: !3, line: 7333, type: !9561, scopeLine: 7334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9578 = !DILocalVariable(name: "x", arg: 1, scope: !9577, file: !3, line: 7333, type: !3008)
!9579 = !DILocation(line: 7333, column: 45, scope: !9577)
!9580 = !DILocalVariable(name: "y", arg: 2, scope: !9577, file: !3, line: 7333, type: !3008)
!9581 = !DILocation(line: 7333, column: 60, scope: !9577)
!9582 = !DILocation(line: 7335, column: 7, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 7335, column: 7)
!9584 = !DILocation(line: 7335, column: 11, scope: !9583)
!9585 = !DILocation(line: 7335, column: 9, scope: !9583)
!9586 = !DILocation(line: 7335, column: 7, scope: !9577)
!9587 = !DILocation(line: 7336, column: 12, scope: !9583)
!9588 = !DILocation(line: 7336, column: 5, scope: !9583)
!9589 = !DILocation(line: 7337, column: 10, scope: !9577)
!9590 = !DILocation(line: 7337, column: 3, scope: !9577)
!9591 = !DILocation(line: 7338, column: 1, scope: !9577)
!9592 = distinct !DISubprogram(name: "TranslateText", scope: !3, file: !3, line: 7413, type: !6389, scopeLine: 7415, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9593 = !DILocalVariable(name: "image_info", arg: 1, scope: !9592, file: !3, line: 7413, type: !1111)
!9594 = !DILocation(line: 7413, column: 51, scope: !9592)
!9595 = !DILocalVariable(name: "image", arg: 2, scope: !9592, file: !3, line: 7413, type: !818)
!9596 = !DILocation(line: 7413, column: 69, scope: !9592)
!9597 = !DILocalVariable(name: "embed_text", arg: 3, scope: !9592, file: !3, line: 7414, type: !943)
!9598 = !DILocation(line: 7414, column: 15, scope: !9592)
!9599 = !DILocation(line: 7418, column: 7, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9592, file: !3, line: 7418, column: 7)
!9601 = !DILocation(line: 7418, column: 14, scope: !9600)
!9602 = !DILocation(line: 7418, column: 20, scope: !9600)
!9603 = !DILocation(line: 7418, column: 7, scope: !9592)
!9604 = !DILocation(line: 7419, column: 12, scope: !9600)
!9605 = !DILocation(line: 7419, column: 5, scope: !9600)
!9606 = !DILocation(line: 7420, column: 35, scope: !9592)
!9607 = !DILocation(line: 7420, column: 46, scope: !9592)
!9608 = !DILocation(line: 7420, column: 52, scope: !9592)
!9609 = !DILocation(line: 7420, column: 10, scope: !9592)
!9610 = !DILocation(line: 7420, column: 3, scope: !9592)
!9611 = distinct !DISubprogram(name: "TransparentImage", scope: !3, file: !3, line: 7457, type: !9612, scopeLine: 7459, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9612 = !DISubroutineType(types: !9613)
!9613 = !{!834, !818, !1033, !6606}
!9614 = !DILocalVariable(name: "image", arg: 1, scope: !9611, file: !3, line: 7457, type: !818)
!9615 = !DILocation(line: 7457, column: 56, scope: !9611)
!9616 = !DILocalVariable(name: "target", arg: 2, scope: !9611, file: !3, line: 7458, type: !1033)
!9617 = !DILocation(line: 7458, column: 21, scope: !9611)
!9618 = !DILocalVariable(name: "opacity", arg: 3, scope: !9611, file: !3, line: 7458, type: !6606)
!9619 = !DILocation(line: 7458, column: 42, scope: !9611)
!9620 = !DILocalVariable(name: "proceed", scope: !9611, file: !3, line: 7463, type: !834)
!9621 = !DILocation(line: 7463, column: 5, scope: !9611)
!9622 = !DILocalVariable(name: "y", scope: !9611, file: !3, line: 7466, type: !813)
!9623 = !DILocation(line: 7466, column: 5, scope: !9611)
!9624 = !DILocation(line: 7473, column: 10, scope: !9611)
!9625 = !DILocation(line: 7474, column: 7, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 7474, column: 7)
!9627 = !DILocation(line: 7474, column: 14, scope: !9626)
!9628 = !DILocation(line: 7474, column: 20, scope: !9626)
!9629 = !DILocation(line: 7474, column: 7, scope: !9611)
!9630 = !DILocation(line: 7475, column: 61, scope: !9626)
!9631 = !DILocation(line: 7475, column: 68, scope: !9626)
!9632 = !DILocation(line: 7475, column: 12, scope: !9626)
!9633 = !DILocation(line: 7475, column: 5, scope: !9626)
!9634 = !DILocation(line: 7476, column: 7, scope: !9635)
!9635 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 7476, column: 7)
!9636 = !DILocation(line: 7476, column: 14, scope: !9635)
!9637 = !DILocation(line: 7476, column: 20, scope: !9635)
!9638 = !DILocation(line: 7476, column: 7, scope: !9611)
!9639 = !DILocation(line: 7477, column: 33, scope: !9635)
!9640 = !DILocation(line: 7477, column: 12, scope: !9635)
!9641 = !DILocation(line: 7477, column: 5, scope: !9635)
!9642 = !DILocation(line: 7478, column: 9, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9611, file: !3, line: 7478, column: 3)
!9644 = !DILocation(line: 7478, column: 8, scope: !9643)
!9645 = !DILocation(line: 7478, column: 13, scope: !9646)
!9646 = distinct !DILexicalBlock(scope: !9643, file: !3, line: 7478, column: 3)
!9647 = !DILocation(line: 7478, column: 27, scope: !9646)
!9648 = !DILocation(line: 7478, column: 34, scope: !9646)
!9649 = !DILocation(line: 7478, column: 15, scope: !9646)
!9650 = !DILocation(line: 7478, column: 3, scope: !9643)
!9651 = !DILocalVariable(name: "x", scope: !9652, file: !3, line: 7481, type: !813)
!9652 = distinct !DILexicalBlock(scope: !9646, file: !3, line: 7479, column: 3)
!9653 = !DILocation(line: 7481, column: 7, scope: !9652)
!9654 = !DILocalVariable(name: "q", scope: !9652, file: !3, line: 7484, type: !2119)
!9655 = !DILocation(line: 7484, column: 17, scope: !9652)
!9656 = !DILocation(line: 7486, column: 26, scope: !9652)
!9657 = !DILocation(line: 7486, column: 34, scope: !9652)
!9658 = !DILocation(line: 7486, column: 36, scope: !9652)
!9659 = !DILocation(line: 7486, column: 43, scope: !9652)
!9660 = !DILocation(line: 7486, column: 54, scope: !9652)
!9661 = !DILocation(line: 7486, column: 61, scope: !9652)
!9662 = !DILocation(line: 7486, column: 7, scope: !9652)
!9663 = !DILocation(line: 7486, column: 6, scope: !9652)
!9664 = !DILocation(line: 7487, column: 9, scope: !9665)
!9665 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 7487, column: 9)
!9666 = !DILocation(line: 7487, column: 11, scope: !9665)
!9667 = !DILocation(line: 7487, column: 9, scope: !9652)
!9668 = !DILocation(line: 7488, column: 7, scope: !9665)
!9669 = !DILocation(line: 7489, column: 11, scope: !9670)
!9670 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 7489, column: 5)
!9671 = !DILocation(line: 7489, column: 10, scope: !9670)
!9672 = !DILocation(line: 7489, column: 15, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9670, file: !3, line: 7489, column: 5)
!9674 = !DILocation(line: 7489, column: 29, scope: !9673)
!9675 = !DILocation(line: 7489, column: 36, scope: !9673)
!9676 = !DILocation(line: 7489, column: 17, scope: !9673)
!9677 = !DILocation(line: 7489, column: 5, scope: !9670)
!9678 = !DILocation(line: 7491, column: 26, scope: !9679)
!9679 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 7491, column: 11)
!9680 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 7490, column: 5)
!9681 = !DILocation(line: 7491, column: 32, scope: !9679)
!9682 = !DILocation(line: 7491, column: 11, scope: !9679)
!9683 = !DILocation(line: 7491, column: 43, scope: !9679)
!9684 = !DILocation(line: 7491, column: 11, scope: !9680)
!9685 = !DILocation(line: 7492, column: 20, scope: !9679)
!9686 = !DILocation(line: 7492, column: 9, scope: !9679)
!9687 = !DILocation(line: 7492, column: 12, scope: !9679)
!9688 = !DILocation(line: 7492, column: 19, scope: !9679)
!9689 = !DILocation(line: 7493, column: 8, scope: !9680)
!9690 = !DILocation(line: 7494, column: 5, scope: !9680)
!9691 = !DILocation(line: 7489, column: 46, scope: !9673)
!9692 = !DILocation(line: 7489, column: 5, scope: !9673)
!9693 = distinct !{!9693, !9677, !9694}
!9694 = !DILocation(line: 7494, column: 5, scope: !9670)
!9695 = !DILocation(line: 7495, column: 29, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 7495, column: 9)
!9697 = !DILocation(line: 7495, column: 36, scope: !9696)
!9698 = !DILocation(line: 7495, column: 43, scope: !9696)
!9699 = !DILocation(line: 7495, column: 9, scope: !9696)
!9700 = !DILocation(line: 7495, column: 54, scope: !9696)
!9701 = !DILocation(line: 7495, column: 9, scope: !9652)
!9702 = !DILocation(line: 7496, column: 7, scope: !9696)
!9703 = !DILocation(line: 7497, column: 30, scope: !9652)
!9704 = !DILocation(line: 7497, column: 75, scope: !9652)
!9705 = !DILocation(line: 7498, column: 7, scope: !9652)
!9706 = !DILocation(line: 7498, column: 14, scope: !9652)
!9707 = !DILocation(line: 7497, column: 13, scope: !9652)
!9708 = !DILocation(line: 7497, column: 12, scope: !9652)
!9709 = !DILocation(line: 7499, column: 9, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 7499, column: 9)
!9711 = !DILocation(line: 7499, column: 17, scope: !9710)
!9712 = !DILocation(line: 7499, column: 9, scope: !9652)
!9713 = !DILocation(line: 7500, column: 7, scope: !9710)
!9714 = !DILocation(line: 7501, column: 3, scope: !9652)
!9715 = !DILocation(line: 7478, column: 41, scope: !9646)
!9716 = !DILocation(line: 7478, column: 3, scope: !9646)
!9717 = distinct !{!9717, !9650, !9718}
!9718 = !DILocation(line: 7501, column: 3, scope: !9643)
!9719 = !DILocation(line: 7502, column: 3, scope: !9611)
!9720 = distinct !DISubprogram(name: "UnshiftImageList", scope: !3, file: !3, line: 7536, type: !7758, scopeLine: 7538, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9721 = !DILocalVariable(name: "images", arg: 1, scope: !9720, file: !3, line: 7536, type: !7706)
!9722 = !DILocation(line: 7536, column: 52, scope: !9720)
!9723 = !DILocalVariable(name: "image", arg: 2, scope: !9720, file: !3, line: 7536, type: !1168)
!9724 = !DILocation(line: 7536, column: 72, scope: !9720)
!9725 = !DILocalVariable(name: "exception", arg: 3, scope: !9720, file: !3, line: 7537, type: !1057)
!9726 = !DILocation(line: 7537, column: 18, scope: !9720)
!9727 = !DILocation(line: 7539, column: 10, scope: !9720)
!9728 = !DILocation(line: 7540, column: 22, scope: !9720)
!9729 = !DILocation(line: 7540, column: 44, scope: !9720)
!9730 = !DILocation(line: 7540, column: 50, scope: !9720)
!9731 = !DILocation(line: 7540, column: 29, scope: !9720)
!9732 = !DILocation(line: 7540, column: 3, scope: !9720)
!9733 = !DILocation(line: 7541, column: 3, scope: !9720)
!9734 = distinct !DISubprogram(name: "ValidateColormapIndex", scope: !3, file: !3, line: 7577, type: !9735, scopeLine: 7579, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9735 = !DISubroutineType(types: !9736)
!9736 = !{!1230, !818, !1172}
!9737 = !DILocalVariable(name: "image", arg: 1, scope: !9734, file: !3, line: 7577, type: !818)
!9738 = !DILocation(line: 7577, column: 55, scope: !9734)
!9739 = !DILocalVariable(name: "index", arg: 2, scope: !9734, file: !3, line: 7578, type: !1172)
!9740 = !DILocation(line: 7578, column: 16, scope: !9734)
!9741 = !DILocation(line: 7580, column: 7, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9734, file: !3, line: 7580, column: 7)
!9743 = !DILocation(line: 7580, column: 14, scope: !9742)
!9744 = !DILocation(line: 7580, column: 20, scope: !9742)
!9745 = !DILocation(line: 7580, column: 7, scope: !9734)
!9746 = !DILocation(line: 7581, column: 12, scope: !9742)
!9747 = !DILocation(line: 7581, column: 5, scope: !9742)
!9748 = !DILocation(line: 7582, column: 33, scope: !9734)
!9749 = !DILocation(line: 7582, column: 39, scope: !9734)
!9750 = !DILocation(line: 7582, column: 10, scope: !9734)
!9751 = !DILocation(line: 7582, column: 3, scope: !9734)
!9752 = distinct !DISubprogram(name: "ConstrainColormapIndex", scope: !9753, file: !9753, line: 29, type: !9735, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9753 = !DIFile(filename: "./magick/colormap-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9754 = !DILocalVariable(name: "image", arg: 1, scope: !9752, file: !9753, line: 29, type: !818)
!9755 = !DILocation(line: 29, column: 57, scope: !9752)
!9756 = !DILocalVariable(name: "index", arg: 2, scope: !9752, file: !9753, line: 30, type: !1172)
!9757 = !DILocation(line: 30, column: 16, scope: !9752)
!9758 = !DILocation(line: 32, column: 7, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9752, file: !9753, line: 32, column: 7)
!9760 = !DILocation(line: 32, column: 15, scope: !9759)
!9761 = !DILocation(line: 32, column: 22, scope: !9759)
!9762 = !DILocation(line: 32, column: 13, scope: !9759)
!9763 = !DILocation(line: 32, column: 7, scope: !9752)
!9764 = !DILocation(line: 33, column: 26, scope: !9759)
!9765 = !DILocation(line: 33, column: 12, scope: !9759)
!9766 = !DILocation(line: 33, column: 5, scope: !9759)
!9767 = !DILocation(line: 34, column: 32, scope: !9752)
!9768 = !DILocation(line: 34, column: 39, scope: !9752)
!9769 = !DILocation(line: 35, column: 53, scope: !9752)
!9770 = !DILocation(line: 35, column: 60, scope: !9752)
!9771 = !DILocation(line: 34, column: 10, scope: !9752)
!9772 = !DILocation(line: 36, column: 3, scope: !9752)
!9773 = !DILocation(line: 37, column: 1, scope: !9752)
!9774 = distinct !DISubprogram(name: "ZoomImage", scope: !3, file: !3, line: 7624, type: !9775, scopeLine: 7626, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9775 = !DISubroutineType(types: !9776)
!9776 = !{!818, !1168, !1172, !1172, !1057}
!9777 = !DILocalVariable(name: "image", arg: 1, scope: !9774, file: !3, line: 7624, type: !1168)
!9778 = !DILocation(line: 7624, column: 44, scope: !9774)
!9779 = !DILocalVariable(name: "columns", arg: 2, scope: !9774, file: !3, line: 7624, type: !1172)
!9780 = !DILocation(line: 7624, column: 63, scope: !9774)
!9781 = !DILocalVariable(name: "rows", arg: 3, scope: !9774, file: !3, line: 7625, type: !1172)
!9782 = !DILocation(line: 7625, column: 16, scope: !9774)
!9783 = !DILocalVariable(name: "exception", arg: 4, scope: !9774, file: !3, line: 7625, type: !1057)
!9784 = !DILocation(line: 7625, column: 36, scope: !9774)
!9785 = !DILocalVariable(name: "zoom_image", scope: !9774, file: !3, line: 7628, type: !818)
!9786 = !DILocation(line: 7628, column: 6, scope: !9774)
!9787 = !DILocation(line: 7632, column: 7, scope: !9788)
!9788 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 7632, column: 7)
!9789 = !DILocation(line: 7632, column: 14, scope: !9788)
!9790 = !DILocation(line: 7632, column: 20, scope: !9788)
!9791 = !DILocation(line: 7632, column: 7, scope: !9774)
!9792 = !DILocation(line: 7633, column: 61, scope: !9788)
!9793 = !DILocation(line: 7633, column: 68, scope: !9788)
!9794 = !DILocation(line: 7633, column: 12, scope: !9788)
!9795 = !DILocation(line: 7633, column: 5, scope: !9788)
!9796 = !DILocation(line: 7636, column: 26, scope: !9774)
!9797 = !DILocation(line: 7636, column: 32, scope: !9774)
!9798 = !DILocation(line: 7636, column: 40, scope: !9774)
!9799 = !DILocation(line: 7636, column: 45, scope: !9774)
!9800 = !DILocation(line: 7636, column: 52, scope: !9774)
!9801 = !DILocation(line: 7636, column: 59, scope: !9774)
!9802 = !DILocation(line: 7636, column: 66, scope: !9774)
!9803 = !DILocation(line: 7637, column: 5, scope: !9774)
!9804 = !DILocation(line: 7636, column: 14, scope: !9774)
!9805 = !DILocation(line: 7636, column: 13, scope: !9774)
!9806 = !DILocation(line: 7638, column: 10, scope: !9774)
!9807 = !DILocation(line: 7638, column: 3, scope: !9774)
!9808 = distinct !DISubprogram(name: "MagickOver_", scope: !2636, file: !2636, line: 38, type: !9809, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !1260)
!9809 = !DISubroutineType(types: !9810)
!9810 = !{!1034, !2639, !2639, !2639, !2639}
!9811 = !DILocalVariable(name: "p", arg: 1, scope: !9808, file: !2636, line: 38, type: !2639)
!9812 = !DILocation(line: 38, column: 63, scope: !9808)
!9813 = !DILocalVariable(name: "alpha", arg: 2, scope: !9808, file: !2636, line: 39, type: !2639)
!9814 = !DILocation(line: 39, column: 24, scope: !9808)
!9815 = !DILocalVariable(name: "q", arg: 3, scope: !9808, file: !2636, line: 39, type: !2639)
!9816 = !DILocation(line: 39, column: 51, scope: !9808)
!9817 = !DILocalVariable(name: "beta", arg: 4, scope: !9808, file: !2636, line: 39, type: !2639)
!9818 = !DILocation(line: 39, column: 74, scope: !9808)
!9819 = !DILocation(line: 41, column: 28, scope: !9808)
!9820 = !DILocation(line: 41, column: 27, scope: !9808)
!9821 = !DILocation(line: 41, column: 14, scope: !9808)
!9822 = !DILocation(line: 41, column: 35, scope: !9808)
!9823 = !DILocation(line: 41, column: 34, scope: !9808)
!9824 = !DILocation(line: 41, column: 55, scope: !9808)
!9825 = !DILocation(line: 41, column: 54, scope: !9808)
!9826 = !DILocation(line: 41, column: 41, scope: !9808)
!9827 = !DILocation(line: 41, column: 61, scope: !9808)
!9828 = !DILocation(line: 41, column: 60, scope: !9808)
!9829 = !DILocation(line: 41, column: 62, scope: !9808)
!9830 = !DILocation(line: 42, column: 18, scope: !9808)
!9831 = !DILocation(line: 42, column: 17, scope: !9808)
!9832 = !DILocation(line: 41, column: 36, scope: !9808)
!9833 = !DILocation(line: 41, column: 9, scope: !9808)
!9834 = !DILocation(line: 41, column: 3, scope: !9808)
