; ModuleID = 'blender/source/blender/blenkernel/intern/dynamicpaint.c'
source_filename = "blender/source/blender/blenkernel/intern/dynamicpaint.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.DynamicPaintSurface = type { %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface*, %struct.DynamicPaintCanvasSettings*, %struct.PaintSurfaceData*, %struct.Group*, %struct.EffectorWeights*, %struct.PointCache*, %struct.ListBase, i32, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, [4 x float], %struct.Tex*, [64 x i8], i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, [64 x i8], [1024 x i8], [64 x i8], [64 x i8] }
%struct.DynamicPaintCanvasSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ListBase, i16, i16, i32, [64 x i8] }
%struct.DynamicPaintModifierData = type { %struct.ModifierData, %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintBrushSettings*, i32, i32 }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.GPUTexture = type opaque
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.BulletSoftBody = type { i32, float, float, float, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, float, float }
%struct.PartDeflect = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.Tex*, %struct.RNG*, float, i32, %struct.Object* }
%struct.RNG = type opaque
%struct.SoftBody = type { i32, i32, %struct.BodyPoint*, %struct.BodySpring*, i8, i8, i16, float, [64 x i8], float, float, float, float, float, float, float, float, float, i16, [64 x i8], i16, float, float, [64 x i8], i32, i32, i32, i16, i16, %struct.SBVertex**, i32, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.SBScratch*, float, float, %struct.PointCache*, %struct.ListBase, %struct.EffectorWeights*, [3 x float], [3 x [3 x float]], [3 x [3 x float]], i32 }
%struct.BodyPoint = type opaque
%struct.BodySpring = type opaque
%struct.SBVertex = type { [4 x float] }
%struct.SBScratch = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.DynamicPaintBrushSettings = type { %struct.DynamicPaintModifierData*, %struct.DerivedMesh*, %struct.ParticleSystem*, %struct.Material*, i32, i32, float, float, float, float, float, float, float, float, %struct.ColorBand*, %struct.ColorBand*, i16, i16, i16, i16, float, float, float, float }
%struct.ParticleSystem = type { %struct.ParticleSystem*, %struct.ParticleSystem*, %struct.ParticleSettings*, %struct.ParticleData*, %struct.ChildParticle*, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)*, %struct.ParticleCacheKey**, %struct.ParticleCacheKey**, %struct.ListBase, %struct.ListBase, %struct.ClothModifierData*, %struct.DerivedMesh*, %struct.DerivedMesh*, %struct.Object*, %struct.LatticeDeformData*, %struct.Object*, %struct.ListBase, [64 x i8], [4 x [4 x float]], float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, [3 x [64 x i8]], [12 x i16], i16, i16, i8*, %struct.PointCache*, %struct.ListBase, %struct.ListBase*, %struct.ParticleSpring*, i32, i32, %struct.KDTree*, %struct.BVHTree*, %struct.ParticleDrawData*, float, float }
%struct.ParticleSettings = type { %struct.ID, %struct.AnimData*, %struct.BoidSettings*, %struct.SPHFluidSettings*, %struct.EffectorWeights*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, [2 x float], [2 x float], float, float, float, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, [1 x float], i32, i32, i32, i32, i16, [3 x i16], float, float, float, float, float, float, float, [3 x float], float, float, float, float, float, float, float, [3 x float], float, float, float, float, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, [2 x float], float, float, i32, i32, [18 x %struct.MTex*], %struct.Group*, %struct.ListBase, %struct.Group*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.PartDeflect*, %struct.PartDeflect*, i16, [3 x i16] }
%struct.BoidSettings = type { i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.ListBase }
%struct.SPHFluidSettings = type { float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i16, [3 x i16] }
%struct.ParticleData = type { %struct.ParticleKey, %struct.ParticleKey, %struct.HairKey*, %struct.ParticleKey*, %struct.BoidParticle*, i32, float, float, float, i32, i32, [4 x float], float, float, float, i32, i32, i16, i16 }
%struct.ParticleKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float }
%struct.HairKey = type { [3 x float], float, float, i16, i16 }
%struct.BoidParticle = type { %struct.Object*, %struct.BoidData, [3 x float], [3 x float], float }
%struct.BoidData = type { float, [3 x float], i16, i16 }
%struct.ChildParticle = type { i32, i32, [4 x i32], [4 x float], [4 x float], float, float }
%struct.PTCacheEdit = type { %struct.ListBase, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.PTCacheID, %struct.ParticleSystem*, %struct.ParticleData*, %struct.KDTree*, float*, i32*, %struct.ParticleCacheKey**, %struct.ListBase, i32, i32, i32, i32, [3 x i8], [3 x i8] }
%struct.PTCacheUndo = type { %struct.PTCacheUndo*, %struct.PTCacheUndo*, %struct.PTCacheEditPoint*, %struct.ParticleData*, %struct.KDTree*, float*, i32, %struct.ListBase, i32, [64 x i8] }
%struct.PTCacheEditPoint = type { %struct.PTCacheEditKey*, i32, i16 }
%struct.PTCacheEditKey = type { float*, float*, float*, float*, [3 x float], float, float, i16 }
%struct.PTCacheID = type { %struct.PTCacheID*, %struct.PTCacheID*, %struct.Scene*, %struct.Object*, i8*, i32, i32, i32, i32, i32, i32, i32, i32 (i32, i8*, i8**, i32)*, void (i32, i8*, i8**, float, float*)*, void (i32, i8*, i8**, float, float, float, float*)*, i32 (%struct.PTCacheFile*, i8*)*, i32 (%struct.PTCacheFile*, i8*)*, void (i8*, %struct.PTCacheMem*, i32)*, void (i8*, %struct.PTCacheMem*, float)*, void (i8*, %struct.PTCacheMem*, float, float, float)*, i32 (i8*, i32)*, void (i8*, i8*)*, i32 (i8*, i32)*, i32 (%struct.PTCacheFile*)*, i32 (%struct.PTCacheFile*)*, %struct.PointCache*, %struct.PointCache**, %struct.ListBase* }
%struct.PTCacheFile = type { %struct._IO_FILE*, i32, i32, i32, i32, i32, i32, %struct.PTCacheData, [8 x i8*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.PTCacheData = type { i32, [3 x float], [3 x float], [4 x float], [3 x float], float, [3 x float], %struct.BoidData }
%struct.PTCacheMem = type { %struct.PTCacheMem*, %struct.PTCacheMem*, i32, i32, i32, i32, [8 x i8*], [8 x i8*], %struct.ListBase }
%struct.ParticleCacheKey = type { [3 x float], [3 x float], [4 x float], [3 x float], float, i32 }
%struct.ClothModifierData = type { %struct.ModifierData, %struct.Scene*, %struct.Cloth*, %struct.ClothSimSettings*, %struct.ClothCollSettings*, %struct.PointCache*, %struct.ListBase }
%struct.Cloth = type opaque
%struct.ClothSimSettings = type opaque
%struct.ClothCollSettings = type opaque
%struct.LatticeDeformData = type opaque
%struct.ParticleSpring = type { float, [2 x i32], i32 }
%struct.KDTree = type opaque
%struct.BVHTree = type opaque
%struct.ParticleDrawData = type { float*, float*, float*, float*, float*, float*, float*, float*, float*, i32, i32, i32, i32 }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.PaintSurfaceData = type { i8*, i8*, %struct.PaintAdjData*, %struct.PaintBakeData*, i32 }
%struct.PaintAdjData = type { i32*, i32*, i32*, i32*, i32 }
%struct.PaintBakeData = type { %struct.PaintBakeNormal*, i32*, i32*, %struct.Vec3f*, %struct.Bounds3D, %struct.BakeAdjPoint*, double, %struct.VolumeGrid*, %struct.Vec3f*, %struct.Vec3f*, float*, %struct.MVert*, [4 x [4 x float]], i32 }
%struct.PaintBakeNormal = type { [3 x float], float }
%struct.Bounds3D = type { i32, [3 x float], [3 x float] }
%struct.BakeAdjPoint = type { [3 x float], float }
%struct.VolumeGrid = type { [3 x i32], %struct.Bounds3D, %struct.Bounds3D*, i32*, i32*, i32* }
%struct.Vec3f = type { [3 x float] }
%struct.Group = type { %struct.ID, %struct.ListBase, i32, [3 x float] }
%struct.EffectorWeights = type { %struct.Group*, [14 x float], float, i16, [3 x i16], i32 }
%struct.PointCache = type { %struct.PointCache*, %struct.PointCache*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, [64 x i8], [64 x i8], [64 x i8], [1024 x i8], i8*, %struct.ListBase, %struct.PTCacheEdit*, void (%struct.PTCacheEdit*)* }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.ImgSeqFormatData = type { %struct.PaintUVPoint*, %struct.Vec3f* }
%struct.PaintUVPoint = type { i32, i32, i32, i32, i32, i32, i16 }
%struct.PaintPoint = type { [3 x float], float, float, i16, [3 x float], float }
%struct.ImagePool = type opaque
%struct.TexResult = type { float, float, float, float, float, i32, float* }
%struct.PaintWavePoint = type { float, float, float, i16 }
%struct.Bounds2D = type { [2 x float], [2 x float] }
%struct.GroupObject = type { %struct.GroupObject*, %struct.GroupObject*, %struct.Object*, i8*, i16, [6 x i8] }
%struct.BrushMaterials = type { %struct.Material*, %struct.Material**, i32 }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.Curve = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.ListBase, %struct.EditNurb*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.Key*, %struct.Material**, [3 x float], [3 x float], [3 x float], i16, i16, i16, i16, float, float, i32, i16, i16, i32, float, float, float, i16, i16, i16, i16, i32, i32, [4 x i8], i16, i8, i8, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, i8*, %struct.EditFont*, [64 x i8], %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.VFont*, %struct.TextBox*, i32, i32, %struct.CharInfo*, %struct.CharInfo, float, float, float, i8, i8, [2 x i8] }
%struct.EditNurb = type { %struct.ListBase, %struct.GHash*, i32, [4 x i8] }
%struct.EditFont = type opaque
%struct.VFont = type opaque
%struct.TextBox = type { float, float, float, float }
%struct.CharInfo = type { i16, i16, i8, i8, i16 }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.EditBone = type opaque
%struct.KDTreeNearest = type { i32, float, [3 x float] }
%struct.BVHTreeFromMesh = type { %struct.BVHTree*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, %struct.MVert*, %struct.MEdge*, %struct.MFace*, i8, i8, i8, float, i8*, i8 }
%struct.BVHTreeNearest = type { i32, [3 x float], [3 x float], float, i32 }
%struct.BVHTreeRay = type { [3 x float], [3 x float], float }
%struct.BVHTreeRayHit = type { i32, [3 x float], [3 x float], float, i32 }
%struct.EffectedPoint = type { float*, float*, float*, float*, float, float, float, float, i32, i32, %struct.ParticleSystem* }

@.str = private unnamed_addr constant [4 x i8] c"dp_\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"paintmap\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"wetmap\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"displace\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"weight\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"wave\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.6 = private unnamed_addr constant [20 x i8] c"DynamicPaintSurface\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c"cache_dynamicpaint\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"Surface\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"DynamicPaint Canvas\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"DynamicPaint Paint\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.11 = private unnamed_addr constant [17 x i8] c"PaintSurfaceData\00", align 1
@__const.dynamicPaint_createUVSurface.jitter5sample = private unnamed_addr constant [10 x float] [float 0.000000e+00, float 0.000000e+00, float 0xBFC99999A0000000, float 0xBFD99999A0000000, float 0x3FC99999A0000000, float 0x3FD99999A0000000, float 0x3FD99999A0000000, float 0xBFC99999A0000000, float 0xBFD99999A0000000, float 0x3FD3333340000000], align 16
@.str.12 = private unnamed_addr constant [24 x i8] c"Canvas mesh not updated\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"Cannot bake non-'image sequence' formats\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"No UV data on canvas\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"Invalid resolution\00", align 1
@.str.16 = private unnamed_addr constant [66 x i8] c"DynamicPaint: Preparing UV surface of %ix%i pixels and %i faces.\0A\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"Not enough free memory\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"Temp PaintUVPoint\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"Temp UV Final Indexes\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.20 = private unnamed_addr constant [14 x i8] c"Temp bWeights\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"MPCanvasFaceBB\00", align 1
@.str.22 = private unnamed_addr constant [17 x i8] c"ImgSeqFormatData\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"PaintUVPoint\00", align 1
@.str.24 = private unnamed_addr constant [35 x i8] c"Image save failed: invalid surface\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.25 = private unnamed_addr constant [42 x i8] c"Image save failed: not enough free memory\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"DynamicPaintSurface Data\00", align 1
@.str.27 = private unnamed_addr constant [30 x i8] c"DynamicPaintSurface DepthData\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"DynamicPaintSurface WeightData\00", align 1
@.str.29 = private unnamed_addr constant [29 x i8] c"DynamicPaintSurface WaveData\00", align 1
@.str.30 = private unnamed_addr constant [17 x i8] c"Surface Adj Data\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"Surface Adj Index\00", align 1
@.str.32 = private unnamed_addr constant [19 x i8] c"Surface Adj Counts\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Temp Adj Data\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Surface Adj Targets\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"Surface Adj Flags\00", align 1
@.str.36 = private unnamed_addr constant [17 x i8] c"Temp paint color\00", align 1
@neighX = internal global [8 x i32] [i32 1, i32 1, i32 0, i32 -1, i32 -1, i32 -1, i32 0, i32 1], align 16, !dbg !0
@neighY = internal global [8 x i32] [i32 0, i32 1, i32 1, i32 1, i32 0, i32 -1, i32 -1, i32 -1], align 16, !dbg !3296
@.str.37 = private unnamed_addr constant [39 x i8] c"Dynamic Paint transformed canvas verts\00", align 1
@.str.38 = private unnamed_addr constant [24 x i8] c"Dynamic Paint bake data\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"Dynamic Paint step data\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"Dynamic Paint bData s_pos\00", align 1
@.str.41 = private unnamed_addr constant [26 x i8] c"Dynamic Paint bData s_num\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"Dynamic Paint point coords\00", align 1
@.str.43 = private unnamed_addr constant [31 x i8] c"Dynamic Paint bData prev_verts\00", align 1
@.str.44 = private unnamed_addr constant [23 x i8] c"Dynamic Paint velocity\00", align 1
@.str.45 = private unnamed_addr constant [28 x i8] c"Dynamic Paint prev velocity\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"Grid Bounds\00", align 1
@.str.47 = private unnamed_addr constant [13 x i8] c"Surface Grid\00", align 1
@.str.48 = private unnamed_addr constant [20 x i8] c"Surface Grid Bounds\00", align 1
@.str.49 = private unnamed_addr constant [22 x i8] c"Surface Grid Position\00", align 1
@.str.50 = private unnamed_addr constant [20 x i8] c"Surface Grid Points\00", align 1
@.str.51 = private unnamed_addr constant [25 x i8] c"Temp Surface Grid Points\00", align 1
@.str.52 = private unnamed_addr constant [24 x i8] c"Surface Grid Target Ids\00", align 1
@.str.53 = private unnamed_addr constant [29 x i8] c"Temp Surface Grid Target Ids\00", align 1
@MEM_reallocN_id = external dso_local global i8* (i8*, i64, i8*)*, align 8
@__func__.surfaceGenerateGrid = private unnamed_addr constant [20 x i8] c"surfaceGenerateGrid\00", align 1
@.str.54 = private unnamed_addr constant [16 x i8] c"PaintEffectBake\00", align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"Dynamic Paint brush velocity\00", align 1
@.str.56 = private unnamed_addr constant [21 x i8] c"PaintSurfaceDataCopy\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"BrushMaterials\00", align 1
@.str.58 = private unnamed_addr constant [37 x i8] c"Warning: Invalid particle(s) found!\0A\00", align 1
@gaussianFactors = internal constant [5 x float] [float 0x3FEFE62FE0000000, float 0x3FE3139EA0000000, float 0x3FE3139EA0000000, float 0x3FE3139EA0000000, float 0x3FE0C5C360000000], align 16, !dbg !3301
@.str.59 = private unnamed_addr constant [41 x i8] c"Temp previous points for wave simulation\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"PaintEffectForces\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @dynamicPaint_surfaceHasColorPreview(%struct.DynamicPaintSurface* %surface) #0 !dbg !3308 {
entry:
  %retval = alloca i8, align 1
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3312, metadata !DIExpression()), !dbg !3313
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3314
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 10, !dbg !3316
  %1 = load i16, i16* %format, align 4, !dbg !3316
  %conv = sext i16 %1 to i32, !dbg !3314
  %cmp = icmp eq i32 %conv, 2, !dbg !3317
  br i1 %cmp, label %if.then, label %if.else, !dbg !3318

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !3319
  br label %return, !dbg !3319

if.else:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3321
  %format2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 10, !dbg !3323
  %3 = load i16, i16* %format2, align 4, !dbg !3323
  %conv3 = sext i16 %3 to i32, !dbg !3321
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !3324
  br i1 %cmp4, label %if.then6, label %if.else16, !dbg !3325

if.then6:                                         ; preds = %if.else
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3326
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 11, !dbg !3329
  %5 = load i16, i16* %type, align 2, !dbg !3329
  %conv7 = sext i16 %5 to i32, !dbg !3326
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !3330
  br i1 %cmp8, label %if.then14, label %lor.lhs.false, !dbg !3331

lor.lhs.false:                                    ; preds = %if.then6
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3332
  %type10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 11, !dbg !3333
  %7 = load i16, i16* %type10, align 2, !dbg !3333
  %conv11 = sext i16 %7 to i32, !dbg !3332
  %cmp12 = icmp eq i32 %conv11, 3, !dbg !3334
  br i1 %cmp12, label %if.then14, label %if.else15, !dbg !3335

if.then14:                                        ; preds = %lor.lhs.false, %if.then6
  store i8 0, i8* %retval, align 1, !dbg !3336
  br label %return, !dbg !3336

if.else15:                                        ; preds = %lor.lhs.false
  store i8 1, i8* %retval, align 1, !dbg !3338
  br label %return, !dbg !3338

if.else16:                                        ; preds = %if.else
  store i8 1, i8* %retval, align 1, !dbg !3340
  br label %return, !dbg !3340

return:                                           ; preds = %if.else16, %if.else15, %if.then14, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !3342
  ret i8 %8, !dbg !3342
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DynamicPaintSurface* @get_activeSurface(%struct.DynamicPaintCanvasSettings* %canvas) #0 !dbg !3343 {
entry:
  %retval = alloca %struct.DynamicPaintSurface*, align 8
  %canvas.addr = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %i = alloca i32, align 4
  store %struct.DynamicPaintCanvasSettings* %canvas, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas.addr, metadata !3348, metadata !DIExpression()), !dbg !3349
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !3350, metadata !DIExpression()), !dbg !3351
  %0 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !3352
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %0, i32 0, i32 2, !dbg !3353
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !3354
  %1 = load i8*, i8** %first, align 8, !dbg !3354
  %2 = bitcast i8* %1 to %struct.DynamicPaintSurface*, !dbg !3352
  store %struct.DynamicPaintSurface* %2, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3351
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3355, metadata !DIExpression()), !dbg !3356
  store i32 0, i32* %i, align 4, !dbg !3357
  br label %for.cond, !dbg !3359

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3360
  %tobool = icmp ne %struct.DynamicPaintSurface* %3, null, !dbg !3362
  br i1 %tobool, label %for.body, label %for.end, !dbg !3362

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !3363
  %5 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !3366
  %active_sur = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %5, i32 0, i32 3, !dbg !3367
  %6 = load i16, i16* %active_sur, align 8, !dbg !3367
  %conv = sext i16 %6 to i32, !dbg !3366
  %cmp = icmp eq i32 %4, %conv, !dbg !3368
  br i1 %cmp, label %if.then, label %if.end, !dbg !3369

if.then:                                          ; preds = %for.body
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3370
  store %struct.DynamicPaintSurface* %7, %struct.DynamicPaintSurface** %retval, align 8, !dbg !3371
  br label %return, !dbg !3371

if.end:                                           ; preds = %for.body
  %8 = load i32, i32* %i, align 4, !dbg !3372
  %inc = add nsw i32 %8, 1, !dbg !3372
  store i32 %inc, i32* %i, align 4, !dbg !3372
  br label %for.inc, !dbg !3373

for.inc:                                          ; preds = %if.end
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3374
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 0, !dbg !3375
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !3375
  store %struct.DynamicPaintSurface* %10, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3376
  br label %for.cond, !dbg !3377, !llvm.loop !3378

for.end:                                          ; preds = %for.cond
  store %struct.DynamicPaintSurface* null, %struct.DynamicPaintSurface** %retval, align 8, !dbg !3380
  br label %return, !dbg !3380

return:                                           ; preds = %for.end, %if.then
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %retval, align 8, !dbg !3381
  ret %struct.DynamicPaintSurface* %11, !dbg !3381
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_resetPreview(%struct.DynamicPaintCanvasSettings* %canvas) #0 !dbg !3382 {
entry:
  %canvas.addr = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %done = alloca i8, align 1
  store %struct.DynamicPaintCanvasSettings* %canvas, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas.addr, metadata !3385, metadata !DIExpression()), !dbg !3386
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !3387, metadata !DIExpression()), !dbg !3388
  %0 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !3389
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %0, i32 0, i32 2, !dbg !3390
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !3391
  %1 = load i8*, i8** %first, align 8, !dbg !3391
  %2 = bitcast i8* %1 to %struct.DynamicPaintSurface*, !dbg !3389
  store %struct.DynamicPaintSurface* %2, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3388
  call void @llvm.dbg.declare(metadata i8* %done, metadata !3392, metadata !DIExpression()), !dbg !3393
  store i8 0, i8* %done, align 1, !dbg !3393
  br label %for.cond, !dbg !3394

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3395
  %tobool = icmp ne %struct.DynamicPaintSurface* %3, null, !dbg !3398
  br i1 %tobool, label %for.body, label %for.end, !dbg !3398

for.body:                                         ; preds = %for.cond
  %4 = load i8, i8* %done, align 1, !dbg !3399
  %tobool1 = icmp ne i8 %4, 0, !dbg !3399
  br i1 %tobool1, label %if.else, label %land.lhs.true, !dbg !3402

land.lhs.true:                                    ; preds = %for.body
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3403
  %call = call zeroext i8 @dynamicPaint_surfaceHasColorPreview(%struct.DynamicPaintSurface* %5), !dbg !3404
  %conv = zext i8 %call to i32, !dbg !3404
  %tobool2 = icmp ne i32 %conv, 0, !dbg !3404
  br i1 %tobool2, label %if.then, label %if.else, !dbg !3405

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3406
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 18, !dbg !3408
  %7 = load i32, i32* %flags, align 4, !dbg !3409
  %or = or i32 %7, 64, !dbg !3409
  store i32 %or, i32* %flags, align 4, !dbg !3409
  store i8 1, i8* %done, align 1, !dbg !3410
  br label %if.end, !dbg !3411

if.else:                                          ; preds = %land.lhs.true, %for.body
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3412
  %flags3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 18, !dbg !3413
  %9 = load i32, i32* %flags3, align 4, !dbg !3414
  %and = and i32 %9, -65, !dbg !3414
  store i32 %and, i32* %flags3, align 4, !dbg !3414
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !3415

for.inc:                                          ; preds = %if.end
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3416
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 0, !dbg !3417
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !3417
  store %struct.DynamicPaintSurface* %11, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3418
  br label %for.cond, !dbg !3419, !llvm.loop !3420

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3422
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @dynamicPaint_outputLayerExists(%struct.DynamicPaintSurface* %surface, %struct.Object* %ob, i32 %output) #0 !dbg !3423 {
entry:
  %retval = alloca i8, align 1
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %output.addr = alloca i32, align 4
  %name = alloca i8*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3428, metadata !DIExpression()), !dbg !3429
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  store i32 %output, i32* %output.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %output.addr, metadata !3432, metadata !DIExpression()), !dbg !3433
  call void @llvm.dbg.declare(metadata i8** %name, metadata !3434, metadata !DIExpression()), !dbg !3435
  %0 = load i32, i32* %output.addr, align 4, !dbg !3436
  %cmp = icmp eq i32 %0, 0, !dbg !3438
  br i1 %cmp, label %if.then, label %if.else, !dbg !3439

if.then:                                          ; preds = %entry
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3440
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %1, i32 0, i32 48, !dbg !3441
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !3440
  store i8* %arraydecay, i8** %name, align 8, !dbg !3442
  br label %if.end5, !dbg !3443

if.else:                                          ; preds = %entry
  %2 = load i32, i32* %output.addr, align 4, !dbg !3444
  %cmp1 = icmp eq i32 %2, 1, !dbg !3446
  br i1 %cmp1, label %if.then2, label %if.else4, !dbg !3447

if.then2:                                         ; preds = %if.else
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3448
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 49, !dbg !3449
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !3448
  store i8* %arraydecay3, i8** %name, align 8, !dbg !3450
  br label %if.end, !dbg !3451

if.else4:                                         ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !3452
  br label %return, !dbg !3452

if.end:                                           ; preds = %if.then2
  br label %if.end5

if.end5:                                          ; preds = %if.end, %if.then
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3453
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 10, !dbg !3455
  %5 = load i16, i16* %format, align 4, !dbg !3455
  %conv = sext i16 %5 to i32, !dbg !3453
  %cmp6 = icmp eq i32 %conv, 1, !dbg !3456
  br i1 %cmp6, label %if.then8, label %if.end30, !dbg !3457

if.then8:                                         ; preds = %if.end5
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3458
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 11, !dbg !3461
  %7 = load i16, i16* %type, align 2, !dbg !3461
  %conv9 = sext i16 %7 to i32, !dbg !3458
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !3462
  br i1 %cmp10, label %if.then12, label %if.else16, !dbg !3463

if.then12:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3464, metadata !DIExpression()), !dbg !3589
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3590
  %data = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 19, !dbg !3591
  %9 = load i8*, i8** %data, align 8, !dbg !3591
  %10 = bitcast i8* %9 to %struct.Mesh*, !dbg !3590
  store %struct.Mesh* %10, %struct.Mesh** %me, align 8, !dbg !3589
  %11 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !3592
  %fdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %11, i32 0, i32 23, !dbg !3593
  %12 = load i8*, i8** %name, align 8, !dbg !3594
  %call = call i32 @CustomData_get_named_layer_index(%struct.CustomData* %fdata, i32 6, i8* %12), !dbg !3595
  %cmp13 = icmp ne i32 %call, -1, !dbg !3596
  %conv14 = zext i1 %cmp13 to i32, !dbg !3596
  %conv15 = trunc i32 %conv14 to i8, !dbg !3597
  store i8 %conv15, i8* %retval, align 1, !dbg !3598
  br label %return, !dbg !3598

if.else16:                                        ; preds = %if.then8
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3599
  %type17 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 11, !dbg !3601
  %14 = load i16, i16* %type17, align 2, !dbg !3601
  %conv18 = sext i16 %14 to i32, !dbg !3599
  %cmp19 = icmp eq i32 %conv18, 2, !dbg !3602
  br i1 %cmp19, label %if.then21, label %if.end28, !dbg !3603

if.then21:                                        ; preds = %if.else16
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !3604
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3605
  %output_name22 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 48, !dbg !3606
  %arraydecay23 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name22, i64 0, i64 0, !dbg !3605
  %call24 = call i32 @defgroup_name_index(%struct.Object* %15, i8* %arraydecay23), !dbg !3607
  %cmp25 = icmp ne i32 %call24, -1, !dbg !3608
  %conv26 = zext i1 %cmp25 to i32, !dbg !3608
  %conv27 = trunc i32 %conv26 to i8, !dbg !3609
  store i8 %conv27, i8* %retval, align 1, !dbg !3610
  br label %return, !dbg !3610

if.end28:                                         ; preds = %if.else16
  br label %if.end29

if.end29:                                         ; preds = %if.end28
  br label %if.end30, !dbg !3611

if.end30:                                         ; preds = %if.end29, %if.end5
  store i8 0, i8* %retval, align 1, !dbg !3612
  br label %return, !dbg !3612

return:                                           ; preds = %if.end30, %if.then21, %if.then12, %if.else4
  %17 = load i8, i8* %retval, align 1, !dbg !3613
  ret i8 %17, !dbg !3613
}

declare dso_local i32 @CustomData_get_named_layer_index(%struct.CustomData*, i32, i8*) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaintSurface_setUniqueName(%struct.DynamicPaintSurface* %surface, i8* %basename) #0 !dbg !3614 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %basename.addr = alloca i8*, align 8
  %name = alloca [64 x i8], align 16
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3617, metadata !DIExpression()), !dbg !3618
  store i8* %basename, i8** %basename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %basename.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !3621, metadata !DIExpression()), !dbg !3622
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3623
  %0 = load i8*, i8** %basename.addr, align 8, !dbg !3624
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %0, i64 64), !dbg !3625
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3626
  %2 = bitcast %struct.DynamicPaintSurface* %1 to i8*, !dbg !3626
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3627
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3628
  %name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 9, !dbg !3629
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %name2, i64 0, i64 0, !dbg !3628
  %call4 = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @surface_duplicateNameExists, i8* %2, i8* %arraydecay1, i8 zeroext 46, i8* %arraydecay3, i32 64), !dbg !3630
  ret void, !dbg !3631
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

declare dso_local zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)*, i8*, i8*, i8 zeroext, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @surface_duplicateNameExists(i8* %arg, i8* %name) #0 !dbg !3632 {
entry:
  %retval = alloca i8, align 1
  %arg.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %t_surface = alloca %struct.DynamicPaintSurface*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !3635, metadata !DIExpression()), !dbg !3636
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3637, metadata !DIExpression()), !dbg !3638
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %t_surface, metadata !3639, metadata !DIExpression()), !dbg !3640
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !3641
  %1 = bitcast i8* %0 to %struct.DynamicPaintSurface*, !dbg !3642
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !3640
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !3643, metadata !DIExpression()), !dbg !3644
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !3645
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 2, !dbg !3646
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !3646
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %3, i32 0, i32 2, !dbg !3647
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !3648
  %4 = load i8*, i8** %first, align 8, !dbg !3648
  %5 = bitcast i8* %4 to %struct.DynamicPaintSurface*, !dbg !3645
  store %struct.DynamicPaintSurface* %5, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3644
  br label %for.cond, !dbg !3649

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3650
  %tobool = icmp ne %struct.DynamicPaintSurface* %6, null, !dbg !3653
  br i1 %tobool, label %for.body, label %for.end, !dbg !3653

for.body:                                         ; preds = %for.cond
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3654
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !3657
  %cmp = icmp ne %struct.DynamicPaintSurface* %7, %8, !dbg !3658
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !3659

land.lhs.true:                                    ; preds = %for.body
  %9 = load i8*, i8** %name.addr, align 8, !dbg !3660
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3661
  %name1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 9, !dbg !3662
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !3661
  %call = call i32 @strcmp(i8* %9, i8* %arraydecay) #6, !dbg !3663
  %tobool2 = icmp ne i32 %call, 0, !dbg !3663
  br i1 %tobool2, label %if.end, label %if.then, !dbg !3664

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !3665
  br label %return, !dbg !3665

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !3666

for.inc:                                          ; preds = %if.end
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3667
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 0, !dbg !3668
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !3668
  store %struct.DynamicPaintSurface* %12, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3669
  br label %for.cond, !dbg !3670, !llvm.loop !3671

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !3673
  br label %return, !dbg !3673

return:                                           ; preds = %for.end, %if.then
  %13 = load i8, i8* %retval, align 1, !dbg !3674
  ret i8 %13, !dbg !3674
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaintSurface_updateType(%struct.DynamicPaintSurface* %surface) #0 !dbg !3675 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3678, metadata !DIExpression()), !dbg !3679
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3680
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 10, !dbg !3682
  %1 = load i16, i16* %format, align 4, !dbg !3682
  %conv = sext i16 %1 to i32, !dbg !3680
  %cmp = icmp eq i32 %conv, 2, !dbg !3683
  br i1 %cmp, label %if.then, label %if.else, !dbg !3684

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3685
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 48, !dbg !3687
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !3685
  store i8 0, i8* %arrayidx, align 8, !dbg !3688
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3689
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 49, !dbg !3690
  %arrayidx2 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !3689
  store i8 0, i8* %arrayidx2, align 8, !dbg !3691
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3692
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 18, !dbg !3693
  %5 = load i32, i32* %flags, align 4, !dbg !3694
  %or = or i32 %5, 2, !dbg !3694
  store i32 %or, i32* %flags, align 4, !dbg !3694
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3695
  %depth_clamp = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 31, !dbg !3696
  store float 1.000000e+00, float* %depth_clamp, align 4, !dbg !3697
  br label %if.end, !dbg !3698

if.else:                                          ; preds = %entry
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3699
  %output_name3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 48, !dbg !3701
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %output_name3, i64 0, i64 0, !dbg !3699
  %call = call i8* @strcpy(i8* %arraydecay, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7, !dbg !3702
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3703
  %output_name24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 49, !dbg !3704
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name24, i64 0, i64 0, !dbg !3703
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3705
  %output_name6 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 48, !dbg !3706
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name6, i64 0, i64 0, !dbg !3705
  %call8 = call i8* @BLI_strncpy(i8* %arraydecay5, i8* %arraydecay7, i64 64), !dbg !3707
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3708
  %flags9 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 18, !dbg !3709
  %11 = load i32, i32* %flags9, align 4, !dbg !3710
  %and = and i32 %11, -3, !dbg !3710
  store i32 %and, i32* %flags9, align 4, !dbg !3710
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3711
  %depth_clamp10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %12, i32 0, i32 31, !dbg !3712
  store float 0.000000e+00, float* %depth_clamp10, align 4, !dbg !3713
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3714
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 11, !dbg !3716
  %14 = load i16, i16* %type, align 2, !dbg !3716
  %conv11 = sext i16 %14 to i32, !dbg !3714
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !3717
  br i1 %cmp12, label %if.then14, label %if.else23, !dbg !3718

if.then14:                                        ; preds = %if.end
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3719
  %output_name15 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %15, i32 0, i32 48, !dbg !3721
  %arraydecay16 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name15, i64 0, i64 0, !dbg !3719
  %call17 = call i8* @strcat(i8* %arraydecay16, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !3722
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3723
  %output_name218 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 49, !dbg !3724
  %arraydecay19 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name218, i64 0, i64 0, !dbg !3723
  %call20 = call i8* @strcat(i8* %arraydecay19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !3725
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3726
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3727
  %output_name221 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 49, !dbg !3728
  %arraydecay22 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name221, i64 0, i64 0, !dbg !3727
  call void @surface_setUniqueOutputName(%struct.DynamicPaintSurface* %17, i8* %arraydecay22, i32 1), !dbg !3729
  br label %if.end53, !dbg !3730

if.else23:                                        ; preds = %if.end
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3731
  %type24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %19, i32 0, i32 11, !dbg !3733
  %20 = load i16, i16* %type24, align 2, !dbg !3733
  %conv25 = sext i16 %20 to i32, !dbg !3731
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !3734
  br i1 %cmp26, label %if.then28, label %if.else32, !dbg !3735

if.then28:                                        ; preds = %if.else23
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3736
  %output_name29 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 48, !dbg !3738
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name29, i64 0, i64 0, !dbg !3736
  %call31 = call i8* @strcat(i8* %arraydecay30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !3739
  br label %if.end52, !dbg !3740

if.else32:                                        ; preds = %if.else23
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3741
  %type33 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %22, i32 0, i32 11, !dbg !3743
  %23 = load i16, i16* %type33, align 2, !dbg !3743
  %conv34 = sext i16 %23 to i32, !dbg !3741
  %cmp35 = icmp eq i32 %conv34, 2, !dbg !3744
  br i1 %cmp35, label %if.then37, label %if.else41, !dbg !3745

if.then37:                                        ; preds = %if.else32
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3746
  %output_name38 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %24, i32 0, i32 48, !dbg !3748
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name38, i64 0, i64 0, !dbg !3746
  %call40 = call i8* @strcat(i8* %arraydecay39, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !3749
  br label %if.end51, !dbg !3750

if.else41:                                        ; preds = %if.else32
  %25 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3751
  %type42 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %25, i32 0, i32 11, !dbg !3753
  %26 = load i16, i16* %type42, align 2, !dbg !3753
  %conv43 = sext i16 %26 to i32, !dbg !3751
  %cmp44 = icmp eq i32 %conv43, 3, !dbg !3754
  br i1 %cmp44, label %if.then46, label %if.end50, !dbg !3755

if.then46:                                        ; preds = %if.else41
  %27 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3756
  %output_name47 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %27, i32 0, i32 48, !dbg !3758
  %arraydecay48 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name47, i64 0, i64 0, !dbg !3756
  %call49 = call i8* @strcat(i8* %arraydecay48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !3759
  br label %if.end50, !dbg !3760

if.end50:                                         ; preds = %if.then46, %if.else41
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.then37
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then28
  br label %if.end53

if.end53:                                         ; preds = %if.end52, %if.then14
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3761
  %29 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3762
  %output_name54 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %29, i32 0, i32 48, !dbg !3763
  %arraydecay55 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name54, i64 0, i64 0, !dbg !3762
  call void @surface_setUniqueOutputName(%struct.DynamicPaintSurface* %28, i8* %arraydecay55, i32 0), !dbg !3764
  %30 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3765
  %call56 = call zeroext i8 @dynamicPaint_surfaceHasColorPreview(%struct.DynamicPaintSurface* %30), !dbg !3767
  %tobool = icmp ne i8 %call56, 0, !dbg !3767
  br i1 %tobool, label %if.then57, label %if.else58, !dbg !3768

if.then57:                                        ; preds = %if.end53
  %31 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3769
  call void @dynamicPaint_setPreview(%struct.DynamicPaintSurface* %31), !dbg !3770
  br label %if.end59, !dbg !3770

if.else58:                                        ; preds = %if.end53
  %32 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3771
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %32, i32 0, i32 2, !dbg !3772
  %33 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !3772
  call void @dynamicPaint_resetPreview(%struct.DynamicPaintCanvasSettings* %33), !dbg !3773
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %if.then57
  ret void, !dbg !3774
}

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #3

; Function Attrs: nounwind
declare dso_local i8* @strcat(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @surface_setUniqueOutputName(%struct.DynamicPaintSurface* %surface, i8* %basename, i32 %output) #0 !dbg !3775 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %basename.addr = alloca i8*, align 8
  %output.addr = alloca i32, align 4
  %name = alloca [64 x i8], align 16
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i8* %basename, i8** %basename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %basename.addr, metadata !3780, metadata !DIExpression()), !dbg !3781
  store i32 %output, i32* %output.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %output.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata [64 x i8]* %name, metadata !3784, metadata !DIExpression()), !dbg !3785
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3786
  %0 = load i8*, i8** %basename.addr, align 8, !dbg !3787
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %0, i64 64), !dbg !3788
  %1 = load i32, i32* %output.addr, align 4, !dbg !3789
  %tobool = icmp ne i32 %1, 0, !dbg !3789
  br i1 %tobool, label %if.end, label %if.then, !dbg !3791

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3792
  %3 = bitcast %struct.DynamicPaintSurface* %2 to i8*, !dbg !3792
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3793
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3794
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 48, !dbg !3795
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !3794
  %call3 = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @surface_duplicateOutputExists, i8* %3, i8* %arraydecay1, i8 zeroext 46, i8* %arraydecay2, i32 64), !dbg !3796
  br label %if.end, !dbg !3796

if.end:                                           ; preds = %if.then, %entry
  %5 = load i32, i32* %output.addr, align 4, !dbg !3797
  %tobool4 = icmp ne i32 %5, 0, !dbg !3797
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !3799

if.then5:                                         ; preds = %if.end
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3800
  %7 = bitcast %struct.DynamicPaintSurface* %6 to i8*, !dbg !3800
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !3801
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3802
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 49, !dbg !3803
  %arraydecay7 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !3802
  %call8 = call zeroext i8 @BLI_uniquename_cb(i8 (i8*, i8*)* @surface_duplicateOutputExists, i8* %7, i8* %arraydecay6, i8 zeroext 46, i8* %arraydecay7, i32 64), !dbg !3804
  br label %if.end9, !dbg !3804

if.end9:                                          ; preds = %if.then5, %if.end
  ret void, !dbg !3805
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_setPreview(%struct.DynamicPaintSurface* %t_surface) #0 !dbg !3806 {
entry:
  %t_surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %t_surface, %struct.DynamicPaintSurface** %t_surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %t_surface.addr, metadata !3809, metadata !DIExpression()), !dbg !3810
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !3811, metadata !DIExpression()), !dbg !3812
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface.addr, align 8, !dbg !3813
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 2, !dbg !3814
  %1 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !3814
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %1, i32 0, i32 2, !dbg !3815
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !3816
  %2 = load i8*, i8** %first, align 8, !dbg !3816
  %3 = bitcast i8* %2 to %struct.DynamicPaintSurface*, !dbg !3813
  store %struct.DynamicPaintSurface* %3, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3812
  br label %for.cond, !dbg !3817

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3818
  %tobool = icmp ne %struct.DynamicPaintSurface* %4, null, !dbg !3821
  br i1 %tobool, label %for.body, label %for.end, !dbg !3821

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3822
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface.addr, align 8, !dbg !3825
  %cmp = icmp eq %struct.DynamicPaintSurface* %5, %6, !dbg !3826
  br i1 %cmp, label %if.then, label %if.else, !dbg !3827

if.then:                                          ; preds = %for.body
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3828
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 18, !dbg !3829
  %8 = load i32, i32* %flags, align 4, !dbg !3830
  %or = or i32 %8, 64, !dbg !3830
  store i32 %or, i32* %flags, align 4, !dbg !3830
  br label %if.end, !dbg !3828

if.else:                                          ; preds = %for.body
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3831
  %flags1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 18, !dbg !3832
  %10 = load i32, i32* %flags1, align 4, !dbg !3833
  %and = and i32 %10, -65, !dbg !3833
  store i32 %and, i32* %flags1, align 4, !dbg !3833
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !3834

for.inc:                                          ; preds = %if.end
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3835
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 0, !dbg !3836
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !3836
  store %struct.DynamicPaintSurface* %12, %struct.DynamicPaintSurface** %surface, align 8, !dbg !3837
  br label %for.cond, !dbg !3838, !llvm.loop !3839

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3841
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_freeBrush(%struct.DynamicPaintModifierData* %pmd) #0 !dbg !3842 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !3845, metadata !DIExpression()), !dbg !3846
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3847
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %0, i32 0, i32 2, !dbg !3849
  %1 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !3849
  %tobool = icmp ne %struct.DynamicPaintBrushSettings* %1, null, !dbg !3847
  br i1 %tobool, label %if.then, label %if.end28, !dbg !3850

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3851
  %brush1 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %2, i32 0, i32 2, !dbg !3854
  %3 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush1, align 8, !dbg !3854
  %dm = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %3, i32 0, i32 1, !dbg !3855
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !3855
  %tobool2 = icmp ne %struct.DerivedMesh* %4, null, !dbg !3851
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3856

if.then3:                                         ; preds = %if.then
  %5 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3857
  %brush4 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %5, i32 0, i32 2, !dbg !3858
  %6 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush4, align 8, !dbg !3858
  %dm5 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %6, i32 0, i32 1, !dbg !3859
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm5, align 8, !dbg !3859
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 95, !dbg !3860
  %8 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !3860
  %9 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3861
  %brush6 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %9, i32 0, i32 2, !dbg !3862
  %10 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush6, align 8, !dbg !3862
  %dm7 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %10, i32 0, i32 1, !dbg !3863
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm7, align 8, !dbg !3863
  call void %8(%struct.DerivedMesh* %11), !dbg !3857
  br label %if.end, !dbg !3857

if.end:                                           ; preds = %if.then3, %if.then
  %12 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3864
  %brush8 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %12, i32 0, i32 2, !dbg !3865
  %13 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush8, align 8, !dbg !3865
  %dm9 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %13, i32 0, i32 1, !dbg !3866
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm9, align 8, !dbg !3867
  %14 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3868
  %brush10 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %14, i32 0, i32 2, !dbg !3870
  %15 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush10, align 8, !dbg !3870
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %15, i32 0, i32 14, !dbg !3871
  %16 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp, align 8, !dbg !3871
  %tobool11 = icmp ne %struct.ColorBand* %16, null, !dbg !3868
  br i1 %tobool11, label %if.then12, label %if.end15, !dbg !3872

if.then12:                                        ; preds = %if.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3873
  %18 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3874
  %brush13 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %18, i32 0, i32 2, !dbg !3875
  %19 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush13, align 8, !dbg !3875
  %paint_ramp14 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %19, i32 0, i32 14, !dbg !3876
  %20 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp14, align 8, !dbg !3876
  %21 = bitcast %struct.ColorBand* %20 to i8*, !dbg !3874
  call void %17(i8* %21), !dbg !3873
  br label %if.end15, !dbg !3873

if.end15:                                         ; preds = %if.then12, %if.end
  %22 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3877
  %brush16 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %22, i32 0, i32 2, !dbg !3878
  %23 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush16, align 8, !dbg !3878
  %paint_ramp17 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %23, i32 0, i32 14, !dbg !3879
  store %struct.ColorBand* null, %struct.ColorBand** %paint_ramp17, align 8, !dbg !3880
  %24 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3881
  %brush18 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %24, i32 0, i32 2, !dbg !3883
  %25 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush18, align 8, !dbg !3883
  %vel_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %25, i32 0, i32 15, !dbg !3884
  %26 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp, align 8, !dbg !3884
  %tobool19 = icmp ne %struct.ColorBand* %26, null, !dbg !3881
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !3885

if.then20:                                        ; preds = %if.end15
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3886
  %28 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3887
  %brush21 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %28, i32 0, i32 2, !dbg !3888
  %29 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush21, align 8, !dbg !3888
  %vel_ramp22 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %29, i32 0, i32 15, !dbg !3889
  %30 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp22, align 8, !dbg !3889
  %31 = bitcast %struct.ColorBand* %30 to i8*, !dbg !3887
  call void %27(i8* %31), !dbg !3886
  br label %if.end23, !dbg !3886

if.end23:                                         ; preds = %if.then20, %if.end15
  %32 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3890
  %brush24 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %32, i32 0, i32 2, !dbg !3891
  %33 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush24, align 8, !dbg !3891
  %vel_ramp25 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %33, i32 0, i32 15, !dbg !3892
  store %struct.ColorBand* null, %struct.ColorBand** %vel_ramp25, align 8, !dbg !3893
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3894
  %35 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3895
  %brush26 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %35, i32 0, i32 2, !dbg !3896
  %36 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush26, align 8, !dbg !3896
  %37 = bitcast %struct.DynamicPaintBrushSettings* %36 to i8*, !dbg !3895
  call void %34(i8* %37), !dbg !3894
  %38 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !3897
  %brush27 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %38, i32 0, i32 2, !dbg !3898
  store %struct.DynamicPaintBrushSettings* null, %struct.DynamicPaintBrushSettings** %brush27, align 8, !dbg !3899
  br label %if.end28, !dbg !3900

if.end28:                                         ; preds = %if.end23, %entry
  ret void, !dbg !3901
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_freeSurfaceData(%struct.DynamicPaintSurface* %surface) #0 !dbg !3902 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %data = alloca %struct.PaintSurfaceData*, align 8
  %format_data6 = alloca %struct.ImgSeqFormatData*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !3903, metadata !DIExpression()), !dbg !3904
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %data, metadata !3905, metadata !DIExpression()), !dbg !3908
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3909
  %data1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !3910
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data1, align 8, !dbg !3910
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %data, align 8, !dbg !3908
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3911
  %tobool = icmp ne %struct.PaintSurfaceData* %2, null, !dbg !3911
  br i1 %tobool, label %if.end, label %if.then, !dbg !3913

if.then:                                          ; preds = %entry
  br label %return, !dbg !3914

if.end:                                           ; preds = %entry
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3915
  %format_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %3, i32 0, i32 0, !dbg !3917
  %4 = load i8*, i8** %format_data, align 8, !dbg !3917
  %tobool2 = icmp ne i8* %4, null, !dbg !3915
  br i1 %tobool2, label %if.then3, label %if.end18, !dbg !3918

if.then3:                                         ; preds = %if.end
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3919
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 10, !dbg !3922
  %6 = load i16, i16* %format, align 4, !dbg !3922
  %conv = sext i16 %6 to i32, !dbg !3919
  %cmp = icmp eq i32 %conv, 2, !dbg !3923
  br i1 %cmp, label %if.then5, label %if.end16, !dbg !3924

if.then5:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %format_data6, metadata !3925, metadata !DIExpression()), !dbg !3927
  %7 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3928
  %format_data7 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %7, i32 0, i32 0, !dbg !3929
  %8 = load i8*, i8** %format_data7, align 8, !dbg !3929
  %9 = bitcast i8* %8 to %struct.ImgSeqFormatData*, !dbg !3930
  store %struct.ImgSeqFormatData* %9, %struct.ImgSeqFormatData** %format_data6, align 8, !dbg !3927
  %10 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %format_data6, align 8, !dbg !3931
  %uv_p = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %10, i32 0, i32 0, !dbg !3933
  %11 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p, align 8, !dbg !3933
  %tobool8 = icmp ne %struct.PaintUVPoint* %11, null, !dbg !3931
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !3934

if.then9:                                         ; preds = %if.then5
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3935
  %13 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %format_data6, align 8, !dbg !3936
  %uv_p10 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %13, i32 0, i32 0, !dbg !3937
  %14 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p10, align 8, !dbg !3937
  %15 = bitcast %struct.PaintUVPoint* %14 to i8*, !dbg !3936
  call void %12(i8* %15), !dbg !3935
  br label %if.end11, !dbg !3935

if.end11:                                         ; preds = %if.then9, %if.then5
  %16 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %format_data6, align 8, !dbg !3938
  %barycentricWeights = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %16, i32 0, i32 1, !dbg !3940
  %17 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights, align 8, !dbg !3940
  %tobool12 = icmp ne %struct.Vec3f* %17, null, !dbg !3938
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !3941

if.then13:                                        ; preds = %if.end11
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3942
  %19 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %format_data6, align 8, !dbg !3943
  %barycentricWeights14 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %19, i32 0, i32 1, !dbg !3944
  %20 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights14, align 8, !dbg !3944
  %21 = bitcast %struct.Vec3f* %20 to i8*, !dbg !3943
  call void %18(i8* %21), !dbg !3942
  br label %if.end15, !dbg !3942

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %if.end16, !dbg !3945

if.end16:                                         ; preds = %if.end15, %if.then3
  %22 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3946
  %23 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3947
  %format_data17 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %23, i32 0, i32 0, !dbg !3948
  %24 = load i8*, i8** %format_data17, align 8, !dbg !3948
  call void %22(i8* %24), !dbg !3946
  br label %if.end18, !dbg !3949

if.end18:                                         ; preds = %if.end16, %if.end
  %25 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3950
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %25, i32 0, i32 1, !dbg !3952
  %26 = load i8*, i8** %type_data, align 8, !dbg !3952
  %tobool19 = icmp ne i8* %26, null, !dbg !3950
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !3953

if.then20:                                        ; preds = %if.end18
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3954
  %28 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3955
  %type_data21 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %28, i32 0, i32 1, !dbg !3956
  %29 = load i8*, i8** %type_data21, align 8, !dbg !3956
  call void %27(i8* %29), !dbg !3954
  br label %if.end22, !dbg !3954

if.end22:                                         ; preds = %if.then20, %if.end18
  %30 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3957
  call void @dynamicPaint_freeAdjData(%struct.PaintSurfaceData* %30), !dbg !3958
  %31 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !3959
  call void @free_bakeData(%struct.PaintSurfaceData* %31), !dbg !3960
  %32 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3961
  %33 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3962
  %data23 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %33, i32 0, i32 3, !dbg !3963
  %34 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data23, align 8, !dbg !3963
  %35 = bitcast %struct.PaintSurfaceData* %34 to i8*, !dbg !3962
  call void %32(i8* %35), !dbg !3961
  %36 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !3964
  %data24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %36, i32 0, i32 3, !dbg !3965
  store %struct.PaintSurfaceData* null, %struct.PaintSurfaceData** %data24, align 8, !dbg !3966
  br label %return, !dbg !3967

return:                                           ; preds = %if.end22, %if.then
  ret void, !dbg !3967
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_freeAdjData(%struct.PaintSurfaceData* %data) #0 !dbg !3968 {
entry:
  %data.addr = alloca %struct.PaintSurfaceData*, align 8
  store %struct.PaintSurfaceData* %data, %struct.PaintSurfaceData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %data.addr, metadata !3971, metadata !DIExpression()), !dbg !3972
  %0 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3973
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %0, i32 0, i32 2, !dbg !3975
  %1 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !3975
  %tobool = icmp ne %struct.PaintAdjData* %1, null, !dbg !3973
  br i1 %tobool, label %if.then, label %if.end26, !dbg !3976

if.then:                                          ; preds = %entry
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3977
  %adj_data1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 2, !dbg !3980
  %3 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data1, align 8, !dbg !3980
  %n_index = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %3, i32 0, i32 1, !dbg !3981
  %4 = load i32*, i32** %n_index, align 8, !dbg !3981
  %tobool2 = icmp ne i32* %4, null, !dbg !3977
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3982

if.then3:                                         ; preds = %if.then
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3983
  %6 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3984
  %adj_data4 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %6, i32 0, i32 2, !dbg !3985
  %7 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data4, align 8, !dbg !3985
  %n_index5 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %7, i32 0, i32 1, !dbg !3986
  %8 = load i32*, i32** %n_index5, align 8, !dbg !3986
  %9 = bitcast i32* %8 to i8*, !dbg !3984
  call void %5(i8* %9), !dbg !3983
  br label %if.end, !dbg !3983

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3987
  %adj_data6 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %10, i32 0, i32 2, !dbg !3989
  %11 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data6, align 8, !dbg !3989
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %11, i32 0, i32 2, !dbg !3990
  %12 = load i32*, i32** %n_num, align 8, !dbg !3990
  %tobool7 = icmp ne i32* %12, null, !dbg !3987
  br i1 %tobool7, label %if.then8, label %if.end11, !dbg !3991

if.then8:                                         ; preds = %if.end
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3992
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3993
  %adj_data9 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 2, !dbg !3994
  %15 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data9, align 8, !dbg !3994
  %n_num10 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %15, i32 0, i32 2, !dbg !3995
  %16 = load i32*, i32** %n_num10, align 8, !dbg !3995
  %17 = bitcast i32* %16 to i8*, !dbg !3993
  call void %13(i8* %17), !dbg !3992
  br label %if.end11, !dbg !3992

if.end11:                                         ; preds = %if.then8, %if.end
  %18 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !3996
  %adj_data12 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %18, i32 0, i32 2, !dbg !3998
  %19 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data12, align 8, !dbg !3998
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %19, i32 0, i32 0, !dbg !3999
  %20 = load i32*, i32** %n_target, align 8, !dbg !3999
  %tobool13 = icmp ne i32* %20, null, !dbg !3996
  br i1 %tobool13, label %if.then14, label %if.end17, !dbg !4000

if.then14:                                        ; preds = %if.end11
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4001
  %22 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4002
  %adj_data15 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %22, i32 0, i32 2, !dbg !4003
  %23 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data15, align 8, !dbg !4003
  %n_target16 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %23, i32 0, i32 0, !dbg !4004
  %24 = load i32*, i32** %n_target16, align 8, !dbg !4004
  %25 = bitcast i32* %24 to i8*, !dbg !4002
  call void %21(i8* %25), !dbg !4001
  br label %if.end17, !dbg !4001

if.end17:                                         ; preds = %if.then14, %if.end11
  %26 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4005
  %adj_data18 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %26, i32 0, i32 2, !dbg !4007
  %27 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data18, align 8, !dbg !4007
  %flags = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %27, i32 0, i32 3, !dbg !4008
  %28 = load i32*, i32** %flags, align 8, !dbg !4008
  %tobool19 = icmp ne i32* %28, null, !dbg !4005
  br i1 %tobool19, label %if.then20, label %if.end23, !dbg !4009

if.then20:                                        ; preds = %if.end17
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4010
  %30 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4011
  %adj_data21 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %30, i32 0, i32 2, !dbg !4012
  %31 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data21, align 8, !dbg !4012
  %flags22 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %31, i32 0, i32 3, !dbg !4013
  %32 = load i32*, i32** %flags22, align 8, !dbg !4013
  %33 = bitcast i32* %32 to i8*, !dbg !4011
  call void %29(i8* %33), !dbg !4010
  br label %if.end23, !dbg !4010

if.end23:                                         ; preds = %if.then20, %if.end17
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4014
  %35 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4015
  %adj_data24 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %35, i32 0, i32 2, !dbg !4016
  %36 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data24, align 8, !dbg !4016
  %37 = bitcast %struct.PaintAdjData* %36 to i8*, !dbg !4015
  call void %34(i8* %37), !dbg !4014
  %38 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4017
  %adj_data25 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %38, i32 0, i32 2, !dbg !4018
  store %struct.PaintAdjData* null, %struct.PaintAdjData** %adj_data25, align 8, !dbg !4019
  br label %if.end26, !dbg !4020

if.end26:                                         ; preds = %if.end23, %entry
  ret void, !dbg !4021
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_bakeData(%struct.PaintSurfaceData* %data) #0 !dbg !4022 {
entry:
  %data.addr = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  store %struct.PaintSurfaceData* %data, %struct.PaintSurfaceData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %data.addr, metadata !4023, metadata !DIExpression()), !dbg !4024
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !4025, metadata !DIExpression()), !dbg !4028
  %0 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4029
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %0, i32 0, i32 3, !dbg !4030
  %1 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !4030
  store %struct.PaintBakeData* %1, %struct.PaintBakeData** %bData, align 8, !dbg !4028
  %2 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4031
  %tobool = icmp ne %struct.PaintBakeData* %2, null, !dbg !4031
  br i1 %tobool, label %if.then, label %if.end38, !dbg !4033

if.then:                                          ; preds = %entry
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4034
  %bNormal = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %3, i32 0, i32 0, !dbg !4037
  %4 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal, align 8, !dbg !4037
  %tobool2 = icmp ne %struct.PaintBakeNormal* %4, null, !dbg !4034
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !4038

if.then3:                                         ; preds = %if.then
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4039
  %6 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4040
  %bNormal4 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %6, i32 0, i32 0, !dbg !4041
  %7 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal4, align 8, !dbg !4041
  %8 = bitcast %struct.PaintBakeNormal* %7 to i8*, !dbg !4040
  call void %5(i8* %8), !dbg !4039
  br label %if.end, !dbg !4039

if.end:                                           ; preds = %if.then3, %if.then
  %9 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4042
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %9, i32 0, i32 1, !dbg !4044
  %10 = load i32*, i32** %s_pos, align 8, !dbg !4044
  %tobool5 = icmp ne i32* %10, null, !dbg !4042
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4045

if.then6:                                         ; preds = %if.end
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4046
  %12 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4047
  %s_pos7 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %12, i32 0, i32 1, !dbg !4048
  %13 = load i32*, i32** %s_pos7, align 8, !dbg !4048
  %14 = bitcast i32* %13 to i8*, !dbg !4047
  call void %11(i8* %14), !dbg !4046
  br label %if.end8, !dbg !4046

if.end8:                                          ; preds = %if.then6, %if.end
  %15 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4049
  %s_num = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %15, i32 0, i32 2, !dbg !4051
  %16 = load i32*, i32** %s_num, align 8, !dbg !4051
  %tobool9 = icmp ne i32* %16, null, !dbg !4049
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !4052

if.then10:                                        ; preds = %if.end8
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4053
  %18 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4054
  %s_num11 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %18, i32 0, i32 2, !dbg !4055
  %19 = load i32*, i32** %s_num11, align 8, !dbg !4055
  %20 = bitcast i32* %19 to i8*, !dbg !4054
  call void %17(i8* %20), !dbg !4053
  br label %if.end12, !dbg !4053

if.end12:                                         ; preds = %if.then10, %if.end8
  %21 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4056
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %21, i32 0, i32 3, !dbg !4058
  %22 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !4058
  %tobool13 = icmp ne %struct.Vec3f* %22, null, !dbg !4056
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !4059

if.then14:                                        ; preds = %if.end12
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4060
  %24 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4061
  %realCoord15 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %24, i32 0, i32 3, !dbg !4062
  %25 = load %struct.Vec3f*, %struct.Vec3f** %realCoord15, align 8, !dbg !4062
  %26 = bitcast %struct.Vec3f* %25 to i8*, !dbg !4061
  call void %23(i8* %26), !dbg !4060
  br label %if.end16, !dbg !4060

if.end16:                                         ; preds = %if.then14, %if.end12
  %27 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4063
  %bNeighs = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %27, i32 0, i32 5, !dbg !4065
  %28 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !4065
  %tobool17 = icmp ne %struct.BakeAdjPoint* %28, null, !dbg !4063
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !4066

if.then18:                                        ; preds = %if.end16
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4067
  %30 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4068
  %bNeighs19 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %30, i32 0, i32 5, !dbg !4069
  %31 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs19, align 8, !dbg !4069
  %32 = bitcast %struct.BakeAdjPoint* %31 to i8*, !dbg !4068
  call void %29(i8* %32), !dbg !4067
  br label %if.end20, !dbg !4067

if.end20:                                         ; preds = %if.then18, %if.end16
  %33 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4070
  %grid = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %33, i32 0, i32 7, !dbg !4072
  %34 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !4072
  %tobool21 = icmp ne %struct.VolumeGrid* %34, null, !dbg !4070
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4073

if.then22:                                        ; preds = %if.end20
  %35 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4074
  call void @freeGrid(%struct.PaintSurfaceData* %35), !dbg !4075
  br label %if.end23, !dbg !4075

if.end23:                                         ; preds = %if.then22, %if.end20
  %36 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4076
  %prev_verts = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %36, i32 0, i32 11, !dbg !4078
  %37 = load %struct.MVert*, %struct.MVert** %prev_verts, align 8, !dbg !4078
  %tobool24 = icmp ne %struct.MVert* %37, null, !dbg !4076
  br i1 %tobool24, label %if.then25, label %if.end27, !dbg !4079

if.then25:                                        ; preds = %if.end23
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4080
  %39 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4081
  %prev_verts26 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %39, i32 0, i32 11, !dbg !4082
  %40 = load %struct.MVert*, %struct.MVert** %prev_verts26, align 8, !dbg !4082
  %41 = bitcast %struct.MVert* %40 to i8*, !dbg !4081
  call void %38(i8* %41), !dbg !4080
  br label %if.end27, !dbg !4080

if.end27:                                         ; preds = %if.then25, %if.end23
  %42 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4083
  %velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %42, i32 0, i32 8, !dbg !4085
  %43 = load %struct.Vec3f*, %struct.Vec3f** %velocity, align 8, !dbg !4085
  %tobool28 = icmp ne %struct.Vec3f* %43, null, !dbg !4083
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !4086

if.then29:                                        ; preds = %if.end27
  %44 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4087
  %45 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4088
  %velocity30 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %45, i32 0, i32 8, !dbg !4089
  %46 = load %struct.Vec3f*, %struct.Vec3f** %velocity30, align 8, !dbg !4089
  %47 = bitcast %struct.Vec3f* %46 to i8*, !dbg !4088
  call void %44(i8* %47), !dbg !4087
  br label %if.end31, !dbg !4087

if.end31:                                         ; preds = %if.then29, %if.end27
  %48 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4090
  %prev_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %48, i32 0, i32 9, !dbg !4092
  %49 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity, align 8, !dbg !4092
  %tobool32 = icmp ne %struct.Vec3f* %49, null, !dbg !4090
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !4093

if.then33:                                        ; preds = %if.end31
  %50 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4094
  %51 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !4095
  %prev_velocity34 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %51, i32 0, i32 9, !dbg !4096
  %52 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity34, align 8, !dbg !4096
  %53 = bitcast %struct.Vec3f* %52 to i8*, !dbg !4095
  call void %50(i8* %53), !dbg !4094
  br label %if.end35, !dbg !4094

if.end35:                                         ; preds = %if.then33, %if.end31
  %54 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4097
  %55 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4098
  %bData36 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %55, i32 0, i32 3, !dbg !4099
  %56 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData36, align 8, !dbg !4099
  %57 = bitcast %struct.PaintBakeData* %56 to i8*, !dbg !4098
  call void %54(i8* %57), !dbg !4097
  %58 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !4100
  %bData37 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %58, i32 0, i32 3, !dbg !4101
  store %struct.PaintBakeData* null, %struct.PaintBakeData** %bData37, align 8, !dbg !4102
  br label %if.end38, !dbg !4103

if.end38:                                         ; preds = %if.end35, %entry
  ret void, !dbg !4104
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_freeSurface(%struct.DynamicPaintSurface* %surface) #0 !dbg !4105 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !4106, metadata !DIExpression()), !dbg !4107
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4108
  %ptcaches = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 7, !dbg !4109
  call void @BKE_ptcache_free_list(%struct.ListBase* %ptcaches), !dbg !4110
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4111
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %1, i32 0, i32 6, !dbg !4112
  store %struct.PointCache* null, %struct.PointCache** %pointcache, align 8, !dbg !4113
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4114
  %effector_weights = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 5, !dbg !4116
  %3 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !4116
  %tobool = icmp ne %struct.EffectorWeights* %3, null, !dbg !4114
  br i1 %tobool, label %if.then, label %if.end, !dbg !4117

if.then:                                          ; preds = %entry
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4118
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4119
  %effector_weights1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 5, !dbg !4120
  %6 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights1, align 8, !dbg !4120
  %7 = bitcast %struct.EffectorWeights* %6 to i8*, !dbg !4119
  call void %4(i8* %7), !dbg !4118
  br label %if.end, !dbg !4118

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4121
  %effector_weights2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 5, !dbg !4122
  store %struct.EffectorWeights* null, %struct.EffectorWeights** %effector_weights2, align 8, !dbg !4123
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4124
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 2, !dbg !4125
  %10 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4125
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %10, i32 0, i32 2, !dbg !4126
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4127
  %12 = bitcast %struct.DynamicPaintSurface* %11 to i8*, !dbg !4127
  call void @BLI_remlink(%struct.ListBase* %surfaces, i8* %12), !dbg !4128
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4129
  call void @dynamicPaint_freeSurfaceData(%struct.DynamicPaintSurface* %13), !dbg !4130
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4131
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !4132
  %16 = bitcast %struct.DynamicPaintSurface* %15 to i8*, !dbg !4132
  call void %14(i8* %16), !dbg !4131
  ret void, !dbg !4133
}

declare dso_local void @BKE_ptcache_free_list(%struct.ListBase*) #2

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_freeCanvas(%struct.DynamicPaintModifierData* %pmd) #0 !dbg !4134 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %next_surface = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !4137, metadata !DIExpression()), !dbg !4138
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4139
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %0, i32 0, i32 1, !dbg !4141
  %1 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4141
  %tobool = icmp ne %struct.DynamicPaintCanvasSettings* %1, null, !dbg !4139
  br i1 %tobool, label %if.then, label %if.end14, !dbg !4142

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4143, metadata !DIExpression()), !dbg !4145
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4146
  %canvas1 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %2, i32 0, i32 1, !dbg !4147
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !4147
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %3, i32 0, i32 2, !dbg !4148
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !4149
  %4 = load i8*, i8** %first, align 8, !dbg !4149
  %5 = bitcast i8* %4 to %struct.DynamicPaintSurface*, !dbg !4146
  store %struct.DynamicPaintSurface* %5, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4145
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %next_surface, metadata !4150, metadata !DIExpression()), !dbg !4151
  store %struct.DynamicPaintSurface* null, %struct.DynamicPaintSurface** %next_surface, align 8, !dbg !4151
  br label %while.cond, !dbg !4152

while.cond:                                       ; preds = %while.body, %if.then
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4153
  %tobool2 = icmp ne %struct.DynamicPaintSurface* %6, null, !dbg !4152
  br i1 %tobool2, label %while.body, label %while.end, !dbg !4152

while.body:                                       ; preds = %while.cond
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4154
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 0, !dbg !4156
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !4156
  store %struct.DynamicPaintSurface* %8, %struct.DynamicPaintSurface** %next_surface, align 8, !dbg !4157
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4158
  call void @dynamicPaint_freeSurface(%struct.DynamicPaintSurface* %9), !dbg !4159
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next_surface, align 8, !dbg !4160
  store %struct.DynamicPaintSurface* %10, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4161
  br label %while.cond, !dbg !4152, !llvm.loop !4162

while.end:                                        ; preds = %while.cond
  %11 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4164
  %canvas3 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %11, i32 0, i32 1, !dbg !4166
  %12 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas3, align 8, !dbg !4166
  %dm = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %12, i32 0, i32 1, !dbg !4167
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !4167
  %tobool4 = icmp ne %struct.DerivedMesh* %13, null, !dbg !4164
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !4168

if.then5:                                         ; preds = %while.end
  %14 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4169
  %canvas6 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %14, i32 0, i32 1, !dbg !4170
  %15 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas6, align 8, !dbg !4170
  %dm7 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %15, i32 0, i32 1, !dbg !4171
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm7, align 8, !dbg !4171
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 95, !dbg !4172
  %17 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !4172
  %18 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4173
  %canvas8 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %18, i32 0, i32 1, !dbg !4174
  %19 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas8, align 8, !dbg !4174
  %dm9 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %19, i32 0, i32 1, !dbg !4175
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm9, align 8, !dbg !4175
  call void %17(%struct.DerivedMesh* %20), !dbg !4169
  br label %if.end, !dbg !4169

if.end:                                           ; preds = %if.then5, %while.end
  %21 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4176
  %canvas10 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %21, i32 0, i32 1, !dbg !4177
  %22 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas10, align 8, !dbg !4177
  %dm11 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %22, i32 0, i32 1, !dbg !4178
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm11, align 8, !dbg !4179
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4180
  %24 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4181
  %canvas12 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %24, i32 0, i32 1, !dbg !4182
  %25 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas12, align 8, !dbg !4182
  %26 = bitcast %struct.DynamicPaintCanvasSettings* %25 to i8*, !dbg !4181
  call void %23(i8* %26), !dbg !4180
  %27 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4183
  %canvas13 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %27, i32 0, i32 1, !dbg !4184
  store %struct.DynamicPaintCanvasSettings* null, %struct.DynamicPaintCanvasSettings** %canvas13, align 8, !dbg !4185
  br label %if.end14, !dbg !4186

if.end14:                                         ; preds = %if.end, %entry
  ret void, !dbg !4187
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_Modifier_free(%struct.DynamicPaintModifierData* %pmd) #0 !dbg !4188 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !4189, metadata !DIExpression()), !dbg !4190
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4191
  %tobool = icmp ne %struct.DynamicPaintModifierData* %0, null, !dbg !4191
  br i1 %tobool, label %if.then, label %if.end, !dbg !4193

if.then:                                          ; preds = %entry
  %1 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4194
  call void @dynamicPaint_freeCanvas(%struct.DynamicPaintModifierData* %1), !dbg !4196
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4197
  call void @dynamicPaint_freeBrush(%struct.DynamicPaintModifierData* %2), !dbg !4198
  br label %if.end, !dbg !4199

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4200
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DynamicPaintSurface* @dynamicPaint_createNewSurface(%struct.DynamicPaintCanvasSettings* %canvas, %struct.Scene* %scene) #0 !dbg !4201 {
entry:
  %retval = alloca %struct.DynamicPaintSurface*, align 8
  %canvas.addr = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintCanvasSettings* %canvas, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas.addr, metadata !4206, metadata !DIExpression()), !dbg !4207
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4208, metadata !DIExpression()), !dbg !4209
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4210, metadata !DIExpression()), !dbg !4211
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4212
  %call = call i8* %0(i64 1560, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.6, i64 0, i64 0)), !dbg !4212
  %1 = bitcast i8* %call to %struct.DynamicPaintSurface*, !dbg !4212
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4211
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4213
  %tobool = icmp ne %struct.DynamicPaintSurface* %2, null, !dbg !4213
  br i1 %tobool, label %if.end, label %if.then, !dbg !4215

if.then:                                          ; preds = %entry
  store %struct.DynamicPaintSurface* null, %struct.DynamicPaintSurface** %retval, align 8, !dbg !4216
  br label %return, !dbg !4216

if.end:                                           ; preds = %entry
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !4217
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4218
  %canvas1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 2, !dbg !4219
  store %struct.DynamicPaintCanvasSettings* %3, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !4220
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4221
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 10, !dbg !4222
  store i16 1, i16* %format, align 4, !dbg !4223
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4224
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 11, !dbg !4225
  store i16 0, i16* %type, align 2, !dbg !4226
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4227
  %ptcaches = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 7, !dbg !4228
  %call2 = call %struct.PointCache* @BKE_ptcache_add(%struct.ListBase* %ptcaches), !dbg !4229
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4230
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 6, !dbg !4231
  store %struct.PointCache* %call2, %struct.PointCache** %pointcache, align 8, !dbg !4232
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4233
  %pointcache3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 6, !dbg !4234
  %10 = load %struct.PointCache*, %struct.PointCache** %pointcache3, align 8, !dbg !4234
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %10, i32 0, i32 2, !dbg !4235
  %11 = load i32, i32* %flag, align 8, !dbg !4236
  %or = or i32 %11, 64, !dbg !4236
  store i32 %or, i32* %flag, align 8, !dbg !4236
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4237
  %pointcache4 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %12, i32 0, i32 6, !dbg !4238
  %13 = load %struct.PointCache*, %struct.PointCache** %pointcache4, align 8, !dbg !4238
  %step = getelementptr inbounds %struct.PointCache, %struct.PointCache* %13, i32 0, i32 3, !dbg !4239
  store i32 1, i32* %step, align 4, !dbg !4240
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4241
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 18, !dbg !4242
  store i32 1659, i32* %flags, align 4, !dbg !4243
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4244
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %15, i32 0, i32 19, !dbg !4245
  store i32 0, i32* %effect, align 8, !dbg !4246
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4247
  %effect_ui = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 14, !dbg !4248
  store i16 1, i16* %effect_ui, align 4, !dbg !4249
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4250
  %diss_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 29, !dbg !4251
  store i32 250, i32* %diss_speed, align 4, !dbg !4252
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4253
  %dry_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 28, !dbg !4254
  store i32 500, i32* %dry_speed, align 8, !dbg !4255
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4256
  %color_dry_threshold = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %19, i32 0, i32 30, !dbg !4257
  store float 1.000000e+00, float* %color_dry_threshold, align 8, !dbg !4258
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4259
  %depth_clamp = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 31, !dbg !4260
  store float 0.000000e+00, float* %depth_clamp, align 4, !dbg !4261
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4262
  %disp_factor = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 32, !dbg !4263
  store float 1.000000e+00, float* %disp_factor, align 8, !dbg !4264
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4265
  %disp_type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %22, i32 0, i32 12, !dbg !4266
  store i16 0, i16* %disp_type, align 8, !dbg !4267
  %23 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4268
  %image_fileformat = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %23, i32 0, i32 13, !dbg !4269
  store i16 0, i16* %image_fileformat, align 2, !dbg !4270
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4271
  %influence_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %24, i32 0, i32 38, !dbg !4272
  store float 1.000000e+00, float* %influence_scale, align 8, !dbg !4273
  %25 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4274
  %radius_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %25, i32 0, i32 39, !dbg !4275
  store float 1.000000e+00, float* %radius_scale, align 4, !dbg !4276
  %26 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4277
  %init_color = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %26, i32 0, i32 25, !dbg !4278
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %init_color, i64 0, i64 0, !dbg !4277
  store float 1.000000e+00, float* %arrayidx, align 8, !dbg !4279
  %27 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4280
  %init_color5 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %27, i32 0, i32 25, !dbg !4281
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %init_color5, i64 0, i64 1, !dbg !4280
  store float 1.000000e+00, float* %arrayidx6, align 4, !dbg !4282
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4283
  %init_color7 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %28, i32 0, i32 25, !dbg !4284
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %init_color7, i64 0, i64 2, !dbg !4283
  store float 1.000000e+00, float* %arrayidx8, align 8, !dbg !4285
  %29 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4286
  %init_color9 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %29, i32 0, i32 25, !dbg !4287
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %init_color9, i64 0, i64 3, !dbg !4286
  store float 1.000000e+00, float* %arrayidx10, align 4, !dbg !4288
  %30 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4289
  %image_resolution = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %30, i32 0, i32 20, !dbg !4290
  store i32 256, i32* %image_resolution, align 4, !dbg !4291
  %31 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4292
  %substeps = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %31, i32 0, i32 21, !dbg !4293
  store i32 0, i32* %substeps, align 8, !dbg !4294
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4295
  %tobool11 = icmp ne %struct.Scene* %32, null, !dbg !4295
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !4297

if.then12:                                        ; preds = %if.end
  %33 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4298
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %33, i32 0, i32 22, !dbg !4300
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 6, !dbg !4301
  %34 = load i32, i32* %sfra, align 4, !dbg !4301
  %35 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4302
  %start_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %35, i32 0, i32 22, !dbg !4303
  store i32 %34, i32* %start_frame, align 4, !dbg !4304
  %36 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4305
  %r13 = getelementptr inbounds %struct.Scene, %struct.Scene* %36, i32 0, i32 22, !dbg !4306
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r13, i32 0, i32 7, !dbg !4307
  %37 = load i32, i32* %efra, align 8, !dbg !4307
  %38 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4308
  %end_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %38, i32 0, i32 23, !dbg !4309
  store i32 %37, i32* %end_frame, align 8, !dbg !4310
  br label %if.end16, !dbg !4311

if.else:                                          ; preds = %if.end
  %39 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4312
  %start_frame14 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %39, i32 0, i32 22, !dbg !4314
  store i32 1, i32* %start_frame14, align 4, !dbg !4315
  %40 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4316
  %end_frame15 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %40, i32 0, i32 23, !dbg !4317
  store i32 250, i32* %end_frame15, align 8, !dbg !4318
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then12
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4319
  %spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 33, !dbg !4320
  store float 1.000000e+00, float* %spread_speed, align 4, !dbg !4321
  %42 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4322
  %color_spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %42, i32 0, i32 34, !dbg !4323
  store float 1.000000e+00, float* %color_spread_speed, align 8, !dbg !4324
  %43 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4325
  %shrink_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %43, i32 0, i32 35, !dbg !4326
  store float 1.000000e+00, float* %shrink_speed, align 4, !dbg !4327
  %44 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4328
  %wave_damping = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %44, i32 0, i32 40, !dbg !4329
  store float 0x3FA47AE140000000, float* %wave_damping, align 8, !dbg !4330
  %45 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4331
  %wave_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %45, i32 0, i32 41, !dbg !4332
  store float 1.000000e+00, float* %wave_speed, align 4, !dbg !4333
  %46 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4334
  %wave_timescale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %46, i32 0, i32 42, !dbg !4335
  store float 1.000000e+00, float* %wave_timescale, align 8, !dbg !4336
  %47 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4337
  %wave_spring = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %47, i32 0, i32 43, !dbg !4338
  store float 0x3FC99999A0000000, float* %wave_spring, align 4, !dbg !4339
  %48 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4340
  %wave_smoothness = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %48, i32 0, i32 44, !dbg !4341
  store float 1.000000e+00, float* %wave_smoothness, align 8, !dbg !4342
  %49 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4343
  %image_output_path = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %49, i32 0, i32 47, !dbg !4344
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %image_output_path, i64 0, i64 0, !dbg !4343
  call void @modifier_path_init(i8* %arraydecay, i32 1024, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0)), !dbg !4345
  %50 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4346
  call void @dynamicPaintSurface_setUniqueName(%struct.DynamicPaintSurface* %50, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0)), !dbg !4347
  %call17 = call %struct.EffectorWeights* @BKE_add_effector_weights(%struct.Group* null), !dbg !4348
  %51 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4349
  %effector_weights = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %51, i32 0, i32 5, !dbg !4350
  store %struct.EffectorWeights* %call17, %struct.EffectorWeights** %effector_weights, align 8, !dbg !4351
  %52 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4352
  call void @dynamicPaintSurface_updateType(%struct.DynamicPaintSurface* %52), !dbg !4353
  %53 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !4354
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %53, i32 0, i32 2, !dbg !4355
  %54 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4356
  %55 = bitcast %struct.DynamicPaintSurface* %54 to i8*, !dbg !4356
  call void @BLI_addtail(%struct.ListBase* %surfaces, i8* %55), !dbg !4357
  %56 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4358
  store %struct.DynamicPaintSurface* %56, %struct.DynamicPaintSurface** %retval, align 8, !dbg !4359
  br label %return, !dbg !4359

return:                                           ; preds = %if.end16, %if.then
  %57 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %retval, align 8, !dbg !4360
  ret %struct.DynamicPaintSurface* %57, !dbg !4360
}

declare dso_local %struct.PointCache* @BKE_ptcache_add(%struct.ListBase*) #2

declare dso_local void @modifier_path_init(i8*, i32, i8*) #2

declare dso_local %struct.EffectorWeights* @BKE_add_effector_weights(%struct.Group*) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @dynamicPaint_createType(%struct.DynamicPaintModifierData* %pmd, i32 %type, %struct.Scene* %scene) #0 !dbg !4361 {
entry:
  %retval = alloca i8, align 1
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %type.addr = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %canvas = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %brush = alloca %struct.DynamicPaintBrushSettings*, align 8
  %ramp = alloca %struct.CBData*, align 8
  %ramp52 = alloca %struct.CBData*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !4364, metadata !DIExpression()), !dbg !4365
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !4366, metadata !DIExpression()), !dbg !4367
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !4368, metadata !DIExpression()), !dbg !4369
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4370
  %tobool = icmp ne %struct.DynamicPaintModifierData* %0, null, !dbg !4370
  br i1 %tobool, label %if.then, label %if.else85, !dbg !4372

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !4373
  %cmp = icmp eq i32 %1, 1, !dbg !4376
  br i1 %cmp, label %if.then1, label %if.else, !dbg !4377

if.then1:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas, metadata !4378, metadata !DIExpression()), !dbg !4380
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4381
  %canvas2 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %2, i32 0, i32 1, !dbg !4383
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas2, align 8, !dbg !4383
  %tobool3 = icmp ne %struct.DynamicPaintCanvasSettings* %3, null, !dbg !4381
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !4384

if.then4:                                         ; preds = %if.then1
  %4 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4385
  call void @dynamicPaint_freeCanvas(%struct.DynamicPaintModifierData* %4), !dbg !4386
  br label %if.end, !dbg !4386

if.end:                                           ; preds = %if.then4, %if.then1
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4387
  %call = call i8* %5(i64 104, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0)), !dbg !4387
  %6 = bitcast i8* %call to %struct.DynamicPaintCanvasSettings*, !dbg !4387
  %7 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4388
  %canvas5 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %7, i32 0, i32 1, !dbg !4389
  store %struct.DynamicPaintCanvasSettings* %6, %struct.DynamicPaintCanvasSettings** %canvas5, align 8, !dbg !4390
  store %struct.DynamicPaintCanvasSettings* %6, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4391
  %8 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4392
  %tobool6 = icmp ne %struct.DynamicPaintCanvasSettings* %8, null, !dbg !4392
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !4394

if.then7:                                         ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4395
  br label %return, !dbg !4395

if.end8:                                          ; preds = %if.end
  %9 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4396
  %10 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4397
  %pmd9 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %10, i32 0, i32 0, !dbg !4398
  store %struct.DynamicPaintModifierData* %9, %struct.DynamicPaintModifierData** %pmd9, align 8, !dbg !4399
  %11 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4400
  %dm = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %11, i32 0, i32 1, !dbg !4401
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !4402
  %12 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4403
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !4405
  %call10 = call %struct.DynamicPaintSurface* @dynamicPaint_createNewSurface(%struct.DynamicPaintCanvasSettings* %12, %struct.Scene* %13), !dbg !4406
  %tobool11 = icmp ne %struct.DynamicPaintSurface* %call10, null, !dbg !4406
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !4407

if.then12:                                        ; preds = %if.end8
  store i8 0, i8* %retval, align 1, !dbg !4408
  br label %return, !dbg !4408

if.end13:                                         ; preds = %if.end8
  br label %if.end84, !dbg !4409

if.else:                                          ; preds = %if.then
  %14 = load i32, i32* %type.addr, align 4, !dbg !4410
  %cmp14 = icmp eq i32 %14, 2, !dbg !4412
  br i1 %cmp14, label %if.then15, label %if.end83, !dbg !4413

if.then15:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush, metadata !4414, metadata !DIExpression()), !dbg !4418
  %15 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4419
  %brush16 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %15, i32 0, i32 2, !dbg !4421
  %16 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush16, align 8, !dbg !4421
  %tobool17 = icmp ne %struct.DynamicPaintBrushSettings* %16, null, !dbg !4419
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !4422

if.then18:                                        ; preds = %if.then15
  %17 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4423
  call void @dynamicPaint_freeBrush(%struct.DynamicPaintModifierData* %17), !dbg !4424
  br label %if.end19, !dbg !4424

if.end19:                                         ; preds = %if.then18, %if.then15
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4425
  %call20 = call i8* %18(i64 112, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)), !dbg !4425
  %19 = bitcast i8* %call20 to %struct.DynamicPaintBrushSettings*, !dbg !4425
  %20 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4426
  %brush21 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %20, i32 0, i32 2, !dbg !4427
  store %struct.DynamicPaintBrushSettings* %19, %struct.DynamicPaintBrushSettings** %brush21, align 8, !dbg !4428
  store %struct.DynamicPaintBrushSettings* %19, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4429
  %21 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4430
  %tobool22 = icmp ne %struct.DynamicPaintBrushSettings* %21, null, !dbg !4430
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !4432

if.then23:                                        ; preds = %if.end19
  store i8 0, i8* %retval, align 1, !dbg !4433
  br label %return, !dbg !4433

if.end24:                                         ; preds = %if.end19
  %22 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4434
  %23 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4435
  %pmd25 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %23, i32 0, i32 0, !dbg !4436
  store %struct.DynamicPaintModifierData* %22, %struct.DynamicPaintModifierData** %pmd25, align 8, !dbg !4437
  %24 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4438
  %psys = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %24, i32 0, i32 2, !dbg !4439
  store %struct.ParticleSystem* null, %struct.ParticleSystem** %psys, align 8, !dbg !4440
  %25 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4441
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %25, i32 0, i32 4, !dbg !4442
  store i32 20, i32* %flags, align 8, !dbg !4443
  %26 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4444
  %collision = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %26, i32 0, i32 5, !dbg !4445
  store i32 0, i32* %collision, align 4, !dbg !4446
  %27 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4447
  %mat = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %27, i32 0, i32 3, !dbg !4448
  store %struct.Material* null, %struct.Material** %mat, align 8, !dbg !4449
  %28 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4450
  %r = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %28, i32 0, i32 6, !dbg !4451
  store float 0x3FC3333340000000, float* %r, align 8, !dbg !4452
  %29 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4453
  %g = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %29, i32 0, i32 7, !dbg !4454
  store float 0x3FD99999A0000000, float* %g, align 4, !dbg !4455
  %30 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4456
  %b = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %30, i32 0, i32 8, !dbg !4457
  store float 0x3FE99999A0000000, float* %b, align 8, !dbg !4458
  %31 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4459
  %alpha = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %31, i32 0, i32 9, !dbg !4460
  store float 1.000000e+00, float* %alpha, align 4, !dbg !4461
  %32 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4462
  %wetness = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %32, i32 0, i32 10, !dbg !4463
  store float 1.000000e+00, float* %wetness, align 8, !dbg !4464
  %33 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4465
  %paint_distance = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %33, i32 0, i32 13, !dbg !4466
  store float 1.000000e+00, float* %paint_distance, align 4, !dbg !4467
  %34 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4468
  %proximity_falloff = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %34, i32 0, i32 16, !dbg !4469
  store i16 1, i16* %proximity_falloff, align 8, !dbg !4470
  %35 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4471
  %particle_radius = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %35, i32 0, i32 11, !dbg !4472
  store float 0x3FC99999A0000000, float* %particle_radius, align 4, !dbg !4473
  %36 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4474
  %particle_smooth = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %36, i32 0, i32 12, !dbg !4475
  store float 0x3FA99999A0000000, float* %particle_smooth, align 8, !dbg !4476
  %37 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4477
  %wave_type = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %37, i32 0, i32 17, !dbg !4478
  store i16 3, i16* %wave_type, align 2, !dbg !4479
  %38 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4480
  %wave_factor = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %38, i32 0, i32 20, !dbg !4481
  store float 1.000000e+00, float* %wave_factor, align 8, !dbg !4482
  %39 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4483
  %wave_clamp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %39, i32 0, i32 21, !dbg !4484
  store float 0.000000e+00, float* %wave_clamp, align 4, !dbg !4485
  %40 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4486
  %smudge_strength = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %40, i32 0, i32 23, !dbg !4487
  store float 0x3FD3333340000000, float* %smudge_strength, align 4, !dbg !4488
  %41 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4489
  %max_velocity = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %41, i32 0, i32 22, !dbg !4490
  store float 1.000000e+00, float* %max_velocity, align 8, !dbg !4491
  %42 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4492
  %dm26 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %42, i32 0, i32 1, !dbg !4493
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm26, align 8, !dbg !4494
  call void @llvm.dbg.declare(metadata %struct.CBData** %ramp, metadata !4495, metadata !DIExpression()), !dbg !4498
  %call27 = call %struct.ColorBand* @add_colorband(i8 zeroext 0), !dbg !4499
  %43 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4500
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %43, i32 0, i32 14, !dbg !4501
  store %struct.ColorBand* %call27, %struct.ColorBand** %paint_ramp, align 8, !dbg !4502
  %44 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4503
  %paint_ramp28 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %44, i32 0, i32 14, !dbg !4505
  %45 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp28, align 8, !dbg !4505
  %tobool29 = icmp ne %struct.ColorBand* %45, null, !dbg !4503
  br i1 %tobool29, label %if.end31, label %if.then30, !dbg !4506

if.then30:                                        ; preds = %if.end24
  store i8 0, i8* %retval, align 1, !dbg !4507
  br label %return, !dbg !4507

if.end31:                                         ; preds = %if.end24
  %46 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4508
  %paint_ramp32 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %46, i32 0, i32 14, !dbg !4509
  %47 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp32, align 8, !dbg !4509
  %data = getelementptr inbounds %struct.ColorBand, %struct.ColorBand* %47, i32 0, i32 6, !dbg !4510
  %arraydecay = getelementptr inbounds [32 x %struct.CBData], [32 x %struct.CBData]* %data, i64 0, i64 0, !dbg !4508
  store %struct.CBData* %arraydecay, %struct.CBData** %ramp, align 8, !dbg !4511
  %48 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4512
  %arrayidx = getelementptr inbounds %struct.CBData, %struct.CBData* %48, i64 0, !dbg !4512
  %a = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx, i32 0, i32 3, !dbg !4513
  store float 1.000000e+00, float* %a, align 4, !dbg !4514
  %49 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4515
  %arrayidx33 = getelementptr inbounds %struct.CBData, %struct.CBData* %49, i64 0, !dbg !4515
  %b34 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx33, i32 0, i32 2, !dbg !4516
  store float 1.000000e+00, float* %b34, align 4, !dbg !4517
  %50 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4518
  %arrayidx35 = getelementptr inbounds %struct.CBData, %struct.CBData* %50, i64 0, !dbg !4518
  %g36 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx35, i32 0, i32 1, !dbg !4519
  store float 1.000000e+00, float* %g36, align 4, !dbg !4520
  %51 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4521
  %arrayidx37 = getelementptr inbounds %struct.CBData, %struct.CBData* %51, i64 0, !dbg !4521
  %r38 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx37, i32 0, i32 0, !dbg !4522
  store float 1.000000e+00, float* %r38, align 4, !dbg !4523
  %52 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4524
  %arrayidx39 = getelementptr inbounds %struct.CBData, %struct.CBData* %52, i64 0, !dbg !4524
  %pos = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx39, i32 0, i32 4, !dbg !4525
  store float 0.000000e+00, float* %pos, align 4, !dbg !4526
  %53 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4527
  %arrayidx40 = getelementptr inbounds %struct.CBData, %struct.CBData* %53, i64 1, !dbg !4527
  %pos41 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx40, i32 0, i32 4, !dbg !4528
  store float 1.000000e+00, float* %pos41, align 4, !dbg !4529
  %54 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4530
  %arrayidx42 = getelementptr inbounds %struct.CBData, %struct.CBData* %54, i64 1, !dbg !4530
  %b43 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx42, i32 0, i32 2, !dbg !4531
  store float 1.000000e+00, float* %b43, align 4, !dbg !4532
  %55 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4533
  %arrayidx44 = getelementptr inbounds %struct.CBData, %struct.CBData* %55, i64 1, !dbg !4533
  %g45 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx44, i32 0, i32 1, !dbg !4534
  store float 1.000000e+00, float* %g45, align 4, !dbg !4535
  %56 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4536
  %arrayidx46 = getelementptr inbounds %struct.CBData, %struct.CBData* %56, i64 1, !dbg !4536
  %r47 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx46, i32 0, i32 0, !dbg !4537
  store float 1.000000e+00, float* %r47, align 4, !dbg !4538
  %57 = load %struct.CBData*, %struct.CBData** %ramp, align 8, !dbg !4539
  %arrayidx48 = getelementptr inbounds %struct.CBData, %struct.CBData* %57, i64 1, !dbg !4539
  %a49 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx48, i32 0, i32 3, !dbg !4540
  store float 0.000000e+00, float* %a49, align 4, !dbg !4541
  %58 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4542
  %brush50 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %58, i32 0, i32 2, !dbg !4543
  %59 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush50, align 8, !dbg !4543
  %paint_ramp51 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %59, i32 0, i32 14, !dbg !4544
  %60 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp51, align 8, !dbg !4544
  %tot = getelementptr inbounds %struct.ColorBand, %struct.ColorBand* %60, i32 0, i32 0, !dbg !4545
  store i16 2, i16* %tot, align 4, !dbg !4546
  call void @llvm.dbg.declare(metadata %struct.CBData** %ramp52, metadata !4547, metadata !DIExpression()), !dbg !4549
  %call53 = call %struct.ColorBand* @add_colorband(i8 zeroext 0), !dbg !4550
  %61 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4551
  %vel_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %61, i32 0, i32 15, !dbg !4552
  store %struct.ColorBand* %call53, %struct.ColorBand** %vel_ramp, align 8, !dbg !4553
  %62 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4554
  %vel_ramp54 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %62, i32 0, i32 15, !dbg !4556
  %63 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp54, align 8, !dbg !4556
  %tobool55 = icmp ne %struct.ColorBand* %63, null, !dbg !4554
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !4557

if.then56:                                        ; preds = %if.end31
  store i8 0, i8* %retval, align 1, !dbg !4558
  br label %return, !dbg !4558

if.end57:                                         ; preds = %if.end31
  %64 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4559
  %vel_ramp58 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %64, i32 0, i32 15, !dbg !4560
  %65 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp58, align 8, !dbg !4560
  %data59 = getelementptr inbounds %struct.ColorBand, %struct.ColorBand* %65, i32 0, i32 6, !dbg !4561
  %arraydecay60 = getelementptr inbounds [32 x %struct.CBData], [32 x %struct.CBData]* %data59, i64 0, i64 0, !dbg !4559
  store %struct.CBData* %arraydecay60, %struct.CBData** %ramp52, align 8, !dbg !4562
  %66 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4563
  %arrayidx61 = getelementptr inbounds %struct.CBData, %struct.CBData* %66, i64 0, !dbg !4563
  %pos62 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx61, i32 0, i32 4, !dbg !4564
  store float 0.000000e+00, float* %pos62, align 4, !dbg !4565
  %67 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4566
  %arrayidx63 = getelementptr inbounds %struct.CBData, %struct.CBData* %67, i64 0, !dbg !4566
  %a64 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx63, i32 0, i32 3, !dbg !4567
  store float 0.000000e+00, float* %a64, align 4, !dbg !4568
  %68 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4569
  %arrayidx65 = getelementptr inbounds %struct.CBData, %struct.CBData* %68, i64 0, !dbg !4569
  %b66 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx65, i32 0, i32 2, !dbg !4570
  store float 0.000000e+00, float* %b66, align 4, !dbg !4571
  %69 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4572
  %arrayidx67 = getelementptr inbounds %struct.CBData, %struct.CBData* %69, i64 0, !dbg !4572
  %g68 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx67, i32 0, i32 1, !dbg !4573
  store float 0.000000e+00, float* %g68, align 4, !dbg !4574
  %70 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4575
  %arrayidx69 = getelementptr inbounds %struct.CBData, %struct.CBData* %70, i64 0, !dbg !4575
  %r70 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx69, i32 0, i32 0, !dbg !4576
  store float 0.000000e+00, float* %r70, align 4, !dbg !4577
  %71 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4578
  %arrayidx71 = getelementptr inbounds %struct.CBData, %struct.CBData* %71, i64 1, !dbg !4578
  %pos72 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx71, i32 0, i32 4, !dbg !4579
  store float 1.000000e+00, float* %pos72, align 4, !dbg !4580
  %72 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4581
  %arrayidx73 = getelementptr inbounds %struct.CBData, %struct.CBData* %72, i64 1, !dbg !4581
  %a74 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx73, i32 0, i32 3, !dbg !4582
  store float 1.000000e+00, float* %a74, align 4, !dbg !4583
  %73 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4584
  %arrayidx75 = getelementptr inbounds %struct.CBData, %struct.CBData* %73, i64 1, !dbg !4584
  %b76 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx75, i32 0, i32 2, !dbg !4585
  store float 1.000000e+00, float* %b76, align 4, !dbg !4586
  %74 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4587
  %arrayidx77 = getelementptr inbounds %struct.CBData, %struct.CBData* %74, i64 1, !dbg !4587
  %g78 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx77, i32 0, i32 1, !dbg !4588
  store float 1.000000e+00, float* %g78, align 4, !dbg !4589
  %75 = load %struct.CBData*, %struct.CBData** %ramp52, align 8, !dbg !4590
  %arrayidx79 = getelementptr inbounds %struct.CBData, %struct.CBData* %75, i64 1, !dbg !4590
  %r80 = getelementptr inbounds %struct.CBData, %struct.CBData* %arrayidx79, i32 0, i32 0, !dbg !4591
  store float 1.000000e+00, float* %r80, align 4, !dbg !4592
  %76 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4593
  %paint_ramp81 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %76, i32 0, i32 14, !dbg !4594
  %77 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp81, align 8, !dbg !4594
  %tot82 = getelementptr inbounds %struct.ColorBand, %struct.ColorBand* %77, i32 0, i32 0, !dbg !4595
  store i16 2, i16* %tot82, align 4, !dbg !4596
  br label %if.end83, !dbg !4597

if.end83:                                         ; preds = %if.end57, %if.else
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.end13
  br label %if.end86, !dbg !4598

if.else85:                                        ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4599
  br label %return, !dbg !4599

if.end86:                                         ; preds = %if.end84
  store i8 1, i8* %retval, align 1, !dbg !4600
  br label %return, !dbg !4600

return:                                           ; preds = %if.end86, %if.else85, %if.then56, %if.then30, %if.then23, %if.then12, %if.then7
  %78 = load i8, i8* %retval, align 1, !dbg !4601
  ret i8 %78, !dbg !4601
}

declare dso_local %struct.ColorBand* @add_colorband(i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_Modifier_copy(%struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData* %tpmd) #0 !dbg !4602 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %tpmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %t_surface = alloca %struct.DynamicPaintSurface*, align 8
  %brush90 = alloca %struct.DynamicPaintBrushSettings*, align 8
  %t_brush = alloca %struct.DynamicPaintBrushSettings*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !4605, metadata !DIExpression()), !dbg !4606
  store %struct.DynamicPaintModifierData* %tpmd, %struct.DynamicPaintModifierData** %tpmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %tpmd.addr, metadata !4607, metadata !DIExpression()), !dbg !4608
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4609
  %type = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %0, i32 0, i32 3, !dbg !4610
  %1 = load i32, i32* %type, align 8, !dbg !4610
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4611
  %type1 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %2, i32 0, i32 3, !dbg !4612
  store i32 %1, i32* %type1, align 8, !dbg !4613
  %3 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4614
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %3, i32 0, i32 1, !dbg !4616
  %4 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !4616
  %tobool = icmp ne %struct.DynamicPaintCanvasSettings* %4, null, !dbg !4614
  br i1 %tobool, label %if.then, label %if.end, !dbg !4617

if.then:                                          ; preds = %entry
  %5 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4618
  %call = call zeroext i8 @dynamicPaint_createType(%struct.DynamicPaintModifierData* %5, i32 1, %struct.Scene* null), !dbg !4619
  br label %if.end, !dbg !4619

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4620
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %6, i32 0, i32 2, !dbg !4622
  %7 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !4622
  %tobool2 = icmp ne %struct.DynamicPaintBrushSettings* %7, null, !dbg !4620
  br i1 %tobool2, label %if.then3, label %if.end5, !dbg !4623

if.then3:                                         ; preds = %if.end
  %8 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4624
  %call4 = call zeroext i8 @dynamicPaint_createType(%struct.DynamicPaintModifierData* %8, i32 2, %struct.Scene* null), !dbg !4625
  br label %if.end5, !dbg !4625

if.end5:                                          ; preds = %if.then3, %if.end
  %9 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4626
  %canvas6 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %9, i32 0, i32 1, !dbg !4628
  %10 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas6, align 8, !dbg !4628
  %tobool7 = icmp ne %struct.DynamicPaintCanvasSettings* %10, null, !dbg !4626
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !4629

if.then8:                                         ; preds = %if.end5
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !4630, metadata !DIExpression()), !dbg !4632
  %11 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4633
  %12 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4634
  %canvas9 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %12, i32 0, i32 1, !dbg !4635
  %13 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas9, align 8, !dbg !4635
  %pmd10 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %13, i32 0, i32 0, !dbg !4636
  store %struct.DynamicPaintModifierData* %11, %struct.DynamicPaintModifierData** %pmd10, align 8, !dbg !4637
  %14 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4638
  %canvas11 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %14, i32 0, i32 1, !dbg !4640
  %15 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas11, align 8, !dbg !4640
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %15, i32 0, i32 2, !dbg !4641
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !4642
  %16 = load i8*, i8** %first, align 8, !dbg !4642
  %tobool12 = icmp ne i8* %16, null, !dbg !4638
  br i1 %tobool12, label %if.then13, label %if.end17, !dbg !4643

if.then13:                                        ; preds = %if.then8
  %17 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4644
  %canvas14 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %17, i32 0, i32 1, !dbg !4645
  %18 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas14, align 8, !dbg !4645
  %surfaces15 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %18, i32 0, i32 2, !dbg !4646
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces15, i32 0, i32 0, !dbg !4647
  %19 = load i8*, i8** %first16, align 8, !dbg !4647
  %20 = bitcast i8* %19 to %struct.DynamicPaintSurface*, !dbg !4644
  call void @dynamicPaint_freeSurface(%struct.DynamicPaintSurface* %20), !dbg !4648
  br label %if.end17, !dbg !4648

if.end17:                                         ; preds = %if.then13, %if.then8
  %21 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4649
  %canvas18 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %21, i32 0, i32 1, !dbg !4651
  %22 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas18, align 8, !dbg !4651
  %surfaces19 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %22, i32 0, i32 2, !dbg !4652
  %first20 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces19, i32 0, i32 0, !dbg !4653
  %23 = load i8*, i8** %first20, align 8, !dbg !4653
  %24 = bitcast i8* %23 to %struct.DynamicPaintSurface*, !dbg !4649
  store %struct.DynamicPaintSurface* %24, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4654
  br label %for.cond, !dbg !4655

for.cond:                                         ; preds = %for.inc, %if.end17
  %25 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4656
  %tobool21 = icmp ne %struct.DynamicPaintSurface* %25, null, !dbg !4658
  br i1 %tobool21, label %for.body, label %for.end, !dbg !4658

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %t_surface, metadata !4659, metadata !DIExpression()), !dbg !4661
  %26 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4662
  %canvas22 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %26, i32 0, i32 1, !dbg !4663
  %27 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas22, align 8, !dbg !4663
  %call23 = call %struct.DynamicPaintSurface* @dynamicPaint_createNewSurface(%struct.DynamicPaintCanvasSettings* %27, %struct.Scene* null), !dbg !4664
  store %struct.DynamicPaintSurface* %call23, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4661
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4665
  %brush_group = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %28, i32 0, i32 4, !dbg !4666
  %29 = load %struct.Group*, %struct.Group** %brush_group, align 8, !dbg !4666
  %30 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4667
  %brush_group24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %30, i32 0, i32 4, !dbg !4668
  store %struct.Group* %29, %struct.Group** %brush_group24, align 8, !dbg !4669
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4670
  %32 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4671
  %effector_weights = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %32, i32 0, i32 5, !dbg !4672
  %33 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !4672
  %34 = bitcast %struct.EffectorWeights* %33 to i8*, !dbg !4671
  call void %31(i8* %34), !dbg !4670
  %35 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !4673
  %36 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4674
  %effector_weights25 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %36, i32 0, i32 5, !dbg !4675
  %37 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights25, align 8, !dbg !4675
  %38 = bitcast %struct.EffectorWeights* %37 to i8*, !dbg !4674
  %call26 = call i8* %35(i8* %38), !dbg !4673
  %39 = bitcast i8* %call26 to %struct.EffectorWeights*, !dbg !4673
  %40 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4676
  %effector_weights27 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %40, i32 0, i32 5, !dbg !4677
  store %struct.EffectorWeights* %39, %struct.EffectorWeights** %effector_weights27, align 8, !dbg !4678
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4679
  %name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 9, !dbg !4680
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4679
  %42 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4681
  %name28 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %42, i32 0, i32 9, !dbg !4682
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %name28, i64 0, i64 0, !dbg !4681
  %call30 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay29, i64 64), !dbg !4683
  %43 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4684
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %43, i32 0, i32 10, !dbg !4685
  %44 = load i16, i16* %format, align 4, !dbg !4685
  %45 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4686
  %format31 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %45, i32 0, i32 10, !dbg !4687
  store i16 %44, i16* %format31, align 4, !dbg !4688
  %46 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4689
  %type32 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %46, i32 0, i32 11, !dbg !4690
  %47 = load i16, i16* %type32, align 2, !dbg !4690
  %48 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4691
  %type33 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %48, i32 0, i32 11, !dbg !4692
  store i16 %47, i16* %type33, align 2, !dbg !4693
  %49 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4694
  %disp_type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %49, i32 0, i32 12, !dbg !4695
  %50 = load i16, i16* %disp_type, align 8, !dbg !4695
  %51 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4696
  %disp_type34 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %51, i32 0, i32 12, !dbg !4697
  store i16 %50, i16* %disp_type34, align 8, !dbg !4698
  %52 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4699
  %image_fileformat = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %52, i32 0, i32 13, !dbg !4700
  %53 = load i16, i16* %image_fileformat, align 2, !dbg !4700
  %54 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4701
  %image_fileformat35 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %54, i32 0, i32 13, !dbg !4702
  store i16 %53, i16* %image_fileformat35, align 2, !dbg !4703
  %55 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4704
  %effect_ui = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %55, i32 0, i32 14, !dbg !4705
  %56 = load i16, i16* %effect_ui, align 4, !dbg !4705
  %57 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4706
  %effect_ui36 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %57, i32 0, i32 14, !dbg !4707
  store i16 %56, i16* %effect_ui36, align 4, !dbg !4708
  %58 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4709
  %preview_id = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %58, i32 0, i32 15, !dbg !4710
  %59 = load i16, i16* %preview_id, align 2, !dbg !4710
  %60 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4711
  %preview_id37 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %60, i32 0, i32 15, !dbg !4712
  store i16 %59, i16* %preview_id37, align 2, !dbg !4713
  %61 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4714
  %init_color_type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %61, i32 0, i32 16, !dbg !4715
  %62 = load i16, i16* %init_color_type, align 8, !dbg !4715
  %63 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4716
  %init_color_type38 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %63, i32 0, i32 16, !dbg !4717
  store i16 %62, i16* %init_color_type38, align 8, !dbg !4718
  %64 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4719
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %64, i32 0, i32 18, !dbg !4720
  %65 = load i32, i32* %flags, align 4, !dbg !4720
  %66 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4721
  %flags39 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %66, i32 0, i32 18, !dbg !4722
  store i32 %65, i32* %flags39, align 4, !dbg !4723
  %67 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4724
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %67, i32 0, i32 19, !dbg !4725
  %68 = load i32, i32* %effect, align 8, !dbg !4725
  %69 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4726
  %effect40 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %69, i32 0, i32 19, !dbg !4727
  store i32 %68, i32* %effect40, align 8, !dbg !4728
  %70 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4729
  %image_resolution = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %70, i32 0, i32 20, !dbg !4730
  %71 = load i32, i32* %image_resolution, align 4, !dbg !4730
  %72 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4731
  %image_resolution41 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %72, i32 0, i32 20, !dbg !4732
  store i32 %71, i32* %image_resolution41, align 4, !dbg !4733
  %73 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4734
  %substeps = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %73, i32 0, i32 21, !dbg !4735
  %74 = load i32, i32* %substeps, align 8, !dbg !4735
  %75 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4736
  %substeps42 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %75, i32 0, i32 21, !dbg !4737
  store i32 %74, i32* %substeps42, align 8, !dbg !4738
  %76 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4739
  %start_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %76, i32 0, i32 22, !dbg !4740
  %77 = load i32, i32* %start_frame, align 4, !dbg !4740
  %78 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4741
  %start_frame43 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %78, i32 0, i32 22, !dbg !4742
  store i32 %77, i32* %start_frame43, align 4, !dbg !4743
  %79 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4744
  %end_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %79, i32 0, i32 23, !dbg !4745
  %80 = load i32, i32* %end_frame, align 8, !dbg !4745
  %81 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4746
  %end_frame44 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %81, i32 0, i32 23, !dbg !4747
  store i32 %80, i32* %end_frame44, align 8, !dbg !4748
  %82 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4749
  %init_color = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %82, i32 0, i32 25, !dbg !4750
  %arraydecay45 = getelementptr inbounds [4 x float], [4 x float]* %init_color, i64 0, i64 0, !dbg !4749
  %83 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4751
  %init_color46 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %83, i32 0, i32 25, !dbg !4752
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %init_color46, i64 0, i64 0, !dbg !4751
  call void @copy_v4_v4(float* %arraydecay45, float* %arraydecay47), !dbg !4753
  %84 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4754
  %init_texture = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %84, i32 0, i32 26, !dbg !4755
  %85 = load %struct.Tex*, %struct.Tex** %init_texture, align 8, !dbg !4755
  %86 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4756
  %init_texture48 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %86, i32 0, i32 26, !dbg !4757
  store %struct.Tex* %85, %struct.Tex** %init_texture48, align 8, !dbg !4758
  %87 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4759
  %init_layername = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %87, i32 0, i32 27, !dbg !4760
  %arraydecay49 = getelementptr inbounds [64 x i8], [64 x i8]* %init_layername, i64 0, i64 0, !dbg !4759
  %88 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4761
  %init_layername50 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %88, i32 0, i32 27, !dbg !4762
  %arraydecay51 = getelementptr inbounds [64 x i8], [64 x i8]* %init_layername50, i64 0, i64 0, !dbg !4761
  %call52 = call i8* @BLI_strncpy(i8* %arraydecay49, i8* %arraydecay51, i64 64), !dbg !4763
  %89 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4764
  %dry_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %89, i32 0, i32 28, !dbg !4765
  %90 = load i32, i32* %dry_speed, align 8, !dbg !4765
  %91 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4766
  %dry_speed53 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %91, i32 0, i32 28, !dbg !4767
  store i32 %90, i32* %dry_speed53, align 8, !dbg !4768
  %92 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4769
  %diss_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %92, i32 0, i32 29, !dbg !4770
  %93 = load i32, i32* %diss_speed, align 4, !dbg !4770
  %94 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4771
  %diss_speed54 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %94, i32 0, i32 29, !dbg !4772
  store i32 %93, i32* %diss_speed54, align 4, !dbg !4773
  %95 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4774
  %color_dry_threshold = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %95, i32 0, i32 30, !dbg !4775
  %96 = load float, float* %color_dry_threshold, align 8, !dbg !4775
  %97 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4776
  %color_dry_threshold55 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %97, i32 0, i32 30, !dbg !4777
  store float %96, float* %color_dry_threshold55, align 8, !dbg !4778
  %98 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4779
  %depth_clamp = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %98, i32 0, i32 31, !dbg !4780
  %99 = load float, float* %depth_clamp, align 4, !dbg !4780
  %100 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4781
  %depth_clamp56 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %100, i32 0, i32 31, !dbg !4782
  store float %99, float* %depth_clamp56, align 4, !dbg !4783
  %101 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4784
  %disp_factor = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %101, i32 0, i32 32, !dbg !4785
  %102 = load float, float* %disp_factor, align 8, !dbg !4785
  %103 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4786
  %disp_factor57 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %103, i32 0, i32 32, !dbg !4787
  store float %102, float* %disp_factor57, align 8, !dbg !4788
  %104 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4789
  %spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %104, i32 0, i32 33, !dbg !4790
  %105 = load float, float* %spread_speed, align 4, !dbg !4790
  %106 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4791
  %spread_speed58 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %106, i32 0, i32 33, !dbg !4792
  store float %105, float* %spread_speed58, align 4, !dbg !4793
  %107 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4794
  %color_spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %107, i32 0, i32 34, !dbg !4795
  %108 = load float, float* %color_spread_speed, align 8, !dbg !4795
  %109 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4796
  %color_spread_speed59 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %109, i32 0, i32 34, !dbg !4797
  store float %108, float* %color_spread_speed59, align 8, !dbg !4798
  %110 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4799
  %shrink_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %110, i32 0, i32 35, !dbg !4800
  %111 = load float, float* %shrink_speed, align 4, !dbg !4800
  %112 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4801
  %shrink_speed60 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %112, i32 0, i32 35, !dbg !4802
  store float %111, float* %shrink_speed60, align 4, !dbg !4803
  %113 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4804
  %drip_vel = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %113, i32 0, i32 36, !dbg !4805
  %114 = load float, float* %drip_vel, align 8, !dbg !4805
  %115 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4806
  %drip_vel61 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %115, i32 0, i32 36, !dbg !4807
  store float %114, float* %drip_vel61, align 8, !dbg !4808
  %116 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4809
  %drip_acc = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %116, i32 0, i32 37, !dbg !4810
  %117 = load float, float* %drip_acc, align 4, !dbg !4810
  %118 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4811
  %drip_acc62 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %118, i32 0, i32 37, !dbg !4812
  store float %117, float* %drip_acc62, align 4, !dbg !4813
  %119 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4814
  %influence_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %119, i32 0, i32 38, !dbg !4815
  %120 = load float, float* %influence_scale, align 8, !dbg !4815
  %121 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4816
  %influence_scale63 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %121, i32 0, i32 38, !dbg !4817
  store float %120, float* %influence_scale63, align 8, !dbg !4818
  %122 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4819
  %radius_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %122, i32 0, i32 39, !dbg !4820
  %123 = load float, float* %radius_scale, align 4, !dbg !4820
  %124 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4821
  %radius_scale64 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %124, i32 0, i32 39, !dbg !4822
  store float %123, float* %radius_scale64, align 4, !dbg !4823
  %125 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4824
  %wave_damping = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %125, i32 0, i32 40, !dbg !4825
  %126 = load float, float* %wave_damping, align 8, !dbg !4825
  %127 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4826
  %wave_damping65 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %127, i32 0, i32 40, !dbg !4827
  store float %126, float* %wave_damping65, align 8, !dbg !4828
  %128 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4829
  %wave_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %128, i32 0, i32 41, !dbg !4830
  %129 = load float, float* %wave_speed, align 4, !dbg !4830
  %130 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4831
  %wave_speed66 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %130, i32 0, i32 41, !dbg !4832
  store float %129, float* %wave_speed66, align 4, !dbg !4833
  %131 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4834
  %wave_timescale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %131, i32 0, i32 42, !dbg !4835
  %132 = load float, float* %wave_timescale, align 8, !dbg !4835
  %133 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4836
  %wave_timescale67 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %133, i32 0, i32 42, !dbg !4837
  store float %132, float* %wave_timescale67, align 8, !dbg !4838
  %134 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4839
  %wave_spring = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %134, i32 0, i32 43, !dbg !4840
  %135 = load float, float* %wave_spring, align 4, !dbg !4840
  %136 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4841
  %wave_spring68 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %136, i32 0, i32 43, !dbg !4842
  store float %135, float* %wave_spring68, align 4, !dbg !4843
  %137 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4844
  %wave_smoothness = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %137, i32 0, i32 44, !dbg !4845
  %138 = load float, float* %wave_smoothness, align 8, !dbg !4845
  %139 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4846
  %wave_smoothness69 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %139, i32 0, i32 44, !dbg !4847
  store float %138, float* %wave_smoothness69, align 8, !dbg !4848
  %140 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4849
  %uvlayer_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %140, i32 0, i32 46, !dbg !4850
  %arraydecay70 = getelementptr inbounds [64 x i8], [64 x i8]* %uvlayer_name, i64 0, i64 0, !dbg !4849
  %141 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4851
  %uvlayer_name71 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %141, i32 0, i32 46, !dbg !4852
  %arraydecay72 = getelementptr inbounds [64 x i8], [64 x i8]* %uvlayer_name71, i64 0, i64 0, !dbg !4851
  %call73 = call i8* @BLI_strncpy(i8* %arraydecay70, i8* %arraydecay72, i64 64), !dbg !4853
  %142 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4854
  %image_output_path = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %142, i32 0, i32 47, !dbg !4855
  %arraydecay74 = getelementptr inbounds [1024 x i8], [1024 x i8]* %image_output_path, i64 0, i64 0, !dbg !4854
  %143 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4856
  %image_output_path75 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %143, i32 0, i32 47, !dbg !4857
  %arraydecay76 = getelementptr inbounds [1024 x i8], [1024 x i8]* %image_output_path75, i64 0, i64 0, !dbg !4856
  %call77 = call i8* @BLI_strncpy(i8* %arraydecay74, i8* %arraydecay76, i64 1024), !dbg !4858
  %144 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4859
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %144, i32 0, i32 48, !dbg !4860
  %arraydecay78 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !4859
  %145 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4861
  %output_name79 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %145, i32 0, i32 48, !dbg !4862
  %arraydecay80 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name79, i64 0, i64 0, !dbg !4861
  %call81 = call i8* @BLI_strncpy(i8* %arraydecay78, i8* %arraydecay80, i64 64), !dbg !4863
  %146 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !4864
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %146, i32 0, i32 49, !dbg !4865
  %arraydecay82 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !4864
  %147 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4866
  %output_name283 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %147, i32 0, i32 49, !dbg !4867
  %arraydecay84 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name283, i64 0, i64 0, !dbg !4866
  %call85 = call i8* @BLI_strncpy(i8* %arraydecay82, i8* %arraydecay84, i64 64), !dbg !4868
  br label %for.inc, !dbg !4869

for.inc:                                          ; preds = %for.body
  %148 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4870
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %148, i32 0, i32 0, !dbg !4871
  %149 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !4871
  store %struct.DynamicPaintSurface* %149, %struct.DynamicPaintSurface** %surface, align 8, !dbg !4872
  br label %for.cond, !dbg !4873, !llvm.loop !4874

for.end:                                          ; preds = %for.cond
  %150 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4876
  %canvas86 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %150, i32 0, i32 1, !dbg !4877
  %151 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas86, align 8, !dbg !4877
  call void @dynamicPaint_resetPreview(%struct.DynamicPaintCanvasSettings* %151), !dbg !4878
  br label %if.end125, !dbg !4879

if.else:                                          ; preds = %if.end5
  %152 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4880
  %brush87 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %152, i32 0, i32 2, !dbg !4882
  %153 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush87, align 8, !dbg !4882
  %tobool88 = icmp ne %struct.DynamicPaintBrushSettings* %153, null, !dbg !4880
  br i1 %tobool88, label %if.then89, label %if.end124, !dbg !4883

if.then89:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush90, metadata !4884, metadata !DIExpression()), !dbg !4886
  %154 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !4887
  %brush91 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %154, i32 0, i32 2, !dbg !4888
  %155 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush91, align 8, !dbg !4888
  store %struct.DynamicPaintBrushSettings* %155, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4886
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %t_brush, metadata !4889, metadata !DIExpression()), !dbg !4890
  %156 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4891
  %brush92 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %156, i32 0, i32 2, !dbg !4892
  %157 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush92, align 8, !dbg !4892
  store %struct.DynamicPaintBrushSettings* %157, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4890
  %158 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %tpmd.addr, align 8, !dbg !4893
  %159 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4894
  %pmd93 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %159, i32 0, i32 0, !dbg !4895
  store %struct.DynamicPaintModifierData* %158, %struct.DynamicPaintModifierData** %pmd93, align 8, !dbg !4896
  %160 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4897
  %flags94 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %160, i32 0, i32 4, !dbg !4898
  %161 = load i32, i32* %flags94, align 8, !dbg !4898
  %162 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4899
  %flags95 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %162, i32 0, i32 4, !dbg !4900
  store i32 %161, i32* %flags95, align 8, !dbg !4901
  %163 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4902
  %collision = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %163, i32 0, i32 5, !dbg !4903
  %164 = load i32, i32* %collision, align 4, !dbg !4903
  %165 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4904
  %collision96 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %165, i32 0, i32 5, !dbg !4905
  store i32 %164, i32* %collision96, align 4, !dbg !4906
  %166 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4907
  %mat = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %166, i32 0, i32 3, !dbg !4908
  %167 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !4908
  %168 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4909
  %mat97 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %168, i32 0, i32 3, !dbg !4910
  store %struct.Material* %167, %struct.Material** %mat97, align 8, !dbg !4911
  %169 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4912
  %r = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %169, i32 0, i32 6, !dbg !4913
  %170 = load float, float* %r, align 8, !dbg !4913
  %171 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4914
  %r98 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %171, i32 0, i32 6, !dbg !4915
  store float %170, float* %r98, align 8, !dbg !4916
  %172 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4917
  %g = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %172, i32 0, i32 7, !dbg !4918
  %173 = load float, float* %g, align 4, !dbg !4918
  %174 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4919
  %g99 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %174, i32 0, i32 7, !dbg !4920
  store float %173, float* %g99, align 4, !dbg !4921
  %175 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4922
  %b = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %175, i32 0, i32 8, !dbg !4923
  %176 = load float, float* %b, align 8, !dbg !4923
  %177 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4924
  %b100 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %177, i32 0, i32 8, !dbg !4925
  store float %176, float* %b100, align 8, !dbg !4926
  %178 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4927
  %alpha = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %178, i32 0, i32 9, !dbg !4928
  %179 = load float, float* %alpha, align 4, !dbg !4928
  %180 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4929
  %alpha101 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %180, i32 0, i32 9, !dbg !4930
  store float %179, float* %alpha101, align 4, !dbg !4931
  %181 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4932
  %wetness = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %181, i32 0, i32 10, !dbg !4933
  %182 = load float, float* %wetness, align 8, !dbg !4933
  %183 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4934
  %wetness102 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %183, i32 0, i32 10, !dbg !4935
  store float %182, float* %wetness102, align 8, !dbg !4936
  %184 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4937
  %particle_radius = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %184, i32 0, i32 11, !dbg !4938
  %185 = load float, float* %particle_radius, align 4, !dbg !4938
  %186 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4939
  %particle_radius103 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %186, i32 0, i32 11, !dbg !4940
  store float %185, float* %particle_radius103, align 4, !dbg !4941
  %187 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4942
  %particle_smooth = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %187, i32 0, i32 12, !dbg !4943
  %188 = load float, float* %particle_smooth, align 8, !dbg !4943
  %189 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4944
  %particle_smooth104 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %189, i32 0, i32 12, !dbg !4945
  store float %188, float* %particle_smooth104, align 8, !dbg !4946
  %190 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4947
  %paint_distance = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %190, i32 0, i32 13, !dbg !4948
  %191 = load float, float* %paint_distance, align 4, !dbg !4948
  %192 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4949
  %paint_distance105 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %192, i32 0, i32 13, !dbg !4950
  store float %191, float* %paint_distance105, align 4, !dbg !4951
  %193 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4952
  %psys = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %193, i32 0, i32 2, !dbg !4953
  %194 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !4953
  %195 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4954
  %psys106 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %195, i32 0, i32 2, !dbg !4955
  store %struct.ParticleSystem* %194, %struct.ParticleSystem** %psys106, align 8, !dbg !4956
  %196 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4957
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %196, i32 0, i32 14, !dbg !4959
  %197 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp, align 8, !dbg !4959
  %tobool107 = icmp ne %struct.ColorBand* %197, null, !dbg !4957
  br i1 %tobool107, label %if.then108, label %if.end111, !dbg !4960

if.then108:                                       ; preds = %if.then89
  %198 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4961
  %paint_ramp109 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %198, i32 0, i32 14, !dbg !4962
  %199 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp109, align 8, !dbg !4962
  %200 = bitcast %struct.ColorBand* %199 to i8*, !dbg !4963
  %201 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4964
  %paint_ramp110 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %201, i32 0, i32 14, !dbg !4965
  %202 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp110, align 8, !dbg !4965
  %203 = bitcast %struct.ColorBand* %202 to i8*, !dbg !4963
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %203, i64 776, i1 false), !dbg !4963
  br label %if.end111, !dbg !4963

if.end111:                                        ; preds = %if.then108, %if.then89
  %204 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4966
  %vel_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %204, i32 0, i32 15, !dbg !4968
  %205 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp, align 8, !dbg !4968
  %tobool112 = icmp ne %struct.ColorBand* %205, null, !dbg !4966
  br i1 %tobool112, label %if.then113, label %if.end116, !dbg !4969

if.then113:                                       ; preds = %if.end111
  %206 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4970
  %vel_ramp114 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %206, i32 0, i32 15, !dbg !4971
  %207 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp114, align 8, !dbg !4971
  %208 = bitcast %struct.ColorBand* %207 to i8*, !dbg !4972
  %209 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4973
  %vel_ramp115 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %209, i32 0, i32 15, !dbg !4974
  %210 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp115, align 8, !dbg !4974
  %211 = bitcast %struct.ColorBand* %210 to i8*, !dbg !4972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %208, i8* align 4 %211, i64 776, i1 false), !dbg !4972
  br label %if.end116, !dbg !4972

if.end116:                                        ; preds = %if.then113, %if.end111
  %212 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4975
  %proximity_falloff = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %212, i32 0, i32 16, !dbg !4976
  %213 = load i16, i16* %proximity_falloff, align 8, !dbg !4976
  %214 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4977
  %proximity_falloff117 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %214, i32 0, i32 16, !dbg !4978
  store i16 %213, i16* %proximity_falloff117, align 8, !dbg !4979
  %215 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4980
  %wave_type = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %215, i32 0, i32 17, !dbg !4981
  %216 = load i16, i16* %wave_type, align 2, !dbg !4981
  %217 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4982
  %wave_type118 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %217, i32 0, i32 17, !dbg !4983
  store i16 %216, i16* %wave_type118, align 2, !dbg !4984
  %218 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4985
  %ray_dir = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %218, i32 0, i32 18, !dbg !4986
  %219 = load i16, i16* %ray_dir, align 4, !dbg !4986
  %220 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4987
  %ray_dir119 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %220, i32 0, i32 18, !dbg !4988
  store i16 %219, i16* %ray_dir119, align 4, !dbg !4989
  %221 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4990
  %wave_factor = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %221, i32 0, i32 20, !dbg !4991
  %222 = load float, float* %wave_factor, align 8, !dbg !4991
  %223 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4992
  %wave_factor120 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %223, i32 0, i32 20, !dbg !4993
  store float %222, float* %wave_factor120, align 8, !dbg !4994
  %224 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !4995
  %wave_clamp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %224, i32 0, i32 21, !dbg !4996
  %225 = load float, float* %wave_clamp, align 4, !dbg !4996
  %226 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !4997
  %wave_clamp121 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %226, i32 0, i32 21, !dbg !4998
  store float %225, float* %wave_clamp121, align 4, !dbg !4999
  %227 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !5000
  %max_velocity = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %227, i32 0, i32 22, !dbg !5001
  %228 = load float, float* %max_velocity, align 8, !dbg !5001
  %229 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !5002
  %max_velocity122 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %229, i32 0, i32 22, !dbg !5003
  store float %228, float* %max_velocity122, align 8, !dbg !5004
  %230 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush90, align 8, !dbg !5005
  %smudge_strength = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %230, i32 0, i32 23, !dbg !5006
  %231 = load float, float* %smudge_strength, align 4, !dbg !5006
  %232 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %t_brush, align 8, !dbg !5007
  %smudge_strength123 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %232, i32 0, i32 23, !dbg !5008
  store float %231, float* %smudge_strength123, align 4, !dbg !5009
  br label %if.end124, !dbg !5010

if.end124:                                        ; preds = %if.end116, %if.else
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %for.end
  ret void, !dbg !5011
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4(float* %r, float* %a) #0 !dbg !5012 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5016, metadata !DIExpression()), !dbg !5017
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5018, metadata !DIExpression()), !dbg !5019
  %0 = load float*, float** %a.addr, align 8, !dbg !5020
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5020
  %1 = load float, float* %arrayidx, align 4, !dbg !5020
  %2 = load float*, float** %r.addr, align 8, !dbg !5021
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5021
  store float %1, float* %arrayidx1, align 4, !dbg !5022
  %3 = load float*, float** %a.addr, align 8, !dbg !5023
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !5023
  %4 = load float, float* %arrayidx2, align 4, !dbg !5023
  %5 = load float*, float** %r.addr, align 8, !dbg !5024
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5024
  store float %4, float* %arrayidx3, align 4, !dbg !5025
  %6 = load float*, float** %a.addr, align 8, !dbg !5026
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !5026
  %7 = load float, float* %arrayidx4, align 4, !dbg !5026
  %8 = load float*, float** %r.addr, align 8, !dbg !5027
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5027
  store float %7, float* %arrayidx5, align 4, !dbg !5028
  %9 = load float*, float** %a.addr, align 8, !dbg !5029
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 3, !dbg !5029
  %10 = load float, float* %arrayidx6, align 4, !dbg !5029
  %11 = load float*, float** %r.addr, align 8, !dbg !5030
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 3, !dbg !5030
  store float %10, float* %arrayidx7, align 4, !dbg !5031
  ret void, !dbg !5032
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_clearSurface(%struct.Scene* %scene, %struct.DynamicPaintSurface* %surface) #0 !dbg !5033 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %data_size = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5036, metadata !DIExpression()), !dbg !5037
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5038, metadata !DIExpression()), !dbg !5039
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !5040, metadata !DIExpression()), !dbg !5041
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5042
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !5043
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !5043
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !5041
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5044
  %tobool = icmp ne %struct.PaintSurfaceData* %2, null, !dbg !5044
  br i1 %tobool, label %land.lhs.true, label %if.end23, !dbg !5046

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5047
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %3, i32 0, i32 1, !dbg !5048
  %4 = load i8*, i8** %type_data, align 8, !dbg !5048
  %tobool1 = icmp ne i8* %4, null, !dbg !5047
  br i1 %tobool1, label %if.then, label %if.end23, !dbg !5049

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %data_size, metadata !5050, metadata !DIExpression()), !dbg !5052
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5053
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 11, !dbg !5055
  %6 = load i16, i16* %type, align 2, !dbg !5055
  %conv = sext i16 %6 to i32, !dbg !5053
  %cmp = icmp eq i32 %conv, 0, !dbg !5056
  br i1 %cmp, label %if.then3, label %if.else, !dbg !5057

if.then3:                                         ; preds = %if.then
  store i32 40, i32* %data_size, align 4, !dbg !5058
  br label %if.end10, !dbg !5059

if.else:                                          ; preds = %if.then
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5060
  %type4 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 11, !dbg !5062
  %8 = load i16, i16* %type4, align 2, !dbg !5062
  %conv5 = sext i16 %8 to i32, !dbg !5060
  %cmp6 = icmp eq i32 %conv5, 3, !dbg !5063
  br i1 %cmp6, label %if.then8, label %if.else9, !dbg !5064

if.then8:                                         ; preds = %if.else
  store i32 16, i32* %data_size, align 4, !dbg !5065
  br label %if.end, !dbg !5066

if.else9:                                         ; preds = %if.else
  store i32 4, i32* %data_size, align 4, !dbg !5067
  br label %if.end

if.end:                                           ; preds = %if.else9, %if.then8
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then3
  %9 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5068
  %type_data11 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %9, i32 0, i32 1, !dbg !5069
  %10 = load i8*, i8** %type_data11, align 8, !dbg !5069
  %11 = load i32, i32* %data_size, align 4, !dbg !5070
  %12 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5071
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %12, i32 0, i32 4, !dbg !5072
  %13 = load i32, i32* %total_points, align 8, !dbg !5072
  %mul = mul i32 %11, %13, !dbg !5073
  %conv12 = zext i32 %mul to i64, !dbg !5070
  call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %conv12, i1 false), !dbg !5074
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5075
  %type13 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 11, !dbg !5077
  %15 = load i16, i16* %type13, align 2, !dbg !5077
  %conv14 = sext i16 %15 to i32, !dbg !5075
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !5078
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !5079

if.then17:                                        ; preds = %if.end10
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5080
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5081
  call void @dynamicPaint_setInitialColor(%struct.Scene* %16, %struct.DynamicPaintSurface* %17), !dbg !5082
  br label %if.end18, !dbg !5082

if.end18:                                         ; preds = %if.then17, %if.end10
  %18 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5083
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %18, i32 0, i32 3, !dbg !5085
  %19 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !5085
  %tobool19 = icmp ne %struct.PaintBakeData* %19, null, !dbg !5083
  br i1 %tobool19, label %if.then20, label %if.end22, !dbg !5086

if.then20:                                        ; preds = %if.end18
  %20 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5087
  %bData21 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %20, i32 0, i32 3, !dbg !5088
  %21 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData21, align 8, !dbg !5088
  %clear = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %21, i32 0, i32 13, !dbg !5089
  store i32 1, i32* %clear, align 8, !dbg !5090
  br label %if.end22, !dbg !5087

if.end22:                                         ; preds = %if.then20, %if.end18
  br label %if.end23, !dbg !5091

if.end23:                                         ; preds = %if.end22, %land.lhs.true, %entry
  ret void, !dbg !5092
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_setInitialColor(%struct.Scene* %scene, %struct.DynamicPaintSurface* %surface) #0 !dbg !5093 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %pPoint = alloca %struct.PaintPoint*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %i = alloca i32, align 4
  %scene_color_manage = alloca i8, align 1
  %tex = alloca %struct.Tex*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %mface = alloca %struct.MFace*, align 8
  %numOfFaces = alloca i32, align 4
  %uvname = alloca [64 x i8], align 16
  %pool = alloca %struct.ImagePool*, align 8
  %numOfVert = alloca i32, align 4
  %uv = alloca [3 x float], align 4
  %j = alloca i32, align 4
  %texres = alloca %struct.TexResult, align 8
  %vert = alloca i32*, align 8
  %f_data = alloca %struct.ImgSeqFormatData*, align 8
  %samples = alloca i32, align 4
  %uv107 = alloca [9 x float], align 16
  %uv_final = alloca [3 x float], align 4
  %j108 = alloca i32, align 4
  %texres109 = alloca %struct.TexResult, align 8
  %v = alloca i32, align 4
  %mloop = alloca %struct.MLoop*, align 8
  %numOfLoops = alloca i32, align 4
  %col = alloca %struct.MCol*, align 8
  %f_data244 = alloca %struct.ImgSeqFormatData*, align 8
  %samples246 = alloca i32, align 4
  %col251 = alloca %struct.MCol*, align 8
  %face_ind = alloca i32, align 4
  %colors = alloca [3 x [4 x float]], align 16
  %final_color = alloca [4 x float], align 16
  %j268 = alloca i32, align 4
  %v273 = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5094, metadata !DIExpression()), !dbg !5095
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5096, metadata !DIExpression()), !dbg !5097
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !5098, metadata !DIExpression()), !dbg !5099
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5100
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !5101
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !5101
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !5099
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !5102, metadata !DIExpression()), !dbg !5103
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5104
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 1, !dbg !5105
  %3 = load i8*, i8** %type_data, align 8, !dbg !5105
  %4 = bitcast i8* %3 to %struct.PaintPoint*, !dbg !5106
  store %struct.PaintPoint* %4, %struct.PaintPoint** %pPoint, align 8, !dbg !5103
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !5107, metadata !DIExpression()), !dbg !5108
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5109
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 2, !dbg !5110
  %6 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !5110
  %dm1 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %6, i32 0, i32 1, !dbg !5111
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm1, align 8, !dbg !5111
  store %struct.DerivedMesh* %7, %struct.DerivedMesh** %dm, align 8, !dbg !5108
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5112, metadata !DIExpression()), !dbg !5113
  call void @llvm.dbg.declare(metadata i8* %scene_color_manage, metadata !5114, metadata !DIExpression()), !dbg !5115
  %8 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5116
  %call = call zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene* %8), !dbg !5117
  store i8 %call, i8* %scene_color_manage, align 1, !dbg !5115
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5118
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 11, !dbg !5120
  %10 = load i16, i16* %type, align 2, !dbg !5120
  %conv = sext i16 %10 to i32, !dbg !5118
  %cmp = icmp ne i32 %conv, 0, !dbg !5121
  br i1 %cmp, label %if.then, label %if.end, !dbg !5122

if.then:                                          ; preds = %entry
  br label %if.end361, !dbg !5123

if.end:                                           ; preds = %entry
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5124
  %init_color_type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 16, !dbg !5126
  %12 = load i16, i16* %init_color_type, align 8, !dbg !5126
  %conv3 = sext i16 %12 to i32, !dbg !5124
  %cmp4 = icmp eq i32 %conv3, 0, !dbg !5127
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !5128

if.then6:                                         ; preds = %if.end
  br label %if.end361, !dbg !5129

if.else:                                          ; preds = %if.end
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5130
  %init_color_type7 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 16, !dbg !5132
  %14 = load i16, i16* %init_color_type7, align 8, !dbg !5132
  %conv8 = sext i16 %14 to i32, !dbg !5130
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !5133
  br i1 %cmp9, label %if.then11, label %if.else19, !dbg !5134

if.then11:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !5135
  br label %for.cond, !dbg !5138

for.cond:                                         ; preds = %for.inc, %if.then11
  %15 = load i32, i32* %i, align 4, !dbg !5139
  %16 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5141
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %16, i32 0, i32 4, !dbg !5142
  %17 = load i32, i32* %total_points, align 8, !dbg !5142
  %cmp12 = icmp slt i32 %15, %17, !dbg !5143
  br i1 %cmp12, label %for.body, label %for.end, !dbg !5144

for.body:                                         ; preds = %for.cond
  %18 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5145
  %19 = load i32, i32* %i, align 4, !dbg !5147
  %idxprom = sext i32 %19 to i64, !dbg !5145
  %arrayidx = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %18, i64 %idxprom, !dbg !5145
  %color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx, i32 0, i32 4, !dbg !5148
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !5145
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5149
  %init_color = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 25, !dbg !5150
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %init_color, i64 0, i64 0, !dbg !5149
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay14), !dbg !5151
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5152
  %init_color15 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 25, !dbg !5153
  %arrayidx16 = getelementptr inbounds [4 x float], [4 x float]* %init_color15, i64 0, i64 3, !dbg !5152
  %22 = load float, float* %arrayidx16, align 4, !dbg !5152
  %23 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5154
  %24 = load i32, i32* %i, align 4, !dbg !5155
  %idxprom17 = sext i32 %24 to i64, !dbg !5154
  %arrayidx18 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %23, i64 %idxprom17, !dbg !5154
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx18, i32 0, i32 5, !dbg !5156
  store float %22, float* %alpha, align 4, !dbg !5157
  br label %for.inc, !dbg !5158

for.inc:                                          ; preds = %for.body
  %25 = load i32, i32* %i, align 4, !dbg !5159
  %inc = add nsw i32 %25, 1, !dbg !5159
  store i32 %inc, i32* %i, align 4, !dbg !5159
  br label %for.cond, !dbg !5160, !llvm.loop !5161

for.end:                                          ; preds = %for.cond
  br label %if.end360, !dbg !5163

if.else19:                                        ; preds = %if.else
  %26 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5164
  %init_color_type20 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %26, i32 0, i32 16, !dbg !5166
  %27 = load i16, i16* %init_color_type20, align 8, !dbg !5166
  %conv21 = sext i16 %27 to i32, !dbg !5164
  %cmp22 = icmp eq i32 %conv21, 2, !dbg !5167
  br i1 %cmp22, label %if.then24, label %if.else169, !dbg !5168

if.then24:                                        ; preds = %if.else19
  call void @llvm.dbg.declare(metadata %struct.Tex** %tex, metadata !5169, metadata !DIExpression()), !dbg !5173
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5174
  %init_texture = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %28, i32 0, i32 26, !dbg !5175
  %29 = load %struct.Tex*, %struct.Tex** %init_texture, align 8, !dbg !5175
  store %struct.Tex* %29, %struct.Tex** %tex, align 8, !dbg !5173
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !5176, metadata !DIExpression()), !dbg !5179
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !5180, metadata !DIExpression()), !dbg !5183
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5184
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %30, i32 0, i32 33, !dbg !5185
  %31 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !5185
  %32 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5186
  %call25 = call %struct.MFace* %31(%struct.DerivedMesh* %32), !dbg !5184
  store %struct.MFace* %call25, %struct.MFace** %mface, align 8, !dbg !5183
  call void @llvm.dbg.declare(metadata i32* %numOfFaces, metadata !5187, metadata !DIExpression()), !dbg !5188
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5189
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 25, !dbg !5190
  %34 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !5190
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5191
  %call26 = call i32 %34(%struct.DerivedMesh* %35), !dbg !5189
  store i32 %call26, i32* %numOfFaces, align 4, !dbg !5188
  call void @llvm.dbg.declare(metadata [64 x i8]* %uvname, metadata !5192, metadata !DIExpression()), !dbg !5193
  %36 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5194
  %tobool = icmp ne %struct.Tex* %36, null, !dbg !5194
  br i1 %tobool, label %if.end28, label %if.then27, !dbg !5196

if.then27:                                        ; preds = %if.then24
  br label %if.end361, !dbg !5197

if.end28:                                         ; preds = %if.then24
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5198
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %37, i32 0, i32 2, !dbg !5199
  %38 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5200
  %init_layername = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %38, i32 0, i32 27, !dbg !5201
  %arraydecay29 = getelementptr inbounds [64 x i8], [64 x i8]* %init_layername, i64 0, i64 0, !dbg !5200
  %arraydecay30 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !5202
  call void @CustomData_validate_layer_name(%struct.CustomData* %faceData, i32 5, i8* %arraydecay29, i8* %arraydecay30), !dbg !5203
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5204
  %faceData31 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 2, !dbg !5205
  %arraydecay32 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !5206
  %call33 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData31, i32 5, i8* %arraydecay32), !dbg !5207
  %40 = bitcast i8* %call33 to %struct.MTFace*, !dbg !5207
  store %struct.MTFace* %40, %struct.MTFace** %tface, align 8, !dbg !5208
  %41 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !5209
  %tobool34 = icmp ne %struct.MTFace* %41, null, !dbg !5209
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !5211

if.then35:                                        ; preds = %if.end28
  br label %if.end361, !dbg !5212

if.end36:                                         ; preds = %if.end28
  %42 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5213
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %42, i32 0, i32 10, !dbg !5215
  %43 = load i16, i16* %format, align 4, !dbg !5215
  %conv37 = sext i16 %43 to i32, !dbg !5213
  %cmp38 = icmp eq i32 %conv37, 1, !dbg !5216
  br i1 %cmp38, label %if.then40, label %if.else94, !dbg !5217

if.then40:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.ImagePool** %pool, metadata !5218, metadata !DIExpression()), !dbg !5223
  %call41 = call %struct.ImagePool* @BKE_image_pool_new(), !dbg !5224
  store %struct.ImagePool* %call41, %struct.ImagePool** %pool, align 8, !dbg !5223
  store i32 0, i32* %i, align 4, !dbg !5225
  br label %for.cond42, !dbg !5227

for.cond42:                                       ; preds = %for.inc91, %if.then40
  %44 = load i32, i32* %i, align 4, !dbg !5228
  %45 = load i32, i32* %numOfFaces, align 4, !dbg !5230
  %cmp43 = icmp slt i32 %44, %45, !dbg !5231
  br i1 %cmp43, label %for.body45, label %for.end93, !dbg !5232

for.body45:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %numOfVert, metadata !5233, metadata !DIExpression()), !dbg !5235
  %46 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5236
  %47 = load i32, i32* %i, align 4, !dbg !5237
  %idxprom46 = sext i32 %47 to i64, !dbg !5236
  %arrayidx47 = getelementptr inbounds %struct.MFace, %struct.MFace* %46, i64 %idxprom46, !dbg !5236
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx47, i32 0, i32 3, !dbg !5238
  %48 = load i32, i32* %v4, align 4, !dbg !5238
  %tobool48 = icmp ne i32 %48, 0, !dbg !5239
  %49 = zext i1 %tobool48 to i64, !dbg !5239
  %cond = select i1 %tobool48, i32 4, i32 3, !dbg !5239
  store i32 %cond, i32* %numOfVert, align 4, !dbg !5235
  call void @llvm.dbg.declare(metadata [3 x float]* %uv, metadata !5240, metadata !DIExpression()), !dbg !5241
  %50 = bitcast [3 x float]* %uv to i8*, !dbg !5241
  call void @llvm.memset.p0i8.i64(i8* align 4 %50, i8 0, i64 12, i1 false), !dbg !5241
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5242, metadata !DIExpression()), !dbg !5243
  store i32 0, i32* %j, align 4, !dbg !5244
  br label %for.cond49, !dbg !5246

for.cond49:                                       ; preds = %for.inc88, %for.body45
  %51 = load i32, i32* %j, align 4, !dbg !5247
  %52 = load i32, i32* %numOfVert, align 4, !dbg !5249
  %cmp50 = icmp slt i32 %51, %52, !dbg !5250
  br i1 %cmp50, label %for.body52, label %for.end90, !dbg !5251

for.body52:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres, metadata !5252, metadata !DIExpression()), !dbg !5265
  %53 = bitcast %struct.TexResult* %texres to i8*, !dbg !5265
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false), !dbg !5265
  call void @llvm.dbg.declare(metadata i32** %vert, metadata !5266, metadata !DIExpression()), !dbg !5267
  %54 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !5268
  %55 = load i32, i32* %i, align 4, !dbg !5269
  %idxprom53 = sext i32 %55 to i64, !dbg !5268
  %arrayidx54 = getelementptr inbounds %struct.MFace, %struct.MFace* %54, i64 %idxprom53, !dbg !5268
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx54, i32 0, i32 0, !dbg !5270
  %56 = load i32, i32* %j, align 4, !dbg !5271
  %idx.ext = sext i32 %56 to i64, !dbg !5272
  %add.ptr = getelementptr inbounds i32, i32* %v1, i64 %idx.ext, !dbg !5272
  store i32* %add.ptr, i32** %vert, align 8, !dbg !5267
  %57 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !5273
  %58 = load i32, i32* %i, align 4, !dbg !5274
  %idxprom55 = sext i32 %58 to i64, !dbg !5273
  %arrayidx56 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %57, i64 %idxprom55, !dbg !5273
  %uv57 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx56, i32 0, i32 0, !dbg !5275
  %59 = load i32, i32* %j, align 4, !dbg !5276
  %idxprom58 = sext i32 %59 to i64, !dbg !5273
  %arrayidx59 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv57, i64 0, i64 %idxprom58, !dbg !5273
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx59, i64 0, i64 0, !dbg !5273
  %60 = load float, float* %arrayidx60, align 8, !dbg !5273
  %mul = fmul float %60, 2.000000e+00, !dbg !5277
  %sub = fsub float %mul, 1.000000e+00, !dbg !5278
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !5279
  store float %sub, float* %arrayidx61, align 4, !dbg !5280
  %61 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !5281
  %62 = load i32, i32* %i, align 4, !dbg !5282
  %idxprom62 = sext i32 %62 to i64, !dbg !5281
  %arrayidx63 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %61, i64 %idxprom62, !dbg !5281
  %uv64 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx63, i32 0, i32 0, !dbg !5283
  %63 = load i32, i32* %j, align 4, !dbg !5284
  %idxprom65 = sext i32 %63 to i64, !dbg !5281
  %arrayidx66 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv64, i64 0, i64 %idxprom65, !dbg !5281
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx66, i64 0, i64 1, !dbg !5281
  %64 = load float, float* %arrayidx67, align 4, !dbg !5281
  %mul68 = fmul float %64, 2.000000e+00, !dbg !5285
  %sub69 = fsub float %mul68, 1.000000e+00, !dbg !5286
  %arrayidx70 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 1, !dbg !5287
  store float %sub69, float* %arrayidx70, align 4, !dbg !5288
  %65 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5289
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !5290
  %66 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !5291
  %67 = load i8, i8* %scene_color_manage, align 1, !dbg !5292
  %call72 = call i32 @multitex_ext_safe(%struct.Tex* %65, float* %arraydecay71, %struct.TexResult* %texres, %struct.ImagePool* %66, i8 zeroext %67), !dbg !5293
  %tin = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5294
  %68 = load float, float* %tin, align 8, !dbg !5294
  %69 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5296
  %70 = load i32*, i32** %vert, align 8, !dbg !5297
  %71 = load i32, i32* %70, align 4, !dbg !5298
  %idxprom73 = zext i32 %71 to i64, !dbg !5296
  %arrayidx74 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %69, i64 %idxprom73, !dbg !5296
  %alpha75 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx74, i32 0, i32 5, !dbg !5299
  %72 = load float, float* %alpha75, align 4, !dbg !5299
  %cmp76 = fcmp ogt float %68, %72, !dbg !5300
  br i1 %cmp76, label %if.then78, label %if.end87, !dbg !5301

if.then78:                                        ; preds = %for.body52
  %73 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5302
  %74 = load i32*, i32** %vert, align 8, !dbg !5304
  %75 = load i32, i32* %74, align 4, !dbg !5305
  %idxprom79 = zext i32 %75 to i64, !dbg !5302
  %arrayidx80 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %73, i64 %idxprom79, !dbg !5302
  %color81 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx80, i32 0, i32 4, !dbg !5306
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %color81, i64 0, i64 0, !dbg !5302
  %tr = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 1, !dbg !5307
  call void @copy_v3_v3(float* %arraydecay82, float* %tr), !dbg !5308
  %tin83 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres, i32 0, i32 0, !dbg !5309
  %76 = load float, float* %tin83, align 8, !dbg !5309
  %77 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5310
  %78 = load i32*, i32** %vert, align 8, !dbg !5311
  %79 = load i32, i32* %78, align 4, !dbg !5312
  %idxprom84 = zext i32 %79 to i64, !dbg !5310
  %arrayidx85 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %77, i64 %idxprom84, !dbg !5310
  %alpha86 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx85, i32 0, i32 5, !dbg !5313
  store float %76, float* %alpha86, align 4, !dbg !5314
  br label %if.end87, !dbg !5315

if.end87:                                         ; preds = %if.then78, %for.body52
  br label %for.inc88, !dbg !5316

for.inc88:                                        ; preds = %if.end87
  %80 = load i32, i32* %j, align 4, !dbg !5317
  %inc89 = add nsw i32 %80, 1, !dbg !5317
  store i32 %inc89, i32* %j, align 4, !dbg !5317
  br label %for.cond49, !dbg !5318, !llvm.loop !5319

for.end90:                                        ; preds = %for.cond49
  br label %for.inc91, !dbg !5321

for.inc91:                                        ; preds = %for.end90
  %81 = load i32, i32* %i, align 4, !dbg !5322
  %inc92 = add nsw i32 %81, 1, !dbg !5322
  store i32 %inc92, i32* %i, align 4, !dbg !5322
  br label %for.cond42, !dbg !5323, !llvm.loop !5324

for.end93:                                        ; preds = %for.cond42
  %82 = load %struct.ImagePool*, %struct.ImagePool** %pool, align 8, !dbg !5326
  call void @BKE_image_pool_free(%struct.ImagePool* %82), !dbg !5327
  br label %if.end168, !dbg !5328

if.else94:                                        ; preds = %if.end36
  %83 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5329
  %format95 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %83, i32 0, i32 10, !dbg !5331
  %84 = load i16, i16* %format95, align 4, !dbg !5331
  %conv96 = sext i16 %84 to i32, !dbg !5329
  %cmp97 = icmp eq i32 %conv96, 2, !dbg !5332
  br i1 %cmp97, label %if.then99, label %if.end167, !dbg !5333

if.then99:                                        ; preds = %if.else94
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data, metadata !5334, metadata !DIExpression()), !dbg !5336
  %85 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5337
  %format_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %85, i32 0, i32 0, !dbg !5338
  %86 = load i8*, i8** %format_data, align 8, !dbg !5338
  %87 = bitcast i8* %86 to %struct.ImgSeqFormatData*, !dbg !5339
  store %struct.ImgSeqFormatData* %87, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !5336
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !5340, metadata !DIExpression()), !dbg !5341
  %88 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5342
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %88, i32 0, i32 18, !dbg !5343
  %89 = load i32, i32* %flags, align 4, !dbg !5343
  %and = and i32 %89, 2, !dbg !5344
  %tobool100 = icmp ne i32 %and, 0, !dbg !5345
  %90 = zext i1 %tobool100 to i64, !dbg !5345
  %cond101 = select i1 %tobool100, i32 5, i32 1, !dbg !5345
  store i32 %cond101, i32* %samples, align 4, !dbg !5341
  store i32 0, i32* %i, align 4, !dbg !5346
  br label %for.cond102, !dbg !5348

for.cond102:                                      ; preds = %for.inc164, %if.then99
  %91 = load i32, i32* %i, align 4, !dbg !5349
  %92 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5351
  %total_points103 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %92, i32 0, i32 4, !dbg !5352
  %93 = load i32, i32* %total_points103, align 8, !dbg !5352
  %cmp104 = icmp slt i32 %91, %93, !dbg !5353
  br i1 %cmp104, label %for.body106, label %for.end166, !dbg !5354

for.body106:                                      ; preds = %for.cond102
  call void @llvm.dbg.declare(metadata [9 x float]* %uv107, metadata !5355, metadata !DIExpression()), !dbg !5360
  %94 = bitcast [9 x float]* %uv107 to i8*, !dbg !5360
  call void @llvm.memset.p0i8.i64(i8* align 16 %94, i8 0, i64 36, i1 false), !dbg !5360
  call void @llvm.dbg.declare(metadata [3 x float]* %uv_final, metadata !5361, metadata !DIExpression()), !dbg !5362
  %95 = bitcast [3 x float]* %uv_final to i8*, !dbg !5362
  call void @llvm.memset.p0i8.i64(i8* align 4 %95, i8 0, i64 12, i1 false), !dbg !5362
  call void @llvm.dbg.declare(metadata i32* %j108, metadata !5363, metadata !DIExpression()), !dbg !5364
  call void @llvm.dbg.declare(metadata %struct.TexResult* %texres109, metadata !5365, metadata !DIExpression()), !dbg !5366
  %96 = bitcast %struct.TexResult* %texres109 to i8*, !dbg !5366
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 32, i1 false), !dbg !5366
  store i32 0, i32* %j108, align 4, !dbg !5367
  br label %for.cond110, !dbg !5369

for.cond110:                                      ; preds = %for.inc133, %for.body106
  %97 = load i32, i32* %j108, align 4, !dbg !5370
  %cmp111 = icmp slt i32 %97, 3, !dbg !5372
  br i1 %cmp111, label %for.body113, label %for.end135, !dbg !5373

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata i32* %v, metadata !5374, metadata !DIExpression()), !dbg !5376
  %98 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !5377
  %uv_p = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %98, i32 0, i32 0, !dbg !5378
  %99 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p, align 8, !dbg !5378
  %100 = load i32, i32* %i, align 4, !dbg !5379
  %idxprom114 = sext i32 %100 to i64, !dbg !5377
  %arrayidx115 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %99, i64 %idxprom114, !dbg !5377
  %quad = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx115, i32 0, i32 6, !dbg !5380
  %101 = load i16, i16* %quad, align 4, !dbg !5380
  %conv116 = sext i16 %101 to i32, !dbg !5377
  %tobool117 = icmp ne i32 %conv116, 0, !dbg !5377
  br i1 %tobool117, label %land.lhs.true, label %cond.false, !dbg !5381

land.lhs.true:                                    ; preds = %for.body113
  %102 = load i32, i32* %j108, align 4, !dbg !5382
  %cmp118 = icmp sgt i32 %102, 0, !dbg !5383
  br i1 %cmp118, label %cond.true, label %cond.false, !dbg !5384

cond.true:                                        ; preds = %land.lhs.true
  %103 = load i32, i32* %j108, align 4, !dbg !5385
  %add = add nsw i32 %103, 1, !dbg !5386
  br label %cond.end, !dbg !5384

cond.false:                                       ; preds = %land.lhs.true, %for.body113
  %104 = load i32, i32* %j108, align 4, !dbg !5387
  br label %cond.end, !dbg !5384

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond120 = phi i32 [ %add, %cond.true ], [ %104, %cond.false ], !dbg !5384
  store i32 %cond120, i32* %v, align 4, !dbg !5376
  %105 = load i32, i32* %j108, align 4, !dbg !5388
  %mul121 = mul nsw i32 %105, 3, !dbg !5389
  %idxprom122 = sext i32 %mul121 to i64, !dbg !5390
  %arrayidx123 = getelementptr inbounds [9 x float], [9 x float]* %uv107, i64 0, i64 %idxprom122, !dbg !5390
  %106 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !5391
  %107 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !5392
  %uv_p124 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %107, i32 0, i32 0, !dbg !5393
  %108 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p124, align 8, !dbg !5393
  %109 = load i32, i32* %i, align 4, !dbg !5394
  %idxprom125 = sext i32 %109 to i64, !dbg !5392
  %arrayidx126 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %108, i64 %idxprom125, !dbg !5392
  %face_index = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx126, i32 0, i32 0, !dbg !5395
  %110 = load i32, i32* %face_index, align 4, !dbg !5395
  %idxprom127 = zext i32 %110 to i64, !dbg !5391
  %arrayidx128 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %106, i64 %idxprom127, !dbg !5391
  %uv129 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx128, i32 0, i32 0, !dbg !5396
  %111 = load i32, i32* %v, align 4, !dbg !5397
  %idxprom130 = sext i32 %111 to i64, !dbg !5391
  %arrayidx131 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv129, i64 0, i64 %idxprom130, !dbg !5391
  %arraydecay132 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx131, i64 0, i64 0, !dbg !5391
  call void @copy_v2_v2(float* %arrayidx123, float* %arraydecay132), !dbg !5398
  br label %for.inc133, !dbg !5399

for.inc133:                                       ; preds = %cond.end
  %112 = load i32, i32* %j108, align 4, !dbg !5400
  %inc134 = add nsw i32 %112, 1, !dbg !5400
  store i32 %inc134, i32* %j108, align 4, !dbg !5400
  br label %for.cond110, !dbg !5401, !llvm.loop !5402

for.end135:                                       ; preds = %for.cond110
  %arraydecay136 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 0, !dbg !5404
  %arrayidx137 = getelementptr inbounds [9 x float], [9 x float]* %uv107, i64 0, i64 0, !dbg !5405
  %arrayidx138 = getelementptr inbounds [9 x float], [9 x float]* %uv107, i64 0, i64 3, !dbg !5406
  %arrayidx139 = getelementptr inbounds [9 x float], [9 x float]* %uv107, i64 0, i64 6, !dbg !5407
  %113 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !5408
  %barycentricWeights = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %113, i32 0, i32 1, !dbg !5409
  %114 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights, align 8, !dbg !5409
  %115 = load i32, i32* %i, align 4, !dbg !5410
  %116 = load i32, i32* %samples, align 4, !dbg !5411
  %mul140 = mul nsw i32 %115, %116, !dbg !5412
  %idxprom141 = sext i32 %mul140 to i64, !dbg !5408
  %arrayidx142 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %114, i64 %idxprom141, !dbg !5408
  %v143 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx142, i32 0, i32 0, !dbg !5413
  %arraydecay144 = getelementptr inbounds [3 x float], [3 x float]* %v143, i64 0, i64 0, !dbg !5408
  call void @interp_v3_v3v3v3(float* %arraydecay136, float* %arrayidx137, float* %arrayidx138, float* %arrayidx139, float* %arraydecay144), !dbg !5414
  %arrayidx145 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 0, !dbg !5415
  %117 = load float, float* %arrayidx145, align 4, !dbg !5415
  %mul146 = fmul float %117, 2.000000e+00, !dbg !5416
  %sub147 = fsub float %mul146, 1.000000e+00, !dbg !5417
  %arrayidx148 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 0, !dbg !5418
  store float %sub147, float* %arrayidx148, align 4, !dbg !5419
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 1, !dbg !5420
  %118 = load float, float* %arrayidx149, align 4, !dbg !5420
  %mul150 = fmul float %118, 2.000000e+00, !dbg !5421
  %sub151 = fsub float %mul150, 1.000000e+00, !dbg !5422
  %arrayidx152 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 1, !dbg !5423
  store float %sub151, float* %arrayidx152, align 4, !dbg !5424
  %119 = load %struct.Tex*, %struct.Tex** %tex, align 8, !dbg !5425
  %arraydecay153 = getelementptr inbounds [3 x float], [3 x float]* %uv_final, i64 0, i64 0, !dbg !5426
  %120 = load i8, i8* %scene_color_manage, align 1, !dbg !5427
  %call154 = call i32 @multitex_ext_safe(%struct.Tex* %119, float* %arraydecay153, %struct.TexResult* %texres109, %struct.ImagePool* null, i8 zeroext %120), !dbg !5428
  %121 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5429
  %122 = load i32, i32* %i, align 4, !dbg !5430
  %idxprom155 = sext i32 %122 to i64, !dbg !5429
  %arrayidx156 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %121, i64 %idxprom155, !dbg !5429
  %color157 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx156, i32 0, i32 4, !dbg !5431
  %arraydecay158 = getelementptr inbounds [3 x float], [3 x float]* %color157, i64 0, i64 0, !dbg !5429
  %tr159 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres109, i32 0, i32 1, !dbg !5432
  call void @copy_v3_v3(float* %arraydecay158, float* %tr159), !dbg !5433
  %tin160 = getelementptr inbounds %struct.TexResult, %struct.TexResult* %texres109, i32 0, i32 0, !dbg !5434
  %123 = load float, float* %tin160, align 8, !dbg !5434
  %124 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5435
  %125 = load i32, i32* %i, align 4, !dbg !5436
  %idxprom161 = sext i32 %125 to i64, !dbg !5435
  %arrayidx162 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %124, i64 %idxprom161, !dbg !5435
  %alpha163 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx162, i32 0, i32 5, !dbg !5437
  store float %123, float* %alpha163, align 4, !dbg !5438
  br label %for.inc164, !dbg !5439

for.inc164:                                       ; preds = %for.end135
  %126 = load i32, i32* %i, align 4, !dbg !5440
  %inc165 = add nsw i32 %126, 1, !dbg !5440
  store i32 %inc165, i32* %i, align 4, !dbg !5440
  br label %for.cond102, !dbg !5441, !llvm.loop !5442

for.end166:                                       ; preds = %for.cond102
  br label %if.end167, !dbg !5444

if.end167:                                        ; preds = %for.end166, %if.else94
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %for.end93
  br label %if.end359, !dbg !5445

if.else169:                                       ; preds = %if.else19
  %127 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5446
  %init_color_type170 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %127, i32 0, i32 16, !dbg !5448
  %128 = load i16, i16* %init_color_type170, align 8, !dbg !5448
  %conv171 = sext i16 %128 to i32, !dbg !5446
  %cmp172 = icmp eq i32 %conv171, 3, !dbg !5449
  br i1 %cmp172, label %if.then174, label %if.end358, !dbg !5450

if.then174:                                       ; preds = %if.else169
  %129 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5451
  %format175 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %129, i32 0, i32 10, !dbg !5454
  %130 = load i16, i16* %format175, align 4, !dbg !5454
  %conv176 = sext i16 %130 to i32, !dbg !5451
  %cmp177 = icmp eq i32 %conv176, 1, !dbg !5455
  br i1 %cmp177, label %if.then179, label %if.else238, !dbg !5456

if.then179:                                       ; preds = %if.then174
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !5457, metadata !DIExpression()), !dbg !5461
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5462
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %131, i32 0, i32 34, !dbg !5463
  %132 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !5463
  %133 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5464
  %call180 = call %struct.MLoop* %132(%struct.DerivedMesh* %133), !dbg !5462
  store %struct.MLoop* %call180, %struct.MLoop** %mloop, align 8, !dbg !5461
  call void @llvm.dbg.declare(metadata i32* %numOfLoops, metadata !5465, metadata !DIExpression()), !dbg !5466
  %134 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5467
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %134, i32 0, i32 26, !dbg !5468
  %135 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !5468
  %136 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5469
  %call181 = call i32 %135(%struct.DerivedMesh* %136), !dbg !5467
  store i32 %call181, i32* %numOfLoops, align 4, !dbg !5466
  call void @llvm.dbg.declare(metadata %struct.MCol** %col, metadata !5470, metadata !DIExpression()), !dbg !5473
  %137 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5474
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %137, i32 0, i32 3, !dbg !5475
  %138 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5476
  %init_layername182 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %138, i32 0, i32 27, !dbg !5477
  %arraydecay183 = getelementptr inbounds [64 x i8], [64 x i8]* %init_layername182, i64 0, i64 0, !dbg !5476
  %call184 = call i8* @CustomData_get_layer_named(%struct.CustomData* %loopData, i32 17, i8* %arraydecay183), !dbg !5478
  %139 = bitcast i8* %call184 to %struct.MCol*, !dbg !5478
  store %struct.MCol* %139, %struct.MCol** %col, align 8, !dbg !5473
  %140 = load %struct.MCol*, %struct.MCol** %col, align 8, !dbg !5479
  %tobool185 = icmp ne %struct.MCol* %140, null, !dbg !5479
  br i1 %tobool185, label %if.end187, label %if.then186, !dbg !5481

if.then186:                                       ; preds = %if.then179
  br label %if.end361, !dbg !5482

if.end187:                                        ; preds = %if.then179
  store i32 0, i32* %i, align 4, !dbg !5483
  br label %for.cond188, !dbg !5485

for.cond188:                                      ; preds = %for.inc235, %if.end187
  %141 = load i32, i32* %i, align 4, !dbg !5486
  %142 = load i32, i32* %numOfLoops, align 4, !dbg !5488
  %cmp189 = icmp slt i32 %141, %142, !dbg !5489
  br i1 %cmp189, label %for.body191, label %for.end237, !dbg !5490

for.body191:                                      ; preds = %for.cond188
  %143 = load %struct.MCol*, %struct.MCol** %col, align 8, !dbg !5491
  %144 = load i32, i32* %i, align 4, !dbg !5493
  %idxprom192 = sext i32 %144 to i64, !dbg !5491
  %arrayidx193 = getelementptr inbounds %struct.MCol, %struct.MCol* %143, i64 %idxprom192, !dbg !5491
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx193, i32 0, i32 3, !dbg !5494
  %145 = load i8, i8* %b, align 1, !dbg !5494
  %conv194 = uitofp i8 %145 to float, !dbg !5495
  %mul195 = fmul float 0x3F70101020000000, %conv194, !dbg !5496
  %146 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5497
  %147 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5498
  %148 = load i32, i32* %i, align 4, !dbg !5499
  %idxprom196 = sext i32 %148 to i64, !dbg !5498
  %arrayidx197 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %147, i64 %idxprom196, !dbg !5498
  %v198 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx197, i32 0, i32 0, !dbg !5500
  %149 = load i32, i32* %v198, align 4, !dbg !5500
  %idxprom199 = zext i32 %149 to i64, !dbg !5497
  %arrayidx200 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %146, i64 %idxprom199, !dbg !5497
  %color201 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx200, i32 0, i32 4, !dbg !5501
  %arrayidx202 = getelementptr inbounds [3 x float], [3 x float]* %color201, i64 0, i64 0, !dbg !5497
  store float %mul195, float* %arrayidx202, align 4, !dbg !5502
  %150 = load %struct.MCol*, %struct.MCol** %col, align 8, !dbg !5503
  %151 = load i32, i32* %i, align 4, !dbg !5504
  %idxprom203 = sext i32 %151 to i64, !dbg !5503
  %arrayidx204 = getelementptr inbounds %struct.MCol, %struct.MCol* %150, i64 %idxprom203, !dbg !5503
  %g = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx204, i32 0, i32 2, !dbg !5505
  %152 = load i8, i8* %g, align 1, !dbg !5505
  %conv205 = uitofp i8 %152 to float, !dbg !5506
  %mul206 = fmul float 0x3F70101020000000, %conv205, !dbg !5507
  %153 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5508
  %154 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5509
  %155 = load i32, i32* %i, align 4, !dbg !5510
  %idxprom207 = sext i32 %155 to i64, !dbg !5509
  %arrayidx208 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %154, i64 %idxprom207, !dbg !5509
  %v209 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx208, i32 0, i32 0, !dbg !5511
  %156 = load i32, i32* %v209, align 4, !dbg !5511
  %idxprom210 = zext i32 %156 to i64, !dbg !5508
  %arrayidx211 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %153, i64 %idxprom210, !dbg !5508
  %color212 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx211, i32 0, i32 4, !dbg !5512
  %arrayidx213 = getelementptr inbounds [3 x float], [3 x float]* %color212, i64 0, i64 1, !dbg !5508
  store float %mul206, float* %arrayidx213, align 4, !dbg !5513
  %157 = load %struct.MCol*, %struct.MCol** %col, align 8, !dbg !5514
  %158 = load i32, i32* %i, align 4, !dbg !5515
  %idxprom214 = sext i32 %158 to i64, !dbg !5514
  %arrayidx215 = getelementptr inbounds %struct.MCol, %struct.MCol* %157, i64 %idxprom214, !dbg !5514
  %r = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx215, i32 0, i32 1, !dbg !5516
  %159 = load i8, i8* %r, align 1, !dbg !5516
  %conv216 = uitofp i8 %159 to float, !dbg !5517
  %mul217 = fmul float 0x3F70101020000000, %conv216, !dbg !5518
  %160 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5519
  %161 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5520
  %162 = load i32, i32* %i, align 4, !dbg !5521
  %idxprom218 = sext i32 %162 to i64, !dbg !5520
  %arrayidx219 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %161, i64 %idxprom218, !dbg !5520
  %v220 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx219, i32 0, i32 0, !dbg !5522
  %163 = load i32, i32* %v220, align 4, !dbg !5522
  %idxprom221 = zext i32 %163 to i64, !dbg !5519
  %arrayidx222 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %160, i64 %idxprom221, !dbg !5519
  %color223 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx222, i32 0, i32 4, !dbg !5523
  %arrayidx224 = getelementptr inbounds [3 x float], [3 x float]* %color223, i64 0, i64 2, !dbg !5519
  store float %mul217, float* %arrayidx224, align 4, !dbg !5524
  %164 = load %struct.MCol*, %struct.MCol** %col, align 8, !dbg !5525
  %165 = load i32, i32* %i, align 4, !dbg !5526
  %idxprom225 = sext i32 %165 to i64, !dbg !5525
  %arrayidx226 = getelementptr inbounds %struct.MCol, %struct.MCol* %164, i64 %idxprom225, !dbg !5525
  %a = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx226, i32 0, i32 0, !dbg !5527
  %166 = load i8, i8* %a, align 1, !dbg !5527
  %conv227 = uitofp i8 %166 to float, !dbg !5528
  %mul228 = fmul float 0x3F70101020000000, %conv227, !dbg !5529
  %167 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5530
  %168 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !5531
  %169 = load i32, i32* %i, align 4, !dbg !5532
  %idxprom229 = sext i32 %169 to i64, !dbg !5531
  %arrayidx230 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %168, i64 %idxprom229, !dbg !5531
  %v231 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx230, i32 0, i32 0, !dbg !5533
  %170 = load i32, i32* %v231, align 4, !dbg !5533
  %idxprom232 = zext i32 %170 to i64, !dbg !5530
  %arrayidx233 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %167, i64 %idxprom232, !dbg !5530
  %alpha234 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx233, i32 0, i32 5, !dbg !5534
  store float %mul228, float* %alpha234, align 4, !dbg !5535
  br label %for.inc235, !dbg !5536

for.inc235:                                       ; preds = %for.body191
  %171 = load i32, i32* %i, align 4, !dbg !5537
  %inc236 = add nsw i32 %171, 1, !dbg !5537
  store i32 %inc236, i32* %i, align 4, !dbg !5537
  br label %for.cond188, !dbg !5538, !llvm.loop !5539

for.end237:                                       ; preds = %for.cond188
  br label %if.end357, !dbg !5541

if.else238:                                       ; preds = %if.then174
  %172 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5542
  %format239 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %172, i32 0, i32 10, !dbg !5544
  %173 = load i16, i16* %format239, align 4, !dbg !5544
  %conv240 = sext i16 %173 to i32, !dbg !5542
  %cmp241 = icmp eq i32 %conv240, 2, !dbg !5545
  br i1 %cmp241, label %if.then243, label %if.end356, !dbg !5546

if.then243:                                       ; preds = %if.else238
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data244, metadata !5547, metadata !DIExpression()), !dbg !5549
  %174 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5550
  %format_data245 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %174, i32 0, i32 0, !dbg !5551
  %175 = load i8*, i8** %format_data245, align 8, !dbg !5551
  %176 = bitcast i8* %175 to %struct.ImgSeqFormatData*, !dbg !5552
  store %struct.ImgSeqFormatData* %176, %struct.ImgSeqFormatData** %f_data244, align 8, !dbg !5549
  call void @llvm.dbg.declare(metadata i32* %samples246, metadata !5553, metadata !DIExpression()), !dbg !5554
  %177 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5555
  %flags247 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %177, i32 0, i32 18, !dbg !5556
  %178 = load i32, i32* %flags247, align 4, !dbg !5556
  %and248 = and i32 %178, 2, !dbg !5557
  %tobool249 = icmp ne i32 %and248, 0, !dbg !5558
  %179 = zext i1 %tobool249 to i64, !dbg !5558
  %cond250 = select i1 %tobool249, i32 5, i32 1, !dbg !5558
  store i32 %cond250, i32* %samples246, align 4, !dbg !5554
  call void @llvm.dbg.declare(metadata %struct.MCol** %col251, metadata !5559, metadata !DIExpression()), !dbg !5560
  %180 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5561
  %faceData252 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %180, i32 0, i32 2, !dbg !5562
  %181 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5563
  %init_layername253 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %181, i32 0, i32 27, !dbg !5564
  %arraydecay254 = getelementptr inbounds [64 x i8], [64 x i8]* %init_layername253, i64 0, i64 0, !dbg !5563
  %call255 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData252, i32 6, i8* %arraydecay254), !dbg !5565
  %182 = bitcast i8* %call255 to %struct.MCol*, !dbg !5565
  store %struct.MCol* %182, %struct.MCol** %col251, align 8, !dbg !5560
  %183 = load %struct.MCol*, %struct.MCol** %col251, align 8, !dbg !5566
  %tobool256 = icmp ne %struct.MCol* %183, null, !dbg !5566
  br i1 %tobool256, label %if.end258, label %if.then257, !dbg !5568

if.then257:                                       ; preds = %if.then243
  br label %if.end361, !dbg !5569

if.end258:                                        ; preds = %if.then243
  store i32 0, i32* %i, align 4, !dbg !5570
  br label %for.cond259, !dbg !5572

for.cond259:                                      ; preds = %for.inc353, %if.end258
  %184 = load i32, i32* %i, align 4, !dbg !5573
  %185 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5575
  %total_points260 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %185, i32 0, i32 4, !dbg !5576
  %186 = load i32, i32* %total_points260, align 8, !dbg !5576
  %cmp261 = icmp slt i32 %184, %186, !dbg !5577
  br i1 %cmp261, label %for.body263, label %for.end355, !dbg !5578

for.body263:                                      ; preds = %for.cond259
  call void @llvm.dbg.declare(metadata i32* %face_ind, metadata !5579, metadata !DIExpression()), !dbg !5581
  %187 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data244, align 8, !dbg !5582
  %uv_p264 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %187, i32 0, i32 0, !dbg !5583
  %188 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p264, align 8, !dbg !5583
  %189 = load i32, i32* %i, align 4, !dbg !5584
  %idxprom265 = sext i32 %189 to i64, !dbg !5582
  %arrayidx266 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %188, i64 %idxprom265, !dbg !5582
  %face_index267 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx266, i32 0, i32 0, !dbg !5585
  %190 = load i32, i32* %face_index267, align 4, !dbg !5585
  store i32 %190, i32* %face_ind, align 4, !dbg !5581
  call void @llvm.dbg.declare(metadata [3 x [4 x float]]* %colors, metadata !5586, metadata !DIExpression()), !dbg !5589
  %191 = bitcast [3 x [4 x float]]* %colors to i8*, !dbg !5589
  call void @llvm.memset.p0i8.i64(i8* align 16 %191, i8 0, i64 48, i1 false), !dbg !5589
  call void @llvm.dbg.declare(metadata [4 x float]* %final_color, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata i32* %j268, metadata !5592, metadata !DIExpression()), !dbg !5593
  store i32 0, i32* %j268, align 4, !dbg !5594
  br label %for.cond269, !dbg !5596

for.cond269:                                      ; preds = %for.inc328, %for.body263
  %192 = load i32, i32* %j268, align 4, !dbg !5597
  %cmp270 = icmp slt i32 %192, 3, !dbg !5599
  br i1 %cmp270, label %for.body272, label %for.end330, !dbg !5600

for.body272:                                      ; preds = %for.cond269
  call void @llvm.dbg.declare(metadata i32* %v273, metadata !5601, metadata !DIExpression()), !dbg !5603
  %193 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data244, align 8, !dbg !5604
  %uv_p274 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %193, i32 0, i32 0, !dbg !5605
  %194 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p274, align 8, !dbg !5605
  %195 = load i32, i32* %i, align 4, !dbg !5606
  %idxprom275 = sext i32 %195 to i64, !dbg !5604
  %arrayidx276 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %194, i64 %idxprom275, !dbg !5604
  %quad277 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx276, i32 0, i32 6, !dbg !5607
  %196 = load i16, i16* %quad277, align 4, !dbg !5607
  %conv278 = sext i16 %196 to i32, !dbg !5604
  %tobool279 = icmp ne i32 %conv278, 0, !dbg !5604
  br i1 %tobool279, label %land.lhs.true280, label %cond.false285, !dbg !5608

land.lhs.true280:                                 ; preds = %for.body272
  %197 = load i32, i32* %j268, align 4, !dbg !5609
  %cmp281 = icmp sgt i32 %197, 0, !dbg !5610
  br i1 %cmp281, label %cond.true283, label %cond.false285, !dbg !5611

cond.true283:                                     ; preds = %land.lhs.true280
  %198 = load i32, i32* %j268, align 4, !dbg !5612
  %add284 = add nsw i32 %198, 1, !dbg !5613
  br label %cond.end286, !dbg !5611

cond.false285:                                    ; preds = %land.lhs.true280, %for.body272
  %199 = load i32, i32* %j268, align 4, !dbg !5614
  br label %cond.end286, !dbg !5611

cond.end286:                                      ; preds = %cond.false285, %cond.true283
  %cond287 = phi i32 [ %add284, %cond.true283 ], [ %199, %cond.false285 ], !dbg !5611
  store i32 %cond287, i32* %v273, align 4, !dbg !5603
  %200 = load %struct.MCol*, %struct.MCol** %col251, align 8, !dbg !5615
  %201 = load i32, i32* %face_ind, align 4, !dbg !5616
  %mul288 = mul nsw i32 %201, 4, !dbg !5617
  %202 = load i32, i32* %v273, align 4, !dbg !5618
  %add289 = add nsw i32 %mul288, %202, !dbg !5619
  %idxprom290 = sext i32 %add289 to i64, !dbg !5615
  %arrayidx291 = getelementptr inbounds %struct.MCol, %struct.MCol* %200, i64 %idxprom290, !dbg !5615
  %b292 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx291, i32 0, i32 3, !dbg !5620
  %203 = load i8, i8* %b292, align 1, !dbg !5620
  %conv293 = uitofp i8 %203 to float, !dbg !5621
  %mul294 = fmul float 0x3F70101020000000, %conv293, !dbg !5622
  %204 = load i32, i32* %j268, align 4, !dbg !5623
  %idxprom295 = sext i32 %204 to i64, !dbg !5624
  %arrayidx296 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 %idxprom295, !dbg !5624
  %arrayidx297 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx296, i64 0, i64 0, !dbg !5624
  store float %mul294, float* %arrayidx297, align 16, !dbg !5625
  %205 = load %struct.MCol*, %struct.MCol** %col251, align 8, !dbg !5626
  %206 = load i32, i32* %face_ind, align 4, !dbg !5627
  %mul298 = mul nsw i32 %206, 4, !dbg !5628
  %207 = load i32, i32* %v273, align 4, !dbg !5629
  %add299 = add nsw i32 %mul298, %207, !dbg !5630
  %idxprom300 = sext i32 %add299 to i64, !dbg !5626
  %arrayidx301 = getelementptr inbounds %struct.MCol, %struct.MCol* %205, i64 %idxprom300, !dbg !5626
  %g302 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx301, i32 0, i32 2, !dbg !5631
  %208 = load i8, i8* %g302, align 1, !dbg !5631
  %conv303 = uitofp i8 %208 to float, !dbg !5632
  %mul304 = fmul float 0x3F70101020000000, %conv303, !dbg !5633
  %209 = load i32, i32* %j268, align 4, !dbg !5634
  %idxprom305 = sext i32 %209 to i64, !dbg !5635
  %arrayidx306 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 %idxprom305, !dbg !5635
  %arrayidx307 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx306, i64 0, i64 1, !dbg !5635
  store float %mul304, float* %arrayidx307, align 4, !dbg !5636
  %210 = load %struct.MCol*, %struct.MCol** %col251, align 8, !dbg !5637
  %211 = load i32, i32* %face_ind, align 4, !dbg !5638
  %mul308 = mul nsw i32 %211, 4, !dbg !5639
  %212 = load i32, i32* %v273, align 4, !dbg !5640
  %add309 = add nsw i32 %mul308, %212, !dbg !5641
  %idxprom310 = sext i32 %add309 to i64, !dbg !5637
  %arrayidx311 = getelementptr inbounds %struct.MCol, %struct.MCol* %210, i64 %idxprom310, !dbg !5637
  %r312 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx311, i32 0, i32 1, !dbg !5642
  %213 = load i8, i8* %r312, align 1, !dbg !5642
  %conv313 = uitofp i8 %213 to float, !dbg !5643
  %mul314 = fmul float 0x3F70101020000000, %conv313, !dbg !5644
  %214 = load i32, i32* %j268, align 4, !dbg !5645
  %idxprom315 = sext i32 %214 to i64, !dbg !5646
  %arrayidx316 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 %idxprom315, !dbg !5646
  %arrayidx317 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx316, i64 0, i64 2, !dbg !5646
  store float %mul314, float* %arrayidx317, align 8, !dbg !5647
  %215 = load %struct.MCol*, %struct.MCol** %col251, align 8, !dbg !5648
  %216 = load i32, i32* %face_ind, align 4, !dbg !5649
  %mul318 = mul nsw i32 %216, 4, !dbg !5650
  %217 = load i32, i32* %v273, align 4, !dbg !5651
  %add319 = add nsw i32 %mul318, %217, !dbg !5652
  %idxprom320 = sext i32 %add319 to i64, !dbg !5648
  %arrayidx321 = getelementptr inbounds %struct.MCol, %struct.MCol* %215, i64 %idxprom320, !dbg !5648
  %a322 = getelementptr inbounds %struct.MCol, %struct.MCol* %arrayidx321, i32 0, i32 0, !dbg !5653
  %218 = load i8, i8* %a322, align 1, !dbg !5653
  %conv323 = uitofp i8 %218 to float, !dbg !5654
  %mul324 = fmul float 0x3F70101020000000, %conv323, !dbg !5655
  %219 = load i32, i32* %j268, align 4, !dbg !5656
  %idxprom325 = sext i32 %219 to i64, !dbg !5657
  %arrayidx326 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 %idxprom325, !dbg !5657
  %arrayidx327 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx326, i64 0, i64 3, !dbg !5657
  store float %mul324, float* %arrayidx327, align 4, !dbg !5658
  br label %for.inc328, !dbg !5659

for.inc328:                                       ; preds = %cond.end286
  %220 = load i32, i32* %j268, align 4, !dbg !5660
  %inc329 = add nsw i32 %220, 1, !dbg !5660
  store i32 %inc329, i32* %j268, align 4, !dbg !5660
  br label %for.cond269, !dbg !5661, !llvm.loop !5662

for.end330:                                       ; preds = %for.cond269
  %arraydecay331 = getelementptr inbounds [4 x float], [4 x float]* %final_color, i64 0, i64 0, !dbg !5664
  %arrayidx332 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 0, !dbg !5665
  %arraydecay333 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx332, i64 0, i64 0, !dbg !5665
  %arrayidx334 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 1, !dbg !5666
  %arraydecay335 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx334, i64 0, i64 0, !dbg !5666
  %arrayidx336 = getelementptr inbounds [3 x [4 x float]], [3 x [4 x float]]* %colors, i64 0, i64 2, !dbg !5667
  %arraydecay337 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx336, i64 0, i64 0, !dbg !5667
  %221 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data244, align 8, !dbg !5668
  %barycentricWeights338 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %221, i32 0, i32 1, !dbg !5669
  %222 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights338, align 8, !dbg !5669
  %223 = load i32, i32* %i, align 4, !dbg !5670
  %224 = load i32, i32* %samples246, align 4, !dbg !5671
  %mul339 = mul nsw i32 %223, %224, !dbg !5672
  %idxprom340 = sext i32 %mul339 to i64, !dbg !5668
  %arrayidx341 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %222, i64 %idxprom340, !dbg !5668
  %v342 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx341, i32 0, i32 0, !dbg !5673
  %arraydecay343 = getelementptr inbounds [3 x float], [3 x float]* %v342, i64 0, i64 0, !dbg !5668
  call void @interp_v4_v4v4v4(float* %arraydecay331, float* %arraydecay333, float* %arraydecay335, float* %arraydecay337, float* %arraydecay343), !dbg !5674
  %225 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5675
  %226 = load i32, i32* %i, align 4, !dbg !5676
  %idxprom344 = sext i32 %226 to i64, !dbg !5675
  %arrayidx345 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %225, i64 %idxprom344, !dbg !5675
  %color346 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx345, i32 0, i32 4, !dbg !5677
  %arraydecay347 = getelementptr inbounds [3 x float], [3 x float]* %color346, i64 0, i64 0, !dbg !5675
  %arraydecay348 = getelementptr inbounds [4 x float], [4 x float]* %final_color, i64 0, i64 0, !dbg !5678
  call void @copy_v3_v3(float* %arraydecay347, float* %arraydecay348), !dbg !5679
  %arrayidx349 = getelementptr inbounds [4 x float], [4 x float]* %final_color, i64 0, i64 3, !dbg !5680
  %227 = load float, float* %arrayidx349, align 4, !dbg !5680
  %228 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !5681
  %229 = load i32, i32* %i, align 4, !dbg !5682
  %idxprom350 = sext i32 %229 to i64, !dbg !5681
  %arrayidx351 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %228, i64 %idxprom350, !dbg !5681
  %alpha352 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx351, i32 0, i32 5, !dbg !5683
  store float %227, float* %alpha352, align 4, !dbg !5684
  br label %for.inc353, !dbg !5685

for.inc353:                                       ; preds = %for.end330
  %230 = load i32, i32* %i, align 4, !dbg !5686
  %inc354 = add nsw i32 %230, 1, !dbg !5686
  store i32 %inc354, i32* %i, align 4, !dbg !5686
  br label %for.cond259, !dbg !5687, !llvm.loop !5688

for.end355:                                       ; preds = %for.cond259
  br label %if.end356, !dbg !5690

if.end356:                                        ; preds = %for.end355, %if.else238
  br label %if.end357

if.end357:                                        ; preds = %if.end356, %for.end237
  br label %if.end358, !dbg !5691

if.end358:                                        ; preds = %if.end357, %if.else169
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.end168
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %for.end
  br label %if.end361

if.end361:                                        ; preds = %if.then, %if.then6, %if.then27, %if.then35, %if.then186, %if.then257, %if.end360
  ret void, !dbg !5692
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @dynamicPaint_resetSurface(%struct.Scene* %scene, %struct.DynamicPaintSurface* %surface) #0 !dbg !5693 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %numOfPoints = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5696, metadata !DIExpression()), !dbg !5697
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5698, metadata !DIExpression()), !dbg !5699
  call void @llvm.dbg.declare(metadata i32* %numOfPoints, metadata !5700, metadata !DIExpression()), !dbg !5701
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5702
  %call = call i32 @dynamicPaint_surfaceNumOfPoints(%struct.DynamicPaintSurface* %0), !dbg !5703
  store i32 %call, i32* %numOfPoints, align 4, !dbg !5701
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5704
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %1, i32 0, i32 3, !dbg !5706
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !5706
  %tobool = icmp ne %struct.PaintSurfaceData* %2, null, !dbg !5704
  br i1 %tobool, label %if.then, label %if.end, !dbg !5707

if.then:                                          ; preds = %entry
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5708
  call void @dynamicPaint_freeSurfaceData(%struct.DynamicPaintSurface* %3), !dbg !5709
  br label %if.end, !dbg !5709

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5710
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 10, !dbg !5712
  %5 = load i16, i16* %format, align 4, !dbg !5712
  %conv = sext i16 %5 to i32, !dbg !5710
  %cmp = icmp eq i32 %conv, 2, !dbg !5713
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !5714

if.then2:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !5715
  br label %return, !dbg !5715

if.end3:                                          ; preds = %if.end
  %6 = load i32, i32* %numOfPoints, align 4, !dbg !5716
  %cmp4 = icmp slt i32 %6, 1, !dbg !5718
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !5719

if.then6:                                         ; preds = %if.end3
  store i8 0, i8* %retval, align 1, !dbg !5720
  br label %return, !dbg !5720

if.end7:                                          ; preds = %if.end3
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5721
  %call8 = call i8* %7(i64 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !5721
  %8 = bitcast i8* %call8 to %struct.PaintSurfaceData*, !dbg !5721
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5722
  %data9 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 3, !dbg !5723
  store %struct.PaintSurfaceData* %8, %struct.PaintSurfaceData** %data9, align 8, !dbg !5724
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5725
  %data10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 3, !dbg !5727
  %11 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data10, align 8, !dbg !5727
  %tobool11 = icmp ne %struct.PaintSurfaceData* %11, null, !dbg !5725
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !5728

if.then12:                                        ; preds = %if.end7
  store i8 0, i8* %retval, align 1, !dbg !5729
  br label %return, !dbg !5729

if.end13:                                         ; preds = %if.end7
  %12 = load i32, i32* %numOfPoints, align 4, !dbg !5730
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5731
  %data14 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 3, !dbg !5732
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data14, align 8, !dbg !5732
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !5733
  store i32 %12, i32* %total_points, align 8, !dbg !5734
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5735
  call void @dynamicPaint_allocateSurfaceType(%struct.DynamicPaintSurface* %15), !dbg !5736
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5737
  call void @dynamicPaint_initAdjacencyData(%struct.DynamicPaintSurface* %16, i32 0), !dbg !5738
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5739
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 11, !dbg !5741
  %18 = load i16, i16* %type, align 2, !dbg !5741
  %conv15 = sext i16 %18 to i32, !dbg !5739
  %cmp16 = icmp eq i32 %conv15, 0, !dbg !5742
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !5743

if.then18:                                        ; preds = %if.end13
  %19 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5744
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5745
  call void @dynamicPaint_setInitialColor(%struct.Scene* %19, %struct.DynamicPaintSurface* %20), !dbg !5746
  br label %if.end19, !dbg !5746

if.end19:                                         ; preds = %if.then18, %if.end13
  store i8 1, i8* %retval, align 1, !dbg !5747
  br label %return, !dbg !5747

return:                                           ; preds = %if.end19, %if.then12, %if.then6, %if.then2
  %21 = load i8, i8* %retval, align 1, !dbg !5748
  ret i8 %21, !dbg !5748
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_surfaceNumOfPoints(%struct.DynamicPaintSurface* %surface) #0 !dbg !5749 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5752, metadata !DIExpression()), !dbg !5753
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5754
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 10, !dbg !5756
  %1 = load i16, i16* %format, align 4, !dbg !5756
  %conv = sext i16 %1 to i32, !dbg !5754
  %cmp = icmp eq i32 %conv, 0, !dbg !5757
  br i1 %cmp, label %if.then, label %if.else, !dbg !5758

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5759
  br label %return, !dbg !5759

if.else:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5761
  %format2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 10, !dbg !5763
  %3 = load i16, i16* %format2, align 4, !dbg !5763
  %conv3 = sext i16 %3 to i32, !dbg !5761
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !5764
  br i1 %cmp4, label %if.then6, label %if.else12, !dbg !5765

if.then6:                                         ; preds = %if.else
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5766
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 2, !dbg !5769
  %5 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !5769
  %dm = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %5, i32 0, i32 1, !dbg !5770
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5770
  %tobool = icmp ne %struct.DerivedMesh* %6, null, !dbg !5766
  br i1 %tobool, label %if.end, label %if.then7, !dbg !5771

if.then7:                                         ; preds = %if.then6
  store i32 0, i32* %retval, align 4, !dbg !5772
  br label %return, !dbg !5772

if.end:                                           ; preds = %if.then6
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5773
  %canvas8 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 2, !dbg !5774
  %8 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas8, align 8, !dbg !5774
  %dm9 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %8, i32 0, i32 1, !dbg !5775
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm9, align 8, !dbg !5775
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 23, !dbg !5776
  %10 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !5776
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5777
  %canvas10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 2, !dbg !5778
  %12 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas10, align 8, !dbg !5778
  %dm11 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %12, i32 0, i32 1, !dbg !5779
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm11, align 8, !dbg !5779
  %call = call i32 %10(%struct.DerivedMesh* %13), !dbg !5773
  store i32 %call, i32* %retval, align 4, !dbg !5780
  br label %return, !dbg !5780

if.else12:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !5781
  br label %return, !dbg !5781

return:                                           ; preds = %if.else12, %if.end, %if.then7, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !5782
  ret i32 %14, !dbg !5782
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_allocateSurfaceType(%struct.DynamicPaintSurface* %surface) #0 !dbg !5783 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !5786, metadata !DIExpression()), !dbg !5787
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5788
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !5789
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !5789
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !5787
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5790
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 11, !dbg !5791
  %3 = load i16, i16* %type, align 2, !dbg !5791
  %conv = sext i16 %3 to i32, !dbg !5790
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb8
    i32 3, label %sw.bb14
  ], !dbg !5792

sw.bb:                                            ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5793
  %5 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5795
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %5, i32 0, i32 4, !dbg !5796
  %6 = load i32, i32* %total_points, align 8, !dbg !5796
  %conv1 = sext i32 %6 to i64, !dbg !5795
  %mul = mul i64 40, %conv1, !dbg !5797
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0)), !dbg !5793
  %7 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5798
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %7, i32 0, i32 1, !dbg !5799
  store i8* %call, i8** %type_data, align 8, !dbg !5800
  br label %sw.epilog, !dbg !5801

sw.bb2:                                           ; preds = %entry
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5802
  %9 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5803
  %total_points3 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %9, i32 0, i32 4, !dbg !5804
  %10 = load i32, i32* %total_points3, align 8, !dbg !5804
  %conv4 = sext i32 %10 to i64, !dbg !5803
  %mul5 = mul i64 4, %conv4, !dbg !5805
  %call6 = call i8* %8(i64 %mul5, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.27, i64 0, i64 0)), !dbg !5802
  %11 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5806
  %type_data7 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %11, i32 0, i32 1, !dbg !5807
  store i8* %call6, i8** %type_data7, align 8, !dbg !5808
  br label %sw.epilog, !dbg !5809

sw.bb8:                                           ; preds = %entry
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5810
  %13 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5811
  %total_points9 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %13, i32 0, i32 4, !dbg !5812
  %14 = load i32, i32* %total_points9, align 8, !dbg !5812
  %conv10 = sext i32 %14 to i64, !dbg !5811
  %mul11 = mul i64 4, %conv10, !dbg !5813
  %call12 = call i8* %12(i64 %mul11, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0)), !dbg !5810
  %15 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5814
  %type_data13 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %15, i32 0, i32 1, !dbg !5815
  store i8* %call12, i8** %type_data13, align 8, !dbg !5816
  br label %sw.epilog, !dbg !5817

sw.bb14:                                          ; preds = %entry
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5818
  %17 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5819
  %total_points15 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %17, i32 0, i32 4, !dbg !5820
  %18 = load i32, i32* %total_points15, align 8, !dbg !5820
  %conv16 = sext i32 %18 to i64, !dbg !5819
  %mul17 = mul i64 16, %conv16, !dbg !5821
  %call18 = call i8* %16(i64 %mul17, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29, i64 0, i64 0)), !dbg !5818
  %19 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5822
  %type_data19 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %19, i32 0, i32 1, !dbg !5823
  store i8* %call18, i8** %type_data19, align 8, !dbg !5824
  br label %sw.epilog, !dbg !5825

sw.epilog:                                        ; preds = %entry, %sw.bb14, %sw.bb8, %sw.bb2, %sw.bb
  %20 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5826
  %type_data20 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %20, i32 0, i32 1, !dbg !5828
  %21 = load i8*, i8** %type_data20, align 8, !dbg !5828
  %cmp = icmp eq i8* %21, null, !dbg !5829
  br i1 %cmp, label %if.then, label %if.end, !dbg !5830

if.then:                                          ; preds = %sw.epilog
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5831
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %22, i32 0, i32 2, !dbg !5832
  %23 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !5832
  %call22 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %23, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !5833
  br label %if.end, !dbg !5833

if.end:                                           ; preds = %if.then, %sw.epilog
  ret void, !dbg !5834
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_initAdjacencyData(%struct.DynamicPaintSurface* %surface, i32 %force_init) #0 !dbg !5835 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %force_init.addr = alloca i32, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %ad = alloca %struct.PaintAdjData*, align 8
  %temp_data = alloca i32*, align 8
  %neigh_points = alloca i32, align 4
  %i = alloca i32, align 4
  %n_pos = alloca i32, align 4
  %numOfEdges = alloca i32, align 4
  %numOfPolys = alloca i32, align 4
  %edge = alloca %struct.MEdge*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %j = alloca i32, align 4
  %index = alloca i32, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store i32 %force_init, i32* %force_init.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %force_init.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !5842, metadata !DIExpression()), !dbg !5843
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5844
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !5845
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !5845
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !5843
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !5846, metadata !DIExpression()), !dbg !5847
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5848
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 2, !dbg !5849
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !5849
  %dm1 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %3, i32 0, i32 1, !dbg !5850
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm1, align 8, !dbg !5850
  store %struct.DerivedMesh* %4, %struct.DerivedMesh** %dm, align 8, !dbg !5847
  call void @llvm.dbg.declare(metadata %struct.PaintAdjData** %ad, metadata !5851, metadata !DIExpression()), !dbg !5854
  call void @llvm.dbg.declare(metadata i32** %temp_data, metadata !5855, metadata !DIExpression()), !dbg !5856
  call void @llvm.dbg.declare(metadata i32* %neigh_points, metadata !5857, metadata !DIExpression()), !dbg !5858
  store i32 0, i32* %neigh_points, align 4, !dbg !5858
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5859
  %call = call i32 @surface_usesAdjData(%struct.DynamicPaintSurface* %5), !dbg !5861
  %tobool = icmp ne i32 %call, 0, !dbg !5861
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !5862

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* %force_init.addr, align 4, !dbg !5863
  %tobool2 = icmp ne i32 %6, 0, !dbg !5863
  br i1 %tobool2, label %if.end, label %if.then, !dbg !5864

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !5865

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5866
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 10, !dbg !5868
  %8 = load i16, i16* %format, align 4, !dbg !5868
  %conv = sext i16 %8 to i32, !dbg !5866
  %cmp = icmp eq i32 %conv, 1, !dbg !5869
  br i1 %cmp, label %if.then4, label %if.else, !dbg !5870

if.then4:                                         ; preds = %if.end
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5871
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 24, !dbg !5873
  %10 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !5873
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5874
  %call5 = call i32 %10(%struct.DerivedMesh* %11), !dbg !5871
  %mul = mul nsw i32 2, %call5, !dbg !5875
  store i32 %mul, i32* %neigh_points, align 4, !dbg !5876
  br label %if.end13, !dbg !5877

if.else:                                          ; preds = %if.end
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5878
  %format6 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %12, i32 0, i32 10, !dbg !5880
  %13 = load i16, i16* %format6, align 4, !dbg !5880
  %conv7 = sext i16 %13 to i32, !dbg !5878
  %cmp8 = icmp eq i32 %conv7, 2, !dbg !5881
  br i1 %cmp8, label %if.then10, label %if.end12, !dbg !5882

if.then10:                                        ; preds = %if.else
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5883
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !5884
  %15 = load i32, i32* %total_points, align 8, !dbg !5884
  %mul11 = mul nsw i32 %15, 8, !dbg !5885
  store i32 %mul11, i32* %neigh_points, align 4, !dbg !5886
  br label %if.end12, !dbg !5887

if.end12:                                         ; preds = %if.then10, %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12, %if.then4
  %16 = load i32, i32* %neigh_points, align 4, !dbg !5888
  %tobool14 = icmp ne i32 %16, 0, !dbg !5888
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !5890

if.then15:                                        ; preds = %if.end13
  br label %return, !dbg !5891

if.end16:                                         ; preds = %if.end13
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5892
  %call17 = call i8* %17(i64 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.30, i64 0, i64 0)), !dbg !5892
  %18 = bitcast i8* %call17 to %struct.PaintAdjData*, !dbg !5892
  %19 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5893
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %19, i32 0, i32 2, !dbg !5894
  store %struct.PaintAdjData* %18, %struct.PaintAdjData** %adj_data, align 8, !dbg !5895
  store %struct.PaintAdjData* %18, %struct.PaintAdjData** %ad, align 8, !dbg !5896
  %20 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5897
  %tobool18 = icmp ne %struct.PaintAdjData* %20, null, !dbg !5897
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !5899

if.then19:                                        ; preds = %if.end16
  br label %return, !dbg !5900

if.end20:                                         ; preds = %if.end16
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5901
  %22 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5902
  %total_points21 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %22, i32 0, i32 4, !dbg !5903
  %23 = load i32, i32* %total_points21, align 8, !dbg !5903
  %conv22 = sext i32 %23 to i64, !dbg !5902
  %mul23 = mul i64 4, %conv22, !dbg !5904
  %call24 = call i8* %21(i64 %mul23, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0)), !dbg !5901
  %24 = bitcast i8* %call24 to i32*, !dbg !5901
  %25 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5905
  %n_index = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %25, i32 0, i32 1, !dbg !5906
  store i32* %24, i32** %n_index, align 8, !dbg !5907
  %26 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5908
  %27 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5909
  %total_points25 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %27, i32 0, i32 4, !dbg !5910
  %28 = load i32, i32* %total_points25, align 8, !dbg !5910
  %conv26 = sext i32 %28 to i64, !dbg !5909
  %mul27 = mul i64 4, %conv26, !dbg !5911
  %call28 = call i8* %26(i64 %mul27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32, i64 0, i64 0)), !dbg !5908
  %29 = bitcast i8* %call28 to i32*, !dbg !5908
  %30 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5912
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %30, i32 0, i32 2, !dbg !5913
  store i32* %29, i32** %n_num, align 8, !dbg !5914
  %31 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5915
  %32 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5916
  %total_points29 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %32, i32 0, i32 4, !dbg !5917
  %33 = load i32, i32* %total_points29, align 8, !dbg !5917
  %conv30 = sext i32 %33 to i64, !dbg !5916
  %mul31 = mul i64 4, %conv30, !dbg !5918
  %call32 = call i8* %31(i64 %mul31, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i64 0, i64 0)), !dbg !5915
  %34 = bitcast i8* %call32 to i32*, !dbg !5915
  store i32* %34, i32** %temp_data, align 8, !dbg !5919
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5920
  %36 = load i32, i32* %neigh_points, align 4, !dbg !5921
  %conv33 = sext i32 %36 to i64, !dbg !5921
  %mul34 = mul i64 4, %conv33, !dbg !5922
  %call35 = call i8* %35(i64 %mul34, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i64 0, i64 0)), !dbg !5920
  %37 = bitcast i8* %call35 to i32*, !dbg !5920
  %38 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5923
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %38, i32 0, i32 0, !dbg !5924
  store i32* %37, i32** %n_target, align 8, !dbg !5925
  %39 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5926
  %40 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5927
  %total_points36 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %40, i32 0, i32 4, !dbg !5928
  %41 = load i32, i32* %total_points36, align 8, !dbg !5928
  %conv37 = sext i32 %41 to i64, !dbg !5927
  %mul38 = mul i64 4, %conv37, !dbg !5929
  %call39 = call i8* %39(i64 %mul38, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0)), !dbg !5926
  %42 = bitcast i8* %call39 to i32*, !dbg !5926
  %43 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5930
  %flags = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %43, i32 0, i32 3, !dbg !5931
  store i32* %42, i32** %flags, align 8, !dbg !5932
  %44 = load i32, i32* %neigh_points, align 4, !dbg !5933
  %45 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5934
  %total_targets = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %45, i32 0, i32 4, !dbg !5935
  store i32 %44, i32* %total_targets, align 8, !dbg !5936
  %46 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5937
  %n_index40 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %46, i32 0, i32 1, !dbg !5939
  %47 = load i32*, i32** %n_index40, align 8, !dbg !5939
  %tobool41 = icmp ne i32* %47, null, !dbg !5937
  br i1 %tobool41, label %lor.lhs.false, label %if.then49, !dbg !5940

lor.lhs.false:                                    ; preds = %if.end20
  %48 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5941
  %n_num42 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %48, i32 0, i32 2, !dbg !5942
  %49 = load i32*, i32** %n_num42, align 8, !dbg !5942
  %tobool43 = icmp ne i32* %49, null, !dbg !5941
  br i1 %tobool43, label %lor.lhs.false44, label %if.then49, !dbg !5943

lor.lhs.false44:                                  ; preds = %lor.lhs.false
  %50 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !5944
  %n_target45 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %50, i32 0, i32 0, !dbg !5945
  %51 = load i32*, i32** %n_target45, align 8, !dbg !5945
  %tobool46 = icmp ne i32* %51, null, !dbg !5944
  br i1 %tobool46, label %lor.lhs.false47, label %if.then49, !dbg !5946

lor.lhs.false47:                                  ; preds = %lor.lhs.false44
  %52 = load i32*, i32** %temp_data, align 8, !dbg !5947
  %tobool48 = icmp ne i32* %52, null, !dbg !5947
  br i1 %tobool48, label %if.end55, label %if.then49, !dbg !5948

if.then49:                                        ; preds = %lor.lhs.false47, %lor.lhs.false44, %lor.lhs.false, %if.end20
  %53 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !5949
  call void @dynamicPaint_freeAdjData(%struct.PaintSurfaceData* %53), !dbg !5951
  %54 = load i32*, i32** %temp_data, align 8, !dbg !5952
  %tobool50 = icmp ne i32* %54, null, !dbg !5952
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !5954

if.then51:                                        ; preds = %if.then49
  %55 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5955
  %56 = load i32*, i32** %temp_data, align 8, !dbg !5956
  %57 = bitcast i32* %56 to i8*, !dbg !5956
  call void %55(i8* %57), !dbg !5955
  br label %if.end52, !dbg !5955

if.end52:                                         ; preds = %if.then51, %if.then49
  %58 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5957
  %canvas53 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %58, i32 0, i32 2, !dbg !5958
  %59 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas53, align 8, !dbg !5958
  %call54 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %59, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !5959
  br label %return, !dbg !5960

if.end55:                                         ; preds = %lor.lhs.false47
  %60 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !5961
  %format56 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %60, i32 0, i32 10, !dbg !5963
  %61 = load i16, i16* %format56, align 4, !dbg !5963
  %conv57 = sext i16 %61 to i32, !dbg !5961
  %cmp58 = icmp eq i32 %conv57, 1, !dbg !5964
  br i1 %cmp58, label %if.then60, label %if.else195, !dbg !5965

if.then60:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5966, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.declare(metadata i32* %n_pos, metadata !5969, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.declare(metadata i32* %numOfEdges, metadata !5971, metadata !DIExpression()), !dbg !5972
  %62 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5973
  %getNumEdges61 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %62, i32 0, i32 24, !dbg !5974
  %63 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges61, align 8, !dbg !5974
  %64 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5975
  %call62 = call i32 %63(%struct.DerivedMesh* %64), !dbg !5973
  store i32 %call62, i32* %numOfEdges, align 4, !dbg !5972
  call void @llvm.dbg.declare(metadata i32* %numOfPolys, metadata !5976, metadata !DIExpression()), !dbg !5977
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5978
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %65, i32 0, i32 27, !dbg !5979
  %66 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !5979
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5980
  %call63 = call i32 %66(%struct.DerivedMesh* %67), !dbg !5978
  store i32 %call63, i32* %numOfPolys, align 4, !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.MEdge** %edge, metadata !5981, metadata !DIExpression()), !dbg !5982
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5983
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %68, i32 0, i32 32, !dbg !5984
  %69 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !5984
  %70 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5985
  %call64 = call %struct.MEdge* %69(%struct.DerivedMesh* %70), !dbg !5983
  store %struct.MEdge* %call64, %struct.MEdge** %edge, align 8, !dbg !5982
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !5986, metadata !DIExpression()), !dbg !5987
  %71 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5988
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %71, i32 0, i32 35, !dbg !5989
  %72 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !5989
  %73 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5990
  %call65 = call %struct.MPoly* %72(%struct.DerivedMesh* %73), !dbg !5988
  store %struct.MPoly* %call65, %struct.MPoly** %mpoly, align 8, !dbg !5987
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !5991, metadata !DIExpression()), !dbg !5992
  %74 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5993
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %74, i32 0, i32 34, !dbg !5994
  %75 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !5994
  %76 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5995
  %call66 = call %struct.MLoop* %75(%struct.DerivedMesh* %76), !dbg !5993
  store %struct.MLoop* %call66, %struct.MLoop** %mloop, align 8, !dbg !5992
  store i32 0, i32* %i, align 4, !dbg !5996
  br label %for.cond, !dbg !5998

for.cond:                                         ; preds = %for.inc, %if.then60
  %77 = load i32, i32* %i, align 4, !dbg !5999
  %78 = load i32, i32* %numOfEdges, align 4, !dbg !6001
  %cmp67 = icmp slt i32 %77, %78, !dbg !6002
  br i1 %cmp67, label %for.body, label %for.end, !dbg !6003

for.body:                                         ; preds = %for.cond
  %79 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6004
  %n_num69 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %79, i32 0, i32 2, !dbg !6006
  %80 = load i32*, i32** %n_num69, align 8, !dbg !6006
  %81 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6007
  %82 = load i32, i32* %i, align 4, !dbg !6008
  %idxprom = sext i32 %82 to i64, !dbg !6007
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %81, i64 %idxprom, !dbg !6007
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx, i32 0, i32 0, !dbg !6009
  %83 = load i32, i32* %v1, align 4, !dbg !6009
  %idxprom70 = zext i32 %83 to i64, !dbg !6004
  %arrayidx71 = getelementptr inbounds i32, i32* %80, i64 %idxprom70, !dbg !6004
  %84 = load i32, i32* %arrayidx71, align 4, !dbg !6010
  %inc = add nsw i32 %84, 1, !dbg !6010
  store i32 %inc, i32* %arrayidx71, align 4, !dbg !6010
  %85 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6011
  %n_num72 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %85, i32 0, i32 2, !dbg !6012
  %86 = load i32*, i32** %n_num72, align 8, !dbg !6012
  %87 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6013
  %88 = load i32, i32* %i, align 4, !dbg !6014
  %idxprom73 = sext i32 %88 to i64, !dbg !6013
  %arrayidx74 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %87, i64 %idxprom73, !dbg !6013
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx74, i32 0, i32 1, !dbg !6015
  %89 = load i32, i32* %v2, align 4, !dbg !6015
  %idxprom75 = zext i32 %89 to i64, !dbg !6011
  %arrayidx76 = getelementptr inbounds i32, i32* %86, i64 %idxprom75, !dbg !6011
  %90 = load i32, i32* %arrayidx76, align 4, !dbg !6016
  %inc77 = add nsw i32 %90, 1, !dbg !6016
  store i32 %inc77, i32* %arrayidx76, align 4, !dbg !6016
  %91 = load i32*, i32** %temp_data, align 8, !dbg !6017
  %92 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6018
  %93 = load i32, i32* %i, align 4, !dbg !6019
  %idxprom78 = sext i32 %93 to i64, !dbg !6018
  %arrayidx79 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %92, i64 %idxprom78, !dbg !6018
  %v180 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx79, i32 0, i32 0, !dbg !6020
  %94 = load i32, i32* %v180, align 4, !dbg !6020
  %idxprom81 = zext i32 %94 to i64, !dbg !6017
  %arrayidx82 = getelementptr inbounds i32, i32* %91, i64 %idxprom81, !dbg !6017
  %95 = load i32, i32* %arrayidx82, align 4, !dbg !6021
  %inc83 = add nsw i32 %95, 1, !dbg !6021
  store i32 %inc83, i32* %arrayidx82, align 4, !dbg !6021
  %96 = load i32*, i32** %temp_data, align 8, !dbg !6022
  %97 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6023
  %98 = load i32, i32* %i, align 4, !dbg !6024
  %idxprom84 = sext i32 %98 to i64, !dbg !6023
  %arrayidx85 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %97, i64 %idxprom84, !dbg !6023
  %v286 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx85, i32 0, i32 1, !dbg !6025
  %99 = load i32, i32* %v286, align 4, !dbg !6025
  %idxprom87 = zext i32 %99 to i64, !dbg !6022
  %arrayidx88 = getelementptr inbounds i32, i32* %96, i64 %idxprom87, !dbg !6022
  %100 = load i32, i32* %arrayidx88, align 4, !dbg !6026
  %inc89 = add nsw i32 %100, 1, !dbg !6026
  store i32 %inc89, i32* %arrayidx88, align 4, !dbg !6026
  br label %for.inc, !dbg !6027

for.inc:                                          ; preds = %for.body
  %101 = load i32, i32* %i, align 4, !dbg !6028
  %inc90 = add nsw i32 %101, 1, !dbg !6028
  store i32 %inc90, i32* %i, align 4, !dbg !6028
  br label %for.cond, !dbg !6029, !llvm.loop !6030

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6032
  br label %for.cond91, !dbg !6034

for.cond91:                                       ; preds = %for.inc111, %for.end
  %102 = load i32, i32* %i, align 4, !dbg !6035
  %103 = load i32, i32* %numOfPolys, align 4, !dbg !6037
  %cmp92 = icmp slt i32 %102, %103, !dbg !6038
  br i1 %cmp92, label %for.body94, label %for.end113, !dbg !6039

for.body94:                                       ; preds = %for.cond91
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6040, metadata !DIExpression()), !dbg !6042
  store i32 0, i32* %j, align 4, !dbg !6042
  br label %for.cond95, !dbg !6043

for.cond95:                                       ; preds = %for.inc108, %for.body94
  %104 = load i32, i32* %j, align 4, !dbg !6044
  %105 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6047
  %106 = load i32, i32* %i, align 4, !dbg !6048
  %idxprom96 = sext i32 %106 to i64, !dbg !6047
  %arrayidx97 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %105, i64 %idxprom96, !dbg !6047
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx97, i32 0, i32 1, !dbg !6049
  %107 = load i32, i32* %totloop, align 4, !dbg !6049
  %cmp98 = icmp slt i32 %104, %107, !dbg !6050
  br i1 %cmp98, label %for.body100, label %for.end110, !dbg !6051

for.body100:                                      ; preds = %for.cond95
  %108 = load i32*, i32** %temp_data, align 8, !dbg !6052
  %109 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6054
  %110 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !6055
  %111 = load i32, i32* %i, align 4, !dbg !6056
  %idxprom101 = sext i32 %111 to i64, !dbg !6055
  %arrayidx102 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %110, i64 %idxprom101, !dbg !6055
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx102, i32 0, i32 0, !dbg !6057
  %112 = load i32, i32* %loopstart, align 4, !dbg !6057
  %113 = load i32, i32* %j, align 4, !dbg !6058
  %add = add nsw i32 %112, %113, !dbg !6059
  %idxprom103 = sext i32 %add to i64, !dbg !6054
  %arrayidx104 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %109, i64 %idxprom103, !dbg !6054
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx104, i32 0, i32 0, !dbg !6060
  %114 = load i32, i32* %v, align 4, !dbg !6060
  %idxprom105 = zext i32 %114 to i64, !dbg !6052
  %arrayidx106 = getelementptr inbounds i32, i32* %108, i64 %idxprom105, !dbg !6052
  %115 = load i32, i32* %arrayidx106, align 4, !dbg !6061
  %inc107 = add nsw i32 %115, 1, !dbg !6061
  store i32 %inc107, i32* %arrayidx106, align 4, !dbg !6061
  br label %for.inc108, !dbg !6062

for.inc108:                                       ; preds = %for.body100
  %116 = load i32, i32* %j, align 4, !dbg !6063
  %inc109 = add nsw i32 %116, 1, !dbg !6063
  store i32 %inc109, i32* %j, align 4, !dbg !6063
  br label %for.cond95, !dbg !6064, !llvm.loop !6065

for.end110:                                       ; preds = %for.cond95
  br label %for.inc111, !dbg !6067

for.inc111:                                       ; preds = %for.end110
  %117 = load i32, i32* %i, align 4, !dbg !6068
  %inc112 = add nsw i32 %117, 1, !dbg !6068
  store i32 %inc112, i32* %i, align 4, !dbg !6068
  br label %for.cond91, !dbg !6069, !llvm.loop !6070

for.end113:                                       ; preds = %for.cond91
  store i32 0, i32* %i, align 4, !dbg !6072
  br label %for.cond114, !dbg !6074

for.cond114:                                      ; preds = %for.inc134, %for.end113
  %118 = load i32, i32* %i, align 4, !dbg !6075
  %119 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6077
  %total_points115 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %119, i32 0, i32 4, !dbg !6078
  %120 = load i32, i32* %total_points115, align 8, !dbg !6078
  %cmp116 = icmp slt i32 %118, %120, !dbg !6079
  br i1 %cmp116, label %for.body118, label %for.end136, !dbg !6080

for.body118:                                      ; preds = %for.cond114
  %121 = load i32*, i32** %temp_data, align 8, !dbg !6081
  %122 = load i32, i32* %i, align 4, !dbg !6084
  %idxprom119 = sext i32 %122 to i64, !dbg !6081
  %arrayidx120 = getelementptr inbounds i32, i32* %121, i64 %idxprom119, !dbg !6081
  %123 = load i32, i32* %arrayidx120, align 4, !dbg !6081
  %rem = srem i32 %123, 2, !dbg !6085
  %tobool121 = icmp ne i32 %rem, 0, !dbg !6085
  br i1 %tobool121, label %if.then127, label %lor.lhs.false122, !dbg !6086

lor.lhs.false122:                                 ; preds = %for.body118
  %124 = load i32*, i32** %temp_data, align 8, !dbg !6087
  %125 = load i32, i32* %i, align 4, !dbg !6088
  %idxprom123 = sext i32 %125 to i64, !dbg !6087
  %arrayidx124 = getelementptr inbounds i32, i32* %124, i64 %idxprom123, !dbg !6087
  %126 = load i32, i32* %arrayidx124, align 4, !dbg !6087
  %cmp125 = icmp slt i32 %126, 4, !dbg !6089
  br i1 %cmp125, label %if.then127, label %if.end131, !dbg !6090

if.then127:                                       ; preds = %lor.lhs.false122, %for.body118
  %127 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6091
  %flags128 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %127, i32 0, i32 3, !dbg !6093
  %128 = load i32*, i32** %flags128, align 8, !dbg !6093
  %129 = load i32, i32* %i, align 4, !dbg !6094
  %idxprom129 = sext i32 %129 to i64, !dbg !6091
  %arrayidx130 = getelementptr inbounds i32, i32* %128, i64 %idxprom129, !dbg !6091
  %130 = load i32, i32* %arrayidx130, align 4, !dbg !6095
  %or = or i32 %130, 1, !dbg !6095
  store i32 %or, i32* %arrayidx130, align 4, !dbg !6095
  br label %if.end131, !dbg !6096

if.end131:                                        ; preds = %if.then127, %lor.lhs.false122
  %131 = load i32*, i32** %temp_data, align 8, !dbg !6097
  %132 = load i32, i32* %i, align 4, !dbg !6098
  %idxprom132 = sext i32 %132 to i64, !dbg !6097
  %arrayidx133 = getelementptr inbounds i32, i32* %131, i64 %idxprom132, !dbg !6097
  store i32 0, i32* %arrayidx133, align 4, !dbg !6099
  br label %for.inc134, !dbg !6100

for.inc134:                                       ; preds = %if.end131
  %133 = load i32, i32* %i, align 4, !dbg !6101
  %inc135 = add nsw i32 %133, 1, !dbg !6101
  store i32 %inc135, i32* %i, align 4, !dbg !6101
  br label %for.cond114, !dbg !6102, !llvm.loop !6103

for.end136:                                       ; preds = %for.cond114
  store i32 0, i32* %n_pos, align 4, !dbg !6105
  store i32 0, i32* %i, align 4, !dbg !6106
  br label %for.cond137, !dbg !6108

for.cond137:                                      ; preds = %for.inc149, %for.end136
  %134 = load i32, i32* %i, align 4, !dbg !6109
  %135 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6111
  %total_points138 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %135, i32 0, i32 4, !dbg !6112
  %136 = load i32, i32* %total_points138, align 8, !dbg !6112
  %cmp139 = icmp slt i32 %134, %136, !dbg !6113
  br i1 %cmp139, label %for.body141, label %for.end151, !dbg !6114

for.body141:                                      ; preds = %for.cond137
  %137 = load i32, i32* %n_pos, align 4, !dbg !6115
  %138 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6117
  %n_index142 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %138, i32 0, i32 1, !dbg !6118
  %139 = load i32*, i32** %n_index142, align 8, !dbg !6118
  %140 = load i32, i32* %i, align 4, !dbg !6119
  %idxprom143 = sext i32 %140 to i64, !dbg !6117
  %arrayidx144 = getelementptr inbounds i32, i32* %139, i64 %idxprom143, !dbg !6117
  store i32 %137, i32* %arrayidx144, align 4, !dbg !6120
  %141 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6121
  %n_num145 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %141, i32 0, i32 2, !dbg !6122
  %142 = load i32*, i32** %n_num145, align 8, !dbg !6122
  %143 = load i32, i32* %i, align 4, !dbg !6123
  %idxprom146 = sext i32 %143 to i64, !dbg !6121
  %arrayidx147 = getelementptr inbounds i32, i32* %142, i64 %idxprom146, !dbg !6121
  %144 = load i32, i32* %arrayidx147, align 4, !dbg !6121
  %145 = load i32, i32* %n_pos, align 4, !dbg !6124
  %add148 = add nsw i32 %145, %144, !dbg !6124
  store i32 %add148, i32* %n_pos, align 4, !dbg !6124
  br label %for.inc149, !dbg !6125

for.inc149:                                       ; preds = %for.body141
  %146 = load i32, i32* %i, align 4, !dbg !6126
  %inc150 = add nsw i32 %146, 1, !dbg !6126
  store i32 %inc150, i32* %i, align 4, !dbg !6126
  br label %for.cond137, !dbg !6127, !llvm.loop !6128

for.end151:                                       ; preds = %for.cond137
  store i32 0, i32* %i, align 4, !dbg !6130
  br label %for.cond152, !dbg !6132

for.cond152:                                      ; preds = %for.inc192, %for.end151
  %147 = load i32, i32* %i, align 4, !dbg !6133
  %148 = load i32, i32* %numOfEdges, align 4, !dbg !6135
  %cmp153 = icmp slt i32 %147, %148, !dbg !6136
  br i1 %cmp153, label %for.body155, label %for.end194, !dbg !6137

for.body155:                                      ; preds = %for.cond152
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6138, metadata !DIExpression()), !dbg !6140
  %149 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6141
  %150 = load i32, i32* %i, align 4, !dbg !6142
  %idxprom156 = sext i32 %150 to i64, !dbg !6141
  %arrayidx157 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %149, i64 %idxprom156, !dbg !6141
  %v1158 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx157, i32 0, i32 0, !dbg !6143
  %151 = load i32, i32* %v1158, align 4, !dbg !6143
  store i32 %151, i32* %index, align 4, !dbg !6140
  %152 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6144
  %n_index159 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %152, i32 0, i32 1, !dbg !6145
  %153 = load i32*, i32** %n_index159, align 8, !dbg !6145
  %154 = load i32, i32* %index, align 4, !dbg !6146
  %idxprom160 = sext i32 %154 to i64, !dbg !6144
  %arrayidx161 = getelementptr inbounds i32, i32* %153, i64 %idxprom160, !dbg !6144
  %155 = load i32, i32* %arrayidx161, align 4, !dbg !6144
  %156 = load i32*, i32** %temp_data, align 8, !dbg !6147
  %157 = load i32, i32* %index, align 4, !dbg !6148
  %idxprom162 = sext i32 %157 to i64, !dbg !6147
  %arrayidx163 = getelementptr inbounds i32, i32* %156, i64 %idxprom162, !dbg !6147
  %158 = load i32, i32* %arrayidx163, align 4, !dbg !6147
  %add164 = add nsw i32 %155, %158, !dbg !6149
  store i32 %add164, i32* %n_pos, align 4, !dbg !6150
  %159 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6151
  %160 = load i32, i32* %i, align 4, !dbg !6152
  %idxprom165 = sext i32 %160 to i64, !dbg !6151
  %arrayidx166 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %159, i64 %idxprom165, !dbg !6151
  %v2167 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx166, i32 0, i32 1, !dbg !6153
  %161 = load i32, i32* %v2167, align 4, !dbg !6153
  %162 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6154
  %n_target168 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %162, i32 0, i32 0, !dbg !6155
  %163 = load i32*, i32** %n_target168, align 8, !dbg !6155
  %164 = load i32, i32* %n_pos, align 4, !dbg !6156
  %idxprom169 = sext i32 %164 to i64, !dbg !6154
  %arrayidx170 = getelementptr inbounds i32, i32* %163, i64 %idxprom169, !dbg !6154
  store i32 %161, i32* %arrayidx170, align 4, !dbg !6157
  %165 = load i32*, i32** %temp_data, align 8, !dbg !6158
  %166 = load i32, i32* %index, align 4, !dbg !6159
  %idxprom171 = sext i32 %166 to i64, !dbg !6158
  %arrayidx172 = getelementptr inbounds i32, i32* %165, i64 %idxprom171, !dbg !6158
  %167 = load i32, i32* %arrayidx172, align 4, !dbg !6160
  %inc173 = add nsw i32 %167, 1, !dbg !6160
  store i32 %inc173, i32* %arrayidx172, align 4, !dbg !6160
  %168 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6161
  %169 = load i32, i32* %i, align 4, !dbg !6162
  %idxprom174 = sext i32 %169 to i64, !dbg !6161
  %arrayidx175 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %168, i64 %idxprom174, !dbg !6161
  %v2176 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx175, i32 0, i32 1, !dbg !6163
  %170 = load i32, i32* %v2176, align 4, !dbg !6163
  store i32 %170, i32* %index, align 4, !dbg !6164
  %171 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6165
  %n_index177 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %171, i32 0, i32 1, !dbg !6166
  %172 = load i32*, i32** %n_index177, align 8, !dbg !6166
  %173 = load i32, i32* %index, align 4, !dbg !6167
  %idxprom178 = sext i32 %173 to i64, !dbg !6165
  %arrayidx179 = getelementptr inbounds i32, i32* %172, i64 %idxprom178, !dbg !6165
  %174 = load i32, i32* %arrayidx179, align 4, !dbg !6165
  %175 = load i32*, i32** %temp_data, align 8, !dbg !6168
  %176 = load i32, i32* %index, align 4, !dbg !6169
  %idxprom180 = sext i32 %176 to i64, !dbg !6168
  %arrayidx181 = getelementptr inbounds i32, i32* %175, i64 %idxprom180, !dbg !6168
  %177 = load i32, i32* %arrayidx181, align 4, !dbg !6168
  %add182 = add nsw i32 %174, %177, !dbg !6170
  store i32 %add182, i32* %n_pos, align 4, !dbg !6171
  %178 = load %struct.MEdge*, %struct.MEdge** %edge, align 8, !dbg !6172
  %179 = load i32, i32* %i, align 4, !dbg !6173
  %idxprom183 = sext i32 %179 to i64, !dbg !6172
  %arrayidx184 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %178, i64 %idxprom183, !dbg !6172
  %v1185 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx184, i32 0, i32 0, !dbg !6174
  %180 = load i32, i32* %v1185, align 4, !dbg !6174
  %181 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ad, align 8, !dbg !6175
  %n_target186 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %181, i32 0, i32 0, !dbg !6176
  %182 = load i32*, i32** %n_target186, align 8, !dbg !6176
  %183 = load i32, i32* %n_pos, align 4, !dbg !6177
  %idxprom187 = sext i32 %183 to i64, !dbg !6175
  %arrayidx188 = getelementptr inbounds i32, i32* %182, i64 %idxprom187, !dbg !6175
  store i32 %180, i32* %arrayidx188, align 4, !dbg !6178
  %184 = load i32*, i32** %temp_data, align 8, !dbg !6179
  %185 = load i32, i32* %index, align 4, !dbg !6180
  %idxprom189 = sext i32 %185 to i64, !dbg !6179
  %arrayidx190 = getelementptr inbounds i32, i32* %184, i64 %idxprom189, !dbg !6179
  %186 = load i32, i32* %arrayidx190, align 4, !dbg !6181
  %inc191 = add nsw i32 %186, 1, !dbg !6181
  store i32 %inc191, i32* %arrayidx190, align 4, !dbg !6181
  br label %for.inc192, !dbg !6182

for.inc192:                                       ; preds = %for.body155
  %187 = load i32, i32* %i, align 4, !dbg !6183
  %inc193 = add nsw i32 %187, 1, !dbg !6183
  store i32 %inc193, i32* %i, align 4, !dbg !6183
  br label %for.cond152, !dbg !6184, !llvm.loop !6185

for.end194:                                       ; preds = %for.cond152
  br label %if.end202, !dbg !6187

if.else195:                                       ; preds = %if.end55
  %188 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6188
  %format196 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %188, i32 0, i32 10, !dbg !6190
  %189 = load i16, i16* %format196, align 4, !dbg !6190
  %conv197 = sext i16 %189 to i32, !dbg !6188
  %cmp198 = icmp eq i32 %conv197, 2, !dbg !6191
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !6192

if.then200:                                       ; preds = %if.else195
  br label %if.end201, !dbg !6193

if.end201:                                        ; preds = %if.then200, %if.else195
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %for.end194
  %190 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6195
  %191 = load i32*, i32** %temp_data, align 8, !dbg !6196
  %192 = bitcast i32* %191 to i8*, !dbg !6196
  call void %190(i8* %192), !dbg !6195
  br label %return, !dbg !6197

return:                                           ; preds = %if.end202, %if.end52, %if.then19, %if.then15, %if.then
  ret void, !dbg !6197
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_cacheUpdateFrames(%struct.DynamicPaintSurface* %surface) #0 !dbg !6198 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6201
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 6, !dbg !6203
  %1 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !6203
  %tobool = icmp ne %struct.PointCache* %1, null, !dbg !6201
  br i1 %tobool, label %if.then, label %if.end, !dbg !6204

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6205
  %start_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 22, !dbg !6207
  %3 = load i32, i32* %start_frame, align 4, !dbg !6207
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6208
  %pointcache1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 6, !dbg !6209
  %5 = load %struct.PointCache*, %struct.PointCache** %pointcache1, align 8, !dbg !6209
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %5, i32 0, i32 5, !dbg !6210
  store i32 %3, i32* %startframe, align 4, !dbg !6211
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6212
  %end_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 23, !dbg !6213
  %7 = load i32, i32* %end_frame, align 8, !dbg !6213
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !6214
  %pointcache2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 6, !dbg !6215
  %9 = load %struct.PointCache*, %struct.PointCache** %pointcache2, align 8, !dbg !6215
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %9, i32 0, i32 6, !dbg !6216
  store i32 %7, i32* %endframe, align 8, !dbg !6217
  br label %if.end, !dbg !6218

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6219
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @dynamicPaint_Modifier_do(%struct.DynamicPaintModifierData* %pmd, %struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !6220 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6225, metadata !DIExpression()), !dbg !6226
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6227, metadata !DIExpression()), !dbg !6228
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6229, metadata !DIExpression()), !dbg !6230
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6231
  call void @DM_ensure_tessface(%struct.DerivedMesh* %0), !dbg !6232
  %1 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6233
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6234
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6235
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6236
  call void @dynamicPaint_frameUpdate(%struct.DynamicPaintModifierData* %1, %struct.Scene* %2, %struct.Object* %3, %struct.DerivedMesh* %4), !dbg !6237
  %5 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6238
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6239
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6240
  %call = call %struct.DerivedMesh* @dynamicPaint_Modifier_apply(%struct.DynamicPaintModifierData* %5, %struct.Object* %6, %struct.DerivedMesh* %7), !dbg !6241
  ret %struct.DerivedMesh* %call, !dbg !6242
}

declare dso_local void @DM_ensure_tessface(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_frameUpdate(%struct.DynamicPaintModifierData* %pmd, %struct.Scene* %scene, %struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !6243 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %canvas1 = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %current_frame = alloca i32, align 4
  %no_surface_data = alloca i8, align 1
  %cache = alloca %struct.PointCache*, align 8
  %pid = alloca %struct.PTCacheID, align 8
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !6246, metadata !DIExpression()), !dbg !6247
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6248, metadata !DIExpression()), !dbg !6249
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6250, metadata !DIExpression()), !dbg !6251
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6252, metadata !DIExpression()), !dbg !6253
  %0 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6254
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %0, i32 0, i32 1, !dbg !6256
  %1 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !6256
  %tobool = icmp ne %struct.DynamicPaintCanvasSettings* %1, null, !dbg !6254
  br i1 %tobool, label %if.then, label %if.end109, !dbg !6257

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas1, metadata !6258, metadata !DIExpression()), !dbg !6260
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6261
  %canvas2 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %2, i32 0, i32 1, !dbg !6262
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas2, align 8, !dbg !6262
  store %struct.DynamicPaintCanvasSettings* %3, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6260
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !6263, metadata !DIExpression()), !dbg !6264
  %4 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6265
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %4, i32 0, i32 2, !dbg !6266
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !6267
  %5 = load i8*, i8** %first, align 8, !dbg !6267
  %6 = bitcast i8* %5 to %struct.DynamicPaintSurface*, !dbg !6265
  store %struct.DynamicPaintSurface* %6, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6264
  %7 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6268
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6269
  call void @canvas_copyDerivedMesh(%struct.DynamicPaintCanvasSettings* %7, %struct.DerivedMesh* %8), !dbg !6270
  %9 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6271
  %flags = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %9, i32 0, i32 4, !dbg !6273
  %10 = load i16, i16* %flags, align 2, !dbg !6273
  %conv = sext i16 %10 to i32, !dbg !6271
  %and = and i32 %conv, 2, !dbg !6274
  %tobool3 = icmp ne i32 %and, 0, !dbg !6274
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !6275

if.then4:                                         ; preds = %if.then
  br label %if.end109, !dbg !6276

if.end:                                           ; preds = %if.then
  br label %for.cond, !dbg !6277

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6278
  %tobool5 = icmp ne %struct.DynamicPaintSurface* %11, null, !dbg !6281
  br i1 %tobool5, label %for.body, label %for.end, !dbg !6281

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %current_frame, metadata !6282, metadata !DIExpression()), !dbg !6284
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6285
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !6286
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !6287
  %13 = load i32, i32* %cfra, align 8, !dbg !6287
  store i32 %13, i32* %current_frame, align 4, !dbg !6284
  call void @llvm.dbg.declare(metadata i8* %no_surface_data, metadata !6288, metadata !DIExpression()), !dbg !6289
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6290
  call void @surface_freeUnusedData(%struct.DynamicPaintSurface* %14), !dbg !6291
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6292
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %15, i32 0, i32 10, !dbg !6294
  %16 = load i16, i16* %format, align 4, !dbg !6294
  %conv6 = sext i16 %16 to i32, !dbg !6292
  %cmp = icmp eq i32 %conv6, 2, !dbg !6295
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !6296

if.then8:                                         ; preds = %for.body
  br label %for.inc, !dbg !6297

if.end9:                                          ; preds = %for.body
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6298
  %flags10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 18, !dbg !6300
  %18 = load i32, i32* %flags10, align 4, !dbg !6300
  %and11 = and i32 %18, 1, !dbg !6301
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6301
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6302

if.then13:                                        ; preds = %if.end9
  br label %for.inc, !dbg !6303

if.end14:                                         ; preds = %if.end9
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6304
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %19, i32 0, i32 3, !dbg !6305
  %20 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !6305
  %cmp15 = icmp eq %struct.PaintSurfaceData* %20, null, !dbg !6306
  %conv16 = zext i1 %cmp15 to i32, !dbg !6306
  %conv17 = trunc i32 %conv16 to i8, !dbg !6304
  store i8 %conv17, i8* %no_surface_data, align 1, !dbg !6307
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6308
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6310
  %call = call zeroext i8 @dynamicPaint_checkSurfaceData(%struct.Scene* %21, %struct.DynamicPaintSurface* %22), !dbg !6311
  %tobool18 = icmp ne i8 %call, 0, !dbg !6311
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !6312

if.then19:                                        ; preds = %if.end14
  br label %for.inc, !dbg !6313

if.end20:                                         ; preds = %if.end14
  %23 = load i32, i32* %current_frame, align 4, !dbg !6314
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6314
  %start_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %24, i32 0, i32 22, !dbg !6314
  %25 = load i32, i32* %start_frame, align 4, !dbg !6314
  %cmp21 = icmp slt i32 %23, %25, !dbg !6314
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !6317

if.then23:                                        ; preds = %if.end20
  %26 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6314
  %start_frame24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %26, i32 0, i32 22, !dbg !6314
  %27 = load i32, i32* %start_frame24, align 4, !dbg !6314
  store i32 %27, i32* %current_frame, align 4, !dbg !6314
  br label %if.end30, !dbg !6314

if.else:                                          ; preds = %if.end20
  %28 = load i32, i32* %current_frame, align 4, !dbg !6318
  %29 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6318
  %end_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %29, i32 0, i32 23, !dbg !6318
  %30 = load i32, i32* %end_frame, align 8, !dbg !6318
  %cmp25 = icmp sgt i32 %28, %30, !dbg !6318
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !6314

if.then27:                                        ; preds = %if.else
  %31 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6318
  %end_frame28 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %31, i32 0, i32 23, !dbg !6318
  %32 = load i32, i32* %end_frame28, align 8, !dbg !6318
  store i32 %32, i32* %current_frame, align 4, !dbg !6318
  br label %if.end29, !dbg !6318

if.end29:                                         ; preds = %if.then27, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then23
  %33 = load i8, i8* %no_surface_data, align 1, !dbg !6320
  %conv31 = zext i8 %33 to i32, !dbg !6320
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !6320
  br i1 %tobool32, label %if.then42, label %lor.lhs.false, !dbg !6322

lor.lhs.false:                                    ; preds = %if.end30
  %34 = load i32, i32* %current_frame, align 4, !dbg !6323
  %35 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6324
  %current_frame33 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %35, i32 0, i32 8, !dbg !6325
  %36 = load i32, i32* %current_frame33, align 8, !dbg !6325
  %cmp34 = icmp ne i32 %34, %36, !dbg !6326
  br i1 %cmp34, label %if.then42, label %lor.lhs.false36, !dbg !6327

lor.lhs.false36:                                  ; preds = %lor.lhs.false
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6328
  %r37 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 22, !dbg !6329
  %cfra38 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r37, i32 0, i32 5, !dbg !6330
  %38 = load i32, i32* %cfra38, align 8, !dbg !6330
  %39 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6331
  %start_frame39 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %39, i32 0, i32 22, !dbg !6332
  %40 = load i32, i32* %start_frame39, align 4, !dbg !6332
  %cmp40 = icmp eq i32 %38, %40, !dbg !6333
  br i1 %cmp40, label %if.then42, label %if.end107, !dbg !6334

if.then42:                                        ; preds = %lor.lhs.false36, %lor.lhs.false, %if.end30
  call void @llvm.dbg.declare(metadata %struct.PointCache** %cache, metadata !6335, metadata !DIExpression()), !dbg !6339
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6340
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 6, !dbg !6341
  %42 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !6341
  store %struct.PointCache* %42, %struct.PointCache** %cache, align 8, !dbg !6339
  call void @llvm.dbg.declare(metadata %struct.PTCacheID* %pid, metadata !6342, metadata !DIExpression()), !dbg !6344
  %43 = load i32, i32* %current_frame, align 4, !dbg !6345
  %44 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6346
  %current_frame43 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %44, i32 0, i32 8, !dbg !6347
  store i32 %43, i32* %current_frame43, align 8, !dbg !6348
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6349
  %46 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6350
  call void @BKE_ptcache_id_from_dynamicpaint(%struct.PTCacheID* %pid, %struct.Object* %45, %struct.DynamicPaintSurface* %46), !dbg !6351
  %47 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6352
  %start_frame44 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %47, i32 0, i32 22, !dbg !6353
  %48 = load i32, i32* %start_frame44, align 4, !dbg !6353
  %cache45 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %pid, i32 0, i32 25, !dbg !6354
  %49 = load %struct.PointCache*, %struct.PointCache** %cache45, align 8, !dbg !6354
  %startframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %49, i32 0, i32 5, !dbg !6355
  store i32 %48, i32* %startframe, align 4, !dbg !6356
  %50 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6357
  %end_frame46 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %50, i32 0, i32 23, !dbg !6358
  %51 = load i32, i32* %end_frame46, align 8, !dbg !6358
  %cache47 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %pid, i32 0, i32 25, !dbg !6359
  %52 = load %struct.PointCache*, %struct.PointCache** %cache47, align 8, !dbg !6359
  %endframe = getelementptr inbounds %struct.PointCache, %struct.PointCache* %52, i32 0, i32 6, !dbg !6360
  store i32 %51, i32* %endframe, align 8, !dbg !6361
  %53 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6362
  %54 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6363
  %r48 = getelementptr inbounds %struct.Scene, %struct.Scene* %54, i32 0, i32 22, !dbg !6364
  %cfra49 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r48, i32 0, i32 5, !dbg !6365
  %55 = load i32, i32* %cfra49, align 8, !dbg !6365
  %conv50 = sitofp i32 %55 to float, !dbg !6366
  call void @BKE_ptcache_id_time(%struct.PTCacheID* %pid, %struct.Scene* %53, float %conv50, i32* null, i32* null, float* null), !dbg !6367
  %56 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6368
  %r51 = getelementptr inbounds %struct.Scene, %struct.Scene* %56, i32 0, i32 22, !dbg !6370
  %cfra52 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r51, i32 0, i32 5, !dbg !6371
  %57 = load i32, i32* %cfra52, align 8, !dbg !6371
  %58 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6372
  %start_frame53 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %58, i32 0, i32 22, !dbg !6373
  %59 = load i32, i32* %start_frame53, align 4, !dbg !6373
  %cmp54 = icmp eq i32 %57, %59, !dbg !6374
  br i1 %cmp54, label %land.lhs.true, label %if.end63, !dbg !6375

land.lhs.true:                                    ; preds = %if.then42
  %60 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6376
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %60, i32 0, i32 2, !dbg !6377
  %61 = load i32, i32* %flag, align 8, !dbg !6377
  %and56 = and i32 %61, 1, !dbg !6378
  %tobool57 = icmp ne i32 %and56, 0, !dbg !6378
  br i1 %tobool57, label %if.end63, label %if.then58, !dbg !6379

if.then58:                                        ; preds = %land.lhs.true
  %62 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6380
  %flag59 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %62, i32 0, i32 2, !dbg !6382
  %63 = load i32, i32* %flag59, align 8, !dbg !6383
  %or = or i32 %63, 258, !dbg !6383
  store i32 %or, i32* %flag59, align 8, !dbg !6383
  %64 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6384
  %call60 = call i32 @BKE_ptcache_id_reset(%struct.Scene* %64, %struct.PTCacheID* %pid, i32 2), !dbg !6385
  %65 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6386
  %flag61 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %65, i32 0, i32 2, !dbg !6387
  %66 = load i32, i32* %flag61, align 8, !dbg !6388
  %and62 = and i32 %66, -259, !dbg !6388
  store i32 %and62, i32* %flag61, align 8, !dbg !6388
  br label %if.end63, !dbg !6389

if.end63:                                         ; preds = %if.then58, %land.lhs.true, %if.then42
  %67 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6390
  %r64 = getelementptr inbounds %struct.Scene, %struct.Scene* %67, i32 0, i32 22, !dbg !6392
  %cfra65 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r64, i32 0, i32 5, !dbg !6393
  %68 = load i32, i32* %cfra65, align 8, !dbg !6393
  %conv66 = sitofp i32 %68 to float, !dbg !6394
  %call67 = call i32 @BKE_ptcache_read(%struct.PTCacheID* %pid, float %conv66), !dbg !6395
  %tobool68 = icmp ne i32 %call67, 0, !dbg !6395
  br i1 %tobool68, label %if.then69, label %if.else72, !dbg !6396

if.then69:                                        ; preds = %if.end63
  %69 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6397
  %70 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6399
  %r70 = getelementptr inbounds %struct.Scene, %struct.Scene* %70, i32 0, i32 22, !dbg !6400
  %cfra71 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r70, i32 0, i32 5, !dbg !6401
  %71 = load i32, i32* %cfra71, align 8, !dbg !6401
  call void @BKE_ptcache_validate(%struct.PointCache* %69, i32 %71), !dbg !6402
  br label %if.end106, !dbg !6403

if.else72:                                        ; preds = %if.end63
  %72 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6404
  %r73 = getelementptr inbounds %struct.Scene, %struct.Scene* %72, i32 0, i32 22, !dbg !6406
  %cfra74 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r73, i32 0, i32 5, !dbg !6407
  %73 = load i32, i32* %cfra74, align 8, !dbg !6407
  %74 = load i32, i32* %current_frame, align 4, !dbg !6408
  %cmp75 = icmp eq i32 %73, %74, !dbg !6409
  br i1 %cmp75, label %land.lhs.true77, label %if.end105, !dbg !6410

land.lhs.true77:                                  ; preds = %if.else72
  %75 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6411
  %flag78 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %75, i32 0, i32 2, !dbg !6412
  %76 = load i32, i32* %flag78, align 8, !dbg !6412
  %and79 = and i32 %76, 1, !dbg !6413
  %tobool80 = icmp ne i32 %and79, 0, !dbg !6413
  br i1 %tobool80, label %if.end105, label %if.then81, !dbg !6414

if.then81:                                        ; preds = %land.lhs.true77
  %77 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6415
  %flags82 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %77, i32 0, i32 4, !dbg !6417
  %78 = load i16, i16* %flags82, align 2, !dbg !6418
  %conv83 = sext i16 %78 to i32, !dbg !6418
  %or84 = or i32 %conv83, 2, !dbg !6418
  %conv85 = trunc i32 %or84 to i16, !dbg !6418
  store i16 %conv85, i16* %flags82, align 2, !dbg !6418
  %79 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6419
  %80 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6420
  %81 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6421
  %82 = load i32, i32* %current_frame, align 4, !dbg !6422
  %call86 = call i32 @dynamicPaint_calculateFrame(%struct.DynamicPaintSurface* %79, %struct.Scene* %80, %struct.Object* %81, i32 %82), !dbg !6423
  %83 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6424
  %flags87 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %83, i32 0, i32 4, !dbg !6425
  %84 = load i16, i16* %flags87, align 2, !dbg !6426
  %conv88 = sext i16 %84 to i32, !dbg !6426
  %and89 = and i32 %conv88, -3, !dbg !6426
  %conv90 = trunc i32 %and89 to i16, !dbg !6426
  store i16 %conv90, i16* %flags87, align 2, !dbg !6426
  %85 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6427
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %85, i32 0, i32 11, !dbg !6429
  %86 = load i16, i16* %type, align 2, !dbg !6429
  %conv91 = sext i16 %86 to i32, !dbg !6427
  %cmp92 = icmp eq i32 %conv91, 1, !dbg !6430
  br i1 %cmp92, label %land.lhs.true94, label %if.end101, !dbg !6431

land.lhs.true94:                                  ; preds = %if.then81
  %87 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6432
  %flags95 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %87, i32 0, i32 18, !dbg !6433
  %88 = load i32, i32* %flags95, align 4, !dbg !6433
  %and96 = and i32 %88, 256, !dbg !6434
  %tobool97 = icmp ne i32 %and96, 0, !dbg !6434
  br i1 %tobool97, label %land.lhs.true98, label %if.end101, !dbg !6435

land.lhs.true98:                                  ; preds = %land.lhs.true94
  %89 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6436
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %89, i32 0, i32 0, !dbg !6437
  %90 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !6437
  %tobool99 = icmp ne %struct.DynamicPaintSurface* %90, null, !dbg !6436
  br i1 %tobool99, label %if.then100, label %if.end101, !dbg !6438

if.then100:                                       ; preds = %land.lhs.true98
  %91 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6439
  %92 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6441
  call void @canvas_copyDerivedMesh(%struct.DynamicPaintCanvasSettings* %91, %struct.DerivedMesh* %92), !dbg !6442
  br label %if.end101, !dbg !6443

if.end101:                                        ; preds = %if.then100, %land.lhs.true98, %land.lhs.true94, %if.then81
  %93 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !6444
  %94 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6445
  %current_frame102 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %94, i32 0, i32 8, !dbg !6446
  %95 = load i32, i32* %current_frame102, align 8, !dbg !6446
  call void @BKE_ptcache_validate(%struct.PointCache* %93, i32 %95), !dbg !6447
  %96 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6448
  %current_frame103 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %96, i32 0, i32 8, !dbg !6449
  %97 = load i32, i32* %current_frame103, align 8, !dbg !6449
  %call104 = call i32 @BKE_ptcache_write(%struct.PTCacheID* %pid, i32 %97), !dbg !6450
  br label %if.end105, !dbg !6451

if.end105:                                        ; preds = %if.end101, %land.lhs.true77, %if.else72
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then69
  br label %if.end107, !dbg !6452

if.end107:                                        ; preds = %if.end106, %lor.lhs.false36
  br label %for.inc, !dbg !6453

for.inc:                                          ; preds = %if.end107, %if.then19, %if.then13, %if.then8
  %98 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6454
  %next108 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %98, i32 0, i32 0, !dbg !6455
  %99 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next108, align 8, !dbg !6455
  store %struct.DynamicPaintSurface* %99, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6456
  br label %for.cond, !dbg !6457, !llvm.loop !6458

for.end:                                          ; preds = %for.cond
  br label %if.end109, !dbg !6460

if.end109:                                        ; preds = %if.then4, %for.end, %entry
  ret void, !dbg !6461
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DerivedMesh* @dynamicPaint_Modifier_apply(%struct.DynamicPaintModifierData* %pmd, %struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !6462 {
entry:
  %pmd.addr = alloca %struct.DynamicPaintModifierData*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %result = alloca %struct.DerivedMesh*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  %update_normals = alloca i8, align 1
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %i = alloca i32, align 4
  %pPoint = alloca %struct.PaintPoint*, align 8
  %col = alloca %struct.MLoopCol*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %totloop = alloca i32, align 4
  %fcolor = alloca float*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %totpoly = alloca i32, align 4
  %j = alloca i32, align 4
  %material = alloca %struct.Material*, align 8
  %l_index = alloca i32, align 4
  %v_index = alloca i32, align 4
  %c = alloca [3 x float], align 4
  %index = alloca i32, align 4
  %index224 = alloca i32, align 4
  %defgrp_index = alloca i32, align 4
  %dvert = alloca %struct.MDeformVert*, align 8
  %weight = alloca float*, align 8
  %i305 = alloca i32, align 4
  %dv = alloca %struct.MDeformVert*, align 8
  %def_weight = alloca %struct.MDeformWeight*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %i341 = alloca i32, align 4
  %wPoint = alloca %struct.PaintWavePoint*, align 8
  %normal = alloca [3 x float], align 4
  store %struct.DynamicPaintModifierData* %pmd, %struct.DynamicPaintModifierData** %pmd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd.addr, metadata !6465, metadata !DIExpression()), !dbg !6466
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6467, metadata !DIExpression()), !dbg !6468
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6469, metadata !DIExpression()), !dbg !6470
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result, metadata !6471, metadata !DIExpression()), !dbg !6472
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6473
  %call = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %0), !dbg !6474
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %result, align 8, !dbg !6472
  %1 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6475
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %1, i32 0, i32 1, !dbg !6477
  %2 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !6477
  %tobool = icmp ne %struct.DynamicPaintCanvasSettings* %2, null, !dbg !6475
  br i1 %tobool, label %land.lhs.true, label %if.end379, !dbg !6478

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6479
  %canvas1 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %3, i32 0, i32 1, !dbg !6480
  %4 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !6480
  %flags = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %4, i32 0, i32 4, !dbg !6481
  %5 = load i16, i16* %flags, align 2, !dbg !6481
  %conv = sext i16 %5 to i32, !dbg !6479
  %and = and i32 %conv, 2, !dbg !6482
  %tobool2 = icmp ne i32 %and, 0, !dbg !6482
  br i1 %tobool2, label %if.end379, label %if.then, !dbg !6483

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !6484, metadata !DIExpression()), !dbg !6486
  call void @llvm.dbg.declare(metadata i8* %update_normals, metadata !6487, metadata !DIExpression()), !dbg !6488
  store i8 0, i8* %update_normals, align 1, !dbg !6488
  %6 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !6489
  %canvas3 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %6, i32 0, i32 1, !dbg !6491
  %7 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas3, align 8, !dbg !6491
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %7, i32 0, i32 2, !dbg !6492
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !6493
  %8 = load i8*, i8** %first, align 8, !dbg !6493
  %9 = bitcast i8* %8 to %struct.DynamicPaintSurface*, !dbg !6489
  store %struct.DynamicPaintSurface* %9, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6494
  br label %for.cond, !dbg !6495

for.cond:                                         ; preds = %for.inc372, %if.then
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6496
  %tobool4 = icmp ne %struct.DynamicPaintSurface* %10, null, !dbg !6498
  br i1 %tobool4, label %for.body, label %for.end373, !dbg !6498

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !6499, metadata !DIExpression()), !dbg !6501
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6502
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 3, !dbg !6503
  %12 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !6503
  store %struct.PaintSurfaceData* %12, %struct.PaintSurfaceData** %sData, align 8, !dbg !6501
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6504
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 10, !dbg !6506
  %14 = load i16, i16* %format, align 4, !dbg !6506
  %conv5 = sext i16 %14 to i32, !dbg !6504
  %cmp = icmp ne i32 %conv5, 2, !dbg !6507
  br i1 %cmp, label %land.lhs.true7, label %if.end371, !dbg !6508

land.lhs.true7:                                   ; preds = %for.body
  %15 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6509
  %tobool8 = icmp ne %struct.PaintSurfaceData* %15, null, !dbg !6509
  br i1 %tobool8, label %if.then9, label %if.end371, !dbg !6510

if.then9:                                         ; preds = %land.lhs.true7
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6511
  %flags10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 18, !dbg !6514
  %17 = load i32, i32* %flags10, align 4, !dbg !6514
  %and11 = and i32 %17, 1, !dbg !6515
  %tobool12 = icmp ne i32 %and11, 0, !dbg !6515
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !6516

if.then13:                                        ; preds = %if.then9
  br label %for.inc372, !dbg !6517

if.end:                                           ; preds = %if.then9
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6518
  %format14 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 10, !dbg !6520
  %19 = load i16, i16* %format14, align 4, !dbg !6520
  %conv15 = sext i16 %19 to i32, !dbg !6518
  %cmp16 = icmp eq i32 %conv15, 1, !dbg !6521
  br i1 %cmp16, label %if.then18, label %if.end370, !dbg !6522

if.then18:                                        ; preds = %if.end
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6523
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 11, !dbg !6526
  %21 = load i16, i16* %type, align 2, !dbg !6526
  %conv19 = sext i16 %21 to i32, !dbg !6523
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !6527
  br i1 %cmp20, label %if.then22, label %if.else268, !dbg !6528

if.then22:                                        ; preds = %if.then18
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6529, metadata !DIExpression()), !dbg !6531
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !6532, metadata !DIExpression()), !dbg !6533
  %22 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6534
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %22, i32 0, i32 1, !dbg !6535
  %23 = load i8*, i8** %type_data, align 8, !dbg !6535
  %24 = bitcast i8* %23 to %struct.PaintPoint*, !dbg !6536
  store %struct.PaintPoint* %24, %struct.PaintPoint** %pPoint, align 8, !dbg !6533
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %col, metadata !6537, metadata !DIExpression()), !dbg !6540
  store %struct.MLoopCol* null, %struct.MLoopCol** %col, align 8, !dbg !6540
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !6541, metadata !DIExpression()), !dbg !6542
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6543
  %call23 = call %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh* %25), !dbg !6544
  store %struct.MLoop* %call23, %struct.MLoop** %mloop, align 8, !dbg !6542
  call void @llvm.dbg.declare(metadata i32* %totloop, metadata !6545, metadata !DIExpression()), !dbg !6546
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6547
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 8, !dbg !6548
  %27 = load i32, i32* %numLoopData, align 4, !dbg !6548
  store i32 %27, i32* %totloop, align 4, !dbg !6546
  call void @llvm.dbg.declare(metadata float** %fcolor, metadata !6549, metadata !DIExpression()), !dbg !6550
  %28 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6551
  %29 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6552
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %29, i32 0, i32 4, !dbg !6553
  %30 = load i32, i32* %total_points, align 8, !dbg !6553
  %conv24 = sext i32 %30 to i64, !dbg !6552
  %mul = mul i64 4, %conv24, !dbg !6554
  %mul25 = mul i64 %mul, 4, !dbg !6555
  %call26 = call i8* %28(i64 %mul25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.36, i64 0, i64 0)), !dbg !6551
  %31 = bitcast i8* %call26 to float*, !dbg !6551
  store float* %31, float** %fcolor, align 8, !dbg !6550
  store i32 0, i32* %i, align 4, !dbg !6556
  br label %for.cond27, !dbg !6558

for.cond27:                                       ; preds = %for.inc, %if.then22
  %32 = load i32, i32* %i, align 4, !dbg !6559
  %33 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6561
  %total_points28 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %33, i32 0, i32 4, !dbg !6562
  %34 = load i32, i32* %total_points28, align 8, !dbg !6562
  %cmp29 = icmp slt i32 %32, %34, !dbg !6563
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !6564

for.body31:                                       ; preds = %for.cond27
  %35 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6565
  %36 = load i32, i32* %i, align 4, !dbg !6567
  %idxprom = sext i32 %36 to i64, !dbg !6565
  %arrayidx = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %35, i64 %idxprom, !dbg !6565
  %color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx, i32 0, i32 4, !dbg !6568
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !6565
  %37 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6569
  %38 = load i32, i32* %i, align 4, !dbg !6570
  %idxprom32 = sext i32 %38 to i64, !dbg !6569
  %arrayidx33 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %37, i64 %idxprom32, !dbg !6569
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx33, i32 0, i32 5, !dbg !6571
  %39 = load float, float* %alpha, align 4, !dbg !6571
  %40 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6572
  %41 = load i32, i32* %i, align 4, !dbg !6573
  %idxprom34 = sext i32 %41 to i64, !dbg !6572
  %arrayidx35 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %40, i64 %idxprom34, !dbg !6572
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx35, i32 0, i32 0, !dbg !6574
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !6572
  %42 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6575
  %43 = load i32, i32* %i, align 4, !dbg !6576
  %idxprom37 = sext i32 %43 to i64, !dbg !6575
  %arrayidx38 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %42, i64 %idxprom37, !dbg !6575
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx38, i32 0, i32 1, !dbg !6577
  %44 = load float, float* %e_alpha, align 4, !dbg !6577
  %45 = load float*, float** %fcolor, align 8, !dbg !6578
  %46 = load i32, i32* %i, align 4, !dbg !6579
  %mul39 = mul nsw i32 %46, 4, !dbg !6580
  %idxprom40 = sext i32 %mul39 to i64, !dbg !6578
  %arrayidx41 = getelementptr inbounds float, float* %45, i64 %idxprom40, !dbg !6578
  call void @blendColors(float* %arraydecay, float %39, float* %arraydecay36, float %44, float* %arrayidx41), !dbg !6581
  br label %for.inc, !dbg !6582

for.inc:                                          ; preds = %for.body31
  %47 = load i32, i32* %i, align 4, !dbg !6583
  %inc = add nsw i32 %47, 1, !dbg !6583
  store i32 %inc, i32* %i, align 4, !dbg !6583
  br label %for.cond27, !dbg !6584, !llvm.loop !6585

for.end:                                          ; preds = %for.cond27
  %48 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6587
  %flags42 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %48, i32 0, i32 18, !dbg !6589
  %49 = load i32, i32* %flags42, align 4, !dbg !6589
  %and43 = and i32 %49, 64, !dbg !6590
  %tobool44 = icmp ne i32 %and43, 0, !dbg !6590
  br i1 %tobool44, label %if.then45, label %if.end143, !dbg !6591

if.then45:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !6592, metadata !DIExpression()), !dbg !6596
  %50 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6597
  %call46 = call %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh* %50), !dbg !6598
  store %struct.MPoly* %call46, %struct.MPoly** %mp, align 8, !dbg !6596
  call void @llvm.dbg.declare(metadata i32* %totpoly, metadata !6599, metadata !DIExpression()), !dbg !6600
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6601
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %51, i32 0, i32 9, !dbg !6602
  %52 = load i32, i32* %numPolyData, align 8, !dbg !6602
  store i32 %52, i32* %totpoly, align 4, !dbg !6600
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6603
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %53, i32 0, i32 3, !dbg !6604
  %call47 = call i8* @CustomData_get_layer(%struct.CustomData* %loopData, i32 32), !dbg !6605
  %54 = bitcast i8* %call47 to %struct.MLoopCol*, !dbg !6605
  store %struct.MLoopCol* %54, %struct.MLoopCol** %col, align 8, !dbg !6606
  %55 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6607
  %tobool48 = icmp ne %struct.MLoopCol* %55, null, !dbg !6607
  br i1 %tobool48, label %if.end52, label %if.then49, !dbg !6609

if.then49:                                        ; preds = %if.then45
  %56 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6610
  %loopData50 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %56, i32 0, i32 3, !dbg !6611
  %57 = load i32, i32* %totloop, align 4, !dbg !6612
  %call51 = call i8* @CustomData_add_layer(%struct.CustomData* %loopData50, i32 32, i32 1, i8* null, i32 %57), !dbg !6613
  %58 = bitcast i8* %call51 to %struct.MLoopCol*, !dbg !6613
  store %struct.MLoopCol* %58, %struct.MLoopCol** %col, align 8, !dbg !6614
  br label %if.end52, !dbg !6615

if.end52:                                         ; preds = %if.then49, %if.then45
  %59 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6616
  %tobool53 = icmp ne %struct.MLoopCol* %59, null, !dbg !6616
  br i1 %tobool53, label %if.then54, label %if.end142, !dbg !6618

if.then54:                                        ; preds = %if.end52
  store i32 0, i32* %i, align 4, !dbg !6619
  br label %for.cond55, !dbg !6622

for.cond55:                                       ; preds = %for.inc139, %if.then54
  %60 = load i32, i32* %i, align 4, !dbg !6623
  %61 = load i32, i32* %totpoly, align 4, !dbg !6625
  %cmp56 = icmp slt i32 %60, %61, !dbg !6626
  br i1 %cmp56, label %for.body58, label %for.end141, !dbg !6627

for.body58:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6628, metadata !DIExpression()), !dbg !6630
  store i32 0, i32* %j, align 4, !dbg !6630
  call void @llvm.dbg.declare(metadata %struct.Material** %material, metadata !6631, metadata !DIExpression()), !dbg !6634
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6635
  %63 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6636
  %64 = load i32, i32* %i, align 4, !dbg !6637
  %idxprom59 = sext i32 %64 to i64, !dbg !6636
  %arrayidx60 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %63, i64 %idxprom59, !dbg !6636
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx60, i32 0, i32 2, !dbg !6638
  %65 = load i16, i16* %mat_nr, align 4, !dbg !6638
  %conv61 = sext i16 %65 to i32, !dbg !6636
  %add = add nsw i32 %conv61, 1, !dbg !6639
  %conv62 = trunc i32 %add to i16, !dbg !6636
  %call63 = call %struct.Material* @give_current_material(%struct.Object* %62, i16 signext %conv62), !dbg !6640
  store %struct.Material* %call63, %struct.Material** %material, align 8, !dbg !6634
  br label %for.cond64, !dbg !6641

for.cond64:                                       ; preds = %for.inc136, %for.body58
  %66 = load i32, i32* %j, align 4, !dbg !6642
  %67 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6645
  %68 = load i32, i32* %i, align 4, !dbg !6646
  %idxprom65 = sext i32 %68 to i64, !dbg !6645
  %arrayidx66 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %67, i64 %idxprom65, !dbg !6645
  %totloop67 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx66, i32 0, i32 1, !dbg !6647
  %69 = load i32, i32* %totloop67, align 4, !dbg !6647
  %cmp68 = icmp slt i32 %66, %69, !dbg !6648
  br i1 %cmp68, label %for.body70, label %for.end138, !dbg !6649

for.body70:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata i32* %l_index, metadata !6650, metadata !DIExpression()), !dbg !6652
  %70 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !6653
  %71 = load i32, i32* %i, align 4, !dbg !6654
  %idxprom71 = sext i32 %71 to i64, !dbg !6653
  %arrayidx72 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %70, i64 %idxprom71, !dbg !6653
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx72, i32 0, i32 0, !dbg !6655
  %72 = load i32, i32* %loopstart, align 4, !dbg !6655
  %73 = load i32, i32* %j, align 4, !dbg !6656
  %add73 = add nsw i32 %72, %73, !dbg !6657
  store i32 %add73, i32* %l_index, align 4, !dbg !6652
  call void @llvm.dbg.declare(metadata i32* %v_index, metadata !6658, metadata !DIExpression()), !dbg !6659
  %74 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6660
  %75 = load i32, i32* %l_index, align 4, !dbg !6661
  %idxprom74 = sext i32 %75 to i64, !dbg !6660
  %arrayidx75 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %74, i64 %idxprom74, !dbg !6660
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx75, i32 0, i32 0, !dbg !6662
  %76 = load i32, i32* %v, align 4, !dbg !6662
  store i32 %76, i32* %v_index, align 4, !dbg !6659
  %77 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6663
  %preview_id = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %77, i32 0, i32 15, !dbg !6665
  %78 = load i16, i16* %preview_id, align 2, !dbg !6665
  %conv76 = sext i16 %78 to i32, !dbg !6663
  %cmp77 = icmp eq i32 %conv76, 0, !dbg !6666
  br i1 %cmp77, label %if.then79, label %if.else103, !dbg !6667

if.then79:                                        ; preds = %for.body70
  call void @llvm.dbg.declare(metadata [3 x float]* %c, metadata !6668, metadata !DIExpression()), !dbg !6670
  %79 = load i32, i32* %v_index, align 4, !dbg !6671
  %mul80 = mul nsw i32 %79, 4, !dbg !6671
  store i32 %mul80, i32* %v_index, align 4, !dbg !6671
  %80 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6672
  %81 = load i32, i32* %l_index, align 4, !dbg !6673
  %idxprom81 = sext i32 %81 to i64, !dbg !6672
  %arrayidx82 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %80, i64 %idxprom81, !dbg !6672
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx82, i32 0, i32 3, !dbg !6674
  store i8 -1, i8* %a, align 1, !dbg !6675
  %82 = load %struct.Material*, %struct.Material** %material, align 8, !dbg !6676
  %tobool83 = icmp ne %struct.Material* %82, null, !dbg !6676
  br i1 %tobool83, label %if.then84, label %if.else, !dbg !6678

if.then84:                                        ; preds = %if.then79
  %83 = load %struct.Material*, %struct.Material** %material, align 8, !dbg !6679
  %r = getelementptr inbounds %struct.Material, %struct.Material* %83, i32 0, i32 4, !dbg !6681
  %84 = load float, float* %r, align 4, !dbg !6681
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !6682
  store float %84, float* %arrayidx85, align 4, !dbg !6683
  %85 = load %struct.Material*, %struct.Material** %material, align 8, !dbg !6684
  %g = getelementptr inbounds %struct.Material, %struct.Material* %85, i32 0, i32 5, !dbg !6685
  %86 = load float, float* %g, align 8, !dbg !6685
  %arrayidx86 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 1, !dbg !6686
  store float %86, float* %arrayidx86, align 4, !dbg !6687
  %87 = load %struct.Material*, %struct.Material** %material, align 8, !dbg !6688
  %b = getelementptr inbounds %struct.Material, %struct.Material* %87, i32 0, i32 6, !dbg !6689
  %88 = load float, float* %b, align 4, !dbg !6689
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 2, !dbg !6690
  store float %88, float* %arrayidx87, align 4, !dbg !6691
  br label %if.end91, !dbg !6692

if.else:                                          ; preds = %if.then79
  %arrayidx88 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !6693
  store float 0x3FE4CCCCC0000000, float* %arrayidx88, align 4, !dbg !6695
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 1, !dbg !6696
  store float 0x3FE4CCCCC0000000, float* %arrayidx89, align 4, !dbg !6697
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 2, !dbg !6698
  store float 0x3FE4CCCCC0000000, float* %arrayidx90, align 4, !dbg !6699
  br label %if.end91

if.end91:                                         ; preds = %if.else, %if.then84
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !6700
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !6701
  %89 = load float*, float** %fcolor, align 8, !dbg !6702
  %90 = load i32, i32* %v_index, align 4, !dbg !6703
  %idxprom94 = sext i32 %90 to i64, !dbg !6702
  %arrayidx95 = getelementptr inbounds float, float* %89, i64 %idxprom94, !dbg !6702
  %91 = load float*, float** %fcolor, align 8, !dbg !6704
  %92 = load i32, i32* %v_index, align 4, !dbg !6705
  %add96 = add nsw i32 %92, 3, !dbg !6706
  %idxprom97 = sext i32 %add96 to i64, !dbg !6704
  %arrayidx98 = getelementptr inbounds float, float* %91, i64 %idxprom97, !dbg !6704
  %93 = load float, float* %arrayidx98, align 4, !dbg !6704
  call void @interp_v3_v3v3(float* %arraydecay92, float* %arraydecay93, float* %arrayidx95, float %93), !dbg !6707
  %94 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6708
  %95 = load i32, i32* %l_index, align 4, !dbg !6709
  %idxprom99 = sext i32 %95 to i64, !dbg !6708
  %arrayidx100 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %94, i64 %idxprom99, !dbg !6708
  %r101 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx100, i32 0, i32 0, !dbg !6710
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %c, i64 0, i64 0, !dbg !6711
  call void @rgb_float_to_uchar(i8* %r101, float* %arraydecay102), !dbg !6712
  br label %if.end135, !dbg !6713

if.else103:                                       ; preds = %for.body70
  %96 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6714
  %97 = load i32, i32* %v_index, align 4, !dbg !6714
  %idxprom104 = sext i32 %97 to i64, !dbg !6714
  %arrayidx105 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %96, i64 %idxprom104, !dbg !6714
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx105, i32 0, i32 2, !dbg !6714
  %98 = load float, float* %wetness, align 4, !dbg !6714
  %cmp106 = fcmp ole float %98, 0.000000e+00, !dbg !6714
  br i1 %cmp106, label %cond.true, label %cond.false, !dbg !6714

cond.true:                                        ; preds = %if.else103
  br label %cond.end120, !dbg !6714

cond.false:                                       ; preds = %if.else103
  %99 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6714
  %100 = load i32, i32* %v_index, align 4, !dbg !6714
  %idxprom108 = sext i32 %100 to i64, !dbg !6714
  %arrayidx109 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %99, i64 %idxprom108, !dbg !6714
  %wetness110 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx109, i32 0, i32 2, !dbg !6714
  %101 = load float, float* %wetness110, align 4, !dbg !6714
  %cmp111 = fcmp ogt float %101, 0x3FEFEFEFE0000000, !dbg !6714
  br i1 %cmp111, label %cond.true113, label %cond.false114, !dbg !6714

cond.true113:                                     ; preds = %cond.false
  br label %cond.end, !dbg !6714

cond.false114:                                    ; preds = %cond.false
  %102 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6714
  %103 = load i32, i32* %v_index, align 4, !dbg !6714
  %idxprom115 = sext i32 %103 to i64, !dbg !6714
  %arrayidx116 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %102, i64 %idxprom115, !dbg !6714
  %wetness117 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx116, i32 0, i32 2, !dbg !6714
  %104 = load float, float* %wetness117, align 4, !dbg !6714
  %mul118 = fmul float 2.550000e+02, %104, !dbg !6714
  %add119 = fadd float %mul118, 5.000000e-01, !dbg !6714
  br label %cond.end, !dbg !6714

cond.end:                                         ; preds = %cond.false114, %cond.true113
  %cond = phi float [ 2.550000e+02, %cond.true113 ], [ %add119, %cond.false114 ], !dbg !6714
  br label %cond.end120, !dbg !6714

cond.end120:                                      ; preds = %cond.end, %cond.true
  %cond121 = phi float [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !6714
  %conv122 = fptoui float %cond121 to i8, !dbg !6714
  %105 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6716
  %106 = load i32, i32* %l_index, align 4, !dbg !6717
  %idxprom123 = sext i32 %106 to i64, !dbg !6716
  %arrayidx124 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %105, i64 %idxprom123, !dbg !6716
  %b125 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx124, i32 0, i32 2, !dbg !6718
  store i8 %conv122, i8* %b125, align 1, !dbg !6719
  %107 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6720
  %108 = load i32, i32* %l_index, align 4, !dbg !6721
  %idxprom126 = sext i32 %108 to i64, !dbg !6720
  %arrayidx127 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %107, i64 %idxprom126, !dbg !6720
  %g128 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx127, i32 0, i32 1, !dbg !6722
  store i8 %conv122, i8* %g128, align 1, !dbg !6723
  %109 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6724
  %110 = load i32, i32* %l_index, align 4, !dbg !6725
  %idxprom129 = sext i32 %110 to i64, !dbg !6724
  %arrayidx130 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %109, i64 %idxprom129, !dbg !6724
  %r131 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx130, i32 0, i32 0, !dbg !6726
  store i8 %conv122, i8* %r131, align 1, !dbg !6727
  %111 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6728
  %112 = load i32, i32* %l_index, align 4, !dbg !6729
  %idxprom132 = sext i32 %112 to i64, !dbg !6728
  %arrayidx133 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %111, i64 %idxprom132, !dbg !6728
  %a134 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx133, i32 0, i32 3, !dbg !6730
  store i8 -1, i8* %a134, align 1, !dbg !6731
  br label %if.end135

if.end135:                                        ; preds = %cond.end120, %if.end91
  br label %for.inc136, !dbg !6732

for.inc136:                                       ; preds = %if.end135
  %113 = load i32, i32* %j, align 4, !dbg !6733
  %inc137 = add nsw i32 %113, 1, !dbg !6733
  store i32 %inc137, i32* %j, align 4, !dbg !6733
  br label %for.cond64, !dbg !6734, !llvm.loop !6735

for.end138:                                       ; preds = %for.cond64
  br label %for.inc139, !dbg !6737

for.inc139:                                       ; preds = %for.end138
  %114 = load i32, i32* %i, align 4, !dbg !6738
  %inc140 = add nsw i32 %114, 1, !dbg !6738
  store i32 %inc140, i32* %i, align 4, !dbg !6738
  br label %for.cond55, !dbg !6739, !llvm.loop !6740

for.end141:                                       ; preds = %for.cond55
  br label %if.end142, !dbg !6742

if.end142:                                        ; preds = %for.end141, %if.end52
  br label %if.end143, !dbg !6743

if.end143:                                        ; preds = %if.end142, %for.end
  %115 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6744
  %loopData144 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %115, i32 0, i32 3, !dbg !6745
  %116 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6746
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %116, i32 0, i32 48, !dbg !6747
  %arraydecay145 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !6746
  %call146 = call i8* @CustomData_get_layer_named(%struct.CustomData* %loopData144, i32 17, i8* %arraydecay145), !dbg !6748
  %117 = bitcast i8* %call146 to %struct.MLoopCol*, !dbg !6748
  store %struct.MLoopCol* %117, %struct.MLoopCol** %col, align 8, !dbg !6749
  %118 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6750
  %tobool147 = icmp ne %struct.MLoopCol* %118, null, !dbg !6750
  br i1 %tobool147, label %if.end157, label %land.lhs.true148, !dbg !6752

land.lhs.true148:                                 ; preds = %if.end143
  %119 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6753
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6754
  %call149 = call zeroext i8 @dynamicPaint_outputLayerExists(%struct.DynamicPaintSurface* %119, %struct.Object* %120, i32 0), !dbg !6755
  %conv150 = zext i8 %call149 to i32, !dbg !6755
  %tobool151 = icmp ne i32 %conv150, 0, !dbg !6755
  br i1 %tobool151, label %if.then152, label %if.end157, !dbg !6756

if.then152:                                       ; preds = %land.lhs.true148
  %121 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6757
  %loopData153 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %121, i32 0, i32 3, !dbg !6758
  %122 = load i32, i32* %totloop, align 4, !dbg !6759
  %123 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6760
  %output_name154 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %123, i32 0, i32 48, !dbg !6761
  %arraydecay155 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name154, i64 0, i64 0, !dbg !6760
  %call156 = call i8* @CustomData_add_layer_named(%struct.CustomData* %loopData153, i32 17, i32 1, i8* null, i32 %122, i8* %arraydecay155), !dbg !6762
  %124 = bitcast i8* %call156 to %struct.MLoopCol*, !dbg !6762
  store %struct.MLoopCol* %124, %struct.MLoopCol** %col, align 8, !dbg !6763
  br label %if.end157, !dbg !6764

if.end157:                                        ; preds = %if.then152, %land.lhs.true148, %if.end143
  %125 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6765
  %tobool158 = icmp ne %struct.MLoopCol* %125, null, !dbg !6765
  br i1 %tobool158, label %if.then159, label %if.end203, !dbg !6767

if.then159:                                       ; preds = %if.end157
  store i32 0, i32* %i, align 4, !dbg !6768
  br label %for.cond160, !dbg !6771

for.cond160:                                      ; preds = %for.inc200, %if.then159
  %126 = load i32, i32* %i, align 4, !dbg !6772
  %127 = load i32, i32* %totloop, align 4, !dbg !6774
  %cmp161 = icmp slt i32 %126, %127, !dbg !6775
  br i1 %cmp161, label %for.body163, label %for.end202, !dbg !6776

for.body163:                                      ; preds = %for.cond160
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6777, metadata !DIExpression()), !dbg !6779
  %128 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6780
  %129 = load i32, i32* %i, align 4, !dbg !6781
  %idxprom164 = sext i32 %129 to i64, !dbg !6780
  %arrayidx165 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %128, i64 %idxprom164, !dbg !6780
  %v166 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx165, i32 0, i32 0, !dbg !6782
  %130 = load i32, i32* %v166, align 4, !dbg !6782
  %mul167 = mul i32 %130, 4, !dbg !6783
  store i32 %mul167, i32* %index, align 4, !dbg !6779
  %131 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6784
  %132 = load i32, i32* %i, align 4, !dbg !6785
  %idxprom168 = sext i32 %132 to i64, !dbg !6784
  %arrayidx169 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %131, i64 %idxprom168, !dbg !6784
  %r170 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx169, i32 0, i32 0, !dbg !6786
  %133 = load float*, float** %fcolor, align 8, !dbg !6787
  %134 = load i32, i32* %index, align 4, !dbg !6788
  %idxprom171 = sext i32 %134 to i64, !dbg !6787
  %arrayidx172 = getelementptr inbounds float, float* %133, i64 %idxprom171, !dbg !6787
  call void @rgb_float_to_uchar(i8* %r170, float* %arrayidx172), !dbg !6789
  %135 = load float*, float** %fcolor, align 8, !dbg !6790
  %136 = load i32, i32* %index, align 4, !dbg !6790
  %add173 = add nsw i32 %136, 3, !dbg !6790
  %idxprom174 = sext i32 %add173 to i64, !dbg !6790
  %arrayidx175 = getelementptr inbounds float, float* %135, i64 %idxprom174, !dbg !6790
  %137 = load float, float* %arrayidx175, align 4, !dbg !6790
  %cmp176 = fcmp ole float %137, 0.000000e+00, !dbg !6790
  br i1 %cmp176, label %cond.true178, label %cond.false179, !dbg !6790

cond.true178:                                     ; preds = %for.body163
  br label %cond.end194, !dbg !6790

cond.false179:                                    ; preds = %for.body163
  %138 = load float*, float** %fcolor, align 8, !dbg !6790
  %139 = load i32, i32* %index, align 4, !dbg !6790
  %add180 = add nsw i32 %139, 3, !dbg !6790
  %idxprom181 = sext i32 %add180 to i64, !dbg !6790
  %arrayidx182 = getelementptr inbounds float, float* %138, i64 %idxprom181, !dbg !6790
  %140 = load float, float* %arrayidx182, align 4, !dbg !6790
  %cmp183 = fcmp ogt float %140, 0x3FEFEFEFE0000000, !dbg !6790
  br i1 %cmp183, label %cond.true185, label %cond.false186, !dbg !6790

cond.true185:                                     ; preds = %cond.false179
  br label %cond.end192, !dbg !6790

cond.false186:                                    ; preds = %cond.false179
  %141 = load float*, float** %fcolor, align 8, !dbg !6790
  %142 = load i32, i32* %index, align 4, !dbg !6790
  %add187 = add nsw i32 %142, 3, !dbg !6790
  %idxprom188 = sext i32 %add187 to i64, !dbg !6790
  %arrayidx189 = getelementptr inbounds float, float* %141, i64 %idxprom188, !dbg !6790
  %143 = load float, float* %arrayidx189, align 4, !dbg !6790
  %mul190 = fmul float 2.550000e+02, %143, !dbg !6790
  %add191 = fadd float %mul190, 5.000000e-01, !dbg !6790
  br label %cond.end192, !dbg !6790

cond.end192:                                      ; preds = %cond.false186, %cond.true185
  %cond193 = phi float [ 2.550000e+02, %cond.true185 ], [ %add191, %cond.false186 ], !dbg !6790
  br label %cond.end194, !dbg !6790

cond.end194:                                      ; preds = %cond.end192, %cond.true178
  %cond195 = phi float [ 0.000000e+00, %cond.true178 ], [ %cond193, %cond.end192 ], !dbg !6790
  %conv196 = fptoui float %cond195 to i8, !dbg !6790
  %144 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6791
  %145 = load i32, i32* %i, align 4, !dbg !6792
  %idxprom197 = sext i32 %145 to i64, !dbg !6791
  %arrayidx198 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %144, i64 %idxprom197, !dbg !6791
  %a199 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx198, i32 0, i32 3, !dbg !6793
  store i8 %conv196, i8* %a199, align 1, !dbg !6794
  br label %for.inc200, !dbg !6795

for.inc200:                                       ; preds = %cond.end194
  %146 = load i32, i32* %i, align 4, !dbg !6796
  %inc201 = add nsw i32 %146, 1, !dbg !6796
  store i32 %inc201, i32* %i, align 4, !dbg !6796
  br label %for.cond160, !dbg !6797, !llvm.loop !6798

for.end202:                                       ; preds = %for.cond160
  br label %if.end203, !dbg !6800

if.end203:                                        ; preds = %for.end202, %if.end157
  %147 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6801
  %148 = load float*, float** %fcolor, align 8, !dbg !6802
  %149 = bitcast float* %148 to i8*, !dbg !6802
  call void %147(i8* %149), !dbg !6801
  %150 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6803
  %loopData204 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %150, i32 0, i32 3, !dbg !6804
  %151 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6805
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %151, i32 0, i32 49, !dbg !6806
  %arraydecay205 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !6805
  %call206 = call i8* @CustomData_get_layer_named(%struct.CustomData* %loopData204, i32 17, i8* %arraydecay205), !dbg !6807
  %152 = bitcast i8* %call206 to %struct.MLoopCol*, !dbg !6807
  store %struct.MLoopCol* %152, %struct.MLoopCol** %col, align 8, !dbg !6808
  %153 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6809
  %tobool207 = icmp ne %struct.MLoopCol* %153, null, !dbg !6809
  br i1 %tobool207, label %if.end217, label %land.lhs.true208, !dbg !6811

land.lhs.true208:                                 ; preds = %if.end203
  %154 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6812
  %155 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6813
  %call209 = call zeroext i8 @dynamicPaint_outputLayerExists(%struct.DynamicPaintSurface* %154, %struct.Object* %155, i32 1), !dbg !6814
  %conv210 = zext i8 %call209 to i32, !dbg !6814
  %tobool211 = icmp ne i32 %conv210, 0, !dbg !6814
  br i1 %tobool211, label %if.then212, label %if.end217, !dbg !6815

if.then212:                                       ; preds = %land.lhs.true208
  %156 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6816
  %loopData213 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %156, i32 0, i32 3, !dbg !6817
  %157 = load i32, i32* %totloop, align 4, !dbg !6818
  %158 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6819
  %output_name2214 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %158, i32 0, i32 49, !dbg !6820
  %arraydecay215 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2214, i64 0, i64 0, !dbg !6819
  %call216 = call i8* @CustomData_add_layer_named(%struct.CustomData* %loopData213, i32 17, i32 1, i8* null, i32 %157, i8* %arraydecay215), !dbg !6821
  %159 = bitcast i8* %call216 to %struct.MLoopCol*, !dbg !6821
  store %struct.MLoopCol* %159, %struct.MLoopCol** %col, align 8, !dbg !6822
  br label %if.end217, !dbg !6823

if.end217:                                        ; preds = %if.then212, %land.lhs.true208, %if.end203
  %160 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6824
  %tobool218 = icmp ne %struct.MLoopCol* %160, null, !dbg !6824
  br i1 %tobool218, label %if.then219, label %if.end267, !dbg !6826

if.then219:                                       ; preds = %if.end217
  store i32 0, i32* %i, align 4, !dbg !6827
  br label %for.cond220, !dbg !6830

for.cond220:                                      ; preds = %for.inc264, %if.then219
  %161 = load i32, i32* %i, align 4, !dbg !6831
  %162 = load i32, i32* %totloop, align 4, !dbg !6833
  %cmp221 = icmp slt i32 %161, %162, !dbg !6834
  br i1 %cmp221, label %for.body223, label %for.end266, !dbg !6835

for.body223:                                      ; preds = %for.cond220
  call void @llvm.dbg.declare(metadata i32* %index224, metadata !6836, metadata !DIExpression()), !dbg !6838
  %163 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !6839
  %164 = load i32, i32* %i, align 4, !dbg !6840
  %idxprom225 = sext i32 %164 to i64, !dbg !6839
  %arrayidx226 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %163, i64 %idxprom225, !dbg !6839
  %v227 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx226, i32 0, i32 0, !dbg !6841
  %165 = load i32, i32* %v227, align 4, !dbg !6841
  store i32 %165, i32* %index224, align 4, !dbg !6838
  %166 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6842
  %167 = load i32, i32* %index224, align 4, !dbg !6842
  %idxprom228 = sext i32 %167 to i64, !dbg !6842
  %arrayidx229 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %166, i64 %idxprom228, !dbg !6842
  %wetness230 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx229, i32 0, i32 2, !dbg !6842
  %168 = load float, float* %wetness230, align 4, !dbg !6842
  %cmp231 = fcmp ole float %168, 0.000000e+00, !dbg !6842
  br i1 %cmp231, label %cond.true233, label %cond.false234, !dbg !6842

cond.true233:                                     ; preds = %for.body223
  br label %cond.end249, !dbg !6842

cond.false234:                                    ; preds = %for.body223
  %169 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6842
  %170 = load i32, i32* %index224, align 4, !dbg !6842
  %idxprom235 = sext i32 %170 to i64, !dbg !6842
  %arrayidx236 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %169, i64 %idxprom235, !dbg !6842
  %wetness237 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx236, i32 0, i32 2, !dbg !6842
  %171 = load float, float* %wetness237, align 4, !dbg !6842
  %cmp238 = fcmp ogt float %171, 0x3FEFEFEFE0000000, !dbg !6842
  br i1 %cmp238, label %cond.true240, label %cond.false241, !dbg !6842

cond.true240:                                     ; preds = %cond.false234
  br label %cond.end247, !dbg !6842

cond.false241:                                    ; preds = %cond.false234
  %172 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !6842
  %173 = load i32, i32* %index224, align 4, !dbg !6842
  %idxprom242 = sext i32 %173 to i64, !dbg !6842
  %arrayidx243 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %172, i64 %idxprom242, !dbg !6842
  %wetness244 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %arrayidx243, i32 0, i32 2, !dbg !6842
  %174 = load float, float* %wetness244, align 4, !dbg !6842
  %mul245 = fmul float 2.550000e+02, %174, !dbg !6842
  %add246 = fadd float %mul245, 5.000000e-01, !dbg !6842
  br label %cond.end247, !dbg !6842

cond.end247:                                      ; preds = %cond.false241, %cond.true240
  %cond248 = phi float [ 2.550000e+02, %cond.true240 ], [ %add246, %cond.false241 ], !dbg !6842
  br label %cond.end249, !dbg !6842

cond.end249:                                      ; preds = %cond.end247, %cond.true233
  %cond250 = phi float [ 0.000000e+00, %cond.true233 ], [ %cond248, %cond.end247 ], !dbg !6842
  %conv251 = fptoui float %cond250 to i8, !dbg !6842
  %175 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6843
  %176 = load i32, i32* %i, align 4, !dbg !6844
  %idxprom252 = sext i32 %176 to i64, !dbg !6843
  %arrayidx253 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %175, i64 %idxprom252, !dbg !6843
  %b254 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx253, i32 0, i32 2, !dbg !6845
  store i8 %conv251, i8* %b254, align 1, !dbg !6846
  %177 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6847
  %178 = load i32, i32* %i, align 4, !dbg !6848
  %idxprom255 = sext i32 %178 to i64, !dbg !6847
  %arrayidx256 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %177, i64 %idxprom255, !dbg !6847
  %g257 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx256, i32 0, i32 1, !dbg !6849
  store i8 %conv251, i8* %g257, align 1, !dbg !6850
  %179 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6851
  %180 = load i32, i32* %i, align 4, !dbg !6852
  %idxprom258 = sext i32 %180 to i64, !dbg !6851
  %arrayidx259 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %179, i64 %idxprom258, !dbg !6851
  %r260 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx259, i32 0, i32 0, !dbg !6853
  store i8 %conv251, i8* %r260, align 1, !dbg !6854
  %181 = load %struct.MLoopCol*, %struct.MLoopCol** %col, align 8, !dbg !6855
  %182 = load i32, i32* %i, align 4, !dbg !6856
  %idxprom261 = sext i32 %182 to i64, !dbg !6855
  %arrayidx262 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %181, i64 %idxprom261, !dbg !6855
  %a263 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %arrayidx262, i32 0, i32 3, !dbg !6857
  store i8 -1, i8* %a263, align 1, !dbg !6858
  br label %for.inc264, !dbg !6859

for.inc264:                                       ; preds = %cond.end249
  %183 = load i32, i32* %i, align 4, !dbg !6860
  %inc265 = add nsw i32 %183, 1, !dbg !6860
  store i32 %inc265, i32* %i, align 4, !dbg !6860
  br label %for.cond220, !dbg !6861, !llvm.loop !6862

for.end266:                                       ; preds = %for.cond220
  br label %if.end267, !dbg !6864

if.end267:                                        ; preds = %for.end266, %if.end217
  %184 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6865
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %184, i32 0, i32 16, !dbg !6866
  %185 = load i32, i32* %dirty, align 8, !dbg !6867
  %or = or i32 %185, 1, !dbg !6867
  store i32 %or, i32* %dirty, align 8, !dbg !6867
  br label %if.end363, !dbg !6868

if.else268:                                       ; preds = %if.then18
  %186 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6869
  %type269 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %186, i32 0, i32 11, !dbg !6871
  %187 = load i16, i16* %type269, align 2, !dbg !6871
  %conv270 = sext i16 %187 to i32, !dbg !6869
  %cmp271 = icmp eq i32 %conv270, 2, !dbg !6872
  br i1 %cmp271, label %if.then273, label %if.else334, !dbg !6873

if.then273:                                       ; preds = %if.else268
  call void @llvm.dbg.declare(metadata i32* %defgrp_index, metadata !6874, metadata !DIExpression()), !dbg !6876
  %188 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6877
  %189 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6878
  %output_name274 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %189, i32 0, i32 48, !dbg !6879
  %arraydecay275 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name274, i64 0, i64 0, !dbg !6878
  %call276 = call i32 @defgroup_name_index(%struct.Object* %188, i8* %arraydecay275), !dbg !6880
  store i32 %call276, i32* %defgrp_index, align 4, !dbg !6876
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert, metadata !6881, metadata !DIExpression()), !dbg !6884
  %190 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6885
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %190, i32 0, i32 50, !dbg !6886
  %191 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !6886
  %192 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6887
  %call277 = call i8* %191(%struct.DerivedMesh* %192, i32 2), !dbg !6885
  %193 = bitcast i8* %call277 to %struct.MDeformVert*, !dbg !6885
  store %struct.MDeformVert* %193, %struct.MDeformVert** %dvert, align 8, !dbg !6884
  call void @llvm.dbg.declare(metadata float** %weight, metadata !6888, metadata !DIExpression()), !dbg !6889
  %194 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6890
  %type_data278 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %194, i32 0, i32 1, !dbg !6891
  %195 = load i8*, i8** %type_data278, align 8, !dbg !6891
  %196 = bitcast i8* %195 to float*, !dbg !6892
  store float* %196, float** %weight, align 8, !dbg !6889
  %197 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6893
  %flags279 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %197, i32 0, i32 18, !dbg !6895
  %198 = load i32, i32* %flags279, align 4, !dbg !6895
  %and280 = and i32 %198, 64, !dbg !6896
  %tobool281 = icmp ne i32 %and280, 0, !dbg !6896
  br i1 %tobool281, label %if.then282, label %if.end283, !dbg !6897

if.then282:                                       ; preds = %if.then273
  %199 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6898
  %200 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6900
  %201 = load float*, float** %weight, align 8, !dbg !6901
  call void @DM_update_weight_mcol(%struct.Object* %199, %struct.DerivedMesh* %200, i32 0, float* %201, i32 0, i32* null), !dbg !6902
  br label %if.end283, !dbg !6903

if.end283:                                        ; preds = %if.then282, %if.then273
  %202 = load i32, i32* %defgrp_index, align 4, !dbg !6904
  %cmp284 = icmp ne i32 %202, -1, !dbg !6906
  br i1 %cmp284, label %land.lhs.true286, label %if.end299, !dbg !6907

land.lhs.true286:                                 ; preds = %if.end283
  %203 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6908
  %tobool287 = icmp ne %struct.MDeformVert* %203, null, !dbg !6908
  br i1 %tobool287, label %if.end299, label %land.lhs.true288, !dbg !6909

land.lhs.true288:                                 ; preds = %land.lhs.true286
  %204 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6910
  %output_name289 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %204, i32 0, i32 48, !dbg !6911
  %arrayidx290 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name289, i64 0, i64 0, !dbg !6910
  %205 = load i8, i8* %arrayidx290, align 8, !dbg !6910
  %conv291 = zext i8 %205 to i32, !dbg !6910
  %cmp292 = icmp ne i32 %conv291, 0, !dbg !6912
  br i1 %cmp292, label %if.then294, label %if.end299, !dbg !6913

if.then294:                                       ; preds = %land.lhs.true288
  %206 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6914
  %vertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %206, i32 0, i32 0, !dbg !6915
  %207 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6916
  %total_points295 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %207, i32 0, i32 4, !dbg !6917
  %208 = load i32, i32* %total_points295, align 8, !dbg !6917
  %209 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6918
  %output_name296 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %209, i32 0, i32 48, !dbg !6919
  %arraydecay297 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name296, i64 0, i64 0, !dbg !6918
  %call298 = call i8* @CustomData_add_layer_named(%struct.CustomData* %vertData, i32 2, i32 1, i8* null, i32 %208, i8* %arraydecay297), !dbg !6920
  %210 = bitcast i8* %call298 to %struct.MDeformVert*, !dbg !6920
  store %struct.MDeformVert* %210, %struct.MDeformVert** %dvert, align 8, !dbg !6921
  br label %if.end299, !dbg !6922

if.end299:                                        ; preds = %if.then294, %land.lhs.true288, %land.lhs.true286, %if.end283
  %211 = load i32, i32* %defgrp_index, align 4, !dbg !6923
  %cmp300 = icmp ne i32 %211, -1, !dbg !6925
  br i1 %cmp300, label %land.lhs.true302, label %if.end333, !dbg !6926

land.lhs.true302:                                 ; preds = %if.end299
  %212 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6927
  %tobool303 = icmp ne %struct.MDeformVert* %212, null, !dbg !6927
  br i1 %tobool303, label %if.then304, label %if.end333, !dbg !6928

if.then304:                                       ; preds = %land.lhs.true302
  call void @llvm.dbg.declare(metadata i32* %i305, metadata !6929, metadata !DIExpression()), !dbg !6931
  store i32 0, i32* %i305, align 4, !dbg !6932
  br label %for.cond306, !dbg !6934

for.cond306:                                      ; preds = %for.inc330, %if.then304
  %213 = load i32, i32* %i305, align 4, !dbg !6935
  %214 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !6937
  %total_points307 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %214, i32 0, i32 4, !dbg !6938
  %215 = load i32, i32* %total_points307, align 8, !dbg !6938
  %cmp308 = icmp slt i32 %213, %215, !dbg !6939
  br i1 %cmp308, label %for.body310, label %for.end332, !dbg !6940

for.body310:                                      ; preds = %for.cond306
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dv, metadata !6941, metadata !DIExpression()), !dbg !6943
  %216 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !6944
  %217 = load i32, i32* %i305, align 4, !dbg !6945
  %idxprom311 = sext i32 %217 to i64, !dbg !6944
  %arrayidx312 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %216, i64 %idxprom311, !dbg !6944
  store %struct.MDeformVert* %arrayidx312, %struct.MDeformVert** %dv, align 8, !dbg !6943
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %def_weight, metadata !6946, metadata !DIExpression()), !dbg !6949
  %218 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6950
  %219 = load i32, i32* %defgrp_index, align 4, !dbg !6951
  %call313 = call %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert* %218, i32 %219), !dbg !6952
  store %struct.MDeformWeight* %call313, %struct.MDeformWeight** %def_weight, align 8, !dbg !6949
  %220 = load %struct.MDeformWeight*, %struct.MDeformWeight** %def_weight, align 8, !dbg !6953
  %cmp314 = icmp ne %struct.MDeformWeight* %220, null, !dbg !6955
  br i1 %cmp314, label %if.then320, label %lor.lhs.false, !dbg !6956

lor.lhs.false:                                    ; preds = %for.body310
  %221 = load float*, float** %weight, align 8, !dbg !6957
  %222 = load i32, i32* %i305, align 4, !dbg !6958
  %idxprom316 = sext i32 %222 to i64, !dbg !6957
  %arrayidx317 = getelementptr inbounds float, float* %221, i64 %idxprom316, !dbg !6957
  %223 = load float, float* %arrayidx317, align 4, !dbg !6957
  %cmp318 = fcmp une float %223, 0.000000e+00, !dbg !6959
  br i1 %cmp318, label %if.then320, label %if.end329, !dbg !6960

if.then320:                                       ; preds = %lor.lhs.false, %for.body310
  %224 = load %struct.MDeformWeight*, %struct.MDeformWeight** %def_weight, align 8, !dbg !6961
  %cmp321 = icmp eq %struct.MDeformWeight* %224, null, !dbg !6964
  br i1 %cmp321, label %if.then323, label %if.end325, !dbg !6965

if.then323:                                       ; preds = %if.then320
  %225 = load %struct.MDeformVert*, %struct.MDeformVert** %dv, align 8, !dbg !6966
  %226 = load i32, i32* %defgrp_index, align 4, !dbg !6968
  %call324 = call %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert* %225, i32 %226), !dbg !6969
  store %struct.MDeformWeight* %call324, %struct.MDeformWeight** %def_weight, align 8, !dbg !6970
  br label %if.end325, !dbg !6971

if.end325:                                        ; preds = %if.then323, %if.then320
  %227 = load float*, float** %weight, align 8, !dbg !6972
  %228 = load i32, i32* %i305, align 4, !dbg !6973
  %idxprom326 = sext i32 %228 to i64, !dbg !6972
  %arrayidx327 = getelementptr inbounds float, float* %227, i64 %idxprom326, !dbg !6972
  %229 = load float, float* %arrayidx327, align 4, !dbg !6972
  %230 = load %struct.MDeformWeight*, %struct.MDeformWeight** %def_weight, align 8, !dbg !6974
  %weight328 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %230, i32 0, i32 1, !dbg !6975
  store float %229, float* %weight328, align 4, !dbg !6976
  br label %if.end329, !dbg !6977

if.end329:                                        ; preds = %if.end325, %lor.lhs.false
  br label %for.inc330, !dbg !6978

for.inc330:                                       ; preds = %if.end329
  %231 = load i32, i32* %i305, align 4, !dbg !6979
  %inc331 = add nsw i32 %231, 1, !dbg !6979
  store i32 %inc331, i32* %i305, align 4, !dbg !6979
  br label %for.cond306, !dbg !6980, !llvm.loop !6981

for.end332:                                       ; preds = %for.cond306
  br label %if.end333, !dbg !6983

if.end333:                                        ; preds = %for.end332, %land.lhs.true302, %if.end299
  br label %if.end362, !dbg !6984

if.else334:                                       ; preds = %if.else268
  %232 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !6985
  %type335 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %232, i32 0, i32 11, !dbg !6987
  %233 = load i16, i16* %type335, align 2, !dbg !6987
  %conv336 = sext i16 %233 to i32, !dbg !6985
  %cmp337 = icmp eq i32 %conv336, 3, !dbg !6988
  br i1 %cmp337, label %if.then339, label %if.end361, !dbg !6989

if.then339:                                       ; preds = %if.else334
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !6990, metadata !DIExpression()), !dbg !6992
  %234 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6993
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %234, i32 0, i32 31, !dbg !6994
  %235 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !6994
  %236 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !6995
  %call340 = call %struct.MVert* %235(%struct.DerivedMesh* %236), !dbg !6993
  store %struct.MVert* %call340, %struct.MVert** %mvert, align 8, !dbg !6992
  call void @llvm.dbg.declare(metadata i32* %i341, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %wPoint, metadata !6998, metadata !DIExpression()), !dbg !6999
  %237 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !7000
  %type_data342 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %237, i32 0, i32 1, !dbg !7001
  %238 = load i8*, i8** %type_data342, align 8, !dbg !7001
  %239 = bitcast i8* %238 to %struct.PaintWavePoint*, !dbg !7002
  store %struct.PaintWavePoint* %239, %struct.PaintWavePoint** %wPoint, align 8, !dbg !6999
  store i32 0, i32* %i341, align 4, !dbg !7003
  br label %for.cond343, !dbg !7005

for.cond343:                                      ; preds = %for.inc358, %if.then339
  %240 = load i32, i32* %i341, align 4, !dbg !7006
  %241 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !7008
  %total_points344 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %241, i32 0, i32 4, !dbg !7009
  %242 = load i32, i32* %total_points344, align 8, !dbg !7009
  %cmp345 = icmp slt i32 %240, %242, !dbg !7010
  br i1 %cmp345, label %for.body347, label %for.end360, !dbg !7011

for.body347:                                      ; preds = %for.cond343
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !7012, metadata !DIExpression()), !dbg !7014
  %arraydecay348 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !7015
  %243 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7016
  %244 = load i32, i32* %i341, align 4, !dbg !7017
  %idxprom349 = sext i32 %244 to i64, !dbg !7016
  %arrayidx350 = getelementptr inbounds %struct.MVert, %struct.MVert* %243, i64 %idxprom349, !dbg !7016
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx350, i32 0, i32 1, !dbg !7018
  %arraydecay351 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !7016
  call void @normal_short_to_float_v3(float* %arraydecay348, i16* %arraydecay351), !dbg !7019
  %245 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !7020
  %246 = load i32, i32* %i341, align 4, !dbg !7021
  %idxprom352 = sext i32 %246 to i64, !dbg !7020
  %arrayidx353 = getelementptr inbounds %struct.MVert, %struct.MVert* %245, i64 %idxprom352, !dbg !7020
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx353, i32 0, i32 0, !dbg !7022
  %arraydecay354 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7020
  %arraydecay355 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !7023
  %247 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !7024
  %248 = load i32, i32* %i341, align 4, !dbg !7025
  %idxprom356 = sext i32 %248 to i64, !dbg !7024
  %arrayidx357 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %247, i64 %idxprom356, !dbg !7024
  %height = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %arrayidx357, i32 0, i32 0, !dbg !7026
  %249 = load float, float* %height, align 4, !dbg !7026
  call void @madd_v3_v3fl(float* %arraydecay354, float* %arraydecay355, float %249), !dbg !7027
  br label %for.inc358, !dbg !7028

for.inc358:                                       ; preds = %for.body347
  %250 = load i32, i32* %i341, align 4, !dbg !7029
  %inc359 = add nsw i32 %250, 1, !dbg !7029
  store i32 %inc359, i32* %i341, align 4, !dbg !7029
  br label %for.cond343, !dbg !7030, !llvm.loop !7031

for.end360:                                       ; preds = %for.cond343
  store i8 1, i8* %update_normals, align 1, !dbg !7033
  br label %if.end361, !dbg !7034

if.end361:                                        ; preds = %for.end360, %if.else334
  br label %if.end362

if.end362:                                        ; preds = %if.end361, %if.end333
  br label %if.end363

if.end363:                                        ; preds = %if.end362, %if.end267
  %251 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !7035
  %type364 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %251, i32 0, i32 11, !dbg !7037
  %252 = load i16, i16* %type364, align 2, !dbg !7037
  %conv365 = sext i16 %252 to i32, !dbg !7035
  %cmp366 = icmp eq i32 %conv365, 1, !dbg !7038
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !7039

if.then368:                                       ; preds = %if.end363
  %253 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !7040
  %254 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !7042
  call void @dynamicPaint_applySurfaceDisplace(%struct.DynamicPaintSurface* %253, %struct.DerivedMesh* %254), !dbg !7043
  store i8 1, i8* %update_normals, align 1, !dbg !7044
  br label %if.end369, !dbg !7045

if.end369:                                        ; preds = %if.then368, %if.end363
  br label %if.end370, !dbg !7046

if.end370:                                        ; preds = %if.end369, %if.end
  br label %if.end371, !dbg !7047

if.end371:                                        ; preds = %if.end370, %land.lhs.true7, %for.body
  br label %for.inc372, !dbg !7048

for.inc372:                                       ; preds = %if.end371, %if.then13
  %255 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !7049
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %255, i32 0, i32 0, !dbg !7050
  %256 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !7050
  store %struct.DynamicPaintSurface* %256, %struct.DynamicPaintSurface** %surface, align 8, !dbg !7051
  br label %for.cond, !dbg !7052, !llvm.loop !7053

for.end373:                                       ; preds = %for.cond
  %257 = load i8, i8* %update_normals, align 1, !dbg !7055
  %tobool374 = icmp ne i8 %257, 0, !dbg !7055
  br i1 %tobool374, label %if.then375, label %if.end378, !dbg !7057

if.then375:                                       ; preds = %for.end373
  %258 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !7058
  %dirty376 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %258, i32 0, i32 16, !dbg !7060
  %259 = load i32, i32* %dirty376, align 8, !dbg !7061
  %or377 = or i32 %259, 4, !dbg !7061
  store i32 %or377, i32* %dirty376, align 8, !dbg !7061
  br label %if.end378, !dbg !7062

if.end378:                                        ; preds = %if.then375, %for.end373
  br label %if.end379, !dbg !7063

if.end379:                                        ; preds = %if.end378, %land.lhs.true, %entry
  %260 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !7064
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %260, i32 0, i32 2, !dbg !7066
  %261 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !7066
  %tobool380 = icmp ne %struct.DynamicPaintBrushSettings* %261, null, !dbg !7064
  br i1 %tobool380, label %if.then381, label %if.end394, !dbg !7067

if.then381:                                       ; preds = %if.end379
  %262 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !7068
  %brush382 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %262, i32 0, i32 2, !dbg !7071
  %263 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush382, align 8, !dbg !7071
  %dm383 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %263, i32 0, i32 1, !dbg !7072
  %264 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm383, align 8, !dbg !7072
  %tobool384 = icmp ne %struct.DerivedMesh* %264, null, !dbg !7068
  br i1 %tobool384, label %if.then385, label %if.end390, !dbg !7073

if.then385:                                       ; preds = %if.then381
  %265 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !7074
  %brush386 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %265, i32 0, i32 2, !dbg !7075
  %266 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush386, align 8, !dbg !7075
  %dm387 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %266, i32 0, i32 1, !dbg !7076
  %267 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm387, align 8, !dbg !7076
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %267, i32 0, i32 95, !dbg !7077
  %268 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !7077
  %269 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !7078
  %brush388 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %269, i32 0, i32 2, !dbg !7079
  %270 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush388, align 8, !dbg !7079
  %dm389 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %270, i32 0, i32 1, !dbg !7080
  %271 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm389, align 8, !dbg !7080
  call void %268(%struct.DerivedMesh* %271), !dbg !7074
  br label %if.end390, !dbg !7074

if.end390:                                        ; preds = %if.then385, %if.then381
  %272 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !7081
  %call391 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %272), !dbg !7082
  %273 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd.addr, align 8, !dbg !7083
  %brush392 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %273, i32 0, i32 2, !dbg !7084
  %274 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush392, align 8, !dbg !7084
  %dm393 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %274, i32 0, i32 1, !dbg !7085
  store %struct.DerivedMesh* %call391, %struct.DerivedMesh** %dm393, align 8, !dbg !7086
  br label %if.end394, !dbg !7087

if.end394:                                        ; preds = %if.end390, %if.end379
  %275 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result, align 8, !dbg !7088
  ret %struct.DerivedMesh* %275, !dbg !7089
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dynamicPaint_createUVSurface(%struct.Scene* %scene, %struct.DynamicPaintSurface* %surface) #0 !dbg !7090 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %jitter5sample = alloca [10 x float], align 16
  %ty = alloca i32, align 4
  %w = alloca i32, align 4
  %h = alloca i32, align 4
  %numOfFaces = alloca i32, align 4
  %uvname = alloca [64 x i8], align 16
  %active_points = alloca i32, align 4
  %error = alloca i32, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %canvas = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %tempPoints = alloca %struct.PaintUVPoint*, align 8
  %tempWeights = alloca %struct.Vec3f*, align 8
  %mface = alloca %struct.MFace*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %faceBB = alloca %struct.Bounds2D*, align 8
  %final_index = alloca i32*, align 8
  %aa_samples = alloca i32, align 4
  %numOfVert = alloca i32, align 4
  %i = alloca i32, align 4
  %tx = alloca i32, align 4
  %i203 = alloca i32, align 4
  %sample = alloca i32, align 4
  %index = alloca i32, align 4
  %tPoint = alloca %struct.PaintUVPoint*, align 8
  %isInside = alloca i16, align 2
  %d1 = alloca [2 x float], align 4
  %d2 = alloca [2 x float], align 4
  %d3 = alloca [2 x float], align 4
  %point = alloca [5 x [2 x float]], align 16
  %dot00 = alloca float, align 4
  %dot01 = alloca float, align 4
  %dot02 = alloca float, align 4
  %dot11 = alloca float, align 4
  %dot12 = alloca float, align 4
  %invDenom = alloca float, align 4
  %u = alloca float, align 4
  %v = alloca float, align 4
  %uv1co = alloca [2 x float], align 4
  %uv2co = alloca [2 x float], align 4
  %uv3co = alloca [2 x float], align 4
  %uv489 = alloca [2 x float], align 4
  %j = alloca i32, align 4
  %tx619 = alloca i32, align 4
  %index624 = alloca i32, align 4
  %tPoint627 = alloca %struct.PaintUVPoint*, align 8
  %u_min = alloca i32, align 4
  %u_max = alloca i32, align 4
  %v_min = alloca i32, align 4
  %v_max = alloca i32, align 4
  %u634 = alloca i32, align 4
  %v635 = alloca i32, align 4
  %ind = alloca i32, align 4
  %point636 = alloca [2 x float], align 4
  %uv1co685 = alloca [2 x float], align 4
  %uv2co686 = alloca [2 x float], align 4
  %uv3co687 = alloca [2 x float], align 4
  %uv688 = alloca [2 x float], align 4
  %i689 = alloca i32, align 4
  %j693 = alloca i32, align 4
  %tx828 = alloca i32, align 4
  %index833 = alloca i32, align 4
  %tPoint836 = alloca %struct.PaintUVPoint*, align 8
  %i865 = alloca i32, align 4
  %cursor = alloca i32, align 4
  %ed = alloca %struct.PaintAdjData*, align 8
  %n_pos = alloca i32, align 4
  %tx892 = alloca i32, align 4
  %i897 = alloca i32, align 4
  %index898 = alloca i32, align 4
  %n_target = alloca i32, align 4
  %f_data = alloca %struct.ImgSeqFormatData*, align 8
  %index997 = alloca i32, align 4
  %cursor998 = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !7095, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata [10 x float]* %jitter5sample, metadata !7097, metadata !DIExpression()), !dbg !7101
  %0 = bitcast [10 x float]* %jitter5sample to i8*, !dbg !7101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %0, i8* align 16 bitcast ([10 x float]* @__const.dynamicPaint_createUVSurface.jitter5sample to i8*), i64 40, i1 false), !dbg !7101
  call void @llvm.dbg.declare(metadata i32* %ty, metadata !7102, metadata !DIExpression()), !dbg !7103
  call void @llvm.dbg.declare(metadata i32* %w, metadata !7104, metadata !DIExpression()), !dbg !7105
  call void @llvm.dbg.declare(metadata i32* %h, metadata !7106, metadata !DIExpression()), !dbg !7107
  call void @llvm.dbg.declare(metadata i32* %numOfFaces, metadata !7108, metadata !DIExpression()), !dbg !7109
  call void @llvm.dbg.declare(metadata [64 x i8]* %uvname, metadata !7110, metadata !DIExpression()), !dbg !7111
  call void @llvm.dbg.declare(metadata i32* %active_points, metadata !7112, metadata !DIExpression()), !dbg !7113
  store i32 0, i32* %active_points, align 4, !dbg !7113
  call void @llvm.dbg.declare(metadata i32* %error, metadata !7114, metadata !DIExpression()), !dbg !7115
  store i32 0, i32* %error, align 4, !dbg !7115
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !7116, metadata !DIExpression()), !dbg !7117
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas, metadata !7118, metadata !DIExpression()), !dbg !7119
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7120
  %canvas1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %1, i32 0, i32 2, !dbg !7121
  %2 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas1, align 8, !dbg !7121
  store %struct.DynamicPaintCanvasSettings* %2, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7119
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !7122, metadata !DIExpression()), !dbg !7123
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7124
  %dm2 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %3, i32 0, i32 1, !dbg !7125
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2, align 8, !dbg !7125
  store %struct.DerivedMesh* %4, %struct.DerivedMesh** %dm, align 8, !dbg !7123
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tempPoints, metadata !7126, metadata !DIExpression()), !dbg !7127
  store %struct.PaintUVPoint* null, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !7127
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %tempWeights, metadata !7128, metadata !DIExpression()), !dbg !7129
  store %struct.Vec3f* null, %struct.Vec3f** %tempWeights, align 8, !dbg !7129
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !7130, metadata !DIExpression()), !dbg !7131
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !7131
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !7132, metadata !DIExpression()), !dbg !7133
  store %struct.MTFace* null, %struct.MTFace** %tface, align 8, !dbg !7133
  call void @llvm.dbg.declare(metadata %struct.Bounds2D** %faceBB, metadata !7134, metadata !DIExpression()), !dbg !7137
  store %struct.Bounds2D* null, %struct.Bounds2D** %faceBB, align 8, !dbg !7137
  call void @llvm.dbg.declare(metadata i32** %final_index, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata i32* %aa_samples, metadata !7140, metadata !DIExpression()), !dbg !7141
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7142
  %tobool = icmp ne %struct.DerivedMesh* %5, null, !dbg !7142
  br i1 %tobool, label %if.end, label %if.then, !dbg !7144

if.then:                                          ; preds = %entry
  %6 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7145
  %call = call i32 @setError(%struct.DynamicPaintCanvasSettings* %6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.12, i64 0, i64 0)), !dbg !7146
  store i32 %call, i32* %retval, align 4, !dbg !7147
  br label %return, !dbg !7147

if.end:                                           ; preds = %entry
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7148
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 10, !dbg !7150
  %8 = load i16, i16* %format, align 4, !dbg !7150
  %conv = sext i16 %8 to i32, !dbg !7148
  %cmp = icmp ne i32 %conv, 2, !dbg !7151
  br i1 %cmp, label %if.then4, label %if.end6, !dbg !7152

if.then4:                                         ; preds = %if.end
  %9 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7153
  %call5 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %9, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0)), !dbg !7154
  store i32 %call5, i32* %retval, align 4, !dbg !7155
  br label %return, !dbg !7155

if.end6:                                          ; preds = %if.end
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7156
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 25, !dbg !7157
  %11 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !7157
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7158
  %call7 = call i32 %11(%struct.DerivedMesh* %12), !dbg !7156
  store i32 %call7, i32* %numOfFaces, align 4, !dbg !7159
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7160
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 33, !dbg !7161
  %14 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !7161
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7162
  %call8 = call %struct.MFace* %14(%struct.DerivedMesh* %15), !dbg !7160
  store %struct.MFace* %call8, %struct.MFace** %mface, align 8, !dbg !7163
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7164
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 2, !dbg !7165
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7166
  %uvlayer_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 46, !dbg !7167
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %uvlayer_name, i64 0, i64 0, !dbg !7166
  %arraydecay9 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !7168
  call void @CustomData_validate_layer_name(%struct.CustomData* %faceData, i32 5, i8* %arraydecay, i8* %arraydecay9), !dbg !7169
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !7170
  %faceData10 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %18, i32 0, i32 2, !dbg !7171
  %arraydecay11 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !7172
  %call12 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData10, i32 5, i8* %arraydecay11), !dbg !7173
  %19 = bitcast i8* %call12 to %struct.MTFace*, !dbg !7173
  store %struct.MTFace* %19, %struct.MTFace** %tface, align 8, !dbg !7174
  %20 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7175
  %tobool13 = icmp ne %struct.MTFace* %20, null, !dbg !7175
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !7177

if.then14:                                        ; preds = %if.end6
  %21 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7178
  %call15 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)), !dbg !7179
  store i32 %call15, i32* %retval, align 4, !dbg !7180
  br label %return, !dbg !7180

if.end16:                                         ; preds = %if.end6
  %22 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7181
  %image_resolution = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %22, i32 0, i32 20, !dbg !7183
  %23 = load i32, i32* %image_resolution, align 4, !dbg !7183
  %cmp17 = icmp slt i32 %23, 16, !dbg !7184
  br i1 %cmp17, label %if.then22, label %lor.lhs.false, !dbg !7185

lor.lhs.false:                                    ; preds = %if.end16
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7186
  %image_resolution19 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %24, i32 0, i32 20, !dbg !7187
  %25 = load i32, i32* %image_resolution19, align 4, !dbg !7187
  %cmp20 = icmp sgt i32 %25, 8192, !dbg !7188
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !7189

if.then22:                                        ; preds = %lor.lhs.false, %if.end16
  %26 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7190
  %call23 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %26, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0)), !dbg !7191
  store i32 %call23, i32* %retval, align 4, !dbg !7192
  br label %return, !dbg !7192

if.end24:                                         ; preds = %lor.lhs.false
  %27 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7193
  %image_resolution25 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %27, i32 0, i32 20, !dbg !7194
  %28 = load i32, i32* %image_resolution25, align 4, !dbg !7194
  store i32 %28, i32* %h, align 4, !dbg !7195
  store i32 %28, i32* %w, align 4, !dbg !7196
  %29 = load i32, i32* %w, align 4, !dbg !7197
  %30 = load i32, i32* %h, align 4, !dbg !7198
  %31 = load i32, i32* %numOfFaces, align 4, !dbg !7199
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.16, i64 0, i64 0), i32 %29, i32 %30, i32 %31), !dbg !7200
  %32 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7201
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %32, i32 0, i32 3, !dbg !7203
  %33 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !7203
  %tobool27 = icmp ne %struct.PaintSurfaceData* %33, null, !dbg !7201
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !7204

if.then28:                                        ; preds = %if.end24
  %34 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7205
  call void @dynamicPaint_freeSurfaceData(%struct.DynamicPaintSurface* %34), !dbg !7206
  br label %if.end29, !dbg !7206

if.end29:                                         ; preds = %if.then28, %if.end24
  %35 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7207
  %call30 = call i8* %35(i64 40, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !7207
  %36 = bitcast i8* %call30 to %struct.PaintSurfaceData*, !dbg !7207
  %37 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7208
  %data31 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %37, i32 0, i32 3, !dbg !7209
  store %struct.PaintSurfaceData* %36, %struct.PaintSurfaceData** %data31, align 8, !dbg !7210
  store %struct.PaintSurfaceData* %36, %struct.PaintSurfaceData** %sData, align 8, !dbg !7211
  %38 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7212
  %data32 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %38, i32 0, i32 3, !dbg !7214
  %39 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data32, align 8, !dbg !7214
  %tobool33 = icmp ne %struct.PaintSurfaceData* %39, null, !dbg !7212
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !7215

if.then34:                                        ; preds = %if.end29
  %40 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !7216
  %call35 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %40, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !7217
  store i32 %call35, i32* %retval, align 4, !dbg !7218
  br label %return, !dbg !7218

if.end36:                                         ; preds = %if.end29
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !7219
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 18, !dbg !7220
  %42 = load i32, i32* %flags, align 4, !dbg !7220
  %and = and i32 %42, 2, !dbg !7221
  %tobool37 = icmp ne i32 %and, 0, !dbg !7222
  %43 = zext i1 %tobool37 to i64, !dbg !7222
  %cond = select i1 %tobool37, i32 5, i32 1, !dbg !7222
  store i32 %cond, i32* %aa_samples, align 4, !dbg !7223
  %44 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7224
  %45 = load i32, i32* %w, align 4, !dbg !7225
  %46 = load i32, i32* %h, align 4, !dbg !7226
  %mul = mul nsw i32 %45, %46, !dbg !7227
  %conv38 = sext i32 %mul to i64, !dbg !7225
  %mul39 = mul i64 %conv38, 28, !dbg !7228
  %call40 = call i8* %44(i64 %mul39, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0)), !dbg !7224
  %47 = bitcast i8* %call40 to %struct.PaintUVPoint*, !dbg !7229
  store %struct.PaintUVPoint* %47, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !7230
  %48 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !7231
  %tobool41 = icmp ne %struct.PaintUVPoint* %48, null, !dbg !7231
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !7233

if.then42:                                        ; preds = %if.end36
  store i32 1, i32* %error, align 4, !dbg !7234
  br label %if.end43, !dbg !7235

if.end43:                                         ; preds = %if.then42, %if.end36
  %49 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7236
  %50 = load i32, i32* %w, align 4, !dbg !7237
  %51 = load i32, i32* %h, align 4, !dbg !7238
  %mul44 = mul nsw i32 %50, %51, !dbg !7239
  %conv45 = sext i32 %mul44 to i64, !dbg !7237
  %mul46 = mul i64 %conv45, 4, !dbg !7240
  %call47 = call i8* %49(i64 %mul46, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0)), !dbg !7236
  %52 = bitcast i8* %call47 to i32*, !dbg !7241
  store i32* %52, i32** %final_index, align 8, !dbg !7242
  %53 = load i32*, i32** %final_index, align 8, !dbg !7243
  %tobool48 = icmp ne i32* %53, null, !dbg !7243
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !7245

if.then49:                                        ; preds = %if.end43
  store i32 1, i32* %error, align 4, !dbg !7246
  br label %if.end50, !dbg !7247

if.end50:                                         ; preds = %if.then49, %if.end43
  %54 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7248
  %55 = load i32, i32* %w, align 4, !dbg !7249
  %56 = load i32, i32* %h, align 4, !dbg !7250
  %mul51 = mul nsw i32 %55, %56, !dbg !7251
  %57 = load i32, i32* %aa_samples, align 4, !dbg !7252
  %mul52 = mul nsw i32 %mul51, %57, !dbg !7253
  %conv53 = sext i32 %mul52 to i64, !dbg !7249
  %mul54 = mul i64 %conv53, 12, !dbg !7254
  %call55 = call i8* %54(i64 %mul54, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.20, i64 0, i64 0)), !dbg !7248
  %58 = bitcast i8* %call55 to %struct.Vec3f*, !dbg !7255
  store %struct.Vec3f* %58, %struct.Vec3f** %tempWeights, align 8, !dbg !7256
  %59 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !7257
  %tobool56 = icmp ne %struct.Vec3f* %59, null, !dbg !7257
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !7259

if.then57:                                        ; preds = %if.end50
  store i32 1, i32* %error, align 4, !dbg !7260
  br label %if.end58, !dbg !7261

if.end58:                                         ; preds = %if.then57, %if.end50
  %60 = load i32, i32* %error, align 4, !dbg !7262
  %tobool59 = icmp ne i32 %60, 0, !dbg !7262
  br i1 %tobool59, label %if.end67, label %if.then60, !dbg !7264

if.then60:                                        ; preds = %if.end58
  %61 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7265
  %62 = load i32, i32* %numOfFaces, align 4, !dbg !7267
  %conv61 = sext i32 %62 to i64, !dbg !7267
  %mul62 = mul i64 %conv61, 16, !dbg !7268
  %call63 = call i8* %61(i64 %mul62, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i64 0, i64 0)), !dbg !7265
  %63 = bitcast i8* %call63 to %struct.Bounds2D*, !dbg !7269
  store %struct.Bounds2D* %63, %struct.Bounds2D** %faceBB, align 8, !dbg !7270
  %64 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7271
  %tobool64 = icmp ne %struct.Bounds2D* %64, null, !dbg !7271
  br i1 %tobool64, label %if.end66, label %if.then65, !dbg !7273

if.then65:                                        ; preds = %if.then60
  store i32 1, i32* %error, align 4, !dbg !7274
  br label %if.end66, !dbg !7275

if.end66:                                         ; preds = %if.then65, %if.then60
  br label %if.end67, !dbg !7276

if.end67:                                         ; preds = %if.end66, %if.end58
  %65 = load i32, i32* %error, align 4, !dbg !7277
  %tobool68 = icmp ne i32 %65, 0, !dbg !7277
  br i1 %tobool68, label %if.end192, label %if.then69, !dbg !7279

if.then69:                                        ; preds = %if.end67
  store i32 0, i32* %ty, align 4, !dbg !7280
  br label %for.cond, !dbg !7282

for.cond:                                         ; preds = %for.inc189, %if.then69
  %66 = load i32, i32* %ty, align 4, !dbg !7283
  %67 = load i32, i32* %numOfFaces, align 4, !dbg !7285
  %cmp70 = icmp slt i32 %66, %67, !dbg !7286
  br i1 %cmp70, label %for.body, label %for.end191, !dbg !7287

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %numOfVert, metadata !7288, metadata !DIExpression()), !dbg !7290
  %68 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7291
  %69 = load i32, i32* %ty, align 4, !dbg !7292
  %idxprom = sext i32 %69 to i64, !dbg !7291
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i64 %idxprom, !dbg !7291
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 3, !dbg !7293
  %70 = load i32, i32* %v4, align 4, !dbg !7293
  %tobool72 = icmp ne i32 %70, 0, !dbg !7294
  %71 = zext i1 %tobool72 to i64, !dbg !7294
  %cond73 = select i1 %tobool72, i32 4, i32 3, !dbg !7294
  store i32 %cond73, i32* %numOfVert, align 4, !dbg !7290
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7295, metadata !DIExpression()), !dbg !7296
  %72 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7297
  %73 = load i32, i32* %ty, align 4, !dbg !7298
  %idxprom74 = sext i32 %73 to i64, !dbg !7297
  %arrayidx75 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %72, i64 %idxprom74, !dbg !7297
  %min = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx75, i32 0, i32 0, !dbg !7299
  %arraydecay76 = getelementptr inbounds [2 x float], [2 x float]* %min, i64 0, i64 0, !dbg !7297
  %74 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7300
  %75 = load i32, i32* %ty, align 4, !dbg !7301
  %idxprom77 = sext i32 %75 to i64, !dbg !7300
  %arrayidx78 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %74, i64 %idxprom77, !dbg !7300
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx78, i32 0, i32 0, !dbg !7302
  %arrayidx79 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !7300
  %arraydecay80 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx79, i64 0, i64 0, !dbg !7300
  call void @copy_v2_v2(float* %arraydecay76, float* %arraydecay80), !dbg !7303
  %76 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7304
  %77 = load i32, i32* %ty, align 4, !dbg !7305
  %idxprom81 = sext i32 %77 to i64, !dbg !7304
  %arrayidx82 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %76, i64 %idxprom81, !dbg !7304
  %max = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx82, i32 0, i32 1, !dbg !7306
  %arraydecay83 = getelementptr inbounds [2 x float], [2 x float]* %max, i64 0, i64 0, !dbg !7304
  %78 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7307
  %79 = load i32, i32* %ty, align 4, !dbg !7308
  %idxprom84 = sext i32 %79 to i64, !dbg !7307
  %arrayidx85 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %78, i64 %idxprom84, !dbg !7307
  %uv86 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx85, i32 0, i32 0, !dbg !7309
  %arrayidx87 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv86, i64 0, i64 0, !dbg !7307
  %arraydecay88 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx87, i64 0, i64 0, !dbg !7307
  call void @copy_v2_v2(float* %arraydecay83, float* %arraydecay88), !dbg !7310
  store i32 1, i32* %i, align 4, !dbg !7311
  br label %for.cond89, !dbg !7313

for.cond89:                                       ; preds = %for.inc, %for.body
  %80 = load i32, i32* %i, align 4, !dbg !7314
  %81 = load i32, i32* %numOfVert, align 4, !dbg !7316
  %cmp90 = icmp slt i32 %80, %81, !dbg !7317
  br i1 %cmp90, label %for.body92, label %for.end, !dbg !7318

for.body92:                                       ; preds = %for.cond89
  %82 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7319
  %83 = load i32, i32* %ty, align 4, !dbg !7322
  %idxprom93 = sext i32 %83 to i64, !dbg !7319
  %arrayidx94 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %82, i64 %idxprom93, !dbg !7319
  %uv95 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx94, i32 0, i32 0, !dbg !7323
  %84 = load i32, i32* %i, align 4, !dbg !7324
  %idxprom96 = sext i32 %84 to i64, !dbg !7319
  %arrayidx97 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv95, i64 0, i64 %idxprom96, !dbg !7319
  %arrayidx98 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx97, i64 0, i64 0, !dbg !7319
  %85 = load float, float* %arrayidx98, align 8, !dbg !7319
  %86 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7325
  %87 = load i32, i32* %ty, align 4, !dbg !7326
  %idxprom99 = sext i32 %87 to i64, !dbg !7325
  %arrayidx100 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %86, i64 %idxprom99, !dbg !7325
  %min101 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx100, i32 0, i32 0, !dbg !7327
  %arrayidx102 = getelementptr inbounds [2 x float], [2 x float]* %min101, i64 0, i64 0, !dbg !7325
  %88 = load float, float* %arrayidx102, align 4, !dbg !7325
  %cmp103 = fcmp olt float %85, %88, !dbg !7328
  br i1 %cmp103, label %if.then105, label %if.end116, !dbg !7329

if.then105:                                       ; preds = %for.body92
  %89 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7330
  %90 = load i32, i32* %ty, align 4, !dbg !7331
  %idxprom106 = sext i32 %90 to i64, !dbg !7330
  %arrayidx107 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %89, i64 %idxprom106, !dbg !7330
  %uv108 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx107, i32 0, i32 0, !dbg !7332
  %91 = load i32, i32* %i, align 4, !dbg !7333
  %idxprom109 = sext i32 %91 to i64, !dbg !7330
  %arrayidx110 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv108, i64 0, i64 %idxprom109, !dbg !7330
  %arrayidx111 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx110, i64 0, i64 0, !dbg !7330
  %92 = load float, float* %arrayidx111, align 8, !dbg !7330
  %93 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7334
  %94 = load i32, i32* %ty, align 4, !dbg !7335
  %idxprom112 = sext i32 %94 to i64, !dbg !7334
  %arrayidx113 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %93, i64 %idxprom112, !dbg !7334
  %min114 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx113, i32 0, i32 0, !dbg !7336
  %arrayidx115 = getelementptr inbounds [2 x float], [2 x float]* %min114, i64 0, i64 0, !dbg !7334
  store float %92, float* %arrayidx115, align 4, !dbg !7337
  br label %if.end116, !dbg !7334

if.end116:                                        ; preds = %if.then105, %for.body92
  %95 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7338
  %96 = load i32, i32* %ty, align 4, !dbg !7340
  %idxprom117 = sext i32 %96 to i64, !dbg !7338
  %arrayidx118 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %95, i64 %idxprom117, !dbg !7338
  %uv119 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx118, i32 0, i32 0, !dbg !7341
  %97 = load i32, i32* %i, align 4, !dbg !7342
  %idxprom120 = sext i32 %97 to i64, !dbg !7338
  %arrayidx121 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv119, i64 0, i64 %idxprom120, !dbg !7338
  %arrayidx122 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx121, i64 0, i64 1, !dbg !7338
  %98 = load float, float* %arrayidx122, align 4, !dbg !7338
  %99 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7343
  %100 = load i32, i32* %ty, align 4, !dbg !7344
  %idxprom123 = sext i32 %100 to i64, !dbg !7343
  %arrayidx124 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %99, i64 %idxprom123, !dbg !7343
  %min125 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx124, i32 0, i32 0, !dbg !7345
  %arrayidx126 = getelementptr inbounds [2 x float], [2 x float]* %min125, i64 0, i64 1, !dbg !7343
  %101 = load float, float* %arrayidx126, align 4, !dbg !7343
  %cmp127 = fcmp olt float %98, %101, !dbg !7346
  br i1 %cmp127, label %if.then129, label %if.end140, !dbg !7347

if.then129:                                       ; preds = %if.end116
  %102 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7348
  %103 = load i32, i32* %ty, align 4, !dbg !7349
  %idxprom130 = sext i32 %103 to i64, !dbg !7348
  %arrayidx131 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %102, i64 %idxprom130, !dbg !7348
  %uv132 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx131, i32 0, i32 0, !dbg !7350
  %104 = load i32, i32* %i, align 4, !dbg !7351
  %idxprom133 = sext i32 %104 to i64, !dbg !7348
  %arrayidx134 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv132, i64 0, i64 %idxprom133, !dbg !7348
  %arrayidx135 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx134, i64 0, i64 1, !dbg !7348
  %105 = load float, float* %arrayidx135, align 4, !dbg !7348
  %106 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7352
  %107 = load i32, i32* %ty, align 4, !dbg !7353
  %idxprom136 = sext i32 %107 to i64, !dbg !7352
  %arrayidx137 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %106, i64 %idxprom136, !dbg !7352
  %min138 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx137, i32 0, i32 0, !dbg !7354
  %arrayidx139 = getelementptr inbounds [2 x float], [2 x float]* %min138, i64 0, i64 1, !dbg !7352
  store float %105, float* %arrayidx139, align 4, !dbg !7355
  br label %if.end140, !dbg !7352

if.end140:                                        ; preds = %if.then129, %if.end116
  %108 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7356
  %109 = load i32, i32* %ty, align 4, !dbg !7358
  %idxprom141 = sext i32 %109 to i64, !dbg !7356
  %arrayidx142 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %108, i64 %idxprom141, !dbg !7356
  %uv143 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx142, i32 0, i32 0, !dbg !7359
  %110 = load i32, i32* %i, align 4, !dbg !7360
  %idxprom144 = sext i32 %110 to i64, !dbg !7356
  %arrayidx145 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv143, i64 0, i64 %idxprom144, !dbg !7356
  %arrayidx146 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx145, i64 0, i64 0, !dbg !7356
  %111 = load float, float* %arrayidx146, align 8, !dbg !7356
  %112 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7361
  %113 = load i32, i32* %ty, align 4, !dbg !7362
  %idxprom147 = sext i32 %113 to i64, !dbg !7361
  %arrayidx148 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %112, i64 %idxprom147, !dbg !7361
  %max149 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx148, i32 0, i32 1, !dbg !7363
  %arrayidx150 = getelementptr inbounds [2 x float], [2 x float]* %max149, i64 0, i64 0, !dbg !7361
  %114 = load float, float* %arrayidx150, align 4, !dbg !7361
  %cmp151 = fcmp ogt float %111, %114, !dbg !7364
  br i1 %cmp151, label %if.then153, label %if.end164, !dbg !7365

if.then153:                                       ; preds = %if.end140
  %115 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7366
  %116 = load i32, i32* %ty, align 4, !dbg !7367
  %idxprom154 = sext i32 %116 to i64, !dbg !7366
  %arrayidx155 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %115, i64 %idxprom154, !dbg !7366
  %uv156 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx155, i32 0, i32 0, !dbg !7368
  %117 = load i32, i32* %i, align 4, !dbg !7369
  %idxprom157 = sext i32 %117 to i64, !dbg !7366
  %arrayidx158 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv156, i64 0, i64 %idxprom157, !dbg !7366
  %arrayidx159 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx158, i64 0, i64 0, !dbg !7366
  %118 = load float, float* %arrayidx159, align 8, !dbg !7366
  %119 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7370
  %120 = load i32, i32* %ty, align 4, !dbg !7371
  %idxprom160 = sext i32 %120 to i64, !dbg !7370
  %arrayidx161 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %119, i64 %idxprom160, !dbg !7370
  %max162 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx161, i32 0, i32 1, !dbg !7372
  %arrayidx163 = getelementptr inbounds [2 x float], [2 x float]* %max162, i64 0, i64 0, !dbg !7370
  store float %118, float* %arrayidx163, align 4, !dbg !7373
  br label %if.end164, !dbg !7370

if.end164:                                        ; preds = %if.then153, %if.end140
  %121 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7374
  %122 = load i32, i32* %ty, align 4, !dbg !7376
  %idxprom165 = sext i32 %122 to i64, !dbg !7374
  %arrayidx166 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %121, i64 %idxprom165, !dbg !7374
  %uv167 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx166, i32 0, i32 0, !dbg !7377
  %123 = load i32, i32* %i, align 4, !dbg !7378
  %idxprom168 = sext i32 %123 to i64, !dbg !7374
  %arrayidx169 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv167, i64 0, i64 %idxprom168, !dbg !7374
  %arrayidx170 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx169, i64 0, i64 1, !dbg !7374
  %124 = load float, float* %arrayidx170, align 4, !dbg !7374
  %125 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7379
  %126 = load i32, i32* %ty, align 4, !dbg !7380
  %idxprom171 = sext i32 %126 to i64, !dbg !7379
  %arrayidx172 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %125, i64 %idxprom171, !dbg !7379
  %max173 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx172, i32 0, i32 1, !dbg !7381
  %arrayidx174 = getelementptr inbounds [2 x float], [2 x float]* %max173, i64 0, i64 1, !dbg !7379
  %127 = load float, float* %arrayidx174, align 4, !dbg !7379
  %cmp175 = fcmp ogt float %124, %127, !dbg !7382
  br i1 %cmp175, label %if.then177, label %if.end188, !dbg !7383

if.then177:                                       ; preds = %if.end164
  %128 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7384
  %129 = load i32, i32* %ty, align 4, !dbg !7385
  %idxprom178 = sext i32 %129 to i64, !dbg !7384
  %arrayidx179 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %128, i64 %idxprom178, !dbg !7384
  %uv180 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx179, i32 0, i32 0, !dbg !7386
  %130 = load i32, i32* %i, align 4, !dbg !7387
  %idxprom181 = sext i32 %130 to i64, !dbg !7384
  %arrayidx182 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv180, i64 0, i64 %idxprom181, !dbg !7384
  %arrayidx183 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx182, i64 0, i64 1, !dbg !7384
  %131 = load float, float* %arrayidx183, align 4, !dbg !7384
  %132 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7388
  %133 = load i32, i32* %ty, align 4, !dbg !7389
  %idxprom184 = sext i32 %133 to i64, !dbg !7388
  %arrayidx185 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %132, i64 %idxprom184, !dbg !7388
  %max186 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx185, i32 0, i32 1, !dbg !7390
  %arrayidx187 = getelementptr inbounds [2 x float], [2 x float]* %max186, i64 0, i64 1, !dbg !7388
  store float %131, float* %arrayidx187, align 4, !dbg !7391
  br label %if.end188, !dbg !7388

if.end188:                                        ; preds = %if.then177, %if.end164
  br label %for.inc, !dbg !7392

for.inc:                                          ; preds = %if.end188
  %134 = load i32, i32* %i, align 4, !dbg !7393
  %inc = add nsw i32 %134, 1, !dbg !7393
  store i32 %inc, i32* %i, align 4, !dbg !7393
  br label %for.cond89, !dbg !7394, !llvm.loop !7395

for.end:                                          ; preds = %for.cond89
  br label %for.inc189, !dbg !7397

for.inc189:                                       ; preds = %for.end
  %135 = load i32, i32* %ty, align 4, !dbg !7398
  %inc190 = add nsw i32 %135, 1, !dbg !7398
  store i32 %inc190, i32* %ty, align 4, !dbg !7398
  br label %for.cond, !dbg !7399, !llvm.loop !7400

for.end191:                                       ; preds = %for.cond
  br label %if.end192, !dbg !7401

if.end192:                                        ; preds = %for.end191, %if.end67
  %136 = load i32, i32* %error, align 4, !dbg !7402
  %tobool193 = icmp ne i32 %136, 0, !dbg !7402
  br i1 %tobool193, label %if.end1031, label %if.then194, !dbg !7404

if.then194:                                       ; preds = %if.end192
  store i32 0, i32* %ty, align 4, !dbg !7405
  br label %for.cond195, !dbg !7408

for.cond195:                                      ; preds = %for.inc612, %if.then194
  %137 = load i32, i32* %ty, align 4, !dbg !7409
  %138 = load i32, i32* %h, align 4, !dbg !7411
  %cmp196 = icmp slt i32 %137, %138, !dbg !7412
  br i1 %cmp196, label %for.body198, label %for.end614, !dbg !7413

for.body198:                                      ; preds = %for.cond195
  call void @llvm.dbg.declare(metadata i32* %tx, metadata !7414, metadata !DIExpression()), !dbg !7416
  store i32 0, i32* %tx, align 4, !dbg !7417
  br label %for.cond199, !dbg !7419

for.cond199:                                      ; preds = %for.inc609, %for.body198
  %139 = load i32, i32* %tx, align 4, !dbg !7420
  %140 = load i32, i32* %w, align 4, !dbg !7422
  %cmp200 = icmp slt i32 %139, %140, !dbg !7423
  br i1 %cmp200, label %for.body202, label %for.end611, !dbg !7424

for.body202:                                      ; preds = %for.cond199
  call void @llvm.dbg.declare(metadata i32* %i203, metadata !7425, metadata !DIExpression()), !dbg !7427
  call void @llvm.dbg.declare(metadata i32* %sample, metadata !7428, metadata !DIExpression()), !dbg !7429
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7430, metadata !DIExpression()), !dbg !7431
  %141 = load i32, i32* %tx, align 4, !dbg !7432
  %142 = load i32, i32* %w, align 4, !dbg !7433
  %143 = load i32, i32* %ty, align 4, !dbg !7434
  %mul204 = mul nsw i32 %142, %143, !dbg !7435
  %add = add nsw i32 %141, %mul204, !dbg !7436
  store i32 %add, i32* %index, align 4, !dbg !7431
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint, metadata !7437, metadata !DIExpression()), !dbg !7438
  %144 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !7439
  %145 = load i32, i32* %index, align 4, !dbg !7440
  %idxprom205 = sext i32 %145 to i64, !dbg !7439
  %arrayidx206 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %144, i64 %idxprom205, !dbg !7439
  store %struct.PaintUVPoint* %arrayidx206, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7438
  call void @llvm.dbg.declare(metadata i16* %isInside, metadata !7441, metadata !DIExpression()), !dbg !7442
  store i16 0, i16* %isInside, align 2, !dbg !7442
  call void @llvm.dbg.declare(metadata [2 x float]* %d1, metadata !7443, metadata !DIExpression()), !dbg !7444
  call void @llvm.dbg.declare(metadata [2 x float]* %d2, metadata !7445, metadata !DIExpression()), !dbg !7446
  call void @llvm.dbg.declare(metadata [2 x float]* %d3, metadata !7447, metadata !DIExpression()), !dbg !7448
  call void @llvm.dbg.declare(metadata [5 x [2 x float]]* %point, metadata !7449, metadata !DIExpression()), !dbg !7452
  call void @llvm.dbg.declare(metadata float* %dot00, metadata !7453, metadata !DIExpression()), !dbg !7454
  call void @llvm.dbg.declare(metadata float* %dot01, metadata !7455, metadata !DIExpression()), !dbg !7456
  call void @llvm.dbg.declare(metadata float* %dot02, metadata !7457, metadata !DIExpression()), !dbg !7458
  call void @llvm.dbg.declare(metadata float* %dot11, metadata !7459, metadata !DIExpression()), !dbg !7460
  call void @llvm.dbg.declare(metadata float* %dot12, metadata !7461, metadata !DIExpression()), !dbg !7462
  call void @llvm.dbg.declare(metadata float* %invDenom, metadata !7463, metadata !DIExpression()), !dbg !7464
  call void @llvm.dbg.declare(metadata float* %u, metadata !7465, metadata !DIExpression()), !dbg !7466
  call void @llvm.dbg.declare(metadata float* %v, metadata !7467, metadata !DIExpression()), !dbg !7468
  %146 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7469
  %face_index = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %146, i32 0, i32 0, !dbg !7470
  store i32 -1, i32* %face_index, align 4, !dbg !7471
  %147 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7472
  %neighbour_pixel = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %147, i32 0, i32 5, !dbg !7473
  store i32 -1, i32* %neighbour_pixel, align 4, !dbg !7474
  %148 = load i32, i32* %index, align 4, !dbg !7475
  %149 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7476
  %pixel_index = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %149, i32 0, i32 1, !dbg !7477
  store i32 %148, i32* %pixel_index, align 4, !dbg !7478
  %150 = load i32, i32* %tx, align 4, !dbg !7479
  %conv207 = sitofp i32 %150 to float, !dbg !7480
  %add208 = fadd float %conv207, 5.000000e-01, !dbg !7481
  %151 = load i32, i32* %w, align 4, !dbg !7482
  %conv209 = sitofp i32 %151 to float, !dbg !7482
  %div = fdiv float %add208, %conv209, !dbg !7483
  %arrayidx210 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 0, !dbg !7484
  %arrayidx211 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx210, i64 0, i64 0, !dbg !7484
  store float %div, float* %arrayidx211, align 16, !dbg !7485
  %152 = load i32, i32* %ty, align 4, !dbg !7486
  %conv212 = sitofp i32 %152 to float, !dbg !7487
  %add213 = fadd float %conv212, 5.000000e-01, !dbg !7488
  %153 = load i32, i32* %h, align 4, !dbg !7489
  %conv214 = sitofp i32 %153 to float, !dbg !7489
  %div215 = fdiv float %add213, %conv214, !dbg !7490
  %arrayidx216 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 0, !dbg !7491
  %arrayidx217 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx216, i64 0, i64 1, !dbg !7491
  store float %div215, float* %arrayidx217, align 4, !dbg !7492
  %154 = load i32, i32* %tx, align 4, !dbg !7493
  %conv218 = sitofp i32 %154 to float, !dbg !7494
  %155 = load i32, i32* %w, align 4, !dbg !7495
  %conv219 = sitofp i32 %155 to float, !dbg !7495
  %div220 = fdiv float %conv218, %conv219, !dbg !7496
  %arrayidx221 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 1, !dbg !7497
  %arrayidx222 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx221, i64 0, i64 0, !dbg !7497
  store float %div220, float* %arrayidx222, align 8, !dbg !7498
  %156 = load i32, i32* %ty, align 4, !dbg !7499
  %conv223 = sitofp i32 %156 to float, !dbg !7500
  %157 = load i32, i32* %h, align 4, !dbg !7501
  %conv224 = sitofp i32 %157 to float, !dbg !7501
  %div225 = fdiv float %conv223, %conv224, !dbg !7502
  %arrayidx226 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 1, !dbg !7503
  %arrayidx227 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx226, i64 0, i64 1, !dbg !7503
  store float %div225, float* %arrayidx227, align 4, !dbg !7504
  %158 = load i32, i32* %tx, align 4, !dbg !7505
  %conv228 = sitofp i32 %158 to float, !dbg !7506
  %add229 = fadd float %conv228, 1.000000e+00, !dbg !7507
  %159 = load i32, i32* %w, align 4, !dbg !7508
  %conv230 = sitofp i32 %159 to float, !dbg !7508
  %div231 = fdiv float %add229, %conv230, !dbg !7509
  %arrayidx232 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 2, !dbg !7510
  %arrayidx233 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx232, i64 0, i64 0, !dbg !7510
  store float %div231, float* %arrayidx233, align 16, !dbg !7511
  %160 = load i32, i32* %ty, align 4, !dbg !7512
  %conv234 = sitofp i32 %160 to float, !dbg !7513
  %161 = load i32, i32* %h, align 4, !dbg !7514
  %conv235 = sitofp i32 %161 to float, !dbg !7514
  %div236 = fdiv float %conv234, %conv235, !dbg !7515
  %arrayidx237 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 2, !dbg !7516
  %arrayidx238 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx237, i64 0, i64 1, !dbg !7516
  store float %div236, float* %arrayidx238, align 4, !dbg !7517
  %162 = load i32, i32* %tx, align 4, !dbg !7518
  %conv239 = sitofp i32 %162 to float, !dbg !7519
  %163 = load i32, i32* %w, align 4, !dbg !7520
  %conv240 = sitofp i32 %163 to float, !dbg !7520
  %div241 = fdiv float %conv239, %conv240, !dbg !7521
  %arrayidx242 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 3, !dbg !7522
  %arrayidx243 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx242, i64 0, i64 0, !dbg !7522
  store float %div241, float* %arrayidx243, align 8, !dbg !7523
  %164 = load i32, i32* %ty, align 4, !dbg !7524
  %conv244 = sitofp i32 %164 to float, !dbg !7525
  %add245 = fadd float %conv244, 1.000000e+00, !dbg !7526
  %165 = load i32, i32* %h, align 4, !dbg !7527
  %conv246 = sitofp i32 %165 to float, !dbg !7527
  %div247 = fdiv float %add245, %conv246, !dbg !7528
  %arrayidx248 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 3, !dbg !7529
  %arrayidx249 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx248, i64 0, i64 1, !dbg !7529
  store float %div247, float* %arrayidx249, align 4, !dbg !7530
  %166 = load i32, i32* %tx, align 4, !dbg !7531
  %conv250 = sitofp i32 %166 to float, !dbg !7532
  %add251 = fadd float %conv250, 1.000000e+00, !dbg !7533
  %167 = load i32, i32* %w, align 4, !dbg !7534
  %conv252 = sitofp i32 %167 to float, !dbg !7534
  %div253 = fdiv float %add251, %conv252, !dbg !7535
  %arrayidx254 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 4, !dbg !7536
  %arrayidx255 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx254, i64 0, i64 0, !dbg !7536
  store float %div253, float* %arrayidx255, align 16, !dbg !7537
  %168 = load i32, i32* %ty, align 4, !dbg !7538
  %conv256 = sitofp i32 %168 to float, !dbg !7539
  %add257 = fadd float %conv256, 1.000000e+00, !dbg !7540
  %169 = load i32, i32* %h, align 4, !dbg !7541
  %conv258 = sitofp i32 %169 to float, !dbg !7541
  %div259 = fdiv float %add257, %conv258, !dbg !7542
  %arrayidx260 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 4, !dbg !7543
  %arrayidx261 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx260, i64 0, i64 1, !dbg !7543
  store float %div259, float* %arrayidx261, align 4, !dbg !7544
  store i32 0, i32* %sample, align 4, !dbg !7545
  br label %for.cond262, !dbg !7547

for.cond262:                                      ; preds = %for.inc606, %for.body202
  %170 = load i32, i32* %sample, align 4, !dbg !7548
  %cmp263 = icmp slt i32 %170, 5, !dbg !7550
  br i1 %cmp263, label %for.body265, label %for.end608, !dbg !7551

for.body265:                                      ; preds = %for.cond262
  store i32 0, i32* %i203, align 4, !dbg !7552
  br label %for.cond266, !dbg !7555

for.cond266:                                      ; preds = %for.inc603, %for.body265
  %171 = load i32, i32* %i203, align 4, !dbg !7556
  %172 = load i32, i32* %numOfFaces, align 4, !dbg !7558
  %cmp267 = icmp slt i32 %171, %172, !dbg !7559
  br i1 %cmp267, label %for.body269, label %for.end605, !dbg !7560

for.body269:                                      ; preds = %for.cond266
  %173 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7561
  %174 = load i32, i32* %i203, align 4, !dbg !7564
  %idxprom270 = sext i32 %174 to i64, !dbg !7561
  %arrayidx271 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %173, i64 %idxprom270, !dbg !7561
  %min272 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx271, i32 0, i32 0, !dbg !7565
  %arrayidx273 = getelementptr inbounds [2 x float], [2 x float]* %min272, i64 0, i64 0, !dbg !7561
  %175 = load float, float* %arrayidx273, align 4, !dbg !7561
  %176 = load i32, i32* %sample, align 4, !dbg !7566
  %idxprom274 = sext i32 %176 to i64, !dbg !7567
  %arrayidx275 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 %idxprom274, !dbg !7567
  %arrayidx276 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx275, i64 0, i64 0, !dbg !7567
  %177 = load float, float* %arrayidx276, align 8, !dbg !7567
  %cmp277 = fcmp ogt float %175, %177, !dbg !7568
  br i1 %cmp277, label %if.then279, label %if.end280, !dbg !7569

if.then279:                                       ; preds = %for.body269
  br label %for.inc603, !dbg !7570

if.end280:                                        ; preds = %for.body269
  %178 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7571
  %179 = load i32, i32* %i203, align 4, !dbg !7573
  %idxprom281 = sext i32 %179 to i64, !dbg !7571
  %arrayidx282 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %178, i64 %idxprom281, !dbg !7571
  %min283 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx282, i32 0, i32 0, !dbg !7574
  %arrayidx284 = getelementptr inbounds [2 x float], [2 x float]* %min283, i64 0, i64 1, !dbg !7571
  %180 = load float, float* %arrayidx284, align 4, !dbg !7571
  %181 = load i32, i32* %sample, align 4, !dbg !7575
  %idxprom285 = sext i32 %181 to i64, !dbg !7576
  %arrayidx286 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 %idxprom285, !dbg !7576
  %arrayidx287 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx286, i64 0, i64 1, !dbg !7576
  %182 = load float, float* %arrayidx287, align 4, !dbg !7576
  %cmp288 = fcmp ogt float %180, %182, !dbg !7577
  br i1 %cmp288, label %if.then290, label %if.end291, !dbg !7578

if.then290:                                       ; preds = %if.end280
  br label %for.inc603, !dbg !7579

if.end291:                                        ; preds = %if.end280
  %183 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7580
  %184 = load i32, i32* %i203, align 4, !dbg !7582
  %idxprom292 = sext i32 %184 to i64, !dbg !7580
  %arrayidx293 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %183, i64 %idxprom292, !dbg !7580
  %max294 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx293, i32 0, i32 1, !dbg !7583
  %arrayidx295 = getelementptr inbounds [2 x float], [2 x float]* %max294, i64 0, i64 0, !dbg !7580
  %185 = load float, float* %arrayidx295, align 4, !dbg !7580
  %186 = load i32, i32* %sample, align 4, !dbg !7584
  %idxprom296 = sext i32 %186 to i64, !dbg !7585
  %arrayidx297 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 %idxprom296, !dbg !7585
  %arrayidx298 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx297, i64 0, i64 0, !dbg !7585
  %187 = load float, float* %arrayidx298, align 8, !dbg !7585
  %cmp299 = fcmp olt float %185, %187, !dbg !7586
  br i1 %cmp299, label %if.then301, label %if.end302, !dbg !7587

if.then301:                                       ; preds = %if.end291
  br label %for.inc603, !dbg !7588

if.end302:                                        ; preds = %if.end291
  %188 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !7589
  %189 = load i32, i32* %i203, align 4, !dbg !7591
  %idxprom303 = sext i32 %189 to i64, !dbg !7589
  %arrayidx304 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %188, i64 %idxprom303, !dbg !7589
  %max305 = getelementptr inbounds %struct.Bounds2D, %struct.Bounds2D* %arrayidx304, i32 0, i32 1, !dbg !7592
  %arrayidx306 = getelementptr inbounds [2 x float], [2 x float]* %max305, i64 0, i64 1, !dbg !7589
  %190 = load float, float* %arrayidx306, align 4, !dbg !7589
  %191 = load i32, i32* %sample, align 4, !dbg !7593
  %idxprom307 = sext i32 %191 to i64, !dbg !7594
  %arrayidx308 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 %idxprom307, !dbg !7594
  %arrayidx309 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx308, i64 0, i64 1, !dbg !7594
  %192 = load float, float* %arrayidx309, align 4, !dbg !7594
  %cmp310 = fcmp olt float %190, %192, !dbg !7595
  br i1 %cmp310, label %if.then312, label %if.end313, !dbg !7596

if.then312:                                       ; preds = %if.end302
  br label %for.inc603, !dbg !7597

if.end313:                                        ; preds = %if.end302
  %arraydecay314 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7598
  %193 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7599
  %194 = load i32, i32* %i203, align 4, !dbg !7600
  %idxprom315 = sext i32 %194 to i64, !dbg !7599
  %arrayidx316 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %193, i64 %idxprom315, !dbg !7599
  %uv317 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx316, i32 0, i32 0, !dbg !7601
  %arrayidx318 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv317, i64 0, i64 2, !dbg !7599
  %arraydecay319 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx318, i64 0, i64 0, !dbg !7599
  %195 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7602
  %196 = load i32, i32* %i203, align 4, !dbg !7603
  %idxprom320 = sext i32 %196 to i64, !dbg !7602
  %arrayidx321 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %195, i64 %idxprom320, !dbg !7602
  %uv322 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx321, i32 0, i32 0, !dbg !7604
  %arrayidx323 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv322, i64 0, i64 0, !dbg !7602
  %arraydecay324 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx323, i64 0, i64 0, !dbg !7602
  call void @sub_v2_v2v2(float* %arraydecay314, float* %arraydecay319, float* %arraydecay324), !dbg !7605
  %arraydecay325 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7606
  %197 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7607
  %198 = load i32, i32* %i203, align 4, !dbg !7608
  %idxprom326 = sext i32 %198 to i64, !dbg !7607
  %arrayidx327 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %197, i64 %idxprom326, !dbg !7607
  %uv328 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx327, i32 0, i32 0, !dbg !7609
  %arrayidx329 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv328, i64 0, i64 1, !dbg !7607
  %arraydecay330 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx329, i64 0, i64 0, !dbg !7607
  %199 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7610
  %200 = load i32, i32* %i203, align 4, !dbg !7611
  %idxprom331 = sext i32 %200 to i64, !dbg !7610
  %arrayidx332 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %199, i64 %idxprom331, !dbg !7610
  %uv333 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx332, i32 0, i32 0, !dbg !7612
  %arrayidx334 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv333, i64 0, i64 0, !dbg !7610
  %arraydecay335 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx334, i64 0, i64 0, !dbg !7610
  call void @sub_v2_v2v2(float* %arraydecay325, float* %arraydecay330, float* %arraydecay335), !dbg !7613
  %arraydecay336 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !7614
  %201 = load i32, i32* %sample, align 4, !dbg !7615
  %idxprom337 = sext i32 %201 to i64, !dbg !7616
  %arrayidx338 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 %idxprom337, !dbg !7616
  %arraydecay339 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx338, i64 0, i64 0, !dbg !7616
  %202 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7617
  %203 = load i32, i32* %i203, align 4, !dbg !7618
  %idxprom340 = sext i32 %203 to i64, !dbg !7617
  %arrayidx341 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %202, i64 %idxprom340, !dbg !7617
  %uv342 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx341, i32 0, i32 0, !dbg !7619
  %arrayidx343 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv342, i64 0, i64 0, !dbg !7617
  %arraydecay344 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx343, i64 0, i64 0, !dbg !7617
  call void @sub_v2_v2v2(float* %arraydecay336, float* %arraydecay339, float* %arraydecay344), !dbg !7620
  %arrayidx345 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7621
  %204 = load float, float* %arrayidx345, align 4, !dbg !7621
  %arrayidx346 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7622
  %205 = load float, float* %arrayidx346, align 4, !dbg !7622
  %mul347 = fmul float %204, %205, !dbg !7623
  %arrayidx348 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7624
  %206 = load float, float* %arrayidx348, align 4, !dbg !7624
  %arrayidx349 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7625
  %207 = load float, float* %arrayidx349, align 4, !dbg !7625
  %mul350 = fmul float %206, %207, !dbg !7626
  %add351 = fadd float %mul347, %mul350, !dbg !7627
  store float %add351, float* %dot00, align 4, !dbg !7628
  %arrayidx352 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7629
  %208 = load float, float* %arrayidx352, align 4, !dbg !7629
  %arrayidx353 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7630
  %209 = load float, float* %arrayidx353, align 4, !dbg !7630
  %mul354 = fmul float %208, %209, !dbg !7631
  %arrayidx355 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7632
  %210 = load float, float* %arrayidx355, align 4, !dbg !7632
  %arrayidx356 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7633
  %211 = load float, float* %arrayidx356, align 4, !dbg !7633
  %mul357 = fmul float %210, %211, !dbg !7634
  %add358 = fadd float %mul354, %mul357, !dbg !7635
  store float %add358, float* %dot01, align 4, !dbg !7636
  %arrayidx359 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7637
  %212 = load float, float* %arrayidx359, align 4, !dbg !7637
  %arrayidx360 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !7638
  %213 = load float, float* %arrayidx360, align 4, !dbg !7638
  %mul361 = fmul float %212, %213, !dbg !7639
  %arrayidx362 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7640
  %214 = load float, float* %arrayidx362, align 4, !dbg !7640
  %arrayidx363 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 1, !dbg !7641
  %215 = load float, float* %arrayidx363, align 4, !dbg !7641
  %mul364 = fmul float %214, %215, !dbg !7642
  %add365 = fadd float %mul361, %mul364, !dbg !7643
  store float %add365, float* %dot02, align 4, !dbg !7644
  %arrayidx366 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7645
  %216 = load float, float* %arrayidx366, align 4, !dbg !7645
  %arrayidx367 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7646
  %217 = load float, float* %arrayidx367, align 4, !dbg !7646
  %mul368 = fmul float %216, %217, !dbg !7647
  %arrayidx369 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7648
  %218 = load float, float* %arrayidx369, align 4, !dbg !7648
  %arrayidx370 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7649
  %219 = load float, float* %arrayidx370, align 4, !dbg !7649
  %mul371 = fmul float %218, %219, !dbg !7650
  %add372 = fadd float %mul368, %mul371, !dbg !7651
  store float %add372, float* %dot11, align 4, !dbg !7652
  %arrayidx373 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7653
  %220 = load float, float* %arrayidx373, align 4, !dbg !7653
  %arrayidx374 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !7654
  %221 = load float, float* %arrayidx374, align 4, !dbg !7654
  %mul375 = fmul float %220, %221, !dbg !7655
  %arrayidx376 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7656
  %222 = load float, float* %arrayidx376, align 4, !dbg !7656
  %arrayidx377 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 1, !dbg !7657
  %223 = load float, float* %arrayidx377, align 4, !dbg !7657
  %mul378 = fmul float %222, %223, !dbg !7658
  %add379 = fadd float %mul375, %mul378, !dbg !7659
  store float %add379, float* %dot12, align 4, !dbg !7660
  %224 = load float, float* %dot00, align 4, !dbg !7661
  %225 = load float, float* %dot11, align 4, !dbg !7662
  %mul380 = fmul float %224, %225, !dbg !7663
  %226 = load float, float* %dot01, align 4, !dbg !7664
  %227 = load float, float* %dot01, align 4, !dbg !7665
  %mul381 = fmul float %226, %227, !dbg !7666
  %sub = fsub float %mul380, %mul381, !dbg !7667
  store float %sub, float* %invDenom, align 4, !dbg !7668
  %228 = load float, float* %invDenom, align 4, !dbg !7669
  %tobool382 = fcmp une float %228, 0.000000e+00, !dbg !7669
  br i1 %tobool382, label %cond.true, label %cond.false, !dbg !7669

cond.true:                                        ; preds = %if.end313
  %229 = load float, float* %invDenom, align 4, !dbg !7670
  %div383 = fdiv float 1.000000e+00, %229, !dbg !7671
  br label %cond.end, !dbg !7669

cond.false:                                       ; preds = %if.end313
  br label %cond.end, !dbg !7669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond384 = phi float [ %div383, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !7669
  store float %cond384, float* %invDenom, align 4, !dbg !7672
  %230 = load float, float* %dot11, align 4, !dbg !7673
  %231 = load float, float* %dot02, align 4, !dbg !7674
  %mul385 = fmul float %230, %231, !dbg !7675
  %232 = load float, float* %dot01, align 4, !dbg !7676
  %233 = load float, float* %dot12, align 4, !dbg !7677
  %mul386 = fmul float %232, %233, !dbg !7678
  %sub387 = fsub float %mul385, %mul386, !dbg !7679
  %234 = load float, float* %invDenom, align 4, !dbg !7680
  %mul388 = fmul float %sub387, %234, !dbg !7681
  store float %mul388, float* %u, align 4, !dbg !7682
  %235 = load float, float* %dot00, align 4, !dbg !7683
  %236 = load float, float* %dot12, align 4, !dbg !7684
  %mul389 = fmul float %235, %236, !dbg !7685
  %237 = load float, float* %dot01, align 4, !dbg !7686
  %238 = load float, float* %dot02, align 4, !dbg !7687
  %mul390 = fmul float %237, %238, !dbg !7688
  %sub391 = fsub float %mul389, %mul390, !dbg !7689
  %239 = load float, float* %invDenom, align 4, !dbg !7690
  %mul392 = fmul float %sub391, %239, !dbg !7691
  store float %mul392, float* %v, align 4, !dbg !7692
  %240 = load float, float* %u, align 4, !dbg !7693
  %cmp393 = fcmp ogt float %240, 0.000000e+00, !dbg !7695
  br i1 %cmp393, label %land.lhs.true, label %if.end402, !dbg !7696

land.lhs.true:                                    ; preds = %cond.end
  %241 = load float, float* %v, align 4, !dbg !7697
  %cmp395 = fcmp ogt float %241, 0.000000e+00, !dbg !7698
  br i1 %cmp395, label %land.lhs.true397, label %if.end402, !dbg !7699

land.lhs.true397:                                 ; preds = %land.lhs.true
  %242 = load float, float* %u, align 4, !dbg !7700
  %243 = load float, float* %v, align 4, !dbg !7701
  %add398 = fadd float %242, %243, !dbg !7702
  %cmp399 = fcmp olt float %add398, 1.000000e+00, !dbg !7703
  br i1 %cmp399, label %if.then401, label %if.end402, !dbg !7704

if.then401:                                       ; preds = %land.lhs.true397
  store i16 1, i16* %isInside, align 2, !dbg !7705
  br label %if.end402, !dbg !7707

if.end402:                                        ; preds = %if.then401, %land.lhs.true397, %land.lhs.true, %cond.end
  %244 = load i16, i16* %isInside, align 2, !dbg !7708
  %tobool403 = icmp ne i16 %244, 0, !dbg !7708
  br i1 %tobool403, label %if.end484, label %land.lhs.true404, !dbg !7710

land.lhs.true404:                                 ; preds = %if.end402
  %245 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7711
  %246 = load i32, i32* %i203, align 4, !dbg !7712
  %idxprom405 = sext i32 %246 to i64, !dbg !7711
  %arrayidx406 = getelementptr inbounds %struct.MFace, %struct.MFace* %245, i64 %idxprom405, !dbg !7711
  %v4407 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx406, i32 0, i32 3, !dbg !7713
  %247 = load i32, i32* %v4407, align 4, !dbg !7713
  %tobool408 = icmp ne i32 %247, 0, !dbg !7711
  br i1 %tobool408, label %if.then409, label %if.end484, !dbg !7714

if.then409:                                       ; preds = %land.lhs.true404
  %arraydecay410 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7715
  %248 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7717
  %249 = load i32, i32* %i203, align 4, !dbg !7718
  %idxprom411 = sext i32 %249 to i64, !dbg !7717
  %arrayidx412 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %248, i64 %idxprom411, !dbg !7717
  %uv413 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx412, i32 0, i32 0, !dbg !7719
  %arrayidx414 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv413, i64 0, i64 3, !dbg !7717
  %arraydecay415 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx414, i64 0, i64 0, !dbg !7717
  %250 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7720
  %251 = load i32, i32* %i203, align 4, !dbg !7721
  %idxprom416 = sext i32 %251 to i64, !dbg !7720
  %arrayidx417 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %250, i64 %idxprom416, !dbg !7720
  %uv418 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx417, i32 0, i32 0, !dbg !7722
  %arrayidx419 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv418, i64 0, i64 0, !dbg !7720
  %arraydecay420 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx419, i64 0, i64 0, !dbg !7720
  call void @sub_v2_v2v2(float* %arraydecay410, float* %arraydecay415, float* %arraydecay420), !dbg !7723
  %arrayidx421 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7724
  %252 = load float, float* %arrayidx421, align 4, !dbg !7724
  %arrayidx422 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7725
  %253 = load float, float* %arrayidx422, align 4, !dbg !7725
  %mul423 = fmul float %252, %253, !dbg !7726
  %arrayidx424 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7727
  %254 = load float, float* %arrayidx424, align 4, !dbg !7727
  %arrayidx425 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7728
  %255 = load float, float* %arrayidx425, align 4, !dbg !7728
  %mul426 = fmul float %254, %255, !dbg !7729
  %add427 = fadd float %mul423, %mul426, !dbg !7730
  store float %add427, float* %dot00, align 4, !dbg !7731
  %arrayidx428 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7732
  %256 = load float, float* %arrayidx428, align 4, !dbg !7732
  %arrayidx429 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7733
  %257 = load float, float* %arrayidx429, align 4, !dbg !7733
  %mul430 = fmul float %256, %257, !dbg !7734
  %arrayidx431 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7735
  %258 = load float, float* %arrayidx431, align 4, !dbg !7735
  %arrayidx432 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7736
  %259 = load float, float* %arrayidx432, align 4, !dbg !7736
  %mul433 = fmul float %258, %259, !dbg !7737
  %add434 = fadd float %mul430, %mul433, !dbg !7738
  store float %add434, float* %dot01, align 4, !dbg !7739
  %arrayidx435 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 0, !dbg !7740
  %260 = load float, float* %arrayidx435, align 4, !dbg !7740
  %arrayidx436 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !7741
  %261 = load float, float* %arrayidx436, align 4, !dbg !7741
  %mul437 = fmul float %260, %261, !dbg !7742
  %arrayidx438 = getelementptr inbounds [2 x float], [2 x float]* %d1, i64 0, i64 1, !dbg !7743
  %262 = load float, float* %arrayidx438, align 4, !dbg !7743
  %arrayidx439 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 1, !dbg !7744
  %263 = load float, float* %arrayidx439, align 4, !dbg !7744
  %mul440 = fmul float %262, %263, !dbg !7745
  %add441 = fadd float %mul437, %mul440, !dbg !7746
  store float %add441, float* %dot02, align 4, !dbg !7747
  %arrayidx442 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7748
  %264 = load float, float* %arrayidx442, align 4, !dbg !7748
  %arrayidx443 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7749
  %265 = load float, float* %arrayidx443, align 4, !dbg !7749
  %mul444 = fmul float %264, %265, !dbg !7750
  %arrayidx445 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7751
  %266 = load float, float* %arrayidx445, align 4, !dbg !7751
  %arrayidx446 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7752
  %267 = load float, float* %arrayidx446, align 4, !dbg !7752
  %mul447 = fmul float %266, %267, !dbg !7753
  %add448 = fadd float %mul444, %mul447, !dbg !7754
  store float %add448, float* %dot11, align 4, !dbg !7755
  %arrayidx449 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 0, !dbg !7756
  %268 = load float, float* %arrayidx449, align 4, !dbg !7756
  %arrayidx450 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 0, !dbg !7757
  %269 = load float, float* %arrayidx450, align 4, !dbg !7757
  %mul451 = fmul float %268, %269, !dbg !7758
  %arrayidx452 = getelementptr inbounds [2 x float], [2 x float]* %d2, i64 0, i64 1, !dbg !7759
  %270 = load float, float* %arrayidx452, align 4, !dbg !7759
  %arrayidx453 = getelementptr inbounds [2 x float], [2 x float]* %d3, i64 0, i64 1, !dbg !7760
  %271 = load float, float* %arrayidx453, align 4, !dbg !7760
  %mul454 = fmul float %270, %271, !dbg !7761
  %add455 = fadd float %mul451, %mul454, !dbg !7762
  store float %add455, float* %dot12, align 4, !dbg !7763
  %272 = load float, float* %dot00, align 4, !dbg !7764
  %273 = load float, float* %dot11, align 4, !dbg !7765
  %mul456 = fmul float %272, %273, !dbg !7766
  %274 = load float, float* %dot01, align 4, !dbg !7767
  %275 = load float, float* %dot01, align 4, !dbg !7768
  %mul457 = fmul float %274, %275, !dbg !7769
  %sub458 = fsub float %mul456, %mul457, !dbg !7770
  store float %sub458, float* %invDenom, align 4, !dbg !7771
  %276 = load float, float* %invDenom, align 4, !dbg !7772
  %tobool459 = fcmp une float %276, 0.000000e+00, !dbg !7772
  br i1 %tobool459, label %cond.true460, label %cond.false462, !dbg !7772

cond.true460:                                     ; preds = %if.then409
  %277 = load float, float* %invDenom, align 4, !dbg !7773
  %div461 = fdiv float 1.000000e+00, %277, !dbg !7774
  br label %cond.end463, !dbg !7772

cond.false462:                                    ; preds = %if.then409
  br label %cond.end463, !dbg !7772

cond.end463:                                      ; preds = %cond.false462, %cond.true460
  %cond464 = phi float [ %div461, %cond.true460 ], [ 1.000000e+00, %cond.false462 ], !dbg !7772
  store float %cond464, float* %invDenom, align 4, !dbg !7775
  %278 = load float, float* %dot11, align 4, !dbg !7776
  %279 = load float, float* %dot02, align 4, !dbg !7777
  %mul465 = fmul float %278, %279, !dbg !7778
  %280 = load float, float* %dot01, align 4, !dbg !7779
  %281 = load float, float* %dot12, align 4, !dbg !7780
  %mul466 = fmul float %280, %281, !dbg !7781
  %sub467 = fsub float %mul465, %mul466, !dbg !7782
  %282 = load float, float* %invDenom, align 4, !dbg !7783
  %mul468 = fmul float %sub467, %282, !dbg !7784
  store float %mul468, float* %u, align 4, !dbg !7785
  %283 = load float, float* %dot00, align 4, !dbg !7786
  %284 = load float, float* %dot12, align 4, !dbg !7787
  %mul469 = fmul float %283, %284, !dbg !7788
  %285 = load float, float* %dot01, align 4, !dbg !7789
  %286 = load float, float* %dot02, align 4, !dbg !7790
  %mul470 = fmul float %285, %286, !dbg !7791
  %sub471 = fsub float %mul469, %mul470, !dbg !7792
  %287 = load float, float* %invDenom, align 4, !dbg !7793
  %mul472 = fmul float %sub471, %287, !dbg !7794
  store float %mul472, float* %v, align 4, !dbg !7795
  %288 = load float, float* %u, align 4, !dbg !7796
  %cmp473 = fcmp ogt float %288, 0.000000e+00, !dbg !7798
  br i1 %cmp473, label %land.lhs.true475, label %if.end483, !dbg !7799

land.lhs.true475:                                 ; preds = %cond.end463
  %289 = load float, float* %v, align 4, !dbg !7800
  %cmp476 = fcmp ogt float %289, 0.000000e+00, !dbg !7801
  br i1 %cmp476, label %land.lhs.true478, label %if.end483, !dbg !7802

land.lhs.true478:                                 ; preds = %land.lhs.true475
  %290 = load float, float* %u, align 4, !dbg !7803
  %291 = load float, float* %v, align 4, !dbg !7804
  %add479 = fadd float %290, %291, !dbg !7805
  %cmp480 = fcmp olt float %add479, 1.000000e+00, !dbg !7806
  br i1 %cmp480, label %if.then482, label %if.end483, !dbg !7807

if.then482:                                       ; preds = %land.lhs.true478
  store i16 2, i16* %isInside, align 2, !dbg !7808
  br label %if.end483, !dbg !7810

if.end483:                                        ; preds = %if.then482, %land.lhs.true478, %land.lhs.true475, %cond.end463
  br label %if.end484, !dbg !7811

if.end484:                                        ; preds = %if.end483, %land.lhs.true404, %if.end402
  %292 = load i16, i16* %isInside, align 2, !dbg !7812
  %conv485 = sext i16 %292 to i32, !dbg !7812
  %cmp486 = icmp ne i32 %conv485, 0, !dbg !7814
  br i1 %cmp486, label %if.then488, label %if.end602, !dbg !7815

if.then488:                                       ; preds = %if.end484
  call void @llvm.dbg.declare(metadata [2 x float]* %uv1co, metadata !7816, metadata !DIExpression()), !dbg !7818
  call void @llvm.dbg.declare(metadata [2 x float]* %uv2co, metadata !7819, metadata !DIExpression()), !dbg !7820
  call void @llvm.dbg.declare(metadata [2 x float]* %uv3co, metadata !7821, metadata !DIExpression()), !dbg !7822
  call void @llvm.dbg.declare(metadata [2 x float]* %uv489, metadata !7823, metadata !DIExpression()), !dbg !7824
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7825, metadata !DIExpression()), !dbg !7826
  %293 = load i16, i16* %isInside, align 2, !dbg !7827
  %conv490 = sext i16 %293 to i32, !dbg !7827
  %cmp491 = icmp eq i32 %conv490, 1, !dbg !7829
  br i1 %cmp491, label %if.then493, label %if.else, !dbg !7830

if.then493:                                       ; preds = %if.then488
  %arraydecay494 = getelementptr inbounds [2 x float], [2 x float]* %uv1co, i64 0, i64 0, !dbg !7831
  %294 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7833
  %295 = load i32, i32* %i203, align 4, !dbg !7834
  %idxprom495 = sext i32 %295 to i64, !dbg !7833
  %arrayidx496 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %294, i64 %idxprom495, !dbg !7833
  %uv497 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx496, i32 0, i32 0, !dbg !7835
  %arrayidx498 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv497, i64 0, i64 0, !dbg !7833
  %arraydecay499 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx498, i64 0, i64 0, !dbg !7833
  call void @copy_v2_v2(float* %arraydecay494, float* %arraydecay499), !dbg !7836
  %arraydecay500 = getelementptr inbounds [2 x float], [2 x float]* %uv2co, i64 0, i64 0, !dbg !7837
  %296 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7838
  %297 = load i32, i32* %i203, align 4, !dbg !7839
  %idxprom501 = sext i32 %297 to i64, !dbg !7838
  %arrayidx502 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %296, i64 %idxprom501, !dbg !7838
  %uv503 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx502, i32 0, i32 0, !dbg !7840
  %arrayidx504 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv503, i64 0, i64 1, !dbg !7838
  %arraydecay505 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx504, i64 0, i64 0, !dbg !7838
  call void @copy_v2_v2(float* %arraydecay500, float* %arraydecay505), !dbg !7841
  %arraydecay506 = getelementptr inbounds [2 x float], [2 x float]* %uv3co, i64 0, i64 0, !dbg !7842
  %298 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7843
  %299 = load i32, i32* %i203, align 4, !dbg !7844
  %idxprom507 = sext i32 %299 to i64, !dbg !7843
  %arrayidx508 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %298, i64 %idxprom507, !dbg !7843
  %uv509 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx508, i32 0, i32 0, !dbg !7845
  %arrayidx510 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv509, i64 0, i64 2, !dbg !7843
  %arraydecay511 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx510, i64 0, i64 0, !dbg !7843
  call void @copy_v2_v2(float* %arraydecay506, float* %arraydecay511), !dbg !7846
  br label %if.end530, !dbg !7847

if.else:                                          ; preds = %if.then488
  %arraydecay512 = getelementptr inbounds [2 x float], [2 x float]* %uv1co, i64 0, i64 0, !dbg !7848
  %300 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7850
  %301 = load i32, i32* %i203, align 4, !dbg !7851
  %idxprom513 = sext i32 %301 to i64, !dbg !7850
  %arrayidx514 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %300, i64 %idxprom513, !dbg !7850
  %uv515 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx514, i32 0, i32 0, !dbg !7852
  %arrayidx516 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv515, i64 0, i64 0, !dbg !7850
  %arraydecay517 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx516, i64 0, i64 0, !dbg !7850
  call void @copy_v2_v2(float* %arraydecay512, float* %arraydecay517), !dbg !7853
  %arraydecay518 = getelementptr inbounds [2 x float], [2 x float]* %uv2co, i64 0, i64 0, !dbg !7854
  %302 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7855
  %303 = load i32, i32* %i203, align 4, !dbg !7856
  %idxprom519 = sext i32 %303 to i64, !dbg !7855
  %arrayidx520 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %302, i64 %idxprom519, !dbg !7855
  %uv521 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx520, i32 0, i32 0, !dbg !7857
  %arrayidx522 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv521, i64 0, i64 2, !dbg !7855
  %arraydecay523 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx522, i64 0, i64 0, !dbg !7855
  call void @copy_v2_v2(float* %arraydecay518, float* %arraydecay523), !dbg !7858
  %arraydecay524 = getelementptr inbounds [2 x float], [2 x float]* %uv3co, i64 0, i64 0, !dbg !7859
  %304 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !7860
  %305 = load i32, i32* %i203, align 4, !dbg !7861
  %idxprom525 = sext i32 %305 to i64, !dbg !7860
  %arrayidx526 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %304, i64 %idxprom525, !dbg !7860
  %uv527 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx526, i32 0, i32 0, !dbg !7862
  %arrayidx528 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv527, i64 0, i64 3, !dbg !7860
  %arraydecay529 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx528, i64 0, i64 0, !dbg !7860
  call void @copy_v2_v2(float* %arraydecay524, float* %arraydecay529), !dbg !7863
  br label %if.end530

if.end530:                                        ; preds = %if.else, %if.then493
  store i32 0, i32* %j, align 4, !dbg !7864
  br label %for.cond531, !dbg !7866

for.cond531:                                      ; preds = %for.inc564, %if.end530
  %306 = load i32, i32* %j, align 4, !dbg !7867
  %307 = load i32, i32* %aa_samples, align 4, !dbg !7869
  %cmp532 = icmp slt i32 %306, %307, !dbg !7870
  br i1 %cmp532, label %for.body534, label %for.end566, !dbg !7871

for.body534:                                      ; preds = %for.cond531
  %arrayidx535 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 0, !dbg !7872
  %arrayidx536 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx535, i64 0, i64 0, !dbg !7872
  %308 = load float, float* %arrayidx536, align 16, !dbg !7872
  %309 = load i32, i32* %j, align 4, !dbg !7874
  %mul537 = mul nsw i32 %309, 2, !dbg !7875
  %idxprom538 = sext i32 %mul537 to i64, !dbg !7876
  %arrayidx539 = getelementptr inbounds [10 x float], [10 x float]* %jitter5sample, i64 0, i64 %idxprom538, !dbg !7876
  %310 = load float, float* %arrayidx539, align 4, !dbg !7876
  %311 = load i32, i32* %w, align 4, !dbg !7877
  %conv540 = sitofp i32 %311 to float, !dbg !7877
  %div541 = fdiv float %310, %conv540, !dbg !7878
  %add542 = fadd float %308, %div541, !dbg !7879
  %arrayidx543 = getelementptr inbounds [2 x float], [2 x float]* %uv489, i64 0, i64 0, !dbg !7880
  store float %add542, float* %arrayidx543, align 4, !dbg !7881
  %arrayidx544 = getelementptr inbounds [5 x [2 x float]], [5 x [2 x float]]* %point, i64 0, i64 0, !dbg !7882
  %arrayidx545 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx544, i64 0, i64 1, !dbg !7882
  %312 = load float, float* %arrayidx545, align 4, !dbg !7882
  %313 = load i32, i32* %j, align 4, !dbg !7883
  %mul546 = mul nsw i32 %313, 2, !dbg !7884
  %add547 = add nsw i32 %mul546, 1, !dbg !7885
  %idxprom548 = sext i32 %add547 to i64, !dbg !7886
  %arrayidx549 = getelementptr inbounds [10 x float], [10 x float]* %jitter5sample, i64 0, i64 %idxprom548, !dbg !7886
  %314 = load float, float* %arrayidx549, align 4, !dbg !7886
  %315 = load i32, i32* %h, align 4, !dbg !7887
  %conv550 = sitofp i32 %315 to float, !dbg !7887
  %div551 = fdiv float %314, %conv550, !dbg !7888
  %add552 = fadd float %312, %div551, !dbg !7889
  %arrayidx553 = getelementptr inbounds [2 x float], [2 x float]* %uv489, i64 0, i64 1, !dbg !7890
  store float %add552, float* %arrayidx553, align 4, !dbg !7891
  %arraydecay554 = getelementptr inbounds [2 x float], [2 x float]* %uv1co, i64 0, i64 0, !dbg !7892
  %arraydecay555 = getelementptr inbounds [2 x float], [2 x float]* %uv2co, i64 0, i64 0, !dbg !7893
  %arraydecay556 = getelementptr inbounds [2 x float], [2 x float]* %uv3co, i64 0, i64 0, !dbg !7894
  %arraydecay557 = getelementptr inbounds [2 x float], [2 x float]* %uv489, i64 0, i64 0, !dbg !7895
  %316 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !7896
  %317 = load i32, i32* %index, align 4, !dbg !7897
  %318 = load i32, i32* %aa_samples, align 4, !dbg !7898
  %mul558 = mul nsw i32 %317, %318, !dbg !7899
  %319 = load i32, i32* %j, align 4, !dbg !7900
  %add559 = add nsw i32 %mul558, %319, !dbg !7901
  %idxprom560 = sext i32 %add559 to i64, !dbg !7896
  %arrayidx561 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %316, i64 %idxprom560, !dbg !7896
  %v562 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx561, i32 0, i32 0, !dbg !7902
  %arraydecay563 = getelementptr inbounds [3 x float], [3 x float]* %v562, i64 0, i64 0, !dbg !7896
  call void @barycentric_weights_v2(float* %arraydecay554, float* %arraydecay555, float* %arraydecay556, float* %arraydecay557, float* %arraydecay563), !dbg !7903
  br label %for.inc564, !dbg !7904

for.inc564:                                       ; preds = %for.body534
  %320 = load i32, i32* %j, align 4, !dbg !7905
  %inc565 = add nsw i32 %320, 1, !dbg !7905
  store i32 %inc565, i32* %j, align 4, !dbg !7905
  br label %for.cond531, !dbg !7906, !llvm.loop !7907

for.end566:                                       ; preds = %for.cond531
  %321 = load i32, i32* %i203, align 4, !dbg !7909
  %322 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7910
  %face_index567 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %322, i32 0, i32 0, !dbg !7911
  store i32 %321, i32* %face_index567, align 4, !dbg !7912
  %323 = load i16, i16* %isInside, align 2, !dbg !7913
  %conv568 = sext i16 %323 to i32, !dbg !7913
  %cmp569 = icmp eq i32 %conv568, 2, !dbg !7914
  %324 = zext i1 %cmp569 to i64, !dbg !7915
  %cond571 = select i1 %cmp569, i32 1, i32 0, !dbg !7915
  %conv572 = trunc i32 %cond571 to i16, !dbg !7915
  %325 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7916
  %quad = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %325, i32 0, i32 6, !dbg !7917
  store i16 %conv572, i16* %quad, align 4, !dbg !7918
  %326 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7919
  %327 = load i32, i32* %i203, align 4, !dbg !7920
  %idxprom573 = sext i32 %327 to i64, !dbg !7919
  %arrayidx574 = getelementptr inbounds %struct.MFace, %struct.MFace* %326, i64 %idxprom573, !dbg !7919
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx574, i32 0, i32 0, !dbg !7921
  %328 = load i32, i32* %v1, align 4, !dbg !7921
  %329 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7922
  %v1575 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %329, i32 0, i32 2, !dbg !7923
  store i32 %328, i32* %v1575, align 4, !dbg !7924
  %330 = load i16, i16* %isInside, align 2, !dbg !7925
  %conv576 = sext i16 %330 to i32, !dbg !7925
  %cmp577 = icmp eq i32 %conv576, 2, !dbg !7926
  br i1 %cmp577, label %cond.true579, label %cond.false582, !dbg !7927

cond.true579:                                     ; preds = %for.end566
  %331 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7928
  %332 = load i32, i32* %i203, align 4, !dbg !7929
  %idxprom580 = sext i32 %332 to i64, !dbg !7928
  %arrayidx581 = getelementptr inbounds %struct.MFace, %struct.MFace* %331, i64 %idxprom580, !dbg !7928
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx581, i32 0, i32 2, !dbg !7930
  %333 = load i32, i32* %v3, align 4, !dbg !7930
  br label %cond.end585, !dbg !7927

cond.false582:                                    ; preds = %for.end566
  %334 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7931
  %335 = load i32, i32* %i203, align 4, !dbg !7932
  %idxprom583 = sext i32 %335 to i64, !dbg !7931
  %arrayidx584 = getelementptr inbounds %struct.MFace, %struct.MFace* %334, i64 %idxprom583, !dbg !7931
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx584, i32 0, i32 1, !dbg !7933
  %336 = load i32, i32* %v2, align 4, !dbg !7933
  br label %cond.end585, !dbg !7927

cond.end585:                                      ; preds = %cond.false582, %cond.true579
  %cond586 = phi i32 [ %333, %cond.true579 ], [ %336, %cond.false582 ], !dbg !7927
  %337 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7934
  %v2587 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %337, i32 0, i32 3, !dbg !7935
  store i32 %cond586, i32* %v2587, align 4, !dbg !7936
  %338 = load i16, i16* %isInside, align 2, !dbg !7937
  %conv588 = sext i16 %338 to i32, !dbg !7937
  %cmp589 = icmp eq i32 %conv588, 2, !dbg !7938
  br i1 %cmp589, label %cond.true591, label %cond.false595, !dbg !7939

cond.true591:                                     ; preds = %cond.end585
  %339 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7940
  %340 = load i32, i32* %i203, align 4, !dbg !7941
  %idxprom592 = sext i32 %340 to i64, !dbg !7940
  %arrayidx593 = getelementptr inbounds %struct.MFace, %struct.MFace* %339, i64 %idxprom592, !dbg !7940
  %v4594 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx593, i32 0, i32 3, !dbg !7942
  %341 = load i32, i32* %v4594, align 4, !dbg !7942
  br label %cond.end599, !dbg !7939

cond.false595:                                    ; preds = %cond.end585
  %342 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !7943
  %343 = load i32, i32* %i203, align 4, !dbg !7944
  %idxprom596 = sext i32 %343 to i64, !dbg !7943
  %arrayidx597 = getelementptr inbounds %struct.MFace, %struct.MFace* %342, i64 %idxprom596, !dbg !7943
  %v3598 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx597, i32 0, i32 2, !dbg !7945
  %344 = load i32, i32* %v3598, align 4, !dbg !7945
  br label %cond.end599, !dbg !7939

cond.end599:                                      ; preds = %cond.false595, %cond.true591
  %cond600 = phi i32 [ %341, %cond.true591 ], [ %344, %cond.false595 ], !dbg !7939
  %345 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !7946
  %v3601 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %345, i32 0, i32 4, !dbg !7947
  store i32 %cond600, i32* %v3601, align 4, !dbg !7948
  store i32 5, i32* %sample, align 4, !dbg !7949
  br label %for.end605, !dbg !7950

if.end602:                                        ; preds = %if.end484
  br label %for.inc603, !dbg !7951

for.inc603:                                       ; preds = %if.end602, %if.then312, %if.then301, %if.then290, %if.then279
  %346 = load i32, i32* %i203, align 4, !dbg !7952
  %inc604 = add nsw i32 %346, 1, !dbg !7952
  store i32 %inc604, i32* %i203, align 4, !dbg !7952
  br label %for.cond266, !dbg !7953, !llvm.loop !7954

for.end605:                                       ; preds = %cond.end599, %for.cond266
  br label %for.inc606, !dbg !7956

for.inc606:                                       ; preds = %for.end605
  %347 = load i32, i32* %sample, align 4, !dbg !7957
  %inc607 = add nsw i32 %347, 1, !dbg !7957
  store i32 %inc607, i32* %sample, align 4, !dbg !7957
  br label %for.cond262, !dbg !7958, !llvm.loop !7959

for.end608:                                       ; preds = %for.cond262
  br label %for.inc609, !dbg !7961

for.inc609:                                       ; preds = %for.end608
  %348 = load i32, i32* %tx, align 4, !dbg !7962
  %inc610 = add nsw i32 %348, 1, !dbg !7962
  store i32 %inc610, i32* %tx, align 4, !dbg !7962
  br label %for.cond199, !dbg !7963, !llvm.loop !7964

for.end611:                                       ; preds = %for.cond199
  br label %for.inc612, !dbg !7966

for.inc612:                                       ; preds = %for.end611
  %349 = load i32, i32* %ty, align 4, !dbg !7967
  %inc613 = add nsw i32 %349, 1, !dbg !7967
  store i32 %inc613, i32* %ty, align 4, !dbg !7967
  br label %for.cond195, !dbg !7968, !llvm.loop !7969

for.end614:                                       ; preds = %for.cond195
  store i32 0, i32* %ty, align 4, !dbg !7971
  br label %for.cond615, !dbg !7973

for.cond615:                                      ; preds = %for.inc821, %for.end614
  %350 = load i32, i32* %ty, align 4, !dbg !7974
  %351 = load i32, i32* %h, align 4, !dbg !7976
  %cmp616 = icmp slt i32 %350, %351, !dbg !7977
  br i1 %cmp616, label %for.body618, label %for.end823, !dbg !7978

for.body618:                                      ; preds = %for.cond615
  call void @llvm.dbg.declare(metadata i32* %tx619, metadata !7979, metadata !DIExpression()), !dbg !7981
  store i32 0, i32* %tx619, align 4, !dbg !7982
  br label %for.cond620, !dbg !7984

for.cond620:                                      ; preds = %for.inc818, %for.body618
  %352 = load i32, i32* %tx619, align 4, !dbg !7985
  %353 = load i32, i32* %w, align 4, !dbg !7987
  %cmp621 = icmp slt i32 %352, %353, !dbg !7988
  br i1 %cmp621, label %for.body623, label %for.end820, !dbg !7989

for.body623:                                      ; preds = %for.cond620
  call void @llvm.dbg.declare(metadata i32* %index624, metadata !7990, metadata !DIExpression()), !dbg !7992
  %354 = load i32, i32* %tx619, align 4, !dbg !7993
  %355 = load i32, i32* %w, align 4, !dbg !7994
  %356 = load i32, i32* %ty, align 4, !dbg !7995
  %mul625 = mul nsw i32 %355, %356, !dbg !7996
  %add626 = add nsw i32 %354, %mul625, !dbg !7997
  store i32 %add626, i32* %index624, align 4, !dbg !7992
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint627, metadata !7998, metadata !DIExpression()), !dbg !7999
  %357 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8000
  %358 = load i32, i32* %index624, align 4, !dbg !8001
  %idxprom628 = sext i32 %358 to i64, !dbg !8000
  %arrayidx629 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %357, i64 %idxprom628, !dbg !8000
  store %struct.PaintUVPoint* %arrayidx629, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !7999
  %359 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8002
  %face_index630 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %359, i32 0, i32 0, !dbg !8004
  %360 = load i32, i32* %face_index630, align 4, !dbg !8004
  %cmp631 = icmp eq i32 %360, -1, !dbg !8005
  br i1 %cmp631, label %if.then633, label %if.end817, !dbg !8006

if.then633:                                       ; preds = %for.body623
  call void @llvm.dbg.declare(metadata i32* %u_min, metadata !8007, metadata !DIExpression()), !dbg !8009
  call void @llvm.dbg.declare(metadata i32* %u_max, metadata !8010, metadata !DIExpression()), !dbg !8011
  call void @llvm.dbg.declare(metadata i32* %v_min, metadata !8012, metadata !DIExpression()), !dbg !8013
  call void @llvm.dbg.declare(metadata i32* %v_max, metadata !8014, metadata !DIExpression()), !dbg !8015
  call void @llvm.dbg.declare(metadata i32* %u634, metadata !8016, metadata !DIExpression()), !dbg !8017
  call void @llvm.dbg.declare(metadata i32* %v635, metadata !8018, metadata !DIExpression()), !dbg !8019
  call void @llvm.dbg.declare(metadata i32* %ind, metadata !8020, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.declare(metadata [2 x float]* %point636, metadata !8022, metadata !DIExpression()), !dbg !8023
  %361 = load i32, i32* %tx619, align 4, !dbg !8024
  %cmp637 = icmp sgt i32 %361, 0, !dbg !8025
  %362 = zext i1 %cmp637 to i64, !dbg !8026
  %cond639 = select i1 %cmp637, i32 -1, i32 0, !dbg !8026
  store i32 %cond639, i32* %u_min, align 4, !dbg !8027
  %363 = load i32, i32* %tx619, align 4, !dbg !8028
  %364 = load i32, i32* %w, align 4, !dbg !8029
  %sub640 = sub nsw i32 %364, 1, !dbg !8030
  %cmp641 = icmp slt i32 %363, %sub640, !dbg !8031
  %365 = zext i1 %cmp641 to i64, !dbg !8032
  %cond643 = select i1 %cmp641, i32 1, i32 0, !dbg !8032
  store i32 %cond643, i32* %u_max, align 4, !dbg !8033
  %366 = load i32, i32* %ty, align 4, !dbg !8034
  %cmp644 = icmp sgt i32 %366, 0, !dbg !8035
  %367 = zext i1 %cmp644 to i64, !dbg !8036
  %cond646 = select i1 %cmp644, i32 -1, i32 0, !dbg !8036
  store i32 %cond646, i32* %v_min, align 4, !dbg !8037
  %368 = load i32, i32* %ty, align 4, !dbg !8038
  %369 = load i32, i32* %h, align 4, !dbg !8039
  %sub647 = sub nsw i32 %369, 1, !dbg !8040
  %cmp648 = icmp slt i32 %368, %sub647, !dbg !8041
  %370 = zext i1 %cmp648 to i64, !dbg !8042
  %cond650 = select i1 %cmp648, i32 1, i32 0, !dbg !8042
  store i32 %cond650, i32* %v_max, align 4, !dbg !8043
  %371 = load i32, i32* %tx619, align 4, !dbg !8044
  %conv651 = sitofp i32 %371 to float, !dbg !8045
  %add652 = fadd float %conv651, 5.000000e-01, !dbg !8046
  %372 = load i32, i32* %w, align 4, !dbg !8047
  %conv653 = sitofp i32 %372 to float, !dbg !8047
  %div654 = fdiv float %add652, %conv653, !dbg !8048
  %arrayidx655 = getelementptr inbounds [2 x float], [2 x float]* %point636, i64 0, i64 0, !dbg !8049
  store float %div654, float* %arrayidx655, align 4, !dbg !8050
  %373 = load i32, i32* %ty, align 4, !dbg !8051
  %conv656 = sitofp i32 %373 to float, !dbg !8052
  %add657 = fadd float %conv656, 5.000000e-01, !dbg !8053
  %374 = load i32, i32* %h, align 4, !dbg !8054
  %conv658 = sitofp i32 %374 to float, !dbg !8054
  %div659 = fdiv float %add657, %conv658, !dbg !8055
  %arrayidx660 = getelementptr inbounds [2 x float], [2 x float]* %point636, i64 0, i64 1, !dbg !8056
  store float %div659, float* %arrayidx660, align 4, !dbg !8057
  %375 = load i32, i32* %u_min, align 4, !dbg !8058
  store i32 %375, i32* %u634, align 4, !dbg !8060
  br label %for.cond661, !dbg !8061

for.cond661:                                      ; preds = %for.inc814, %if.then633
  %376 = load i32, i32* %u634, align 4, !dbg !8062
  %377 = load i32, i32* %u_max, align 4, !dbg !8064
  %cmp662 = icmp sle i32 %376, %377, !dbg !8065
  br i1 %cmp662, label %for.body664, label %for.end816, !dbg !8066

for.body664:                                      ; preds = %for.cond661
  %378 = load i32, i32* %v_min, align 4, !dbg !8067
  store i32 %378, i32* %v635, align 4, !dbg !8069
  br label %for.cond665, !dbg !8070

for.cond665:                                      ; preds = %for.inc811, %for.body664
  %379 = load i32, i32* %v635, align 4, !dbg !8071
  %380 = load i32, i32* %v_max, align 4, !dbg !8073
  %cmp666 = icmp sle i32 %379, %380, !dbg !8074
  br i1 %cmp666, label %for.body668, label %for.end813, !dbg !8075

for.body668:                                      ; preds = %for.cond665
  %381 = load i32, i32* %u634, align 4, !dbg !8076
  %cmp669 = icmp ne i32 %381, 0, !dbg !8079
  br i1 %cmp669, label %if.then674, label %lor.lhs.false671, !dbg !8080

lor.lhs.false671:                                 ; preds = %for.body668
  %382 = load i32, i32* %v635, align 4, !dbg !8081
  %cmp672 = icmp ne i32 %382, 0, !dbg !8082
  br i1 %cmp672, label %if.then674, label %if.end810, !dbg !8083

if.then674:                                       ; preds = %lor.lhs.false671, %for.body668
  %383 = load i32, i32* %tx619, align 4, !dbg !8084
  %384 = load i32, i32* %u634, align 4, !dbg !8086
  %add675 = add nsw i32 %383, %384, !dbg !8087
  %385 = load i32, i32* %w, align 4, !dbg !8088
  %386 = load i32, i32* %ty, align 4, !dbg !8089
  %387 = load i32, i32* %v635, align 4, !dbg !8090
  %add676 = add nsw i32 %386, %387, !dbg !8091
  %mul677 = mul nsw i32 %385, %add676, !dbg !8092
  %add678 = add nsw i32 %add675, %mul677, !dbg !8093
  store i32 %add678, i32* %ind, align 4, !dbg !8094
  %388 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8095
  %389 = load i32, i32* %ind, align 4, !dbg !8097
  %idxprom679 = sext i32 %389 to i64, !dbg !8095
  %arrayidx680 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %388, i64 %idxprom679, !dbg !8095
  %face_index681 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx680, i32 0, i32 0, !dbg !8098
  %390 = load i32, i32* %face_index681, align 4, !dbg !8098
  %cmp682 = icmp ne i32 %390, -1, !dbg !8099
  br i1 %cmp682, label %if.then684, label %if.end809, !dbg !8100

if.then684:                                       ; preds = %if.then674
  call void @llvm.dbg.declare(metadata [2 x float]* %uv1co685, metadata !8101, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata [2 x float]* %uv2co686, metadata !8104, metadata !DIExpression()), !dbg !8105
  call void @llvm.dbg.declare(metadata [2 x float]* %uv3co687, metadata !8106, metadata !DIExpression()), !dbg !8107
  call void @llvm.dbg.declare(metadata [2 x float]* %uv688, metadata !8108, metadata !DIExpression()), !dbg !8109
  call void @llvm.dbg.declare(metadata i32* %i689, metadata !8110, metadata !DIExpression()), !dbg !8111
  %391 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8112
  %392 = load i32, i32* %ind, align 4, !dbg !8113
  %idxprom690 = sext i32 %392 to i64, !dbg !8112
  %arrayidx691 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %391, i64 %idxprom690, !dbg !8112
  %face_index692 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx691, i32 0, i32 0, !dbg !8114
  %393 = load i32, i32* %face_index692, align 4, !dbg !8114
  store i32 %393, i32* %i689, align 4, !dbg !8111
  call void @llvm.dbg.declare(metadata i32* %j693, metadata !8115, metadata !DIExpression()), !dbg !8116
  %394 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8117
  %395 = load i32, i32* %ind, align 4, !dbg !8119
  %idxprom694 = sext i32 %395 to i64, !dbg !8117
  %arrayidx695 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %394, i64 %idxprom694, !dbg !8117
  %quad696 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx695, i32 0, i32 6, !dbg !8120
  %396 = load i16, i16* %quad696, align 4, !dbg !8120
  %tobool697 = icmp ne i16 %396, 0, !dbg !8117
  br i1 %tobool697, label %if.else717, label %if.then698, !dbg !8121

if.then698:                                       ; preds = %if.then684
  %arraydecay699 = getelementptr inbounds [2 x float], [2 x float]* %uv1co685, i64 0, i64 0, !dbg !8122
  %397 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8124
  %398 = load i32, i32* %i689, align 4, !dbg !8125
  %idxprom700 = sext i32 %398 to i64, !dbg !8124
  %arrayidx701 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %397, i64 %idxprom700, !dbg !8124
  %uv702 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx701, i32 0, i32 0, !dbg !8126
  %arrayidx703 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv702, i64 0, i64 0, !dbg !8124
  %arraydecay704 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx703, i64 0, i64 0, !dbg !8124
  call void @copy_v2_v2(float* %arraydecay699, float* %arraydecay704), !dbg !8127
  %arraydecay705 = getelementptr inbounds [2 x float], [2 x float]* %uv2co686, i64 0, i64 0, !dbg !8128
  %399 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8129
  %400 = load i32, i32* %i689, align 4, !dbg !8130
  %idxprom706 = sext i32 %400 to i64, !dbg !8129
  %arrayidx707 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %399, i64 %idxprom706, !dbg !8129
  %uv708 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx707, i32 0, i32 0, !dbg !8131
  %arrayidx709 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv708, i64 0, i64 1, !dbg !8129
  %arraydecay710 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx709, i64 0, i64 0, !dbg !8129
  call void @copy_v2_v2(float* %arraydecay705, float* %arraydecay710), !dbg !8132
  %arraydecay711 = getelementptr inbounds [2 x float], [2 x float]* %uv3co687, i64 0, i64 0, !dbg !8133
  %401 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8134
  %402 = load i32, i32* %i689, align 4, !dbg !8135
  %idxprom712 = sext i32 %402 to i64, !dbg !8134
  %arrayidx713 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %401, i64 %idxprom712, !dbg !8134
  %uv714 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx713, i32 0, i32 0, !dbg !8136
  %arrayidx715 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv714, i64 0, i64 2, !dbg !8134
  %arraydecay716 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx715, i64 0, i64 0, !dbg !8134
  call void @copy_v2_v2(float* %arraydecay711, float* %arraydecay716), !dbg !8137
  br label %if.end736, !dbg !8138

if.else717:                                       ; preds = %if.then684
  %arraydecay718 = getelementptr inbounds [2 x float], [2 x float]* %uv1co685, i64 0, i64 0, !dbg !8139
  %403 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8141
  %404 = load i32, i32* %i689, align 4, !dbg !8142
  %idxprom719 = sext i32 %404 to i64, !dbg !8141
  %arrayidx720 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %403, i64 %idxprom719, !dbg !8141
  %uv721 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx720, i32 0, i32 0, !dbg !8143
  %arrayidx722 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv721, i64 0, i64 0, !dbg !8141
  %arraydecay723 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx722, i64 0, i64 0, !dbg !8141
  call void @copy_v2_v2(float* %arraydecay718, float* %arraydecay723), !dbg !8144
  %arraydecay724 = getelementptr inbounds [2 x float], [2 x float]* %uv2co686, i64 0, i64 0, !dbg !8145
  %405 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8146
  %406 = load i32, i32* %i689, align 4, !dbg !8147
  %idxprom725 = sext i32 %406 to i64, !dbg !8146
  %arrayidx726 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %405, i64 %idxprom725, !dbg !8146
  %uv727 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx726, i32 0, i32 0, !dbg !8148
  %arrayidx728 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv727, i64 0, i64 2, !dbg !8146
  %arraydecay729 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx728, i64 0, i64 0, !dbg !8146
  call void @copy_v2_v2(float* %arraydecay724, float* %arraydecay729), !dbg !8149
  %arraydecay730 = getelementptr inbounds [2 x float], [2 x float]* %uv3co687, i64 0, i64 0, !dbg !8150
  %407 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8151
  %408 = load i32, i32* %i689, align 4, !dbg !8152
  %idxprom731 = sext i32 %408 to i64, !dbg !8151
  %arrayidx732 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %407, i64 %idxprom731, !dbg !8151
  %uv733 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx732, i32 0, i32 0, !dbg !8153
  %arrayidx734 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv733, i64 0, i64 3, !dbg !8151
  %arraydecay735 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx734, i64 0, i64 0, !dbg !8151
  call void @copy_v2_v2(float* %arraydecay730, float* %arraydecay735), !dbg !8154
  br label %if.end736

if.end736:                                        ; preds = %if.else717, %if.then698
  store i32 0, i32* %j693, align 4, !dbg !8155
  br label %for.cond737, !dbg !8157

for.cond737:                                      ; preds = %for.inc768, %if.end736
  %409 = load i32, i32* %j693, align 4, !dbg !8158
  %410 = load i32, i32* %aa_samples, align 4, !dbg !8160
  %cmp738 = icmp slt i32 %409, %410, !dbg !8161
  br i1 %cmp738, label %for.body740, label %for.end770, !dbg !8162

for.body740:                                      ; preds = %for.cond737
  %arrayidx741 = getelementptr inbounds [2 x float], [2 x float]* %point636, i64 0, i64 0, !dbg !8163
  %411 = load float, float* %arrayidx741, align 4, !dbg !8163
  %412 = load i32, i32* %j693, align 4, !dbg !8165
  %mul742 = mul nsw i32 %412, 2, !dbg !8166
  %idxprom743 = sext i32 %mul742 to i64, !dbg !8167
  %arrayidx744 = getelementptr inbounds [10 x float], [10 x float]* %jitter5sample, i64 0, i64 %idxprom743, !dbg !8167
  %413 = load float, float* %arrayidx744, align 4, !dbg !8167
  %414 = load i32, i32* %w, align 4, !dbg !8168
  %conv745 = sitofp i32 %414 to float, !dbg !8168
  %div746 = fdiv float %413, %conv745, !dbg !8169
  %add747 = fadd float %411, %div746, !dbg !8170
  %arrayidx748 = getelementptr inbounds [2 x float], [2 x float]* %uv688, i64 0, i64 0, !dbg !8171
  store float %add747, float* %arrayidx748, align 4, !dbg !8172
  %arrayidx749 = getelementptr inbounds [2 x float], [2 x float]* %point636, i64 0, i64 1, !dbg !8173
  %415 = load float, float* %arrayidx749, align 4, !dbg !8173
  %416 = load i32, i32* %j693, align 4, !dbg !8174
  %mul750 = mul nsw i32 %416, 2, !dbg !8175
  %add751 = add nsw i32 %mul750, 1, !dbg !8176
  %idxprom752 = sext i32 %add751 to i64, !dbg !8177
  %arrayidx753 = getelementptr inbounds [10 x float], [10 x float]* %jitter5sample, i64 0, i64 %idxprom752, !dbg !8177
  %417 = load float, float* %arrayidx753, align 4, !dbg !8177
  %418 = load i32, i32* %h, align 4, !dbg !8178
  %conv754 = sitofp i32 %418 to float, !dbg !8178
  %div755 = fdiv float %417, %conv754, !dbg !8179
  %add756 = fadd float %415, %div755, !dbg !8180
  %arrayidx757 = getelementptr inbounds [2 x float], [2 x float]* %uv688, i64 0, i64 1, !dbg !8181
  store float %add756, float* %arrayidx757, align 4, !dbg !8182
  %arraydecay758 = getelementptr inbounds [2 x float], [2 x float]* %uv1co685, i64 0, i64 0, !dbg !8183
  %arraydecay759 = getelementptr inbounds [2 x float], [2 x float]* %uv2co686, i64 0, i64 0, !dbg !8184
  %arraydecay760 = getelementptr inbounds [2 x float], [2 x float]* %uv3co687, i64 0, i64 0, !dbg !8185
  %arraydecay761 = getelementptr inbounds [2 x float], [2 x float]* %uv688, i64 0, i64 0, !dbg !8186
  %419 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !8187
  %420 = load i32, i32* %index624, align 4, !dbg !8188
  %421 = load i32, i32* %aa_samples, align 4, !dbg !8189
  %mul762 = mul nsw i32 %420, %421, !dbg !8190
  %422 = load i32, i32* %j693, align 4, !dbg !8191
  %add763 = add nsw i32 %mul762, %422, !dbg !8192
  %idxprom764 = sext i32 %add763 to i64, !dbg !8187
  %arrayidx765 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %419, i64 %idxprom764, !dbg !8187
  %v766 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx765, i32 0, i32 0, !dbg !8193
  %arraydecay767 = getelementptr inbounds [3 x float], [3 x float]* %v766, i64 0, i64 0, !dbg !8187
  call void @barycentric_weights_v2(float* %arraydecay758, float* %arraydecay759, float* %arraydecay760, float* %arraydecay761, float* %arraydecay767), !dbg !8194
  br label %for.inc768, !dbg !8195

for.inc768:                                       ; preds = %for.body740
  %423 = load i32, i32* %j693, align 4, !dbg !8196
  %inc769 = add nsw i32 %423, 1, !dbg !8196
  store i32 %inc769, i32* %j693, align 4, !dbg !8196
  br label %for.cond737, !dbg !8197, !llvm.loop !8198

for.end770:                                       ; preds = %for.cond737
  %424 = load i32, i32* %ind, align 4, !dbg !8200
  %425 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8201
  %neighbour_pixel771 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %425, i32 0, i32 5, !dbg !8202
  store i32 %424, i32* %neighbour_pixel771, align 4, !dbg !8203
  %426 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8204
  %427 = load i32, i32* %ind, align 4, !dbg !8205
  %idxprom772 = sext i32 %427 to i64, !dbg !8204
  %arrayidx773 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %426, i64 %idxprom772, !dbg !8204
  %quad774 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx773, i32 0, i32 6, !dbg !8206
  %428 = load i16, i16* %quad774, align 4, !dbg !8206
  %429 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8207
  %quad775 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %429, i32 0, i32 6, !dbg !8208
  store i16 %428, i16* %quad775, align 4, !dbg !8209
  %430 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8210
  %431 = load i32, i32* %i689, align 4, !dbg !8211
  %idxprom776 = sext i32 %431 to i64, !dbg !8210
  %arrayidx777 = getelementptr inbounds %struct.MFace, %struct.MFace* %430, i64 %idxprom776, !dbg !8210
  %v1778 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx777, i32 0, i32 0, !dbg !8212
  %432 = load i32, i32* %v1778, align 4, !dbg !8212
  %433 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8213
  %v1779 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %433, i32 0, i32 2, !dbg !8214
  store i32 %432, i32* %v1779, align 4, !dbg !8215
  %434 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8216
  %quad780 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %434, i32 0, i32 6, !dbg !8217
  %435 = load i16, i16* %quad780, align 4, !dbg !8217
  %conv781 = sext i16 %435 to i32, !dbg !8218
  %tobool782 = icmp ne i32 %conv781, 0, !dbg !8218
  br i1 %tobool782, label %cond.true783, label %cond.false787, !dbg !8218

cond.true783:                                     ; preds = %for.end770
  %436 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8219
  %437 = load i32, i32* %i689, align 4, !dbg !8220
  %idxprom784 = sext i32 %437 to i64, !dbg !8219
  %arrayidx785 = getelementptr inbounds %struct.MFace, %struct.MFace* %436, i64 %idxprom784, !dbg !8219
  %v3786 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx785, i32 0, i32 2, !dbg !8221
  %438 = load i32, i32* %v3786, align 4, !dbg !8221
  br label %cond.end791, !dbg !8218

cond.false787:                                    ; preds = %for.end770
  %439 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8222
  %440 = load i32, i32* %i689, align 4, !dbg !8223
  %idxprom788 = sext i32 %440 to i64, !dbg !8222
  %arrayidx789 = getelementptr inbounds %struct.MFace, %struct.MFace* %439, i64 %idxprom788, !dbg !8222
  %v2790 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx789, i32 0, i32 1, !dbg !8224
  %441 = load i32, i32* %v2790, align 4, !dbg !8224
  br label %cond.end791, !dbg !8218

cond.end791:                                      ; preds = %cond.false787, %cond.true783
  %cond792 = phi i32 [ %438, %cond.true783 ], [ %441, %cond.false787 ], !dbg !8218
  %442 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8225
  %v2793 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %442, i32 0, i32 3, !dbg !8226
  store i32 %cond792, i32* %v2793, align 4, !dbg !8227
  %443 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8228
  %quad794 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %443, i32 0, i32 6, !dbg !8229
  %444 = load i16, i16* %quad794, align 4, !dbg !8229
  %conv795 = sext i16 %444 to i32, !dbg !8230
  %tobool796 = icmp ne i32 %conv795, 0, !dbg !8230
  br i1 %tobool796, label %cond.true797, label %cond.false801, !dbg !8230

cond.true797:                                     ; preds = %cond.end791
  %445 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8231
  %446 = load i32, i32* %i689, align 4, !dbg !8232
  %idxprom798 = sext i32 %446 to i64, !dbg !8231
  %arrayidx799 = getelementptr inbounds %struct.MFace, %struct.MFace* %445, i64 %idxprom798, !dbg !8231
  %v4800 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx799, i32 0, i32 3, !dbg !8233
  %447 = load i32, i32* %v4800, align 4, !dbg !8233
  br label %cond.end805, !dbg !8230

cond.false801:                                    ; preds = %cond.end791
  %448 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8234
  %449 = load i32, i32* %i689, align 4, !dbg !8235
  %idxprom802 = sext i32 %449 to i64, !dbg !8234
  %arrayidx803 = getelementptr inbounds %struct.MFace, %struct.MFace* %448, i64 %idxprom802, !dbg !8234
  %v3804 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx803, i32 0, i32 2, !dbg !8236
  %450 = load i32, i32* %v3804, align 4, !dbg !8236
  br label %cond.end805, !dbg !8230

cond.end805:                                      ; preds = %cond.false801, %cond.true797
  %cond806 = phi i32 [ %447, %cond.true797 ], [ %450, %cond.false801 ], !dbg !8230
  %451 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint627, align 8, !dbg !8237
  %v3807 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %451, i32 0, i32 4, !dbg !8238
  store i32 %cond806, i32* %v3807, align 4, !dbg !8239
  %452 = load i32, i32* %u_max, align 4, !dbg !8240
  %add808 = add nsw i32 %452, 1, !dbg !8241
  store i32 %add808, i32* %u634, align 4, !dbg !8242
  br label %for.end813, !dbg !8243

if.end809:                                        ; preds = %if.then674
  br label %if.end810, !dbg !8244

if.end810:                                        ; preds = %if.end809, %lor.lhs.false671
  br label %for.inc811, !dbg !8245

for.inc811:                                       ; preds = %if.end810
  %453 = load i32, i32* %v635, align 4, !dbg !8246
  %inc812 = add nsw i32 %453, 1, !dbg !8246
  store i32 %inc812, i32* %v635, align 4, !dbg !8246
  br label %for.cond665, !dbg !8247, !llvm.loop !8248

for.end813:                                       ; preds = %cond.end805, %for.cond665
  br label %for.inc814, !dbg !8249

for.inc814:                                       ; preds = %for.end813
  %454 = load i32, i32* %u634, align 4, !dbg !8250
  %inc815 = add nsw i32 %454, 1, !dbg !8250
  store i32 %inc815, i32* %u634, align 4, !dbg !8250
  br label %for.cond661, !dbg !8251, !llvm.loop !8252

for.end816:                                       ; preds = %for.cond661
  br label %if.end817, !dbg !8254

if.end817:                                        ; preds = %for.end816, %for.body623
  br label %for.inc818, !dbg !8255

for.inc818:                                       ; preds = %if.end817
  %455 = load i32, i32* %tx619, align 4, !dbg !8256
  %inc819 = add nsw i32 %455, 1, !dbg !8256
  store i32 %inc819, i32* %tx619, align 4, !dbg !8256
  br label %for.cond620, !dbg !8257, !llvm.loop !8258

for.end820:                                       ; preds = %for.cond620
  br label %for.inc821, !dbg !8260

for.inc821:                                       ; preds = %for.end820
  %456 = load i32, i32* %ty, align 4, !dbg !8261
  %inc822 = add nsw i32 %456, 1, !dbg !8261
  store i32 %inc822, i32* %ty, align 4, !dbg !8261
  br label %for.cond615, !dbg !8262, !llvm.loop !8263

for.end823:                                       ; preds = %for.cond615
  store i32 0, i32* %ty, align 4, !dbg !8265
  br label %for.cond824, !dbg !8267

for.cond824:                                      ; preds = %for.inc862, %for.end823
  %457 = load i32, i32* %ty, align 4, !dbg !8268
  %458 = load i32, i32* %h, align 4, !dbg !8270
  %cmp825 = icmp slt i32 %457, %458, !dbg !8271
  br i1 %cmp825, label %for.body827, label %for.end864, !dbg !8272

for.body827:                                      ; preds = %for.cond824
  call void @llvm.dbg.declare(metadata i32* %tx828, metadata !8273, metadata !DIExpression()), !dbg !8275
  store i32 0, i32* %tx828, align 4, !dbg !8276
  br label %for.cond829, !dbg !8278

for.cond829:                                      ; preds = %for.inc859, %for.body827
  %459 = load i32, i32* %tx828, align 4, !dbg !8279
  %460 = load i32, i32* %w, align 4, !dbg !8281
  %cmp830 = icmp slt i32 %459, %460, !dbg !8282
  br i1 %cmp830, label %for.body832, label %for.end861, !dbg !8283

for.body832:                                      ; preds = %for.cond829
  call void @llvm.dbg.declare(metadata i32* %index833, metadata !8284, metadata !DIExpression()), !dbg !8286
  %461 = load i32, i32* %tx828, align 4, !dbg !8287
  %462 = load i32, i32* %w, align 4, !dbg !8288
  %463 = load i32, i32* %ty, align 4, !dbg !8289
  %mul834 = mul nsw i32 %462, %463, !dbg !8290
  %add835 = add nsw i32 %461, %mul834, !dbg !8291
  store i32 %add835, i32* %index833, align 4, !dbg !8286
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint836, metadata !8292, metadata !DIExpression()), !dbg !8293
  %464 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8294
  %465 = load i32, i32* %index833, align 4, !dbg !8295
  %idxprom837 = sext i32 %465 to i64, !dbg !8294
  %arrayidx838 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %464, i64 %idxprom837, !dbg !8294
  store %struct.PaintUVPoint* %arrayidx838, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8293
  %466 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8296
  %face_index839 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %466, i32 0, i32 0, !dbg !8298
  %467 = load i32, i32* %face_index839, align 4, !dbg !8298
  %cmp840 = icmp eq i32 %467, -1, !dbg !8299
  br i1 %cmp840, label %land.lhs.true842, label %if.end852, !dbg !8300

land.lhs.true842:                                 ; preds = %for.body832
  %468 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8301
  %neighbour_pixel843 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %468, i32 0, i32 5, !dbg !8302
  %469 = load i32, i32* %neighbour_pixel843, align 4, !dbg !8302
  %cmp844 = icmp ne i32 %469, -1, !dbg !8303
  br i1 %cmp844, label %if.then846, label %if.end852, !dbg !8304

if.then846:                                       ; preds = %land.lhs.true842
  %470 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8305
  %471 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8306
  %neighbour_pixel847 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %471, i32 0, i32 5, !dbg !8307
  %472 = load i32, i32* %neighbour_pixel847, align 4, !dbg !8307
  %idxprom848 = zext i32 %472 to i64, !dbg !8305
  %arrayidx849 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %470, i64 %idxprom848, !dbg !8305
  %face_index850 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx849, i32 0, i32 0, !dbg !8308
  %473 = load i32, i32* %face_index850, align 4, !dbg !8308
  %474 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8309
  %face_index851 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %474, i32 0, i32 0, !dbg !8310
  store i32 %473, i32* %face_index851, align 4, !dbg !8311
  br label %if.end852, !dbg !8309

if.end852:                                        ; preds = %if.then846, %land.lhs.true842, %for.body832
  %475 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint836, align 8, !dbg !8312
  %face_index853 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %475, i32 0, i32 0, !dbg !8314
  %476 = load i32, i32* %face_index853, align 4, !dbg !8314
  %cmp854 = icmp ne i32 %476, -1, !dbg !8315
  br i1 %cmp854, label %if.then856, label %if.end858, !dbg !8316

if.then856:                                       ; preds = %if.end852
  %477 = load i32, i32* %active_points, align 4, !dbg !8317
  %inc857 = add nsw i32 %477, 1, !dbg !8317
  store i32 %inc857, i32* %active_points, align 4, !dbg !8317
  br label %if.end858, !dbg !8318

if.end858:                                        ; preds = %if.then856, %if.end852
  br label %for.inc859, !dbg !8319

for.inc859:                                       ; preds = %if.end858
  %478 = load i32, i32* %tx828, align 4, !dbg !8320
  %inc860 = add nsw i32 %478, 1, !dbg !8320
  store i32 %inc860, i32* %tx828, align 4, !dbg !8320
  br label %for.cond829, !dbg !8321, !llvm.loop !8322

for.end861:                                       ; preds = %for.cond829
  br label %for.inc862, !dbg !8324

for.inc862:                                       ; preds = %for.end861
  %479 = load i32, i32* %ty, align 4, !dbg !8325
  %inc863 = add nsw i32 %479, 1, !dbg !8325
  store i32 %inc863, i32* %ty, align 4, !dbg !8325
  br label %for.cond824, !dbg !8326, !llvm.loop !8327

for.end864:                                       ; preds = %for.cond824
  call void @llvm.dbg.declare(metadata i32* %i865, metadata !8329, metadata !DIExpression()), !dbg !8331
  call void @llvm.dbg.declare(metadata i32* %cursor, metadata !8332, metadata !DIExpression()), !dbg !8333
  store i32 0, i32* %cursor, align 4, !dbg !8333
  store i32 0, i32* %i865, align 4, !dbg !8334
  br label %for.cond866, !dbg !8336

for.cond866:                                      ; preds = %for.inc881, %for.end864
  %480 = load i32, i32* %i865, align 4, !dbg !8337
  %481 = load i32, i32* %w, align 4, !dbg !8339
  %482 = load i32, i32* %h, align 4, !dbg !8340
  %mul867 = mul nsw i32 %481, %482, !dbg !8341
  %cmp868 = icmp slt i32 %480, %mul867, !dbg !8342
  br i1 %cmp868, label %for.body870, label %for.end883, !dbg !8343

for.body870:                                      ; preds = %for.cond866
  %483 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8344
  %484 = load i32, i32* %i865, align 4, !dbg !8347
  %idxprom871 = sext i32 %484 to i64, !dbg !8344
  %arrayidx872 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %483, i64 %idxprom871, !dbg !8344
  %face_index873 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx872, i32 0, i32 0, !dbg !8348
  %485 = load i32, i32* %face_index873, align 4, !dbg !8348
  %cmp874 = icmp ne i32 %485, -1, !dbg !8349
  br i1 %cmp874, label %if.then876, label %if.end880, !dbg !8350

if.then876:                                       ; preds = %for.body870
  %486 = load i32, i32* %cursor, align 4, !dbg !8351
  %487 = load i32*, i32** %final_index, align 8, !dbg !8353
  %488 = load i32, i32* %i865, align 4, !dbg !8354
  %idxprom877 = sext i32 %488 to i64, !dbg !8353
  %arrayidx878 = getelementptr inbounds i32, i32* %487, i64 %idxprom877, !dbg !8353
  store i32 %486, i32* %arrayidx878, align 4, !dbg !8355
  %489 = load i32, i32* %cursor, align 4, !dbg !8356
  %inc879 = add nsw i32 %489, 1, !dbg !8356
  store i32 %inc879, i32* %cursor, align 4, !dbg !8356
  br label %if.end880, !dbg !8357

if.end880:                                        ; preds = %if.then876, %for.body870
  br label %for.inc881, !dbg !8358

for.inc881:                                       ; preds = %if.end880
  %490 = load i32, i32* %i865, align 4, !dbg !8359
  %inc882 = add nsw i32 %490, 1, !dbg !8359
  store i32 %inc882, i32* %i865, align 4, !dbg !8359
  br label %for.cond866, !dbg !8360, !llvm.loop !8361

for.end883:                                       ; preds = %for.cond866
  %491 = load i32, i32* %w, align 4, !dbg !8363
  %492 = load i32, i32* %h, align 4, !dbg !8364
  %mul884 = mul nsw i32 %491, %492, !dbg !8365
  %493 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8366
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %493, i32 0, i32 4, !dbg !8367
  store i32 %mul884, i32* %total_points, align 8, !dbg !8368
  %494 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !8369
  call void @dynamicPaint_initAdjacencyData(%struct.DynamicPaintSurface* %494, i32 1), !dbg !8370
  %495 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8371
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %495, i32 0, i32 2, !dbg !8373
  %496 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !8373
  %tobool885 = icmp ne %struct.PaintAdjData* %496, null, !dbg !8371
  br i1 %tobool885, label %if.then886, label %if.end960, !dbg !8374

if.then886:                                       ; preds = %for.end883
  call void @llvm.dbg.declare(metadata %struct.PaintAdjData** %ed, metadata !8375, metadata !DIExpression()), !dbg !8377
  %497 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8378
  %adj_data887 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %497, i32 0, i32 2, !dbg !8379
  %498 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data887, align 8, !dbg !8379
  store %struct.PaintAdjData* %498, %struct.PaintAdjData** %ed, align 8, !dbg !8377
  call void @llvm.dbg.declare(metadata i32* %n_pos, metadata !8380, metadata !DIExpression()), !dbg !8381
  store i32 0, i32* %n_pos, align 4, !dbg !8381
  store i32 0, i32* %ty, align 4, !dbg !8382
  br label %for.cond888, !dbg !8384

for.cond888:                                      ; preds = %for.inc957, %if.then886
  %499 = load i32, i32* %ty, align 4, !dbg !8385
  %500 = load i32, i32* %h, align 4, !dbg !8387
  %cmp889 = icmp slt i32 %499, %500, !dbg !8388
  br i1 %cmp889, label %for.body891, label %for.end959, !dbg !8389

for.body891:                                      ; preds = %for.cond888
  call void @llvm.dbg.declare(metadata i32* %tx892, metadata !8390, metadata !DIExpression()), !dbg !8392
  store i32 0, i32* %tx892, align 4, !dbg !8393
  br label %for.cond893, !dbg !8395

for.cond893:                                      ; preds = %for.inc954, %for.body891
  %501 = load i32, i32* %tx892, align 4, !dbg !8396
  %502 = load i32, i32* %w, align 4, !dbg !8398
  %cmp894 = icmp slt i32 %501, %502, !dbg !8399
  br i1 %cmp894, label %for.body896, label %for.end956, !dbg !8400

for.body896:                                      ; preds = %for.cond893
  call void @llvm.dbg.declare(metadata i32* %i897, metadata !8401, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata i32* %index898, metadata !8404, metadata !DIExpression()), !dbg !8405
  %503 = load i32, i32* %tx892, align 4, !dbg !8406
  %504 = load i32, i32* %w, align 4, !dbg !8407
  %505 = load i32, i32* %ty, align 4, !dbg !8408
  %mul899 = mul nsw i32 %504, %505, !dbg !8409
  %add900 = add nsw i32 %503, %mul899, !dbg !8410
  store i32 %add900, i32* %index898, align 4, !dbg !8405
  %506 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8411
  %507 = load i32, i32* %index898, align 4, !dbg !8413
  %idxprom901 = sext i32 %507 to i64, !dbg !8411
  %arrayidx902 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %506, i64 %idxprom901, !dbg !8411
  %face_index903 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx902, i32 0, i32 0, !dbg !8414
  %508 = load i32, i32* %face_index903, align 4, !dbg !8414
  %cmp904 = icmp ne i32 %508, -1, !dbg !8415
  br i1 %cmp904, label %if.then906, label %if.end953, !dbg !8416

if.then906:                                       ; preds = %for.body896
  %509 = load i32, i32* %n_pos, align 4, !dbg !8417
  %510 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ed, align 8, !dbg !8419
  %n_index = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %510, i32 0, i32 1, !dbg !8420
  %511 = load i32*, i32** %n_index, align 8, !dbg !8420
  %512 = load i32*, i32** %final_index, align 8, !dbg !8421
  %513 = load i32, i32* %index898, align 4, !dbg !8422
  %idxprom907 = sext i32 %513 to i64, !dbg !8421
  %arrayidx908 = getelementptr inbounds i32, i32* %512, i64 %idxprom907, !dbg !8421
  %514 = load i32, i32* %arrayidx908, align 4, !dbg !8421
  %idxprom909 = sext i32 %514 to i64, !dbg !8419
  %arrayidx910 = getelementptr inbounds i32, i32* %511, i64 %idxprom909, !dbg !8419
  store i32 %509, i32* %arrayidx910, align 4, !dbg !8423
  %515 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ed, align 8, !dbg !8424
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %515, i32 0, i32 2, !dbg !8425
  %516 = load i32*, i32** %n_num, align 8, !dbg !8425
  %517 = load i32*, i32** %final_index, align 8, !dbg !8426
  %518 = load i32, i32* %index898, align 4, !dbg !8427
  %idxprom911 = sext i32 %518 to i64, !dbg !8426
  %arrayidx912 = getelementptr inbounds i32, i32* %517, i64 %idxprom911, !dbg !8426
  %519 = load i32, i32* %arrayidx912, align 4, !dbg !8426
  %idxprom913 = sext i32 %519 to i64, !dbg !8424
  %arrayidx914 = getelementptr inbounds i32, i32* %516, i64 %idxprom913, !dbg !8424
  store i32 0, i32* %arrayidx914, align 4, !dbg !8428
  store i32 0, i32* %i897, align 4, !dbg !8429
  br label %for.cond915, !dbg !8431

for.cond915:                                      ; preds = %for.inc950, %if.then906
  %520 = load i32, i32* %i897, align 4, !dbg !8432
  %cmp916 = icmp slt i32 %520, 8, !dbg !8434
  br i1 %cmp916, label %for.body918, label %for.end952, !dbg !8435

for.body918:                                      ; preds = %for.cond915
  call void @llvm.dbg.declare(metadata i32* %n_target, metadata !8436, metadata !DIExpression()), !dbg !8438
  %521 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8439
  %522 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !8440
  %arraydecay919 = getelementptr inbounds [64 x i8], [64 x i8]* %uvname, i64 0, i64 0, !dbg !8441
  %523 = load i32, i32* %w, align 4, !dbg !8442
  %524 = load i32, i32* %h, align 4, !dbg !8443
  %525 = load i32, i32* %tx892, align 4, !dbg !8444
  %526 = load i32, i32* %ty, align 4, !dbg !8445
  %527 = load i32, i32* %i897, align 4, !dbg !8446
  %call920 = call i32 @dynamicPaint_findNeighbourPixel(%struct.PaintUVPoint* %521, %struct.DerivedMesh* %522, i8* %arraydecay919, i32 %523, i32 %524, i32 %525, i32 %526, i32 %527), !dbg !8447
  store i32 %call920, i32* %n_target, align 4, !dbg !8438
  %528 = load i32, i32* %n_target, align 4, !dbg !8448
  %cmp921 = icmp sge i32 %528, 0, !dbg !8450
  br i1 %cmp921, label %if.then923, label %if.else936, !dbg !8451

if.then923:                                       ; preds = %for.body918
  %529 = load i32*, i32** %final_index, align 8, !dbg !8452
  %530 = load i32, i32* %n_target, align 4, !dbg !8454
  %idxprom924 = sext i32 %530 to i64, !dbg !8452
  %arrayidx925 = getelementptr inbounds i32, i32* %529, i64 %idxprom924, !dbg !8452
  %531 = load i32, i32* %arrayidx925, align 4, !dbg !8452
  %532 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ed, align 8, !dbg !8455
  %n_target926 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %532, i32 0, i32 0, !dbg !8456
  %533 = load i32*, i32** %n_target926, align 8, !dbg !8456
  %534 = load i32, i32* %n_pos, align 4, !dbg !8457
  %idxprom927 = zext i32 %534 to i64, !dbg !8455
  %arrayidx928 = getelementptr inbounds i32, i32* %533, i64 %idxprom927, !dbg !8455
  store i32 %531, i32* %arrayidx928, align 4, !dbg !8458
  %535 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ed, align 8, !dbg !8459
  %n_num929 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %535, i32 0, i32 2, !dbg !8460
  %536 = load i32*, i32** %n_num929, align 8, !dbg !8460
  %537 = load i32*, i32** %final_index, align 8, !dbg !8461
  %538 = load i32, i32* %index898, align 4, !dbg !8462
  %idxprom930 = sext i32 %538 to i64, !dbg !8461
  %arrayidx931 = getelementptr inbounds i32, i32* %537, i64 %idxprom930, !dbg !8461
  %539 = load i32, i32* %arrayidx931, align 4, !dbg !8461
  %idxprom932 = sext i32 %539 to i64, !dbg !8459
  %arrayidx933 = getelementptr inbounds i32, i32* %536, i64 %idxprom932, !dbg !8459
  %540 = load i32, i32* %arrayidx933, align 4, !dbg !8463
  %inc934 = add nsw i32 %540, 1, !dbg !8463
  store i32 %inc934, i32* %arrayidx933, align 4, !dbg !8463
  %541 = load i32, i32* %n_pos, align 4, !dbg !8464
  %inc935 = add i32 %541, 1, !dbg !8464
  store i32 %inc935, i32* %n_pos, align 4, !dbg !8464
  br label %if.end949, !dbg !8465

if.else936:                                       ; preds = %for.body918
  %542 = load i32, i32* %n_target, align 4, !dbg !8466
  %cmp937 = icmp eq i32 %542, -2, !dbg !8468
  br i1 %cmp937, label %if.then942, label %lor.lhs.false939, !dbg !8469

lor.lhs.false939:                                 ; preds = %if.else936
  %543 = load i32, i32* %n_target, align 4, !dbg !8470
  %cmp940 = icmp eq i32 %543, -3, !dbg !8471
  br i1 %cmp940, label %if.then942, label %if.end948, !dbg !8472

if.then942:                                       ; preds = %lor.lhs.false939, %if.else936
  %544 = load %struct.PaintAdjData*, %struct.PaintAdjData** %ed, align 8, !dbg !8473
  %flags943 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %544, i32 0, i32 3, !dbg !8475
  %545 = load i32*, i32** %flags943, align 8, !dbg !8475
  %546 = load i32*, i32** %final_index, align 8, !dbg !8476
  %547 = load i32, i32* %index898, align 4, !dbg !8477
  %idxprom944 = sext i32 %547 to i64, !dbg !8476
  %arrayidx945 = getelementptr inbounds i32, i32* %546, i64 %idxprom944, !dbg !8476
  %548 = load i32, i32* %arrayidx945, align 4, !dbg !8476
  %idxprom946 = sext i32 %548 to i64, !dbg !8473
  %arrayidx947 = getelementptr inbounds i32, i32* %545, i64 %idxprom946, !dbg !8473
  %549 = load i32, i32* %arrayidx947, align 4, !dbg !8478
  %or = or i32 %549, 1, !dbg !8478
  store i32 %or, i32* %arrayidx947, align 4, !dbg !8478
  br label %if.end948, !dbg !8479

if.end948:                                        ; preds = %if.then942, %lor.lhs.false939
  br label %if.end949

if.end949:                                        ; preds = %if.end948, %if.then923
  br label %for.inc950, !dbg !8480

for.inc950:                                       ; preds = %if.end949
  %550 = load i32, i32* %i897, align 4, !dbg !8481
  %inc951 = add nsw i32 %550, 1, !dbg !8481
  store i32 %inc951, i32* %i897, align 4, !dbg !8481
  br label %for.cond915, !dbg !8482, !llvm.loop !8483

for.end952:                                       ; preds = %for.cond915
  br label %if.end953, !dbg !8485

if.end953:                                        ; preds = %for.end952, %for.body896
  br label %for.inc954, !dbg !8486

for.inc954:                                       ; preds = %if.end953
  %551 = load i32, i32* %tx892, align 4, !dbg !8487
  %inc955 = add nsw i32 %551, 1, !dbg !8487
  store i32 %inc955, i32* %tx892, align 4, !dbg !8487
  br label %for.cond893, !dbg !8488, !llvm.loop !8489

for.end956:                                       ; preds = %for.cond893
  br label %for.inc957, !dbg !8491

for.inc957:                                       ; preds = %for.end956
  %552 = load i32, i32* %ty, align 4, !dbg !8492
  %inc958 = add nsw i32 %552, 1, !dbg !8492
  store i32 %inc958, i32* %ty, align 4, !dbg !8492
  br label %for.cond888, !dbg !8493, !llvm.loop !8494

for.end959:                                       ; preds = %for.cond888
  br label %if.end960, !dbg !8496

if.end960:                                        ; preds = %for.end959, %for.end883
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data, metadata !8497, metadata !DIExpression()), !dbg !8499
  %553 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8500
  %call961 = call i8* %553(i64 16, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.22, i64 0, i64 0)), !dbg !8500
  %554 = bitcast i8* %call961 to %struct.ImgSeqFormatData*, !dbg !8500
  store %struct.ImgSeqFormatData* %554, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8499
  %555 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8501
  %tobool962 = icmp ne %struct.ImgSeqFormatData* %555, null, !dbg !8501
  br i1 %tobool962, label %if.then963, label %if.else978, !dbg !8503

if.then963:                                       ; preds = %if.end960
  %556 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8504
  %557 = load i32, i32* %active_points, align 4, !dbg !8506
  %conv964 = sext i32 %557 to i64, !dbg !8506
  %mul965 = mul i64 %conv964, 28, !dbg !8507
  %call966 = call i8* %556(i64 %mul965, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)), !dbg !8504
  %558 = bitcast i8* %call966 to %struct.PaintUVPoint*, !dbg !8504
  %559 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8508
  %uv_p = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %559, i32 0, i32 0, !dbg !8509
  store %struct.PaintUVPoint* %558, %struct.PaintUVPoint** %uv_p, align 8, !dbg !8510
  %560 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8511
  %561 = load i32, i32* %active_points, align 4, !dbg !8512
  %562 = load i32, i32* %aa_samples, align 4, !dbg !8513
  %mul967 = mul nsw i32 %561, %562, !dbg !8514
  %conv968 = sext i32 %mul967 to i64, !dbg !8512
  %mul969 = mul i64 %conv968, 12, !dbg !8515
  %call970 = call i8* %560(i64 %mul969, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0)), !dbg !8511
  %563 = bitcast i8* %call970 to %struct.Vec3f*, !dbg !8511
  %564 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8516
  %barycentricWeights = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %564, i32 0, i32 1, !dbg !8517
  store %struct.Vec3f* %563, %struct.Vec3f** %barycentricWeights, align 8, !dbg !8518
  %565 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8519
  %uv_p971 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %565, i32 0, i32 0, !dbg !8521
  %566 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p971, align 8, !dbg !8521
  %tobool972 = icmp ne %struct.PaintUVPoint* %566, null, !dbg !8519
  br i1 %tobool972, label %lor.lhs.false973, label %if.then976, !dbg !8522

lor.lhs.false973:                                 ; preds = %if.then963
  %567 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8523
  %barycentricWeights974 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %567, i32 0, i32 1, !dbg !8524
  %568 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights974, align 8, !dbg !8524
  %tobool975 = icmp ne %struct.Vec3f* %568, null, !dbg !8523
  br i1 %tobool975, label %if.end977, label %if.then976, !dbg !8525

if.then976:                                       ; preds = %lor.lhs.false973, %if.then963
  store i32 1, i32* %error, align 4, !dbg !8526
  br label %if.end977, !dbg !8527

if.end977:                                        ; preds = %if.then976, %lor.lhs.false973
  br label %if.end979, !dbg !8528

if.else978:                                       ; preds = %if.end960
  store i32 1, i32* %error, align 4, !dbg !8529
  br label %if.end979

if.end979:                                        ; preds = %if.else978, %if.end977
  %569 = load i32, i32* %active_points, align 4, !dbg !8531
  %570 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8532
  %total_points980 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %570, i32 0, i32 4, !dbg !8533
  store i32 %569, i32* %total_points980, align 8, !dbg !8534
  %571 = load i32, i32* %error, align 4, !dbg !8535
  %tobool981 = icmp ne i32 %571, 0, !dbg !8535
  br i1 %tobool981, label %if.then982, label %if.else996, !dbg !8537

if.then982:                                       ; preds = %if.end979
  %572 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8538
  %tobool983 = icmp ne %struct.ImgSeqFormatData* %572, null, !dbg !8538
  br i1 %tobool983, label %if.then984, label %if.end995, !dbg !8541

if.then984:                                       ; preds = %if.then982
  %573 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8542
  %uv_p985 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %573, i32 0, i32 0, !dbg !8545
  %574 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p985, align 8, !dbg !8545
  %tobool986 = icmp ne %struct.PaintUVPoint* %574, null, !dbg !8542
  br i1 %tobool986, label %if.then987, label %if.end989, !dbg !8546

if.then987:                                       ; preds = %if.then984
  %575 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8547
  %576 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8548
  %uv_p988 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %576, i32 0, i32 0, !dbg !8549
  %577 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p988, align 8, !dbg !8549
  %578 = bitcast %struct.PaintUVPoint* %577 to i8*, !dbg !8548
  call void %575(i8* %578), !dbg !8547
  br label %if.end989, !dbg !8547

if.end989:                                        ; preds = %if.then987, %if.then984
  %579 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8550
  %barycentricWeights990 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %579, i32 0, i32 1, !dbg !8552
  %580 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights990, align 8, !dbg !8552
  %tobool991 = icmp ne %struct.Vec3f* %580, null, !dbg !8550
  br i1 %tobool991, label %if.then992, label %if.end994, !dbg !8553

if.then992:                                       ; preds = %if.end989
  %581 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8554
  %582 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8555
  %barycentricWeights993 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %582, i32 0, i32 1, !dbg !8556
  %583 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights993, align 8, !dbg !8556
  %584 = bitcast %struct.Vec3f* %583 to i8*, !dbg !8555
  call void %581(i8* %584), !dbg !8554
  br label %if.end994, !dbg !8554

if.end994:                                        ; preds = %if.then992, %if.end989
  %585 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8557
  %586 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8558
  %587 = bitcast %struct.ImgSeqFormatData* %586 to i8*, !dbg !8558
  call void %585(i8* %587), !dbg !8557
  br label %if.end995, !dbg !8559

if.end995:                                        ; preds = %if.end994, %if.then982
  br label %if.end1030, !dbg !8560

if.else996:                                       ; preds = %if.end979
  call void @llvm.dbg.declare(metadata i32* %index997, metadata !8561, metadata !DIExpression()), !dbg !8563
  call void @llvm.dbg.declare(metadata i32* %cursor998, metadata !8564, metadata !DIExpression()), !dbg !8565
  store i32 0, i32* %cursor998, align 4, !dbg !8565
  %588 = load i32, i32* %active_points, align 4, !dbg !8566
  %589 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8567
  %total_points999 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %589, i32 0, i32 4, !dbg !8568
  store i32 %588, i32* %total_points999, align 8, !dbg !8569
  %590 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8570
  %591 = bitcast %struct.ImgSeqFormatData* %590 to i8*, !dbg !8570
  %592 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !8571
  %format_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %592, i32 0, i32 0, !dbg !8572
  store i8* %591, i8** %format_data, align 8, !dbg !8573
  store i32 0, i32* %index997, align 4, !dbg !8574
  br label %for.cond1000, !dbg !8576

for.cond1000:                                     ; preds = %for.inc1027, %if.else996
  %593 = load i32, i32* %index997, align 4, !dbg !8577
  %594 = load i32, i32* %w, align 4, !dbg !8579
  %595 = load i32, i32* %h, align 4, !dbg !8580
  %mul1001 = mul nsw i32 %594, %595, !dbg !8581
  %cmp1002 = icmp slt i32 %593, %mul1001, !dbg !8582
  br i1 %cmp1002, label %for.body1004, label %for.end1029, !dbg !8583

for.body1004:                                     ; preds = %for.cond1000
  %596 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8584
  %597 = load i32, i32* %index997, align 4, !dbg !8587
  %idxprom1005 = sext i32 %597 to i64, !dbg !8584
  %arrayidx1006 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %596, i64 %idxprom1005, !dbg !8584
  %face_index1007 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx1006, i32 0, i32 0, !dbg !8588
  %598 = load i32, i32* %face_index1007, align 4, !dbg !8588
  %cmp1008 = icmp ne i32 %598, -1, !dbg !8589
  br i1 %cmp1008, label %if.then1010, label %if.end1026, !dbg !8590

if.then1010:                                      ; preds = %for.body1004
  %599 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8591
  %uv_p1011 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %599, i32 0, i32 0, !dbg !8593
  %600 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p1011, align 8, !dbg !8593
  %601 = load i32, i32* %cursor998, align 4, !dbg !8594
  %idxprom1012 = sext i32 %601 to i64, !dbg !8591
  %arrayidx1013 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %600, i64 %idxprom1012, !dbg !8591
  %602 = bitcast %struct.PaintUVPoint* %arrayidx1013 to i8*, !dbg !8595
  %603 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8596
  %604 = load i32, i32* %index997, align 4, !dbg !8597
  %idxprom1014 = sext i32 %604 to i64, !dbg !8596
  %arrayidx1015 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %603, i64 %idxprom1014, !dbg !8596
  %605 = bitcast %struct.PaintUVPoint* %arrayidx1015 to i8*, !dbg !8595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %602, i8* align 4 %605, i64 28, i1 false), !dbg !8595
  %606 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !8598
  %barycentricWeights1016 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %606, i32 0, i32 1, !dbg !8599
  %607 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights1016, align 8, !dbg !8599
  %608 = load i32, i32* %cursor998, align 4, !dbg !8600
  %609 = load i32, i32* %aa_samples, align 4, !dbg !8601
  %mul1017 = mul nsw i32 %608, %609, !dbg !8602
  %idxprom1018 = sext i32 %mul1017 to i64, !dbg !8598
  %arrayidx1019 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %607, i64 %idxprom1018, !dbg !8598
  %610 = bitcast %struct.Vec3f* %arrayidx1019 to i8*, !dbg !8603
  %611 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !8604
  %612 = load i32, i32* %index997, align 4, !dbg !8605
  %613 = load i32, i32* %aa_samples, align 4, !dbg !8606
  %mul1020 = mul nsw i32 %612, %613, !dbg !8607
  %idxprom1021 = sext i32 %mul1020 to i64, !dbg !8604
  %arrayidx1022 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %611, i64 %idxprom1021, !dbg !8604
  %614 = bitcast %struct.Vec3f* %arrayidx1022 to i8*, !dbg !8603
  %615 = load i32, i32* %aa_samples, align 4, !dbg !8608
  %conv1023 = sext i32 %615 to i64, !dbg !8608
  %mul1024 = mul i64 12, %conv1023, !dbg !8609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %610, i8* align 4 %614, i64 %mul1024, i1 false), !dbg !8603
  %616 = load i32, i32* %cursor998, align 4, !dbg !8610
  %inc1025 = add nsw i32 %616, 1, !dbg !8610
  store i32 %inc1025, i32* %cursor998, align 4, !dbg !8610
  br label %if.end1026, !dbg !8611

if.end1026:                                       ; preds = %if.then1010, %for.body1004
  br label %for.inc1027, !dbg !8612

for.inc1027:                                      ; preds = %if.end1026
  %617 = load i32, i32* %index997, align 4, !dbg !8613
  %inc1028 = add nsw i32 %617, 1, !dbg !8613
  store i32 %inc1028, i32* %index997, align 4, !dbg !8613
  br label %for.cond1000, !dbg !8614, !llvm.loop !8615

for.end1029:                                      ; preds = %for.cond1000
  br label %if.end1030

if.end1030:                                       ; preds = %for.end1029, %if.end995
  br label %if.end1031, !dbg !8617

if.end1031:                                       ; preds = %if.end1030, %if.end192
  %618 = load i32, i32* %error, align 4, !dbg !8618
  %cmp1032 = icmp eq i32 %618, 1, !dbg !8620
  br i1 %cmp1032, label %if.then1034, label %if.end1036, !dbg !8621

if.then1034:                                      ; preds = %if.end1031
  %619 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !8622
  %call1035 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %619, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !8623
  br label %if.end1036, !dbg !8623

if.end1036:                                       ; preds = %if.then1034, %if.end1031
  %620 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !8624
  %tobool1037 = icmp ne %struct.Bounds2D* %620, null, !dbg !8624
  br i1 %tobool1037, label %if.then1038, label %if.end1039, !dbg !8626

if.then1038:                                      ; preds = %if.end1036
  %621 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8627
  %622 = load %struct.Bounds2D*, %struct.Bounds2D** %faceBB, align 8, !dbg !8628
  %623 = bitcast %struct.Bounds2D* %622 to i8*, !dbg !8628
  call void %621(i8* %623), !dbg !8627
  br label %if.end1039, !dbg !8627

if.end1039:                                       ; preds = %if.then1038, %if.end1036
  %624 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8629
  %tobool1040 = icmp ne %struct.PaintUVPoint* %624, null, !dbg !8629
  br i1 %tobool1040, label %if.then1041, label %if.end1042, !dbg !8631

if.then1041:                                      ; preds = %if.end1039
  %625 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8632
  %626 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints, align 8, !dbg !8633
  %627 = bitcast %struct.PaintUVPoint* %626 to i8*, !dbg !8633
  call void %625(i8* %627), !dbg !8632
  br label %if.end1042, !dbg !8632

if.end1042:                                       ; preds = %if.then1041, %if.end1039
  %628 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !8634
  %tobool1043 = icmp ne %struct.Vec3f* %628, null, !dbg !8634
  br i1 %tobool1043, label %if.then1044, label %if.end1045, !dbg !8636

if.then1044:                                      ; preds = %if.end1042
  %629 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8637
  %630 = load %struct.Vec3f*, %struct.Vec3f** %tempWeights, align 8, !dbg !8638
  %631 = bitcast %struct.Vec3f* %630 to i8*, !dbg !8638
  call void %629(i8* %631), !dbg !8637
  br label %if.end1045, !dbg !8637

if.end1045:                                       ; preds = %if.then1044, %if.end1042
  %632 = load i32*, i32** %final_index, align 8, !dbg !8639
  %tobool1046 = icmp ne i32* %632, null, !dbg !8639
  br i1 %tobool1046, label %if.then1047, label %if.end1048, !dbg !8641

if.then1047:                                      ; preds = %if.end1045
  %633 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8642
  %634 = load i32*, i32** %final_index, align 8, !dbg !8643
  %635 = bitcast i32* %634 to i8*, !dbg !8643
  call void %633(i8* %635), !dbg !8642
  br label %if.end1048, !dbg !8642

if.end1048:                                       ; preds = %if.then1047, %if.end1045
  %636 = load i32, i32* %error, align 4, !dbg !8644
  %tobool1049 = icmp ne i32 %636, 0, !dbg !8644
  br i1 %tobool1049, label %if.end1051, label %if.then1050, !dbg !8646

if.then1050:                                      ; preds = %if.end1048
  %637 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !8647
  call void @dynamicPaint_allocateSurfaceType(%struct.DynamicPaintSurface* %637), !dbg !8649
  %638 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !8650
  %639 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !8651
  call void @dynamicPaint_setInitialColor(%struct.Scene* %638, %struct.DynamicPaintSurface* %639), !dbg !8652
  br label %if.end1051, !dbg !8653

if.end1051:                                       ; preds = %if.then1050, %if.end1048
  %640 = load i32, i32* %error, align 4, !dbg !8654
  %cmp1052 = icmp eq i32 %640, 0, !dbg !8655
  %conv1053 = zext i1 %cmp1052 to i32, !dbg !8655
  store i32 %conv1053, i32* %retval, align 4, !dbg !8656
  br label %return, !dbg !8656

return:                                           ; preds = %if.end1051, %if.then34, %if.then22, %if.then14, %if.then4, %if.then
  %641 = load i32, i32* %retval, align 4, !dbg !8657
  ret i32 %641, !dbg !8657
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @setError(%struct.DynamicPaintCanvasSettings* %canvas, i8* %string) #0 !dbg !8658 {
entry:
  %canvas.addr = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %string.addr = alloca i8*, align 8
  store %struct.DynamicPaintCanvasSettings* %canvas, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas.addr, metadata !8661, metadata !DIExpression()), !dbg !8662
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !8663, metadata !DIExpression()), !dbg !8664
  %0 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !8665
  %error = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %0, i32 0, i32 6, !dbg !8666
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %error, i64 0, i64 0, !dbg !8665
  %1 = load i8*, i8** %string.addr, align 8, !dbg !8667
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %1, i64 64), !dbg !8668
  ret i32 0, !dbg !8669
}

declare dso_local void @CustomData_validate_layer_name(%struct.CustomData*, i32, i8*, i8*) #2

declare dso_local i8* @CustomData_get_layer_named(%struct.CustomData*, i32, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !8670 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  %0 = load float*, float** %a.addr, align 8, !dbg !8675
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8675
  %1 = load float, float* %arrayidx, align 4, !dbg !8675
  %2 = load float*, float** %r.addr, align 8, !dbg !8676
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8676
  store float %1, float* %arrayidx1, align 4, !dbg !8677
  %3 = load float*, float** %a.addr, align 8, !dbg !8678
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8678
  %4 = load float, float* %arrayidx2, align 4, !dbg !8678
  %5 = load float*, float** %r.addr, align 8, !dbg !8679
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8679
  store float %4, float* %arrayidx3, align 4, !dbg !8680
  ret void, !dbg !8681
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v2_v2v2(float* %r, float* %a, float* %b) #0 !dbg !8682 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8685, metadata !DIExpression()), !dbg !8686
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8687, metadata !DIExpression()), !dbg !8688
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8689, metadata !DIExpression()), !dbg !8690
  %0 = load float*, float** %a.addr, align 8, !dbg !8691
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8691
  %1 = load float, float* %arrayidx, align 4, !dbg !8691
  %2 = load float*, float** %b.addr, align 8, !dbg !8692
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8692
  %3 = load float, float* %arrayidx1, align 4, !dbg !8692
  %sub = fsub float %1, %3, !dbg !8693
  %4 = load float*, float** %r.addr, align 8, !dbg !8694
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8694
  store float %sub, float* %arrayidx2, align 4, !dbg !8695
  %5 = load float*, float** %a.addr, align 8, !dbg !8696
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8696
  %6 = load float, float* %arrayidx3, align 4, !dbg !8696
  %7 = load float*, float** %b.addr, align 8, !dbg !8697
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8697
  %8 = load float, float* %arrayidx4, align 4, !dbg !8697
  %sub5 = fsub float %6, %8, !dbg !8698
  %9 = load float*, float** %r.addr, align 8, !dbg !8699
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8699
  store float %sub5, float* %arrayidx6, align 4, !dbg !8700
  ret void, !dbg !8701
}

declare dso_local void @barycentric_weights_v2(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_findNeighbourPixel(%struct.PaintUVPoint* %tempPoints, %struct.DerivedMesh* %dm, i8* %uvname, i32 %w, i32 %h, i32 %px, i32 %py, i32 %n_index) #0 !dbg !8702 {
entry:
  %retval = alloca i32, align 4
  %tempPoints.addr = alloca %struct.PaintUVPoint*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %uvname.addr = alloca i8*, align 8
  %w.addr = alloca i32, align 4
  %h.addr = alloca i32, align 4
  %px.addr = alloca i32, align 4
  %py.addr = alloca i32, align 4
  %n_index.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %tPoint = alloca %struct.PaintUVPoint*, align 8
  %cPoint = alloca %struct.PaintUVPoint*, align 8
  %numOfFaces = alloca i32, align 4
  %mface = alloca %struct.MFace*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %pixel = alloca [2 x float], align 4
  %dist_squared = alloca float, align 4
  %t_dist_squared = alloca float, align 4
  %i = alloca i32, align 4
  %uindex = alloca [3 x i32], align 4
  %edge1_index = alloca i32, align 4
  %edge2_index = alloca i32, align 4
  %e1_index = alloca i32, align 4
  %e2_index = alloca i32, align 4
  %target_face = alloca i32, align 4
  %closest_point = alloca [2 x float], align 4
  %lambda = alloca float, align 4
  %dir_vec = alloca [2 x float], align 4
  %target_uv1 = alloca i32, align 4
  %target_uv2 = alloca i32, align 4
  %final_pixel = alloca [2 x i32], align 4
  %final_index = alloca i32, align 4
  %s_uv1 = alloca float*, align 8
  %s_uv2 = alloca float*, align 8
  %t_uv1 = alloca float*, align 8
  %t_uv2 = alloca float*, align 8
  %v4 = alloca i32, align 4
  store %struct.PaintUVPoint* %tempPoints, %struct.PaintUVPoint** %tempPoints.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tempPoints.addr, metadata !8705, metadata !DIExpression()), !dbg !8706
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8707, metadata !DIExpression()), !dbg !8708
  store i8* %uvname, i8** %uvname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %uvname.addr, metadata !8709, metadata !DIExpression()), !dbg !8710
  store i32 %w, i32* %w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %w.addr, metadata !8711, metadata !DIExpression()), !dbg !8712
  store i32 %h, i32* %h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %h.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  store i32 %px, i32* %px.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %px.addr, metadata !8715, metadata !DIExpression()), !dbg !8716
  store i32 %py, i32* %py.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %py.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  store i32 %n_index, i32* %n_index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_index.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8721, metadata !DIExpression()), !dbg !8722
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8723, metadata !DIExpression()), !dbg !8724
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint, metadata !8725, metadata !DIExpression()), !dbg !8726
  store %struct.PaintUVPoint* null, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8726
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %cPoint, metadata !8727, metadata !DIExpression()), !dbg !8728
  store %struct.PaintUVPoint* null, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8728
  %0 = load i32, i32* %px.addr, align 4, !dbg !8729
  %1 = load i32, i32* %n_index.addr, align 4, !dbg !8730
  %idxprom = sext i32 %1 to i64, !dbg !8731
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @neighX, i64 0, i64 %idxprom, !dbg !8731
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8731
  %add = add nsw i32 %0, %2, !dbg !8732
  store i32 %add, i32* %x, align 4, !dbg !8733
  %3 = load i32, i32* %py.addr, align 4, !dbg !8734
  %4 = load i32, i32* %n_index.addr, align 4, !dbg !8735
  %idxprom1 = sext i32 %4 to i64, !dbg !8736
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* @neighY, i64 0, i64 %idxprom1, !dbg !8736
  %5 = load i32, i32* %arrayidx2, align 4, !dbg !8736
  %add3 = add nsw i32 %3, %5, !dbg !8737
  store i32 %add3, i32* %y, align 4, !dbg !8738
  %6 = load i32, i32* %x, align 4, !dbg !8739
  %cmp = icmp slt i32 %6, 0, !dbg !8741
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8742

lor.lhs.false:                                    ; preds = %entry
  %7 = load i32, i32* %x, align 4, !dbg !8743
  %8 = load i32, i32* %w.addr, align 4, !dbg !8744
  %cmp4 = icmp sge i32 %7, %8, !dbg !8745
  br i1 %cmp4, label %if.then, label %if.end, !dbg !8746

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 -3, i32* %retval, align 4, !dbg !8747
  br label %return, !dbg !8747

if.end:                                           ; preds = %lor.lhs.false
  %9 = load i32, i32* %y, align 4, !dbg !8748
  %cmp5 = icmp slt i32 %9, 0, !dbg !8750
  br i1 %cmp5, label %if.then8, label %lor.lhs.false6, !dbg !8751

lor.lhs.false6:                                   ; preds = %if.end
  %10 = load i32, i32* %y, align 4, !dbg !8752
  %11 = load i32, i32* %h.addr, align 4, !dbg !8753
  %cmp7 = icmp sge i32 %10, %11, !dbg !8754
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !8755

if.then8:                                         ; preds = %lor.lhs.false6, %if.end
  store i32 -3, i32* %retval, align 4, !dbg !8756
  br label %return, !dbg !8756

if.end9:                                          ; preds = %lor.lhs.false6
  %12 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints.addr, align 8, !dbg !8757
  %13 = load i32, i32* %x, align 4, !dbg !8758
  %14 = load i32, i32* %w.addr, align 4, !dbg !8759
  %15 = load i32, i32* %y, align 4, !dbg !8760
  %mul = mul nsw i32 %14, %15, !dbg !8761
  %add10 = add nsw i32 %13, %mul, !dbg !8762
  %idxprom11 = sext i32 %add10 to i64, !dbg !8757
  %arrayidx12 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %12, i64 %idxprom11, !dbg !8757
  store %struct.PaintUVPoint* %arrayidx12, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8763
  %16 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints.addr, align 8, !dbg !8764
  %17 = load i32, i32* %px.addr, align 4, !dbg !8765
  %18 = load i32, i32* %w.addr, align 4, !dbg !8766
  %19 = load i32, i32* %py.addr, align 4, !dbg !8767
  %mul13 = mul nsw i32 %18, %19, !dbg !8768
  %add14 = add nsw i32 %17, %mul13, !dbg !8769
  %idxprom15 = sext i32 %add14 to i64, !dbg !8764
  %arrayidx16 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %16, i64 %idxprom15, !dbg !8764
  store %struct.PaintUVPoint* %arrayidx16, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8770
  %20 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8771
  %face_index = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %20, i32 0, i32 0, !dbg !8773
  %21 = load i32, i32* %face_index, align 4, !dbg !8773
  %22 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8774
  %face_index17 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %22, i32 0, i32 0, !dbg !8775
  %23 = load i32, i32* %face_index17, align 4, !dbg !8775
  %cmp18 = icmp eq i32 %21, %23, !dbg !8776
  br i1 %cmp18, label %land.lhs.true, label %if.end23, !dbg !8777

land.lhs.true:                                    ; preds = %if.end9
  %24 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8778
  %neighbour_pixel = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %24, i32 0, i32 5, !dbg !8779
  %25 = load i32, i32* %neighbour_pixel, align 4, !dbg !8779
  %cmp19 = icmp eq i32 %25, -1, !dbg !8780
  br i1 %cmp19, label %if.then20, label %if.end23, !dbg !8781

if.then20:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* %x, align 4, !dbg !8782
  %27 = load i32, i32* %w.addr, align 4, !dbg !8783
  %28 = load i32, i32* %y, align 4, !dbg !8784
  %mul21 = mul nsw i32 %27, %28, !dbg !8785
  %add22 = add nsw i32 %26, %mul21, !dbg !8786
  store i32 %add22, i32* %retval, align 4, !dbg !8787
  br label %return, !dbg !8787

if.end23:                                         ; preds = %land.lhs.true, %if.end9
  %29 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8788
  %face_index24 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %29, i32 0, i32 0, !dbg !8790
  %30 = load i32, i32* %face_index24, align 4, !dbg !8790
  %cmp25 = icmp ne i32 %30, -1, !dbg !8791
  br i1 %cmp25, label %land.lhs.true26, label %if.end32, !dbg !8792

land.lhs.true26:                                  ; preds = %if.end23
  %31 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !8793
  %neighbour_pixel27 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %31, i32 0, i32 5, !dbg !8794
  %32 = load i32, i32* %neighbour_pixel27, align 4, !dbg !8794
  %cmp28 = icmp eq i32 %32, -1, !dbg !8795
  br i1 %cmp28, label %if.then29, label %if.end32, !dbg !8796

if.then29:                                        ; preds = %land.lhs.true26
  %33 = load i32, i32* %x, align 4, !dbg !8797
  %34 = load i32, i32* %w.addr, align 4, !dbg !8799
  %35 = load i32, i32* %y, align 4, !dbg !8800
  %mul30 = mul nsw i32 %34, %35, !dbg !8801
  %add31 = add nsw i32 %33, %mul30, !dbg !8802
  store i32 %add31, i32* %retval, align 4, !dbg !8803
  br label %return, !dbg !8803

if.end32:                                         ; preds = %land.lhs.true26, %if.end23
  call void @llvm.dbg.declare(metadata i32* %numOfFaces, metadata !8804, metadata !DIExpression()), !dbg !8806
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8807
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %36, i32 0, i32 25, !dbg !8808
  %37 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !8808
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8809
  %call = call i32 %37(%struct.DerivedMesh* %38), !dbg !8807
  store i32 %call, i32* %numOfFaces, align 4, !dbg !8806
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !8810, metadata !DIExpression()), !dbg !8811
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8812
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 33, !dbg !8813
  %40 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !8813
  %41 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8814
  %call33 = call %struct.MFace* %40(%struct.DerivedMesh* %41), !dbg !8812
  store %struct.MFace* %call33, %struct.MFace** %mface, align 8, !dbg !8811
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !8815, metadata !DIExpression()), !dbg !8816
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8817
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %42, i32 0, i32 2, !dbg !8818
  %43 = load i8*, i8** %uvname.addr, align 8, !dbg !8819
  %call34 = call i8* @CustomData_get_layer_named(%struct.CustomData* %faceData, i32 5, i8* %43), !dbg !8820
  %44 = bitcast i8* %call34 to %struct.MTFace*, !dbg !8820
  store %struct.MTFace* %44, %struct.MTFace** %tface, align 8, !dbg !8816
  call void @llvm.dbg.declare(metadata [2 x float]* %pixel, metadata !8821, metadata !DIExpression()), !dbg !8823
  call void @llvm.dbg.declare(metadata float* %dist_squared, metadata !8824, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.declare(metadata float* %t_dist_squared, metadata !8826, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.declare(metadata [3 x i32]* %uindex, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata i32* %edge1_index, metadata !8832, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.declare(metadata i32* %edge2_index, metadata !8834, metadata !DIExpression()), !dbg !8835
  call void @llvm.dbg.declare(metadata i32* %e1_index, metadata !8836, metadata !DIExpression()), !dbg !8837
  call void @llvm.dbg.declare(metadata i32* %e2_index, metadata !8838, metadata !DIExpression()), !dbg !8839
  call void @llvm.dbg.declare(metadata i32* %target_face, metadata !8840, metadata !DIExpression()), !dbg !8841
  call void @llvm.dbg.declare(metadata [2 x float]* %closest_point, metadata !8842, metadata !DIExpression()), !dbg !8843
  call void @llvm.dbg.declare(metadata float* %lambda, metadata !8844, metadata !DIExpression()), !dbg !8845
  call void @llvm.dbg.declare(metadata [2 x float]* %dir_vec, metadata !8846, metadata !DIExpression()), !dbg !8847
  call void @llvm.dbg.declare(metadata i32* %target_uv1, metadata !8848, metadata !DIExpression()), !dbg !8849
  call void @llvm.dbg.declare(metadata i32* %target_uv2, metadata !8850, metadata !DIExpression()), !dbg !8851
  call void @llvm.dbg.declare(metadata [2 x i32]* %final_pixel, metadata !8852, metadata !DIExpression()), !dbg !8854
  call void @llvm.dbg.declare(metadata i32* %final_index, metadata !8855, metadata !DIExpression()), !dbg !8856
  call void @llvm.dbg.declare(metadata float** %s_uv1, metadata !8857, metadata !DIExpression()), !dbg !8858
  call void @llvm.dbg.declare(metadata float** %s_uv2, metadata !8859, metadata !DIExpression()), !dbg !8860
  call void @llvm.dbg.declare(metadata float** %t_uv1, metadata !8861, metadata !DIExpression()), !dbg !8862
  call void @llvm.dbg.declare(metadata float** %t_uv2, metadata !8863, metadata !DIExpression()), !dbg !8864
  %45 = load i32, i32* %px.addr, align 4, !dbg !8865
  %46 = load i32, i32* %n_index.addr, align 4, !dbg !8866
  %idxprom35 = sext i32 %46 to i64, !dbg !8867
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* @neighX, i64 0, i64 %idxprom35, !dbg !8867
  %47 = load i32, i32* %arrayidx36, align 4, !dbg !8867
  %add37 = add nsw i32 %45, %47, !dbg !8868
  %conv = sitofp i32 %add37 to float, !dbg !8869
  %add38 = fadd float %conv, 5.000000e-01, !dbg !8870
  %48 = load i32, i32* %w.addr, align 4, !dbg !8871
  %conv39 = sitofp i32 %48 to float, !dbg !8872
  %div = fdiv float %add38, %conv39, !dbg !8873
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !8874
  store float %div, float* %arrayidx40, align 4, !dbg !8875
  %49 = load i32, i32* %py.addr, align 4, !dbg !8876
  %50 = load i32, i32* %n_index.addr, align 4, !dbg !8877
  %idxprom41 = sext i32 %50 to i64, !dbg !8878
  %arrayidx42 = getelementptr inbounds [8 x i32], [8 x i32]* @neighY, i64 0, i64 %idxprom41, !dbg !8878
  %51 = load i32, i32* %arrayidx42, align 4, !dbg !8878
  %add43 = add nsw i32 %49, %51, !dbg !8879
  %conv44 = sitofp i32 %add43 to float, !dbg !8880
  %add45 = fadd float %conv44, 5.000000e-01, !dbg !8881
  %52 = load i32, i32* %h.addr, align 4, !dbg !8882
  %conv46 = sitofp i32 %52 to float, !dbg !8883
  %div47 = fdiv float %add45, %conv46, !dbg !8884
  %arrayidx48 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 1, !dbg !8885
  store float %div47, float* %arrayidx48, align 4, !dbg !8886
  %53 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8887
  %quad = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %53, i32 0, i32 6, !dbg !8889
  %54 = load i16, i16* %quad, align 4, !dbg !8889
  %tobool = icmp ne i16 %54, 0, !dbg !8887
  br i1 %tobool, label %if.then49, label %if.else, !dbg !8890

if.then49:                                        ; preds = %if.end32
  %arrayidx50 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 0, !dbg !8891
  store i32 0, i32* %arrayidx50, align 4, !dbg !8893
  %arrayidx51 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 1, !dbg !8894
  store i32 2, i32* %arrayidx51, align 4, !dbg !8895
  %arrayidx52 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8896
  store i32 3, i32* %arrayidx52, align 4, !dbg !8897
  br label %if.end56, !dbg !8898

if.else:                                          ; preds = %if.end32
  %arrayidx53 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 0, !dbg !8899
  store i32 0, i32* %arrayidx53, align 4, !dbg !8901
  %arrayidx54 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 1, !dbg !8902
  store i32 1, i32* %arrayidx54, align 4, !dbg !8903
  %arrayidx55 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8904
  store i32 2, i32* %arrayidx55, align 4, !dbg !8905
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then49
  %55 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8906
  %v1 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %55, i32 0, i32 2, !dbg !8907
  %56 = load i32, i32* %v1, align 4, !dbg !8907
  store i32 %56, i32* %e1_index, align 4, !dbg !8908
  %57 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8909
  %v2 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %57, i32 0, i32 3, !dbg !8910
  %58 = load i32, i32* %v2, align 4, !dbg !8910
  store i32 %58, i32* %e2_index, align 4, !dbg !8911
  %arrayidx57 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 0, !dbg !8912
  %59 = load i32, i32* %arrayidx57, align 4, !dbg !8912
  store i32 %59, i32* %edge1_index, align 4, !dbg !8913
  %arrayidx58 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 1, !dbg !8914
  %60 = load i32, i32* %arrayidx58, align 4, !dbg !8914
  store i32 %60, i32* %edge2_index, align 4, !dbg !8915
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !8916
  %61 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8917
  %62 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8918
  %face_index59 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %62, i32 0, i32 0, !dbg !8919
  %63 = load i32, i32* %face_index59, align 4, !dbg !8919
  %idxprom60 = zext i32 %63 to i64, !dbg !8917
  %arrayidx61 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %61, i64 %idxprom60, !dbg !8917
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx61, i32 0, i32 0, !dbg !8920
  %64 = load i32, i32* %edge1_index, align 4, !dbg !8921
  %idxprom62 = sext i32 %64 to i64, !dbg !8917
  %arrayidx63 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom62, !dbg !8917
  %arraydecay64 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx63, i64 0, i64 0, !dbg !8917
  %65 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8922
  %66 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8923
  %face_index65 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %66, i32 0, i32 0, !dbg !8924
  %67 = load i32, i32* %face_index65, align 4, !dbg !8924
  %idxprom66 = zext i32 %67 to i64, !dbg !8922
  %arrayidx67 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %65, i64 %idxprom66, !dbg !8922
  %uv68 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx67, i32 0, i32 0, !dbg !8925
  %68 = load i32, i32* %edge2_index, align 4, !dbg !8926
  %idxprom69 = sext i32 %68 to i64, !dbg !8922
  %arrayidx70 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv68, i64 0, i64 %idxprom69, !dbg !8922
  %arraydecay71 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx70, i64 0, i64 0, !dbg !8922
  %call72 = call float @dist_squared_to_line_segment_v2(float* %arraydecay, float* %arraydecay64, float* %arraydecay71), !dbg !8927
  store float %call72, float* %dist_squared, align 4, !dbg !8928
  %arraydecay73 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !8929
  %69 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8930
  %70 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8931
  %face_index74 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %70, i32 0, i32 0, !dbg !8932
  %71 = load i32, i32* %face_index74, align 4, !dbg !8932
  %idxprom75 = zext i32 %71 to i64, !dbg !8930
  %arrayidx76 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %69, i64 %idxprom75, !dbg !8930
  %uv77 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx76, i32 0, i32 0, !dbg !8933
  %arrayidx78 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 1, !dbg !8934
  %72 = load i32, i32* %arrayidx78, align 4, !dbg !8934
  %idxprom79 = sext i32 %72 to i64, !dbg !8930
  %arrayidx80 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv77, i64 0, i64 %idxprom79, !dbg !8930
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 0, !dbg !8930
  %73 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8935
  %74 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8936
  %face_index82 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %74, i32 0, i32 0, !dbg !8937
  %75 = load i32, i32* %face_index82, align 4, !dbg !8937
  %idxprom83 = zext i32 %75 to i64, !dbg !8935
  %arrayidx84 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %73, i64 %idxprom83, !dbg !8935
  %uv85 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx84, i32 0, i32 0, !dbg !8938
  %arrayidx86 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8939
  %76 = load i32, i32* %arrayidx86, align 4, !dbg !8939
  %idxprom87 = sext i32 %76 to i64, !dbg !8935
  %arrayidx88 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv85, i64 0, i64 %idxprom87, !dbg !8935
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx88, i64 0, i64 0, !dbg !8935
  %call90 = call float @dist_squared_to_line_segment_v2(float* %arraydecay73, float* %arraydecay81, float* %arraydecay89), !dbg !8940
  store float %call90, float* %t_dist_squared, align 4, !dbg !8941
  %77 = load float, float* %t_dist_squared, align 4, !dbg !8942
  %78 = load float, float* %dist_squared, align 4, !dbg !8944
  %cmp91 = fcmp olt float %77, %78, !dbg !8945
  br i1 %cmp91, label %if.then93, label %if.end97, !dbg !8946

if.then93:                                        ; preds = %if.end56
  %79 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8947
  %v294 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %79, i32 0, i32 3, !dbg !8949
  %80 = load i32, i32* %v294, align 4, !dbg !8949
  store i32 %80, i32* %e1_index, align 4, !dbg !8950
  %81 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8951
  %v3 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %81, i32 0, i32 4, !dbg !8952
  %82 = load i32, i32* %v3, align 4, !dbg !8952
  store i32 %82, i32* %e2_index, align 4, !dbg !8953
  %arrayidx95 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 1, !dbg !8954
  %83 = load i32, i32* %arrayidx95, align 4, !dbg !8954
  store i32 %83, i32* %edge1_index, align 4, !dbg !8955
  %arrayidx96 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8956
  %84 = load i32, i32* %arrayidx96, align 4, !dbg !8956
  store i32 %84, i32* %edge2_index, align 4, !dbg !8957
  %85 = load float, float* %t_dist_squared, align 4, !dbg !8958
  store float %85, float* %dist_squared, align 4, !dbg !8959
  br label %if.end97, !dbg !8960

if.end97:                                         ; preds = %if.then93, %if.end56
  %arraydecay98 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !8961
  %86 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8962
  %87 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8963
  %face_index99 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %87, i32 0, i32 0, !dbg !8964
  %88 = load i32, i32* %face_index99, align 4, !dbg !8964
  %idxprom100 = zext i32 %88 to i64, !dbg !8962
  %arrayidx101 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %86, i64 %idxprom100, !dbg !8962
  %uv102 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx101, i32 0, i32 0, !dbg !8965
  %arrayidx103 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8966
  %89 = load i32, i32* %arrayidx103, align 4, !dbg !8966
  %idxprom104 = sext i32 %89 to i64, !dbg !8962
  %arrayidx105 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv102, i64 0, i64 %idxprom104, !dbg !8962
  %arraydecay106 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx105, i64 0, i64 0, !dbg !8962
  %90 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !8967
  %91 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8968
  %face_index107 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %91, i32 0, i32 0, !dbg !8969
  %92 = load i32, i32* %face_index107, align 4, !dbg !8969
  %idxprom108 = zext i32 %92 to i64, !dbg !8967
  %arrayidx109 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %90, i64 %idxprom108, !dbg !8967
  %uv110 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx109, i32 0, i32 0, !dbg !8970
  %arrayidx111 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 0, !dbg !8971
  %93 = load i32, i32* %arrayidx111, align 4, !dbg !8971
  %idxprom112 = sext i32 %93 to i64, !dbg !8967
  %arrayidx113 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv110, i64 0, i64 %idxprom112, !dbg !8967
  %arraydecay114 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx113, i64 0, i64 0, !dbg !8967
  %call115 = call float @dist_squared_to_line_segment_v2(float* %arraydecay98, float* %arraydecay106, float* %arraydecay114), !dbg !8972
  store float %call115, float* %t_dist_squared, align 4, !dbg !8973
  %94 = load float, float* %t_dist_squared, align 4, !dbg !8974
  %95 = load float, float* %dist_squared, align 4, !dbg !8976
  %cmp116 = fcmp olt float %94, %95, !dbg !8977
  br i1 %cmp116, label %if.then118, label %if.end123, !dbg !8978

if.then118:                                       ; preds = %if.end97
  %96 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8979
  %v3119 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %96, i32 0, i32 4, !dbg !8981
  %97 = load i32, i32* %v3119, align 4, !dbg !8981
  store i32 %97, i32* %e1_index, align 4, !dbg !8982
  %98 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !8983
  %v1120 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %98, i32 0, i32 2, !dbg !8984
  %99 = load i32, i32* %v1120, align 4, !dbg !8984
  store i32 %99, i32* %e2_index, align 4, !dbg !8985
  %arrayidx121 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 2, !dbg !8986
  %100 = load i32, i32* %arrayidx121, align 4, !dbg !8986
  store i32 %100, i32* %edge1_index, align 4, !dbg !8987
  %arrayidx122 = getelementptr inbounds [3 x i32], [3 x i32]* %uindex, i64 0, i64 0, !dbg !8988
  %101 = load i32, i32* %arrayidx122, align 4, !dbg !8988
  store i32 %101, i32* %edge2_index, align 4, !dbg !8989
  %102 = load float, float* %t_dist_squared, align 4, !dbg !8990
  store float %102, float* %dist_squared, align 4, !dbg !8991
  br label %if.end123, !dbg !8992

if.end123:                                        ; preds = %if.then118, %if.end97
  store i32 -1, i32* %target_face, align 4, !dbg !8993
  store i32 0, i32* %i, align 4, !dbg !8994
  br label %for.cond, !dbg !8996

for.cond:                                         ; preds = %for.inc, %if.end123
  %103 = load i32, i32* %i, align 4, !dbg !8997
  %104 = load i32, i32* %numOfFaces, align 4, !dbg !8999
  %cmp124 = icmp slt i32 %103, %104, !dbg !9000
  br i1 %cmp124, label %for.body, label %for.end, !dbg !9001

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %v4, metadata !9002, metadata !DIExpression()), !dbg !9004
  %105 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9005
  %106 = load i32, i32* %i, align 4, !dbg !9006
  %idxprom126 = sext i32 %106 to i64, !dbg !9005
  %arrayidx127 = getelementptr inbounds %struct.MFace, %struct.MFace* %105, i64 %idxprom126, !dbg !9005
  %v4128 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx127, i32 0, i32 3, !dbg !9007
  %107 = load i32, i32* %v4128, align 4, !dbg !9007
  %tobool129 = icmp ne i32 %107, 0, !dbg !9008
  br i1 %tobool129, label %cond.true, label %cond.false, !dbg !9008

cond.true:                                        ; preds = %for.body
  %108 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9009
  %109 = load i32, i32* %i, align 4, !dbg !9010
  %idxprom130 = sext i32 %109 to i64, !dbg !9009
  %arrayidx131 = getelementptr inbounds %struct.MFace, %struct.MFace* %108, i64 %idxprom130, !dbg !9009
  %v4132 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx131, i32 0, i32 3, !dbg !9011
  %110 = load i32, i32* %v4132, align 4, !dbg !9011
  br label %cond.end, !dbg !9008

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !9008

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %110, %cond.true ], [ -1, %cond.false ], !dbg !9008
  store i32 %cond, i32* %v4, align 4, !dbg !9004
  %111 = load i32, i32* %e1_index, align 4, !dbg !9012
  %112 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9014
  %113 = load i32, i32* %i, align 4, !dbg !9015
  %idxprom133 = sext i32 %113 to i64, !dbg !9014
  %arrayidx134 = getelementptr inbounds %struct.MFace, %struct.MFace* %112, i64 %idxprom133, !dbg !9014
  %v1135 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx134, i32 0, i32 0, !dbg !9016
  %114 = load i32, i32* %v1135, align 4, !dbg !9016
  %cmp136 = icmp eq i32 %111, %114, !dbg !9017
  br i1 %cmp136, label %land.lhs.true153, label %lor.lhs.false138, !dbg !9018

lor.lhs.false138:                                 ; preds = %cond.end
  %115 = load i32, i32* %e1_index, align 4, !dbg !9019
  %116 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9020
  %117 = load i32, i32* %i, align 4, !dbg !9021
  %idxprom139 = sext i32 %117 to i64, !dbg !9020
  %arrayidx140 = getelementptr inbounds %struct.MFace, %struct.MFace* %116, i64 %idxprom139, !dbg !9020
  %v2141 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx140, i32 0, i32 1, !dbg !9022
  %118 = load i32, i32* %v2141, align 4, !dbg !9022
  %cmp142 = icmp eq i32 %115, %118, !dbg !9023
  br i1 %cmp142, label %land.lhs.true153, label %lor.lhs.false144, !dbg !9024

lor.lhs.false144:                                 ; preds = %lor.lhs.false138
  %119 = load i32, i32* %e1_index, align 4, !dbg !9025
  %120 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9026
  %121 = load i32, i32* %i, align 4, !dbg !9027
  %idxprom145 = sext i32 %121 to i64, !dbg !9026
  %arrayidx146 = getelementptr inbounds %struct.MFace, %struct.MFace* %120, i64 %idxprom145, !dbg !9026
  %v3147 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx146, i32 0, i32 2, !dbg !9028
  %122 = load i32, i32* %v3147, align 4, !dbg !9028
  %cmp148 = icmp eq i32 %119, %122, !dbg !9029
  br i1 %cmp148, label %land.lhs.true153, label %lor.lhs.false150, !dbg !9030

lor.lhs.false150:                                 ; preds = %lor.lhs.false144
  %123 = load i32, i32* %e1_index, align 4, !dbg !9031
  %124 = load i32, i32* %v4, align 4, !dbg !9032
  %cmp151 = icmp eq i32 %123, %124, !dbg !9033
  br i1 %cmp151, label %land.lhs.true153, label %if.end228, !dbg !9034

land.lhs.true153:                                 ; preds = %lor.lhs.false150, %lor.lhs.false144, %lor.lhs.false138, %cond.end
  %125 = load i32, i32* %e2_index, align 4, !dbg !9035
  %126 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9036
  %127 = load i32, i32* %i, align 4, !dbg !9037
  %idxprom154 = sext i32 %127 to i64, !dbg !9036
  %arrayidx155 = getelementptr inbounds %struct.MFace, %struct.MFace* %126, i64 %idxprom154, !dbg !9036
  %v1156 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx155, i32 0, i32 0, !dbg !9038
  %128 = load i32, i32* %v1156, align 4, !dbg !9038
  %cmp157 = icmp eq i32 %125, %128, !dbg !9039
  br i1 %cmp157, label %if.then174, label %lor.lhs.false159, !dbg !9040

lor.lhs.false159:                                 ; preds = %land.lhs.true153
  %129 = load i32, i32* %e2_index, align 4, !dbg !9041
  %130 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9042
  %131 = load i32, i32* %i, align 4, !dbg !9043
  %idxprom160 = sext i32 %131 to i64, !dbg !9042
  %arrayidx161 = getelementptr inbounds %struct.MFace, %struct.MFace* %130, i64 %idxprom160, !dbg !9042
  %v2162 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx161, i32 0, i32 1, !dbg !9044
  %132 = load i32, i32* %v2162, align 4, !dbg !9044
  %cmp163 = icmp eq i32 %129, %132, !dbg !9045
  br i1 %cmp163, label %if.then174, label %lor.lhs.false165, !dbg !9046

lor.lhs.false165:                                 ; preds = %lor.lhs.false159
  %133 = load i32, i32* %e2_index, align 4, !dbg !9047
  %134 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9048
  %135 = load i32, i32* %i, align 4, !dbg !9049
  %idxprom166 = sext i32 %135 to i64, !dbg !9048
  %arrayidx167 = getelementptr inbounds %struct.MFace, %struct.MFace* %134, i64 %idxprom166, !dbg !9048
  %v3168 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx167, i32 0, i32 2, !dbg !9050
  %136 = load i32, i32* %v3168, align 4, !dbg !9050
  %cmp169 = icmp eq i32 %133, %136, !dbg !9051
  br i1 %cmp169, label %if.then174, label %lor.lhs.false171, !dbg !9052

lor.lhs.false171:                                 ; preds = %lor.lhs.false165
  %137 = load i32, i32* %e2_index, align 4, !dbg !9053
  %138 = load i32, i32* %v4, align 4, !dbg !9054
  %cmp172 = icmp eq i32 %137, %138, !dbg !9055
  br i1 %cmp172, label %if.then174, label %if.end228, !dbg !9056

if.then174:                                       ; preds = %lor.lhs.false171, %lor.lhs.false165, %lor.lhs.false159, %land.lhs.true153
  %139 = load i32, i32* %i, align 4, !dbg !9057
  %140 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9060
  %face_index175 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %140, i32 0, i32 0, !dbg !9061
  %141 = load i32, i32* %face_index175, align 4, !dbg !9061
  %cmp176 = icmp eq i32 %139, %141, !dbg !9062
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !9063

if.then178:                                       ; preds = %if.then174
  br label %for.inc, !dbg !9064

if.end179:                                        ; preds = %if.then174
  %142 = load i32, i32* %i, align 4, !dbg !9065
  store i32 %142, i32* %target_face, align 4, !dbg !9066
  %143 = load i32, i32* %e1_index, align 4, !dbg !9067
  %144 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9069
  %145 = load i32, i32* %i, align 4, !dbg !9070
  %idxprom180 = sext i32 %145 to i64, !dbg !9069
  %arrayidx181 = getelementptr inbounds %struct.MFace, %struct.MFace* %144, i64 %idxprom180, !dbg !9069
  %v1182 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx181, i32 0, i32 0, !dbg !9071
  %146 = load i32, i32* %v1182, align 4, !dbg !9071
  %cmp183 = icmp eq i32 %143, %146, !dbg !9072
  br i1 %cmp183, label %if.then185, label %if.else186, !dbg !9073

if.then185:                                       ; preds = %if.end179
  store i32 0, i32* %target_uv1, align 4, !dbg !9074
  br label %if.end203, !dbg !9075

if.else186:                                       ; preds = %if.end179
  %147 = load i32, i32* %e1_index, align 4, !dbg !9076
  %148 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9078
  %149 = load i32, i32* %i, align 4, !dbg !9079
  %idxprom187 = sext i32 %149 to i64, !dbg !9078
  %arrayidx188 = getelementptr inbounds %struct.MFace, %struct.MFace* %148, i64 %idxprom187, !dbg !9078
  %v2189 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx188, i32 0, i32 1, !dbg !9080
  %150 = load i32, i32* %v2189, align 4, !dbg !9080
  %cmp190 = icmp eq i32 %147, %150, !dbg !9081
  br i1 %cmp190, label %if.then192, label %if.else193, !dbg !9082

if.then192:                                       ; preds = %if.else186
  store i32 1, i32* %target_uv1, align 4, !dbg !9083
  br label %if.end202, !dbg !9084

if.else193:                                       ; preds = %if.else186
  %151 = load i32, i32* %e1_index, align 4, !dbg !9085
  %152 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9087
  %153 = load i32, i32* %i, align 4, !dbg !9088
  %idxprom194 = sext i32 %153 to i64, !dbg !9087
  %arrayidx195 = getelementptr inbounds %struct.MFace, %struct.MFace* %152, i64 %idxprom194, !dbg !9087
  %v3196 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx195, i32 0, i32 2, !dbg !9089
  %154 = load i32, i32* %v3196, align 4, !dbg !9089
  %cmp197 = icmp eq i32 %151, %154, !dbg !9090
  br i1 %cmp197, label %if.then199, label %if.else200, !dbg !9091

if.then199:                                       ; preds = %if.else193
  store i32 2, i32* %target_uv1, align 4, !dbg !9092
  br label %if.end201, !dbg !9093

if.else200:                                       ; preds = %if.else193
  store i32 3, i32* %target_uv1, align 4, !dbg !9094
  br label %if.end201

if.end201:                                        ; preds = %if.else200, %if.then199
  br label %if.end202

if.end202:                                        ; preds = %if.end201, %if.then192
  br label %if.end203

if.end203:                                        ; preds = %if.end202, %if.then185
  %155 = load i32, i32* %e2_index, align 4, !dbg !9095
  %156 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9097
  %157 = load i32, i32* %i, align 4, !dbg !9098
  %idxprom204 = sext i32 %157 to i64, !dbg !9097
  %arrayidx205 = getelementptr inbounds %struct.MFace, %struct.MFace* %156, i64 %idxprom204, !dbg !9097
  %v1206 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx205, i32 0, i32 0, !dbg !9099
  %158 = load i32, i32* %v1206, align 4, !dbg !9099
  %cmp207 = icmp eq i32 %155, %158, !dbg !9100
  br i1 %cmp207, label %if.then209, label %if.else210, !dbg !9101

if.then209:                                       ; preds = %if.end203
  store i32 0, i32* %target_uv2, align 4, !dbg !9102
  br label %if.end227, !dbg !9103

if.else210:                                       ; preds = %if.end203
  %159 = load i32, i32* %e2_index, align 4, !dbg !9104
  %160 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9106
  %161 = load i32, i32* %i, align 4, !dbg !9107
  %idxprom211 = sext i32 %161 to i64, !dbg !9106
  %arrayidx212 = getelementptr inbounds %struct.MFace, %struct.MFace* %160, i64 %idxprom211, !dbg !9106
  %v2213 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx212, i32 0, i32 1, !dbg !9108
  %162 = load i32, i32* %v2213, align 4, !dbg !9108
  %cmp214 = icmp eq i32 %159, %162, !dbg !9109
  br i1 %cmp214, label %if.then216, label %if.else217, !dbg !9110

if.then216:                                       ; preds = %if.else210
  store i32 1, i32* %target_uv2, align 4, !dbg !9111
  br label %if.end226, !dbg !9112

if.else217:                                       ; preds = %if.else210
  %163 = load i32, i32* %e2_index, align 4, !dbg !9113
  %164 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !9115
  %165 = load i32, i32* %i, align 4, !dbg !9116
  %idxprom218 = sext i32 %165 to i64, !dbg !9115
  %arrayidx219 = getelementptr inbounds %struct.MFace, %struct.MFace* %164, i64 %idxprom218, !dbg !9115
  %v3220 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx219, i32 0, i32 2, !dbg !9117
  %166 = load i32, i32* %v3220, align 4, !dbg !9117
  %cmp221 = icmp eq i32 %163, %166, !dbg !9118
  br i1 %cmp221, label %if.then223, label %if.else224, !dbg !9119

if.then223:                                       ; preds = %if.else217
  store i32 2, i32* %target_uv2, align 4, !dbg !9120
  br label %if.end225, !dbg !9121

if.else224:                                       ; preds = %if.else217
  store i32 3, i32* %target_uv2, align 4, !dbg !9122
  br label %if.end225

if.end225:                                        ; preds = %if.else224, %if.then223
  br label %if.end226

if.end226:                                        ; preds = %if.end225, %if.then216
  br label %if.end227

if.end227:                                        ; preds = %if.end226, %if.then209
  br label %for.end, !dbg !9123

if.end228:                                        ; preds = %lor.lhs.false171, %lor.lhs.false150
  br label %for.inc, !dbg !9124

for.inc:                                          ; preds = %if.end228, %if.then178
  %167 = load i32, i32* %i, align 4, !dbg !9125
  %inc = add nsw i32 %167, 1, !dbg !9125
  store i32 %inc, i32* %i, align 4, !dbg !9125
  br label %for.cond, !dbg !9126, !llvm.loop !9127

for.end:                                          ; preds = %if.end227, %for.cond
  %168 = load i32, i32* %target_face, align 4, !dbg !9129
  %cmp229 = icmp eq i32 %168, -1, !dbg !9131
  br i1 %cmp229, label %if.then231, label %if.end232, !dbg !9132

if.then231:                                       ; preds = %for.end
  store i32 -2, i32* %retval, align 4, !dbg !9133
  br label %return, !dbg !9133

if.end232:                                        ; preds = %for.end
  %169 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9134
  %170 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9135
  %face_index233 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %170, i32 0, i32 0, !dbg !9136
  %171 = load i32, i32* %face_index233, align 4, !dbg !9136
  %idxprom234 = zext i32 %171 to i64, !dbg !9134
  %arrayidx235 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %169, i64 %idxprom234, !dbg !9134
  %uv236 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx235, i32 0, i32 0, !dbg !9137
  %172 = load i32, i32* %edge1_index, align 4, !dbg !9138
  %idxprom237 = sext i32 %172 to i64, !dbg !9134
  %arrayidx238 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv236, i64 0, i64 %idxprom237, !dbg !9134
  %arraydecay239 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx238, i64 0, i64 0, !dbg !9134
  store float* %arraydecay239, float** %s_uv1, align 8, !dbg !9139
  %173 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9140
  %174 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9141
  %face_index240 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %174, i32 0, i32 0, !dbg !9142
  %175 = load i32, i32* %face_index240, align 4, !dbg !9142
  %idxprom241 = zext i32 %175 to i64, !dbg !9140
  %arrayidx242 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %173, i64 %idxprom241, !dbg !9140
  %uv243 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx242, i32 0, i32 0, !dbg !9143
  %176 = load i32, i32* %edge2_index, align 4, !dbg !9144
  %idxprom244 = sext i32 %176 to i64, !dbg !9140
  %arrayidx245 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv243, i64 0, i64 %idxprom244, !dbg !9140
  %arraydecay246 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx245, i64 0, i64 0, !dbg !9140
  store float* %arraydecay246, float** %s_uv2, align 8, !dbg !9145
  %177 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9146
  %178 = load i32, i32* %target_face, align 4, !dbg !9147
  %idxprom247 = sext i32 %178 to i64, !dbg !9146
  %arrayidx248 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %177, i64 %idxprom247, !dbg !9146
  %uv249 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx248, i32 0, i32 0, !dbg !9148
  %179 = load i32, i32* %target_uv1, align 4, !dbg !9149
  %idxprom250 = sext i32 %179 to i64, !dbg !9146
  %arrayidx251 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv249, i64 0, i64 %idxprom250, !dbg !9146
  %arraydecay252 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx251, i64 0, i64 0, !dbg !9146
  store float* %arraydecay252, float** %t_uv1, align 8, !dbg !9150
  %180 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9151
  %181 = load i32, i32* %target_face, align 4, !dbg !9152
  %idxprom253 = sext i32 %181 to i64, !dbg !9151
  %arrayidx254 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %180, i64 %idxprom253, !dbg !9151
  %uv255 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx254, i32 0, i32 0, !dbg !9153
  %182 = load i32, i32* %target_uv2, align 4, !dbg !9154
  %idxprom256 = sext i32 %182 to i64, !dbg !9151
  %arrayidx257 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv255, i64 0, i64 %idxprom256, !dbg !9151
  %arraydecay258 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx257, i64 0, i64 0, !dbg !9151
  store float* %arraydecay258, float** %t_uv2, align 8, !dbg !9155
  %183 = load float*, float** %s_uv1, align 8, !dbg !9156
  %arrayidx259 = getelementptr inbounds float, float* %183, i64 0, !dbg !9156
  %184 = load float, float* %arrayidx259, align 4, !dbg !9156
  %185 = load float*, float** %t_uv1, align 8, !dbg !9158
  %arrayidx260 = getelementptr inbounds float, float* %185, i64 0, !dbg !9158
  %186 = load float, float* %arrayidx260, align 4, !dbg !9158
  %cmp261 = fcmp oeq float %184, %186, !dbg !9159
  br i1 %cmp261, label %land.lhs.true263, label %lor.lhs.false278, !dbg !9160

land.lhs.true263:                                 ; preds = %if.end232
  %187 = load float*, float** %s_uv1, align 8, !dbg !9161
  %arrayidx264 = getelementptr inbounds float, float* %187, i64 1, !dbg !9161
  %188 = load float, float* %arrayidx264, align 4, !dbg !9161
  %189 = load float*, float** %t_uv1, align 8, !dbg !9162
  %arrayidx265 = getelementptr inbounds float, float* %189, i64 1, !dbg !9162
  %190 = load float, float* %arrayidx265, align 4, !dbg !9162
  %cmp266 = fcmp oeq float %188, %190, !dbg !9163
  br i1 %cmp266, label %land.lhs.true268, label %lor.lhs.false278, !dbg !9164

land.lhs.true268:                                 ; preds = %land.lhs.true263
  %191 = load float*, float** %s_uv2, align 8, !dbg !9165
  %arrayidx269 = getelementptr inbounds float, float* %191, i64 0, !dbg !9165
  %192 = load float, float* %arrayidx269, align 4, !dbg !9165
  %193 = load float*, float** %t_uv2, align 8, !dbg !9166
  %arrayidx270 = getelementptr inbounds float, float* %193, i64 0, !dbg !9166
  %194 = load float, float* %arrayidx270, align 4, !dbg !9166
  %cmp271 = fcmp oeq float %192, %194, !dbg !9167
  br i1 %cmp271, label %land.lhs.true273, label %lor.lhs.false278, !dbg !9168

land.lhs.true273:                                 ; preds = %land.lhs.true268
  %195 = load float*, float** %s_uv2, align 8, !dbg !9169
  %arrayidx274 = getelementptr inbounds float, float* %195, i64 1, !dbg !9169
  %196 = load float, float* %arrayidx274, align 4, !dbg !9169
  %197 = load float*, float** %t_uv2, align 8, !dbg !9170
  %arrayidx275 = getelementptr inbounds float, float* %197, i64 1, !dbg !9170
  %198 = load float, float* %arrayidx275, align 4, !dbg !9170
  %cmp276 = fcmp oeq float %196, %198, !dbg !9171
  br i1 %cmp276, label %if.then298, label %lor.lhs.false278, !dbg !9172

lor.lhs.false278:                                 ; preds = %land.lhs.true273, %land.lhs.true268, %land.lhs.true263, %if.end232
  %199 = load float*, float** %s_uv2, align 8, !dbg !9173
  %arrayidx279 = getelementptr inbounds float, float* %199, i64 0, !dbg !9173
  %200 = load float, float* %arrayidx279, align 4, !dbg !9173
  %201 = load float*, float** %t_uv1, align 8, !dbg !9174
  %arrayidx280 = getelementptr inbounds float, float* %201, i64 0, !dbg !9174
  %202 = load float, float* %arrayidx280, align 4, !dbg !9174
  %cmp281 = fcmp oeq float %200, %202, !dbg !9175
  br i1 %cmp281, label %land.lhs.true283, label %if.end307, !dbg !9176

land.lhs.true283:                                 ; preds = %lor.lhs.false278
  %203 = load float*, float** %s_uv2, align 8, !dbg !9177
  %arrayidx284 = getelementptr inbounds float, float* %203, i64 1, !dbg !9177
  %204 = load float, float* %arrayidx284, align 4, !dbg !9177
  %205 = load float*, float** %t_uv1, align 8, !dbg !9178
  %arrayidx285 = getelementptr inbounds float, float* %205, i64 1, !dbg !9178
  %206 = load float, float* %arrayidx285, align 4, !dbg !9178
  %cmp286 = fcmp oeq float %204, %206, !dbg !9179
  br i1 %cmp286, label %land.lhs.true288, label %if.end307, !dbg !9180

land.lhs.true288:                                 ; preds = %land.lhs.true283
  %207 = load float*, float** %s_uv1, align 8, !dbg !9181
  %arrayidx289 = getelementptr inbounds float, float* %207, i64 0, !dbg !9181
  %208 = load float, float* %arrayidx289, align 4, !dbg !9181
  %209 = load float*, float** %t_uv2, align 8, !dbg !9182
  %arrayidx290 = getelementptr inbounds float, float* %209, i64 0, !dbg !9182
  %210 = load float, float* %arrayidx290, align 4, !dbg !9182
  %cmp291 = fcmp oeq float %208, %210, !dbg !9183
  br i1 %cmp291, label %land.lhs.true293, label %if.end307, !dbg !9184

land.lhs.true293:                                 ; preds = %land.lhs.true288
  %211 = load float*, float** %s_uv1, align 8, !dbg !9185
  %arrayidx294 = getelementptr inbounds float, float* %211, i64 1, !dbg !9185
  %212 = load float, float* %arrayidx294, align 4, !dbg !9185
  %213 = load float*, float** %t_uv2, align 8, !dbg !9186
  %arrayidx295 = getelementptr inbounds float, float* %213, i64 1, !dbg !9186
  %214 = load float, float* %arrayidx295, align 4, !dbg !9186
  %cmp296 = fcmp oeq float %212, %214, !dbg !9187
  br i1 %cmp296, label %if.then298, label %if.end307, !dbg !9188

if.then298:                                       ; preds = %land.lhs.true293, %land.lhs.true273
  %215 = load i32, i32* %px.addr, align 4, !dbg !9189
  %216 = load i32, i32* %n_index.addr, align 4, !dbg !9191
  %idxprom299 = sext i32 %216 to i64, !dbg !9192
  %arrayidx300 = getelementptr inbounds [8 x i32], [8 x i32]* @neighX, i64 0, i64 %idxprom299, !dbg !9192
  %217 = load i32, i32* %arrayidx300, align 4, !dbg !9192
  %add301 = add nsw i32 %215, %217, !dbg !9193
  %218 = load i32, i32* %w.addr, align 4, !dbg !9194
  %219 = load i32, i32* %py.addr, align 4, !dbg !9195
  %220 = load i32, i32* %n_index.addr, align 4, !dbg !9196
  %idxprom302 = sext i32 %220 to i64, !dbg !9197
  %arrayidx303 = getelementptr inbounds [8 x i32], [8 x i32]* @neighY, i64 0, i64 %idxprom302, !dbg !9197
  %221 = load i32, i32* %arrayidx303, align 4, !dbg !9197
  %add304 = add nsw i32 %219, %221, !dbg !9198
  %mul305 = mul nsw i32 %218, %add304, !dbg !9199
  %add306 = add nsw i32 %add301, %mul305, !dbg !9200
  store i32 %add306, i32* %retval, align 4, !dbg !9201
  br label %return, !dbg !9201

if.end307:                                        ; preds = %land.lhs.true293, %land.lhs.true288, %land.lhs.true283, %lor.lhs.false278
  %arraydecay308 = getelementptr inbounds [2 x float], [2 x float]* %closest_point, i64 0, i64 0, !dbg !9202
  %arraydecay309 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9203
  %222 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9204
  %223 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9205
  %face_index310 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %223, i32 0, i32 0, !dbg !9206
  %224 = load i32, i32* %face_index310, align 4, !dbg !9206
  %idxprom311 = zext i32 %224 to i64, !dbg !9204
  %arrayidx312 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %222, i64 %idxprom311, !dbg !9204
  %uv313 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx312, i32 0, i32 0, !dbg !9207
  %225 = load i32, i32* %edge1_index, align 4, !dbg !9208
  %idxprom314 = sext i32 %225 to i64, !dbg !9204
  %arrayidx315 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv313, i64 0, i64 %idxprom314, !dbg !9204
  %arraydecay316 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx315, i64 0, i64 0, !dbg !9204
  %226 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9209
  %227 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9210
  %face_index317 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %227, i32 0, i32 0, !dbg !9211
  %228 = load i32, i32* %face_index317, align 4, !dbg !9211
  %idxprom318 = zext i32 %228 to i64, !dbg !9209
  %arrayidx319 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %226, i64 %idxprom318, !dbg !9209
  %uv320 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx319, i32 0, i32 0, !dbg !9212
  %229 = load i32, i32* %edge2_index, align 4, !dbg !9213
  %idxprom321 = sext i32 %229 to i64, !dbg !9209
  %arrayidx322 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv320, i64 0, i64 %idxprom321, !dbg !9209
  %arraydecay323 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx322, i64 0, i64 0, !dbg !9209
  %call324 = call float @closest_to_line_v2(float* %arraydecay308, float* %arraydecay309, float* %arraydecay316, float* %arraydecay323), !dbg !9214
  store float %call324, float* %lambda, align 4, !dbg !9215
  %230 = load float, float* %lambda, align 4, !dbg !9216
  %cmp325 = fcmp olt float %230, 0.000000e+00, !dbg !9218
  br i1 %cmp325, label %if.then327, label %if.end328, !dbg !9219

if.then327:                                       ; preds = %if.end307
  store float 0.000000e+00, float* %lambda, align 4, !dbg !9220
  br label %if.end328, !dbg !9221

if.end328:                                        ; preds = %if.then327, %if.end307
  %231 = load float, float* %lambda, align 4, !dbg !9222
  %cmp329 = fcmp ogt float %231, 1.000000e+00, !dbg !9224
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !9225

if.then331:                                       ; preds = %if.end328
  store float 1.000000e+00, float* %lambda, align 4, !dbg !9226
  br label %if.end332, !dbg !9227

if.end332:                                        ; preds = %if.then331, %if.end328
  %arraydecay333 = getelementptr inbounds [2 x float], [2 x float]* %dir_vec, i64 0, i64 0, !dbg !9228
  %232 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9229
  %233 = load i32, i32* %target_face, align 4, !dbg !9230
  %idxprom334 = sext i32 %233 to i64, !dbg !9229
  %arrayidx335 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %232, i64 %idxprom334, !dbg !9229
  %uv336 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx335, i32 0, i32 0, !dbg !9231
  %234 = load i32, i32* %target_uv2, align 4, !dbg !9232
  %idxprom337 = sext i32 %234 to i64, !dbg !9229
  %arrayidx338 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv336, i64 0, i64 %idxprom337, !dbg !9229
  %arraydecay339 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx338, i64 0, i64 0, !dbg !9229
  %235 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9233
  %236 = load i32, i32* %target_face, align 4, !dbg !9234
  %idxprom340 = sext i32 %236 to i64, !dbg !9233
  %arrayidx341 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %235, i64 %idxprom340, !dbg !9233
  %uv342 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx341, i32 0, i32 0, !dbg !9235
  %237 = load i32, i32* %target_uv1, align 4, !dbg !9236
  %idxprom343 = sext i32 %237 to i64, !dbg !9233
  %arrayidx344 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv342, i64 0, i64 %idxprom343, !dbg !9233
  %arraydecay345 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx344, i64 0, i64 0, !dbg !9233
  call void @sub_v2_v2v2(float* %arraydecay333, float* %arraydecay339, float* %arraydecay345), !dbg !9237
  %arraydecay346 = getelementptr inbounds [2 x float], [2 x float]* %dir_vec, i64 0, i64 0, !dbg !9238
  %238 = load float, float* %lambda, align 4, !dbg !9239
  call void @mul_v2_fl(float* %arraydecay346, float %238), !dbg !9240
  %arraydecay347 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9241
  %239 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !9242
  %240 = load i32, i32* %target_face, align 4, !dbg !9243
  %idxprom348 = sext i32 %240 to i64, !dbg !9242
  %arrayidx349 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %239, i64 %idxprom348, !dbg !9242
  %uv350 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %arrayidx349, i32 0, i32 0, !dbg !9244
  %241 = load i32, i32* %target_uv1, align 4, !dbg !9245
  %idxprom351 = sext i32 %241 to i64, !dbg !9242
  %arrayidx352 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv350, i64 0, i64 %idxprom351, !dbg !9242
  %arraydecay353 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx352, i64 0, i64 0, !dbg !9242
  call void @copy_v2_v2(float* %arraydecay347, float* %arraydecay353), !dbg !9246
  %arraydecay354 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9247
  %arraydecay355 = getelementptr inbounds [2 x float], [2 x float]* %dir_vec, i64 0, i64 0, !dbg !9248
  call void @add_v2_v2(float* %arraydecay354, float* %arraydecay355), !dbg !9249
  %arrayidx356 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9250
  %242 = load float, float* %arrayidx356, align 4, !dbg !9250
  %243 = load i32, i32* %w.addr, align 4, !dbg !9251
  %conv357 = sitofp i32 %243 to float, !dbg !9252
  %mul358 = fmul float %242, %conv357, !dbg !9253
  %sub = fsub float %mul358, 5.000000e-01, !dbg !9254
  %arrayidx359 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9255
  store float %sub, float* %arrayidx359, align 4, !dbg !9256
  %arrayidx360 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 1, !dbg !9257
  %244 = load float, float* %arrayidx360, align 4, !dbg !9257
  %245 = load i32, i32* %h.addr, align 4, !dbg !9258
  %conv361 = sitofp i32 %245 to float, !dbg !9259
  %mul362 = fmul float %244, %conv361, !dbg !9260
  %sub363 = fsub float %mul362, 5.000000e-01, !dbg !9261
  %arrayidx364 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 1, !dbg !9262
  store float %sub363, float* %arrayidx364, align 4, !dbg !9263
  %arrayidx365 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 0, !dbg !9264
  %246 = load float, float* %arrayidx365, align 4, !dbg !9264
  %conv366 = fpext float %246 to double, !dbg !9264
  %247 = call double @llvm.floor.f64(double %conv366), !dbg !9265
  %conv367 = fptosi double %247 to i32, !dbg !9266
  %arrayidx368 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 0, !dbg !9267
  store i32 %conv367, i32* %arrayidx368, align 4, !dbg !9268
  %arrayidx369 = getelementptr inbounds [2 x float], [2 x float]* %pixel, i64 0, i64 1, !dbg !9269
  %248 = load float, float* %arrayidx369, align 4, !dbg !9269
  %conv370 = fpext float %248 to double, !dbg !9269
  %249 = call double @llvm.floor.f64(double %conv370), !dbg !9270
  %conv371 = fptosi double %249 to i32, !dbg !9271
  %arrayidx372 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 1, !dbg !9272
  store i32 %conv371, i32* %arrayidx372, align 4, !dbg !9273
  %arrayidx373 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 0, !dbg !9274
  %250 = load i32, i32* %arrayidx373, align 4, !dbg !9274
  %cmp374 = icmp slt i32 %250, 0, !dbg !9276
  br i1 %cmp374, label %if.then380, label %lor.lhs.false376, !dbg !9277

lor.lhs.false376:                                 ; preds = %if.end332
  %arrayidx377 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 0, !dbg !9278
  %251 = load i32, i32* %arrayidx377, align 4, !dbg !9278
  %252 = load i32, i32* %w.addr, align 4, !dbg !9279
  %cmp378 = icmp sge i32 %251, %252, !dbg !9280
  br i1 %cmp378, label %if.then380, label %if.end381, !dbg !9281

if.then380:                                       ; preds = %lor.lhs.false376, %if.end332
  store i32 -3, i32* %retval, align 4, !dbg !9282
  br label %return, !dbg !9282

if.end381:                                        ; preds = %lor.lhs.false376
  %arrayidx382 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 1, !dbg !9283
  %253 = load i32, i32* %arrayidx382, align 4, !dbg !9283
  %cmp383 = icmp slt i32 %253, 0, !dbg !9285
  br i1 %cmp383, label %if.then389, label %lor.lhs.false385, !dbg !9286

lor.lhs.false385:                                 ; preds = %if.end381
  %arrayidx386 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 1, !dbg !9287
  %254 = load i32, i32* %arrayidx386, align 4, !dbg !9287
  %255 = load i32, i32* %h.addr, align 4, !dbg !9288
  %cmp387 = icmp sge i32 %254, %255, !dbg !9289
  br i1 %cmp387, label %if.then389, label %if.end390, !dbg !9290

if.then389:                                       ; preds = %lor.lhs.false385, %if.end381
  store i32 -3, i32* %retval, align 4, !dbg !9291
  br label %return, !dbg !9291

if.end390:                                        ; preds = %lor.lhs.false385
  %arrayidx391 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 0, !dbg !9292
  %256 = load i32, i32* %arrayidx391, align 4, !dbg !9292
  %257 = load i32, i32* %w.addr, align 4, !dbg !9293
  %arrayidx392 = getelementptr inbounds [2 x i32], [2 x i32]* %final_pixel, i64 0, i64 1, !dbg !9294
  %258 = load i32, i32* %arrayidx392, align 4, !dbg !9294
  %mul393 = mul nsw i32 %257, %258, !dbg !9295
  %add394 = add nsw i32 %256, %mul393, !dbg !9296
  store i32 %add394, i32* %final_index, align 4, !dbg !9297
  %259 = load i32, i32* %final_index, align 4, !dbg !9298
  %260 = load i32, i32* %px.addr, align 4, !dbg !9300
  %261 = load i32, i32* %w.addr, align 4, !dbg !9301
  %262 = load i32, i32* %py.addr, align 4, !dbg !9302
  %mul395 = mul nsw i32 %261, %262, !dbg !9303
  %add396 = add nsw i32 %260, %mul395, !dbg !9304
  %cmp397 = icmp eq i32 %259, %add396, !dbg !9305
  br i1 %cmp397, label %if.then399, label %if.end400, !dbg !9306

if.then399:                                       ; preds = %if.end390
  store i32 -1, i32* %retval, align 4, !dbg !9307
  br label %return, !dbg !9307

if.end400:                                        ; preds = %if.end390
  %263 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints.addr, align 8, !dbg !9308
  %264 = load i32, i32* %final_index, align 4, !dbg !9310
  %idxprom401 = sext i32 %264 to i64, !dbg !9308
  %arrayidx402 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %263, i64 %idxprom401, !dbg !9308
  %face_index403 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx402, i32 0, i32 0, !dbg !9311
  %265 = load i32, i32* %face_index403, align 4, !dbg !9311
  %266 = load i32, i32* %target_face, align 4, !dbg !9312
  %cmp404 = icmp ne i32 %265, %266, !dbg !9313
  br i1 %cmp404, label %if.then406, label %if.end407, !dbg !9314

if.then406:                                       ; preds = %if.end400
  store i32 -1, i32* %retval, align 4, !dbg !9315
  br label %return, !dbg !9315

if.end407:                                        ; preds = %if.end400
  %267 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tempPoints.addr, align 8, !dbg !9316
  %268 = load i32, i32* %final_index, align 4, !dbg !9318
  %idxprom408 = sext i32 %268 to i64, !dbg !9316
  %arrayidx409 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %267, i64 %idxprom408, !dbg !9316
  %neighbour_pixel410 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx409, i32 0, i32 5, !dbg !9319
  %269 = load i32, i32* %neighbour_pixel410, align 4, !dbg !9319
  %cmp411 = icmp ne i32 %269, -1, !dbg !9320
  br i1 %cmp411, label %if.then413, label %if.end415, !dbg !9321

if.then413:                                       ; preds = %if.end407
  %270 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %cPoint, align 8, !dbg !9322
  %neighbour_pixel414 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %270, i32 0, i32 5, !dbg !9323
  %271 = load i32, i32* %neighbour_pixel414, align 4, !dbg !9323
  store i32 %271, i32* %final_index, align 4, !dbg !9324
  br label %if.end415, !dbg !9325

if.end415:                                        ; preds = %if.then413, %if.end407
  %272 = load i32, i32* %final_index, align 4, !dbg !9326
  store i32 %272, i32* %retval, align 4, !dbg !9327
  br label %return, !dbg !9327

return:                                           ; preds = %if.end415, %if.then406, %if.then399, %if.then389, %if.then380, %if.then298, %if.then231, %if.then29, %if.then20, %if.then8, %if.then
  %273 = load i32, i32* %retval, align 4, !dbg !9328
  ret i32 %273, !dbg !9328
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @dynamicPaint_outputSurfaceImage(%struct.DynamicPaintSurface* %surface, i8* %filename, i16 signext %output_layer) #0 !dbg !9329 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %filename.addr = alloca i8*, align 8
  %output_layer.addr = alloca i16, align 2
  %index = alloca i32, align 4
  %ibuf = alloca %struct.ImBuf*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %f_data = alloca %struct.ImgSeqFormatData*, align 8
  %format = alloca i32, align 4
  %output_file = alloca [1024 x i8], align 16
  %pos = alloca i32, align 4
  %point = alloca %struct.PaintPoint*, align 8
  %value = alloca float, align 4
  %point61 = alloca %struct.PaintPoint*, align 8
  %depth = alloca float, align 4
  %wPoint = alloca %struct.PaintWavePoint*, align 8
  %depth152 = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !9332, metadata !DIExpression()), !dbg !9333
  store i8* %filename, i8** %filename.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filename.addr, metadata !9334, metadata !DIExpression()), !dbg !9335
  store i16 %output_layer, i16* %output_layer.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %output_layer.addr, metadata !9336, metadata !DIExpression()), !dbg !9337
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9338, metadata !DIExpression()), !dbg !9339
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !9340, metadata !DIExpression()), !dbg !9343
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !9343
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !9344, metadata !DIExpression()), !dbg !9345
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9346
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !9347
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !9347
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !9345
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data, metadata !9348, metadata !DIExpression()), !dbg !9349
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9350
  %format_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 0, !dbg !9351
  %3 = load i8*, i8** %format_data, align 8, !dbg !9351
  %4 = bitcast i8* %3 to %struct.ImgSeqFormatData*, !dbg !9352
  store %struct.ImgSeqFormatData* %4, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !9349
  call void @llvm.dbg.declare(metadata i32* %format, metadata !9353, metadata !DIExpression()), !dbg !9354
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9355
  %image_fileformat = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 13, !dbg !9356
  %6 = load i16, i16* %image_fileformat, align 2, !dbg !9356
  %conv = sext i16 %6 to i32, !dbg !9355
  %and = and i32 %conv, 1, !dbg !9357
  %tobool = icmp ne i32 %and, 0, !dbg !9358
  %7 = zext i1 %tobool to i64, !dbg !9358
  %cond = select i1 %tobool, i32 23, i32 17, !dbg !9358
  store i32 %cond, i32* %format, align 4, !dbg !9354
  call void @llvm.dbg.declare(metadata [1024 x i8]* %output_file, metadata !9359, metadata !DIExpression()), !dbg !9360
  %8 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9361
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %8, i32 0, i32 1, !dbg !9363
  %9 = load i8*, i8** %type_data, align 8, !dbg !9363
  %tobool1 = icmp ne i8* %9, null, !dbg !9361
  br i1 %tobool1, label %if.end, label %if.then, !dbg !9364

if.then:                                          ; preds = %entry
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9365
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 2, !dbg !9367
  %11 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !9367
  %call = call i32 @setError(%struct.DynamicPaintCanvasSettings* %11, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24, i64 0, i64 0)), !dbg !9368
  br label %return, !dbg !9369

if.end:                                           ; preds = %entry
  %12 = load i32, i32* %format, align 4, !dbg !9370
  %cmp = icmp eq i32 %12, 23, !dbg !9372
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !9373

if.then3:                                         ; preds = %if.end
  store i32 17, i32* %format, align 4, !dbg !9374
  br label %if.end4, !dbg !9375

if.end4:                                          ; preds = %if.then3, %if.end
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %output_file, i64 0, i64 0, !dbg !9376
  %13 = load i8*, i8** %filename.addr, align 8, !dbg !9377
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %13, i64 1024), !dbg !9378
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %output_file, i64 0, i64 0, !dbg !9379
  %14 = load i32, i32* %format, align 4, !dbg !9380
  %conv7 = trunc i32 %14 to i8, !dbg !9380
  %call8 = call i32 @BKE_add_image_extension_from_type(i8* %arraydecay6, i8 zeroext %conv7), !dbg !9381
  %arraydecay9 = getelementptr inbounds [1024 x i8], [1024 x i8]* %output_file, i64 0, i64 0, !dbg !9382
  %15 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !9383
  %name = getelementptr inbounds %struct.Main, %struct.Main* %15, i32 0, i32 2, !dbg !9384
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !9385
  %call11 = call zeroext i8 @BLI_path_abs(i8* %arraydecay9, i8* %arraydecay10), !dbg !9386
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %output_file, i64 0, i64 0, !dbg !9387
  call void @BLI_make_existing_file(i8* %arraydecay12), !dbg !9388
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9389
  %image_resolution = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 20, !dbg !9390
  %17 = load i32, i32* %image_resolution, align 4, !dbg !9390
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9391
  %image_resolution13 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 20, !dbg !9392
  %19 = load i32, i32* %image_resolution13, align 4, !dbg !9392
  %call14 = call %struct.ImBuf* @IMB_allocImBuf(i32 %17, i32 %19, i8 zeroext 32, i32 32), !dbg !9393
  store %struct.ImBuf* %call14, %struct.ImBuf** %ibuf, align 8, !dbg !9394
  %20 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9395
  %cmp15 = icmp eq %struct.ImBuf* %20, null, !dbg !9397
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !9398

if.then17:                                        ; preds = %if.end4
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9399
  %canvas18 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 2, !dbg !9401
  %22 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas18, align 8, !dbg !9401
  %call19 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %22, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.25, i64 0, i64 0)), !dbg !9402
  br label %return, !dbg !9403

if.end20:                                         ; preds = %if.end4
  store i32 0, i32* %index, align 4, !dbg !9404
  br label %for.cond, !dbg !9406

for.cond:                                         ; preds = %for.inc, %if.end20
  %23 = load i32, i32* %index, align 4, !dbg !9407
  %24 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9409
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %24, i32 0, i32 4, !dbg !9410
  %25 = load i32, i32* %total_points, align 8, !dbg !9410
  %cmp21 = icmp slt i32 %23, %25, !dbg !9411
  br i1 %cmp21, label %for.body, label %for.end, !dbg !9412

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !9413, metadata !DIExpression()), !dbg !9415
  %26 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !9416
  %uv_p = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %26, i32 0, i32 0, !dbg !9417
  %27 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p, align 8, !dbg !9417
  %28 = load i32, i32* %index, align 4, !dbg !9418
  %idxprom = sext i32 %28 to i64, !dbg !9416
  %arrayidx = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %27, i64 %idxprom, !dbg !9416
  %pixel_index = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %arrayidx, i32 0, i32 1, !dbg !9419
  %29 = load i32, i32* %pixel_index, align 4, !dbg !9419
  %mul = mul i32 %29, 4, !dbg !9420
  store i32 %mul, i32* %pos, align 4, !dbg !9415
  %30 = load i16, i16* %output_layer.addr, align 2, !dbg !9421
  %conv23 = sext i16 %30 to i32, !dbg !9421
  %cmp24 = icmp eq i32 %conv23, 1, !dbg !9423
  br i1 %cmp24, label %if.then26, label %if.else, !dbg !9424

if.then26:                                        ; preds = %for.body
  %31 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9425
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %31, i32 0, i32 11, !dbg !9428
  %32 = load i16, i16* %type, align 2, !dbg !9428
  %conv27 = sext i16 %32 to i32, !dbg !9425
  %cmp28 = icmp eq i32 %conv27, 0, !dbg !9429
  br i1 %cmp28, label %if.then30, label %if.end51, !dbg !9430

if.then30:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %point, metadata !9431, metadata !DIExpression()), !dbg !9433
  %33 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9434
  %type_data31 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %33, i32 0, i32 1, !dbg !9435
  %34 = load i8*, i8** %type_data31, align 8, !dbg !9435
  %35 = bitcast i8* %34 to %struct.PaintPoint*, !dbg !9436
  %36 = load i32, i32* %index, align 4, !dbg !9437
  %idxprom32 = sext i32 %36 to i64, !dbg !9438
  %arrayidx33 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %35, i64 %idxprom32, !dbg !9438
  store %struct.PaintPoint* %arrayidx33, %struct.PaintPoint** %point, align 8, !dbg !9433
  call void @llvm.dbg.declare(metadata float* %value, metadata !9439, metadata !DIExpression()), !dbg !9440
  %37 = load %struct.PaintPoint*, %struct.PaintPoint** %point, align 8, !dbg !9441
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %37, i32 0, i32 2, !dbg !9442
  %38 = load float, float* %wetness, align 4, !dbg !9442
  %cmp34 = fcmp ogt float %38, 1.000000e+00, !dbg !9443
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !9444

cond.true:                                        ; preds = %if.then30
  br label %cond.end, !dbg !9444

cond.false:                                       ; preds = %if.then30
  %39 = load %struct.PaintPoint*, %struct.PaintPoint** %point, align 8, !dbg !9445
  %wetness36 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %39, i32 0, i32 2, !dbg !9446
  %40 = load float, float* %wetness36, align 4, !dbg !9446
  br label %cond.end, !dbg !9444

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond37 = phi float [ 1.000000e+00, %cond.true ], [ %40, %cond.false ], !dbg !9444
  store float %cond37, float* %value, align 4, !dbg !9440
  %41 = load float, float* %value, align 4, !dbg !9447
  %42 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9448
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %42, i32 0, i32 9, !dbg !9449
  %43 = load float*, float** %rect_float, align 8, !dbg !9449
  %44 = load i32, i32* %pos, align 4, !dbg !9450
  %idxprom38 = sext i32 %44 to i64, !dbg !9448
  %arrayidx39 = getelementptr inbounds float, float* %43, i64 %idxprom38, !dbg !9448
  store float %41, float* %arrayidx39, align 4, !dbg !9451
  %45 = load float, float* %value, align 4, !dbg !9452
  %46 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9453
  %rect_float40 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %46, i32 0, i32 9, !dbg !9454
  %47 = load float*, float** %rect_float40, align 8, !dbg !9454
  %48 = load i32, i32* %pos, align 4, !dbg !9455
  %add = add nsw i32 %48, 1, !dbg !9456
  %idxprom41 = sext i32 %add to i64, !dbg !9453
  %arrayidx42 = getelementptr inbounds float, float* %47, i64 %idxprom41, !dbg !9453
  store float %45, float* %arrayidx42, align 4, !dbg !9457
  %49 = load float, float* %value, align 4, !dbg !9458
  %50 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9459
  %rect_float43 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %50, i32 0, i32 9, !dbg !9460
  %51 = load float*, float** %rect_float43, align 8, !dbg !9460
  %52 = load i32, i32* %pos, align 4, !dbg !9461
  %add44 = add nsw i32 %52, 2, !dbg !9462
  %idxprom45 = sext i32 %add44 to i64, !dbg !9459
  %arrayidx46 = getelementptr inbounds float, float* %51, i64 %idxprom45, !dbg !9459
  store float %49, float* %arrayidx46, align 4, !dbg !9463
  %53 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9464
  %rect_float47 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %53, i32 0, i32 9, !dbg !9465
  %54 = load float*, float** %rect_float47, align 8, !dbg !9465
  %55 = load i32, i32* %pos, align 4, !dbg !9466
  %add48 = add nsw i32 %55, 3, !dbg !9467
  %idxprom49 = sext i32 %add48 to i64, !dbg !9464
  %arrayidx50 = getelementptr inbounds float, float* %54, i64 %idxprom49, !dbg !9464
  store float 1.000000e+00, float* %arrayidx50, align 4, !dbg !9468
  br label %if.end51, !dbg !9469

if.end51:                                         ; preds = %cond.end, %if.then26
  br label %if.end189, !dbg !9470

if.else:                                          ; preds = %for.body
  %56 = load i16, i16* %output_layer.addr, align 2, !dbg !9471
  %conv52 = sext i16 %56 to i32, !dbg !9471
  %cmp53 = icmp eq i32 %conv52, 0, !dbg !9473
  br i1 %cmp53, label %if.then55, label %if.end188, !dbg !9474

if.then55:                                        ; preds = %if.else
  %57 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9475
  %type56 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %57, i32 0, i32 11, !dbg !9478
  %58 = load i16, i16* %type56, align 2, !dbg !9478
  %conv57 = sext i16 %58 to i32, !dbg !9475
  %cmp58 = icmp eq i32 %conv57, 0, !dbg !9479
  br i1 %cmp58, label %if.then60, label %if.else100, !dbg !9480

if.then60:                                        ; preds = %if.then55
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %point61, metadata !9481, metadata !DIExpression()), !dbg !9483
  %59 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9484
  %type_data62 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %59, i32 0, i32 1, !dbg !9485
  %60 = load i8*, i8** %type_data62, align 8, !dbg !9485
  %61 = bitcast i8* %60 to %struct.PaintPoint*, !dbg !9486
  %62 = load i32, i32* %index, align 4, !dbg !9487
  %idxprom63 = sext i32 %62 to i64, !dbg !9488
  %arrayidx64 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %61, i64 %idxprom63, !dbg !9488
  store %struct.PaintPoint* %arrayidx64, %struct.PaintPoint** %point61, align 8, !dbg !9483
  %63 = load %struct.PaintPoint*, %struct.PaintPoint** %point61, align 8, !dbg !9489
  %color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %63, i32 0, i32 4, !dbg !9490
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !9489
  %64 = load %struct.PaintPoint*, %struct.PaintPoint** %point61, align 8, !dbg !9491
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %64, i32 0, i32 5, !dbg !9492
  %65 = load float, float* %alpha, align 4, !dbg !9492
  %66 = load %struct.PaintPoint*, %struct.PaintPoint** %point61, align 8, !dbg !9493
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %66, i32 0, i32 0, !dbg !9494
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !9493
  %67 = load %struct.PaintPoint*, %struct.PaintPoint** %point61, align 8, !dbg !9495
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %67, i32 0, i32 1, !dbg !9496
  %68 = load float, float* %e_alpha, align 4, !dbg !9496
  %69 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9497
  %rect_float67 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %69, i32 0, i32 9, !dbg !9498
  %70 = load float*, float** %rect_float67, align 8, !dbg !9498
  %71 = load i32, i32* %pos, align 4, !dbg !9499
  %idxprom68 = sext i32 %71 to i64, !dbg !9497
  %arrayidx69 = getelementptr inbounds float, float* %70, i64 %idxprom68, !dbg !9497
  call void @blendColors(float* %arraydecay65, float %65, float* %arraydecay66, float %68, float* %arrayidx69), !dbg !9500
  %72 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9501
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %72, i32 0, i32 18, !dbg !9503
  %73 = load i32, i32* %flags, align 4, !dbg !9503
  %and70 = and i32 %73, 8, !dbg !9504
  %tobool71 = icmp ne i32 %and70, 0, !dbg !9504
  br i1 %tobool71, label %if.then72, label %if.end99, !dbg !9505

if.then72:                                        ; preds = %if.then60
  %74 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9506
  %rect_float73 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %74, i32 0, i32 9, !dbg !9508
  %75 = load float*, float** %rect_float73, align 8, !dbg !9508
  %76 = load i32, i32* %pos, align 4, !dbg !9509
  %add74 = add nsw i32 %76, 3, !dbg !9510
  %idxprom75 = sext i32 %add74 to i64, !dbg !9506
  %arrayidx76 = getelementptr inbounds float, float* %75, i64 %idxprom75, !dbg !9506
  %77 = load float, float* %arrayidx76, align 4, !dbg !9506
  %78 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9511
  %rect_float77 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %78, i32 0, i32 9, !dbg !9512
  %79 = load float*, float** %rect_float77, align 8, !dbg !9512
  %80 = load i32, i32* %pos, align 4, !dbg !9513
  %idxprom78 = sext i32 %80 to i64, !dbg !9511
  %arrayidx79 = getelementptr inbounds float, float* %79, i64 %idxprom78, !dbg !9511
  %81 = load float, float* %arrayidx79, align 4, !dbg !9514
  %mul80 = fmul float %81, %77, !dbg !9514
  store float %mul80, float* %arrayidx79, align 4, !dbg !9514
  %82 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9515
  %rect_float81 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %82, i32 0, i32 9, !dbg !9516
  %83 = load float*, float** %rect_float81, align 8, !dbg !9516
  %84 = load i32, i32* %pos, align 4, !dbg !9517
  %add82 = add nsw i32 %84, 3, !dbg !9518
  %idxprom83 = sext i32 %add82 to i64, !dbg !9515
  %arrayidx84 = getelementptr inbounds float, float* %83, i64 %idxprom83, !dbg !9515
  %85 = load float, float* %arrayidx84, align 4, !dbg !9515
  %86 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9519
  %rect_float85 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %86, i32 0, i32 9, !dbg !9520
  %87 = load float*, float** %rect_float85, align 8, !dbg !9520
  %88 = load i32, i32* %pos, align 4, !dbg !9521
  %add86 = add nsw i32 %88, 1, !dbg !9522
  %idxprom87 = sext i32 %add86 to i64, !dbg !9519
  %arrayidx88 = getelementptr inbounds float, float* %87, i64 %idxprom87, !dbg !9519
  %89 = load float, float* %arrayidx88, align 4, !dbg !9523
  %mul89 = fmul float %89, %85, !dbg !9523
  store float %mul89, float* %arrayidx88, align 4, !dbg !9523
  %90 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9524
  %rect_float90 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %90, i32 0, i32 9, !dbg !9525
  %91 = load float*, float** %rect_float90, align 8, !dbg !9525
  %92 = load i32, i32* %pos, align 4, !dbg !9526
  %add91 = add nsw i32 %92, 3, !dbg !9527
  %idxprom92 = sext i32 %add91 to i64, !dbg !9524
  %arrayidx93 = getelementptr inbounds float, float* %91, i64 %idxprom92, !dbg !9524
  %93 = load float, float* %arrayidx93, align 4, !dbg !9524
  %94 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9528
  %rect_float94 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %94, i32 0, i32 9, !dbg !9529
  %95 = load float*, float** %rect_float94, align 8, !dbg !9529
  %96 = load i32, i32* %pos, align 4, !dbg !9530
  %add95 = add nsw i32 %96, 2, !dbg !9531
  %idxprom96 = sext i32 %add95 to i64, !dbg !9528
  %arrayidx97 = getelementptr inbounds float, float* %95, i64 %idxprom96, !dbg !9528
  %97 = load float, float* %arrayidx97, align 4, !dbg !9532
  %mul98 = fmul float %97, %93, !dbg !9532
  store float %mul98, float* %arrayidx97, align 4, !dbg !9532
  br label %if.end99, !dbg !9533

if.end99:                                         ; preds = %if.then72, %if.then60
  br label %if.end187, !dbg !9534

if.else100:                                       ; preds = %if.then55
  %98 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9535
  %type101 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %98, i32 0, i32 11, !dbg !9537
  %99 = load i16, i16* %type101, align 2, !dbg !9537
  %conv102 = sext i16 %99 to i32, !dbg !9535
  %cmp103 = icmp eq i32 %conv102, 1, !dbg !9538
  br i1 %cmp103, label %if.then105, label %if.else143, !dbg !9539

if.then105:                                       ; preds = %if.else100
  call void @llvm.dbg.declare(metadata float* %depth, metadata !9540, metadata !DIExpression()), !dbg !9542
  %100 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9543
  %type_data106 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %100, i32 0, i32 1, !dbg !9544
  %101 = load i8*, i8** %type_data106, align 8, !dbg !9544
  %102 = bitcast i8* %101 to float*, !dbg !9545
  %103 = load i32, i32* %index, align 4, !dbg !9546
  %idxprom107 = sext i32 %103 to i64, !dbg !9547
  %arrayidx108 = getelementptr inbounds float, float* %102, i64 %idxprom107, !dbg !9547
  %104 = load float, float* %arrayidx108, align 4, !dbg !9547
  store float %104, float* %depth, align 4, !dbg !9542
  %105 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9548
  %depth_clamp = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %105, i32 0, i32 31, !dbg !9550
  %106 = load float, float* %depth_clamp, align 4, !dbg !9550
  %tobool109 = fcmp une float %106, 0.000000e+00, !dbg !9548
  br i1 %tobool109, label %if.then110, label %if.end112, !dbg !9551

if.then110:                                       ; preds = %if.then105
  %107 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9552
  %depth_clamp111 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %107, i32 0, i32 31, !dbg !9553
  %108 = load float, float* %depth_clamp111, align 4, !dbg !9553
  %109 = load float, float* %depth, align 4, !dbg !9554
  %div = fdiv float %109, %108, !dbg !9554
  store float %div, float* %depth, align 4, !dbg !9554
  br label %if.end112, !dbg !9555

if.end112:                                        ; preds = %if.then110, %if.then105
  %110 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9556
  %disp_type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %110, i32 0, i32 12, !dbg !9558
  %111 = load i16, i16* %disp_type, align 8, !dbg !9558
  %conv113 = sext i16 %111 to i32, !dbg !9556
  %cmp114 = icmp eq i32 %conv113, 0, !dbg !9559
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !9560

if.then116:                                       ; preds = %if.end112
  %112 = load float, float* %depth, align 4, !dbg !9561
  %div117 = fdiv float %112, 2.000000e+00, !dbg !9563
  %sub = fsub float 5.000000e-01, %div117, !dbg !9564
  store float %sub, float* %depth, align 4, !dbg !9565
  br label %if.end118, !dbg !9566

if.end118:                                        ; preds = %if.then116, %if.end112
  %113 = load float, float* %depth, align 4, !dbg !9567
  %cmp119 = fcmp olt float %113, 0.000000e+00, !dbg !9567
  br i1 %cmp119, label %if.then121, label %if.else122, !dbg !9570

if.then121:                                       ; preds = %if.end118
  store float 0.000000e+00, float* %depth, align 4, !dbg !9567
  br label %if.end127, !dbg !9567

if.else122:                                       ; preds = %if.end118
  %114 = load float, float* %depth, align 4, !dbg !9571
  %cmp123 = fcmp ogt float %114, 1.000000e+00, !dbg !9571
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !9567

if.then125:                                       ; preds = %if.else122
  store float 1.000000e+00, float* %depth, align 4, !dbg !9571
  br label %if.end126, !dbg !9571

if.end126:                                        ; preds = %if.then125, %if.else122
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then121
  %115 = load float, float* %depth, align 4, !dbg !9573
  %116 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9574
  %rect_float128 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %116, i32 0, i32 9, !dbg !9575
  %117 = load float*, float** %rect_float128, align 8, !dbg !9575
  %118 = load i32, i32* %pos, align 4, !dbg !9576
  %idxprom129 = sext i32 %118 to i64, !dbg !9574
  %arrayidx130 = getelementptr inbounds float, float* %117, i64 %idxprom129, !dbg !9574
  store float %115, float* %arrayidx130, align 4, !dbg !9577
  %119 = load float, float* %depth, align 4, !dbg !9578
  %120 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9579
  %rect_float131 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %120, i32 0, i32 9, !dbg !9580
  %121 = load float*, float** %rect_float131, align 8, !dbg !9580
  %122 = load i32, i32* %pos, align 4, !dbg !9581
  %add132 = add nsw i32 %122, 1, !dbg !9582
  %idxprom133 = sext i32 %add132 to i64, !dbg !9579
  %arrayidx134 = getelementptr inbounds float, float* %121, i64 %idxprom133, !dbg !9579
  store float %119, float* %arrayidx134, align 4, !dbg !9583
  %123 = load float, float* %depth, align 4, !dbg !9584
  %124 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9585
  %rect_float135 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %124, i32 0, i32 9, !dbg !9586
  %125 = load float*, float** %rect_float135, align 8, !dbg !9586
  %126 = load i32, i32* %pos, align 4, !dbg !9587
  %add136 = add nsw i32 %126, 2, !dbg !9588
  %idxprom137 = sext i32 %add136 to i64, !dbg !9585
  %arrayidx138 = getelementptr inbounds float, float* %125, i64 %idxprom137, !dbg !9585
  store float %123, float* %arrayidx138, align 4, !dbg !9589
  %127 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9590
  %rect_float139 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %127, i32 0, i32 9, !dbg !9591
  %128 = load float*, float** %rect_float139, align 8, !dbg !9591
  %129 = load i32, i32* %pos, align 4, !dbg !9592
  %add140 = add nsw i32 %129, 3, !dbg !9593
  %idxprom141 = sext i32 %add140 to i64, !dbg !9590
  %arrayidx142 = getelementptr inbounds float, float* %128, i64 %idxprom141, !dbg !9590
  store float 1.000000e+00, float* %arrayidx142, align 4, !dbg !9594
  br label %if.end186, !dbg !9595

if.else143:                                       ; preds = %if.else100
  %130 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9596
  %type144 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %130, i32 0, i32 11, !dbg !9598
  %131 = load i16, i16* %type144, align 2, !dbg !9598
  %conv145 = sext i16 %131 to i32, !dbg !9596
  %cmp146 = icmp eq i32 %conv145, 3, !dbg !9599
  br i1 %cmp146, label %if.then148, label %if.end185, !dbg !9600

if.then148:                                       ; preds = %if.else143
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %wPoint, metadata !9601, metadata !DIExpression()), !dbg !9603
  %132 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9604
  %type_data149 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %132, i32 0, i32 1, !dbg !9605
  %133 = load i8*, i8** %type_data149, align 8, !dbg !9605
  %134 = bitcast i8* %133 to %struct.PaintWavePoint*, !dbg !9606
  %135 = load i32, i32* %index, align 4, !dbg !9607
  %idxprom150 = sext i32 %135 to i64, !dbg !9608
  %arrayidx151 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %134, i64 %idxprom150, !dbg !9608
  store %struct.PaintWavePoint* %arrayidx151, %struct.PaintWavePoint** %wPoint, align 8, !dbg !9603
  call void @llvm.dbg.declare(metadata float* %depth152, metadata !9609, metadata !DIExpression()), !dbg !9610
  %136 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !9611
  %height = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %136, i32 0, i32 0, !dbg !9612
  %137 = load float, float* %height, align 4, !dbg !9612
  store float %137, float* %depth152, align 4, !dbg !9610
  %138 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9613
  %depth_clamp153 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %138, i32 0, i32 31, !dbg !9615
  %139 = load float, float* %depth_clamp153, align 4, !dbg !9615
  %tobool154 = fcmp une float %139, 0.000000e+00, !dbg !9613
  br i1 %tobool154, label %if.then155, label %if.end158, !dbg !9616

if.then155:                                       ; preds = %if.then148
  %140 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9617
  %depth_clamp156 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %140, i32 0, i32 31, !dbg !9618
  %141 = load float, float* %depth_clamp156, align 4, !dbg !9618
  %142 = load float, float* %depth152, align 4, !dbg !9619
  %div157 = fdiv float %142, %141, !dbg !9619
  store float %div157, float* %depth152, align 4, !dbg !9619
  br label %if.end158, !dbg !9620

if.end158:                                        ; preds = %if.then155, %if.then148
  %143 = load float, float* %depth152, align 4, !dbg !9621
  %div159 = fdiv float %143, 2.000000e+00, !dbg !9622
  %add160 = fadd float 5.000000e-01, %div159, !dbg !9623
  store float %add160, float* %depth152, align 4, !dbg !9624
  %144 = load float, float* %depth152, align 4, !dbg !9625
  %cmp161 = fcmp olt float %144, 0.000000e+00, !dbg !9625
  br i1 %cmp161, label %if.then163, label %if.else164, !dbg !9628

if.then163:                                       ; preds = %if.end158
  store float 0.000000e+00, float* %depth152, align 4, !dbg !9625
  br label %if.end169, !dbg !9625

if.else164:                                       ; preds = %if.end158
  %145 = load float, float* %depth152, align 4, !dbg !9629
  %cmp165 = fcmp ogt float %145, 1.000000e+00, !dbg !9629
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !9625

if.then167:                                       ; preds = %if.else164
  store float 1.000000e+00, float* %depth152, align 4, !dbg !9629
  br label %if.end168, !dbg !9629

if.end168:                                        ; preds = %if.then167, %if.else164
  br label %if.end169

if.end169:                                        ; preds = %if.end168, %if.then163
  %146 = load float, float* %depth152, align 4, !dbg !9631
  %147 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9632
  %rect_float170 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %147, i32 0, i32 9, !dbg !9633
  %148 = load float*, float** %rect_float170, align 8, !dbg !9633
  %149 = load i32, i32* %pos, align 4, !dbg !9634
  %idxprom171 = sext i32 %149 to i64, !dbg !9632
  %arrayidx172 = getelementptr inbounds float, float* %148, i64 %idxprom171, !dbg !9632
  store float %146, float* %arrayidx172, align 4, !dbg !9635
  %150 = load float, float* %depth152, align 4, !dbg !9636
  %151 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9637
  %rect_float173 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %151, i32 0, i32 9, !dbg !9638
  %152 = load float*, float** %rect_float173, align 8, !dbg !9638
  %153 = load i32, i32* %pos, align 4, !dbg !9639
  %add174 = add nsw i32 %153, 1, !dbg !9640
  %idxprom175 = sext i32 %add174 to i64, !dbg !9637
  %arrayidx176 = getelementptr inbounds float, float* %152, i64 %idxprom175, !dbg !9637
  store float %150, float* %arrayidx176, align 4, !dbg !9641
  %154 = load float, float* %depth152, align 4, !dbg !9642
  %155 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9643
  %rect_float177 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %155, i32 0, i32 9, !dbg !9644
  %156 = load float*, float** %rect_float177, align 8, !dbg !9644
  %157 = load i32, i32* %pos, align 4, !dbg !9645
  %add178 = add nsw i32 %157, 2, !dbg !9646
  %idxprom179 = sext i32 %add178 to i64, !dbg !9643
  %arrayidx180 = getelementptr inbounds float, float* %156, i64 %idxprom179, !dbg !9643
  store float %154, float* %arrayidx180, align 4, !dbg !9647
  %158 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9648
  %rect_float181 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %158, i32 0, i32 9, !dbg !9649
  %159 = load float*, float** %rect_float181, align 8, !dbg !9649
  %160 = load i32, i32* %pos, align 4, !dbg !9650
  %add182 = add nsw i32 %160, 3, !dbg !9651
  %idxprom183 = sext i32 %add182 to i64, !dbg !9648
  %arrayidx184 = getelementptr inbounds float, float* %159, i64 %idxprom183, !dbg !9648
  store float 1.000000e+00, float* %arrayidx184, align 4, !dbg !9652
  br label %if.end185, !dbg !9653

if.end185:                                        ; preds = %if.end169, %if.else143
  br label %if.end186

if.end186:                                        ; preds = %if.end185, %if.end127
  br label %if.end187

if.end187:                                        ; preds = %if.end186, %if.end99
  br label %if.end188, !dbg !9654

if.end188:                                        ; preds = %if.end187, %if.else
  br label %if.end189

if.end189:                                        ; preds = %if.end188, %if.end51
  br label %for.inc, !dbg !9655

for.inc:                                          ; preds = %if.end189
  %161 = load i32, i32* %index, align 4, !dbg !9656
  %inc = add nsw i32 %161, 1, !dbg !9656
  store i32 %inc, i32* %index, align 4, !dbg !9656
  br label %for.cond, !dbg !9657, !llvm.loop !9658

for.end:                                          ; preds = %for.cond
  %162 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9660
  %ftype = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %162, i32 0, i32 26, !dbg !9661
  store i32 1073741919, i32* %ftype, align 8, !dbg !9662
  %163 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9663
  %arraydecay190 = getelementptr inbounds [1024 x i8], [1024 x i8]* %output_file, i64 0, i64 0, !dbg !9664
  %call191 = call signext i16 @IMB_saveiff(%struct.ImBuf* %163, i8* %arraydecay190, i32 32), !dbg !9665
  %164 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !9666
  call void @IMB_freeImBuf(%struct.ImBuf* %164), !dbg !9667
  br label %return, !dbg !9668

return:                                           ; preds = %for.end, %if.then17, %if.then
  ret void, !dbg !9668
}

declare dso_local i32 @BKE_add_image_extension_from_type(i8*, i8 zeroext) #2

declare dso_local zeroext i8 @BLI_path_abs(i8*, i8*) #2

declare dso_local void @BLI_make_existing_file(i8*) #2

declare dso_local %struct.ImBuf* @IMB_allocImBuf(i32, i32, i8 zeroext, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @blendColors(float* %t_color, float %t_alpha, float* %s_color, float %s_alpha, float* %result) #0 !dbg !9669 {
entry:
  %t_color.addr = alloca float*, align 8
  %t_alpha.addr = alloca float, align 4
  %s_color.addr = alloca float*, align 8
  %s_alpha.addr = alloca float, align 4
  %result.addr = alloca float*, align 8
  %i = alloca i32, align 4
  %i_alpha = alloca float, align 4
  %f_alpha = alloca float, align 4
  store float* %t_color, float** %t_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %t_color.addr, metadata !9672, metadata !DIExpression()), !dbg !9673
  store float %t_alpha, float* %t_alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %t_alpha.addr, metadata !9674, metadata !DIExpression()), !dbg !9675
  store float* %s_color, float** %s_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %s_color.addr, metadata !9676, metadata !DIExpression()), !dbg !9677
  store float %s_alpha, float* %s_alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %s_alpha.addr, metadata !9678, metadata !DIExpression()), !dbg !9679
  store float* %result, float** %result.addr, align 8
  call void @llvm.dbg.declare(metadata float** %result.addr, metadata !9680, metadata !DIExpression()), !dbg !9681
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9682, metadata !DIExpression()), !dbg !9683
  call void @llvm.dbg.declare(metadata float* %i_alpha, metadata !9684, metadata !DIExpression()), !dbg !9685
  %0 = load float, float* %s_alpha.addr, align 4, !dbg !9686
  %sub = fsub float 1.000000e+00, %0, !dbg !9687
  store float %sub, float* %i_alpha, align 4, !dbg !9685
  call void @llvm.dbg.declare(metadata float* %f_alpha, metadata !9688, metadata !DIExpression()), !dbg !9689
  %1 = load float, float* %t_alpha.addr, align 4, !dbg !9690
  %2 = load float, float* %i_alpha, align 4, !dbg !9691
  %mul = fmul float %1, %2, !dbg !9692
  %3 = load float, float* %s_alpha.addr, align 4, !dbg !9693
  %add = fadd float %mul, %3, !dbg !9694
  store float %add, float* %f_alpha, align 4, !dbg !9689
  %4 = load float, float* %f_alpha, align 4, !dbg !9695
  %tobool = fcmp une float %4, 0.000000e+00, !dbg !9695
  br i1 %tobool, label %if.then, label %if.else, !dbg !9697

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !9698
  br label %for.cond, !dbg !9701

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load i32, i32* %i, align 4, !dbg !9702
  %cmp = icmp slt i32 %5, 3, !dbg !9704
  br i1 %cmp, label %for.body, label %for.end, !dbg !9705

for.body:                                         ; preds = %for.cond
  %6 = load float*, float** %t_color.addr, align 8, !dbg !9706
  %7 = load i32, i32* %i, align 4, !dbg !9708
  %idxprom = sext i32 %7 to i64, !dbg !9706
  %arrayidx = getelementptr inbounds float, float* %6, i64 %idxprom, !dbg !9706
  %8 = load float, float* %arrayidx, align 4, !dbg !9706
  %9 = load float, float* %t_alpha.addr, align 4, !dbg !9709
  %mul1 = fmul float %8, %9, !dbg !9710
  %10 = load float, float* %i_alpha, align 4, !dbg !9711
  %mul2 = fmul float %mul1, %10, !dbg !9712
  %11 = load float*, float** %s_color.addr, align 8, !dbg !9713
  %12 = load i32, i32* %i, align 4, !dbg !9714
  %idxprom3 = sext i32 %12 to i64, !dbg !9713
  %arrayidx4 = getelementptr inbounds float, float* %11, i64 %idxprom3, !dbg !9713
  %13 = load float, float* %arrayidx4, align 4, !dbg !9713
  %14 = load float, float* %s_alpha.addr, align 4, !dbg !9715
  %mul5 = fmul float %13, %14, !dbg !9716
  %add6 = fadd float %mul2, %mul5, !dbg !9717
  %15 = load float, float* %f_alpha, align 4, !dbg !9718
  %div = fdiv float %add6, %15, !dbg !9719
  %16 = load float*, float** %result.addr, align 8, !dbg !9720
  %17 = load i32, i32* %i, align 4, !dbg !9721
  %idxprom7 = sext i32 %17 to i64, !dbg !9720
  %arrayidx8 = getelementptr inbounds float, float* %16, i64 %idxprom7, !dbg !9720
  store float %div, float* %arrayidx8, align 4, !dbg !9722
  br label %for.inc, !dbg !9723

for.inc:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !9724
  %inc = add nsw i32 %18, 1, !dbg !9724
  store i32 %inc, i32* %i, align 4, !dbg !9724
  br label %for.cond, !dbg !9725, !llvm.loop !9726

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !9728

if.else:                                          ; preds = %entry
  %19 = load float*, float** %result.addr, align 8, !dbg !9729
  %20 = load float*, float** %t_color.addr, align 8, !dbg !9731
  call void @copy_v3_v3(float* %19, float* %20), !dbg !9732
  br label %if.end

if.end:                                           ; preds = %if.else, %for.end
  %21 = load float, float* %f_alpha, align 4, !dbg !9733
  %22 = load float*, float** %result.addr, align 8, !dbg !9734
  %arrayidx9 = getelementptr inbounds float, float* %22, i64 3, !dbg !9734
  store float %21, float* %arrayidx9, align 4, !dbg !9735
  ret void, !dbg !9736
}

declare dso_local signext i16 @IMB_saveiff(%struct.ImBuf*, i8*, i32) #2

declare dso_local void @IMB_freeImBuf(%struct.ImBuf*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @dynamicPaint_calculateFrame(%struct.DynamicPaintSurface* %surface, %struct.Scene* %scene, %struct.Object* %cObject, i32 %frame) #0 !dbg !9737 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %cObject.addr = alloca %struct.Object*, align 8
  %frame.addr = alloca i32, align 4
  %timescale = alloca float, align 4
  %st = alloca i32, align 4
  %subframe = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store %struct.Object* %cObject, %struct.Object** %cObject.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %cObject.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i32 %frame, i32* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %frame.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.declare(metadata float* %timescale, metadata !9748, metadata !DIExpression()), !dbg !9749
  store float 1.000000e+00, float* %timescale, align 4, !dbg !9749
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9750
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 18, !dbg !9752
  %1 = load i32, i32* %flags, align 4, !dbg !9752
  %and = and i32 %1, 256, !dbg !9753
  %tobool = icmp ne i32 %and, 0, !dbg !9753
  br i1 %tobool, label %if.then, label %if.end, !dbg !9754

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9755
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9756
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 2, !dbg !9757
  %4 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !9757
  %dm = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %4, i32 0, i32 1, !dbg !9758
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9758
  call void @dynamicPaint_applySurfaceDisplace(%struct.DynamicPaintSurface* %2, %struct.DerivedMesh* %5), !dbg !9759
  br label %if.end, !dbg !9759

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9760
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9761
  %8 = load %struct.Object*, %struct.Object** %cObject.addr, align 8, !dbg !9762
  %call = call i32 @dynamicPaint_generateBakeData(%struct.DynamicPaintSurface* %6, %struct.Scene* %7, %struct.Object* %8), !dbg !9763
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9764
  %substeps = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 21, !dbg !9766
  %10 = load i32, i32* %substeps, align 8, !dbg !9766
  %tobool1 = icmp ne i32 %10, 0, !dbg !9764
  br i1 %tobool1, label %land.lhs.true, label %if.end16, !dbg !9767

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32, i32* %frame.addr, align 4, !dbg !9768
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9769
  %start_frame = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %12, i32 0, i32 22, !dbg !9770
  %13 = load i32, i32* %start_frame, align 4, !dbg !9770
  %cmp = icmp ne i32 %11, %13, !dbg !9771
  br i1 %cmp, label %if.then2, label %if.end16, !dbg !9772

if.then2:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %st, metadata !9773, metadata !DIExpression()), !dbg !9775
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9776
  %substeps3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 21, !dbg !9777
  %15 = load i32, i32* %substeps3, align 8, !dbg !9777
  %add = add nsw i32 %15, 1, !dbg !9778
  %conv = sitofp i32 %add to float, !dbg !9779
  %div = fdiv float 1.000000e+00, %conv, !dbg !9780
  store float %div, float* %timescale, align 4, !dbg !9781
  store i32 1, i32* %st, align 4, !dbg !9782
  br label %for.cond, !dbg !9784

for.cond:                                         ; preds = %for.inc, %if.then2
  %16 = load i32, i32* %st, align 4, !dbg !9785
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9787
  %substeps4 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 21, !dbg !9788
  %18 = load i32, i32* %substeps4, align 8, !dbg !9788
  %cmp5 = icmp sle i32 %16, %18, !dbg !9789
  br i1 %cmp5, label %for.body, label %for.end, !dbg !9790

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %subframe, metadata !9791, metadata !DIExpression()), !dbg !9793
  %19 = load i32, i32* %st, align 4, !dbg !9794
  %conv7 = sitofp i32 %19 to float, !dbg !9795
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9796
  %substeps8 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 21, !dbg !9797
  %21 = load i32, i32* %substeps8, align 8, !dbg !9797
  %add9 = add nsw i32 %21, 1, !dbg !9798
  %conv10 = sitofp i32 %add9 to float, !dbg !9799
  %div11 = fdiv float %conv7, %conv10, !dbg !9800
  store float %div11, float* %subframe, align 4, !dbg !9793
  %22 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9801
  %23 = load %struct.Object*, %struct.Object** %cObject.addr, align 8, !dbg !9803
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9804
  %25 = load float, float* %timescale, align 4, !dbg !9805
  %26 = load float, float* %subframe, align 4, !dbg !9806
  %call12 = call i32 @dynamicPaint_doStep(%struct.Scene* %22, %struct.Object* %23, %struct.DynamicPaintSurface* %24, float %25, float %26), !dbg !9807
  %tobool13 = icmp ne i32 %call12, 0, !dbg !9807
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !9808

if.then14:                                        ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !9809
  br label %return, !dbg !9809

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !9810

for.inc:                                          ; preds = %if.end15
  %27 = load i32, i32* %st, align 4, !dbg !9811
  %inc = add nsw i32 %27, 1, !dbg !9811
  store i32 %inc, i32* %st, align 4, !dbg !9811
  br label %for.cond, !dbg !9812, !llvm.loop !9813

for.end:                                          ; preds = %for.cond
  br label %if.end16, !dbg !9815

if.end16:                                         ; preds = %for.end, %land.lhs.true, %if.end
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9816
  %29 = load %struct.Object*, %struct.Object** %cObject.addr, align 8, !dbg !9817
  %30 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9818
  %31 = load float, float* %timescale, align 4, !dbg !9819
  %call17 = call i32 @dynamicPaint_doStep(%struct.Scene* %28, %struct.Object* %29, %struct.DynamicPaintSurface* %30, float %31, float 0.000000e+00), !dbg !9820
  store i32 %call17, i32* %retval, align 4, !dbg !9821
  br label %return, !dbg !9821

return:                                           ; preds = %if.end16, %if.then14
  %32 = load i32, i32* %retval, align 4, !dbg !9822
  ret i32 %32, !dbg !9822
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_applySurfaceDisplace(%struct.DynamicPaintSurface* %surface, %struct.DerivedMesh* %result) #0 !dbg !9823 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %result.addr = alloca %struct.DerivedMesh*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %i = alloca i32, align 4
  %value = alloca float*, align 8
  %normal = alloca [3 x float], align 4
  %val = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !9826, metadata !DIExpression()), !dbg !9827
  store %struct.DerivedMesh* %result, %struct.DerivedMesh** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result.addr, metadata !9828, metadata !DIExpression()), !dbg !9829
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !9830, metadata !DIExpression()), !dbg !9831
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9832
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !9833
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !9833
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !9831
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9834
  %tobool = icmp ne %struct.PaintSurfaceData* %2, null, !dbg !9834
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !9836

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9837
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 10, !dbg !9838
  %4 = load i16, i16* %format, align 4, !dbg !9838
  %conv = sext i16 %4 to i32, !dbg !9837
  %cmp = icmp ne i32 %conv, 1, !dbg !9839
  br i1 %cmp, label %if.then, label %if.end, !dbg !9840

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end32, !dbg !9841

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9842
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 11, !dbg !9844
  %6 = load i16, i16* %type, align 2, !dbg !9844
  %conv2 = sext i16 %6 to i32, !dbg !9842
  %cmp3 = icmp eq i32 %conv2, 1, !dbg !9845
  br i1 %cmp3, label %if.then5, label %if.end32, !dbg !9846

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !9847, metadata !DIExpression()), !dbg !9849
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result.addr, align 8, !dbg !9850
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 31, !dbg !9851
  %8 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !9851
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result.addr, align 8, !dbg !9852
  %call = call %struct.MVert* %8(%struct.DerivedMesh* %9), !dbg !9850
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !9849
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9853, metadata !DIExpression()), !dbg !9854
  call void @llvm.dbg.declare(metadata float** %value, metadata !9855, metadata !DIExpression()), !dbg !9856
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9857
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %10, i32 0, i32 1, !dbg !9858
  %11 = load i8*, i8** %type_data, align 8, !dbg !9858
  %12 = bitcast i8* %11 to float*, !dbg !9859
  store float* %12, float** %value, align 8, !dbg !9856
  store i32 0, i32* %i, align 4, !dbg !9860
  br label %for.cond, !dbg !9862

for.cond:                                         ; preds = %for.inc, %if.then5
  %13 = load i32, i32* %i, align 4, !dbg !9863
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9865
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !9866
  %15 = load i32, i32* %total_points, align 8, !dbg !9866
  %cmp6 = icmp slt i32 %13, %15, !dbg !9867
  br i1 %cmp6, label %for.body, label %for.end, !dbg !9868

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %normal, metadata !9869, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata float* %val, metadata !9872, metadata !DIExpression()), !dbg !9873
  %16 = load float*, float** %value, align 8, !dbg !9874
  %17 = load i32, i32* %i, align 4, !dbg !9875
  %idxprom = sext i32 %17 to i64, !dbg !9874
  %arrayidx = getelementptr inbounds float, float* %16, i64 %idxprom, !dbg !9874
  %18 = load float, float* %arrayidx, align 4, !dbg !9874
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9876
  %disp_factor = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %19, i32 0, i32 32, !dbg !9877
  %20 = load float, float* %disp_factor, align 8, !dbg !9877
  %mul = fmul float %18, %20, !dbg !9878
  store float %mul, float* %val, align 4, !dbg !9873
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !9879
  %21 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9880
  %22 = load i32, i32* %i, align 4, !dbg !9881
  %idxprom8 = sext i32 %22 to i64, !dbg !9880
  %arrayidx9 = getelementptr inbounds %struct.MVert, %struct.MVert* %21, i64 %idxprom8, !dbg !9880
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx9, i32 0, i32 1, !dbg !9882
  %arraydecay10 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !9880
  call void @normal_short_to_float_v3(float* %arraydecay, i16* %arraydecay10), !dbg !9883
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !9884
  %call12 = call float @normalize_v3(float* %arraydecay11), !dbg !9885
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 0, !dbg !9886
  %23 = load float, float* %arrayidx13, align 4, !dbg !9886
  %24 = load float, float* %val, align 4, !dbg !9887
  %mul14 = fmul float %23, %24, !dbg !9888
  %25 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9889
  %26 = load i32, i32* %i, align 4, !dbg !9890
  %idxprom15 = sext i32 %26 to i64, !dbg !9889
  %arrayidx16 = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i64 %idxprom15, !dbg !9889
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx16, i32 0, i32 0, !dbg !9891
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9889
  %27 = load float, float* %arrayidx17, align 4, !dbg !9892
  %sub = fsub float %27, %mul14, !dbg !9892
  store float %sub, float* %arrayidx17, align 4, !dbg !9892
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 1, !dbg !9893
  %28 = load float, float* %arrayidx18, align 4, !dbg !9893
  %29 = load float, float* %val, align 4, !dbg !9894
  %mul19 = fmul float %28, %29, !dbg !9895
  %30 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9896
  %31 = load i32, i32* %i, align 4, !dbg !9897
  %idxprom20 = sext i32 %31 to i64, !dbg !9896
  %arrayidx21 = getelementptr inbounds %struct.MVert, %struct.MVert* %30, i64 %idxprom20, !dbg !9896
  %co22 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx21, i32 0, i32 0, !dbg !9898
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 1, !dbg !9896
  %32 = load float, float* %arrayidx23, align 4, !dbg !9899
  %sub24 = fsub float %32, %mul19, !dbg !9899
  store float %sub24, float* %arrayidx23, align 4, !dbg !9899
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %normal, i64 0, i64 2, !dbg !9900
  %33 = load float, float* %arrayidx25, align 4, !dbg !9900
  %34 = load float, float* %val, align 4, !dbg !9901
  %mul26 = fmul float %33, %34, !dbg !9902
  %35 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !9903
  %36 = load i32, i32* %i, align 4, !dbg !9904
  %idxprom27 = sext i32 %36 to i64, !dbg !9903
  %arrayidx28 = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i64 %idxprom27, !dbg !9903
  %co29 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx28, i32 0, i32 0, !dbg !9905
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co29, i64 0, i64 2, !dbg !9903
  %37 = load float, float* %arrayidx30, align 4, !dbg !9906
  %sub31 = fsub float %37, %mul26, !dbg !9906
  store float %sub31, float* %arrayidx30, align 4, !dbg !9906
  br label %for.inc, !dbg !9907

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !9908
  %inc = add nsw i32 %38, 1, !dbg !9908
  store i32 %inc, i32* %i, align 4, !dbg !9908
  br label %for.cond, !dbg !9909, !llvm.loop !9910

for.end:                                          ; preds = %for.cond
  br label %if.end32, !dbg !9912

if.end32:                                         ; preds = %if.then, %for.end, %if.end
  ret void, !dbg !9913
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_generateBakeData(%struct.DynamicPaintSurface* %surface, %struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !9914 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %adj_data = alloca %struct.PaintAdjData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %index = alloca i32, align 4
  %new_bdata = alloca i32, align 4
  %do_velocity_data = alloca i32, align 4
  %do_accel_data = alloca i32, align 4
  %canvasNumOfVerts = alloca i32, align 4
  %mvert = alloca %struct.MVert*, align 8
  %canvas_verts = alloca %struct.Vec3f*, align 8
  %surface_moved = alloca i32, align 4
  %prev_point = alloca [3 x float], align 4
  %n1 = alloca [3 x float], align 4
  %n2 = alloca [3 x float], align 4
  %n3 = alloca [3 x float], align 4
  %f_data = alloca %struct.ImgSeqFormatData*, align 8
  %tPoint = alloca %struct.PaintUVPoint*, align 8
  %ss = alloca i32, align 4
  %ss287 = alloca i32, align 4
  %t_index = alloca i32, align 4
  %temp_nor = alloca [3 x float], align 4
  %n1420 = alloca [3 x float], align 4
  %n2421 = alloca [3 x float], align 4
  %n3422 = alloca [3 x float], align 4
  %f_data423 = alloca %struct.ImgSeqFormatData*, align 8
  %tPoint425 = alloca %struct.PaintUVPoint*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !9917, metadata !DIExpression()), !dbg !9918
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !9919, metadata !DIExpression()), !dbg !9920
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !9921, metadata !DIExpression()), !dbg !9922
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !9923, metadata !DIExpression()), !dbg !9924
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9925
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !9926
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !9926
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !9924
  call void @llvm.dbg.declare(metadata %struct.PaintAdjData** %adj_data, metadata !9927, metadata !DIExpression()), !dbg !9928
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9929
  %adj_data1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 2, !dbg !9930
  %3 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data1, align 8, !dbg !9930
  store %struct.PaintAdjData* %3, %struct.PaintAdjData** %adj_data, align 8, !dbg !9928
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !9931, metadata !DIExpression()), !dbg !9932
  %4 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9933
  %bData2 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %4, i32 0, i32 3, !dbg !9934
  %5 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData2, align 8, !dbg !9934
  store %struct.PaintBakeData* %5, %struct.PaintBakeData** %bData, align 8, !dbg !9932
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !9935, metadata !DIExpression()), !dbg !9936
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9937
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 2, !dbg !9938
  %7 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !9938
  %dm3 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %7, i32 0, i32 1, !dbg !9939
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm3, align 8, !dbg !9939
  store %struct.DerivedMesh* %8, %struct.DerivedMesh** %dm, align 8, !dbg !9936
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9940, metadata !DIExpression()), !dbg !9941
  call void @llvm.dbg.declare(metadata i32* %new_bdata, metadata !9942, metadata !DIExpression()), !dbg !9943
  store i32 0, i32* %new_bdata, align 4, !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %do_velocity_data, metadata !9944, metadata !DIExpression()), !dbg !9945
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9946
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !9947
  %call = call i32 @surface_needsVelocityData(%struct.DynamicPaintSurface* %9, %struct.Scene* %10), !dbg !9948
  store i32 %call, i32* %do_velocity_data, align 4, !dbg !9945
  call void @llvm.dbg.declare(metadata i32* %do_accel_data, metadata !9949, metadata !DIExpression()), !dbg !9950
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9951
  %call4 = call i32 @surface_needsAccelerationData(%struct.DynamicPaintSurface* %11), !dbg !9952
  store i32 %call4, i32* %do_accel_data, align 4, !dbg !9950
  call void @llvm.dbg.declare(metadata i32* %canvasNumOfVerts, metadata !9953, metadata !DIExpression()), !dbg !9954
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9955
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 23, !dbg !9956
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !9956
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9957
  %call5 = call i32 %13(%struct.DerivedMesh* %14), !dbg !9955
  store i32 %call5, i32* %canvasNumOfVerts, align 4, !dbg !9954
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !9958, metadata !DIExpression()), !dbg !9959
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9960
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 31, !dbg !9961
  %16 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !9961
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !9962
  %call6 = call %struct.MVert* %16(%struct.DerivedMesh* %17), !dbg !9960
  store %struct.MVert* %call6, %struct.MVert** %mvert, align 8, !dbg !9959
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %canvas_verts, metadata !9963, metadata !DIExpression()), !dbg !9964
  %18 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9965
  %tobool = icmp ne %struct.PaintBakeData* %18, null, !dbg !9965
  br i1 %tobool, label %if.then, label %if.end31, !dbg !9967

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %surface_moved, metadata !9968, metadata !DIExpression()), !dbg !9970
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !9971
  %20 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !9972
  %call7 = call i32 @dynamicPaint_surfaceHasMoved(%struct.DynamicPaintSurface* %19, %struct.Object* %20), !dbg !9973
  store i32 %call7, i32* %surface_moved, align 4, !dbg !9970
  %21 = load i32, i32* %do_accel_data, align 4, !dbg !9974
  %tobool8 = icmp ne i32 %21, 0, !dbg !9974
  br i1 %tobool8, label %land.lhs.true, label %if.end, !dbg !9976

land.lhs.true:                                    ; preds = %if.then
  %22 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9977
  %prev_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %22, i32 0, i32 9, !dbg !9978
  %23 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity, align 8, !dbg !9978
  %tobool9 = icmp ne %struct.Vec3f* %23, null, !dbg !9977
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !9979

land.lhs.true10:                                  ; preds = %land.lhs.true
  %24 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9980
  %velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %24, i32 0, i32 8, !dbg !9981
  %25 = load %struct.Vec3f*, %struct.Vec3f** %velocity, align 8, !dbg !9981
  %tobool11 = icmp ne %struct.Vec3f* %25, null, !dbg !9980
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !9982

if.then12:                                        ; preds = %land.lhs.true10
  %26 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9983
  %prev_velocity13 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %26, i32 0, i32 9, !dbg !9984
  %27 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity13, align 8, !dbg !9984
  %28 = bitcast %struct.Vec3f* %27 to i8*, !dbg !9985
  %29 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9986
  %velocity14 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %29, i32 0, i32 8, !dbg !9987
  %30 = load %struct.Vec3f*, %struct.Vec3f** %velocity14, align 8, !dbg !9987
  %31 = bitcast %struct.Vec3f* %30 to i8*, !dbg !9985
  %32 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !9988
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %32, i32 0, i32 4, !dbg !9989
  %33 = load i32, i32* %total_points, align 8, !dbg !9989
  %conv = sext i32 %33 to i64, !dbg !9988
  %mul = mul i64 %conv, 12, !dbg !9990
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %28, i8* align 4 %31, i64 %mul, i1 false), !dbg !9985
  br label %if.end, !dbg !9985

if.end:                                           ; preds = %if.then12, %land.lhs.true10, %land.lhs.true, %if.then
  %34 = load i32, i32* %do_velocity_data, align 4, !dbg !9991
  %tobool15 = icmp ne i32 %34, 0, !dbg !9991
  br i1 %tobool15, label %land.lhs.true16, label %if.end27, !dbg !9993

land.lhs.true16:                                  ; preds = %if.end
  %35 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9994
  %velocity17 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %35, i32 0, i32 8, !dbg !9995
  %36 = load %struct.Vec3f*, %struct.Vec3f** %velocity17, align 8, !dbg !9995
  %tobool18 = icmp ne %struct.Vec3f* %36, null, !dbg !9994
  br i1 %tobool18, label %land.lhs.true19, label %if.end27, !dbg !9996

land.lhs.true19:                                  ; preds = %land.lhs.true16
  %37 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !9997
  %clear = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %37, i32 0, i32 13, !dbg !9998
  %38 = load i32, i32* %clear, align 8, !dbg !9998
  %tobool20 = icmp ne i32 %38, 0, !dbg !9997
  br i1 %tobool20, label %if.then22, label %lor.lhs.false, !dbg !9999

lor.lhs.false:                                    ; preds = %land.lhs.true19
  %39 = load i32, i32* %surface_moved, align 4, !dbg !10000
  %tobool21 = icmp ne i32 %39, 0, !dbg !10000
  br i1 %tobool21, label %if.end27, label %if.then22, !dbg !10001

if.then22:                                        ; preds = %lor.lhs.false, %land.lhs.true19
  %40 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10002
  %velocity23 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %40, i32 0, i32 8, !dbg !10003
  %41 = load %struct.Vec3f*, %struct.Vec3f** %velocity23, align 8, !dbg !10003
  %42 = bitcast %struct.Vec3f* %41 to i8*, !dbg !10004
  %43 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10005
  %total_points24 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %43, i32 0, i32 4, !dbg !10006
  %44 = load i32, i32* %total_points24, align 8, !dbg !10006
  %conv25 = sext i32 %44 to i64, !dbg !10005
  %mul26 = mul i64 %conv25, 12, !dbg !10007
  call void @llvm.memset.p0i8.i64(i8* align 4 %42, i8 0, i64 %mul26, i1 false), !dbg !10004
  br label %if.end27, !dbg !10004

if.end27:                                         ; preds = %if.then22, %lor.lhs.false, %land.lhs.true16, %if.end
  %45 = load i32, i32* %surface_moved, align 4, !dbg !10008
  %tobool28 = icmp ne i32 %45, 0, !dbg !10008
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !10010

if.then29:                                        ; preds = %if.end27
  store i32 1, i32* %retval, align 4, !dbg !10011
  br label %return, !dbg !10011

if.end30:                                         ; preds = %if.end27
  br label %if.end31, !dbg !10012

if.end31:                                         ; preds = %if.end30, %entry
  %46 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10013
  %47 = load i32, i32* %canvasNumOfVerts, align 4, !dbg !10014
  %conv32 = sext i32 %47 to i64, !dbg !10014
  %mul33 = mul i64 %conv32, 12, !dbg !10015
  %call34 = call i8* %46(i64 %mul33, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.37, i64 0, i64 0)), !dbg !10013
  %48 = bitcast i8* %call34 to %struct.Vec3f*, !dbg !10016
  store %struct.Vec3f* %48, %struct.Vec3f** %canvas_verts, align 8, !dbg !10017
  %49 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10018
  %tobool35 = icmp ne %struct.Vec3f* %49, null, !dbg !10018
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !10020

if.then36:                                        ; preds = %if.end31
  store i32 0, i32* %retval, align 4, !dbg !10021
  br label %return, !dbg !10021

if.end37:                                         ; preds = %if.end31
  %50 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10022
  %tobool38 = icmp ne %struct.PaintBakeData* %50, null, !dbg !10022
  br i1 %tobool38, label %if.end107, label %if.then39, !dbg !10024

if.then39:                                        ; preds = %if.end37
  %51 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10025
  %call40 = call i8* %51(i64 192, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.38, i64 0, i64 0)), !dbg !10025
  %52 = bitcast i8* %call40 to %struct.PaintBakeData*, !dbg !10027
  store %struct.PaintBakeData* %52, %struct.PaintBakeData** %bData, align 8, !dbg !10028
  %53 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10029
  %bData41 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %53, i32 0, i32 3, !dbg !10030
  store %struct.PaintBakeData* %52, %struct.PaintBakeData** %bData41, align 8, !dbg !10031
  %54 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10032
  %tobool42 = icmp ne %struct.PaintBakeData* %54, null, !dbg !10032
  br i1 %tobool42, label %if.end47, label %if.then43, !dbg !10034

if.then43:                                        ; preds = %if.then39
  %55 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10035
  %tobool44 = icmp ne %struct.Vec3f* %55, null, !dbg !10035
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !10038

if.then45:                                        ; preds = %if.then43
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10039
  %57 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10040
  %58 = bitcast %struct.Vec3f* %57 to i8*, !dbg !10040
  call void %56(i8* %58), !dbg !10039
  br label %if.end46, !dbg !10039

if.end46:                                         ; preds = %if.then45, %if.then43
  store i32 0, i32* %retval, align 4, !dbg !10041
  br label %return, !dbg !10041

if.end47:                                         ; preds = %if.then39
  %59 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10042
  %60 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10043
  %total_points48 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %60, i32 0, i32 4, !dbg !10044
  %61 = load i32, i32* %total_points48, align 8, !dbg !10044
  %conv49 = sext i32 %61 to i64, !dbg !10043
  %mul50 = mul i64 %conv49, 16, !dbg !10045
  %call51 = call i8* %59(i64 %mul50, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0)), !dbg !10042
  %62 = bitcast i8* %call51 to %struct.PaintBakeNormal*, !dbg !10046
  %63 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10047
  %bNormal = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %63, i32 0, i32 0, !dbg !10048
  store %struct.PaintBakeNormal* %62, %struct.PaintBakeNormal** %bNormal, align 8, !dbg !10049
  %64 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10050
  %65 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10051
  %total_points52 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %65, i32 0, i32 4, !dbg !10052
  %66 = load i32, i32* %total_points52, align 8, !dbg !10052
  %conv53 = sext i32 %66 to i64, !dbg !10051
  %mul54 = mul i64 %conv53, 4, !dbg !10053
  %call55 = call i8* %64(i64 %mul54, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)), !dbg !10050
  %67 = bitcast i8* %call55 to i32*, !dbg !10050
  %68 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10054
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %68, i32 0, i32 1, !dbg !10055
  store i32* %67, i32** %s_pos, align 8, !dbg !10056
  %69 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10057
  %70 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10058
  %total_points56 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %70, i32 0, i32 4, !dbg !10059
  %71 = load i32, i32* %total_points56, align 8, !dbg !10059
  %conv57 = sext i32 %71 to i64, !dbg !10058
  %mul58 = mul i64 %conv57, 4, !dbg !10060
  %call59 = call i8* %69(i64 %mul58, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.41, i64 0, i64 0)), !dbg !10057
  %72 = bitcast i8* %call59 to i32*, !dbg !10057
  %73 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10061
  %s_num = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %73, i32 0, i32 2, !dbg !10062
  store i32* %72, i32** %s_num, align 8, !dbg !10063
  %74 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10064
  %75 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10065
  %call60 = call i32 @surface_totalSamples(%struct.DynamicPaintSurface* %75), !dbg !10066
  %conv61 = sext i32 %call60 to i64, !dbg !10066
  %mul62 = mul i64 %conv61, 12, !dbg !10067
  %call63 = call i8* %74(i64 %mul62, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0)), !dbg !10064
  %76 = bitcast i8* %call63 to %struct.Vec3f*, !dbg !10068
  %77 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10069
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %77, i32 0, i32 3, !dbg !10070
  store %struct.Vec3f* %76, %struct.Vec3f** %realCoord, align 8, !dbg !10071
  %78 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10072
  %79 = load i32, i32* %canvasNumOfVerts, align 4, !dbg !10073
  %conv64 = sext i32 %79 to i64, !dbg !10073
  %mul65 = mul i64 %conv64, 20, !dbg !10074
  %call66 = call i8* %78(i64 %mul65, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.43, i64 0, i64 0)), !dbg !10072
  %80 = bitcast i8* %call66 to %struct.MVert*, !dbg !10072
  %81 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10075
  %prev_verts = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %81, i32 0, i32 11, !dbg !10076
  store %struct.MVert* %80, %struct.MVert** %prev_verts, align 8, !dbg !10077
  %82 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10078
  %bNormal67 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %82, i32 0, i32 0, !dbg !10080
  %83 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal67, align 8, !dbg !10080
  %tobool68 = icmp ne %struct.PaintBakeNormal* %83, null, !dbg !10078
  br i1 %tobool68, label %lor.lhs.false69, label %if.then80, !dbg !10081

lor.lhs.false69:                                  ; preds = %if.end47
  %84 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10082
  %s_pos70 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %84, i32 0, i32 1, !dbg !10083
  %85 = load i32*, i32** %s_pos70, align 8, !dbg !10083
  %tobool71 = icmp ne i32* %85, null, !dbg !10082
  br i1 %tobool71, label %lor.lhs.false72, label %if.then80, !dbg !10084

lor.lhs.false72:                                  ; preds = %lor.lhs.false69
  %86 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10085
  %s_num73 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %86, i32 0, i32 2, !dbg !10086
  %87 = load i32*, i32** %s_num73, align 8, !dbg !10086
  %tobool74 = icmp ne i32* %87, null, !dbg !10085
  br i1 %tobool74, label %lor.lhs.false75, label %if.then80, !dbg !10087

lor.lhs.false75:                                  ; preds = %lor.lhs.false72
  %88 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10088
  %realCoord76 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %88, i32 0, i32 3, !dbg !10089
  %89 = load %struct.Vec3f*, %struct.Vec3f** %realCoord76, align 8, !dbg !10089
  %tobool77 = icmp ne %struct.Vec3f* %89, null, !dbg !10088
  br i1 %tobool77, label %lor.lhs.false78, label %if.then80, !dbg !10090

lor.lhs.false78:                                  ; preds = %lor.lhs.false75
  %90 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10091
  %tobool79 = icmp ne %struct.Vec3f* %90, null, !dbg !10091
  br i1 %tobool79, label %if.end106, label %if.then80, !dbg !10092

if.then80:                                        ; preds = %lor.lhs.false78, %lor.lhs.false75, %lor.lhs.false72, %lor.lhs.false69, %if.end47
  %91 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10093
  %bNormal81 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %91, i32 0, i32 0, !dbg !10096
  %92 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal81, align 8, !dbg !10096
  %tobool82 = icmp ne %struct.PaintBakeNormal* %92, null, !dbg !10093
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !10097

if.then83:                                        ; preds = %if.then80
  %93 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10098
  %94 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10099
  %bNormal84 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %94, i32 0, i32 0, !dbg !10100
  %95 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal84, align 8, !dbg !10100
  %96 = bitcast %struct.PaintBakeNormal* %95 to i8*, !dbg !10099
  call void %93(i8* %96), !dbg !10098
  br label %if.end85, !dbg !10098

if.end85:                                         ; preds = %if.then83, %if.then80
  %97 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10101
  %s_pos86 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %97, i32 0, i32 1, !dbg !10103
  %98 = load i32*, i32** %s_pos86, align 8, !dbg !10103
  %tobool87 = icmp ne i32* %98, null, !dbg !10101
  br i1 %tobool87, label %if.then88, label %if.end90, !dbg !10104

if.then88:                                        ; preds = %if.end85
  %99 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10105
  %100 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10106
  %s_pos89 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %100, i32 0, i32 1, !dbg !10107
  %101 = load i32*, i32** %s_pos89, align 8, !dbg !10107
  %102 = bitcast i32* %101 to i8*, !dbg !10106
  call void %99(i8* %102), !dbg !10105
  br label %if.end90, !dbg !10105

if.end90:                                         ; preds = %if.then88, %if.end85
  %103 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10108
  %s_num91 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %103, i32 0, i32 2, !dbg !10110
  %104 = load i32*, i32** %s_num91, align 8, !dbg !10110
  %tobool92 = icmp ne i32* %104, null, !dbg !10108
  br i1 %tobool92, label %if.then93, label %if.end95, !dbg !10111

if.then93:                                        ; preds = %if.end90
  %105 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10112
  %106 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10113
  %s_num94 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %106, i32 0, i32 2, !dbg !10114
  %107 = load i32*, i32** %s_num94, align 8, !dbg !10114
  %108 = bitcast i32* %107 to i8*, !dbg !10113
  call void %105(i8* %108), !dbg !10112
  br label %if.end95, !dbg !10112

if.end95:                                         ; preds = %if.then93, %if.end90
  %109 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10115
  %realCoord96 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %109, i32 0, i32 3, !dbg !10117
  %110 = load %struct.Vec3f*, %struct.Vec3f** %realCoord96, align 8, !dbg !10117
  %tobool97 = icmp ne %struct.Vec3f* %110, null, !dbg !10115
  br i1 %tobool97, label %if.then98, label %if.end100, !dbg !10118

if.then98:                                        ; preds = %if.end95
  %111 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10119
  %112 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10120
  %realCoord99 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %112, i32 0, i32 3, !dbg !10121
  %113 = load %struct.Vec3f*, %struct.Vec3f** %realCoord99, align 8, !dbg !10121
  %114 = bitcast %struct.Vec3f* %113 to i8*, !dbg !10120
  call void %111(i8* %114), !dbg !10119
  br label %if.end100, !dbg !10119

if.end100:                                        ; preds = %if.then98, %if.end95
  %115 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10122
  %tobool101 = icmp ne %struct.Vec3f* %115, null, !dbg !10122
  br i1 %tobool101, label %if.then102, label %if.end103, !dbg !10124

if.then102:                                       ; preds = %if.end100
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10125
  %117 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10126
  %118 = bitcast %struct.Vec3f* %117 to i8*, !dbg !10126
  call void %116(i8* %118), !dbg !10125
  br label %if.end103, !dbg !10125

if.end103:                                        ; preds = %if.then102, %if.end100
  %119 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10127
  %canvas104 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %119, i32 0, i32 2, !dbg !10128
  %120 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas104, align 8, !dbg !10128
  %call105 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %120, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !10129
  store i32 %call105, i32* %retval, align 4, !dbg !10130
  br label %return, !dbg !10130

if.end106:                                        ; preds = %lor.lhs.false78
  store i32 1, i32* %new_bdata, align 4, !dbg !10131
  br label %if.end107, !dbg !10132

if.end107:                                        ; preds = %if.end106, %if.end37
  %121 = load i32, i32* %do_velocity_data, align 4, !dbg !10133
  %tobool108 = icmp ne i32 %121, 0, !dbg !10133
  br i1 %tobool108, label %land.lhs.true109, label %if.end118, !dbg !10135

land.lhs.true109:                                 ; preds = %if.end107
  %122 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10136
  %velocity110 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %122, i32 0, i32 8, !dbg !10137
  %123 = load %struct.Vec3f*, %struct.Vec3f** %velocity110, align 8, !dbg !10137
  %tobool111 = icmp ne %struct.Vec3f* %123, null, !dbg !10136
  br i1 %tobool111, label %if.end118, label %if.then112, !dbg !10138

if.then112:                                       ; preds = %land.lhs.true109
  %124 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10139
  %125 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10141
  %total_points113 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %125, i32 0, i32 4, !dbg !10142
  %126 = load i32, i32* %total_points113, align 8, !dbg !10142
  %conv114 = sext i32 %126 to i64, !dbg !10141
  %mul115 = mul i64 %conv114, 12, !dbg !10143
  %call116 = call i8* %124(i64 %mul115, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44, i64 0, i64 0)), !dbg !10139
  %127 = bitcast i8* %call116 to %struct.Vec3f*, !dbg !10144
  %128 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10145
  %velocity117 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %128, i32 0, i32 8, !dbg !10146
  store %struct.Vec3f* %127, %struct.Vec3f** %velocity117, align 8, !dbg !10147
  br label %if.end118, !dbg !10148

if.end118:                                        ; preds = %if.then112, %land.lhs.true109, %if.end107
  %129 = load i32, i32* %do_accel_data, align 4, !dbg !10149
  %tobool119 = icmp ne i32 %129, 0, !dbg !10149
  br i1 %tobool119, label %land.lhs.true120, label %if.end141, !dbg !10151

land.lhs.true120:                                 ; preds = %if.end118
  %130 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10152
  %prev_velocity121 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %130, i32 0, i32 9, !dbg !10153
  %131 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity121, align 8, !dbg !10153
  %tobool122 = icmp ne %struct.Vec3f* %131, null, !dbg !10152
  br i1 %tobool122, label %if.end141, label %if.then123, !dbg !10154

if.then123:                                       ; preds = %land.lhs.true120
  %132 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !10155
  %133 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10157
  %total_points124 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %133, i32 0, i32 4, !dbg !10158
  %134 = load i32, i32* %total_points124, align 8, !dbg !10158
  %conv125 = sext i32 %134 to i64, !dbg !10157
  %mul126 = mul i64 %conv125, 12, !dbg !10159
  %call127 = call i8* %132(i64 %mul126, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.45, i64 0, i64 0)), !dbg !10155
  %135 = bitcast i8* %call127 to %struct.Vec3f*, !dbg !10160
  %136 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10161
  %prev_velocity128 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %136, i32 0, i32 9, !dbg !10162
  store %struct.Vec3f* %135, %struct.Vec3f** %prev_velocity128, align 8, !dbg !10163
  %137 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10164
  %prev_velocity129 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %137, i32 0, i32 9, !dbg !10166
  %138 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity129, align 8, !dbg !10166
  %tobool130 = icmp ne %struct.Vec3f* %138, null, !dbg !10164
  br i1 %tobool130, label %land.lhs.true131, label %if.end140, !dbg !10167

land.lhs.true131:                                 ; preds = %if.then123
  %139 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10168
  %velocity132 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %139, i32 0, i32 8, !dbg !10169
  %140 = load %struct.Vec3f*, %struct.Vec3f** %velocity132, align 8, !dbg !10169
  %tobool133 = icmp ne %struct.Vec3f* %140, null, !dbg !10168
  br i1 %tobool133, label %if.then134, label %if.end140, !dbg !10170

if.then134:                                       ; preds = %land.lhs.true131
  %141 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10171
  %prev_velocity135 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %141, i32 0, i32 9, !dbg !10172
  %142 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity135, align 8, !dbg !10172
  %143 = bitcast %struct.Vec3f* %142 to i8*, !dbg !10173
  %144 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10174
  %velocity136 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %144, i32 0, i32 8, !dbg !10175
  %145 = load %struct.Vec3f*, %struct.Vec3f** %velocity136, align 8, !dbg !10175
  %146 = bitcast %struct.Vec3f* %145 to i8*, !dbg !10173
  %147 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10176
  %total_points137 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %147, i32 0, i32 4, !dbg !10177
  %148 = load i32, i32* %total_points137, align 8, !dbg !10177
  %conv138 = sext i32 %148 to i64, !dbg !10176
  %mul139 = mul i64 %conv138, 12, !dbg !10178
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %146, i64 %mul139, i1 false), !dbg !10173
  br label %if.end140, !dbg !10173

if.end140:                                        ; preds = %if.then134, %land.lhs.true131, %if.then123
  br label %if.end141, !dbg !10179

if.end141:                                        ; preds = %if.end140, %land.lhs.true120, %if.end118
  %149 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10180
  %mesh_bounds = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %149, i32 0, i32 4, !dbg !10181
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %mesh_bounds, i32 0, i32 0, !dbg !10182
  store i32 0, i32* %valid, align 8, !dbg !10183
  store i32 0, i32* %index, align 4, !dbg !10184
  br label %for.cond, !dbg !10186

for.cond:                                         ; preds = %for.inc, %if.end141
  %150 = load i32, i32* %index, align 4, !dbg !10187
  %151 = load i32, i32* %canvasNumOfVerts, align 4, !dbg !10189
  %cmp = icmp slt i32 %150, %151, !dbg !10190
  br i1 %cmp, label %for.body, label %for.end, !dbg !10191

for.body:                                         ; preds = %for.cond
  %152 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10192
  %153 = load i32, i32* %index, align 4, !dbg !10194
  %idxprom = sext i32 %153 to i64, !dbg !10192
  %arrayidx = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %152, i64 %idxprom, !dbg !10192
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx, i32 0, i32 0, !dbg !10195
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !10192
  %154 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10196
  %155 = load i32, i32* %index, align 4, !dbg !10197
  %idxprom143 = sext i32 %155 to i64, !dbg !10196
  %arrayidx144 = getelementptr inbounds %struct.MVert, %struct.MVert* %154, i64 %idxprom143, !dbg !10196
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx144, i32 0, i32 0, !dbg !10198
  %arraydecay145 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !10196
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay145), !dbg !10199
  %156 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10200
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %156, i32 0, i32 47, !dbg !10201
  %arraydecay146 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !10200
  %157 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10202
  %158 = load i32, i32* %index, align 4, !dbg !10203
  %idxprom147 = sext i32 %158 to i64, !dbg !10202
  %arrayidx148 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %157, i64 %idxprom147, !dbg !10202
  %v149 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx148, i32 0, i32 0, !dbg !10204
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %v149, i64 0, i64 0, !dbg !10202
  call void @mul_m4_v3([4 x float]* %arraydecay146, float* %arraydecay150), !dbg !10205
  %159 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10206
  %mesh_bounds151 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %159, i32 0, i32 4, !dbg !10207
  %160 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10208
  %161 = load i32, i32* %index, align 4, !dbg !10209
  %idxprom152 = sext i32 %161 to i64, !dbg !10208
  %arrayidx153 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %160, i64 %idxprom152, !dbg !10208
  %v154 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx153, i32 0, i32 0, !dbg !10210
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %v154, i64 0, i64 0, !dbg !10208
  call void @boundInsert(%struct.Bounds3D* %mesh_bounds151, float* %arraydecay155), !dbg !10211
  br label %for.inc, !dbg !10212

for.inc:                                          ; preds = %for.body
  %162 = load i32, i32* %index, align 4, !dbg !10213
  %inc = add nsw i32 %162, 1, !dbg !10213
  store i32 %inc, i32* %index, align 4, !dbg !10213
  br label %for.cond, !dbg !10214, !llvm.loop !10215

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %index, align 4, !dbg !10217
  br label %for.cond156, !dbg !10219

for.cond156:                                      ; preds = %for.inc491, %for.end
  %163 = load i32, i32* %index, align 4, !dbg !10220
  %164 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10222
  %total_points157 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %164, i32 0, i32 4, !dbg !10223
  %165 = load i32, i32* %total_points157, align 8, !dbg !10223
  %cmp158 = icmp slt i32 %163, %165, !dbg !10224
  br i1 %cmp158, label %for.body160, label %for.end493, !dbg !10225

for.body160:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata [3 x float]* %prev_point, metadata !10226, metadata !DIExpression()), !dbg !10228
  %166 = bitcast [3 x float]* %prev_point to i8*, !dbg !10228
  call void @llvm.memset.p0i8.i64(i8* align 4 %166, i8 0, i64 12, i1 false), !dbg !10228
  %167 = load i32, i32* %do_velocity_data, align 4, !dbg !10229
  %tobool161 = icmp ne i32 %167, 0, !dbg !10229
  br i1 %tobool161, label %land.lhs.true162, label %if.end174, !dbg !10231

land.lhs.true162:                                 ; preds = %for.body160
  %168 = load i32, i32* %new_bdata, align 4, !dbg !10232
  %tobool163 = icmp ne i32 %168, 0, !dbg !10232
  br i1 %tobool163, label %if.end174, label %if.then164, !dbg !10233

if.then164:                                       ; preds = %land.lhs.true162
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %prev_point, i64 0, i64 0, !dbg !10234
  %169 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10236
  %realCoord166 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %169, i32 0, i32 3, !dbg !10237
  %170 = load %struct.Vec3f*, %struct.Vec3f** %realCoord166, align 8, !dbg !10237
  %171 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10238
  %s_pos167 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %171, i32 0, i32 1, !dbg !10239
  %172 = load i32*, i32** %s_pos167, align 8, !dbg !10239
  %173 = load i32, i32* %index, align 4, !dbg !10240
  %idxprom168 = sext i32 %173 to i64, !dbg !10238
  %arrayidx169 = getelementptr inbounds i32, i32* %172, i64 %idxprom168, !dbg !10238
  %174 = load i32, i32* %arrayidx169, align 4, !dbg !10238
  %idxprom170 = sext i32 %174 to i64, !dbg !10236
  %arrayidx171 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %170, i64 %idxprom170, !dbg !10236
  %v172 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx171, i32 0, i32 0, !dbg !10241
  %arraydecay173 = getelementptr inbounds [3 x float], [3 x float]* %v172, i64 0, i64 0, !dbg !10236
  call void @copy_v3_v3(float* %arraydecay165, float* %arraydecay173), !dbg !10242
  br label %if.end174, !dbg !10243

if.end174:                                        ; preds = %if.then164, %land.lhs.true162, %for.body160
  %175 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10244
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %175, i32 0, i32 10, !dbg !10246
  %176 = load i16, i16* %format, align 4, !dbg !10246
  %conv175 = sext i16 %176 to i32, !dbg !10244
  %cmp176 = icmp eq i32 %conv175, 2, !dbg !10247
  br i1 %cmp176, label %if.then178, label %if.else, !dbg !10248

if.then178:                                       ; preds = %if.end174
  call void @llvm.dbg.declare(metadata [3 x float]* %n1, metadata !10249, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.declare(metadata [3 x float]* %n2, metadata !10252, metadata !DIExpression()), !dbg !10253
  call void @llvm.dbg.declare(metadata [3 x float]* %n3, metadata !10254, metadata !DIExpression()), !dbg !10255
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data, metadata !10256, metadata !DIExpression()), !dbg !10257
  %177 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10258
  %format_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %177, i32 0, i32 0, !dbg !10259
  %178 = load i8*, i8** %format_data, align 8, !dbg !10259
  %179 = bitcast i8* %178 to %struct.ImgSeqFormatData*, !dbg !10260
  store %struct.ImgSeqFormatData* %179, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !10257
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint, metadata !10261, metadata !DIExpression()), !dbg !10262
  %180 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !10263
  %uv_p = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %180, i32 0, i32 0, !dbg !10264
  %181 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p, align 8, !dbg !10264
  %182 = load i32, i32* %index, align 4, !dbg !10265
  %idxprom179 = sext i32 %182 to i64, !dbg !10266
  %arrayidx180 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %181, i64 %idxprom179, !dbg !10266
  store %struct.PaintUVPoint* %arrayidx180, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10262
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !10267, metadata !DIExpression()), !dbg !10268
  %183 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10269
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %183, i32 0, i32 18, !dbg !10270
  %184 = load i32, i32* %flags, align 4, !dbg !10270
  %and = and i32 %184, 2, !dbg !10271
  %tobool181 = icmp ne i32 %and, 0, !dbg !10272
  %185 = zext i1 %tobool181 to i64, !dbg !10272
  %cond = select i1 %tobool181, i32 5, i32 1, !dbg !10272
  %186 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10273
  %s_num182 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %186, i32 0, i32 2, !dbg !10274
  %187 = load i32*, i32** %s_num182, align 8, !dbg !10274
  %188 = load i32, i32* %index, align 4, !dbg !10275
  %idxprom183 = sext i32 %188 to i64, !dbg !10273
  %arrayidx184 = getelementptr inbounds i32, i32* %187, i64 %idxprom183, !dbg !10273
  store i32 %cond, i32* %arrayidx184, align 4, !dbg !10276
  %189 = load i32, i32* %index, align 4, !dbg !10277
  %190 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10278
  %s_num185 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %190, i32 0, i32 2, !dbg !10279
  %191 = load i32*, i32** %s_num185, align 8, !dbg !10279
  %192 = load i32, i32* %index, align 4, !dbg !10280
  %idxprom186 = sext i32 %192 to i64, !dbg !10278
  %arrayidx187 = getelementptr inbounds i32, i32* %191, i64 %idxprom186, !dbg !10278
  %193 = load i32, i32* %arrayidx187, align 4, !dbg !10278
  %mul188 = mul nsw i32 %189, %193, !dbg !10281
  %194 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10282
  %s_pos189 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %194, i32 0, i32 1, !dbg !10283
  %195 = load i32*, i32** %s_pos189, align 8, !dbg !10283
  %196 = load i32, i32* %index, align 4, !dbg !10284
  %idxprom190 = sext i32 %196 to i64, !dbg !10282
  %arrayidx191 = getelementptr inbounds i32, i32* %195, i64 %idxprom190, !dbg !10282
  store i32 %mul188, i32* %arrayidx191, align 4, !dbg !10285
  store i32 0, i32* %ss, align 4, !dbg !10286
  br label %for.cond192, !dbg !10288

for.cond192:                                      ; preds = %for.inc228, %if.then178
  %197 = load i32, i32* %ss, align 4, !dbg !10289
  %198 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10291
  %s_num193 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %198, i32 0, i32 2, !dbg !10292
  %199 = load i32*, i32** %s_num193, align 8, !dbg !10292
  %200 = load i32, i32* %index, align 4, !dbg !10293
  %idxprom194 = sext i32 %200 to i64, !dbg !10291
  %arrayidx195 = getelementptr inbounds i32, i32* %199, i64 %idxprom194, !dbg !10291
  %201 = load i32, i32* %arrayidx195, align 4, !dbg !10291
  %cmp196 = icmp slt i32 %197, %201, !dbg !10294
  br i1 %cmp196, label %for.body198, label %for.end230, !dbg !10295

for.body198:                                      ; preds = %for.cond192
  %202 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10296
  %realCoord199 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %202, i32 0, i32 3, !dbg !10298
  %203 = load %struct.Vec3f*, %struct.Vec3f** %realCoord199, align 8, !dbg !10298
  %204 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10299
  %s_pos200 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %204, i32 0, i32 1, !dbg !10300
  %205 = load i32*, i32** %s_pos200, align 8, !dbg !10300
  %206 = load i32, i32* %index, align 4, !dbg !10301
  %idxprom201 = sext i32 %206 to i64, !dbg !10299
  %arrayidx202 = getelementptr inbounds i32, i32* %205, i64 %idxprom201, !dbg !10299
  %207 = load i32, i32* %arrayidx202, align 4, !dbg !10299
  %208 = load i32, i32* %ss, align 4, !dbg !10302
  %add = add nsw i32 %207, %208, !dbg !10303
  %idxprom203 = sext i32 %add to i64, !dbg !10296
  %arrayidx204 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %203, i64 %idxprom203, !dbg !10296
  %v205 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx204, i32 0, i32 0, !dbg !10304
  %arraydecay206 = getelementptr inbounds [3 x float], [3 x float]* %v205, i64 0, i64 0, !dbg !10296
  %209 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10305
  %210 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10306
  %v1 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %210, i32 0, i32 2, !dbg !10307
  %211 = load i32, i32* %v1, align 4, !dbg !10307
  %idxprom207 = zext i32 %211 to i64, !dbg !10305
  %arrayidx208 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %209, i64 %idxprom207, !dbg !10305
  %v209 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx208, i32 0, i32 0, !dbg !10308
  %arraydecay210 = getelementptr inbounds [3 x float], [3 x float]* %v209, i64 0, i64 0, !dbg !10305
  %212 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10309
  %213 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10310
  %v2 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %213, i32 0, i32 3, !dbg !10311
  %214 = load i32, i32* %v2, align 4, !dbg !10311
  %idxprom211 = zext i32 %214 to i64, !dbg !10309
  %arrayidx212 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %212, i64 %idxprom211, !dbg !10309
  %v213 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx212, i32 0, i32 0, !dbg !10312
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %v213, i64 0, i64 0, !dbg !10309
  %215 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10313
  %216 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10314
  %v3 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %216, i32 0, i32 4, !dbg !10315
  %217 = load i32, i32* %v3, align 4, !dbg !10315
  %idxprom215 = zext i32 %217 to i64, !dbg !10313
  %arrayidx216 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %215, i64 %idxprom215, !dbg !10313
  %v217 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx216, i32 0, i32 0, !dbg !10316
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %v217, i64 0, i64 0, !dbg !10313
  %218 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !10317
  %barycentricWeights = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %218, i32 0, i32 1, !dbg !10318
  %219 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights, align 8, !dbg !10318
  %220 = load i32, i32* %index, align 4, !dbg !10319
  %221 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10320
  %s_num219 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %221, i32 0, i32 2, !dbg !10321
  %222 = load i32*, i32** %s_num219, align 8, !dbg !10321
  %223 = load i32, i32* %index, align 4, !dbg !10322
  %idxprom220 = sext i32 %223 to i64, !dbg !10320
  %arrayidx221 = getelementptr inbounds i32, i32* %222, i64 %idxprom220, !dbg !10320
  %224 = load i32, i32* %arrayidx221, align 4, !dbg !10320
  %mul222 = mul nsw i32 %220, %224, !dbg !10323
  %225 = load i32, i32* %ss, align 4, !dbg !10324
  %add223 = add nsw i32 %mul222, %225, !dbg !10325
  %idxprom224 = sext i32 %add223 to i64, !dbg !10317
  %arrayidx225 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %219, i64 %idxprom224, !dbg !10317
  %v226 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx225, i32 0, i32 0, !dbg !10326
  %arraydecay227 = getelementptr inbounds [3 x float], [3 x float]* %v226, i64 0, i64 0, !dbg !10317
  call void @interp_v3_v3v3v3(float* %arraydecay206, float* %arraydecay210, float* %arraydecay214, float* %arraydecay218, float* %arraydecay227), !dbg !10327
  br label %for.inc228, !dbg !10328

for.inc228:                                       ; preds = %for.body198
  %226 = load i32, i32* %ss, align 4, !dbg !10329
  %inc229 = add nsw i32 %226, 1, !dbg !10329
  store i32 %inc229, i32* %ss, align 4, !dbg !10329
  br label %for.cond192, !dbg !10330, !llvm.loop !10331

for.end230:                                       ; preds = %for.cond192
  %arraydecay231 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !10333
  %227 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10334
  %228 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10335
  %v1232 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %228, i32 0, i32 2, !dbg !10336
  %229 = load i32, i32* %v1232, align 4, !dbg !10336
  %idxprom233 = zext i32 %229 to i64, !dbg !10334
  %arrayidx234 = getelementptr inbounds %struct.MVert, %struct.MVert* %227, i64 %idxprom233, !dbg !10334
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx234, i32 0, i32 1, !dbg !10337
  %arraydecay235 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !10334
  call void @normal_short_to_float_v3(float* %arraydecay231, i16* %arraydecay235), !dbg !10338
  %arraydecay236 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !10339
  %230 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10340
  %231 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10341
  %v2237 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %231, i32 0, i32 3, !dbg !10342
  %232 = load i32, i32* %v2237, align 4, !dbg !10342
  %idxprom238 = zext i32 %232 to i64, !dbg !10340
  %arrayidx239 = getelementptr inbounds %struct.MVert, %struct.MVert* %230, i64 %idxprom238, !dbg !10340
  %no240 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx239, i32 0, i32 1, !dbg !10343
  %arraydecay241 = getelementptr inbounds [3 x i16], [3 x i16]* %no240, i64 0, i64 0, !dbg !10340
  call void @normal_short_to_float_v3(float* %arraydecay236, i16* %arraydecay241), !dbg !10344
  %arraydecay242 = getelementptr inbounds [3 x float], [3 x float]* %n3, i64 0, i64 0, !dbg !10345
  %233 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10346
  %234 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint, align 8, !dbg !10347
  %v3243 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %234, i32 0, i32 4, !dbg !10348
  %235 = load i32, i32* %v3243, align 4, !dbg !10348
  %idxprom244 = zext i32 %235 to i64, !dbg !10346
  %arrayidx245 = getelementptr inbounds %struct.MVert, %struct.MVert* %233, i64 %idxprom244, !dbg !10346
  %no246 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx245, i32 0, i32 1, !dbg !10349
  %arraydecay247 = getelementptr inbounds [3 x i16], [3 x i16]* %no246, i64 0, i64 0, !dbg !10346
  call void @normal_short_to_float_v3(float* %arraydecay242, i16* %arraydecay247), !dbg !10350
  %236 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10351
  %bNormal248 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %236, i32 0, i32 0, !dbg !10352
  %237 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal248, align 8, !dbg !10352
  %238 = load i32, i32* %index, align 4, !dbg !10353
  %idxprom249 = sext i32 %238 to i64, !dbg !10351
  %arrayidx250 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %237, i64 %idxprom249, !dbg !10351
  %invNorm = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx250, i32 0, i32 0, !dbg !10354
  %arraydecay251 = getelementptr inbounds [3 x float], [3 x float]* %invNorm, i64 0, i64 0, !dbg !10351
  %arraydecay252 = getelementptr inbounds [3 x float], [3 x float]* %n1, i64 0, i64 0, !dbg !10355
  %arraydecay253 = getelementptr inbounds [3 x float], [3 x float]* %n2, i64 0, i64 0, !dbg !10356
  %arraydecay254 = getelementptr inbounds [3 x float], [3 x float]* %n3, i64 0, i64 0, !dbg !10357
  %239 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data, align 8, !dbg !10358
  %barycentricWeights255 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %239, i32 0, i32 1, !dbg !10359
  %240 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights255, align 8, !dbg !10359
  %241 = load i32, i32* %index, align 4, !dbg !10360
  %242 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10361
  %s_num256 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %242, i32 0, i32 2, !dbg !10362
  %243 = load i32*, i32** %s_num256, align 8, !dbg !10362
  %244 = load i32, i32* %index, align 4, !dbg !10363
  %idxprom257 = sext i32 %244 to i64, !dbg !10361
  %arrayidx258 = getelementptr inbounds i32, i32* %243, i64 %idxprom257, !dbg !10361
  %245 = load i32, i32* %arrayidx258, align 4, !dbg !10361
  %mul259 = mul nsw i32 %241, %245, !dbg !10364
  %idxprom260 = sext i32 %mul259 to i64, !dbg !10358
  %arrayidx261 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %240, i64 %idxprom260, !dbg !10358
  %v262 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx261, i32 0, i32 0, !dbg !10365
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %v262, i64 0, i64 0, !dbg !10358
  call void @interp_v3_v3v3v3(float* %arraydecay251, float* %arraydecay252, float* %arraydecay253, float* %arraydecay254, float* %arraydecay263), !dbg !10366
  %246 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10367
  %obmat264 = getelementptr inbounds %struct.Object, %struct.Object* %246, i32 0, i32 47, !dbg !10368
  %arraydecay265 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat264, i64 0, i64 0, !dbg !10367
  %247 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10369
  %bNormal266 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %247, i32 0, i32 0, !dbg !10370
  %248 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal266, align 8, !dbg !10370
  %249 = load i32, i32* %index, align 4, !dbg !10371
  %idxprom267 = sext i32 %249 to i64, !dbg !10369
  %arrayidx268 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %248, i64 %idxprom267, !dbg !10369
  %invNorm269 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx268, i32 0, i32 0, !dbg !10372
  %arraydecay270 = getelementptr inbounds [3 x float], [3 x float]* %invNorm269, i64 0, i64 0, !dbg !10369
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay265, float* %arraydecay270), !dbg !10373
  %250 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10374
  %bNormal271 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %250, i32 0, i32 0, !dbg !10375
  %251 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal271, align 8, !dbg !10375
  %252 = load i32, i32* %index, align 4, !dbg !10376
  %idxprom272 = sext i32 %252 to i64, !dbg !10374
  %arrayidx273 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %251, i64 %idxprom272, !dbg !10374
  %invNorm274 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx273, i32 0, i32 0, !dbg !10377
  %arraydecay275 = getelementptr inbounds [3 x float], [3 x float]* %invNorm274, i64 0, i64 0, !dbg !10374
  %call276 = call float @normalize_v3(float* %arraydecay275), !dbg !10378
  %253 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10379
  %bNormal277 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %253, i32 0, i32 0, !dbg !10380
  %254 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal277, align 8, !dbg !10380
  %255 = load i32, i32* %index, align 4, !dbg !10381
  %idxprom278 = sext i32 %255 to i64, !dbg !10379
  %arrayidx279 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %254, i64 %idxprom278, !dbg !10379
  %invNorm280 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx279, i32 0, i32 0, !dbg !10382
  %arraydecay281 = getelementptr inbounds [3 x float], [3 x float]* %invNorm280, i64 0, i64 0, !dbg !10379
  call void @negate_v3(float* %arraydecay281), !dbg !10383
  br label %if.end397, !dbg !10384

if.else:                                          ; preds = %if.end174
  %256 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10385
  %format282 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %256, i32 0, i32 10, !dbg !10387
  %257 = load i16, i16* %format282, align 4, !dbg !10387
  %conv283 = sext i16 %257 to i32, !dbg !10385
  %cmp284 = icmp eq i32 %conv283, 1, !dbg !10388
  br i1 %cmp284, label %if.then286, label %if.end396, !dbg !10389

if.then286:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %ss287, metadata !10390, metadata !DIExpression()), !dbg !10392
  %258 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10393
  %flags288 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %258, i32 0, i32 18, !dbg !10395
  %259 = load i32, i32* %flags288, align 4, !dbg !10395
  %and289 = and i32 %259, 2, !dbg !10396
  %tobool290 = icmp ne i32 %and289, 0, !dbg !10396
  br i1 %tobool290, label %land.lhs.true291, label %if.else306, !dbg !10397

land.lhs.true291:                                 ; preds = %if.then286
  %260 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10398
  %tobool292 = icmp ne %struct.PaintAdjData* %260, null, !dbg !10398
  br i1 %tobool292, label %if.then293, label %if.else306, !dbg !10399

if.then293:                                       ; preds = %land.lhs.true291
  %261 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10400
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %261, i32 0, i32 2, !dbg !10402
  %262 = load i32*, i32** %n_num, align 8, !dbg !10402
  %263 = load i32, i32* %index, align 4, !dbg !10403
  %idxprom294 = sext i32 %263 to i64, !dbg !10400
  %arrayidx295 = getelementptr inbounds i32, i32* %262, i64 %idxprom294, !dbg !10400
  %264 = load i32, i32* %arrayidx295, align 4, !dbg !10400
  %add296 = add nsw i32 %264, 1, !dbg !10404
  %265 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10405
  %s_num297 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %265, i32 0, i32 2, !dbg !10406
  %266 = load i32*, i32** %s_num297, align 8, !dbg !10406
  %267 = load i32, i32* %index, align 4, !dbg !10407
  %idxprom298 = sext i32 %267 to i64, !dbg !10405
  %arrayidx299 = getelementptr inbounds i32, i32* %266, i64 %idxprom298, !dbg !10405
  store i32 %add296, i32* %arrayidx299, align 4, !dbg !10408
  %268 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10409
  %n_index = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %268, i32 0, i32 1, !dbg !10410
  %269 = load i32*, i32** %n_index, align 8, !dbg !10410
  %270 = load i32, i32* %index, align 4, !dbg !10411
  %idxprom300 = sext i32 %270 to i64, !dbg !10409
  %arrayidx301 = getelementptr inbounds i32, i32* %269, i64 %idxprom300, !dbg !10409
  %271 = load i32, i32* %arrayidx301, align 4, !dbg !10409
  %272 = load i32, i32* %index, align 4, !dbg !10412
  %add302 = add nsw i32 %271, %272, !dbg !10413
  %273 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10414
  %s_pos303 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %273, i32 0, i32 1, !dbg !10415
  %274 = load i32*, i32** %s_pos303, align 8, !dbg !10415
  %275 = load i32, i32* %index, align 4, !dbg !10416
  %idxprom304 = sext i32 %275 to i64, !dbg !10414
  %arrayidx305 = getelementptr inbounds i32, i32* %274, i64 %idxprom304, !dbg !10414
  store i32 %add302, i32* %arrayidx305, align 4, !dbg !10417
  br label %if.end313, !dbg !10418

if.else306:                                       ; preds = %land.lhs.true291, %if.then286
  %276 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10419
  %s_num307 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %276, i32 0, i32 2, !dbg !10421
  %277 = load i32*, i32** %s_num307, align 8, !dbg !10421
  %278 = load i32, i32* %index, align 4, !dbg !10422
  %idxprom308 = sext i32 %278 to i64, !dbg !10419
  %arrayidx309 = getelementptr inbounds i32, i32* %277, i64 %idxprom308, !dbg !10419
  store i32 1, i32* %arrayidx309, align 4, !dbg !10423
  %279 = load i32, i32* %index, align 4, !dbg !10424
  %280 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10425
  %s_pos310 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %280, i32 0, i32 1, !dbg !10426
  %281 = load i32*, i32** %s_pos310, align 8, !dbg !10426
  %282 = load i32, i32* %index, align 4, !dbg !10427
  %idxprom311 = sext i32 %282 to i64, !dbg !10425
  %arrayidx312 = getelementptr inbounds i32, i32* %281, i64 %idxprom311, !dbg !10425
  store i32 %279, i32* %arrayidx312, align 4, !dbg !10428
  br label %if.end313

if.end313:                                        ; preds = %if.else306, %if.then293
  store i32 0, i32* %ss287, align 4, !dbg !10429
  br label %for.cond314, !dbg !10431

for.cond314:                                      ; preds = %for.inc366, %if.end313
  %283 = load i32, i32* %ss287, align 4, !dbg !10432
  %284 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10434
  %s_num315 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %284, i32 0, i32 2, !dbg !10435
  %285 = load i32*, i32** %s_num315, align 8, !dbg !10435
  %286 = load i32, i32* %index, align 4, !dbg !10436
  %idxprom316 = sext i32 %286 to i64, !dbg !10434
  %arrayidx317 = getelementptr inbounds i32, i32* %285, i64 %idxprom316, !dbg !10434
  %287 = load i32, i32* %arrayidx317, align 4, !dbg !10434
  %cmp318 = icmp slt i32 %283, %287, !dbg !10437
  br i1 %cmp318, label %for.body320, label %for.end368, !dbg !10438

for.body320:                                      ; preds = %for.cond314
  %288 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10439
  %realCoord321 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %288, i32 0, i32 3, !dbg !10441
  %289 = load %struct.Vec3f*, %struct.Vec3f** %realCoord321, align 8, !dbg !10441
  %290 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10442
  %s_pos322 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %290, i32 0, i32 1, !dbg !10443
  %291 = load i32*, i32** %s_pos322, align 8, !dbg !10443
  %292 = load i32, i32* %index, align 4, !dbg !10444
  %idxprom323 = sext i32 %292 to i64, !dbg !10442
  %arrayidx324 = getelementptr inbounds i32, i32* %291, i64 %idxprom323, !dbg !10442
  %293 = load i32, i32* %arrayidx324, align 4, !dbg !10442
  %294 = load i32, i32* %ss287, align 4, !dbg !10445
  %add325 = add nsw i32 %293, %294, !dbg !10446
  %idxprom326 = sext i32 %add325 to i64, !dbg !10439
  %arrayidx327 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %289, i64 %idxprom326, !dbg !10439
  %v328 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx327, i32 0, i32 0, !dbg !10447
  %arraydecay329 = getelementptr inbounds [3 x float], [3 x float]* %v328, i64 0, i64 0, !dbg !10439
  %295 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10448
  %296 = load i32, i32* %index, align 4, !dbg !10449
  %idxprom330 = sext i32 %296 to i64, !dbg !10448
  %arrayidx331 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %295, i64 %idxprom330, !dbg !10448
  %v332 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx331, i32 0, i32 0, !dbg !10450
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %v332, i64 0, i64 0, !dbg !10448
  call void @copy_v3_v3(float* %arraydecay329, float* %arraydecay333), !dbg !10451
  %297 = load i32, i32* %ss287, align 4, !dbg !10452
  %cmp334 = icmp sgt i32 %297, 0, !dbg !10454
  br i1 %cmp334, label %if.then336, label %if.end365, !dbg !10455

if.then336:                                       ; preds = %for.body320
  call void @llvm.dbg.declare(metadata i32* %t_index, metadata !10456, metadata !DIExpression()), !dbg !10458
  %298 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10459
  %n_index337 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %298, i32 0, i32 1, !dbg !10460
  %299 = load i32*, i32** %n_index337, align 8, !dbg !10460
  %300 = load i32, i32* %index, align 4, !dbg !10461
  %idxprom338 = sext i32 %300 to i64, !dbg !10459
  %arrayidx339 = getelementptr inbounds i32, i32* %299, i64 %idxprom338, !dbg !10459
  %301 = load i32, i32* %arrayidx339, align 4, !dbg !10459
  %302 = load i32, i32* %ss287, align 4, !dbg !10462
  %sub = sub nsw i32 %302, 1, !dbg !10463
  %add340 = add nsw i32 %301, %sub, !dbg !10464
  store i32 %add340, i32* %t_index, align 4, !dbg !10458
  %303 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10465
  %realCoord341 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %303, i32 0, i32 3, !dbg !10466
  %304 = load %struct.Vec3f*, %struct.Vec3f** %realCoord341, align 8, !dbg !10466
  %305 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10467
  %s_pos342 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %305, i32 0, i32 1, !dbg !10468
  %306 = load i32*, i32** %s_pos342, align 8, !dbg !10468
  %307 = load i32, i32* %index, align 4, !dbg !10469
  %idxprom343 = sext i32 %307 to i64, !dbg !10467
  %arrayidx344 = getelementptr inbounds i32, i32* %306, i64 %idxprom343, !dbg !10467
  %308 = load i32, i32* %arrayidx344, align 4, !dbg !10467
  %309 = load i32, i32* %ss287, align 4, !dbg !10470
  %add345 = add nsw i32 %308, %309, !dbg !10471
  %idxprom346 = sext i32 %add345 to i64, !dbg !10465
  %arrayidx347 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %304, i64 %idxprom346, !dbg !10465
  %v348 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx347, i32 0, i32 0, !dbg !10472
  %arraydecay349 = getelementptr inbounds [3 x float], [3 x float]* %v348, i64 0, i64 0, !dbg !10465
  call void @mul_v3_fl(float* %arraydecay349, float 0x3FE5555560000000), !dbg !10473
  %310 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10474
  %realCoord350 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %310, i32 0, i32 3, !dbg !10475
  %311 = load %struct.Vec3f*, %struct.Vec3f** %realCoord350, align 8, !dbg !10475
  %312 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10476
  %s_pos351 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %312, i32 0, i32 1, !dbg !10477
  %313 = load i32*, i32** %s_pos351, align 8, !dbg !10477
  %314 = load i32, i32* %index, align 4, !dbg !10478
  %idxprom352 = sext i32 %314 to i64, !dbg !10476
  %arrayidx353 = getelementptr inbounds i32, i32* %313, i64 %idxprom352, !dbg !10476
  %315 = load i32, i32* %arrayidx353, align 4, !dbg !10476
  %316 = load i32, i32* %ss287, align 4, !dbg !10479
  %add354 = add nsw i32 %315, %316, !dbg !10480
  %idxprom355 = sext i32 %add354 to i64, !dbg !10474
  %arrayidx356 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %311, i64 %idxprom355, !dbg !10474
  %v357 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx356, i32 0, i32 0, !dbg !10481
  %arraydecay358 = getelementptr inbounds [3 x float], [3 x float]* %v357, i64 0, i64 0, !dbg !10474
  %317 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10482
  %318 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10483
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %318, i32 0, i32 0, !dbg !10484
  %319 = load i32*, i32** %n_target, align 8, !dbg !10484
  %320 = load i32, i32* %t_index, align 4, !dbg !10485
  %idxprom359 = sext i32 %320 to i64, !dbg !10483
  %arrayidx360 = getelementptr inbounds i32, i32* %319, i64 %idxprom359, !dbg !10483
  %321 = load i32, i32* %arrayidx360, align 4, !dbg !10483
  %idxprom361 = sext i32 %321 to i64, !dbg !10482
  %arrayidx362 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %317, i64 %idxprom361, !dbg !10482
  %v363 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx362, i32 0, i32 0, !dbg !10486
  %arraydecay364 = getelementptr inbounds [3 x float], [3 x float]* %v363, i64 0, i64 0, !dbg !10482
  call void @madd_v3_v3fl(float* %arraydecay358, float* %arraydecay364, float 0x3FD5555560000000), !dbg !10487
  br label %if.end365, !dbg !10488

if.end365:                                        ; preds = %if.then336, %for.body320
  br label %for.inc366, !dbg !10489

for.inc366:                                       ; preds = %if.end365
  %322 = load i32, i32* %ss287, align 4, !dbg !10490
  %inc367 = add nsw i32 %322, 1, !dbg !10490
  store i32 %inc367, i32* %ss287, align 4, !dbg !10490
  br label %for.cond314, !dbg !10491, !llvm.loop !10492

for.end368:                                       ; preds = %for.cond314
  %323 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10494
  %bNormal369 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %323, i32 0, i32 0, !dbg !10495
  %324 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal369, align 8, !dbg !10495
  %325 = load i32, i32* %index, align 4, !dbg !10496
  %idxprom370 = sext i32 %325 to i64, !dbg !10494
  %arrayidx371 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %324, i64 %idxprom370, !dbg !10494
  %invNorm372 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx371, i32 0, i32 0, !dbg !10497
  %arraydecay373 = getelementptr inbounds [3 x float], [3 x float]* %invNorm372, i64 0, i64 0, !dbg !10494
  %326 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10498
  %327 = load i32, i32* %index, align 4, !dbg !10499
  %idxprom374 = sext i32 %327 to i64, !dbg !10498
  %arrayidx375 = getelementptr inbounds %struct.MVert, %struct.MVert* %326, i64 %idxprom374, !dbg !10498
  %no376 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx375, i32 0, i32 1, !dbg !10500
  %arraydecay377 = getelementptr inbounds [3 x i16], [3 x i16]* %no376, i64 0, i64 0, !dbg !10498
  call void @normal_short_to_float_v3(float* %arraydecay373, i16* %arraydecay377), !dbg !10501
  %328 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10502
  %obmat378 = getelementptr inbounds %struct.Object, %struct.Object* %328, i32 0, i32 47, !dbg !10503
  %arraydecay379 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat378, i64 0, i64 0, !dbg !10502
  %329 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10504
  %bNormal380 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %329, i32 0, i32 0, !dbg !10505
  %330 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal380, align 8, !dbg !10505
  %331 = load i32, i32* %index, align 4, !dbg !10506
  %idxprom381 = sext i32 %331 to i64, !dbg !10504
  %arrayidx382 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %330, i64 %idxprom381, !dbg !10504
  %invNorm383 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx382, i32 0, i32 0, !dbg !10507
  %arraydecay384 = getelementptr inbounds [3 x float], [3 x float]* %invNorm383, i64 0, i64 0, !dbg !10504
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay379, float* %arraydecay384), !dbg !10508
  %332 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10509
  %bNormal385 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %332, i32 0, i32 0, !dbg !10510
  %333 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal385, align 8, !dbg !10510
  %334 = load i32, i32* %index, align 4, !dbg !10511
  %idxprom386 = sext i32 %334 to i64, !dbg !10509
  %arrayidx387 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %333, i64 %idxprom386, !dbg !10509
  %invNorm388 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx387, i32 0, i32 0, !dbg !10512
  %arraydecay389 = getelementptr inbounds [3 x float], [3 x float]* %invNorm388, i64 0, i64 0, !dbg !10509
  %call390 = call float @normalize_v3(float* %arraydecay389), !dbg !10513
  %335 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10514
  %bNormal391 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %335, i32 0, i32 0, !dbg !10515
  %336 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal391, align 8, !dbg !10515
  %337 = load i32, i32* %index, align 4, !dbg !10516
  %idxprom392 = sext i32 %337 to i64, !dbg !10514
  %arrayidx393 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %336, i64 %idxprom392, !dbg !10514
  %invNorm394 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx393, i32 0, i32 0, !dbg !10517
  %arraydecay395 = getelementptr inbounds [3 x float], [3 x float]* %invNorm394, i64 0, i64 0, !dbg !10514
  call void @negate_v3(float* %arraydecay395), !dbg !10518
  br label %if.end396, !dbg !10519

if.end396:                                        ; preds = %for.end368, %if.else
  br label %if.end397

if.end397:                                        ; preds = %if.end396, %for.end230
  %338 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10520
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %338, i32 0, i32 11, !dbg !10522
  %339 = load i16, i16* %type, align 2, !dbg !10522
  %conv398 = sext i16 %339 to i32, !dbg !10520
  %cmp399 = icmp eq i32 %conv398, 1, !dbg !10523
  br i1 %cmp399, label %if.then406, label %lor.lhs.false401, !dbg !10524

lor.lhs.false401:                                 ; preds = %if.end397
  %340 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10525
  %type402 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %340, i32 0, i32 11, !dbg !10526
  %341 = load i16, i16* %type402, align 2, !dbg !10526
  %conv403 = sext i16 %341 to i32, !dbg !10525
  %cmp404 = icmp eq i32 %conv403, 3, !dbg !10527
  br i1 %cmp404, label %if.then406, label %if.end468, !dbg !10528

if.then406:                                       ; preds = %lor.lhs.false401, %if.end397
  call void @llvm.dbg.declare(metadata [3 x float]* %temp_nor, metadata !10529, metadata !DIExpression()), !dbg !10531
  %342 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10532
  %format407 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %342, i32 0, i32 10, !dbg !10534
  %343 = load i16, i16* %format407, align 4, !dbg !10534
  %conv408 = sext i16 %343 to i32, !dbg !10532
  %cmp409 = icmp eq i32 %conv408, 1, !dbg !10535
  br i1 %cmp409, label %if.then411, label %if.else419, !dbg !10536

if.then411:                                       ; preds = %if.then406
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %temp_nor, i64 0, i64 0, !dbg !10537
  %344 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10539
  %345 = load i32, i32* %index, align 4, !dbg !10540
  %idxprom413 = sext i32 %345 to i64, !dbg !10539
  %arrayidx414 = getelementptr inbounds %struct.MVert, %struct.MVert* %344, i64 %idxprom413, !dbg !10539
  %no415 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx414, i32 0, i32 1, !dbg !10541
  %arraydecay416 = getelementptr inbounds [3 x i16], [3 x i16]* %no415, i64 0, i64 0, !dbg !10539
  call void @normal_short_to_float_v3(float* %arraydecay412, i16* %arraydecay416), !dbg !10542
  %arraydecay417 = getelementptr inbounds [3 x float], [3 x float]* %temp_nor, i64 0, i64 0, !dbg !10543
  %call418 = call float @normalize_v3(float* %arraydecay417), !dbg !10544
  br label %if.end460, !dbg !10545

if.else419:                                       ; preds = %if.then406
  call void @llvm.dbg.declare(metadata [3 x float]* %n1420, metadata !10546, metadata !DIExpression()), !dbg !10548
  call void @llvm.dbg.declare(metadata [3 x float]* %n2421, metadata !10549, metadata !DIExpression()), !dbg !10550
  call void @llvm.dbg.declare(metadata [3 x float]* %n3422, metadata !10551, metadata !DIExpression()), !dbg !10552
  call void @llvm.dbg.declare(metadata %struct.ImgSeqFormatData** %f_data423, metadata !10553, metadata !DIExpression()), !dbg !10554
  %346 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10555
  %format_data424 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %346, i32 0, i32 0, !dbg !10556
  %347 = load i8*, i8** %format_data424, align 8, !dbg !10556
  %348 = bitcast i8* %347 to %struct.ImgSeqFormatData*, !dbg !10557
  store %struct.ImgSeqFormatData* %348, %struct.ImgSeqFormatData** %f_data423, align 8, !dbg !10554
  call void @llvm.dbg.declare(metadata %struct.PaintUVPoint** %tPoint425, metadata !10558, metadata !DIExpression()), !dbg !10559
  %349 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data423, align 8, !dbg !10560
  %uv_p426 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %349, i32 0, i32 0, !dbg !10561
  %350 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %uv_p426, align 8, !dbg !10561
  %351 = load i32, i32* %index, align 4, !dbg !10562
  %idxprom427 = sext i32 %351 to i64, !dbg !10563
  %arrayidx428 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %350, i64 %idxprom427, !dbg !10563
  store %struct.PaintUVPoint* %arrayidx428, %struct.PaintUVPoint** %tPoint425, align 8, !dbg !10559
  %arraydecay429 = getelementptr inbounds [3 x float], [3 x float]* %n1420, i64 0, i64 0, !dbg !10564
  %352 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10565
  %353 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint425, align 8, !dbg !10566
  %v1430 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %353, i32 0, i32 2, !dbg !10567
  %354 = load i32, i32* %v1430, align 4, !dbg !10567
  %idxprom431 = zext i32 %354 to i64, !dbg !10565
  %arrayidx432 = getelementptr inbounds %struct.MVert, %struct.MVert* %352, i64 %idxprom431, !dbg !10565
  %no433 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx432, i32 0, i32 1, !dbg !10568
  %arraydecay434 = getelementptr inbounds [3 x i16], [3 x i16]* %no433, i64 0, i64 0, !dbg !10565
  call void @normal_short_to_float_v3(float* %arraydecay429, i16* %arraydecay434), !dbg !10569
  %arraydecay435 = getelementptr inbounds [3 x float], [3 x float]* %n2421, i64 0, i64 0, !dbg !10570
  %355 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10571
  %356 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint425, align 8, !dbg !10572
  %v2436 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %356, i32 0, i32 3, !dbg !10573
  %357 = load i32, i32* %v2436, align 4, !dbg !10573
  %idxprom437 = zext i32 %357 to i64, !dbg !10571
  %arrayidx438 = getelementptr inbounds %struct.MVert, %struct.MVert* %355, i64 %idxprom437, !dbg !10571
  %no439 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx438, i32 0, i32 1, !dbg !10574
  %arraydecay440 = getelementptr inbounds [3 x i16], [3 x i16]* %no439, i64 0, i64 0, !dbg !10571
  call void @normal_short_to_float_v3(float* %arraydecay435, i16* %arraydecay440), !dbg !10575
  %arraydecay441 = getelementptr inbounds [3 x float], [3 x float]* %n3422, i64 0, i64 0, !dbg !10576
  %358 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10577
  %359 = load %struct.PaintUVPoint*, %struct.PaintUVPoint** %tPoint425, align 8, !dbg !10578
  %v3442 = getelementptr inbounds %struct.PaintUVPoint, %struct.PaintUVPoint* %359, i32 0, i32 4, !dbg !10579
  %360 = load i32, i32* %v3442, align 4, !dbg !10579
  %idxprom443 = zext i32 %360 to i64, !dbg !10577
  %arrayidx444 = getelementptr inbounds %struct.MVert, %struct.MVert* %358, i64 %idxprom443, !dbg !10577
  %no445 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx444, i32 0, i32 1, !dbg !10580
  %arraydecay446 = getelementptr inbounds [3 x i16], [3 x i16]* %no445, i64 0, i64 0, !dbg !10577
  call void @normal_short_to_float_v3(float* %arraydecay441, i16* %arraydecay446), !dbg !10581
  %arraydecay447 = getelementptr inbounds [3 x float], [3 x float]* %temp_nor, i64 0, i64 0, !dbg !10582
  %arraydecay448 = getelementptr inbounds [3 x float], [3 x float]* %n1420, i64 0, i64 0, !dbg !10583
  %arraydecay449 = getelementptr inbounds [3 x float], [3 x float]* %n2421, i64 0, i64 0, !dbg !10584
  %arraydecay450 = getelementptr inbounds [3 x float], [3 x float]* %n3422, i64 0, i64 0, !dbg !10585
  %361 = load %struct.ImgSeqFormatData*, %struct.ImgSeqFormatData** %f_data423, align 8, !dbg !10586
  %barycentricWeights451 = getelementptr inbounds %struct.ImgSeqFormatData, %struct.ImgSeqFormatData* %361, i32 0, i32 1, !dbg !10587
  %362 = load %struct.Vec3f*, %struct.Vec3f** %barycentricWeights451, align 8, !dbg !10587
  %363 = load i32, i32* %index, align 4, !dbg !10588
  %364 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10589
  %s_num452 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %364, i32 0, i32 2, !dbg !10590
  %365 = load i32*, i32** %s_num452, align 8, !dbg !10590
  %366 = load i32, i32* %index, align 4, !dbg !10591
  %idxprom453 = sext i32 %366 to i64, !dbg !10589
  %arrayidx454 = getelementptr inbounds i32, i32* %365, i64 %idxprom453, !dbg !10589
  %367 = load i32, i32* %arrayidx454, align 4, !dbg !10589
  %mul455 = mul nsw i32 %363, %367, !dbg !10592
  %idxprom456 = sext i32 %mul455 to i64, !dbg !10586
  %arrayidx457 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %362, i64 %idxprom456, !dbg !10586
  %v458 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx457, i32 0, i32 0, !dbg !10593
  %arraydecay459 = getelementptr inbounds [3 x float], [3 x float]* %v458, i64 0, i64 0, !dbg !10586
  call void @interp_v3_v3v3v3(float* %arraydecay447, float* %arraydecay448, float* %arraydecay449, float* %arraydecay450, float* %arraydecay459), !dbg !10594
  br label %if.end460

if.end460:                                        ; preds = %if.else419, %if.then411
  %arraydecay461 = getelementptr inbounds [3 x float], [3 x float]* %temp_nor, i64 0, i64 0, !dbg !10595
  %368 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10596
  %size = getelementptr inbounds %struct.Object, %struct.Object* %368, i32 0, i32 36, !dbg !10597
  %arraydecay462 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !10596
  call void @mul_v3_v3(float* %arraydecay461, float* %arraydecay462), !dbg !10598
  %arraydecay463 = getelementptr inbounds [3 x float], [3 x float]* %temp_nor, i64 0, i64 0, !dbg !10599
  %call464 = call float @len_v3(float* %arraydecay463), !dbg !10600
  %369 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10601
  %bNormal465 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %369, i32 0, i32 0, !dbg !10602
  %370 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal465, align 8, !dbg !10602
  %371 = load i32, i32* %index, align 4, !dbg !10603
  %idxprom466 = sext i32 %371 to i64, !dbg !10601
  %arrayidx467 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %370, i64 %idxprom466, !dbg !10601
  %normal_scale = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx467, i32 0, i32 1, !dbg !10604
  store float %call464, float* %normal_scale, align 4, !dbg !10605
  br label %if.end468, !dbg !10606

if.end468:                                        ; preds = %if.end460, %lor.lhs.false401
  %372 = load i32, i32* %do_velocity_data, align 4, !dbg !10607
  %tobool469 = icmp ne i32 %372, 0, !dbg !10607
  br i1 %tobool469, label %land.lhs.true470, label %if.end490, !dbg !10609

land.lhs.true470:                                 ; preds = %if.end468
  %373 = load i32, i32* %new_bdata, align 4, !dbg !10610
  %tobool471 = icmp ne i32 %373, 0, !dbg !10610
  br i1 %tobool471, label %if.end490, label %land.lhs.true472, !dbg !10611

land.lhs.true472:                                 ; preds = %land.lhs.true470
  %374 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10612
  %clear473 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %374, i32 0, i32 13, !dbg !10613
  %375 = load i32, i32* %clear473, align 8, !dbg !10613
  %tobool474 = icmp ne i32 %375, 0, !dbg !10612
  br i1 %tobool474, label %if.end490, label %if.then475, !dbg !10614

if.then475:                                       ; preds = %land.lhs.true472
  %376 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10615
  %velocity476 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %376, i32 0, i32 8, !dbg !10617
  %377 = load %struct.Vec3f*, %struct.Vec3f** %velocity476, align 8, !dbg !10617
  %378 = load i32, i32* %index, align 4, !dbg !10618
  %idxprom477 = sext i32 %378 to i64, !dbg !10615
  %arrayidx478 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %377, i64 %idxprom477, !dbg !10615
  %v479 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx478, i32 0, i32 0, !dbg !10619
  %arraydecay480 = getelementptr inbounds [3 x float], [3 x float]* %v479, i64 0, i64 0, !dbg !10615
  %379 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10620
  %realCoord481 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %379, i32 0, i32 3, !dbg !10621
  %380 = load %struct.Vec3f*, %struct.Vec3f** %realCoord481, align 8, !dbg !10621
  %381 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10622
  %s_pos482 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %381, i32 0, i32 1, !dbg !10623
  %382 = load i32*, i32** %s_pos482, align 8, !dbg !10623
  %383 = load i32, i32* %index, align 4, !dbg !10624
  %idxprom483 = sext i32 %383 to i64, !dbg !10622
  %arrayidx484 = getelementptr inbounds i32, i32* %382, i64 %idxprom483, !dbg !10622
  %384 = load i32, i32* %arrayidx484, align 4, !dbg !10622
  %idxprom485 = sext i32 %384 to i64, !dbg !10620
  %arrayidx486 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %380, i64 %idxprom485, !dbg !10620
  %v487 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx486, i32 0, i32 0, !dbg !10625
  %arraydecay488 = getelementptr inbounds [3 x float], [3 x float]* %v487, i64 0, i64 0, !dbg !10620
  %arraydecay489 = getelementptr inbounds [3 x float], [3 x float]* %prev_point, i64 0, i64 0, !dbg !10626
  call void @sub_v3_v3v3(float* %arraydecay480, float* %arraydecay488, float* %arraydecay489), !dbg !10627
  br label %if.end490, !dbg !10628

if.end490:                                        ; preds = %if.then475, %land.lhs.true472, %land.lhs.true470, %if.end468
  br label %for.inc491, !dbg !10629

for.inc491:                                       ; preds = %if.end490
  %385 = load i32, i32* %index, align 4, !dbg !10630
  %inc492 = add nsw i32 %385, 1, !dbg !10630
  store i32 %inc492, i32* %index, align 4, !dbg !10630
  br label %for.cond156, !dbg !10631, !llvm.loop !10632

for.end493:                                       ; preds = %for.cond156
  %386 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10634
  %387 = load %struct.Vec3f*, %struct.Vec3f** %canvas_verts, align 8, !dbg !10635
  %388 = bitcast %struct.Vec3f* %387 to i8*, !dbg !10635
  call void %386(i8* %388), !dbg !10634
  %389 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10636
  call void @surfaceGenerateGrid(%struct.DynamicPaintSurface* %389), !dbg !10637
  %390 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10638
  call void @dynamicPaint_prepareAdjacencyData(%struct.DynamicPaintSurface* %390, i32 0), !dbg !10639
  %391 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10640
  %prev_obmat = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %391, i32 0, i32 12, !dbg !10641
  %arraydecay494 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 0, !dbg !10640
  %392 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10642
  %obmat495 = getelementptr inbounds %struct.Object, %struct.Object* %392, i32 0, i32 47, !dbg !10643
  %arraydecay496 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat495, i64 0, i64 0, !dbg !10642
  call void @copy_m4_m4([4 x float]* %arraydecay494, [4 x float]* %arraydecay496), !dbg !10644
  %393 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10645
  %prev_verts497 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %393, i32 0, i32 11, !dbg !10646
  %394 = load %struct.MVert*, %struct.MVert** %prev_verts497, align 8, !dbg !10646
  %395 = bitcast %struct.MVert* %394 to i8*, !dbg !10647
  %396 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !10648
  %397 = bitcast %struct.MVert* %396 to i8*, !dbg !10647
  %398 = load i32, i32* %canvasNumOfVerts, align 4, !dbg !10649
  %conv498 = sext i32 %398 to i64, !dbg !10649
  %mul499 = mul i64 %conv498, 20, !dbg !10650
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %395, i8* align 4 %397, i64 %mul499, i1 false), !dbg !10647
  %399 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10651
  %clear500 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %399, i32 0, i32 13, !dbg !10652
  store i32 0, i32* %clear500, align 8, !dbg !10653
  store i32 1, i32* %retval, align 4, !dbg !10654
  br label %return, !dbg !10654

return:                                           ; preds = %for.end493, %if.end103, %if.end46, %if.then36, %if.then29
  %400 = load i32, i32* %retval, align 4, !dbg !10655
  ret i32 %400, !dbg !10655
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_doStep(%struct.Scene* %scene, %struct.Object* %ob, %struct.DynamicPaintSurface* %surface, float %timescale, float %subframe) #0 !dbg !10656 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %timescale.addr = alloca float, align 4
  %subframe.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %canvas = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %ret = alloca i32, align 4
  %base = alloca %struct.Base*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %brushObj = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %scene_frame = alloca i32, align 4
  %scene_subframe = alloca float, align 4
  %pmd2 = alloca %struct.DynamicPaintModifierData*, align 8
  %brush43 = alloca %struct.DynamicPaintBrushSettings*, align 8
  %bMats = alloca %struct.BrushMaterials, align 8
  %steps = alloca i32, align 4
  %s = alloca i32, align 4
  %prevPoint = alloca %struct.PaintPoint*, align 8
  %force = alloca float*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !10659, metadata !DIExpression()), !dbg !10660
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !10661, metadata !DIExpression()), !dbg !10662
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !10663, metadata !DIExpression()), !dbg !10664
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !10665, metadata !DIExpression()), !dbg !10666
  store float %subframe, float* %subframe.addr, align 4
  call void @llvm.dbg.declare(metadata float* %subframe.addr, metadata !10667, metadata !DIExpression()), !dbg !10668
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !10669, metadata !DIExpression()), !dbg !10670
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10671
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !10672
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !10672
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !10670
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !10673, metadata !DIExpression()), !dbg !10674
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10675
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !10676
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !10676
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !10674
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas, metadata !10677, metadata !DIExpression()), !dbg !10678
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10679
  %canvas2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 2, !dbg !10680
  %5 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas2, align 8, !dbg !10680
  store %struct.DynamicPaintCanvasSettings* %5, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !10678
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10681, metadata !DIExpression()), !dbg !10682
  store i32 1, i32* %ret, align 4, !dbg !10682
  %6 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10683
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %6, i32 0, i32 4, !dbg !10685
  %7 = load i32, i32* %total_points, align 8, !dbg !10685
  %cmp = icmp slt i32 %7, 1, !dbg !10686
  br i1 %cmp, label %if.then, label %if.end, !dbg !10687

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10688
  br label %return, !dbg !10688

if.end:                                           ; preds = %entry
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10689
  %9 = load float, float* %timescale.addr, align 4, !dbg !10690
  call void @dynamicPaint_surfacePreStep(%struct.DynamicPaintSurface* %8, float %9), !dbg !10691
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !10692, metadata !DIExpression()), !dbg !10696
  store %struct.Base* null, %struct.Base** %base, align 8, !dbg !10696
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !10697, metadata !DIExpression()), !dbg !10709
  store %struct.GroupObject* null, %struct.GroupObject** %go, align 8, !dbg !10709
  call void @llvm.dbg.declare(metadata %struct.Object** %brushObj, metadata !10710, metadata !DIExpression()), !dbg !10711
  store %struct.Object* null, %struct.Object** %brushObj, align 8, !dbg !10711
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !10712, metadata !DIExpression()), !dbg !10714
  store %struct.ModifierData* null, %struct.ModifierData** %md, align 8, !dbg !10714
  call void @llvm.dbg.declare(metadata i32* %scene_frame, metadata !10715, metadata !DIExpression()), !dbg !10716
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10717
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %10, i32 0, i32 22, !dbg !10718
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !10719
  %11 = load i32, i32* %cfra, align 8, !dbg !10719
  store i32 %11, i32* %scene_frame, align 4, !dbg !10716
  call void @llvm.dbg.declare(metadata float* %scene_subframe, metadata !10720, metadata !DIExpression()), !dbg !10721
  %12 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10722
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %12, i32 0, i32 22, !dbg !10723
  %subframe4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 8, !dbg !10724
  %13 = load float, float* %subframe4, align 4, !dbg !10724
  store float %13, float* %scene_subframe, align 4, !dbg !10721
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10725
  %brush_group = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 4, !dbg !10727
  %15 = load %struct.Group*, %struct.Group** %brush_group, align 8, !dbg !10727
  %tobool = icmp ne %struct.Group* %15, null, !dbg !10725
  br i1 %tobool, label %if.then5, label %if.else, !dbg !10728

if.then5:                                         ; preds = %if.end
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10729
  %brush_group6 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 4, !dbg !10730
  %17 = load %struct.Group*, %struct.Group** %brush_group6, align 8, !dbg !10730
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %17, i32 0, i32 1, !dbg !10731
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !10732
  %18 = load i8*, i8** %first, align 8, !dbg !10732
  %19 = bitcast i8* %18 to %struct.GroupObject*, !dbg !10729
  store %struct.GroupObject* %19, %struct.GroupObject** %go, align 8, !dbg !10733
  br label %if.end9, !dbg !10734

if.else:                                          ; preds = %if.end
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10735
  %base7 = getelementptr inbounds %struct.Scene, %struct.Scene* %20, i32 0, i32 5, !dbg !10736
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base7, i32 0, i32 0, !dbg !10737
  %21 = load i8*, i8** %first8, align 8, !dbg !10737
  %22 = bitcast i8* %21 to %struct.Base*, !dbg !10735
  store %struct.Base* %22, %struct.Base** %base, align 8, !dbg !10738
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then5
  br label %while.cond, !dbg !10739

while.cond:                                       ; preds = %if.end151, %if.end29, %if.end9
  %23 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !10740
  %tobool10 = icmp ne %struct.Base* %23, null, !dbg !10740
  br i1 %tobool10, label %lor.end, label %lor.rhs, !dbg !10741

lor.rhs:                                          ; preds = %while.cond
  %24 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10742
  %tobool11 = icmp ne %struct.GroupObject* %24, null, !dbg !10741
  br label %lor.end, !dbg !10741

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %25 = phi i1 [ true, %while.cond ], [ %tobool11, %lor.rhs ]
  br i1 %25, label %while.body, label %while.end, !dbg !10739

while.body:                                       ; preds = %lor.end
  store %struct.Object* null, %struct.Object** %brushObj, align 8, !dbg !10743
  %26 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10745
  %brush_group12 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %26, i32 0, i32 4, !dbg !10747
  %27 = load %struct.Group*, %struct.Group** %brush_group12, align 8, !dbg !10747
  %tobool13 = icmp ne %struct.Group* %27, null, !dbg !10745
  br i1 %tobool13, label %if.then14, label %if.else20, !dbg !10748

if.then14:                                        ; preds = %while.body
  %28 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10749
  %ob15 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %28, i32 0, i32 2, !dbg !10752
  %29 = load %struct.Object*, %struct.Object** %ob15, align 8, !dbg !10752
  %tobool16 = icmp ne %struct.Object* %29, null, !dbg !10749
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !10753

if.then17:                                        ; preds = %if.then14
  %30 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10754
  %ob18 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %30, i32 0, i32 2, !dbg !10755
  %31 = load %struct.Object*, %struct.Object** %ob18, align 8, !dbg !10755
  store %struct.Object* %31, %struct.Object** %brushObj, align 8, !dbg !10756
  br label %if.end19, !dbg !10757

if.end19:                                         ; preds = %if.then17, %if.then14
  br label %if.end21, !dbg !10758

if.else20:                                        ; preds = %while.body
  %32 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !10759
  %object = getelementptr inbounds %struct.Base, %struct.Base* %32, i32 0, i32 7, !dbg !10760
  %33 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !10760
  store %struct.Object* %33, %struct.Object** %brushObj, align 8, !dbg !10761
  br label %if.end21

if.end21:                                         ; preds = %if.else20, %if.end19
  %34 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10762
  %tobool22 = icmp ne %struct.Object* %34, null, !dbg !10762
  br i1 %tobool22, label %if.end30, label %if.then23, !dbg !10764

if.then23:                                        ; preds = %if.end21
  %35 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10765
  %brush_group24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %35, i32 0, i32 4, !dbg !10768
  %36 = load %struct.Group*, %struct.Group** %brush_group24, align 8, !dbg !10768
  %tobool25 = icmp ne %struct.Group* %36, null, !dbg !10765
  br i1 %tobool25, label %if.then26, label %if.else27, !dbg !10769

if.then26:                                        ; preds = %if.then23
  %37 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10770
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %37, i32 0, i32 0, !dbg !10771
  %38 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !10771
  store %struct.GroupObject* %38, %struct.GroupObject** %go, align 8, !dbg !10772
  br label %if.end29, !dbg !10773

if.else27:                                        ; preds = %if.then23
  %39 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !10774
  %next28 = getelementptr inbounds %struct.Base, %struct.Base* %39, i32 0, i32 0, !dbg !10775
  %40 = load %struct.Base*, %struct.Base** %next28, align 8, !dbg !10775
  store %struct.Base* %40, %struct.Base** %base, align 8, !dbg !10776
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then26
  br label %while.cond, !dbg !10777, !llvm.loop !10778

if.end30:                                         ; preds = %if.end21
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10780
  %brush_group31 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 4, !dbg !10782
  %42 = load %struct.Group*, %struct.Group** %brush_group31, align 8, !dbg !10782
  %tobool32 = icmp ne %struct.Group* %42, null, !dbg !10780
  br i1 %tobool32, label %if.then33, label %if.else35, !dbg !10783

if.then33:                                        ; preds = %if.end30
  %43 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !10784
  %next34 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %43, i32 0, i32 0, !dbg !10785
  %44 = load %struct.GroupObject*, %struct.GroupObject** %next34, align 8, !dbg !10785
  store %struct.GroupObject* %44, %struct.GroupObject** %go, align 8, !dbg !10786
  br label %if.end37, !dbg !10787

if.else35:                                        ; preds = %if.end30
  %45 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !10788
  %next36 = getelementptr inbounds %struct.Base, %struct.Base* %45, i32 0, i32 0, !dbg !10789
  %46 = load %struct.Base*, %struct.Base** %next36, align 8, !dbg !10789
  store %struct.Base* %46, %struct.Base** %base, align 8, !dbg !10790
  br label %if.end37

if.end37:                                         ; preds = %if.else35, %if.then33
  %47 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10791
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %47, i32 40), !dbg !10792
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !10793
  %48 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10794
  %tobool38 = icmp ne %struct.ModifierData* %48, null, !dbg !10794
  br i1 %tobool38, label %land.lhs.true, label %if.end151, !dbg !10796

land.lhs.true:                                    ; preds = %if.end37
  %49 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10797
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %49, i32 0, i32 3, !dbg !10798
  %50 = load i32, i32* %mode, align 4, !dbg !10798
  %and = and i32 %50, 3, !dbg !10799
  %tobool39 = icmp ne i32 %and, 0, !dbg !10799
  br i1 %tobool39, label %if.then40, label %if.end151, !dbg !10800

if.then40:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd2, metadata !10801, metadata !DIExpression()), !dbg !10803
  %51 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !10804
  %52 = bitcast %struct.ModifierData* %51 to %struct.DynamicPaintModifierData*, !dbg !10805
  store %struct.DynamicPaintModifierData* %52, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !10803
  %53 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !10806
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %53, i32 0, i32 2, !dbg !10808
  %54 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !10808
  %tobool41 = icmp ne %struct.DynamicPaintBrushSettings* %54, null, !dbg !10806
  br i1 %tobool41, label %if.then42, label %if.end150, !dbg !10809

if.then42:                                        ; preds = %if.then40
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush43, metadata !10810, metadata !DIExpression()), !dbg !10812
  %55 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !10813
  %brush44 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %55, i32 0, i32 2, !dbg !10814
  %56 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush44, align 8, !dbg !10814
  store %struct.DynamicPaintBrushSettings* %56, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10812
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials* %bMats, metadata !10815, metadata !DIExpression()), !dbg !10823
  %57 = bitcast %struct.BrushMaterials* %bMats to i8*, !dbg !10823
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false), !dbg !10823
  %58 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10824
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %58, i32 0, i32 11, !dbg !10826
  %59 = load i16, i16* %type, align 2, !dbg !10826
  %conv = sext i16 %59 to i32, !dbg !10824
  %cmp45 = icmp eq i32 %conv, 0, !dbg !10827
  br i1 %cmp45, label %land.lhs.true47, label %if.end61, !dbg !10828

land.lhs.true47:                                  ; preds = %if.then42
  %60 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10829
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %60, i32 0, i32 4, !dbg !10830
  %61 = load i32, i32* %flags, align 8, !dbg !10830
  %and48 = and i32 %61, 256, !dbg !10831
  %tobool49 = icmp ne i32 %and48, 0, !dbg !10831
  br i1 %tobool49, label %if.then50, label %if.end61, !dbg !10832

if.then50:                                        ; preds = %land.lhs.true47
  %62 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10833
  %63 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10835
  %total_points51 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %63, i32 0, i32 4, !dbg !10836
  %64 = load i32, i32* %total_points51, align 8, !dbg !10836
  %conv52 = sext i32 %64 to i64, !dbg !10835
  %mul = mul i64 %conv52, 4, !dbg !10837
  %mul53 = mul i64 %mul, 4, !dbg !10838
  %call54 = call i8* %62(i64 %mul53, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)), !dbg !10833
  %65 = bitcast i8* %call54 to float*, !dbg !10833
  %66 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10839
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %66, i32 0, i32 10, !dbg !10840
  store float* %65, float** %brush_velocity, align 8, !dbg !10841
  %67 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !10842
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %67, i32 0, i32 2, !dbg !10844
  %68 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !10844
  %tobool55 = icmp ne %struct.PaintAdjData* %68, null, !dbg !10842
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !10845

if.then56:                                        ; preds = %if.then50
  %69 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10846
  call void @dynamicPaint_initAdjacencyData(%struct.DynamicPaintSurface* %69, i32 1), !dbg !10847
  br label %if.end57, !dbg !10847

if.end57:                                         ; preds = %if.then56, %if.then50
  %70 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10848
  %bNeighs = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %70, i32 0, i32 5, !dbg !10850
  %71 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !10850
  %tobool58 = icmp ne %struct.BakeAdjPoint* %71, null, !dbg !10848
  br i1 %tobool58, label %if.end60, label %if.then59, !dbg !10851

if.then59:                                        ; preds = %if.end57
  %72 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10852
  call void @dynamicPaint_prepareAdjacencyData(%struct.DynamicPaintSurface* %72, i32 1), !dbg !10853
  br label %if.end60, !dbg !10853

if.end60:                                         ; preds = %if.then59, %if.end57
  br label %if.end61, !dbg !10854

if.end61:                                         ; preds = %if.end60, %land.lhs.true47, %if.then42
  %73 = load float, float* %subframe.addr, align 4, !dbg !10855
  %tobool62 = fcmp une float %73, 0.000000e+00, !dbg !10855
  br i1 %tobool62, label %if.then63, label %if.end66, !dbg !10857

if.then63:                                        ; preds = %if.end61
  %74 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10858
  %75 = load float, float* %subframe.addr, align 4, !dbg !10860
  call void @scene_setSubframe(%struct.Scene* %74, float %75), !dbg !10861
  %76 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10862
  %77 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10863
  %78 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10864
  %call64 = call float @BKE_scene_frame_get(%struct.Scene* %78), !dbg !10865
  %call65 = call i32 @subframe_updateObject(%struct.Scene* %76, %struct.Object* %77, i32 2, i32 5, float %call64), !dbg !10866
  br label %if.end66, !dbg !10867

if.end66:                                         ; preds = %if.then63, %if.end61
  %79 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10868
  %80 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10870
  %call67 = call i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %79, %struct.Scene* %80), !dbg !10871
  %tobool68 = icmp ne i32 %call67, 0, !dbg !10871
  br i1 %tobool68, label %if.then69, label %if.end70, !dbg !10872

if.then69:                                        ; preds = %if.end66
  %81 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10873
  %82 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10874
  %mat = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %82, i32 0, i32 3, !dbg !10875
  %83 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !10875
  %84 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10876
  call void @dynamicPaint_updateBrushMaterials(%struct.Object* %81, %struct.Material* %83, %struct.Scene* %84, %struct.BrushMaterials* %bMats), !dbg !10877
  br label %if.end70, !dbg !10877

if.end70:                                         ; preds = %if.then69, %if.end66
  %85 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10878
  %collision = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %85, i32 0, i32 5, !dbg !10880
  %86 = load i32, i32* %collision, align 4, !dbg !10880
  %cmp71 = icmp eq i32 %86, 3, !dbg !10881
  br i1 %cmp71, label %if.then73, label %if.else104, !dbg !10882

if.then73:                                        ; preds = %if.end70
  %87 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10883
  %psys = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %87, i32 0, i32 2, !dbg !10886
  %88 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys, align 8, !dbg !10886
  %tobool74 = icmp ne %struct.ParticleSystem* %88, null, !dbg !10883
  br i1 %tobool74, label %land.lhs.true75, label %if.end103, !dbg !10887

land.lhs.true75:                                  ; preds = %if.then73
  %89 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10888
  %psys76 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %89, i32 0, i32 2, !dbg !10889
  %90 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys76, align 8, !dbg !10889
  %part = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %90, i32 0, i32 2, !dbg !10890
  %91 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !10890
  %tobool77 = icmp ne %struct.ParticleSettings* %91, null, !dbg !10888
  br i1 %tobool77, label %land.lhs.true78, label %if.end103, !dbg !10891

land.lhs.true78:                                  ; preds = %land.lhs.true75
  %92 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10892
  %psys79 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %92, i32 0, i32 2, !dbg !10892
  %93 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys79, align 8, !dbg !10892
  %part80 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %93, i32 0, i32 2, !dbg !10892
  %94 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part80, align 8, !dbg !10892
  %type81 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %94, i32 0, i32 7, !dbg !10892
  %95 = load i16, i16* %type81, align 8, !dbg !10892
  %conv82 = sext i16 %95 to i32, !dbg !10892
  %cmp83 = icmp eq i32 %conv82, 0, !dbg !10892
  br i1 %cmp83, label %land.lhs.true91, label %lor.lhs.false, !dbg !10892

lor.lhs.false:                                    ; preds = %land.lhs.true78
  %96 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10892
  %psys85 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %96, i32 0, i32 2, !dbg !10892
  %97 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys85, align 8, !dbg !10892
  %part86 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %97, i32 0, i32 2, !dbg !10892
  %98 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part86, align 8, !dbg !10892
  %type87 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %98, i32 0, i32 7, !dbg !10892
  %99 = load i16, i16* %type87, align 8, !dbg !10892
  %conv88 = sext i16 %99 to i32, !dbg !10892
  %cmp89 = icmp eq i32 %conv88, 3, !dbg !10892
  br i1 %cmp89, label %land.lhs.true91, label %if.end103, !dbg !10893

land.lhs.true91:                                  ; preds = %lor.lhs.false, %land.lhs.true78
  %100 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10894
  %101 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10895
  %psys92 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %101, i32 0, i32 2, !dbg !10896
  %102 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys92, align 8, !dbg !10896
  %call93 = call i32 @psys_check_enabled(%struct.Object* %100, %struct.ParticleSystem* %102), !dbg !10897
  %tobool94 = icmp ne i32 %call93, 0, !dbg !10897
  br i1 %tobool94, label %if.then95, label %if.end103, !dbg !10898

if.then95:                                        ; preds = %land.lhs.true91
  %103 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10899
  %104 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10901
  %psys96 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %104, i32 0, i32 2, !dbg !10902
  %105 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys96, align 8, !dbg !10902
  %part97 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %105, i32 0, i32 2, !dbg !10903
  %106 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part97, align 8, !dbg !10903
  %id = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %106, i32 0, i32 0, !dbg !10904
  %107 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10905
  %psys98 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %107, i32 0, i32 2, !dbg !10906
  %108 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys98, align 8, !dbg !10906
  %part99 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %108, i32 0, i32 2, !dbg !10907
  %109 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part99, align 8, !dbg !10907
  %adt = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %109, i32 0, i32 1, !dbg !10908
  %110 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !10908
  %111 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10909
  %call100 = call float @BKE_scene_frame_get(%struct.Scene* %111), !dbg !10910
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %103, %struct.ID* %id, %struct.AnimData* %110, float %call100, i16 signext 2), !dbg !10911
  %112 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10912
  %113 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10913
  %psys101 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %113, i32 0, i32 2, !dbg !10914
  %114 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys101, align 8, !dbg !10914
  %115 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10915
  %116 = load float, float* %timescale.addr, align 4, !dbg !10916
  %call102 = call i32 @dynamicPaint_paintParticles(%struct.DynamicPaintSurface* %112, %struct.ParticleSystem* %114, %struct.DynamicPaintBrushSettings* %115, float %116), !dbg !10917
  br label %if.end103, !dbg !10918

if.end103:                                        ; preds = %if.then95, %land.lhs.true91, %lor.lhs.false, %land.lhs.true75, %if.then73
  br label %if.end120, !dbg !10919

if.else104:                                       ; preds = %if.end70
  %117 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10920
  %collision105 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %117, i32 0, i32 5, !dbg !10922
  %118 = load i32, i32* %collision105, align 4, !dbg !10922
  %cmp106 = icmp eq i32 %118, 4, !dbg !10923
  br i1 %cmp106, label %land.lhs.true108, label %if.else113, !dbg !10924

land.lhs.true108:                                 ; preds = %if.else104
  %119 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10925
  %120 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10926
  %cmp109 = icmp ne %struct.Object* %119, %120, !dbg !10927
  br i1 %cmp109, label %if.then111, label %if.else113, !dbg !10928

if.then111:                                       ; preds = %land.lhs.true108
  %121 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10929
  %122 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10931
  %loc = getelementptr inbounds %struct.Object, %struct.Object* %122, i32 0, i32 33, !dbg !10932
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !10931
  %123 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10933
  %124 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10934
  %125 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10935
  %126 = load float, float* %timescale.addr, align 4, !dbg !10936
  %call112 = call i32 @dynamicPaint_paintSinglePoint(%struct.DynamicPaintSurface* %121, float* %arraydecay, %struct.DynamicPaintBrushSettings* %123, %struct.Object* %124, %struct.BrushMaterials* %bMats, %struct.Scene* %125, float %126), !dbg !10937
  br label %if.end119, !dbg !10938

if.else113:                                       ; preds = %land.lhs.true108, %if.else104
  %127 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10939
  %128 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !10941
  %cmp114 = icmp ne %struct.Object* %127, %128, !dbg !10942
  br i1 %cmp114, label %if.then116, label %if.end118, !dbg !10943

if.then116:                                       ; preds = %if.else113
  %129 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10944
  %130 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10946
  %131 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10947
  %132 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10948
  %133 = load float, float* %timescale.addr, align 4, !dbg !10949
  %call117 = call i32 @dynamicPaint_paintMesh(%struct.DynamicPaintSurface* %129, %struct.DynamicPaintBrushSettings* %130, %struct.Object* %131, %struct.BrushMaterials* %bMats, %struct.Scene* %132, float %133), !dbg !10950
  br label %if.end118, !dbg !10951

if.end118:                                        ; preds = %if.then116, %if.else113
  br label %if.end119

if.end119:                                        ; preds = %if.end118, %if.then111
  br label %if.end120

if.end120:                                        ; preds = %if.end119, %if.end103
  %134 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10952
  %135 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10954
  %call121 = call i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %134, %struct.Scene* %135), !dbg !10955
  %tobool122 = icmp ne i32 %call121, 0, !dbg !10955
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !10956

if.then123:                                       ; preds = %if.end120
  call void @dynamicPaint_freeBrushMaterials(%struct.BrushMaterials* %bMats), !dbg !10957
  br label %if.end124, !dbg !10957

if.end124:                                        ; preds = %if.then123, %if.end120
  %136 = load float, float* %subframe.addr, align 4, !dbg !10958
  %tobool125 = fcmp une float %136, 0.000000e+00, !dbg !10958
  br i1 %tobool125, label %if.then126, label %if.end133, !dbg !10960

if.then126:                                       ; preds = %if.end124
  %137 = load i32, i32* %scene_frame, align 4, !dbg !10961
  %138 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10963
  %r127 = getelementptr inbounds %struct.Scene, %struct.Scene* %138, i32 0, i32 22, !dbg !10964
  %cfra128 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r127, i32 0, i32 5, !dbg !10965
  store i32 %137, i32* %cfra128, align 8, !dbg !10966
  %139 = load float, float* %scene_subframe, align 4, !dbg !10967
  %140 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10968
  %r129 = getelementptr inbounds %struct.Scene, %struct.Scene* %140, i32 0, i32 22, !dbg !10969
  %subframe130 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r129, i32 0, i32 8, !dbg !10970
  store float %139, float* %subframe130, align 4, !dbg !10971
  %141 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10972
  %142 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !10973
  %143 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !10974
  %call131 = call float @BKE_scene_frame_get(%struct.Scene* %143), !dbg !10975
  %call132 = call i32 @subframe_updateObject(%struct.Scene* %141, %struct.Object* %142, i32 2, i32 5, float %call131), !dbg !10976
  br label %if.end133, !dbg !10977

if.end133:                                        ; preds = %if.then126, %if.end124
  %144 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10978
  %brush_velocity134 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %144, i32 0, i32 10, !dbg !10980
  %145 = load float*, float** %brush_velocity134, align 8, !dbg !10980
  %tobool135 = icmp ne float* %145, null, !dbg !10978
  br i1 %tobool135, label %if.then136, label %if.end149, !dbg !10981

if.then136:                                       ; preds = %if.end133
  %146 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10982
  %type137 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %146, i32 0, i32 11, !dbg !10985
  %147 = load i16, i16* %type137, align 2, !dbg !10985
  %conv138 = sext i16 %147 to i32, !dbg !10982
  %cmp139 = icmp eq i32 %conv138, 0, !dbg !10986
  br i1 %cmp139, label %land.lhs.true141, label %if.end146, !dbg !10987

land.lhs.true141:                                 ; preds = %if.then136
  %148 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10988
  %flags142 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %148, i32 0, i32 4, !dbg !10989
  %149 = load i32, i32* %flags142, align 8, !dbg !10989
  %and143 = and i32 %149, 256, !dbg !10990
  %tobool144 = icmp ne i32 %and143, 0, !dbg !10990
  br i1 %tobool144, label %if.then145, label %if.end146, !dbg !10991

if.then145:                                       ; preds = %land.lhs.true141
  %150 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !10992
  %151 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush43, align 8, !dbg !10993
  %152 = load float, float* %timescale.addr, align 4, !dbg !10994
  call void @dynamicPaint_doSmudge(%struct.DynamicPaintSurface* %150, %struct.DynamicPaintBrushSettings* %151, float %152), !dbg !10995
  br label %if.end146, !dbg !10995

if.end146:                                        ; preds = %if.then145, %land.lhs.true141, %if.then136
  %153 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10996
  %154 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10997
  %brush_velocity147 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %154, i32 0, i32 10, !dbg !10998
  %155 = load float*, float** %brush_velocity147, align 8, !dbg !10998
  %156 = bitcast float* %155 to i8*, !dbg !10997
  call void %153(i8* %156), !dbg !10996
  %157 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !10999
  %brush_velocity148 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %157, i32 0, i32 10, !dbg !11000
  store float* null, float** %brush_velocity148, align 8, !dbg !11001
  br label %if.end149, !dbg !11002

if.end149:                                        ; preds = %if.end146, %if.end133
  br label %if.end150, !dbg !11003

if.end150:                                        ; preds = %if.end149, %if.then40
  br label %if.end151, !dbg !11004

if.end151:                                        ; preds = %if.end150, %land.lhs.true, %if.end37
  br label %while.cond, !dbg !10739, !llvm.loop !10778

while.end:                                        ; preds = %lor.end
  %158 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11005
  %adj_data152 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %158, i32 0, i32 2, !dbg !11007
  %159 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data152, align 8, !dbg !11007
  %tobool153 = icmp ne %struct.PaintAdjData* %159, null, !dbg !11005
  br i1 %tobool153, label %land.lhs.true154, label %if.end190, !dbg !11008

land.lhs.true154:                                 ; preds = %while.end
  %160 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11009
  %bNeighs155 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %160, i32 0, i32 5, !dbg !11010
  %161 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs155, align 8, !dbg !11010
  %tobool156 = icmp ne %struct.BakeAdjPoint* %161, null, !dbg !11009
  br i1 %tobool156, label %if.then157, label %if.end190, !dbg !11011

if.then157:                                       ; preds = %land.lhs.true154
  %162 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11012
  %type158 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %162, i32 0, i32 11, !dbg !11015
  %163 = load i16, i16* %type158, align 2, !dbg !11015
  %conv159 = sext i16 %163 to i32, !dbg !11012
  %cmp160 = icmp eq i32 %conv159, 3, !dbg !11016
  br i1 %cmp160, label %if.then162, label %if.end163, !dbg !11017

if.then162:                                       ; preds = %if.then157
  %164 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11018
  %165 = load float, float* %timescale.addr, align 4, !dbg !11020
  call void @dynamicPaint_doWaveStep(%struct.DynamicPaintSurface* %164, float %165), !dbg !11021
  br label %if.end163, !dbg !11022

if.end163:                                        ; preds = %if.then162, %if.then157
  %166 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11023
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %166, i32 0, i32 19, !dbg !11025
  %167 = load i32, i32* %effect, align 8, !dbg !11025
  %tobool164 = icmp ne i32 %167, 0, !dbg !11023
  br i1 %tobool164, label %land.lhs.true165, label %if.end189, !dbg !11026

land.lhs.true165:                                 ; preds = %if.end163
  %168 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11027
  %type166 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %168, i32 0, i32 11, !dbg !11028
  %169 = load i16, i16* %type166, align 2, !dbg !11028
  %conv167 = sext i16 %169 to i32, !dbg !11027
  %cmp168 = icmp eq i32 %conv167, 0, !dbg !11029
  br i1 %cmp168, label %if.then170, label %if.end189, !dbg !11030

if.then170:                                       ; preds = %land.lhs.true165
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !11031, metadata !DIExpression()), !dbg !11033
  store i32 1, i32* %steps, align 4, !dbg !11033
  call void @llvm.dbg.declare(metadata i32* %s, metadata !11034, metadata !DIExpression()), !dbg !11035
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %prevPoint, metadata !11036, metadata !DIExpression()), !dbg !11037
  call void @llvm.dbg.declare(metadata float** %force, metadata !11038, metadata !DIExpression()), !dbg !11039
  store float* null, float** %force, align 8, !dbg !11039
  %170 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !11040
  %171 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11041
  %total_points171 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %171, i32 0, i32 4, !dbg !11042
  %172 = load i32, i32* %total_points171, align 8, !dbg !11042
  %conv172 = sext i32 %172 to i64, !dbg !11041
  %mul173 = mul i64 %conv172, 40, !dbg !11043
  %call174 = call i8* %170(i64 %mul173, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.56, i64 0, i64 0)), !dbg !11040
  %173 = bitcast i8* %call174 to %struct.PaintPoint*, !dbg !11040
  store %struct.PaintPoint* %173, %struct.PaintPoint** %prevPoint, align 8, !dbg !11044
  %174 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint, align 8, !dbg !11045
  %tobool175 = icmp ne %struct.PaintPoint* %174, null, !dbg !11045
  br i1 %tobool175, label %if.end178, label %if.then176, !dbg !11047

if.then176:                                       ; preds = %if.then170
  %175 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !11048
  %call177 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %175, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !11049
  store i32 %call177, i32* %retval, align 4, !dbg !11050
  br label %return, !dbg !11050

if.end178:                                        ; preds = %if.then170
  %176 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11051
  %177 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11052
  %178 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11053
  %179 = load float, float* %timescale.addr, align 4, !dbg !11054
  %call179 = call i32 @dynamicPaint_prepareEffectStep(%struct.DynamicPaintSurface* %176, %struct.Scene* %177, %struct.Object* %178, float** %force, float %179), !dbg !11055
  store i32 %call179, i32* %steps, align 4, !dbg !11056
  store i32 0, i32* %s, align 4, !dbg !11057
  br label %for.cond, !dbg !11059

for.cond:                                         ; preds = %for.inc, %if.end178
  %180 = load i32, i32* %s, align 4, !dbg !11060
  %181 = load i32, i32* %steps, align 4, !dbg !11062
  %cmp180 = icmp slt i32 %180, %181, !dbg !11063
  br i1 %cmp180, label %for.body, label %for.end, !dbg !11064

for.body:                                         ; preds = %for.cond
  %182 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11065
  %183 = load float*, float** %force, align 8, !dbg !11067
  %184 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint, align 8, !dbg !11068
  %185 = load float, float* %timescale.addr, align 4, !dbg !11069
  %186 = load i32, i32* %steps, align 4, !dbg !11070
  %conv182 = sitofp i32 %186 to float, !dbg !11071
  call void @dynamicPaint_doEffectStep(%struct.DynamicPaintSurface* %182, float* %183, %struct.PaintPoint* %184, float %185, float %conv182), !dbg !11072
  br label %for.inc, !dbg !11073

for.inc:                                          ; preds = %for.body
  %187 = load i32, i32* %s, align 4, !dbg !11074
  %inc = add nsw i32 %187, 1, !dbg !11074
  store i32 %inc, i32* %s, align 4, !dbg !11074
  br label %for.cond, !dbg !11075, !llvm.loop !11076

for.end:                                          ; preds = %for.cond
  %188 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint, align 8, !dbg !11078
  %tobool183 = icmp ne %struct.PaintPoint* %188, null, !dbg !11078
  br i1 %tobool183, label %if.then184, label %if.end185, !dbg !11080

if.then184:                                       ; preds = %for.end
  %189 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11081
  %190 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint, align 8, !dbg !11082
  %191 = bitcast %struct.PaintPoint* %190 to i8*, !dbg !11082
  call void %189(i8* %191), !dbg !11081
  br label %if.end185, !dbg !11081

if.end185:                                        ; preds = %if.then184, %for.end
  %192 = load float*, float** %force, align 8, !dbg !11083
  %tobool186 = icmp ne float* %192, null, !dbg !11083
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !11085

if.then187:                                       ; preds = %if.end185
  %193 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11086
  %194 = load float*, float** %force, align 8, !dbg !11087
  %195 = bitcast float* %194 to i8*, !dbg !11087
  call void %193(i8* %195), !dbg !11086
  br label %if.end188, !dbg !11086

if.end188:                                        ; preds = %if.then187, %if.end185
  br label %if.end189, !dbg !11088

if.end189:                                        ; preds = %if.end188, %land.lhs.true165, %if.end163
  br label %if.end190, !dbg !11089

if.end190:                                        ; preds = %if.end189, %land.lhs.true154, %while.end
  %196 = load i32, i32* %ret, align 4, !dbg !11090
  store i32 %196, i32* %retval, align 4, !dbg !11091
  br label %return, !dbg !11091

return:                                           ; preds = %if.end190, %if.then176, %if.then
  %197 = load i32, i32* %retval, align 4, !dbg !11092
  ret i32 %197, !dbg !11092
}

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @surface_duplicateOutputExists(i8* %arg, i8* %name) #0 !dbg !11093 {
entry:
  %retval = alloca i8, align 1
  %arg.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %t_surface = alloca %struct.DynamicPaintSurface*, align 8
  %surface = alloca %struct.DynamicPaintSurface*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !11094, metadata !DIExpression()), !dbg !11095
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11096, metadata !DIExpression()), !dbg !11097
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %t_surface, metadata !11098, metadata !DIExpression()), !dbg !11099
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !11100
  %1 = bitcast i8* %0 to %struct.DynamicPaintSurface*, !dbg !11101
  store %struct.DynamicPaintSurface* %1, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !11099
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface, metadata !11102, metadata !DIExpression()), !dbg !11103
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !11104
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 2, !dbg !11105
  %3 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !11105
  %surfaces = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %3, i32 0, i32 2, !dbg !11106
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %surfaces, i32 0, i32 0, !dbg !11107
  %4 = load i8*, i8** %first, align 8, !dbg !11107
  %5 = bitcast i8* %4 to %struct.DynamicPaintSurface*, !dbg !11104
  store %struct.DynamicPaintSurface* %5, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11103
  br label %for.cond, !dbg !11108

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11109
  %tobool = icmp ne %struct.DynamicPaintSurface* %6, null, !dbg !11112
  br i1 %tobool, label %for.body, label %for.end, !dbg !11112

for.body:                                         ; preds = %for.cond
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11113
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !11116
  %cmp = icmp ne %struct.DynamicPaintSurface* %7, %8, !dbg !11117
  br i1 %cmp, label %land.lhs.true, label %if.end29, !dbg !11118

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11119
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 11, !dbg !11120
  %10 = load i16, i16* %type, align 2, !dbg !11120
  %conv = sext i16 %10 to i32, !dbg !11119
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !11121
  %type1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 11, !dbg !11122
  %12 = load i16, i16* %type1, align 2, !dbg !11122
  %conv2 = sext i16 %12 to i32, !dbg !11121
  %cmp3 = icmp eq i32 %conv, %conv2, !dbg !11123
  br i1 %cmp3, label %land.lhs.true5, label %if.end29, !dbg !11124

land.lhs.true5:                                   ; preds = %land.lhs.true
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11125
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 10, !dbg !11126
  %14 = load i16, i16* %format, align 4, !dbg !11126
  %conv6 = sext i16 %14 to i32, !dbg !11125
  %15 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %t_surface, align 8, !dbg !11127
  %format7 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %15, i32 0, i32 10, !dbg !11128
  %16 = load i16, i16* %format7, align 4, !dbg !11128
  %conv8 = sext i16 %16 to i32, !dbg !11127
  %cmp9 = icmp eq i32 %conv6, %conv8, !dbg !11129
  br i1 %cmp9, label %if.then, label %if.end29, !dbg !11130

if.then:                                          ; preds = %land.lhs.true5
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11131
  %output_name = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 48, !dbg !11134
  %arrayidx = getelementptr inbounds [64 x i8], [64 x i8]* %output_name, i64 0, i64 0, !dbg !11131
  %18 = load i8, i8* %arrayidx, align 8, !dbg !11131
  %conv11 = zext i8 %18 to i32, !dbg !11131
  %cmp12 = icmp ne i32 %conv11, 0, !dbg !11135
  br i1 %cmp12, label %land.lhs.true14, label %if.end, !dbg !11136

land.lhs.true14:                                  ; preds = %if.then
  %19 = load i8*, i8** %name.addr, align 8, !dbg !11137
  %20 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11138
  %output_name15 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %20, i32 0, i32 48, !dbg !11139
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %output_name15, i64 0, i64 0, !dbg !11138
  %call = call i32 @strcmp(i8* %19, i8* %arraydecay) #6, !dbg !11140
  %tobool16 = icmp ne i32 %call, 0, !dbg !11140
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !11141

if.then17:                                        ; preds = %land.lhs.true14
  store i8 1, i8* %retval, align 1, !dbg !11142
  br label %return, !dbg !11142

if.end:                                           ; preds = %land.lhs.true14, %if.then
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11143
  %output_name2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 49, !dbg !11145
  %arrayidx18 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name2, i64 0, i64 0, !dbg !11143
  %22 = load i8, i8* %arrayidx18, align 8, !dbg !11143
  %conv19 = zext i8 %22 to i32, !dbg !11143
  %cmp20 = icmp ne i32 %conv19, 0, !dbg !11146
  br i1 %cmp20, label %land.lhs.true22, label %if.end28, !dbg !11147

land.lhs.true22:                                  ; preds = %if.end
  %23 = load i8*, i8** %name.addr, align 8, !dbg !11148
  %24 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11149
  %output_name223 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %24, i32 0, i32 49, !dbg !11150
  %arraydecay24 = getelementptr inbounds [64 x i8], [64 x i8]* %output_name223, i64 0, i64 0, !dbg !11149
  %call25 = call i32 @strcmp(i8* %23, i8* %arraydecay24) #6, !dbg !11151
  %tobool26 = icmp ne i32 %call25, 0, !dbg !11151
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !11152

if.then27:                                        ; preds = %land.lhs.true22
  store i8 1, i8* %retval, align 1, !dbg !11153
  br label %return, !dbg !11153

if.end28:                                         ; preds = %land.lhs.true22, %if.end
  br label %if.end29, !dbg !11154

if.end29:                                         ; preds = %if.end28, %land.lhs.true5, %land.lhs.true, %for.body
  br label %for.inc, !dbg !11155

for.inc:                                          ; preds = %if.end29
  %25 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11156
  %next = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %25, i32 0, i32 0, !dbg !11157
  %26 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %next, align 8, !dbg !11157
  store %struct.DynamicPaintSurface* %26, %struct.DynamicPaintSurface** %surface, align 8, !dbg !11158
  br label %for.cond, !dbg !11159, !llvm.loop !11160

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !11162
  br label %return, !dbg !11162

return:                                           ; preds = %for.end, %if.then27, %if.then17
  %27 = load i8, i8* %retval, align 1, !dbg !11163
  ret i8 %27, !dbg !11163
}

; Function Attrs: noinline nounwind uwtable
define internal void @freeGrid(%struct.PaintSurfaceData* %data) #0 !dbg !11164 {
entry:
  %data.addr = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %grid = alloca %struct.VolumeGrid*, align 8
  store %struct.PaintSurfaceData* %data, %struct.PaintSurfaceData** %data.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %data.addr, metadata !11165, metadata !DIExpression()), !dbg !11166
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !11167, metadata !DIExpression()), !dbg !11168
  %0 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data.addr, align 8, !dbg !11169
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %0, i32 0, i32 3, !dbg !11170
  %1 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !11170
  store %struct.PaintBakeData* %1, %struct.PaintBakeData** %bData, align 8, !dbg !11168
  call void @llvm.dbg.declare(metadata %struct.VolumeGrid** %grid, metadata !11171, metadata !DIExpression()), !dbg !11172
  %2 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11173
  %grid2 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %2, i32 0, i32 7, !dbg !11174
  %3 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid2, align 8, !dbg !11174
  store %struct.VolumeGrid* %3, %struct.VolumeGrid** %grid, align 8, !dbg !11172
  %4 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11175
  %bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %4, i32 0, i32 2, !dbg !11177
  %5 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds, align 8, !dbg !11177
  %tobool = icmp ne %struct.Bounds3D* %5, null, !dbg !11175
  br i1 %tobool, label %if.then, label %if.end, !dbg !11178

if.then:                                          ; preds = %entry
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11179
  %7 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11180
  %bounds3 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %7, i32 0, i32 2, !dbg !11181
  %8 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds3, align 8, !dbg !11181
  %9 = bitcast %struct.Bounds3D* %8 to i8*, !dbg !11180
  call void %6(i8* %9), !dbg !11179
  br label %if.end, !dbg !11179

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11182
  %s_pos = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %10, i32 0, i32 3, !dbg !11184
  %11 = load i32*, i32** %s_pos, align 8, !dbg !11184
  %tobool4 = icmp ne i32* %11, null, !dbg !11182
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !11185

if.then5:                                         ; preds = %if.end
  %12 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11186
  %13 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11187
  %s_pos6 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %13, i32 0, i32 3, !dbg !11188
  %14 = load i32*, i32** %s_pos6, align 8, !dbg !11188
  %15 = bitcast i32* %14 to i8*, !dbg !11187
  call void %12(i8* %15), !dbg !11186
  br label %if.end7, !dbg !11186

if.end7:                                          ; preds = %if.then5, %if.end
  %16 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11189
  %s_num = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %16, i32 0, i32 4, !dbg !11191
  %17 = load i32*, i32** %s_num, align 8, !dbg !11191
  %tobool8 = icmp ne i32* %17, null, !dbg !11189
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !11192

if.then9:                                         ; preds = %if.end7
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11193
  %19 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11194
  %s_num10 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %19, i32 0, i32 4, !dbg !11195
  %20 = load i32*, i32** %s_num10, align 8, !dbg !11195
  %21 = bitcast i32* %20 to i8*, !dbg !11194
  call void %18(i8* %21), !dbg !11193
  br label %if.end11, !dbg !11193

if.end11:                                         ; preds = %if.then9, %if.end7
  %22 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11196
  %t_index = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %22, i32 0, i32 5, !dbg !11198
  %23 = load i32*, i32** %t_index, align 8, !dbg !11198
  %tobool12 = icmp ne i32* %23, null, !dbg !11196
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !11199

if.then13:                                        ; preds = %if.end11
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11200
  %25 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11201
  %t_index14 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %25, i32 0, i32 5, !dbg !11202
  %26 = load i32*, i32** %t_index14, align 8, !dbg !11202
  %27 = bitcast i32* %26 to i8*, !dbg !11201
  call void %24(i8* %27), !dbg !11200
  br label %if.end15, !dbg !11200

if.end15:                                         ; preds = %if.then13, %if.end11
  %28 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !11203
  %29 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11204
  %grid16 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %29, i32 0, i32 7, !dbg !11205
  %30 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid16, align 8, !dbg !11205
  %31 = bitcast %struct.VolumeGrid* %30 to i8*, !dbg !11204
  call void %28(i8* %31), !dbg !11203
  %32 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11206
  %grid17 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %32, i32 0, i32 7, !dbg !11207
  store %struct.VolumeGrid* null, %struct.VolumeGrid** %grid17, align 8, !dbg !11208
  ret void, !dbg !11209
}

declare dso_local zeroext i8 @BKE_scene_check_color_management_enabled(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !11210 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11211, metadata !DIExpression()), !dbg !11212
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11213, metadata !DIExpression()), !dbg !11214
  %0 = load float*, float** %a.addr, align 8, !dbg !11215
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11215
  %1 = load float, float* %arrayidx, align 4, !dbg !11215
  %2 = load float*, float** %r.addr, align 8, !dbg !11216
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11216
  store float %1, float* %arrayidx1, align 4, !dbg !11217
  %3 = load float*, float** %a.addr, align 8, !dbg !11218
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11218
  %4 = load float, float* %arrayidx2, align 4, !dbg !11218
  %5 = load float*, float** %r.addr, align 8, !dbg !11219
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11219
  store float %4, float* %arrayidx3, align 4, !dbg !11220
  %6 = load float*, float** %a.addr, align 8, !dbg !11221
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !11221
  %7 = load float, float* %arrayidx4, align 4, !dbg !11221
  %8 = load float*, float** %r.addr, align 8, !dbg !11222
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11222
  store float %7, float* %arrayidx5, align 4, !dbg !11223
  ret void, !dbg !11224
}

declare dso_local %struct.ImagePool* @BKE_image_pool_new() #2

declare dso_local i32 @multitex_ext_safe(%struct.Tex*, float*, %struct.TexResult*, %struct.ImagePool*, i8 zeroext) #2

declare dso_local void @BKE_image_pool_free(%struct.ImagePool*) #2

declare dso_local void @interp_v3_v3v3v3(float*, float*, float*, float*, float*) #2

declare dso_local void @interp_v4_v4v4v4(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_usesAdjData(%struct.DynamicPaintSurface* %surface) #0 !dbg !11225 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11228
  %call = call i32 @surface_usesAdjDistance(%struct.DynamicPaintSurface* %0), !dbg !11230
  %tobool = icmp ne i32 %call, 0, !dbg !11230
  br i1 %tobool, label %if.then, label %if.end, !dbg !11231

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11232
  br label %return, !dbg !11232

if.end:                                           ; preds = %entry
  %1 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11233
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %1, i32 0, i32 10, !dbg !11235
  %2 = load i16, i16* %format, align 4, !dbg !11235
  %conv = sext i16 %2 to i32, !dbg !11233
  %cmp = icmp eq i32 %conv, 1, !dbg !11236
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !11237

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11238
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 18, !dbg !11239
  %4 = load i32, i32* %flags, align 4, !dbg !11239
  %and = and i32 %4, 2, !dbg !11240
  %tobool2 = icmp ne i32 %and, 0, !dbg !11240
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !11241

if.then3:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !11242
  br label %return, !dbg !11242

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i32 0, i32* %retval, align 4, !dbg !11244
  br label %return, !dbg !11244

return:                                           ; preds = %if.else, %if.then3, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !11246
  ret i32 %5, !dbg !11246
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_usesAdjDistance(%struct.DynamicPaintSurface* %surface) #0 !dbg !11247 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11248, metadata !DIExpression()), !dbg !11249
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11250
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 11, !dbg !11252
  %1 = load i16, i16* %type, align 2, !dbg !11252
  %conv = sext i16 %1 to i32, !dbg !11250
  %cmp = icmp eq i32 %conv, 0, !dbg !11253
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11254

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11255
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 19, !dbg !11256
  %3 = load i32, i32* %effect, align 8, !dbg !11256
  %tobool = icmp ne i32 %3, 0, !dbg !11255
  br i1 %tobool, label %if.then, label %if.end, !dbg !11257

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !11258
  br label %return, !dbg !11258

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11259
  %type2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 11, !dbg !11261
  %5 = load i16, i16* %type2, align 2, !dbg !11261
  %conv3 = sext i16 %5 to i32, !dbg !11259
  %cmp4 = icmp eq i32 %conv3, 3, !dbg !11262
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !11263

if.then6:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11264
  br label %return, !dbg !11264

if.end7:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11265
  br label %return, !dbg !11265

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11266
  ret i32 %6, !dbg !11266
}

; Function Attrs: noinline nounwind uwtable
define internal void @canvas_copyDerivedMesh(%struct.DynamicPaintCanvasSettings* %canvas, %struct.DerivedMesh* %dm) #0 !dbg !11267 {
entry:
  %canvas.addr = alloca %struct.DynamicPaintCanvasSettings*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DynamicPaintCanvasSettings* %canvas, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintCanvasSettings** %canvas.addr, metadata !11270, metadata !DIExpression()), !dbg !11271
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  %0 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !11274
  %dm1 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %0, i32 0, i32 1, !dbg !11276
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm1, align 8, !dbg !11276
  %tobool = icmp ne %struct.DerivedMesh* %1, null, !dbg !11274
  br i1 %tobool, label %if.then, label %if.end, !dbg !11277

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !11278
  %dm2 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %2, i32 0, i32 1, !dbg !11280
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2, align 8, !dbg !11280
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 95, !dbg !11281
  %4 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !11281
  %5 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !11282
  %dm3 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %5, i32 0, i32 1, !dbg !11283
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm3, align 8, !dbg !11283
  call void %4(%struct.DerivedMesh* %6), !dbg !11278
  br label %if.end, !dbg !11284

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11285
  %call = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %7), !dbg !11286
  %8 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas.addr, align 8, !dbg !11287
  %dm4 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %8, i32 0, i32 1, !dbg !11288
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm4, align 8, !dbg !11289
  ret void, !dbg !11290
}

; Function Attrs: noinline nounwind uwtable
define internal void @surface_freeUnusedData(%struct.DynamicPaintSurface* %surface) #0 !dbg !11291 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11292, metadata !DIExpression()), !dbg !11293
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11294
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !11296
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !11296
  %tobool = icmp ne %struct.PaintSurfaceData* %1, null, !dbg !11294
  br i1 %tobool, label %if.end, label %if.then, !dbg !11297

if.then:                                          ; preds = %entry
  br label %if.end8, !dbg !11298

if.end:                                           ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11299
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 18, !dbg !11301
  %3 = load i32, i32* %flags, align 4, !dbg !11301
  %and = and i32 %3, 1, !dbg !11302
  %tobool1 = icmp ne i32 %and, 0, !dbg !11302
  br i1 %tobool1, label %lor.lhs.false, label %if.then6, !dbg !11303

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11304
  %pointcache = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 6, !dbg !11305
  %5 = load %struct.PointCache*, %struct.PointCache** %pointcache, align 8, !dbg !11305
  %tobool2 = icmp ne %struct.PointCache* %5, null, !dbg !11304
  br i1 %tobool2, label %land.lhs.true, label %if.end8, !dbg !11306

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11307
  %pointcache3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 6, !dbg !11308
  %7 = load %struct.PointCache*, %struct.PointCache** %pointcache3, align 8, !dbg !11308
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %7, i32 0, i32 2, !dbg !11309
  %8 = load i32, i32* %flag, align 8, !dbg !11309
  %and4 = and i32 %8, 1, !dbg !11310
  %tobool5 = icmp ne i32 %and4, 0, !dbg !11310
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !11311

if.then6:                                         ; preds = %land.lhs.true, %if.end
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11312
  %data7 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 3, !dbg !11314
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data7, align 8, !dbg !11314
  call void @free_bakeData(%struct.PaintSurfaceData* %10), !dbg !11315
  br label %if.end8, !dbg !11316

if.end8:                                          ; preds = %if.then, %if.then6, %land.lhs.true, %lor.lhs.false
  ret void, !dbg !11317
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dynamicPaint_checkSurfaceData(%struct.Scene* %scene, %struct.DynamicPaintSurface* %surface) #0 !dbg !11318 {
entry:
  %retval = alloca i8, align 1
  %scene.addr = alloca %struct.Scene*, align 8
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11319, metadata !DIExpression()), !dbg !11320
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11321, metadata !DIExpression()), !dbg !11322
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11323
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !11325
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !11325
  %tobool = icmp ne %struct.PaintSurfaceData* %1, null, !dbg !11323
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11326

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11327
  %call = call i32 @dynamicPaint_surfaceNumOfPoints(%struct.DynamicPaintSurface* %2), !dbg !11328
  %3 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11329
  %data1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %3, i32 0, i32 3, !dbg !11330
  %4 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data1, align 8, !dbg !11330
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %4, i32 0, i32 4, !dbg !11331
  %5 = load i32, i32* %total_points, align 8, !dbg !11331
  %cmp = icmp ne i32 %call, %5, !dbg !11332
  br i1 %cmp, label %if.then, label %if.end, !dbg !11333

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11334
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11336
  %call2 = call zeroext i8 @dynamicPaint_resetSurface(%struct.Scene* %6, %struct.DynamicPaintSurface* %7), !dbg !11337
  store i8 %call2, i8* %retval, align 1, !dbg !11338
  br label %return, !dbg !11338

if.end:                                           ; preds = %lor.lhs.false
  store i8 1, i8* %retval, align 1, !dbg !11339
  br label %return, !dbg !11339

return:                                           ; preds = %if.end, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !11340
  ret i8 %8, !dbg !11340
}

declare dso_local void @BKE_ptcache_id_from_dynamicpaint(%struct.PTCacheID*, %struct.Object*, %struct.DynamicPaintSurface*) #2

declare dso_local void @BKE_ptcache_id_time(%struct.PTCacheID*, %struct.Scene*, float, i32*, i32*, float*) #2

declare dso_local i32 @BKE_ptcache_id_reset(%struct.Scene*, %struct.PTCacheID*, i32) #2

declare dso_local i32 @BKE_ptcache_read(%struct.PTCacheID*, float) #2

declare dso_local void @BKE_ptcache_validate(%struct.PointCache*, i32) #2

declare dso_local i32 @BKE_ptcache_write(%struct.PTCacheID*, i32) #2

declare dso_local %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh*) #2

declare dso_local %struct.MLoop* @CDDM_get_loops(%struct.DerivedMesh*) #2

declare dso_local %struct.MPoly* @CDDM_get_polys(%struct.DerivedMesh*) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local i8* @CustomData_add_layer_named(%struct.CustomData*, i32, i32, i8*, i32, i8*) #2

declare dso_local void @DM_update_weight_mcol(%struct.Object*, %struct.DerivedMesh*, i32, float*, i32, i32*) #2

declare dso_local %struct.MDeformWeight* @defvert_find_index(%struct.MDeformVert*, i32) #2

declare dso_local %struct.MDeformWeight* @defvert_verify_index(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !11341 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !11344, metadata !DIExpression()), !dbg !11345
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !11346, metadata !DIExpression()), !dbg !11347
  %0 = load i16*, i16** %in.addr, align 8, !dbg !11348
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !11348
  %1 = load i16, i16* %arrayidx, align 2, !dbg !11348
  %conv = sext i16 %1 to i32, !dbg !11348
  %conv1 = sitofp i32 %conv to float, !dbg !11348
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !11349
  %2 = load float*, float** %out.addr, align 8, !dbg !11350
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !11350
  store float %mul, float* %arrayidx2, align 4, !dbg !11351
  %3 = load i16*, i16** %in.addr, align 8, !dbg !11352
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !11352
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !11352
  %conv4 = sext i16 %4 to i32, !dbg !11352
  %conv5 = sitofp i32 %conv4 to float, !dbg !11352
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !11353
  %5 = load float*, float** %out.addr, align 8, !dbg !11354
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !11354
  store float %mul6, float* %arrayidx7, align 4, !dbg !11355
  %6 = load i16*, i16** %in.addr, align 8, !dbg !11356
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !11356
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !11356
  %conv9 = sext i16 %7 to i32, !dbg !11356
  %conv10 = sitofp i32 %conv9 to float, !dbg !11356
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !11357
  %8 = load float*, float** %out.addr, align 8, !dbg !11358
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !11358
  store float %mul11, float* %arrayidx12, align 4, !dbg !11359
  ret void, !dbg !11360
}

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !11361 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11366, metadata !DIExpression()), !dbg !11367
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  %0 = load float*, float** %a.addr, align 8, !dbg !11370
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11370
  %1 = load float, float* %arrayidx, align 4, !dbg !11370
  %2 = load float, float* %f.addr, align 4, !dbg !11371
  %mul = fmul float %1, %2, !dbg !11372
  %3 = load float*, float** %r.addr, align 8, !dbg !11373
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !11373
  %4 = load float, float* %arrayidx1, align 4, !dbg !11374
  %add = fadd float %4, %mul, !dbg !11374
  store float %add, float* %arrayidx1, align 4, !dbg !11374
  %5 = load float*, float** %a.addr, align 8, !dbg !11375
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !11375
  %6 = load float, float* %arrayidx2, align 4, !dbg !11375
  %7 = load float, float* %f.addr, align 4, !dbg !11376
  %mul3 = fmul float %6, %7, !dbg !11377
  %8 = load float*, float** %r.addr, align 8, !dbg !11378
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !11378
  %9 = load float, float* %arrayidx4, align 4, !dbg !11379
  %add5 = fadd float %9, %mul3, !dbg !11379
  store float %add5, float* %arrayidx4, align 4, !dbg !11379
  %10 = load float*, float** %a.addr, align 8, !dbg !11380
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11380
  %11 = load float, float* %arrayidx6, align 4, !dbg !11380
  %12 = load float, float* %f.addr, align 4, !dbg !11381
  %mul7 = fmul float %11, %12, !dbg !11382
  %13 = load float*, float** %r.addr, align 8, !dbg !11383
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !11383
  %14 = load float, float* %arrayidx8, align 4, !dbg !11384
  %add9 = fadd float %14, %mul7, !dbg !11384
  store float %add9, float* %arrayidx8, align 4, !dbg !11384
  ret void, !dbg !11385
}

declare dso_local float @dist_squared_to_line_segment_v2(float*, float*, float*) #2

declare dso_local float @closest_to_line_v2(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v2_fl(float* %r, float %f) #0 !dbg !11386 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11391, metadata !DIExpression()), !dbg !11392
  %0 = load float, float* %f.addr, align 4, !dbg !11393
  %1 = load float*, float** %r.addr, align 8, !dbg !11394
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !11394
  %2 = load float, float* %arrayidx, align 4, !dbg !11395
  %mul = fmul float %2, %0, !dbg !11395
  store float %mul, float* %arrayidx, align 4, !dbg !11395
  %3 = load float, float* %f.addr, align 4, !dbg !11396
  %4 = load float*, float** %r.addr, align 8, !dbg !11397
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !11397
  %5 = load float, float* %arrayidx1, align 4, !dbg !11398
  %mul2 = fmul float %5, %3, !dbg !11398
  store float %mul2, float* %arrayidx1, align 4, !dbg !11398
  ret void, !dbg !11399
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v2_v2(float* %r, float* %a) #0 !dbg !11400 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11401, metadata !DIExpression()), !dbg !11402
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11403, metadata !DIExpression()), !dbg !11404
  %0 = load float*, float** %a.addr, align 8, !dbg !11405
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11405
  %1 = load float, float* %arrayidx, align 4, !dbg !11405
  %2 = load float*, float** %r.addr, align 8, !dbg !11406
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11406
  %3 = load float, float* %arrayidx1, align 4, !dbg !11407
  %add = fadd float %3, %1, !dbg !11407
  store float %add, float* %arrayidx1, align 4, !dbg !11407
  %4 = load float*, float** %a.addr, align 8, !dbg !11408
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11408
  %5 = load float, float* %arrayidx2, align 4, !dbg !11408
  %6 = load float*, float** %r.addr, align 8, !dbg !11409
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11409
  %7 = load float, float* %arrayidx3, align 4, !dbg !11410
  %add4 = fadd float %7, %5, !dbg !11410
  store float %add4, float* %arrayidx3, align 4, !dbg !11410
  ret void, !dbg !11411
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !11412 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !11415, metadata !DIExpression()), !dbg !11416
  %0 = load float*, float** %n.addr, align 8, !dbg !11417
  %1 = load float*, float** %n.addr, align 8, !dbg !11418
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !11419
  ret float %call, !dbg !11420
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !11421 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11424, metadata !DIExpression()), !dbg !11425
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11426, metadata !DIExpression()), !dbg !11427
  call void @llvm.dbg.declare(metadata float* %d, metadata !11428, metadata !DIExpression()), !dbg !11429
  %0 = load float*, float** %a.addr, align 8, !dbg !11430
  %1 = load float*, float** %a.addr, align 8, !dbg !11431
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !11432
  store float %call, float* %d, align 4, !dbg !11429
  %2 = load float, float* %d, align 4, !dbg !11433
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !11435
  br i1 %cmp, label %if.then, label %if.else, !dbg !11436

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !11437
  %call1 = call float @sqrtf(float %3) #7, !dbg !11439
  store float %call1, float* %d, align 4, !dbg !11440
  %4 = load float*, float** %r.addr, align 8, !dbg !11441
  %5 = load float*, float** %a.addr, align 8, !dbg !11442
  %6 = load float, float* %d, align 4, !dbg !11443
  %div = fdiv float 1.000000e+00, %6, !dbg !11444
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !11445
  br label %if.end, !dbg !11446

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !11447
  call void @zero_v3(float* %7), !dbg !11449
  store float 0.000000e+00, float* %d, align 4, !dbg !11450
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !11451
  ret float %8, !dbg !11452
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !11453 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11456, metadata !DIExpression()), !dbg !11457
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11458, metadata !DIExpression()), !dbg !11459
  %0 = load float*, float** %a.addr, align 8, !dbg !11460
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11460
  %1 = load float, float* %arrayidx, align 4, !dbg !11460
  %2 = load float*, float** %b.addr, align 8, !dbg !11461
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11461
  %3 = load float, float* %arrayidx1, align 4, !dbg !11461
  %mul = fmul float %1, %3, !dbg !11462
  %4 = load float*, float** %a.addr, align 8, !dbg !11463
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11463
  %5 = load float, float* %arrayidx2, align 4, !dbg !11463
  %6 = load float*, float** %b.addr, align 8, !dbg !11464
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11464
  %7 = load float, float* %arrayidx3, align 4, !dbg !11464
  %mul4 = fmul float %5, %7, !dbg !11465
  %add = fadd float %mul, %mul4, !dbg !11466
  %8 = load float*, float** %a.addr, align 8, !dbg !11467
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11467
  %9 = load float, float* %arrayidx5, align 4, !dbg !11467
  %10 = load float*, float** %b.addr, align 8, !dbg !11468
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11468
  %11 = load float, float* %arrayidx6, align 4, !dbg !11468
  %mul7 = fmul float %9, %11, !dbg !11469
  %add8 = fadd float %add, %mul7, !dbg !11470
  ret float %add8, !dbg !11471
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !11472 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11473, metadata !DIExpression()), !dbg !11474
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11475, metadata !DIExpression()), !dbg !11476
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11477, metadata !DIExpression()), !dbg !11478
  %0 = load float*, float** %a.addr, align 8, !dbg !11479
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11479
  %1 = load float, float* %arrayidx, align 4, !dbg !11479
  %2 = load float, float* %f.addr, align 4, !dbg !11480
  %mul = fmul float %1, %2, !dbg !11481
  %3 = load float*, float** %r.addr, align 8, !dbg !11482
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !11482
  store float %mul, float* %arrayidx1, align 4, !dbg !11483
  %4 = load float*, float** %a.addr, align 8, !dbg !11484
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11484
  %5 = load float, float* %arrayidx2, align 4, !dbg !11484
  %6 = load float, float* %f.addr, align 4, !dbg !11485
  %mul3 = fmul float %5, %6, !dbg !11486
  %7 = load float*, float** %r.addr, align 8, !dbg !11487
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11487
  store float %mul3, float* %arrayidx4, align 4, !dbg !11488
  %8 = load float*, float** %a.addr, align 8, !dbg !11489
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11489
  %9 = load float, float* %arrayidx5, align 4, !dbg !11489
  %10 = load float, float* %f.addr, align 4, !dbg !11490
  %mul6 = fmul float %9, %10, !dbg !11491
  %11 = load float*, float** %r.addr, align 8, !dbg !11492
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !11492
  store float %mul6, float* %arrayidx7, align 4, !dbg !11493
  ret void, !dbg !11494
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !11495 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  %0 = load float*, float** %r.addr, align 8, !dbg !11500
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11500
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !11501
  %1 = load float*, float** %r.addr, align 8, !dbg !11502
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !11502
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !11503
  %2 = load float*, float** %r.addr, align 8, !dbg !11504
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !11504
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !11505
  ret void, !dbg !11506
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_needsVelocityData(%struct.DynamicPaintSurface* %surface, %struct.Scene* %scene) #0 !dbg !11507 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11510, metadata !DIExpression()), !dbg !11511
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !11512, metadata !DIExpression()), !dbg !11513
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11514
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 19, !dbg !11516
  %1 = load i32, i32* %effect, align 8, !dbg !11516
  %and = and i32 %1, 2, !dbg !11517
  %tobool = icmp ne i32 %and, 0, !dbg !11517
  br i1 %tobool, label %if.then, label %if.end, !dbg !11518

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11519
  br label %return, !dbg !11519

if.end:                                           ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11520
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !11522
  %call = call i32 @surface_getBrushFlags(%struct.DynamicPaintSurface* %2, %struct.Scene* %3), !dbg !11523
  %and1 = and i32 %call, 1, !dbg !11524
  %tobool2 = icmp ne i32 %and1, 0, !dbg !11524
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !11525

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11526
  br label %return, !dbg !11526

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11527
  br label %return, !dbg !11527

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !11528
  ret i32 %4, !dbg !11528
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_needsAccelerationData(%struct.DynamicPaintSurface* %surface) #0 !dbg !11529 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11530, metadata !DIExpression()), !dbg !11531
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11532
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 19, !dbg !11534
  %1 = load i32, i32* %effect, align 8, !dbg !11534
  %and = and i32 %1, 2, !dbg !11535
  %tobool = icmp ne i32 %and, 0, !dbg !11535
  br i1 %tobool, label %if.then, label %if.end, !dbg !11536

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11537
  br label %return, !dbg !11537

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11538
  br label %return, !dbg !11538

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !11539
  ret i32 %2, !dbg !11539
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_surfaceHasMoved(%struct.DynamicPaintSurface* %surface, %struct.Object* %ob) #0 !dbg !11540 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %numOfVerts = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %j = alloca i32, align 4
  %j22 = alloca i32, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11543, metadata !DIExpression()), !dbg !11544
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !11545, metadata !DIExpression()), !dbg !11546
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !11547, metadata !DIExpression()), !dbg !11548
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11549
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !11550
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !11550
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !11548
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !11551, metadata !DIExpression()), !dbg !11552
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11553
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !11554
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !11554
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !11552
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !11555, metadata !DIExpression()), !dbg !11556
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11557
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 2, !dbg !11558
  %5 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !11558
  %dm2 = getelementptr inbounds %struct.DynamicPaintCanvasSettings, %struct.DynamicPaintCanvasSettings* %5, i32 0, i32 1, !dbg !11559
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2, align 8, !dbg !11559
  store %struct.DerivedMesh* %6, %struct.DerivedMesh** %dm, align 8, !dbg !11556
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !11560, metadata !DIExpression()), !dbg !11561
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11562
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 31, !dbg !11563
  %8 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !11563
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11564
  %call = call %struct.MVert* %8(%struct.DerivedMesh* %9), !dbg !11562
  store %struct.MVert* %call, %struct.MVert** %mvert, align 8, !dbg !11561
  call void @llvm.dbg.declare(metadata i32* %numOfVerts, metadata !11565, metadata !DIExpression()), !dbg !11566
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11567
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 23, !dbg !11568
  %11 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !11568
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !11569
  %call3 = call i32 %11(%struct.DerivedMesh* %12), !dbg !11567
  store i32 %call3, i32* %numOfVerts, align 4, !dbg !11566
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11570, metadata !DIExpression()), !dbg !11571
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11572, metadata !DIExpression()), !dbg !11573
  store i32 0, i32* %ret, align 4, !dbg !11573
  %13 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11574
  %prev_verts = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %13, i32 0, i32 11, !dbg !11576
  %14 = load %struct.MVert*, %struct.MVert** %prev_verts, align 8, !dbg !11576
  %tobool = icmp ne %struct.MVert* %14, null, !dbg !11574
  br i1 %tobool, label %if.end, label %if.then, !dbg !11577

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !11578
  br label %return, !dbg !11578

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !11579
  br label %for.cond, !dbg !11581

for.cond:                                         ; preds = %for.inc16, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !11582
  %cmp = icmp slt i32 %15, 4, !dbg !11584
  br i1 %cmp, label %for.body, label %for.end18, !dbg !11585

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11586, metadata !DIExpression()), !dbg !11588
  store i32 0, i32* %j, align 4, !dbg !11589
  br label %for.cond4, !dbg !11591

for.cond4:                                        ; preds = %for.inc, %for.body
  %16 = load i32, i32* %j, align 4, !dbg !11592
  %cmp5 = icmp slt i32 %16, 4, !dbg !11594
  br i1 %cmp5, label %for.body6, label %for.end, !dbg !11595

for.body6:                                        ; preds = %for.cond4
  %17 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11596
  %prev_obmat = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %17, i32 0, i32 12, !dbg !11598
  %18 = load i32, i32* %i, align 4, !dbg !11599
  %idxprom = sext i32 %18 to i64, !dbg !11596
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 %idxprom, !dbg !11596
  %19 = load i32, i32* %j, align 4, !dbg !11600
  %idxprom7 = sext i32 %19 to i64, !dbg !11596
  %arrayidx8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 %idxprom7, !dbg !11596
  %20 = load float, float* %arrayidx8, align 4, !dbg !11596
  %21 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !11601
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 47, !dbg !11602
  %22 = load i32, i32* %i, align 4, !dbg !11603
  %idxprom9 = sext i32 %22 to i64, !dbg !11601
  %arrayidx10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 %idxprom9, !dbg !11601
  %23 = load i32, i32* %j, align 4, !dbg !11604
  %idxprom11 = sext i32 %23 to i64, !dbg !11601
  %arrayidx12 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx10, i64 0, i64 %idxprom11, !dbg !11601
  %24 = load float, float* %arrayidx12, align 4, !dbg !11601
  %cmp13 = fcmp une float %20, %24, !dbg !11605
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !11606

if.then14:                                        ; preds = %for.body6
  store i32 1, i32* %retval, align 4, !dbg !11607
  br label %return, !dbg !11607

if.end15:                                         ; preds = %for.body6
  br label %for.inc, !dbg !11608

for.inc:                                          ; preds = %if.end15
  %25 = load i32, i32* %j, align 4, !dbg !11609
  %inc = add nsw i32 %25, 1, !dbg !11609
  store i32 %inc, i32* %j, align 4, !dbg !11609
  br label %for.cond4, !dbg !11610, !llvm.loop !11611

for.end:                                          ; preds = %for.cond4
  br label %for.inc16, !dbg !11613

for.inc16:                                        ; preds = %for.end
  %26 = load i32, i32* %i, align 4, !dbg !11614
  %inc17 = add nsw i32 %26, 1, !dbg !11614
  store i32 %inc17, i32* %i, align 4, !dbg !11614
  br label %for.cond, !dbg !11615, !llvm.loop !11616

for.end18:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11618
  br label %for.cond19, !dbg !11620

for.cond19:                                       ; preds = %for.inc42, %for.end18
  %27 = load i32, i32* %i, align 4, !dbg !11621
  %28 = load i32, i32* %numOfVerts, align 4, !dbg !11623
  %cmp20 = icmp slt i32 %27, %28, !dbg !11624
  br i1 %cmp20, label %for.body21, label %for.end44, !dbg !11625

for.body21:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata i32* %j22, metadata !11626, metadata !DIExpression()), !dbg !11628
  store i32 0, i32* %j22, align 4, !dbg !11629
  br label %for.cond23, !dbg !11631

for.cond23:                                       ; preds = %for.inc39, %for.body21
  %29 = load i32, i32* %j22, align 4, !dbg !11632
  %cmp24 = icmp slt i32 %29, 3, !dbg !11634
  br i1 %cmp24, label %for.body25, label %for.end41, !dbg !11635

for.body25:                                       ; preds = %for.cond23
  %30 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11636
  %prev_verts26 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %30, i32 0, i32 11, !dbg !11638
  %31 = load %struct.MVert*, %struct.MVert** %prev_verts26, align 8, !dbg !11638
  %32 = load i32, i32* %i, align 4, !dbg !11639
  %idxprom27 = sext i32 %32 to i64, !dbg !11636
  %arrayidx28 = getelementptr inbounds %struct.MVert, %struct.MVert* %31, i64 %idxprom27, !dbg !11636
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx28, i32 0, i32 0, !dbg !11640
  %33 = load i32, i32* %j22, align 4, !dbg !11641
  %idxprom29 = sext i32 %33 to i64, !dbg !11636
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 %idxprom29, !dbg !11636
  %34 = load float, float* %arrayidx30, align 4, !dbg !11636
  %35 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !11642
  %36 = load i32, i32* %i, align 4, !dbg !11643
  %idxprom31 = sext i32 %36 to i64, !dbg !11642
  %arrayidx32 = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i64 %idxprom31, !dbg !11642
  %co33 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx32, i32 0, i32 0, !dbg !11644
  %37 = load i32, i32* %j22, align 4, !dbg !11645
  %idxprom34 = sext i32 %37 to i64, !dbg !11642
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %co33, i64 0, i64 %idxprom34, !dbg !11642
  %38 = load float, float* %arrayidx35, align 4, !dbg !11642
  %cmp36 = fcmp une float %34, %38, !dbg !11646
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !11647

if.then37:                                        ; preds = %for.body25
  store i32 1, i32* %ret, align 4, !dbg !11648
  br label %for.end41, !dbg !11650

if.end38:                                         ; preds = %for.body25
  br label %for.inc39, !dbg !11651

for.inc39:                                        ; preds = %if.end38
  %39 = load i32, i32* %j22, align 4, !dbg !11652
  %inc40 = add nsw i32 %39, 1, !dbg !11652
  store i32 %inc40, i32* %j22, align 4, !dbg !11652
  br label %for.cond23, !dbg !11653, !llvm.loop !11654

for.end41:                                        ; preds = %if.then37, %for.cond23
  br label %for.inc42, !dbg !11656

for.inc42:                                        ; preds = %for.end41
  %40 = load i32, i32* %i, align 4, !dbg !11657
  %inc43 = add nsw i32 %40, 1, !dbg !11657
  store i32 %inc43, i32* %i, align 4, !dbg !11657
  br label %for.cond19, !dbg !11658, !llvm.loop !11659

for.end44:                                        ; preds = %for.cond19
  %41 = load i32, i32* %ret, align 4, !dbg !11661
  store i32 %41, i32* %retval, align 4, !dbg !11662
  br label %return, !dbg !11662

return:                                           ; preds = %for.end44, %if.then14, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !11663
  ret i32 %42, !dbg !11663
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_totalSamples(%struct.DynamicPaintSurface* %surface) #0 !dbg !11664 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11665, metadata !DIExpression()), !dbg !11666
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11667
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 10, !dbg !11669
  %1 = load i16, i16* %format, align 4, !dbg !11669
  %conv = sext i16 %1 to i32, !dbg !11667
  %cmp = icmp eq i32 %conv, 2, !dbg !11670
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11671

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11672
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 18, !dbg !11673
  %3 = load i32, i32* %flags, align 4, !dbg !11673
  %and = and i32 %3, 2, !dbg !11674
  %tobool = icmp ne i32 %and, 0, !dbg !11674
  br i1 %tobool, label %if.then, label %if.end, !dbg !11675

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11676
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 3, !dbg !11678
  %5 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !11678
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %5, i32 0, i32 4, !dbg !11679
  %6 = load i32, i32* %total_points, align 8, !dbg !11679
  %mul = mul nsw i32 %6, 5, !dbg !11680
  store i32 %mul, i32* %retval, align 4, !dbg !11681
  br label %return, !dbg !11681

if.end:                                           ; preds = %land.lhs.true, %entry
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11682
  %format2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 10, !dbg !11684
  %8 = load i16, i16* %format2, align 4, !dbg !11684
  %conv3 = sext i16 %8 to i32, !dbg !11682
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !11685
  br i1 %cmp4, label %land.lhs.true6, label %if.end18, !dbg !11686

land.lhs.true6:                                   ; preds = %if.end
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11687
  %flags7 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 18, !dbg !11688
  %10 = load i32, i32* %flags7, align 4, !dbg !11688
  %and8 = and i32 %10, 2, !dbg !11689
  %tobool9 = icmp ne i32 %and8, 0, !dbg !11689
  br i1 %tobool9, label %land.lhs.true10, label %if.end18, !dbg !11690

land.lhs.true10:                                  ; preds = %land.lhs.true6
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11691
  %data11 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 3, !dbg !11692
  %12 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data11, align 8, !dbg !11692
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %12, i32 0, i32 2, !dbg !11693
  %13 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !11693
  %tobool12 = icmp ne %struct.PaintAdjData* %13, null, !dbg !11691
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !11694

if.then13:                                        ; preds = %land.lhs.true10
  %14 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11695
  %data14 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %14, i32 0, i32 3, !dbg !11697
  %15 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data14, align 8, !dbg !11697
  %total_points15 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %15, i32 0, i32 4, !dbg !11698
  %16 = load i32, i32* %total_points15, align 8, !dbg !11698
  %17 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11699
  %data16 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %17, i32 0, i32 3, !dbg !11700
  %18 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data16, align 8, !dbg !11700
  %adj_data17 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %18, i32 0, i32 2, !dbg !11701
  %19 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data17, align 8, !dbg !11701
  %total_targets = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %19, i32 0, i32 4, !dbg !11702
  %20 = load i32, i32* %total_targets, align 8, !dbg !11702
  %add = add nsw i32 %16, %20, !dbg !11703
  store i32 %add, i32* %retval, align 4, !dbg !11704
  br label %return, !dbg !11704

if.end18:                                         ; preds = %land.lhs.true10, %land.lhs.true6, %if.end
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11705
  %data19 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 3, !dbg !11706
  %22 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data19, align 8, !dbg !11706
  %total_points20 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %22, i32 0, i32 4, !dbg !11707
  %23 = load i32, i32* %total_points20, align 8, !dbg !11707
  store i32 %23, i32* %retval, align 4, !dbg !11708
  br label %return, !dbg !11708

return:                                           ; preds = %if.end18, %if.then13, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !11709
  ret i32 %24, !dbg !11709
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @boundInsert(%struct.Bounds3D* %b, float* %point) #0 !dbg !11710 {
entry:
  %b.addr = alloca %struct.Bounds3D*, align 8
  %point.addr = alloca float*, align 8
  %i = alloca i32, align 4
  store %struct.Bounds3D* %b, %struct.Bounds3D** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b.addr, metadata !11713, metadata !DIExpression()), !dbg !11714
  store float* %point, float** %point.addr, align 8
  call void @llvm.dbg.declare(metadata float** %point.addr, metadata !11715, metadata !DIExpression()), !dbg !11716
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11717, metadata !DIExpression()), !dbg !11718
  store i32 2, i32* %i, align 4, !dbg !11718
  %0 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11719
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %0, i32 0, i32 0, !dbg !11721
  %1 = load i32, i32* %valid, align 4, !dbg !11721
  %tobool = icmp ne i32 %1, 0, !dbg !11719
  br i1 %tobool, label %if.else, label %if.then, !dbg !11722

if.then:                                          ; preds = %entry
  %2 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11723
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %2, i32 0, i32 1, !dbg !11725
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !11723
  %3 = load float*, float** %point.addr, align 8, !dbg !11726
  call void @copy_v3_v3(float* %arraydecay, float* %3), !dbg !11727
  %4 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11728
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %4, i32 0, i32 2, !dbg !11729
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !11728
  %5 = load float*, float** %point.addr, align 8, !dbg !11730
  call void @copy_v3_v3(float* %arraydecay1, float* %5), !dbg !11731
  %6 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11732
  %valid2 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %6, i32 0, i32 0, !dbg !11733
  store i32 1, i32* %valid2, align 4, !dbg !11734
  br label %if.end26, !dbg !11735

if.else:                                          ; preds = %entry
  br label %for.cond, !dbg !11736

for.cond:                                         ; preds = %for.inc, %if.else
  %7 = load i32, i32* %i, align 4, !dbg !11738
  %cmp = icmp sge i32 %7, 0, !dbg !11741
  br i1 %cmp, label %for.body, label %for.end, !dbg !11742

for.body:                                         ; preds = %for.cond
  %8 = load float*, float** %point.addr, align 8, !dbg !11743
  %9 = load i32, i32* %i, align 4, !dbg !11746
  %idxprom = sext i32 %9 to i64, !dbg !11743
  %arrayidx = getelementptr inbounds float, float* %8, i64 %idxprom, !dbg !11743
  %10 = load float, float* %arrayidx, align 4, !dbg !11743
  %11 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11747
  %min3 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %11, i32 0, i32 1, !dbg !11748
  %12 = load i32, i32* %i, align 4, !dbg !11749
  %idxprom4 = sext i32 %12 to i64, !dbg !11747
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %min3, i64 0, i64 %idxprom4, !dbg !11747
  %13 = load float, float* %arrayidx5, align 4, !dbg !11747
  %cmp6 = fcmp olt float %10, %13, !dbg !11750
  br i1 %cmp6, label %if.then7, label %if.end, !dbg !11751

if.then7:                                         ; preds = %for.body
  %14 = load float*, float** %point.addr, align 8, !dbg !11752
  %15 = load i32, i32* %i, align 4, !dbg !11753
  %idxprom8 = sext i32 %15 to i64, !dbg !11752
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 %idxprom8, !dbg !11752
  %16 = load float, float* %arrayidx9, align 4, !dbg !11752
  %17 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11754
  %min10 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %17, i32 0, i32 1, !dbg !11755
  %18 = load i32, i32* %i, align 4, !dbg !11756
  %idxprom11 = sext i32 %18 to i64, !dbg !11754
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %min10, i64 0, i64 %idxprom11, !dbg !11754
  store float %16, float* %arrayidx12, align 4, !dbg !11757
  br label %if.end, !dbg !11754

if.end:                                           ; preds = %if.then7, %for.body
  %19 = load float*, float** %point.addr, align 8, !dbg !11758
  %20 = load i32, i32* %i, align 4, !dbg !11760
  %idxprom13 = sext i32 %20 to i64, !dbg !11758
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 %idxprom13, !dbg !11758
  %21 = load float, float* %arrayidx14, align 4, !dbg !11758
  %22 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11761
  %max15 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %22, i32 0, i32 2, !dbg !11762
  %23 = load i32, i32* %i, align 4, !dbg !11763
  %idxprom16 = sext i32 %23 to i64, !dbg !11761
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %max15, i64 0, i64 %idxprom16, !dbg !11761
  %24 = load float, float* %arrayidx17, align 4, !dbg !11761
  %cmp18 = fcmp ogt float %21, %24, !dbg !11764
  br i1 %cmp18, label %if.then19, label %if.end25, !dbg !11765

if.then19:                                        ; preds = %if.end
  %25 = load float*, float** %point.addr, align 8, !dbg !11766
  %26 = load i32, i32* %i, align 4, !dbg !11767
  %idxprom20 = sext i32 %26 to i64, !dbg !11766
  %arrayidx21 = getelementptr inbounds float, float* %25, i64 %idxprom20, !dbg !11766
  %27 = load float, float* %arrayidx21, align 4, !dbg !11766
  %28 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !11768
  %max22 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %28, i32 0, i32 2, !dbg !11769
  %29 = load i32, i32* %i, align 4, !dbg !11770
  %idxprom23 = sext i32 %29 to i64, !dbg !11768
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %max22, i64 0, i64 %idxprom23, !dbg !11768
  store float %27, float* %arrayidx24, align 4, !dbg !11771
  br label %if.end25, !dbg !11768

if.end25:                                         ; preds = %if.then19, %if.end
  br label %for.inc, !dbg !11772

for.inc:                                          ; preds = %if.end25
  %30 = load i32, i32* %i, align 4, !dbg !11773
  %sub = sub nsw i32 %30, 1, !dbg !11773
  store i32 %sub, i32* %i, align 4, !dbg !11773
  br label %for.cond, !dbg !11774, !llvm.loop !11775

for.end:                                          ; preds = %for.cond
  br label %if.end26

if.end26:                                         ; preds = %for.end, %if.then
  ret void, !dbg !11777
}

declare dso_local void @mul_mat3_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !11778 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11779, metadata !DIExpression()), !dbg !11780
  %0 = load float*, float** %r.addr, align 8, !dbg !11781
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11781
  %1 = load float, float* %arrayidx, align 4, !dbg !11781
  %fneg = fneg float %1, !dbg !11782
  %2 = load float*, float** %r.addr, align 8, !dbg !11783
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11783
  store float %fneg, float* %arrayidx1, align 4, !dbg !11784
  %3 = load float*, float** %r.addr, align 8, !dbg !11785
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !11785
  %4 = load float, float* %arrayidx2, align 4, !dbg !11785
  %fneg3 = fneg float %4, !dbg !11786
  %5 = load float*, float** %r.addr, align 8, !dbg !11787
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !11787
  store float %fneg3, float* %arrayidx4, align 4, !dbg !11788
  %6 = load float*, float** %r.addr, align 8, !dbg !11789
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !11789
  %7 = load float, float* %arrayidx5, align 4, !dbg !11789
  %fneg6 = fneg float %7, !dbg !11790
  %8 = load float*, float** %r.addr, align 8, !dbg !11791
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !11791
  store float %fneg6, float* %arrayidx7, align 4, !dbg !11792
  ret void, !dbg !11793
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !11794 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11795, metadata !DIExpression()), !dbg !11796
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !11797, metadata !DIExpression()), !dbg !11798
  %0 = load float, float* %f.addr, align 4, !dbg !11799
  %1 = load float*, float** %r.addr, align 8, !dbg !11800
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !11800
  %2 = load float, float* %arrayidx, align 4, !dbg !11801
  %mul = fmul float %2, %0, !dbg !11801
  store float %mul, float* %arrayidx, align 4, !dbg !11801
  %3 = load float, float* %f.addr, align 4, !dbg !11802
  %4 = load float*, float** %r.addr, align 8, !dbg !11803
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !11803
  %5 = load float, float* %arrayidx1, align 4, !dbg !11804
  %mul2 = fmul float %5, %3, !dbg !11804
  store float %mul2, float* %arrayidx1, align 4, !dbg !11804
  %6 = load float, float* %f.addr, align 4, !dbg !11805
  %7 = load float*, float** %r.addr, align 8, !dbg !11806
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !11806
  %8 = load float, float* %arrayidx3, align 4, !dbg !11807
  %mul4 = fmul float %8, %6, !dbg !11807
  store float %mul4, float* %arrayidx3, align 4, !dbg !11807
  ret void, !dbg !11808
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3(float* %r, float* %a) #0 !dbg !11809 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  %0 = load float*, float** %a.addr, align 8, !dbg !11814
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11814
  %1 = load float, float* %arrayidx, align 4, !dbg !11814
  %2 = load float*, float** %r.addr, align 8, !dbg !11815
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11815
  %3 = load float, float* %arrayidx1, align 4, !dbg !11816
  %mul = fmul float %3, %1, !dbg !11816
  store float %mul, float* %arrayidx1, align 4, !dbg !11816
  %4 = load float*, float** %a.addr, align 8, !dbg !11817
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !11817
  %5 = load float, float* %arrayidx2, align 4, !dbg !11817
  %6 = load float*, float** %r.addr, align 8, !dbg !11818
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !11818
  %7 = load float, float* %arrayidx3, align 4, !dbg !11819
  %mul4 = fmul float %7, %5, !dbg !11819
  store float %mul4, float* %arrayidx3, align 4, !dbg !11819
  %8 = load float*, float** %a.addr, align 8, !dbg !11820
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !11820
  %9 = load float, float* %arrayidx5, align 4, !dbg !11820
  %10 = load float*, float** %r.addr, align 8, !dbg !11821
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !11821
  %11 = load float, float* %arrayidx6, align 4, !dbg !11822
  %mul7 = fmul float %11, %9, !dbg !11822
  store float %mul7, float* %arrayidx6, align 4, !dbg !11822
  ret void, !dbg !11823
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !11824 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11827, metadata !DIExpression()), !dbg !11828
  %0 = load float*, float** %a.addr, align 8, !dbg !11829
  %1 = load float*, float** %a.addr, align 8, !dbg !11830
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !11831
  %call1 = call float @sqrtf(float %call) #7, !dbg !11832
  ret float %call1, !dbg !11833
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !11834 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !11835, metadata !DIExpression()), !dbg !11836
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !11837, metadata !DIExpression()), !dbg !11838
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !11839, metadata !DIExpression()), !dbg !11840
  %0 = load float*, float** %a.addr, align 8, !dbg !11841
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !11841
  %1 = load float, float* %arrayidx, align 4, !dbg !11841
  %2 = load float*, float** %b.addr, align 8, !dbg !11842
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !11842
  %3 = load float, float* %arrayidx1, align 4, !dbg !11842
  %sub = fsub float %1, %3, !dbg !11843
  %4 = load float*, float** %r.addr, align 8, !dbg !11844
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !11844
  store float %sub, float* %arrayidx2, align 4, !dbg !11845
  %5 = load float*, float** %a.addr, align 8, !dbg !11846
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !11846
  %6 = load float, float* %arrayidx3, align 4, !dbg !11846
  %7 = load float*, float** %b.addr, align 8, !dbg !11847
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !11847
  %8 = load float, float* %arrayidx4, align 4, !dbg !11847
  %sub5 = fsub float %6, %8, !dbg !11848
  %9 = load float*, float** %r.addr, align 8, !dbg !11849
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !11849
  store float %sub5, float* %arrayidx6, align 4, !dbg !11850
  %10 = load float*, float** %a.addr, align 8, !dbg !11851
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !11851
  %11 = load float, float* %arrayidx7, align 4, !dbg !11851
  %12 = load float*, float** %b.addr, align 8, !dbg !11852
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !11852
  %13 = load float, float* %arrayidx8, align 4, !dbg !11852
  %sub9 = fsub float %11, %13, !dbg !11853
  %14 = load float*, float** %r.addr, align 8, !dbg !11854
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !11854
  store float %sub9, float* %arrayidx10, align 4, !dbg !11855
  ret void, !dbg !11856
}

; Function Attrs: noinline nounwind uwtable
define internal void @surfaceGenerateGrid(%struct.DynamicPaintSurface* %surface) #0 !dbg !11857 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %grid_bounds = alloca %struct.Bounds3D*, align 8
  %grid = alloca %struct.VolumeGrid*, align 8
  %grid_cells = alloca i32, align 4
  %axis = alloca i32, align 4
  %temp_t_index = alloca i32*, align 8
  %temp_s_num = alloca i32*, align 8
  %num_of_threads = alloca i32, align 4
  %i = alloca i32, align 4
  %error = alloca i32, align 4
  %dim_factor = alloca float, align 4
  %volume = alloca float, align 4
  %dim = alloca [3 x float], align 4
  %td = alloca [3 x float], align 4
  %min_dim = alloca float, align 4
  %co = alloca [3 x i32], align 4
  %j = alloca i32, align 4
  %id = alloca i32, align 4
  %pos = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %z = alloca i32, align 4
  %j356 = alloca i32, align 4
  %b_index = alloca i32, align 4
  %s = alloca i32, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !11858, metadata !DIExpression()), !dbg !11859
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !11860, metadata !DIExpression()), !dbg !11861
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !11862
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !11863
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !11863
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !11861
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !11864, metadata !DIExpression()), !dbg !11865
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11866
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !11867
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !11867
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !11865
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %grid_bounds, metadata !11868, metadata !DIExpression()), !dbg !11869
  call void @llvm.dbg.declare(metadata %struct.VolumeGrid** %grid, metadata !11870, metadata !DIExpression()), !dbg !11871
  call void @llvm.dbg.declare(metadata i32* %grid_cells, metadata !11872, metadata !DIExpression()), !dbg !11873
  call void @llvm.dbg.declare(metadata i32* %axis, metadata !11874, metadata !DIExpression()), !dbg !11875
  store i32 3, i32* %axis, align 4, !dbg !11875
  call void @llvm.dbg.declare(metadata i32** %temp_t_index, metadata !11876, metadata !DIExpression()), !dbg !11877
  store i32* null, i32** %temp_t_index, align 8, !dbg !11877
  call void @llvm.dbg.declare(metadata i32** %temp_s_num, metadata !11878, metadata !DIExpression()), !dbg !11879
  store i32* null, i32** %temp_s_num, align 8, !dbg !11879
  call void @llvm.dbg.declare(metadata i32* %num_of_threads, metadata !11880, metadata !DIExpression()), !dbg !11881
  store i32 1, i32* %num_of_threads, align 4, !dbg !11881
  %4 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11882
  %grid2 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %4, i32 0, i32 7, !dbg !11884
  %5 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid2, align 8, !dbg !11884
  %tobool = icmp ne %struct.VolumeGrid* %5, null, !dbg !11882
  br i1 %tobool, label %if.then, label %if.end, !dbg !11885

if.then:                                          ; preds = %entry
  %6 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11886
  call void @freeGrid(%struct.PaintSurfaceData* %6), !dbg !11887
  br label %if.end, !dbg !11887

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11888
  %8 = load i32, i32* %num_of_threads, align 4, !dbg !11889
  %conv = sext i32 %8 to i64, !dbg !11889
  %mul = mul i64 28, %conv, !dbg !11890
  %call = call i8* %7(i64 %mul, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)), !dbg !11888
  %9 = bitcast i8* %call to %struct.Bounds3D*, !dbg !11888
  store %struct.Bounds3D* %9, %struct.Bounds3D** %grid_bounds, align 8, !dbg !11891
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !11892
  %call3 = call i8* %10(i64 72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.47, i64 0, i64 0)), !dbg !11892
  %11 = bitcast i8* %call3 to %struct.VolumeGrid*, !dbg !11892
  %12 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11893
  %grid4 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %12, i32 0, i32 7, !dbg !11894
  store %struct.VolumeGrid* %11, %struct.VolumeGrid** %grid4, align 8, !dbg !11895
  %13 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11896
  %grid5 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %13, i32 0, i32 7, !dbg !11897
  %14 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid5, align 8, !dbg !11897
  store %struct.VolumeGrid* %14, %struct.VolumeGrid** %grid, align 8, !dbg !11898
  %15 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11899
  %tobool6 = icmp ne %struct.VolumeGrid* %15, null, !dbg !11899
  br i1 %tobool6, label %land.lhs.true, label %if.end456, !dbg !11901

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !11902
  %tobool7 = icmp ne %struct.Bounds3D* %16, null, !dbg !11902
  br i1 %tobool7, label %if.then8, label %if.end456, !dbg !11903

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11904, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.declare(metadata i32* %error, metadata !11907, metadata !DIExpression()), !dbg !11908
  store i32 0, i32* %error, align 4, !dbg !11908
  call void @llvm.dbg.declare(metadata float* %dim_factor, metadata !11909, metadata !DIExpression()), !dbg !11910
  call void @llvm.dbg.declare(metadata float* %volume, metadata !11911, metadata !DIExpression()), !dbg !11912
  call void @llvm.dbg.declare(metadata [3 x float]* %dim, metadata !11913, metadata !DIExpression()), !dbg !11914
  call void @llvm.dbg.declare(metadata [3 x float]* %td, metadata !11915, metadata !DIExpression()), !dbg !11916
  call void @llvm.dbg.declare(metadata float* %min_dim, metadata !11917, metadata !DIExpression()), !dbg !11918
  store i32 0, i32* %i, align 4, !dbg !11919
  br label %for.cond, !dbg !11921

for.cond:                                         ; preds = %for.inc, %if.then8
  %17 = load i32, i32* %i, align 4, !dbg !11922
  %18 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !11924
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %18, i32 0, i32 4, !dbg !11925
  %19 = load i32, i32* %total_points, align 8, !dbg !11925
  %cmp = icmp slt i32 %17, %19, !dbg !11926
  br i1 %cmp, label %for.body, label %for.end, !dbg !11927

for.body:                                         ; preds = %for.cond
  %20 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !11928
  %arrayidx = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %20, i64 0, !dbg !11928
  %21 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11930
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %21, i32 0, i32 3, !dbg !11931
  %22 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !11931
  %23 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !11932
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %23, i32 0, i32 1, !dbg !11933
  %24 = load i32*, i32** %s_pos, align 8, !dbg !11933
  %25 = load i32, i32* %i, align 4, !dbg !11934
  %idxprom = sext i32 %25 to i64, !dbg !11932
  %arrayidx10 = getelementptr inbounds i32, i32* %24, i64 %idxprom, !dbg !11932
  %26 = load i32, i32* %arrayidx10, align 4, !dbg !11932
  %idxprom11 = sext i32 %26 to i64, !dbg !11930
  %arrayidx12 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %22, i64 %idxprom11, !dbg !11930
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx12, i32 0, i32 0, !dbg !11935
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !11936
  call void @boundInsert(%struct.Bounds3D* %arrayidx, float* %arraydecay), !dbg !11937
  br label %for.inc, !dbg !11938

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !11939
  %inc = add nsw i32 %27, 1, !dbg !11939
  store i32 %inc, i32* %i, align 4, !dbg !11939
  br label %for.cond, !dbg !11940, !llvm.loop !11941

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11943
  br label %for.cond13, !dbg !11945

for.cond13:                                       ; preds = %for.inc25, %for.end
  %28 = load i32, i32* %i, align 4, !dbg !11946
  %29 = load i32, i32* %num_of_threads, align 4, !dbg !11948
  %cmp14 = icmp slt i32 %28, %29, !dbg !11949
  br i1 %cmp14, label %for.body16, label %for.end27, !dbg !11950

for.body16:                                       ; preds = %for.cond13
  %30 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11951
  %grid_bounds17 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %30, i32 0, i32 1, !dbg !11953
  %31 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !11954
  %32 = load i32, i32* %i, align 4, !dbg !11955
  %idxprom18 = sext i32 %32 to i64, !dbg !11954
  %arrayidx19 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %31, i64 %idxprom18, !dbg !11954
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %arrayidx19, i32 0, i32 1, !dbg !11956
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !11954
  call void @boundInsert(%struct.Bounds3D* %grid_bounds17, float* %arraydecay20), !dbg !11957
  %33 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11958
  %grid_bounds21 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %33, i32 0, i32 1, !dbg !11959
  %34 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !11960
  %35 = load i32, i32* %i, align 4, !dbg !11961
  %idxprom22 = sext i32 %35 to i64, !dbg !11960
  %arrayidx23 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %34, i64 %idxprom22, !dbg !11960
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %arrayidx23, i32 0, i32 2, !dbg !11962
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !11960
  call void @boundInsert(%struct.Bounds3D* %grid_bounds21, float* %arraydecay24), !dbg !11963
  br label %for.inc25, !dbg !11964

for.inc25:                                        ; preds = %for.body16
  %36 = load i32, i32* %i, align 4, !dbg !11965
  %inc26 = add nsw i32 %36, 1, !dbg !11965
  store i32 %inc26, i32* %i, align 4, !dbg !11965
  br label %for.cond13, !dbg !11966, !llvm.loop !11967

for.end27:                                        ; preds = %for.cond13
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 0, !dbg !11969
  %37 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11970
  %grid_bounds29 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %37, i32 0, i32 1, !dbg !11971
  %max30 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %grid_bounds29, i32 0, i32 2, !dbg !11972
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %max30, i64 0, i64 0, !dbg !11970
  %38 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !11973
  %grid_bounds32 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %38, i32 0, i32 1, !dbg !11974
  %min33 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %grid_bounds32, i32 0, i32 1, !dbg !11975
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %min33, i64 0, i64 0, !dbg !11973
  call void @sub_v3_v3v3(float* %arraydecay28, float* %arraydecay31, float* %arraydecay34), !dbg !11976
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 0, !dbg !11977
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 0, !dbg !11978
  call void @copy_v3_v3(float* %arraydecay35, float* %arraydecay36), !dbg !11979
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 0, !dbg !11980
  %39 = load float, float* %arrayidx37, align 4, !dbg !11980
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 1, !dbg !11981
  %40 = load float, float* %arrayidx38, align 4, !dbg !11981
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 2, !dbg !11982
  %41 = load float, float* %arrayidx39, align 4, !dbg !11982
  %call40 = call float @max_fff(float %39, float %40, float %41), !dbg !11983
  %div = fdiv float %call40, 1.000000e+03, !dbg !11984
  store float %div, float* %min_dim, align 4, !dbg !11985
  store i32 0, i32* %i, align 4, !dbg !11986
  br label %for.cond41, !dbg !11988

for.cond41:                                       ; preds = %for.inc53, %for.end27
  %42 = load i32, i32* %i, align 4, !dbg !11989
  %cmp42 = icmp slt i32 %42, 3, !dbg !11991
  br i1 %cmp42, label %for.body44, label %for.end55, !dbg !11992

for.body44:                                       ; preds = %for.cond41
  %43 = load i32, i32* %i, align 4, !dbg !11993
  %idxprom45 = sext i32 %43 to i64, !dbg !11996
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 %idxprom45, !dbg !11996
  %44 = load float, float* %arrayidx46, align 4, !dbg !11996
  %45 = load float, float* %min_dim, align 4, !dbg !11997
  %cmp47 = fcmp olt float %44, %45, !dbg !11998
  br i1 %cmp47, label %if.then49, label %if.end52, !dbg !11999

if.then49:                                        ; preds = %for.body44
  %46 = load i32, i32* %i, align 4, !dbg !12000
  %idxprom50 = sext i32 %46 to i64, !dbg !12002
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 %idxprom50, !dbg !12002
  store float 1.000000e+00, float* %arrayidx51, align 4, !dbg !12003
  %47 = load i32, i32* %axis, align 4, !dbg !12004
  %sub = sub nsw i32 %47, 1, !dbg !12004
  store i32 %sub, i32* %axis, align 4, !dbg !12004
  br label %if.end52, !dbg !12005

if.end52:                                         ; preds = %if.then49, %for.body44
  br label %for.inc53, !dbg !12006

for.inc53:                                        ; preds = %if.end52
  %48 = load i32, i32* %i, align 4, !dbg !12007
  %inc54 = add nsw i32 %48, 1, !dbg !12007
  store i32 %inc54, i32* %i, align 4, !dbg !12007
  br label %for.cond41, !dbg !12008, !llvm.loop !12009

for.end55:                                        ; preds = %for.cond41
  %49 = load i32, i32* %axis, align 4, !dbg !12011
  %cmp56 = icmp eq i32 %49, 0, !dbg !12013
  br i1 %cmp56, label %if.then64, label %lor.lhs.false, !dbg !12014

lor.lhs.false:                                    ; preds = %for.end55
  %arrayidx58 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 0, !dbg !12015
  %50 = load float, float* %arrayidx58, align 4, !dbg !12015
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 1, !dbg !12016
  %51 = load float, float* %arrayidx59, align 4, !dbg !12016
  %arrayidx60 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 2, !dbg !12017
  %52 = load float, float* %arrayidx60, align 4, !dbg !12017
  %call61 = call float @max_fff(float %50, float %51, float %52), !dbg !12018
  %cmp62 = fcmp olt float %call61, 0x3F1A36E2E0000000, !dbg !12019
  br i1 %cmp62, label %if.then64, label %if.end67, !dbg !12020

if.then64:                                        ; preds = %lor.lhs.false, %for.end55
  %53 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12021
  %54 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !12023
  %55 = bitcast %struct.Bounds3D* %54 to i8*, !dbg !12023
  call void %53(i8* %55), !dbg !12021
  %56 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12024
  %57 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12025
  %grid65 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %57, i32 0, i32 7, !dbg !12026
  %58 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid65, align 8, !dbg !12026
  %59 = bitcast %struct.VolumeGrid* %58 to i8*, !dbg !12025
  call void %56(i8* %59), !dbg !12024
  %60 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12027
  %grid66 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %60, i32 0, i32 7, !dbg !12028
  store %struct.VolumeGrid* null, %struct.VolumeGrid** %grid66, align 8, !dbg !12029
  br label %if.end459, !dbg !12030

if.end67:                                         ; preds = %lor.lhs.false
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 0, !dbg !12031
  %61 = load float, float* %arrayidx68, align 4, !dbg !12031
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 1, !dbg !12032
  %62 = load float, float* %arrayidx69, align 4, !dbg !12032
  %mul70 = fmul float %61, %62, !dbg !12033
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 2, !dbg !12034
  %63 = load float, float* %arrayidx71, align 4, !dbg !12034
  %mul72 = fmul float %mul70, %63, !dbg !12035
  store float %mul72, float* %volume, align 4, !dbg !12036
  %64 = load float, float* %volume, align 4, !dbg !12037
  %conv73 = fpext float %64 to double, !dbg !12038
  %65 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12039
  %total_points74 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %65, i32 0, i32 4, !dbg !12040
  %66 = load i32, i32* %total_points74, align 8, !dbg !12040
  %conv75 = sitofp i32 %66 to double, !dbg !12041
  %div76 = fdiv double %conv75, 1.000000e+04, !dbg !12042
  %div77 = fdiv double %conv73, %div76, !dbg !12043
  %67 = load i32, i32* %axis, align 4, !dbg !12044
  %conv78 = sitofp i32 %67 to double, !dbg !12045
  %div79 = fdiv double 1.000000e+00, %conv78, !dbg !12046
  %call80 = call double @pow(double %div77, double %div79) #7, !dbg !12047
  %conv81 = fptrunc double %call80 to float, !dbg !12048
  store float %conv81, float* %dim_factor, align 4, !dbg !12049
  store i32 0, i32* %i, align 4, !dbg !12050
  br label %for.cond82, !dbg !12052

for.cond82:                                       ; preds = %for.inc123, %if.end67
  %68 = load i32, i32* %i, align 4, !dbg !12053
  %cmp83 = icmp slt i32 %68, 3, !dbg !12055
  br i1 %cmp83, label %for.body85, label %for.end125, !dbg !12056

for.body85:                                       ; preds = %for.cond82
  %69 = load i32, i32* %i, align 4, !dbg !12057
  %idxprom86 = sext i32 %69 to i64, !dbg !12059
  %arrayidx87 = getelementptr inbounds [3 x float], [3 x float]* %td, i64 0, i64 %idxprom86, !dbg !12059
  %70 = load float, float* %arrayidx87, align 4, !dbg !12059
  %71 = load float, float* %dim_factor, align 4, !dbg !12060
  %div88 = fdiv float %70, %71, !dbg !12061
  %conv89 = fpext float %div88 to double, !dbg !12059
  %72 = call double @llvm.floor.f64(double %conv89), !dbg !12062
  %conv90 = fptosi double %72 to i32, !dbg !12063
  %73 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12064
  %dim91 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %73, i32 0, i32 0, !dbg !12065
  %74 = load i32, i32* %i, align 4, !dbg !12066
  %idxprom92 = sext i32 %74 to i64, !dbg !12064
  %arrayidx93 = getelementptr inbounds [3 x i32], [3 x i32]* %dim91, i64 0, i64 %idxprom92, !dbg !12064
  store i32 %conv90, i32* %arrayidx93, align 4, !dbg !12067
  %75 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12068
  %dim94 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %75, i32 0, i32 0, !dbg !12068
  %76 = load i32, i32* %i, align 4, !dbg !12068
  %idxprom95 = sext i32 %76 to i64, !dbg !12068
  %arrayidx96 = getelementptr inbounds [3 x i32], [3 x i32]* %dim94, i64 0, i64 %idxprom95, !dbg !12068
  %77 = load i32, i32* %arrayidx96, align 4, !dbg !12068
  %78 = load i32, i32* %i, align 4, !dbg !12068
  %idxprom97 = sext i32 %78 to i64, !dbg !12068
  %arrayidx98 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 %idxprom97, !dbg !12068
  %79 = load float, float* %arrayidx98, align 4, !dbg !12068
  %80 = load float, float* %min_dim, align 4, !dbg !12068
  %cmp99 = fcmp oge float %79, %80, !dbg !12068
  %81 = zext i1 %cmp99 to i64, !dbg !12068
  %cond = select i1 %cmp99, i32 3, i32 1, !dbg !12068
  %cmp101 = icmp slt i32 %77, %cond, !dbg !12068
  br i1 %cmp101, label %if.then103, label %if.else, !dbg !12071

if.then103:                                       ; preds = %for.body85
  %82 = load i32, i32* %i, align 4, !dbg !12068
  %idxprom104 = sext i32 %82 to i64, !dbg !12068
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 %idxprom104, !dbg !12068
  %83 = load float, float* %arrayidx105, align 4, !dbg !12068
  %84 = load float, float* %min_dim, align 4, !dbg !12068
  %cmp106 = fcmp oge float %83, %84, !dbg !12068
  %85 = zext i1 %cmp106 to i64, !dbg !12068
  %cond108 = select i1 %cmp106, i32 3, i32 1, !dbg !12068
  %86 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12068
  %dim109 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %86, i32 0, i32 0, !dbg !12068
  %87 = load i32, i32* %i, align 4, !dbg !12068
  %idxprom110 = sext i32 %87 to i64, !dbg !12068
  %arrayidx111 = getelementptr inbounds [3 x i32], [3 x i32]* %dim109, i64 0, i64 %idxprom110, !dbg !12068
  store i32 %cond108, i32* %arrayidx111, align 4, !dbg !12068
  br label %if.end122, !dbg !12068

if.else:                                          ; preds = %for.body85
  %88 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12072
  %dim112 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %88, i32 0, i32 0, !dbg !12072
  %89 = load i32, i32* %i, align 4, !dbg !12072
  %idxprom113 = sext i32 %89 to i64, !dbg !12072
  %arrayidx114 = getelementptr inbounds [3 x i32], [3 x i32]* %dim112, i64 0, i64 %idxprom113, !dbg !12072
  %90 = load i32, i32* %arrayidx114, align 4, !dbg !12072
  %cmp115 = icmp sgt i32 %90, 100, !dbg !12072
  br i1 %cmp115, label %if.then117, label %if.end121, !dbg !12068

if.then117:                                       ; preds = %if.else
  %91 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12072
  %dim118 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %91, i32 0, i32 0, !dbg !12072
  %92 = load i32, i32* %i, align 4, !dbg !12072
  %idxprom119 = sext i32 %92 to i64, !dbg !12072
  %arrayidx120 = getelementptr inbounds [3 x i32], [3 x i32]* %dim118, i64 0, i64 %idxprom119, !dbg !12072
  store i32 100, i32* %arrayidx120, align 4, !dbg !12072
  br label %if.end121, !dbg !12072

if.end121:                                        ; preds = %if.then117, %if.else
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then103
  br label %for.inc123, !dbg !12074

for.inc123:                                       ; preds = %if.end122
  %93 = load i32, i32* %i, align 4, !dbg !12075
  %inc124 = add nsw i32 %93, 1, !dbg !12075
  store i32 %inc124, i32* %i, align 4, !dbg !12075
  br label %for.cond82, !dbg !12076, !llvm.loop !12077

for.end125:                                       ; preds = %for.cond82
  %94 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12079
  %dim126 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %94, i32 0, i32 0, !dbg !12080
  %arrayidx127 = getelementptr inbounds [3 x i32], [3 x i32]* %dim126, i64 0, i64 0, !dbg !12079
  %95 = load i32, i32* %arrayidx127, align 8, !dbg !12079
  %96 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12081
  %dim128 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %96, i32 0, i32 0, !dbg !12082
  %arrayidx129 = getelementptr inbounds [3 x i32], [3 x i32]* %dim128, i64 0, i64 1, !dbg !12081
  %97 = load i32, i32* %arrayidx129, align 4, !dbg !12081
  %mul130 = mul nsw i32 %95, %97, !dbg !12083
  %98 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12084
  %dim131 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %98, i32 0, i32 0, !dbg !12085
  %arrayidx132 = getelementptr inbounds [3 x i32], [3 x i32]* %dim131, i64 0, i64 2, !dbg !12084
  %99 = load i32, i32* %arrayidx132, align 8, !dbg !12084
  %mul133 = mul nsw i32 %mul130, %99, !dbg !12086
  store i32 %mul133, i32* %grid_cells, align 4, !dbg !12087
  %100 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12088
  %101 = load i32, i32* %grid_cells, align 4, !dbg !12089
  %conv134 = sext i32 %101 to i64, !dbg !12089
  %mul135 = mul i64 28, %conv134, !dbg !12090
  %call136 = call i8* %100(i64 %mul135, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.48, i64 0, i64 0)), !dbg !12088
  %102 = bitcast i8* %call136 to %struct.Bounds3D*, !dbg !12088
  %103 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12091
  %bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %103, i32 0, i32 2, !dbg !12092
  store %struct.Bounds3D* %102, %struct.Bounds3D** %bounds, align 8, !dbg !12093
  %104 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12094
  %105 = load i32, i32* %grid_cells, align 4, !dbg !12095
  %conv137 = sext i32 %105 to i64, !dbg !12095
  %mul138 = mul i64 4, %conv137, !dbg !12096
  %call139 = call i8* %104(i64 %mul138, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.49, i64 0, i64 0)), !dbg !12094
  %106 = bitcast i8* %call139 to i32*, !dbg !12094
  %107 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12097
  %s_pos140 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %107, i32 0, i32 3, !dbg !12098
  store i32* %106, i32** %s_pos140, align 8, !dbg !12099
  %108 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12100
  %109 = load i32, i32* %grid_cells, align 4, !dbg !12101
  %conv141 = sext i32 %109 to i64, !dbg !12101
  %mul142 = mul i64 4, %conv141, !dbg !12102
  %110 = load i32, i32* %num_of_threads, align 4, !dbg !12103
  %conv143 = sext i32 %110 to i64, !dbg !12103
  %mul144 = mul i64 %mul142, %conv143, !dbg !12104
  %call145 = call i8* %108(i64 %mul144, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50, i64 0, i64 0)), !dbg !12100
  %111 = bitcast i8* %call145 to i32*, !dbg !12100
  %112 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12105
  %s_num = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %112, i32 0, i32 4, !dbg !12106
  store i32* %111, i32** %s_num, align 8, !dbg !12107
  %113 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12108
  %114 = load i32, i32* %grid_cells, align 4, !dbg !12109
  %conv146 = sext i32 %114 to i64, !dbg !12109
  %mul147 = mul i64 4, %conv146, !dbg !12110
  %call148 = call i8* %113(i64 %mul147, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.51, i64 0, i64 0)), !dbg !12108
  %115 = bitcast i8* %call148 to i32*, !dbg !12108
  store i32* %115, i32** %temp_s_num, align 8, !dbg !12111
  %116 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12112
  %117 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12113
  %total_points149 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %117, i32 0, i32 4, !dbg !12114
  %118 = load i32, i32* %total_points149, align 8, !dbg !12114
  %conv150 = sext i32 %118 to i64, !dbg !12113
  %mul151 = mul i64 4, %conv150, !dbg !12115
  %call152 = call i8* %116(i64 %mul151, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.52, i64 0, i64 0)), !dbg !12112
  %119 = bitcast i8* %call152 to i32*, !dbg !12112
  %120 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12116
  %t_index = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %120, i32 0, i32 5, !dbg !12117
  store i32* %119, i32** %t_index, align 8, !dbg !12118
  %121 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12119
  %122 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12120
  %total_points153 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %122, i32 0, i32 4, !dbg !12121
  %123 = load i32, i32* %total_points153, align 8, !dbg !12121
  %conv154 = sext i32 %123 to i64, !dbg !12120
  %mul155 = mul i64 4, %conv154, !dbg !12122
  %call156 = call i8* %121(i64 %mul155, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.53, i64 0, i64 0)), !dbg !12119
  %124 = bitcast i8* %call156 to i32*, !dbg !12119
  store i32* %124, i32** %temp_t_index, align 8, !dbg !12123
  %125 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12124
  %bounds157 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %125, i32 0, i32 2, !dbg !12126
  %126 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds157, align 8, !dbg !12126
  %tobool158 = icmp ne %struct.Bounds3D* %126, null, !dbg !12124
  br i1 %tobool158, label %lor.lhs.false159, label %if.then172, !dbg !12127

lor.lhs.false159:                                 ; preds = %for.end125
  %127 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12128
  %s_pos160 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %127, i32 0, i32 3, !dbg !12129
  %128 = load i32*, i32** %s_pos160, align 8, !dbg !12129
  %tobool161 = icmp ne i32* %128, null, !dbg !12128
  br i1 %tobool161, label %lor.lhs.false162, label %if.then172, !dbg !12130

lor.lhs.false162:                                 ; preds = %lor.lhs.false159
  %129 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12131
  %s_num163 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %129, i32 0, i32 4, !dbg !12132
  %130 = load i32*, i32** %s_num163, align 8, !dbg !12132
  %tobool164 = icmp ne i32* %130, null, !dbg !12131
  br i1 %tobool164, label %lor.lhs.false165, label %if.then172, !dbg !12133

lor.lhs.false165:                                 ; preds = %lor.lhs.false162
  %131 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12134
  %t_index166 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %131, i32 0, i32 5, !dbg !12135
  %132 = load i32*, i32** %t_index166, align 8, !dbg !12135
  %tobool167 = icmp ne i32* %132, null, !dbg !12134
  br i1 %tobool167, label %lor.lhs.false168, label %if.then172, !dbg !12136

lor.lhs.false168:                                 ; preds = %lor.lhs.false165
  %133 = load i32*, i32** %temp_s_num, align 8, !dbg !12137
  %tobool169 = icmp ne i32* %133, null, !dbg !12137
  br i1 %tobool169, label %lor.lhs.false170, label %if.then172, !dbg !12138

lor.lhs.false170:                                 ; preds = %lor.lhs.false168
  %134 = load i32*, i32** %temp_t_index, align 8, !dbg !12139
  %tobool171 = icmp ne i32* %134, null, !dbg !12139
  br i1 %tobool171, label %if.end173, label %if.then172, !dbg !12140

if.then172:                                       ; preds = %lor.lhs.false170, %lor.lhs.false168, %lor.lhs.false165, %lor.lhs.false162, %lor.lhs.false159, %for.end125
  store i32 1, i32* %error, align 4, !dbg !12141
  br label %if.end173, !dbg !12142

if.end173:                                        ; preds = %if.then172, %lor.lhs.false170
  %135 = load i32, i32* %error, align 4, !dbg !12143
  %tobool174 = icmp ne i32 %135, 0, !dbg !12143
  br i1 %tobool174, label %if.end437, label %if.then175, !dbg !12145

if.then175:                                       ; preds = %if.end173
  store i32 0, i32* %i, align 4, !dbg !12146
  br label %for.cond176, !dbg !12149

for.cond176:                                      ; preds = %for.inc260, %if.then175
  %136 = load i32, i32* %i, align 4, !dbg !12150
  %137 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12152
  %total_points177 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %137, i32 0, i32 4, !dbg !12153
  %138 = load i32, i32* %total_points177, align 8, !dbg !12153
  %cmp178 = icmp slt i32 %136, %138, !dbg !12154
  br i1 %cmp178, label %for.body180, label %for.end262, !dbg !12155

for.body180:                                      ; preds = %for.cond176
  call void @llvm.dbg.declare(metadata [3 x i32]* %co, metadata !12156, metadata !DIExpression()), !dbg !12158
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12159, metadata !DIExpression()), !dbg !12160
  store i32 0, i32* %j, align 4, !dbg !12161
  br label %for.cond181, !dbg !12163

for.cond181:                                      ; preds = %for.inc236, %for.body180
  %139 = load i32, i32* %j, align 4, !dbg !12164
  %cmp182 = icmp slt i32 %139, 3, !dbg !12166
  br i1 %cmp182, label %for.body184, label %for.end238, !dbg !12167

for.body184:                                      ; preds = %for.cond181
  %140 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12168
  %realCoord185 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %140, i32 0, i32 3, !dbg !12170
  %141 = load %struct.Vec3f*, %struct.Vec3f** %realCoord185, align 8, !dbg !12170
  %142 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12171
  %s_pos186 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %142, i32 0, i32 1, !dbg !12172
  %143 = load i32*, i32** %s_pos186, align 8, !dbg !12172
  %144 = load i32, i32* %i, align 4, !dbg !12173
  %idxprom187 = sext i32 %144 to i64, !dbg !12171
  %arrayidx188 = getelementptr inbounds i32, i32* %143, i64 %idxprom187, !dbg !12171
  %145 = load i32, i32* %arrayidx188, align 4, !dbg !12171
  %idxprom189 = sext i32 %145 to i64, !dbg !12168
  %arrayidx190 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %141, i64 %idxprom189, !dbg !12168
  %v191 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx190, i32 0, i32 0, !dbg !12174
  %146 = load i32, i32* %j, align 4, !dbg !12175
  %idxprom192 = sext i32 %146 to i64, !dbg !12168
  %arrayidx193 = getelementptr inbounds [3 x float], [3 x float]* %v191, i64 0, i64 %idxprom192, !dbg !12168
  %147 = load float, float* %arrayidx193, align 4, !dbg !12168
  %148 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12176
  %grid_bounds194 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %148, i32 0, i32 1, !dbg !12177
  %min195 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %grid_bounds194, i32 0, i32 1, !dbg !12178
  %149 = load i32, i32* %j, align 4, !dbg !12179
  %idxprom196 = sext i32 %149 to i64, !dbg !12176
  %arrayidx197 = getelementptr inbounds [3 x float], [3 x float]* %min195, i64 0, i64 %idxprom196, !dbg !12176
  %150 = load float, float* %arrayidx197, align 4, !dbg !12176
  %sub198 = fsub float %147, %150, !dbg !12180
  %151 = load i32, i32* %j, align 4, !dbg !12181
  %idxprom199 = sext i32 %151 to i64, !dbg !12182
  %arrayidx200 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 %idxprom199, !dbg !12182
  %152 = load float, float* %arrayidx200, align 4, !dbg !12182
  %div201 = fdiv float %sub198, %152, !dbg !12183
  %153 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12184
  %dim202 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %153, i32 0, i32 0, !dbg !12185
  %154 = load i32, i32* %j, align 4, !dbg !12186
  %idxprom203 = sext i32 %154 to i64, !dbg !12184
  %arrayidx204 = getelementptr inbounds [3 x i32], [3 x i32]* %dim202, i64 0, i64 %idxprom203, !dbg !12184
  %155 = load i32, i32* %arrayidx204, align 4, !dbg !12184
  %conv205 = sitofp i32 %155 to float, !dbg !12184
  %mul206 = fmul float %div201, %conv205, !dbg !12187
  %conv207 = fpext float %mul206 to double, !dbg !12188
  %156 = call double @llvm.floor.f64(double %conv207), !dbg !12189
  %conv208 = fptosi double %156 to i32, !dbg !12190
  %157 = load i32, i32* %j, align 4, !dbg !12191
  %idxprom209 = sext i32 %157 to i64, !dbg !12192
  %arrayidx210 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 %idxprom209, !dbg !12192
  store i32 %conv208, i32* %arrayidx210, align 4, !dbg !12193
  %158 = load i32, i32* %j, align 4, !dbg !12194
  %idxprom211 = sext i32 %158 to i64, !dbg !12194
  %arrayidx212 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 %idxprom211, !dbg !12194
  %159 = load i32, i32* %arrayidx212, align 4, !dbg !12194
  %cmp213 = icmp slt i32 %159, 0, !dbg !12194
  br i1 %cmp213, label %if.then215, label %if.else218, !dbg !12197

if.then215:                                       ; preds = %for.body184
  %160 = load i32, i32* %j, align 4, !dbg !12194
  %idxprom216 = sext i32 %160 to i64, !dbg !12194
  %arrayidx217 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 %idxprom216, !dbg !12194
  store i32 0, i32* %arrayidx217, align 4, !dbg !12194
  br label %if.end235, !dbg !12194

if.else218:                                       ; preds = %for.body184
  %161 = load i32, i32* %j, align 4, !dbg !12198
  %idxprom219 = sext i32 %161 to i64, !dbg !12198
  %arrayidx220 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 %idxprom219, !dbg !12198
  %162 = load i32, i32* %arrayidx220, align 4, !dbg !12198
  %163 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12198
  %dim221 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %163, i32 0, i32 0, !dbg !12198
  %164 = load i32, i32* %j, align 4, !dbg !12198
  %idxprom222 = sext i32 %164 to i64, !dbg !12198
  %arrayidx223 = getelementptr inbounds [3 x i32], [3 x i32]* %dim221, i64 0, i64 %idxprom222, !dbg !12198
  %165 = load i32, i32* %arrayidx223, align 4, !dbg !12198
  %sub224 = sub nsw i32 %165, 1, !dbg !12198
  %cmp225 = icmp sgt i32 %162, %sub224, !dbg !12198
  br i1 %cmp225, label %if.then227, label %if.end234, !dbg !12194

if.then227:                                       ; preds = %if.else218
  %166 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12198
  %dim228 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %166, i32 0, i32 0, !dbg !12198
  %167 = load i32, i32* %j, align 4, !dbg !12198
  %idxprom229 = sext i32 %167 to i64, !dbg !12198
  %arrayidx230 = getelementptr inbounds [3 x i32], [3 x i32]* %dim228, i64 0, i64 %idxprom229, !dbg !12198
  %168 = load i32, i32* %arrayidx230, align 4, !dbg !12198
  %sub231 = sub nsw i32 %168, 1, !dbg !12198
  %169 = load i32, i32* %j, align 4, !dbg !12198
  %idxprom232 = sext i32 %169 to i64, !dbg !12198
  %arrayidx233 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 %idxprom232, !dbg !12198
  store i32 %sub231, i32* %arrayidx233, align 4, !dbg !12198
  br label %if.end234, !dbg !12198

if.end234:                                        ; preds = %if.then227, %if.else218
  br label %if.end235

if.end235:                                        ; preds = %if.end234, %if.then215
  br label %for.inc236, !dbg !12200

for.inc236:                                       ; preds = %if.end235
  %170 = load i32, i32* %j, align 4, !dbg !12201
  %inc237 = add nsw i32 %170, 1, !dbg !12201
  store i32 %inc237, i32* %j, align 4, !dbg !12201
  br label %for.cond181, !dbg !12202, !llvm.loop !12203

for.end238:                                       ; preds = %for.cond181
  %arrayidx239 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 0, !dbg !12205
  %171 = load i32, i32* %arrayidx239, align 4, !dbg !12205
  %arrayidx240 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 1, !dbg !12206
  %172 = load i32, i32* %arrayidx240, align 4, !dbg !12206
  %173 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12207
  %dim241 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %173, i32 0, i32 0, !dbg !12208
  %arrayidx242 = getelementptr inbounds [3 x i32], [3 x i32]* %dim241, i64 0, i64 0, !dbg !12207
  %174 = load i32, i32* %arrayidx242, align 8, !dbg !12207
  %mul243 = mul nsw i32 %172, %174, !dbg !12209
  %add = add nsw i32 %171, %mul243, !dbg !12210
  %arrayidx244 = getelementptr inbounds [3 x i32], [3 x i32]* %co, i64 0, i64 2, !dbg !12211
  %175 = load i32, i32* %arrayidx244, align 4, !dbg !12211
  %176 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12212
  %dim245 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %176, i32 0, i32 0, !dbg !12213
  %arrayidx246 = getelementptr inbounds [3 x i32], [3 x i32]* %dim245, i64 0, i64 0, !dbg !12212
  %177 = load i32, i32* %arrayidx246, align 8, !dbg !12212
  %mul247 = mul nsw i32 %175, %177, !dbg !12214
  %178 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12215
  %dim248 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %178, i32 0, i32 0, !dbg !12216
  %arrayidx249 = getelementptr inbounds [3 x i32], [3 x i32]* %dim248, i64 0, i64 1, !dbg !12215
  %179 = load i32, i32* %arrayidx249, align 4, !dbg !12215
  %mul250 = mul nsw i32 %mul247, %179, !dbg !12217
  %add251 = add nsw i32 %add, %mul250, !dbg !12218
  %180 = load i32*, i32** %temp_t_index, align 8, !dbg !12219
  %181 = load i32, i32* %i, align 4, !dbg !12220
  %idxprom252 = sext i32 %181 to i64, !dbg !12219
  %arrayidx253 = getelementptr inbounds i32, i32* %180, i64 %idxprom252, !dbg !12219
  store i32 %add251, i32* %arrayidx253, align 4, !dbg !12221
  %182 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12222
  %s_num254 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %182, i32 0, i32 4, !dbg !12223
  %183 = load i32*, i32** %s_num254, align 8, !dbg !12223
  %184 = load i32*, i32** %temp_t_index, align 8, !dbg !12224
  %185 = load i32, i32* %i, align 4, !dbg !12225
  %idxprom255 = sext i32 %185 to i64, !dbg !12224
  %arrayidx256 = getelementptr inbounds i32, i32* %184, i64 %idxprom255, !dbg !12224
  %186 = load i32, i32* %arrayidx256, align 4, !dbg !12224
  %idxprom257 = sext i32 %186 to i64, !dbg !12222
  %arrayidx258 = getelementptr inbounds i32, i32* %183, i64 %idxprom257, !dbg !12222
  %187 = load i32, i32* %arrayidx258, align 4, !dbg !12226
  %inc259 = add nsw i32 %187, 1, !dbg !12226
  store i32 %inc259, i32* %arrayidx258, align 4, !dbg !12226
  br label %for.inc260, !dbg !12227

for.inc260:                                       ; preds = %for.end238
  %188 = load i32, i32* %i, align 4, !dbg !12228
  %inc261 = add nsw i32 %188, 1, !dbg !12228
  store i32 %inc261, i32* %i, align 4, !dbg !12228
  br label %for.cond176, !dbg !12229, !llvm.loop !12230

for.end262:                                       ; preds = %for.cond176
  store i32 1, i32* %i, align 4, !dbg !12232
  br label %for.cond263, !dbg !12234

for.cond263:                                      ; preds = %for.inc274, %for.end262
  %189 = load i32, i32* %i, align 4, !dbg !12235
  %190 = load i32, i32* %num_of_threads, align 4, !dbg !12237
  %cmp264 = icmp slt i32 %189, %190, !dbg !12238
  br i1 %cmp264, label %for.body266, label %for.end276, !dbg !12239

for.body266:                                      ; preds = %for.cond263
  %191 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12240
  %s_num267 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %191, i32 0, i32 4, !dbg !12242
  %192 = load i32*, i32** %s_num267, align 8, !dbg !12242
  %193 = load i32, i32* %i, align 4, !dbg !12243
  %194 = load i32, i32* %grid_cells, align 4, !dbg !12244
  %mul268 = mul nsw i32 %193, %194, !dbg !12245
  %idxprom269 = sext i32 %mul268 to i64, !dbg !12240
  %arrayidx270 = getelementptr inbounds i32, i32* %192, i64 %idxprom269, !dbg !12240
  %195 = load i32, i32* %arrayidx270, align 4, !dbg !12240
  %196 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12246
  %s_num271 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %196, i32 0, i32 4, !dbg !12247
  %197 = load i32*, i32** %s_num271, align 8, !dbg !12247
  %arrayidx272 = getelementptr inbounds i32, i32* %197, i64 0, !dbg !12246
  %198 = load i32, i32* %arrayidx272, align 4, !dbg !12248
  %add273 = add nsw i32 %198, %195, !dbg !12248
  store i32 %add273, i32* %arrayidx272, align 4, !dbg !12248
  br label %for.inc274, !dbg !12249

for.inc274:                                       ; preds = %for.body266
  %199 = load i32, i32* %i, align 4, !dbg !12250
  %inc275 = add nsw i32 %199, 1, !dbg !12250
  store i32 %inc275, i32* %i, align 4, !dbg !12250
  br label %for.cond263, !dbg !12251, !llvm.loop !12252

for.end276:                                       ; preds = %for.cond263
  store i32 1, i32* %i, align 4, !dbg !12254
  br label %for.cond277, !dbg !12256

for.cond277:                                      ; preds = %for.inc309, %for.end276
  %200 = load i32, i32* %i, align 4, !dbg !12257
  %201 = load i32, i32* %grid_cells, align 4, !dbg !12259
  %cmp278 = icmp slt i32 %200, %201, !dbg !12260
  br i1 %cmp278, label %for.body280, label %for.end311, !dbg !12261

for.body280:                                      ; preds = %for.cond277
  call void @llvm.dbg.declare(metadata i32* %id, metadata !12262, metadata !DIExpression()), !dbg !12264
  store i32 1, i32* %id, align 4, !dbg !12265
  br label %for.cond281, !dbg !12267

for.cond281:                                      ; preds = %for.inc294, %for.body280
  %202 = load i32, i32* %id, align 4, !dbg !12268
  %203 = load i32, i32* %num_of_threads, align 4, !dbg !12270
  %cmp282 = icmp slt i32 %202, %203, !dbg !12271
  br i1 %cmp282, label %for.body284, label %for.end296, !dbg !12272

for.body284:                                      ; preds = %for.cond281
  %204 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12273
  %s_num285 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %204, i32 0, i32 4, !dbg !12275
  %205 = load i32*, i32** %s_num285, align 8, !dbg !12275
  %206 = load i32, i32* %i, align 4, !dbg !12276
  %207 = load i32, i32* %id, align 4, !dbg !12277
  %208 = load i32, i32* %grid_cells, align 4, !dbg !12278
  %mul286 = mul nsw i32 %207, %208, !dbg !12279
  %add287 = add nsw i32 %206, %mul286, !dbg !12280
  %idxprom288 = sext i32 %add287 to i64, !dbg !12273
  %arrayidx289 = getelementptr inbounds i32, i32* %205, i64 %idxprom288, !dbg !12273
  %209 = load i32, i32* %arrayidx289, align 4, !dbg !12273
  %210 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12281
  %s_num290 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %210, i32 0, i32 4, !dbg !12282
  %211 = load i32*, i32** %s_num290, align 8, !dbg !12282
  %212 = load i32, i32* %i, align 4, !dbg !12283
  %idxprom291 = sext i32 %212 to i64, !dbg !12281
  %arrayidx292 = getelementptr inbounds i32, i32* %211, i64 %idxprom291, !dbg !12281
  %213 = load i32, i32* %arrayidx292, align 4, !dbg !12284
  %add293 = add nsw i32 %213, %209, !dbg !12284
  store i32 %add293, i32* %arrayidx292, align 4, !dbg !12284
  br label %for.inc294, !dbg !12285

for.inc294:                                       ; preds = %for.body284
  %214 = load i32, i32* %id, align 4, !dbg !12286
  %inc295 = add nsw i32 %214, 1, !dbg !12286
  store i32 %inc295, i32* %id, align 4, !dbg !12286
  br label %for.cond281, !dbg !12287, !llvm.loop !12288

for.end296:                                       ; preds = %for.cond281
  %215 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12290
  %s_pos297 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %215, i32 0, i32 3, !dbg !12291
  %216 = load i32*, i32** %s_pos297, align 8, !dbg !12291
  %217 = load i32, i32* %i, align 4, !dbg !12292
  %sub298 = sub nsw i32 %217, 1, !dbg !12293
  %idxprom299 = sext i32 %sub298 to i64, !dbg !12290
  %arrayidx300 = getelementptr inbounds i32, i32* %216, i64 %idxprom299, !dbg !12290
  %218 = load i32, i32* %arrayidx300, align 4, !dbg !12290
  %219 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12294
  %s_num301 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %219, i32 0, i32 4, !dbg !12295
  %220 = load i32*, i32** %s_num301, align 8, !dbg !12295
  %221 = load i32, i32* %i, align 4, !dbg !12296
  %sub302 = sub nsw i32 %221, 1, !dbg !12297
  %idxprom303 = sext i32 %sub302 to i64, !dbg !12294
  %arrayidx304 = getelementptr inbounds i32, i32* %220, i64 %idxprom303, !dbg !12294
  %222 = load i32, i32* %arrayidx304, align 4, !dbg !12294
  %add305 = add nsw i32 %218, %222, !dbg !12298
  %223 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12299
  %s_pos306 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %223, i32 0, i32 3, !dbg !12300
  %224 = load i32*, i32** %s_pos306, align 8, !dbg !12300
  %225 = load i32, i32* %i, align 4, !dbg !12301
  %idxprom307 = sext i32 %225 to i64, !dbg !12299
  %arrayidx308 = getelementptr inbounds i32, i32* %224, i64 %idxprom307, !dbg !12299
  store i32 %add305, i32* %arrayidx308, align 4, !dbg !12302
  br label %for.inc309, !dbg !12303

for.inc309:                                       ; preds = %for.end296
  %226 = load i32, i32* %i, align 4, !dbg !12304
  %inc310 = add nsw i32 %226, 1, !dbg !12304
  store i32 %inc310, i32* %i, align 4, !dbg !12304
  br label %for.cond277, !dbg !12305, !llvm.loop !12306

for.end311:                                       ; preds = %for.cond277
  store i32 0, i32* %i, align 4, !dbg !12308
  br label %for.cond312, !dbg !12310

for.cond312:                                      ; preds = %for.inc335, %for.end311
  %227 = load i32, i32* %i, align 4, !dbg !12311
  %228 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12313
  %total_points313 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %228, i32 0, i32 4, !dbg !12314
  %229 = load i32, i32* %total_points313, align 8, !dbg !12314
  %cmp314 = icmp slt i32 %227, %229, !dbg !12315
  br i1 %cmp314, label %for.body316, label %for.end337, !dbg !12316

for.body316:                                      ; preds = %for.cond312
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !12317, metadata !DIExpression()), !dbg !12319
  %230 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12320
  %s_pos317 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %230, i32 0, i32 3, !dbg !12321
  %231 = load i32*, i32** %s_pos317, align 8, !dbg !12321
  %232 = load i32*, i32** %temp_t_index, align 8, !dbg !12322
  %233 = load i32, i32* %i, align 4, !dbg !12323
  %idxprom318 = sext i32 %233 to i64, !dbg !12322
  %arrayidx319 = getelementptr inbounds i32, i32* %232, i64 %idxprom318, !dbg !12322
  %234 = load i32, i32* %arrayidx319, align 4, !dbg !12322
  %idxprom320 = sext i32 %234 to i64, !dbg !12320
  %arrayidx321 = getelementptr inbounds i32, i32* %231, i64 %idxprom320, !dbg !12320
  %235 = load i32, i32* %arrayidx321, align 4, !dbg !12320
  %236 = load i32*, i32** %temp_s_num, align 8, !dbg !12324
  %237 = load i32*, i32** %temp_t_index, align 8, !dbg !12325
  %238 = load i32, i32* %i, align 4, !dbg !12326
  %idxprom322 = sext i32 %238 to i64, !dbg !12325
  %arrayidx323 = getelementptr inbounds i32, i32* %237, i64 %idxprom322, !dbg !12325
  %239 = load i32, i32* %arrayidx323, align 4, !dbg !12325
  %idxprom324 = sext i32 %239 to i64, !dbg !12324
  %arrayidx325 = getelementptr inbounds i32, i32* %236, i64 %idxprom324, !dbg !12324
  %240 = load i32, i32* %arrayidx325, align 4, !dbg !12324
  %add326 = add nsw i32 %235, %240, !dbg !12327
  store i32 %add326, i32* %pos, align 4, !dbg !12319
  %241 = load i32, i32* %i, align 4, !dbg !12328
  %242 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12329
  %t_index327 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %242, i32 0, i32 5, !dbg !12330
  %243 = load i32*, i32** %t_index327, align 8, !dbg !12330
  %244 = load i32, i32* %pos, align 4, !dbg !12331
  %idxprom328 = sext i32 %244 to i64, !dbg !12329
  %arrayidx329 = getelementptr inbounds i32, i32* %243, i64 %idxprom328, !dbg !12329
  store i32 %241, i32* %arrayidx329, align 4, !dbg !12332
  %245 = load i32*, i32** %temp_s_num, align 8, !dbg !12333
  %246 = load i32*, i32** %temp_t_index, align 8, !dbg !12334
  %247 = load i32, i32* %i, align 4, !dbg !12335
  %idxprom330 = sext i32 %247 to i64, !dbg !12334
  %arrayidx331 = getelementptr inbounds i32, i32* %246, i64 %idxprom330, !dbg !12334
  %248 = load i32, i32* %arrayidx331, align 4, !dbg !12334
  %idxprom332 = sext i32 %248 to i64, !dbg !12333
  %arrayidx333 = getelementptr inbounds i32, i32* %245, i64 %idxprom332, !dbg !12333
  %249 = load i32, i32* %arrayidx333, align 4, !dbg !12336
  %inc334 = add nsw i32 %249, 1, !dbg !12336
  store i32 %inc334, i32* %arrayidx333, align 4, !dbg !12336
  br label %for.inc335, !dbg !12337

for.inc335:                                       ; preds = %for.body316
  %250 = load i32, i32* %i, align 4, !dbg !12338
  %inc336 = add nsw i32 %250, 1, !dbg !12338
  store i32 %inc336, i32* %i, align 4, !dbg !12338
  br label %for.cond312, !dbg !12339, !llvm.loop !12340

for.end337:                                       ; preds = %for.cond312
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12342, metadata !DIExpression()), !dbg !12344
  store i32 0, i32* %x, align 4, !dbg !12345
  br label %for.cond338, !dbg !12347

for.cond338:                                      ; preds = %for.inc434, %for.end337
  %251 = load i32, i32* %x, align 4, !dbg !12348
  %252 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12350
  %dim339 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %252, i32 0, i32 0, !dbg !12351
  %arrayidx340 = getelementptr inbounds [3 x i32], [3 x i32]* %dim339, i64 0, i64 0, !dbg !12350
  %253 = load i32, i32* %arrayidx340, align 8, !dbg !12350
  %cmp341 = icmp slt i32 %251, %253, !dbg !12352
  br i1 %cmp341, label %for.body343, label %for.end436, !dbg !12353

for.body343:                                      ; preds = %for.cond338
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12354, metadata !DIExpression()), !dbg !12356
  store i32 0, i32* %y, align 4, !dbg !12357
  br label %for.cond344, !dbg !12359

for.cond344:                                      ; preds = %for.inc431, %for.body343
  %254 = load i32, i32* %y, align 4, !dbg !12360
  %255 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12362
  %dim345 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %255, i32 0, i32 0, !dbg !12363
  %arrayidx346 = getelementptr inbounds [3 x i32], [3 x i32]* %dim345, i64 0, i64 1, !dbg !12362
  %256 = load i32, i32* %arrayidx346, align 4, !dbg !12362
  %cmp347 = icmp slt i32 %254, %256, !dbg !12364
  br i1 %cmp347, label %for.body349, label %for.end433, !dbg !12365

for.body349:                                      ; preds = %for.cond344
  call void @llvm.dbg.declare(metadata i32* %z, metadata !12366, metadata !DIExpression()), !dbg !12368
  store i32 0, i32* %z, align 4, !dbg !12369
  br label %for.cond350, !dbg !12371

for.cond350:                                      ; preds = %for.inc428, %for.body349
  %257 = load i32, i32* %z, align 4, !dbg !12372
  %258 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12374
  %dim351 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %258, i32 0, i32 0, !dbg !12375
  %arrayidx352 = getelementptr inbounds [3 x i32], [3 x i32]* %dim351, i64 0, i64 2, !dbg !12374
  %259 = load i32, i32* %arrayidx352, align 8, !dbg !12374
  %cmp353 = icmp slt i32 %257, %259, !dbg !12376
  br i1 %cmp353, label %for.body355, label %for.end430, !dbg !12377

for.body355:                                      ; preds = %for.cond350
  call void @llvm.dbg.declare(metadata i32* %j356, metadata !12378, metadata !DIExpression()), !dbg !12380
  call void @llvm.dbg.declare(metadata i32* %b_index, metadata !12381, metadata !DIExpression()), !dbg !12382
  %260 = load i32, i32* %x, align 4, !dbg !12383
  %261 = load i32, i32* %y, align 4, !dbg !12384
  %262 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12385
  %dim357 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %262, i32 0, i32 0, !dbg !12386
  %arrayidx358 = getelementptr inbounds [3 x i32], [3 x i32]* %dim357, i64 0, i64 0, !dbg !12385
  %263 = load i32, i32* %arrayidx358, align 8, !dbg !12385
  %mul359 = mul nsw i32 %261, %263, !dbg !12387
  %add360 = add nsw i32 %260, %mul359, !dbg !12388
  %264 = load i32, i32* %z, align 4, !dbg !12389
  %265 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12390
  %dim361 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %265, i32 0, i32 0, !dbg !12391
  %arrayidx362 = getelementptr inbounds [3 x i32], [3 x i32]* %dim361, i64 0, i64 0, !dbg !12390
  %266 = load i32, i32* %arrayidx362, align 8, !dbg !12390
  %mul363 = mul nsw i32 %264, %266, !dbg !12392
  %267 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12393
  %dim364 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %267, i32 0, i32 0, !dbg !12394
  %arrayidx365 = getelementptr inbounds [3 x i32], [3 x i32]* %dim364, i64 0, i64 1, !dbg !12393
  %268 = load i32, i32* %arrayidx365, align 4, !dbg !12393
  %mul366 = mul nsw i32 %mul363, %268, !dbg !12395
  %add367 = add nsw i32 %add360, %mul366, !dbg !12396
  store i32 %add367, i32* %b_index, align 4, !dbg !12382
  store i32 0, i32* %j356, align 4, !dbg !12397
  br label %for.cond368, !dbg !12399

for.cond368:                                      ; preds = %for.inc422, %for.body355
  %269 = load i32, i32* %j356, align 4, !dbg !12400
  %cmp369 = icmp slt i32 %269, 3, !dbg !12402
  br i1 %cmp369, label %for.body371, label %for.end424, !dbg !12403

for.body371:                                      ; preds = %for.cond368
  call void @llvm.dbg.declare(metadata i32* %s, metadata !12404, metadata !DIExpression()), !dbg !12406
  %270 = load i32, i32* %j356, align 4, !dbg !12407
  %cmp372 = icmp eq i32 %270, 0, !dbg !12408
  br i1 %cmp372, label %cond.true, label %cond.false, !dbg !12409

cond.true:                                        ; preds = %for.body371
  %271 = load i32, i32* %x, align 4, !dbg !12410
  br label %cond.end379, !dbg !12409

cond.false:                                       ; preds = %for.body371
  %272 = load i32, i32* %j356, align 4, !dbg !12411
  %cmp374 = icmp eq i32 %272, 1, !dbg !12412
  br i1 %cmp374, label %cond.true376, label %cond.false377, !dbg !12413

cond.true376:                                     ; preds = %cond.false
  %273 = load i32, i32* %y, align 4, !dbg !12414
  br label %cond.end, !dbg !12413

cond.false377:                                    ; preds = %cond.false
  %274 = load i32, i32* %z, align 4, !dbg !12415
  br label %cond.end, !dbg !12413

cond.end:                                         ; preds = %cond.false377, %cond.true376
  %cond378 = phi i32 [ %273, %cond.true376 ], [ %274, %cond.false377 ], !dbg !12413
  br label %cond.end379, !dbg !12409

cond.end379:                                      ; preds = %cond.end, %cond.true
  %cond380 = phi i32 [ %271, %cond.true ], [ %cond378, %cond.end ], !dbg !12409
  store i32 %cond380, i32* %s, align 4, !dbg !12406
  %275 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12416
  %grid_bounds381 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %275, i32 0, i32 1, !dbg !12417
  %min382 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %grid_bounds381, i32 0, i32 1, !dbg !12418
  %276 = load i32, i32* %j356, align 4, !dbg !12419
  %idxprom383 = sext i32 %276 to i64, !dbg !12416
  %arrayidx384 = getelementptr inbounds [3 x float], [3 x float]* %min382, i64 0, i64 %idxprom383, !dbg !12416
  %277 = load float, float* %arrayidx384, align 4, !dbg !12416
  %278 = load i32, i32* %j356, align 4, !dbg !12420
  %idxprom385 = sext i32 %278 to i64, !dbg !12421
  %arrayidx386 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 %idxprom385, !dbg !12421
  %279 = load float, float* %arrayidx386, align 4, !dbg !12421
  %280 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12422
  %dim387 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %280, i32 0, i32 0, !dbg !12423
  %281 = load i32, i32* %j356, align 4, !dbg !12424
  %idxprom388 = sext i32 %281 to i64, !dbg !12422
  %arrayidx389 = getelementptr inbounds [3 x i32], [3 x i32]* %dim387, i64 0, i64 %idxprom388, !dbg !12422
  %282 = load i32, i32* %arrayidx389, align 4, !dbg !12422
  %conv390 = sitofp i32 %282 to float, !dbg !12422
  %div391 = fdiv float %279, %conv390, !dbg !12425
  %283 = load i32, i32* %s, align 4, !dbg !12426
  %conv392 = sitofp i32 %283 to float, !dbg !12426
  %mul393 = fmul float %div391, %conv392, !dbg !12427
  %add394 = fadd float %277, %mul393, !dbg !12428
  %284 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12429
  %bounds395 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %284, i32 0, i32 2, !dbg !12430
  %285 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds395, align 8, !dbg !12430
  %286 = load i32, i32* %b_index, align 4, !dbg !12431
  %idxprom396 = sext i32 %286 to i64, !dbg !12429
  %arrayidx397 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %285, i64 %idxprom396, !dbg !12429
  %min398 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %arrayidx397, i32 0, i32 1, !dbg !12432
  %287 = load i32, i32* %j356, align 4, !dbg !12433
  %idxprom399 = sext i32 %287 to i64, !dbg !12429
  %arrayidx400 = getelementptr inbounds [3 x float], [3 x float]* %min398, i64 0, i64 %idxprom399, !dbg !12429
  store float %add394, float* %arrayidx400, align 4, !dbg !12434
  %288 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12435
  %grid_bounds401 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %288, i32 0, i32 1, !dbg !12436
  %min402 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %grid_bounds401, i32 0, i32 1, !dbg !12437
  %289 = load i32, i32* %j356, align 4, !dbg !12438
  %idxprom403 = sext i32 %289 to i64, !dbg !12435
  %arrayidx404 = getelementptr inbounds [3 x float], [3 x float]* %min402, i64 0, i64 %idxprom403, !dbg !12435
  %290 = load float, float* %arrayidx404, align 4, !dbg !12435
  %291 = load i32, i32* %j356, align 4, !dbg !12439
  %idxprom405 = sext i32 %291 to i64, !dbg !12440
  %arrayidx406 = getelementptr inbounds [3 x float], [3 x float]* %dim, i64 0, i64 %idxprom405, !dbg !12440
  %292 = load float, float* %arrayidx406, align 4, !dbg !12440
  %293 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12441
  %dim407 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %293, i32 0, i32 0, !dbg !12442
  %294 = load i32, i32* %j356, align 4, !dbg !12443
  %idxprom408 = sext i32 %294 to i64, !dbg !12441
  %arrayidx409 = getelementptr inbounds [3 x i32], [3 x i32]* %dim407, i64 0, i64 %idxprom408, !dbg !12441
  %295 = load i32, i32* %arrayidx409, align 4, !dbg !12441
  %conv410 = sitofp i32 %295 to float, !dbg !12441
  %div411 = fdiv float %292, %conv410, !dbg !12444
  %296 = load i32, i32* %s, align 4, !dbg !12445
  %add412 = add nsw i32 %296, 1, !dbg !12446
  %conv413 = sitofp i32 %add412 to float, !dbg !12447
  %mul414 = fmul float %div411, %conv413, !dbg !12448
  %add415 = fadd float %290, %mul414, !dbg !12449
  %297 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12450
  %bounds416 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %297, i32 0, i32 2, !dbg !12451
  %298 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds416, align 8, !dbg !12451
  %299 = load i32, i32* %b_index, align 4, !dbg !12452
  %idxprom417 = sext i32 %299 to i64, !dbg !12450
  %arrayidx418 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %298, i64 %idxprom417, !dbg !12450
  %max419 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %arrayidx418, i32 0, i32 2, !dbg !12453
  %300 = load i32, i32* %j356, align 4, !dbg !12454
  %idxprom420 = sext i32 %300 to i64, !dbg !12450
  %arrayidx421 = getelementptr inbounds [3 x float], [3 x float]* %max419, i64 0, i64 %idxprom420, !dbg !12450
  store float %add415, float* %arrayidx421, align 4, !dbg !12455
  br label %for.inc422, !dbg !12456

for.inc422:                                       ; preds = %cond.end379
  %301 = load i32, i32* %j356, align 4, !dbg !12457
  %inc423 = add nsw i32 %301, 1, !dbg !12457
  store i32 %inc423, i32* %j356, align 4, !dbg !12457
  br label %for.cond368, !dbg !12458, !llvm.loop !12459

for.end424:                                       ; preds = %for.cond368
  %302 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12461
  %bounds425 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %302, i32 0, i32 2, !dbg !12462
  %303 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds425, align 8, !dbg !12462
  %304 = load i32, i32* %b_index, align 4, !dbg !12463
  %idxprom426 = sext i32 %304 to i64, !dbg !12461
  %arrayidx427 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %303, i64 %idxprom426, !dbg !12461
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %arrayidx427, i32 0, i32 0, !dbg !12464
  store i32 1, i32* %valid, align 4, !dbg !12465
  br label %for.inc428, !dbg !12466

for.inc428:                                       ; preds = %for.end424
  %305 = load i32, i32* %z, align 4, !dbg !12467
  %inc429 = add nsw i32 %305, 1, !dbg !12467
  store i32 %inc429, i32* %z, align 4, !dbg !12467
  br label %for.cond350, !dbg !12468, !llvm.loop !12469

for.end430:                                       ; preds = %for.cond350
  br label %for.inc431, !dbg !12471

for.inc431:                                       ; preds = %for.end430
  %306 = load i32, i32* %y, align 4, !dbg !12472
  %inc432 = add nsw i32 %306, 1, !dbg !12472
  store i32 %inc432, i32* %y, align 4, !dbg !12472
  br label %for.cond344, !dbg !12473, !llvm.loop !12474

for.end433:                                       ; preds = %for.cond344
  br label %for.inc434, !dbg !12476

for.inc434:                                       ; preds = %for.end433
  %307 = load i32, i32* %x, align 4, !dbg !12477
  %inc435 = add nsw i32 %307, 1, !dbg !12477
  store i32 %inc435, i32* %x, align 4, !dbg !12477
  br label %for.cond338, !dbg !12478, !llvm.loop !12479

for.end436:                                       ; preds = %for.cond338
  br label %if.end437, !dbg !12481

if.end437:                                        ; preds = %for.end436, %if.end173
  %308 = load i32*, i32** %temp_s_num, align 8, !dbg !12482
  %tobool438 = icmp ne i32* %308, null, !dbg !12482
  br i1 %tobool438, label %if.then439, label %if.end440, !dbg !12484

if.then439:                                       ; preds = %if.end437
  %309 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12485
  %310 = load i32*, i32** %temp_s_num, align 8, !dbg !12486
  %311 = bitcast i32* %310 to i8*, !dbg !12486
  call void %309(i8* %311), !dbg !12485
  br label %if.end440, !dbg !12485

if.end440:                                        ; preds = %if.then439, %if.end437
  %312 = load i32*, i32** %temp_t_index, align 8, !dbg !12487
  %tobool441 = icmp ne i32* %312, null, !dbg !12487
  br i1 %tobool441, label %if.then442, label %if.end443, !dbg !12489

if.then442:                                       ; preds = %if.end440
  %313 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12490
  %314 = load i32*, i32** %temp_t_index, align 8, !dbg !12491
  %315 = bitcast i32* %314 to i8*, !dbg !12491
  call void %313(i8* %315), !dbg !12490
  br label %if.end443, !dbg !12490

if.end443:                                        ; preds = %if.then442, %if.end440
  %316 = load i8* (i8*, i64, i8*)*, i8* (i8*, i64, i8*)** @MEM_reallocN_id, align 8, !dbg !12492
  %317 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12492
  %s_num444 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %317, i32 0, i32 4, !dbg !12492
  %318 = load i32*, i32** %s_num444, align 8, !dbg !12492
  %319 = bitcast i32* %318 to i8*, !dbg !12492
  %320 = load i32, i32* %grid_cells, align 4, !dbg !12492
  %conv445 = sext i32 %320 to i64, !dbg !12492
  %mul446 = mul i64 4, %conv445, !dbg !12492
  %call447 = call i8* %316(i8* %319, i64 %mul446, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.surfaceGenerateGrid, i64 0, i64 0)), !dbg !12492
  %321 = bitcast i8* %call447 to i32*, !dbg !12492
  %322 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12493
  %s_num448 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %322, i32 0, i32 4, !dbg !12494
  store i32* %321, i32** %s_num448, align 8, !dbg !12495
  %323 = load i32, i32* %error, align 4, !dbg !12496
  %tobool449 = icmp ne i32 %323, 0, !dbg !12496
  br i1 %tobool449, label %if.then453, label %lor.lhs.false450, !dbg !12498

lor.lhs.false450:                                 ; preds = %if.end443
  %324 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !12499
  %s_num451 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %324, i32 0, i32 4, !dbg !12500
  %325 = load i32*, i32** %s_num451, align 8, !dbg !12500
  %tobool452 = icmp ne i32* %325, null, !dbg !12499
  br i1 %tobool452, label %if.end455, label %if.then453, !dbg !12501

if.then453:                                       ; preds = %lor.lhs.false450, %if.end443
  %326 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12502
  %canvas = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %326, i32 0, i32 2, !dbg !12504
  %327 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !12504
  %call454 = call i32 @setError(%struct.DynamicPaintCanvasSettings* %327, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0)), !dbg !12505
  %328 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12506
  call void @freeGrid(%struct.PaintSurfaceData* %328), !dbg !12507
  br label %if.end455, !dbg !12508

if.end455:                                        ; preds = %if.then453, %lor.lhs.false450
  br label %if.end456, !dbg !12509

if.end456:                                        ; preds = %if.end455, %land.lhs.true, %if.end
  %329 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !12510
  %tobool457 = icmp ne %struct.Bounds3D* %329, null, !dbg !12510
  br i1 %tobool457, label %if.then458, label %if.end459, !dbg !12512

if.then458:                                       ; preds = %if.end456
  %330 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12513
  %331 = load %struct.Bounds3D*, %struct.Bounds3D** %grid_bounds, align 8, !dbg !12514
  %332 = bitcast %struct.Bounds3D* %331 to i8*, !dbg !12514
  call void %330(i8* %332), !dbg !12513
  br label %if.end459, !dbg !12513

if.end459:                                        ; preds = %if.then64, %if.then458, %if.end456
  ret void, !dbg !12515
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_prepareAdjacencyData(%struct.DynamicPaintSurface* %surface, i32 %force_init) #0 !dbg !12516 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %force_init.addr = alloca i32, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %bNeighs = alloca %struct.BakeAdjPoint*, align 8
  %adj_data = alloca %struct.PaintAdjData*, align 8
  %realCoord = alloca %struct.Vec3f*, align 8
  %index = alloca i32, align 4
  %i = alloca i32, align 4
  %numOfNeighs = alloca i32, align 4
  %n_index = alloca i32, align 4
  %t_index = alloca i32, align 4
  %i70 = alloca i32, align 4
  %numOfNeighs71 = alloca i32, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !12517, metadata !DIExpression()), !dbg !12518
  store i32 %force_init, i32* %force_init.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %force_init.addr, metadata !12519, metadata !DIExpression()), !dbg !12520
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !12521, metadata !DIExpression()), !dbg !12522
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12523
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !12524
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !12524
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !12522
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !12525, metadata !DIExpression()), !dbg !12526
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12527
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !12528
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !12528
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !12526
  call void @llvm.dbg.declare(metadata %struct.BakeAdjPoint** %bNeighs, metadata !12529, metadata !DIExpression()), !dbg !12530
  call void @llvm.dbg.declare(metadata %struct.PaintAdjData** %adj_data, metadata !12531, metadata !DIExpression()), !dbg !12532
  %4 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12533
  %adj_data2 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %4, i32 0, i32 2, !dbg !12534
  %5 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data2, align 8, !dbg !12534
  store %struct.PaintAdjData* %5, %struct.PaintAdjData** %adj_data, align 8, !dbg !12532
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %realCoord, metadata !12535, metadata !DIExpression()), !dbg !12536
  %6 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12537
  %realCoord3 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %6, i32 0, i32 3, !dbg !12538
  %7 = load %struct.Vec3f*, %struct.Vec3f** %realCoord3, align 8, !dbg !12538
  store %struct.Vec3f* %7, %struct.Vec3f** %realCoord, align 8, !dbg !12536
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12539, metadata !DIExpression()), !dbg !12540
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12541
  %call = call i32 @surface_usesAdjDistance(%struct.DynamicPaintSurface* %8), !dbg !12543
  %tobool = icmp ne i32 %call, 0, !dbg !12543
  br i1 %tobool, label %lor.lhs.false, label %land.lhs.true, !dbg !12544

land.lhs.true:                                    ; preds = %entry
  %9 = load i32, i32* %force_init.addr, align 4, !dbg !12545
  %tobool4 = icmp ne i32 %9, 0, !dbg !12545
  br i1 %tobool4, label %lor.lhs.false, label %if.then, !dbg !12546

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12547
  %adj_data5 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %10, i32 0, i32 2, !dbg !12548
  %11 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data5, align 8, !dbg !12548
  %tobool6 = icmp ne %struct.PaintAdjData* %11, null, !dbg !12547
  br i1 %tobool6, label %if.end, label %if.then, !dbg !12549

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  br label %return, !dbg !12550

if.end:                                           ; preds = %lor.lhs.false
  %12 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12551
  %bNeighs7 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %12, i32 0, i32 5, !dbg !12553
  %13 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs7, align 8, !dbg !12553
  %tobool8 = icmp ne %struct.BakeAdjPoint* %13, null, !dbg !12551
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !12554

if.then9:                                         ; preds = %if.end
  %14 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12555
  %15 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12556
  %bNeighs10 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %15, i32 0, i32 5, !dbg !12557
  %16 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs10, align 8, !dbg !12557
  %17 = bitcast %struct.BakeAdjPoint* %16 to i8*, !dbg !12556
  call void %14(i8* %17), !dbg !12555
  br label %if.end11, !dbg !12555

if.end11:                                         ; preds = %if.then9, %if.end
  %18 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !12558
  %19 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12559
  %adj_data12 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %19, i32 0, i32 2, !dbg !12560
  %20 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data12, align 8, !dbg !12560
  %total_targets = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %20, i32 0, i32 4, !dbg !12561
  %21 = load i32, i32* %total_targets, align 8, !dbg !12561
  %conv = sext i32 %21 to i64, !dbg !12559
  %mul = mul i64 %conv, 16, !dbg !12562
  %call13 = call i8* %18(i64 %mul, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.54, i64 0, i64 0)), !dbg !12558
  %22 = bitcast i8* %call13 to %struct.BakeAdjPoint*, !dbg !12558
  %23 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12563
  %bNeighs14 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %23, i32 0, i32 5, !dbg !12564
  store %struct.BakeAdjPoint* %22, %struct.BakeAdjPoint** %bNeighs14, align 8, !dbg !12565
  store %struct.BakeAdjPoint* %22, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12566
  %24 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12567
  %tobool15 = icmp ne %struct.BakeAdjPoint* %24, null, !dbg !12567
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !12569

if.then16:                                        ; preds = %if.end11
  br label %return, !dbg !12570

if.end17:                                         ; preds = %if.end11
  store i32 0, i32* %index, align 4, !dbg !12571
  br label %for.cond, !dbg !12573

for.cond:                                         ; preds = %for.inc62, %if.end17
  %25 = load i32, i32* %index, align 4, !dbg !12574
  %26 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12576
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %26, i32 0, i32 4, !dbg !12577
  %27 = load i32, i32* %total_points, align 8, !dbg !12577
  %cmp = icmp slt i32 %25, %27, !dbg !12578
  br i1 %cmp, label %for.body, label %for.end64, !dbg !12579

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12580, metadata !DIExpression()), !dbg !12582
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs, metadata !12583, metadata !DIExpression()), !dbg !12584
  %28 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12585
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %28, i32 0, i32 2, !dbg !12586
  %29 = load i32*, i32** %n_num, align 8, !dbg !12586
  %30 = load i32, i32* %index, align 4, !dbg !12587
  %idxprom = sext i32 %30 to i64, !dbg !12585
  %arrayidx = getelementptr inbounds i32, i32* %29, i64 %idxprom, !dbg !12585
  %31 = load i32, i32* %arrayidx, align 4, !dbg !12585
  store i32 %31, i32* %numOfNeighs, align 4, !dbg !12584
  store i32 0, i32* %i, align 4, !dbg !12588
  br label %for.cond19, !dbg !12590

for.cond19:                                       ; preds = %for.inc, %for.body
  %32 = load i32, i32* %i, align 4, !dbg !12591
  %33 = load i32, i32* %numOfNeighs, align 4, !dbg !12593
  %cmp20 = icmp slt i32 %32, %33, !dbg !12594
  br i1 %cmp20, label %for.body22, label %for.end, !dbg !12595

for.body22:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata i32* %n_index, metadata !12596, metadata !DIExpression()), !dbg !12598
  %34 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12599
  %n_index23 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %34, i32 0, i32 1, !dbg !12600
  %35 = load i32*, i32** %n_index23, align 8, !dbg !12600
  %36 = load i32, i32* %index, align 4, !dbg !12601
  %idxprom24 = sext i32 %36 to i64, !dbg !12599
  %arrayidx25 = getelementptr inbounds i32, i32* %35, i64 %idxprom24, !dbg !12599
  %37 = load i32, i32* %arrayidx25, align 4, !dbg !12599
  %38 = load i32, i32* %i, align 4, !dbg !12602
  %add = add nsw i32 %37, %38, !dbg !12603
  store i32 %add, i32* %n_index, align 4, !dbg !12598
  call void @llvm.dbg.declare(metadata i32* %t_index, metadata !12604, metadata !DIExpression()), !dbg !12605
  %39 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12606
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %39, i32 0, i32 0, !dbg !12607
  %40 = load i32*, i32** %n_target, align 8, !dbg !12607
  %41 = load i32, i32* %n_index, align 4, !dbg !12608
  %idxprom26 = sext i32 %41 to i64, !dbg !12606
  %arrayidx27 = getelementptr inbounds i32, i32* %40, i64 %idxprom26, !dbg !12606
  %42 = load i32, i32* %arrayidx27, align 4, !dbg !12606
  store i32 %42, i32* %t_index, align 4, !dbg !12605
  %43 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12609
  %44 = load i32, i32* %n_index, align 4, !dbg !12610
  %idxprom28 = sext i32 %44 to i64, !dbg !12609
  %arrayidx29 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %43, i64 %idxprom28, !dbg !12609
  %dir = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx29, i32 0, i32 0, !dbg !12611
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !12609
  %45 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !12612
  %46 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12613
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %46, i32 0, i32 1, !dbg !12614
  %47 = load i32*, i32** %s_pos, align 8, !dbg !12614
  %48 = load i32, i32* %t_index, align 4, !dbg !12615
  %idxprom30 = sext i32 %48 to i64, !dbg !12613
  %arrayidx31 = getelementptr inbounds i32, i32* %47, i64 %idxprom30, !dbg !12613
  %49 = load i32, i32* %arrayidx31, align 4, !dbg !12613
  %idxprom32 = sext i32 %49 to i64, !dbg !12612
  %arrayidx33 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %45, i64 %idxprom32, !dbg !12612
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx33, i32 0, i32 0, !dbg !12616
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !12612
  %50 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !12617
  %51 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12618
  %s_pos35 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %51, i32 0, i32 1, !dbg !12619
  %52 = load i32*, i32** %s_pos35, align 8, !dbg !12619
  %53 = load i32, i32* %index, align 4, !dbg !12620
  %idxprom36 = sext i32 %53 to i64, !dbg !12618
  %arrayidx37 = getelementptr inbounds i32, i32* %52, i64 %idxprom36, !dbg !12618
  %54 = load i32, i32* %arrayidx37, align 4, !dbg !12618
  %idxprom38 = sext i32 %54 to i64, !dbg !12617
  %arrayidx39 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %50, i64 %idxprom38, !dbg !12617
  %v40 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx39, i32 0, i32 0, !dbg !12621
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %v40, i64 0, i64 0, !dbg !12617
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay34, float* %arraydecay41), !dbg !12622
  %55 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12623
  %56 = load i32, i32* %n_index, align 4, !dbg !12624
  %idxprom42 = sext i32 %56 to i64, !dbg !12623
  %arrayidx43 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %55, i64 %idxprom42, !dbg !12623
  %dir44 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx43, i32 0, i32 0, !dbg !12625
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %dir44, i64 0, i64 0, !dbg !12623
  %call46 = call float @len_v3(float* %arraydecay45), !dbg !12626
  %57 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12627
  %58 = load i32, i32* %n_index, align 4, !dbg !12628
  %idxprom47 = sext i32 %58 to i64, !dbg !12627
  %arrayidx48 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %57, i64 %idxprom47, !dbg !12627
  %dist = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx48, i32 0, i32 1, !dbg !12629
  store float %call46, float* %dist, align 4, !dbg !12630
  %59 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12631
  %60 = load i32, i32* %n_index, align 4, !dbg !12633
  %idxprom49 = sext i32 %60 to i64, !dbg !12631
  %arrayidx50 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %59, i64 %idxprom49, !dbg !12631
  %dist51 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx50, i32 0, i32 1, !dbg !12634
  %61 = load float, float* %dist51, align 4, !dbg !12634
  %tobool52 = fcmp une float %61, 0.000000e+00, !dbg !12631
  br i1 %tobool52, label %if.then53, label %if.end61, !dbg !12635

if.then53:                                        ; preds = %for.body22
  %62 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12636
  %63 = load i32, i32* %n_index, align 4, !dbg !12637
  %idxprom54 = sext i32 %63 to i64, !dbg !12636
  %arrayidx55 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %62, i64 %idxprom54, !dbg !12636
  %dir56 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx55, i32 0, i32 0, !dbg !12638
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %dir56, i64 0, i64 0, !dbg !12636
  %64 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12639
  %65 = load i32, i32* %n_index, align 4, !dbg !12640
  %idxprom58 = sext i32 %65 to i64, !dbg !12639
  %arrayidx59 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %64, i64 %idxprom58, !dbg !12639
  %dist60 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx59, i32 0, i32 1, !dbg !12641
  %66 = load float, float* %dist60, align 4, !dbg !12641
  %div = fdiv float 1.000000e+00, %66, !dbg !12642
  call void @mul_v3_fl(float* %arraydecay57, float %div), !dbg !12643
  br label %if.end61, !dbg !12643

if.end61:                                         ; preds = %if.then53, %for.body22
  br label %for.inc, !dbg !12644

for.inc:                                          ; preds = %if.end61
  %67 = load i32, i32* %i, align 4, !dbg !12645
  %inc = add nsw i32 %67, 1, !dbg !12645
  store i32 %inc, i32* %i, align 4, !dbg !12645
  br label %for.cond19, !dbg !12646, !llvm.loop !12647

for.end:                                          ; preds = %for.cond19
  br label %for.inc62, !dbg !12649

for.inc62:                                        ; preds = %for.end
  %68 = load i32, i32* %index, align 4, !dbg !12650
  %inc63 = add nsw i32 %68, 1, !dbg !12650
  store i32 %inc63, i32* %index, align 4, !dbg !12650
  br label %for.cond, !dbg !12651, !llvm.loop !12652

for.end64:                                        ; preds = %for.cond
  %69 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12654
  %average_dist = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %69, i32 0, i32 6, !dbg !12655
  store double 0.000000e+00, double* %average_dist, align 8, !dbg !12656
  store i32 0, i32* %index, align 4, !dbg !12657
  br label %for.cond65, !dbg !12659

for.cond65:                                       ; preds = %for.inc92, %for.end64
  %70 = load i32, i32* %index, align 4, !dbg !12660
  %71 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12662
  %total_points66 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %71, i32 0, i32 4, !dbg !12663
  %72 = load i32, i32* %total_points66, align 8, !dbg !12663
  %cmp67 = icmp slt i32 %70, %72, !dbg !12664
  br i1 %cmp67, label %for.body69, label %for.end94, !dbg !12665

for.body69:                                       ; preds = %for.cond65
  call void @llvm.dbg.declare(metadata i32* %i70, metadata !12666, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs71, metadata !12669, metadata !DIExpression()), !dbg !12670
  %73 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12671
  %n_num72 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %73, i32 0, i32 2, !dbg !12672
  %74 = load i32*, i32** %n_num72, align 8, !dbg !12672
  %75 = load i32, i32* %index, align 4, !dbg !12673
  %idxprom73 = sext i32 %75 to i64, !dbg !12671
  %arrayidx74 = getelementptr inbounds i32, i32* %74, i64 %idxprom73, !dbg !12671
  %76 = load i32, i32* %arrayidx74, align 4, !dbg !12671
  store i32 %76, i32* %numOfNeighs71, align 4, !dbg !12670
  store i32 0, i32* %i70, align 4, !dbg !12674
  br label %for.cond75, !dbg !12676

for.cond75:                                       ; preds = %for.inc89, %for.body69
  %77 = load i32, i32* %i70, align 4, !dbg !12677
  %78 = load i32, i32* %numOfNeighs71, align 4, !dbg !12679
  %cmp76 = icmp slt i32 %77, %78, !dbg !12680
  br i1 %cmp76, label %for.body78, label %for.end91, !dbg !12681

for.body78:                                       ; preds = %for.cond75
  %79 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !12682
  %80 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12684
  %n_index79 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %80, i32 0, i32 1, !dbg !12685
  %81 = load i32*, i32** %n_index79, align 8, !dbg !12685
  %82 = load i32, i32* %index, align 4, !dbg !12686
  %idxprom80 = sext i32 %82 to i64, !dbg !12684
  %arrayidx81 = getelementptr inbounds i32, i32* %81, i64 %idxprom80, !dbg !12684
  %83 = load i32, i32* %arrayidx81, align 4, !dbg !12684
  %84 = load i32, i32* %i70, align 4, !dbg !12687
  %add82 = add nsw i32 %83, %84, !dbg !12688
  %idxprom83 = sext i32 %add82 to i64, !dbg !12682
  %arrayidx84 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %79, i64 %idxprom83, !dbg !12682
  %dist85 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx84, i32 0, i32 1, !dbg !12689
  %85 = load float, float* %dist85, align 4, !dbg !12689
  %conv86 = fpext float %85 to double, !dbg !12690
  %86 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12691
  %average_dist87 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %86, i32 0, i32 6, !dbg !12692
  %87 = load double, double* %average_dist87, align 8, !dbg !12693
  %add88 = fadd double %87, %conv86, !dbg !12693
  store double %add88, double* %average_dist87, align 8, !dbg !12693
  br label %for.inc89, !dbg !12694

for.inc89:                                        ; preds = %for.body78
  %88 = load i32, i32* %i70, align 4, !dbg !12695
  %inc90 = add nsw i32 %88, 1, !dbg !12695
  store i32 %inc90, i32* %i70, align 4, !dbg !12695
  br label %for.cond75, !dbg !12696, !llvm.loop !12697

for.end91:                                        ; preds = %for.cond75
  br label %for.inc92, !dbg !12699

for.inc92:                                        ; preds = %for.end91
  %89 = load i32, i32* %index, align 4, !dbg !12700
  %inc93 = add nsw i32 %89, 1, !dbg !12700
  store i32 %inc93, i32* %index, align 4, !dbg !12700
  br label %for.cond65, !dbg !12701, !llvm.loop !12702

for.end94:                                        ; preds = %for.cond65
  %90 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !12704
  %total_targets95 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %90, i32 0, i32 4, !dbg !12705
  %91 = load i32, i32* %total_targets95, align 8, !dbg !12705
  %conv96 = sitofp i32 %91 to double, !dbg !12704
  %92 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !12706
  %average_dist97 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %92, i32 0, i32 6, !dbg !12707
  %93 = load double, double* %average_dist97, align 8, !dbg !12708
  %div98 = fdiv double %93, %conv96, !dbg !12708
  store double %div98, double* %average_dist97, align 8, !dbg !12708
  br label %return, !dbg !12709

return:                                           ; preds = %for.end94, %if.then16, %if.then
  ret void, !dbg !12709
}

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @surface_getBrushFlags(%struct.DynamicPaintSurface* %surface, %struct.Scene* %scene) #0 !dbg !12710 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %base = alloca %struct.Base*, align 8
  %go = alloca %struct.GroupObject*, align 8
  %brushObj = alloca %struct.Object*, align 8
  %md = alloca %struct.ModifierData*, align 8
  %flags = alloca i32, align 4
  %pmd2 = alloca %struct.DynamicPaintModifierData*, align 8
  %brush36 = alloca %struct.DynamicPaintBrushSettings*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !12711, metadata !DIExpression()), !dbg !12712
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !12713, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.declare(metadata %struct.Base** %base, metadata !12715, metadata !DIExpression()), !dbg !12716
  store %struct.Base* null, %struct.Base** %base, align 8, !dbg !12716
  call void @llvm.dbg.declare(metadata %struct.GroupObject** %go, metadata !12717, metadata !DIExpression()), !dbg !12718
  store %struct.GroupObject* null, %struct.GroupObject** %go, align 8, !dbg !12718
  call void @llvm.dbg.declare(metadata %struct.Object** %brushObj, metadata !12719, metadata !DIExpression()), !dbg !12720
  store %struct.Object* null, %struct.Object** %brushObj, align 8, !dbg !12720
  call void @llvm.dbg.declare(metadata %struct.ModifierData** %md, metadata !12721, metadata !DIExpression()), !dbg !12722
  store %struct.ModifierData* null, %struct.ModifierData** %md, align 8, !dbg !12722
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !12723, metadata !DIExpression()), !dbg !12724
  store i32 0, i32* %flags, align 4, !dbg !12724
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12725
  %brush_group = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 4, !dbg !12727
  %1 = load %struct.Group*, %struct.Group** %brush_group, align 8, !dbg !12727
  %tobool = icmp ne %struct.Group* %1, null, !dbg !12725
  br i1 %tobool, label %if.then, label %if.else, !dbg !12728

if.then:                                          ; preds = %entry
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12729
  %brush_group1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 4, !dbg !12730
  %3 = load %struct.Group*, %struct.Group** %brush_group1, align 8, !dbg !12730
  %gobject = getelementptr inbounds %struct.Group, %struct.Group* %3, i32 0, i32 1, !dbg !12731
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %gobject, i32 0, i32 0, !dbg !12732
  %4 = load i8*, i8** %first, align 8, !dbg !12732
  %5 = bitcast i8* %4 to %struct.GroupObject*, !dbg !12729
  store %struct.GroupObject* %5, %struct.GroupObject** %go, align 8, !dbg !12733
  br label %if.end, !dbg !12734

if.else:                                          ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !12735
  %base2 = getelementptr inbounds %struct.Scene, %struct.Scene* %6, i32 0, i32 5, !dbg !12736
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %base2, i32 0, i32 0, !dbg !12737
  %7 = load i8*, i8** %first3, align 8, !dbg !12737
  %8 = bitcast i8* %7 to %struct.Base*, !dbg !12735
  store %struct.Base* %8, %struct.Base** %base, align 8, !dbg !12738
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !12739

while.cond:                                       ; preds = %if.end44, %if.end22, %if.end
  %9 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12740
  %tobool4 = icmp ne %struct.Base* %9, null, !dbg !12740
  br i1 %tobool4, label %lor.end, label %lor.rhs, !dbg !12741

lor.rhs:                                          ; preds = %while.cond
  %10 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !12742
  %tobool5 = icmp ne %struct.GroupObject* %10, null, !dbg !12741
  br label %lor.end, !dbg !12741

lor.end:                                          ; preds = %lor.rhs, %while.cond
  %11 = phi i1 [ true, %while.cond ], [ %tobool5, %lor.rhs ]
  br i1 %11, label %while.body, label %while.end, !dbg !12739

while.body:                                       ; preds = %lor.end
  store %struct.Object* null, %struct.Object** %brushObj, align 8, !dbg !12743
  %12 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12745
  %brush_group6 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %12, i32 0, i32 4, !dbg !12747
  %13 = load %struct.Group*, %struct.Group** %brush_group6, align 8, !dbg !12747
  %tobool7 = icmp ne %struct.Group* %13, null, !dbg !12745
  br i1 %tobool7, label %if.then8, label %if.else13, !dbg !12748

if.then8:                                         ; preds = %while.body
  %14 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !12749
  %ob = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %14, i32 0, i32 2, !dbg !12752
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12752
  %tobool9 = icmp ne %struct.Object* %15, null, !dbg !12749
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !12753

if.then10:                                        ; preds = %if.then8
  %16 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !12754
  %ob11 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %16, i32 0, i32 2, !dbg !12755
  %17 = load %struct.Object*, %struct.Object** %ob11, align 8, !dbg !12755
  store %struct.Object* %17, %struct.Object** %brushObj, align 8, !dbg !12756
  br label %if.end12, !dbg !12757

if.end12:                                         ; preds = %if.then10, %if.then8
  br label %if.end14, !dbg !12758

if.else13:                                        ; preds = %while.body
  %18 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12759
  %object = getelementptr inbounds %struct.Base, %struct.Base* %18, i32 0, i32 7, !dbg !12760
  %19 = load %struct.Object*, %struct.Object** %object, align 8, !dbg !12760
  store %struct.Object* %19, %struct.Object** %brushObj, align 8, !dbg !12761
  br label %if.end14

if.end14:                                         ; preds = %if.else13, %if.end12
  %20 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !12762
  %tobool15 = icmp ne %struct.Object* %20, null, !dbg !12762
  br i1 %tobool15, label %if.end23, label %if.then16, !dbg !12764

if.then16:                                        ; preds = %if.end14
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12765
  %brush_group17 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 4, !dbg !12768
  %22 = load %struct.Group*, %struct.Group** %brush_group17, align 8, !dbg !12768
  %tobool18 = icmp ne %struct.Group* %22, null, !dbg !12765
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !12769

if.then19:                                        ; preds = %if.then16
  %23 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !12770
  %next = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %23, i32 0, i32 0, !dbg !12771
  %24 = load %struct.GroupObject*, %struct.GroupObject** %next, align 8, !dbg !12771
  store %struct.GroupObject* %24, %struct.GroupObject** %go, align 8, !dbg !12772
  br label %if.end22, !dbg !12773

if.else20:                                        ; preds = %if.then16
  %25 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12774
  %next21 = getelementptr inbounds %struct.Base, %struct.Base* %25, i32 0, i32 0, !dbg !12775
  %26 = load %struct.Base*, %struct.Base** %next21, align 8, !dbg !12775
  store %struct.Base* %26, %struct.Base** %base, align 8, !dbg !12776
  br label %if.end22

if.end22:                                         ; preds = %if.else20, %if.then19
  br label %while.cond, !dbg !12777, !llvm.loop !12778

if.end23:                                         ; preds = %if.end14
  %27 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12780
  %brush_group24 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %27, i32 0, i32 4, !dbg !12782
  %28 = load %struct.Group*, %struct.Group** %brush_group24, align 8, !dbg !12782
  %tobool25 = icmp ne %struct.Group* %28, null, !dbg !12780
  br i1 %tobool25, label %if.then26, label %if.else28, !dbg !12783

if.then26:                                        ; preds = %if.end23
  %29 = load %struct.GroupObject*, %struct.GroupObject** %go, align 8, !dbg !12784
  %next27 = getelementptr inbounds %struct.GroupObject, %struct.GroupObject* %29, i32 0, i32 0, !dbg !12785
  %30 = load %struct.GroupObject*, %struct.GroupObject** %next27, align 8, !dbg !12785
  store %struct.GroupObject* %30, %struct.GroupObject** %go, align 8, !dbg !12786
  br label %if.end30, !dbg !12787

if.else28:                                        ; preds = %if.end23
  %31 = load %struct.Base*, %struct.Base** %base, align 8, !dbg !12788
  %next29 = getelementptr inbounds %struct.Base, %struct.Base* %31, i32 0, i32 0, !dbg !12789
  %32 = load %struct.Base*, %struct.Base** %next29, align 8, !dbg !12789
  store %struct.Base* %32, %struct.Base** %base, align 8, !dbg !12790
  br label %if.end30

if.end30:                                         ; preds = %if.else28, %if.then26
  %33 = load %struct.Object*, %struct.Object** %brushObj, align 8, !dbg !12791
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %33, i32 40), !dbg !12792
  store %struct.ModifierData* %call, %struct.ModifierData** %md, align 8, !dbg !12793
  %34 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !12794
  %tobool31 = icmp ne %struct.ModifierData* %34, null, !dbg !12794
  br i1 %tobool31, label %land.lhs.true, label %if.end44, !dbg !12796

land.lhs.true:                                    ; preds = %if.end30
  %35 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !12797
  %mode = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %35, i32 0, i32 3, !dbg !12798
  %36 = load i32, i32* %mode, align 4, !dbg !12798
  %and = and i32 %36, 3, !dbg !12799
  %tobool32 = icmp ne i32 %and, 0, !dbg !12799
  br i1 %tobool32, label %if.then33, label %if.end44, !dbg !12800

if.then33:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd2, metadata !12801, metadata !DIExpression()), !dbg !12803
  %37 = load %struct.ModifierData*, %struct.ModifierData** %md, align 8, !dbg !12804
  %38 = bitcast %struct.ModifierData* %37 to %struct.DynamicPaintModifierData*, !dbg !12805
  store %struct.DynamicPaintModifierData* %38, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !12803
  %39 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !12806
  %brush = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %39, i32 0, i32 2, !dbg !12808
  %40 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush, align 8, !dbg !12808
  %tobool34 = icmp ne %struct.DynamicPaintBrushSettings* %40, null, !dbg !12806
  br i1 %tobool34, label %if.then35, label %if.end43, !dbg !12809

if.then35:                                        ; preds = %if.then33
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush36, metadata !12810, metadata !DIExpression()), !dbg !12812
  %41 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd2, align 8, !dbg !12813
  %brush37 = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %41, i32 0, i32 2, !dbg !12814
  %42 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush37, align 8, !dbg !12814
  store %struct.DynamicPaintBrushSettings* %42, %struct.DynamicPaintBrushSettings** %brush36, align 8, !dbg !12812
  %43 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush36, align 8, !dbg !12815
  %flags38 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %43, i32 0, i32 4, !dbg !12817
  %44 = load i32, i32* %flags38, align 8, !dbg !12817
  %and39 = and i32 %44, 3840, !dbg !12818
  %tobool40 = icmp ne i32 %and39, 0, !dbg !12818
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !12819

if.then41:                                        ; preds = %if.then35
  %45 = load i32, i32* %flags, align 4, !dbg !12820
  %or = or i32 %45, 1, !dbg !12820
  store i32 %or, i32* %flags, align 4, !dbg !12820
  br label %if.end42, !dbg !12821

if.end42:                                         ; preds = %if.then41, %if.then35
  br label %if.end43, !dbg !12822

if.end43:                                         ; preds = %if.end42, %if.then33
  br label %if.end44, !dbg !12823

if.end44:                                         ; preds = %if.end43, %land.lhs.true, %if.end30
  br label %while.cond, !dbg !12739, !llvm.loop !12778

while.end:                                        ; preds = %lor.end
  %46 = load i32, i32* %flags, align 4, !dbg !12824
  ret i32 %46, !dbg !12825
}

declare dso_local %struct.ModifierData* @modifiers_findByType(%struct.Object*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float @max_fff(float %a, float %b, float %c) #0 !dbg !12826 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  %c.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !12830, metadata !DIExpression()), !dbg !12831
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !12832, metadata !DIExpression()), !dbg !12833
  store float %c, float* %c.addr, align 4
  call void @llvm.dbg.declare(metadata float* %c.addr, metadata !12834, metadata !DIExpression()), !dbg !12835
  %0 = load float, float* %a.addr, align 4, !dbg !12836
  %1 = load float, float* %b.addr, align 4, !dbg !12837
  %call = call float @max_ff(float %0, float %1), !dbg !12838
  %2 = load float, float* %c.addr, align 4, !dbg !12839
  %call1 = call float @max_ff(float %call, float %2), !dbg !12840
  ret float %call1, !dbg !12841
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #3

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !12842 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !12845, metadata !DIExpression()), !dbg !12846
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !12847, metadata !DIExpression()), !dbg !12848
  %0 = load float, float* %a.addr, align 4, !dbg !12849
  %1 = load float, float* %b.addr, align 4, !dbg !12850
  %cmp = fcmp ogt float %0, %1, !dbg !12851
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12852

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !12853
  br label %cond.end, !dbg !12852

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !12854
  br label %cond.end, !dbg !12852

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !12852
  ret float %cond, !dbg !12855
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_surfacePreStep(%struct.DynamicPaintSurface* %surface, float %timescale) #0 !dbg !12856 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %timescale.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %index = alloca i32, align 4
  %pPoint = alloca %struct.PaintPoint*, align 8
  %i = alloca i32, align 4
  %dry_ratio = alloca float, align 4
  %f_color = alloca [4 x float], align 16
  %p_wetness = alloca float, align 4
  %f_color89 = alloca [4 x float], align 16
  %point = alloca float*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !12859, metadata !DIExpression()), !dbg !12860
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !12863, metadata !DIExpression()), !dbg !12864
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12865
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !12866
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !12866
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !12864
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12867, metadata !DIExpression()), !dbg !12868
  store i32 0, i32* %index, align 4, !dbg !12869
  br label %for.cond, !dbg !12871

for.cond:                                         ; preds = %for.inc160, %entry
  %2 = load i32, i32* %index, align 4, !dbg !12872
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12874
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %3, i32 0, i32 4, !dbg !12875
  %4 = load i32, i32* %total_points, align 8, !dbg !12875
  %cmp = icmp slt i32 %2, %4, !dbg !12876
  br i1 %cmp, label %for.body, label %for.end162, !dbg !12877

for.body:                                         ; preds = %for.cond
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12878
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 11, !dbg !12881
  %6 = load i16, i16* %type, align 2, !dbg !12881
  %conv = sext i16 %6 to i32, !dbg !12878
  %cmp1 = icmp eq i32 %conv, 0, !dbg !12882
  br i1 %cmp1, label %if.then, label %if.else134, !dbg !12883

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !12884, metadata !DIExpression()), !dbg !12886
  %7 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !12887
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %7, i32 0, i32 1, !dbg !12888
  %8 = load i8*, i8** %type_data, align 8, !dbg !12888
  %9 = bitcast i8* %8 to %struct.PaintPoint*, !dbg !12889
  %10 = load i32, i32* %index, align 4, !dbg !12890
  %idxprom = sext i32 %10 to i64, !dbg !12891
  %arrayidx = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %9, i64 %idxprom, !dbg !12891
  store %struct.PaintPoint* %arrayidx, %struct.PaintPoint** %pPoint, align 8, !dbg !12886
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12892
  %flags = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 18, !dbg !12894
  %12 = load i32, i32* %flags, align 4, !dbg !12894
  %and = and i32 %12, 512, !dbg !12895
  %tobool = icmp ne i32 %and, 0, !dbg !12895
  br i1 %tobool, label %if.then3, label %if.end107, !dbg !12896

if.then3:                                         ; preds = %if.then
  %13 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12897
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %13, i32 0, i32 2, !dbg !12900
  %14 = load float, float* %wetness, align 4, !dbg !12900
  %cmp4 = fcmp oge float %14, 0x3F50624DE0000000, !dbg !12901
  br i1 %cmp4, label %if.then6, label %if.else83, !dbg !12902

if.then6:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12903, metadata !DIExpression()), !dbg !12905
  call void @llvm.dbg.declare(metadata float* %dry_ratio, metadata !12906, metadata !DIExpression()), !dbg !12907
  call void @llvm.dbg.declare(metadata [4 x float]* %f_color, metadata !12908, metadata !DIExpression()), !dbg !12909
  call void @llvm.dbg.declare(metadata float* %p_wetness, metadata !12910, metadata !DIExpression()), !dbg !12911
  %15 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12912
  %wetness7 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %15, i32 0, i32 2, !dbg !12913
  %16 = load float, float* %wetness7, align 4, !dbg !12913
  store float %16, float* %p_wetness, align 4, !dbg !12911
  %17 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12914
  %wetness8 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %17, i32 0, i32 2, !dbg !12915
  %18 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12916
  %dry_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %18, i32 0, i32 28, !dbg !12917
  %19 = load i32, i32* %dry_speed, align 8, !dbg !12917
  %conv9 = sitofp i32 %19 to float, !dbg !12916
  %20 = load float, float* %timescale.addr, align 4, !dbg !12918
  %21 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12919
  %flags10 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %21, i32 0, i32 18, !dbg !12920
  %22 = load i32, i32* %flags10, align 4, !dbg !12920
  %and11 = and i32 %22, 32, !dbg !12921
  call void @value_dissolve(float* %wetness8, float %conv9, float %20, i32 %and11), !dbg !12922
  %23 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12923
  %wetness12 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %23, i32 0, i32 2, !dbg !12925
  %24 = load float, float* %wetness12, align 4, !dbg !12925
  %cmp13 = fcmp olt float %24, 0.000000e+00, !dbg !12926
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !12927

if.then15:                                        ; preds = %if.then6
  %25 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12928
  %wetness16 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %25, i32 0, i32 2, !dbg !12929
  store float 0.000000e+00, float* %wetness16, align 4, !dbg !12930
  br label %if.end, !dbg !12928

if.end:                                           ; preds = %if.then15, %if.then6
  %26 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12931
  %wetness17 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %26, i32 0, i32 2, !dbg !12933
  %27 = load float, float* %wetness17, align 4, !dbg !12933
  %28 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !12934
  %color_dry_threshold = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %28, i32 0, i32 30, !dbg !12935
  %29 = load float, float* %color_dry_threshold, align 8, !dbg !12935
  %cmp18 = fcmp olt float %27, %29, !dbg !12936
  br i1 %cmp18, label %if.then20, label %if.end82, !dbg !12937

if.then20:                                        ; preds = %if.end
  %30 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12938
  %wetness21 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %30, i32 0, i32 2, !dbg !12940
  %31 = load float, float* %wetness21, align 4, !dbg !12940
  %32 = load float, float* %p_wetness, align 4, !dbg !12941
  %div = fdiv float %31, %32, !dbg !12942
  store float %div, float* %dry_ratio, align 4, !dbg !12943
  %33 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12944
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %33, i32 0, i32 5, !dbg !12944
  %34 = load float, float* %alpha, align 4, !dbg !12944
  %cmp22 = fcmp olt float %34, 0.000000e+00, !dbg !12944
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !12947

if.then24:                                        ; preds = %if.then20
  %35 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12944
  %alpha25 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %35, i32 0, i32 5, !dbg !12944
  store float 0.000000e+00, float* %alpha25, align 4, !dbg !12944
  br label %if.end32, !dbg !12944

if.else:                                          ; preds = %if.then20
  %36 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12948
  %alpha26 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %36, i32 0, i32 5, !dbg !12948
  %37 = load float, float* %alpha26, align 4, !dbg !12948
  %cmp27 = fcmp ogt float %37, 1.000000e+00, !dbg !12948
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !12944

if.then29:                                        ; preds = %if.else
  %38 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12948
  %alpha30 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %38, i32 0, i32 5, !dbg !12948
  store float 1.000000e+00, float* %alpha30, align 4, !dbg !12948
  br label %if.end31, !dbg !12948

if.end31:                                         ; preds = %if.then29, %if.else
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.then24
  %39 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12950
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %39, i32 0, i32 1, !dbg !12950
  %40 = load float, float* %e_alpha, align 4, !dbg !12950
  %cmp33 = fcmp olt float %40, 0.000000e+00, !dbg !12950
  br i1 %cmp33, label %if.then35, label %if.else37, !dbg !12953

if.then35:                                        ; preds = %if.end32
  %41 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12950
  %e_alpha36 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %41, i32 0, i32 1, !dbg !12950
  store float 0.000000e+00, float* %e_alpha36, align 4, !dbg !12950
  br label %if.end44, !dbg !12950

if.else37:                                        ; preds = %if.end32
  %42 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12954
  %e_alpha38 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %42, i32 0, i32 1, !dbg !12954
  %43 = load float, float* %e_alpha38, align 4, !dbg !12954
  %cmp39 = fcmp ogt float %43, 1.000000e+00, !dbg !12954
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !12950

if.then41:                                        ; preds = %if.else37
  %44 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12954
  %e_alpha42 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %44, i32 0, i32 1, !dbg !12954
  store float 1.000000e+00, float* %e_alpha42, align 4, !dbg !12954
  br label %if.end43, !dbg !12954

if.end43:                                         ; preds = %if.then41, %if.else37
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then35
  %45 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12956
  %color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %45, i32 0, i32 4, !dbg !12957
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !12956
  %46 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12958
  %alpha45 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %46, i32 0, i32 5, !dbg !12959
  %47 = load float, float* %alpha45, align 4, !dbg !12959
  %48 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12960
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %48, i32 0, i32 0, !dbg !12961
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !12960
  %49 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12962
  %e_alpha47 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %49, i32 0, i32 1, !dbg !12963
  %50 = load float, float* %e_alpha47, align 4, !dbg !12963
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %f_color, i64 0, i64 0, !dbg !12964
  call void @blendColors(float* %arraydecay, float %47, float* %arraydecay46, float %50, float* %arraydecay48), !dbg !12965
  %51 = load float, float* %dry_ratio, align 4, !dbg !12966
  %52 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12967
  %e_alpha49 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %52, i32 0, i32 1, !dbg !12968
  %53 = load float, float* %e_alpha49, align 4, !dbg !12969
  %mul = fmul float %53, %51, !dbg !12969
  store float %mul, float* %e_alpha49, align 4, !dbg !12969
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %f_color, i64 0, i64 3, !dbg !12970
  %54 = load float, float* %arrayidx50, align 4, !dbg !12970
  %55 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12971
  %e_alpha51 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %55, i32 0, i32 1, !dbg !12972
  %56 = load float, float* %e_alpha51, align 4, !dbg !12972
  %sub = fsub float %54, %56, !dbg !12973
  %57 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12974
  %e_alpha52 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %57, i32 0, i32 1, !dbg !12975
  %58 = load float, float* %e_alpha52, align 4, !dbg !12975
  %sub53 = fsub float 1.000000e+00, %58, !dbg !12976
  %div54 = fdiv float %sub, %sub53, !dbg !12977
  %59 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12978
  %alpha55 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %59, i32 0, i32 5, !dbg !12979
  store float %div54, float* %alpha55, align 4, !dbg !12980
  %60 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12981
  %alpha56 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %60, i32 0, i32 5, !dbg !12983
  %61 = load float, float* %alpha56, align 4, !dbg !12983
  %tobool57 = fcmp une float %61, 0.000000e+00, !dbg !12981
  br i1 %tobool57, label %if.then58, label %if.end81, !dbg !12984

if.then58:                                        ; preds = %if.end44
  store i32 0, i32* %i, align 4, !dbg !12985
  br label %for.cond59, !dbg !12988

for.cond59:                                       ; preds = %for.inc, %if.then58
  %62 = load i32, i32* %i, align 4, !dbg !12989
  %cmp60 = icmp slt i32 %62, 3, !dbg !12991
  br i1 %cmp60, label %for.body62, label %for.end, !dbg !12992

for.body62:                                       ; preds = %for.cond59
  %63 = load i32, i32* %i, align 4, !dbg !12993
  %idxprom63 = sext i32 %63 to i64, !dbg !12995
  %arrayidx64 = getelementptr inbounds [4 x float], [4 x float]* %f_color, i64 0, i64 %idxprom63, !dbg !12995
  %64 = load float, float* %arrayidx64, align 4, !dbg !12995
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %f_color, i64 0, i64 3, !dbg !12996
  %65 = load float, float* %arrayidx65, align 4, !dbg !12996
  %mul66 = fmul float %64, %65, !dbg !12997
  %66 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !12998
  %e_color67 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %66, i32 0, i32 0, !dbg !12999
  %67 = load i32, i32* %i, align 4, !dbg !13000
  %idxprom68 = sext i32 %67 to i64, !dbg !12998
  %arrayidx69 = getelementptr inbounds [3 x float], [3 x float]* %e_color67, i64 0, i64 %idxprom68, !dbg !12998
  %68 = load float, float* %arrayidx69, align 4, !dbg !12998
  %69 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13001
  %e_alpha70 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %69, i32 0, i32 1, !dbg !13002
  %70 = load float, float* %e_alpha70, align 4, !dbg !13002
  %mul71 = fmul float %68, %70, !dbg !13003
  %sub72 = fsub float %mul66, %mul71, !dbg !13004
  %71 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13005
  %alpha73 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %71, i32 0, i32 5, !dbg !13006
  %72 = load float, float* %alpha73, align 4, !dbg !13006
  %73 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13007
  %e_alpha74 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %73, i32 0, i32 1, !dbg !13008
  %74 = load float, float* %e_alpha74, align 4, !dbg !13008
  %sub75 = fsub float 1.000000e+00, %74, !dbg !13009
  %mul76 = fmul float %72, %sub75, !dbg !13010
  %div77 = fdiv float %sub72, %mul76, !dbg !13011
  %75 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13012
  %color78 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %75, i32 0, i32 4, !dbg !13013
  %76 = load i32, i32* %i, align 4, !dbg !13014
  %idxprom79 = sext i32 %76 to i64, !dbg !13012
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %color78, i64 0, i64 %idxprom79, !dbg !13012
  store float %div77, float* %arrayidx80, align 4, !dbg !13015
  br label %for.inc, !dbg !13016

for.inc:                                          ; preds = %for.body62
  %77 = load i32, i32* %i, align 4, !dbg !13017
  %inc = add nsw i32 %77, 1, !dbg !13017
  store i32 %inc, i32* %i, align 4, !dbg !13017
  br label %for.cond59, !dbg !13018, !llvm.loop !13019

for.end:                                          ; preds = %for.cond59
  br label %if.end81, !dbg !13021

if.end81:                                         ; preds = %for.end, %if.end44
  br label %if.end82, !dbg !13022

if.end82:                                         ; preds = %if.end81, %if.end
  %78 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13023
  %state = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %78, i32 0, i32 3, !dbg !13024
  store i16 1, i16* %state, align 4, !dbg !13025
  br label %if.end106, !dbg !13026

if.else83:                                        ; preds = %if.then3
  %79 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13027
  %state84 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %79, i32 0, i32 3, !dbg !13029
  %80 = load i16, i16* %state84, align 4, !dbg !13029
  %conv85 = sext i16 %80 to i32, !dbg !13027
  %cmp86 = icmp sgt i32 %conv85, 0, !dbg !13030
  br i1 %cmp86, label %if.then88, label %if.end105, !dbg !13031

if.then88:                                        ; preds = %if.else83
  call void @llvm.dbg.declare(metadata [4 x float]* %f_color89, metadata !13032, metadata !DIExpression()), !dbg !13034
  %81 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13035
  %color90 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %81, i32 0, i32 4, !dbg !13036
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %color90, i64 0, i64 0, !dbg !13035
  %82 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13037
  %alpha92 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %82, i32 0, i32 5, !dbg !13038
  %83 = load float, float* %alpha92, align 4, !dbg !13038
  %84 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13039
  %e_color93 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %84, i32 0, i32 0, !dbg !13040
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %e_color93, i64 0, i64 0, !dbg !13039
  %85 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13041
  %e_alpha95 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %85, i32 0, i32 1, !dbg !13042
  %86 = load float, float* %e_alpha95, align 4, !dbg !13042
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %f_color89, i64 0, i64 0, !dbg !13043
  call void @blendColors(float* %arraydecay91, float %83, float* %arraydecay94, float %86, float* %arraydecay96), !dbg !13044
  %87 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13045
  %color97 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %87, i32 0, i32 4, !dbg !13046
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %color97, i64 0, i64 0, !dbg !13045
  %arraydecay99 = getelementptr inbounds [4 x float], [4 x float]* %f_color89, i64 0, i64 0, !dbg !13047
  call void @copy_v3_v3(float* %arraydecay98, float* %arraydecay99), !dbg !13048
  %arrayidx100 = getelementptr inbounds [4 x float], [4 x float]* %f_color89, i64 0, i64 3, !dbg !13049
  %88 = load float, float* %arrayidx100, align 4, !dbg !13049
  %89 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13050
  %alpha101 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %89, i32 0, i32 5, !dbg !13051
  store float %88, float* %alpha101, align 4, !dbg !13052
  %90 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13053
  %wetness102 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %90, i32 0, i32 2, !dbg !13054
  store float 0.000000e+00, float* %wetness102, align 4, !dbg !13055
  %91 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13056
  %e_alpha103 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %91, i32 0, i32 1, !dbg !13057
  store float 0.000000e+00, float* %e_alpha103, align 4, !dbg !13058
  %92 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13059
  %state104 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %92, i32 0, i32 3, !dbg !13060
  store i16 0, i16* %state104, align 4, !dbg !13061
  br label %if.end105, !dbg !13062

if.end105:                                        ; preds = %if.then88, %if.else83
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.end82
  br label %if.end107, !dbg !13063

if.end107:                                        ; preds = %if.end106, %if.then
  %93 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13064
  %flags108 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %93, i32 0, i32 18, !dbg !13066
  %94 = load i32, i32* %flags108, align 4, !dbg !13066
  %and109 = and i32 %94, 4, !dbg !13067
  %tobool110 = icmp ne i32 %and109, 0, !dbg !13067
  br i1 %tobool110, label %if.then111, label %if.end133, !dbg !13068

if.then111:                                       ; preds = %if.end107
  %95 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13069
  %alpha112 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %95, i32 0, i32 5, !dbg !13071
  %96 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13072
  %diss_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %96, i32 0, i32 29, !dbg !13073
  %97 = load i32, i32* %diss_speed, align 4, !dbg !13073
  %conv113 = sitofp i32 %97 to float, !dbg !13072
  %98 = load float, float* %timescale.addr, align 4, !dbg !13074
  %99 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13075
  %flags114 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %99, i32 0, i32 18, !dbg !13076
  %100 = load i32, i32* %flags114, align 4, !dbg !13076
  %and115 = and i32 %100, 16, !dbg !13077
  call void @value_dissolve(float* %alpha112, float %conv113, float %98, i32 %and115), !dbg !13078
  %101 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13079
  %alpha116 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %101, i32 0, i32 5, !dbg !13081
  %102 = load float, float* %alpha116, align 4, !dbg !13081
  %cmp117 = fcmp olt float %102, 0.000000e+00, !dbg !13082
  br i1 %cmp117, label %if.then119, label %if.end121, !dbg !13083

if.then119:                                       ; preds = %if.then111
  %103 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13084
  %alpha120 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %103, i32 0, i32 5, !dbg !13085
  store float 0.000000e+00, float* %alpha120, align 4, !dbg !13086
  br label %if.end121, !dbg !13084

if.end121:                                        ; preds = %if.then119, %if.then111
  %104 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13087
  %e_alpha122 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %104, i32 0, i32 1, !dbg !13088
  %105 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13089
  %diss_speed123 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %105, i32 0, i32 29, !dbg !13090
  %106 = load i32, i32* %diss_speed123, align 4, !dbg !13090
  %conv124 = sitofp i32 %106 to float, !dbg !13089
  %107 = load float, float* %timescale.addr, align 4, !dbg !13091
  %108 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13092
  %flags125 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %108, i32 0, i32 18, !dbg !13093
  %109 = load i32, i32* %flags125, align 4, !dbg !13093
  %and126 = and i32 %109, 16, !dbg !13094
  call void @value_dissolve(float* %e_alpha122, float %conv124, float %107, i32 %and126), !dbg !13095
  %110 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13096
  %e_alpha127 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %110, i32 0, i32 1, !dbg !13098
  %111 = load float, float* %e_alpha127, align 4, !dbg !13098
  %cmp128 = fcmp olt float %111, 0.000000e+00, !dbg !13099
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !13100

if.then130:                                       ; preds = %if.end121
  %112 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !13101
  %e_alpha131 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %112, i32 0, i32 1, !dbg !13102
  store float 0.000000e+00, float* %e_alpha131, align 4, !dbg !13103
  br label %if.end132, !dbg !13101

if.end132:                                        ; preds = %if.then130, %if.end121
  br label %if.end133, !dbg !13104

if.end133:                                        ; preds = %if.end132, %if.end107
  br label %if.end159, !dbg !13105

if.else134:                                       ; preds = %for.body
  %113 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13106
  %flags135 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %113, i32 0, i32 18, !dbg !13108
  %114 = load i32, i32* %flags135, align 4, !dbg !13108
  %and136 = and i32 %114, 4, !dbg !13109
  %tobool137 = icmp ne i32 %and136, 0, !dbg !13109
  br i1 %tobool137, label %land.lhs.true, label %if.end158, !dbg !13110

land.lhs.true:                                    ; preds = %if.else134
  %115 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13111
  %type138 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %115, i32 0, i32 11, !dbg !13112
  %116 = load i16, i16* %type138, align 2, !dbg !13112
  %conv139 = sext i16 %116 to i32, !dbg !13111
  %cmp140 = icmp eq i32 %conv139, 1, !dbg !13113
  br i1 %cmp140, label %if.then146, label %lor.lhs.false, !dbg !13114

lor.lhs.false:                                    ; preds = %land.lhs.true
  %117 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13115
  %type142 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %117, i32 0, i32 11, !dbg !13116
  %118 = load i16, i16* %type142, align 2, !dbg !13116
  %conv143 = sext i16 %118 to i32, !dbg !13115
  %cmp144 = icmp eq i32 %conv143, 2, !dbg !13117
  br i1 %cmp144, label %if.then146, label %if.end158, !dbg !13118

if.then146:                                       ; preds = %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata float** %point, metadata !13119, metadata !DIExpression()), !dbg !13121
  %119 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !13122
  %type_data147 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %119, i32 0, i32 1, !dbg !13123
  %120 = load i8*, i8** %type_data147, align 8, !dbg !13123
  %121 = bitcast i8* %120 to float*, !dbg !13124
  %122 = load i32, i32* %index, align 4, !dbg !13125
  %idxprom148 = sext i32 %122 to i64, !dbg !13126
  %arrayidx149 = getelementptr inbounds float, float* %121, i64 %idxprom148, !dbg !13126
  store float* %arrayidx149, float** %point, align 8, !dbg !13121
  %123 = load float*, float** %point, align 8, !dbg !13127
  %124 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13128
  %diss_speed150 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %124, i32 0, i32 29, !dbg !13129
  %125 = load i32, i32* %diss_speed150, align 4, !dbg !13129
  %conv151 = sitofp i32 %125 to float, !dbg !13128
  %126 = load float, float* %timescale.addr, align 4, !dbg !13130
  %127 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13131
  %flags152 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %127, i32 0, i32 18, !dbg !13132
  %128 = load i32, i32* %flags152, align 4, !dbg !13132
  %and153 = and i32 %128, 16, !dbg !13133
  call void @value_dissolve(float* %123, float %conv151, float %126, i32 %and153), !dbg !13134
  %129 = load float*, float** %point, align 8, !dbg !13135
  %130 = load float, float* %129, align 4, !dbg !13137
  %cmp154 = fcmp olt float %130, 0.000000e+00, !dbg !13138
  br i1 %cmp154, label %if.then156, label %if.end157, !dbg !13139

if.then156:                                       ; preds = %if.then146
  %131 = load float*, float** %point, align 8, !dbg !13140
  store float 0.000000e+00, float* %131, align 4, !dbg !13141
  br label %if.end157, !dbg !13142

if.end157:                                        ; preds = %if.then156, %if.then146
  br label %if.end158, !dbg !13143

if.end158:                                        ; preds = %if.end157, %lor.lhs.false, %if.else134
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.end133
  br label %for.inc160, !dbg !13144

for.inc160:                                       ; preds = %if.end159
  %132 = load i32, i32* %index, align 4, !dbg !13145
  %inc161 = add nsw i32 %132, 1, !dbg !13145
  store i32 %inc161, i32* %index, align 4, !dbg !13145
  br label %for.cond, !dbg !13146, !llvm.loop !13147

for.end162:                                       ; preds = %for.cond
  ret void, !dbg !13149
}

; Function Attrs: noinline nounwind uwtable
define internal void @scene_setSubframe(%struct.Scene* %scene, float %subframe) #0 !dbg !13150 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %subframe.addr = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13153, metadata !DIExpression()), !dbg !13154
  store float %subframe, float* %subframe.addr, align 4
  call void @llvm.dbg.declare(metadata float* %subframe.addr, metadata !13155, metadata !DIExpression()), !dbg !13156
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13157
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !13158
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !13159
  %1 = load i32, i32* %cfra, align 8, !dbg !13160
  %sub = sub nsw i32 %1, 1, !dbg !13160
  store i32 %sub, i32* %cfra, align 8, !dbg !13160
  %2 = load float, float* %subframe.addr, align 4, !dbg !13161
  %3 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13162
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %3, i32 0, i32 22, !dbg !13163
  %subframe2 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 8, !dbg !13164
  store float %2, float* %subframe2, align 4, !dbg !13165
  ret void, !dbg !13166
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @subframe_updateObject(%struct.Scene* %scene, %struct.Object* %ob, i32 %flags, i32 %parent_recursion, float %frame) #0 !dbg !13167 {
entry:
  %retval = alloca i32, align 4
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %flags.addr = alloca i32, align 4
  %parent_recursion.addr = alloca i32, align 4
  %frame.addr = alloca float, align 4
  %pmd = alloca %struct.DynamicPaintModifierData*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %recursion = alloca i32, align 4
  %is_canvas = alloca i32, align 4
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %cu = alloca %struct.Curve*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13170, metadata !DIExpression()), !dbg !13171
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13174, metadata !DIExpression()), !dbg !13175
  store i32 %parent_recursion, i32* %parent_recursion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %parent_recursion.addr, metadata !13176, metadata !DIExpression()), !dbg !13177
  store float %frame, float* %frame.addr, align 4
  call void @llvm.dbg.declare(metadata float* %frame.addr, metadata !13178, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintModifierData** %pmd, metadata !13180, metadata !DIExpression()), !dbg !13181
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13182
  %call = call %struct.ModifierData* @modifiers_findByType(%struct.Object* %0, i32 40), !dbg !13183
  %1 = bitcast %struct.ModifierData* %call to %struct.DynamicPaintModifierData*, !dbg !13184
  store %struct.DynamicPaintModifierData* %1, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !13181
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !13185, metadata !DIExpression()), !dbg !13205
  %2 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !13206
  %tobool = icmp ne %struct.DynamicPaintModifierData* %2, null, !dbg !13206
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13208

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.DynamicPaintModifierData*, %struct.DynamicPaintModifierData** %pmd, align 8, !dbg !13209
  %canvas = getelementptr inbounds %struct.DynamicPaintModifierData, %struct.DynamicPaintModifierData* %3, i32 0, i32 1, !dbg !13210
  %4 = load %struct.DynamicPaintCanvasSettings*, %struct.DynamicPaintCanvasSettings** %canvas, align 8, !dbg !13210
  %tobool1 = icmp ne %struct.DynamicPaintCanvasSettings* %4, null, !dbg !13209
  br i1 %tobool1, label %if.then, label %if.end, !dbg !13211

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !13212
  br label %return, !dbg !13212

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %parent_recursion.addr, align 4, !dbg !13213
  %tobool2 = icmp ne i32 %5, 0, !dbg !13213
  br i1 %tobool2, label %if.then3, label %if.end49, !dbg !13215

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %recursion, metadata !13216, metadata !DIExpression()), !dbg !13218
  %6 = load i32, i32* %parent_recursion.addr, align 4, !dbg !13219
  %sub = sub nsw i32 %6, 1, !dbg !13220
  store i32 %sub, i32* %recursion, align 4, !dbg !13218
  call void @llvm.dbg.declare(metadata i32* %is_canvas, metadata !13221, metadata !DIExpression()), !dbg !13222
  store i32 0, i32* %is_canvas, align 4, !dbg !13222
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13223
  %parent = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 9, !dbg !13225
  %8 = load %struct.Object*, %struct.Object** %parent, align 8, !dbg !13225
  %tobool4 = icmp ne %struct.Object* %8, null, !dbg !13223
  br i1 %tobool4, label %if.then5, label %if.end8, !dbg !13226

if.then5:                                         ; preds = %if.then3
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13227
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13228
  %parent6 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 9, !dbg !13229
  %11 = load %struct.Object*, %struct.Object** %parent6, align 8, !dbg !13229
  %12 = load i32, i32* %recursion, align 4, !dbg !13230
  %13 = load float, float* %frame.addr, align 4, !dbg !13231
  %call7 = call i32 @subframe_updateObject(%struct.Scene* %9, %struct.Object* %11, i32 0, i32 %12, float %13), !dbg !13232
  %14 = load i32, i32* %is_canvas, align 4, !dbg !13233
  %add = add nsw i32 %14, %call7, !dbg !13233
  store i32 %add, i32* %is_canvas, align 4, !dbg !13233
  br label %if.end8, !dbg !13234

if.end8:                                          ; preds = %if.then5, %if.then3
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13235
  %track = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 10, !dbg !13237
  %16 = load %struct.Object*, %struct.Object** %track, align 8, !dbg !13237
  %tobool9 = icmp ne %struct.Object* %16, null, !dbg !13235
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !13238

if.then10:                                        ; preds = %if.end8
  %17 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13239
  %18 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13240
  %track11 = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 10, !dbg !13241
  %19 = load %struct.Object*, %struct.Object** %track11, align 8, !dbg !13241
  %20 = load i32, i32* %recursion, align 4, !dbg !13242
  %21 = load float, float* %frame.addr, align 4, !dbg !13243
  %call12 = call i32 @subframe_updateObject(%struct.Scene* %17, %struct.Object* %19, i32 0, i32 %20, float %21), !dbg !13244
  %22 = load i32, i32* %is_canvas, align 4, !dbg !13245
  %add13 = add nsw i32 %22, %call12, !dbg !13245
  store i32 %add13, i32* %is_canvas, align 4, !dbg !13245
  br label %if.end14, !dbg !13246

if.end14:                                         ; preds = %if.then10, %if.end8
  %23 = load i32, i32* %is_canvas, align 4, !dbg !13247
  %tobool15 = icmp ne i32 %23, 0, !dbg !13247
  br i1 %tobool15, label %land.lhs.true16, label %if.end23, !dbg !13249

land.lhs.true16:                                  ; preds = %if.end14
  %24 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13250
  %partype = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 4, !dbg !13251
  %25 = load i16, i16* %partype, align 2, !dbg !13251
  %conv = sext i16 %25 to i32, !dbg !13250
  %cmp = icmp eq i32 %conv, 5, !dbg !13252
  br i1 %cmp, label %if.then22, label %lor.lhs.false, !dbg !13253

lor.lhs.false:                                    ; preds = %land.lhs.true16
  %26 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13254
  %partype18 = getelementptr inbounds %struct.Object, %struct.Object* %26, i32 0, i32 4, !dbg !13255
  %27 = load i16, i16* %partype18, align 2, !dbg !13255
  %conv19 = sext i16 %27 to i32, !dbg !13254
  %cmp20 = icmp eq i32 %conv19, 6, !dbg !13256
  br i1 %cmp20, label %if.then22, label %if.end23, !dbg !13257

if.then22:                                        ; preds = %lor.lhs.false, %land.lhs.true16
  store i32 0, i32* %retval, align 4, !dbg !13258
  br label %return, !dbg !13258

if.end23:                                         ; preds = %lor.lhs.false, %if.end14
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13259
  %constraints = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 106, !dbg !13261
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !13262
  %29 = load i8*, i8** %first, align 8, !dbg !13262
  %30 = bitcast i8* %29 to %struct.bConstraint*, !dbg !13259
  store %struct.bConstraint* %30, %struct.bConstraint** %con, align 8, !dbg !13263
  br label %for.cond, !dbg !13264

for.cond:                                         ; preds = %for.inc46, %if.end23
  %31 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13265
  %tobool24 = icmp ne %struct.bConstraint* %31, null, !dbg !13267
  br i1 %tobool24, label %for.body, label %for.end48, !dbg !13267

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !13268, metadata !DIExpression()), !dbg !13414
  %32 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13415
  %call25 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %32), !dbg !13416
  store %struct.bConstraintTypeInfo* %call25, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13414
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !13417, metadata !DIExpression()), !dbg !13418
  %33 = bitcast %struct.ListBase* %targets to i8*, !dbg !13418
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false), !dbg !13418
  %34 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13419
  %tobool26 = icmp ne %struct.bConstraintTypeInfo* %34, null, !dbg !13419
  br i1 %tobool26, label %land.lhs.true27, label %if.end45, !dbg !13421

land.lhs.true27:                                  ; preds = %for.body
  %35 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13422
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %35, i32 0, i32 8, !dbg !13423
  %36 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !13423
  %tobool28 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %36, null, !dbg !13422
  br i1 %tobool28, label %if.then29, label %if.end45, !dbg !13424

if.then29:                                        ; preds = %land.lhs.true27
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !13425, metadata !DIExpression()), !dbg !13429
  %37 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13430
  %get_constraint_targets30 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %37, i32 0, i32 8, !dbg !13431
  %38 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets30, align 8, !dbg !13431
  %39 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13432
  %call31 = call i32 %38(%struct.bConstraint* %39, %struct.ListBase* %targets), !dbg !13430
  %first32 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !13433
  %40 = load i8*, i8** %first32, align 8, !dbg !13433
  %41 = bitcast i8* %40 to %struct.bConstraintTarget*, !dbg !13435
  store %struct.bConstraintTarget* %41, %struct.bConstraintTarget** %ct, align 8, !dbg !13436
  br label %for.cond33, !dbg !13437

for.cond33:                                       ; preds = %for.inc, %if.then29
  %42 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !13438
  %tobool34 = icmp ne %struct.bConstraintTarget* %42, null, !dbg !13440
  br i1 %tobool34, label %for.body35, label %for.end, !dbg !13440

for.body35:                                       ; preds = %for.cond33
  %43 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !13441
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %43, i32 0, i32 2, !dbg !13444
  %44 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !13444
  %tobool36 = icmp ne %struct.Object* %44, null, !dbg !13441
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !13445

if.then37:                                        ; preds = %for.body35
  %45 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13446
  %46 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !13447
  %tar38 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %46, i32 0, i32 2, !dbg !13448
  %47 = load %struct.Object*, %struct.Object** %tar38, align 8, !dbg !13448
  %48 = load i32, i32* %recursion, align 4, !dbg !13449
  %49 = load float, float* %frame.addr, align 4, !dbg !13450
  %call39 = call i32 @subframe_updateObject(%struct.Scene* %45, %struct.Object* %47, i32 0, i32 %48, float %49), !dbg !13451
  br label %if.end40, !dbg !13451

if.end40:                                         ; preds = %if.then37, %for.body35
  br label %for.inc, !dbg !13452

for.inc:                                          ; preds = %if.end40
  %50 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !13453
  %next = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %50, i32 0, i32 0, !dbg !13454
  %51 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next, align 8, !dbg !13454
  store %struct.bConstraintTarget* %51, %struct.bConstraintTarget** %ct, align 8, !dbg !13455
  br label %for.cond33, !dbg !13456, !llvm.loop !13457

for.end:                                          ; preds = %for.cond33
  %52 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13459
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %52, i32 0, i32 9, !dbg !13461
  %53 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !13461
  %tobool41 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %53, null, !dbg !13459
  br i1 %tobool41, label %if.then42, label %if.end44, !dbg !13462

if.then42:                                        ; preds = %for.end
  %54 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !13463
  %flush_constraint_targets43 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %54, i32 0, i32 9, !dbg !13464
  %55 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets43, align 8, !dbg !13464
  %56 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13465
  call void %55(%struct.bConstraint* %56, %struct.ListBase* %targets, i8 zeroext 0), !dbg !13463
  br label %if.end44, !dbg !13463

if.end44:                                         ; preds = %if.then42, %for.end
  br label %if.end45, !dbg !13466

if.end45:                                         ; preds = %if.end44, %land.lhs.true27, %for.body
  br label %for.inc46, !dbg !13467

for.inc46:                                        ; preds = %if.end45
  %57 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !13468
  %next47 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %57, i32 0, i32 0, !dbg !13469
  %58 = load %struct.bConstraint*, %struct.bConstraint** %next47, align 8, !dbg !13469
  store %struct.bConstraint* %58, %struct.bConstraint** %con, align 8, !dbg !13470
  br label %for.cond, !dbg !13471, !llvm.loop !13472

for.end48:                                        ; preds = %for.cond
  br label %if.end49, !dbg !13474

if.end49:                                         ; preds = %for.end48, %if.end
  %59 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13475
  %recalc = getelementptr inbounds %struct.Object, %struct.Object* %59, i32 0, i32 103, !dbg !13476
  %60 = load i8, i8* %recalc, align 1, !dbg !13477
  %conv50 = zext i8 %60 to i32, !dbg !13477
  %or = or i32 %conv50, 7, !dbg !13477
  %conv51 = trunc i32 %or to i8, !dbg !13477
  store i8 %conv51, i8* %recalc, align 1, !dbg !13477
  %61 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13478
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13479
  %id = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 0, !dbg !13480
  %63 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13481
  %adt = getelementptr inbounds %struct.Object, %struct.Object* %63, i32 0, i32 1, !dbg !13482
  %64 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !13482
  %65 = load float, float* %frame.addr, align 4, !dbg !13483
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %61, %struct.ID* %id, %struct.AnimData* %64, float %65, i16 signext 2), !dbg !13484
  %66 = load i32, i32* %flags.addr, align 4, !dbg !13485
  %and = and i32 %66, 2, !dbg !13487
  %tobool52 = icmp ne i32 %and, 0, !dbg !13487
  br i1 %tobool52, label %if.then53, label %if.else, !dbg !13488

if.then53:                                        ; preds = %if.end49
  %67 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13489
  call void @object_cacheIgnoreClear(%struct.Object* %67, i32 1), !dbg !13491
  %68 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !13492
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %68, i32 0, i32 46, !dbg !13493
  %69 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !13493
  %70 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13494
  %71 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13495
  call void @BKE_object_handle_update(%struct.EvaluationContext* %69, %struct.Scene* %70, %struct.Object* %71), !dbg !13496
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13497
  call void @object_cacheIgnoreClear(%struct.Object* %72, i32 0), !dbg !13498
  br label %if.end54, !dbg !13499

if.else:                                          ; preds = %if.end49
  %73 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13500
  %74 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13501
  %75 = load float, float* %frame.addr, align 4, !dbg !13502
  call void @BKE_object_where_is_calc_time(%struct.Scene* %73, %struct.Object* %74, float %75), !dbg !13503
  br label %if.end54

if.end54:                                         ; preds = %if.else, %if.then53
  %76 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13504
  %type = getelementptr inbounds %struct.Object, %struct.Object* %76, i32 0, i32 3, !dbg !13506
  %77 = load i16, i16* %type, align 8, !dbg !13506
  %conv55 = sext i16 %77 to i32, !dbg !13504
  %cmp56 = icmp eq i32 %conv55, 2, !dbg !13507
  br i1 %cmp56, label %if.then58, label %if.end61, !dbg !13508

if.then58:                                        ; preds = %if.end54
  call void @llvm.dbg.declare(metadata %struct.Curve** %cu, metadata !13509, metadata !DIExpression()), !dbg !13613
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13614
  %data = getelementptr inbounds %struct.Object, %struct.Object* %78, i32 0, i32 19, !dbg !13615
  %79 = load i8*, i8** %data, align 8, !dbg !13615
  %80 = bitcast i8* %79 to %struct.Curve*, !dbg !13614
  store %struct.Curve* %80, %struct.Curve** %cu, align 8, !dbg !13613
  %81 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13616
  %82 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13617
  %id59 = getelementptr inbounds %struct.Curve, %struct.Curve* %82, i32 0, i32 0, !dbg !13618
  %83 = load %struct.Curve*, %struct.Curve** %cu, align 8, !dbg !13619
  %adt60 = getelementptr inbounds %struct.Curve, %struct.Curve* %83, i32 0, i32 1, !dbg !13620
  %84 = load %struct.AnimData*, %struct.AnimData** %adt60, align 8, !dbg !13620
  %85 = load float, float* %frame.addr, align 4, !dbg !13621
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %81, %struct.ID* %id59, %struct.AnimData* %84, float %85, i16 signext 2), !dbg !13622
  br label %if.end61, !dbg !13623

if.end61:                                         ; preds = %if.then58, %if.end54
  %86 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13624
  %type62 = getelementptr inbounds %struct.Object, %struct.Object* %86, i32 0, i32 3, !dbg !13626
  %87 = load i16, i16* %type62, align 8, !dbg !13626
  %conv63 = sext i16 %87 to i32, !dbg !13624
  %cmp64 = icmp eq i32 %conv63, 25, !dbg !13627
  br i1 %cmp64, label %if.then66, label %if.end70, !dbg !13628

if.then66:                                        ; preds = %if.end61
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !13629, metadata !DIExpression()), !dbg !13666
  %88 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13667
  %data67 = getelementptr inbounds %struct.Object, %struct.Object* %88, i32 0, i32 19, !dbg !13668
  %89 = load i8*, i8** %data67, align 8, !dbg !13668
  %90 = bitcast i8* %89 to %struct.bArmature*, !dbg !13667
  store %struct.bArmature* %90, %struct.bArmature** %arm, align 8, !dbg !13666
  %91 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13669
  %92 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !13670
  %id68 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %92, i32 0, i32 0, !dbg !13671
  %93 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !13672
  %adt69 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %93, i32 0, i32 1, !dbg !13673
  %94 = load %struct.AnimData*, %struct.AnimData** %adt69, align 8, !dbg !13673
  %95 = load float, float* %frame.addr, align 4, !dbg !13674
  call void @BKE_animsys_evaluate_animdata(%struct.Scene* %91, %struct.ID* %id68, %struct.AnimData* %94, float %95, i16 signext 2), !dbg !13675
  %96 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13676
  %97 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !13677
  call void @BKE_pose_where_is(%struct.Scene* %96, %struct.Object* %97), !dbg !13678
  br label %if.end70, !dbg !13679

if.end70:                                         ; preds = %if.then66, %if.end61
  store i32 0, i32* %retval, align 4, !dbg !13680
  br label %return, !dbg !13680

return:                                           ; preds = %if.end70, %if.then22, %if.then
  %98 = load i32, i32* %retval, align 4, !dbg !13681
  ret i32 %98, !dbg !13681
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %brush, %struct.Scene* %scene) #0 !dbg !13682 {
entry:
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !13685, metadata !DIExpression()), !dbg !13686
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13687, metadata !DIExpression()), !dbg !13688
  %0 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !13689
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %0, i32 0, i32 4, !dbg !13690
  %1 = load i32, i32* %flags, align 8, !dbg !13690
  %and = and i32 %1, 2, !dbg !13691
  %tobool = icmp ne i32 %and, 0, !dbg !13691
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13692

land.rhs:                                         ; preds = %entry
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13693
  %call = call zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene* %2), !dbg !13694
  %tobool1 = icmp ne i8 %call, 0, !dbg !13695
  %lnot = xor i1 %tobool1, true, !dbg !13695
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %3 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !13696
  %land.ext = zext i1 %3 to i32, !dbg !13692
  ret i32 %land.ext, !dbg !13697
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_updateBrushMaterials(%struct.Object* %brushOb, %struct.Material* %ui_mat, %struct.Scene* %scene, %struct.BrushMaterials* %bMats) #0 !dbg !13698 {
entry:
  %brushOb.addr = alloca %struct.Object*, align 8
  %ui_mat.addr = alloca %struct.Material*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %bMats.addr = alloca %struct.BrushMaterials*, align 8
  %i = alloca i32, align 4
  %tot = alloca i32, align 4
  store %struct.Object* %brushOb, %struct.Object** %brushOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %brushOb.addr, metadata !13702, metadata !DIExpression()), !dbg !13703
  store %struct.Material* %ui_mat, %struct.Material** %ui_mat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Material** %ui_mat.addr, metadata !13704, metadata !DIExpression()), !dbg !13705
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !13706, metadata !DIExpression()), !dbg !13707
  store %struct.BrushMaterials* %bMats, %struct.BrushMaterials** %bMats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials** %bMats.addr, metadata !13708, metadata !DIExpression()), !dbg !13709
  %0 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13710
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 50, !dbg !13711
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !13710
  %1 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13712
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 47, !dbg !13713
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !13712
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay1), !dbg !13714
  %2 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13715
  %imat_ren = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 51, !dbg !13716
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat_ren, i64 0, i64 0, !dbg !13715
  %3 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13717
  %imat3 = getelementptr inbounds %struct.Object, %struct.Object* %3, i32 0, i32 50, !dbg !13718
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat3, i64 0, i64 0, !dbg !13717
  call void @copy_m4_m4([4 x float]* %arraydecay2, [4 x float]* %arraydecay4), !dbg !13719
  %4 = load %struct.Material*, %struct.Material** %ui_mat.addr, align 8, !dbg !13720
  %cmp = icmp eq %struct.Material* %4, null, !dbg !13722
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !13723

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13724
  %mat = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 29, !dbg !13725
  %6 = load %struct.Material**, %struct.Material*** %mat, align 8, !dbg !13725
  %tobool = icmp ne %struct.Material** %6, null, !dbg !13724
  br i1 %tobool, label %land.lhs.true5, label %if.else, !dbg !13726

land.lhs.true5:                                   ; preds = %land.lhs.true
  %7 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13727
  %totcol = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 31, !dbg !13728
  %8 = load i32, i32* %totcol, align 8, !dbg !13728
  %tobool6 = icmp ne i32 %8, 0, !dbg !13727
  br i1 %tobool6, label %if.then, label %if.else, !dbg !13729

if.then:                                          ; preds = %land.lhs.true5
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13730, metadata !DIExpression()), !dbg !13732
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !13733, metadata !DIExpression()), !dbg !13734
  %9 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13735
  %call7 = call i16* @give_totcolp(%struct.Object* %9), !dbg !13736
  %10 = load i16, i16* %call7, align 2, !dbg !13737
  %conv = sext i16 %10 to i32, !dbg !13738
  store i32 %conv, i32* %tot, align 4, !dbg !13734
  %11 = load i32, i32* %tot, align 4, !dbg !13739
  %tobool8 = icmp ne i32 %11, 0, !dbg !13739
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !13741

if.then9:                                         ; preds = %if.then
  %12 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13742
  %13 = load i32, i32* %tot, align 4, !dbg !13744
  %conv10 = sext i32 %13 to i64, !dbg !13745
  %mul = mul i64 8, %conv10, !dbg !13746
  %call11 = call i8* %12(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i64 0, i64 0)), !dbg !13742
  %14 = bitcast i8* %call11 to %struct.Material**, !dbg !13742
  %15 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !13747
  %ob_mats = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %15, i32 0, i32 1, !dbg !13748
  store %struct.Material** %14, %struct.Material*** %ob_mats, align 8, !dbg !13749
  store i32 0, i32* %i, align 4, !dbg !13750
  br label %for.cond, !dbg !13752

for.cond:                                         ; preds = %for.inc, %if.then9
  %16 = load i32, i32* %i, align 4, !dbg !13753
  %17 = load i32, i32* %tot, align 4, !dbg !13755
  %cmp12 = icmp slt i32 %16, %17, !dbg !13756
  br i1 %cmp12, label %for.body, label %for.end, !dbg !13757

for.body:                                         ; preds = %for.cond
  %18 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !13758
  %19 = load i32, i32* %i, align 4, !dbg !13760
  %add = add nsw i32 %19, 1, !dbg !13761
  %conv14 = trunc i32 %add to i16, !dbg !13762
  %call15 = call %struct.Material* @give_current_material(%struct.Object* %18, i16 signext %conv14), !dbg !13763
  %20 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13764
  %call16 = call %struct.Material* @RE_init_sample_material(%struct.Material* %call15, %struct.Scene* %20), !dbg !13765
  %21 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !13766
  %ob_mats17 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %21, i32 0, i32 1, !dbg !13767
  %22 = load %struct.Material**, %struct.Material*** %ob_mats17, align 8, !dbg !13767
  %23 = load i32, i32* %i, align 4, !dbg !13768
  %idxprom = sext i32 %23 to i64, !dbg !13766
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %22, i64 %idxprom, !dbg !13766
  store %struct.Material* %call16, %struct.Material** %arrayidx, align 8, !dbg !13769
  br label %for.inc, !dbg !13770

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !13771
  %inc = add nsw i32 %24, 1, !dbg !13771
  store i32 %inc, i32* %i, align 4, !dbg !13771
  br label %for.cond, !dbg !13772, !llvm.loop !13773

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !13775

if.end:                                           ; preds = %for.end, %if.then
  %25 = load i32, i32* %tot, align 4, !dbg !13776
  %26 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !13777
  %tot18 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %26, i32 0, i32 2, !dbg !13778
  store i32 %25, i32* %tot18, align 8, !dbg !13779
  br label %if.end21, !dbg !13780

if.else:                                          ; preds = %land.lhs.true5, %land.lhs.true, %entry
  %27 = load %struct.Material*, %struct.Material** %ui_mat.addr, align 8, !dbg !13781
  %28 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !13783
  %call19 = call %struct.Material* @RE_init_sample_material(%struct.Material* %27, %struct.Scene* %28), !dbg !13784
  %29 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !13785
  %mat20 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %29, i32 0, i32 0, !dbg !13786
  store %struct.Material* %call19, %struct.Material** %mat20, align 8, !dbg !13787
  br label %if.end21

if.end21:                                         ; preds = %if.else, %if.end
  ret void, !dbg !13788
}

declare dso_local i32 @psys_check_enabled(%struct.Object*, %struct.ParticleSystem*) #2

declare dso_local void @BKE_animsys_evaluate_animdata(%struct.Scene*, %struct.ID*, %struct.AnimData*, float, i16 signext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_paintParticles(%struct.DynamicPaintSurface* %surface, %struct.ParticleSystem* %psys, %struct.DynamicPaintBrushSettings* %brush, float %timescale) #0 !dbg !13789 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %psys.addr = alloca %struct.ParticleSystem*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %timescale.addr = alloca float, align 4
  %part = alloca %struct.ParticleSettings*, align 8
  %pa = alloca %struct.ParticleData*, align 8
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %grid = alloca %struct.VolumeGrid*, align 8
  %tree = alloca %struct.KDTree*, align 8
  %particlesAdded = alloca i32, align 4
  %invalidParticles = alloca i32, align 4
  %p = alloca i32, align 4
  %solidradius = alloca float, align 4
  %smooth = alloca float, align 4
  %range = alloca float, align 4
  %particle_timestep = alloca float, align 4
  %part_bb = alloca %struct.Bounds3D, align 4
  %c_index = alloca i32, align 4
  %total_cells = alloca i32, align 4
  %id = alloca i32, align 4
  %index = alloca i32, align 4
  %disp_intersect = alloca float, align 4
  %radius = alloca float, align 4
  %strength = alloca float, align 4
  %velocity_val = alloca float, align 4
  %part_index = alloca i32, align 4
  %nearest = alloca %struct.KDTreeNearest, align 4
  %smooth_range = alloca float, align 4
  %part_solidradius = alloca float, align 4
  %pa121 = alloca %struct.ParticleData*, align 8
  %nearest156 = alloca %struct.KDTreeNearest*, align 8
  %n = alloca i32, align 4
  %particles157 = alloca i32, align 4
  %smooth_range158 = alloca float, align 4
  %dist161 = alloca float, align 4
  %max_range = alloca float, align 4
  %pa178 = alloca %struct.ParticleData*, align 8
  %s_range = alloca float, align 4
  %rad = alloca float, align 4
  %str = alloca float, align 4
  %paintColor = alloca [4 x float], align 16
  %depth = alloca float, align 4
  %velocity = alloca [3 x float], align 4
  %pa259 = alloca %struct.ParticleData*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !13794, metadata !DIExpression()), !dbg !13795
  store %struct.ParticleSystem* %psys, %struct.ParticleSystem** %psys.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ParticleSystem** %psys.addr, metadata !13796, metadata !DIExpression()), !dbg !13797
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !13798, metadata !DIExpression()), !dbg !13799
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !13800, metadata !DIExpression()), !dbg !13801
  call void @llvm.dbg.declare(metadata %struct.ParticleSettings** %part, metadata !13802, metadata !DIExpression()), !dbg !13803
  %0 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13804
  %part1 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %0, i32 0, i32 2, !dbg !13805
  %1 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part1, align 8, !dbg !13805
  store %struct.ParticleSettings* %1, %struct.ParticleSettings** %part, align 8, !dbg !13803
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa, metadata !13806, metadata !DIExpression()), !dbg !13807
  store %struct.ParticleData* null, %struct.ParticleData** %pa, align 8, !dbg !13807
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !13808, metadata !DIExpression()), !dbg !13809
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13810
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 3, !dbg !13811
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !13811
  store %struct.PaintSurfaceData* %3, %struct.PaintSurfaceData** %sData, align 8, !dbg !13809
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !13812, metadata !DIExpression()), !dbg !13813
  %4 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !13814
  %bData2 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %4, i32 0, i32 3, !dbg !13815
  %5 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData2, align 8, !dbg !13815
  store %struct.PaintBakeData* %5, %struct.PaintBakeData** %bData, align 8, !dbg !13813
  call void @llvm.dbg.declare(metadata %struct.VolumeGrid** %grid, metadata !13816, metadata !DIExpression()), !dbg !13817
  %6 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !13818
  %grid3 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %6, i32 0, i32 7, !dbg !13819
  %7 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid3, align 8, !dbg !13819
  store %struct.VolumeGrid* %7, %struct.VolumeGrid** %grid, align 8, !dbg !13817
  call void @llvm.dbg.declare(metadata %struct.KDTree** %tree, metadata !13820, metadata !DIExpression()), !dbg !13823
  call void @llvm.dbg.declare(metadata i32* %particlesAdded, metadata !13824, metadata !DIExpression()), !dbg !13825
  store i32 0, i32* %particlesAdded, align 4, !dbg !13825
  call void @llvm.dbg.declare(metadata i32* %invalidParticles, metadata !13826, metadata !DIExpression()), !dbg !13827
  store i32 0, i32* %invalidParticles, align 4, !dbg !13827
  call void @llvm.dbg.declare(metadata i32* %p, metadata !13828, metadata !DIExpression()), !dbg !13829
  store i32 0, i32* %p, align 4, !dbg !13829
  call void @llvm.dbg.declare(metadata float* %solidradius, metadata !13830, metadata !DIExpression()), !dbg !13831
  %8 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13832
  %radius_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %8, i32 0, i32 39, !dbg !13833
  %9 = load float, float* %radius_scale, align 4, !dbg !13833
  %10 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !13834
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %10, i32 0, i32 4, !dbg !13835
  %11 = load i32, i32* %flags, align 8, !dbg !13835
  %and = and i32 %11, 1, !dbg !13836
  %tobool = icmp ne i32 %and, 0, !dbg !13836
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !13837

cond.true:                                        ; preds = %entry
  %12 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13838
  %part4 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %12, i32 0, i32 2, !dbg !13839
  %13 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part4, align 8, !dbg !13839
  %size = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %13, i32 0, i32 82, !dbg !13840
  %14 = load float, float* %size, align 8, !dbg !13840
  br label %cond.end, !dbg !13837

cond.false:                                       ; preds = %entry
  %15 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !13841
  %particle_radius = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %15, i32 0, i32 11, !dbg !13842
  %16 = load float, float* %particle_radius, align 4, !dbg !13842
  br label %cond.end, !dbg !13837

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %14, %cond.true ], [ %16, %cond.false ], !dbg !13837
  %mul = fmul float %9, %cond, !dbg !13843
  store float %mul, float* %solidradius, align 4, !dbg !13831
  call void @llvm.dbg.declare(metadata float* %smooth, metadata !13844, metadata !DIExpression()), !dbg !13845
  %17 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !13846
  %particle_smooth = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %17, i32 0, i32 12, !dbg !13847
  %18 = load float, float* %particle_smooth, align 8, !dbg !13847
  %19 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !13848
  %radius_scale5 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %19, i32 0, i32 39, !dbg !13849
  %20 = load float, float* %radius_scale5, align 4, !dbg !13849
  %mul6 = fmul float %18, %20, !dbg !13850
  store float %mul6, float* %smooth, align 4, !dbg !13845
  call void @llvm.dbg.declare(metadata float* %range, metadata !13851, metadata !DIExpression()), !dbg !13852
  %21 = load float, float* %solidradius, align 4, !dbg !13853
  %22 = load float, float* %smooth, align 4, !dbg !13854
  %add = fadd float %21, %22, !dbg !13855
  store float %add, float* %range, align 4, !dbg !13852
  call void @llvm.dbg.declare(metadata float* %particle_timestep, metadata !13856, metadata !DIExpression()), !dbg !13857
  %23 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13858
  %timetweak = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %23, i32 0, i32 57, !dbg !13859
  %24 = load float, float* %timetweak, align 4, !dbg !13859
  %mul7 = fmul float 0x3FA47AE140000000, %24, !dbg !13860
  store float %mul7, float* %particle_timestep, align 4, !dbg !13857
  call void @llvm.dbg.declare(metadata %struct.Bounds3D* %part_bb, metadata !13861, metadata !DIExpression()), !dbg !13862
  %25 = bitcast %struct.Bounds3D* %part_bb to i8*, !dbg !13862
  call void @llvm.memset.p0i8.i64(i8* align 4 %25, i8 0, i64 28, i1 false), !dbg !13862
  %26 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13863
  %totpart = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %26, i32 0, i32 26, !dbg !13865
  %27 = load i32, i32* %totpart, align 8, !dbg !13865
  %cmp = icmp slt i32 %27, 1, !dbg !13866
  br i1 %cmp, label %if.then, label %if.end, !dbg !13867

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !13868
  br label %return, !dbg !13868

if.end:                                           ; preds = %cond.end
  %28 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13869
  %totpart8 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %28, i32 0, i32 26, !dbg !13870
  %29 = load i32, i32* %totpart8, align 8, !dbg !13870
  %call = call %struct.KDTree* @BLI_kdtree_new(i32 %29), !dbg !13871
  store %struct.KDTree* %call, %struct.KDTree** %tree, align 8, !dbg !13872
  store i32 0, i32* %p, align 4, !dbg !13873
  %30 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13875
  %particles = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %30, i32 0, i32 3, !dbg !13876
  %31 = load %struct.ParticleData*, %struct.ParticleData** %particles, align 8, !dbg !13876
  store %struct.ParticleData* %31, %struct.ParticleData** %pa, align 8, !dbg !13877
  br label %for.cond, !dbg !13878

for.cond:                                         ; preds = %for.inc, %if.end
  %32 = load i32, i32* %p, align 4, !dbg !13879
  %33 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !13881
  %totpart9 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %33, i32 0, i32 26, !dbg !13882
  %34 = load i32, i32* %totpart9, align 8, !dbg !13882
  %cmp10 = icmp slt i32 %32, %34, !dbg !13883
  br i1 %cmp10, label %for.body, label %for.end, !dbg !13884

for.body:                                         ; preds = %for.cond
  %35 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13885
  %alive = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %35, i32 0, i32 18, !dbg !13888
  %36 = load i16, i16* %alive, align 2, !dbg !13888
  %conv = sext i16 %36 to i32, !dbg !13885
  %cmp11 = icmp eq i32 %conv, 2, !dbg !13889
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !13890

land.lhs.true:                                    ; preds = %for.body
  %37 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13891
  %flag = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %37, i32 0, i32 5, !dbg !13892
  %38 = load i32, i32* %flag, align 8, !dbg !13892
  %and13 = and i32 %38, 32, !dbg !13893
  %cmp14 = icmp eq i32 %and13, 0, !dbg !13894
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !13895

if.then16:                                        ; preds = %land.lhs.true
  br label %for.inc, !dbg !13896

if.else:                                          ; preds = %land.lhs.true, %for.body
  %39 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13897
  %alive17 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %39, i32 0, i32 18, !dbg !13899
  %40 = load i16, i16* %alive17, align 2, !dbg !13899
  %conv18 = sext i16 %40 to i32, !dbg !13897
  %cmp19 = icmp eq i32 %conv18, 1, !dbg !13900
  br i1 %cmp19, label %land.lhs.true21, label %if.else27, !dbg !13901

land.lhs.true21:                                  ; preds = %if.else
  %41 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part, align 8, !dbg !13902
  %flag22 = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %41, i32 0, i32 5, !dbg !13903
  %42 = load i32, i32* %flag22, align 8, !dbg !13903
  %and23 = and i32 %42, 64, !dbg !13904
  %cmp24 = icmp eq i32 %and23, 0, !dbg !13905
  br i1 %cmp24, label %if.then26, label %if.else27, !dbg !13906

if.then26:                                        ; preds = %land.lhs.true21
  br label %for.inc, !dbg !13907

if.else27:                                        ; preds = %land.lhs.true21, %if.else
  %43 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13908
  %flag28 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %43, i32 0, i32 17, !dbg !13910
  %44 = load i16, i16* %flag28, align 4, !dbg !13910
  %conv29 = sext i16 %44 to i32, !dbg !13908
  %and30 = and i32 %conv29, 1, !dbg !13911
  %tobool31 = icmp ne i32 %and30, 0, !dbg !13911
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !13912

if.then32:                                        ; preds = %if.else27
  br label %for.inc, !dbg !13913

if.end33:                                         ; preds = %if.else27
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35

if.end35:                                         ; preds = %if.end34
  %45 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13914
  %state = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %45, i32 0, i32 0, !dbg !13914
  %co = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state, i32 0, i32 0, !dbg !13914
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13914
  %46 = load float, float* %arrayidx, align 8, !dbg !13914
  %cmp36 = fcmp uno float %46, %46, !dbg !13914
  br i1 %cmp36, label %if.then46, label %lor.lhs.false, !dbg !13916

lor.lhs.false:                                    ; preds = %if.end35
  %47 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13917
  %state37 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %47, i32 0, i32 0, !dbg !13917
  %co38 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state37, i32 0, i32 0, !dbg !13917
  %arrayidx39 = getelementptr inbounds [3 x float], [3 x float]* %co38, i64 0, i64 1, !dbg !13917
  %48 = load float, float* %arrayidx39, align 4, !dbg !13917
  %cmp40 = fcmp uno float %48, %48, !dbg !13917
  br i1 %cmp40, label %if.then46, label %lor.lhs.false41, !dbg !13918

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %49 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13919
  %state42 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %49, i32 0, i32 0, !dbg !13919
  %co43 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state42, i32 0, i32 0, !dbg !13919
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %co43, i64 0, i64 2, !dbg !13919
  %50 = load float, float* %arrayidx44, align 8, !dbg !13919
  %cmp45 = fcmp uno float %50, %50, !dbg !13919
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !13920

if.then46:                                        ; preds = %lor.lhs.false41, %lor.lhs.false, %if.end35
  %51 = load i32, i32* %invalidParticles, align 4, !dbg !13921
  %inc = add nsw i32 %51, 1, !dbg !13921
  store i32 %inc, i32* %invalidParticles, align 4, !dbg !13921
  br label %for.inc, !dbg !13923

if.end47:                                         ; preds = %lor.lhs.false41
  %52 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13924
  %grid_bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %52, i32 0, i32 1, !dbg !13926
  %53 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13927
  %state48 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %53, i32 0, i32 0, !dbg !13928
  %co49 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state48, i32 0, i32 0, !dbg !13929
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co49, i64 0, i64 0, !dbg !13927
  %54 = load float, float* %range, align 4, !dbg !13930
  %call50 = call i32 @boundIntersectPoint(%struct.Bounds3D* %grid_bounds, float* %arraydecay, float %54), !dbg !13931
  %tobool51 = icmp ne i32 %call50, 0, !dbg !13931
  br i1 %tobool51, label %if.end53, label %if.then52, !dbg !13932

if.then52:                                        ; preds = %if.end47
  br label %for.inc, !dbg !13933

if.end53:                                         ; preds = %if.end47
  %55 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !13934
  %56 = load i32, i32* %p, align 4, !dbg !13935
  %57 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13936
  %state54 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %57, i32 0, i32 0, !dbg !13937
  %co55 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state54, i32 0, i32 0, !dbg !13938
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %co55, i64 0, i64 0, !dbg !13936
  call void @BLI_kdtree_insert(%struct.KDTree* %55, i32 %56, float* %arraydecay56), !dbg !13939
  %58 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13940
  %state57 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %58, i32 0, i32 0, !dbg !13941
  %co58 = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state57, i32 0, i32 0, !dbg !13942
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %co58, i64 0, i64 0, !dbg !13940
  call void @boundInsert(%struct.Bounds3D* %part_bb, float* %arraydecay59), !dbg !13943
  %59 = load i32, i32* %particlesAdded, align 4, !dbg !13944
  %inc60 = add nsw i32 %59, 1, !dbg !13944
  store i32 %inc60, i32* %particlesAdded, align 4, !dbg !13944
  br label %for.inc, !dbg !13945

for.inc:                                          ; preds = %if.end53, %if.then52, %if.then46, %if.then32, %if.then26, %if.then16
  %60 = load i32, i32* %p, align 4, !dbg !13946
  %inc61 = add nsw i32 %60, 1, !dbg !13946
  store i32 %inc61, i32* %p, align 4, !dbg !13946
  %61 = load %struct.ParticleData*, %struct.ParticleData** %pa, align 8, !dbg !13947
  %incdec.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %61, i32 1, !dbg !13947
  store %struct.ParticleData* %incdec.ptr, %struct.ParticleData** %pa, align 8, !dbg !13947
  br label %for.cond, !dbg !13948, !llvm.loop !13949

for.end:                                          ; preds = %for.cond
  %62 = load i32, i32* %invalidParticles, align 4, !dbg !13951
  %tobool62 = icmp ne i32 %62, 0, !dbg !13951
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !13953

if.then63:                                        ; preds = %for.end
  %call64 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.58, i64 0, i64 0)), !dbg !13954
  br label %if.end65, !dbg !13954

if.end65:                                         ; preds = %if.then63, %for.end
  %63 = load i32, i32* %particlesAdded, align 4, !dbg !13955
  %cmp66 = icmp slt i32 %63, 1, !dbg !13957
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !13958

if.then68:                                        ; preds = %if.end65
  %64 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !13959
  call void @BLI_kdtree_free(%struct.KDTree* %64), !dbg !13961
  store i32 1, i32* %retval, align 4, !dbg !13962
  br label %return, !dbg !13962

if.end69:                                         ; preds = %if.end65
  call void @BLI_begin_threaded_malloc(), !dbg !13963
  %65 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13964
  %grid_bounds70 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %65, i32 0, i32 1, !dbg !13966
  %66 = load float, float* %range, align 4, !dbg !13967
  %call71 = call i32 @boundsIntersectDist(%struct.Bounds3D* %grid_bounds70, %struct.Bounds3D* %part_bb, float %66), !dbg !13968
  %tobool72 = icmp ne i32 %call71, 0, !dbg !13968
  br i1 %tobool72, label %if.then73, label %if.end345, !dbg !13969

if.then73:                                        ; preds = %if.end69
  call void @llvm.dbg.declare(metadata i32* %c_index, metadata !13970, metadata !DIExpression()), !dbg !13972
  call void @llvm.dbg.declare(metadata i32* %total_cells, metadata !13973, metadata !DIExpression()), !dbg !13974
  %67 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13975
  %dim = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %67, i32 0, i32 0, !dbg !13976
  %arrayidx74 = getelementptr inbounds [3 x i32], [3 x i32]* %dim, i64 0, i64 0, !dbg !13975
  %68 = load i32, i32* %arrayidx74, align 8, !dbg !13975
  %69 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13977
  %dim75 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %69, i32 0, i32 0, !dbg !13978
  %arrayidx76 = getelementptr inbounds [3 x i32], [3 x i32]* %dim75, i64 0, i64 1, !dbg !13977
  %70 = load i32, i32* %arrayidx76, align 4, !dbg !13977
  %mul77 = mul nsw i32 %68, %70, !dbg !13979
  %71 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13980
  %dim78 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %71, i32 0, i32 0, !dbg !13981
  %arrayidx79 = getelementptr inbounds [3 x i32], [3 x i32]* %dim78, i64 0, i64 2, !dbg !13980
  %72 = load i32, i32* %arrayidx79, align 8, !dbg !13980
  %mul80 = mul nsw i32 %mul77, %72, !dbg !13982
  store i32 %mul80, i32* %total_cells, align 4, !dbg !13974
  %73 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !13983
  call void @BLI_kdtree_balance(%struct.KDTree* %73), !dbg !13984
  store i32 0, i32* %c_index, align 4, !dbg !13985
  br label %for.cond81, !dbg !13987

for.cond81:                                       ; preds = %for.inc342, %if.then73
  %74 = load i32, i32* %c_index, align 4, !dbg !13988
  %75 = load i32, i32* %total_cells, align 4, !dbg !13990
  %cmp82 = icmp slt i32 %74, %75, !dbg !13991
  br i1 %cmp82, label %for.body84, label %for.end344, !dbg !13992

for.body84:                                       ; preds = %for.cond81
  call void @llvm.dbg.declare(metadata i32* %id, metadata !13993, metadata !DIExpression()), !dbg !13995
  %76 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !13996
  %s_num = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %76, i32 0, i32 4, !dbg !13998
  %77 = load i32*, i32** %s_num, align 8, !dbg !13998
  %78 = load i32, i32* %c_index, align 4, !dbg !13999
  %idxprom = sext i32 %78 to i64, !dbg !13996
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 %idxprom, !dbg !13996
  %79 = load i32, i32* %arrayidx85, align 4, !dbg !13996
  %tobool86 = icmp ne i32 %79, 0, !dbg !13996
  br i1 %tobool86, label %lor.lhs.false87, label %if.then92, !dbg !14000

lor.lhs.false87:                                  ; preds = %for.body84
  %80 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14001
  %bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %80, i32 0, i32 2, !dbg !14002
  %81 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds, align 8, !dbg !14002
  %82 = load i32, i32* %c_index, align 4, !dbg !14003
  %idxprom88 = sext i32 %82 to i64, !dbg !14001
  %arrayidx89 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %81, i64 %idxprom88, !dbg !14001
  %83 = load float, float* %range, align 4, !dbg !14004
  %call90 = call i32 @boundsIntersectDist(%struct.Bounds3D* %arrayidx89, %struct.Bounds3D* %part_bb, float %83), !dbg !14005
  %tobool91 = icmp ne i32 %call90, 0, !dbg !14005
  br i1 %tobool91, label %if.end93, label %if.then92, !dbg !14006

if.then92:                                        ; preds = %lor.lhs.false87, %for.body84
  br label %for.inc342, !dbg !14007

if.end93:                                         ; preds = %lor.lhs.false87
  store i32 0, i32* %id, align 4, !dbg !14009
  br label %for.cond94, !dbg !14011

for.cond94:                                       ; preds = %for.inc339, %if.end93
  %84 = load i32, i32* %id, align 4, !dbg !14012
  %85 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14014
  %s_num95 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %85, i32 0, i32 4, !dbg !14015
  %86 = load i32*, i32** %s_num95, align 8, !dbg !14015
  %87 = load i32, i32* %c_index, align 4, !dbg !14016
  %idxprom96 = sext i32 %87 to i64, !dbg !14014
  %arrayidx97 = getelementptr inbounds i32, i32* %86, i64 %idxprom96, !dbg !14014
  %88 = load i32, i32* %arrayidx97, align 4, !dbg !14014
  %cmp98 = icmp slt i32 %84, %88, !dbg !14017
  br i1 %cmp98, label %for.body100, label %for.end341, !dbg !14018

for.body100:                                      ; preds = %for.cond94
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14019, metadata !DIExpression()), !dbg !14021
  %89 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14022
  %t_index = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %89, i32 0, i32 5, !dbg !14023
  %90 = load i32*, i32** %t_index, align 8, !dbg !14023
  %91 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14024
  %s_pos = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %91, i32 0, i32 3, !dbg !14025
  %92 = load i32*, i32** %s_pos, align 8, !dbg !14025
  %93 = load i32, i32* %c_index, align 4, !dbg !14026
  %idxprom101 = sext i32 %93 to i64, !dbg !14024
  %arrayidx102 = getelementptr inbounds i32, i32* %92, i64 %idxprom101, !dbg !14024
  %94 = load i32, i32* %arrayidx102, align 4, !dbg !14024
  %95 = load i32, i32* %id, align 4, !dbg !14027
  %add103 = add nsw i32 %94, %95, !dbg !14028
  %idxprom104 = sext i32 %add103 to i64, !dbg !14022
  %arrayidx105 = getelementptr inbounds i32, i32* %90, i64 %idxprom104, !dbg !14022
  %96 = load i32, i32* %arrayidx105, align 4, !dbg !14022
  store i32 %96, i32* %index, align 4, !dbg !14021
  call void @llvm.dbg.declare(metadata float* %disp_intersect, metadata !14029, metadata !DIExpression()), !dbg !14030
  store float 0.000000e+00, float* %disp_intersect, align 4, !dbg !14030
  call void @llvm.dbg.declare(metadata float* %radius, metadata !14031, metadata !DIExpression()), !dbg !14032
  store float 0.000000e+00, float* %radius, align 4, !dbg !14032
  call void @llvm.dbg.declare(metadata float* %strength, metadata !14033, metadata !DIExpression()), !dbg !14034
  store float 0.000000e+00, float* %strength, align 4, !dbg !14034
  call void @llvm.dbg.declare(metadata float* %velocity_val, metadata !14035, metadata !DIExpression()), !dbg !14036
  store float 0.000000e+00, float* %velocity_val, align 4, !dbg !14036
  call void @llvm.dbg.declare(metadata i32* %part_index, metadata !14037, metadata !DIExpression()), !dbg !14038
  store i32 -1, i32* %part_index, align 4, !dbg !14038
  call void @llvm.dbg.declare(metadata %struct.KDTreeNearest* %nearest, metadata !14039, metadata !DIExpression()), !dbg !14047
  call void @llvm.dbg.declare(metadata float* %smooth_range, metadata !14048, metadata !DIExpression()), !dbg !14049
  call void @llvm.dbg.declare(metadata float* %part_solidradius, metadata !14050, metadata !DIExpression()), !dbg !14051
  %97 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !14052
  %98 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14053
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %98, i32 0, i32 3, !dbg !14054
  %99 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !14054
  %100 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14055
  %s_pos106 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %100, i32 0, i32 1, !dbg !14056
  %101 = load i32*, i32** %s_pos106, align 8, !dbg !14056
  %102 = load i32, i32* %index, align 4, !dbg !14057
  %idxprom107 = sext i32 %102 to i64, !dbg !14055
  %arrayidx108 = getelementptr inbounds i32, i32* %101, i64 %idxprom107, !dbg !14055
  %103 = load i32, i32* %arrayidx108, align 4, !dbg !14055
  %idxprom109 = sext i32 %103 to i64, !dbg !14053
  %arrayidx110 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %99, i64 %idxprom109, !dbg !14053
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx110, i32 0, i32 0, !dbg !14058
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !14053
  %call112 = call i32 @BLI_kdtree_find_nearest(%struct.KDTree* %97, float* %arraydecay111, %struct.KDTreeNearest* %nearest), !dbg !14059
  %dist = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 1, !dbg !14060
  %104 = load float, float* %dist, align 4, !dbg !14060
  %105 = load float, float* %range, align 4, !dbg !14062
  %cmp113 = fcmp ogt float %104, %105, !dbg !14063
  br i1 %cmp113, label %if.then115, label %if.end116, !dbg !14064

if.then115:                                       ; preds = %for.body100
  br label %for.inc339, !dbg !14065

if.end116:                                        ; preds = %for.body100
  %106 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14066
  %flags117 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %106, i32 0, i32 4, !dbg !14068
  %107 = load i32, i32* %flags117, align 8, !dbg !14068
  %and118 = and i32 %107, 1, !dbg !14069
  %tobool119 = icmp ne i32 %and118, 0, !dbg !14069
  br i1 %tobool119, label %if.then120, label %if.else125, !dbg !14070

if.then120:                                       ; preds = %if.end116
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa121, metadata !14071, metadata !DIExpression()), !dbg !14073
  %108 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14074
  %particles122 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %108, i32 0, i32 3, !dbg !14075
  %109 = load %struct.ParticleData*, %struct.ParticleData** %particles122, align 8, !dbg !14075
  %index123 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 0, !dbg !14076
  %110 = load i32, i32* %index123, align 4, !dbg !14076
  %idx.ext = sext i32 %110 to i64, !dbg !14077
  %add.ptr = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %109, i64 %idx.ext, !dbg !14077
  store %struct.ParticleData* %add.ptr, %struct.ParticleData** %pa121, align 8, !dbg !14073
  %111 = load %struct.ParticleData*, %struct.ParticleData** %pa121, align 8, !dbg !14078
  %size124 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %111, i32 0, i32 13, !dbg !14079
  %112 = load float, float* %size124, align 4, !dbg !14079
  store float %112, float* %part_solidradius, align 4, !dbg !14080
  br label %if.end126, !dbg !14081

if.else125:                                       ; preds = %if.end116
  %113 = load float, float* %solidradius, align 4, !dbg !14082
  store float %113, float* %part_solidradius, align 4, !dbg !14084
  br label %if.end126

if.end126:                                        ; preds = %if.else125, %if.then120
  %114 = load float, float* %part_solidradius, align 4, !dbg !14085
  %115 = load float, float* %smooth, align 4, !dbg !14086
  %add127 = fadd float %114, %115, !dbg !14087
  store float %add127, float* %radius, align 4, !dbg !14088
  %dist128 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 1, !dbg !14089
  %116 = load float, float* %dist128, align 4, !dbg !14089
  %117 = load float, float* %radius, align 4, !dbg !14091
  %cmp129 = fcmp olt float %116, %117, !dbg !14092
  br i1 %cmp129, label %if.then131, label %if.end144, !dbg !14093

if.then131:                                       ; preds = %if.end126
  %dist132 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 1, !dbg !14094
  %118 = load float, float* %dist132, align 4, !dbg !14094
  %119 = load float, float* %part_solidradius, align 4, !dbg !14096
  %sub = fsub float %118, %119, !dbg !14097
  store float %sub, float* %smooth_range, align 4, !dbg !14098
  %120 = load float, float* %smooth_range, align 4, !dbg !14099
  %cmp133 = fcmp olt float %120, 0.000000e+00, !dbg !14101
  br i1 %cmp133, label %if.then135, label %if.end136, !dbg !14102

if.then135:                                       ; preds = %if.then131
  store float 0.000000e+00, float* %smooth_range, align 4, !dbg !14103
  br label %if.end136, !dbg !14104

if.end136:                                        ; preds = %if.then135, %if.then131
  %121 = load float, float* %smooth, align 4, !dbg !14105
  %tobool137 = fcmp une float %121, 0.000000e+00, !dbg !14105
  br i1 %tobool137, label %if.then138, label %if.end139, !dbg !14107

if.then138:                                       ; preds = %if.end136
  %122 = load float, float* %smooth, align 4, !dbg !14108
  %123 = load float, float* %smooth_range, align 4, !dbg !14109
  %div = fdiv float %123, %122, !dbg !14109
  store float %div, float* %smooth_range, align 4, !dbg !14109
  br label %if.end139, !dbg !14110

if.end139:                                        ; preds = %if.then138, %if.end136
  %124 = load float, float* %smooth_range, align 4, !dbg !14111
  %sub140 = fsub float 1.000000e+00, %124, !dbg !14112
  store float %sub140, float* %strength, align 4, !dbg !14113
  %125 = load float, float* %radius, align 4, !dbg !14114
  %dist141 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 1, !dbg !14115
  %126 = load float, float* %dist141, align 4, !dbg !14115
  %sub142 = fsub float %125, %126, !dbg !14116
  store float %sub142, float* %disp_intersect, align 4, !dbg !14117
  %index143 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %nearest, i32 0, i32 0, !dbg !14118
  %127 = load i32, i32* %index143, align 4, !dbg !14118
  store i32 %127, i32* %part_index, align 4, !dbg !14119
  br label %if.end144, !dbg !14120

if.end144:                                        ; preds = %if.end139, %if.end126
  %128 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14121
  %flags145 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %128, i32 0, i32 4, !dbg !14123
  %129 = load i32, i32* %flags145, align 8, !dbg !14123
  %and146 = and i32 %129, 1, !dbg !14124
  %tobool147 = icmp ne i32 %and146, 0, !dbg !14124
  br i1 %tobool147, label %land.lhs.true148, label %if.end248, !dbg !14125

land.lhs.true148:                                 ; preds = %if.end144
  %130 = load float, float* %strength, align 4, !dbg !14126
  %cmp149 = fcmp olt float %130, 1.000000e+00, !dbg !14127
  br i1 %cmp149, label %land.lhs.true151, label %if.end248, !dbg !14128

land.lhs.true151:                                 ; preds = %land.lhs.true148
  %131 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14129
  %part152 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %131, i32 0, i32 2, !dbg !14130
  %132 = load %struct.ParticleSettings*, %struct.ParticleSettings** %part152, align 8, !dbg !14130
  %randsize = getelementptr inbounds %struct.ParticleSettings, %struct.ParticleSettings* %132, i32 0, i32 83, !dbg !14131
  %133 = load float, float* %randsize, align 4, !dbg !14131
  %cmp153 = fcmp ogt float %133, 0.000000e+00, !dbg !14132
  br i1 %cmp153, label %if.then155, label %if.end248, !dbg !14133

if.then155:                                       ; preds = %land.lhs.true151
  call void @llvm.dbg.declare(metadata %struct.KDTreeNearest** %nearest156, metadata !14134, metadata !DIExpression()), !dbg !14137
  call void @llvm.dbg.declare(metadata i32* %n, metadata !14138, metadata !DIExpression()), !dbg !14139
  call void @llvm.dbg.declare(metadata i32* %particles157, metadata !14140, metadata !DIExpression()), !dbg !14141
  call void @llvm.dbg.declare(metadata float* %smooth_range158, metadata !14142, metadata !DIExpression()), !dbg !14143
  %134 = load float, float* %smooth, align 4, !dbg !14144
  %135 = load float, float* %strength, align 4, !dbg !14145
  %sub159 = fsub float 1.000000e+00, %135, !dbg !14146
  %mul160 = fmul float %134, %sub159, !dbg !14147
  store float %mul160, float* %smooth_range158, align 4, !dbg !14143
  call void @llvm.dbg.declare(metadata float* %dist161, metadata !14148, metadata !DIExpression()), !dbg !14149
  call void @llvm.dbg.declare(metadata float* %max_range, metadata !14150, metadata !DIExpression()), !dbg !14151
  %136 = load float, float* %smooth, align 4, !dbg !14152
  %137 = load float, float* %strength, align 4, !dbg !14153
  %138 = load float, float* %smooth, align 4, !dbg !14154
  %mul162 = fmul float %137, %138, !dbg !14155
  %sub163 = fsub float %136, %mul162, !dbg !14156
  %139 = load float, float* %solidradius, align 4, !dbg !14157
  %add164 = fadd float %sub163, %139, !dbg !14158
  store float %add164, float* %max_range, align 4, !dbg !14151
  %140 = load float, float* %max_range, align 4, !dbg !14159
  store float %140, float* %dist161, align 4, !dbg !14160
  %141 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !14161
  %142 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14161
  %realCoord165 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %142, i32 0, i32 3, !dbg !14161
  %143 = load %struct.Vec3f*, %struct.Vec3f** %realCoord165, align 8, !dbg !14161
  %144 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14161
  %s_pos166 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %144, i32 0, i32 1, !dbg !14161
  %145 = load i32*, i32** %s_pos166, align 8, !dbg !14161
  %146 = load i32, i32* %index, align 4, !dbg !14161
  %idxprom167 = sext i32 %146 to i64, !dbg !14161
  %arrayidx168 = getelementptr inbounds i32, i32* %145, i64 %idxprom167, !dbg !14161
  %147 = load i32, i32* %arrayidx168, align 4, !dbg !14161
  %idxprom169 = sext i32 %147 to i64, !dbg !14161
  %arrayidx170 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %143, i64 %idxprom169, !dbg !14161
  %v171 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx170, i32 0, i32 0, !dbg !14161
  %arraydecay172 = getelementptr inbounds [3 x float], [3 x float]* %v171, i64 0, i64 0, !dbg !14161
  %148 = load float, float* %max_range, align 4, !dbg !14161
  %call173 = call i32 @BLI_kdtree_range_search__normal(%struct.KDTree* %141, float* %arraydecay172, float* null, %struct.KDTreeNearest** %nearest156, float %148), !dbg !14161
  store i32 %call173, i32* %particles157, align 4, !dbg !14162
  store i32 0, i32* %n, align 4, !dbg !14163
  br label %for.cond174, !dbg !14165

for.cond174:                                      ; preds = %for.inc222, %if.then155
  %149 = load i32, i32* %n, align 4, !dbg !14166
  %150 = load i32, i32* %particles157, align 4, !dbg !14168
  %cmp175 = icmp slt i32 %149, %150, !dbg !14169
  br i1 %cmp175, label %for.body177, label %for.end224, !dbg !14170

for.body177:                                      ; preds = %for.cond174
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa178, metadata !14171, metadata !DIExpression()), !dbg !14173
  %151 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14174
  %particles179 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %151, i32 0, i32 3, !dbg !14175
  %152 = load %struct.ParticleData*, %struct.ParticleData** %particles179, align 8, !dbg !14175
  %153 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14176
  %154 = load i32, i32* %n, align 4, !dbg !14177
  %idxprom180 = sext i32 %154 to i64, !dbg !14176
  %arrayidx181 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %153, i64 %idxprom180, !dbg !14176
  %index182 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx181, i32 0, i32 0, !dbg !14178
  %155 = load i32, i32* %index182, align 4, !dbg !14178
  %idx.ext183 = sext i32 %155 to i64, !dbg !14179
  %add.ptr184 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %152, i64 %idx.ext183, !dbg !14179
  store %struct.ParticleData* %add.ptr184, %struct.ParticleData** %pa178, align 8, !dbg !14173
  call void @llvm.dbg.declare(metadata float* %s_range, metadata !14180, metadata !DIExpression()), !dbg !14181
  %156 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14182
  %157 = load i32, i32* %n, align 4, !dbg !14184
  %idxprom185 = sext i32 %157 to i64, !dbg !14182
  %arrayidx186 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %156, i64 %idxprom185, !dbg !14182
  %dist187 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx186, i32 0, i32 1, !dbg !14185
  %158 = load float, float* %dist187, align 4, !dbg !14185
  %159 = load %struct.ParticleData*, %struct.ParticleData** %pa178, align 8, !dbg !14186
  %size188 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %159, i32 0, i32 13, !dbg !14187
  %160 = load float, float* %size188, align 4, !dbg !14187
  %161 = load float, float* %smooth, align 4, !dbg !14188
  %add189 = fadd float %160, %161, !dbg !14189
  %cmp190 = fcmp ogt float %158, %add189, !dbg !14190
  br i1 %cmp190, label %if.then192, label %if.end193, !dbg !14191

if.then192:                                       ; preds = %for.body177
  br label %for.inc222, !dbg !14192

if.end193:                                        ; preds = %for.body177
  %162 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14193
  %163 = load i32, i32* %n, align 4, !dbg !14194
  %idxprom194 = sext i32 %163 to i64, !dbg !14193
  %arrayidx195 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %162, i64 %idxprom194, !dbg !14193
  %dist196 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx195, i32 0, i32 1, !dbg !14195
  %164 = load float, float* %dist196, align 4, !dbg !14195
  %165 = load %struct.ParticleData*, %struct.ParticleData** %pa178, align 8, !dbg !14196
  %size197 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %165, i32 0, i32 13, !dbg !14197
  %166 = load float, float* %size197, align 4, !dbg !14197
  %sub198 = fsub float %164, %166, !dbg !14198
  store float %sub198, float* %s_range, align 4, !dbg !14199
  %167 = load float, float* %smooth_range158, align 4, !dbg !14200
  %168 = load float, float* %s_range, align 4, !dbg !14202
  %cmp199 = fcmp olt float %167, %168, !dbg !14203
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !14204

if.then201:                                       ; preds = %if.end193
  br label %for.inc222, !dbg !14205

if.end202:                                        ; preds = %if.end193
  %169 = load float, float* %s_range, align 4, !dbg !14206
  store float %169, float* %smooth_range158, align 4, !dbg !14207
  %170 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14208
  %171 = load i32, i32* %n, align 4, !dbg !14209
  %idxprom203 = sext i32 %171 to i64, !dbg !14208
  %arrayidx204 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %170, i64 %idxprom203, !dbg !14208
  %dist205 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx204, i32 0, i32 1, !dbg !14210
  %172 = load float, float* %dist205, align 4, !dbg !14210
  store float %172, float* %dist161, align 4, !dbg !14211
  %173 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14212
  %174 = load i32, i32* %n, align 4, !dbg !14213
  %idxprom206 = sext i32 %174 to i64, !dbg !14212
  %arrayidx207 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %173, i64 %idxprom206, !dbg !14212
  %index208 = getelementptr inbounds %struct.KDTreeNearest, %struct.KDTreeNearest* %arrayidx207, i32 0, i32 0, !dbg !14214
  %175 = load i32, i32* %index208, align 4, !dbg !14214
  store i32 %175, i32* %part_index, align 4, !dbg !14215
  %176 = load float, float* %s_range, align 4, !dbg !14216
  %cmp209 = fcmp olt float %176, 0.000000e+00, !dbg !14218
  br i1 %cmp209, label %land.lhs.true211, label %if.end221, !dbg !14219

land.lhs.true211:                                 ; preds = %if.end202
  %177 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14220
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %177, i32 0, i32 11, !dbg !14221
  %178 = load i16, i16* %type, align 2, !dbg !14221
  %conv212 = sext i16 %178 to i32, !dbg !14220
  %cmp213 = icmp ne i32 %conv212, 1, !dbg !14222
  br i1 %cmp213, label %land.lhs.true215, label %if.end221, !dbg !14223

land.lhs.true215:                                 ; preds = %land.lhs.true211
  %179 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14224
  %type216 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %179, i32 0, i32 11, !dbg !14225
  %180 = load i16, i16* %type216, align 2, !dbg !14225
  %conv217 = sext i16 %180 to i32, !dbg !14224
  %cmp218 = icmp ne i32 %conv217, 3, !dbg !14226
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !14227

if.then220:                                       ; preds = %land.lhs.true215
  br label %for.end224, !dbg !14228

if.end221:                                        ; preds = %land.lhs.true215, %land.lhs.true211, %if.end202
  br label %for.inc222, !dbg !14230

for.inc222:                                       ; preds = %if.end221, %if.then201, %if.then192
  %181 = load i32, i32* %n, align 4, !dbg !14231
  %inc223 = add nsw i32 %181, 1, !dbg !14231
  store i32 %inc223, i32* %n, align 4, !dbg !14231
  br label %for.cond174, !dbg !14232, !llvm.loop !14233

for.end224:                                       ; preds = %if.then220, %for.cond174
  %182 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14235
  %tobool225 = icmp ne %struct.KDTreeNearest* %182, null, !dbg !14235
  br i1 %tobool225, label %if.then226, label %if.end227, !dbg !14237

if.then226:                                       ; preds = %for.end224
  %183 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14238
  %184 = load %struct.KDTreeNearest*, %struct.KDTreeNearest** %nearest156, align 8, !dbg !14239
  %185 = bitcast %struct.KDTreeNearest* %184 to i8*, !dbg !14239
  call void %183(i8* %185), !dbg !14238
  br label %if.end227, !dbg !14238

if.end227:                                        ; preds = %if.then226, %for.end224
  call void @llvm.dbg.declare(metadata float* %rad, metadata !14240, metadata !DIExpression()), !dbg !14242
  %186 = load float, float* %radius, align 4, !dbg !14243
  %187 = load float, float* %smooth, align 4, !dbg !14244
  %add228 = fadd float %186, %187, !dbg !14245
  store float %add228, float* %rad, align 4, !dbg !14242
  call void @llvm.dbg.declare(metadata float* %str, metadata !14246, metadata !DIExpression()), !dbg !14247
  %188 = load float, float* %rad, align 4, !dbg !14248
  %189 = load float, float* %dist161, align 4, !dbg !14250
  %sub229 = fsub float %188, %189, !dbg !14251
  %190 = load float, float* %disp_intersect, align 4, !dbg !14252
  %cmp230 = fcmp ogt float %sub229, %190, !dbg !14253
  br i1 %cmp230, label %if.then232, label %if.end234, !dbg !14254

if.then232:                                       ; preds = %if.end227
  %191 = load float, float* %radius, align 4, !dbg !14255
  %192 = load float, float* %dist161, align 4, !dbg !14257
  %sub233 = fsub float %191, %192, !dbg !14258
  store float %sub233, float* %disp_intersect, align 4, !dbg !14259
  %193 = load float, float* %rad, align 4, !dbg !14260
  store float %193, float* %radius, align 4, !dbg !14261
  br label %if.end234, !dbg !14262

if.end234:                                        ; preds = %if.then232, %if.end227
  %194 = load float, float* %smooth_range158, align 4, !dbg !14263
  %cmp235 = fcmp olt float %194, 0.000000e+00, !dbg !14265
  br i1 %cmp235, label %if.then237, label %if.end238, !dbg !14266

if.then237:                                       ; preds = %if.end234
  store float 0.000000e+00, float* %smooth_range158, align 4, !dbg !14267
  br label %if.end238, !dbg !14268

if.end238:                                        ; preds = %if.then237, %if.end234
  %195 = load float, float* %smooth, align 4, !dbg !14269
  %tobool239 = fcmp une float %195, 0.000000e+00, !dbg !14269
  br i1 %tobool239, label %if.then240, label %if.end242, !dbg !14271

if.then240:                                       ; preds = %if.end238
  %196 = load float, float* %smooth, align 4, !dbg !14272
  %197 = load float, float* %smooth_range158, align 4, !dbg !14273
  %div241 = fdiv float %197, %196, !dbg !14273
  store float %div241, float* %smooth_range158, align 4, !dbg !14273
  br label %if.end242, !dbg !14274

if.end242:                                        ; preds = %if.then240, %if.end238
  %198 = load float, float* %smooth_range158, align 4, !dbg !14275
  %sub243 = fsub float 1.000000e+00, %198, !dbg !14276
  store float %sub243, float* %str, align 4, !dbg !14277
  %199 = load float, float* %str, align 4, !dbg !14278
  %200 = load float, float* %strength, align 4, !dbg !14280
  %cmp244 = fcmp ogt float %199, %200, !dbg !14281
  br i1 %cmp244, label %if.then246, label %if.end247, !dbg !14282

if.then246:                                       ; preds = %if.end242
  %201 = load float, float* %str, align 4, !dbg !14283
  store float %201, float* %strength, align 4, !dbg !14284
  br label %if.end247, !dbg !14285

if.end247:                                        ; preds = %if.then246, %if.end242
  br label %if.end248, !dbg !14286

if.end248:                                        ; preds = %if.end247, %land.lhs.true151, %land.lhs.true148, %if.end144
  %202 = load float, float* %strength, align 4, !dbg !14287
  %cmp249 = fcmp ogt float %202, 0x3F50624DE0000000, !dbg !14289
  br i1 %cmp249, label %if.then251, label %if.end338, !dbg !14290

if.then251:                                       ; preds = %if.end248
  call void @llvm.dbg.declare(metadata [4 x float]* %paintColor, metadata !14291, metadata !DIExpression()), !dbg !14293
  %203 = bitcast [4 x float]* %paintColor to i8*, !dbg !14293
  call void @llvm.memset.p0i8.i64(i8* align 16 %203, i8 0, i64 16, i1 false), !dbg !14293
  call void @llvm.dbg.declare(metadata float* %depth, metadata !14294, metadata !DIExpression()), !dbg !14295
  store float 0.000000e+00, float* %depth, align 4, !dbg !14295
  %204 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14296
  %flags252 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %204, i32 0, i32 4, !dbg !14298
  %205 = load i32, i32* %flags252, align 8, !dbg !14298
  %and253 = and i32 %205, 3840, !dbg !14299
  %tobool254 = icmp ne i32 %and253, 0, !dbg !14299
  br i1 %tobool254, label %land.lhs.true255, label %if.end305, !dbg !14300

land.lhs.true255:                                 ; preds = %if.then251
  %206 = load i32, i32* %part_index, align 4, !dbg !14301
  %cmp256 = icmp ne i32 %206, -1, !dbg !14302
  br i1 %cmp256, label %if.then258, label %if.end305, !dbg !14303

if.then258:                                       ; preds = %land.lhs.true255
  call void @llvm.dbg.declare(metadata [3 x float]* %velocity, metadata !14304, metadata !DIExpression()), !dbg !14306
  call void @llvm.dbg.declare(metadata %struct.ParticleData** %pa259, metadata !14307, metadata !DIExpression()), !dbg !14308
  %207 = load %struct.ParticleSystem*, %struct.ParticleSystem** %psys.addr, align 8, !dbg !14309
  %particles260 = getelementptr inbounds %struct.ParticleSystem, %struct.ParticleSystem* %207, i32 0, i32 3, !dbg !14310
  %208 = load %struct.ParticleData*, %struct.ParticleData** %particles260, align 8, !dbg !14310
  %209 = load i32, i32* %part_index, align 4, !dbg !14311
  %idx.ext261 = sext i32 %209 to i64, !dbg !14312
  %add.ptr262 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %208, i64 %idx.ext261, !dbg !14312
  store %struct.ParticleData* %add.ptr262, %struct.ParticleData** %pa259, align 8, !dbg !14308
  %arraydecay263 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14313
  %210 = load %struct.ParticleData*, %struct.ParticleData** %pa259, align 8, !dbg !14314
  %state264 = getelementptr inbounds %struct.ParticleData, %struct.ParticleData* %210, i32 0, i32 0, !dbg !14315
  %vel = getelementptr inbounds %struct.ParticleKey, %struct.ParticleKey* %state264, i32 0, i32 1, !dbg !14316
  %arraydecay265 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !14314
  %211 = load float, float* %particle_timestep, align 4, !dbg !14317
  call void @mul_v3_v3fl(float* %arraydecay263, float* %arraydecay265, float %211), !dbg !14318
  %212 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14319
  %velocity266 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %212, i32 0, i32 8, !dbg !14321
  %213 = load %struct.Vec3f*, %struct.Vec3f** %velocity266, align 8, !dbg !14321
  %tobool267 = icmp ne %struct.Vec3f* %213, null, !dbg !14319
  br i1 %tobool267, label %if.then268, label %if.end275, !dbg !14322

if.then268:                                       ; preds = %if.then258
  %arraydecay269 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14323
  %214 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14325
  %velocity270 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %214, i32 0, i32 8, !dbg !14326
  %215 = load %struct.Vec3f*, %struct.Vec3f** %velocity270, align 8, !dbg !14326
  %216 = load i32, i32* %index, align 4, !dbg !14327
  %idxprom271 = sext i32 %216 to i64, !dbg !14325
  %arrayidx272 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %215, i64 %idxprom271, !dbg !14325
  %v273 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx272, i32 0, i32 0, !dbg !14328
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %v273, i64 0, i64 0, !dbg !14325
  call void @sub_v3_v3(float* %arraydecay269, float* %arraydecay274), !dbg !14329
  br label %if.end275, !dbg !14330

if.end275:                                        ; preds = %if.then268, %if.then258
  %arraydecay276 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14331
  %call277 = call float @len_v3(float* %arraydecay276), !dbg !14332
  store float %call277, float* %velocity_val, align 4, !dbg !14333
  %217 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14334
  %type278 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %217, i32 0, i32 11, !dbg !14336
  %218 = load i16, i16* %type278, align 2, !dbg !14336
  %conv279 = sext i16 %218 to i32, !dbg !14334
  %cmp280 = icmp eq i32 %conv279, 0, !dbg !14337
  br i1 %cmp280, label %land.lhs.true282, label %if.end304, !dbg !14338

land.lhs.true282:                                 ; preds = %if.end275
  %219 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14339
  %flags283 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %219, i32 0, i32 4, !dbg !14340
  %220 = load i32, i32* %flags283, align 8, !dbg !14340
  %and284 = and i32 %220, 256, !dbg !14341
  %tobool285 = icmp ne i32 %and284, 0, !dbg !14341
  br i1 %tobool285, label %land.lhs.true286, label %if.end304, !dbg !14342

land.lhs.true286:                                 ; preds = %land.lhs.true282
  %221 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14343
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %221, i32 0, i32 10, !dbg !14344
  %222 = load float*, float** %brush_velocity, align 8, !dbg !14344
  %tobool287 = icmp ne float* %222, null, !dbg !14343
  br i1 %tobool287, label %if.then288, label %if.end304, !dbg !14345

if.then288:                                       ; preds = %land.lhs.true286
  %223 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14346
  %brush_velocity289 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %223, i32 0, i32 10, !dbg !14348
  %224 = load float*, float** %brush_velocity289, align 8, !dbg !14348
  %225 = load i32, i32* %index, align 4, !dbg !14349
  %mul290 = mul nsw i32 %225, 4, !dbg !14350
  %idxprom291 = sext i32 %mul290 to i64, !dbg !14346
  %arrayidx292 = getelementptr inbounds float, float* %224, i64 %idxprom291, !dbg !14346
  %arraydecay293 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14351
  call void @copy_v3_v3(float* %arrayidx292, float* %arraydecay293), !dbg !14352
  %226 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14353
  %brush_velocity294 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %226, i32 0, i32 10, !dbg !14354
  %227 = load float*, float** %brush_velocity294, align 8, !dbg !14354
  %228 = load i32, i32* %index, align 4, !dbg !14355
  %mul295 = mul nsw i32 %228, 4, !dbg !14356
  %idxprom296 = sext i32 %mul295 to i64, !dbg !14353
  %arrayidx297 = getelementptr inbounds float, float* %227, i64 %idxprom296, !dbg !14353
  %229 = load float, float* %velocity_val, align 4, !dbg !14357
  %div298 = fdiv float 1.000000e+00, %229, !dbg !14358
  call void @mul_v3_fl(float* %arrayidx297, float %div298), !dbg !14359
  %230 = load float, float* %velocity_val, align 4, !dbg !14360
  %231 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14361
  %brush_velocity299 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %231, i32 0, i32 10, !dbg !14362
  %232 = load float*, float** %brush_velocity299, align 8, !dbg !14362
  %233 = load i32, i32* %index, align 4, !dbg !14363
  %mul300 = mul nsw i32 %233, 4, !dbg !14364
  %add301 = add nsw i32 %mul300, 3, !dbg !14365
  %idxprom302 = sext i32 %add301 to i64, !dbg !14361
  %arrayidx303 = getelementptr inbounds float, float* %232, i64 %idxprom302, !dbg !14361
  store float %230, float* %arrayidx303, align 4, !dbg !14366
  br label %if.end304, !dbg !14367

if.end304:                                        ; preds = %if.then288, %land.lhs.true286, %land.lhs.true282, %if.end275
  br label %if.end305, !dbg !14368

if.end305:                                        ; preds = %if.end304, %land.lhs.true255, %if.then251
  %234 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14369
  %type306 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %234, i32 0, i32 11, !dbg !14371
  %235 = load i16, i16* %type306, align 2, !dbg !14371
  %conv307 = sext i16 %235 to i32, !dbg !14369
  %cmp308 = icmp eq i32 %conv307, 0, !dbg !14372
  br i1 %cmp308, label %if.then310, label %if.else312, !dbg !14373

if.then310:                                       ; preds = %if.end305
  %arraydecay311 = getelementptr inbounds [4 x float], [4 x float]* %paintColor, i64 0, i64 0, !dbg !14374
  %236 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14376
  %r = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %236, i32 0, i32 6, !dbg !14377
  call void @copy_v3_v3(float* %arraydecay311, float* %r), !dbg !14378
  br label %if.end336, !dbg !14379

if.else312:                                       ; preds = %if.end305
  %237 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14380
  %type313 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %237, i32 0, i32 11, !dbg !14382
  %238 = load i16, i16* %type313, align 2, !dbg !14382
  %conv314 = sext i16 %238 to i32, !dbg !14380
  %cmp315 = icmp eq i32 %conv314, 1, !dbg !14383
  br i1 %cmp315, label %if.then322, label %lor.lhs.false317, !dbg !14384

lor.lhs.false317:                                 ; preds = %if.else312
  %239 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14385
  %type318 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %239, i32 0, i32 11, !dbg !14386
  %240 = load i16, i16* %type318, align 2, !dbg !14386
  %conv319 = sext i16 %240 to i32, !dbg !14385
  %cmp320 = icmp eq i32 %conv319, 3, !dbg !14387
  br i1 %cmp320, label %if.then322, label %if.end335, !dbg !14388

if.then322:                                       ; preds = %lor.lhs.false317, %if.else312
  %241 = load float, float* %disp_intersect, align 4, !dbg !14389
  %242 = load float, float* %radius, align 4, !dbg !14391
  %div323 = fdiv float %241, %242, !dbg !14392
  %call324 = call float @sqrtf(float %div323) #7, !dbg !14393
  %sub325 = fsub float 1.000000e+00, %call324, !dbg !14394
  %243 = load float, float* %radius, align 4, !dbg !14395
  %mul326 = fmul float %sub325, %243, !dbg !14396
  store float %mul326, float* %disp_intersect, align 4, !dbg !14397
  %244 = load float, float* %radius, align 4, !dbg !14398
  %245 = load float, float* %disp_intersect, align 4, !dbg !14399
  %sub327 = fsub float %244, %245, !dbg !14400
  %246 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14401
  %bNormal = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %246, i32 0, i32 0, !dbg !14402
  %247 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal, align 8, !dbg !14402
  %248 = load i32, i32* %index, align 4, !dbg !14403
  %idxprom328 = sext i32 %248 to i64, !dbg !14401
  %arrayidx329 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %247, i64 %idxprom328, !dbg !14401
  %normal_scale = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx329, i32 0, i32 1, !dbg !14404
  %249 = load float, float* %normal_scale, align 4, !dbg !14404
  %div330 = fdiv float %sub327, %249, !dbg !14405
  store float %div330, float* %depth, align 4, !dbg !14406
  %250 = load float, float* %depth, align 4, !dbg !14407
  %cmp331 = fcmp olt float %250, 0.000000e+00, !dbg !14409
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !14410

if.then333:                                       ; preds = %if.then322
  store float 0.000000e+00, float* %depth, align 4, !dbg !14411
  br label %if.end334, !dbg !14412

if.end334:                                        ; preds = %if.then333, %if.then322
  br label %if.end335, !dbg !14413

if.end335:                                        ; preds = %if.end334, %lor.lhs.false317
  br label %if.end336

if.end336:                                        ; preds = %if.end335, %if.then310
  %251 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14414
  %252 = load i32, i32* %index, align 4, !dbg !14415
  %253 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14416
  %arraydecay337 = getelementptr inbounds [4 x float], [4 x float]* %paintColor, i64 0, i64 0, !dbg !14417
  %254 = load float, float* %strength, align 4, !dbg !14418
  %255 = load float, float* %depth, align 4, !dbg !14419
  %256 = load float, float* %velocity_val, align 4, !dbg !14420
  %257 = load float, float* %timescale.addr, align 4, !dbg !14421
  call void @dynamicPaint_updatePointData(%struct.DynamicPaintSurface* %251, i32 %252, %struct.DynamicPaintBrushSettings* %253, float* %arraydecay337, float %254, float %255, float %256, float %257), !dbg !14422
  br label %if.end338, !dbg !14423

if.end338:                                        ; preds = %if.end336, %if.end248
  br label %for.inc339, !dbg !14424

for.inc339:                                       ; preds = %if.end338, %if.then115
  %258 = load i32, i32* %id, align 4, !dbg !14425
  %inc340 = add nsw i32 %258, 1, !dbg !14425
  store i32 %inc340, i32* %id, align 4, !dbg !14425
  br label %for.cond94, !dbg !14426, !llvm.loop !14427

for.end341:                                       ; preds = %for.cond94
  br label %for.inc342, !dbg !14429

for.inc342:                                       ; preds = %for.end341, %if.then92
  %259 = load i32, i32* %c_index, align 4, !dbg !14430
  %inc343 = add nsw i32 %259, 1, !dbg !14430
  store i32 %inc343, i32* %c_index, align 4, !dbg !14430
  br label %for.cond81, !dbg !14431, !llvm.loop !14432

for.end344:                                       ; preds = %for.cond81
  br label %if.end345, !dbg !14434

if.end345:                                        ; preds = %for.end344, %if.end69
  call void @BLI_end_threaded_malloc(), !dbg !14435
  %260 = load %struct.KDTree*, %struct.KDTree** %tree, align 8, !dbg !14436
  call void @BLI_kdtree_free(%struct.KDTree* %260), !dbg !14437
  store i32 1, i32* %retval, align 4, !dbg !14438
  br label %return, !dbg !14438

return:                                           ; preds = %if.end345, %if.then68, %if.then
  %261 = load i32, i32* %retval, align 4, !dbg !14439
  ret i32 %261, !dbg !14439
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_paintSinglePoint(%struct.DynamicPaintSurface* %surface, float* %pointCoord, %struct.DynamicPaintBrushSettings* %brush, %struct.Object* %brushOb, %struct.BrushMaterials* %bMats, %struct.Scene* %scene, float %timescale) #0 !dbg !14440 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %pointCoord.addr = alloca float*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %brushOb.addr = alloca %struct.Object*, align 8
  %bMats.addr = alloca %struct.BrushMaterials*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %timescale.addr = alloca float, align 4
  %index = alloca i32, align 4
  %brush_radius = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %brushVel = alloca %struct.Vec3f, align 4
  %distance = alloca float, align 4
  %colorband = alloca [4 x float], align 16
  %strength = alloca float, align 4
  %paintColor = alloca [3 x float], align 4
  %depth = alloca float, align 4
  %velocity_val = alloca float, align 4
  %alpha_factor = alloca float, align 4
  %hit_coord = alloca [3 x float], align 4
  %mvert = alloca %struct.MVert*, align 8
  %velocity = alloca [3 x float], align 4
  %disp_intersect = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  store float* %pointCoord, float** %pointCoord.addr, align 8
  call void @llvm.dbg.declare(metadata float** %pointCoord.addr, metadata !14445, metadata !DIExpression()), !dbg !14446
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !14447, metadata !DIExpression()), !dbg !14448
  store %struct.Object* %brushOb, %struct.Object** %brushOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %brushOb.addr, metadata !14449, metadata !DIExpression()), !dbg !14450
  store %struct.BrushMaterials* %bMats, %struct.BrushMaterials** %bMats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials** %bMats.addr, metadata !14451, metadata !DIExpression()), !dbg !14452
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14453, metadata !DIExpression()), !dbg !14454
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !14455, metadata !DIExpression()), !dbg !14456
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14457, metadata !DIExpression()), !dbg !14458
  call void @llvm.dbg.declare(metadata float* %brush_radius, metadata !14459, metadata !DIExpression()), !dbg !14460
  %0 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14461
  %paint_distance = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %0, i32 0, i32 13, !dbg !14462
  %1 = load float, float* %paint_distance, align 4, !dbg !14462
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14463
  %radius_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 39, !dbg !14464
  %3 = load float, float* %radius_scale, align 4, !dbg !14464
  %mul = fmul float %1, %3, !dbg !14465
  store float %mul, float* %brush_radius, align 4, !dbg !14460
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !14466, metadata !DIExpression()), !dbg !14467
  %4 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14468
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %4, i32 0, i32 3, !dbg !14469
  %5 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !14469
  store %struct.PaintSurfaceData* %5, %struct.PaintSurfaceData** %sData, align 8, !dbg !14467
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !14470, metadata !DIExpression()), !dbg !14471
  %6 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !14472
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %6, i32 0, i32 3, !dbg !14473
  %7 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !14473
  store %struct.PaintBakeData* %7, %struct.PaintBakeData** %bData, align 8, !dbg !14471
  call void @llvm.dbg.declare(metadata %struct.Vec3f* %brushVel, metadata !14474, metadata !DIExpression()), !dbg !14475
  %8 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14476
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %8, i32 0, i32 4, !dbg !14478
  %9 = load i32, i32* %flags, align 8, !dbg !14478
  %and = and i32 %9, 3840, !dbg !14479
  %tobool = icmp ne i32 %and, 0, !dbg !14479
  br i1 %tobool, label %if.then, label %if.end, !dbg !14480

if.then:                                          ; preds = %entry
  %10 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14481
  %11 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14482
  %12 = load float, float* %timescale.addr, align 4, !dbg !14483
  call void @dynamicPaint_brushObjectCalculateVelocity(%struct.Scene* %10, %struct.Object* %11, %struct.Vec3f* %brushVel, float %12), !dbg !14484
  br label %if.end, !dbg !14484

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %index, align 4, !dbg !14485
  br label %for.cond, !dbg !14487

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i32, i32* %index, align 4, !dbg !14488
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !14490
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !14491
  %15 = load i32, i32* %total_points, align 8, !dbg !14491
  %cmp = icmp slt i32 %13, %15, !dbg !14492
  br i1 %cmp, label %for.body, label %for.end, !dbg !14493

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %distance, metadata !14494, metadata !DIExpression()), !dbg !14496
  %16 = load float*, float** %pointCoord.addr, align 8, !dbg !14497
  %17 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14498
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %17, i32 0, i32 3, !dbg !14499
  %18 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !14499
  %19 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14500
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %19, i32 0, i32 1, !dbg !14501
  %20 = load i32*, i32** %s_pos, align 8, !dbg !14501
  %21 = load i32, i32* %index, align 4, !dbg !14502
  %idxprom = sext i32 %21 to i64, !dbg !14500
  %arrayidx = getelementptr inbounds i32, i32* %20, i64 %idxprom, !dbg !14500
  %22 = load i32, i32* %arrayidx, align 4, !dbg !14500
  %idxprom2 = sext i32 %22 to i64, !dbg !14498
  %arrayidx3 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %18, i64 %idxprom2, !dbg !14498
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx3, i32 0, i32 0, !dbg !14503
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !14498
  %call = call float @len_v3v3(float* %16, float* %arraydecay), !dbg !14504
  store float %call, float* %distance, align 4, !dbg !14496
  call void @llvm.dbg.declare(metadata [4 x float]* %colorband, metadata !14505, metadata !DIExpression()), !dbg !14506
  %23 = bitcast [4 x float]* %colorband to i8*, !dbg !14506
  call void @llvm.memset.p0i8.i64(i8* align 16 %23, i8 0, i64 16, i1 false), !dbg !14506
  call void @llvm.dbg.declare(metadata float* %strength, metadata !14507, metadata !DIExpression()), !dbg !14508
  %24 = load float, float* %distance, align 4, !dbg !14509
  %25 = load float, float* %brush_radius, align 4, !dbg !14511
  %cmp4 = fcmp ogt float %24, %25, !dbg !14512
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !14513

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !14514

if.end6:                                          ; preds = %for.body
  %26 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14515
  %proximity_falloff = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %26, i32 0, i32 16, !dbg !14517
  %27 = load i16, i16* %proximity_falloff, align 8, !dbg !14517
  %conv = sext i16 %27 to i32, !dbg !14515
  %cmp7 = icmp eq i32 %conv, 1, !dbg !14518
  br i1 %cmp7, label %if.then13, label %lor.lhs.false, !dbg !14519

lor.lhs.false:                                    ; preds = %if.end6
  %28 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14520
  %proximity_falloff9 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %28, i32 0, i32 16, !dbg !14521
  %29 = load i16, i16* %proximity_falloff9, align 8, !dbg !14521
  %conv10 = sext i16 %29 to i32, !dbg !14520
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !14522
  br i1 %cmp11, label %if.then13, label %if.else22, !dbg !14523

if.then13:                                        ; preds = %lor.lhs.false, %if.end6
  %30 = load float, float* %distance, align 4, !dbg !14524
  %31 = load float, float* %brush_radius, align 4, !dbg !14526
  %div = fdiv float %30, %31, !dbg !14527
  %sub = fsub float 1.000000e+00, %div, !dbg !14528
  store float %sub, float* %strength, align 4, !dbg !14529
  %32 = load float, float* %strength, align 4, !dbg !14530
  %cmp14 = fcmp olt float %32, 0.000000e+00, !dbg !14530
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !14533

if.then16:                                        ; preds = %if.then13
  store float 0.000000e+00, float* %strength, align 4, !dbg !14530
  br label %if.end21, !dbg !14530

if.else:                                          ; preds = %if.then13
  %33 = load float, float* %strength, align 4, !dbg !14534
  %cmp17 = fcmp ogt float %33, 1.000000e+00, !dbg !14534
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !14530

if.then19:                                        ; preds = %if.else
  store float 1.000000e+00, float* %strength, align 4, !dbg !14534
  br label %if.end20, !dbg !14534

if.end20:                                         ; preds = %if.then19, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then16
  br label %if.end23, !dbg !14536

if.else22:                                        ; preds = %lor.lhs.false
  store float 1.000000e+00, float* %strength, align 4, !dbg !14537
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.end21
  %34 = load float, float* %strength, align 4, !dbg !14539
  %cmp24 = fcmp oge float %34, 0x3F50624DE0000000, !dbg !14541
  br i1 %cmp24, label %if.then26, label %if.end165, !dbg !14542

if.then26:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata [3 x float]* %paintColor, metadata !14543, metadata !DIExpression()), !dbg !14545
  %35 = bitcast [3 x float]* %paintColor to i8*, !dbg !14545
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 0, i64 12, i1 false), !dbg !14545
  call void @llvm.dbg.declare(metadata float* %depth, metadata !14546, metadata !DIExpression()), !dbg !14547
  store float 0.000000e+00, float* %depth, align 4, !dbg !14547
  call void @llvm.dbg.declare(metadata float* %velocity_val, metadata !14548, metadata !DIExpression()), !dbg !14549
  store float 0.000000e+00, float* %velocity_val, align 4, !dbg !14549
  %36 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14550
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14552
  %call27 = call i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %36, %struct.Scene* %37), !dbg !14553
  %tobool28 = icmp ne i32 %call27, 0, !dbg !14553
  br i1 %tobool28, label %if.then29, label %if.end48, !dbg !14554

if.then29:                                        ; preds = %if.then26
  call void @llvm.dbg.declare(metadata float* %alpha_factor, metadata !14555, metadata !DIExpression()), !dbg !14557
  store float 1.000000e+00, float* %alpha_factor, align 4, !dbg !14557
  call void @llvm.dbg.declare(metadata [3 x float]* %hit_coord, metadata !14558, metadata !DIExpression()), !dbg !14559
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !14560, metadata !DIExpression()), !dbg !14561
  %38 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14562
  %dm = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %38, i32 0, i32 1, !dbg !14563
  %39 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14563
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %39, i32 0, i32 31, !dbg !14564
  %40 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !14564
  %41 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14565
  %dm30 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %41, i32 0, i32 1, !dbg !14566
  %42 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm30, align 8, !dbg !14566
  %call31 = call %struct.MVert* %40(%struct.DerivedMesh* %42), !dbg !14562
  store %struct.MVert* %call31, %struct.MVert** %mvert, align 8, !dbg !14561
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %hit_coord, i64 0, i64 0, !dbg !14567
  %43 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14568
  %arrayidx33 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 0, !dbg !14568
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx33, i32 0, i32 0, !dbg !14569
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14568
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay34), !dbg !14570
  %44 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14571
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 47, !dbg !14572
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !14571
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %hit_coord, i64 0, i64 0, !dbg !14573
  call void @mul_m4_v3([4 x float]* %arraydecay35, float* %arraydecay36), !dbg !14574
  %45 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !14575
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !14576
  %46 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14577
  %47 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14578
  %realCoord38 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %47, i32 0, i32 3, !dbg !14579
  %48 = load %struct.Vec3f*, %struct.Vec3f** %realCoord38, align 8, !dbg !14579
  %49 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14580
  %s_pos39 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %49, i32 0, i32 1, !dbg !14581
  %50 = load i32*, i32** %s_pos39, align 8, !dbg !14581
  %51 = load i32, i32* %index, align 4, !dbg !14582
  %idxprom40 = sext i32 %51 to i64, !dbg !14580
  %arrayidx41 = getelementptr inbounds i32, i32* %50, i64 %idxprom40, !dbg !14580
  %52 = load i32, i32* %arrayidx41, align 4, !dbg !14580
  %idxprom42 = sext i32 %52 to i64, !dbg !14578
  %arrayidx43 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %48, i64 %idxprom42, !dbg !14578
  %v44 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx43, i32 0, i32 0, !dbg !14583
  %arraydecay45 = getelementptr inbounds [3 x float], [3 x float]* %v44, i64 0, i64 0, !dbg !14578
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %hit_coord, i64 0, i64 0, !dbg !14584
  %53 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14585
  %dm47 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %53, i32 0, i32 1, !dbg !14586
  %54 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm47, align 8, !dbg !14586
  call void @dynamicPaint_doMaterialTex(%struct.BrushMaterials* %45, float* %arraydecay37, float* %alpha_factor, %struct.Object* %46, float* %arraydecay45, float* %arraydecay46, i32 0, i16 signext 0, %struct.DerivedMesh* %54), !dbg !14587
  br label %if.end48, !dbg !14588

if.end48:                                         ; preds = %if.then29, %if.then26
  %55 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14589
  %proximity_falloff49 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %55, i32 0, i32 16, !dbg !14591
  %56 = load i16, i16* %proximity_falloff49, align 8, !dbg !14591
  %conv50 = sext i16 %56 to i32, !dbg !14589
  %cmp51 = icmp eq i32 %conv50, 2, !dbg !14592
  br i1 %cmp51, label %land.lhs.true, label %if.end60, !dbg !14593

land.lhs.true:                                    ; preds = %if.end48
  %57 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14594
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %57, i32 0, i32 14, !dbg !14595
  %58 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp, align 8, !dbg !14595
  %59 = load float, float* %strength, align 4, !dbg !14596
  %sub53 = fsub float 1.000000e+00, %59, !dbg !14597
  %arraydecay54 = getelementptr inbounds [4 x float], [4 x float]* %colorband, i64 0, i64 0, !dbg !14598
  %call55 = call zeroext i8 @do_colorband(%struct.ColorBand* %58, float %sub53, float* %arraydecay54), !dbg !14599
  %conv56 = zext i8 %call55 to i32, !dbg !14599
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !14599
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !14600

if.then58:                                        ; preds = %land.lhs.true
  %arrayidx59 = getelementptr inbounds [4 x float], [4 x float]* %colorband, i64 0, i64 3, !dbg !14601
  %60 = load float, float* %arrayidx59, align 4, !dbg !14601
  store float %60, float* %strength, align 4, !dbg !14602
  br label %if.end60, !dbg !14603

if.end60:                                         ; preds = %if.then58, %land.lhs.true, %if.end48
  %61 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14604
  %flags61 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %61, i32 0, i32 4, !dbg !14606
  %62 = load i32, i32* %flags61, align 8, !dbg !14606
  %and62 = and i32 %62, 3840, !dbg !14607
  %tobool63 = icmp ne i32 %and62, 0, !dbg !14607
  br i1 %tobool63, label %if.then64, label %if.end108, !dbg !14608

if.then64:                                        ; preds = %if.end60
  call void @llvm.dbg.declare(metadata [3 x float]* %velocity, metadata !14609, metadata !DIExpression()), !dbg !14611
  %63 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14612
  %velocity65 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %63, i32 0, i32 8, !dbg !14614
  %64 = load %struct.Vec3f*, %struct.Vec3f** %velocity65, align 8, !dbg !14614
  %tobool66 = icmp ne %struct.Vec3f* %64, null, !dbg !14612
  br i1 %tobool66, label %if.then67, label %if.else76, !dbg !14615

if.then67:                                        ; preds = %if.then64
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14616
  %v69 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %brushVel, i32 0, i32 0, !dbg !14618
  %arraydecay70 = getelementptr inbounds [3 x float], [3 x float]* %v69, i64 0, i64 0, !dbg !14619
  %65 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14620
  %velocity71 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %65, i32 0, i32 8, !dbg !14621
  %66 = load %struct.Vec3f*, %struct.Vec3f** %velocity71, align 8, !dbg !14621
  %67 = load i32, i32* %index, align 4, !dbg !14622
  %idxprom72 = sext i32 %67 to i64, !dbg !14620
  %arrayidx73 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %66, i64 %idxprom72, !dbg !14620
  %v74 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx73, i32 0, i32 0, !dbg !14623
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %v74, i64 0, i64 0, !dbg !14620
  call void @sub_v3_v3v3(float* %arraydecay68, float* %arraydecay70, float* %arraydecay75), !dbg !14624
  br label %if.end80, !dbg !14625

if.else76:                                        ; preds = %if.then64
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14626
  %v78 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %brushVel, i32 0, i32 0, !dbg !14628
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %v78, i64 0, i64 0, !dbg !14629
  call void @copy_v3_v3(float* %arraydecay77, float* %arraydecay79), !dbg !14630
  br label %if.end80

if.end80:                                         ; preds = %if.else76, %if.then67
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14631
  %call82 = call float @len_v3(float* %arraydecay81), !dbg !14632
  store float %call82, float* %velocity_val, align 4, !dbg !14633
  %68 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14634
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %68, i32 0, i32 11, !dbg !14636
  %69 = load i16, i16* %type, align 2, !dbg !14636
  %conv83 = sext i16 %69 to i32, !dbg !14634
  %cmp84 = icmp eq i32 %conv83, 0, !dbg !14637
  br i1 %cmp84, label %land.lhs.true86, label %if.end107, !dbg !14638

land.lhs.true86:                                  ; preds = %if.end80
  %70 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14639
  %flags87 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %70, i32 0, i32 4, !dbg !14640
  %71 = load i32, i32* %flags87, align 8, !dbg !14640
  %and88 = and i32 %71, 256, !dbg !14641
  %tobool89 = icmp ne i32 %and88, 0, !dbg !14641
  br i1 %tobool89, label %land.lhs.true90, label %if.end107, !dbg !14642

land.lhs.true90:                                  ; preds = %land.lhs.true86
  %72 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14643
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %72, i32 0, i32 10, !dbg !14644
  %73 = load float*, float** %brush_velocity, align 8, !dbg !14644
  %tobool91 = icmp ne float* %73, null, !dbg !14643
  br i1 %tobool91, label %if.then92, label %if.end107, !dbg !14645

if.then92:                                        ; preds = %land.lhs.true90
  %74 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14646
  %brush_velocity93 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %74, i32 0, i32 10, !dbg !14648
  %75 = load float*, float** %brush_velocity93, align 8, !dbg !14648
  %76 = load i32, i32* %index, align 4, !dbg !14649
  %mul94 = mul nsw i32 %76, 4, !dbg !14650
  %idxprom95 = sext i32 %mul94 to i64, !dbg !14646
  %arrayidx96 = getelementptr inbounds float, float* %75, i64 %idxprom95, !dbg !14646
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !14651
  call void @copy_v3_v3(float* %arrayidx96, float* %arraydecay97), !dbg !14652
  %77 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14653
  %brush_velocity98 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %77, i32 0, i32 10, !dbg !14654
  %78 = load float*, float** %brush_velocity98, align 8, !dbg !14654
  %79 = load i32, i32* %index, align 4, !dbg !14655
  %mul99 = mul nsw i32 %79, 4, !dbg !14656
  %idxprom100 = sext i32 %mul99 to i64, !dbg !14653
  %arrayidx101 = getelementptr inbounds float, float* %78, i64 %idxprom100, !dbg !14653
  %80 = load float, float* %velocity_val, align 4, !dbg !14657
  %div102 = fdiv float 1.000000e+00, %80, !dbg !14658
  call void @mul_v3_fl(float* %arrayidx101, float %div102), !dbg !14659
  %81 = load float, float* %velocity_val, align 4, !dbg !14660
  %82 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14661
  %brush_velocity103 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %82, i32 0, i32 10, !dbg !14662
  %83 = load float*, float** %brush_velocity103, align 8, !dbg !14662
  %84 = load i32, i32* %index, align 4, !dbg !14663
  %mul104 = mul nsw i32 %84, 4, !dbg !14664
  %add = add nsw i32 %mul104, 3, !dbg !14665
  %idxprom105 = sext i32 %add to i64, !dbg !14661
  %arrayidx106 = getelementptr inbounds float, float* %83, i64 %idxprom105, !dbg !14661
  store float %81, float* %arrayidx106, align 4, !dbg !14666
  br label %if.end107, !dbg !14667

if.end107:                                        ; preds = %if.then92, %land.lhs.true90, %land.lhs.true86, %if.end80
  br label %if.end108, !dbg !14668

if.end108:                                        ; preds = %if.end107, %if.end60
  %85 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14669
  %type109 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %85, i32 0, i32 11, !dbg !14671
  %86 = load i16, i16* %type109, align 2, !dbg !14671
  %conv110 = sext i16 %86 to i32, !dbg !14669
  %cmp111 = icmp eq i32 %conv110, 0, !dbg !14672
  br i1 %cmp111, label %if.then113, label %if.else138, !dbg !14673

if.then113:                                       ; preds = %if.end108
  %87 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14674
  %proximity_falloff114 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %87, i32 0, i32 16, !dbg !14677
  %88 = load i16, i16* %proximity_falloff114, align 8, !dbg !14677
  %conv115 = sext i16 %88 to i32, !dbg !14674
  %cmp116 = icmp eq i32 %conv115, 2, !dbg !14678
  br i1 %cmp116, label %land.lhs.true118, label %if.else129, !dbg !14679

land.lhs.true118:                                 ; preds = %if.then113
  %89 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14680
  %flags119 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %89, i32 0, i32 4, !dbg !14681
  %90 = load i32, i32* %flags119, align 8, !dbg !14681
  %and120 = and i32 %90, 16, !dbg !14682
  %tobool121 = icmp ne i32 %and120, 0, !dbg !14682
  br i1 %tobool121, label %if.else129, label %if.then122, !dbg !14683

if.then122:                                       ; preds = %land.lhs.true118
  %arrayidx123 = getelementptr inbounds [4 x float], [4 x float]* %colorband, i64 0, i64 0, !dbg !14684
  %91 = load float, float* %arrayidx123, align 16, !dbg !14684
  %arrayidx124 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !14686
  store float %91, float* %arrayidx124, align 4, !dbg !14687
  %arrayidx125 = getelementptr inbounds [4 x float], [4 x float]* %colorband, i64 0, i64 1, !dbg !14688
  %92 = load float, float* %arrayidx125, align 4, !dbg !14688
  %arrayidx126 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 1, !dbg !14689
  store float %92, float* %arrayidx126, align 4, !dbg !14690
  %arrayidx127 = getelementptr inbounds [4 x float], [4 x float]* %colorband, i64 0, i64 2, !dbg !14691
  %93 = load float, float* %arrayidx127, align 8, !dbg !14691
  %arrayidx128 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 2, !dbg !14692
  store float %93, float* %arrayidx128, align 4, !dbg !14693
  br label %if.end137, !dbg !14694

if.else129:                                       ; preds = %land.lhs.true118, %if.then113
  %94 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14695
  %95 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14698
  %call130 = call i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %94, %struct.Scene* %95), !dbg !14699
  %tobool131 = icmp ne i32 %call130, 0, !dbg !14699
  br i1 %tobool131, label %if.end136, label %if.then132, !dbg !14700

if.then132:                                       ; preds = %if.else129
  %96 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14701
  %r = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %96, i32 0, i32 6, !dbg !14703
  %97 = load float, float* %r, align 8, !dbg !14703
  %arrayidx133 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !14704
  store float %97, float* %arrayidx133, align 4, !dbg !14705
  %98 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14706
  %g = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %98, i32 0, i32 7, !dbg !14707
  %99 = load float, float* %g, align 4, !dbg !14707
  %arrayidx134 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 1, !dbg !14708
  store float %99, float* %arrayidx134, align 4, !dbg !14709
  %100 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14710
  %b = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %100, i32 0, i32 8, !dbg !14711
  %101 = load float, float* %b, align 8, !dbg !14711
  %arrayidx135 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 2, !dbg !14712
  store float %101, float* %arrayidx135, align 4, !dbg !14713
  br label %if.end136, !dbg !14714

if.end136:                                        ; preds = %if.then132, %if.else129
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %if.then122
  br label %if.end163, !dbg !14715

if.else138:                                       ; preds = %if.end108
  %102 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14716
  %type139 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %102, i32 0, i32 11, !dbg !14718
  %103 = load i16, i16* %type139, align 2, !dbg !14718
  %conv140 = sext i16 %103 to i32, !dbg !14716
  %cmp141 = icmp eq i32 %conv140, 1, !dbg !14719
  br i1 %cmp141, label %if.then148, label %lor.lhs.false143, !dbg !14720

lor.lhs.false143:                                 ; preds = %if.else138
  %104 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14721
  %type144 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %104, i32 0, i32 11, !dbg !14722
  %105 = load i16, i16* %type144, align 2, !dbg !14722
  %conv145 = sext i16 %105 to i32, !dbg !14721
  %cmp146 = icmp eq i32 %conv145, 3, !dbg !14723
  br i1 %cmp146, label %if.then148, label %if.end162, !dbg !14724

if.then148:                                       ; preds = %lor.lhs.false143, %if.else138
  call void @llvm.dbg.declare(metadata float* %disp_intersect, metadata !14725, metadata !DIExpression()), !dbg !14727
  %106 = load float, float* %brush_radius, align 4, !dbg !14728
  %107 = load float, float* %distance, align 4, !dbg !14729
  %sub149 = fsub float %106, %107, !dbg !14730
  %108 = load float, float* %brush_radius, align 4, !dbg !14731
  %div150 = fdiv float %sub149, %108, !dbg !14732
  %call151 = call float @sqrtf(float %div150) #7, !dbg !14733
  %sub152 = fsub float 1.000000e+00, %call151, !dbg !14734
  %109 = load float, float* %brush_radius, align 4, !dbg !14735
  %mul153 = fmul float %sub152, %109, !dbg !14736
  store float %mul153, float* %disp_intersect, align 4, !dbg !14727
  %110 = load float, float* %brush_radius, align 4, !dbg !14737
  %111 = load float, float* %disp_intersect, align 4, !dbg !14738
  %sub154 = fsub float %110, %111, !dbg !14739
  %112 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14740
  %bNormal = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %112, i32 0, i32 0, !dbg !14741
  %113 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal, align 8, !dbg !14741
  %114 = load i32, i32* %index, align 4, !dbg !14742
  %idxprom155 = sext i32 %114 to i64, !dbg !14740
  %arrayidx156 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %113, i64 %idxprom155, !dbg !14740
  %normal_scale = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx156, i32 0, i32 1, !dbg !14743
  %115 = load float, float* %normal_scale, align 4, !dbg !14743
  %div157 = fdiv float %sub154, %115, !dbg !14744
  store float %div157, float* %depth, align 4, !dbg !14745
  %116 = load float, float* %depth, align 4, !dbg !14746
  %cmp158 = fcmp olt float %116, 0.000000e+00, !dbg !14748
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !14749

if.then160:                                       ; preds = %if.then148
  store float 0.000000e+00, float* %depth, align 4, !dbg !14750
  br label %if.end161, !dbg !14751

if.end161:                                        ; preds = %if.then160, %if.then148
  br label %if.end162, !dbg !14752

if.end162:                                        ; preds = %if.end161, %lor.lhs.false143
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %if.end137
  %117 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14753
  %118 = load i32, i32* %index, align 4, !dbg !14754
  %119 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14755
  %arraydecay164 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !14756
  %120 = load float, float* %strength, align 4, !dbg !14757
  %121 = load float, float* %depth, align 4, !dbg !14758
  %122 = load float, float* %velocity_val, align 4, !dbg !14759
  %123 = load float, float* %timescale.addr, align 4, !dbg !14760
  call void @dynamicPaint_updatePointData(%struct.DynamicPaintSurface* %117, i32 %118, %struct.DynamicPaintBrushSettings* %119, float* %arraydecay164, float %120, float %121, float %122, float %123), !dbg !14761
  br label %if.end165, !dbg !14762

if.end165:                                        ; preds = %if.end163, %if.end23
  br label %for.inc, !dbg !14763

for.inc:                                          ; preds = %if.end165, %if.then5
  %124 = load i32, i32* %index, align 4, !dbg !14764
  %inc = add nsw i32 %124, 1, !dbg !14764
  store i32 %inc, i32* %index, align 4, !dbg !14764
  br label %for.cond, !dbg !14765, !llvm.loop !14766

for.end:                                          ; preds = %for.cond
  ret i32 1, !dbg !14768
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_paintMesh(%struct.DynamicPaintSurface* %surface, %struct.DynamicPaintBrushSettings* %brush, %struct.Object* %brushOb, %struct.BrushMaterials* %bMats, %struct.Scene* %scene, float %timescale) #0 !dbg !14769 {
entry:
  %retval = alloca i32, align 4
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %brushOb.addr = alloca %struct.Object*, align 8
  %bMats.addr = alloca %struct.BrushMaterials*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %timescale.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %brushVelocity = alloca %struct.Vec3f*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %mface = alloca %struct.MFace*, align 8
  %treeData = alloca %struct.BVHTreeFromMesh, align 8
  %avg_brushNor = alloca [3 x float], align 4
  %brush_radius = alloca float, align 4
  %numOfVerts = alloca i32, align 4
  %ii = alloca i32, align 4
  %mesh_bb = alloca %struct.Bounds3D, align 4
  %grid = alloca %struct.VolumeGrid*, align 8
  %nor = alloca [3 x float], align 4
  %c_index = alloca i32, align 4
  %total_cells = alloca i32, align 4
  %id = alloca i32, align 4
  %index = alloca i32, align 4
  %ss = alloca i32, align 4
  %samples = alloca i32, align 4
  %total_sample = alloca float, align 4
  %brushStrength = alloca float, align 4
  %depth = alloca float, align 4
  %velocity_val = alloca float, align 4
  %paintColor = alloca [3 x float], align 4
  %numOfHits = alloca i32, align 4
  %ray_start = alloca [3 x float], align 4
  %ray_dir = alloca [3 x float], align 4
  %sample_factor = alloca float, align 4
  %sampleStrength = alloca float, align 4
  %hit = alloca %struct.BVHTreeRayHit, align 4
  %nearest = alloca %struct.BVHTreeNearest, align 4
  %hit_found = alloca i16, align 2
  %volume_factor = alloca float, align 4
  %proximity_factor = alloca float, align 4
  %prox_colorband = alloca [4 x float], align 16
  %inner_proximity = alloca i32, align 4
  %hitCoord = alloca [3 x float], align 4
  %hitFace = alloca i32, align 4
  %hitQuad = alloca i16, align 2
  %v1 = alloca i32, align 4
  %v2 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %quad = alloca i32, align 4
  %dot = alloca float, align 4
  %dist231 = alloca float, align 4
  %f_index = alloca i32, align 4
  %proxDist = alloca float, align 4
  %hitCo = alloca [3 x float], align 4
  %hQuad = alloca i16, align 2
  %face = alloca i32, align 4
  %proj_ray = alloca [3 x float], align 4
  %v1434 = alloca i32, align 4
  %v2435 = alloca i32, align 4
  %v3436 = alloca i32, align 4
  %weights = alloca [4 x float], align 16
  %brushPointVelocity = alloca [3 x float], align 4
  %velocity = alloca [3 x float], align 4
  %sampleColor = alloca [3 x float], align 4
  %alpha_factor = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !14772, metadata !DIExpression()), !dbg !14773
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !14774, metadata !DIExpression()), !dbg !14775
  store %struct.Object* %brushOb, %struct.Object** %brushOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %brushOb.addr, metadata !14776, metadata !DIExpression()), !dbg !14777
  store %struct.BrushMaterials* %bMats, %struct.BrushMaterials** %bMats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials** %bMats.addr, metadata !14778, metadata !DIExpression()), !dbg !14779
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !14780, metadata !DIExpression()), !dbg !14781
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !14782, metadata !DIExpression()), !dbg !14783
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !14784, metadata !DIExpression()), !dbg !14785
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14786
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !14787
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !14787
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !14785
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !14788, metadata !DIExpression()), !dbg !14789
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !14790
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !14791
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !14791
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !14789
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !14792, metadata !DIExpression()), !dbg !14793
  store %struct.DerivedMesh* null, %struct.DerivedMesh** %dm, align 8, !dbg !14793
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %brushVelocity, metadata !14794, metadata !DIExpression()), !dbg !14795
  store %struct.Vec3f* null, %struct.Vec3f** %brushVelocity, align 8, !dbg !14795
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !14796, metadata !DIExpression()), !dbg !14797
  store %struct.MVert* null, %struct.MVert** %mvert, align 8, !dbg !14797
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !14798, metadata !DIExpression()), !dbg !14799
  store %struct.MFace* null, %struct.MFace** %mface, align 8, !dbg !14799
  %4 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14800
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %4, i32 0, i32 4, !dbg !14802
  %5 = load i32, i32* %flags, align 8, !dbg !14802
  %and = and i32 %5, 3840, !dbg !14803
  %tobool = icmp ne i32 %and, 0, !dbg !14803
  br i1 %tobool, label %if.then, label %if.end, !dbg !14804

if.then:                                          ; preds = %entry
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !14805
  %7 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14806
  %8 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14807
  %9 = load float, float* %timescale.addr, align 4, !dbg !14808
  call void @dynamicPaint_brushMeshCalculateVelocity(%struct.Scene* %6, %struct.Object* %7, %struct.DynamicPaintBrushSettings* %8, %struct.Vec3f** %brushVelocity, float %9), !dbg !14809
  br label %if.end, !dbg !14809

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14810
  %dm2 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %10, i32 0, i32 1, !dbg !14812
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm2, align 8, !dbg !14812
  %tobool3 = icmp ne %struct.DerivedMesh* %11, null, !dbg !14810
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !14813

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !14814
  br label %return, !dbg !14814

if.end5:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh* %treeData, metadata !14815, metadata !DIExpression()), !dbg !14817
  %12 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !14817
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 72, i1 false), !dbg !14817
  call void @llvm.dbg.declare(metadata [3 x float]* %avg_brushNor, metadata !14818, metadata !DIExpression()), !dbg !14819
  %13 = bitcast [3 x float]* %avg_brushNor to i8*, !dbg !14819
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 12, i1 false), !dbg !14819
  call void @llvm.dbg.declare(metadata float* %brush_radius, metadata !14820, metadata !DIExpression()), !dbg !14821
  %14 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14822
  %paint_distance = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %14, i32 0, i32 13, !dbg !14823
  %15 = load float, float* %paint_distance, align 4, !dbg !14823
  %16 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !14824
  %radius_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %16, i32 0, i32 39, !dbg !14825
  %17 = load float, float* %radius_scale, align 4, !dbg !14825
  %mul = fmul float %15, %17, !dbg !14826
  store float %mul, float* %brush_radius, align 4, !dbg !14821
  call void @llvm.dbg.declare(metadata i32* %numOfVerts, metadata !14827, metadata !DIExpression()), !dbg !14828
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !14829, metadata !DIExpression()), !dbg !14830
  call void @llvm.dbg.declare(metadata %struct.Bounds3D* %mesh_bb, metadata !14831, metadata !DIExpression()), !dbg !14832
  %18 = bitcast %struct.Bounds3D* %mesh_bb to i8*, !dbg !14832
  call void @llvm.memset.p0i8.i64(i8* align 4 %18, i8 0, i64 28, i1 false), !dbg !14832
  call void @llvm.dbg.declare(metadata %struct.VolumeGrid** %grid, metadata !14833, metadata !DIExpression()), !dbg !14834
  %19 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !14835
  %grid6 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %19, i32 0, i32 7, !dbg !14836
  %20 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid6, align 8, !dbg !14836
  store %struct.VolumeGrid* %20, %struct.VolumeGrid** %grid, align 8, !dbg !14834
  %21 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14837
  %dm7 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %21, i32 0, i32 1, !dbg !14838
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm7, align 8, !dbg !14838
  %call = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %22), !dbg !14839
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %dm, align 8, !dbg !14840
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14841
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %23, i32 0, i32 31, !dbg !14842
  %24 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !14842
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14843
  %call8 = call %struct.MVert* %24(%struct.DerivedMesh* %25), !dbg !14841
  store %struct.MVert* %call8, %struct.MVert** %mvert, align 8, !dbg !14844
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14845
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %26, i32 0, i32 33, !dbg !14846
  %27 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !14846
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14847
  %call9 = call %struct.MFace* %27(%struct.DerivedMesh* %28), !dbg !14845
  store %struct.MFace* %call9, %struct.MFace** %mface, align 8, !dbg !14848
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14849
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %29, i32 0, i32 23, !dbg !14850
  %30 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !14850
  %31 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14851
  %call10 = call i32 %30(%struct.DerivedMesh* %31), !dbg !14849
  store i32 %call10, i32* %numOfVerts, align 4, !dbg !14852
  store i32 0, i32* %ii, align 4, !dbg !14853
  br label %for.cond, !dbg !14855

for.cond:                                         ; preds = %for.inc, %if.end5
  %32 = load i32, i32* %ii, align 4, !dbg !14856
  %33 = load i32, i32* %numOfVerts, align 4, !dbg !14858
  %cmp = icmp slt i32 %32, %33, !dbg !14859
  br i1 %cmp, label %for.body, label %for.end, !dbg !14860

for.body:                                         ; preds = %for.cond
  %34 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14861
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 47, !dbg !14863
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !14861
  %35 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14864
  %36 = load i32, i32* %ii, align 4, !dbg !14865
  %idxprom = sext i32 %36 to i64, !dbg !14864
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %35, i64 %idxprom, !dbg !14864
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !14866
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !14864
  call void @mul_m4_v3([4 x float]* %arraydecay, float* %arraydecay11), !dbg !14867
  %37 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14868
  %38 = load i32, i32* %ii, align 4, !dbg !14869
  %idxprom12 = sext i32 %38 to i64, !dbg !14868
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i64 %idxprom12, !dbg !14868
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx13, i32 0, i32 0, !dbg !14870
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !14868
  call void @boundInsert(%struct.Bounds3D* %mesh_bb, float* %arraydecay15), !dbg !14871
  %39 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14872
  %flags16 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %39, i32 0, i32 4, !dbg !14874
  %40 = load i32, i32* %flags16, align 8, !dbg !14874
  %and17 = and i32 %40, 32, !dbg !14875
  %tobool18 = icmp ne i32 %and17, 0, !dbg !14875
  br i1 %tobool18, label %land.lhs.true, label %if.end32, !dbg !14876

land.lhs.true:                                    ; preds = %for.body
  %41 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14877
  %collision = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %41, i32 0, i32 5, !dbg !14878
  %42 = load i32, i32* %collision, align 4, !dbg !14878
  %cmp19 = icmp ne i32 %42, 0, !dbg !14879
  br i1 %cmp19, label %if.then20, label %if.end32, !dbg !14880

if.then20:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !14881, metadata !DIExpression()), !dbg !14883
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14884
  %43 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !14885
  %44 = load i32, i32* %ii, align 4, !dbg !14886
  %idxprom22 = sext i32 %44 to i64, !dbg !14885
  %arrayidx23 = getelementptr inbounds %struct.MVert, %struct.MVert* %43, i64 %idxprom22, !dbg !14885
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx23, i32 0, i32 1, !dbg !14887
  %arraydecay24 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !14885
  call void @normal_short_to_float_v3(float* %arraydecay21, i16* %arraydecay24), !dbg !14888
  %45 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !14889
  %obmat25 = getelementptr inbounds %struct.Object, %struct.Object* %45, i32 0, i32 47, !dbg !14890
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat25, i64 0, i64 0, !dbg !14889
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14891
  call void @mul_mat3_m4_v3([4 x float]* %arraydecay26, float* %arraydecay27), !dbg !14892
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14893
  %call29 = call float @normalize_v3(float* %arraydecay28), !dbg !14894
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14895
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !14896
  call void @add_v3_v3(float* %arraydecay30, float* %arraydecay31), !dbg !14897
  br label %if.end32, !dbg !14898

if.end32:                                         ; preds = %if.then20, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14899

for.inc:                                          ; preds = %if.end32
  %46 = load i32, i32* %ii, align 4, !dbg !14900
  %inc = add nsw i32 %46, 1, !dbg !14900
  store i32 %inc, i32* %ii, align 4, !dbg !14900
  br label %for.cond, !dbg !14901, !llvm.loop !14902

for.end:                                          ; preds = %for.cond
  %47 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14904
  %flags33 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %47, i32 0, i32 4, !dbg !14906
  %48 = load i32, i32* %flags33, align 8, !dbg !14906
  %and34 = and i32 %48, 32, !dbg !14907
  %tobool35 = icmp ne i32 %and34, 0, !dbg !14907
  br i1 %tobool35, label %land.lhs.true36, label %if.end69, !dbg !14908

land.lhs.true36:                                  ; preds = %for.end
  %49 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14909
  %collision37 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %49, i32 0, i32 5, !dbg !14910
  %50 = load i32, i32* %collision37, align 4, !dbg !14910
  %cmp38 = icmp ne i32 %50, 0, !dbg !14911
  br i1 %cmp38, label %if.then39, label %if.end69, !dbg !14912

if.then39:                                        ; preds = %land.lhs.true36
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14913
  %51 = load i32, i32* %numOfVerts, align 4, !dbg !14915
  %conv = sitofp i32 %51 to float, !dbg !14916
  %div = fdiv float 1.000000e+00, %conv, !dbg !14917
  call void @mul_v3_fl(float* %arraydecay40, float %div), !dbg !14918
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14919
  %52 = load float, float* %arrayidx41, align 4, !dbg !14919
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 1, !dbg !14919
  %53 = load float, float* %arrayidx42, align 4, !dbg !14919
  %cmp43 = fcmp olt float %52, %53, !dbg !14919
  br i1 %cmp43, label %cond.true, label %cond.false, !dbg !14919

cond.true:                                        ; preds = %if.then39
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14919
  %54 = load float, float* %arrayidx45, align 4, !dbg !14919
  br label %cond.end, !dbg !14919

cond.false:                                       ; preds = %if.then39
  %arrayidx46 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 1, !dbg !14919
  %55 = load float, float* %arrayidx46, align 4, !dbg !14919
  br label %cond.end, !dbg !14919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %54, %cond.true ], [ %55, %cond.false ], !dbg !14919
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 2, !dbg !14919
  %56 = load float, float* %arrayidx47, align 4, !dbg !14919
  %cmp48 = fcmp olt float %cond, %56, !dbg !14919
  br i1 %cmp48, label %cond.true50, label %cond.false61, !dbg !14921

cond.true50:                                      ; preds = %cond.end
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14919
  %57 = load float, float* %arrayidx51, align 4, !dbg !14919
  %arrayidx52 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 1, !dbg !14919
  %58 = load float, float* %arrayidx52, align 4, !dbg !14919
  %cmp53 = fcmp olt float %57, %58, !dbg !14919
  br i1 %cmp53, label %cond.true55, label %cond.false58, !dbg !14919

cond.true55:                                      ; preds = %cond.true50
  %arrayidx56 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14919
  %59 = load float, float* %arrayidx56, align 4, !dbg !14919
  %tobool57 = fcmp une float %59, 0.000000e+00, !dbg !14919
  br i1 %tobool57, label %if.else, label %if.then64, !dbg !14919

cond.false58:                                     ; preds = %cond.true50
  %arrayidx59 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 1, !dbg !14919
  %60 = load float, float* %arrayidx59, align 4, !dbg !14919
  %tobool60 = fcmp une float %60, 0.000000e+00, !dbg !14919
  br i1 %tobool60, label %if.else, label %if.then64, !dbg !14919

cond.false61:                                     ; preds = %cond.end
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 2, !dbg !14919
  %61 = load float, float* %arrayidx62, align 4, !dbg !14919
  %tobool63 = fcmp une float %61, 0.000000e+00, !dbg !14919
  br i1 %tobool63, label %if.else, label %if.then64, !dbg !14921

if.then64:                                        ; preds = %cond.false61, %cond.false58, %cond.true55
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 2, !dbg !14922
  store float 1.000000e+00, float* %arrayidx65, align 4, !dbg !14923
  br label %if.end68, !dbg !14922

if.else:                                          ; preds = %cond.false61, %cond.false58, %cond.true55
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !14924
  %call67 = call float @normalize_v3(float* %arraydecay66), !dbg !14925
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then64
  br label %if.end69, !dbg !14926

if.end69:                                         ; preds = %if.end68, %land.lhs.true36, %for.end
  %62 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14927
  %tobool70 = icmp ne %struct.VolumeGrid* %62, null, !dbg !14927
  br i1 %tobool70, label %land.lhs.true71, label %if.end652, !dbg !14929

land.lhs.true71:                                  ; preds = %if.end69
  %63 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14930
  %grid_bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %63, i32 0, i32 1, !dbg !14931
  %64 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14932
  %65 = load float, float* %brush_radius, align 4, !dbg !14933
  %call72 = call i32 @meshBrush_boundsIntersect(%struct.Bounds3D* %grid_bounds, %struct.Bounds3D* %mesh_bb, %struct.DynamicPaintBrushSettings* %64, float %65), !dbg !14934
  %tobool73 = icmp ne i32 %call72, 0, !dbg !14934
  br i1 %tobool73, label %if.then74, label %if.end652, !dbg !14935

if.then74:                                        ; preds = %land.lhs.true71
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !14936
  %call75 = call %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh* %treeData, %struct.DerivedMesh* %66, float 0.000000e+00, i32 4, i32 8), !dbg !14939
  %tobool76 = icmp ne %struct.BVHTree* %call75, null, !dbg !14939
  br i1 %tobool76, label %if.then77, label %if.end651, !dbg !14940

if.then77:                                        ; preds = %if.then74
  call void @llvm.dbg.declare(metadata i32* %c_index, metadata !14941, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.declare(metadata i32* %total_cells, metadata !14944, metadata !DIExpression()), !dbg !14945
  %67 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14946
  %dim = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %67, i32 0, i32 0, !dbg !14947
  %arrayidx78 = getelementptr inbounds [3 x i32], [3 x i32]* %dim, i64 0, i64 0, !dbg !14946
  %68 = load i32, i32* %arrayidx78, align 8, !dbg !14946
  %69 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14948
  %dim79 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %69, i32 0, i32 0, !dbg !14949
  %arrayidx80 = getelementptr inbounds [3 x i32], [3 x i32]* %dim79, i64 0, i64 1, !dbg !14948
  %70 = load i32, i32* %arrayidx80, align 4, !dbg !14948
  %mul81 = mul nsw i32 %68, %70, !dbg !14950
  %71 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14951
  %dim82 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %71, i32 0, i32 0, !dbg !14952
  %arrayidx83 = getelementptr inbounds [3 x i32], [3 x i32]* %dim82, i64 0, i64 2, !dbg !14951
  %72 = load i32, i32* %arrayidx83, align 8, !dbg !14951
  %mul84 = mul nsw i32 %mul81, %72, !dbg !14953
  store i32 %mul84, i32* %total_cells, align 4, !dbg !14945
  store i32 0, i32* %c_index, align 4, !dbg !14954
  br label %for.cond85, !dbg !14956

for.cond85:                                       ; preds = %for.inc648, %if.then77
  %73 = load i32, i32* %c_index, align 4, !dbg !14957
  %74 = load i32, i32* %total_cells, align 4, !dbg !14959
  %cmp86 = icmp slt i32 %73, %74, !dbg !14960
  br i1 %cmp86, label %for.body88, label %for.end650, !dbg !14961

for.body88:                                       ; preds = %for.cond85
  call void @llvm.dbg.declare(metadata i32* %id, metadata !14962, metadata !DIExpression()), !dbg !14964
  %75 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14965
  %s_num = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %75, i32 0, i32 4, !dbg !14967
  %76 = load i32*, i32** %s_num, align 8, !dbg !14967
  %77 = load i32, i32* %c_index, align 4, !dbg !14968
  %idxprom89 = sext i32 %77 to i64, !dbg !14965
  %arrayidx90 = getelementptr inbounds i32, i32* %76, i64 %idxprom89, !dbg !14965
  %78 = load i32, i32* %arrayidx90, align 4, !dbg !14965
  %tobool91 = icmp ne i32 %78, 0, !dbg !14965
  br i1 %tobool91, label %lor.lhs.false, label %if.then96, !dbg !14969

lor.lhs.false:                                    ; preds = %for.body88
  %79 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14970
  %bounds = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %79, i32 0, i32 2, !dbg !14971
  %80 = load %struct.Bounds3D*, %struct.Bounds3D** %bounds, align 8, !dbg !14971
  %81 = load i32, i32* %c_index, align 4, !dbg !14972
  %idxprom92 = sext i32 %81 to i64, !dbg !14970
  %arrayidx93 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %80, i64 %idxprom92, !dbg !14970
  %82 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !14973
  %83 = load float, float* %brush_radius, align 4, !dbg !14974
  %call94 = call i32 @meshBrush_boundsIntersect(%struct.Bounds3D* %arrayidx93, %struct.Bounds3D* %mesh_bb, %struct.DynamicPaintBrushSettings* %82, float %83), !dbg !14975
  %tobool95 = icmp ne i32 %call94, 0, !dbg !14975
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !14976

if.then96:                                        ; preds = %lor.lhs.false, %for.body88
  br label %for.inc648, !dbg !14977

if.end97:                                         ; preds = %lor.lhs.false
  store i32 0, i32* %id, align 4, !dbg !14978
  br label %for.cond98, !dbg !14980

for.cond98:                                       ; preds = %for.inc645, %if.end97
  %84 = load i32, i32* %id, align 4, !dbg !14981
  %85 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14983
  %s_num99 = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %85, i32 0, i32 4, !dbg !14984
  %86 = load i32*, i32** %s_num99, align 8, !dbg !14984
  %87 = load i32, i32* %c_index, align 4, !dbg !14985
  %idxprom100 = sext i32 %87 to i64, !dbg !14983
  %arrayidx101 = getelementptr inbounds i32, i32* %86, i64 %idxprom100, !dbg !14983
  %88 = load i32, i32* %arrayidx101, align 4, !dbg !14983
  %cmp102 = icmp slt i32 %84, %88, !dbg !14986
  br i1 %cmp102, label %for.body104, label %for.end647, !dbg !14987

for.body104:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14988, metadata !DIExpression()), !dbg !14990
  %89 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14991
  %t_index = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %89, i32 0, i32 5, !dbg !14992
  %90 = load i32*, i32** %t_index, align 8, !dbg !14992
  %91 = load %struct.VolumeGrid*, %struct.VolumeGrid** %grid, align 8, !dbg !14993
  %s_pos = getelementptr inbounds %struct.VolumeGrid, %struct.VolumeGrid* %91, i32 0, i32 3, !dbg !14994
  %92 = load i32*, i32** %s_pos, align 8, !dbg !14994
  %93 = load i32, i32* %c_index, align 4, !dbg !14995
  %idxprom105 = sext i32 %93 to i64, !dbg !14993
  %arrayidx106 = getelementptr inbounds i32, i32* %92, i64 %idxprom105, !dbg !14993
  %94 = load i32, i32* %arrayidx106, align 4, !dbg !14993
  %95 = load i32, i32* %id, align 4, !dbg !14996
  %add = add nsw i32 %94, %95, !dbg !14997
  %idxprom107 = sext i32 %add to i64, !dbg !14991
  %arrayidx108 = getelementptr inbounds i32, i32* %90, i64 %idxprom107, !dbg !14991
  %96 = load i32, i32* %arrayidx108, align 4, !dbg !14991
  store i32 %96, i32* %index, align 4, !dbg !14990
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !14998, metadata !DIExpression()), !dbg !14999
  call void @llvm.dbg.declare(metadata i32* %samples, metadata !15000, metadata !DIExpression()), !dbg !15001
  %97 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15002
  %s_num109 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %97, i32 0, i32 2, !dbg !15003
  %98 = load i32*, i32** %s_num109, align 8, !dbg !15003
  %99 = load i32, i32* %index, align 4, !dbg !15004
  %idxprom110 = sext i32 %99 to i64, !dbg !15002
  %arrayidx111 = getelementptr inbounds i32, i32* %98, i64 %idxprom110, !dbg !15002
  %100 = load i32, i32* %arrayidx111, align 4, !dbg !15002
  store i32 %100, i32* %samples, align 4, !dbg !15001
  call void @llvm.dbg.declare(metadata float* %total_sample, metadata !15005, metadata !DIExpression()), !dbg !15006
  %101 = load i32, i32* %samples, align 4, !dbg !15007
  %conv112 = sitofp i32 %101 to float, !dbg !15008
  store float %conv112, float* %total_sample, align 4, !dbg !15006
  call void @llvm.dbg.declare(metadata float* %brushStrength, metadata !15009, metadata !DIExpression()), !dbg !15010
  store float 0.000000e+00, float* %brushStrength, align 4, !dbg !15010
  call void @llvm.dbg.declare(metadata float* %depth, metadata !15011, metadata !DIExpression()), !dbg !15012
  store float 0.000000e+00, float* %depth, align 4, !dbg !15012
  call void @llvm.dbg.declare(metadata float* %velocity_val, metadata !15013, metadata !DIExpression()), !dbg !15014
  store float 0.000000e+00, float* %velocity_val, align 4, !dbg !15014
  call void @llvm.dbg.declare(metadata [3 x float]* %paintColor, metadata !15015, metadata !DIExpression()), !dbg !15016
  %102 = bitcast [3 x float]* %paintColor to i8*, !dbg !15016
  call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 12, i1 false), !dbg !15016
  call void @llvm.dbg.declare(metadata i32* %numOfHits, metadata !15017, metadata !DIExpression()), !dbg !15018
  store i32 0, i32* %numOfHits, align 4, !dbg !15018
  %103 = load i32, i32* %samples, align 4, !dbg !15019
  %cmp113 = icmp sgt i32 %103, 1, !dbg !15021
  br i1 %cmp113, label %land.lhs.true115, label %if.end120, !dbg !15022

land.lhs.true115:                                 ; preds = %for.body104
  %104 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15023
  %format = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %104, i32 0, i32 10, !dbg !15024
  %105 = load i16, i16* %format, align 4, !dbg !15024
  %conv116 = sext i16 %105 to i32, !dbg !15023
  %cmp117 = icmp eq i32 %conv116, 2, !dbg !15025
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !15026

if.then119:                                       ; preds = %land.lhs.true115
  store float 0x400A79B3E0000000, float* %total_sample, align 4, !dbg !15027
  br label %if.end120, !dbg !15028

if.end120:                                        ; preds = %if.then119, %land.lhs.true115, %for.body104
  store i32 0, i32* %ss, align 4, !dbg !15029
  br label %for.cond121, !dbg !15031

for.cond121:                                      ; preds = %for.inc588, %if.end120
  %106 = load i32, i32* %ss, align 4, !dbg !15032
  %107 = load i32, i32* %samples, align 4, !dbg !15034
  %cmp122 = icmp slt i32 %106, %107, !dbg !15035
  br i1 %cmp122, label %for.body124, label %for.end590, !dbg !15036

for.body124:                                      ; preds = %for.cond121
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_start, metadata !15037, metadata !DIExpression()), !dbg !15039
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_dir, metadata !15040, metadata !DIExpression()), !dbg !15041
  call void @llvm.dbg.declare(metadata float* %sample_factor, metadata !15042, metadata !DIExpression()), !dbg !15043
  store float 0.000000e+00, float* %sample_factor, align 4, !dbg !15043
  call void @llvm.dbg.declare(metadata float* %sampleStrength, metadata !15044, metadata !DIExpression()), !dbg !15045
  store float 0.000000e+00, float* %sampleStrength, align 4, !dbg !15045
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit* %hit, metadata !15046, metadata !DIExpression()), !dbg !15047
  call void @llvm.dbg.declare(metadata %struct.BVHTreeNearest* %nearest, metadata !15048, metadata !DIExpression()), !dbg !15049
  call void @llvm.dbg.declare(metadata i16* %hit_found, metadata !15050, metadata !DIExpression()), !dbg !15051
  store i16 0, i16* %hit_found, align 2, !dbg !15051
  call void @llvm.dbg.declare(metadata float* %volume_factor, metadata !15052, metadata !DIExpression()), !dbg !15053
  store float 0.000000e+00, float* %volume_factor, align 4, !dbg !15053
  call void @llvm.dbg.declare(metadata float* %proximity_factor, metadata !15054, metadata !DIExpression()), !dbg !15055
  store float 0.000000e+00, float* %proximity_factor, align 4, !dbg !15055
  call void @llvm.dbg.declare(metadata [4 x float]* %prox_colorband, metadata !15056, metadata !DIExpression()), !dbg !15057
  %108 = bitcast [4 x float]* %prox_colorband to i8*, !dbg !15057
  call void @llvm.memset.p0i8.i64(i8* align 16 %108, i8 0, i64 16, i1 false), !dbg !15057
  call void @llvm.dbg.declare(metadata i32* %inner_proximity, metadata !15058, metadata !DIExpression()), !dbg !15059
  %109 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15060
  %flags125 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %109, i32 0, i32 4, !dbg !15061
  %110 = load i32, i32* %flags125, align 8, !dbg !15061
  %and126 = and i32 %110, 64, !dbg !15062
  %tobool127 = icmp ne i32 %and126, 0, !dbg !15062
  br i1 %tobool127, label %land.rhs, label %land.end, !dbg !15063

land.rhs:                                         ; preds = %for.body124
  %111 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15064
  %collision128 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %111, i32 0, i32 5, !dbg !15065
  %112 = load i32, i32* %collision128, align 4, !dbg !15065
  %cmp129 = icmp eq i32 %112, 2, !dbg !15066
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body124
  %113 = phi i1 [ false, %for.body124 ], [ %cmp129, %land.rhs ], !dbg !15067
  %land.ext = zext i1 %113 to i32, !dbg !15063
  store i32 %land.ext, i32* %inner_proximity, align 4, !dbg !15059
  call void @llvm.dbg.declare(metadata [3 x float]* %hitCoord, metadata !15068, metadata !DIExpression()), !dbg !15069
  call void @llvm.dbg.declare(metadata i32* %hitFace, metadata !15070, metadata !DIExpression()), !dbg !15071
  store i32 -1, i32* %hitFace, align 4, !dbg !15071
  call void @llvm.dbg.declare(metadata i16* %hitQuad, metadata !15072, metadata !DIExpression()), !dbg !15073
  store i16 0, i16* %hitQuad, align 2, !dbg !15073
  %114 = load i32, i32* %samples, align 4, !dbg !15074
  %cmp131 = icmp sgt i32 %114, 1, !dbg !15076
  br i1 %cmp131, label %land.lhs.true133, label %if.else141, !dbg !15077

land.lhs.true133:                                 ; preds = %land.end
  %115 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15078
  %format134 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %115, i32 0, i32 10, !dbg !15079
  %116 = load i16, i16* %format134, align 4, !dbg !15079
  %conv135 = sext i16 %116 to i32, !dbg !15078
  %cmp136 = icmp eq i32 %conv135, 2, !dbg !15080
  br i1 %cmp136, label %if.then138, label %if.else141, !dbg !15081

if.then138:                                       ; preds = %land.lhs.true133
  %117 = load i32, i32* %ss, align 4, !dbg !15082
  %idxprom139 = sext i32 %117 to i64, !dbg !15083
  %arrayidx140 = getelementptr inbounds [5 x float], [5 x float]* @gaussianFactors, i64 0, i64 %idxprom139, !dbg !15083
  %118 = load float, float* %arrayidx140, align 4, !dbg !15083
  store float %118, float* %sample_factor, align 4, !dbg !15084
  br label %if.end142, !dbg !15085

if.else141:                                       ; preds = %land.lhs.true133, %land.end
  store float 1.000000e+00, float* %sample_factor, align 4, !dbg !15086
  br label %if.end142

if.end142:                                        ; preds = %if.else141, %if.then138
  %arraydecay143 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15087
  %119 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15088
  %realCoord = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %119, i32 0, i32 3, !dbg !15089
  %120 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !15089
  %121 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15090
  %s_pos144 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %121, i32 0, i32 1, !dbg !15091
  %122 = load i32*, i32** %s_pos144, align 8, !dbg !15091
  %123 = load i32, i32* %index, align 4, !dbg !15092
  %idxprom145 = sext i32 %123 to i64, !dbg !15090
  %arrayidx146 = getelementptr inbounds i32, i32* %122, i64 %idxprom145, !dbg !15090
  %124 = load i32, i32* %arrayidx146, align 4, !dbg !15090
  %125 = load i32, i32* %ss, align 4, !dbg !15093
  %add147 = add nsw i32 %124, %125, !dbg !15094
  %idxprom148 = sext i32 %add147 to i64, !dbg !15088
  %arrayidx149 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %120, i64 %idxprom148, !dbg !15088
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx149, i32 0, i32 0, !dbg !15095
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !15088
  call void @copy_v3_v3(float* %arraydecay143, float* %arraydecay150), !dbg !15096
  %arraydecay151 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15097
  %126 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15098
  %bNormal = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %126, i32 0, i32 0, !dbg !15099
  %127 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal, align 8, !dbg !15099
  %128 = load i32, i32* %index, align 4, !dbg !15100
  %idxprom152 = sext i32 %128 to i64, !dbg !15098
  %arrayidx153 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %127, i64 %idxprom152, !dbg !15098
  %invNorm = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx153, i32 0, i32 0, !dbg !15101
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %invNorm, i64 0, i64 0, !dbg !15098
  call void @copy_v3_v3(float* %arraydecay151, float* %arraydecay154), !dbg !15102
  %arraydecay155 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15103
  call void @add_v3_fl(float* %arraydecay155, float 0x3F50624DE0000000), !dbg !15104
  %index156 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15105
  store i32 -1, i32* %index156, align 4, !dbg !15106
  %dist = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15107
  store float 9.999000e+03, float* %dist, align 4, !dbg !15108
  %index157 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !15109
  store i32 -1, i32* %index157, align 4, !dbg !15110
  %129 = load float, float* %brush_radius, align 4, !dbg !15111
  %130 = load float, float* %brush_radius, align 4, !dbg !15112
  %mul158 = fmul float %129, %130, !dbg !15113
  %dist_sq = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !15114
  store float %mul158, float* %dist_sq, align 4, !dbg !15115
  %131 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15116
  %collision159 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %131, i32 0, i32 5, !dbg !15118
  %132 = load i32, i32* %collision159, align 4, !dbg !15118
  %cmp160 = icmp eq i32 %132, 0, !dbg !15119
  br i1 %cmp160, label %if.then166, label %lor.lhs.false162, !dbg !15120

lor.lhs.false162:                                 ; preds = %if.end142
  %133 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15121
  %collision163 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %133, i32 0, i32 5, !dbg !15122
  %134 = load i32, i32* %collision163, align 4, !dbg !15122
  %cmp164 = icmp eq i32 %134, 2, !dbg !15123
  br i1 %cmp164, label %if.then166, label %if.end255, !dbg !15124

if.then166:                                       ; preds = %lor.lhs.false162, %if.end142
  %tree = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !15125
  %135 = load %struct.BVHTree*, %struct.BVHTree** %tree, align 8, !dbg !15125
  %arraydecay167 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15127
  %arraydecay168 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15128
  %136 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !15129
  %call169 = call i32 @BLI_bvhtree_ray_cast(%struct.BVHTree* %135, float* %arraydecay167, float* %arraydecay168, float 0.000000e+00, %struct.BVHTreeRayHit* %hit, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* @mesh_faces_spherecast_dp, i8* %136), !dbg !15130
  %cmp170 = icmp ne i32 %call169, -1, !dbg !15131
  br i1 %cmp170, label %if.then172, label %if.end254, !dbg !15132

if.then172:                                       ; preds = %if.then166
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !15133, metadata !DIExpression()), !dbg !15135
  %137 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15136
  %index173 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15137
  %138 = load i32, i32* %index173, align 4, !dbg !15137
  %idxprom174 = sext i32 %138 to i64, !dbg !15136
  %arrayidx175 = getelementptr inbounds %struct.MFace, %struct.MFace* %137, i64 %idxprom174, !dbg !15136
  %v1176 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx175, i32 0, i32 0, !dbg !15138
  %139 = load i32, i32* %v1176, align 4, !dbg !15138
  store i32 %139, i32* %v1, align 4, !dbg !15135
  call void @llvm.dbg.declare(metadata i32* %v2, metadata !15139, metadata !DIExpression()), !dbg !15140
  %140 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15141
  %index177 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15142
  %141 = load i32, i32* %index177, align 4, !dbg !15142
  %idxprom178 = sext i32 %141 to i64, !dbg !15141
  %arrayidx179 = getelementptr inbounds %struct.MFace, %struct.MFace* %140, i64 %idxprom178, !dbg !15141
  %v2180 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx179, i32 0, i32 1, !dbg !15143
  %142 = load i32, i32* %v2180, align 4, !dbg !15143
  store i32 %142, i32* %v2, align 4, !dbg !15140
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !15144, metadata !DIExpression()), !dbg !15145
  %143 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15146
  %index181 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15147
  %144 = load i32, i32* %index181, align 4, !dbg !15147
  %idxprom182 = sext i32 %144 to i64, !dbg !15146
  %arrayidx183 = getelementptr inbounds %struct.MFace, %struct.MFace* %143, i64 %idxprom182, !dbg !15146
  %v3184 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx183, i32 0, i32 2, !dbg !15148
  %145 = load i32, i32* %v3184, align 4, !dbg !15148
  store i32 %145, i32* %v3, align 4, !dbg !15145
  call void @llvm.dbg.declare(metadata i32* %quad, metadata !15149, metadata !DIExpression()), !dbg !15150
  %no185 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15151
  %arrayidx186 = getelementptr inbounds [3 x float], [3 x float]* %no185, i64 0, i64 0, !dbg !15152
  %146 = load float, float* %arrayidx186, align 4, !dbg !15152
  %cmp187 = fcmp oeq float %146, 1.000000e+00, !dbg !15153
  %conv188 = zext i1 %cmp187 to i32, !dbg !15153
  store i32 %conv188, i32* %quad, align 4, !dbg !15150
  call void @llvm.dbg.declare(metadata float* %dot, metadata !15154, metadata !DIExpression()), !dbg !15155
  %147 = load i32, i32* %quad, align 4, !dbg !15156
  %tobool189 = icmp ne i32 %147, 0, !dbg !15156
  br i1 %tobool189, label %if.then190, label %if.end198, !dbg !15158

if.then190:                                       ; preds = %if.then172
  %148 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15159
  %index191 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15161
  %149 = load i32, i32* %index191, align 4, !dbg !15161
  %idxprom192 = sext i32 %149 to i64, !dbg !15159
  %arrayidx193 = getelementptr inbounds %struct.MFace, %struct.MFace* %148, i64 %idxprom192, !dbg !15159
  %v3194 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx193, i32 0, i32 2, !dbg !15162
  %150 = load i32, i32* %v3194, align 4, !dbg !15162
  store i32 %150, i32* %v2, align 4, !dbg !15163
  %151 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15164
  %index195 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15165
  %152 = load i32, i32* %index195, align 4, !dbg !15165
  %idxprom196 = sext i32 %152 to i64, !dbg !15164
  %arrayidx197 = getelementptr inbounds %struct.MFace, %struct.MFace* %151, i64 %idxprom196, !dbg !15164
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx197, i32 0, i32 3, !dbg !15166
  %153 = load i32, i32* %v4, align 4, !dbg !15166
  store i32 %153, i32* %v3, align 4, !dbg !15167
  br label %if.end198, !dbg !15168

if.end198:                                        ; preds = %if.then190, %if.then172
  %no199 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15169
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %no199, i64 0, i64 0, !dbg !15170
  %154 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15171
  %155 = load i32, i32* %v1, align 4, !dbg !15172
  %idxprom201 = sext i32 %155 to i64, !dbg !15171
  %arrayidx202 = getelementptr inbounds %struct.MVert, %struct.MVert* %154, i64 %idxprom201, !dbg !15171
  %co203 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx202, i32 0, i32 0, !dbg !15173
  %arraydecay204 = getelementptr inbounds [3 x float], [3 x float]* %co203, i64 0, i64 0, !dbg !15171
  %156 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15174
  %157 = load i32, i32* %v2, align 4, !dbg !15175
  %idxprom205 = sext i32 %157 to i64, !dbg !15174
  %arrayidx206 = getelementptr inbounds %struct.MVert, %struct.MVert* %156, i64 %idxprom205, !dbg !15174
  %co207 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx206, i32 0, i32 0, !dbg !15176
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %co207, i64 0, i64 0, !dbg !15174
  %158 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15177
  %159 = load i32, i32* %v3, align 4, !dbg !15178
  %idxprom209 = sext i32 %159 to i64, !dbg !15177
  %arrayidx210 = getelementptr inbounds %struct.MVert, %struct.MVert* %158, i64 %idxprom209, !dbg !15177
  %co211 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx210, i32 0, i32 0, !dbg !15179
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %co211, i64 0, i64 0, !dbg !15177
  %call213 = call float @normal_tri_v3(float* %arraydecay200, float* %arraydecay204, float* %arraydecay208, float* %arraydecay212), !dbg !15180
  %arrayidx214 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15181
  %160 = load float, float* %arrayidx214, align 4, !dbg !15181
  %no215 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15182
  %arrayidx216 = getelementptr inbounds [3 x float], [3 x float]* %no215, i64 0, i64 0, !dbg !15183
  %161 = load float, float* %arrayidx216, align 4, !dbg !15183
  %mul217 = fmul float %160, %161, !dbg !15184
  %arrayidx218 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 1, !dbg !15185
  %162 = load float, float* %arrayidx218, align 4, !dbg !15185
  %no219 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15186
  %arrayidx220 = getelementptr inbounds [3 x float], [3 x float]* %no219, i64 0, i64 1, !dbg !15187
  %163 = load float, float* %arrayidx220, align 4, !dbg !15187
  %mul221 = fmul float %162, %163, !dbg !15188
  %add222 = fadd float %mul217, %mul221, !dbg !15189
  %arrayidx223 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 2, !dbg !15190
  %164 = load float, float* %arrayidx223, align 4, !dbg !15190
  %no224 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15191
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %no224, i64 0, i64 2, !dbg !15192
  %165 = load float, float* %arrayidx225, align 4, !dbg !15192
  %mul226 = fmul float %164, %165, !dbg !15193
  %add227 = fadd float %add222, %mul226, !dbg !15194
  store float %add227, float* %dot, align 4, !dbg !15195
  %166 = load float, float* %dot, align 4, !dbg !15196
  %cmp228 = fcmp oge float %166, 0.000000e+00, !dbg !15198
  br i1 %cmp228, label %if.then230, label %if.end253, !dbg !15199

if.then230:                                       ; preds = %if.end198
  call void @llvm.dbg.declare(metadata float* %dist231, metadata !15200, metadata !DIExpression()), !dbg !15202
  %dist232 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15203
  %167 = load float, float* %dist232, align 4, !dbg !15203
  store float %167, float* %dist231, align 4, !dbg !15202
  call void @llvm.dbg.declare(metadata i32* %f_index, metadata !15204, metadata !DIExpression()), !dbg !15205
  %index233 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15206
  %168 = load i32, i32* %index233, align 4, !dbg !15206
  store i32 %168, i32* %f_index, align 4, !dbg !15205
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15207
  call void @negate_v3(float* %arraydecay234), !dbg !15208
  %index235 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15209
  store i32 -1, i32* %index235, align 4, !dbg !15210
  %dist236 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15211
  store float 9.999000e+03, float* %dist236, align 4, !dbg !15212
  %tree237 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !15213
  %169 = load %struct.BVHTree*, %struct.BVHTree** %tree237, align 8, !dbg !15213
  %arraydecay238 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15214
  %arraydecay239 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15215
  %170 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !15216
  %call240 = call i32 @BLI_bvhtree_ray_cast(%struct.BVHTree* %169, float* %arraydecay238, float* %arraydecay239, float 0.000000e+00, %struct.BVHTreeRayHit* %hit, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* @mesh_faces_spherecast_dp, i8* %170), !dbg !15217
  %index241 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15218
  %171 = load i32, i32* %index241, align 4, !dbg !15218
  %cmp242 = icmp ne i32 %171, -1, !dbg !15220
  br i1 %cmp242, label %if.then244, label %if.end252, !dbg !15221

if.then244:                                       ; preds = %if.then230
  store float 1.000000e+00, float* %volume_factor, align 4, !dbg !15222
  store i16 1, i16* %hit_found, align 2, !dbg !15224
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %hitCoord, i64 0, i64 0, !dbg !15225
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15226
  %arraydecay247 = getelementptr inbounds [3 x float], [3 x float]* %ray_dir, i64 0, i64 0, !dbg !15227
  %dist248 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15228
  %172 = load float, float* %dist248, align 4, !dbg !15228
  call void @madd_v3_v3v3fl(float* %arraydecay245, float* %arraydecay246, float* %arraydecay247, float %172), !dbg !15229
  %173 = load float, float* %dist231, align 4, !dbg !15230
  %174 = load float, float* %sample_factor, align 4, !dbg !15231
  %mul249 = fmul float %173, %174, !dbg !15232
  %175 = load float, float* %depth, align 4, !dbg !15233
  %add250 = fadd float %175, %mul249, !dbg !15233
  store float %add250, float* %depth, align 4, !dbg !15233
  %176 = load i32, i32* %f_index, align 4, !dbg !15234
  store i32 %176, i32* %hitFace, align 4, !dbg !15235
  %177 = load i32, i32* %quad, align 4, !dbg !15236
  %conv251 = trunc i32 %177 to i16, !dbg !15236
  store i16 %conv251, i16* %hitQuad, align 2, !dbg !15237
  br label %if.end252, !dbg !15238

if.end252:                                        ; preds = %if.then244, %if.then230
  br label %if.end253, !dbg !15239

if.end253:                                        ; preds = %if.end252, %if.end198
  br label %if.end254, !dbg !15240

if.end254:                                        ; preds = %if.end253, %if.then166
  br label %if.end255, !dbg !15241

if.end255:                                        ; preds = %if.end254, %lor.lhs.false162
  %178 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15242
  %collision256 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %178, i32 0, i32 5, !dbg !15244
  %179 = load i32, i32* %collision256, align 4, !dbg !15244
  %cmp257 = icmp eq i32 %179, 1, !dbg !15245
  br i1 %cmp257, label %land.lhs.true263, label %lor.lhs.false259, !dbg !15246

lor.lhs.false259:                                 ; preds = %if.end255
  %180 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15247
  %collision260 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %180, i32 0, i32 5, !dbg !15248
  %181 = load i32, i32* %collision260, align 4, !dbg !15248
  %cmp261 = icmp eq i32 %181, 2, !dbg !15249
  br i1 %cmp261, label %land.lhs.true263, label %if.end370, !dbg !15250

land.lhs.true263:                                 ; preds = %lor.lhs.false259, %if.end255
  %182 = load i16, i16* %hit_found, align 2, !dbg !15251
  %tobool264 = icmp ne i16 %182, 0, !dbg !15251
  br i1 %tobool264, label %lor.lhs.false265, label %if.then269, !dbg !15252

lor.lhs.false265:                                 ; preds = %land.lhs.true263
  %183 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15253
  %flags266 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %183, i32 0, i32 4, !dbg !15254
  %184 = load i32, i32* %flags266, align 8, !dbg !15254
  %and267 = and i32 %184, 64, !dbg !15255
  %tobool268 = icmp ne i32 %and267, 0, !dbg !15255
  br i1 %tobool268, label %if.then269, label %if.end370, !dbg !15256

if.then269:                                       ; preds = %lor.lhs.false265, %land.lhs.true263
  call void @llvm.dbg.declare(metadata float* %proxDist, metadata !15257, metadata !DIExpression()), !dbg !15259
  store float -1.000000e+00, float* %proxDist, align 4, !dbg !15259
  call void @llvm.dbg.declare(metadata [3 x float]* %hitCo, metadata !15260, metadata !DIExpression()), !dbg !15261
  %185 = bitcast [3 x float]* %hitCo to i8*, !dbg !15261
  call void @llvm.memset.p0i8.i64(i8* align 4 %185, i8 0, i64 12, i1 false), !dbg !15261
  call void @llvm.dbg.declare(metadata i16* %hQuad, metadata !15262, metadata !DIExpression()), !dbg !15263
  call void @llvm.dbg.declare(metadata i32* %face, metadata !15264, metadata !DIExpression()), !dbg !15265
  %186 = load i32, i32* %inner_proximity, align 4, !dbg !15266
  %tobool270 = icmp ne i32 %186, 0, !dbg !15266
  br i1 %tobool270, label %land.lhs.true271, label %if.end274, !dbg !15268

land.lhs.true271:                                 ; preds = %if.then269
  %187 = load i16, i16* %hit_found, align 2, !dbg !15269
  %tobool272 = icmp ne i16 %187, 0, !dbg !15269
  br i1 %tobool272, label %if.end274, label %if.then273, !dbg !15270

if.then273:                                       ; preds = %land.lhs.true271
  br label %for.inc588, !dbg !15271

if.end274:                                        ; preds = %land.lhs.true271, %if.then269
  %188 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15272
  %flags275 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %188, i32 0, i32 4, !dbg !15274
  %189 = load i32, i32* %flags275, align 8, !dbg !15274
  %and276 = and i32 %189, 32, !dbg !15275
  %tobool277 = icmp ne i32 %and276, 0, !dbg !15275
  br i1 %tobool277, label %if.else297, label %if.then278, !dbg !15276

if.then278:                                       ; preds = %if.end274
  %tree279 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !15277
  %190 = load %struct.BVHTree*, %struct.BVHTree** %tree279, align 8, !dbg !15277
  %arraydecay280 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15280
  %191 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !15281
  %call281 = call i32 @BLI_bvhtree_find_nearest(%struct.BVHTree* %190, float* %arraydecay280, %struct.BVHTreeNearest* %nearest, void (i8*, i32, float*, %struct.BVHTreeNearest*)* @mesh_faces_nearest_point_dp, i8* %191), !dbg !15282
  %cmp282 = icmp ne i32 %call281, -1, !dbg !15283
  br i1 %cmp282, label %if.then284, label %if.end296, !dbg !15284

if.then284:                                       ; preds = %if.then278
  %dist_sq285 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 3, !dbg !15285
  %192 = load float, float* %dist_sq285, align 4, !dbg !15285
  %call286 = call float @sqrtf(float %192) #7, !dbg !15287
  store float %call286, float* %proxDist, align 4, !dbg !15288
  %arraydecay287 = getelementptr inbounds [3 x float], [3 x float]* %hitCo, i64 0, i64 0, !dbg !15289
  %co288 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 1, !dbg !15290
  %arraydecay289 = getelementptr inbounds [3 x float], [3 x float]* %co288, i64 0, i64 0, !dbg !15291
  call void @copy_v3_v3(float* %arraydecay287, float* %arraydecay289), !dbg !15292
  %no290 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 2, !dbg !15293
  %arrayidx291 = getelementptr inbounds [3 x float], [3 x float]* %no290, i64 0, i64 0, !dbg !15294
  %193 = load float, float* %arrayidx291, align 4, !dbg !15294
  %cmp292 = fcmp oeq float %193, 1.000000e+00, !dbg !15295
  %conv293 = zext i1 %cmp292 to i32, !dbg !15295
  %conv294 = trunc i32 %conv293 to i16, !dbg !15296
  store i16 %conv294, i16* %hQuad, align 2, !dbg !15297
  %index295 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %nearest, i32 0, i32 0, !dbg !15298
  %194 = load i32, i32* %index295, align 4, !dbg !15298
  store i32 %194, i32* %face, align 4, !dbg !15299
  br label %if.end296, !dbg !15300

if.end296:                                        ; preds = %if.then284, %if.then278
  br label %if.end343, !dbg !15301

if.else297:                                       ; preds = %if.end274
  call void @llvm.dbg.declare(metadata [3 x float]* %proj_ray, metadata !15302, metadata !DIExpression()), !dbg !15304
  %195 = bitcast [3 x float]* %proj_ray to i8*, !dbg !15304
  call void @llvm.memset.p0i8.i64(i8* align 4 %195, i8 0, i64 12, i1 false), !dbg !15304
  %196 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15305
  %ray_dir298 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %196, i32 0, i32 18, !dbg !15307
  %197 = load i16, i16* %ray_dir298, align 4, !dbg !15307
  %conv299 = sext i16 %197 to i32, !dbg !15305
  %cmp300 = icmp eq i32 %conv299, 0, !dbg !15308
  br i1 %cmp300, label %if.then302, label %if.else310, !dbg !15309

if.then302:                                       ; preds = %if.else297
  %arraydecay303 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 0, !dbg !15310
  %198 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15312
  %bNormal304 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %198, i32 0, i32 0, !dbg !15313
  %199 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal304, align 8, !dbg !15313
  %200 = load i32, i32* %index, align 4, !dbg !15314
  %idxprom305 = sext i32 %200 to i64, !dbg !15312
  %arrayidx306 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %199, i64 %idxprom305, !dbg !15312
  %invNorm307 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx306, i32 0, i32 0, !dbg !15315
  %arraydecay308 = getelementptr inbounds [3 x float], [3 x float]* %invNorm307, i64 0, i64 0, !dbg !15312
  call void @copy_v3_v3(float* %arraydecay303, float* %arraydecay308), !dbg !15316
  %arraydecay309 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 0, !dbg !15317
  call void @negate_v3(float* %arraydecay309), !dbg !15318
  br label %if.end321, !dbg !15319

if.else310:                                       ; preds = %if.else297
  %201 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15320
  %ray_dir311 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %201, i32 0, i32 18, !dbg !15322
  %202 = load i16, i16* %ray_dir311, align 4, !dbg !15322
  %conv312 = sext i16 %202 to i32, !dbg !15320
  %cmp313 = icmp eq i32 %conv312, 1, !dbg !15323
  br i1 %cmp313, label %if.then315, label %if.else318, !dbg !15324

if.then315:                                       ; preds = %if.else310
  %arraydecay316 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 0, !dbg !15325
  %arraydecay317 = getelementptr inbounds [3 x float], [3 x float]* %avg_brushNor, i64 0, i64 0, !dbg !15327
  call void @copy_v3_v3(float* %arraydecay316, float* %arraydecay317), !dbg !15328
  br label %if.end320, !dbg !15329

if.else318:                                       ; preds = %if.else310
  %arrayidx319 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 2, !dbg !15330
  store float 1.000000e+00, float* %arrayidx319, align 4, !dbg !15332
  br label %if.end320

if.end320:                                        ; preds = %if.else318, %if.then315
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then302
  %index322 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15333
  store i32 -1, i32* %index322, align 4, !dbg !15334
  %203 = load float, float* %brush_radius, align 4, !dbg !15335
  %dist323 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15336
  store float %203, float* %dist323, align 4, !dbg !15337
  %tree324 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %treeData, i32 0, i32 0, !dbg !15338
  %204 = load %struct.BVHTree*, %struct.BVHTree** %tree324, align 8, !dbg !15338
  %arraydecay325 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15340
  %arraydecay326 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 0, !dbg !15341
  %205 = bitcast %struct.BVHTreeFromMesh* %treeData to i8*, !dbg !15342
  %call327 = call i32 @BLI_bvhtree_ray_cast(%struct.BVHTree* %204, float* %arraydecay325, float* %arraydecay326, float 0.000000e+00, %struct.BVHTreeRayHit* %hit, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)* @mesh_faces_spherecast_dp, i8* %205), !dbg !15343
  %cmp328 = icmp ne i32 %call327, -1, !dbg !15344
  br i1 %cmp328, label %if.then330, label %if.end342, !dbg !15345

if.then330:                                       ; preds = %if.end321
  %dist331 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15346
  %206 = load float, float* %dist331, align 4, !dbg !15346
  store float %206, float* %proxDist, align 4, !dbg !15348
  %arraydecay332 = getelementptr inbounds [3 x float], [3 x float]* %hitCo, i64 0, i64 0, !dbg !15349
  %arraydecay333 = getelementptr inbounds [3 x float], [3 x float]* %ray_start, i64 0, i64 0, !dbg !15350
  %arraydecay334 = getelementptr inbounds [3 x float], [3 x float]* %proj_ray, i64 0, i64 0, !dbg !15351
  %dist335 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 3, !dbg !15352
  %207 = load float, float* %dist335, align 4, !dbg !15352
  call void @madd_v3_v3v3fl(float* %arraydecay332, float* %arraydecay333, float* %arraydecay334, float %207), !dbg !15353
  %no336 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 2, !dbg !15354
  %arrayidx337 = getelementptr inbounds [3 x float], [3 x float]* %no336, i64 0, i64 0, !dbg !15355
  %208 = load float, float* %arrayidx337, align 4, !dbg !15355
  %cmp338 = fcmp oeq float %208, 1.000000e+00, !dbg !15356
  %conv339 = zext i1 %cmp338 to i32, !dbg !15356
  %conv340 = trunc i32 %conv339 to i16, !dbg !15357
  store i16 %conv340, i16* %hQuad, align 2, !dbg !15358
  %index341 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %hit, i32 0, i32 0, !dbg !15359
  %209 = load i32, i32* %index341, align 4, !dbg !15359
  store i32 %209, i32* %face, align 4, !dbg !15360
  br label %if.end342, !dbg !15361

if.end342:                                        ; preds = %if.then330, %if.end321
  br label %if.end343

if.end343:                                        ; preds = %if.end342, %if.end296
  %210 = load float, float* %proxDist, align 4, !dbg !15362
  %cmp344 = fcmp oge float %210, 0.000000e+00, !dbg !15364
  br i1 %cmp344, label %land.lhs.true346, label %if.end369, !dbg !15365

land.lhs.true346:                                 ; preds = %if.end343
  %211 = load float, float* %proxDist, align 4, !dbg !15366
  %212 = load float, float* %brush_radius, align 4, !dbg !15367
  %cmp347 = fcmp ole float %211, %212, !dbg !15368
  br i1 %cmp347, label %if.then349, label %if.end369, !dbg !15369

if.then349:                                       ; preds = %land.lhs.true346
  %213 = load float, float* %proxDist, align 4, !dbg !15370
  %214 = load float, float* %brush_radius, align 4, !dbg !15372
  %div350 = fdiv float %213, %214, !dbg !15373
  store float %div350, float* %proximity_factor, align 4, !dbg !15374
  %215 = load float, float* %proximity_factor, align 4, !dbg !15375
  %cmp351 = fcmp olt float %215, 0.000000e+00, !dbg !15375
  br i1 %cmp351, label %if.then353, label %if.else354, !dbg !15378

if.then353:                                       ; preds = %if.then349
  store float 0.000000e+00, float* %proximity_factor, align 4, !dbg !15375
  br label %if.end359, !dbg !15375

if.else354:                                       ; preds = %if.then349
  %216 = load float, float* %proximity_factor, align 4, !dbg !15379
  %cmp355 = fcmp ogt float %216, 1.000000e+00, !dbg !15379
  br i1 %cmp355, label %if.then357, label %if.end358, !dbg !15375

if.then357:                                       ; preds = %if.else354
  store float 1.000000e+00, float* %proximity_factor, align 4, !dbg !15379
  br label %if.end358, !dbg !15379

if.end358:                                        ; preds = %if.then357, %if.else354
  br label %if.end359

if.end359:                                        ; preds = %if.end358, %if.then353
  %217 = load i32, i32* %inner_proximity, align 4, !dbg !15381
  %tobool360 = icmp ne i32 %217, 0, !dbg !15381
  br i1 %tobool360, label %if.end362, label %if.then361, !dbg !15383

if.then361:                                       ; preds = %if.end359
  %218 = load float, float* %proximity_factor, align 4, !dbg !15384
  %sub = fsub float 1.000000e+00, %218, !dbg !15385
  store float %sub, float* %proximity_factor, align 4, !dbg !15386
  br label %if.end362, !dbg !15387

if.end362:                                        ; preds = %if.then361, %if.end359
  store i16 2, i16* %hit_found, align 2, !dbg !15388
  %219 = load i32, i32* %hitFace, align 4, !dbg !15389
  %cmp363 = icmp eq i32 %219, -1, !dbg !15391
  br i1 %cmp363, label %if.then365, label %if.end368, !dbg !15392

if.then365:                                       ; preds = %if.end362
  %arraydecay366 = getelementptr inbounds [3 x float], [3 x float]* %hitCoord, i64 0, i64 0, !dbg !15393
  %arraydecay367 = getelementptr inbounds [3 x float], [3 x float]* %hitCo, i64 0, i64 0, !dbg !15395
  call void @copy_v3_v3(float* %arraydecay366, float* %arraydecay367), !dbg !15396
  %220 = load i16, i16* %hQuad, align 2, !dbg !15397
  store i16 %220, i16* %hitQuad, align 2, !dbg !15398
  %221 = load i32, i32* %face, align 4, !dbg !15399
  store i32 %221, i32* %hitFace, align 4, !dbg !15400
  br label %if.end368, !dbg !15401

if.end368:                                        ; preds = %if.then365, %if.end362
  br label %if.end369, !dbg !15402

if.end369:                                        ; preds = %if.end368, %land.lhs.true346, %if.end343
  br label %if.end370, !dbg !15403

if.end370:                                        ; preds = %if.end369, %lor.lhs.false265, %lor.lhs.false259
  %222 = load i16, i16* %hit_found, align 2, !dbg !15404
  %tobool371 = icmp ne i16 %222, 0, !dbg !15404
  br i1 %tobool371, label %if.then372, label %if.else423, !dbg !15406

if.then372:                                       ; preds = %if.end370
  %223 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15407
  %collision373 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %223, i32 0, i32 5, !dbg !15410
  %224 = load i32, i32* %collision373, align 4, !dbg !15410
  %cmp374 = icmp eq i32 %224, 2, !dbg !15411
  br i1 %cmp374, label %land.lhs.true376, label %if.end386, !dbg !15412

land.lhs.true376:                                 ; preds = %if.then372
  %225 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15413
  %flags377 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %225, i32 0, i32 4, !dbg !15414
  %226 = load i32, i32* %flags377, align 8, !dbg !15414
  %and378 = and i32 %226, 128, !dbg !15415
  %tobool379 = icmp ne i32 %and378, 0, !dbg !15415
  br i1 %tobool379, label %if.then380, label %if.end386, !dbg !15416

if.then380:                                       ; preds = %land.lhs.true376
  %227 = load float, float* %volume_factor, align 4, !dbg !15417
  %sub381 = fsub float 1.000000e+00, %227, !dbg !15419
  store float %sub381, float* %volume_factor, align 4, !dbg !15420
  %228 = load i32, i32* %inner_proximity, align 4, !dbg !15421
  %tobool382 = icmp ne i32 %228, 0, !dbg !15421
  br i1 %tobool382, label %if.then383, label %if.end385, !dbg !15423

if.then383:                                       ; preds = %if.then380
  %229 = load float, float* %proximity_factor, align 4, !dbg !15424
  %sub384 = fsub float 1.000000e+00, %229, !dbg !15425
  store float %sub384, float* %proximity_factor, align 4, !dbg !15426
  br label %if.end385, !dbg !15427

if.end385:                                        ; preds = %if.then383, %if.then380
  br label %if.end386, !dbg !15428

if.end386:                                        ; preds = %if.end385, %land.lhs.true376, %if.then372
  %230 = load i16, i16* %hit_found, align 2, !dbg !15429
  %conv387 = sext i16 %230 to i32, !dbg !15429
  %cmp388 = icmp eq i32 %conv387, 1, !dbg !15431
  br i1 %cmp388, label %if.then390, label %if.else391, !dbg !15432

if.then390:                                       ; preds = %if.end386
  %231 = load float, float* %volume_factor, align 4, !dbg !15433
  store float %231, float* %sampleStrength, align 4, !dbg !15435
  br label %if.end421, !dbg !15436

if.else391:                                       ; preds = %if.end386
  %232 = load i16, i16* %hit_found, align 2, !dbg !15437
  %conv392 = sext i16 %232 to i32, !dbg !15437
  %cmp393 = icmp eq i32 %conv392, 2, !dbg !15439
  br i1 %cmp393, label %if.then395, label %if.end420, !dbg !15440

if.then395:                                       ; preds = %if.else391
  %233 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15441
  %proximity_falloff = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %233, i32 0, i32 16, !dbg !15444
  %234 = load i16, i16* %proximity_falloff, align 8, !dbg !15444
  %conv396 = sext i16 %234 to i32, !dbg !15441
  %cmp397 = icmp eq i32 %conv396, 2, !dbg !15445
  br i1 %cmp397, label %land.lhs.true399, label %if.else407, !dbg !15446

land.lhs.true399:                                 ; preds = %if.then395
  %235 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15447
  %paint_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %235, i32 0, i32 14, !dbg !15448
  %236 = load %struct.ColorBand*, %struct.ColorBand** %paint_ramp, align 8, !dbg !15448
  %237 = load float, float* %proximity_factor, align 4, !dbg !15449
  %sub400 = fsub float 1.000000e+00, %237, !dbg !15450
  %arraydecay401 = getelementptr inbounds [4 x float], [4 x float]* %prox_colorband, i64 0, i64 0, !dbg !15451
  %call402 = call zeroext i8 @do_colorband(%struct.ColorBand* %236, float %sub400, float* %arraydecay401), !dbg !15452
  %conv403 = zext i8 %call402 to i32, !dbg !15452
  %tobool404 = icmp ne i32 %conv403, 0, !dbg !15452
  br i1 %tobool404, label %if.then405, label %if.else407, !dbg !15453

if.then405:                                       ; preds = %land.lhs.true399
  %arrayidx406 = getelementptr inbounds [4 x float], [4 x float]* %prox_colorband, i64 0, i64 3, !dbg !15454
  %238 = load float, float* %arrayidx406, align 4, !dbg !15454
  store float %238, float* %proximity_factor, align 4, !dbg !15455
  br label %if.end419, !dbg !15456

if.else407:                                       ; preds = %land.lhs.true399, %if.then395
  %239 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15457
  %proximity_falloff408 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %239, i32 0, i32 16, !dbg !15459
  %240 = load i16, i16* %proximity_falloff408, align 8, !dbg !15459
  %conv409 = sext i16 %240 to i32, !dbg !15457
  %cmp410 = icmp eq i32 %conv409, 0, !dbg !15460
  br i1 %cmp410, label %if.then412, label %if.end418, !dbg !15461

if.then412:                                       ; preds = %if.else407
  %241 = load i32, i32* %inner_proximity, align 4, !dbg !15462
  %tobool413 = icmp ne i32 %241, 0, !dbg !15462
  br i1 %tobool413, label %lor.rhs, label %lor.end, !dbg !15463

lor.rhs:                                          ; preds = %if.then412
  %242 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15464
  %flags414 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %242, i32 0, i32 4, !dbg !15465
  %243 = load i32, i32* %flags414, align 8, !dbg !15465
  %and415 = and i32 %243, 128, !dbg !15466
  %tobool416 = icmp ne i32 %and415, 0, !dbg !15463
  br label %lor.end, !dbg !15463

lor.end:                                          ; preds = %lor.rhs, %if.then412
  %244 = phi i1 [ true, %if.then412 ], [ %tobool416, %lor.rhs ]
  %245 = zext i1 %244 to i64, !dbg !15467
  %cond417 = select i1 %244, float 1.000000e+00, float 0.000000e+00, !dbg !15467
  store float %cond417, float* %proximity_factor, align 4, !dbg !15468
  br label %if.end418, !dbg !15469

if.end418:                                        ; preds = %lor.end, %if.else407
  br label %if.end419

if.end419:                                        ; preds = %if.end418, %if.then405
  %246 = load float, float* %proximity_factor, align 4, !dbg !15470
  store float %246, float* %sampleStrength, align 4, !dbg !15471
  br label %if.end420, !dbg !15472

if.end420:                                        ; preds = %if.end419, %if.else391
  br label %if.end421

if.end421:                                        ; preds = %if.end420, %if.then390
  %247 = load float, float* %sample_factor, align 4, !dbg !15473
  %248 = load float, float* %sampleStrength, align 4, !dbg !15474
  %mul422 = fmul float %248, %247, !dbg !15474
  store float %mul422, float* %sampleStrength, align 4, !dbg !15474
  br label %if.end424, !dbg !15475

if.else423:                                       ; preds = %if.end370
  br label %for.inc588, !dbg !15476

if.end424:                                        ; preds = %if.end421
  %249 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15478
  %flags425 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %249, i32 0, i32 4, !dbg !15480
  %250 = load i32, i32* %flags425, align 8, !dbg !15480
  %and426 = and i32 %250, 3840, !dbg !15481
  %tobool427 = icmp ne i32 %and426, 0, !dbg !15481
  br i1 %tobool427, label %land.lhs.true428, label %if.end529, !dbg !15482

land.lhs.true428:                                 ; preds = %if.end424
  %251 = load i32, i32* %ss, align 4, !dbg !15483
  %cmp429 = icmp eq i32 %251, 0, !dbg !15484
  br i1 %cmp429, label %land.lhs.true431, label %if.end529, !dbg !15485

land.lhs.true431:                                 ; preds = %land.lhs.true428
  %252 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15486
  %tobool432 = icmp ne %struct.Vec3f* %252, null, !dbg !15486
  br i1 %tobool432, label %if.then433, label %if.end529, !dbg !15487

if.then433:                                       ; preds = %land.lhs.true431
  call void @llvm.dbg.declare(metadata i32* %v1434, metadata !15488, metadata !DIExpression()), !dbg !15490
  call void @llvm.dbg.declare(metadata i32* %v2435, metadata !15491, metadata !DIExpression()), !dbg !15492
  call void @llvm.dbg.declare(metadata i32* %v3436, metadata !15493, metadata !DIExpression()), !dbg !15494
  call void @llvm.dbg.declare(metadata [4 x float]* %weights, metadata !15495, metadata !DIExpression()), !dbg !15496
  call void @llvm.dbg.declare(metadata [3 x float]* %brushPointVelocity, metadata !15497, metadata !DIExpression()), !dbg !15498
  call void @llvm.dbg.declare(metadata [3 x float]* %velocity, metadata !15499, metadata !DIExpression()), !dbg !15500
  %253 = load i16, i16* %hitQuad, align 2, !dbg !15501
  %tobool437 = icmp ne i16 %253, 0, !dbg !15501
  br i1 %tobool437, label %if.else448, label %if.then438, !dbg !15503

if.then438:                                       ; preds = %if.then433
  %254 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15504
  %255 = load i32, i32* %hitFace, align 4, !dbg !15506
  %idxprom439 = sext i32 %255 to i64, !dbg !15504
  %arrayidx440 = getelementptr inbounds %struct.MFace, %struct.MFace* %254, i64 %idxprom439, !dbg !15504
  %v1441 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx440, i32 0, i32 0, !dbg !15507
  %256 = load i32, i32* %v1441, align 4, !dbg !15507
  store i32 %256, i32* %v1434, align 4, !dbg !15508
  %257 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15509
  %258 = load i32, i32* %hitFace, align 4, !dbg !15510
  %idxprom442 = sext i32 %258 to i64, !dbg !15509
  %arrayidx443 = getelementptr inbounds %struct.MFace, %struct.MFace* %257, i64 %idxprom442, !dbg !15509
  %v2444 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx443, i32 0, i32 1, !dbg !15511
  %259 = load i32, i32* %v2444, align 4, !dbg !15511
  store i32 %259, i32* %v2435, align 4, !dbg !15512
  %260 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15513
  %261 = load i32, i32* %hitFace, align 4, !dbg !15514
  %idxprom445 = sext i32 %261 to i64, !dbg !15513
  %arrayidx446 = getelementptr inbounds %struct.MFace, %struct.MFace* %260, i64 %idxprom445, !dbg !15513
  %v3447 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx446, i32 0, i32 2, !dbg !15515
  %262 = load i32, i32* %v3447, align 4, !dbg !15515
  store i32 %262, i32* %v3436, align 4, !dbg !15516
  br label %if.end458, !dbg !15517

if.else448:                                       ; preds = %if.then433
  %263 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15518
  %264 = load i32, i32* %hitFace, align 4, !dbg !15520
  %idxprom449 = sext i32 %264 to i64, !dbg !15518
  %arrayidx450 = getelementptr inbounds %struct.MFace, %struct.MFace* %263, i64 %idxprom449, !dbg !15518
  %v2451 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx450, i32 0, i32 1, !dbg !15521
  %265 = load i32, i32* %v2451, align 4, !dbg !15521
  store i32 %265, i32* %v1434, align 4, !dbg !15522
  %266 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15523
  %267 = load i32, i32* %hitFace, align 4, !dbg !15524
  %idxprom452 = sext i32 %267 to i64, !dbg !15523
  %arrayidx453 = getelementptr inbounds %struct.MFace, %struct.MFace* %266, i64 %idxprom452, !dbg !15523
  %v3454 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx453, i32 0, i32 2, !dbg !15525
  %268 = load i32, i32* %v3454, align 4, !dbg !15525
  store i32 %268, i32* %v2435, align 4, !dbg !15526
  %269 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !15527
  %270 = load i32, i32* %hitFace, align 4, !dbg !15528
  %idxprom455 = sext i32 %270 to i64, !dbg !15527
  %arrayidx456 = getelementptr inbounds %struct.MFace, %struct.MFace* %269, i64 %idxprom455, !dbg !15527
  %v4457 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx456, i32 0, i32 3, !dbg !15529
  %271 = load i32, i32* %v4457, align 4, !dbg !15529
  store i32 %271, i32* %v3436, align 4, !dbg !15530
  br label %if.end458

if.end458:                                        ; preds = %if.else448, %if.then438
  %arraydecay459 = getelementptr inbounds [4 x float], [4 x float]* %weights, i64 0, i64 0, !dbg !15531
  %272 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15532
  %273 = load i32, i32* %v1434, align 4, !dbg !15533
  %idxprom460 = sext i32 %273 to i64, !dbg !15532
  %arrayidx461 = getelementptr inbounds %struct.MVert, %struct.MVert* %272, i64 %idxprom460, !dbg !15532
  %co462 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx461, i32 0, i32 0, !dbg !15534
  %arraydecay463 = getelementptr inbounds [3 x float], [3 x float]* %co462, i64 0, i64 0, !dbg !15532
  %274 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15535
  %275 = load i32, i32* %v2435, align 4, !dbg !15536
  %idxprom464 = sext i32 %275 to i64, !dbg !15535
  %arrayidx465 = getelementptr inbounds %struct.MVert, %struct.MVert* %274, i64 %idxprom464, !dbg !15535
  %co466 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx465, i32 0, i32 0, !dbg !15537
  %arraydecay467 = getelementptr inbounds [3 x float], [3 x float]* %co466, i64 0, i64 0, !dbg !15535
  %276 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15538
  %277 = load i32, i32* %v3436, align 4, !dbg !15539
  %idxprom468 = sext i32 %277 to i64, !dbg !15538
  %arrayidx469 = getelementptr inbounds %struct.MVert, %struct.MVert* %276, i64 %idxprom468, !dbg !15538
  %co470 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx469, i32 0, i32 0, !dbg !15540
  %arraydecay471 = getelementptr inbounds [3 x float], [3 x float]* %co470, i64 0, i64 0, !dbg !15538
  %arraydecay472 = getelementptr inbounds [3 x float], [3 x float]* %hitCoord, i64 0, i64 0, !dbg !15541
  call void @interp_weights_face_v3(float* %arraydecay459, float* %arraydecay463, float* %arraydecay467, float* %arraydecay471, float* null, float* %arraydecay472), !dbg !15542
  %arraydecay473 = getelementptr inbounds [3 x float], [3 x float]* %brushPointVelocity, i64 0, i64 0, !dbg !15543
  %278 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15544
  %279 = load i32, i32* %v1434, align 4, !dbg !15545
  %idxprom474 = sext i32 %279 to i64, !dbg !15544
  %arrayidx475 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %278, i64 %idxprom474, !dbg !15544
  %v476 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx475, i32 0, i32 0, !dbg !15546
  %arraydecay477 = getelementptr inbounds [3 x float], [3 x float]* %v476, i64 0, i64 0, !dbg !15544
  %280 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15547
  %281 = load i32, i32* %v2435, align 4, !dbg !15548
  %idxprom478 = sext i32 %281 to i64, !dbg !15547
  %arrayidx479 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %280, i64 %idxprom478, !dbg !15547
  %v480 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx479, i32 0, i32 0, !dbg !15549
  %arraydecay481 = getelementptr inbounds [3 x float], [3 x float]* %v480, i64 0, i64 0, !dbg !15547
  %282 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15550
  %283 = load i32, i32* %v3436, align 4, !dbg !15551
  %idxprom482 = sext i32 %283 to i64, !dbg !15550
  %arrayidx483 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %282, i64 %idxprom482, !dbg !15550
  %v484 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx483, i32 0, i32 0, !dbg !15552
  %arraydecay485 = getelementptr inbounds [3 x float], [3 x float]* %v484, i64 0, i64 0, !dbg !15550
  %arraydecay486 = getelementptr inbounds [4 x float], [4 x float]* %weights, i64 0, i64 0, !dbg !15553
  call void @interp_v3_v3v3v3(float* %arraydecay473, float* %arraydecay477, float* %arraydecay481, float* %arraydecay485, float* %arraydecay486), !dbg !15554
  %284 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15555
  %velocity487 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %284, i32 0, i32 8, !dbg !15557
  %285 = load %struct.Vec3f*, %struct.Vec3f** %velocity487, align 8, !dbg !15557
  %tobool488 = icmp ne %struct.Vec3f* %285, null, !dbg !15555
  br i1 %tobool488, label %if.then489, label %if.else497, !dbg !15558

if.then489:                                       ; preds = %if.end458
  %arraydecay490 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !15559
  %arraydecay491 = getelementptr inbounds [3 x float], [3 x float]* %brushPointVelocity, i64 0, i64 0, !dbg !15561
  %286 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15562
  %velocity492 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %286, i32 0, i32 8, !dbg !15563
  %287 = load %struct.Vec3f*, %struct.Vec3f** %velocity492, align 8, !dbg !15563
  %288 = load i32, i32* %index, align 4, !dbg !15564
  %idxprom493 = sext i32 %288 to i64, !dbg !15562
  %arrayidx494 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %287, i64 %idxprom493, !dbg !15562
  %v495 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx494, i32 0, i32 0, !dbg !15565
  %arraydecay496 = getelementptr inbounds [3 x float], [3 x float]* %v495, i64 0, i64 0, !dbg !15562
  call void @sub_v3_v3v3(float* %arraydecay490, float* %arraydecay491, float* %arraydecay496), !dbg !15566
  br label %if.end500, !dbg !15567

if.else497:                                       ; preds = %if.end458
  %arraydecay498 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !15568
  %arraydecay499 = getelementptr inbounds [3 x float], [3 x float]* %brushPointVelocity, i64 0, i64 0, !dbg !15570
  call void @copy_v3_v3(float* %arraydecay498, float* %arraydecay499), !dbg !15571
  br label %if.end500

if.end500:                                        ; preds = %if.else497, %if.then489
  %arraydecay501 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !15572
  %call502 = call float @len_v3(float* %arraydecay501), !dbg !15573
  store float %call502, float* %velocity_val, align 4, !dbg !15574
  %289 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15575
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %289, i32 0, i32 11, !dbg !15577
  %290 = load i16, i16* %type, align 2, !dbg !15577
  %conv503 = sext i16 %290 to i32, !dbg !15575
  %cmp504 = icmp eq i32 %conv503, 0, !dbg !15578
  br i1 %cmp504, label %land.lhs.true506, label %if.end528, !dbg !15579

land.lhs.true506:                                 ; preds = %if.end500
  %291 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15580
  %flags507 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %291, i32 0, i32 4, !dbg !15581
  %292 = load i32, i32* %flags507, align 8, !dbg !15581
  %and508 = and i32 %292, 256, !dbg !15582
  %tobool509 = icmp ne i32 %and508, 0, !dbg !15582
  br i1 %tobool509, label %land.lhs.true510, label %if.end528, !dbg !15583

land.lhs.true510:                                 ; preds = %land.lhs.true506
  %293 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15584
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %293, i32 0, i32 10, !dbg !15585
  %294 = load float*, float** %brush_velocity, align 8, !dbg !15585
  %tobool511 = icmp ne float* %294, null, !dbg !15584
  br i1 %tobool511, label %if.then512, label %if.end528, !dbg !15586

if.then512:                                       ; preds = %land.lhs.true510
  %295 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15587
  %brush_velocity513 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %295, i32 0, i32 10, !dbg !15589
  %296 = load float*, float** %brush_velocity513, align 8, !dbg !15589
  %297 = load i32, i32* %index, align 4, !dbg !15590
  %mul514 = mul nsw i32 %297, 4, !dbg !15591
  %idxprom515 = sext i32 %mul514 to i64, !dbg !15587
  %arrayidx516 = getelementptr inbounds float, float* %296, i64 %idxprom515, !dbg !15587
  %arraydecay517 = getelementptr inbounds [3 x float], [3 x float]* %velocity, i64 0, i64 0, !dbg !15592
  call void @copy_v3_v3(float* %arrayidx516, float* %arraydecay517), !dbg !15593
  %298 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15594
  %brush_velocity518 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %298, i32 0, i32 10, !dbg !15595
  %299 = load float*, float** %brush_velocity518, align 8, !dbg !15595
  %300 = load i32, i32* %index, align 4, !dbg !15596
  %mul519 = mul nsw i32 %300, 4, !dbg !15597
  %idxprom520 = sext i32 %mul519 to i64, !dbg !15594
  %arrayidx521 = getelementptr inbounds float, float* %299, i64 %idxprom520, !dbg !15594
  %301 = load float, float* %velocity_val, align 4, !dbg !15598
  %div522 = fdiv float 1.000000e+00, %301, !dbg !15599
  call void @mul_v3_fl(float* %arrayidx521, float %div522), !dbg !15600
  %302 = load float, float* %velocity_val, align 4, !dbg !15601
  %303 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15602
  %brush_velocity523 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %303, i32 0, i32 10, !dbg !15603
  %304 = load float*, float** %brush_velocity523, align 8, !dbg !15603
  %305 = load i32, i32* %index, align 4, !dbg !15604
  %mul524 = mul nsw i32 %305, 4, !dbg !15605
  %add525 = add nsw i32 %mul524, 3, !dbg !15606
  %idxprom526 = sext i32 %add525 to i64, !dbg !15602
  %arrayidx527 = getelementptr inbounds float, float* %304, i64 %idxprom526, !dbg !15602
  store float %302, float* %arrayidx527, align 4, !dbg !15607
  br label %if.end528, !dbg !15608

if.end528:                                        ; preds = %if.then512, %land.lhs.true510, %land.lhs.true506, %if.end500
  br label %if.end529, !dbg !15609

if.end529:                                        ; preds = %if.end528, %land.lhs.true431, %land.lhs.true428, %if.end424
  %306 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15610
  %type530 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %306, i32 0, i32 11, !dbg !15612
  %307 = load i16, i16* %type530, align 2, !dbg !15612
  %conv531 = sext i16 %307 to i32, !dbg !15610
  %cmp532 = icmp eq i32 %conv531, 0, !dbg !15613
  br i1 %cmp532, label %if.then534, label %if.end586, !dbg !15614

if.then534:                                       ; preds = %if.end529
  call void @llvm.dbg.declare(metadata [3 x float]* %sampleColor, metadata !15615, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.declare(metadata float* %alpha_factor, metadata !15618, metadata !DIExpression()), !dbg !15619
  store float 1.000000e+00, float* %alpha_factor, align 4, !dbg !15619
  %308 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15620
  %r = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %308, i32 0, i32 6, !dbg !15621
  %309 = load float, float* %r, align 8, !dbg !15621
  %arrayidx535 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 0, !dbg !15622
  store float %309, float* %arrayidx535, align 4, !dbg !15623
  %310 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15624
  %g = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %310, i32 0, i32 7, !dbg !15625
  %311 = load float, float* %g, align 4, !dbg !15625
  %arrayidx536 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 1, !dbg !15626
  store float %311, float* %arrayidx536, align 4, !dbg !15627
  %312 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15628
  %b = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %312, i32 0, i32 8, !dbg !15629
  %313 = load float, float* %b, align 8, !dbg !15629
  %arrayidx537 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 2, !dbg !15630
  store float %313, float* %arrayidx537, align 4, !dbg !15631
  %314 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15632
  %315 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !15634
  %call538 = call i32 @brush_usesMaterial(%struct.DynamicPaintBrushSettings* %314, %struct.Scene* %315), !dbg !15635
  %tobool539 = icmp ne i32 %call538, 0, !dbg !15635
  br i1 %tobool539, label %if.then540, label %if.end553, !dbg !15636

if.then540:                                       ; preds = %if.then534
  %316 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15637
  %arraydecay541 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 0, !dbg !15638
  %317 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !15639
  %318 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15640
  %realCoord542 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %318, i32 0, i32 3, !dbg !15641
  %319 = load %struct.Vec3f*, %struct.Vec3f** %realCoord542, align 8, !dbg !15641
  %320 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15642
  %s_pos543 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %320, i32 0, i32 1, !dbg !15643
  %321 = load i32*, i32** %s_pos543, align 8, !dbg !15643
  %322 = load i32, i32* %index, align 4, !dbg !15644
  %idxprom544 = sext i32 %322 to i64, !dbg !15642
  %arrayidx545 = getelementptr inbounds i32, i32* %321, i64 %idxprom544, !dbg !15642
  %323 = load i32, i32* %arrayidx545, align 4, !dbg !15642
  %324 = load i32, i32* %ss, align 4, !dbg !15645
  %add546 = add nsw i32 %323, %324, !dbg !15646
  %idxprom547 = sext i32 %add546 to i64, !dbg !15640
  %arrayidx548 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %319, i64 %idxprom547, !dbg !15640
  %v549 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx548, i32 0, i32 0, !dbg !15647
  %arraydecay550 = getelementptr inbounds [3 x float], [3 x float]* %v549, i64 0, i64 0, !dbg !15640
  %arraydecay551 = getelementptr inbounds [3 x float], [3 x float]* %hitCoord, i64 0, i64 0, !dbg !15648
  %325 = load i32, i32* %hitFace, align 4, !dbg !15649
  %326 = load i16, i16* %hitQuad, align 2, !dbg !15650
  %327 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15651
  %dm552 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %327, i32 0, i32 1, !dbg !15652
  %328 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm552, align 8, !dbg !15652
  call void @dynamicPaint_doMaterialTex(%struct.BrushMaterials* %316, float* %arraydecay541, float* %alpha_factor, %struct.Object* %317, float* %arraydecay550, float* %arraydecay551, i32 %325, i16 signext %326, %struct.DerivedMesh* %328), !dbg !15653
  br label %if.end553, !dbg !15653

if.end553:                                        ; preds = %if.then540, %if.then534
  %329 = load i16, i16* %hit_found, align 2, !dbg !15654
  %conv554 = sext i16 %329 to i32, !dbg !15654
  %cmp555 = icmp eq i32 %conv554, 2, !dbg !15656
  br i1 %cmp555, label %land.lhs.true557, label %if.end574, !dbg !15657

land.lhs.true557:                                 ; preds = %if.end553
  %330 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15658
  %proximity_falloff558 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %330, i32 0, i32 16, !dbg !15659
  %331 = load i16, i16* %proximity_falloff558, align 8, !dbg !15659
  %conv559 = sext i16 %331 to i32, !dbg !15658
  %cmp560 = icmp eq i32 %conv559, 2, !dbg !15660
  br i1 %cmp560, label %if.then562, label %if.end574, !dbg !15661

if.then562:                                       ; preds = %land.lhs.true557
  %332 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15662
  %flags563 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %332, i32 0, i32 4, !dbg !15665
  %333 = load i32, i32* %flags563, align 8, !dbg !15665
  %and564 = and i32 %333, 16, !dbg !15666
  %tobool565 = icmp ne i32 %and564, 0, !dbg !15666
  br i1 %tobool565, label %if.end573, label %if.then566, !dbg !15667

if.then566:                                       ; preds = %if.then562
  %arrayidx567 = getelementptr inbounds [4 x float], [4 x float]* %prox_colorband, i64 0, i64 0, !dbg !15668
  %334 = load float, float* %arrayidx567, align 16, !dbg !15668
  %arrayidx568 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 0, !dbg !15670
  store float %334, float* %arrayidx568, align 4, !dbg !15671
  %arrayidx569 = getelementptr inbounds [4 x float], [4 x float]* %prox_colorband, i64 0, i64 1, !dbg !15672
  %335 = load float, float* %arrayidx569, align 4, !dbg !15672
  %arrayidx570 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 1, !dbg !15673
  store float %335, float* %arrayidx570, align 4, !dbg !15674
  %arrayidx571 = getelementptr inbounds [4 x float], [4 x float]* %prox_colorband, i64 0, i64 2, !dbg !15675
  %336 = load float, float* %arrayidx571, align 8, !dbg !15675
  %arrayidx572 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 2, !dbg !15676
  store float %336, float* %arrayidx572, align 4, !dbg !15677
  br label %if.end573, !dbg !15678

if.end573:                                        ; preds = %if.then566, %if.then562
  br label %if.end574, !dbg !15679

if.end574:                                        ; preds = %if.end573, %land.lhs.true557, %if.end553
  %arrayidx575 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 0, !dbg !15680
  %337 = load float, float* %arrayidx575, align 4, !dbg !15680
  %arrayidx576 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !15681
  %338 = load float, float* %arrayidx576, align 4, !dbg !15682
  %add577 = fadd float %338, %337, !dbg !15682
  store float %add577, float* %arrayidx576, align 4, !dbg !15682
  %arrayidx578 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 1, !dbg !15683
  %339 = load float, float* %arrayidx578, align 4, !dbg !15683
  %arrayidx579 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 1, !dbg !15684
  %340 = load float, float* %arrayidx579, align 4, !dbg !15685
  %add580 = fadd float %340, %339, !dbg !15685
  store float %add580, float* %arrayidx579, align 4, !dbg !15685
  %arrayidx581 = getelementptr inbounds [3 x float], [3 x float]* %sampleColor, i64 0, i64 2, !dbg !15686
  %341 = load float, float* %arrayidx581, align 4, !dbg !15686
  %arrayidx582 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 2, !dbg !15687
  %342 = load float, float* %arrayidx582, align 4, !dbg !15688
  %add583 = fadd float %342, %341, !dbg !15688
  store float %add583, float* %arrayidx582, align 4, !dbg !15688
  %343 = load float, float* %alpha_factor, align 4, !dbg !15689
  %344 = load float, float* %sampleStrength, align 4, !dbg !15690
  %mul584 = fmul float %344, %343, !dbg !15690
  store float %mul584, float* %sampleStrength, align 4, !dbg !15690
  %345 = load i32, i32* %numOfHits, align 4, !dbg !15691
  %inc585 = add nsw i32 %345, 1, !dbg !15691
  store i32 %inc585, i32* %numOfHits, align 4, !dbg !15691
  br label %if.end586, !dbg !15692

if.end586:                                        ; preds = %if.end574, %if.end529
  %346 = load float, float* %sampleStrength, align 4, !dbg !15693
  %347 = load float, float* %brushStrength, align 4, !dbg !15694
  %add587 = fadd float %347, %346, !dbg !15694
  store float %add587, float* %brushStrength, align 4, !dbg !15694
  br label %for.inc588, !dbg !15695

for.inc588:                                       ; preds = %if.end586, %if.else423, %if.then273
  %348 = load i32, i32* %ss, align 4, !dbg !15696
  %inc589 = add nsw i32 %348, 1, !dbg !15696
  store i32 %inc589, i32* %ss, align 4, !dbg !15696
  br label %for.cond121, !dbg !15697, !llvm.loop !15698

for.end590:                                       ; preds = %for.cond121
  %349 = load float, float* %brushStrength, align 4, !dbg !15700
  %cmp591 = fcmp ogt float %349, 0.000000e+00, !dbg !15702
  br i1 %cmp591, label %if.then596, label %lor.lhs.false593, !dbg !15703

lor.lhs.false593:                                 ; preds = %for.end590
  %350 = load float, float* %depth, align 4, !dbg !15704
  %cmp594 = fcmp ogt float %350, 0.000000e+00, !dbg !15705
  br i1 %cmp594, label %if.then596, label %if.end644, !dbg !15706

if.then596:                                       ; preds = %lor.lhs.false593, %for.end590
  %351 = load i32, i32* %samples, align 4, !dbg !15707
  %cmp597 = icmp sgt i32 %351, 1, !dbg !15710
  br i1 %cmp597, label %if.then599, label %if.end601, !dbg !15711

if.then599:                                       ; preds = %if.then596
  %352 = load float, float* %total_sample, align 4, !dbg !15712
  %353 = load float, float* %brushStrength, align 4, !dbg !15714
  %div600 = fdiv float %353, %352, !dbg !15714
  store float %div600, float* %brushStrength, align 4, !dbg !15714
  br label %if.end601, !dbg !15715

if.end601:                                        ; preds = %if.then599, %if.then596
  %354 = load float, float* %brushStrength, align 4, !dbg !15716
  %cmp602 = fcmp olt float %354, 0.000000e+00, !dbg !15716
  br i1 %cmp602, label %if.then604, label %if.else605, !dbg !15719

if.then604:                                       ; preds = %if.end601
  store float 0.000000e+00, float* %brushStrength, align 4, !dbg !15716
  br label %if.end610, !dbg !15716

if.else605:                                       ; preds = %if.end601
  %355 = load float, float* %brushStrength, align 4, !dbg !15720
  %cmp606 = fcmp ogt float %355, 1.000000e+00, !dbg !15720
  br i1 %cmp606, label %if.then608, label %if.end609, !dbg !15716

if.then608:                                       ; preds = %if.else605
  store float 1.000000e+00, float* %brushStrength, align 4, !dbg !15720
  br label %if.end609, !dbg !15720

if.end609:                                        ; preds = %if.then608, %if.else605
  br label %if.end610

if.end610:                                        ; preds = %if.end609, %if.then604
  %356 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15722
  %type611 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %356, i32 0, i32 11, !dbg !15724
  %357 = load i16, i16* %type611, align 2, !dbg !15724
  %conv612 = sext i16 %357 to i32, !dbg !15722
  %cmp613 = icmp eq i32 %conv612, 0, !dbg !15725
  br i1 %cmp613, label %if.then615, label %if.else625, !dbg !15726

if.then615:                                       ; preds = %if.end610
  %358 = load i32, i32* %numOfHits, align 4, !dbg !15727
  %conv616 = sitofp i32 %358 to float, !dbg !15727
  %arrayidx617 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !15729
  %359 = load float, float* %arrayidx617, align 4, !dbg !15730
  %div618 = fdiv float %359, %conv616, !dbg !15730
  store float %div618, float* %arrayidx617, align 4, !dbg !15730
  %360 = load i32, i32* %numOfHits, align 4, !dbg !15731
  %conv619 = sitofp i32 %360 to float, !dbg !15731
  %arrayidx620 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 1, !dbg !15732
  %361 = load float, float* %arrayidx620, align 4, !dbg !15733
  %div621 = fdiv float %361, %conv619, !dbg !15733
  store float %div621, float* %arrayidx620, align 4, !dbg !15733
  %362 = load i32, i32* %numOfHits, align 4, !dbg !15734
  %conv622 = sitofp i32 %362 to float, !dbg !15734
  %arrayidx623 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 2, !dbg !15735
  %363 = load float, float* %arrayidx623, align 4, !dbg !15736
  %div624 = fdiv float %363, %conv622, !dbg !15736
  store float %div624, float* %arrayidx623, align 4, !dbg !15736
  br label %if.end642, !dbg !15737

if.else625:                                       ; preds = %if.end610
  %364 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15738
  %type626 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %364, i32 0, i32 11, !dbg !15740
  %365 = load i16, i16* %type626, align 2, !dbg !15740
  %conv627 = sext i16 %365 to i32, !dbg !15738
  %cmp628 = icmp eq i32 %conv627, 1, !dbg !15741
  br i1 %cmp628, label %if.then635, label %lor.lhs.false630, !dbg !15742

lor.lhs.false630:                                 ; preds = %if.else625
  %366 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15743
  %type631 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %366, i32 0, i32 11, !dbg !15744
  %367 = load i16, i16* %type631, align 2, !dbg !15744
  %conv632 = sext i16 %367 to i32, !dbg !15743
  %cmp633 = icmp eq i32 %conv632, 3, !dbg !15745
  br i1 %cmp633, label %if.then635, label %if.end641, !dbg !15746

if.then635:                                       ; preds = %lor.lhs.false630, %if.else625
  %368 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15747
  %bNormal636 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %368, i32 0, i32 0, !dbg !15749
  %369 = load %struct.PaintBakeNormal*, %struct.PaintBakeNormal** %bNormal636, align 8, !dbg !15749
  %370 = load i32, i32* %index, align 4, !dbg !15750
  %idxprom637 = sext i32 %370 to i64, !dbg !15747
  %arrayidx638 = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %369, i64 %idxprom637, !dbg !15747
  %normal_scale = getelementptr inbounds %struct.PaintBakeNormal, %struct.PaintBakeNormal* %arrayidx638, i32 0, i32 1, !dbg !15751
  %371 = load float, float* %normal_scale, align 4, !dbg !15751
  %372 = load float, float* %total_sample, align 4, !dbg !15752
  %mul639 = fmul float %371, %372, !dbg !15753
  %373 = load float, float* %depth, align 4, !dbg !15754
  %div640 = fdiv float %373, %mul639, !dbg !15754
  store float %div640, float* %depth, align 4, !dbg !15754
  br label %if.end641, !dbg !15755

if.end641:                                        ; preds = %if.then635, %lor.lhs.false630
  br label %if.end642

if.end642:                                        ; preds = %if.end641, %if.then615
  %374 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15756
  %375 = load i32, i32* %index, align 4, !dbg !15757
  %376 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15758
  %arraydecay643 = getelementptr inbounds [3 x float], [3 x float]* %paintColor, i64 0, i64 0, !dbg !15759
  %377 = load float, float* %brushStrength, align 4, !dbg !15760
  %378 = load float, float* %depth, align 4, !dbg !15761
  %379 = load float, float* %velocity_val, align 4, !dbg !15762
  %380 = load float, float* %timescale.addr, align 4, !dbg !15763
  call void @dynamicPaint_updatePointData(%struct.DynamicPaintSurface* %374, i32 %375, %struct.DynamicPaintBrushSettings* %376, float* %arraydecay643, float %377, float %378, float %379, float %380), !dbg !15764
  br label %if.end644, !dbg !15765

if.end644:                                        ; preds = %if.end642, %lor.lhs.false593
  br label %for.inc645, !dbg !15766

for.inc645:                                       ; preds = %if.end644
  %381 = load i32, i32* %id, align 4, !dbg !15767
  %inc646 = add nsw i32 %381, 1, !dbg !15767
  store i32 %inc646, i32* %id, align 4, !dbg !15767
  br label %for.cond98, !dbg !15768, !llvm.loop !15769

for.end647:                                       ; preds = %for.cond98
  br label %for.inc648, !dbg !15771

for.inc648:                                       ; preds = %for.end647, %if.then96
  %382 = load i32, i32* %c_index, align 4, !dbg !15772
  %inc649 = add nsw i32 %382, 1, !dbg !15772
  store i32 %inc649, i32* %c_index, align 4, !dbg !15772
  br label %for.cond85, !dbg !15773, !llvm.loop !15774

for.end650:                                       ; preds = %for.cond85
  br label %if.end651, !dbg !15776

if.end651:                                        ; preds = %for.end650, %if.then74
  br label %if.end652, !dbg !15777

if.end652:                                        ; preds = %if.end651, %land.lhs.true71, %if.end69
  call void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh* %treeData), !dbg !15778
  %383 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15779
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %383, i32 0, i32 95, !dbg !15780
  %384 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !15780
  %385 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !15781
  call void %384(%struct.DerivedMesh* %385), !dbg !15779
  %386 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15782
  %tobool653 = icmp ne %struct.Vec3f* %386, null, !dbg !15782
  br i1 %tobool653, label %if.then654, label %if.end655, !dbg !15784

if.then654:                                       ; preds = %if.end652
  %387 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15785
  %388 = load %struct.Vec3f*, %struct.Vec3f** %brushVelocity, align 8, !dbg !15786
  %389 = bitcast %struct.Vec3f* %388 to i8*, !dbg !15786
  call void %387(i8* %389), !dbg !15785
  br label %if.end655, !dbg !15785

if.end655:                                        ; preds = %if.then654, %if.end652
  store i32 1, i32* %retval, align 4, !dbg !15787
  br label %return, !dbg !15787

return:                                           ; preds = %if.end655, %if.then4
  %390 = load i32, i32* %retval, align 4, !dbg !15788
  ret i32 %390, !dbg !15788
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_freeBrushMaterials(%struct.BrushMaterials* %bMats) #0 !dbg !15789 {
entry:
  %bMats.addr = alloca %struct.BrushMaterials*, align 8
  %i = alloca i32, align 4
  store %struct.BrushMaterials* %bMats, %struct.BrushMaterials** %bMats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials** %bMats.addr, metadata !15792, metadata !DIExpression()), !dbg !15793
  %0 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15794
  %ob_mats = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %0, i32 0, i32 1, !dbg !15796
  %1 = load %struct.Material**, %struct.Material*** %ob_mats, align 8, !dbg !15796
  %tobool = icmp ne %struct.Material** %1, null, !dbg !15794
  br i1 %tobool, label %if.then, label %if.else, !dbg !15797

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15798, metadata !DIExpression()), !dbg !15800
  store i32 0, i32* %i, align 4, !dbg !15801
  br label %for.cond, !dbg !15803

for.cond:                                         ; preds = %for.inc, %if.then
  %2 = load i32, i32* %i, align 4, !dbg !15804
  %3 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15806
  %tot = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %3, i32 0, i32 2, !dbg !15807
  %4 = load i32, i32* %tot, align 8, !dbg !15807
  %cmp = icmp slt i32 %2, %4, !dbg !15808
  br i1 %cmp, label %for.body, label %for.end, !dbg !15809

for.body:                                         ; preds = %for.cond
  %5 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15810
  %ob_mats1 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %5, i32 0, i32 1, !dbg !15812
  %6 = load %struct.Material**, %struct.Material*** %ob_mats1, align 8, !dbg !15812
  %7 = load i32, i32* %i, align 4, !dbg !15813
  %idxprom = sext i32 %7 to i64, !dbg !15810
  %arrayidx = getelementptr inbounds %struct.Material*, %struct.Material** %6, i64 %idxprom, !dbg !15810
  %8 = load %struct.Material*, %struct.Material** %arrayidx, align 8, !dbg !15810
  call void @RE_free_sample_material(%struct.Material* %8), !dbg !15814
  br label %for.inc, !dbg !15815

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !15816
  %inc = add nsw i32 %9, 1, !dbg !15816
  store i32 %inc, i32* %i, align 4, !dbg !15816
  br label %for.cond, !dbg !15817, !llvm.loop !15818

for.end:                                          ; preds = %for.cond
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !15820
  %11 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15821
  %ob_mats2 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %11, i32 0, i32 1, !dbg !15822
  %12 = load %struct.Material**, %struct.Material*** %ob_mats2, align 8, !dbg !15822
  %13 = bitcast %struct.Material** %12 to i8*, !dbg !15821
  call void %10(i8* %13), !dbg !15820
  br label %if.end6, !dbg !15823

if.else:                                          ; preds = %entry
  %14 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15824
  %mat = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %14, i32 0, i32 0, !dbg !15826
  %15 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !15826
  %tobool3 = icmp ne %struct.Material* %15, null, !dbg !15824
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !15827

if.then4:                                         ; preds = %if.else
  %16 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !15828
  %mat5 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %16, i32 0, i32 0, !dbg !15830
  %17 = load %struct.Material*, %struct.Material** %mat5, align 8, !dbg !15830
  call void @RE_free_sample_material(%struct.Material* %17), !dbg !15831
  br label %if.end, !dbg !15832

if.end:                                           ; preds = %if.then4, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %for.end
  ret void, !dbg !15833
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_doSmudge(%struct.DynamicPaintSurface* %surface, %struct.DynamicPaintBrushSettings* %brush, float %timescale) #0 !dbg !15834 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %timescale.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %bNeighs = alloca %struct.BakeAdjPoint*, align 8
  %index = alloca i32, align 4
  %steps = alloca i32, align 4
  %step = alloca i32, align 4
  %eff_scale = alloca float, align 4
  %max_velocity = alloca float, align 4
  %vel = alloca float, align 4
  %i = alloca i32, align 4
  %pPoint = alloca %struct.PaintPoint*, align 8
  %smudge_str = alloca float, align 4
  %closest_id = alloca [2 x i32], align 4
  %closest_d = alloca [2 x float], align 4
  %n_index = alloca i32, align 4
  %dir_dot = alloca float, align 4
  %dir_factor = alloca float, align 4
  %speed_scale = alloca float, align 4
  %ePoint = alloca %struct.PaintPoint*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !15837, metadata !DIExpression()), !dbg !15838
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !15839, metadata !DIExpression()), !dbg !15840
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !15841, metadata !DIExpression()), !dbg !15842
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !15843, metadata !DIExpression()), !dbg !15844
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !15845
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !15846
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !15846
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !15844
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !15847, metadata !DIExpression()), !dbg !15848
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15849
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !15850
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !15850
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !15848
  call void @llvm.dbg.declare(metadata %struct.BakeAdjPoint** %bNeighs, metadata !15851, metadata !DIExpression()), !dbg !15852
  %4 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15853
  %bData2 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %4, i32 0, i32 3, !dbg !15854
  %5 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData2, align 8, !dbg !15854
  %bNeighs3 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %5, i32 0, i32 5, !dbg !15855
  %6 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs3, align 8, !dbg !15855
  store %struct.BakeAdjPoint* %6, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !15852
  call void @llvm.dbg.declare(metadata i32* %index, metadata !15856, metadata !DIExpression()), !dbg !15857
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !15858, metadata !DIExpression()), !dbg !15859
  call void @llvm.dbg.declare(metadata i32* %step, metadata !15860, metadata !DIExpression()), !dbg !15861
  call void @llvm.dbg.declare(metadata float* %eff_scale, metadata !15862, metadata !DIExpression()), !dbg !15863
  call void @llvm.dbg.declare(metadata float* %max_velocity, metadata !15864, metadata !DIExpression()), !dbg !15865
  store float 0.000000e+00, float* %max_velocity, align 4, !dbg !15865
  %7 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15866
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %7, i32 0, i32 2, !dbg !15868
  %8 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !15868
  %tobool = icmp ne %struct.PaintAdjData* %8, null, !dbg !15866
  br i1 %tobool, label %if.end, label %if.then, !dbg !15869

if.then:                                          ; preds = %entry
  br label %for.end114, !dbg !15870

if.end:                                           ; preds = %entry
  store i32 0, i32* %index, align 4, !dbg !15871
  br label %for.cond, !dbg !15873

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load i32, i32* %index, align 4, !dbg !15874
  %10 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15876
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %10, i32 0, i32 4, !dbg !15877
  %11 = load i32, i32* %total_points, align 8, !dbg !15877
  %cmp = icmp slt i32 %9, %11, !dbg !15878
  br i1 %cmp, label %for.body, label %for.end, !dbg !15879

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %vel, metadata !15880, metadata !DIExpression()), !dbg !15882
  %12 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15883
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %12, i32 0, i32 10, !dbg !15884
  %13 = load float*, float** %brush_velocity, align 8, !dbg !15884
  %14 = load i32, i32* %index, align 4, !dbg !15885
  %mul = mul nsw i32 %14, 4, !dbg !15886
  %add = add nsw i32 %mul, 3, !dbg !15887
  %idxprom = sext i32 %add to i64, !dbg !15883
  %arrayidx = getelementptr inbounds float, float* %13, i64 %idxprom, !dbg !15883
  %15 = load float, float* %arrayidx, align 4, !dbg !15883
  store float %15, float* %vel, align 4, !dbg !15882
  %16 = load float, float* %vel, align 4, !dbg !15888
  %17 = load float, float* %max_velocity, align 4, !dbg !15890
  %cmp4 = fcmp ogt float %16, %17, !dbg !15891
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !15892

if.then5:                                         ; preds = %for.body
  %18 = load float, float* %vel, align 4, !dbg !15893
  store float %18, float* %max_velocity, align 4, !dbg !15894
  br label %if.end6, !dbg !15895

if.end6:                                          ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !15896

for.inc:                                          ; preds = %if.end6
  %19 = load i32, i32* %index, align 4, !dbg !15897
  %inc = add nsw i32 %19, 1, !dbg !15897
  store i32 %inc, i32* %index, align 4, !dbg !15897
  br label %for.cond, !dbg !15898, !llvm.loop !15899

for.end:                                          ; preds = %for.cond
  %20 = load float, float* %max_velocity, align 4, !dbg !15901
  %conv = fpext float %20 to double, !dbg !15901
  %21 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15902
  %average_dist = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %21, i32 0, i32 6, !dbg !15903
  %22 = load double, double* %average_dist, align 8, !dbg !15903
  %div = fdiv double %conv, %22, !dbg !15904
  %23 = load float, float* %timescale.addr, align 4, !dbg !15905
  %conv7 = fpext float %23 to double, !dbg !15905
  %mul8 = fmul double %div, %conv7, !dbg !15906
  %24 = call double @llvm.ceil.f64(double %mul8), !dbg !15907
  %conv9 = fptosi double %24 to i32, !dbg !15908
  store i32 %conv9, i32* %steps, align 4, !dbg !15909
  %25 = load i32, i32* %steps, align 4, !dbg !15910
  %cmp10 = icmp slt i32 %25, 0, !dbg !15910
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !15913

if.then12:                                        ; preds = %for.end
  store i32 0, i32* %steps, align 4, !dbg !15910
  br label %if.end17, !dbg !15910

if.else:                                          ; preds = %for.end
  %26 = load i32, i32* %steps, align 4, !dbg !15914
  %cmp13 = icmp sgt i32 %26, 12, !dbg !15914
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !15910

if.then15:                                        ; preds = %if.else
  store i32 12, i32* %steps, align 4, !dbg !15914
  br label %if.end16, !dbg !15914

if.end16:                                         ; preds = %if.then15, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then12
  %27 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !15916
  %smudge_strength = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %27, i32 0, i32 23, !dbg !15917
  %28 = load float, float* %smudge_strength, align 4, !dbg !15917
  %29 = load i32, i32* %steps, align 4, !dbg !15918
  %conv18 = sitofp i32 %29 to float, !dbg !15919
  %div19 = fdiv float %28, %conv18, !dbg !15920
  %30 = load float, float* %timescale.addr, align 4, !dbg !15921
  %mul20 = fmul float %div19, %30, !dbg !15922
  store float %mul20, float* %eff_scale, align 4, !dbg !15923
  store i32 0, i32* %step, align 4, !dbg !15924
  br label %for.cond21, !dbg !15926

for.cond21:                                       ; preds = %for.inc112, %if.end17
  %31 = load i32, i32* %step, align 4, !dbg !15927
  %32 = load i32, i32* %steps, align 4, !dbg !15929
  %cmp22 = icmp slt i32 %31, %32, !dbg !15930
  br i1 %cmp22, label %for.body24, label %for.end114, !dbg !15931

for.body24:                                       ; preds = %for.cond21
  store i32 0, i32* %index, align 4, !dbg !15932
  br label %for.cond25, !dbg !15935

for.cond25:                                       ; preds = %for.inc109, %for.body24
  %33 = load i32, i32* %index, align 4, !dbg !15936
  %34 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15938
  %total_points26 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %34, i32 0, i32 4, !dbg !15939
  %35 = load i32, i32* %total_points26, align 8, !dbg !15939
  %cmp27 = icmp slt i32 %33, %35, !dbg !15940
  br i1 %cmp27, label %for.body29, label %for.end111, !dbg !15941

for.body29:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15942, metadata !DIExpression()), !dbg !15944
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !15945, metadata !DIExpression()), !dbg !15946
  %36 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15947
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %36, i32 0, i32 1, !dbg !15948
  %37 = load i8*, i8** %type_data, align 8, !dbg !15948
  %38 = bitcast i8* %37 to %struct.PaintPoint*, !dbg !15949
  %39 = load i32, i32* %index, align 4, !dbg !15950
  %idxprom30 = sext i32 %39 to i64, !dbg !15951
  %arrayidx31 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %38, i64 %idxprom30, !dbg !15951
  store %struct.PaintPoint* %arrayidx31, %struct.PaintPoint** %pPoint, align 8, !dbg !15946
  call void @llvm.dbg.declare(metadata float* %smudge_str, metadata !15952, metadata !DIExpression()), !dbg !15953
  %40 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15954
  %brush_velocity32 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %40, i32 0, i32 10, !dbg !15955
  %41 = load float*, float** %brush_velocity32, align 8, !dbg !15955
  %42 = load i32, i32* %index, align 4, !dbg !15956
  %mul33 = mul nsw i32 %42, 4, !dbg !15957
  %add34 = add nsw i32 %mul33, 3, !dbg !15958
  %idxprom35 = sext i32 %add34 to i64, !dbg !15954
  %arrayidx36 = getelementptr inbounds float, float* %41, i64 %idxprom35, !dbg !15954
  %43 = load float, float* %arrayidx36, align 4, !dbg !15954
  store float %43, float* %smudge_str, align 4, !dbg !15953
  call void @llvm.dbg.declare(metadata [2 x i32]* %closest_id, metadata !15959, metadata !DIExpression()), !dbg !15960
  call void @llvm.dbg.declare(metadata [2 x float]* %closest_d, metadata !15961, metadata !DIExpression()), !dbg !15962
  %44 = load float, float* %smudge_str, align 4, !dbg !15963
  %tobool37 = fcmp une float %44, 0.000000e+00, !dbg !15963
  br i1 %tobool37, label %if.end39, label %if.then38, !dbg !15965

if.then38:                                        ; preds = %for.body29
  br label %for.inc109, !dbg !15966

if.end39:                                         ; preds = %for.body29
  %45 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !15967
  %46 = load i32, i32* %index, align 4, !dbg !15968
  %47 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !15969
  %brush_velocity40 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %47, i32 0, i32 10, !dbg !15970
  %48 = load float*, float** %brush_velocity40, align 8, !dbg !15970
  %49 = load i32, i32* %index, align 4, !dbg !15971
  %mul41 = mul nsw i32 %49, 4, !dbg !15972
  %idxprom42 = sext i32 %mul41 to i64, !dbg !15969
  %arrayidx43 = getelementptr inbounds float, float* %48, i64 %idxprom42, !dbg !15969
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 0, !dbg !15973
  %arraydecay44 = getelementptr inbounds [2 x i32], [2 x i32]* %closest_id, i64 0, i64 0, !dbg !15974
  call void @surface_determineForceTargetPoints(%struct.PaintSurfaceData* %45, i32 %46, float* %arrayidx43, float* %arraydecay, i32* %arraydecay44), !dbg !15975
  store i32 0, i32* %i, align 4, !dbg !15976
  br label %for.cond45, !dbg !15978

for.cond45:                                       ; preds = %for.inc106, %if.end39
  %50 = load i32, i32* %i, align 4, !dbg !15979
  %cmp46 = icmp slt i32 %50, 2, !dbg !15981
  br i1 %cmp46, label %for.body48, label %for.end108, !dbg !15982

for.body48:                                       ; preds = %for.cond45
  call void @llvm.dbg.declare(metadata i32* %n_index, metadata !15983, metadata !DIExpression()), !dbg !15985
  %51 = load i32, i32* %i, align 4, !dbg !15986
  %idxprom49 = sext i32 %51 to i64, !dbg !15987
  %arrayidx50 = getelementptr inbounds [2 x i32], [2 x i32]* %closest_id, i64 0, i64 %idxprom49, !dbg !15987
  %52 = load i32, i32* %arrayidx50, align 4, !dbg !15987
  store i32 %52, i32* %n_index, align 4, !dbg !15985
  %53 = load i32, i32* %n_index, align 4, !dbg !15988
  %cmp51 = icmp ne i32 %53, -1, !dbg !15990
  br i1 %cmp51, label %land.lhs.true, label %if.end105, !dbg !15991

land.lhs.true:                                    ; preds = %for.body48
  %54 = load i32, i32* %i, align 4, !dbg !15992
  %idxprom53 = sext i32 %54 to i64, !dbg !15993
  %arrayidx54 = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 %idxprom53, !dbg !15993
  %55 = load float, float* %arrayidx54, align 4, !dbg !15993
  %cmp55 = fcmp ogt float %55, 0.000000e+00, !dbg !15994
  br i1 %cmp55, label %if.then57, label %if.end105, !dbg !15995

if.then57:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %dir_dot, metadata !15996, metadata !DIExpression()), !dbg !15998
  %56 = load i32, i32* %i, align 4, !dbg !15999
  %idxprom58 = sext i32 %56 to i64, !dbg !16000
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 %idxprom58, !dbg !16000
  %57 = load float, float* %arrayidx59, align 4, !dbg !16000
  store float %57, float* %dir_dot, align 4, !dbg !15998
  call void @llvm.dbg.declare(metadata float* %dir_factor, metadata !16001, metadata !DIExpression()), !dbg !16002
  call void @llvm.dbg.declare(metadata float* %speed_scale, metadata !16003, metadata !DIExpression()), !dbg !16004
  %58 = load float, float* %eff_scale, align 4, !dbg !16005
  %59 = load float, float* %smudge_str, align 4, !dbg !16006
  %mul60 = fmul float %58, %59, !dbg !16007
  %60 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16008
  %61 = load i32, i32* %n_index, align 4, !dbg !16009
  %idxprom61 = sext i32 %61 to i64, !dbg !16008
  %arrayidx62 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %60, i64 %idxprom61, !dbg !16008
  %dist = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx62, i32 0, i32 1, !dbg !16010
  %62 = load float, float* %dist, align 4, !dbg !16010
  %div63 = fdiv float %mul60, %62, !dbg !16011
  store float %div63, float* %speed_scale, align 4, !dbg !16004
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %ePoint, metadata !16012, metadata !DIExpression()), !dbg !16013
  %63 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16014
  %type_data64 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %63, i32 0, i32 1, !dbg !16015
  %64 = load i8*, i8** %type_data64, align 8, !dbg !16015
  %65 = bitcast i8* %64 to %struct.PaintPoint*, !dbg !16016
  %66 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16017
  %adj_data65 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %66, i32 0, i32 2, !dbg !16018
  %67 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data65, align 8, !dbg !16018
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %67, i32 0, i32 0, !dbg !16019
  %68 = load i32*, i32** %n_target, align 8, !dbg !16019
  %69 = load i32, i32* %n_index, align 4, !dbg !16020
  %idxprom66 = sext i32 %69 to i64, !dbg !16017
  %arrayidx67 = getelementptr inbounds i32, i32* %68, i64 %idxprom66, !dbg !16017
  %70 = load i32, i32* %arrayidx67, align 4, !dbg !16017
  %idxprom68 = sext i32 %70 to i64, !dbg !16021
  %arrayidx69 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %65, i64 %idxprom68, !dbg !16021
  store %struct.PaintPoint* %arrayidx69, %struct.PaintPoint** %ePoint, align 8, !dbg !16013
  %71 = load float, float* %dir_dot, align 4, !dbg !16022
  %cmp70 = fcmp ole float %71, 0.000000e+00, !dbg !16024
  br i1 %cmp70, label %if.then72, label %if.end73, !dbg !16025

if.then72:                                        ; preds = %if.then57
  br label %for.inc106, !dbg !16026

if.end73:                                         ; preds = %if.then57
  %72 = load float, float* %dir_dot, align 4, !dbg !16027
  %73 = load float, float* %speed_scale, align 4, !dbg !16028
  %mul74 = fmul float %72, %73, !dbg !16029
  store float %mul74, float* %dir_factor, align 4, !dbg !16030
  %74 = load float, float* %dir_factor, align 4, !dbg !16031
  %75 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !16033
  %smudge_strength75 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %75, i32 0, i32 23, !dbg !16034
  %76 = load float, float* %smudge_strength75, align 4, !dbg !16034
  %cmp76 = fcmp ogt float %74, %76, !dbg !16035
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !16036

if.then78:                                        ; preds = %if.end73
  %77 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !16037
  %smudge_strength79 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %77, i32 0, i32 23, !dbg !16038
  %78 = load float, float* %smudge_strength79, align 4, !dbg !16038
  store float %78, float* %dir_factor, align 4, !dbg !16039
  br label %if.end80, !dbg !16040

if.end80:                                         ; preds = %if.then78, %if.end73
  %79 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16041
  %color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %79, i32 0, i32 4, !dbg !16042
  %arraydecay81 = getelementptr inbounds [3 x float], [3 x float]* %color, i64 0, i64 0, !dbg !16041
  %80 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16043
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %80, i32 0, i32 5, !dbg !16044
  %81 = load float, float* %alpha, align 4, !dbg !16044
  %82 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16045
  %color82 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %82, i32 0, i32 4, !dbg !16046
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %color82, i64 0, i64 0, !dbg !16045
  %83 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16047
  %alpha84 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %83, i32 0, i32 5, !dbg !16048
  %84 = load float, float* %alpha84, align 4, !dbg !16048
  %85 = load float, float* %dir_factor, align 4, !dbg !16049
  %call = call float @mixColors(float* %arraydecay81, float %81, float* %arraydecay83, float %84, float %85), !dbg !16050
  %86 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16051
  %alpha85 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %86, i32 0, i32 5, !dbg !16052
  %87 = load float, float* %alpha85, align 4, !dbg !16052
  %88 = load float, float* %dir_factor, align 4, !dbg !16053
  %sub = fsub float 1.000000e+00, %88, !dbg !16054
  %mul86 = fmul float %87, %sub, !dbg !16055
  %89 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16056
  %alpha87 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %89, i32 0, i32 5, !dbg !16057
  %90 = load float, float* %alpha87, align 4, !dbg !16057
  %91 = load float, float* %dir_factor, align 4, !dbg !16058
  %mul88 = fmul float %90, %91, !dbg !16059
  %add89 = fadd float %mul86, %mul88, !dbg !16060
  %92 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16061
  %alpha90 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %92, i32 0, i32 5, !dbg !16062
  store float %add89, float* %alpha90, align 4, !dbg !16063
  %93 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16064
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %93, i32 0, i32 0, !dbg !16065
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !16064
  %94 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16066
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %94, i32 0, i32 1, !dbg !16067
  %95 = load float, float* %e_alpha, align 4, !dbg !16067
  %96 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16068
  %e_color92 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %96, i32 0, i32 0, !dbg !16069
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %e_color92, i64 0, i64 0, !dbg !16068
  %97 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16070
  %e_alpha94 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %97, i32 0, i32 1, !dbg !16071
  %98 = load float, float* %e_alpha94, align 4, !dbg !16071
  %99 = load float, float* %dir_factor, align 4, !dbg !16072
  %call95 = call float @mixColors(float* %arraydecay91, float %95, float* %arraydecay93, float %98, float %99), !dbg !16073
  %100 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16074
  %e_alpha96 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %100, i32 0, i32 1, !dbg !16075
  %101 = load float, float* %e_alpha96, align 4, !dbg !16075
  %102 = load float, float* %dir_factor, align 4, !dbg !16076
  %sub97 = fsub float 1.000000e+00, %102, !dbg !16077
  %mul98 = fmul float %101, %sub97, !dbg !16078
  %103 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16079
  %e_alpha99 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %103, i32 0, i32 1, !dbg !16080
  %104 = load float, float* %e_alpha99, align 4, !dbg !16080
  %105 = load float, float* %dir_factor, align 4, !dbg !16081
  %mul100 = fmul float %104, %105, !dbg !16082
  %add101 = fadd float %mul98, %mul100, !dbg !16083
  %106 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !16084
  %e_alpha102 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %106, i32 0, i32 1, !dbg !16085
  store float %add101, float* %e_alpha102, align 4, !dbg !16086
  %107 = load float, float* %dir_factor, align 4, !dbg !16087
  %sub103 = fsub float 1.000000e+00, %107, !dbg !16088
  %108 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !16089
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %108, i32 0, i32 2, !dbg !16090
  %109 = load float, float* %wetness, align 4, !dbg !16091
  %mul104 = fmul float %109, %sub103, !dbg !16091
  store float %mul104, float* %wetness, align 4, !dbg !16091
  br label %if.end105, !dbg !16092

if.end105:                                        ; preds = %if.end80, %land.lhs.true, %for.body48
  br label %for.inc106, !dbg !16093

for.inc106:                                       ; preds = %if.end105, %if.then72
  %110 = load i32, i32* %i, align 4, !dbg !16094
  %inc107 = add nsw i32 %110, 1, !dbg !16094
  store i32 %inc107, i32* %i, align 4, !dbg !16094
  br label %for.cond45, !dbg !16095, !llvm.loop !16096

for.end108:                                       ; preds = %for.cond45
  br label %for.inc109, !dbg !16098

for.inc109:                                       ; preds = %for.end108, %if.then38
  %111 = load i32, i32* %index, align 4, !dbg !16099
  %inc110 = add nsw i32 %111, 1, !dbg !16099
  store i32 %inc110, i32* %index, align 4, !dbg !16099
  br label %for.cond25, !dbg !16100, !llvm.loop !16101

for.end111:                                       ; preds = %for.cond25
  br label %for.inc112, !dbg !16103

for.inc112:                                       ; preds = %for.end111
  %112 = load i32, i32* %step, align 4, !dbg !16104
  %inc113 = add nsw i32 %112, 1, !dbg !16104
  store i32 %inc113, i32* %step, align 4, !dbg !16104
  br label %for.cond21, !dbg !16105, !llvm.loop !16106

for.end114:                                       ; preds = %if.then, %for.cond21
  ret void, !dbg !16108
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_doWaveStep(%struct.DynamicPaintSurface* %surface, float %timescale) #0 !dbg !16109 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %timescale.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bNeighs = alloca %struct.BakeAdjPoint*, align 8
  %index = alloca i32, align 4
  %steps = alloca i32, align 4
  %ss = alloca i32, align 4
  %dt = alloca float, align 4
  %min_dist = alloca float, align 4
  %damp_factor = alloca float, align 4
  %wave_speed = alloca float, align 4
  %wave_max_slope = alloca float, align 4
  %average_dist = alloca double, align 8
  %canvas_size = alloca float, align 4
  %wave_scale = alloca float, align 4
  %prevPoint = alloca %struct.PaintWavePoint*, align 8
  %i = alloca i32, align 4
  %numOfNeighs = alloca i32, align 4
  %wPoint = alloca %struct.PaintWavePoint*, align 8
  %numOfNeighs72 = alloca i32, align 4
  %force = alloca float, align 4
  %avg_dist = alloca float, align 4
  %avg_height = alloca float, align 4
  %avg_n_height = alloca float, align 4
  %numOfN = alloca i32, align 4
  %numOfRN = alloca i32, align 4
  %i77 = alloca i32, align 4
  %n_index87 = alloca i32, align 4
  %dist93 = alloca float, align 4
  %tPoint = alloca %struct.PaintWavePoint*, align 8
  %max_offset = alloca float, align 4
  %offset = alloca float, align 4
  %wPoint234 = alloca %struct.PaintWavePoint*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !16110, metadata !DIExpression()), !dbg !16111
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !16112, metadata !DIExpression()), !dbg !16113
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !16114, metadata !DIExpression()), !dbg !16115
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16116
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !16117
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !16117
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !16115
  call void @llvm.dbg.declare(metadata %struct.BakeAdjPoint** %bNeighs, metadata !16118, metadata !DIExpression()), !dbg !16119
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16120
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !16121
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16121
  %bNeighs1 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %3, i32 0, i32 5, !dbg !16122
  %4 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs1, align 8, !dbg !16122
  store %struct.BakeAdjPoint* %4, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16119
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16123, metadata !DIExpression()), !dbg !16124
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !16125, metadata !DIExpression()), !dbg !16126
  call void @llvm.dbg.declare(metadata i32* %ss, metadata !16127, metadata !DIExpression()), !dbg !16128
  call void @llvm.dbg.declare(metadata float* %dt, metadata !16129, metadata !DIExpression()), !dbg !16130
  call void @llvm.dbg.declare(metadata float* %min_dist, metadata !16131, metadata !DIExpression()), !dbg !16132
  call void @llvm.dbg.declare(metadata float* %damp_factor, metadata !16133, metadata !DIExpression()), !dbg !16134
  call void @llvm.dbg.declare(metadata float* %wave_speed, metadata !16135, metadata !DIExpression()), !dbg !16136
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16137
  %wave_speed2 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 41, !dbg !16138
  %6 = load float, float* %wave_speed2, align 4, !dbg !16138
  store float %6, float* %wave_speed, align 4, !dbg !16136
  call void @llvm.dbg.declare(metadata float* %wave_max_slope, metadata !16139, metadata !DIExpression()), !dbg !16140
  %7 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16141
  %wave_smoothness = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %7, i32 0, i32 44, !dbg !16142
  %8 = load float, float* %wave_smoothness, align 8, !dbg !16142
  %cmp = fcmp oge float %8, 0x3F847AE140000000, !dbg !16143
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16144

cond.true:                                        ; preds = %entry
  %9 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16145
  %wave_smoothness3 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %9, i32 0, i32 44, !dbg !16146
  %10 = load float, float* %wave_smoothness3, align 8, !dbg !16146
  %div = fdiv float 5.000000e-01, %10, !dbg !16147
  br label %cond.end, !dbg !16144

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16144

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %div, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !16144
  store float %cond, float* %wave_max_slope, align 4, !dbg !16140
  call void @llvm.dbg.declare(metadata double* %average_dist, metadata !16148, metadata !DIExpression()), !dbg !16149
  store double 0.000000e+00, double* %average_dist, align 8, !dbg !16149
  call void @llvm.dbg.declare(metadata float* %canvas_size, metadata !16150, metadata !DIExpression()), !dbg !16151
  %11 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16152
  %call = call float @getSurfaceDimension(%struct.PaintSurfaceData* %11), !dbg !16153
  store float %call, float* %canvas_size, align 4, !dbg !16151
  call void @llvm.dbg.declare(metadata float* %wave_scale, metadata !16154, metadata !DIExpression()), !dbg !16155
  %12 = load float, float* %canvas_size, align 4, !dbg !16156
  %div4 = fdiv float 5.000000e+00, %12, !dbg !16157
  store float %div4, float* %wave_scale, align 4, !dbg !16155
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %prevPoint, metadata !16158, metadata !DIExpression()), !dbg !16159
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !16160
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16161
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !16162
  %15 = load i32, i32* %total_points, align 8, !dbg !16162
  %conv = sext i32 %15 to i64, !dbg !16161
  %mul = mul i64 %conv, 16, !dbg !16163
  %call5 = call i8* %13(i64 %mul, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.59, i64 0, i64 0)), !dbg !16160
  %16 = bitcast i8* %call5 to %struct.PaintWavePoint*, !dbg !16160
  store %struct.PaintWavePoint* %16, %struct.PaintWavePoint** %prevPoint, align 8, !dbg !16159
  %17 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %prevPoint, align 8, !dbg !16164
  %tobool = icmp ne %struct.PaintWavePoint* %17, null, !dbg !16164
  br i1 %tobool, label %if.end, label %if.then, !dbg !16166

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !16167

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %index, align 4, !dbg !16168
  br label %for.cond, !dbg !16170

for.cond:                                         ; preds = %for.inc20, %if.end
  %18 = load i32, i32* %index, align 4, !dbg !16171
  %19 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16173
  %total_points6 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %19, i32 0, i32 4, !dbg !16174
  %20 = load i32, i32* %total_points6, align 8, !dbg !16174
  %cmp7 = icmp slt i32 %18, %20, !dbg !16175
  br i1 %cmp7, label %for.body, label %for.end22, !dbg !16176

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16177, metadata !DIExpression()), !dbg !16179
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs, metadata !16180, metadata !DIExpression()), !dbg !16181
  %21 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16182
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %21, i32 0, i32 2, !dbg !16183
  %22 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !16183
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %22, i32 0, i32 2, !dbg !16184
  %23 = load i32*, i32** %n_num, align 8, !dbg !16184
  %24 = load i32, i32* %index, align 4, !dbg !16185
  %idxprom = sext i32 %24 to i64, !dbg !16182
  %arrayidx = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !16182
  %25 = load i32, i32* %arrayidx, align 4, !dbg !16182
  store i32 %25, i32* %numOfNeighs, align 4, !dbg !16181
  store i32 0, i32* %i, align 4, !dbg !16186
  br label %for.cond9, !dbg !16188

for.cond9:                                        ; preds = %for.inc, %for.body
  %26 = load i32, i32* %i, align 4, !dbg !16189
  %27 = load i32, i32* %numOfNeighs, align 4, !dbg !16191
  %cmp10 = icmp slt i32 %26, %27, !dbg !16192
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !16193

for.body12:                                       ; preds = %for.cond9
  %28 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16194
  %29 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16196
  %adj_data13 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %29, i32 0, i32 2, !dbg !16197
  %30 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data13, align 8, !dbg !16197
  %n_index = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %30, i32 0, i32 1, !dbg !16198
  %31 = load i32*, i32** %n_index, align 8, !dbg !16198
  %32 = load i32, i32* %index, align 4, !dbg !16199
  %idxprom14 = sext i32 %32 to i64, !dbg !16196
  %arrayidx15 = getelementptr inbounds i32, i32* %31, i64 %idxprom14, !dbg !16196
  %33 = load i32, i32* %arrayidx15, align 4, !dbg !16196
  %34 = load i32, i32* %i, align 4, !dbg !16200
  %add = add nsw i32 %33, %34, !dbg !16201
  %idxprom16 = sext i32 %add to i64, !dbg !16194
  %arrayidx17 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %28, i64 %idxprom16, !dbg !16194
  %dist = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx17, i32 0, i32 1, !dbg !16202
  %35 = load float, float* %dist, align 4, !dbg !16202
  %conv18 = fpext float %35 to double, !dbg !16194
  %36 = load double, double* %average_dist, align 8, !dbg !16203
  %add19 = fadd double %36, %conv18, !dbg !16203
  store double %add19, double* %average_dist, align 8, !dbg !16203
  br label %for.inc, !dbg !16204

for.inc:                                          ; preds = %for.body12
  %37 = load i32, i32* %i, align 4, !dbg !16205
  %inc = add nsw i32 %37, 1, !dbg !16205
  store i32 %inc, i32* %i, align 4, !dbg !16205
  br label %for.cond9, !dbg !16206, !llvm.loop !16207

for.end:                                          ; preds = %for.cond9
  br label %for.inc20, !dbg !16209

for.inc20:                                        ; preds = %for.end
  %38 = load i32, i32* %index, align 4, !dbg !16210
  %inc21 = add nsw i32 %38, 1, !dbg !16210
  store i32 %inc21, i32* %index, align 4, !dbg !16210
  br label %for.cond, !dbg !16211, !llvm.loop !16212

for.end22:                                        ; preds = %for.cond
  %39 = load float, float* %wave_scale, align 4, !dbg !16214
  %40 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16215
  %adj_data23 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %40, i32 0, i32 2, !dbg !16216
  %41 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data23, align 8, !dbg !16216
  %total_targets = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %41, i32 0, i32 4, !dbg !16217
  %42 = load i32, i32* %total_targets, align 8, !dbg !16217
  %conv24 = sitofp i32 %42 to float, !dbg !16215
  %div25 = fdiv float %39, %conv24, !dbg !16218
  %conv26 = fpext float %div25 to double, !dbg !16214
  %43 = load double, double* %average_dist, align 8, !dbg !16219
  %mul27 = fmul double %43, %conv26, !dbg !16219
  store double %mul27, double* %average_dist, align 8, !dbg !16219
  %44 = load float, float* %timescale.addr, align 4, !dbg !16220
  %mul28 = fmul float 0x3FA5555560000000, %44, !dbg !16221
  %45 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16222
  %wave_timescale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %45, i32 0, i32 42, !dbg !16223
  %46 = load float, float* %wave_timescale, align 8, !dbg !16223
  %mul29 = fmul float %mul28, %46, !dbg !16224
  %conv30 = fpext float %mul29 to double, !dbg !16225
  %47 = load double, double* %average_dist, align 8, !dbg !16226
  %48 = load float, float* %wave_speed, align 4, !dbg !16227
  %conv31 = fpext float %48 to double, !dbg !16227
  %div32 = fdiv double %47, %conv31, !dbg !16228
  %div33 = fdiv double %div32, 3.000000e+00, !dbg !16229
  %div34 = fdiv double %conv30, %div33, !dbg !16230
  %49 = call double @llvm.ceil.f64(double %div34), !dbg !16231
  %conv35 = fptosi double %49 to i32, !dbg !16232
  store i32 %conv35, i32* %steps, align 4, !dbg !16233
  %50 = load i32, i32* %steps, align 4, !dbg !16234
  %cmp36 = icmp slt i32 %50, 1, !dbg !16234
  br i1 %cmp36, label %if.then38, label %if.else, !dbg !16237

if.then38:                                        ; preds = %for.end22
  store i32 1, i32* %steps, align 4, !dbg !16234
  br label %if.end43, !dbg !16234

if.else:                                          ; preds = %for.end22
  %51 = load i32, i32* %steps, align 4, !dbg !16238
  %cmp39 = icmp sgt i32 %51, 20, !dbg !16238
  br i1 %cmp39, label %if.then41, label %if.end42, !dbg !16234

if.then41:                                        ; preds = %if.else
  store i32 20, i32* %steps, align 4, !dbg !16238
  br label %if.end42, !dbg !16238

if.end42:                                         ; preds = %if.then41, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then38
  %52 = load i32, i32* %steps, align 4, !dbg !16240
  %conv44 = sitofp i32 %52 to float, !dbg !16240
  %53 = load float, float* %timescale.addr, align 4, !dbg !16241
  %div45 = fdiv float %53, %conv44, !dbg !16241
  store float %div45, float* %timescale.addr, align 4, !dbg !16241
  %54 = load float, float* %timescale.addr, align 4, !dbg !16242
  %mul46 = fmul float 0x3FA5555560000000, %54, !dbg !16243
  %55 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16244
  %wave_timescale47 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %55, i32 0, i32 42, !dbg !16245
  %56 = load float, float* %wave_timescale47, align 8, !dbg !16245
  %mul48 = fmul float %mul46, %56, !dbg !16246
  store float %mul48, float* %dt, align 4, !dbg !16247
  %57 = load float, float* %wave_speed, align 4, !dbg !16248
  %58 = load float, float* %dt, align 4, !dbg !16249
  %mul49 = fmul float %57, %58, !dbg !16250
  %mul50 = fmul float %mul49, 1.500000e+00, !dbg !16251
  store float %mul50, float* %min_dist, align 4, !dbg !16252
  %59 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16253
  %wave_damping = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %59, i32 0, i32 40, !dbg !16254
  %60 = load float, float* %wave_damping, align 8, !dbg !16254
  %sub = fsub float 1.000000e+00, %60, !dbg !16255
  %conv51 = fpext float %sub to double, !dbg !16256
  %61 = load float, float* %timescale.addr, align 4, !dbg !16257
  %62 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16258
  %wave_timescale52 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %62, i32 0, i32 42, !dbg !16259
  %63 = load float, float* %wave_timescale52, align 8, !dbg !16259
  %mul53 = fmul float %61, %63, !dbg !16260
  %conv54 = fpext float %mul53 to double, !dbg !16257
  %call55 = call double @pow(double %conv51, double %conv54) #7, !dbg !16261
  %conv56 = fptrunc double %call55 to float, !dbg !16261
  store float %conv56, float* %damp_factor, align 4, !dbg !16262
  store i32 0, i32* %ss, align 4, !dbg !16263
  br label %for.cond57, !dbg !16265

for.cond57:                                       ; preds = %for.inc226, %if.end43
  %64 = load i32, i32* %ss, align 4, !dbg !16266
  %65 = load i32, i32* %steps, align 4, !dbg !16268
  %cmp58 = icmp slt i32 %64, %65, !dbg !16269
  br i1 %cmp58, label %for.body60, label %for.end228, !dbg !16270

for.body60:                                       ; preds = %for.cond57
  %66 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %prevPoint, align 8, !dbg !16271
  %67 = bitcast %struct.PaintWavePoint* %66 to i8*, !dbg !16273
  %68 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16274
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %68, i32 0, i32 1, !dbg !16275
  %69 = load i8*, i8** %type_data, align 8, !dbg !16275
  %70 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16276
  %total_points61 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %70, i32 0, i32 4, !dbg !16277
  %71 = load i32, i32* %total_points61, align 8, !dbg !16277
  %conv62 = sext i32 %71 to i64, !dbg !16276
  %mul63 = mul i64 %conv62, 16, !dbg !16278
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %67, i8* align 1 %69, i64 %mul63, i1 false), !dbg !16273
  store i32 0, i32* %index, align 4, !dbg !16279
  br label %for.cond64, !dbg !16281

for.cond64:                                       ; preds = %for.inc223, %for.body60
  %72 = load i32, i32* %index, align 4, !dbg !16282
  %73 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16284
  %total_points65 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %73, i32 0, i32 4, !dbg !16285
  %74 = load i32, i32* %total_points65, align 8, !dbg !16285
  %cmp66 = icmp slt i32 %72, %74, !dbg !16286
  br i1 %cmp66, label %for.body68, label %for.end225, !dbg !16287

for.body68:                                       ; preds = %for.cond64
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %wPoint, metadata !16288, metadata !DIExpression()), !dbg !16290
  %75 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16291
  %type_data69 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %75, i32 0, i32 1, !dbg !16292
  %76 = load i8*, i8** %type_data69, align 8, !dbg !16292
  %77 = bitcast i8* %76 to %struct.PaintWavePoint*, !dbg !16293
  %78 = load i32, i32* %index, align 4, !dbg !16294
  %idxprom70 = sext i32 %78 to i64, !dbg !16295
  %arrayidx71 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %77, i64 %idxprom70, !dbg !16295
  store %struct.PaintWavePoint* %arrayidx71, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16290
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs72, metadata !16296, metadata !DIExpression()), !dbg !16297
  %79 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16298
  %adj_data73 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %79, i32 0, i32 2, !dbg !16299
  %80 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data73, align 8, !dbg !16299
  %n_num74 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %80, i32 0, i32 2, !dbg !16300
  %81 = load i32*, i32** %n_num74, align 8, !dbg !16300
  %82 = load i32, i32* %index, align 4, !dbg !16301
  %idxprom75 = sext i32 %82 to i64, !dbg !16298
  %arrayidx76 = getelementptr inbounds i32, i32* %81, i64 %idxprom75, !dbg !16298
  %83 = load i32, i32* %arrayidx76, align 4, !dbg !16298
  store i32 %83, i32* %numOfNeighs72, align 4, !dbg !16297
  call void @llvm.dbg.declare(metadata float* %force, metadata !16302, metadata !DIExpression()), !dbg !16303
  store float 0.000000e+00, float* %force, align 4, !dbg !16303
  call void @llvm.dbg.declare(metadata float* %avg_dist, metadata !16304, metadata !DIExpression()), !dbg !16305
  store float 0.000000e+00, float* %avg_dist, align 4, !dbg !16305
  call void @llvm.dbg.declare(metadata float* %avg_height, metadata !16306, metadata !DIExpression()), !dbg !16307
  store float 0.000000e+00, float* %avg_height, align 4, !dbg !16307
  call void @llvm.dbg.declare(metadata float* %avg_n_height, metadata !16308, metadata !DIExpression()), !dbg !16309
  store float 0.000000e+00, float* %avg_n_height, align 4, !dbg !16309
  call void @llvm.dbg.declare(metadata i32* %numOfN, metadata !16310, metadata !DIExpression()), !dbg !16311
  store i32 0, i32* %numOfN, align 4, !dbg !16311
  call void @llvm.dbg.declare(metadata i32* %numOfRN, metadata !16312, metadata !DIExpression()), !dbg !16313
  store i32 0, i32* %numOfRN, align 4, !dbg !16313
  call void @llvm.dbg.declare(metadata i32* %i77, metadata !16314, metadata !DIExpression()), !dbg !16315
  %84 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16316
  %state = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %84, i32 0, i32 3, !dbg !16318
  %85 = load i16, i16* %state, align 4, !dbg !16318
  %conv78 = sext i16 %85 to i32, !dbg !16316
  %cmp79 = icmp sgt i32 %conv78, 0, !dbg !16319
  br i1 %cmp79, label %if.then81, label %if.end82, !dbg !16320

if.then81:                                        ; preds = %for.body68
  br label %for.inc223, !dbg !16321

if.end82:                                         ; preds = %for.body68
  store i32 0, i32* %i77, align 4, !dbg !16322
  br label %for.cond83, !dbg !16324

for.cond83:                                       ; preds = %for.inc136, %if.end82
  %86 = load i32, i32* %i77, align 4, !dbg !16325
  %87 = load i32, i32* %numOfNeighs72, align 4, !dbg !16327
  %cmp84 = icmp slt i32 %86, %87, !dbg !16328
  br i1 %cmp84, label %for.body86, label %for.end138, !dbg !16329

for.body86:                                       ; preds = %for.cond83
  call void @llvm.dbg.declare(metadata i32* %n_index87, metadata !16330, metadata !DIExpression()), !dbg !16332
  %88 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16333
  %adj_data88 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %88, i32 0, i32 2, !dbg !16334
  %89 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data88, align 8, !dbg !16334
  %n_index89 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %89, i32 0, i32 1, !dbg !16335
  %90 = load i32*, i32** %n_index89, align 8, !dbg !16335
  %91 = load i32, i32* %index, align 4, !dbg !16336
  %idxprom90 = sext i32 %91 to i64, !dbg !16333
  %arrayidx91 = getelementptr inbounds i32, i32* %90, i64 %idxprom90, !dbg !16333
  %92 = load i32, i32* %arrayidx91, align 4, !dbg !16333
  %93 = load i32, i32* %i77, align 4, !dbg !16337
  %add92 = add nsw i32 %92, %93, !dbg !16338
  store i32 %add92, i32* %n_index87, align 4, !dbg !16332
  call void @llvm.dbg.declare(metadata float* %dist93, metadata !16339, metadata !DIExpression()), !dbg !16340
  %94 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16341
  %95 = load i32, i32* %n_index87, align 4, !dbg !16342
  %idxprom94 = sext i32 %95 to i64, !dbg !16341
  %arrayidx95 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %94, i64 %idxprom94, !dbg !16341
  %dist96 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx95, i32 0, i32 1, !dbg !16343
  %96 = load float, float* %dist96, align 4, !dbg !16343
  %97 = load float, float* %wave_scale, align 4, !dbg !16344
  %mul97 = fmul float %96, %97, !dbg !16345
  store float %mul97, float* %dist93, align 4, !dbg !16340
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %tPoint, metadata !16346, metadata !DIExpression()), !dbg !16347
  %98 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %prevPoint, align 8, !dbg !16348
  %99 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16349
  %adj_data98 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %99, i32 0, i32 2, !dbg !16350
  %100 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data98, align 8, !dbg !16350
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %100, i32 0, i32 0, !dbg !16351
  %101 = load i32*, i32** %n_target, align 8, !dbg !16351
  %102 = load i32, i32* %n_index87, align 4, !dbg !16352
  %idxprom99 = sext i32 %102 to i64, !dbg !16349
  %arrayidx100 = getelementptr inbounds i32, i32* %101, i64 %idxprom99, !dbg !16349
  %103 = load i32, i32* %arrayidx100, align 4, !dbg !16349
  %idxprom101 = sext i32 %103 to i64, !dbg !16348
  %arrayidx102 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %98, i64 %idxprom101, !dbg !16348
  store %struct.PaintWavePoint* %arrayidx102, %struct.PaintWavePoint** %tPoint, align 8, !dbg !16347
  %104 = load float, float* %dist93, align 4, !dbg !16353
  %tobool103 = fcmp une float %104, 0.000000e+00, !dbg !16353
  br i1 %tobool103, label %lor.lhs.false, label %if.then108, !dbg !16355

lor.lhs.false:                                    ; preds = %for.body86
  %105 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %tPoint, align 8, !dbg !16356
  %state104 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %105, i32 0, i32 3, !dbg !16357
  %106 = load i16, i16* %state104, align 4, !dbg !16357
  %conv105 = sext i16 %106 to i32, !dbg !16356
  %cmp106 = icmp sgt i32 %conv105, 0, !dbg !16358
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !16359

if.then108:                                       ; preds = %lor.lhs.false, %for.body86
  br label %for.inc136, !dbg !16360

if.end109:                                        ; preds = %lor.lhs.false
  %107 = load float, float* %dist93, align 4, !dbg !16361
  %108 = load float, float* %min_dist, align 4, !dbg !16363
  %cmp110 = fcmp olt float %107, %108, !dbg !16364
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !16365

if.then112:                                       ; preds = %if.end109
  %109 = load float, float* %min_dist, align 4, !dbg !16366
  store float %109, float* %dist93, align 4, !dbg !16367
  br label %if.end113, !dbg !16368

if.end113:                                        ; preds = %if.then112, %if.end109
  %110 = load float, float* %dist93, align 4, !dbg !16369
  %111 = load float, float* %avg_dist, align 4, !dbg !16370
  %add114 = fadd float %111, %110, !dbg !16370
  store float %add114, float* %avg_dist, align 4, !dbg !16370
  %112 = load i32, i32* %numOfN, align 4, !dbg !16371
  %inc115 = add nsw i32 %112, 1, !dbg !16371
  store i32 %inc115, i32* %numOfN, align 4, !dbg !16371
  %113 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16372
  %adj_data116 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %113, i32 0, i32 2, !dbg !16374
  %114 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data116, align 8, !dbg !16374
  %flags = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %114, i32 0, i32 3, !dbg !16375
  %115 = load i32*, i32** %flags, align 8, !dbg !16375
  %116 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16376
  %adj_data117 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %116, i32 0, i32 2, !dbg !16377
  %117 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data117, align 8, !dbg !16377
  %n_target118 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %117, i32 0, i32 0, !dbg !16378
  %118 = load i32*, i32** %n_target118, align 8, !dbg !16378
  %119 = load i32, i32* %n_index87, align 4, !dbg !16379
  %idxprom119 = sext i32 %119 to i64, !dbg !16376
  %arrayidx120 = getelementptr inbounds i32, i32* %118, i64 %idxprom119, !dbg !16376
  %120 = load i32, i32* %arrayidx120, align 4, !dbg !16376
  %idxprom121 = sext i32 %120 to i64, !dbg !16372
  %arrayidx122 = getelementptr inbounds i32, i32* %115, i64 %idxprom121, !dbg !16372
  %121 = load i32, i32* %arrayidx122, align 4, !dbg !16372
  %and = and i32 %121, 1, !dbg !16380
  %tobool123 = icmp ne i32 %and, 0, !dbg !16380
  br i1 %tobool123, label %if.end127, label %if.then124, !dbg !16381

if.then124:                                       ; preds = %if.end113
  %122 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %tPoint, align 8, !dbg !16382
  %height = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %122, i32 0, i32 0, !dbg !16384
  %123 = load float, float* %height, align 4, !dbg !16384
  %124 = load float, float* %avg_n_height, align 4, !dbg !16385
  %add125 = fadd float %124, %123, !dbg !16385
  store float %add125, float* %avg_n_height, align 4, !dbg !16385
  %125 = load i32, i32* %numOfRN, align 4, !dbg !16386
  %inc126 = add nsw i32 %125, 1, !dbg !16386
  store i32 %inc126, i32* %numOfRN, align 4, !dbg !16386
  br label %if.end127, !dbg !16387

if.end127:                                        ; preds = %if.then124, %if.end113
  %126 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %tPoint, align 8, !dbg !16388
  %height128 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %126, i32 0, i32 0, !dbg !16389
  %127 = load float, float* %height128, align 4, !dbg !16389
  %128 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16390
  %height129 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %128, i32 0, i32 0, !dbg !16391
  %129 = load float, float* %height129, align 4, !dbg !16391
  %sub130 = fsub float %127, %129, !dbg !16392
  %130 = load float, float* %dist93, align 4, !dbg !16393
  %131 = load float, float* %dist93, align 4, !dbg !16394
  %mul131 = fmul float %130, %131, !dbg !16395
  %div132 = fdiv float %sub130, %mul131, !dbg !16396
  %132 = load float, float* %force, align 4, !dbg !16397
  %add133 = fadd float %132, %div132, !dbg !16397
  store float %add133, float* %force, align 4, !dbg !16397
  %133 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %tPoint, align 8, !dbg !16398
  %height134 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %133, i32 0, i32 0, !dbg !16399
  %134 = load float, float* %height134, align 4, !dbg !16399
  %135 = load float, float* %avg_height, align 4, !dbg !16400
  %add135 = fadd float %135, %134, !dbg !16400
  store float %add135, float* %avg_height, align 4, !dbg !16400
  br label %for.inc136, !dbg !16401

for.inc136:                                       ; preds = %if.end127, %if.then108
  %136 = load i32, i32* %i77, align 4, !dbg !16402
  %inc137 = add nsw i32 %136, 1, !dbg !16402
  store i32 %inc137, i32* %i77, align 4, !dbg !16402
  br label %for.cond83, !dbg !16403, !llvm.loop !16404

for.end138:                                       ; preds = %for.cond83
  %137 = load i32, i32* %numOfN, align 4, !dbg !16406
  %tobool139 = icmp ne i32 %137, 0, !dbg !16407
  br i1 %tobool139, label %cond.true140, label %cond.false143, !dbg !16407

cond.true140:                                     ; preds = %for.end138
  %138 = load float, float* %avg_dist, align 4, !dbg !16408
  %139 = load i32, i32* %numOfN, align 4, !dbg !16409
  %conv141 = sitofp i32 %139 to float, !dbg !16409
  %div142 = fdiv float %138, %conv141, !dbg !16410
  br label %cond.end144, !dbg !16407

cond.false143:                                    ; preds = %for.end138
  br label %cond.end144, !dbg !16407

cond.end144:                                      ; preds = %cond.false143, %cond.true140
  %cond145 = phi float [ %div142, %cond.true140 ], [ 0.000000e+00, %cond.false143 ], !dbg !16407
  store float %cond145, float* %avg_dist, align 4, !dbg !16411
  %140 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16412
  %flags146 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %140, i32 0, i32 18, !dbg !16414
  %141 = load i32, i32* %flags146, align 4, !dbg !16414
  %and147 = and i32 %141, 128, !dbg !16415
  %tobool148 = icmp ne i32 %and147, 0, !dbg !16415
  br i1 %tobool148, label %land.lhs.true, label %if.else172, !dbg !16416

land.lhs.true:                                    ; preds = %cond.end144
  %142 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16417
  %adj_data149 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %142, i32 0, i32 2, !dbg !16418
  %143 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data149, align 8, !dbg !16418
  %flags150 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %143, i32 0, i32 3, !dbg !16419
  %144 = load i32*, i32** %flags150, align 8, !dbg !16419
  %145 = load i32, i32* %index, align 4, !dbg !16420
  %idxprom151 = sext i32 %145 to i64, !dbg !16417
  %arrayidx152 = getelementptr inbounds i32, i32* %144, i64 %idxprom151, !dbg !16417
  %146 = load i32, i32* %arrayidx152, align 4, !dbg !16417
  %and153 = and i32 %146, 1, !dbg !16421
  %tobool154 = icmp ne i32 %and153, 0, !dbg !16421
  br i1 %tobool154, label %if.then155, label %if.else172, !dbg !16422

if.then155:                                       ; preds = %land.lhs.true
  %147 = load i32, i32* %numOfRN, align 4, !dbg !16423
  %tobool156 = icmp ne i32 %147, 0, !dbg !16425
  br i1 %tobool156, label %cond.true157, label %cond.false160, !dbg !16425

cond.true157:                                     ; preds = %if.then155
  %148 = load float, float* %avg_n_height, align 4, !dbg !16426
  %149 = load i32, i32* %numOfRN, align 4, !dbg !16427
  %conv158 = sitofp i32 %149 to float, !dbg !16427
  %div159 = fdiv float %148, %conv158, !dbg !16428
  br label %cond.end161, !dbg !16425

cond.false160:                                    ; preds = %if.then155
  br label %cond.end161, !dbg !16425

cond.end161:                                      ; preds = %cond.false160, %cond.true157
  %cond162 = phi float [ %div159, %cond.true157 ], [ 0.000000e+00, %cond.false160 ], !dbg !16425
  store float %cond162, float* %avg_n_height, align 4, !dbg !16429
  %150 = load float, float* %dt, align 4, !dbg !16430
  %151 = load float, float* %wave_speed, align 4, !dbg !16431
  %mul163 = fmul float %150, %151, !dbg !16432
  %152 = load float, float* %avg_n_height, align 4, !dbg !16433
  %mul164 = fmul float %mul163, %152, !dbg !16434
  %153 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16435
  %height165 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %153, i32 0, i32 0, !dbg !16436
  %154 = load float, float* %height165, align 4, !dbg !16436
  %155 = load float, float* %avg_dist, align 4, !dbg !16437
  %mul166 = fmul float %154, %155, !dbg !16438
  %add167 = fadd float %mul164, %mul166, !dbg !16439
  %156 = load float, float* %avg_dist, align 4, !dbg !16440
  %157 = load float, float* %dt, align 4, !dbg !16441
  %158 = load float, float* %wave_speed, align 4, !dbg !16442
  %mul168 = fmul float %157, %158, !dbg !16443
  %add169 = fadd float %156, %mul168, !dbg !16444
  %div170 = fdiv float %add167, %add169, !dbg !16445
  %159 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16446
  %height171 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %159, i32 0, i32 0, !dbg !16447
  store float %div170, float* %height171, align 4, !dbg !16448
  br label %if.end222, !dbg !16449

if.else172:                                       ; preds = %land.lhs.true, %cond.end144
  %160 = load float, float* %avg_dist, align 4, !dbg !16450
  %tobool173 = fcmp une float %160, 0.000000e+00, !dbg !16450
  br i1 %tobool173, label %if.then174, label %if.end182, !dbg !16453

if.then174:                                       ; preds = %if.else172
  %161 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16454
  %height175 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %161, i32 0, i32 0, !dbg !16455
  %162 = load float, float* %height175, align 4, !dbg !16455
  %sub176 = fsub float 0.000000e+00, %162, !dbg !16456
  %163 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16457
  %wave_spring = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %163, i32 0, i32 43, !dbg !16458
  %164 = load float, float* %wave_spring, align 4, !dbg !16458
  %mul177 = fmul float %sub176, %164, !dbg !16459
  %165 = load float, float* %avg_dist, align 4, !dbg !16460
  %166 = load float, float* %avg_dist, align 4, !dbg !16461
  %mul178 = fmul float %165, %166, !dbg !16462
  %div179 = fdiv float %mul177, %mul178, !dbg !16463
  %div180 = fdiv float %div179, 2.000000e+00, !dbg !16464
  %167 = load float, float* %force, align 4, !dbg !16465
  %add181 = fadd float %167, %div180, !dbg !16465
  store float %add181, float* %force, align 4, !dbg !16465
  br label %if.end182, !dbg !16466

if.end182:                                        ; preds = %if.then174, %if.else172
  %168 = load float, float* %force, align 4, !dbg !16467
  %169 = load float, float* %dt, align 4, !dbg !16468
  %mul183 = fmul float %168, %169, !dbg !16469
  %170 = load float, float* %wave_speed, align 4, !dbg !16470
  %mul184 = fmul float %mul183, %170, !dbg !16471
  %171 = load float, float* %wave_speed, align 4, !dbg !16472
  %mul185 = fmul float %mul184, %171, !dbg !16473
  %172 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16474
  %velocity = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %172, i32 0, i32 1, !dbg !16475
  %173 = load float, float* %velocity, align 4, !dbg !16476
  %add186 = fadd float %173, %mul185, !dbg !16476
  store float %add186, float* %velocity, align 4, !dbg !16476
  %174 = load float, float* %damp_factor, align 4, !dbg !16477
  %175 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16478
  %velocity187 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %175, i32 0, i32 1, !dbg !16479
  %176 = load float, float* %velocity187, align 4, !dbg !16480
  %mul188 = fmul float %176, %174, !dbg !16480
  store float %mul188, float* %velocity187, align 4, !dbg !16480
  %177 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16481
  %velocity189 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %177, i32 0, i32 1, !dbg !16482
  %178 = load float, float* %velocity189, align 4, !dbg !16482
  %179 = load float, float* %dt, align 4, !dbg !16483
  %mul190 = fmul float %178, %179, !dbg !16484
  %180 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16485
  %height191 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %180, i32 0, i32 0, !dbg !16486
  %181 = load float, float* %height191, align 4, !dbg !16487
  %add192 = fadd float %181, %mul190, !dbg !16487
  store float %add192, float* %height191, align 4, !dbg !16487
  %182 = load float, float* %wave_max_slope, align 4, !dbg !16488
  %tobool193 = fcmp une float %182, 0.000000e+00, !dbg !16488
  br i1 %tobool193, label %land.lhs.true194, label %if.end221, !dbg !16490

land.lhs.true194:                                 ; preds = %if.end182
  %183 = load float, float* %avg_dist, align 4, !dbg !16491
  %tobool195 = fcmp une float %183, 0.000000e+00, !dbg !16491
  br i1 %tobool195, label %if.then196, label %if.end221, !dbg !16492

if.then196:                                       ; preds = %land.lhs.true194
  call void @llvm.dbg.declare(metadata float* %max_offset, metadata !16493, metadata !DIExpression()), !dbg !16495
  %184 = load float, float* %wave_max_slope, align 4, !dbg !16496
  %185 = load float, float* %avg_dist, align 4, !dbg !16497
  %mul197 = fmul float %184, %185, !dbg !16498
  store float %mul197, float* %max_offset, align 4, !dbg !16495
  call void @llvm.dbg.declare(metadata float* %offset, metadata !16499, metadata !DIExpression()), !dbg !16500
  %186 = load i32, i32* %numOfN, align 4, !dbg !16501
  %tobool198 = icmp ne i32 %186, 0, !dbg !16502
  br i1 %tobool198, label %cond.true199, label %cond.false204, !dbg !16502

cond.true199:                                     ; preds = %if.then196
  %187 = load float, float* %avg_height, align 4, !dbg !16503
  %188 = load i32, i32* %numOfN, align 4, !dbg !16504
  %conv200 = sitofp i32 %188 to float, !dbg !16504
  %div201 = fdiv float %187, %conv200, !dbg !16505
  %189 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16506
  %height202 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %189, i32 0, i32 0, !dbg !16507
  %190 = load float, float* %height202, align 4, !dbg !16507
  %sub203 = fsub float %div201, %190, !dbg !16508
  br label %cond.end205, !dbg !16502

cond.false204:                                    ; preds = %if.then196
  br label %cond.end205, !dbg !16502

cond.end205:                                      ; preds = %cond.false204, %cond.true199
  %cond206 = phi float [ %sub203, %cond.true199 ], [ 0.000000e+00, %cond.false204 ], !dbg !16502
  store float %cond206, float* %offset, align 4, !dbg !16500
  %191 = load float, float* %offset, align 4, !dbg !16509
  %192 = load float, float* %max_offset, align 4, !dbg !16511
  %cmp207 = fcmp ogt float %191, %192, !dbg !16512
  br i1 %cmp207, label %if.then209, label %if.end213, !dbg !16513

if.then209:                                       ; preds = %cond.end205
  %193 = load float, float* %offset, align 4, !dbg !16514
  %194 = load float, float* %max_offset, align 4, !dbg !16515
  %sub210 = fsub float %193, %194, !dbg !16516
  %195 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16517
  %height211 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %195, i32 0, i32 0, !dbg !16518
  %196 = load float, float* %height211, align 4, !dbg !16519
  %add212 = fadd float %196, %sub210, !dbg !16519
  store float %add212, float* %height211, align 4, !dbg !16519
  br label %if.end213, !dbg !16517

if.end213:                                        ; preds = %if.then209, %cond.end205
  %197 = load float, float* %offset, align 4, !dbg !16520
  %198 = load float, float* %max_offset, align 4, !dbg !16522
  %fneg = fneg float %198, !dbg !16523
  %cmp214 = fcmp olt float %197, %fneg, !dbg !16524
  br i1 %cmp214, label %if.then216, label %if.end220, !dbg !16525

if.then216:                                       ; preds = %if.end213
  %199 = load float, float* %offset, align 4, !dbg !16526
  %200 = load float, float* %max_offset, align 4, !dbg !16527
  %add217 = fadd float %199, %200, !dbg !16528
  %201 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint, align 8, !dbg !16529
  %height218 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %201, i32 0, i32 0, !dbg !16530
  %202 = load float, float* %height218, align 4, !dbg !16531
  %add219 = fadd float %202, %add217, !dbg !16531
  store float %add219, float* %height218, align 4, !dbg !16531
  br label %if.end220, !dbg !16529

if.end220:                                        ; preds = %if.then216, %if.end213
  br label %if.end221, !dbg !16532

if.end221:                                        ; preds = %if.end220, %land.lhs.true194, %if.end182
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %cond.end161
  br label %for.inc223, !dbg !16533

for.inc223:                                       ; preds = %if.end222, %if.then81
  %203 = load i32, i32* %index, align 4, !dbg !16534
  %inc224 = add nsw i32 %203, 1, !dbg !16534
  store i32 %inc224, i32* %index, align 4, !dbg !16534
  br label %for.cond64, !dbg !16535, !llvm.loop !16536

for.end225:                                       ; preds = %for.cond64
  br label %for.inc226, !dbg !16538

for.inc226:                                       ; preds = %for.end225
  %204 = load i32, i32* %ss, align 4, !dbg !16539
  %inc227 = add nsw i32 %204, 1, !dbg !16539
  store i32 %inc227, i32* %ss, align 4, !dbg !16539
  br label %for.cond57, !dbg !16540, !llvm.loop !16541

for.end228:                                       ; preds = %for.cond57
  store i32 0, i32* %index, align 4, !dbg !16543
  br label %for.cond229, !dbg !16545

for.cond229:                                      ; preds = %for.inc245, %for.end228
  %205 = load i32, i32* %index, align 4, !dbg !16546
  %206 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16548
  %total_points230 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %206, i32 0, i32 4, !dbg !16549
  %207 = load i32, i32* %total_points230, align 8, !dbg !16549
  %cmp231 = icmp slt i32 %205, %207, !dbg !16550
  br i1 %cmp231, label %for.body233, label %for.end247, !dbg !16551

for.body233:                                      ; preds = %for.cond229
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %wPoint234, metadata !16552, metadata !DIExpression()), !dbg !16554
  %208 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16555
  %type_data235 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %208, i32 0, i32 1, !dbg !16556
  %209 = load i8*, i8** %type_data235, align 8, !dbg !16556
  %210 = bitcast i8* %209 to %struct.PaintWavePoint*, !dbg !16557
  %211 = load i32, i32* %index, align 4, !dbg !16558
  %idxprom236 = sext i32 %211 to i64, !dbg !16559
  %arrayidx237 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %210, i64 %idxprom236, !dbg !16559
  store %struct.PaintWavePoint* %arrayidx237, %struct.PaintWavePoint** %wPoint234, align 8, !dbg !16554
  %212 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint234, align 8, !dbg !16560
  %state238 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %212, i32 0, i32 3, !dbg !16562
  %213 = load i16, i16* %state238, align 4, !dbg !16562
  %conv239 = sext i16 %213 to i32, !dbg !16560
  %cmp240 = icmp eq i32 %conv239, 0, !dbg !16563
  br i1 %cmp240, label %if.then242, label %if.end243, !dbg !16564

if.then242:                                       ; preds = %for.body233
  %214 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint234, align 8, !dbg !16565
  %brush_isect = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %214, i32 0, i32 2, !dbg !16567
  store float 0.000000e+00, float* %brush_isect, align 4, !dbg !16568
  br label %if.end243, !dbg !16569

if.end243:                                        ; preds = %if.then242, %for.body233
  %215 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint234, align 8, !dbg !16570
  %state244 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %215, i32 0, i32 3, !dbg !16571
  store i16 0, i16* %state244, align 4, !dbg !16572
  br label %for.inc245, !dbg !16573

for.inc245:                                       ; preds = %if.end243
  %216 = load i32, i32* %index, align 4, !dbg !16574
  %inc246 = add nsw i32 %216, 1, !dbg !16574
  store i32 %inc246, i32* %index, align 4, !dbg !16574
  br label %for.cond229, !dbg !16575, !llvm.loop !16576

for.end247:                                       ; preds = %for.cond229
  %217 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !16578
  %218 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %prevPoint, align 8, !dbg !16579
  %219 = bitcast %struct.PaintWavePoint* %218 to i8*, !dbg !16579
  call void %217(i8* %219), !dbg !16578
  br label %return, !dbg !16580

return:                                           ; preds = %for.end247, %if.then
  ret void, !dbg !16580
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dynamicPaint_prepareEffectStep(%struct.DynamicPaintSurface* %surface, %struct.Scene* %scene, %struct.Object* %ob, float** %force, float %timescale) #0 !dbg !16581 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %force.addr = alloca float**, align 8
  %timescale.addr = alloca float, align 4
  %average_force = alloca double, align 8
  %shrink_speed = alloca float, align 4
  %spread_speed = alloca float, align 4
  %fastest_effect = alloca float, align 4
  %avg_dist = alloca float, align 4
  %steps = alloca i32, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bData = alloca %struct.PaintBakeData*, align 8
  %realCoord = alloca %struct.Vec3f*, align 8
  %index = alloca i32, align 4
  %vel = alloca [3 x float], align 4
  %effectors = alloca %struct.ListBase*, align 8
  %forc = alloca [3 x float], align 4
  %epoint = alloca %struct.EffectedPoint, align 8
  %acc = alloca [3 x float], align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !16585, metadata !DIExpression()), !dbg !16586
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !16587, metadata !DIExpression()), !dbg !16588
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !16589, metadata !DIExpression()), !dbg !16590
  store float** %force, float*** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float*** %force.addr, metadata !16591, metadata !DIExpression()), !dbg !16592
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !16593, metadata !DIExpression()), !dbg !16594
  call void @llvm.dbg.declare(metadata double* %average_force, metadata !16595, metadata !DIExpression()), !dbg !16596
  store double 0.000000e+00, double* %average_force, align 8, !dbg !16596
  call void @llvm.dbg.declare(metadata float* %shrink_speed, metadata !16597, metadata !DIExpression()), !dbg !16598
  store float 0.000000e+00, float* %shrink_speed, align 4, !dbg !16598
  call void @llvm.dbg.declare(metadata float* %spread_speed, metadata !16599, metadata !DIExpression()), !dbg !16600
  store float 0.000000e+00, float* %spread_speed, align 4, !dbg !16600
  call void @llvm.dbg.declare(metadata float* %fastest_effect, metadata !16601, metadata !DIExpression()), !dbg !16602
  call void @llvm.dbg.declare(metadata float* %avg_dist, metadata !16603, metadata !DIExpression()), !dbg !16604
  call void @llvm.dbg.declare(metadata i32* %steps, metadata !16605, metadata !DIExpression()), !dbg !16606
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !16607, metadata !DIExpression()), !dbg !16608
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16609
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !16610
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !16610
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !16608
  call void @llvm.dbg.declare(metadata %struct.PaintBakeData** %bData, metadata !16611, metadata !DIExpression()), !dbg !16612
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16613
  %bData1 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !16614
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData1, align 8, !dbg !16614
  store %struct.PaintBakeData* %3, %struct.PaintBakeData** %bData, align 8, !dbg !16612
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %realCoord, metadata !16615, metadata !DIExpression()), !dbg !16616
  %4 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16617
  %realCoord2 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %4, i32 0, i32 3, !dbg !16618
  %5 = load %struct.Vec3f*, %struct.Vec3f** %realCoord2, align 8, !dbg !16618
  store %struct.Vec3f* %5, %struct.Vec3f** %realCoord, align 8, !dbg !16616
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16619, metadata !DIExpression()), !dbg !16620
  %6 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16621
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %6, i32 0, i32 19, !dbg !16623
  %7 = load i32, i32* %effect, align 8, !dbg !16623
  %and = and i32 %7, 2, !dbg !16624
  %tobool = icmp ne i32 %and, 0, !dbg !16624
  br i1 %tobool, label %if.then, label %if.end101, !dbg !16625

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %vel, metadata !16626, metadata !DIExpression()), !dbg !16628
  %8 = bitcast [3 x float]* %vel to i8*, !dbg !16628
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 12, i1 false), !dbg !16628
  call void @llvm.dbg.declare(metadata %struct.ListBase** %effectors, metadata !16629, metadata !DIExpression()), !dbg !16630
  %9 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16631
  %10 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !16632
  %11 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16633
  %effector_weights = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %11, i32 0, i32 5, !dbg !16634
  %12 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights, align 8, !dbg !16634
  %call = call %struct.ListBase* @pdInitEffectors(%struct.Scene* %9, %struct.Object* %10, %struct.ParticleSystem* null, %struct.EffectorWeights* %12, i8 zeroext 1), !dbg !16635
  store %struct.ListBase* %call, %struct.ListBase** %effectors, align 8, !dbg !16630
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !16636
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16637
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 4, !dbg !16638
  %15 = load i32, i32* %total_points, align 8, !dbg !16638
  %mul = mul nsw i32 %15, 4, !dbg !16639
  %conv = sext i32 %mul to i64, !dbg !16637
  %mul3 = mul i64 %conv, 4, !dbg !16640
  %call4 = call i8* %13(i64 %mul3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0)), !dbg !16636
  %16 = bitcast i8* %call4 to float*, !dbg !16636
  %17 = load float**, float*** %force.addr, align 8, !dbg !16641
  store float* %16, float** %17, align 8, !dbg !16642
  %18 = load float**, float*** %force.addr, align 8, !dbg !16643
  %19 = load float*, float** %18, align 8, !dbg !16645
  %tobool5 = icmp ne float* %19, null, !dbg !16645
  br i1 %tobool5, label %if.then6, label %if.end100, !dbg !16646

if.then6:                                         ; preds = %if.then
  store i32 0, i32* %index, align 4, !dbg !16647
  br label %for.cond, !dbg !16650

for.cond:                                         ; preds = %for.inc, %if.then6
  %20 = load i32, i32* %index, align 4, !dbg !16651
  %21 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16653
  %total_points7 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %21, i32 0, i32 4, !dbg !16654
  %22 = load i32, i32* %total_points7, align 8, !dbg !16654
  %cmp = icmp slt i32 %20, %22, !dbg !16655
  br i1 %cmp, label %for.body, label %for.end, !dbg !16656

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %forc, metadata !16657, metadata !DIExpression()), !dbg !16659
  %23 = bitcast [3 x float]* %forc to i8*, !dbg !16659
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 12, i1 false), !dbg !16659
  %24 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !16660
  %tobool9 = icmp ne %struct.ListBase* %24, null, !dbg !16660
  br i1 %tobool9, label %if.then10, label %if.end, !dbg !16662

if.then10:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.EffectedPoint* %epoint, metadata !16663, metadata !DIExpression()), !dbg !16679
  %25 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16680
  %26 = load %struct.Vec3f*, %struct.Vec3f** %realCoord, align 8, !dbg !16681
  %27 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16682
  %s_pos = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %27, i32 0, i32 1, !dbg !16683
  %28 = load i32*, i32** %s_pos, align 8, !dbg !16683
  %29 = load i32, i32* %index, align 4, !dbg !16684
  %idxprom = sext i32 %29 to i64, !dbg !16682
  %arrayidx = getelementptr inbounds i32, i32* %28, i64 %idxprom, !dbg !16682
  %30 = load i32, i32* %arrayidx, align 4, !dbg !16682
  %idxprom11 = sext i32 %30 to i64, !dbg !16681
  %arrayidx12 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %26, i64 %idxprom11, !dbg !16681
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx12, i32 0, i32 0, !dbg !16685
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !16681
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %vel, i64 0, i64 0, !dbg !16686
  %31 = load i32, i32* %index, align 4, !dbg !16687
  call void @pd_point_from_loc(%struct.Scene* %25, float* %arraydecay, float* %arraydecay13, i32 %31, %struct.EffectedPoint* %epoint), !dbg !16688
  %vel_to_sec = getelementptr inbounds %struct.EffectedPoint, %struct.EffectedPoint* %epoint, i32 0, i32 5, !dbg !16689
  store float 1.000000e+00, float* %vel_to_sec, align 4, !dbg !16690
  %32 = load %struct.ListBase*, %struct.ListBase** %effectors, align 8, !dbg !16691
  %33 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16692
  %effector_weights14 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %33, i32 0, i32 5, !dbg !16693
  %34 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights14, align 8, !dbg !16693
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16694
  call void @pdDoEffectors(%struct.ListBase* %32, %struct.ListBase* null, %struct.EffectorWeights* %34, %struct.EffectedPoint* %epoint, float* %arraydecay15, float* null), !dbg !16695
  br label %if.end, !dbg !16696

if.end:                                           ; preds = %if.then10, %for.body
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16697
  %physics_settings = getelementptr inbounds %struct.Scene, %struct.Scene* %35, i32 0, i32 40, !dbg !16699
  %flag = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings, i32 0, i32 1, !dbg !16700
  %36 = load i32, i32* %flag, align 4, !dbg !16700
  %and16 = and i32 %36, 1, !dbg !16701
  %tobool17 = icmp ne i32 %and16, 0, !dbg !16701
  br i1 %tobool17, label %if.then18, label %if.end26, !dbg !16702

if.then18:                                        ; preds = %if.end
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16703
  %37 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !16704
  %physics_settings20 = getelementptr inbounds %struct.Scene, %struct.Scene* %37, i32 0, i32 40, !dbg !16705
  %gravity = getelementptr inbounds %struct.PhysicsSettings, %struct.PhysicsSettings* %physics_settings20, i32 0, i32 0, !dbg !16706
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %gravity, i64 0, i64 0, !dbg !16704
  %38 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16707
  %effector_weights22 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %38, i32 0, i32 5, !dbg !16708
  %39 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights22, align 8, !dbg !16708
  %global_gravity = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %39, i32 0, i32 2, !dbg !16709
  %40 = load float, float* %global_gravity, align 8, !dbg !16709
  %41 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16710
  %effector_weights23 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %41, i32 0, i32 5, !dbg !16711
  %42 = load %struct.EffectorWeights*, %struct.EffectorWeights** %effector_weights23, align 8, !dbg !16711
  %weight = getelementptr inbounds %struct.EffectorWeights, %struct.EffectorWeights* %42, i32 0, i32 1, !dbg !16712
  %arrayidx24 = getelementptr inbounds [14 x float], [14 x float]* %weight, i64 0, i64 0, !dbg !16710
  %43 = load float, float* %arrayidx24, align 8, !dbg !16710
  %mul25 = fmul float %40, %43, !dbg !16713
  %div = fdiv float %mul25, 1.000000e+01, !dbg !16714
  call void @madd_v3_v3fl(float* %arraydecay19, float* %arraydecay21, float %div), !dbg !16715
  br label %if.end26, !dbg !16715

if.end26:                                         ; preds = %if.then18, %if.end
  %44 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16716
  %velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %44, i32 0, i32 8, !dbg !16718
  %45 = load %struct.Vec3f*, %struct.Vec3f** %velocity, align 8, !dbg !16718
  %tobool27 = icmp ne %struct.Vec3f* %45, null, !dbg !16716
  br i1 %tobool27, label %if.then28, label %if.end60, !dbg !16719

if.then28:                                        ; preds = %if.end26
  %46 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16720
  %drip_vel = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %46, i32 0, i32 36, !dbg !16723
  %47 = load float, float* %drip_vel, align 8, !dbg !16723
  %tobool29 = fcmp une float %47, 0.000000e+00, !dbg !16720
  br i1 %tobool29, label %if.then30, label %if.end39, !dbg !16724

if.then30:                                        ; preds = %if.then28
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16725
  %48 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16726
  %velocity32 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %48, i32 0, i32 8, !dbg !16727
  %49 = load %struct.Vec3f*, %struct.Vec3f** %velocity32, align 8, !dbg !16727
  %50 = load i32, i32* %index, align 4, !dbg !16728
  %idxprom33 = sext i32 %50 to i64, !dbg !16726
  %arrayidx34 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %49, i64 %idxprom33, !dbg !16726
  %v35 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx34, i32 0, i32 0, !dbg !16729
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %v35, i64 0, i64 0, !dbg !16726
  %51 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16730
  %drip_vel37 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %51, i32 0, i32 36, !dbg !16731
  %52 = load float, float* %drip_vel37, align 8, !dbg !16731
  %mul38 = fmul float %52, -1.000000e+00, !dbg !16732
  call void @madd_v3_v3fl(float* %arraydecay31, float* %arraydecay36, float %mul38), !dbg !16733
  br label %if.end39, !dbg !16733

if.end39:                                         ; preds = %if.then30, %if.then28
  %53 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16734
  %prev_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %53, i32 0, i32 9, !dbg !16736
  %54 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity, align 8, !dbg !16736
  %tobool40 = icmp ne %struct.Vec3f* %54, null, !dbg !16734
  br i1 %tobool40, label %land.lhs.true, label %if.end59, !dbg !16737

land.lhs.true:                                    ; preds = %if.end39
  %55 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16738
  %drip_acc = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %55, i32 0, i32 37, !dbg !16739
  %56 = load float, float* %drip_acc, align 4, !dbg !16739
  %tobool41 = fcmp une float %56, 0.000000e+00, !dbg !16738
  br i1 %tobool41, label %if.then42, label %if.end59, !dbg !16740

if.then42:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %acc, metadata !16741, metadata !DIExpression()), !dbg !16743
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 0, !dbg !16744
  %57 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16745
  %velocity44 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %57, i32 0, i32 8, !dbg !16746
  %58 = load %struct.Vec3f*, %struct.Vec3f** %velocity44, align 8, !dbg !16746
  %59 = load i32, i32* %index, align 4, !dbg !16747
  %idxprom45 = sext i32 %59 to i64, !dbg !16745
  %arrayidx46 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %58, i64 %idxprom45, !dbg !16745
  %v47 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx46, i32 0, i32 0, !dbg !16748
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %v47, i64 0, i64 0, !dbg !16745
  call void @copy_v3_v3(float* %arraydecay43, float* %arraydecay48), !dbg !16749
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 0, !dbg !16750
  %60 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16751
  %prev_velocity50 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %60, i32 0, i32 9, !dbg !16752
  %61 = load %struct.Vec3f*, %struct.Vec3f** %prev_velocity50, align 8, !dbg !16752
  %62 = load i32, i32* %index, align 4, !dbg !16753
  %idxprom51 = sext i32 %62 to i64, !dbg !16751
  %arrayidx52 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %61, i64 %idxprom51, !dbg !16751
  %v53 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx52, i32 0, i32 0, !dbg !16754
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %v53, i64 0, i64 0, !dbg !16751
  call void @sub_v3_v3(float* %arraydecay49, float* %arraydecay54), !dbg !16755
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16756
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %acc, i64 0, i64 0, !dbg !16757
  %63 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16758
  %drip_acc57 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %63, i32 0, i32 37, !dbg !16759
  %64 = load float, float* %drip_acc57, align 4, !dbg !16759
  %mul58 = fmul float %64, -1.000000e+00, !dbg !16760
  call void @madd_v3_v3fl(float* %arraydecay55, float* %arraydecay56, float %mul58), !dbg !16761
  br label %if.end59, !dbg !16762

if.end59:                                         ; preds = %if.then42, %land.lhs.true, %if.end39
  br label %if.end60, !dbg !16763

if.end60:                                         ; preds = %if.end59, %if.end26
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16764
  %call62 = call float @len_v3(float* %arraydecay61), !dbg !16765
  %65 = load float**, float*** %force.addr, align 8, !dbg !16766
  %66 = load float*, float** %65, align 8, !dbg !16767
  %67 = load i32, i32* %index, align 4, !dbg !16768
  %mul63 = mul nsw i32 %67, 4, !dbg !16769
  %add = add nsw i32 %mul63, 3, !dbg !16770
  %idxprom64 = sext i32 %add to i64, !dbg !16771
  %arrayidx65 = getelementptr inbounds float, float* %66, i64 %idxprom64, !dbg !16771
  store float %call62, float* %arrayidx65, align 4, !dbg !16772
  %68 = load float**, float*** %force.addr, align 8, !dbg !16773
  %69 = load float*, float** %68, align 8, !dbg !16775
  %70 = load i32, i32* %index, align 4, !dbg !16776
  %mul66 = mul nsw i32 %70, 4, !dbg !16777
  %add67 = add nsw i32 %mul66, 3, !dbg !16778
  %idxprom68 = sext i32 %add67 to i64, !dbg !16779
  %arrayidx69 = getelementptr inbounds float, float* %69, i64 %idxprom68, !dbg !16779
  %71 = load float, float* %arrayidx69, align 4, !dbg !16779
  %tobool70 = fcmp une float %71, 0.000000e+00, !dbg !16779
  br i1 %tobool70, label %if.then71, label %if.end78, !dbg !16780

if.then71:                                        ; preds = %if.end60
  %arraydecay72 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16781
  %72 = load float**, float*** %force.addr, align 8, !dbg !16782
  %73 = load float*, float** %72, align 8, !dbg !16783
  %74 = load i32, i32* %index, align 4, !dbg !16784
  %mul73 = mul nsw i32 %74, 4, !dbg !16785
  %add74 = add nsw i32 %mul73, 3, !dbg !16786
  %idxprom75 = sext i32 %add74 to i64, !dbg !16787
  %arrayidx76 = getelementptr inbounds float, float* %73, i64 %idxprom75, !dbg !16787
  %75 = load float, float* %arrayidx76, align 4, !dbg !16787
  %div77 = fdiv float 1.000000e+00, %75, !dbg !16788
  call void @mul_v3_fl(float* %arraydecay72, float %div77), !dbg !16789
  br label %if.end78, !dbg !16789

if.end78:                                         ; preds = %if.then71, %if.end60
  %76 = load float**, float*** %force.addr, align 8, !dbg !16790
  %77 = load float*, float** %76, align 8, !dbg !16791
  %78 = load i32, i32* %index, align 4, !dbg !16792
  %mul79 = mul nsw i32 %78, 4, !dbg !16793
  %idxprom80 = sext i32 %mul79 to i64, !dbg !16794
  %arrayidx81 = getelementptr inbounds float, float* %77, i64 %idxprom80, !dbg !16794
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %forc, i64 0, i64 0, !dbg !16795
  call void @copy_v3_v3(float* %arrayidx81, float* %arraydecay82), !dbg !16796
  br label %for.inc, !dbg !16797

for.inc:                                          ; preds = %if.end78
  %79 = load i32, i32* %index, align 4, !dbg !16798
  %inc = add nsw i32 %79, 1, !dbg !16798
  store i32 %inc, i32* %index, align 4, !dbg !16798
  br label %for.cond, !dbg !16799, !llvm.loop !16800

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %index, align 4, !dbg !16802
  br label %for.cond83, !dbg !16804

for.cond83:                                       ; preds = %for.inc94, %for.end
  %80 = load i32, i32* %index, align 4, !dbg !16805
  %81 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16807
  %total_points84 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %81, i32 0, i32 4, !dbg !16808
  %82 = load i32, i32* %total_points84, align 8, !dbg !16808
  %cmp85 = icmp slt i32 %80, %82, !dbg !16809
  br i1 %cmp85, label %for.body87, label %for.end96, !dbg !16810

for.body87:                                       ; preds = %for.cond83
  %83 = load float**, float*** %force.addr, align 8, !dbg !16811
  %84 = load float*, float** %83, align 8, !dbg !16813
  %85 = load i32, i32* %index, align 4, !dbg !16814
  %mul88 = mul nsw i32 %85, 4, !dbg !16815
  %add89 = add nsw i32 %mul88, 3, !dbg !16816
  %idxprom90 = sext i32 %add89 to i64, !dbg !16817
  %arrayidx91 = getelementptr inbounds float, float* %84, i64 %idxprom90, !dbg !16817
  %86 = load float, float* %arrayidx91, align 4, !dbg !16817
  %conv92 = fpext float %86 to double, !dbg !16817
  %87 = load double, double* %average_force, align 8, !dbg !16818
  %add93 = fadd double %87, %conv92, !dbg !16818
  store double %add93, double* %average_force, align 8, !dbg !16818
  br label %for.inc94, !dbg !16819

for.inc94:                                        ; preds = %for.body87
  %88 = load i32, i32* %index, align 4, !dbg !16820
  %inc95 = add nsw i32 %88, 1, !dbg !16820
  store i32 %inc95, i32* %index, align 4, !dbg !16820
  br label %for.cond83, !dbg !16821, !llvm.loop !16822

for.end96:                                        ; preds = %for.cond83
  %89 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16824
  %total_points97 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %89, i32 0, i32 4, !dbg !16825
  %90 = load i32, i32* %total_points97, align 8, !dbg !16825
  %conv98 = sitofp i32 %90 to double, !dbg !16824
  %91 = load double, double* %average_force, align 8, !dbg !16826
  %div99 = fdiv double %91, %conv98, !dbg !16826
  store double %div99, double* %average_force, align 8, !dbg !16826
  br label %if.end100, !dbg !16827

if.end100:                                        ; preds = %for.end96, %if.then
  call void @pdEndEffectors(%struct.ListBase** %effectors), !dbg !16828
  br label %if.end101, !dbg !16829

if.end101:                                        ; preds = %if.end100, %entry
  %92 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16830
  %effect102 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %92, i32 0, i32 19, !dbg !16832
  %93 = load i32, i32* %effect102, align 8, !dbg !16832
  %and103 = and i32 %93, 1, !dbg !16833
  %tobool104 = icmp ne i32 %and103, 0, !dbg !16833
  br i1 %tobool104, label %if.then105, label %if.end107, !dbg !16834

if.then105:                                       ; preds = %if.end101
  %94 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16835
  %spread_speed106 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %94, i32 0, i32 33, !dbg !16836
  %95 = load float, float* %spread_speed106, align 4, !dbg !16836
  store float %95, float* %spread_speed, align 4, !dbg !16837
  br label %if.end107, !dbg !16838

if.end107:                                        ; preds = %if.then105, %if.end101
  %96 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16839
  %effect108 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %96, i32 0, i32 19, !dbg !16841
  %97 = load i32, i32* %effect108, align 8, !dbg !16841
  %and109 = and i32 %97, 4, !dbg !16842
  %tobool110 = icmp ne i32 %and109, 0, !dbg !16842
  br i1 %tobool110, label %if.then111, label %if.end113, !dbg !16843

if.then111:                                       ; preds = %if.end107
  %98 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16844
  %shrink_speed112 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %98, i32 0, i32 35, !dbg !16845
  %99 = load float, float* %shrink_speed112, align 4, !dbg !16845
  store float %99, float* %shrink_speed, align 4, !dbg !16846
  br label %if.end113, !dbg !16847

if.end113:                                        ; preds = %if.then111, %if.end107
  %100 = load float, float* %spread_speed, align 4, !dbg !16848
  %101 = load float, float* %shrink_speed, align 4, !dbg !16849
  %102 = load double, double* %average_force, align 8, !dbg !16850
  %conv114 = fptrunc double %102 to float, !dbg !16850
  %call115 = call float @max_fff(float %100, float %101, float %conv114), !dbg !16851
  store float %call115, float* %fastest_effect, align 4, !dbg !16852
  %103 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16853
  %average_dist = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %103, i32 0, i32 6, !dbg !16854
  %104 = load double, double* %average_dist, align 8, !dbg !16854
  %mul116 = fmul double %104, 5.000000e+00, !dbg !16855
  %105 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16856
  %call117 = call float @getSurfaceDimension(%struct.PaintSurfaceData* %105), !dbg !16857
  %conv118 = fpext float %call117 to double, !dbg !16857
  %div119 = fdiv double %mul116, %conv118, !dbg !16858
  %conv120 = fptrunc double %div119 to float, !dbg !16853
  store float %conv120, float* %avg_dist, align 4, !dbg !16859
  %106 = load float, float* %fastest_effect, align 4, !dbg !16860
  %mul121 = fmul float 0x3FB3333340000000, %106, !dbg !16861
  %107 = load float, float* %avg_dist, align 4, !dbg !16862
  %div122 = fdiv float %mul121, %107, !dbg !16863
  %108 = load float, float* %timescale.addr, align 4, !dbg !16864
  %mul123 = fmul float %div122, %108, !dbg !16865
  %conv124 = fpext float %mul123 to double, !dbg !16866
  %109 = call double @llvm.ceil.f64(double %conv124), !dbg !16867
  %conv125 = fptosi double %109 to i32, !dbg !16868
  store i32 %conv125, i32* %steps, align 4, !dbg !16869
  %110 = load i32, i32* %steps, align 4, !dbg !16870
  %cmp126 = icmp slt i32 %110, 1, !dbg !16870
  br i1 %cmp126, label %if.then128, label %if.else, !dbg !16873

if.then128:                                       ; preds = %if.end113
  store i32 1, i32* %steps, align 4, !dbg !16870
  br label %if.end133, !dbg !16870

if.else:                                          ; preds = %if.end113
  %111 = load i32, i32* %steps, align 4, !dbg !16874
  %cmp129 = icmp sgt i32 %111, 20, !dbg !16874
  br i1 %cmp129, label %if.then131, label %if.end132, !dbg !16870

if.then131:                                       ; preds = %if.else
  store i32 20, i32* %steps, align 4, !dbg !16874
  br label %if.end132, !dbg !16874

if.end132:                                        ; preds = %if.then131, %if.else
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %if.then128
  %112 = load i32, i32* %steps, align 4, !dbg !16876
  ret i32 %112, !dbg !16877
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_doEffectStep(%struct.DynamicPaintSurface* %surface, float* %force, %struct.PaintPoint* %prevPoint, float %timescale, float %steps) #0 !dbg !16878 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %force.addr = alloca float*, align 8
  %prevPoint.addr = alloca %struct.PaintPoint*, align 8
  %timescale.addr = alloca float, align 4
  %steps.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %bNeighs = alloca %struct.BakeAdjPoint*, align 8
  %distance_scale = alloca float, align 4
  %index = alloca i32, align 4
  %eff_scale = alloca float, align 4
  %i = alloca i32, align 4
  %numOfNeighs = alloca i32, align 4
  %pPoint = alloca %struct.PaintPoint*, align 8
  %n_index = alloca i32, align 4
  %w_factor = alloca float, align 4
  %ePoint = alloca %struct.PaintPoint*, align 8
  %speed_scale = alloca float, align 4
  %color_mix = alloca float, align 4
  %eff_scale120 = alloca float, align 4
  %i133 = alloca i32, align 4
  %numOfNeighs134 = alloca i32, align 4
  %totalAlpha = alloca float, align 4
  %pPoint139 = alloca %struct.PaintPoint*, align 8
  %n_index147 = alloca i32, align 4
  %speed_scale153 = alloca float, align 4
  %ePoint167 = alloca %struct.PaintPoint*, align 8
  %a_factor = alloca float, align 4
  %ea_factor = alloca float, align 4
  %w_factor174 = alloca float, align 4
  %eff_scale262 = alloca float, align 4
  %i275 = alloca i32, align 4
  %pPoint276 = alloca %struct.PaintPoint*, align 8
  %pPoint_prev = alloca %struct.PaintPoint*, align 8
  %closest_id = alloca [2 x i32], align 4
  %closest_d = alloca [2 x float], align 4
  %w_factor282 = alloca float, align 4
  %n_index307 = alloca i32, align 4
  %dir_dot = alloca float, align 4
  %dir_factor = alloca float, align 4
  %a_factor320 = alloca float, align 4
  %speed_scale321 = alloca float, align 4
  %ePoint331 = alloca %struct.PaintPoint*, align 8
  %e_wet = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !16881, metadata !DIExpression()), !dbg !16882
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !16883, metadata !DIExpression()), !dbg !16884
  store %struct.PaintPoint* %prevPoint, %struct.PaintPoint** %prevPoint.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %prevPoint.addr, metadata !16885, metadata !DIExpression()), !dbg !16886
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !16887, metadata !DIExpression()), !dbg !16888
  store float %steps, float* %steps.addr, align 4
  call void @llvm.dbg.declare(metadata float* %steps.addr, metadata !16889, metadata !DIExpression()), !dbg !16890
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !16891, metadata !DIExpression()), !dbg !16892
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16893
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !16894
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !16894
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !16892
  call void @llvm.dbg.declare(metadata %struct.BakeAdjPoint** %bNeighs, metadata !16895, metadata !DIExpression()), !dbg !16896
  %2 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16897
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %2, i32 0, i32 3, !dbg !16898
  %3 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !16898
  %bNeighs1 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %3, i32 0, i32 5, !dbg !16899
  %4 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs1, align 8, !dbg !16899
  store %struct.BakeAdjPoint* %4, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16896
  call void @llvm.dbg.declare(metadata float* %distance_scale, metadata !16900, metadata !DIExpression()), !dbg !16901
  %5 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16902
  %call = call float @getSurfaceDimension(%struct.PaintSurfaceData* %5), !dbg !16903
  %div = fdiv float %call, 5.000000e+00, !dbg !16904
  store float %div, float* %distance_scale, align 4, !dbg !16901
  call void @llvm.dbg.declare(metadata i32* %index, metadata !16905, metadata !DIExpression()), !dbg !16906
  %6 = load float, float* %steps.addr, align 4, !dbg !16907
  %7 = load float, float* %timescale.addr, align 4, !dbg !16908
  %div2 = fdiv float %7, %6, !dbg !16908
  store float %div2, float* %timescale.addr, align 4, !dbg !16908
  %8 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16909
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %8, i32 0, i32 2, !dbg !16911
  %9 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !16911
  %tobool = icmp ne %struct.PaintAdjData* %9, null, !dbg !16909
  br i1 %tobool, label %if.end, label %if.then, !dbg !16912

if.then:                                          ; preds = %entry
  br label %if.end431, !dbg !16913

if.end:                                           ; preds = %entry
  %10 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16914
  %effect = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %10, i32 0, i32 19, !dbg !16916
  %11 = load i32, i32* %effect, align 8, !dbg !16916
  %and = and i32 %11, 1, !dbg !16917
  %tobool3 = icmp ne i32 %and, 0, !dbg !16917
  br i1 %tobool3, label %if.then4, label %if.end115, !dbg !16918

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata float* %eff_scale, metadata !16919, metadata !DIExpression()), !dbg !16921
  %12 = load float, float* %distance_scale, align 4, !dbg !16922
  %mul = fmul float %12, 0x3FA99999A0000000, !dbg !16923
  %13 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !16924
  %spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %13, i32 0, i32 33, !dbg !16925
  %14 = load float, float* %spread_speed, align 4, !dbg !16925
  %mul5 = fmul float %mul, %14, !dbg !16926
  %15 = load float, float* %timescale.addr, align 4, !dbg !16927
  %mul6 = fmul float %mul5, %15, !dbg !16928
  store float %mul6, float* %eff_scale, align 4, !dbg !16921
  %16 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !16929
  %17 = bitcast %struct.PaintPoint* %16 to i8*, !dbg !16930
  %18 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16931
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %18, i32 0, i32 1, !dbg !16932
  %19 = load i8*, i8** %type_data, align 8, !dbg !16932
  %20 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16933
  %total_points = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %20, i32 0, i32 4, !dbg !16934
  %21 = load i32, i32* %total_points, align 8, !dbg !16934
  %conv = sext i32 %21 to i64, !dbg !16933
  %mul7 = mul i64 %conv, 40, !dbg !16935
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 1 %19, i64 %mul7, i1 false), !dbg !16930
  store i32 0, i32* %index, align 4, !dbg !16936
  br label %for.cond, !dbg !16938

for.cond:                                         ; preds = %for.inc112, %if.then4
  %22 = load i32, i32* %index, align 4, !dbg !16939
  %23 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16941
  %total_points8 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %23, i32 0, i32 4, !dbg !16942
  %24 = load i32, i32* %total_points8, align 8, !dbg !16942
  %cmp = icmp slt i32 %22, %24, !dbg !16943
  br i1 %cmp, label %for.body, label %for.end114, !dbg !16944

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16945, metadata !DIExpression()), !dbg !16947
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs, metadata !16948, metadata !DIExpression()), !dbg !16949
  %25 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16950
  %adj_data10 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %25, i32 0, i32 2, !dbg !16951
  %26 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data10, align 8, !dbg !16951
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %26, i32 0, i32 2, !dbg !16952
  %27 = load i32*, i32** %n_num, align 8, !dbg !16952
  %28 = load i32, i32* %index, align 4, !dbg !16953
  %idxprom = sext i32 %28 to i64, !dbg !16950
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !16950
  %29 = load i32, i32* %arrayidx, align 4, !dbg !16950
  store i32 %29, i32* %numOfNeighs, align 4, !dbg !16949
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !16954, metadata !DIExpression()), !dbg !16955
  %30 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16956
  %type_data11 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %30, i32 0, i32 1, !dbg !16957
  %31 = load i8*, i8** %type_data11, align 8, !dbg !16957
  %32 = bitcast i8* %31 to %struct.PaintPoint*, !dbg !16958
  %33 = load i32, i32* %index, align 4, !dbg !16959
  %idxprom12 = sext i32 %33 to i64, !dbg !16960
  %arrayidx13 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %32, i64 %idxprom12, !dbg !16960
  store %struct.PaintPoint* %arrayidx13, %struct.PaintPoint** %pPoint, align 8, !dbg !16955
  store i32 0, i32* %i, align 4, !dbg !16961
  br label %for.cond14, !dbg !16963

for.cond14:                                       ; preds = %for.inc, %for.body
  %34 = load i32, i32* %i, align 4, !dbg !16964
  %35 = load i32, i32* %numOfNeighs, align 4, !dbg !16966
  %cmp15 = icmp slt i32 %34, %35, !dbg !16967
  br i1 %cmp15, label %for.body17, label %for.end, !dbg !16968

for.body17:                                       ; preds = %for.cond14
  call void @llvm.dbg.declare(metadata i32* %n_index, metadata !16969, metadata !DIExpression()), !dbg !16971
  %36 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16972
  %adj_data18 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %36, i32 0, i32 2, !dbg !16973
  %37 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data18, align 8, !dbg !16973
  %n_index19 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %37, i32 0, i32 1, !dbg !16974
  %38 = load i32*, i32** %n_index19, align 8, !dbg !16974
  %39 = load i32, i32* %index, align 4, !dbg !16975
  %idxprom20 = sext i32 %39 to i64, !dbg !16972
  %arrayidx21 = getelementptr inbounds i32, i32* %38, i64 %idxprom20, !dbg !16972
  %40 = load i32, i32* %arrayidx21, align 4, !dbg !16972
  %41 = load i32, i32* %i, align 4, !dbg !16976
  %add = add nsw i32 %40, %41, !dbg !16977
  store i32 %add, i32* %n_index, align 4, !dbg !16971
  call void @llvm.dbg.declare(metadata float* %w_factor, metadata !16978, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %ePoint, metadata !16980, metadata !DIExpression()), !dbg !16981
  %42 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !16982
  %43 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !16983
  %adj_data22 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %43, i32 0, i32 2, !dbg !16984
  %44 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data22, align 8, !dbg !16984
  %n_target = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %44, i32 0, i32 0, !dbg !16985
  %45 = load i32*, i32** %n_target, align 8, !dbg !16985
  %46 = load i32, i32* %n_index, align 4, !dbg !16986
  %idxprom23 = sext i32 %46 to i64, !dbg !16983
  %arrayidx24 = getelementptr inbounds i32, i32* %45, i64 %idxprom23, !dbg !16983
  %47 = load i32, i32* %arrayidx24, align 4, !dbg !16983
  %idxprom25 = sext i32 %47 to i64, !dbg !16982
  %arrayidx26 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %42, i64 %idxprom25, !dbg !16982
  store %struct.PaintPoint* %arrayidx26, %struct.PaintPoint** %ePoint, align 8, !dbg !16981
  call void @llvm.dbg.declare(metadata float* %speed_scale, metadata !16987, metadata !DIExpression()), !dbg !16988
  %48 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16989
  %49 = load i32, i32* %n_index, align 4, !dbg !16990
  %idxprom27 = sext i32 %49 to i64, !dbg !16989
  %arrayidx28 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %48, i64 %idxprom27, !dbg !16989
  %dist = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx28, i32 0, i32 1, !dbg !16991
  %50 = load float, float* %dist, align 4, !dbg !16991
  %51 = load float, float* %eff_scale, align 4, !dbg !16992
  %cmp29 = fcmp olt float %50, %51, !dbg !16993
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !16994

cond.true:                                        ; preds = %for.body17
  br label %cond.end, !dbg !16994

cond.false:                                       ; preds = %for.body17
  %52 = load float, float* %eff_scale, align 4, !dbg !16995
  %53 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !16996
  %54 = load i32, i32* %n_index, align 4, !dbg !16997
  %idxprom31 = sext i32 %54 to i64, !dbg !16996
  %arrayidx32 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %53, i64 %idxprom31, !dbg !16996
  %dist33 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx32, i32 0, i32 1, !dbg !16998
  %55 = load float, float* %dist33, align 4, !dbg !16998
  %div34 = fdiv float %52, %55, !dbg !16999
  br label %cond.end, !dbg !16994

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+00, %cond.true ], [ %div34, %cond.false ], !dbg !16994
  store float %cond, float* %speed_scale, align 4, !dbg !16988
  call void @llvm.dbg.declare(metadata float* %color_mix, metadata !17000, metadata !DIExpression()), !dbg !17001
  %56 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17002
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %56, i32 0, i32 2, !dbg !17002
  %57 = load float, float* %wetness, align 4, !dbg !17002
  %58 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17002
  %wetness35 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %58, i32 0, i32 2, !dbg !17002
  %59 = load float, float* %wetness35, align 4, !dbg !17002
  %cmp36 = fcmp olt float %57, %59, !dbg !17002
  br i1 %cmp36, label %cond.true38, label %cond.false40, !dbg !17002

cond.true38:                                      ; preds = %cond.end
  %60 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17002
  %wetness39 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %60, i32 0, i32 2, !dbg !17002
  %61 = load float, float* %wetness39, align 4, !dbg !17002
  br label %cond.end42, !dbg !17002

cond.false40:                                     ; preds = %cond.end
  %62 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17002
  %wetness41 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %62, i32 0, i32 2, !dbg !17002
  %63 = load float, float* %wetness41, align 4, !dbg !17002
  br label %cond.end42, !dbg !17002

cond.end42:                                       ; preds = %cond.false40, %cond.true38
  %cond43 = phi float [ %61, %cond.true38 ], [ %63, %cond.false40 ], !dbg !17002
  %cmp44 = fcmp olt float %cond43, 1.000000e+00, !dbg !17002
  br i1 %cmp44, label %cond.true46, label %cond.false57, !dbg !17002

cond.true46:                                      ; preds = %cond.end42
  %64 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17002
  %wetness47 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %64, i32 0, i32 2, !dbg !17002
  %65 = load float, float* %wetness47, align 4, !dbg !17002
  %66 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17002
  %wetness48 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %66, i32 0, i32 2, !dbg !17002
  %67 = load float, float* %wetness48, align 4, !dbg !17002
  %cmp49 = fcmp olt float %65, %67, !dbg !17002
  br i1 %cmp49, label %cond.true51, label %cond.false53, !dbg !17002

cond.true51:                                      ; preds = %cond.true46
  %68 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17002
  %wetness52 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %68, i32 0, i32 2, !dbg !17002
  %69 = load float, float* %wetness52, align 4, !dbg !17002
  br label %cond.end55, !dbg !17002

cond.false53:                                     ; preds = %cond.true46
  %70 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17002
  %wetness54 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %70, i32 0, i32 2, !dbg !17002
  %71 = load float, float* %wetness54, align 4, !dbg !17002
  br label %cond.end55, !dbg !17002

cond.end55:                                       ; preds = %cond.false53, %cond.true51
  %cond56 = phi float [ %69, %cond.true51 ], [ %71, %cond.false53 ], !dbg !17002
  br label %cond.end58, !dbg !17002

cond.false57:                                     ; preds = %cond.end42
  br label %cond.end58, !dbg !17002

cond.end58:                                       ; preds = %cond.false57, %cond.end55
  %cond59 = phi float [ %cond56, %cond.end55 ], [ 1.000000e+00, %cond.false57 ], !dbg !17002
  %mul60 = fmul float %cond59, 2.500000e-01, !dbg !17003
  %72 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17004
  %color_spread_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %72, i32 0, i32 34, !dbg !17005
  %73 = load float, float* %color_spread_speed, align 8, !dbg !17005
  %mul61 = fmul float %mul60, %73, !dbg !17006
  store float %mul61, float* %color_mix, align 4, !dbg !17001
  %74 = load float, float* %color_mix, align 4, !dbg !17007
  %tobool62 = fcmp une float %74, 0.000000e+00, !dbg !17007
  br i1 %tobool62, label %if.then63, label %if.end68, !dbg !17009

if.then63:                                        ; preds = %cond.end58
  %75 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17010
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %75, i32 0, i32 0, !dbg !17011
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !17010
  %76 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17012
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %76, i32 0, i32 1, !dbg !17013
  %77 = load float, float* %e_alpha, align 4, !dbg !17013
  %78 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17014
  %e_color64 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %78, i32 0, i32 0, !dbg !17015
  %arraydecay65 = getelementptr inbounds [3 x float], [3 x float]* %e_color64, i64 0, i64 0, !dbg !17014
  %79 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17016
  %e_alpha66 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %79, i32 0, i32 1, !dbg !17017
  %80 = load float, float* %e_alpha66, align 4, !dbg !17017
  %81 = load float, float* %color_mix, align 4, !dbg !17018
  %call67 = call float @mixColors(float* %arraydecay, float %77, float* %arraydecay65, float %80, float %81), !dbg !17019
  br label %if.end68, !dbg !17019

if.end68:                                         ; preds = %if.then63, %cond.end58
  %82 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17020
  %wetness69 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %82, i32 0, i32 2, !dbg !17022
  %83 = load float, float* %wetness69, align 4, !dbg !17022
  %84 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17023
  %wetness70 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %84, i32 0, i32 2, !dbg !17024
  %85 = load float, float* %wetness70, align 4, !dbg !17024
  %cmp71 = fcmp olt float %83, %85, !dbg !17025
  br i1 %cmp71, label %if.then76, label %lor.lhs.false, !dbg !17026

lor.lhs.false:                                    ; preds = %if.end68
  %86 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17027
  %wetness73 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %86, i32 0, i32 2, !dbg !17028
  %87 = load float, float* %wetness73, align 4, !dbg !17028
  %cmp74 = fcmp olt float %87, 0x3F50624DE0000000, !dbg !17029
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !17030

if.then76:                                        ; preds = %lor.lhs.false, %if.end68
  br label %for.inc, !dbg !17031

if.end77:                                         ; preds = %lor.lhs.false
  %88 = load i32, i32* %numOfNeighs, align 4, !dbg !17032
  %conv78 = sitofp i32 %88 to float, !dbg !17032
  %div79 = fdiv float 1.000000e+00, %conv78, !dbg !17033
  %89 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17034
  %wetness80 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %89, i32 0, i32 2, !dbg !17034
  %90 = load float, float* %wetness80, align 4, !dbg !17034
  %cmp81 = fcmp olt float %90, 1.000000e+00, !dbg !17034
  br i1 %cmp81, label %cond.true83, label %cond.false85, !dbg !17034

cond.true83:                                      ; preds = %if.end77
  %91 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17034
  %wetness84 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %91, i32 0, i32 2, !dbg !17034
  %92 = load float, float* %wetness84, align 4, !dbg !17034
  br label %cond.end86, !dbg !17034

cond.false85:                                     ; preds = %if.end77
  br label %cond.end86, !dbg !17034

cond.end86:                                       ; preds = %cond.false85, %cond.true83
  %cond87 = phi float [ %92, %cond.true83 ], [ 1.000000e+00, %cond.false85 ], !dbg !17034
  %mul88 = fmul float %div79, %cond87, !dbg !17035
  %93 = load float, float* %speed_scale, align 4, !dbg !17036
  %mul89 = fmul float %mul88, %93, !dbg !17037
  store float %mul89, float* %w_factor, align 4, !dbg !17038
  %94 = load float, float* %w_factor, align 4, !dbg !17039
  %cmp90 = fcmp olt float %94, 0.000000e+00, !dbg !17039
  br i1 %cmp90, label %if.then92, label %if.else, !dbg !17042

if.then92:                                        ; preds = %cond.end86
  store float 0.000000e+00, float* %w_factor, align 4, !dbg !17039
  br label %if.end97, !dbg !17039

if.else:                                          ; preds = %cond.end86
  %95 = load float, float* %w_factor, align 4, !dbg !17043
  %cmp93 = fcmp ogt float %95, 1.000000e+00, !dbg !17043
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !17039

if.then95:                                        ; preds = %if.else
  store float 1.000000e+00, float* %w_factor, align 4, !dbg !17043
  br label %if.end96, !dbg !17043

if.end96:                                         ; preds = %if.then95, %if.else
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.then92
  %96 = load float, float* %w_factor, align 4, !dbg !17045
  %sub = fsub float 1.000000e+00, %96, !dbg !17046
  %97 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17047
  %wetness98 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %97, i32 0, i32 2, !dbg !17048
  %98 = load float, float* %wetness98, align 4, !dbg !17048
  %mul99 = fmul float %sub, %98, !dbg !17049
  %99 = load float, float* %w_factor, align 4, !dbg !17050
  %100 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17051
  %wetness100 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %100, i32 0, i32 2, !dbg !17052
  %101 = load float, float* %wetness100, align 4, !dbg !17052
  %mul101 = fmul float %99, %101, !dbg !17053
  %add102 = fadd float %mul99, %mul101, !dbg !17054
  %102 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17055
  %wetness103 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %102, i32 0, i32 2, !dbg !17056
  store float %add102, float* %wetness103, align 4, !dbg !17057
  %103 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17058
  %e_color104 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %103, i32 0, i32 0, !dbg !17059
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %e_color104, i64 0, i64 0, !dbg !17058
  %104 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17060
  %e_alpha106 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %104, i32 0, i32 1, !dbg !17061
  %105 = load float, float* %e_alpha106, align 4, !dbg !17061
  %106 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17062
  %e_color107 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %106, i32 0, i32 0, !dbg !17063
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %e_color107, i64 0, i64 0, !dbg !17062
  %107 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint, align 8, !dbg !17064
  %e_alpha109 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %107, i32 0, i32 1, !dbg !17065
  %108 = load float, float* %e_alpha109, align 4, !dbg !17065
  %109 = load float, float* %w_factor, align 4, !dbg !17066
  %call110 = call float @mixColors(float* %arraydecay105, float %105, float* %arraydecay108, float %108, float %109), !dbg !17067
  %110 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !17068
  %e_alpha111 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %110, i32 0, i32 1, !dbg !17069
  store float %call110, float* %e_alpha111, align 4, !dbg !17070
  br label %for.inc, !dbg !17071

for.inc:                                          ; preds = %if.end97, %if.then76
  %111 = load i32, i32* %i, align 4, !dbg !17072
  %inc = add nsw i32 %111, 1, !dbg !17072
  store i32 %inc, i32* %i, align 4, !dbg !17072
  br label %for.cond14, !dbg !17073, !llvm.loop !17074

for.end:                                          ; preds = %for.cond14
  br label %for.inc112, !dbg !17076

for.inc112:                                       ; preds = %for.end
  %112 = load i32, i32* %index, align 4, !dbg !17077
  %inc113 = add nsw i32 %112, 1, !dbg !17077
  store i32 %inc113, i32* %index, align 4, !dbg !17077
  br label %for.cond, !dbg !17078, !llvm.loop !17079

for.end114:                                       ; preds = %for.cond
  br label %if.end115, !dbg !17081

if.end115:                                        ; preds = %for.end114, %if.end
  %113 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17082
  %effect116 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %113, i32 0, i32 19, !dbg !17084
  %114 = load i32, i32* %effect116, align 8, !dbg !17084
  %and117 = and i32 %114, 4, !dbg !17085
  %tobool118 = icmp ne i32 %and117, 0, !dbg !17085
  br i1 %tobool118, label %if.then119, label %if.end255, !dbg !17086

if.then119:                                       ; preds = %if.end115
  call void @llvm.dbg.declare(metadata float* %eff_scale120, metadata !17087, metadata !DIExpression()), !dbg !17089
  %115 = load float, float* %distance_scale, align 4, !dbg !17090
  %mul121 = fmul float %115, 0x3FA99999A0000000, !dbg !17091
  %116 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17092
  %shrink_speed = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %116, i32 0, i32 35, !dbg !17093
  %117 = load float, float* %shrink_speed, align 4, !dbg !17093
  %mul122 = fmul float %mul121, %117, !dbg !17094
  %118 = load float, float* %timescale.addr, align 4, !dbg !17095
  %mul123 = fmul float %mul122, %118, !dbg !17096
  store float %mul123, float* %eff_scale120, align 4, !dbg !17089
  %119 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !17097
  %120 = bitcast %struct.PaintPoint* %119 to i8*, !dbg !17098
  %121 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17099
  %type_data124 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %121, i32 0, i32 1, !dbg !17100
  %122 = load i8*, i8** %type_data124, align 8, !dbg !17100
  %123 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17101
  %total_points125 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %123, i32 0, i32 4, !dbg !17102
  %124 = load i32, i32* %total_points125, align 8, !dbg !17102
  %conv126 = sext i32 %124 to i64, !dbg !17101
  %mul127 = mul i64 %conv126, 40, !dbg !17103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 1 %122, i64 %mul127, i1 false), !dbg !17098
  store i32 0, i32* %index, align 4, !dbg !17104
  br label %for.cond128, !dbg !17106

for.cond128:                                      ; preds = %for.inc252, %if.then119
  %125 = load i32, i32* %index, align 4, !dbg !17107
  %126 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17109
  %total_points129 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %126, i32 0, i32 4, !dbg !17110
  %127 = load i32, i32* %total_points129, align 8, !dbg !17110
  %cmp130 = icmp slt i32 %125, %127, !dbg !17111
  br i1 %cmp130, label %for.body132, label %for.end254, !dbg !17112

for.body132:                                      ; preds = %for.cond128
  call void @llvm.dbg.declare(metadata i32* %i133, metadata !17113, metadata !DIExpression()), !dbg !17115
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs134, metadata !17116, metadata !DIExpression()), !dbg !17117
  %128 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17118
  %adj_data135 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %128, i32 0, i32 2, !dbg !17119
  %129 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data135, align 8, !dbg !17119
  %n_num136 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %129, i32 0, i32 2, !dbg !17120
  %130 = load i32*, i32** %n_num136, align 8, !dbg !17120
  %131 = load i32, i32* %index, align 4, !dbg !17121
  %idxprom137 = sext i32 %131 to i64, !dbg !17118
  %arrayidx138 = getelementptr inbounds i32, i32* %130, i64 %idxprom137, !dbg !17118
  %132 = load i32, i32* %arrayidx138, align 4, !dbg !17118
  store i32 %132, i32* %numOfNeighs134, align 4, !dbg !17117
  call void @llvm.dbg.declare(metadata float* %totalAlpha, metadata !17122, metadata !DIExpression()), !dbg !17123
  store float 0.000000e+00, float* %totalAlpha, align 4, !dbg !17123
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint139, metadata !17124, metadata !DIExpression()), !dbg !17125
  %133 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17126
  %type_data140 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %133, i32 0, i32 1, !dbg !17127
  %134 = load i8*, i8** %type_data140, align 8, !dbg !17127
  %135 = bitcast i8* %134 to %struct.PaintPoint*, !dbg !17128
  %136 = load i32, i32* %index, align 4, !dbg !17129
  %idxprom141 = sext i32 %136 to i64, !dbg !17130
  %arrayidx142 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %135, i64 %idxprom141, !dbg !17130
  store %struct.PaintPoint* %arrayidx142, %struct.PaintPoint** %pPoint139, align 8, !dbg !17125
  store i32 0, i32* %i133, align 4, !dbg !17131
  br label %for.cond143, !dbg !17133

for.cond143:                                      ; preds = %for.inc249, %for.body132
  %137 = load i32, i32* %i133, align 4, !dbg !17134
  %138 = load i32, i32* %numOfNeighs134, align 4, !dbg !17136
  %cmp144 = icmp slt i32 %137, %138, !dbg !17137
  br i1 %cmp144, label %for.body146, label %for.end251, !dbg !17138

for.body146:                                      ; preds = %for.cond143
  call void @llvm.dbg.declare(metadata i32* %n_index147, metadata !17139, metadata !DIExpression()), !dbg !17141
  %139 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17142
  %adj_data148 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %139, i32 0, i32 2, !dbg !17143
  %140 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data148, align 8, !dbg !17143
  %n_index149 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %140, i32 0, i32 1, !dbg !17144
  %141 = load i32*, i32** %n_index149, align 8, !dbg !17144
  %142 = load i32, i32* %index, align 4, !dbg !17145
  %idxprom150 = sext i32 %142 to i64, !dbg !17142
  %arrayidx151 = getelementptr inbounds i32, i32* %141, i64 %idxprom150, !dbg !17142
  %143 = load i32, i32* %arrayidx151, align 4, !dbg !17142
  %144 = load i32, i32* %i133, align 4, !dbg !17146
  %add152 = add nsw i32 %143, %144, !dbg !17147
  store i32 %add152, i32* %n_index147, align 4, !dbg !17141
  call void @llvm.dbg.declare(metadata float* %speed_scale153, metadata !17148, metadata !DIExpression()), !dbg !17149
  %145 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !17150
  %146 = load i32, i32* %n_index147, align 4, !dbg !17151
  %idxprom154 = sext i32 %146 to i64, !dbg !17150
  %arrayidx155 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %145, i64 %idxprom154, !dbg !17150
  %dist156 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx155, i32 0, i32 1, !dbg !17152
  %147 = load float, float* %dist156, align 4, !dbg !17152
  %148 = load float, float* %eff_scale120, align 4, !dbg !17153
  %cmp157 = fcmp olt float %147, %148, !dbg !17154
  br i1 %cmp157, label %cond.true159, label %cond.false160, !dbg !17155

cond.true159:                                     ; preds = %for.body146
  br label %cond.end165, !dbg !17155

cond.false160:                                    ; preds = %for.body146
  %149 = load float, float* %eff_scale120, align 4, !dbg !17156
  %150 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !17157
  %151 = load i32, i32* %n_index147, align 4, !dbg !17158
  %idxprom161 = sext i32 %151 to i64, !dbg !17157
  %arrayidx162 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %150, i64 %idxprom161, !dbg !17157
  %dist163 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx162, i32 0, i32 1, !dbg !17159
  %152 = load float, float* %dist163, align 4, !dbg !17159
  %div164 = fdiv float %149, %152, !dbg !17160
  br label %cond.end165, !dbg !17155

cond.end165:                                      ; preds = %cond.false160, %cond.true159
  %cond166 = phi float [ 1.000000e+00, %cond.true159 ], [ %div164, %cond.false160 ], !dbg !17155
  store float %cond166, float* %speed_scale153, align 4, !dbg !17149
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %ePoint167, metadata !17161, metadata !DIExpression()), !dbg !17162
  %153 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !17163
  %154 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17164
  %adj_data168 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %154, i32 0, i32 2, !dbg !17165
  %155 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data168, align 8, !dbg !17165
  %n_target169 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %155, i32 0, i32 0, !dbg !17166
  %156 = load i32*, i32** %n_target169, align 8, !dbg !17166
  %157 = load i32, i32* %n_index147, align 4, !dbg !17167
  %idxprom170 = sext i32 %157 to i64, !dbg !17164
  %arrayidx171 = getelementptr inbounds i32, i32* %156, i64 %idxprom170, !dbg !17164
  %158 = load i32, i32* %arrayidx171, align 4, !dbg !17164
  %idxprom172 = sext i32 %158 to i64, !dbg !17163
  %arrayidx173 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %153, i64 %idxprom172, !dbg !17163
  store %struct.PaintPoint* %arrayidx173, %struct.PaintPoint** %ePoint167, align 8, !dbg !17162
  call void @llvm.dbg.declare(metadata float* %a_factor, metadata !17168, metadata !DIExpression()), !dbg !17169
  call void @llvm.dbg.declare(metadata float* %ea_factor, metadata !17170, metadata !DIExpression()), !dbg !17171
  call void @llvm.dbg.declare(metadata float* %w_factor174, metadata !17172, metadata !DIExpression()), !dbg !17173
  %159 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17174
  %e_alpha175 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %159, i32 0, i32 1, !dbg !17175
  %160 = load float, float* %e_alpha175, align 4, !dbg !17175
  %161 = load float, float* %totalAlpha, align 4, !dbg !17176
  %add176 = fadd float %161, %160, !dbg !17176
  store float %add176, float* %totalAlpha, align 4, !dbg !17176
  %162 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17177
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %162, i32 0, i32 5, !dbg !17179
  %163 = load float, float* %alpha, align 4, !dbg !17179
  %cmp177 = fcmp ole float %163, 0.000000e+00, !dbg !17180
  br i1 %cmp177, label %land.lhs.true, label %if.end187, !dbg !17181

land.lhs.true:                                    ; preds = %cond.end165
  %164 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17182
  %e_alpha179 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %164, i32 0, i32 1, !dbg !17183
  %165 = load float, float* %e_alpha179, align 4, !dbg !17183
  %cmp180 = fcmp ole float %165, 0.000000e+00, !dbg !17184
  br i1 %cmp180, label %land.lhs.true182, label %if.end187, !dbg !17185

land.lhs.true182:                                 ; preds = %land.lhs.true
  %166 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17186
  %wetness183 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %166, i32 0, i32 2, !dbg !17187
  %167 = load float, float* %wetness183, align 4, !dbg !17187
  %cmp184 = fcmp ole float %167, 0.000000e+00, !dbg !17188
  br i1 %cmp184, label %if.then186, label %if.end187, !dbg !17189

if.then186:                                       ; preds = %land.lhs.true182
  br label %for.inc249, !dbg !17190

if.end187:                                        ; preds = %land.lhs.true182, %land.lhs.true, %cond.end165
  %168 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17191
  %alpha188 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %168, i32 0, i32 5, !dbg !17192
  %169 = load float, float* %alpha188, align 4, !dbg !17192
  %sub189 = fsub float 1.000000e+00, %169, !dbg !17193
  %170 = load i32, i32* %numOfNeighs134, align 4, !dbg !17194
  %conv190 = sitofp i32 %170 to float, !dbg !17194
  %div191 = fdiv float %sub189, %conv190, !dbg !17195
  %171 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17196
  %alpha192 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %171, i32 0, i32 5, !dbg !17197
  %172 = load float, float* %alpha192, align 4, !dbg !17197
  %173 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17198
  %alpha193 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %173, i32 0, i32 5, !dbg !17199
  %174 = load float, float* %alpha193, align 4, !dbg !17199
  %sub194 = fsub float %172, %174, !dbg !17200
  %mul195 = fmul float %div191, %sub194, !dbg !17201
  %175 = load float, float* %speed_scale153, align 4, !dbg !17202
  %mul196 = fmul float %mul195, %175, !dbg !17203
  store float %mul196, float* %a_factor, align 4, !dbg !17204
  %176 = load float, float* %a_factor, align 4, !dbg !17205
  %cmp197 = fcmp olt float %176, 0.000000e+00, !dbg !17207
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !17208

if.then199:                                       ; preds = %if.end187
  store float 0.000000e+00, float* %a_factor, align 4, !dbg !17209
  br label %if.end200, !dbg !17210

if.end200:                                        ; preds = %if.then199, %if.end187
  %177 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17211
  %e_alpha201 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %177, i32 0, i32 1, !dbg !17212
  %178 = load float, float* %e_alpha201, align 4, !dbg !17212
  %sub202 = fsub float 1.000000e+00, %178, !dbg !17213
  %div203 = fdiv float %sub202, 8.000000e+00, !dbg !17214
  %179 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17215
  %e_alpha204 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %179, i32 0, i32 1, !dbg !17216
  %180 = load float, float* %e_alpha204, align 4, !dbg !17216
  %181 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17217
  %e_alpha205 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %181, i32 0, i32 1, !dbg !17218
  %182 = load float, float* %e_alpha205, align 4, !dbg !17218
  %sub206 = fsub float %180, %182, !dbg !17219
  %mul207 = fmul float %div203, %sub206, !dbg !17220
  %183 = load float, float* %speed_scale153, align 4, !dbg !17221
  %mul208 = fmul float %mul207, %183, !dbg !17222
  store float %mul208, float* %ea_factor, align 4, !dbg !17223
  %184 = load float, float* %ea_factor, align 4, !dbg !17224
  %cmp209 = fcmp olt float %184, 0.000000e+00, !dbg !17226
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !17227

if.then211:                                       ; preds = %if.end200
  store float 0.000000e+00, float* %ea_factor, align 4, !dbg !17228
  br label %if.end212, !dbg !17229

if.end212:                                        ; preds = %if.then211, %if.end200
  %185 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17230
  %wetness213 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %185, i32 0, i32 2, !dbg !17231
  %186 = load float, float* %wetness213, align 4, !dbg !17231
  %sub214 = fsub float 1.000000e+00, %186, !dbg !17232
  %div215 = fdiv float %sub214, 8.000000e+00, !dbg !17233
  %187 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17234
  %wetness216 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %187, i32 0, i32 2, !dbg !17235
  %188 = load float, float* %wetness216, align 4, !dbg !17235
  %189 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint167, align 8, !dbg !17236
  %wetness217 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %189, i32 0, i32 2, !dbg !17237
  %190 = load float, float* %wetness217, align 4, !dbg !17237
  %sub218 = fsub float %188, %190, !dbg !17238
  %mul219 = fmul float %div215, %sub218, !dbg !17239
  %191 = load float, float* %speed_scale153, align 4, !dbg !17240
  %mul220 = fmul float %mul219, %191, !dbg !17241
  store float %mul220, float* %w_factor174, align 4, !dbg !17242
  %192 = load float, float* %w_factor174, align 4, !dbg !17243
  %cmp221 = fcmp olt float %192, 0.000000e+00, !dbg !17245
  br i1 %cmp221, label %if.then223, label %if.end224, !dbg !17246

if.then223:                                       ; preds = %if.end212
  store float 0.000000e+00, float* %w_factor174, align 4, !dbg !17247
  br label %if.end224, !dbg !17248

if.end224:                                        ; preds = %if.then223, %if.end212
  %193 = load float, float* %a_factor, align 4, !dbg !17249
  %194 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17250
  %alpha225 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %194, i32 0, i32 5, !dbg !17251
  %195 = load float, float* %alpha225, align 4, !dbg !17252
  %sub226 = fsub float %195, %193, !dbg !17252
  store float %sub226, float* %alpha225, align 4, !dbg !17252
  %196 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17253
  %alpha227 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %196, i32 0, i32 5, !dbg !17255
  %197 = load float, float* %alpha227, align 4, !dbg !17255
  %cmp228 = fcmp olt float %197, 0.000000e+00, !dbg !17256
  br i1 %cmp228, label %if.then230, label %if.end232, !dbg !17257

if.then230:                                       ; preds = %if.end224
  %198 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17258
  %alpha231 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %198, i32 0, i32 5, !dbg !17259
  store float 0.000000e+00, float* %alpha231, align 4, !dbg !17260
  br label %if.end232, !dbg !17258

if.end232:                                        ; preds = %if.then230, %if.end224
  %199 = load float, float* %ea_factor, align 4, !dbg !17261
  %200 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17262
  %e_alpha233 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %200, i32 0, i32 1, !dbg !17263
  %201 = load float, float* %e_alpha233, align 4, !dbg !17264
  %sub234 = fsub float %201, %199, !dbg !17264
  store float %sub234, float* %e_alpha233, align 4, !dbg !17264
  %202 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17265
  %e_alpha235 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %202, i32 0, i32 1, !dbg !17267
  %203 = load float, float* %e_alpha235, align 4, !dbg !17267
  %cmp236 = fcmp olt float %203, 0.000000e+00, !dbg !17268
  br i1 %cmp236, label %if.then238, label %if.end240, !dbg !17269

if.then238:                                       ; preds = %if.end232
  %204 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17270
  %e_alpha239 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %204, i32 0, i32 1, !dbg !17271
  store float 0.000000e+00, float* %e_alpha239, align 4, !dbg !17272
  br label %if.end240, !dbg !17270

if.end240:                                        ; preds = %if.then238, %if.end232
  %205 = load float, float* %w_factor174, align 4, !dbg !17273
  %206 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17274
  %wetness241 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %206, i32 0, i32 2, !dbg !17275
  %207 = load float, float* %wetness241, align 4, !dbg !17276
  %sub242 = fsub float %207, %205, !dbg !17276
  store float %sub242, float* %wetness241, align 4, !dbg !17276
  %208 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17277
  %wetness243 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %208, i32 0, i32 2, !dbg !17279
  %209 = load float, float* %wetness243, align 4, !dbg !17279
  %cmp244 = fcmp olt float %209, 0.000000e+00, !dbg !17280
  br i1 %cmp244, label %if.then246, label %if.end248, !dbg !17281

if.then246:                                       ; preds = %if.end240
  %210 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint139, align 8, !dbg !17282
  %wetness247 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %210, i32 0, i32 2, !dbg !17283
  store float 0.000000e+00, float* %wetness247, align 4, !dbg !17284
  br label %if.end248, !dbg !17282

if.end248:                                        ; preds = %if.then246, %if.end240
  br label %for.inc249, !dbg !17285

for.inc249:                                       ; preds = %if.end248, %if.then186
  %211 = load i32, i32* %i133, align 4, !dbg !17286
  %inc250 = add nsw i32 %211, 1, !dbg !17286
  store i32 %inc250, i32* %i133, align 4, !dbg !17286
  br label %for.cond143, !dbg !17287, !llvm.loop !17288

for.end251:                                       ; preds = %for.cond143
  br label %for.inc252, !dbg !17290

for.inc252:                                       ; preds = %for.end251
  %212 = load i32, i32* %index, align 4, !dbg !17291
  %inc253 = add nsw i32 %212, 1, !dbg !17291
  store i32 %inc253, i32* %index, align 4, !dbg !17291
  br label %for.cond128, !dbg !17292, !llvm.loop !17293

for.end254:                                       ; preds = %for.cond128
  br label %if.end255, !dbg !17295

if.end255:                                        ; preds = %for.end254, %if.end115
  %213 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17296
  %effect256 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %213, i32 0, i32 19, !dbg !17298
  %214 = load i32, i32* %effect256, align 8, !dbg !17298
  %and257 = and i32 %214, 2, !dbg !17299
  %tobool258 = icmp ne i32 %and257, 0, !dbg !17299
  br i1 %tobool258, label %land.lhs.true259, label %if.end431, !dbg !17300

land.lhs.true259:                                 ; preds = %if.end255
  %215 = load float*, float** %force.addr, align 8, !dbg !17301
  %tobool260 = icmp ne float* %215, null, !dbg !17301
  br i1 %tobool260, label %if.then261, label %if.end431, !dbg !17302

if.then261:                                       ; preds = %land.lhs.true259
  call void @llvm.dbg.declare(metadata float* %eff_scale262, metadata !17303, metadata !DIExpression()), !dbg !17305
  %216 = load float, float* %distance_scale, align 4, !dbg !17306
  %mul263 = fmul float %216, 0x3FA99999A0000000, !dbg !17307
  %217 = load float, float* %timescale.addr, align 4, !dbg !17308
  %mul264 = fmul float %mul263, %217, !dbg !17309
  %div265 = fdiv float %mul264, 2.000000e+00, !dbg !17310
  store float %div265, float* %eff_scale262, align 4, !dbg !17305
  %218 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !17311
  %219 = bitcast %struct.PaintPoint* %218 to i8*, !dbg !17312
  %220 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17313
  %type_data266 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %220, i32 0, i32 1, !dbg !17314
  %221 = load i8*, i8** %type_data266, align 8, !dbg !17314
  %222 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17315
  %total_points267 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %222, i32 0, i32 4, !dbg !17316
  %223 = load i32, i32* %total_points267, align 8, !dbg !17316
  %conv268 = sext i32 %223 to i64, !dbg !17315
  %mul269 = mul i64 %conv268, 40, !dbg !17317
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %219, i8* align 1 %221, i64 %mul269, i1 false), !dbg !17312
  store i32 0, i32* %index, align 4, !dbg !17318
  br label %for.cond270, !dbg !17320

for.cond270:                                      ; preds = %for.inc428, %if.then261
  %224 = load i32, i32* %index, align 4, !dbg !17321
  %225 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17323
  %total_points271 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %225, i32 0, i32 4, !dbg !17324
  %226 = load i32, i32* %total_points271, align 8, !dbg !17324
  %cmp272 = icmp slt i32 %224, %226, !dbg !17325
  br i1 %cmp272, label %for.body274, label %for.end430, !dbg !17326

for.body274:                                      ; preds = %for.cond270
  call void @llvm.dbg.declare(metadata i32* %i275, metadata !17327, metadata !DIExpression()), !dbg !17329
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint276, metadata !17330, metadata !DIExpression()), !dbg !17331
  %227 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17332
  %type_data277 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %227, i32 0, i32 1, !dbg !17333
  %228 = load i8*, i8** %type_data277, align 8, !dbg !17333
  %229 = bitcast i8* %228 to %struct.PaintPoint*, !dbg !17334
  %230 = load i32, i32* %index, align 4, !dbg !17335
  %idxprom278 = sext i32 %230 to i64, !dbg !17336
  %arrayidx279 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %229, i64 %idxprom278, !dbg !17336
  store %struct.PaintPoint* %arrayidx279, %struct.PaintPoint** %pPoint276, align 8, !dbg !17331
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint_prev, metadata !17337, metadata !DIExpression()), !dbg !17338
  %231 = load %struct.PaintPoint*, %struct.PaintPoint** %prevPoint.addr, align 8, !dbg !17339
  %232 = load i32, i32* %index, align 4, !dbg !17340
  %idxprom280 = sext i32 %232 to i64, !dbg !17339
  %arrayidx281 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %231, i64 %idxprom280, !dbg !17339
  store %struct.PaintPoint* %arrayidx281, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17338
  call void @llvm.dbg.declare(metadata [2 x i32]* %closest_id, metadata !17341, metadata !DIExpression()), !dbg !17342
  call void @llvm.dbg.declare(metadata [2 x float]* %closest_d, metadata !17343, metadata !DIExpression()), !dbg !17344
  call void @llvm.dbg.declare(metadata float* %w_factor282, metadata !17345, metadata !DIExpression()), !dbg !17346
  %233 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17347
  %wetness283 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %233, i32 0, i32 2, !dbg !17348
  %234 = load float, float* %wetness283, align 4, !dbg !17348
  %sub284 = fsub float %234, 0x3F999999A0000000, !dbg !17349
  store float %sub284, float* %w_factor282, align 4, !dbg !17346
  %235 = load float, float* %w_factor282, align 4, !dbg !17350
  %cmp285 = fcmp ole float %235, 0.000000e+00, !dbg !17352
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !17353

if.then287:                                       ; preds = %for.body274
  br label %for.inc428, !dbg !17354

if.end288:                                        ; preds = %for.body274
  %236 = load float, float* %w_factor282, align 4, !dbg !17355
  %cmp289 = fcmp olt float %236, 0.000000e+00, !dbg !17355
  br i1 %cmp289, label %if.then291, label %if.else292, !dbg !17358

if.then291:                                       ; preds = %if.end288
  store float 0.000000e+00, float* %w_factor282, align 4, !dbg !17355
  br label %if.end297, !dbg !17355

if.else292:                                       ; preds = %if.end288
  %237 = load float, float* %w_factor282, align 4, !dbg !17359
  %cmp293 = fcmp ogt float %237, 1.000000e+00, !dbg !17359
  br i1 %cmp293, label %if.then295, label %if.end296, !dbg !17355

if.then295:                                       ; preds = %if.else292
  store float 1.000000e+00, float* %w_factor282, align 4, !dbg !17359
  br label %if.end296, !dbg !17359

if.end296:                                        ; preds = %if.then295, %if.else292
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then291
  %238 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17361
  %239 = load i32, i32* %index, align 4, !dbg !17362
  %240 = load float*, float** %force.addr, align 8, !dbg !17363
  %241 = load i32, i32* %index, align 4, !dbg !17364
  %mul298 = mul nsw i32 %241, 4, !dbg !17365
  %idxprom299 = sext i32 %mul298 to i64, !dbg !17363
  %arrayidx300 = getelementptr inbounds float, float* %240, i64 %idxprom299, !dbg !17363
  %arraydecay301 = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 0, !dbg !17366
  %arraydecay302 = getelementptr inbounds [2 x i32], [2 x i32]* %closest_id, i64 0, i64 0, !dbg !17367
  call void @surface_determineForceTargetPoints(%struct.PaintSurfaceData* %238, i32 %239, float* %arrayidx300, float* %arraydecay301, i32* %arraydecay302), !dbg !17368
  store i32 0, i32* %i275, align 4, !dbg !17369
  br label %for.cond303, !dbg !17371

for.cond303:                                      ; preds = %for.inc425, %if.end297
  %242 = load i32, i32* %i275, align 4, !dbg !17372
  %cmp304 = icmp slt i32 %242, 2, !dbg !17374
  br i1 %cmp304, label %for.body306, label %for.end427, !dbg !17375

for.body306:                                      ; preds = %for.cond303
  call void @llvm.dbg.declare(metadata i32* %n_index307, metadata !17376, metadata !DIExpression()), !dbg !17378
  %243 = load i32, i32* %i275, align 4, !dbg !17379
  %idxprom308 = sext i32 %243 to i64, !dbg !17380
  %arrayidx309 = getelementptr inbounds [2 x i32], [2 x i32]* %closest_id, i64 0, i64 %idxprom308, !dbg !17380
  %244 = load i32, i32* %arrayidx309, align 4, !dbg !17380
  store i32 %244, i32* %n_index307, align 4, !dbg !17378
  %245 = load i32, i32* %n_index307, align 4, !dbg !17381
  %cmp310 = icmp ne i32 %245, -1, !dbg !17383
  br i1 %cmp310, label %land.lhs.true312, label %if.end424, !dbg !17384

land.lhs.true312:                                 ; preds = %for.body306
  %246 = load i32, i32* %i275, align 4, !dbg !17385
  %idxprom313 = sext i32 %246 to i64, !dbg !17386
  %arrayidx314 = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 %idxprom313, !dbg !17386
  %247 = load float, float* %arrayidx314, align 4, !dbg !17386
  %cmp315 = fcmp ogt float %247, 0.000000e+00, !dbg !17387
  br i1 %cmp315, label %if.then317, label %if.end424, !dbg !17388

if.then317:                                       ; preds = %land.lhs.true312
  call void @llvm.dbg.declare(metadata float* %dir_dot, metadata !17389, metadata !DIExpression()), !dbg !17391
  %248 = load i32, i32* %i275, align 4, !dbg !17392
  %idxprom318 = sext i32 %248 to i64, !dbg !17393
  %arrayidx319 = getelementptr inbounds [2 x float], [2 x float]* %closest_d, i64 0, i64 %idxprom318, !dbg !17393
  %249 = load float, float* %arrayidx319, align 4, !dbg !17393
  store float %249, float* %dir_dot, align 4, !dbg !17391
  call void @llvm.dbg.declare(metadata float* %dir_factor, metadata !17394, metadata !DIExpression()), !dbg !17395
  call void @llvm.dbg.declare(metadata float* %a_factor320, metadata !17396, metadata !DIExpression()), !dbg !17397
  call void @llvm.dbg.declare(metadata float* %speed_scale321, metadata !17398, metadata !DIExpression()), !dbg !17399
  %250 = load float, float* %eff_scale262, align 4, !dbg !17400
  %251 = load float*, float** %force.addr, align 8, !dbg !17401
  %252 = load i32, i32* %index, align 4, !dbg !17402
  %mul322 = mul nsw i32 %252, 4, !dbg !17403
  %add323 = add nsw i32 %mul322, 3, !dbg !17404
  %idxprom324 = sext i32 %add323 to i64, !dbg !17401
  %arrayidx325 = getelementptr inbounds float, float* %251, i64 %idxprom324, !dbg !17401
  %253 = load float, float* %arrayidx325, align 4, !dbg !17401
  %mul326 = fmul float %250, %253, !dbg !17405
  %254 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !17406
  %255 = load i32, i32* %n_index307, align 4, !dbg !17407
  %idxprom327 = sext i32 %255 to i64, !dbg !17406
  %arrayidx328 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %254, i64 %idxprom327, !dbg !17406
  %dist329 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx328, i32 0, i32 1, !dbg !17408
  %256 = load float, float* %dist329, align 4, !dbg !17408
  %div330 = fdiv float %mul326, %256, !dbg !17409
  store float %div330, float* %speed_scale321, align 4, !dbg !17399
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %ePoint331, metadata !17410, metadata !DIExpression()), !dbg !17411
  %257 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17412
  %type_data332 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %257, i32 0, i32 1, !dbg !17413
  %258 = load i8*, i8** %type_data332, align 8, !dbg !17413
  %259 = bitcast i8* %258 to %struct.PaintPoint*, !dbg !17414
  %260 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17415
  %adj_data333 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %260, i32 0, i32 2, !dbg !17416
  %261 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data333, align 8, !dbg !17416
  %n_target334 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %261, i32 0, i32 0, !dbg !17417
  %262 = load i32*, i32** %n_target334, align 8, !dbg !17417
  %263 = load i32, i32* %n_index307, align 4, !dbg !17418
  %idxprom335 = sext i32 %263 to i64, !dbg !17415
  %arrayidx336 = getelementptr inbounds i32, i32* %262, i64 %idxprom335, !dbg !17415
  %264 = load i32, i32* %arrayidx336, align 4, !dbg !17415
  %idxprom337 = sext i32 %264 to i64, !dbg !17419
  %arrayidx338 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %259, i64 %idxprom337, !dbg !17419
  store %struct.PaintPoint* %arrayidx338, %struct.PaintPoint** %ePoint331, align 8, !dbg !17411
  call void @llvm.dbg.declare(metadata float* %e_wet, metadata !17420, metadata !DIExpression()), !dbg !17421
  %265 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17422
  %wetness339 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %265, i32 0, i32 2, !dbg !17423
  %266 = load float, float* %wetness339, align 4, !dbg !17423
  store float %266, float* %e_wet, align 4, !dbg !17421
  %267 = load float, float* %dir_dot, align 4, !dbg !17424
  %cmp340 = fcmp ole float %267, 0.000000e+00, !dbg !17426
  br i1 %cmp340, label %if.then342, label %if.end343, !dbg !17427

if.then342:                                       ; preds = %if.then317
  br label %for.inc425, !dbg !17428

if.end343:                                        ; preds = %if.then317
  %268 = load float, float* %dir_dot, align 4, !dbg !17429
  %269 = load float, float* %speed_scale321, align 4, !dbg !17430
  %cmp344 = fcmp olt float %269, 1.000000e+00, !dbg !17430
  br i1 %cmp344, label %cond.true346, label %cond.false347, !dbg !17430

cond.true346:                                     ; preds = %if.end343
  %270 = load float, float* %speed_scale321, align 4, !dbg !17430
  br label %cond.end348, !dbg !17430

cond.false347:                                    ; preds = %if.end343
  br label %cond.end348, !dbg !17430

cond.end348:                                      ; preds = %cond.false347, %cond.true346
  %cond349 = phi float [ %270, %cond.true346 ], [ 1.000000e+00, %cond.false347 ], !dbg !17430
  %mul350 = fmul float %268, %cond349, !dbg !17431
  %271 = load float, float* %w_factor282, align 4, !dbg !17432
  %mul351 = fmul float %mul350, %271, !dbg !17433
  store float %mul351, float* %dir_factor, align 4, !dbg !17434
  %272 = load float, float* %dir_factor, align 4, !dbg !17435
  %cmp352 = fcmp ogt float %272, 5.000000e-01, !dbg !17437
  br i1 %cmp352, label %if.then354, label %if.end355, !dbg !17438

if.then354:                                       ; preds = %cond.end348
  store float 5.000000e-01, float* %dir_factor, align 4, !dbg !17439
  br label %if.end355, !dbg !17440

if.end355:                                        ; preds = %if.then354, %cond.end348
  %273 = load float, float* %dir_factor, align 4, !dbg !17441
  %274 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17442
  %wetness356 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %274, i32 0, i32 2, !dbg !17443
  %275 = load float, float* %wetness356, align 4, !dbg !17444
  %add357 = fadd float %275, %273, !dbg !17444
  store float %add357, float* %wetness356, align 4, !dbg !17444
  %276 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17445
  %wetness358 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %276, i32 0, i32 2, !dbg !17445
  %277 = load float, float* %wetness358, align 4, !dbg !17445
  %cmp359 = fcmp olt float %277, 0.000000e+00, !dbg !17445
  br i1 %cmp359, label %if.then361, label %if.else363, !dbg !17448

if.then361:                                       ; preds = %if.end355
  %278 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17445
  %wetness362 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %278, i32 0, i32 2, !dbg !17445
  store float 0.000000e+00, float* %wetness362, align 4, !dbg !17445
  br label %if.end370, !dbg !17445

if.else363:                                       ; preds = %if.end355
  %279 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17449
  %wetness364 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %279, i32 0, i32 2, !dbg !17449
  %280 = load float, float* %wetness364, align 4, !dbg !17449
  %cmp365 = fcmp ogt float %280, 5.000000e+00, !dbg !17449
  br i1 %cmp365, label %if.then367, label %if.end369, !dbg !17445

if.then367:                                       ; preds = %if.else363
  %281 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17449
  %wetness368 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %281, i32 0, i32 2, !dbg !17449
  store float 5.000000e+00, float* %wetness368, align 4, !dbg !17449
  br label %if.end369, !dbg !17449

if.end369:                                        ; preds = %if.then367, %if.else363
  br label %if.end370

if.end370:                                        ; preds = %if.end369, %if.then361
  %282 = load float, float* %dir_factor, align 4, !dbg !17451
  %283 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17452
  %wetness371 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %283, i32 0, i32 2, !dbg !17453
  %284 = load float, float* %wetness371, align 4, !dbg !17453
  %div372 = fdiv float %282, %284, !dbg !17454
  store float %div372, float* %a_factor320, align 4, !dbg !17455
  %285 = load float, float* %a_factor320, align 4, !dbg !17456
  %cmp373 = fcmp olt float %285, 0.000000e+00, !dbg !17456
  br i1 %cmp373, label %if.then375, label %if.else376, !dbg !17459

if.then375:                                       ; preds = %if.end370
  store float 0.000000e+00, float* %a_factor320, align 4, !dbg !17456
  br label %if.end381, !dbg !17456

if.else376:                                       ; preds = %if.end370
  %286 = load float, float* %a_factor320, align 4, !dbg !17460
  %cmp377 = fcmp ogt float %286, 1.000000e+00, !dbg !17460
  br i1 %cmp377, label %if.then379, label %if.end380, !dbg !17456

if.then379:                                       ; preds = %if.else376
  store float 1.000000e+00, float* %a_factor320, align 4, !dbg !17460
  br label %if.end380, !dbg !17460

if.end380:                                        ; preds = %if.then379, %if.else376
  br label %if.end381

if.end381:                                        ; preds = %if.end380, %if.then375
  %287 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17462
  %e_color382 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %287, i32 0, i32 0, !dbg !17463
  %arraydecay383 = getelementptr inbounds [3 x float], [3 x float]* %e_color382, i64 0, i64 0, !dbg !17462
  %288 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17464
  %e_alpha384 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %288, i32 0, i32 1, !dbg !17465
  %289 = load float, float* %e_alpha384, align 4, !dbg !17465
  %290 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17466
  %e_color385 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %290, i32 0, i32 0, !dbg !17467
  %arraydecay386 = getelementptr inbounds [3 x float], [3 x float]* %e_color385, i64 0, i64 0, !dbg !17466
  %291 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17468
  %e_alpha387 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %291, i32 0, i32 1, !dbg !17469
  %292 = load float, float* %e_alpha387, align 4, !dbg !17469
  %293 = load float, float* %a_factor320, align 4, !dbg !17470
  %call388 = call float @mixColors(float* %arraydecay383, float %289, float* %arraydecay386, float %292, float %293), !dbg !17471
  %294 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17472
  %e_alpha389 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %294, i32 0, i32 1, !dbg !17474
  %295 = load float, float* %e_alpha389, align 4, !dbg !17474
  %296 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17475
  %e_alpha390 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %296, i32 0, i32 1, !dbg !17476
  %297 = load float, float* %e_alpha390, align 4, !dbg !17476
  %cmp391 = fcmp ogt float %295, %297, !dbg !17477
  br i1 %cmp391, label %if.then393, label %if.end406, !dbg !17478

if.then393:                                       ; preds = %if.end381
  %298 = load float, float* %a_factor320, align 4, !dbg !17479
  %299 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17481
  %e_alpha394 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %299, i32 0, i32 1, !dbg !17482
  %300 = load float, float* %e_alpha394, align 4, !dbg !17482
  %mul395 = fmul float %298, %300, !dbg !17483
  %301 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17484
  %e_alpha396 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %301, i32 0, i32 1, !dbg !17485
  %302 = load float, float* %e_alpha396, align 4, !dbg !17486
  %add397 = fadd float %302, %mul395, !dbg !17486
  store float %add397, float* %e_alpha396, align 4, !dbg !17486
  %303 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17487
  %e_alpha398 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %303, i32 0, i32 1, !dbg !17489
  %304 = load float, float* %e_alpha398, align 4, !dbg !17489
  %305 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17490
  %e_alpha399 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %305, i32 0, i32 1, !dbg !17491
  %306 = load float, float* %e_alpha399, align 4, !dbg !17491
  %cmp400 = fcmp ogt float %304, %306, !dbg !17492
  br i1 %cmp400, label %if.then402, label %if.end405, !dbg !17493

if.then402:                                       ; preds = %if.then393
  %307 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint_prev, align 8, !dbg !17494
  %e_alpha403 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %307, i32 0, i32 1, !dbg !17495
  %308 = load float, float* %e_alpha403, align 4, !dbg !17495
  %309 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17496
  %e_alpha404 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %309, i32 0, i32 1, !dbg !17497
  store float %308, float* %e_alpha404, align 4, !dbg !17498
  br label %if.end405, !dbg !17496

if.end405:                                        ; preds = %if.then402, %if.then393
  br label %if.end406, !dbg !17499

if.end406:                                        ; preds = %if.end405, %if.end381
  %310 = load %struct.PaintPoint*, %struct.PaintPoint** %ePoint331, align 8, !dbg !17500
  %wetness407 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %310, i32 0, i32 2, !dbg !17501
  %311 = load float, float* %wetness407, align 4, !dbg !17501
  %312 = load float, float* %e_wet, align 4, !dbg !17502
  %sub408 = fsub float %311, %312, !dbg !17503
  %313 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint276, align 8, !dbg !17504
  %wetness409 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %313, i32 0, i32 2, !dbg !17505
  %314 = load float, float* %wetness409, align 4, !dbg !17506
  %sub410 = fsub float %314, %sub408, !dbg !17506
  store float %sub410, float* %wetness409, align 4, !dbg !17506
  %315 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint276, align 8, !dbg !17507
  %wetness411 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %315, i32 0, i32 2, !dbg !17507
  %316 = load float, float* %wetness411, align 4, !dbg !17507
  %cmp412 = fcmp olt float %316, 0.000000e+00, !dbg !17507
  br i1 %cmp412, label %if.then414, label %if.else416, !dbg !17510

if.then414:                                       ; preds = %if.end406
  %317 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint276, align 8, !dbg !17507
  %wetness415 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %317, i32 0, i32 2, !dbg !17507
  store float 0.000000e+00, float* %wetness415, align 4, !dbg !17507
  br label %if.end423, !dbg !17507

if.else416:                                       ; preds = %if.end406
  %318 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint276, align 8, !dbg !17511
  %wetness417 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %318, i32 0, i32 2, !dbg !17511
  %319 = load float, float* %wetness417, align 4, !dbg !17511
  %cmp418 = fcmp ogt float %319, 5.000000e+00, !dbg !17511
  br i1 %cmp418, label %if.then420, label %if.end422, !dbg !17507

if.then420:                                       ; preds = %if.else416
  %320 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint276, align 8, !dbg !17511
  %wetness421 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %320, i32 0, i32 2, !dbg !17511
  store float 5.000000e+00, float* %wetness421, align 4, !dbg !17511
  br label %if.end422, !dbg !17511

if.end422:                                        ; preds = %if.then420, %if.else416
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %if.then414
  br label %if.end424, !dbg !17513

if.end424:                                        ; preds = %if.end423, %land.lhs.true312, %for.body306
  br label %for.inc425, !dbg !17514

for.inc425:                                       ; preds = %if.end424, %if.then342
  %321 = load i32, i32* %i275, align 4, !dbg !17515
  %inc426 = add nsw i32 %321, 1, !dbg !17515
  store i32 %inc426, i32* %i275, align 4, !dbg !17515
  br label %for.cond303, !dbg !17516, !llvm.loop !17517

for.end427:                                       ; preds = %for.cond303
  br label %for.inc428, !dbg !17519

for.inc428:                                       ; preds = %for.end427, %if.then287
  %322 = load i32, i32* %index, align 4, !dbg !17520
  %inc429 = add nsw i32 %322, 1, !dbg !17520
  store i32 %inc429, i32* %index, align 4, !dbg !17520
  br label %for.cond270, !dbg !17521, !llvm.loop !17522

for.end430:                                       ; preds = %for.cond270
  br label %if.end431, !dbg !17524

if.end431:                                        ; preds = %if.then, %for.end430, %land.lhs.true259, %if.end255
  ret void, !dbg !17525
}

; Function Attrs: noinline nounwind uwtable
define internal void @value_dissolve(float* %r_value, float %time, float %scale, i32 %is_log) #0 !dbg !17526 {
entry:
  %r_value.addr = alloca float*, align 8
  %time.addr = alloca float, align 4
  %scale.addr = alloca float, align 4
  %is_log.addr = alloca i32, align 4
  store float* %r_value, float** %r_value.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_value.addr, metadata !17530, metadata !DIExpression()), !dbg !17531
  store float %time, float* %time.addr, align 4
  call void @llvm.dbg.declare(metadata float* %time.addr, metadata !17532, metadata !DIExpression()), !dbg !17533
  store float %scale, float* %scale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %scale.addr, metadata !17534, metadata !DIExpression()), !dbg !17535
  store i32 %is_log, i32* %is_log.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %is_log.addr, metadata !17536, metadata !DIExpression()), !dbg !17537
  %0 = load i32, i32* %is_log.addr, align 4, !dbg !17538
  %tobool = icmp ne i32 %0, 0, !dbg !17539
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17539

cond.true:                                        ; preds = %entry
  %1 = load float*, float** %r_value.addr, align 8, !dbg !17540
  %2 = load float, float* %1, align 4, !dbg !17541
  %3 = load float, float* %time.addr, align 4, !dbg !17542
  %mul = fmul float 0x3FF3333340000000, %3, !dbg !17543
  %4 = load float, float* %scale.addr, align 4, !dbg !17544
  %div = fdiv float %mul, %4, !dbg !17545
  %div1 = fdiv float 1.000000e+00, %div, !dbg !17546
  %call = call float @powf(float 0x3F50624DE0000000, float %div1) #7, !dbg !17547
  %mul2 = fmul float %2, %call, !dbg !17548
  br label %cond.end, !dbg !17539

cond.false:                                       ; preds = %entry
  %5 = load float*, float** %r_value.addr, align 8, !dbg !17549
  %6 = load float, float* %5, align 4, !dbg !17550
  %7 = load float, float* %time.addr, align 4, !dbg !17551
  %div3 = fdiv float 1.000000e+00, %7, !dbg !17552
  %8 = load float, float* %scale.addr, align 4, !dbg !17553
  %mul4 = fmul float %div3, %8, !dbg !17554
  %sub = fsub float %6, %mul4, !dbg !17555
  br label %cond.end, !dbg !17539

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %mul2, %cond.true ], [ %sub, %cond.false ], !dbg !17539
  %9 = load float*, float** %r_value.addr, align 8, !dbg !17556
  store float %cond, float* %9, align 4, !dbg !17557
  ret void, !dbg !17558
}

; Function Attrs: nounwind
declare dso_local float @powf(float, float) #3

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @object_cacheIgnoreClear(%struct.Object* %ob, i32 %state) #0 !dbg !17559 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %state.addr = alloca i32, align 4
  %pidlist = alloca %struct.ListBase, align 8
  %pid = alloca %struct.PTCacheID*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !17562, metadata !DIExpression()), !dbg !17563
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !17564, metadata !DIExpression()), !dbg !17565
  call void @llvm.dbg.declare(metadata %struct.ListBase* %pidlist, metadata !17566, metadata !DIExpression()), !dbg !17567
  call void @llvm.dbg.declare(metadata %struct.PTCacheID** %pid, metadata !17568, metadata !DIExpression()), !dbg !17570
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !17571
  call void @BKE_ptcache_ids_from_object(%struct.ListBase* %pidlist, %struct.Object* %0, %struct.Scene* null, i32 0), !dbg !17572
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %pidlist, i32 0, i32 0, !dbg !17573
  %1 = load i8*, i8** %first, align 8, !dbg !17573
  %2 = bitcast i8* %1 to %struct.PTCacheID*, !dbg !17575
  store %struct.PTCacheID* %2, %struct.PTCacheID** %pid, align 8, !dbg !17576
  br label %for.cond, !dbg !17577

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !17578
  %tobool = icmp ne %struct.PTCacheID* %3, null, !dbg !17580
  br i1 %tobool, label %for.body, label %for.end, !dbg !17580

for.body:                                         ; preds = %for.cond
  %4 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !17581
  %cache = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %4, i32 0, i32 25, !dbg !17584
  %5 = load %struct.PointCache*, %struct.PointCache** %cache, align 8, !dbg !17584
  %tobool1 = icmp ne %struct.PointCache* %5, null, !dbg !17581
  br i1 %tobool1, label %if.then, label %if.end7, !dbg !17585

if.then:                                          ; preds = %for.body
  %6 = load i32, i32* %state.addr, align 4, !dbg !17586
  %tobool2 = icmp ne i32 %6, 0, !dbg !17586
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !17589

if.then3:                                         ; preds = %if.then
  %7 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !17590
  %cache4 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %7, i32 0, i32 25, !dbg !17591
  %8 = load %struct.PointCache*, %struct.PointCache** %cache4, align 8, !dbg !17591
  %flag = getelementptr inbounds %struct.PointCache, %struct.PointCache* %8, i32 0, i32 2, !dbg !17592
  %9 = load i32, i32* %flag, align 8, !dbg !17593
  %or = or i32 %9, 8192, !dbg !17593
  store i32 %or, i32* %flag, align 8, !dbg !17593
  br label %if.end, !dbg !17590

if.else:                                          ; preds = %if.then
  %10 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !17594
  %cache5 = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %10, i32 0, i32 25, !dbg !17595
  %11 = load %struct.PointCache*, %struct.PointCache** %cache5, align 8, !dbg !17595
  %flag6 = getelementptr inbounds %struct.PointCache, %struct.PointCache* %11, i32 0, i32 2, !dbg !17596
  %12 = load i32, i32* %flag6, align 8, !dbg !17597
  %and = and i32 %12, -8193, !dbg !17597
  store i32 %and, i32* %flag6, align 8, !dbg !17597
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  br label %if.end7, !dbg !17598

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !17599

for.inc:                                          ; preds = %if.end7
  %13 = load %struct.PTCacheID*, %struct.PTCacheID** %pid, align 8, !dbg !17600
  %next = getelementptr inbounds %struct.PTCacheID, %struct.PTCacheID* %13, i32 0, i32 0, !dbg !17601
  %14 = load %struct.PTCacheID*, %struct.PTCacheID** %next, align 8, !dbg !17601
  store %struct.PTCacheID* %14, %struct.PTCacheID** %pid, align 8, !dbg !17602
  br label %for.cond, !dbg !17603, !llvm.loop !17604

for.end:                                          ; preds = %for.cond
  call void @BLI_freelistN(%struct.ListBase* %pidlist), !dbg !17606
  ret void, !dbg !17607
}

declare dso_local void @BKE_object_handle_update(%struct.EvaluationContext*, %struct.Scene*, %struct.Object*) #2

declare dso_local void @BKE_object_where_is_calc_time(%struct.Scene*, %struct.Object*, float) #2

declare dso_local void @BKE_pose_where_is(%struct.Scene*, %struct.Object*) #2

declare dso_local void @BKE_ptcache_ids_from_object(%struct.ListBase*, %struct.Object*, %struct.Scene*, i32) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local zeroext i8 @BKE_scene_use_new_shading_nodes(%struct.Scene*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local i16* @give_totcolp(%struct.Object*) #2

declare dso_local %struct.Material* @RE_init_sample_material(%struct.Material*, %struct.Scene*) #2

declare dso_local %struct.KDTree* @BLI_kdtree_new(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @boundIntersectPoint(%struct.Bounds3D* %b, float* %point, float %radius) #0 !dbg !17608 {
entry:
  %retval = alloca i32, align 4
  %b.addr = alloca %struct.Bounds3D*, align 8
  %point.addr = alloca float*, align 8
  %radius.addr = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.Bounds3D* %b, %struct.Bounds3D** %b.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b.addr, metadata !17611, metadata !DIExpression()), !dbg !17612
  store float* %point, float** %point.addr, align 8
  call void @llvm.dbg.declare(metadata float** %point.addr, metadata !17613, metadata !DIExpression()), !dbg !17614
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !17615, metadata !DIExpression()), !dbg !17616
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17617, metadata !DIExpression()), !dbg !17618
  store i32 2, i32* %i, align 4, !dbg !17618
  %0 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !17619
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %0, i32 0, i32 0, !dbg !17621
  %1 = load i32, i32* %valid, align 4, !dbg !17621
  %tobool = icmp ne i32 %1, 0, !dbg !17619
  br i1 %tobool, label %if.end, label %if.then, !dbg !17622

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17623
  br label %return, !dbg !17623

if.end:                                           ; preds = %entry
  br label %for.cond, !dbg !17624

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %i, align 4, !dbg !17625
  %cmp = icmp sge i32 %2, 0, !dbg !17628
  br i1 %cmp, label %for.body, label %for.end, !dbg !17629

for.body:                                         ; preds = %for.cond
  %3 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !17630
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %3, i32 0, i32 1, !dbg !17632
  %4 = load i32, i32* %i, align 4, !dbg !17633
  %idxprom = sext i32 %4 to i64, !dbg !17630
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom, !dbg !17630
  %5 = load float, float* %arrayidx, align 4, !dbg !17630
  %6 = load float*, float** %point.addr, align 8, !dbg !17634
  %7 = load i32, i32* %i, align 4, !dbg !17635
  %idxprom1 = sext i32 %7 to i64, !dbg !17634
  %arrayidx2 = getelementptr inbounds float, float* %6, i64 %idxprom1, !dbg !17634
  %8 = load float, float* %arrayidx2, align 4, !dbg !17634
  %9 = load float, float* %radius.addr, align 4, !dbg !17636
  %add = fadd float %8, %9, !dbg !17637
  %cmp3 = fcmp ole float %5, %add, !dbg !17638
  br i1 %cmp3, label %land.lhs.true, label %if.then9, !dbg !17639

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.Bounds3D*, %struct.Bounds3D** %b.addr, align 8, !dbg !17640
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %10, i32 0, i32 2, !dbg !17641
  %11 = load i32, i32* %i, align 4, !dbg !17642
  %idxprom4 = sext i32 %11 to i64, !dbg !17640
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom4, !dbg !17640
  %12 = load float, float* %arrayidx5, align 4, !dbg !17640
  %13 = load float*, float** %point.addr, align 8, !dbg !17643
  %14 = load i32, i32* %i, align 4, !dbg !17644
  %idxprom6 = sext i32 %14 to i64, !dbg !17643
  %arrayidx7 = getelementptr inbounds float, float* %13, i64 %idxprom6, !dbg !17643
  %15 = load float, float* %arrayidx7, align 4, !dbg !17643
  %16 = load float, float* %radius.addr, align 4, !dbg !17645
  %sub = fsub float %15, %16, !dbg !17646
  %cmp8 = fcmp oge float %12, %sub, !dbg !17647
  br i1 %cmp8, label %if.end10, label %if.then9, !dbg !17648

if.then9:                                         ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %retval, align 4, !dbg !17649
  br label %return, !dbg !17649

if.end10:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !17650

for.inc:                                          ; preds = %if.end10
  %17 = load i32, i32* %i, align 4, !dbg !17651
  %sub11 = sub nsw i32 %17, 1, !dbg !17651
  store i32 %sub11, i32* %i, align 4, !dbg !17651
  br label %for.cond, !dbg !17652, !llvm.loop !17653

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !17655
  br label %return, !dbg !17655

return:                                           ; preds = %for.end, %if.then9, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !17656
  ret i32 %18, !dbg !17656
}

declare dso_local void @BLI_kdtree_insert(%struct.KDTree*, i32, float*) #2

declare dso_local void @BLI_kdtree_free(%struct.KDTree*) #2

declare dso_local void @BLI_begin_threaded_malloc() #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @boundsIntersectDist(%struct.Bounds3D* %b1, %struct.Bounds3D* %b2, float %dist) #0 !dbg !17657 {
entry:
  %retval = alloca i32, align 4
  %b1.addr = alloca %struct.Bounds3D*, align 8
  %b2.addr = alloca %struct.Bounds3D*, align 8
  %dist.addr = alloca float, align 4
  %i = alloca i32, align 4
  store %struct.Bounds3D* %b1, %struct.Bounds3D** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b1.addr, metadata !17660, metadata !DIExpression()), !dbg !17661
  store %struct.Bounds3D* %b2, %struct.Bounds3D** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b2.addr, metadata !17662, metadata !DIExpression()), !dbg !17663
  store float %dist, float* %dist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %dist.addr, metadata !17664, metadata !DIExpression()), !dbg !17665
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17666, metadata !DIExpression()), !dbg !17667
  store i32 2, i32* %i, align 4, !dbg !17667
  %0 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !17668
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %0, i32 0, i32 0, !dbg !17670
  %1 = load i32, i32* %valid, align 4, !dbg !17670
  %tobool = icmp ne i32 %1, 0, !dbg !17668
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !17671

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !17672
  %valid1 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %2, i32 0, i32 0, !dbg !17673
  %3 = load i32, i32* %valid1, align 4, !dbg !17673
  %tobool2 = icmp ne i32 %3, 0, !dbg !17672
  br i1 %tobool2, label %if.end, label %if.then, !dbg !17674

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !17675
  br label %return, !dbg !17675

if.end:                                           ; preds = %lor.lhs.false
  br label %for.cond, !dbg !17676

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !17677
  %cmp = icmp sge i32 %4, 0, !dbg !17680
  br i1 %cmp, label %for.body, label %for.end, !dbg !17681

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !17682
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %5, i32 0, i32 1, !dbg !17684
  %6 = load i32, i32* %i, align 4, !dbg !17685
  %idxprom = sext i32 %6 to i64, !dbg !17682
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom, !dbg !17682
  %7 = load float, float* %arrayidx, align 4, !dbg !17682
  %8 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !17686
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %8, i32 0, i32 2, !dbg !17687
  %9 = load i32, i32* %i, align 4, !dbg !17688
  %idxprom3 = sext i32 %9 to i64, !dbg !17686
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom3, !dbg !17686
  %10 = load float, float* %arrayidx4, align 4, !dbg !17686
  %11 = load float, float* %dist.addr, align 4, !dbg !17689
  %add = fadd float %10, %11, !dbg !17690
  %cmp5 = fcmp ole float %7, %add, !dbg !17691
  br i1 %cmp5, label %land.lhs.true, label %if.then13, !dbg !17692

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !17693
  %max6 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %12, i32 0, i32 2, !dbg !17694
  %13 = load i32, i32* %i, align 4, !dbg !17695
  %idxprom7 = sext i32 %13 to i64, !dbg !17693
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %max6, i64 0, i64 %idxprom7, !dbg !17693
  %14 = load float, float* %arrayidx8, align 4, !dbg !17693
  %15 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !17696
  %min9 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %15, i32 0, i32 1, !dbg !17697
  %16 = load i32, i32* %i, align 4, !dbg !17698
  %idxprom10 = sext i32 %16 to i64, !dbg !17696
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min9, i64 0, i64 %idxprom10, !dbg !17696
  %17 = load float, float* %arrayidx11, align 4, !dbg !17696
  %18 = load float, float* %dist.addr, align 4, !dbg !17699
  %sub = fsub float %17, %18, !dbg !17700
  %cmp12 = fcmp oge float %14, %sub, !dbg !17701
  br i1 %cmp12, label %if.end14, label %if.then13, !dbg !17702

if.then13:                                        ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %retval, align 4, !dbg !17703
  br label %return, !dbg !17703

if.end14:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !17704

for.inc:                                          ; preds = %if.end14
  %19 = load i32, i32* %i, align 4, !dbg !17705
  %sub15 = sub nsw i32 %19, 1, !dbg !17705
  store i32 %sub15, i32* %i, align 4, !dbg !17705
  br label %for.cond, !dbg !17706, !llvm.loop !17707

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !17709
  br label %return, !dbg !17709

return:                                           ; preds = %for.end, %if.then13, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !17710
  ret i32 %20, !dbg !17710
}

declare dso_local void @BLI_kdtree_balance(%struct.KDTree*) #2

declare dso_local i32 @BLI_kdtree_find_nearest(%struct.KDTree*, float*, %struct.KDTreeNearest*) #2

declare dso_local i32 @BLI_kdtree_range_search__normal(%struct.KDTree*, float*, float*, %struct.KDTreeNearest**, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !17711 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !17712, metadata !DIExpression()), !dbg !17713
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !17714, metadata !DIExpression()), !dbg !17715
  %0 = load float*, float** %a.addr, align 8, !dbg !17716
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !17716
  %1 = load float, float* %arrayidx, align 4, !dbg !17716
  %2 = load float*, float** %r.addr, align 8, !dbg !17717
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !17717
  %3 = load float, float* %arrayidx1, align 4, !dbg !17718
  %sub = fsub float %3, %1, !dbg !17718
  store float %sub, float* %arrayidx1, align 4, !dbg !17718
  %4 = load float*, float** %a.addr, align 8, !dbg !17719
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !17719
  %5 = load float, float* %arrayidx2, align 4, !dbg !17719
  %6 = load float*, float** %r.addr, align 8, !dbg !17720
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !17720
  %7 = load float, float* %arrayidx3, align 4, !dbg !17721
  %sub4 = fsub float %7, %5, !dbg !17721
  store float %sub4, float* %arrayidx3, align 4, !dbg !17721
  %8 = load float*, float** %a.addr, align 8, !dbg !17722
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !17722
  %9 = load float, float* %arrayidx5, align 4, !dbg !17722
  %10 = load float*, float** %r.addr, align 8, !dbg !17723
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !17723
  %11 = load float, float* %arrayidx6, align 4, !dbg !17724
  %sub7 = fsub float %11, %9, !dbg !17724
  store float %sub7, float* %arrayidx6, align 4, !dbg !17724
  ret void, !dbg !17725
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_updatePointData(%struct.DynamicPaintSurface* %surface, i32 %index, %struct.DynamicPaintBrushSettings* %brush, float* %paint, float %influence, float %depth, float %vel_factor, float %timescale) #0 !dbg !17726 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %index.addr = alloca i32, align 4
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %paint.addr = alloca float*, align 8
  %influence.addr = alloca float, align 4
  %depth.addr = alloca float, align 4
  %vel_factor.addr = alloca float, align 4
  %timescale.addr = alloca float, align 4
  %sData = alloca %struct.PaintSurfaceData*, align 8
  %strength = alloca float, align 4
  %coba_res = alloca [4 x float], align 16
  %paintWetness = alloca float, align 4
  %paintAlpha = alloca float, align 4
  %value = alloca float*, align 8
  %value109 = alloca float*, align 8
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !17729, metadata !DIExpression()), !dbg !17730
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !17731, metadata !DIExpression()), !dbg !17732
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !17733, metadata !DIExpression()), !dbg !17734
  store float* %paint, float** %paint.addr, align 8
  call void @llvm.dbg.declare(metadata float** %paint.addr, metadata !17735, metadata !DIExpression()), !dbg !17736
  store float %influence, float* %influence.addr, align 4
  call void @llvm.dbg.declare(metadata float* %influence.addr, metadata !17737, metadata !DIExpression()), !dbg !17738
  store float %depth, float* %depth.addr, align 4
  call void @llvm.dbg.declare(metadata float* %depth.addr, metadata !17739, metadata !DIExpression()), !dbg !17740
  store float %vel_factor, float* %vel_factor.addr, align 4
  call void @llvm.dbg.declare(metadata float* %vel_factor.addr, metadata !17741, metadata !DIExpression()), !dbg !17742
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !17743, metadata !DIExpression()), !dbg !17744
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData, metadata !17745, metadata !DIExpression()), !dbg !17746
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17747
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !17748
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !17748
  store %struct.PaintSurfaceData* %1, %struct.PaintSurfaceData** %sData, align 8, !dbg !17746
  call void @llvm.dbg.declare(metadata float* %strength, metadata !17749, metadata !DIExpression()), !dbg !17750
  %2 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17751
  %influence_scale = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %2, i32 0, i32 38, !dbg !17752
  %3 = load float, float* %influence_scale, align 8, !dbg !17752
  %4 = load float, float* %influence.addr, align 4, !dbg !17753
  %mul = fmul float %4, %3, !dbg !17753
  store float %mul, float* %influence.addr, align 4, !dbg !17753
  %5 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17754
  %influence_scale1 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %5, i32 0, i32 38, !dbg !17755
  %6 = load float, float* %influence_scale1, align 8, !dbg !17755
  %7 = load float, float* %depth.addr, align 4, !dbg !17756
  %mul2 = fmul float %7, %6, !dbg !17756
  store float %mul2, float* %depth.addr, align 4, !dbg !17756
  %8 = load float, float* %influence.addr, align 4, !dbg !17757
  %9 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17758
  %alpha = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %9, i32 0, i32 9, !dbg !17759
  %10 = load float, float* %alpha, align 4, !dbg !17759
  %mul3 = fmul float %8, %10, !dbg !17760
  store float %mul3, float* %strength, align 4, !dbg !17761
  %11 = load float, float* %strength, align 4, !dbg !17762
  %cmp = fcmp olt float %11, 0.000000e+00, !dbg !17762
  br i1 %cmp, label %if.then, label %if.else, !dbg !17765

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %strength, align 4, !dbg !17762
  br label %if.end6, !dbg !17762

if.else:                                          ; preds = %entry
  %12 = load float, float* %strength, align 4, !dbg !17766
  %cmp4 = fcmp ogt float %12, 1.000000e+00, !dbg !17766
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !17762

if.then5:                                         ; preds = %if.else
  store float 1.000000e+00, float* %strength, align 4, !dbg !17766
  br label %if.end, !dbg !17766

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %13 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17768
  %flags = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %13, i32 0, i32 4, !dbg !17770
  %14 = load i32, i32* %flags, align 8, !dbg !17770
  %and = and i32 %14, 3584, !dbg !17771
  %tobool = icmp ne i32 %and, 0, !dbg !17771
  br i1 %tobool, label %if.then7, label %if.end42, !dbg !17772

if.then7:                                         ; preds = %if.end6
  call void @llvm.dbg.declare(metadata [4 x float]* %coba_res, metadata !17773, metadata !DIExpression()), !dbg !17775
  %15 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17776
  %max_velocity = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %15, i32 0, i32 22, !dbg !17777
  %16 = load float, float* %max_velocity, align 8, !dbg !17777
  %17 = load float, float* %vel_factor.addr, align 4, !dbg !17778
  %div = fdiv float %17, %16, !dbg !17778
  store float %div, float* %vel_factor.addr, align 4, !dbg !17778
  %18 = load float, float* %vel_factor.addr, align 4, !dbg !17779
  %cmp8 = fcmp olt float %18, 0.000000e+00, !dbg !17779
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !17782

if.then9:                                         ; preds = %if.then7
  store float 0.000000e+00, float* %vel_factor.addr, align 4, !dbg !17779
  br label %if.end14, !dbg !17779

if.else10:                                        ; preds = %if.then7
  %19 = load float, float* %vel_factor.addr, align 4, !dbg !17783
  %cmp11 = fcmp ogt float %19, 1.000000e+00, !dbg !17783
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !17779

if.then12:                                        ; preds = %if.else10
  store float 1.000000e+00, float* %vel_factor.addr, align 4, !dbg !17783
  br label %if.end13, !dbg !17783

if.end13:                                         ; preds = %if.then12, %if.else10
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then9
  %20 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17785
  %vel_ramp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %20, i32 0, i32 15, !dbg !17787
  %21 = load %struct.ColorBand*, %struct.ColorBand** %vel_ramp, align 8, !dbg !17787
  %22 = load float, float* %vel_factor.addr, align 4, !dbg !17788
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 0, !dbg !17789
  %call = call zeroext i8 @do_colorband(%struct.ColorBand* %21, float %22, float* %arraydecay), !dbg !17790
  %tobool15 = icmp ne i8 %call, 0, !dbg !17790
  br i1 %tobool15, label %if.then16, label %if.end41, !dbg !17791

if.then16:                                        ; preds = %if.end14
  %23 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17792
  %flags17 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %23, i32 0, i32 4, !dbg !17795
  %24 = load i32, i32* %flags17, align 8, !dbg !17795
  %and18 = and i32 %24, 1024, !dbg !17796
  %tobool19 = icmp ne i32 %and18, 0, !dbg !17796
  br i1 %tobool19, label %if.then20, label %if.end26, !dbg !17797

if.then20:                                        ; preds = %if.then16
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 0, !dbg !17798
  %25 = load float, float* %arrayidx, align 16, !dbg !17798
  %26 = load float*, float** %paint.addr, align 8, !dbg !17800
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 0, !dbg !17800
  store float %25, float* %arrayidx21, align 4, !dbg !17801
  %arrayidx22 = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 1, !dbg !17802
  %27 = load float, float* %arrayidx22, align 4, !dbg !17802
  %28 = load float*, float** %paint.addr, align 8, !dbg !17803
  %arrayidx23 = getelementptr inbounds float, float* %28, i64 1, !dbg !17803
  store float %27, float* %arrayidx23, align 4, !dbg !17804
  %arrayidx24 = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 2, !dbg !17805
  %29 = load float, float* %arrayidx24, align 8, !dbg !17805
  %30 = load float*, float** %paint.addr, align 8, !dbg !17806
  %arrayidx25 = getelementptr inbounds float, float* %30, i64 2, !dbg !17806
  store float %29, float* %arrayidx25, align 4, !dbg !17807
  br label %if.end26, !dbg !17808

if.end26:                                         ; preds = %if.then20, %if.then16
  %31 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17809
  %flags27 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %31, i32 0, i32 4, !dbg !17811
  %32 = load i32, i32* %flags27, align 8, !dbg !17811
  %and28 = and i32 %32, 512, !dbg !17812
  %tobool29 = icmp ne i32 %and28, 0, !dbg !17812
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !17813

if.then30:                                        ; preds = %if.end26
  %arrayidx31 = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 3, !dbg !17814
  %33 = load float, float* %arrayidx31, align 4, !dbg !17814
  %34 = load float, float* %strength, align 4, !dbg !17815
  %mul32 = fmul float %34, %33, !dbg !17815
  store float %mul32, float* %strength, align 4, !dbg !17815
  br label %if.end33, !dbg !17816

if.end33:                                         ; preds = %if.then30, %if.end26
  %35 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17817
  %flags34 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %35, i32 0, i32 4, !dbg !17819
  %36 = load i32, i32* %flags34, align 8, !dbg !17819
  %and35 = and i32 %36, 2048, !dbg !17820
  %tobool36 = icmp ne i32 %and35, 0, !dbg !17820
  br i1 %tobool36, label %if.then37, label %if.end40, !dbg !17821

if.then37:                                        ; preds = %if.end33
  %arrayidx38 = getelementptr inbounds [4 x float], [4 x float]* %coba_res, i64 0, i64 3, !dbg !17822
  %37 = load float, float* %arrayidx38, align 4, !dbg !17822
  %38 = load float, float* %depth.addr, align 4, !dbg !17823
  %mul39 = fmul float %38, %37, !dbg !17823
  store float %mul39, float* %depth.addr, align 4, !dbg !17823
  br label %if.end40, !dbg !17824

if.end40:                                         ; preds = %if.then37, %if.end33
  br label %if.end41, !dbg !17825

if.end41:                                         ; preds = %if.end40, %if.end14
  br label %if.end42, !dbg !17826

if.end42:                                         ; preds = %if.end41, %if.end6
  %39 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17827
  %type = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %39, i32 0, i32 11, !dbg !17829
  %40 = load i16, i16* %type, align 2, !dbg !17829
  %conv = sext i16 %40 to i32, !dbg !17827
  %cmp43 = icmp eq i32 %conv, 0, !dbg !17830
  br i1 %cmp43, label %if.then45, label %if.else48, !dbg !17831

if.then45:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata float* %paintWetness, metadata !17832, metadata !DIExpression()), !dbg !17834
  %41 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17835
  %wetness = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %41, i32 0, i32 10, !dbg !17836
  %42 = load float, float* %wetness, align 8, !dbg !17836
  %43 = load float, float* %strength, align 4, !dbg !17837
  %mul46 = fmul float %42, %43, !dbg !17838
  store float %mul46, float* %paintWetness, align 4, !dbg !17834
  call void @llvm.dbg.declare(metadata float* %paintAlpha, metadata !17839, metadata !DIExpression()), !dbg !17840
  %44 = load float, float* %strength, align 4, !dbg !17841
  store float %44, float* %paintAlpha, align 4, !dbg !17840
  %45 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17842
  %46 = load i32, i32* %index.addr, align 4, !dbg !17843
  %47 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17844
  %flags47 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %47, i32 0, i32 4, !dbg !17845
  %48 = load i32, i32* %flags47, align 8, !dbg !17845
  %49 = load float*, float** %paint.addr, align 8, !dbg !17846
  call void @dynamicPaint_mixPaintColors(%struct.DynamicPaintSurface* %45, i32 %46, i32 %48, float* %49, float* %paintAlpha, float* %paintWetness, float* %timescale.addr), !dbg !17847
  br label %if.end168, !dbg !17848

if.else48:                                        ; preds = %if.end42
  %50 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17849
  %type49 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %50, i32 0, i32 11, !dbg !17851
  %51 = load i16, i16* %type49, align 2, !dbg !17851
  %conv50 = sext i16 %51 to i32, !dbg !17849
  %cmp51 = icmp eq i32 %conv50, 1, !dbg !17852
  br i1 %cmp51, label %if.then53, label %if.else103, !dbg !17853

if.then53:                                        ; preds = %if.else48
  call void @llvm.dbg.declare(metadata float** %value, metadata !17854, metadata !DIExpression()), !dbg !17856
  %52 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17857
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %52, i32 0, i32 1, !dbg !17858
  %53 = load i8*, i8** %type_data, align 8, !dbg !17858
  %54 = bitcast i8* %53 to float*, !dbg !17859
  store float* %54, float** %value, align 8, !dbg !17856
  %55 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17860
  %flags54 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %55, i32 0, i32 18, !dbg !17862
  %56 = load i32, i32* %flags54, align 4, !dbg !17862
  %and55 = and i32 %56, 256, !dbg !17863
  %tobool56 = icmp ne i32 %and55, 0, !dbg !17863
  br i1 %tobool56, label %if.then57, label %if.end59, !dbg !17864

if.then57:                                        ; preds = %if.then53
  %57 = load float*, float** %value, align 8, !dbg !17865
  %58 = load i32, i32* %index.addr, align 4, !dbg !17866
  %idxprom = zext i32 %58 to i64, !dbg !17865
  %arrayidx58 = getelementptr inbounds float, float* %57, i64 %idxprom, !dbg !17865
  %59 = load float, float* %arrayidx58, align 4, !dbg !17865
  %60 = load float, float* %depth.addr, align 4, !dbg !17867
  %add = fadd float %59, %60, !dbg !17868
  store float %add, float* %depth.addr, align 4, !dbg !17869
  br label %if.end59, !dbg !17870

if.end59:                                         ; preds = %if.then57, %if.then53
  %61 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17871
  %depth_clamp = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %61, i32 0, i32 31, !dbg !17873
  %62 = load float, float* %depth_clamp, align 4, !dbg !17873
  %tobool60 = fcmp une float %62, 0.000000e+00, !dbg !17871
  br i1 %tobool60, label %if.then61, label %if.end76, !dbg !17874

if.then61:                                        ; preds = %if.end59
  %63 = load float, float* %depth.addr, align 4, !dbg !17875
  %64 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17875
  %depth_clamp62 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %64, i32 0, i32 31, !dbg !17875
  %65 = load float, float* %depth_clamp62, align 4, !dbg !17875
  %sub = fsub float 0.000000e+00, %65, !dbg !17875
  %cmp63 = fcmp olt float %63, %sub, !dbg !17875
  br i1 %cmp63, label %if.then65, label %if.else68, !dbg !17879

if.then65:                                        ; preds = %if.then61
  %66 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17875
  %depth_clamp66 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %66, i32 0, i32 31, !dbg !17875
  %67 = load float, float* %depth_clamp66, align 4, !dbg !17875
  %sub67 = fsub float 0.000000e+00, %67, !dbg !17875
  store float %sub67, float* %depth.addr, align 4, !dbg !17875
  br label %if.end75, !dbg !17875

if.else68:                                        ; preds = %if.then61
  %68 = load float, float* %depth.addr, align 4, !dbg !17880
  %69 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17880
  %depth_clamp69 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %69, i32 0, i32 31, !dbg !17880
  %70 = load float, float* %depth_clamp69, align 4, !dbg !17880
  %cmp70 = fcmp ogt float %68, %70, !dbg !17880
  br i1 %cmp70, label %if.then72, label %if.end74, !dbg !17875

if.then72:                                        ; preds = %if.else68
  %71 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17880
  %depth_clamp73 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %71, i32 0, i32 31, !dbg !17880
  %72 = load float, float* %depth_clamp73, align 4, !dbg !17880
  store float %72, float* %depth.addr, align 4, !dbg !17880
  br label %if.end74, !dbg !17880

if.end74:                                         ; preds = %if.then72, %if.else68
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then65
  br label %if.end76, !dbg !17882

if.end76:                                         ; preds = %if.end75, %if.end59
  %73 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17883
  %flags77 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %73, i32 0, i32 4, !dbg !17885
  %74 = load i32, i32* %flags77, align 8, !dbg !17885
  %and78 = and i32 %74, 8, !dbg !17886
  %tobool79 = icmp ne i32 %and78, 0, !dbg !17886
  br i1 %tobool79, label %if.then80, label %if.else93, !dbg !17887

if.then80:                                        ; preds = %if.end76
  %75 = load float, float* %strength, align 4, !dbg !17888
  %sub81 = fsub float 1.000000e+00, %75, !dbg !17890
  %76 = load float*, float** %value, align 8, !dbg !17891
  %77 = load i32, i32* %index.addr, align 4, !dbg !17892
  %idxprom82 = zext i32 %77 to i64, !dbg !17891
  %arrayidx83 = getelementptr inbounds float, float* %76, i64 %idxprom82, !dbg !17891
  %78 = load float, float* %arrayidx83, align 4, !dbg !17893
  %mul84 = fmul float %78, %sub81, !dbg !17893
  store float %mul84, float* %arrayidx83, align 4, !dbg !17893
  %79 = load float*, float** %value, align 8, !dbg !17894
  %80 = load i32, i32* %index.addr, align 4, !dbg !17896
  %idxprom85 = zext i32 %80 to i64, !dbg !17894
  %arrayidx86 = getelementptr inbounds float, float* %79, i64 %idxprom85, !dbg !17894
  %81 = load float, float* %arrayidx86, align 4, !dbg !17894
  %cmp87 = fcmp olt float %81, 0.000000e+00, !dbg !17897
  br i1 %cmp87, label %if.then89, label %if.end92, !dbg !17898

if.then89:                                        ; preds = %if.then80
  %82 = load float*, float** %value, align 8, !dbg !17899
  %83 = load i32, i32* %index.addr, align 4, !dbg !17900
  %idxprom90 = zext i32 %83 to i64, !dbg !17899
  %arrayidx91 = getelementptr inbounds float, float* %82, i64 %idxprom90, !dbg !17899
  store float 0.000000e+00, float* %arrayidx91, align 4, !dbg !17901
  br label %if.end92, !dbg !17899

if.end92:                                         ; preds = %if.then89, %if.then80
  br label %if.end102, !dbg !17902

if.else93:                                        ; preds = %if.end76
  %84 = load float*, float** %value, align 8, !dbg !17903
  %85 = load i32, i32* %index.addr, align 4, !dbg !17906
  %idxprom94 = zext i32 %85 to i64, !dbg !17903
  %arrayidx95 = getelementptr inbounds float, float* %84, i64 %idxprom94, !dbg !17903
  %86 = load float, float* %arrayidx95, align 4, !dbg !17903
  %87 = load float, float* %depth.addr, align 4, !dbg !17907
  %cmp96 = fcmp olt float %86, %87, !dbg !17908
  br i1 %cmp96, label %if.then98, label %if.end101, !dbg !17909

if.then98:                                        ; preds = %if.else93
  %88 = load float, float* %depth.addr, align 4, !dbg !17910
  %89 = load float*, float** %value, align 8, !dbg !17911
  %90 = load i32, i32* %index.addr, align 4, !dbg !17912
  %idxprom99 = zext i32 %90 to i64, !dbg !17911
  %arrayidx100 = getelementptr inbounds float, float* %89, i64 %idxprom99, !dbg !17911
  store float %88, float* %arrayidx100, align 4, !dbg !17913
  br label %if.end101, !dbg !17911

if.end101:                                        ; preds = %if.then98, %if.else93
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end92
  br label %if.end167, !dbg !17914

if.else103:                                       ; preds = %if.else48
  %91 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17915
  %type104 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %91, i32 0, i32 11, !dbg !17917
  %92 = load i16, i16* %type104, align 2, !dbg !17917
  %conv105 = sext i16 %92 to i32, !dbg !17915
  %cmp106 = icmp eq i32 %conv105, 2, !dbg !17918
  br i1 %cmp106, label %if.then108, label %if.else137, !dbg !17919

if.then108:                                       ; preds = %if.else103
  call void @llvm.dbg.declare(metadata float** %value109, metadata !17920, metadata !DIExpression()), !dbg !17922
  %93 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17923
  %type_data110 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %93, i32 0, i32 1, !dbg !17924
  %94 = load i8*, i8** %type_data110, align 8, !dbg !17924
  %95 = bitcast i8* %94 to float*, !dbg !17925
  store float* %95, float** %value109, align 8, !dbg !17922
  %96 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17926
  %flags111 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %96, i32 0, i32 4, !dbg !17928
  %97 = load i32, i32* %flags111, align 8, !dbg !17928
  %and112 = and i32 %97, 8, !dbg !17929
  %tobool113 = icmp ne i32 %and112, 0, !dbg !17929
  br i1 %tobool113, label %if.then114, label %if.else127, !dbg !17930

if.then114:                                       ; preds = %if.then108
  %98 = load float, float* %strength, align 4, !dbg !17931
  %sub115 = fsub float 1.000000e+00, %98, !dbg !17933
  %99 = load float*, float** %value109, align 8, !dbg !17934
  %100 = load i32, i32* %index.addr, align 4, !dbg !17935
  %idxprom116 = zext i32 %100 to i64, !dbg !17934
  %arrayidx117 = getelementptr inbounds float, float* %99, i64 %idxprom116, !dbg !17934
  %101 = load float, float* %arrayidx117, align 4, !dbg !17936
  %mul118 = fmul float %101, %sub115, !dbg !17936
  store float %mul118, float* %arrayidx117, align 4, !dbg !17936
  %102 = load float*, float** %value109, align 8, !dbg !17937
  %103 = load i32, i32* %index.addr, align 4, !dbg !17939
  %idxprom119 = zext i32 %103 to i64, !dbg !17937
  %arrayidx120 = getelementptr inbounds float, float* %102, i64 %idxprom119, !dbg !17937
  %104 = load float, float* %arrayidx120, align 4, !dbg !17937
  %cmp121 = fcmp olt float %104, 0.000000e+00, !dbg !17940
  br i1 %cmp121, label %if.then123, label %if.end126, !dbg !17941

if.then123:                                       ; preds = %if.then114
  %105 = load float*, float** %value109, align 8, !dbg !17942
  %106 = load i32, i32* %index.addr, align 4, !dbg !17943
  %idxprom124 = zext i32 %106 to i64, !dbg !17942
  %arrayidx125 = getelementptr inbounds float, float* %105, i64 %idxprom124, !dbg !17942
  store float 0.000000e+00, float* %arrayidx125, align 4, !dbg !17944
  br label %if.end126, !dbg !17942

if.end126:                                        ; preds = %if.then123, %if.then114
  br label %if.end136, !dbg !17945

if.else127:                                       ; preds = %if.then108
  %107 = load float*, float** %value109, align 8, !dbg !17946
  %108 = load i32, i32* %index.addr, align 4, !dbg !17949
  %idxprom128 = zext i32 %108 to i64, !dbg !17946
  %arrayidx129 = getelementptr inbounds float, float* %107, i64 %idxprom128, !dbg !17946
  %109 = load float, float* %arrayidx129, align 4, !dbg !17946
  %110 = load float, float* %strength, align 4, !dbg !17950
  %cmp130 = fcmp olt float %109, %110, !dbg !17951
  br i1 %cmp130, label %if.then132, label %if.end135, !dbg !17952

if.then132:                                       ; preds = %if.else127
  %111 = load float, float* %strength, align 4, !dbg !17953
  %112 = load float*, float** %value109, align 8, !dbg !17954
  %113 = load i32, i32* %index.addr, align 4, !dbg !17955
  %idxprom133 = zext i32 %113 to i64, !dbg !17954
  %arrayidx134 = getelementptr inbounds float, float* %112, i64 %idxprom133, !dbg !17954
  store float %111, float* %arrayidx134, align 4, !dbg !17956
  br label %if.end135, !dbg !17954

if.end135:                                        ; preds = %if.then132, %if.else127
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.end126
  br label %if.end166, !dbg !17957

if.else137:                                       ; preds = %if.else103
  %114 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !17958
  %type138 = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %114, i32 0, i32 11, !dbg !17960
  %115 = load i16, i16* %type138, align 2, !dbg !17960
  %conv139 = sext i16 %115 to i32, !dbg !17958
  %cmp140 = icmp eq i32 %conv139, 3, !dbg !17961
  br i1 %cmp140, label %if.then142, label %if.end165, !dbg !17962

if.then142:                                       ; preds = %if.else137
  %116 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17963
  %wave_clamp = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %116, i32 0, i32 21, !dbg !17966
  %117 = load float, float* %wave_clamp, align 4, !dbg !17966
  %tobool143 = fcmp une float %117, 0.000000e+00, !dbg !17963
  br i1 %tobool143, label %if.then144, label %if.end160, !dbg !17967

if.then144:                                       ; preds = %if.then142
  %118 = load float, float* %depth.addr, align 4, !dbg !17968
  %119 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17968
  %wave_clamp145 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %119, i32 0, i32 21, !dbg !17968
  %120 = load float, float* %wave_clamp145, align 4, !dbg !17968
  %sub146 = fsub float 0.000000e+00, %120, !dbg !17968
  %cmp147 = fcmp olt float %118, %sub146, !dbg !17968
  br i1 %cmp147, label %if.then149, label %if.else152, !dbg !17972

if.then149:                                       ; preds = %if.then144
  %121 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17968
  %wave_clamp150 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %121, i32 0, i32 21, !dbg !17968
  %122 = load float, float* %wave_clamp150, align 4, !dbg !17968
  %sub151 = fsub float 0.000000e+00, %122, !dbg !17968
  store float %sub151, float* %depth.addr, align 4, !dbg !17968
  br label %if.end159, !dbg !17968

if.else152:                                       ; preds = %if.then144
  %123 = load float, float* %depth.addr, align 4, !dbg !17973
  %124 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17973
  %wave_clamp153 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %124, i32 0, i32 21, !dbg !17973
  %125 = load float, float* %wave_clamp153, align 4, !dbg !17973
  %cmp154 = fcmp ogt float %123, %125, !dbg !17973
  br i1 %cmp154, label %if.then156, label %if.end158, !dbg !17968

if.then156:                                       ; preds = %if.else152
  %126 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17973
  %wave_clamp157 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %126, i32 0, i32 21, !dbg !17973
  %127 = load float, float* %wave_clamp157, align 4, !dbg !17973
  store float %127, float* %depth.addr, align 4, !dbg !17973
  br label %if.end158, !dbg !17973

if.end158:                                        ; preds = %if.then156, %if.else152
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then149
  br label %if.end160, !dbg !17975

if.end160:                                        ; preds = %if.end159, %if.then142
  %128 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17976
  %type_data161 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %128, i32 0, i32 1, !dbg !17977
  %129 = load i8*, i8** %type_data161, align 8, !dbg !17977
  %130 = bitcast i8* %129 to %struct.PaintWavePoint*, !dbg !17978
  %131 = load i32, i32* %index.addr, align 4, !dbg !17979
  %idxprom162 = zext i32 %131 to i64, !dbg !17980
  %arrayidx163 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %130, i64 %idxprom162, !dbg !17980
  %132 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !17981
  %133 = load float, float* %depth.addr, align 4, !dbg !17982
  %sub164 = fsub float 0.000000e+00, %133, !dbg !17983
  call void @dynamicPaint_mixWaveHeight(%struct.PaintWavePoint* %arrayidx163, %struct.DynamicPaintBrushSettings* %132, float %sub164), !dbg !17984
  br label %if.end165, !dbg !17985

if.end165:                                        ; preds = %if.end160, %if.else137
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %if.end136
  br label %if.end167

if.end167:                                        ; preds = %if.end166, %if.end102
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then45
  %134 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17986
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %134, i32 0, i32 3, !dbg !17988
  %135 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !17988
  %brush_velocity = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %135, i32 0, i32 10, !dbg !17989
  %136 = load float*, float** %brush_velocity, align 8, !dbg !17989
  %tobool169 = icmp ne float* %136, null, !dbg !17986
  br i1 %tobool169, label %if.then170, label %if.end178, !dbg !17990

if.then170:                                       ; preds = %if.end168
  %137 = load float, float* %influence.addr, align 4, !dbg !17991
  %138 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData, align 8, !dbg !17993
  %bData171 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %138, i32 0, i32 3, !dbg !17994
  %139 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData171, align 8, !dbg !17994
  %brush_velocity172 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %139, i32 0, i32 10, !dbg !17995
  %140 = load float*, float** %brush_velocity172, align 8, !dbg !17995
  %141 = load i32, i32* %index.addr, align 4, !dbg !17996
  %mul173 = mul i32 %141, 4, !dbg !17997
  %add174 = add i32 %mul173, 3, !dbg !17998
  %idxprom175 = zext i32 %add174 to i64, !dbg !17993
  %arrayidx176 = getelementptr inbounds float, float* %140, i64 %idxprom175, !dbg !17993
  %142 = load float, float* %arrayidx176, align 4, !dbg !17999
  %mul177 = fmul float %142, %137, !dbg !17999
  store float %mul177, float* %arrayidx176, align 4, !dbg !17999
  br label %if.end178, !dbg !18000

if.end178:                                        ; preds = %if.then170, %if.end168
  ret void, !dbg !18001
}

declare dso_local void @BLI_end_threaded_malloc() #2

declare dso_local zeroext i8 @do_colorband(%struct.ColorBand*, float, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_mixPaintColors(%struct.DynamicPaintSurface* %surface, i32 %index, i32 %paintFlags, float* %paintColor, float* %paintAlpha, float* %paintWetness, float* %timescale) #0 !dbg !18002 {
entry:
  %surface.addr = alloca %struct.DynamicPaintSurface*, align 8
  %index.addr = alloca i32, align 4
  %paintFlags.addr = alloca i32, align 4
  %paintColor.addr = alloca float*, align 8
  %paintAlpha.addr = alloca float*, align 8
  %paintWetness.addr = alloca float*, align 8
  %timescale.addr = alloca float*, align 8
  %pPoint = alloca %struct.PaintPoint*, align 8
  %mix = alloca [4 x float], align 16
  %temp_alpha = alloca float, align 4
  %wetness17 = alloca float, align 4
  %a_ratio = alloca float, align 4
  %a_highest = alloca float, align 4
  %wetness37 = alloca float, align 4
  %invFact = alloca float, align 4
  store %struct.DynamicPaintSurface* %surface, %struct.DynamicPaintSurface** %surface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintSurface** %surface.addr, metadata !18005, metadata !DIExpression()), !dbg !18006
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18007, metadata !DIExpression()), !dbg !18008
  store i32 %paintFlags, i32* %paintFlags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %paintFlags.addr, metadata !18009, metadata !DIExpression()), !dbg !18010
  store float* %paintColor, float** %paintColor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %paintColor.addr, metadata !18011, metadata !DIExpression()), !dbg !18012
  store float* %paintAlpha, float** %paintAlpha.addr, align 8
  call void @llvm.dbg.declare(metadata float** %paintAlpha.addr, metadata !18013, metadata !DIExpression()), !dbg !18014
  store float* %paintWetness, float** %paintWetness.addr, align 8
  call void @llvm.dbg.declare(metadata float** %paintWetness.addr, metadata !18015, metadata !DIExpression()), !dbg !18016
  store float* %timescale, float** %timescale.addr, align 8
  call void @llvm.dbg.declare(metadata float** %timescale.addr, metadata !18017, metadata !DIExpression()), !dbg !18018
  call void @llvm.dbg.declare(metadata %struct.PaintPoint** %pPoint, metadata !18019, metadata !DIExpression()), !dbg !18020
  %0 = load %struct.DynamicPaintSurface*, %struct.DynamicPaintSurface** %surface.addr, align 8, !dbg !18021
  %data = getelementptr inbounds %struct.DynamicPaintSurface, %struct.DynamicPaintSurface* %0, i32 0, i32 3, !dbg !18022
  %1 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %data, align 8, !dbg !18022
  %type_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %1, i32 0, i32 1, !dbg !18023
  %2 = load i8*, i8** %type_data, align 8, !dbg !18023
  %3 = bitcast i8* %2 to %struct.PaintPoint*, !dbg !18024
  %4 = load i32, i32* %index.addr, align 4, !dbg !18025
  %idxprom = sext i32 %4 to i64, !dbg !18026
  %arrayidx = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %3, i64 %idxprom, !dbg !18026
  store %struct.PaintPoint* %arrayidx, %struct.PaintPoint** %pPoint, align 8, !dbg !18020
  %5 = load i32, i32* %paintFlags.addr, align 4, !dbg !18027
  %and = and i32 %5, 8, !dbg !18029
  %tobool = icmp ne i32 %and, 0, !dbg !18029
  br i1 %tobool, label %if.else36, label %if.then, !dbg !18030

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x float]* %mix, metadata !18031, metadata !DIExpression()), !dbg !18033
  call void @llvm.dbg.declare(metadata float* %temp_alpha, metadata !18034, metadata !DIExpression()), !dbg !18035
  %6 = load float*, float** %paintAlpha.addr, align 8, !dbg !18036
  %7 = load float, float* %6, align 4, !dbg !18037
  %8 = load i32, i32* %paintFlags.addr, align 4, !dbg !18038
  %and1 = and i32 %8, 4, !dbg !18039
  %tobool2 = icmp ne i32 %and1, 0, !dbg !18039
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !18040

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !18040

cond.false:                                       ; preds = %if.then
  %9 = load float*, float** %timescale.addr, align 8, !dbg !18041
  %10 = load float, float* %9, align 4, !dbg !18042
  br label %cond.end, !dbg !18040

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ 1.000000e+00, %cond.true ], [ %10, %cond.false ], !dbg !18040
  %mul = fmul float %7, %cond, !dbg !18043
  store float %mul, float* %temp_alpha, align 4, !dbg !18035
  %11 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18044
  %e_color = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %11, i32 0, i32 0, !dbg !18045
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %e_color, i64 0, i64 0, !dbg !18044
  %12 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18046
  %e_alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %12, i32 0, i32 1, !dbg !18047
  %13 = load float, float* %e_alpha, align 4, !dbg !18047
  %14 = load float*, float** %paintColor.addr, align 8, !dbg !18048
  %15 = load float, float* %temp_alpha, align 4, !dbg !18049
  %arraydecay3 = getelementptr inbounds [4 x float], [4 x float]* %mix, i64 0, i64 0, !dbg !18050
  call void @blendColors(float* %arraydecay, float %13, float* %14, float %15, float* %arraydecay3), !dbg !18051
  %16 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18052
  %e_color4 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %16, i32 0, i32 0, !dbg !18053
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %e_color4, i64 0, i64 0, !dbg !18052
  %arraydecay6 = getelementptr inbounds [4 x float], [4 x float]* %mix, i64 0, i64 0, !dbg !18054
  call void @copy_v3_v3(float* %arraydecay5, float* %arraydecay6), !dbg !18055
  %17 = load i32, i32* %paintFlags.addr, align 4, !dbg !18056
  %and7 = and i32 %17, 4, !dbg !18058
  %tobool8 = icmp ne i32 %and7, 0, !dbg !18058
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !18059

if.then9:                                         ; preds = %cond.end
  %18 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18060
  %e_alpha10 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %18, i32 0, i32 1, !dbg !18063
  %19 = load float, float* %e_alpha10, align 4, !dbg !18063
  %20 = load float*, float** %paintAlpha.addr, align 8, !dbg !18064
  %21 = load float, float* %20, align 4, !dbg !18065
  %cmp = fcmp olt float %19, %21, !dbg !18066
  br i1 %cmp, label %if.then11, label %if.end, !dbg !18067

if.then11:                                        ; preds = %if.then9
  %22 = load float*, float** %paintAlpha.addr, align 8, !dbg !18068
  %23 = load float, float* %22, align 4, !dbg !18069
  %24 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18070
  %e_alpha12 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %24, i32 0, i32 1, !dbg !18071
  store float %23, float* %e_alpha12, align 4, !dbg !18072
  br label %if.end, !dbg !18070

if.end:                                           ; preds = %if.then11, %if.then9
  %25 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18073
  %wetness = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %25, i32 0, i32 2, !dbg !18075
  %26 = load float, float* %wetness, align 4, !dbg !18075
  %27 = load float*, float** %paintWetness.addr, align 8, !dbg !18076
  %28 = load float, float* %27, align 4, !dbg !18077
  %cmp13 = fcmp olt float %26, %28, !dbg !18078
  br i1 %cmp13, label %if.then14, label %if.end16, !dbg !18079

if.then14:                                        ; preds = %if.end
  %29 = load float*, float** %paintWetness.addr, align 8, !dbg !18080
  %30 = load float, float* %29, align 4, !dbg !18081
  %31 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18082
  %wetness15 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %31, i32 0, i32 2, !dbg !18083
  store float %30, float* %wetness15, align 4, !dbg !18084
  br label %if.end16, !dbg !18082

if.end16:                                         ; preds = %if.then14, %if.end
  br label %if.end30, !dbg !18085

if.else:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata float* %wetness17, metadata !18086, metadata !DIExpression()), !dbg !18088
  %32 = load float*, float** %paintWetness.addr, align 8, !dbg !18089
  %33 = load float, float* %32, align 4, !dbg !18090
  store float %33, float* %wetness17, align 4, !dbg !18088
  %34 = load float, float* %wetness17, align 4, !dbg !18091
  %cmp18 = fcmp olt float %34, 0.000000e+00, !dbg !18091
  br i1 %cmp18, label %if.then19, label %if.else20, !dbg !18094

if.then19:                                        ; preds = %if.else
  store float 0.000000e+00, float* %wetness17, align 4, !dbg !18091
  br label %if.end24, !dbg !18091

if.else20:                                        ; preds = %if.else
  %35 = load float, float* %wetness17, align 4, !dbg !18095
  %cmp21 = fcmp ogt float %35, 1.000000e+00, !dbg !18095
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !18091

if.then22:                                        ; preds = %if.else20
  store float 1.000000e+00, float* %wetness17, align 4, !dbg !18095
  br label %if.end23, !dbg !18095

if.end23:                                         ; preds = %if.then22, %if.else20
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then19
  %arrayidx25 = getelementptr inbounds [4 x float], [4 x float]* %mix, i64 0, i64 3, !dbg !18097
  %36 = load float, float* %arrayidx25, align 4, !dbg !18097
  %37 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18098
  %e_alpha26 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %37, i32 0, i32 1, !dbg !18099
  store float %36, float* %e_alpha26, align 4, !dbg !18100
  %38 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18101
  %wetness27 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %38, i32 0, i32 2, !dbg !18102
  %39 = load float, float* %wetness27, align 4, !dbg !18102
  %40 = load float, float* %wetness17, align 4, !dbg !18103
  %sub = fsub float 1.000000e+00, %40, !dbg !18104
  %mul28 = fmul float %39, %sub, !dbg !18105
  %41 = load float, float* %wetness17, align 4, !dbg !18106
  %add = fadd float %mul28, %41, !dbg !18107
  %42 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18108
  %wetness29 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %42, i32 0, i32 2, !dbg !18109
  store float %add, float* %wetness29, align 4, !dbg !18110
  br label %if.end30

if.end30:                                         ; preds = %if.end24, %if.end16
  %43 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18111
  %wetness31 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %43, i32 0, i32 2, !dbg !18113
  %44 = load float, float* %wetness31, align 4, !dbg !18113
  %cmp32 = fcmp olt float %44, 0x3F50624DE0000000, !dbg !18114
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !18115

if.then33:                                        ; preds = %if.end30
  %45 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18116
  %wetness34 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %45, i32 0, i32 2, !dbg !18117
  store float 0x3F50624DE0000000, float* %wetness34, align 4, !dbg !18118
  br label %if.end35, !dbg !18116

if.end35:                                         ; preds = %if.then33, %if.end30
  %46 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18119
  %state = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %46, i32 0, i32 3, !dbg !18120
  store i16 2, i16* %state, align 4, !dbg !18121
  br label %if.end83, !dbg !18122

if.else36:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %a_ratio, metadata !18123, metadata !DIExpression()), !dbg !18125
  call void @llvm.dbg.declare(metadata float* %a_highest, metadata !18126, metadata !DIExpression()), !dbg !18127
  call void @llvm.dbg.declare(metadata float* %wetness37, metadata !18128, metadata !DIExpression()), !dbg !18129
  call void @llvm.dbg.declare(metadata float* %invFact, metadata !18130, metadata !DIExpression()), !dbg !18131
  %47 = load float*, float** %paintAlpha.addr, align 8, !dbg !18132
  %48 = load float, float* %47, align 4, !dbg !18133
  %sub38 = fsub float 1.000000e+00, %48, !dbg !18134
  store float %sub38, float* %invFact, align 4, !dbg !18131
  %49 = load i32, i32* %paintFlags.addr, align 4, !dbg !18135
  %and39 = and i32 %49, 4, !dbg !18137
  %tobool40 = icmp ne i32 %and39, 0, !dbg !18137
  br i1 %tobool40, label %if.then41, label %if.else57, !dbg !18138

if.then41:                                        ; preds = %if.else36
  %50 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18139
  %e_alpha42 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %50, i32 0, i32 1, !dbg !18141
  %51 = load float, float* %e_alpha42, align 4, !dbg !18141
  %52 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18142
  %alpha = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %52, i32 0, i32 5, !dbg !18143
  %53 = load float, float* %alpha, align 4, !dbg !18143
  %cmp43 = fcmp ogt float %51, %53, !dbg !18144
  br i1 %cmp43, label %cond.true44, label %cond.false46, !dbg !18145

cond.true44:                                      ; preds = %if.then41
  %54 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18146
  %e_alpha45 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %54, i32 0, i32 1, !dbg !18147
  %55 = load float, float* %e_alpha45, align 4, !dbg !18147
  br label %cond.end48, !dbg !18145

cond.false46:                                     ; preds = %if.then41
  %56 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18148
  %alpha47 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %56, i32 0, i32 5, !dbg !18149
  %57 = load float, float* %alpha47, align 4, !dbg !18149
  br label %cond.end48, !dbg !18145

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi float [ %55, %cond.true44 ], [ %57, %cond.false46 ], !dbg !18145
  store float %cond49, float* %a_highest, align 4, !dbg !18150
  %58 = load float, float* %a_highest, align 4, !dbg !18151
  %59 = load float, float* %invFact, align 4, !dbg !18153
  %cmp50 = fcmp ogt float %58, %59, !dbg !18154
  br i1 %cmp50, label %if.then51, label %if.end56, !dbg !18155

if.then51:                                        ; preds = %cond.end48
  %60 = load float, float* %invFact, align 4, !dbg !18156
  %61 = load float, float* %a_highest, align 4, !dbg !18158
  %div = fdiv float %60, %61, !dbg !18159
  store float %div, float* %a_ratio, align 4, !dbg !18160
  %62 = load float, float* %a_ratio, align 4, !dbg !18161
  %63 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18162
  %e_alpha52 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %63, i32 0, i32 1, !dbg !18163
  %64 = load float, float* %e_alpha52, align 4, !dbg !18164
  %mul53 = fmul float %64, %62, !dbg !18164
  store float %mul53, float* %e_alpha52, align 4, !dbg !18164
  %65 = load float, float* %a_ratio, align 4, !dbg !18165
  %66 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18166
  %alpha54 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %66, i32 0, i32 5, !dbg !18167
  %67 = load float, float* %alpha54, align 4, !dbg !18168
  %mul55 = fmul float %67, %65, !dbg !18168
  store float %mul55, float* %alpha54, align 4, !dbg !18168
  br label %if.end56, !dbg !18169

if.end56:                                         ; preds = %if.then51, %cond.end48
  br label %if.end74, !dbg !18170

if.else57:                                        ; preds = %if.else36
  %68 = load float*, float** %paintAlpha.addr, align 8, !dbg !18171
  %69 = load float, float* %68, align 4, !dbg !18173
  %70 = load float*, float** %timescale.addr, align 8, !dbg !18174
  %71 = load float, float* %70, align 4, !dbg !18175
  %mul58 = fmul float %69, %71, !dbg !18176
  %72 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18177
  %e_alpha59 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %72, i32 0, i32 1, !dbg !18178
  %73 = load float, float* %e_alpha59, align 4, !dbg !18179
  %sub60 = fsub float %73, %mul58, !dbg !18179
  store float %sub60, float* %e_alpha59, align 4, !dbg !18179
  %74 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18180
  %e_alpha61 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %74, i32 0, i32 1, !dbg !18182
  %75 = load float, float* %e_alpha61, align 4, !dbg !18182
  %cmp62 = fcmp olt float %75, 0.000000e+00, !dbg !18183
  br i1 %cmp62, label %if.then63, label %if.end65, !dbg !18184

if.then63:                                        ; preds = %if.else57
  %76 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18185
  %e_alpha64 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %76, i32 0, i32 1, !dbg !18186
  store float 0.000000e+00, float* %e_alpha64, align 4, !dbg !18187
  br label %if.end65, !dbg !18185

if.end65:                                         ; preds = %if.then63, %if.else57
  %77 = load float*, float** %paintAlpha.addr, align 8, !dbg !18188
  %78 = load float, float* %77, align 4, !dbg !18189
  %79 = load float*, float** %timescale.addr, align 8, !dbg !18190
  %80 = load float, float* %79, align 4, !dbg !18191
  %mul66 = fmul float %78, %80, !dbg !18192
  %81 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18193
  %alpha67 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %81, i32 0, i32 5, !dbg !18194
  %82 = load float, float* %alpha67, align 4, !dbg !18195
  %sub68 = fsub float %82, %mul66, !dbg !18195
  store float %sub68, float* %alpha67, align 4, !dbg !18195
  %83 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18196
  %alpha69 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %83, i32 0, i32 5, !dbg !18198
  %84 = load float, float* %alpha69, align 4, !dbg !18198
  %cmp70 = fcmp olt float %84, 0.000000e+00, !dbg !18199
  br i1 %cmp70, label %if.then71, label %if.end73, !dbg !18200

if.then71:                                        ; preds = %if.end65
  %85 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18201
  %alpha72 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %85, i32 0, i32 5, !dbg !18202
  store float 0.000000e+00, float* %alpha72, align 4, !dbg !18203
  br label %if.end73, !dbg !18201

if.end73:                                         ; preds = %if.then71, %if.end65
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end56
  %86 = load float*, float** %paintWetness.addr, align 8, !dbg !18204
  %87 = load float, float* %86, align 4, !dbg !18205
  %sub75 = fsub float 1.000000e+00, %87, !dbg !18206
  %88 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18207
  %e_alpha76 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %88, i32 0, i32 1, !dbg !18208
  %89 = load float, float* %e_alpha76, align 4, !dbg !18208
  %mul77 = fmul float %sub75, %89, !dbg !18209
  store float %mul77, float* %wetness37, align 4, !dbg !18210
  %90 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18211
  %wetness78 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %90, i32 0, i32 2, !dbg !18213
  %91 = load float, float* %wetness78, align 4, !dbg !18213
  %92 = load float, float* %wetness37, align 4, !dbg !18214
  %cmp79 = fcmp ogt float %91, %92, !dbg !18215
  br i1 %cmp79, label %if.then80, label %if.end82, !dbg !18216

if.then80:                                        ; preds = %if.end74
  %93 = load float, float* %wetness37, align 4, !dbg !18217
  %94 = load %struct.PaintPoint*, %struct.PaintPoint** %pPoint, align 8, !dbg !18218
  %wetness81 = getelementptr inbounds %struct.PaintPoint, %struct.PaintPoint* %94, i32 0, i32 2, !dbg !18219
  store float %93, float* %wetness81, align 4, !dbg !18220
  br label %if.end82, !dbg !18218

if.end82:                                         ; preds = %if.then80, %if.end74
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end35
  ret void, !dbg !18221
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_mixWaveHeight(%struct.PaintWavePoint* %wPoint, %struct.DynamicPaintBrushSettings* %brush, float %isect_height) #0 !dbg !18222 {
entry:
  %wPoint.addr = alloca %struct.PaintWavePoint*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %isect_height.addr = alloca float, align 4
  %isect_change = alloca float, align 4
  %hit = alloca i32, align 4
  store %struct.PaintWavePoint* %wPoint, %struct.PaintWavePoint** %wPoint.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintWavePoint** %wPoint.addr, metadata !18225, metadata !DIExpression()), !dbg !18226
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !18227, metadata !DIExpression()), !dbg !18228
  store float %isect_height, float* %isect_height.addr, align 4
  call void @llvm.dbg.declare(metadata float* %isect_height.addr, metadata !18229, metadata !DIExpression()), !dbg !18230
  call void @llvm.dbg.declare(metadata float* %isect_change, metadata !18231, metadata !DIExpression()), !dbg !18232
  %0 = load float, float* %isect_height.addr, align 4, !dbg !18233
  %1 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18234
  %brush_isect = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %1, i32 0, i32 2, !dbg !18235
  %2 = load float, float* %brush_isect, align 4, !dbg !18235
  %sub = fsub float %0, %2, !dbg !18236
  store float %sub, float* %isect_change, align 4, !dbg !18232
  call void @llvm.dbg.declare(metadata i32* %hit, metadata !18237, metadata !DIExpression()), !dbg !18238
  store i32 0, i32* %hit, align 4, !dbg !18238
  %3 = load float, float* %isect_height.addr, align 4, !dbg !18239
  %4 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18240
  %brush_isect1 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %4, i32 0, i32 2, !dbg !18241
  store float %3, float* %brush_isect1, align 4, !dbg !18242
  %5 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18243
  %state = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %5, i32 0, i32 3, !dbg !18244
  store i16 -1, i16* %state, align 4, !dbg !18245
  %6 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18246
  %wave_factor = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %6, i32 0, i32 20, !dbg !18247
  %7 = load float, float* %wave_factor, align 8, !dbg !18247
  %8 = load float, float* %isect_height.addr, align 4, !dbg !18248
  %mul = fmul float %8, %7, !dbg !18248
  store float %mul, float* %isect_height.addr, align 4, !dbg !18248
  %9 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18249
  %wave_factor2 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %9, i32 0, i32 20, !dbg !18251
  %10 = load float, float* %wave_factor2, align 8, !dbg !18251
  %cmp = fcmp ogt float %10, 0.000000e+00, !dbg !18252
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !18253

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18254
  %height = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %11, i32 0, i32 0, !dbg !18255
  %12 = load float, float* %height, align 4, !dbg !18255
  %13 = load float, float* %isect_height.addr, align 4, !dbg !18256
  %cmp3 = fcmp ogt float %12, %13, !dbg !18257
  br i1 %cmp3, label %if.then, label %if.else, !dbg !18258

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %hit, align 4, !dbg !18259
  br label %if.end10, !dbg !18260

if.else:                                          ; preds = %land.lhs.true, %entry
  %14 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18261
  %wave_factor4 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %14, i32 0, i32 20, !dbg !18263
  %15 = load float, float* %wave_factor4, align 8, !dbg !18263
  %cmp5 = fcmp olt float %15, 0.000000e+00, !dbg !18264
  br i1 %cmp5, label %land.lhs.true6, label %if.end, !dbg !18265

land.lhs.true6:                                   ; preds = %if.else
  %16 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18266
  %height7 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %16, i32 0, i32 0, !dbg !18267
  %17 = load float, float* %height7, align 4, !dbg !18267
  %18 = load float, float* %isect_height.addr, align 4, !dbg !18268
  %cmp8 = fcmp olt float %17, %18, !dbg !18269
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !18270

if.then9:                                         ; preds = %land.lhs.true6
  store i32 1, i32* %hit, align 4, !dbg !18271
  br label %if.end, !dbg !18272

if.end:                                           ; preds = %if.then9, %land.lhs.true6, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  %19 = load i32, i32* %hit, align 4, !dbg !18273
  %tobool = icmp ne i32 %19, 0, !dbg !18273
  br i1 %tobool, label %if.then11, label %if.end48, !dbg !18275

if.then11:                                        ; preds = %if.end10
  %20 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18276
  %wave_type = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %20, i32 0, i32 17, !dbg !18279
  %21 = load i16, i16* %wave_type, align 2, !dbg !18279
  %conv = sext i16 %21 to i32, !dbg !18276
  %cmp12 = icmp eq i32 %conv, 0, !dbg !18280
  br i1 %cmp12, label %if.then14, label %if.else17, !dbg !18281

if.then14:                                        ; preds = %if.then11
  %22 = load float, float* %isect_height.addr, align 4, !dbg !18282
  %23 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18284
  %height15 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %23, i32 0, i32 0, !dbg !18285
  store float %22, float* %height15, align 4, !dbg !18286
  %24 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18287
  %state16 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %24, i32 0, i32 3, !dbg !18288
  store i16 1, i16* %state16, align 4, !dbg !18289
  %25 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18290
  %velocity = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %25, i32 0, i32 1, !dbg !18291
  store float 0.000000e+00, float* %velocity, align 4, !dbg !18292
  br label %if.end47, !dbg !18293

if.else17:                                        ; preds = %if.then11
  %26 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18294
  %wave_type18 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %26, i32 0, i32 17, !dbg !18296
  %27 = load i16, i16* %wave_type18, align 2, !dbg !18296
  %conv19 = sext i16 %27 to i32, !dbg !18294
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !18297
  br i1 %cmp20, label %if.then22, label %if.else24, !dbg !18298

if.then22:                                        ; preds = %if.else17
  %28 = load float, float* %isect_height.addr, align 4, !dbg !18299
  %29 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18300
  %velocity23 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %29, i32 0, i32 1, !dbg !18301
  store float %28, float* %velocity23, align 4, !dbg !18302
  br label %if.end46, !dbg !18300

if.else24:                                        ; preds = %if.else17
  %30 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18303
  %wave_type25 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %30, i32 0, i32 17, !dbg !18305
  %31 = load i16, i16* %wave_type25, align 2, !dbg !18305
  %conv26 = sext i16 %31 to i32, !dbg !18303
  %cmp27 = icmp eq i32 %conv26, 2, !dbg !18306
  br i1 %cmp27, label %if.then29, label %if.else31, !dbg !18307

if.then29:                                        ; preds = %if.else24
  %32 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18308
  %state30 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %32, i32 0, i32 3, !dbg !18309
  store i16 2, i16* %state30, align 4, !dbg !18310
  br label %if.end45, !dbg !18308

if.else31:                                        ; preds = %if.else24
  %33 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18311
  %wave_type32 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %33, i32 0, i32 17, !dbg !18313
  %34 = load i16, i16* %wave_type32, align 2, !dbg !18313
  %conv33 = sext i16 %34 to i32, !dbg !18311
  %cmp34 = icmp eq i32 %conv33, 3, !dbg !18314
  br i1 %cmp34, label %if.then36, label %if.end44, !dbg !18315

if.then36:                                        ; preds = %if.else31
  %35 = load float, float* %isect_change, align 4, !dbg !18316
  %cmp37 = fcmp olt float %35, 0.000000e+00, !dbg !18319
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !18320

if.then39:                                        ; preds = %if.then36
  %36 = load float, float* %isect_change, align 4, !dbg !18321
  %37 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18322
  %wave_factor40 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %37, i32 0, i32 20, !dbg !18323
  %38 = load float, float* %wave_factor40, align 8, !dbg !18323
  %mul41 = fmul float %36, %38, !dbg !18324
  %39 = load %struct.PaintWavePoint*, %struct.PaintWavePoint** %wPoint.addr, align 8, !dbg !18325
  %height42 = getelementptr inbounds %struct.PaintWavePoint, %struct.PaintWavePoint* %39, i32 0, i32 0, !dbg !18326
  %40 = load float, float* %height42, align 4, !dbg !18327
  %add = fadd float %40, %mul41, !dbg !18327
  store float %add, float* %height42, align 4, !dbg !18327
  br label %if.end43, !dbg !18325

if.end43:                                         ; preds = %if.then39, %if.then36
  br label %if.end44, !dbg !18328

if.end44:                                         ; preds = %if.end43, %if.else31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then29
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then22
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.then14
  br label %if.end48, !dbg !18329

if.end48:                                         ; preds = %if.end47, %if.end10
  ret void, !dbg !18330
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_brushObjectCalculateVelocity(%struct.Scene* %scene, %struct.Object* %ob, %struct.Vec3f* %brushVel, float %timescale) #0 !dbg !18331 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brushVel.addr = alloca %struct.Vec3f*, align 8
  %timescale.addr = alloca float, align 4
  %prev_obmat = alloca [4 x [4 x float]], align 16
  %cur_loc = alloca [3 x float], align 4
  %prev_loc = alloca [3 x float], align 4
  %cur_sfra = alloca float, align 4
  %cur_fra = alloca i32, align 4
  %prev_sfra = alloca float, align 4
  %prev_fra = alloca i32, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !18334, metadata !DIExpression()), !dbg !18335
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !18336, metadata !DIExpression()), !dbg !18337
  store %struct.Vec3f* %brushVel, %struct.Vec3f** %brushVel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vec3f** %brushVel.addr, metadata !18338, metadata !DIExpression()), !dbg !18339
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !18340, metadata !DIExpression()), !dbg !18341
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %prev_obmat, metadata !18342, metadata !DIExpression()), !dbg !18343
  call void @llvm.dbg.declare(metadata [3 x float]* %cur_loc, metadata !18344, metadata !DIExpression()), !dbg !18345
  %0 = bitcast [3 x float]* %cur_loc to i8*, !dbg !18345
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !18345
  call void @llvm.dbg.declare(metadata [3 x float]* %prev_loc, metadata !18346, metadata !DIExpression()), !dbg !18347
  %1 = bitcast [3 x float]* %prev_loc to i8*, !dbg !18347
  call void @llvm.memset.p0i8.i64(i8* align 4 %1, i8 0, i64 12, i1 false), !dbg !18347
  call void @llvm.dbg.declare(metadata float* %cur_sfra, metadata !18348, metadata !DIExpression()), !dbg !18349
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18350
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !18351
  %subframe = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 8, !dbg !18352
  %3 = load float, float* %subframe, align 4, !dbg !18352
  store float %3, float* %cur_sfra, align 4, !dbg !18349
  call void @llvm.dbg.declare(metadata i32* %cur_fra, metadata !18353, metadata !DIExpression()), !dbg !18354
  %4 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18355
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %4, i32 0, i32 22, !dbg !18356
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 5, !dbg !18357
  %5 = load i32, i32* %cfra, align 8, !dbg !18357
  store i32 %5, i32* %cur_fra, align 4, !dbg !18354
  call void @llvm.dbg.declare(metadata float* %prev_sfra, metadata !18358, metadata !DIExpression()), !dbg !18359
  %6 = load float, float* %cur_sfra, align 4, !dbg !18360
  %7 = load float, float* %timescale.addr, align 4, !dbg !18361
  %sub = fsub float %6, %7, !dbg !18362
  store float %sub, float* %prev_sfra, align 4, !dbg !18359
  call void @llvm.dbg.declare(metadata i32* %prev_fra, metadata !18363, metadata !DIExpression()), !dbg !18364
  %8 = load i32, i32* %cur_fra, align 4, !dbg !18365
  store i32 %8, i32* %prev_fra, align 4, !dbg !18364
  %9 = load float, float* %prev_sfra, align 4, !dbg !18366
  %cmp = fcmp olt float %9, 0.000000e+00, !dbg !18368
  br i1 %cmp, label %if.then, label %if.end, !dbg !18369

if.then:                                          ; preds = %entry
  %10 = load float, float* %prev_sfra, align 4, !dbg !18370
  %add = fadd float %10, 1.000000e+00, !dbg !18370
  store float %add, float* %prev_sfra, align 4, !dbg !18370
  %11 = load i32, i32* %cur_fra, align 4, !dbg !18372
  %sub2 = sub nsw i32 %11, 1, !dbg !18373
  store i32 %sub2, i32* %prev_fra, align 4, !dbg !18374
  br label %if.end, !dbg !18375

if.end:                                           ; preds = %if.then, %entry
  %12 = load i32, i32* %prev_fra, align 4, !dbg !18376
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18377
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !18378
  %cfra4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 5, !dbg !18379
  store i32 %12, i32* %cfra4, align 8, !dbg !18380
  %14 = load float, float* %prev_sfra, align 4, !dbg !18381
  %15 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18382
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %15, i32 0, i32 22, !dbg !18383
  %subframe6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 8, !dbg !18384
  store float %14, float* %subframe6, align 4, !dbg !18385
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18386
  %17 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18387
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18388
  %call = call float @BKE_scene_frame_get(%struct.Scene* %18), !dbg !18389
  %call7 = call i32 @subframe_updateObject(%struct.Scene* %16, %struct.Object* %17, i32 0, i32 5, float %call), !dbg !18390
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 0, !dbg !18391
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18392
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 47, !dbg !18393
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !18392
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay8), !dbg !18394
  %20 = load i32, i32* %cur_fra, align 4, !dbg !18395
  %21 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18396
  %r9 = getelementptr inbounds %struct.Scene, %struct.Scene* %21, i32 0, i32 22, !dbg !18397
  %cfra10 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r9, i32 0, i32 5, !dbg !18398
  store i32 %20, i32* %cfra10, align 8, !dbg !18399
  %22 = load float, float* %cur_sfra, align 4, !dbg !18400
  %23 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18401
  %r11 = getelementptr inbounds %struct.Scene, %struct.Scene* %23, i32 0, i32 22, !dbg !18402
  %subframe12 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r11, i32 0, i32 8, !dbg !18403
  store float %22, float* %subframe12, align 4, !dbg !18404
  %24 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18405
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18406
  %26 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18407
  %call13 = call float @BKE_scene_frame_get(%struct.Scene* %26), !dbg !18408
  %call14 = call i32 @subframe_updateObject(%struct.Scene* %24, %struct.Object* %25, i32 0, i32 5, float %call13), !dbg !18409
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 0, !dbg !18410
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %prev_loc, i64 0, i64 0, !dbg !18411
  call void @mul_m4_v3([4 x float]* %arraydecay15, float* %arraydecay16), !dbg !18412
  %27 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18413
  %obmat17 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 47, !dbg !18414
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat17, i64 0, i64 0, !dbg !18413
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %cur_loc, i64 0, i64 0, !dbg !18415
  call void @mul_m4_v3([4 x float]* %arraydecay18, float* %arraydecay19), !dbg !18416
  %28 = load %struct.Vec3f*, %struct.Vec3f** %brushVel.addr, align 8, !dbg !18417
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %28, i32 0, i32 0, !dbg !18418
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !18417
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %cur_loc, i64 0, i64 0, !dbg !18419
  %arraydecay22 = getelementptr inbounds [3 x float], [3 x float]* %prev_loc, i64 0, i64 0, !dbg !18420
  call void @sub_v3_v3v3(float* %arraydecay20, float* %arraydecay21, float* %arraydecay22), !dbg !18421
  %29 = load %struct.Vec3f*, %struct.Vec3f** %brushVel.addr, align 8, !dbg !18422
  %v23 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %29, i32 0, i32 0, !dbg !18423
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %v23, i64 0, i64 0, !dbg !18422
  %30 = load float, float* %timescale.addr, align 4, !dbg !18424
  %div = fdiv float 1.000000e+00, %30, !dbg !18425
  call void @mul_v3_fl(float* %arraydecay24, float %div), !dbg !18426
  ret void, !dbg !18427
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !18428 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18429, metadata !DIExpression()), !dbg !18430
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !18431, metadata !DIExpression()), !dbg !18432
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !18433, metadata !DIExpression()), !dbg !18434
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !18435
  %0 = load float*, float** %b.addr, align 8, !dbg !18436
  %1 = load float*, float** %a.addr, align 8, !dbg !18437
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !18438
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !18439
  %call = call float @len_v3(float* %arraydecay1), !dbg !18440
  ret float %call, !dbg !18441
}

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_doMaterialTex(%struct.BrushMaterials* %bMats, float* %color, float* %alpha, %struct.Object* %brushOb, float* %volume_co, float* %surface_co, i32 %faceIndex, i16 signext %isQuad, %struct.DerivedMesh* %orcoDm) #0 !dbg !18442 {
entry:
  %bMats.addr = alloca %struct.BrushMaterials*, align 8
  %color.addr = alloca float*, align 8
  %alpha.addr = alloca float*, align 8
  %brushOb.addr = alloca %struct.Object*, align 8
  %volume_co.addr = alloca float*, align 8
  %surface_co.addr = alloca float*, align 8
  %faceIndex.addr = alloca i32, align 4
  %isQuad.addr = alloca i16, align 2
  %orcoDm.addr = alloca %struct.DerivedMesh*, align 8
  %mat = alloca %struct.Material*, align 8
  %mface = alloca %struct.MFace*, align 8
  %mat_nr = alloca i32, align 4
  store %struct.BrushMaterials* %bMats, %struct.BrushMaterials** %bMats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BrushMaterials** %bMats.addr, metadata !18445, metadata !DIExpression()), !dbg !18446
  store float* %color, float** %color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %color.addr, metadata !18447, metadata !DIExpression()), !dbg !18448
  store float* %alpha, float** %alpha.addr, align 8
  call void @llvm.dbg.declare(metadata float** %alpha.addr, metadata !18449, metadata !DIExpression()), !dbg !18450
  store %struct.Object* %brushOb, %struct.Object** %brushOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %brushOb.addr, metadata !18451, metadata !DIExpression()), !dbg !18452
  store float* %volume_co, float** %volume_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %volume_co.addr, metadata !18453, metadata !DIExpression()), !dbg !18454
  store float* %surface_co, float** %surface_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %surface_co.addr, metadata !18455, metadata !DIExpression()), !dbg !18456
  store i32 %faceIndex, i32* %faceIndex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %faceIndex.addr, metadata !18457, metadata !DIExpression()), !dbg !18458
  store i16 %isQuad, i16* %isQuad.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %isQuad.addr, metadata !18459, metadata !DIExpression()), !dbg !18460
  store %struct.DerivedMesh* %orcoDm, %struct.DerivedMesh** %orcoDm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %orcoDm.addr, metadata !18461, metadata !DIExpression()), !dbg !18462
  call void @llvm.dbg.declare(metadata %struct.Material** %mat, metadata !18463, metadata !DIExpression()), !dbg !18464
  %0 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !18465
  %mat1 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %0, i32 0, i32 0, !dbg !18466
  %1 = load %struct.Material*, %struct.Material** %mat1, align 8, !dbg !18466
  store %struct.Material* %1, %struct.Material** %mat, align 8, !dbg !18464
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface, metadata !18467, metadata !DIExpression()), !dbg !18468
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !18469
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %2, i32 0, i32 33, !dbg !18470
  %3 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !18470
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !18471
  %call = call %struct.MFace* %3(%struct.DerivedMesh* %4), !dbg !18469
  store %struct.MFace* %call, %struct.MFace** %mface, align 8, !dbg !18468
  %5 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !18472
  %cmp = icmp eq %struct.Material* %5, null, !dbg !18474
  br i1 %cmp, label %if.then, label %if.end17, !dbg !18475

if.then:                                          ; preds = %entry
  %6 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !18476
  %ob_mats = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %6, i32 0, i32 1, !dbg !18479
  %7 = load %struct.Material**, %struct.Material*** %ob_mats, align 8, !dbg !18479
  %tobool = icmp ne %struct.Material** %7, null, !dbg !18476
  br i1 %tobool, label %if.then2, label %if.else, !dbg !18480

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %mat_nr, metadata !18481, metadata !DIExpression()), !dbg !18483
  %8 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !18484
  %9 = load i32, i32* %faceIndex.addr, align 4, !dbg !18485
  %idxprom = sext i32 %9 to i64, !dbg !18484
  %arrayidx = getelementptr inbounds %struct.MFace, %struct.MFace* %8, i64 %idxprom, !dbg !18484
  %mat_nr3 = getelementptr inbounds %struct.MFace, %struct.MFace* %arrayidx, i32 0, i32 4, !dbg !18486
  %10 = load i16, i16* %mat_nr3, align 4, !dbg !18486
  %conv = sext i16 %10 to i32, !dbg !18484
  store i32 %conv, i32* %mat_nr, align 4, !dbg !18483
  %11 = load i32, i32* %mat_nr, align 4, !dbg !18487
  %12 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !18489
  %call4 = call i16* @give_totcolp(%struct.Object* %12), !dbg !18490
  %13 = load i16, i16* %call4, align 2, !dbg !18491
  %conv5 = sext i16 %13 to i32, !dbg !18492
  %cmp6 = icmp sge i32 %11, %conv5, !dbg !18493
  br i1 %cmp6, label %if.then8, label %if.end, !dbg !18494

if.then8:                                         ; preds = %if.then2
  br label %return, !dbg !18495

if.end:                                           ; preds = %if.then2
  %14 = load %struct.BrushMaterials*, %struct.BrushMaterials** %bMats.addr, align 8, !dbg !18496
  %ob_mats9 = getelementptr inbounds %struct.BrushMaterials, %struct.BrushMaterials* %14, i32 0, i32 1, !dbg !18497
  %15 = load %struct.Material**, %struct.Material*** %ob_mats9, align 8, !dbg !18497
  %16 = load i32, i32* %mat_nr, align 4, !dbg !18498
  %idxprom10 = sext i32 %16 to i64, !dbg !18496
  %arrayidx11 = getelementptr inbounds %struct.Material*, %struct.Material** %15, i64 %idxprom10, !dbg !18496
  %17 = load %struct.Material*, %struct.Material** %arrayidx11, align 8, !dbg !18496
  store %struct.Material* %17, %struct.Material** %mat, align 8, !dbg !18499
  %18 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !18500
  %cmp12 = icmp eq %struct.Material* %18, null, !dbg !18502
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !18503

if.then14:                                        ; preds = %if.end
  br label %return, !dbg !18504

if.end15:                                         ; preds = %if.end
  br label %if.end16, !dbg !18505

if.else:                                          ; preds = %if.then
  br label %return, !dbg !18506

if.end16:                                         ; preds = %if.end15
  br label %if.end17, !dbg !18508

if.end17:                                         ; preds = %if.end16, %entry
  %19 = load %struct.Material*, %struct.Material** %mat, align 8, !dbg !18509
  %20 = load float*, float** %color.addr, align 8, !dbg !18510
  %21 = load float*, float** %alpha.addr, align 8, !dbg !18511
  %22 = load float*, float** %volume_co.addr, align 8, !dbg !18512
  %23 = load float*, float** %surface_co.addr, align 8, !dbg !18513
  %24 = load i32, i32* %faceIndex.addr, align 4, !dbg !18514
  %25 = load i16, i16* %isQuad.addr, align 2, !dbg !18515
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %orcoDm.addr, align 8, !dbg !18516
  %27 = load %struct.Object*, %struct.Object** %brushOb.addr, align 8, !dbg !18517
  call void @RE_sample_material_color(%struct.Material* %19, float* %20, float* %21, float* %22, float* %23, i32 %24, i16 signext %25, %struct.DerivedMesh* %26, %struct.Object* %27), !dbg !18518
  br label %return, !dbg !18519

return:                                           ; preds = %if.end17, %if.else, %if.then14, %if.then8
  ret void, !dbg !18519
}

declare dso_local void @RE_sample_material_color(%struct.Material*, float*, float*, float*, float*, i32, i16 signext, %struct.DerivedMesh*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dynamicPaint_brushMeshCalculateVelocity(%struct.Scene* %scene, %struct.Object* %ob, %struct.DynamicPaintBrushSettings* %brush, %struct.Vec3f** %brushVel, float %timescale) #0 !dbg !18520 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %brushVel.addr = alloca %struct.Vec3f**, align 8
  %timescale.addr = alloca float, align 4
  %i = alloca i32, align 4
  %prev_obmat = alloca [4 x [4 x float]], align 16
  %dm_p = alloca %struct.DerivedMesh*, align 8
  %dm_c = alloca %struct.DerivedMesh*, align 8
  %mvert_p = alloca %struct.MVert*, align 8
  %mvert_c = alloca %struct.MVert*, align 8
  %numOfVerts_p = alloca i32, align 4
  %numOfVerts_c = alloca i32, align 4
  %cur_sfra = alloca float, align 4
  %cur_fra = alloca i32, align 4
  %prev_sfra = alloca float, align 4
  %prev_fra = alloca i32, align 4
  %p1 = alloca [3 x float], align 4
  %p2 = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !18524, metadata !DIExpression()), !dbg !18525
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !18526, metadata !DIExpression()), !dbg !18527
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !18528, metadata !DIExpression()), !dbg !18529
  store %struct.Vec3f** %brushVel, %struct.Vec3f*** %brushVel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Vec3f*** %brushVel.addr, metadata !18530, metadata !DIExpression()), !dbg !18531
  store float %timescale, float* %timescale.addr, align 4
  call void @llvm.dbg.declare(metadata float* %timescale.addr, metadata !18532, metadata !DIExpression()), !dbg !18533
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18534, metadata !DIExpression()), !dbg !18535
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %prev_obmat, metadata !18536, metadata !DIExpression()), !dbg !18537
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm_p, metadata !18538, metadata !DIExpression()), !dbg !18539
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm_c, metadata !18540, metadata !DIExpression()), !dbg !18541
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert_p, metadata !18542, metadata !DIExpression()), !dbg !18543
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert_c, metadata !18544, metadata !DIExpression()), !dbg !18545
  call void @llvm.dbg.declare(metadata i32* %numOfVerts_p, metadata !18546, metadata !DIExpression()), !dbg !18547
  call void @llvm.dbg.declare(metadata i32* %numOfVerts_c, metadata !18548, metadata !DIExpression()), !dbg !18549
  call void @llvm.dbg.declare(metadata float* %cur_sfra, metadata !18550, metadata !DIExpression()), !dbg !18551
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18552
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %0, i32 0, i32 22, !dbg !18553
  %subframe = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 8, !dbg !18554
  %1 = load float, float* %subframe, align 4, !dbg !18554
  store float %1, float* %cur_sfra, align 4, !dbg !18551
  call void @llvm.dbg.declare(metadata i32* %cur_fra, metadata !18555, metadata !DIExpression()), !dbg !18556
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18557
  %r1 = getelementptr inbounds %struct.Scene, %struct.Scene* %2, i32 0, i32 22, !dbg !18558
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r1, i32 0, i32 5, !dbg !18559
  %3 = load i32, i32* %cfra, align 8, !dbg !18559
  store i32 %3, i32* %cur_fra, align 4, !dbg !18556
  call void @llvm.dbg.declare(metadata float* %prev_sfra, metadata !18560, metadata !DIExpression()), !dbg !18561
  %4 = load float, float* %cur_sfra, align 4, !dbg !18562
  %5 = load float, float* %timescale.addr, align 4, !dbg !18563
  %sub = fsub float %4, %5, !dbg !18564
  store float %sub, float* %prev_sfra, align 4, !dbg !18561
  call void @llvm.dbg.declare(metadata i32* %prev_fra, metadata !18565, metadata !DIExpression()), !dbg !18566
  %6 = load i32, i32* %cur_fra, align 4, !dbg !18567
  store i32 %6, i32* %prev_fra, align 4, !dbg !18566
  %7 = load float, float* %prev_sfra, align 4, !dbg !18568
  %cmp = fcmp olt float %7, 0.000000e+00, !dbg !18570
  br i1 %cmp, label %if.then, label %if.end, !dbg !18571

if.then:                                          ; preds = %entry
  %8 = load float, float* %prev_sfra, align 4, !dbg !18572
  %add = fadd float %8, 1.000000e+00, !dbg !18572
  store float %add, float* %prev_sfra, align 4, !dbg !18572
  %9 = load i32, i32* %cur_fra, align 4, !dbg !18574
  %sub2 = sub nsw i32 %9, 1, !dbg !18575
  store i32 %sub2, i32* %prev_fra, align 4, !dbg !18576
  br label %if.end, !dbg !18577

if.end:                                           ; preds = %if.then, %entry
  %10 = load i32, i32* %prev_fra, align 4, !dbg !18578
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18579
  %r3 = getelementptr inbounds %struct.Scene, %struct.Scene* %11, i32 0, i32 22, !dbg !18580
  %cfra4 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r3, i32 0, i32 5, !dbg !18581
  store i32 %10, i32* %cfra4, align 8, !dbg !18582
  %12 = load float, float* %prev_sfra, align 4, !dbg !18583
  %13 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18584
  %r5 = getelementptr inbounds %struct.Scene, %struct.Scene* %13, i32 0, i32 22, !dbg !18585
  %subframe6 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r5, i32 0, i32 8, !dbg !18586
  store float %12, float* %subframe6, align 4, !dbg !18587
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18588
  %15 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18589
  %16 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18590
  %call = call float @BKE_scene_frame_get(%struct.Scene* %16), !dbg !18591
  %call7 = call i32 @subframe_updateObject(%struct.Scene* %14, %struct.Object* %15, i32 2, i32 5, float %call), !dbg !18592
  %17 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18593
  %dm = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %17, i32 0, i32 1, !dbg !18594
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !18594
  %call8 = call %struct.DerivedMesh* @CDDM_copy(%struct.DerivedMesh* %18), !dbg !18595
  store %struct.DerivedMesh* %call8, %struct.DerivedMesh** %dm_p, align 8, !dbg !18596
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18597
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %19, i32 0, i32 23, !dbg !18598
  %20 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !18598
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18599
  %call9 = call i32 %20(%struct.DerivedMesh* %21), !dbg !18597
  store i32 %call9, i32* %numOfVerts_p, align 4, !dbg !18600
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18601
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 31, !dbg !18602
  %23 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !18602
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18603
  %call10 = call %struct.MVert* %23(%struct.DerivedMesh* %24), !dbg !18601
  store %struct.MVert* %call10, %struct.MVert** %mvert_p, align 8, !dbg !18604
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 0, !dbg !18605
  %25 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18606
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %25, i32 0, i32 47, !dbg !18607
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !18606
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay11), !dbg !18608
  %26 = load i32, i32* %cur_fra, align 4, !dbg !18609
  %27 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18610
  %r12 = getelementptr inbounds %struct.Scene, %struct.Scene* %27, i32 0, i32 22, !dbg !18611
  %cfra13 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r12, i32 0, i32 5, !dbg !18612
  store i32 %26, i32* %cfra13, align 8, !dbg !18613
  %28 = load float, float* %cur_sfra, align 4, !dbg !18614
  %29 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18615
  %r14 = getelementptr inbounds %struct.Scene, %struct.Scene* %29, i32 0, i32 22, !dbg !18616
  %subframe15 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r14, i32 0, i32 8, !dbg !18617
  store float %28, float* %subframe15, align 4, !dbg !18618
  %30 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18619
  %31 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18620
  %32 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !18621
  %call16 = call float @BKE_scene_frame_get(%struct.Scene* %32), !dbg !18622
  %call17 = call i32 @subframe_updateObject(%struct.Scene* %30, %struct.Object* %31, i32 2, i32 5, float %call16), !dbg !18623
  %33 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18624
  %dm18 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %33, i32 0, i32 1, !dbg !18625
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm18, align 8, !dbg !18625
  store %struct.DerivedMesh* %34, %struct.DerivedMesh** %dm_c, align 8, !dbg !18626
  %35 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_c, align 8, !dbg !18627
  %getNumVerts19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %35, i32 0, i32 23, !dbg !18628
  %36 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts19, align 8, !dbg !18628
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_c, align 8, !dbg !18629
  %call20 = call i32 %36(%struct.DerivedMesh* %37), !dbg !18627
  store i32 %call20, i32* %numOfVerts_c, align 4, !dbg !18630
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18631
  %getVertArray21 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %38, i32 0, i32 31, !dbg !18632
  %39 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray21, align 8, !dbg !18632
  %40 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_c, align 8, !dbg !18633
  %call22 = call %struct.MVert* %39(%struct.DerivedMesh* %40), !dbg !18631
  store %struct.MVert* %call22, %struct.MVert** %mvert_c, align 8, !dbg !18634
  %41 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !18635
  %42 = load i32, i32* %numOfVerts_c, align 4, !dbg !18636
  %conv = sext i32 %42 to i64, !dbg !18636
  %mul = mul i64 %conv, 12, !dbg !18637
  %call23 = call i8* %41(i64 %mul, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i64 0, i64 0)), !dbg !18635
  %43 = bitcast i8* %call23 to %struct.Vec3f*, !dbg !18638
  %44 = load %struct.Vec3f**, %struct.Vec3f*** %brushVel.addr, align 8, !dbg !18639
  store %struct.Vec3f* %43, %struct.Vec3f** %44, align 8, !dbg !18640
  %45 = load %struct.Vec3f**, %struct.Vec3f*** %brushVel.addr, align 8, !dbg !18641
  %46 = load %struct.Vec3f*, %struct.Vec3f** %45, align 8, !dbg !18643
  %tobool = icmp ne %struct.Vec3f* %46, null, !dbg !18644
  br i1 %tobool, label %if.end25, label %if.then24, !dbg !18645

if.then24:                                        ; preds = %if.end
  br label %return, !dbg !18646

if.end25:                                         ; preds = %if.end
  %47 = load i32, i32* %numOfVerts_p, align 4, !dbg !18647
  %48 = load i32, i32* %numOfVerts_c, align 4, !dbg !18649
  %cmp26 = icmp ne i32 %47, %48, !dbg !18650
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !18651

if.then28:                                        ; preds = %if.end25
  %49 = load %struct.MVert*, %struct.MVert** %mvert_c, align 8, !dbg !18652
  store %struct.MVert* %49, %struct.MVert** %mvert_p, align 8, !dbg !18653
  br label %if.end29, !dbg !18654

if.end29:                                         ; preds = %if.then28, %if.end25
  store i32 0, i32* %i, align 4, !dbg !18655
  br label %for.cond, !dbg !18657

for.cond:                                         ; preds = %for.inc, %if.end29
  %50 = load i32, i32* %i, align 4, !dbg !18658
  %51 = load i32, i32* %numOfVerts_c, align 4, !dbg !18660
  %cmp30 = icmp slt i32 %50, %51, !dbg !18661
  br i1 %cmp30, label %for.body, label %for.end, !dbg !18662

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [3 x float]* %p1, metadata !18663, metadata !DIExpression()), !dbg !18665
  call void @llvm.dbg.declare(metadata [3 x float]* %p2, metadata !18666, metadata !DIExpression()), !dbg !18667
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !18668
  %52 = load %struct.MVert*, %struct.MVert** %mvert_p, align 8, !dbg !18669
  %53 = load i32, i32* %i, align 4, !dbg !18670
  %idxprom = sext i32 %53 to i64, !dbg !18669
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %52, i64 %idxprom, !dbg !18669
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !18671
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18669
  call void @copy_v3_v3(float* %arraydecay32, float* %arraydecay33), !dbg !18672
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %prev_obmat, i64 0, i64 0, !dbg !18673
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !18674
  call void @mul_m4_v3([4 x float]* %arraydecay34, float* %arraydecay35), !dbg !18675
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !18676
  %54 = load %struct.MVert*, %struct.MVert** %mvert_c, align 8, !dbg !18677
  %55 = load i32, i32* %i, align 4, !dbg !18678
  %idxprom37 = sext i32 %55 to i64, !dbg !18677
  %arrayidx38 = getelementptr inbounds %struct.MVert, %struct.MVert* %54, i64 %idxprom37, !dbg !18677
  %co39 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx38, i32 0, i32 0, !dbg !18679
  %arraydecay40 = getelementptr inbounds [3 x float], [3 x float]* %co39, i64 0, i64 0, !dbg !18677
  call void @copy_v3_v3(float* %arraydecay36, float* %arraydecay40), !dbg !18680
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !18681
  %obmat41 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 47, !dbg !18682
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat41, i64 0, i64 0, !dbg !18681
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !18683
  call void @mul_m4_v3([4 x float]* %arraydecay42, float* %arraydecay43), !dbg !18684
  %57 = load %struct.Vec3f**, %struct.Vec3f*** %brushVel.addr, align 8, !dbg !18685
  %58 = load %struct.Vec3f*, %struct.Vec3f** %57, align 8, !dbg !18686
  %59 = load i32, i32* %i, align 4, !dbg !18687
  %idxprom44 = sext i32 %59 to i64, !dbg !18688
  %arrayidx45 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %58, i64 %idxprom44, !dbg !18688
  %v = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx45, i32 0, i32 0, !dbg !18689
  %arraydecay46 = getelementptr inbounds [3 x float], [3 x float]* %v, i64 0, i64 0, !dbg !18688
  %arraydecay47 = getelementptr inbounds [3 x float], [3 x float]* %p2, i64 0, i64 0, !dbg !18690
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %p1, i64 0, i64 0, !dbg !18691
  call void @sub_v3_v3v3(float* %arraydecay46, float* %arraydecay47, float* %arraydecay48), !dbg !18692
  %60 = load %struct.Vec3f**, %struct.Vec3f*** %brushVel.addr, align 8, !dbg !18693
  %61 = load %struct.Vec3f*, %struct.Vec3f** %60, align 8, !dbg !18694
  %62 = load i32, i32* %i, align 4, !dbg !18695
  %idxprom49 = sext i32 %62 to i64, !dbg !18696
  %arrayidx50 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %61, i64 %idxprom49, !dbg !18696
  %v51 = getelementptr inbounds %struct.Vec3f, %struct.Vec3f* %arrayidx50, i32 0, i32 0, !dbg !18697
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %v51, i64 0, i64 0, !dbg !18696
  %63 = load float, float* %timescale.addr, align 4, !dbg !18698
  %div = fdiv float 1.000000e+00, %63, !dbg !18699
  call void @mul_v3_fl(float* %arraydecay52, float %div), !dbg !18700
  br label %for.inc, !dbg !18701

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !18702
  %inc = add nsw i32 %64, 1, !dbg !18702
  store i32 %inc, i32* %i, align 4, !dbg !18702
  br label %for.cond, !dbg !18703, !llvm.loop !18704

for.end:                                          ; preds = %for.cond
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18706
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %65, i32 0, i32 95, !dbg !18707
  %66 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !18707
  %67 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm_p, align 8, !dbg !18708
  call void %66(%struct.DerivedMesh* %67), !dbg !18706
  br label %return, !dbg !18709

return:                                           ; preds = %for.end, %if.then24
  ret void, !dbg !18709
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !18710 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18711, metadata !DIExpression()), !dbg !18712
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18713, metadata !DIExpression()), !dbg !18714
  %0 = load float*, float** %a.addr, align 8, !dbg !18715
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18715
  %1 = load float, float* %arrayidx, align 4, !dbg !18715
  %2 = load float*, float** %r.addr, align 8, !dbg !18716
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18716
  %3 = load float, float* %arrayidx1, align 4, !dbg !18717
  %add = fadd float %3, %1, !dbg !18717
  store float %add, float* %arrayidx1, align 4, !dbg !18717
  %4 = load float*, float** %a.addr, align 8, !dbg !18718
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !18718
  %5 = load float, float* %arrayidx2, align 4, !dbg !18718
  %6 = load float*, float** %r.addr, align 8, !dbg !18719
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18719
  %7 = load float, float* %arrayidx3, align 4, !dbg !18720
  %add4 = fadd float %7, %5, !dbg !18720
  store float %add4, float* %arrayidx3, align 4, !dbg !18720
  %8 = load float*, float** %a.addr, align 8, !dbg !18721
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !18721
  %9 = load float, float* %arrayidx5, align 4, !dbg !18721
  %10 = load float*, float** %r.addr, align 8, !dbg !18722
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !18722
  %11 = load float, float* %arrayidx6, align 4, !dbg !18723
  %add7 = fadd float %11, %9, !dbg !18723
  store float %add7, float* %arrayidx6, align 4, !dbg !18723
  ret void, !dbg !18724
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @meshBrush_boundsIntersect(%struct.Bounds3D* %b1, %struct.Bounds3D* %b2, %struct.DynamicPaintBrushSettings* %brush, float %brush_radius) #0 !dbg !18725 {
entry:
  %retval = alloca i32, align 4
  %b1.addr = alloca %struct.Bounds3D*, align 8
  %b2.addr = alloca %struct.Bounds3D*, align 8
  %brush.addr = alloca %struct.DynamicPaintBrushSettings*, align 8
  %brush_radius.addr = alloca float, align 4
  store %struct.Bounds3D* %b1, %struct.Bounds3D** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b1.addr, metadata !18728, metadata !DIExpression()), !dbg !18729
  store %struct.Bounds3D* %b2, %struct.Bounds3D** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b2.addr, metadata !18730, metadata !DIExpression()), !dbg !18731
  store %struct.DynamicPaintBrushSettings* %brush, %struct.DynamicPaintBrushSettings** %brush.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DynamicPaintBrushSettings** %brush.addr, metadata !18732, metadata !DIExpression()), !dbg !18733
  store float %brush_radius, float* %brush_radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %brush_radius.addr, metadata !18734, metadata !DIExpression()), !dbg !18735
  %0 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18736
  %collision = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %0, i32 0, i32 5, !dbg !18738
  %1 = load i32, i32* %collision, align 4, !dbg !18738
  %cmp = icmp eq i32 %1, 0, !dbg !18739
  br i1 %cmp, label %if.then, label %if.else, !dbg !18740

if.then:                                          ; preds = %entry
  %2 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !18741
  %3 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !18742
  %call = call i32 @boundsIntersect(%struct.Bounds3D* %2, %struct.Bounds3D* %3), !dbg !18743
  store i32 %call, i32* %retval, align 4, !dbg !18744
  br label %return, !dbg !18744

if.else:                                          ; preds = %entry
  %4 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18745
  %collision1 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %4, i32 0, i32 5, !dbg !18747
  %5 = load i32, i32* %collision1, align 4, !dbg !18747
  %cmp2 = icmp eq i32 %5, 1, !dbg !18748
  br i1 %cmp2, label %if.then5, label %lor.lhs.false, !dbg !18749

lor.lhs.false:                                    ; preds = %if.else
  %6 = load %struct.DynamicPaintBrushSettings*, %struct.DynamicPaintBrushSettings** %brush.addr, align 8, !dbg !18750
  %collision3 = getelementptr inbounds %struct.DynamicPaintBrushSettings, %struct.DynamicPaintBrushSettings* %6, i32 0, i32 5, !dbg !18751
  %7 = load i32, i32* %collision3, align 4, !dbg !18751
  %cmp4 = icmp eq i32 %7, 2, !dbg !18752
  br i1 %cmp4, label %if.then5, label %if.else7, !dbg !18753

if.then5:                                         ; preds = %lor.lhs.false, %if.else
  %8 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !18754
  %9 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !18755
  %10 = load float, float* %brush_radius.addr, align 4, !dbg !18756
  %call6 = call i32 @boundsIntersectDist(%struct.Bounds3D* %8, %struct.Bounds3D* %9, float %10), !dbg !18757
  store i32 %call6, i32* %retval, align 4, !dbg !18758
  br label %return, !dbg !18758

if.else7:                                         ; preds = %lor.lhs.false
  store i32 1, i32* %retval, align 4, !dbg !18759
  br label %return, !dbg !18759

return:                                           ; preds = %if.else7, %if.then5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !18760
  ret i32 %11, !dbg !18760
}

declare dso_local %struct.BVHTree* @bvhtree_from_mesh_faces(%struct.BVHTreeFromMesh*, %struct.DerivedMesh*, float, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_fl(float* %r, float %f) #0 !dbg !18761 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18762, metadata !DIExpression()), !dbg !18763
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !18764, metadata !DIExpression()), !dbg !18765
  %0 = load float, float* %f.addr, align 4, !dbg !18766
  %1 = load float*, float** %r.addr, align 8, !dbg !18767
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !18767
  %2 = load float, float* %arrayidx, align 4, !dbg !18768
  %add = fadd float %2, %0, !dbg !18768
  store float %add, float* %arrayidx, align 4, !dbg !18768
  %3 = load float, float* %f.addr, align 4, !dbg !18769
  %4 = load float*, float** %r.addr, align 8, !dbg !18770
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !18770
  %5 = load float, float* %arrayidx1, align 4, !dbg !18771
  %add2 = fadd float %5, %3, !dbg !18771
  store float %add2, float* %arrayidx1, align 4, !dbg !18771
  %6 = load float, float* %f.addr, align 4, !dbg !18772
  %7 = load float*, float** %r.addr, align 8, !dbg !18773
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !18773
  %8 = load float, float* %arrayidx3, align 4, !dbg !18774
  %add4 = fadd float %8, %6, !dbg !18774
  store float %add4, float* %arrayidx3, align 4, !dbg !18774
  ret void, !dbg !18775
}

declare dso_local i32 @BLI_bvhtree_ray_cast(%struct.BVHTree*, float*, float*, float, %struct.BVHTreeRayHit*, void (i8*, i32, %struct.BVHTreeRay*, %struct.BVHTreeRayHit*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_faces_spherecast_dp(i8* %userdata, i32 %index, %struct.BVHTreeRay* %ray, %struct.BVHTreeRayHit* %hit) #0 !dbg !18776 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %ray.addr = alloca %struct.BVHTreeRay*, align 8
  %hit.addr = alloca %struct.BVHTreeRayHit*, align 8
  %data = alloca %struct.BVHTreeFromMesh*, align 8
  %vert = alloca %struct.MVert*, align 8
  %face = alloca %struct.MFace*, align 8
  %quad = alloca i16, align 2
  %t0 = alloca float*, align 8
  %t1 = alloca float*, align 8
  %t2 = alloca float*, align 8
  %t3 = alloca float*, align 8
  %dist = alloca float, align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !18777, metadata !DIExpression()), !dbg !18778
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18779, metadata !DIExpression()), !dbg !18780
  store %struct.BVHTreeRay* %ray, %struct.BVHTreeRay** %ray.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRay** %ray.addr, metadata !18781, metadata !DIExpression()), !dbg !18782
  store %struct.BVHTreeRayHit* %hit, %struct.BVHTreeRayHit** %hit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeRayHit** %hit.addr, metadata !18783, metadata !DIExpression()), !dbg !18784
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh** %data, metadata !18785, metadata !DIExpression()), !dbg !18788
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !18789
  %1 = bitcast i8* %0 to %struct.BVHTreeFromMesh*, !dbg !18790
  store %struct.BVHTreeFromMesh* %1, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18788
  call void @llvm.dbg.declare(metadata %struct.MVert** %vert, metadata !18791, metadata !DIExpression()), !dbg !18792
  %2 = load %struct.BVHTreeFromMesh*, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18793
  %vert1 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %2, i32 0, i32 3, !dbg !18794
  %3 = load %struct.MVert*, %struct.MVert** %vert1, align 8, !dbg !18794
  store %struct.MVert* %3, %struct.MVert** %vert, align 8, !dbg !18792
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !18795, metadata !DIExpression()), !dbg !18796
  %4 = load %struct.BVHTreeFromMesh*, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18797
  %face2 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %4, i32 0, i32 5, !dbg !18798
  %5 = load %struct.MFace*, %struct.MFace** %face2, align 8, !dbg !18798
  %6 = load i32, i32* %index.addr, align 4, !dbg !18799
  %idx.ext = sext i32 %6 to i64, !dbg !18800
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i64 %idx.ext, !dbg !18800
  store %struct.MFace* %add.ptr, %struct.MFace** %face, align 8, !dbg !18796
  call void @llvm.dbg.declare(metadata i16* %quad, metadata !18801, metadata !DIExpression()), !dbg !18802
  store i16 0, i16* %quad, align 2, !dbg !18802
  call void @llvm.dbg.declare(metadata float** %t0, metadata !18803, metadata !DIExpression()), !dbg !18804
  call void @llvm.dbg.declare(metadata float** %t1, metadata !18805, metadata !DIExpression()), !dbg !18806
  call void @llvm.dbg.declare(metadata float** %t2, metadata !18807, metadata !DIExpression()), !dbg !18808
  call void @llvm.dbg.declare(metadata float** %t3, metadata !18809, metadata !DIExpression()), !dbg !18810
  %7 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18811
  %8 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18812
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %8, i32 0, i32 0, !dbg !18813
  %9 = load i32, i32* %v1, align 4, !dbg !18813
  %idxprom = zext i32 %9 to i64, !dbg !18811
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i64 %idxprom, !dbg !18811
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !18814
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !18811
  store float* %arraydecay, float** %t0, align 8, !dbg !18815
  %10 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18816
  %11 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18817
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i32 0, i32 1, !dbg !18818
  %12 = load i32, i32* %v2, align 4, !dbg !18818
  %idxprom3 = zext i32 %12 to i64, !dbg !18816
  %arrayidx4 = getelementptr inbounds %struct.MVert, %struct.MVert* %10, i64 %idxprom3, !dbg !18816
  %co5 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx4, i32 0, i32 0, !dbg !18819
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %co5, i64 0, i64 0, !dbg !18816
  store float* %arraydecay6, float** %t1, align 8, !dbg !18820
  %13 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18821
  %14 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18822
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 2, !dbg !18823
  %15 = load i32, i32* %v3, align 4, !dbg !18823
  %idxprom7 = zext i32 %15 to i64, !dbg !18821
  %arrayidx8 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom7, !dbg !18821
  %co9 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx8, i32 0, i32 0, !dbg !18824
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %co9, i64 0, i64 0, !dbg !18821
  store float* %arraydecay10, float** %t2, align 8, !dbg !18825
  %16 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18826
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 3, !dbg !18827
  %17 = load i32, i32* %v4, align 4, !dbg !18827
  %tobool = icmp ne i32 %17, 0, !dbg !18826
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18826

cond.true:                                        ; preds = %entry
  %18 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18828
  %19 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18829
  %v411 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !18830
  %20 = load i32, i32* %v411, align 4, !dbg !18830
  %idxprom12 = zext i32 %20 to i64, !dbg !18828
  %arrayidx13 = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i64 %idxprom12, !dbg !18828
  %co14 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx13, i32 0, i32 0, !dbg !18831
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co14, i64 0, i64 0, !dbg !18828
  br label %cond.end, !dbg !18826

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18826

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay15, %cond.true ], [ null, %cond.false ], !dbg !18826
  store float* %cond, float** %t3, align 8, !dbg !18832
  br label %do.body, !dbg !18833

do.body:                                          ; preds = %do.cond, %cond.end
  call void @llvm.dbg.declare(metadata float* %dist, metadata !18834, metadata !DIExpression()), !dbg !18836
  %21 = load %struct.BVHTreeRay*, %struct.BVHTreeRay** %ray.addr, align 8, !dbg !18837
  %22 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !18838
  %dist16 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %22, i32 0, i32 3, !dbg !18839
  %23 = load float, float* %dist16, align 4, !dbg !18839
  %24 = load float*, float** %t0, align 8, !dbg !18840
  %25 = load float*, float** %t1, align 8, !dbg !18841
  %26 = load float*, float** %t2, align 8, !dbg !18842
  %call = call float @bvhtree_ray_tri_intersection(%struct.BVHTreeRay* %21, float %23, float* %24, float* %25, float* %26), !dbg !18843
  store float %call, float* %dist, align 4, !dbg !18836
  %27 = load float, float* %dist, align 4, !dbg !18844
  %cmp = fcmp oge float %27, 0.000000e+00, !dbg !18846
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18847

land.lhs.true:                                    ; preds = %do.body
  %28 = load float, float* %dist, align 4, !dbg !18848
  %29 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !18849
  %dist17 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %29, i32 0, i32 3, !dbg !18850
  %30 = load float, float* %dist17, align 4, !dbg !18850
  %cmp18 = fcmp olt float %28, %30, !dbg !18851
  br i1 %cmp18, label %if.then, label %if.end, !dbg !18852

if.then:                                          ; preds = %land.lhs.true
  %31 = load i32, i32* %index.addr, align 4, !dbg !18853
  %32 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !18855
  %index19 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %32, i32 0, i32 0, !dbg !18856
  store i32 %31, i32* %index19, align 4, !dbg !18857
  %33 = load float, float* %dist, align 4, !dbg !18858
  %34 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !18859
  %dist20 = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %34, i32 0, i32 3, !dbg !18860
  store float %33, float* %dist20, align 4, !dbg !18861
  %35 = load i16, i16* %quad, align 2, !dbg !18862
  %conv = sext i16 %35 to i32, !dbg !18863
  %tobool21 = icmp ne i32 %conv, 0, !dbg !18863
  %36 = zext i1 %tobool21 to i64, !dbg !18863
  %cond22 = select i1 %tobool21, float 1.000000e+00, float 0.000000e+00, !dbg !18863
  %37 = load %struct.BVHTreeRayHit*, %struct.BVHTreeRayHit** %hit.addr, align 8, !dbg !18864
  %no = getelementptr inbounds %struct.BVHTreeRayHit, %struct.BVHTreeRayHit* %37, i32 0, i32 2, !dbg !18865
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !18864
  store float %cond22, float* %arrayidx23, align 4, !dbg !18866
  br label %if.end, !dbg !18867

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.body
  %38 = load float*, float** %t2, align 8, !dbg !18868
  store float* %38, float** %t1, align 8, !dbg !18869
  %39 = load float*, float** %t3, align 8, !dbg !18870
  store float* %39, float** %t2, align 8, !dbg !18871
  store float* null, float** %t3, align 8, !dbg !18872
  store i16 1, i16* %quad, align 2, !dbg !18873
  br label %do.cond, !dbg !18874

do.cond:                                          ; preds = %if.end
  %40 = load float*, float** %t2, align 8, !dbg !18875
  %tobool24 = icmp ne float* %40, null, !dbg !18874
  br i1 %tobool24, label %do.body, label %do.end, !dbg !18874, !llvm.loop !18876

do.end:                                           ; preds = %do.cond
  ret void, !dbg !18878
}

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3v3fl(float* %r, float* %a, float* %b, float %f) #0 !dbg !18879 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !18882, metadata !DIExpression()), !dbg !18883
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !18884, metadata !DIExpression()), !dbg !18885
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !18886, metadata !DIExpression()), !dbg !18887
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !18888, metadata !DIExpression()), !dbg !18889
  %0 = load float*, float** %a.addr, align 8, !dbg !18890
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !18890
  %1 = load float, float* %arrayidx, align 4, !dbg !18890
  %2 = load float*, float** %b.addr, align 8, !dbg !18891
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !18891
  %3 = load float, float* %arrayidx1, align 4, !dbg !18891
  %4 = load float, float* %f.addr, align 4, !dbg !18892
  %mul = fmul float %3, %4, !dbg !18893
  %add = fadd float %1, %mul, !dbg !18894
  %5 = load float*, float** %r.addr, align 8, !dbg !18895
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 0, !dbg !18895
  store float %add, float* %arrayidx2, align 4, !dbg !18896
  %6 = load float*, float** %a.addr, align 8, !dbg !18897
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !18897
  %7 = load float, float* %arrayidx3, align 4, !dbg !18897
  %8 = load float*, float** %b.addr, align 8, !dbg !18898
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !18898
  %9 = load float, float* %arrayidx4, align 4, !dbg !18898
  %10 = load float, float* %f.addr, align 4, !dbg !18899
  %mul5 = fmul float %9, %10, !dbg !18900
  %add6 = fadd float %7, %mul5, !dbg !18901
  %11 = load float*, float** %r.addr, align 8, !dbg !18902
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !18902
  store float %add6, float* %arrayidx7, align 4, !dbg !18903
  %12 = load float*, float** %a.addr, align 8, !dbg !18904
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !18904
  %13 = load float, float* %arrayidx8, align 4, !dbg !18904
  %14 = load float*, float** %b.addr, align 8, !dbg !18905
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 2, !dbg !18905
  %15 = load float, float* %arrayidx9, align 4, !dbg !18905
  %16 = load float, float* %f.addr, align 4, !dbg !18906
  %mul10 = fmul float %15, %16, !dbg !18907
  %add11 = fadd float %13, %mul10, !dbg !18908
  %17 = load float*, float** %r.addr, align 8, !dbg !18909
  %arrayidx12 = getelementptr inbounds float, float* %17, i64 2, !dbg !18909
  store float %add11, float* %arrayidx12, align 4, !dbg !18910
  ret void, !dbg !18911
}

declare dso_local i32 @BLI_bvhtree_find_nearest(%struct.BVHTree*, float*, %struct.BVHTreeNearest*, void (i8*, i32, float*, %struct.BVHTreeNearest*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mesh_faces_nearest_point_dp(i8* %userdata, i32 %index, float* %co, %struct.BVHTreeNearest* %nearest) #0 !dbg !18912 {
entry:
  %userdata.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %nearest.addr = alloca %struct.BVHTreeNearest*, align 8
  %data = alloca %struct.BVHTreeFromMesh*, align 8
  %vert = alloca %struct.MVert*, align 8
  %face = alloca %struct.MFace*, align 8
  %quad = alloca i16, align 2
  %t0 = alloca float*, align 8
  %t1 = alloca float*, align 8
  %t2 = alloca float*, align 8
  %t3 = alloca float*, align 8
  %nearest_tmp = alloca [3 x float], align 4
  %dist_sq = alloca float, align 4
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !18913, metadata !DIExpression()), !dbg !18914
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !18915, metadata !DIExpression()), !dbg !18916
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !18917, metadata !DIExpression()), !dbg !18918
  store %struct.BVHTreeNearest* %nearest, %struct.BVHTreeNearest** %nearest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BVHTreeNearest** %nearest.addr, metadata !18919, metadata !DIExpression()), !dbg !18920
  call void @llvm.dbg.declare(metadata %struct.BVHTreeFromMesh** %data, metadata !18921, metadata !DIExpression()), !dbg !18922
  %0 = load i8*, i8** %userdata.addr, align 8, !dbg !18923
  %1 = bitcast i8* %0 to %struct.BVHTreeFromMesh*, !dbg !18924
  store %struct.BVHTreeFromMesh* %1, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18922
  call void @llvm.dbg.declare(metadata %struct.MVert** %vert, metadata !18925, metadata !DIExpression()), !dbg !18926
  %2 = load %struct.BVHTreeFromMesh*, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18927
  %vert1 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %2, i32 0, i32 3, !dbg !18928
  %3 = load %struct.MVert*, %struct.MVert** %vert1, align 8, !dbg !18928
  store %struct.MVert* %3, %struct.MVert** %vert, align 8, !dbg !18926
  call void @llvm.dbg.declare(metadata %struct.MFace** %face, metadata !18929, metadata !DIExpression()), !dbg !18930
  %4 = load %struct.BVHTreeFromMesh*, %struct.BVHTreeFromMesh** %data, align 8, !dbg !18931
  %face2 = getelementptr inbounds %struct.BVHTreeFromMesh, %struct.BVHTreeFromMesh* %4, i32 0, i32 5, !dbg !18932
  %5 = load %struct.MFace*, %struct.MFace** %face2, align 8, !dbg !18932
  %6 = load i32, i32* %index.addr, align 4, !dbg !18933
  %idx.ext = sext i32 %6 to i64, !dbg !18934
  %add.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %5, i64 %idx.ext, !dbg !18934
  store %struct.MFace* %add.ptr, %struct.MFace** %face, align 8, !dbg !18930
  call void @llvm.dbg.declare(metadata i16* %quad, metadata !18935, metadata !DIExpression()), !dbg !18936
  store i16 0, i16* %quad, align 2, !dbg !18936
  call void @llvm.dbg.declare(metadata float** %t0, metadata !18937, metadata !DIExpression()), !dbg !18938
  call void @llvm.dbg.declare(metadata float** %t1, metadata !18939, metadata !DIExpression()), !dbg !18940
  call void @llvm.dbg.declare(metadata float** %t2, metadata !18941, metadata !DIExpression()), !dbg !18942
  call void @llvm.dbg.declare(metadata float** %t3, metadata !18943, metadata !DIExpression()), !dbg !18944
  %7 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18945
  %8 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18946
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %8, i32 0, i32 0, !dbg !18947
  %9 = load i32, i32* %v1, align 4, !dbg !18947
  %idxprom = zext i32 %9 to i64, !dbg !18945
  %arrayidx = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i64 %idxprom, !dbg !18945
  %co3 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx, i32 0, i32 0, !dbg !18948
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co3, i64 0, i64 0, !dbg !18945
  store float* %arraydecay, float** %t0, align 8, !dbg !18949
  %10 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18950
  %11 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18951
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %11, i32 0, i32 1, !dbg !18952
  %12 = load i32, i32* %v2, align 4, !dbg !18952
  %idxprom4 = zext i32 %12 to i64, !dbg !18950
  %arrayidx5 = getelementptr inbounds %struct.MVert, %struct.MVert* %10, i64 %idxprom4, !dbg !18950
  %co6 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx5, i32 0, i32 0, !dbg !18953
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co6, i64 0, i64 0, !dbg !18950
  store float* %arraydecay7, float** %t1, align 8, !dbg !18954
  %13 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18955
  %14 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18956
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %14, i32 0, i32 2, !dbg !18957
  %15 = load i32, i32* %v3, align 4, !dbg !18957
  %idxprom8 = zext i32 %15 to i64, !dbg !18955
  %arrayidx9 = getelementptr inbounds %struct.MVert, %struct.MVert* %13, i64 %idxprom8, !dbg !18955
  %co10 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx9, i32 0, i32 0, !dbg !18958
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co10, i64 0, i64 0, !dbg !18955
  store float* %arraydecay11, float** %t2, align 8, !dbg !18959
  %16 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18960
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 3, !dbg !18961
  %17 = load i32, i32* %v4, align 4, !dbg !18961
  %tobool = icmp ne i32 %17, 0, !dbg !18960
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18960

cond.true:                                        ; preds = %entry
  %18 = load %struct.MVert*, %struct.MVert** %vert, align 8, !dbg !18962
  %19 = load %struct.MFace*, %struct.MFace** %face, align 8, !dbg !18963
  %v412 = getelementptr inbounds %struct.MFace, %struct.MFace* %19, i32 0, i32 3, !dbg !18964
  %20 = load i32, i32* %v412, align 4, !dbg !18964
  %idxprom13 = zext i32 %20 to i64, !dbg !18962
  %arrayidx14 = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i64 %idxprom13, !dbg !18962
  %co15 = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx14, i32 0, i32 0, !dbg !18965
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co15, i64 0, i64 0, !dbg !18962
  br label %cond.end, !dbg !18960

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18960

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay16, %cond.true ], [ null, %cond.false ], !dbg !18960
  store float* %cond, float** %t3, align 8, !dbg !18966
  br label %do.body, !dbg !18967

do.body:                                          ; preds = %do.cond, %cond.end
  call void @llvm.dbg.declare(metadata [3 x float]* %nearest_tmp, metadata !18968, metadata !DIExpression()), !dbg !18970
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !18971, metadata !DIExpression()), !dbg !18972
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %nearest_tmp, i64 0, i64 0, !dbg !18973
  %21 = load float*, float** %co.addr, align 8, !dbg !18974
  %22 = load float*, float** %t0, align 8, !dbg !18975
  %23 = load float*, float** %t1, align 8, !dbg !18976
  %24 = load float*, float** %t2, align 8, !dbg !18977
  call void @closest_on_tri_to_point_v3(float* %arraydecay17, float* %21, float* %22, float* %23, float* %24), !dbg !18978
  %25 = load float*, float** %co.addr, align 8, !dbg !18979
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %nearest_tmp, i64 0, i64 0, !dbg !18980
  %call = call float @len_squared_v3v3(float* %25, float* %arraydecay18), !dbg !18981
  store float %call, float* %dist_sq, align 4, !dbg !18982
  %26 = load float, float* %dist_sq, align 4, !dbg !18983
  %27 = load %struct.BVHTreeNearest*, %struct.BVHTreeNearest** %nearest.addr, align 8, !dbg !18985
  %dist_sq19 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %27, i32 0, i32 3, !dbg !18986
  %28 = load float, float* %dist_sq19, align 4, !dbg !18986
  %cmp = fcmp olt float %26, %28, !dbg !18987
  br i1 %cmp, label %if.then, label %if.end, !dbg !18988

if.then:                                          ; preds = %do.body
  %29 = load i32, i32* %index.addr, align 4, !dbg !18989
  %30 = load %struct.BVHTreeNearest*, %struct.BVHTreeNearest** %nearest.addr, align 8, !dbg !18991
  %index20 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %30, i32 0, i32 0, !dbg !18992
  store i32 %29, i32* %index20, align 4, !dbg !18993
  %31 = load float, float* %dist_sq, align 4, !dbg !18994
  %32 = load %struct.BVHTreeNearest*, %struct.BVHTreeNearest** %nearest.addr, align 8, !dbg !18995
  %dist_sq21 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %32, i32 0, i32 3, !dbg !18996
  store float %31, float* %dist_sq21, align 4, !dbg !18997
  %33 = load %struct.BVHTreeNearest*, %struct.BVHTreeNearest** %nearest.addr, align 8, !dbg !18998
  %co22 = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %33, i32 0, i32 1, !dbg !18999
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co22, i64 0, i64 0, !dbg !18998
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %nearest_tmp, i64 0, i64 0, !dbg !19000
  call void @copy_v3_v3(float* %arraydecay23, float* %arraydecay24), !dbg !19001
  %34 = load i16, i16* %quad, align 2, !dbg !19002
  %conv = sext i16 %34 to i32, !dbg !19003
  %tobool25 = icmp ne i32 %conv, 0, !dbg !19003
  %35 = zext i1 %tobool25 to i64, !dbg !19003
  %cond26 = select i1 %tobool25, float 1.000000e+00, float 0.000000e+00, !dbg !19003
  %36 = load %struct.BVHTreeNearest*, %struct.BVHTreeNearest** %nearest.addr, align 8, !dbg !19004
  %no = getelementptr inbounds %struct.BVHTreeNearest, %struct.BVHTreeNearest* %36, i32 0, i32 2, !dbg !19005
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !19004
  store float %cond26, float* %arrayidx27, align 4, !dbg !19006
  br label %if.end, !dbg !19007

if.end:                                           ; preds = %if.then, %do.body
  %37 = load float*, float** %t2, align 8, !dbg !19008
  store float* %37, float** %t1, align 8, !dbg !19009
  %38 = load float*, float** %t3, align 8, !dbg !19010
  store float* %38, float** %t2, align 8, !dbg !19011
  store float* null, float** %t3, align 8, !dbg !19012
  store i16 1, i16* %quad, align 2, !dbg !19013
  br label %do.cond, !dbg !19014

do.cond:                                          ; preds = %if.end
  %39 = load float*, float** %t2, align 8, !dbg !19015
  %tobool28 = icmp ne float* %39, null, !dbg !19014
  br i1 %tobool28, label %do.body, label %do.end, !dbg !19014, !llvm.loop !19016

do.end:                                           ; preds = %do.cond
  ret void, !dbg !19018
}

declare dso_local void @interp_weights_face_v3(float*, float*, float*, float*, float*, float*) #2

declare dso_local void @free_bvhtree_from_mesh(%struct.BVHTreeFromMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @boundsIntersect(%struct.Bounds3D* %b1, %struct.Bounds3D* %b2) #0 !dbg !19019 {
entry:
  %retval = alloca i32, align 4
  %b1.addr = alloca %struct.Bounds3D*, align 8
  %b2.addr = alloca %struct.Bounds3D*, align 8
  %i = alloca i32, align 4
  store %struct.Bounds3D* %b1, %struct.Bounds3D** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b1.addr, metadata !19022, metadata !DIExpression()), !dbg !19023
  store %struct.Bounds3D* %b2, %struct.Bounds3D** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %b2.addr, metadata !19024, metadata !DIExpression()), !dbg !19025
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19026, metadata !DIExpression()), !dbg !19027
  store i32 2, i32* %i, align 4, !dbg !19027
  %0 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !19028
  %valid = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %0, i32 0, i32 0, !dbg !19030
  %1 = load i32, i32* %valid, align 4, !dbg !19030
  %tobool = icmp ne i32 %1, 0, !dbg !19028
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !19031

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !19032
  %valid1 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %2, i32 0, i32 0, !dbg !19033
  %3 = load i32, i32* %valid1, align 4, !dbg !19033
  %tobool2 = icmp ne i32 %3, 0, !dbg !19032
  br i1 %tobool2, label %if.end, label %if.then, !dbg !19034

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !19035
  br label %return, !dbg !19035

if.end:                                           ; preds = %lor.lhs.false
  br label %for.cond, !dbg !19036

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !19037
  %cmp = icmp sge i32 %4, 0, !dbg !19040
  br i1 %cmp, label %for.body, label %for.end, !dbg !19041

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !19042
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %5, i32 0, i32 1, !dbg !19044
  %6 = load i32, i32* %i, align 4, !dbg !19045
  %idxprom = sext i32 %6 to i64, !dbg !19042
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 %idxprom, !dbg !19042
  %7 = load float, float* %arrayidx, align 4, !dbg !19042
  %8 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !19046
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %8, i32 0, i32 2, !dbg !19047
  %9 = load i32, i32* %i, align 4, !dbg !19048
  %idxprom3 = sext i32 %9 to i64, !dbg !19046
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 %idxprom3, !dbg !19046
  %10 = load float, float* %arrayidx4, align 4, !dbg !19046
  %cmp5 = fcmp ole float %7, %10, !dbg !19049
  br i1 %cmp5, label %land.lhs.true, label %if.then13, !dbg !19050

land.lhs.true:                                    ; preds = %for.body
  %11 = load %struct.Bounds3D*, %struct.Bounds3D** %b1.addr, align 8, !dbg !19051
  %max6 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %11, i32 0, i32 2, !dbg !19052
  %12 = load i32, i32* %i, align 4, !dbg !19053
  %idxprom7 = sext i32 %12 to i64, !dbg !19051
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %max6, i64 0, i64 %idxprom7, !dbg !19051
  %13 = load float, float* %arrayidx8, align 4, !dbg !19051
  %14 = load %struct.Bounds3D*, %struct.Bounds3D** %b2.addr, align 8, !dbg !19054
  %min9 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %14, i32 0, i32 1, !dbg !19055
  %15 = load i32, i32* %i, align 4, !dbg !19056
  %idxprom10 = sext i32 %15 to i64, !dbg !19054
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min9, i64 0, i64 %idxprom10, !dbg !19054
  %16 = load float, float* %arrayidx11, align 4, !dbg !19054
  %cmp12 = fcmp oge float %13, %16, !dbg !19057
  br i1 %cmp12, label %if.end14, label %if.then13, !dbg !19058

if.then13:                                        ; preds = %land.lhs.true, %for.body
  store i32 0, i32* %retval, align 4, !dbg !19059
  br label %return, !dbg !19059

if.end14:                                         ; preds = %land.lhs.true
  br label %for.inc, !dbg !19060

for.inc:                                          ; preds = %if.end14
  %17 = load i32, i32* %i, align 4, !dbg !19061
  %sub = sub nsw i32 %17, 1, !dbg !19061
  store i32 %sub, i32* %i, align 4, !dbg !19061
  br label %for.cond, !dbg !19062, !llvm.loop !19063

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !19065
  br label %return, !dbg !19065

return:                                           ; preds = %for.end, %if.then13, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !19066
  ret i32 %18, !dbg !19066
}

declare dso_local float @bvhtree_ray_tri_intersection(%struct.BVHTreeRay*, float, float*, float*, float*) #2

declare dso_local void @closest_on_tri_to_point_v3(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !19067 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !19068, metadata !DIExpression()), !dbg !19069
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !19070, metadata !DIExpression()), !dbg !19071
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !19072, metadata !DIExpression()), !dbg !19073
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !19074
  %0 = load float*, float** %b.addr, align 8, !dbg !19075
  %1 = load float*, float** %a.addr, align 8, !dbg !19076
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !19077
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !19078
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !19079
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !19080
  ret float %call, !dbg !19081
}

declare dso_local void @RE_free_sample_material(%struct.Material*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @surface_determineForceTargetPoints(%struct.PaintSurfaceData* %sData, i32 %index, float* %force, float* %closest_d, i32* %closest_id) #0 !dbg !19082 {
entry:
  %sData.addr = alloca %struct.PaintSurfaceData*, align 8
  %index.addr = alloca i32, align 4
  %force.addr = alloca float*, align 8
  %closest_d.addr = alloca float*, align 8
  %closest_id.addr = alloca i32*, align 8
  %bNeighs = alloca %struct.BakeAdjPoint*, align 8
  %numOfNeighs = alloca i32, align 4
  %i = alloca i32, align 4
  %n_index = alloca i32, align 4
  %dir_dot = alloca float, align 4
  %n_index24 = alloca i32, align 4
  %dir_dot30 = alloca float, align 4
  %closest_dot = alloca float, align 4
  %force_proj = alloca [3 x float], align 4
  %tangent = alloca [3 x float], align 4
  %neigh_diff = alloca float, align 4
  %force_intersect = alloca float, align 4
  %temp = alloca float, align 4
  store %struct.PaintSurfaceData* %sData, %struct.PaintSurfaceData** %sData.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData.addr, metadata !19085, metadata !DIExpression()), !dbg !19086
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !19087, metadata !DIExpression()), !dbg !19088
  store float* %force, float** %force.addr, align 8
  call void @llvm.dbg.declare(metadata float** %force.addr, metadata !19089, metadata !DIExpression()), !dbg !19090
  store float* %closest_d, float** %closest_d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %closest_d.addr, metadata !19091, metadata !DIExpression()), !dbg !19092
  store i32* %closest_id, i32** %closest_id.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %closest_id.addr, metadata !19093, metadata !DIExpression()), !dbg !19094
  call void @llvm.dbg.declare(metadata %struct.BakeAdjPoint** %bNeighs, metadata !19095, metadata !DIExpression()), !dbg !19096
  %0 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData.addr, align 8, !dbg !19097
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %0, i32 0, i32 3, !dbg !19098
  %1 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !19098
  %bNeighs1 = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %1, i32 0, i32 5, !dbg !19099
  %2 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs1, align 8, !dbg !19099
  store %struct.BakeAdjPoint* %2, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19096
  call void @llvm.dbg.declare(metadata i32* %numOfNeighs, metadata !19100, metadata !DIExpression()), !dbg !19101
  %3 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData.addr, align 8, !dbg !19102
  %adj_data = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %3, i32 0, i32 2, !dbg !19103
  %4 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data, align 8, !dbg !19103
  %n_num = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %4, i32 0, i32 2, !dbg !19104
  %5 = load i32*, i32** %n_num, align 8, !dbg !19104
  %6 = load i32, i32* %index.addr, align 4, !dbg !19105
  %idxprom = sext i32 %6 to i64, !dbg !19102
  %arrayidx = getelementptr inbounds i32, i32* %5, i64 %idxprom, !dbg !19102
  %7 = load i32, i32* %arrayidx, align 4, !dbg !19102
  store i32 %7, i32* %numOfNeighs, align 4, !dbg !19101
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19106, metadata !DIExpression()), !dbg !19107
  %8 = load i32*, i32** %closest_id.addr, align 8, !dbg !19108
  %arrayidx2 = getelementptr inbounds i32, i32* %8, i64 1, !dbg !19108
  store i32 -1, i32* %arrayidx2, align 4, !dbg !19109
  %9 = load i32*, i32** %closest_id.addr, align 8, !dbg !19110
  %arrayidx3 = getelementptr inbounds i32, i32* %9, i64 0, !dbg !19110
  store i32 -1, i32* %arrayidx3, align 4, !dbg !19111
  %10 = load float*, float** %closest_d.addr, align 8, !dbg !19112
  %arrayidx4 = getelementptr inbounds float, float* %10, i64 1, !dbg !19112
  store float -1.000000e+00, float* %arrayidx4, align 4, !dbg !19113
  %11 = load float*, float** %closest_d.addr, align 8, !dbg !19114
  %arrayidx5 = getelementptr inbounds float, float* %11, i64 0, !dbg !19114
  store float -1.000000e+00, float* %arrayidx5, align 4, !dbg !19115
  store i32 0, i32* %i, align 4, !dbg !19116
  br label %for.cond, !dbg !19118

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i32, i32* %i, align 4, !dbg !19119
  %13 = load i32, i32* %numOfNeighs, align 4, !dbg !19121
  %cmp = icmp slt i32 %12, %13, !dbg !19122
  br i1 %cmp, label %for.body, label %for.end, !dbg !19123

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %n_index, metadata !19124, metadata !DIExpression()), !dbg !19126
  %14 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData.addr, align 8, !dbg !19127
  %adj_data6 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %14, i32 0, i32 2, !dbg !19128
  %15 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data6, align 8, !dbg !19128
  %n_index7 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %15, i32 0, i32 1, !dbg !19129
  %16 = load i32*, i32** %n_index7, align 8, !dbg !19129
  %17 = load i32, i32* %index.addr, align 4, !dbg !19130
  %idxprom8 = sext i32 %17 to i64, !dbg !19127
  %arrayidx9 = getelementptr inbounds i32, i32* %16, i64 %idxprom8, !dbg !19127
  %18 = load i32, i32* %arrayidx9, align 4, !dbg !19127
  %19 = load i32, i32* %i, align 4, !dbg !19131
  %add = add nsw i32 %18, %19, !dbg !19132
  store i32 %add, i32* %n_index, align 4, !dbg !19126
  call void @llvm.dbg.declare(metadata float* %dir_dot, metadata !19133, metadata !DIExpression()), !dbg !19134
  %20 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19135
  %21 = load i32, i32* %n_index, align 4, !dbg !19136
  %idxprom10 = sext i32 %21 to i64, !dbg !19135
  %arrayidx11 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %20, i64 %idxprom10, !dbg !19135
  %dir = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx11, i32 0, i32 0, !dbg !19137
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !19135
  %22 = load float*, float** %force.addr, align 8, !dbg !19138
  %call = call float @dot_v3v3(float* %arraydecay, float* %22), !dbg !19139
  store float %call, float* %dir_dot, align 4, !dbg !19134
  %23 = load float, float* %dir_dot, align 4, !dbg !19140
  %24 = load float*, float** %closest_d.addr, align 8, !dbg !19142
  %arrayidx12 = getelementptr inbounds float, float* %24, i64 0, !dbg !19142
  %25 = load float, float* %arrayidx12, align 4, !dbg !19142
  %cmp13 = fcmp ogt float %23, %25, !dbg !19143
  br i1 %cmp13, label %land.lhs.true, label %if.end, !dbg !19144

land.lhs.true:                                    ; preds = %for.body
  %26 = load float, float* %dir_dot, align 4, !dbg !19145
  %cmp14 = fcmp ogt float %26, 0.000000e+00, !dbg !19146
  br i1 %cmp14, label %if.then, label %if.end, !dbg !19147

if.then:                                          ; preds = %land.lhs.true
  %27 = load float, float* %dir_dot, align 4, !dbg !19148
  %28 = load float*, float** %closest_d.addr, align 8, !dbg !19150
  %arrayidx15 = getelementptr inbounds float, float* %28, i64 0, !dbg !19150
  store float %27, float* %arrayidx15, align 4, !dbg !19151
  %29 = load i32, i32* %n_index, align 4, !dbg !19152
  %30 = load i32*, i32** %closest_id.addr, align 8, !dbg !19153
  %arrayidx16 = getelementptr inbounds i32, i32* %30, i64 0, !dbg !19153
  store i32 %29, i32* %arrayidx16, align 4, !dbg !19154
  br label %if.end, !dbg !19155

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !19156

for.inc:                                          ; preds = %if.end
  %31 = load i32, i32* %i, align 4, !dbg !19157
  %inc = add nsw i32 %31, 1, !dbg !19157
  store i32 %inc, i32* %i, align 4, !dbg !19157
  br label %for.cond, !dbg !19158, !llvm.loop !19159

for.end:                                          ; preds = %for.cond
  %32 = load float*, float** %closest_d.addr, align 8, !dbg !19161
  %arrayidx17 = getelementptr inbounds float, float* %32, i64 0, !dbg !19161
  %33 = load float, float* %arrayidx17, align 4, !dbg !19161
  %cmp18 = fcmp olt float %33, 0.000000e+00, !dbg !19163
  br i1 %cmp18, label %if.then19, label %if.end20, !dbg !19164

if.then19:                                        ; preds = %for.end
  br label %if.end130, !dbg !19165

if.end20:                                         ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !19166
  br label %for.cond21, !dbg !19168

for.cond21:                                       ; preds = %for.inc61, %if.end20
  %34 = load i32, i32* %i, align 4, !dbg !19169
  %35 = load i32, i32* %numOfNeighs, align 4, !dbg !19171
  %cmp22 = icmp slt i32 %34, %35, !dbg !19172
  br i1 %cmp22, label %for.body23, label %for.end63, !dbg !19173

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i32* %n_index24, metadata !19174, metadata !DIExpression()), !dbg !19176
  %36 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData.addr, align 8, !dbg !19177
  %adj_data25 = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %36, i32 0, i32 2, !dbg !19178
  %37 = load %struct.PaintAdjData*, %struct.PaintAdjData** %adj_data25, align 8, !dbg !19178
  %n_index26 = getelementptr inbounds %struct.PaintAdjData, %struct.PaintAdjData* %37, i32 0, i32 1, !dbg !19179
  %38 = load i32*, i32** %n_index26, align 8, !dbg !19179
  %39 = load i32, i32* %index.addr, align 4, !dbg !19180
  %idxprom27 = sext i32 %39 to i64, !dbg !19177
  %arrayidx28 = getelementptr inbounds i32, i32* %38, i64 %idxprom27, !dbg !19177
  %40 = load i32, i32* %arrayidx28, align 4, !dbg !19177
  %41 = load i32, i32* %i, align 4, !dbg !19181
  %add29 = add nsw i32 %40, %41, !dbg !19182
  store i32 %add29, i32* %n_index24, align 4, !dbg !19176
  call void @llvm.dbg.declare(metadata float* %dir_dot30, metadata !19183, metadata !DIExpression()), !dbg !19184
  %42 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19185
  %43 = load i32, i32* %n_index24, align 4, !dbg !19186
  %idxprom31 = sext i32 %43 to i64, !dbg !19185
  %arrayidx32 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %42, i64 %idxprom31, !dbg !19185
  %dir33 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx32, i32 0, i32 0, !dbg !19187
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %dir33, i64 0, i64 0, !dbg !19185
  %44 = load float*, float** %force.addr, align 8, !dbg !19188
  %call35 = call float @dot_v3v3(float* %arraydecay34, float* %44), !dbg !19189
  store float %call35, float* %dir_dot30, align 4, !dbg !19184
  call void @llvm.dbg.declare(metadata float* %closest_dot, metadata !19190, metadata !DIExpression()), !dbg !19191
  %45 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19192
  %46 = load i32, i32* %n_index24, align 4, !dbg !19193
  %idxprom36 = sext i32 %46 to i64, !dbg !19192
  %arrayidx37 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %45, i64 %idxprom36, !dbg !19192
  %dir38 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx37, i32 0, i32 0, !dbg !19194
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %dir38, i64 0, i64 0, !dbg !19192
  %47 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19195
  %48 = load i32*, i32** %closest_id.addr, align 8, !dbg !19196
  %arrayidx40 = getelementptr inbounds i32, i32* %48, i64 0, !dbg !19196
  %49 = load i32, i32* %arrayidx40, align 4, !dbg !19196
  %idxprom41 = sext i32 %49 to i64, !dbg !19195
  %arrayidx42 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %47, i64 %idxprom41, !dbg !19195
  %dir43 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx42, i32 0, i32 0, !dbg !19197
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %dir43, i64 0, i64 0, !dbg !19195
  %call45 = call float @dot_v3v3(float* %arraydecay39, float* %arraydecay44), !dbg !19198
  store float %call45, float* %closest_dot, align 4, !dbg !19191
  %50 = load i32, i32* %n_index24, align 4, !dbg !19199
  %51 = load i32*, i32** %closest_id.addr, align 8, !dbg !19201
  %arrayidx46 = getelementptr inbounds i32, i32* %51, i64 0, !dbg !19201
  %52 = load i32, i32* %arrayidx46, align 4, !dbg !19201
  %cmp47 = icmp eq i32 %50, %52, !dbg !19202
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !19203

if.then48:                                        ; preds = %for.body23
  br label %for.inc61, !dbg !19204

if.end49:                                         ; preds = %for.body23
  %53 = load float, float* %dir_dot30, align 4, !dbg !19205
  %54 = load float*, float** %closest_d.addr, align 8, !dbg !19207
  %arrayidx50 = getelementptr inbounds float, float* %54, i64 1, !dbg !19207
  %55 = load float, float* %arrayidx50, align 4, !dbg !19207
  %cmp51 = fcmp ogt float %53, %55, !dbg !19208
  br i1 %cmp51, label %land.lhs.true52, label %if.end60, !dbg !19209

land.lhs.true52:                                  ; preds = %if.end49
  %56 = load float, float* %closest_dot, align 4, !dbg !19210
  %57 = load float*, float** %closest_d.addr, align 8, !dbg !19211
  %arrayidx53 = getelementptr inbounds float, float* %57, i64 0, !dbg !19211
  %58 = load float, float* %arrayidx53, align 4, !dbg !19211
  %cmp54 = fcmp olt float %56, %58, !dbg !19212
  br i1 %cmp54, label %land.lhs.true55, label %if.end60, !dbg !19213

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %59 = load float, float* %dir_dot30, align 4, !dbg !19214
  %cmp56 = fcmp ogt float %59, 0.000000e+00, !dbg !19215
  br i1 %cmp56, label %if.then57, label %if.end60, !dbg !19216

if.then57:                                        ; preds = %land.lhs.true55
  %60 = load float, float* %dir_dot30, align 4, !dbg !19217
  %61 = load float*, float** %closest_d.addr, align 8, !dbg !19219
  %arrayidx58 = getelementptr inbounds float, float* %61, i64 1, !dbg !19219
  store float %60, float* %arrayidx58, align 4, !dbg !19220
  %62 = load i32, i32* %n_index24, align 4, !dbg !19221
  %63 = load i32*, i32** %closest_id.addr, align 8, !dbg !19222
  %arrayidx59 = getelementptr inbounds i32, i32* %63, i64 1, !dbg !19222
  store i32 %62, i32* %arrayidx59, align 4, !dbg !19223
  br label %if.end60, !dbg !19224

if.end60:                                         ; preds = %if.then57, %land.lhs.true55, %land.lhs.true52, %if.end49
  br label %for.inc61, !dbg !19225

for.inc61:                                        ; preds = %if.end60, %if.then48
  %64 = load i32, i32* %i, align 4, !dbg !19226
  %inc62 = add nsw i32 %64, 1, !dbg !19226
  store i32 %inc62, i32* %i, align 4, !dbg !19226
  br label %for.cond21, !dbg !19227, !llvm.loop !19228

for.end63:                                        ; preds = %for.cond21
  %65 = load i32*, i32** %closest_id.addr, align 8, !dbg !19230
  %arrayidx64 = getelementptr inbounds i32, i32* %65, i64 1, !dbg !19230
  %66 = load i32, i32* %arrayidx64, align 4, !dbg !19230
  %cmp65 = icmp ne i32 %66, -1, !dbg !19232
  br i1 %cmp65, label %if.then66, label %if.else124, !dbg !19233

if.then66:                                        ; preds = %for.end63
  call void @llvm.dbg.declare(metadata [3 x float]* %force_proj, metadata !19234, metadata !DIExpression()), !dbg !19236
  call void @llvm.dbg.declare(metadata [3 x float]* %tangent, metadata !19237, metadata !DIExpression()), !dbg !19238
  call void @llvm.dbg.declare(metadata float* %neigh_diff, metadata !19239, metadata !DIExpression()), !dbg !19240
  %67 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19241
  %68 = load i32*, i32** %closest_id.addr, align 8, !dbg !19242
  %arrayidx67 = getelementptr inbounds i32, i32* %68, i64 0, !dbg !19242
  %69 = load i32, i32* %arrayidx67, align 4, !dbg !19242
  %idxprom68 = sext i32 %69 to i64, !dbg !19241
  %arrayidx69 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %67, i64 %idxprom68, !dbg !19241
  %dir70 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx69, i32 0, i32 0, !dbg !19243
  %arraydecay71 = getelementptr inbounds [3 x float], [3 x float]* %dir70, i64 0, i64 0, !dbg !19241
  %70 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19244
  %71 = load i32*, i32** %closest_id.addr, align 8, !dbg !19245
  %arrayidx72 = getelementptr inbounds i32, i32* %71, i64 1, !dbg !19245
  %72 = load i32, i32* %arrayidx72, align 4, !dbg !19245
  %idxprom73 = sext i32 %72 to i64, !dbg !19244
  %arrayidx74 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %70, i64 %idxprom73, !dbg !19244
  %dir75 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx74, i32 0, i32 0, !dbg !19246
  %arraydecay76 = getelementptr inbounds [3 x float], [3 x float]* %dir75, i64 0, i64 0, !dbg !19244
  %call77 = call float @dot_v3v3(float* %arraydecay71, float* %arraydecay76), !dbg !19247
  %call78 = call float @acosf(float %call77) #7, !dbg !19248
  store float %call78, float* %neigh_diff, align 4, !dbg !19240
  call void @llvm.dbg.declare(metadata float* %force_intersect, metadata !19249, metadata !DIExpression()), !dbg !19250
  call void @llvm.dbg.declare(metadata float* %temp, metadata !19251, metadata !DIExpression()), !dbg !19252
  %arraydecay79 = getelementptr inbounds [3 x float], [3 x float]* %tangent, i64 0, i64 0, !dbg !19253
  %73 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19254
  %74 = load i32*, i32** %closest_id.addr, align 8, !dbg !19255
  %arrayidx80 = getelementptr inbounds i32, i32* %74, i64 0, !dbg !19255
  %75 = load i32, i32* %arrayidx80, align 4, !dbg !19255
  %idxprom81 = sext i32 %75 to i64, !dbg !19254
  %arrayidx82 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %73, i64 %idxprom81, !dbg !19254
  %dir83 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx82, i32 0, i32 0, !dbg !19256
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %dir83, i64 0, i64 0, !dbg !19254
  %76 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19257
  %77 = load i32*, i32** %closest_id.addr, align 8, !dbg !19258
  %arrayidx85 = getelementptr inbounds i32, i32* %77, i64 1, !dbg !19258
  %78 = load i32, i32* %arrayidx85, align 4, !dbg !19258
  %idxprom86 = sext i32 %78 to i64, !dbg !19257
  %arrayidx87 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %76, i64 %idxprom86, !dbg !19257
  %dir88 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx87, i32 0, i32 0, !dbg !19259
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %dir88, i64 0, i64 0, !dbg !19257
  call void @cross_v3_v3v3(float* %arraydecay79, float* %arraydecay84, float* %arraydecay89), !dbg !19260
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %tangent, i64 0, i64 0, !dbg !19261
  %call91 = call float @normalize_v3(float* %arraydecay90), !dbg !19262
  %79 = load float*, float** %force.addr, align 8, !dbg !19263
  %arraydecay92 = getelementptr inbounds [3 x float], [3 x float]* %tangent, i64 0, i64 0, !dbg !19264
  %call93 = call float @dot_v3v3(float* %79, float* %arraydecay92), !dbg !19265
  store float %call93, float* %force_intersect, align 4, !dbg !19266
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %force_proj, i64 0, i64 0, !dbg !19267
  %80 = load float*, float** %force.addr, align 8, !dbg !19268
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %tangent, i64 0, i64 0, !dbg !19269
  %81 = load float, float* %force_intersect, align 4, !dbg !19270
  %mul = fmul float -1.000000e+00, %81, !dbg !19271
  call void @madd_v3_v3v3fl(float* %arraydecay94, float* %80, float* %arraydecay95, float %mul), !dbg !19272
  %arraydecay96 = getelementptr inbounds [3 x float], [3 x float]* %force_proj, i64 0, i64 0, !dbg !19273
  %call97 = call float @normalize_v3(float* %arraydecay96), !dbg !19274
  %82 = load %struct.BakeAdjPoint*, %struct.BakeAdjPoint** %bNeighs, align 8, !dbg !19275
  %83 = load i32*, i32** %closest_id.addr, align 8, !dbg !19276
  %arrayidx98 = getelementptr inbounds i32, i32* %83, i64 0, !dbg !19276
  %84 = load i32, i32* %arrayidx98, align 4, !dbg !19276
  %idxprom99 = sext i32 %84 to i64, !dbg !19275
  %arrayidx100 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %82, i64 %idxprom99, !dbg !19275
  %dir101 = getelementptr inbounds %struct.BakeAdjPoint, %struct.BakeAdjPoint* %arrayidx100, i32 0, i32 0, !dbg !19277
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %dir101, i64 0, i64 0, !dbg !19275
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %force_proj, i64 0, i64 0, !dbg !19278
  %call104 = call float @dot_v3v3(float* %arraydecay102, float* %arraydecay103), !dbg !19279
  store float %call104, float* %temp, align 4, !dbg !19280
  %85 = load float, float* %temp, align 4, !dbg !19281
  %cmp105 = fcmp olt float %85, -1.000000e+00, !dbg !19281
  br i1 %cmp105, label %if.then106, label %if.else, !dbg !19284

if.then106:                                       ; preds = %if.then66
  store float -1.000000e+00, float* %temp, align 4, !dbg !19281
  br label %if.end110, !dbg !19281

if.else:                                          ; preds = %if.then66
  %86 = load float, float* %temp, align 4, !dbg !19285
  %cmp107 = fcmp ogt float %86, 1.000000e+00, !dbg !19285
  br i1 %cmp107, label %if.then108, label %if.end109, !dbg !19281

if.then108:                                       ; preds = %if.else
  store float 1.000000e+00, float* %temp, align 4, !dbg !19285
  br label %if.end109, !dbg !19285

if.end109:                                        ; preds = %if.then108, %if.else
  br label %if.end110

if.end110:                                        ; preds = %if.end109, %if.then106
  %87 = load float, float* %temp, align 4, !dbg !19287
  %call111 = call float @acosf(float %87) #7, !dbg !19288
  %88 = load float, float* %neigh_diff, align 4, !dbg !19289
  %div = fdiv float %call111, %88, !dbg !19290
  %89 = load float*, float** %closest_d.addr, align 8, !dbg !19291
  %arrayidx112 = getelementptr inbounds float, float* %89, i64 1, !dbg !19291
  store float %div, float* %arrayidx112, align 4, !dbg !19292
  %90 = load float*, float** %closest_d.addr, align 8, !dbg !19293
  %arrayidx113 = getelementptr inbounds float, float* %90, i64 1, !dbg !19293
  %91 = load float, float* %arrayidx113, align 4, !dbg !19293
  %sub = fsub float 1.000000e+00, %91, !dbg !19294
  %92 = load float*, float** %closest_d.addr, align 8, !dbg !19295
  %arrayidx114 = getelementptr inbounds float, float* %92, i64 0, !dbg !19295
  store float %sub, float* %arrayidx114, align 4, !dbg !19296
  %93 = load float, float* %force_intersect, align 4, !dbg !19297
  %94 = call float @llvm.fabs.f32(float %93), !dbg !19298
  store float %94, float* %temp, align 4, !dbg !19299
  %95 = load float, float* %temp, align 4, !dbg !19300
  %cmp115 = fcmp olt float %95, 0.000000e+00, !dbg !19300
  br i1 %cmp115, label %if.then116, label %if.else117, !dbg !19303

if.then116:                                       ; preds = %if.end110
  store float 0.000000e+00, float* %temp, align 4, !dbg !19300
  br label %if.end121, !dbg !19300

if.else117:                                       ; preds = %if.end110
  %96 = load float, float* %temp, align 4, !dbg !19304
  %cmp118 = fcmp ogt float %96, 1.000000e+00, !dbg !19304
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !19300

if.then119:                                       ; preds = %if.else117
  store float 1.000000e+00, float* %temp, align 4, !dbg !19304
  br label %if.end120, !dbg !19304

if.end120:                                        ; preds = %if.then119, %if.else117
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then116
  %97 = load float*, float** %closest_d.addr, align 8, !dbg !19306
  %98 = load float, float* %temp, align 4, !dbg !19307
  %call122 = call float @acosf(float %98) #7, !dbg !19308
  %div123 = fdiv float %call122, 0x3FF921FB60000000, !dbg !19309
  call void @mul_v2_fl(float* %97, float %div123), !dbg !19310
  br label %if.end130, !dbg !19311

if.else124:                                       ; preds = %for.end63
  %99 = load float*, float** %closest_d.addr, align 8, !dbg !19312
  %arrayidx125 = getelementptr inbounds float, float* %99, i64 0, !dbg !19312
  %100 = load float, float* %arrayidx125, align 4, !dbg !19312
  %call126 = call float @acosf(float %100) #7, !dbg !19314
  %div127 = fdiv float %call126, 0x3FF921FB60000000, !dbg !19315
  %sub128 = fsub float 1.000000e+00, %div127, !dbg !19316
  %101 = load float*, float** %closest_d.addr, align 8, !dbg !19317
  %arrayidx129 = getelementptr inbounds float, float* %101, i64 0, !dbg !19317
  store float %sub128, float* %arrayidx129, align 4, !dbg !19318
  br label %if.end130

if.end130:                                        ; preds = %if.then19, %if.else124, %if.end121
  ret void, !dbg !19319
}

; Function Attrs: noinline nounwind uwtable
define internal float @mixColors(float* %a_color, float %a_weight, float* %b_color, float %b_weight, float %ratio) #0 !dbg !19320 {
entry:
  %retval = alloca float, align 4
  %a_color.addr = alloca float*, align 8
  %a_weight.addr = alloca float, align 4
  %b_color.addr = alloca float*, align 8
  %b_weight.addr = alloca float, align 4
  %ratio.addr = alloca float, align 4
  %weight_ratio = alloca float, align 4
  %factor = alloca float, align 4
  store float* %a_color, float** %a_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a_color.addr, metadata !19323, metadata !DIExpression()), !dbg !19324
  store float %a_weight, float* %a_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a_weight.addr, metadata !19325, metadata !DIExpression()), !dbg !19326
  store float* %b_color, float** %b_color.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b_color.addr, metadata !19327, metadata !DIExpression()), !dbg !19328
  store float %b_weight, float* %b_weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b_weight.addr, metadata !19329, metadata !DIExpression()), !dbg !19330
  store float %ratio, float* %ratio.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ratio.addr, metadata !19331, metadata !DIExpression()), !dbg !19332
  call void @llvm.dbg.declare(metadata float* %weight_ratio, metadata !19333, metadata !DIExpression()), !dbg !19334
  call void @llvm.dbg.declare(metadata float* %factor, metadata !19335, metadata !DIExpression()), !dbg !19336
  %0 = load float, float* %b_weight.addr, align 4, !dbg !19337
  %tobool = fcmp une float %0, 0.000000e+00, !dbg !19337
  br i1 %tobool, label %if.then, label %if.else, !dbg !19339

if.then:                                          ; preds = %entry
  %1 = load float, float* %a_weight.addr, align 4, !dbg !19340
  %tobool1 = fcmp une float %1, 0.000000e+00, !dbg !19340
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !19343

if.then2:                                         ; preds = %if.then
  %2 = load float*, float** %a_color.addr, align 8, !dbg !19344
  %3 = load float*, float** %b_color.addr, align 8, !dbg !19346
  call void @copy_v3_v3(float* %2, float* %3), !dbg !19347
  %4 = load float, float* %b_weight.addr, align 4, !dbg !19348
  %5 = load float, float* %ratio.addr, align 4, !dbg !19349
  %mul = fmul float %4, %5, !dbg !19350
  store float %mul, float* %retval, align 4, !dbg !19351
  br label %return, !dbg !19351

if.end:                                           ; preds = %if.then
  %6 = load float, float* %b_weight.addr, align 4, !dbg !19352
  %7 = load float, float* %a_weight.addr, align 4, !dbg !19353
  %8 = load float, float* %b_weight.addr, align 4, !dbg !19354
  %add = fadd float %7, %8, !dbg !19355
  %div = fdiv float %6, %add, !dbg !19356
  store float %div, float* %weight_ratio, align 4, !dbg !19357
  br label %if.end4, !dbg !19358

if.else:                                          ; preds = %entry
  %9 = load float, float* %a_weight.addr, align 4, !dbg !19359
  %10 = load float, float* %ratio.addr, align 4, !dbg !19361
  %sub = fsub float 1.000000e+00, %10, !dbg !19362
  %mul3 = fmul float %9, %sub, !dbg !19363
  store float %mul3, float* %retval, align 4, !dbg !19364
  br label %return, !dbg !19364

if.end4:                                          ; preds = %if.end
  %11 = load float, float* %ratio.addr, align 4, !dbg !19365
  %cmp = fcmp ole float %11, 5.000000e-01, !dbg !19367
  br i1 %cmp, label %if.then5, label %if.else8, !dbg !19368

if.then5:                                         ; preds = %if.end4
  %12 = load float, float* %weight_ratio, align 4, !dbg !19369
  %13 = load float, float* %ratio.addr, align 4, !dbg !19371
  %mul6 = fmul float %13, 2.000000e+00, !dbg !19372
  %mul7 = fmul float %12, %mul6, !dbg !19373
  store float %mul7, float* %factor, align 4, !dbg !19374
  br label %if.end14, !dbg !19375

if.else8:                                         ; preds = %if.end4
  %14 = load float, float* %ratio.addr, align 4, !dbg !19376
  %mul9 = fmul float %14, 2.000000e+00, !dbg !19378
  %sub10 = fsub float %mul9, 1.000000e+00, !dbg !19379
  store float %sub10, float* %ratio.addr, align 4, !dbg !19380
  %15 = load float, float* %weight_ratio, align 4, !dbg !19381
  %16 = load float, float* %ratio.addr, align 4, !dbg !19382
  %sub11 = fsub float 1.000000e+00, %16, !dbg !19383
  %mul12 = fmul float %15, %sub11, !dbg !19384
  %17 = load float, float* %ratio.addr, align 4, !dbg !19385
  %add13 = fadd float %mul12, %17, !dbg !19386
  store float %add13, float* %factor, align 4, !dbg !19387
  br label %if.end14

if.end14:                                         ; preds = %if.else8, %if.then5
  %18 = load float*, float** %a_color.addr, align 8, !dbg !19388
  %19 = load float*, float** %a_color.addr, align 8, !dbg !19389
  %20 = load float*, float** %b_color.addr, align 8, !dbg !19390
  %21 = load float, float* %factor, align 4, !dbg !19391
  call void @interp_v3_v3v3(float* %18, float* %19, float* %20, float %21), !dbg !19392
  %22 = load float, float* %factor, align 4, !dbg !19393
  %sub15 = fsub float 1.000000e+00, %22, !dbg !19394
  %23 = load float, float* %a_weight.addr, align 4, !dbg !19395
  %mul16 = fmul float %sub15, %23, !dbg !19396
  %24 = load float, float* %factor, align 4, !dbg !19397
  %25 = load float, float* %b_weight.addr, align 4, !dbg !19398
  %mul17 = fmul float %24, %25, !dbg !19399
  %add18 = fadd float %mul16, %mul17, !dbg !19400
  store float %add18, float* %retval, align 4, !dbg !19401
  br label %return, !dbg !19401

return:                                           ; preds = %if.end14, %if.else, %if.then2
  %26 = load float, float* %retval, align 4, !dbg !19402
  ret float %26, !dbg !19402
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #3

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !19403 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !19404, metadata !DIExpression()), !dbg !19405
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !19406, metadata !DIExpression()), !dbg !19407
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !19408, metadata !DIExpression()), !dbg !19409
  %0 = load float*, float** %a.addr, align 8, !dbg !19410
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !19410
  %1 = load float, float* %arrayidx, align 4, !dbg !19410
  %2 = load float*, float** %b.addr, align 8, !dbg !19411
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !19411
  %3 = load float, float* %arrayidx1, align 4, !dbg !19411
  %mul = fmul float %1, %3, !dbg !19412
  %4 = load float*, float** %a.addr, align 8, !dbg !19413
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !19413
  %5 = load float, float* %arrayidx2, align 4, !dbg !19413
  %6 = load float*, float** %b.addr, align 8, !dbg !19414
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !19414
  %7 = load float, float* %arrayidx3, align 4, !dbg !19414
  %mul4 = fmul float %5, %7, !dbg !19415
  %sub = fsub float %mul, %mul4, !dbg !19416
  %8 = load float*, float** %r.addr, align 8, !dbg !19417
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !19417
  store float %sub, float* %arrayidx5, align 4, !dbg !19418
  %9 = load float*, float** %a.addr, align 8, !dbg !19419
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !19419
  %10 = load float, float* %arrayidx6, align 4, !dbg !19419
  %11 = load float*, float** %b.addr, align 8, !dbg !19420
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !19420
  %12 = load float, float* %arrayidx7, align 4, !dbg !19420
  %mul8 = fmul float %10, %12, !dbg !19421
  %13 = load float*, float** %a.addr, align 8, !dbg !19422
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !19422
  %14 = load float, float* %arrayidx9, align 4, !dbg !19422
  %15 = load float*, float** %b.addr, align 8, !dbg !19423
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !19423
  %16 = load float, float* %arrayidx10, align 4, !dbg !19423
  %mul11 = fmul float %14, %16, !dbg !19424
  %sub12 = fsub float %mul8, %mul11, !dbg !19425
  %17 = load float*, float** %r.addr, align 8, !dbg !19426
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !19426
  store float %sub12, float* %arrayidx13, align 4, !dbg !19427
  %18 = load float*, float** %a.addr, align 8, !dbg !19428
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !19428
  %19 = load float, float* %arrayidx14, align 4, !dbg !19428
  %20 = load float*, float** %b.addr, align 8, !dbg !19429
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !19429
  %21 = load float, float* %arrayidx15, align 4, !dbg !19429
  %mul16 = fmul float %19, %21, !dbg !19430
  %22 = load float*, float** %a.addr, align 8, !dbg !19431
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !19431
  %23 = load float, float* %arrayidx17, align 4, !dbg !19431
  %24 = load float*, float** %b.addr, align 8, !dbg !19432
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !19432
  %25 = load float, float* %arrayidx18, align 4, !dbg !19432
  %mul19 = fmul float %23, %25, !dbg !19433
  %sub20 = fsub float %mul16, %mul19, !dbg !19434
  %26 = load float*, float** %r.addr, align 8, !dbg !19435
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !19435
  store float %sub20, float* %arrayidx21, align 4, !dbg !19436
  ret void, !dbg !19437
}

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: noinline nounwind uwtable
define internal float @getSurfaceDimension(%struct.PaintSurfaceData* %sData) #0 !dbg !19438 {
entry:
  %sData.addr = alloca %struct.PaintSurfaceData*, align 8
  %mb = alloca %struct.Bounds3D*, align 8
  store %struct.PaintSurfaceData* %sData, %struct.PaintSurfaceData** %sData.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PaintSurfaceData** %sData.addr, metadata !19441, metadata !DIExpression()), !dbg !19442
  call void @llvm.dbg.declare(metadata %struct.Bounds3D** %mb, metadata !19443, metadata !DIExpression()), !dbg !19444
  %0 = load %struct.PaintSurfaceData*, %struct.PaintSurfaceData** %sData.addr, align 8, !dbg !19445
  %bData = getelementptr inbounds %struct.PaintSurfaceData, %struct.PaintSurfaceData* %0, i32 0, i32 3, !dbg !19446
  %1 = load %struct.PaintBakeData*, %struct.PaintBakeData** %bData, align 8, !dbg !19446
  %mesh_bounds = getelementptr inbounds %struct.PaintBakeData, %struct.PaintBakeData* %1, i32 0, i32 4, !dbg !19447
  store %struct.Bounds3D* %mesh_bounds, %struct.Bounds3D** %mb, align 8, !dbg !19444
  %2 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19448
  %max = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %2, i32 0, i32 2, !dbg !19449
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !19448
  %3 = load float, float* %arrayidx, align 4, !dbg !19448
  %4 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19450
  %min = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %4, i32 0, i32 1, !dbg !19451
  %arrayidx1 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !19450
  %5 = load float, float* %arrayidx1, align 4, !dbg !19450
  %sub = fsub float %3, %5, !dbg !19452
  %6 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19453
  %max2 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %6, i32 0, i32 2, !dbg !19454
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %max2, i64 0, i64 1, !dbg !19453
  %7 = load float, float* %arrayidx3, align 4, !dbg !19453
  %8 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19455
  %min4 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %8, i32 0, i32 1, !dbg !19456
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %min4, i64 0, i64 1, !dbg !19455
  %9 = load float, float* %arrayidx5, align 4, !dbg !19455
  %sub6 = fsub float %7, %9, !dbg !19457
  %10 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19458
  %max7 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %10, i32 0, i32 2, !dbg !19459
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %max7, i64 0, i64 2, !dbg !19458
  %11 = load float, float* %arrayidx8, align 4, !dbg !19458
  %12 = load %struct.Bounds3D*, %struct.Bounds3D** %mb, align 8, !dbg !19460
  %min9 = getelementptr inbounds %struct.Bounds3D, %struct.Bounds3D* %12, i32 0, i32 1, !dbg !19461
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %min9, i64 0, i64 2, !dbg !19460
  %13 = load float, float* %arrayidx10, align 4, !dbg !19460
  %sub11 = fsub float %11, %13, !dbg !19462
  %call = call float @max_fff(float %sub, float %sub6, float %sub11), !dbg !19463
  ret float %call, !dbg !19464
}

declare dso_local %struct.ListBase* @pdInitEffectors(%struct.Scene*, %struct.Object*, %struct.ParticleSystem*, %struct.EffectorWeights*, i8 zeroext) #2

declare dso_local void @pd_point_from_loc(%struct.Scene*, float*, float*, i32, %struct.EffectedPoint*) #2

declare dso_local void @pdDoEffectors(%struct.ListBase*, %struct.ListBase*, %struct.EffectorWeights*, %struct.EffectedPoint*, float*, float*) #2

declare dso_local void @pdEndEffectors(%struct.ListBase**) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3304, !3305, !3306}
!llvm.ident = !{!3307}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "neighX", scope: !2, file: !3, line: 105, type: !3298, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !182, globals: !3295, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/dynamicpaint.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !12, !17, !21, !27, !33, !77, !82, !134, !145, !151, !163, !169}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !6, line: 128, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11}
!9 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !6, line: 164, baseType: !7, size: 32, elements: !13)
!13 = !{!14, !15, !16}
!14 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!17 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !6, line: 159, baseType: !7, size: 32, elements: !18)
!18 = !{!19, !20}
!19 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!20 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!21 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !6, line: 134, baseType: !7, size: 32, elements: !22)
!22 = !{!23, !24, !25, !26}
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!27 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !6, line: 152, baseType: !7, size: 32, elements: !28)
!28 = !{!29, !30, !31, !32}
!29 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!31 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!32 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!33 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !34, line: 76, baseType: !7, size: 32, elements: !35)
!34 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76}
!36 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!37 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!40 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!42 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!43 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!44 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!45 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!46 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!47 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!48 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!49 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!50 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!51 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!52 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!53 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!54 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!55 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!56 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!57 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!58 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!59 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!60 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!61 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!62 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!63 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!64 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!65 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!66 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!67 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!68 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!69 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!70 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!71 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!72 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!77 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !78, line: 1143, baseType: !7, size: 32, elements: !79)
!78 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!79 = !{!80, !81}
!80 = !DIEnumerator(name: "MOD_DYNAMICPAINT_TYPE_CANVAS", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "MOD_DYNAMICPAINT_TYPE_BRUSH", value: 2, isUnsigned: true)
!82 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierType", file: !78, line: 35, baseType: !7, size: 32, elements: !83)
!83 = !{!84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!84 = !DIEnumerator(name: "eModifierType_None", value: 0, isUnsigned: true)
!85 = !DIEnumerator(name: "eModifierType_Subsurf", value: 1, isUnsigned: true)
!86 = !DIEnumerator(name: "eModifierType_Lattice", value: 2, isUnsigned: true)
!87 = !DIEnumerator(name: "eModifierType_Curve", value: 3, isUnsigned: true)
!88 = !DIEnumerator(name: "eModifierType_Build", value: 4, isUnsigned: true)
!89 = !DIEnumerator(name: "eModifierType_Mirror", value: 5, isUnsigned: true)
!90 = !DIEnumerator(name: "eModifierType_Decimate", value: 6, isUnsigned: true)
!91 = !DIEnumerator(name: "eModifierType_Wave", value: 7, isUnsigned: true)
!92 = !DIEnumerator(name: "eModifierType_Armature", value: 8, isUnsigned: true)
!93 = !DIEnumerator(name: "eModifierType_Hook", value: 9, isUnsigned: true)
!94 = !DIEnumerator(name: "eModifierType_Softbody", value: 10, isUnsigned: true)
!95 = !DIEnumerator(name: "eModifierType_Boolean", value: 11, isUnsigned: true)
!96 = !DIEnumerator(name: "eModifierType_Array", value: 12, isUnsigned: true)
!97 = !DIEnumerator(name: "eModifierType_EdgeSplit", value: 13, isUnsigned: true)
!98 = !DIEnumerator(name: "eModifierType_Displace", value: 14, isUnsigned: true)
!99 = !DIEnumerator(name: "eModifierType_UVProject", value: 15, isUnsigned: true)
!100 = !DIEnumerator(name: "eModifierType_Smooth", value: 16, isUnsigned: true)
!101 = !DIEnumerator(name: "eModifierType_Cast", value: 17, isUnsigned: true)
!102 = !DIEnumerator(name: "eModifierType_MeshDeform", value: 18, isUnsigned: true)
!103 = !DIEnumerator(name: "eModifierType_ParticleSystem", value: 19, isUnsigned: true)
!104 = !DIEnumerator(name: "eModifierType_ParticleInstance", value: 20, isUnsigned: true)
!105 = !DIEnumerator(name: "eModifierType_Explode", value: 21, isUnsigned: true)
!106 = !DIEnumerator(name: "eModifierType_Cloth", value: 22, isUnsigned: true)
!107 = !DIEnumerator(name: "eModifierType_Collision", value: 23, isUnsigned: true)
!108 = !DIEnumerator(name: "eModifierType_Bevel", value: 24, isUnsigned: true)
!109 = !DIEnumerator(name: "eModifierType_Shrinkwrap", value: 25, isUnsigned: true)
!110 = !DIEnumerator(name: "eModifierType_Fluidsim", value: 26, isUnsigned: true)
!111 = !DIEnumerator(name: "eModifierType_Mask", value: 27, isUnsigned: true)
!112 = !DIEnumerator(name: "eModifierType_SimpleDeform", value: 28, isUnsigned: true)
!113 = !DIEnumerator(name: "eModifierType_Multires", value: 29, isUnsigned: true)
!114 = !DIEnumerator(name: "eModifierType_Surface", value: 30, isUnsigned: true)
!115 = !DIEnumerator(name: "eModifierType_Smoke", value: 31, isUnsigned: true)
!116 = !DIEnumerator(name: "eModifierType_ShapeKey", value: 32, isUnsigned: true)
!117 = !DIEnumerator(name: "eModifierType_Solidify", value: 33, isUnsigned: true)
!118 = !DIEnumerator(name: "eModifierType_Screw", value: 34, isUnsigned: true)
!119 = !DIEnumerator(name: "eModifierType_Warp", value: 35, isUnsigned: true)
!120 = !DIEnumerator(name: "eModifierType_WeightVGEdit", value: 36, isUnsigned: true)
!121 = !DIEnumerator(name: "eModifierType_WeightVGMix", value: 37, isUnsigned: true)
!122 = !DIEnumerator(name: "eModifierType_WeightVGProximity", value: 38, isUnsigned: true)
!123 = !DIEnumerator(name: "eModifierType_Ocean", value: 39, isUnsigned: true)
!124 = !DIEnumerator(name: "eModifierType_DynamicPaint", value: 40, isUnsigned: true)
!125 = !DIEnumerator(name: "eModifierType_Remesh", value: 41, isUnsigned: true)
!126 = !DIEnumerator(name: "eModifierType_Skin", value: 42, isUnsigned: true)
!127 = !DIEnumerator(name: "eModifierType_LaplacianSmooth", value: 43, isUnsigned: true)
!128 = !DIEnumerator(name: "eModifierType_Triangulate", value: 44, isUnsigned: true)
!129 = !DIEnumerator(name: "eModifierType_UVWarp", value: 45, isUnsigned: true)
!130 = !DIEnumerator(name: "eModifierType_MeshCache", value: 46, isUnsigned: true)
!131 = !DIEnumerator(name: "eModifierType_LaplacianDeform", value: 47, isUnsigned: true)
!132 = !DIEnumerator(name: "eModifierType_Wireframe", value: 48, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MODIFIER_TYPES", value: 49, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ModifierMode", file: !78, line: 88, baseType: !135, size: 32, elements: !136)
!135 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!136 = !{!137, !138, !139, !140, !141, !142, !143, !144}
!137 = !DIEnumerator(name: "eModifierMode_Realtime", value: 1)
!138 = !DIEnumerator(name: "eModifierMode_Render", value: 2)
!139 = !DIEnumerator(name: "eModifierMode_Editmode", value: 4)
!140 = !DIEnumerator(name: "eModifierMode_OnCage", value: 8)
!141 = !DIEnumerator(name: "eModifierMode_Expanded", value: 16)
!142 = !DIEnumerator(name: "eModifierMode_Virtual", value: 32)
!143 = !DIEnumerator(name: "eModifierMode_ApplyOnSpline", value: 64)
!144 = !DIEnumerator(name: "eModifierMode_DisableTemporary", value: -2147483648)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eAnimData_Recalc", file: !146, line: 899, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !{!148, !149, !150}
!148 = !DIEnumerator(name: "ADT_RECALC_DRIVERS", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "ADT_RECALC_ANIM", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "ADT_RECALC_ALL", value: 3, isUnsigned: true)
!151 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 377, baseType: !7, size: 32, elements: !153)
!152 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!153 = !{!154, !155, !156, !157, !158, !159, !160, !161, !162}
!154 = !DIEnumerator(name: "PARTYPE", value: 15, isUnsigned: true)
!155 = !DIEnumerator(name: "PAROBJECT", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "PARCURVE", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "PARKEY", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "PARSKEL", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "PARVERT1", value: 5, isUnsigned: true)
!160 = !DIEnumerator(name: "PARVERT3", value: 6, isUnsigned: true)
!161 = !DIEnumerator(name: "PARBONE", value: 7, isUnsigned: true)
!162 = !DIEnumerator(name: "PARSLOW", value: 16, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 519, baseType: !7, size: 32, elements: !164)
!164 = !{!165, !166, !167, !168}
!165 = !DIEnumerator(name: "OB_RECALC_OB", value: 1, isUnsigned: true)
!166 = !DIEnumerator(name: "OB_RECALC_DATA", value: 2, isUnsigned: true)
!167 = !DIEnumerator(name: "OB_RECALC_TIME", value: 4, isUnsigned: true)
!168 = !DIEnumerator(name: "OB_RECALC_ALL", value: 7, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !152, line: 339, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181}
!171 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!176 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!177 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!178 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!179 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!180 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!181 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!182 = !{!183, !210, !211, !212, !213, !207, !221, !222, !233, !234, !242, !135, !904, !271, !3146, !3241, !188, !3242, !874, !3244}
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImgSeqFormatData", file: !3, line: 218, baseType: !185)
!185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImgSeqFormatData", file: !3, line: 215, size: 128, elements: !186)
!186 = !{!187, !200}
!187 = !DIDerivedType(tag: DW_TAG_member, name: "uv_p", scope: !185, file: !3, line: 216, baseType: !188, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!189 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintUVPoint", file: !3, line: 213, baseType: !190)
!190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintUVPoint", file: !3, line: 205, size: 224, elements: !191)
!191 = !{!192, !193, !194, !195, !196, !197, !198}
!192 = !DIDerivedType(tag: DW_TAG_member, name: "face_index", scope: !190, file: !3, line: 207, baseType: !7, size: 32)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_index", scope: !190, file: !3, line: 207, baseType: !7, size: 32, offset: 32)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !190, file: !3, line: 208, baseType: !7, size: 32, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !190, file: !3, line: 208, baseType: !7, size: 32, offset: 96)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !190, file: !3, line: 208, baseType: !7, size: 32, offset: 128)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "neighbour_pixel", scope: !190, file: !3, line: 210, baseType: !7, size: 32, offset: 160)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "quad", scope: !190, file: !3, line: 212, baseType: !199, size: 16, offset: 192)
!199 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "barycentricWeights", scope: !185, file: !3, line: 217, baseType: !201, size: 64, offset: 64)
!201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_typedef, name: "Vec3f", file: !3, line: 164, baseType: !203)
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Vec3f", file: !3, line: 162, size: 96, elements: !204)
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !203, file: !3, line: 163, baseType: !206, size: 96)
!206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 96, elements: !208)
!207 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!208 = !{!209}
!209 = !DISubrange(count: 3)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !214, size: 64)
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bounds2D", file: !3, line: 142, size: 128, elements: !215)
!215 = !{!216, !220}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !214, file: !3, line: 143, baseType: !217, size: 64)
!217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 64, elements: !218)
!218 = !{!219}
!219 = !DISubrange(count: 2)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !214, file: !3, line: 143, baseType: !217, size: 64, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !223, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintPoint", file: !224, line: 56, baseType: !225)
!224 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_dynamicpaint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintPoint", file: !224, line: 46, size: 320, elements: !226)
!226 = !{!227, !228, !229, !230, !231, !232}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "e_color", scope: !225, file: !224, line: 50, baseType: !206, size: 96)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "e_alpha", scope: !225, file: !224, line: 51, baseType: !207, size: 32, offset: 96)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "wetness", scope: !225, file: !224, line: 52, baseType: !207, size: 32, offset: 128)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !225, file: !224, line: 53, baseType: !199, size: 16, offset: 160)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !225, file: !224, line: 54, baseType: !206, size: 96, offset: 192)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !225, file: !224, line: 55, baseType: !207, size: 32, offset: 288)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintWavePoint", file: !224, line: 65, baseType: !236)
!236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintWavePoint", file: !224, line: 59, size: 128, elements: !237)
!237 = !{!238, !239, !240, !241}
!238 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !236, file: !224, line: 61, baseType: !207, size: 32)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "velocity", scope: !236, file: !224, line: 62, baseType: !207, size: 32, offset: 32)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "brush_isect", scope: !236, file: !224, line: 63, baseType: !207, size: 32, offset: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !236, file: !224, line: 64, baseType: !199, size: 16, offset: 96)
!242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintSurface", file: !244, line: 136, baseType: !245)
!244 = !DIFile(filename: "blender/source/blender/makesdna/DNA_dynamicpaint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintSurface", file: !244, line: 86, size: 12480, elements: !246)
!246 = !{!247, !249, !250, !3130, !3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222, !3223, !3224, !3225, !3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !245, file: !244, line: 88, baseType: !248, size: 64)
!248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !245, file: !244, line: 88, baseType: !248, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !245, file: !244, line: 89, baseType: !251, size: 64, offset: 128)
!251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintCanvasSettings", file: !244, line: 146, size: 832, elements: !253)
!253 = !{!254, !3124, !3125, !3126, !3127, !3128, !3129}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !252, file: !244, line: 147, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintModifierData", file: !78, line: 1133, size: 1088, elements: !257)
!257 = !{!258, !3093, !3094, !3122, !3123}
!258 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !256, file: !78, line: 1134, baseType: !259, size: 896)
!259 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !78, line: 110, baseType: !260)
!260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !78, line: 99, size: 896, elements: !261)
!261 = !{!262, !264, !265, !266, !267, !268, !269, !274, !3092}
!262 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !260, file: !78, line: 100, baseType: !263, size: 64)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !260, file: !78, line: 100, baseType: !263, size: 64, offset: 64)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !260, file: !78, line: 102, baseType: !135, size: 32, offset: 128)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !260, file: !78, line: 102, baseType: !135, size: 32, offset: 160)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !260, file: !78, line: 103, baseType: !135, size: 32, offset: 192)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !260, file: !78, line: 103, baseType: !135, size: 32, offset: 224)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !260, file: !78, line: 104, baseType: !270, size: 512, offset: 256)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 512, elements: !272)
!271 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!272 = !{!273}
!273 = !DISubrange(count: 64)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !260, file: !78, line: 107, baseType: !275, size: 64, offset: 768)
!275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !277, line: 1216, size: 39680, elements: !278)
!277 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!278 = !{!279, !344, !413, !2467, !2470, !2471, !2472, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2499, !2720, !2723, !2965, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2987, !2988, !2989, !2990, !2991, !2999, !3065, !3072, !3073, !3080, !3084, !3085, !3086, !3087, !3088, !3089}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !276, file: !277, line: 1217, baseType: !280, size: 960)
!280 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !281, line: 130, baseType: !282)
!281 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !281, line: 117, size: 960, elements: !283)
!283 = !{!284, !285, !286, !288, !307, !311, !312, !313, !314, !315}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !282, file: !281, line: 118, baseType: !221, size: 64)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !282, file: !281, line: 118, baseType: !221, size: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !282, file: !281, line: 119, baseType: !287, size: 64, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !282, file: !281, line: 120, baseType: !289, size: 64, offset: 192)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !281, line: 136, size: 17600, elements: !291)
!291 = !{!292, !293, !295, !298, !302, !303, !304}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !290, file: !281, line: 137, baseType: !280, size: 960)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !290, file: !281, line: 138, baseType: !294, size: 64, offset: 960)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !290, file: !281, line: 139, baseType: !296, size: 64, offset: 1024)
!296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!297 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !281, line: 43, flags: DIFlagFwdDecl)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !290, file: !281, line: 140, baseType: !299, size: 8192, offset: 1088)
!299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 8192, elements: !300)
!300 = !{!301}
!301 = !DISubrange(count: 1024)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !290, file: !281, line: 141, baseType: !299, size: 8192, offset: 9280)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !290, file: !281, line: 148, baseType: !289, size: 64, offset: 17472)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !290, file: !281, line: 150, baseType: !305, size: 64, offset: 17536)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !281, line: 45, flags: DIFlagFwdDecl)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !282, file: !281, line: 121, baseType: !308, size: 528, offset: 256)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 528, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 66)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !282, file: !281, line: 126, baseType: !199, size: 16, offset: 784)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !282, file: !281, line: 127, baseType: !135, size: 32, offset: 800)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !282, file: !281, line: 128, baseType: !135, size: 32, offset: 832)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !282, file: !281, line: 128, baseType: !135, size: 32, offset: 864)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !282, file: !281, line: 129, baseType: !316, size: 64, offset: 896)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !281, line: 75, baseType: !318)
!318 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !281, line: 62, size: 1024, elements: !319)
!319 = !{!320, !322, !323, !324, !325, !326, !327, !328, !342, !343}
!320 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !318, file: !281, line: 63, baseType: !321, size: 64)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !318, size: 64)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !318, file: !281, line: 63, baseType: !321, size: 64, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !318, file: !281, line: 64, baseType: !271, size: 8, offset: 128)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !318, file: !281, line: 64, baseType: !271, size: 8, offset: 136)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !318, file: !281, line: 65, baseType: !199, size: 16, offset: 144)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !318, file: !281, line: 66, baseType: !270, size: 512, offset: 160)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !318, file: !281, line: 67, baseType: !135, size: 32, offset: 672)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !318, file: !281, line: 69, baseType: !329, size: 256, offset: 704)
!329 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !281, line: 60, baseType: !330)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !281, line: 48, size: 256, elements: !331)
!331 = !{!332, !333, !340, !341}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !330, file: !281, line: 49, baseType: !221, size: 64)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !330, file: !281, line: 58, baseType: !334, size: 128, offset: 64)
!334 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !335, line: 71, baseType: !336)
!335 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !335, line: 69, size: 128, elements: !337)
!337 = !{!338, !339}
!338 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !336, file: !335, line: 70, baseType: !221, size: 64)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !336, file: !335, line: 70, baseType: !221, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !330, file: !281, line: 59, baseType: !135, size: 32, offset: 192)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !330, file: !281, line: 59, baseType: !135, size: 32, offset: 224)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !318, file: !281, line: 70, baseType: !135, size: 32, offset: 960)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !318, file: !281, line: 74, baseType: !135, size: 32, offset: 992)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !276, file: !277, line: 1218, baseType: !345, size: 64, offset: 960)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !146, line: 838, size: 768, elements: !347)
!347 = !{!348, !363, !364, !374, !375, !406, !407, !408, !409, !410, !411, !412}
!348 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !346, file: !146, line: 840, baseType: !349, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!350 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !351, line: 499, baseType: !352)
!351 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !351, line: 486, size: 1600, elements: !353)
!353 = !{!354, !355, !356, !357, !358, !359, !360, !361, !362}
!354 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !352, file: !351, line: 487, baseType: !280, size: 960)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !352, file: !351, line: 489, baseType: !334, size: 128, offset: 960)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !352, file: !351, line: 490, baseType: !334, size: 128, offset: 1088)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !352, file: !351, line: 491, baseType: !334, size: 128, offset: 1216)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !352, file: !351, line: 492, baseType: !334, size: 128, offset: 1344)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !352, file: !351, line: 494, baseType: !135, size: 32, offset: 1472)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !352, file: !351, line: 495, baseType: !135, size: 32, offset: 1504)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !352, file: !351, line: 497, baseType: !135, size: 32, offset: 1536)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !352, file: !351, line: 498, baseType: !135, size: 32, offset: 1568)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !346, file: !146, line: 844, baseType: !349, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !346, file: !146, line: 848, baseType: !365, size: 64, offset: 128)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !146, line: 549, baseType: !367)
!367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !146, line: 544, size: 320, elements: !368)
!368 = !{!369, !371, !372, !373}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !367, file: !146, line: 545, baseType: !370, size: 64)
!370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !367, file: !146, line: 545, baseType: !370, size: 64, offset: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !367, file: !146, line: 547, baseType: !349, size: 64, offset: 128)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !367, file: !146, line: 548, baseType: !334, size: 128, offset: 192)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !346, file: !146, line: 851, baseType: !334, size: 128, offset: 192)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !346, file: !146, line: 853, baseType: !376, size: 64, offset: 320)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !146, line: 594, baseType: !378)
!378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !146, line: 561, size: 1664, elements: !379)
!379 = !{!380, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !378, file: !146, line: 562, baseType: !381, size: 64)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !378, file: !146, line: 562, baseType: !381, size: 64, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !378, file: !146, line: 564, baseType: !334, size: 128, offset: 128)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !378, file: !146, line: 565, baseType: !349, size: 64, offset: 256)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !378, file: !146, line: 566, baseType: !365, size: 64, offset: 320)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !378, file: !146, line: 568, baseType: !334, size: 128, offset: 384)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !378, file: !146, line: 569, baseType: !334, size: 128, offset: 512)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !378, file: !146, line: 571, baseType: !270, size: 512, offset: 640)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !378, file: !146, line: 573, baseType: !207, size: 32, offset: 1152)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !378, file: !146, line: 574, baseType: !207, size: 32, offset: 1184)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !378, file: !146, line: 576, baseType: !207, size: 32, offset: 1216)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !378, file: !146, line: 576, baseType: !207, size: 32, offset: 1248)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !378, file: !146, line: 577, baseType: !207, size: 32, offset: 1280)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !378, file: !146, line: 577, baseType: !207, size: 32, offset: 1312)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !378, file: !146, line: 579, baseType: !207, size: 32, offset: 1344)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !378, file: !146, line: 580, baseType: !207, size: 32, offset: 1376)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !378, file: !146, line: 582, baseType: !207, size: 32, offset: 1408)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !378, file: !146, line: 582, baseType: !207, size: 32, offset: 1440)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !378, file: !146, line: 583, baseType: !199, size: 16, offset: 1472)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !378, file: !146, line: 585, baseType: !199, size: 16, offset: 1488)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !378, file: !146, line: 586, baseType: !199, size: 16, offset: 1504)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !378, file: !146, line: 588, baseType: !199, size: 16, offset: 1520)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !378, file: !146, line: 590, baseType: !221, size: 64, offset: 1536)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !378, file: !146, line: 592, baseType: !135, size: 32, offset: 1600)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !378, file: !146, line: 593, baseType: !135, size: 32, offset: 1632)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !346, file: !146, line: 858, baseType: !334, size: 128, offset: 384)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !346, file: !146, line: 859, baseType: !334, size: 128, offset: 512)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !346, file: !146, line: 862, baseType: !135, size: 32, offset: 640)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !346, file: !146, line: 863, baseType: !135, size: 32, offset: 672)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !346, file: !146, line: 866, baseType: !199, size: 16, offset: 704)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !346, file: !146, line: 867, baseType: !199, size: 16, offset: 720)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !346, file: !146, line: 868, baseType: !207, size: 32, offset: 736)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !276, file: !277, line: 1220, baseType: !414, size: 64, offset: 1024)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !152, line: 115, size: 11392, elements: !416)
!416 = !{!417, !418, !419, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !437, !447, !449, !450, !491, !492, !495, !496, !512, !513, !514, !515, !516, !517, !518, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1333, !2421, !2422, !2423, !2424, !2425, !2426, !2429, !2432, !2433, !2434, !2438, !2439, !2440, !2441, !2442, !2443, !2445, !2448, !2451, !2452, !2455, !2456}
!417 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !415, file: !152, line: 116, baseType: !280, size: 960)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !415, file: !152, line: 117, baseType: !345, size: 64, offset: 960)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !415, file: !152, line: 119, baseType: !420, size: 64, offset: 1024)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !152, line: 57, flags: DIFlagFwdDecl)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !415, file: !152, line: 121, baseType: !199, size: 16, offset: 1088)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !415, file: !152, line: 121, baseType: !199, size: 16, offset: 1104)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !415, file: !152, line: 122, baseType: !135, size: 32, offset: 1120)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !415, file: !152, line: 122, baseType: !135, size: 32, offset: 1152)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !415, file: !152, line: 122, baseType: !135, size: 32, offset: 1184)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !415, file: !152, line: 123, baseType: !270, size: 512, offset: 1216)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !415, file: !152, line: 124, baseType: !414, size: 64, offset: 1728)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !415, file: !152, line: 124, baseType: !414, size: 64, offset: 1792)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !415, file: !152, line: 127, baseType: !414, size: 64, offset: 1856)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !415, file: !152, line: 127, baseType: !414, size: 64, offset: 1920)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !415, file: !152, line: 127, baseType: !414, size: 64, offset: 1984)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !415, file: !152, line: 128, baseType: !434, size: 64, offset: 2048)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !436, line: 46, flags: DIFlagFwdDecl)
!436 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!437 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !415, file: !152, line: 130, baseType: !438, size: 64, offset: 2112)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !152, line: 97, size: 832, elements: !440)
!440 = !{!441, !445, !446}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !439, file: !152, line: 98, baseType: !442, size: 768)
!442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 768, elements: !443)
!443 = !{!444, !209}
!444 = !DISubrange(count: 8)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !439, file: !152, line: 99, baseType: !135, size: 32, offset: 768)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !439, file: !152, line: 99, baseType: !135, size: 32, offset: 800)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !415, file: !152, line: 131, baseType: !448, size: 64, offset: 2176)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !415, file: !152, line: 132, baseType: !448, size: 64, offset: 2240)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !415, file: !152, line: 133, baseType: !451, size: 64, offset: 2304)
!451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !452, size: 64)
!452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !351, line: 334, size: 1728, elements: !453)
!453 = !{!454, !455, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !490}
!454 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !452, file: !351, line: 335, baseType: !334, size: 128)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !452, file: !351, line: 336, baseType: !456, size: 64, offset: 128)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !351, line: 47, flags: DIFlagFwdDecl)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !452, file: !351, line: 338, baseType: !199, size: 16, offset: 192)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !452, file: !351, line: 338, baseType: !199, size: 16, offset: 208)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !452, file: !351, line: 339, baseType: !7, size: 32, offset: 224)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !452, file: !351, line: 340, baseType: !135, size: 32, offset: 256)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !452, file: !351, line: 342, baseType: !207, size: 32, offset: 288)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !452, file: !351, line: 343, baseType: !206, size: 96, offset: 320)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !452, file: !351, line: 344, baseType: !206, size: 96, offset: 416)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !452, file: !351, line: 347, baseType: !334, size: 128, offset: 512)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !452, file: !351, line: 349, baseType: !135, size: 32, offset: 640)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !452, file: !351, line: 350, baseType: !135, size: 32, offset: 672)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !452, file: !351, line: 351, baseType: !221, size: 64, offset: 704)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !452, file: !351, line: 352, baseType: !221, size: 64, offset: 768)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !452, file: !351, line: 354, baseType: !471, size: 384, offset: 832)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !351, line: 116, baseType: !472)
!472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !351, line: 94, size: 384, elements: !473)
!473 = !{!474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489}
!474 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !472, file: !351, line: 96, baseType: !135, size: 32)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !472, file: !351, line: 96, baseType: !135, size: 32, offset: 32)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !472, file: !351, line: 97, baseType: !135, size: 32, offset: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !472, file: !351, line: 97, baseType: !135, size: 32, offset: 96)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !472, file: !351, line: 99, baseType: !199, size: 16, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !472, file: !351, line: 100, baseType: !199, size: 16, offset: 144)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !472, file: !351, line: 102, baseType: !199, size: 16, offset: 160)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !472, file: !351, line: 105, baseType: !199, size: 16, offset: 176)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !472, file: !351, line: 108, baseType: !199, size: 16, offset: 192)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !472, file: !351, line: 109, baseType: !199, size: 16, offset: 208)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !472, file: !351, line: 111, baseType: !199, size: 16, offset: 224)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !472, file: !351, line: 112, baseType: !199, size: 16, offset: 240)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !472, file: !351, line: 114, baseType: !135, size: 32, offset: 256)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !472, file: !351, line: 114, baseType: !135, size: 32, offset: 288)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !472, file: !351, line: 115, baseType: !135, size: 32, offset: 320)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !472, file: !351, line: 115, baseType: !135, size: 32, offset: 352)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !452, file: !351, line: 355, baseType: !270, size: 512, offset: 1216)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !415, file: !152, line: 134, baseType: !221, size: 64, offset: 2368)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !415, file: !152, line: 136, baseType: !493, size: 64, offset: 2432)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !152, line: 58, flags: DIFlagFwdDecl)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !415, file: !152, line: 138, baseType: !471, size: 384, offset: 2496)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !415, file: !152, line: 139, baseType: !497, size: 64, offset: 2880)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !351, line: 80, baseType: !499)
!499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !351, line: 72, size: 192, elements: !500)
!500 = !{!501, !508, !509, !510, !511}
!501 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !499, file: !351, line: 73, baseType: !502, size: 64)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !503, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !351, line: 59, baseType: !504)
!504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !351, line: 56, size: 128, elements: !505)
!505 = !{!506, !507}
!506 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !504, file: !351, line: 57, baseType: !206, size: 96)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !504, file: !351, line: 58, baseType: !135, size: 32, offset: 96)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !499, file: !351, line: 74, baseType: !135, size: 32, offset: 64)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !499, file: !351, line: 76, baseType: !135, size: 32, offset: 96)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !499, file: !351, line: 77, baseType: !135, size: 32, offset: 128)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !499, file: !351, line: 79, baseType: !135, size: 32, offset: 160)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !415, file: !152, line: 141, baseType: !334, size: 128, offset: 2944)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !415, file: !152, line: 142, baseType: !334, size: 128, offset: 3072)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !415, file: !152, line: 143, baseType: !334, size: 128, offset: 3200)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !415, file: !152, line: 144, baseType: !334, size: 128, offset: 3328)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !415, file: !152, line: 146, baseType: !135, size: 32, offset: 3456)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !415, file: !152, line: 147, baseType: !135, size: 32, offset: 3488)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !415, file: !152, line: 150, baseType: !519, size: 64, offset: 3520)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !522, line: 93, size: 7552, elements: !523)
!522 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!523 = !{!524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !572, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !641, !642, !643, !644, !645, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !1120, !1121, !1122, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1169}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !521, file: !522, line: 94, baseType: !280, size: 960)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !521, file: !522, line: 95, baseType: !345, size: 64, offset: 960)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !521, file: !522, line: 97, baseType: !199, size: 16, offset: 1024)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !521, file: !522, line: 97, baseType: !199, size: 16, offset: 1040)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !521, file: !522, line: 99, baseType: !207, size: 32, offset: 1056)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !521, file: !522, line: 99, baseType: !207, size: 32, offset: 1088)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !521, file: !522, line: 99, baseType: !207, size: 32, offset: 1120)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !521, file: !522, line: 100, baseType: !207, size: 32, offset: 1152)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !521, file: !522, line: 100, baseType: !207, size: 32, offset: 1184)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !521, file: !522, line: 100, baseType: !207, size: 32, offset: 1216)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !521, file: !522, line: 101, baseType: !207, size: 32, offset: 1248)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !521, file: !522, line: 101, baseType: !207, size: 32, offset: 1280)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !521, file: !522, line: 101, baseType: !207, size: 32, offset: 1312)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !521, file: !522, line: 102, baseType: !207, size: 32, offset: 1344)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !521, file: !522, line: 102, baseType: !207, size: 32, offset: 1376)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !521, file: !522, line: 102, baseType: !207, size: 32, offset: 1408)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !521, file: !522, line: 103, baseType: !207, size: 32, offset: 1440)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !521, file: !522, line: 103, baseType: !207, size: 32, offset: 1472)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !521, file: !522, line: 103, baseType: !207, size: 32, offset: 1504)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !521, file: !522, line: 103, baseType: !207, size: 32, offset: 1536)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !521, file: !522, line: 103, baseType: !207, size: 32, offset: 1568)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !521, file: !522, line: 104, baseType: !207, size: 32, offset: 1600)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !521, file: !522, line: 104, baseType: !207, size: 32, offset: 1632)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !521, file: !522, line: 104, baseType: !207, size: 32, offset: 1664)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !521, file: !522, line: 104, baseType: !207, size: 32, offset: 1696)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !521, file: !522, line: 104, baseType: !207, size: 32, offset: 1728)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !521, file: !522, line: 105, baseType: !207, size: 32, offset: 1760)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !521, file: !522, line: 108, baseType: !552, size: 704, offset: 1792)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !522, line: 53, size: 704, elements: !553)
!553 = !{!554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !552, file: !522, line: 54, baseType: !207, size: 32)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !552, file: !522, line: 55, baseType: !207, size: 32, offset: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !552, file: !522, line: 56, baseType: !207, size: 32, offset: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !552, file: !522, line: 57, baseType: !207, size: 32, offset: 96)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !552, file: !522, line: 59, baseType: !206, size: 96, offset: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !552, file: !522, line: 60, baseType: !206, size: 96, offset: 224)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !552, file: !522, line: 61, baseType: !206, size: 96, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !552, file: !522, line: 63, baseType: !207, size: 32, offset: 416)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !552, file: !522, line: 64, baseType: !207, size: 32, offset: 448)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !552, file: !522, line: 65, baseType: !207, size: 32, offset: 480)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !552, file: !522, line: 67, baseType: !199, size: 16, offset: 512)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !552, file: !522, line: 68, baseType: !199, size: 16, offset: 528)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !552, file: !522, line: 69, baseType: !199, size: 16, offset: 544)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !552, file: !522, line: 70, baseType: !199, size: 16, offset: 560)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !552, file: !522, line: 72, baseType: !207, size: 32, offset: 576)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !552, file: !522, line: 73, baseType: !207, size: 32, offset: 608)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !552, file: !522, line: 74, baseType: !207, size: 32, offset: 640)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !552, file: !522, line: 75, baseType: !207, size: 32, offset: 672)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !521, file: !522, line: 109, baseType: !573, size: 128, offset: 2496)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !522, line: 79, size: 128, elements: !574)
!574 = !{!575, !576, !577, !578}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !573, file: !522, line: 80, baseType: !135, size: 32)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !573, file: !522, line: 81, baseType: !135, size: 32, offset: 32)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !573, file: !522, line: 82, baseType: !135, size: 32, offset: 64)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !573, file: !522, line: 83, baseType: !135, size: 32, offset: 96)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !521, file: !522, line: 111, baseType: !207, size: 32, offset: 2624)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !521, file: !522, line: 111, baseType: !207, size: 32, offset: 2656)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !521, file: !522, line: 112, baseType: !207, size: 32, offset: 2688)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !521, file: !522, line: 112, baseType: !207, size: 32, offset: 2720)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !521, file: !522, line: 113, baseType: !207, size: 32, offset: 2752)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !521, file: !522, line: 114, baseType: !207, size: 32, offset: 2784)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !521, file: !522, line: 114, baseType: !207, size: 32, offset: 2816)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !521, file: !522, line: 115, baseType: !199, size: 16, offset: 2848)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !521, file: !522, line: 115, baseType: !199, size: 16, offset: 2864)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !521, file: !522, line: 116, baseType: !199, size: 16, offset: 2880)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !521, file: !522, line: 117, baseType: !271, size: 8, offset: 2896)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !521, file: !522, line: 117, baseType: !271, size: 8, offset: 2904)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !521, file: !522, line: 119, baseType: !207, size: 32, offset: 2912)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !521, file: !522, line: 119, baseType: !207, size: 32, offset: 2944)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !521, file: !522, line: 120, baseType: !199, size: 16, offset: 2976)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !521, file: !522, line: 120, baseType: !199, size: 16, offset: 2992)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !521, file: !522, line: 121, baseType: !207, size: 32, offset: 3008)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !521, file: !522, line: 121, baseType: !207, size: 32, offset: 3040)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !521, file: !522, line: 122, baseType: !207, size: 32, offset: 3072)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !521, file: !522, line: 123, baseType: !207, size: 32, offset: 3104)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !521, file: !522, line: 124, baseType: !199, size: 16, offset: 3136)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !521, file: !522, line: 125, baseType: !199, size: 16, offset: 3152)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !521, file: !522, line: 127, baseType: !135, size: 32, offset: 3168)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !521, file: !522, line: 127, baseType: !135, size: 32, offset: 3200)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !521, file: !522, line: 128, baseType: !135, size: 32, offset: 3232)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !521, file: !522, line: 128, baseType: !135, size: 32, offset: 3264)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !521, file: !522, line: 129, baseType: !199, size: 16, offset: 3296)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !521, file: !522, line: 129, baseType: !199, size: 16, offset: 3312)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !521, file: !522, line: 129, baseType: !199, size: 16, offset: 3328)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !521, file: !522, line: 129, baseType: !199, size: 16, offset: 3344)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !521, file: !522, line: 130, baseType: !207, size: 32, offset: 3360)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !521, file: !522, line: 130, baseType: !207, size: 32, offset: 3392)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !521, file: !522, line: 130, baseType: !207, size: 32, offset: 3424)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !521, file: !522, line: 130, baseType: !207, size: 32, offset: 3456)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !521, file: !522, line: 131, baseType: !207, size: 32, offset: 3488)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !521, file: !522, line: 131, baseType: !207, size: 32, offset: 3520)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !521, file: !522, line: 131, baseType: !207, size: 32, offset: 3552)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !521, file: !522, line: 131, baseType: !207, size: 32, offset: 3584)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !521, file: !522, line: 132, baseType: !207, size: 32, offset: 3616)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !521, file: !522, line: 132, baseType: !207, size: 32, offset: 3648)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !521, file: !522, line: 133, baseType: !270, size: 512, offset: 3680)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !521, file: !522, line: 135, baseType: !207, size: 32, offset: 4192)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !521, file: !522, line: 136, baseType: !207, size: 32, offset: 4224)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !521, file: !522, line: 137, baseType: !207, size: 32, offset: 4256)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !521, file: !522, line: 138, baseType: !135, size: 32, offset: 4288)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !521, file: !522, line: 141, baseType: !271, size: 8, offset: 4320)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !521, file: !522, line: 141, baseType: !271, size: 8, offset: 4328)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !521, file: !522, line: 141, baseType: !271, size: 8, offset: 4336)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !521, file: !522, line: 141, baseType: !271, size: 8, offset: 4344)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !521, file: !522, line: 142, baseType: !199, size: 16, offset: 4352)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !521, file: !522, line: 142, baseType: !199, size: 16, offset: 4368)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !521, file: !522, line: 142, baseType: !199, size: 16, offset: 4384)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !521, file: !522, line: 145, baseType: !271, size: 8, offset: 4400)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !521, file: !522, line: 145, baseType: !271, size: 8, offset: 4408)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !521, file: !522, line: 148, baseType: !199, size: 16, offset: 4416)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !521, file: !522, line: 148, baseType: !199, size: 16, offset: 4432)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !521, file: !522, line: 149, baseType: !207, size: 32, offset: 4448)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !521, file: !522, line: 149, baseType: !207, size: 32, offset: 4480)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !521, file: !522, line: 152, baseType: !638, size: 128, offset: 4512)
!638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 128, elements: !639)
!639 = !{!640}
!640 = !DISubrange(count: 4)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !521, file: !522, line: 153, baseType: !207, size: 32, offset: 4640)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !521, file: !522, line: 154, baseType: !207, size: 32, offset: 4672)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !521, file: !522, line: 157, baseType: !199, size: 16, offset: 4704)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !521, file: !522, line: 157, baseType: !199, size: 16, offset: 4720)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !521, file: !522, line: 160, baseType: !646, size: 64, offset: 4736)
!646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !647, size: 64)
!647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !436, line: 113, size: 6208, elements: !648)
!648 = !{!649, !650, !651, !652, !653, !654, !658}
!649 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !647, file: !436, line: 114, baseType: !199, size: 16)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !647, file: !436, line: 114, baseType: !199, size: 16, offset: 16)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !647, file: !436, line: 115, baseType: !271, size: 8, offset: 32)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !647, file: !436, line: 115, baseType: !271, size: 8, offset: 40)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !647, file: !436, line: 116, baseType: !271, size: 8, offset: 48)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !647, file: !436, line: 117, baseType: !655, size: 8, offset: 56)
!655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 8, elements: !656)
!656 = !{!657}
!657 = !DISubrange(count: 1)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !647, file: !436, line: 119, baseType: !659, size: 6144, offset: 64)
!659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !660, size: 6144, elements: !669)
!660 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !436, line: 109, baseType: !661)
!661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !436, line: 106, size: 192, elements: !662)
!662 = !{!663, !664, !665, !666, !667, !668}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !661, file: !436, line: 107, baseType: !207, size: 32)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !661, file: !436, line: 107, baseType: !207, size: 32, offset: 32)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !661, file: !436, line: 107, baseType: !207, size: 32, offset: 64)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !661, file: !436, line: 107, baseType: !207, size: 32, offset: 96)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !661, file: !436, line: 107, baseType: !207, size: 32, offset: 128)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !661, file: !436, line: 108, baseType: !135, size: 32, offset: 160)
!669 = !{!670}
!670 = !DISubrange(count: 32)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !521, file: !522, line: 161, baseType: !646, size: 64, offset: 4800)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !521, file: !522, line: 162, baseType: !271, size: 8, offset: 4864)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !521, file: !522, line: 162, baseType: !271, size: 8, offset: 4872)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !521, file: !522, line: 163, baseType: !271, size: 8, offset: 4880)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !521, file: !522, line: 163, baseType: !271, size: 8, offset: 4888)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !521, file: !522, line: 164, baseType: !199, size: 16, offset: 4896)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !521, file: !522, line: 164, baseType: !199, size: 16, offset: 4912)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !521, file: !522, line: 165, baseType: !207, size: 32, offset: 4928)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !521, file: !522, line: 165, baseType: !207, size: 32, offset: 4960)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !521, file: !522, line: 167, baseType: !681, size: 1152, offset: 4992)
!681 = !DICompositeType(tag: DW_TAG_array_type, baseType: !682, size: 1152, elements: !1118)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !436, line: 57, size: 2496, elements: !684)
!684 = !{!685, !686, !687, !688, !689, !690, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117}
!685 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !683, file: !436, line: 59, baseType: !199, size: 16)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !683, file: !436, line: 59, baseType: !199, size: 16, offset: 16)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !683, file: !436, line: 59, baseType: !199, size: 16, offset: 32)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !683, file: !436, line: 59, baseType: !199, size: 16, offset: 48)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !683, file: !436, line: 60, baseType: !414, size: 64, offset: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !683, file: !436, line: 61, baseType: !691, size: 64, offset: 128)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !436, line: 202, size: 3328, elements: !693)
!693 = !{!694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !763, !766, !767, !848, !849, !952, !953, !1028, !1049, !1057, !1058}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !692, file: !436, line: 203, baseType: !280, size: 960)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !692, file: !436, line: 204, baseType: !345, size: 64, offset: 960)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !692, file: !436, line: 206, baseType: !207, size: 32, offset: 1024)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !692, file: !436, line: 206, baseType: !207, size: 32, offset: 1056)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1088)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1120)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1152)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1184)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1216)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !692, file: !436, line: 207, baseType: !207, size: 32, offset: 1248)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !692, file: !436, line: 208, baseType: !207, size: 32, offset: 1280)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !692, file: !436, line: 208, baseType: !207, size: 32, offset: 1312)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !692, file: !436, line: 211, baseType: !207, size: 32, offset: 1344)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !692, file: !436, line: 211, baseType: !207, size: 32, offset: 1376)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !692, file: !436, line: 211, baseType: !207, size: 32, offset: 1408)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !692, file: !436, line: 211, baseType: !207, size: 32, offset: 1440)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !692, file: !436, line: 211, baseType: !207, size: 32, offset: 1472)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !692, file: !436, line: 214, baseType: !207, size: 32, offset: 1504)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !692, file: !436, line: 214, baseType: !207, size: 32, offset: 1536)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !692, file: !436, line: 217, baseType: !207, size: 32, offset: 1568)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !692, file: !436, line: 218, baseType: !207, size: 32, offset: 1600)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !692, file: !436, line: 219, baseType: !207, size: 32, offset: 1632)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !692, file: !436, line: 220, baseType: !207, size: 32, offset: 1664)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !692, file: !436, line: 221, baseType: !207, size: 32, offset: 1696)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !692, file: !436, line: 222, baseType: !199, size: 16, offset: 1728)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !692, file: !436, line: 222, baseType: !199, size: 16, offset: 1744)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !692, file: !436, line: 224, baseType: !199, size: 16, offset: 1760)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !692, file: !436, line: 224, baseType: !199, size: 16, offset: 1776)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !692, file: !436, line: 227, baseType: !199, size: 16, offset: 1792)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !692, file: !436, line: 227, baseType: !199, size: 16, offset: 1808)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !692, file: !436, line: 229, baseType: !199, size: 16, offset: 1824)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !692, file: !436, line: 229, baseType: !199, size: 16, offset: 1840)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !692, file: !436, line: 230, baseType: !199, size: 16, offset: 1856)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !692, file: !436, line: 230, baseType: !199, size: 16, offset: 1872)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !692, file: !436, line: 232, baseType: !207, size: 32, offset: 1888)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !692, file: !436, line: 232, baseType: !207, size: 32, offset: 1920)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !692, file: !436, line: 232, baseType: !207, size: 32, offset: 1952)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !692, file: !436, line: 232, baseType: !207, size: 32, offset: 1984)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !692, file: !436, line: 233, baseType: !135, size: 32, offset: 2016)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !692, file: !436, line: 234, baseType: !135, size: 32, offset: 2048)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !692, file: !436, line: 235, baseType: !199, size: 16, offset: 2080)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !692, file: !436, line: 235, baseType: !199, size: 16, offset: 2096)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !692, file: !436, line: 236, baseType: !199, size: 16, offset: 2112)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !692, file: !436, line: 239, baseType: !199, size: 16, offset: 2128)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !692, file: !436, line: 240, baseType: !135, size: 32, offset: 2144)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !692, file: !436, line: 241, baseType: !135, size: 32, offset: 2176)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !692, file: !436, line: 241, baseType: !135, size: 32, offset: 2208)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !692, file: !436, line: 241, baseType: !135, size: 32, offset: 2240)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !692, file: !436, line: 243, baseType: !207, size: 32, offset: 2272)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !692, file: !436, line: 243, baseType: !207, size: 32, offset: 2304)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !692, file: !436, line: 244, baseType: !207, size: 32, offset: 2336)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !692, file: !436, line: 246, baseType: !746, size: 320, offset: 2368)
!746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !747, line: 50, size: 320, elements: !748)
!747 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!748 = !{!749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762}
!749 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !746, file: !747, line: 51, baseType: !275, size: 64)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !746, file: !747, line: 53, baseType: !135, size: 32, offset: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !746, file: !747, line: 54, baseType: !135, size: 32, offset: 96)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !746, file: !747, line: 55, baseType: !135, size: 32, offset: 128)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !746, file: !747, line: 55, baseType: !135, size: 32, offset: 160)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !746, file: !747, line: 56, baseType: !271, size: 8, offset: 192)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !746, file: !747, line: 56, baseType: !271, size: 8, offset: 200)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !746, file: !747, line: 57, baseType: !271, size: 8, offset: 208)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !746, file: !747, line: 57, baseType: !271, size: 8, offset: 216)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !746, file: !747, line: 59, baseType: !199, size: 16, offset: 224)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !746, file: !747, line: 59, baseType: !199, size: 16, offset: 240)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !746, file: !747, line: 59, baseType: !199, size: 16, offset: 256)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !746, file: !747, line: 61, baseType: !199, size: 16, offset: 272)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !746, file: !747, line: 63, baseType: !135, size: 32, offset: 288)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !692, file: !436, line: 248, baseType: !764, size: 64, offset: 2688)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !436, line: 248, flags: DIFlagFwdDecl)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !692, file: !436, line: 249, baseType: !434, size: 64, offset: 2752)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !692, file: !436, line: 250, baseType: !768, size: 64, offset: 2816)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !747, line: 77, size: 15424, elements: !770)
!770 = !{!771, !772, !773, !776, !779, !782, !785, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !804, !805, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !837, !838, !842}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !769, file: !747, line: 78, baseType: !280, size: 960)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !769, file: !747, line: 80, baseType: !299, size: 8192, offset: 960)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !769, file: !747, line: 82, baseType: !774, size: 64, offset: 9152)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !747, line: 43, flags: DIFlagFwdDecl)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !769, file: !747, line: 83, baseType: !777, size: 64, offset: 9216)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !778, size: 64)
!778 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !281, line: 46, flags: DIFlagFwdDecl)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !769, file: !747, line: 86, baseType: !780, size: 64, offset: 9280)
!780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !781, size: 64)
!781 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !747, line: 41, flags: DIFlagFwdDecl)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !769, file: !747, line: 87, baseType: !783, size: 64, offset: 9344)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!784 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !747, line: 44, flags: DIFlagFwdDecl)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !769, file: !747, line: 89, baseType: !786, size: 512, offset: 9408)
!786 = !DICompositeType(tag: DW_TAG_array_type, baseType: !783, size: 512, elements: !787)
!787 = !{!444}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !769, file: !747, line: 90, baseType: !199, size: 16, offset: 9920)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !769, file: !747, line: 90, baseType: !199, size: 16, offset: 9936)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !769, file: !747, line: 92, baseType: !199, size: 16, offset: 9952)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !769, file: !747, line: 92, baseType: !199, size: 16, offset: 9968)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !769, file: !747, line: 93, baseType: !199, size: 16, offset: 9984)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !769, file: !747, line: 93, baseType: !199, size: 16, offset: 10000)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !769, file: !747, line: 94, baseType: !135, size: 32, offset: 10016)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !769, file: !747, line: 97, baseType: !199, size: 16, offset: 10048)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !769, file: !747, line: 97, baseType: !199, size: 16, offset: 10064)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !769, file: !747, line: 98, baseType: !199, size: 16, offset: 10080)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !769, file: !747, line: 98, baseType: !199, size: 16, offset: 10096)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !769, file: !747, line: 99, baseType: !199, size: 16, offset: 10112)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !769, file: !747, line: 99, baseType: !199, size: 16, offset: 10128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !769, file: !747, line: 100, baseType: !7, size: 32, offset: 10144)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !769, file: !747, line: 101, baseType: !803, size: 64, offset: 10176)
!803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !769, file: !747, line: 103, baseType: !305, size: 64, offset: 10240)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !769, file: !747, line: 104, baseType: !806, size: 64, offset: 10304)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !281, line: 159, size: 448, elements: !808)
!808 = !{!809, !811, !812, !814, !815, !817}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !807, file: !281, line: 161, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !218)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !807, file: !281, line: 162, baseType: !810, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !807, file: !281, line: 163, baseType: !813, size: 32, offset: 128)
!813 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 32, elements: !218)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !807, file: !281, line: 164, baseType: !813, size: 32, offset: 160)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !807, file: !281, line: 165, baseType: !816, size: 128, offset: 192)
!816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !803, size: 128, elements: !218)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !807, file: !281, line: 166, baseType: !818, size: 128, offset: 320)
!818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !777, size: 128, elements: !218)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !769, file: !747, line: 107, baseType: !207, size: 32, offset: 10368)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !769, file: !747, line: 108, baseType: !135, size: 32, offset: 10400)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !769, file: !747, line: 109, baseType: !199, size: 16, offset: 10432)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !769, file: !747, line: 110, baseType: !199, size: 16, offset: 10448)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !769, file: !747, line: 113, baseType: !135, size: 32, offset: 10464)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !769, file: !747, line: 113, baseType: !135, size: 32, offset: 10496)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !769, file: !747, line: 114, baseType: !271, size: 8, offset: 10528)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !769, file: !747, line: 114, baseType: !271, size: 8, offset: 10536)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !769, file: !747, line: 115, baseType: !199, size: 16, offset: 10544)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !769, file: !747, line: 116, baseType: !638, size: 128, offset: 10560)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !769, file: !747, line: 119, baseType: !207, size: 32, offset: 10688)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !769, file: !747, line: 119, baseType: !207, size: 32, offset: 10720)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !769, file: !747, line: 122, baseType: !832, size: 512, offset: 10752)
!832 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !833, line: 182, baseType: !834)
!833 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !833, line: 180, size: 512, elements: !835)
!835 = !{!836}
!836 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !834, file: !833, line: 181, baseType: !270, size: 512)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !769, file: !747, line: 123, baseType: !271, size: 8, offset: 11264)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !769, file: !747, line: 125, baseType: !839, size: 56, offset: 11272)
!839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 56, elements: !840)
!840 = !{!841}
!841 = !DISubrange(count: 7)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !769, file: !747, line: 126, baseType: !843, size: 4096, offset: 11328)
!843 = !DICompositeType(tag: DW_TAG_array_type, baseType: !844, size: 4096, elements: !787)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !747, line: 69, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !747, line: 67, size: 512, elements: !846)
!846 = !{!847}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !845, file: !747, line: 68, baseType: !270, size: 512)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !692, file: !436, line: 251, baseType: !646, size: 64, offset: 2880)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !692, file: !436, line: 252, baseType: !850, size: 64, offset: 2944)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !436, line: 122, size: 1600, elements: !852)
!852 = !{!853, !854, !855, !934, !937, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !851, file: !436, line: 123, baseType: !414, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !851, file: !436, line: 124, baseType: !768, size: 64, offset: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !851, file: !436, line: 125, baseType: !856, size: 384, offset: 128)
!856 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 384, elements: !932)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !859, line: 70, size: 19840, elements: !860)
!859 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!860 = !{!861, !862, !863, !864, !865, !867, !868, !869, !870, !871, !872, !875, !876, !877, !878, !879, !881, !882, !883, !884, !888, !889, !890, !891, !892, !895, !896, !897, !898, !899, !902, !903, !905, !906, !907, !910, !911, !912, !915, !916, !925}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !858, file: !859, line: 71, baseType: !857, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !858, file: !859, line: 71, baseType: !857, size: 64, offset: 64)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !858, file: !859, line: 74, baseType: !135, size: 32, offset: 128)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !858, file: !859, line: 74, baseType: !135, size: 32, offset: 160)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !858, file: !859, line: 79, baseType: !866, size: 8, offset: 192)
!866 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !858, file: !859, line: 80, baseType: !135, size: 32, offset: 224)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !858, file: !859, line: 83, baseType: !135, size: 32, offset: 256)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !858, file: !859, line: 84, baseType: !135, size: 32, offset: 288)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !858, file: !859, line: 87, baseType: !803, size: 64, offset: 320)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !858, file: !859, line: 88, baseType: !233, size: 64, offset: 384)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !858, file: !859, line: 93, baseType: !873, size: 128, offset: 448)
!873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !874, size: 128, elements: !218)
!874 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !858, file: !859, line: 96, baseType: !135, size: 32, offset: 576)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !858, file: !859, line: 96, baseType: !135, size: 32, offset: 608)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !858, file: !859, line: 97, baseType: !135, size: 32, offset: 640)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !858, file: !859, line: 97, baseType: !135, size: 32, offset: 672)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !858, file: !859, line: 98, baseType: !880, size: 64, offset: 704)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !858, file: !859, line: 101, baseType: !211, size: 64, offset: 768)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !858, file: !859, line: 102, baseType: !233, size: 64, offset: 832)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !858, file: !859, line: 105, baseType: !207, size: 32, offset: 896)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !858, file: !859, line: 108, baseType: !885, size: 1280, offset: 960)
!885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 1280, elements: !886)
!886 = !{!887}
!887 = !DISubrange(count: 20)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !858, file: !859, line: 109, baseType: !135, size: 32, offset: 2240)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !858, file: !859, line: 109, baseType: !135, size: 32, offset: 2272)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !858, file: !859, line: 112, baseType: !135, size: 32, offset: 2304)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !858, file: !859, line: 113, baseType: !135, size: 32, offset: 2336)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !858, file: !859, line: 114, baseType: !893, size: 64, offset: 2368)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !859, line: 50, flags: DIFlagFwdDecl)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !858, file: !859, line: 115, baseType: !221, size: 64, offset: 2432)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !858, file: !859, line: 118, baseType: !135, size: 32, offset: 2496)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !858, file: !859, line: 119, baseType: !299, size: 8192, offset: 2528)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !858, file: !859, line: 120, baseType: !299, size: 8192, offset: 10720)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !858, file: !859, line: 123, baseType: !900, size: 64, offset: 18944)
!900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !901, size: 64)
!901 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !859, line: 123, flags: DIFlagFwdDecl)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !858, file: !859, line: 124, baseType: !135, size: 32, offset: 19008)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !858, file: !859, line: 127, baseType: !904, size: 64, offset: 19072)
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !866, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !858, file: !859, line: 128, baseType: !7, size: 32, offset: 19136)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !858, file: !859, line: 129, baseType: !7, size: 32, offset: 19168)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !858, file: !859, line: 132, baseType: !908, size: 64, offset: 19200)
!908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !909, size: 64)
!909 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !277, line: 63, flags: DIFlagFwdDecl)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !858, file: !859, line: 133, baseType: !908, size: 64, offset: 19264)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !858, file: !859, line: 134, baseType: !803, size: 64, offset: 19328)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !858, file: !859, line: 135, baseType: !913, size: 64, offset: 19392)
!913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !914, size: 64)
!914 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !859, line: 135, flags: DIFlagFwdDecl)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !858, file: !859, line: 136, baseType: !135, size: 32, offset: 19456)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !858, file: !859, line: 137, baseType: !917, size: 128, offset: 19488)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !918, line: 89, baseType: !919)
!918 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !918, line: 86, size: 128, elements: !920)
!920 = !{!921, !922, !923, !924}
!921 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !919, file: !918, line: 87, baseType: !135, size: 32)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !919, file: !918, line: 87, baseType: !135, size: 32, offset: 32)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !919, file: !918, line: 88, baseType: !135, size: 32, offset: 64)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !919, file: !918, line: 88, baseType: !135, size: 32, offset: 96)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !858, file: !859, line: 140, baseType: !926, size: 192, offset: 19648)
!926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !859, line: 55, size: 192, elements: !927)
!927 = !{!928, !929, !930, !931}
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !926, file: !859, line: 56, baseType: !7, size: 32)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !926, file: !859, line: 57, baseType: !7, size: 32, offset: 32)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !926, file: !859, line: 58, baseType: !904, size: 64, offset: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !926, file: !859, line: 59, baseType: !7, size: 32, offset: 128)
!932 = !{!933}
!933 = !DISubrange(count: 6)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !851, file: !436, line: 126, baseType: !935, size: 512, offset: 512)
!935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 512, elements: !936)
!936 = !{!640, !640}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !851, file: !436, line: 127, baseType: !938, size: 288, offset: 1024)
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 288, elements: !939)
!939 = !{!209, !209}
!940 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !851, file: !436, line: 128, baseType: !199, size: 16, offset: 1312)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !851, file: !436, line: 128, baseType: !199, size: 16, offset: 1328)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !851, file: !436, line: 129, baseType: !207, size: 32, offset: 1344)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !851, file: !436, line: 129, baseType: !207, size: 32, offset: 1376)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !851, file: !436, line: 130, baseType: !207, size: 32, offset: 1408)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !851, file: !436, line: 131, baseType: !7, size: 32, offset: 1440)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !851, file: !436, line: 132, baseType: !199, size: 16, offset: 1472)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !851, file: !436, line: 132, baseType: !199, size: 16, offset: 1488)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !851, file: !436, line: 133, baseType: !135, size: 32, offset: 1504)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !851, file: !436, line: 133, baseType: !135, size: 32, offset: 1536)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !851, file: !436, line: 134, baseType: !199, size: 16, offset: 1568)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !851, file: !436, line: 134, baseType: !199, size: 16, offset: 1584)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !692, file: !436, line: 253, baseType: !806, size: 64, offset: 3008)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !692, file: !436, line: 254, baseType: !954, size: 64, offset: 3072)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !436, line: 137, size: 832, elements: !956)
!956 = !{!957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !977, !978, !979, !980, !981, !982}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !955, file: !436, line: 138, baseType: !199, size: 16)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !955, file: !436, line: 140, baseType: !199, size: 16, offset: 16)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !955, file: !436, line: 141, baseType: !207, size: 32, offset: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !955, file: !436, line: 142, baseType: !207, size: 32, offset: 64)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !955, file: !436, line: 143, baseType: !199, size: 16, offset: 96)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !955, file: !436, line: 144, baseType: !199, size: 16, offset: 112)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !955, file: !436, line: 145, baseType: !135, size: 32, offset: 128)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !955, file: !436, line: 147, baseType: !135, size: 32, offset: 160)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !955, file: !436, line: 149, baseType: !414, size: 64, offset: 192)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !955, file: !436, line: 150, baseType: !135, size: 32, offset: 256)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !955, file: !436, line: 151, baseType: !199, size: 16, offset: 288)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !955, file: !436, line: 152, baseType: !199, size: 16, offset: 304)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !955, file: !436, line: 154, baseType: !221, size: 64, offset: 320)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !955, file: !436, line: 155, baseType: !233, size: 64, offset: 384)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !955, file: !436, line: 157, baseType: !207, size: 32, offset: 448)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !955, file: !436, line: 158, baseType: !199, size: 16, offset: 480)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !955, file: !436, line: 159, baseType: !199, size: 16, offset: 496)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !955, file: !436, line: 160, baseType: !199, size: 16, offset: 512)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !955, file: !436, line: 161, baseType: !976, size: 48, offset: 528)
!976 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 48, elements: !208)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !955, file: !436, line: 162, baseType: !207, size: 32, offset: 576)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !955, file: !436, line: 164, baseType: !207, size: 32, offset: 608)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !955, file: !436, line: 164, baseType: !207, size: 32, offset: 640)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !955, file: !436, line: 164, baseType: !207, size: 32, offset: 672)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !955, file: !436, line: 165, baseType: !646, size: 64, offset: 704)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !955, file: !436, line: 167, baseType: !983, size: 64, offset: 768)
!983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !984, size: 64)
!984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !833, line: 72, size: 3072, elements: !985)
!985 = !{!986, !987, !988, !989, !990, !998, !999, !1024, !1025, !1026, !1027}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !984, file: !833, line: 73, baseType: !135, size: 32)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !984, file: !833, line: 73, baseType: !135, size: 32, offset: 32)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !984, file: !833, line: 74, baseType: !135, size: 32, offset: 64)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !984, file: !833, line: 75, baseType: !135, size: 32, offset: 96)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !984, file: !833, line: 77, baseType: !991, size: 128, offset: 128)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !918, line: 95, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !918, line: 92, size: 128, elements: !993)
!993 = !{!994, !995, !996, !997}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !992, file: !918, line: 93, baseType: !207, size: 32)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !992, file: !918, line: 93, baseType: !207, size: 32, offset: 32)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !992, file: !918, line: 94, baseType: !207, size: 32, offset: 64)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !992, file: !918, line: 94, baseType: !207, size: 32, offset: 96)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !984, file: !833, line: 77, baseType: !991, size: 128, offset: 256)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !984, file: !833, line: 79, baseType: !1000, size: 2304, offset: 384)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1001, size: 2304, elements: !639)
!1001 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !833, line: 67, baseType: !1002)
!1002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !833, line: 55, size: 576, elements: !1003)
!1003 = !{!1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1020, !1021, !1022, !1023}
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1002, file: !833, line: 56, baseType: !199, size: 16)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1002, file: !833, line: 56, baseType: !199, size: 16, offset: 16)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1002, file: !833, line: 58, baseType: !207, size: 32, offset: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1002, file: !833, line: 59, baseType: !207, size: 32, offset: 64)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1002, file: !833, line: 59, baseType: !207, size: 32, offset: 96)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1002, file: !833, line: 60, baseType: !217, size: 64, offset: 128)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1002, file: !833, line: 60, baseType: !217, size: 64, offset: 192)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1002, file: !833, line: 61, baseType: !1012, size: 64, offset: 256)
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1013, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !833, line: 47, baseType: !1014)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !833, line: 44, size: 96, elements: !1015)
!1015 = !{!1016, !1017, !1018, !1019}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1014, file: !833, line: 45, baseType: !207, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1014, file: !833, line: 45, baseType: !207, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1014, file: !833, line: 46, baseType: !199, size: 16, offset: 64)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1014, file: !833, line: 46, baseType: !199, size: 16, offset: 80)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1002, file: !833, line: 62, baseType: !1012, size: 64, offset: 320)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1002, file: !833, line: 64, baseType: !1012, size: 64, offset: 384)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1002, file: !833, line: 65, baseType: !217, size: 64, offset: 448)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1002, file: !833, line: 66, baseType: !217, size: 64, offset: 512)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !984, file: !833, line: 80, baseType: !206, size: 96, offset: 2688)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !984, file: !833, line: 80, baseType: !206, size: 96, offset: 2784)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !984, file: !833, line: 81, baseType: !206, size: 96, offset: 2880)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !984, file: !833, line: 83, baseType: !206, size: 96, offset: 2976)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !692, file: !436, line: 255, baseType: !1029, size: 64, offset: 3136)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !436, line: 170, size: 8704, elements: !1031)
!1031 = !{!1032, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1030, file: !436, line: 171, baseType: !1033, size: 96)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 96, elements: !208)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1030, file: !436, line: 172, baseType: !135, size: 32, offset: 96)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1030, file: !436, line: 173, baseType: !199, size: 16, offset: 128)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1030, file: !436, line: 174, baseType: !199, size: 16, offset: 144)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1030, file: !436, line: 175, baseType: !199, size: 16, offset: 160)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1030, file: !436, line: 176, baseType: !199, size: 16, offset: 176)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1030, file: !436, line: 177, baseType: !199, size: 16, offset: 192)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1030, file: !436, line: 178, baseType: !199, size: 16, offset: 208)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1030, file: !436, line: 179, baseType: !135, size: 32, offset: 224)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1030, file: !436, line: 181, baseType: !414, size: 64, offset: 256)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1030, file: !436, line: 182, baseType: !207, size: 32, offset: 320)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1030, file: !436, line: 183, baseType: !135, size: 32, offset: 352)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1030, file: !436, line: 184, baseType: !299, size: 8192, offset: 384)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1030, file: !436, line: 187, baseType: !233, size: 64, offset: 8576)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1030, file: !436, line: 188, baseType: !135, size: 32, offset: 8640)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1030, file: !436, line: 189, baseType: !135, size: 32, offset: 8672)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !692, file: !436, line: 256, baseType: !1050, size: 64, offset: 3200)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !436, line: 193, size: 640, elements: !1052)
!1052 = !{!1053, !1054, !1055, !1056}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1051, file: !436, line: 194, baseType: !414, size: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1051, file: !436, line: 195, baseType: !270, size: 512, offset: 64)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1051, file: !436, line: 197, baseType: !135, size: 32, offset: 576)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1051, file: !436, line: 198, baseType: !135, size: 32, offset: 608)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !692, file: !436, line: 258, baseType: !271, size: 8, offset: 3264)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !692, file: !436, line: 259, baseType: !839, size: 56, offset: 3272)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !683, file: !436, line: 62, baseType: !270, size: 512, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !683, file: !436, line: 64, baseType: !271, size: 8, offset: 704)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !683, file: !436, line: 64, baseType: !271, size: 8, offset: 712)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !683, file: !436, line: 64, baseType: !271, size: 8, offset: 720)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !683, file: !436, line: 64, baseType: !271, size: 8, offset: 728)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !683, file: !436, line: 65, baseType: !206, size: 96, offset: 736)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !683, file: !436, line: 65, baseType: !206, size: 96, offset: 832)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !683, file: !436, line: 65, baseType: !207, size: 32, offset: 928)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !683, file: !436, line: 67, baseType: !199, size: 16, offset: 960)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !683, file: !436, line: 67, baseType: !199, size: 16, offset: 976)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !683, file: !436, line: 67, baseType: !199, size: 16, offset: 992)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !683, file: !436, line: 67, baseType: !199, size: 16, offset: 1008)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !683, file: !436, line: 68, baseType: !199, size: 16, offset: 1024)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !683, file: !436, line: 68, baseType: !199, size: 16, offset: 1040)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !683, file: !436, line: 69, baseType: !271, size: 8, offset: 1056)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !683, file: !436, line: 69, baseType: !839, size: 56, offset: 1064)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !683, file: !436, line: 70, baseType: !207, size: 32, offset: 1120)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !683, file: !436, line: 70, baseType: !207, size: 32, offset: 1152)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !683, file: !436, line: 70, baseType: !207, size: 32, offset: 1184)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !683, file: !436, line: 70, baseType: !207, size: 32, offset: 1216)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !683, file: !436, line: 71, baseType: !207, size: 32, offset: 1248)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !683, file: !436, line: 71, baseType: !207, size: 32, offset: 1280)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !683, file: !436, line: 74, baseType: !207, size: 32, offset: 1312)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !683, file: !436, line: 74, baseType: !207, size: 32, offset: 1344)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !683, file: !436, line: 77, baseType: !207, size: 32, offset: 1376)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !683, file: !436, line: 77, baseType: !207, size: 32, offset: 1408)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !683, file: !436, line: 77, baseType: !207, size: 32, offset: 1440)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !683, file: !436, line: 78, baseType: !207, size: 32, offset: 1472)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !683, file: !436, line: 78, baseType: !207, size: 32, offset: 1504)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !683, file: !436, line: 78, baseType: !207, size: 32, offset: 1536)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !683, file: !436, line: 79, baseType: !207, size: 32, offset: 1568)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !683, file: !436, line: 79, baseType: !207, size: 32, offset: 1600)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !683, file: !436, line: 79, baseType: !207, size: 32, offset: 1632)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !683, file: !436, line: 79, baseType: !207, size: 32, offset: 1664)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !683, file: !436, line: 80, baseType: !207, size: 32, offset: 1696)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !683, file: !436, line: 80, baseType: !207, size: 32, offset: 1728)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !683, file: !436, line: 80, baseType: !207, size: 32, offset: 1760)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !683, file: !436, line: 81, baseType: !207, size: 32, offset: 1792)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !683, file: !436, line: 81, baseType: !207, size: 32, offset: 1824)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !683, file: !436, line: 81, baseType: !207, size: 32, offset: 1856)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !683, file: !436, line: 82, baseType: !207, size: 32, offset: 1888)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !683, file: !436, line: 82, baseType: !207, size: 32, offset: 1920)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !683, file: !436, line: 82, baseType: !207, size: 32, offset: 1952)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !683, file: !436, line: 85, baseType: !207, size: 32, offset: 1984)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !683, file: !436, line: 85, baseType: !207, size: 32, offset: 2016)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !683, file: !436, line: 85, baseType: !207, size: 32, offset: 2048)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !683, file: !436, line: 85, baseType: !207, size: 32, offset: 2080)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !683, file: !436, line: 86, baseType: !207, size: 32, offset: 2112)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !683, file: !436, line: 86, baseType: !207, size: 32, offset: 2144)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !683, file: !436, line: 86, baseType: !207, size: 32, offset: 2176)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !683, file: !436, line: 86, baseType: !207, size: 32, offset: 2208)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !683, file: !436, line: 87, baseType: !207, size: 32, offset: 2240)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !683, file: !436, line: 87, baseType: !207, size: 32, offset: 2272)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !683, file: !436, line: 87, baseType: !207, size: 32, offset: 2304)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !683, file: !436, line: 87, baseType: !207, size: 32, offset: 2336)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !683, file: !436, line: 90, baseType: !207, size: 32, offset: 2368)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !683, file: !436, line: 93, baseType: !207, size: 32, offset: 2400)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !683, file: !436, line: 93, baseType: !207, size: 32, offset: 2432)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !683, file: !436, line: 93, baseType: !207, size: 32, offset: 2464)
!1118 = !{!1119}
!1119 = !DISubrange(count: 18)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !521, file: !522, line: 168, baseType: !764, size: 64, offset: 6144)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !521, file: !522, line: 169, baseType: !434, size: 64, offset: 6208)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !521, file: !522, line: 170, baseType: !1123, size: 64, offset: 6272)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1125, line: 51, size: 1216, elements: !1126)
!1125 = !DIFile(filename: "blender/source/blender/makesdna/DNA_group_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1126 = !{!1127, !1128, !1129, !1130}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1124, file: !1125, line: 52, baseType: !280, size: 960)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "gobject", scope: !1124, file: !1125, line: 54, baseType: !334, size: 128, offset: 960)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1124, file: !1125, line: 59, baseType: !7, size: 32, offset: 1088)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "dupli_ofs", scope: !1124, file: !1125, line: 60, baseType: !206, size: 96, offset: 1120)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !521, file: !522, line: 171, baseType: !806, size: 64, offset: 6336)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !521, file: !522, line: 174, baseType: !207, size: 32, offset: 6400)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !521, file: !522, line: 174, baseType: !207, size: 32, offset: 6432)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !521, file: !522, line: 174, baseType: !207, size: 32, offset: 6464)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !521, file: !522, line: 175, baseType: !207, size: 32, offset: 6496)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !521, file: !522, line: 175, baseType: !207, size: 32, offset: 6528)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !521, file: !522, line: 176, baseType: !199, size: 16, offset: 6560)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !521, file: !522, line: 176, baseType: !199, size: 16, offset: 6576)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !521, file: !522, line: 179, baseType: !206, size: 96, offset: 6592)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !521, file: !522, line: 179, baseType: !206, size: 96, offset: 6688)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !521, file: !522, line: 180, baseType: !207, size: 32, offset: 6784)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !521, file: !522, line: 180, baseType: !207, size: 32, offset: 6816)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !521, file: !522, line: 180, baseType: !207, size: 32, offset: 6848)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !521, file: !522, line: 181, baseType: !207, size: 32, offset: 6880)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !521, file: !522, line: 181, baseType: !207, size: 32, offset: 6912)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !521, file: !522, line: 182, baseType: !207, size: 32, offset: 6944)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !521, file: !522, line: 182, baseType: !207, size: 32, offset: 6976)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !521, file: !522, line: 183, baseType: !199, size: 16, offset: 7008)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !521, file: !522, line: 183, baseType: !199, size: 16, offset: 7024)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !521, file: !522, line: 185, baseType: !135, size: 32, offset: 7040)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !521, file: !522, line: 186, baseType: !199, size: 16, offset: 7072)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !521, file: !522, line: 187, baseType: !199, size: 16, offset: 7088)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !521, file: !522, line: 190, baseType: !638, size: 128, offset: 7104)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !521, file: !522, line: 191, baseType: !199, size: 16, offset: 7232)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !521, file: !522, line: 192, baseType: !199, size: 16, offset: 7248)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !521, file: !522, line: 195, baseType: !199, size: 16, offset: 7264)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !521, file: !522, line: 196, baseType: !199, size: 16, offset: 7280)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !521, file: !522, line: 197, baseType: !199, size: 16, offset: 7296)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !521, file: !522, line: 198, baseType: !976, size: 48, offset: 7312)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !521, file: !522, line: 200, baseType: !1161, size: 64, offset: 7360)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !522, line: 86, size: 192, elements: !1163)
!1163 = !{!1164, !1165, !1167, !1168}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1162, file: !522, line: 87, baseType: !768, size: 64)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1162, file: !522, line: 88, baseType: !1166, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1162, file: !522, line: 89, baseType: !135, size: 32, offset: 128)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1162, file: !522, line: 90, baseType: !135, size: 32, offset: 160)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !521, file: !522, line: 202, baseType: !334, size: 128, offset: 7424)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !415, file: !152, line: 151, baseType: !1166, size: 64, offset: 3584)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !415, file: !152, line: 152, baseType: !135, size: 32, offset: 3648)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !415, file: !152, line: 153, baseType: !135, size: 32, offset: 3680)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !415, file: !152, line: 156, baseType: !206, size: 96, offset: 3712)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !415, file: !152, line: 156, baseType: !206, size: 96, offset: 3808)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !415, file: !152, line: 156, baseType: !206, size: 96, offset: 3904)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !415, file: !152, line: 157, baseType: !206, size: 96, offset: 4000)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !415, file: !152, line: 158, baseType: !206, size: 96, offset: 4096)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !415, file: !152, line: 159, baseType: !206, size: 96, offset: 4192)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !415, file: !152, line: 160, baseType: !206, size: 96, offset: 4288)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !415, file: !152, line: 160, baseType: !206, size: 96, offset: 4384)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !415, file: !152, line: 161, baseType: !638, size: 128, offset: 4480)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !415, file: !152, line: 161, baseType: !638, size: 128, offset: 4608)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !415, file: !152, line: 162, baseType: !206, size: 96, offset: 4736)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !415, file: !152, line: 162, baseType: !206, size: 96, offset: 4832)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !415, file: !152, line: 163, baseType: !207, size: 32, offset: 4928)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !415, file: !152, line: 163, baseType: !207, size: 32, offset: 4960)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !415, file: !152, line: 164, baseType: !935, size: 512, offset: 4992)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !415, file: !152, line: 165, baseType: !935, size: 512, offset: 5504)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !415, file: !152, line: 166, baseType: !935, size: 512, offset: 6016)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !415, file: !152, line: 167, baseType: !935, size: 512, offset: 6528)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !415, file: !152, line: 176, baseType: !935, size: 512, offset: 7040)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !415, file: !152, line: 178, baseType: !7, size: 32, offset: 7552)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !415, file: !152, line: 180, baseType: !199, size: 16, offset: 7584)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !415, file: !152, line: 181, baseType: !199, size: 16, offset: 7600)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !415, file: !152, line: 183, baseType: !199, size: 16, offset: 7616)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !415, file: !152, line: 183, baseType: !199, size: 16, offset: 7632)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !415, file: !152, line: 184, baseType: !199, size: 16, offset: 7648)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !415, file: !152, line: 184, baseType: !199, size: 16, offset: 7664)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !415, file: !152, line: 185, baseType: !199, size: 16, offset: 7680)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !415, file: !152, line: 186, baseType: !199, size: 16, offset: 7696)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !415, file: !152, line: 187, baseType: !199, size: 16, offset: 7712)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !415, file: !152, line: 188, baseType: !271, size: 8, offset: 7728)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !415, file: !152, line: 189, baseType: !271, size: 8, offset: 7736)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !415, file: !152, line: 192, baseType: !135, size: 32, offset: 7744)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !415, file: !152, line: 192, baseType: !135, size: 32, offset: 7776)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !415, file: !152, line: 192, baseType: !135, size: 32, offset: 7808)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !415, file: !152, line: 192, baseType: !135, size: 32, offset: 7840)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !415, file: !152, line: 194, baseType: !135, size: 32, offset: 7872)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !415, file: !152, line: 202, baseType: !207, size: 32, offset: 7904)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !415, file: !152, line: 202, baseType: !207, size: 32, offset: 7936)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !415, file: !152, line: 202, baseType: !207, size: 32, offset: 7968)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !415, file: !152, line: 211, baseType: !207, size: 32, offset: 8000)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !415, file: !152, line: 212, baseType: !207, size: 32, offset: 8032)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !415, file: !152, line: 213, baseType: !207, size: 32, offset: 8064)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !415, file: !152, line: 214, baseType: !207, size: 32, offset: 8096)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !415, file: !152, line: 215, baseType: !207, size: 32, offset: 8128)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !415, file: !152, line: 216, baseType: !207, size: 32, offset: 8160)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !415, file: !152, line: 219, baseType: !207, size: 32, offset: 8192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !415, file: !152, line: 220, baseType: !207, size: 32, offset: 8224)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !415, file: !152, line: 221, baseType: !207, size: 32, offset: 8256)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !415, file: !152, line: 224, baseType: !1222, size: 16, offset: 8288)
!1222 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !415, file: !152, line: 224, baseType: !1222, size: 16, offset: 8304)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !415, file: !152, line: 226, baseType: !199, size: 16, offset: 8320)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !415, file: !152, line: 228, baseType: !271, size: 8, offset: 8336)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !415, file: !152, line: 229, baseType: !271, size: 8, offset: 8344)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !415, file: !152, line: 231, baseType: !199, size: 16, offset: 8352)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !415, file: !152, line: 232, baseType: !271, size: 8, offset: 8368)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !415, file: !152, line: 233, baseType: !271, size: 8, offset: 8376)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !415, file: !152, line: 234, baseType: !207, size: 32, offset: 8384)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !415, file: !152, line: 235, baseType: !207, size: 32, offset: 8416)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !415, file: !152, line: 237, baseType: !334, size: 128, offset: 8448)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !415, file: !152, line: 238, baseType: !334, size: 128, offset: 8576)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !415, file: !152, line: 239, baseType: !334, size: 128, offset: 8704)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !415, file: !152, line: 240, baseType: !334, size: 128, offset: 8832)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !415, file: !152, line: 242, baseType: !207, size: 32, offset: 8960)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !415, file: !152, line: 244, baseType: !199, size: 16, offset: 8992)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !415, file: !152, line: 245, baseType: !1222, size: 16, offset: 9008)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !415, file: !152, line: 246, baseType: !638, size: 128, offset: 9024)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !415, file: !152, line: 248, baseType: !135, size: 32, offset: 9152)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !415, file: !152, line: 249, baseType: !135, size: 32, offset: 9184)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !415, file: !152, line: 251, baseType: !1243, size: 64, offset: 9216)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !1245, line: 215, size: 960, elements: !1246)
!1245 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_force.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1246 = !{!1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1244, file: !1245, line: 216, baseType: !135, size: 32)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "linStiff", scope: !1244, file: !1245, line: 217, baseType: !207, size: 32, offset: 32)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "angStiff", scope: !1244, file: !1245, line: 218, baseType: !207, size: 32, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1244, file: !1245, line: 219, baseType: !207, size: 32, offset: 96)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "viterations", scope: !1244, file: !1245, line: 221, baseType: !135, size: 32, offset: 128)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "piterations", scope: !1244, file: !1245, line: 222, baseType: !135, size: 32, offset: 160)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "diterations", scope: !1244, file: !1245, line: 223, baseType: !135, size: 32, offset: 192)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "citerations", scope: !1244, file: !1245, line: 224, baseType: !135, size: 32, offset: 224)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "kSRHR_CL", scope: !1244, file: !1245, line: 226, baseType: !207, size: 32, offset: 256)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "kSKHR_CL", scope: !1244, file: !1245, line: 227, baseType: !207, size: 32, offset: 288)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "kSSHR_CL", scope: !1244, file: !1245, line: 228, baseType: !207, size: 32, offset: 320)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "kSR_SPLT_CL", scope: !1244, file: !1245, line: 229, baseType: !207, size: 32, offset: 352)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "kSK_SPLT_CL", scope: !1244, file: !1245, line: 231, baseType: !207, size: 32, offset: 384)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "kSS_SPLT_CL", scope: !1244, file: !1245, line: 232, baseType: !207, size: 32, offset: 416)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "kVCF", scope: !1244, file: !1245, line: 233, baseType: !207, size: 32, offset: 448)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "kDP", scope: !1244, file: !1245, line: 234, baseType: !207, size: 32, offset: 480)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "kDG", scope: !1244, file: !1245, line: 236, baseType: !207, size: 32, offset: 512)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "kLF", scope: !1244, file: !1245, line: 237, baseType: !207, size: 32, offset: 544)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "kPR", scope: !1244, file: !1245, line: 238, baseType: !207, size: 32, offset: 576)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "kVC", scope: !1244, file: !1245, line: 239, baseType: !207, size: 32, offset: 608)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "kDF", scope: !1244, file: !1245, line: 241, baseType: !207, size: 32, offset: 640)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "kMT", scope: !1244, file: !1245, line: 242, baseType: !207, size: 32, offset: 672)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "kCHR", scope: !1244, file: !1245, line: 243, baseType: !207, size: 32, offset: 704)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "kKHR", scope: !1244, file: !1245, line: 244, baseType: !207, size: 32, offset: 736)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "kSHR", scope: !1244, file: !1245, line: 246, baseType: !207, size: 32, offset: 768)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "kAHR", scope: !1244, file: !1245, line: 247, baseType: !207, size: 32, offset: 800)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "collisionflags", scope: !1244, file: !1245, line: 248, baseType: !135, size: 32, offset: 832)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "numclusteriterations", scope: !1244, file: !1245, line: 249, baseType: !135, size: 32, offset: 864)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "welding", scope: !1244, file: !1245, line: 250, baseType: !207, size: 32, offset: 896)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1244, file: !1245, line: 251, baseType: !207, size: 32, offset: 928)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !415, file: !152, line: 253, baseType: !271, size: 8, offset: 9280)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !415, file: !152, line: 254, baseType: !271, size: 8, offset: 9288)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !415, file: !152, line: 255, baseType: !199, size: 16, offset: 9296)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !415, file: !152, line: 256, baseType: !206, size: 96, offset: 9312)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !415, file: !152, line: 258, baseType: !334, size: 128, offset: 9408)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !415, file: !152, line: 259, baseType: !334, size: 128, offset: 9536)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !415, file: !152, line: 260, baseType: !334, size: 128, offset: 9664)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !415, file: !152, line: 261, baseType: !334, size: 128, offset: 9792)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !415, file: !152, line: 263, baseType: !1286, size: 64, offset: 9920)
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !1245, line: 61, size: 1280, elements: !1288)
!1288 = !{!1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1330, !1331, !1332}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1287, file: !1245, line: 62, baseType: !135, size: 32)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "deflect", scope: !1287, file: !1245, line: 63, baseType: !199, size: 16, offset: 32)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "forcefield", scope: !1287, file: !1245, line: 64, baseType: !199, size: 16, offset: 48)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "falloff", scope: !1287, file: !1245, line: 65, baseType: !199, size: 16, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "shape", scope: !1287, file: !1245, line: 66, baseType: !199, size: 16, offset: 80)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mode", scope: !1287, file: !1245, line: 67, baseType: !199, size: 16, offset: 96)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !1287, file: !1245, line: 68, baseType: !199, size: 16, offset: 112)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !1287, file: !1245, line: 68, baseType: !199, size: 16, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "zdir", scope: !1287, file: !1245, line: 69, baseType: !199, size: 16, offset: 144)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "f_strength", scope: !1287, file: !1245, line: 72, baseType: !207, size: 32, offset: 160)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "f_damp", scope: !1287, file: !1245, line: 73, baseType: !207, size: 32, offset: 192)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "f_flow", scope: !1287, file: !1245, line: 74, baseType: !207, size: 32, offset: 224)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "f_size", scope: !1287, file: !1245, line: 77, baseType: !207, size: 32, offset: 256)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "f_power", scope: !1287, file: !1245, line: 80, baseType: !207, size: 32, offset: 288)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "maxdist", scope: !1287, file: !1245, line: 81, baseType: !207, size: 32, offset: 320)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "mindist", scope: !1287, file: !1245, line: 82, baseType: !207, size: 32, offset: 352)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "f_power_r", scope: !1287, file: !1245, line: 83, baseType: !207, size: 32, offset: 384)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "maxrad", scope: !1287, file: !1245, line: 84, baseType: !207, size: 32, offset: 416)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "minrad", scope: !1287, file: !1245, line: 85, baseType: !207, size: 32, offset: 448)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_damp", scope: !1287, file: !1245, line: 88, baseType: !207, size: 32, offset: 480)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rdamp", scope: !1287, file: !1245, line: 89, baseType: !207, size: 32, offset: 512)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_perm", scope: !1287, file: !1245, line: 90, baseType: !207, size: 32, offset: 544)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_frict", scope: !1287, file: !1245, line: 91, baseType: !207, size: 32, offset: 576)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_rfrict", scope: !1287, file: !1245, line: 92, baseType: !207, size: 32, offset: 608)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_stickness", scope: !1287, file: !1245, line: 93, baseType: !207, size: 32, offset: 640)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "absorption", scope: !1287, file: !1245, line: 95, baseType: !207, size: 32, offset: 672)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbdamp", scope: !1287, file: !1245, line: 98, baseType: !207, size: 32, offset: 704)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sbift", scope: !1287, file: !1245, line: 99, baseType: !207, size: 32, offset: 736)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "pdef_sboft", scope: !1287, file: !1245, line: 100, baseType: !207, size: 32, offset: 768)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "clump_fac", scope: !1287, file: !1245, line: 103, baseType: !207, size: 32, offset: 800)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "clump_pow", scope: !1287, file: !1245, line: 103, baseType: !207, size: 32, offset: 832)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !1287, file: !1245, line: 104, baseType: !207, size: 32, offset: 864)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !1287, file: !1245, line: 104, baseType: !207, size: 32, offset: 896)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !1287, file: !1245, line: 104, baseType: !207, size: 32, offset: 928)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "free_end", scope: !1287, file: !1245, line: 104, baseType: !207, size: 32, offset: 960)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "tex_nabla", scope: !1287, file: !1245, line: 107, baseType: !207, size: 32, offset: 992)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !1287, file: !1245, line: 108, baseType: !691, size: 64, offset: 1024)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "rng", scope: !1287, file: !1245, line: 111, baseType: !1327, size: 64, offset: 1088)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "RNG", file: !1329, line: 43, flags: DIFlagFwdDecl)
!1329 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "f_noise", scope: !1287, file: !1245, line: 112, baseType: !207, size: 32, offset: 1152)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1287, file: !1245, line: 113, baseType: !135, size: 32, offset: 1184)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "f_source", scope: !1287, file: !1245, line: 115, baseType: !414, size: 64, offset: 1216)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !415, file: !152, line: 264, baseType: !1334, size: 64, offset: 9984)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !1245, line: 268, size: 3776, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1342, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1394, !1395, !1396, !2415, !2416, !2417, !2418, !2419, !2420}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1335, file: !1245, line: 270, baseType: !135, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "totspring", scope: !1335, file: !1245, line: 270, baseType: !135, size: 32, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "bpoint", scope: !1335, file: !1245, line: 271, baseType: !1340, size: 64, offset: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodyPoint", file: !1245, line: 271, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "bspring", scope: !1335, file: !1245, line: 272, baseType: !1343, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1344, size: 64)
!1344 = !DICompositeType(tag: DW_TAG_structure_type, name: "BodySpring", file: !1245, line: 272, flags: DIFlagFwdDecl)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1335, file: !1245, line: 273, baseType: !271, size: 8, offset: 192)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "msg_lock", scope: !1335, file: !1245, line: 274, baseType: !271, size: 8, offset: 200)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "msg_value", scope: !1335, file: !1245, line: 275, baseType: !199, size: 16, offset: 208)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "nodemass", scope: !1335, file: !1245, line: 280, baseType: !207, size: 32, offset: 224)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Mass", scope: !1335, file: !1245, line: 281, baseType: !270, size: 512, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "grav", scope: !1335, file: !1245, line: 285, baseType: !207, size: 32, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "mediafrict", scope: !1335, file: !1245, line: 286, baseType: !207, size: 32, offset: 800)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "rklimit", scope: !1335, file: !1245, line: 287, baseType: !207, size: 32, offset: 832)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "physics_speed", scope: !1335, file: !1245, line: 288, baseType: !207, size: 32, offset: 864)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "goalspring", scope: !1335, file: !1245, line: 291, baseType: !207, size: 32, offset: 896)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "goalfrict", scope: !1335, file: !1245, line: 292, baseType: !207, size: 32, offset: 928)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "mingoal", scope: !1335, file: !1245, line: 293, baseType: !207, size: 32, offset: 960)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "maxgoal", scope: !1335, file: !1245, line: 294, baseType: !207, size: 32, offset: 992)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "defgoal", scope: !1335, file: !1245, line: 295, baseType: !207, size: 32, offset: 1024)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "vertgroup", scope: !1335, file: !1245, line: 296, baseType: !199, size: 16, offset: 1056)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Softgoal", scope: !1335, file: !1245, line: 297, baseType: !270, size: 512, offset: 1072)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "fuzzyness", scope: !1335, file: !1245, line: 301, baseType: !199, size: 16, offset: 1584)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "inspring", scope: !1335, file: !1245, line: 304, baseType: !207, size: 32, offset: 1600)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "infrict", scope: !1335, file: !1245, line: 305, baseType: !207, size: 32, offset: 1632)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "namedVG_Spring_K", scope: !1335, file: !1245, line: 306, baseType: !270, size: 512, offset: 1664)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1335, file: !1245, line: 312, baseType: !135, size: 32, offset: 2176)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1335, file: !1245, line: 312, baseType: !135, size: 32, offset: 2208)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1335, file: !1245, line: 313, baseType: !135, size: 32, offset: 2240)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !1335, file: !1245, line: 314, baseType: !199, size: 16, offset: 2272)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "solverflags", scope: !1335, file: !1245, line: 314, baseType: !199, size: 16, offset: 2288)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1335, file: !1245, line: 317, baseType: !1371, size: 64, offset: 2304)
!1371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1372, size: 64)
!1372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1373, size: 64)
!1373 = !DIDerivedType(tag: DW_TAG_typedef, name: "SBVertex", file: !1245, line: 213, baseType: !1374)
!1374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SBVertex", file: !1245, line: 211, size: 128, elements: !1375)
!1375 = !{!1376}
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1374, file: !1245, line: 212, baseType: !638, size: 128)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "totpointkey", scope: !1335, file: !1245, line: 318, baseType: !135, size: 32, offset: 2368)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1335, file: !1245, line: 318, baseType: !135, size: 32, offset: 2400)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "secondspring", scope: !1335, file: !1245, line: 320, baseType: !207, size: 32, offset: 2432)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "colball", scope: !1335, file: !1245, line: 323, baseType: !207, size: 32, offset: 2464)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "balldamp", scope: !1335, file: !1245, line: 324, baseType: !207, size: 32, offset: 2496)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "ballstiff", scope: !1335, file: !1245, line: 325, baseType: !207, size: 32, offset: 2528)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sbc_mode", scope: !1335, file: !1245, line: 326, baseType: !199, size: 16, offset: 2560)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "aeroedge", scope: !1335, file: !1245, line: 327, baseType: !199, size: 16, offset: 2576)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "minloops", scope: !1335, file: !1245, line: 328, baseType: !199, size: 16, offset: 2592)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "maxloops", scope: !1335, file: !1245, line: 329, baseType: !199, size: 16, offset: 2608)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "choke", scope: !1335, file: !1245, line: 330, baseType: !199, size: 16, offset: 2624)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "solver_ID", scope: !1335, file: !1245, line: 331, baseType: !199, size: 16, offset: 2640)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "plastic", scope: !1335, file: !1245, line: 332, baseType: !199, size: 16, offset: 2656)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "springpreload", scope: !1335, file: !1245, line: 332, baseType: !199, size: 16, offset: 2672)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "scratch", scope: !1335, file: !1245, line: 335, baseType: !1392, size: 64, offset: 2688)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DICompositeType(tag: DW_TAG_structure_type, name: "SBScratch", file: !1245, line: 335, flags: DIFlagFwdDecl)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "shearstiff", scope: !1335, file: !1245, line: 336, baseType: !207, size: 32, offset: 2752)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "inpush", scope: !1335, file: !1245, line: 337, baseType: !207, size: 32, offset: 2784)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1335, file: !1245, line: 339, baseType: !1397, size: 64, offset: 2816)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointCache", file: !1245, line: 170, size: 10560, elements: !1399)
!1399 = !{!1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !2414}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1398, file: !1245, line: 171, baseType: !1397, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1398, file: !1245, line: 171, baseType: !1397, size: 64, offset: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1398, file: !1245, line: 172, baseType: !135, size: 32, offset: 128)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1398, file: !1245, line: 174, baseType: !135, size: 32, offset: 160)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "simframe", scope: !1398, file: !1245, line: 186, baseType: !135, size: 32, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "startframe", scope: !1398, file: !1245, line: 187, baseType: !135, size: 32, offset: 224)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "endframe", scope: !1398, file: !1245, line: 188, baseType: !135, size: 32, offset: 256)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "editframe", scope: !1398, file: !1245, line: 189, baseType: !135, size: 32, offset: 288)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "last_exact", scope: !1398, file: !1245, line: 190, baseType: !135, size: 32, offset: 320)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "last_valid", scope: !1398, file: !1245, line: 191, baseType: !135, size: 32, offset: 352)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1398, file: !1245, line: 192, baseType: !135, size: 32, offset: 384)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1398, file: !1245, line: 195, baseType: !135, size: 32, offset: 416)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1398, file: !1245, line: 196, baseType: !135, size: 32, offset: 448)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1398, file: !1245, line: 197, baseType: !199, size: 16, offset: 480)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1398, file: !1245, line: 197, baseType: !199, size: 16, offset: 496)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1398, file: !1245, line: 199, baseType: !270, size: 512, offset: 512)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "prev_name", scope: !1398, file: !1245, line: 200, baseType: !270, size: 512, offset: 1024)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1398, file: !1245, line: 201, baseType: !270, size: 512, offset: 1536)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !1398, file: !1245, line: 202, baseType: !299, size: 8192, offset: 2048)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "cached_frames", scope: !1398, file: !1245, line: 203, baseType: !1166, size: 64, offset: 10240)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1398, file: !1245, line: 205, baseType: !336, size: 128, offset: 10304)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1398, file: !1245, line: 207, baseType: !1422, size: 64, offset: 10432)
!1422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1423, size: 64)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEdit", file: !1424, line: 235, size: 2560, elements: !1425)
!1424 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pointcache.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1425 = !{!1426, !1427, !1518, !1521, !1677, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2413}
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "undo", scope: !1423, file: !1424, line: 236, baseType: !334, size: 128)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "curundo", scope: !1423, file: !1424, line: 237, baseType: !1428, size: 64, offset: 128)
!1428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1429, size: 64)
!1429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheUndo", file: !1424, line: 218, size: 1152, elements: !1430)
!1430 = !{!1431, !1432, !1433, !1451, !1509, !1513, !1514, !1515, !1516, !1517}
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1429, file: !1424, line: 219, baseType: !1428, size: 64)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1429, file: !1424, line: 219, baseType: !1428, size: 64, offset: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1429, file: !1424, line: 220, baseType: !1434, size: 64, offset: 128)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditPoint", file: !1424, line: 212, size: 128, elements: !1436)
!1436 = !{!1437, !1449, !1450}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1435, file: !1424, line: 213, baseType: !1438, size: 64)
!1438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1439, size: 64)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheEditKey", file: !1424, line: 194, size: 448, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1439, file: !1424, line: 195, baseType: !233, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1439, file: !1424, line: 196, baseType: !233, size: 64, offset: 64)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1439, file: !1424, line: 197, baseType: !233, size: 64, offset: 128)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1439, file: !1424, line: 198, baseType: !233, size: 64, offset: 192)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "world_co", scope: !1439, file: !1424, line: 200, baseType: !206, size: 96, offset: 256)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "ftime", scope: !1439, file: !1424, line: 201, baseType: !207, size: 32, offset: 352)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1439, file: !1424, line: 202, baseType: !207, size: 32, offset: 384)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !1424, line: 203, baseType: !199, size: 16, offset: 416)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1435, file: !1424, line: 214, baseType: !135, size: 32, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1435, file: !1424, line: 215, baseType: !199, size: 16, offset: 96)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1429, file: !1424, line: 223, baseType: !1452, size: 64, offset: 192)
!1452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1453, size: 64)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleData", file: !1454, line: 95, size: 1600, elements: !1455)
!1454 = !DIFile(filename: "blender/source/blender/makesdna/DNA_particle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1455 = !{!1456, !1465, !1466, !1476, !1478, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508}
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1453, file: !1454, line: 96, baseType: !1457, size: 448)
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleKey", file: !1454, line: 55, baseType: !1458)
!1458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleKey", file: !1454, line: 49, size: 448, elements: !1459)
!1459 = !{!1460, !1461, !1462, !1463, !1464}
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1458, file: !1454, line: 50, baseType: !206, size: 96)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1458, file: !1454, line: 51, baseType: !206, size: 96, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1458, file: !1454, line: 52, baseType: !638, size: 128, offset: 192)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1458, file: !1454, line: 53, baseType: !206, size: 96, offset: 320)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1458, file: !1454, line: 54, baseType: !207, size: 32, offset: 416)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "prev_state", scope: !1453, file: !1454, line: 98, baseType: !1457, size: 448, offset: 448)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "hair", scope: !1453, file: !1454, line: 100, baseType: !1467, size: 64, offset: 896)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_typedef, name: "HairKey", file: !1454, line: 47, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "HairKey", file: !1454, line: 41, size: 192, elements: !1470)
!1470 = !{!1471, !1472, !1473, !1474, !1475}
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1469, file: !1454, line: 42, baseType: !206, size: 96)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1469, file: !1454, line: 43, baseType: !207, size: 32, offset: 96)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1469, file: !1454, line: 44, baseType: !207, size: 32, offset: 128)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !1469, file: !1454, line: 45, baseType: !199, size: 16, offset: 160)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1469, file: !1454, line: 46, baseType: !199, size: 16, offset: 176)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1453, file: !1454, line: 102, baseType: !1477, size: 64, offset: 960)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "boid", scope: !1453, file: !1454, line: 104, baseType: !1479, size: 64, offset: 1024)
!1479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1480, size: 64)
!1480 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoidParticle", file: !1454, line: 63, baseType: !1481)
!1481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidParticle", file: !1454, line: 57, size: 448, elements: !1482)
!1482 = !{!1483, !1484, !1492, !1493, !1494}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "ground", scope: !1481, file: !1454, line: 58, baseType: !414, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1481, file: !1454, line: 59, baseType: !1485, size: 160, offset: 64)
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidData", file: !1486, line: 109, size: 160, elements: !1487)
!1486 = !DIFile(filename: "blender/source/blender/makesdna/DNA_boid_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1487 = !{!1488, !1489, !1490, !1491}
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1485, file: !1486, line: 110, baseType: !207, size: 32)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1485, file: !1486, line: 110, baseType: !206, size: 96, offset: 32)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "state_id", scope: !1485, file: !1486, line: 111, baseType: !199, size: 16, offset: 128)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1485, file: !1486, line: 111, baseType: !199, size: 16, offset: 144)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1481, file: !1454, line: 60, baseType: !206, size: 96, offset: 224)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "wander", scope: !1481, file: !1454, line: 61, baseType: !206, size: 96, offset: 320)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1481, file: !1454, line: 62, baseType: !207, size: 32, offset: 416)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "totkey", scope: !1453, file: !1454, line: 106, baseType: !135, size: 32, offset: 1088)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1453, file: !1454, line: 108, baseType: !207, size: 32, offset: 1120)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !1453, file: !1454, line: 108, baseType: !207, size: 32, offset: 1152)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "dietime", scope: !1453, file: !1454, line: 109, baseType: !207, size: 32, offset: 1184)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1453, file: !1454, line: 111, baseType: !135, size: 32, offset: 1216)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "num_dmcache", scope: !1453, file: !1454, line: 112, baseType: !135, size: 32, offset: 1248)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !1453, file: !1454, line: 114, baseType: !638, size: 128, offset: 1280)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !1453, file: !1454, line: 114, baseType: !207, size: 32, offset: 1408)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1453, file: !1454, line: 117, baseType: !207, size: 32, offset: 1440)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "sphdensity", scope: !1453, file: !1454, line: 119, baseType: !207, size: 32, offset: 1472)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1453, file: !1454, line: 120, baseType: !135, size: 32, offset: 1504)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "hair_index", scope: !1453, file: !1454, line: 122, baseType: !135, size: 32, offset: 1536)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1453, file: !1454, line: 123, baseType: !199, size: 16, offset: 1568)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "alive", scope: !1453, file: !1454, line: 124, baseType: !199, size: 16, offset: 1584)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1429, file: !1424, line: 224, baseType: !1510, size: 64, offset: 256)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "KDTree", file: !1512, line: 36, flags: DIFlagFwdDecl)
!1512 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdtree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1429, file: !1424, line: 225, baseType: !233, size: 64, offset: 320)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "psys_flag", scope: !1429, file: !1424, line: 226, baseType: !135, size: 32, offset: 384)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "mem_cache", scope: !1429, file: !1424, line: 229, baseType: !336, size: 128, offset: 448)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1429, file: !1424, line: 231, baseType: !135, size: 32, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1429, file: !1424, line: 232, baseType: !270, size: 512, offset: 608)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1423, file: !1424, line: 238, baseType: !1519, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1520, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheEditPoint", file: !1424, line: 216, baseType: !1435)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1423, file: !1424, line: 240, baseType: !1522, size: 1600, offset: 256)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheID", file: !1424, line: 122, size: 1600, elements: !1523)
!1523 = !{!1524, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1542, !1546, !1550, !1631, !1632, !1648, !1652, !1656, !1660, !1666, !1667, !1671, !1672, !1673, !1675}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1522, file: !1424, line: 123, baseType: !1525, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1522, file: !1424, line: 123, baseType: !1525, size: 64, offset: 64)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1522, file: !1424, line: 125, baseType: !275, size: 64, offset: 128)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1522, file: !1424, line: 126, baseType: !414, size: 64, offset: 192)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "calldata", scope: !1522, file: !1424, line: 127, baseType: !221, size: 64, offset: 256)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1522, file: !1424, line: 128, baseType: !7, size: 32, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "stack_index", scope: !1522, file: !1424, line: 129, baseType: !7, size: 32, offset: 352)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1522, file: !1424, line: 130, baseType: !7, size: 32, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "default_step", scope: !1522, file: !1424, line: 132, baseType: !7, size: 32, offset: 416)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "max_step", scope: !1522, file: !1424, line: 133, baseType: !7, size: 32, offset: 448)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1522, file: !1424, line: 136, baseType: !7, size: 32, offset: 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "info_types", scope: !1522, file: !1424, line: 136, baseType: !7, size: 32, offset: 512)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "write_point", scope: !1522, file: !1424, line: 139, baseType: !1538, size: 64, offset: 576)
!1538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1539, size: 64)
!1539 = !DISubroutineType(types: !1540)
!1540 = !{!135, !135, !221, !1541, !135}
!1541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !221, size: 64)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "read_point", scope: !1522, file: !1424, line: 141, baseType: !1543, size: 64, offset: 640)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DISubroutineType(types: !1545)
!1545 = !{null, !135, !221, !1541, !207, !233}
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_point", scope: !1522, file: !1424, line: 143, baseType: !1547, size: 64, offset: 704)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DISubroutineType(types: !1549)
!1549 = !{null, !135, !221, !1541, !207, !207, !207, !233}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "write_stream", scope: !1522, file: !1424, line: 146, baseType: !1551, size: 64, offset: 768)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = !DISubroutineType(types: !1553)
!1553 = !{!135, !1554, !221}
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheFile", file: !1424, line: 118, baseType: !1556)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheFile", file: !1424, line: 109, size: 1536, elements: !1557)
!1557 = !{!1558, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1629}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "fp", scope: !1556, file: !1424, line: 110, baseType: !1559, size: 64)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1561, line: 7, baseType: !1562)
!1561 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1563, line: 49, size: 1728, elements: !1564)
!1563 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1580, !1582, !1583, !1584, !1588, !1589, !1591, !1592, !1595, !1597, !1600, !1603, !1604, !1605, !1609, !1610}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1562, file: !1563, line: 51, baseType: !135, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1562, file: !1563, line: 54, baseType: !1166, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1562, file: !1563, line: 55, baseType: !1166, size: 64, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1562, file: !1563, line: 56, baseType: !1166, size: 64, offset: 192)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1562, file: !1563, line: 57, baseType: !1166, size: 64, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1562, file: !1563, line: 58, baseType: !1166, size: 64, offset: 320)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1562, file: !1563, line: 59, baseType: !1166, size: 64, offset: 384)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1562, file: !1563, line: 60, baseType: !1166, size: 64, offset: 448)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1562, file: !1563, line: 61, baseType: !1166, size: 64, offset: 512)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1562, file: !1563, line: 64, baseType: !1166, size: 64, offset: 576)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1562, file: !1563, line: 65, baseType: !1166, size: 64, offset: 640)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1562, file: !1563, line: 66, baseType: !1166, size: 64, offset: 704)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1562, file: !1563, line: 68, baseType: !1578, size: 64, offset: 768)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1563, line: 36, flags: DIFlagFwdDecl)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1562, file: !1563, line: 70, baseType: !1581, size: 64, offset: 832)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1562, file: !1563, line: 72, baseType: !135, size: 32, offset: 896)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1562, file: !1563, line: 73, baseType: !135, size: 32, offset: 928)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1562, file: !1563, line: 74, baseType: !1585, size: 64, offset: 960)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !1586, line: 152, baseType: !1587)
!1586 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1587 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1562, file: !1563, line: 77, baseType: !1222, size: 16, offset: 1024)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1562, file: !1563, line: 78, baseType: !1590, size: 8, offset: 1040)
!1590 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1562, file: !1563, line: 79, baseType: !655, size: 8, offset: 1048)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1562, file: !1563, line: 81, baseType: !1593, size: 64, offset: 1088)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1563, line: 43, baseType: null)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1562, file: !1563, line: 89, baseType: !1596, size: 64, offset: 1152)
!1596 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !1586, line: 153, baseType: !1587)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1562, file: !1563, line: 91, baseType: !1598, size: 64, offset: 1216)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1599, size: 64)
!1599 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1563, line: 37, flags: DIFlagFwdDecl)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1562, file: !1563, line: 92, baseType: !1601, size: 64, offset: 1280)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1563, line: 38, flags: DIFlagFwdDecl)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1562, file: !1563, line: 93, baseType: !1581, size: 64, offset: 1344)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1562, file: !1563, line: 94, baseType: !221, size: 64, offset: 1408)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1562, file: !1563, line: 95, baseType: !1606, size: 64, offset: 1472)
!1606 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1607, line: 46, baseType: !1608)
!1607 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1608 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1562, file: !1563, line: 96, baseType: !135, size: 32, offset: 1536)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1562, file: !1563, line: 98, baseType: !1611, size: 160, offset: 1568)
!1611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 160, elements: !886)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1556, file: !1424, line: 112, baseType: !135, size: 32, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "old_format", scope: !1556, file: !1424, line: 112, baseType: !135, size: 32, offset: 96)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1556, file: !1424, line: 113, baseType: !7, size: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1556, file: !1424, line: 113, baseType: !7, size: 32, offset: 160)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1556, file: !1424, line: 114, baseType: !7, size: 32, offset: 192)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1556, file: !1424, line: 114, baseType: !7, size: 32, offset: 224)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1556, file: !1424, line: 116, baseType: !1619, size: 736, offset: 256)
!1619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheData", file: !1424, line: 98, size: 736, elements: !1620)
!1620 = !{!1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628}
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1619, file: !1424, line: 99, baseType: !7, size: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1619, file: !1424, line: 100, baseType: !206, size: 96, offset: 32)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1619, file: !1424, line: 101, baseType: !206, size: 96, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1619, file: !1424, line: 102, baseType: !638, size: 128, offset: 224)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !1619, file: !1424, line: 103, baseType: !206, size: 96, offset: 352)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1619, file: !1424, line: 104, baseType: !207, size: 32, offset: 448)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "times", scope: !1619, file: !1424, line: 105, baseType: !206, size: 96, offset: 480)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1619, file: !1424, line: 106, baseType: !1485, size: 160, offset: 576)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1556, file: !1424, line: 117, baseType: !1630, size: 512, offset: 1024)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !221, size: 512, elements: !787)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "read_stream", scope: !1522, file: !1424, line: 148, baseType: !1551, size: 64, offset: 832)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "write_extra_data", scope: !1522, file: !1424, line: 151, baseType: !1633, size: 64, offset: 896)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{null, !221, !1636, !135}
!1636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1637, size: 64)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PTCacheMem", file: !1245, line: 159, size: 1408, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1637, file: !1245, line: 160, baseType: !1636, size: 64)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1637, file: !1245, line: 160, baseType: !1636, size: 64, offset: 64)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !1637, file: !1245, line: 161, baseType: !7, size: 32, offset: 128)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1637, file: !1245, line: 161, baseType: !7, size: 32, offset: 160)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "data_types", scope: !1637, file: !1245, line: 162, baseType: !7, size: 32, offset: 192)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1637, file: !1245, line: 162, baseType: !7, size: 32, offset: 224)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1637, file: !1245, line: 164, baseType: !1630, size: 512, offset: 256)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1637, file: !1245, line: 165, baseType: !1630, size: 512, offset: 768)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !1637, file: !1245, line: 167, baseType: !336, size: 128, offset: 1280)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "read_extra_data", scope: !1522, file: !1424, line: 153, baseType: !1649, size: 64, offset: 960)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1650, size: 64)
!1650 = !DISubroutineType(types: !1651)
!1651 = !{null, !221, !1636, !207}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate_extra_data", scope: !1522, file: !1424, line: 155, baseType: !1653, size: 64, offset: 1024)
!1653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1654, size: 64)
!1654 = !DISubroutineType(types: !1655)
!1655 = !{null, !221, !1636, !207, !207, !207}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1522, file: !1424, line: 158, baseType: !1657, size: 64, offset: 1088)
!1657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1658, size: 64)
!1658 = !DISubroutineType(types: !1659)
!1659 = !{!135, !221, !135}
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !1522, file: !1424, line: 160, baseType: !1661, size: 64, offset: 1152)
!1661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1662, size: 64)
!1662 = !DISubroutineType(types: !1663)
!1663 = !{null, !221, !1664}
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !271)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "totwrite", scope: !1522, file: !1424, line: 162, baseType: !1657, size: 64, offset: 1216)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "write_header", scope: !1522, file: !1424, line: 164, baseType: !1668, size: 64, offset: 1280)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{!135, !1554}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "read_header", scope: !1522, file: !1424, line: 165, baseType: !1668, size: 64, offset: 1344)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1522, file: !1424, line: 167, baseType: !1397, size: 64, offset: 1408)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "cache_ptr", scope: !1522, file: !1424, line: 169, baseType: !1674, size: 64, offset: 1472)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1397, size: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1522, file: !1424, line: 170, baseType: !1676, size: 64, offset: 1536)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1423, file: !1424, line: 243, baseType: !1678, size: 64, offset: 1856)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSystem", file: !1454, line: 253, size: 5248, elements: !1680)
!1680 = !{!1681, !1682, !1683, !1879, !1882, !1895, !1896, !1900, !1912, !1913, !1914, !1915, !1932, !2331, !2332, !2333, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2358, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2376, !2377, !2378, !2379, !2382, !2399, !2400}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1679, file: !1454, line: 257, baseType: !1678, size: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1679, file: !1454, line: 257, baseType: !1678, size: 64, offset: 64)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !1679, file: !1454, line: 259, baseType: !1684, size: 64, offset: 128)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSettings", file: !1454, line: 251, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSettings", file: !1454, line: 153, size: 6400, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1717, !1738, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1686, file: !1454, line: 154, baseType: !280, size: 960)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1686, file: !1454, line: 155, baseType: !345, size: 64, offset: 960)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "boids", scope: !1686, file: !1454, line: 157, baseType: !1691, size: 64, offset: 1024)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoidSettings", file: !1486, line: 189, size: 832, elements: !1693)
!1693 = !{!1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1692, file: !1486, line: 190, baseType: !135, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "last_state_id", scope: !1692, file: !1486, line: 190, baseType: !135, size: 32, offset: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "landing_smoothness", scope: !1692, file: !1486, line: 192, baseType: !207, size: 32, offset: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1692, file: !1486, line: 192, baseType: !207, size: 32, offset: 96)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "banking", scope: !1692, file: !1486, line: 193, baseType: !207, size: 32, offset: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1692, file: !1486, line: 193, baseType: !207, size: 32, offset: 160)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !1692, file: !1486, line: 195, baseType: !207, size: 32, offset: 192)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "aggression", scope: !1692, file: !1486, line: 195, baseType: !207, size: 32, offset: 224)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1692, file: !1486, line: 196, baseType: !207, size: 32, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "accuracy", scope: !1692, file: !1486, line: 196, baseType: !207, size: 32, offset: 288)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1692, file: !1486, line: 196, baseType: !207, size: 32, offset: 320)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "air_min_speed", scope: !1692, file: !1486, line: 199, baseType: !207, size: 32, offset: 352)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_speed", scope: !1692, file: !1486, line: 199, baseType: !207, size: 32, offset: 384)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_acc", scope: !1692, file: !1486, line: 200, baseType: !207, size: 32, offset: 416)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "air_max_ave", scope: !1692, file: !1486, line: 200, baseType: !207, size: 32, offset: 448)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "air_personal_space", scope: !1692, file: !1486, line: 201, baseType: !207, size: 32, offset: 480)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "land_jump_speed", scope: !1692, file: !1486, line: 204, baseType: !207, size: 32, offset: 512)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_speed", scope: !1692, file: !1486, line: 204, baseType: !207, size: 32, offset: 544)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_acc", scope: !1692, file: !1486, line: 205, baseType: !207, size: 32, offset: 576)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "land_max_ave", scope: !1692, file: !1486, line: 205, baseType: !207, size: 32, offset: 608)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "land_personal_space", scope: !1692, file: !1486, line: 206, baseType: !207, size: 32, offset: 640)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "land_stick_force", scope: !1692, file: !1486, line: 207, baseType: !207, size: 32, offset: 672)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !1692, file: !1486, line: 209, baseType: !336, size: 128, offset: 704)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "fluid", scope: !1686, file: !1454, line: 158, baseType: !1718, size: 64, offset: 1088)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SPHFluidSettings", file: !1454, line: 127, size: 544, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1719, file: !1454, line: 129, baseType: !207, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "spring_k", scope: !1719, file: !1454, line: 129, baseType: !207, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !1719, file: !1454, line: 129, baseType: !207, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_constant", scope: !1719, file: !1454, line: 130, baseType: !207, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "yield_ratio", scope: !1719, file: !1454, line: 130, baseType: !207, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "plasticity_balance", scope: !1719, file: !1454, line: 131, baseType: !207, size: 32, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "yield_balance", scope: !1719, file: !1454, line: 131, baseType: !207, size: 32, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_omega", scope: !1719, file: !1454, line: 132, baseType: !207, size: 32, offset: 224)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "viscosity_beta", scope: !1719, file: !1454, line: 132, baseType: !207, size: 32, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_k", scope: !1719, file: !1454, line: 133, baseType: !207, size: 32, offset: 288)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness_knear", scope: !1719, file: !1454, line: 133, baseType: !207, size: 32, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rest_density", scope: !1719, file: !1454, line: 133, baseType: !207, size: 32, offset: 352)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "buoyancy", scope: !1719, file: !1454, line: 134, baseType: !207, size: 32, offset: 384)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1719, file: !1454, line: 135, baseType: !135, size: 32, offset: 416)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "spring_frames", scope: !1719, file: !1454, line: 135, baseType: !135, size: 32, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "solver", scope: !1719, file: !1454, line: 136, baseType: !199, size: 16, offset: 480)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1719, file: !1454, line: 137, baseType: !976, size: 48, offset: 496)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1686, file: !1454, line: 160, baseType: !1739, size: 64, offset: 1152)
!1739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectorWeights", file: !1245, line: 118, size: 640, elements: !1741)
!1741 = !{!1742, !1743, !1747, !1748, !1749, !1750}
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1740, file: !1245, line: 119, baseType: !1123, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1740, file: !1245, line: 121, baseType: !1744, size: 448, offset: 64)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 448, elements: !1745)
!1745 = !{!1746}
!1746 = !DISubrange(count: 14)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "global_gravity", scope: !1740, file: !1245, line: 122, baseType: !207, size: 32, offset: 512)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1740, file: !1245, line: 123, baseType: !199, size: 16, offset: 544)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1740, file: !1245, line: 123, baseType: !976, size: 48, offset: 560)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1740, file: !1245, line: 124, baseType: !135, size: 32, offset: 608)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1686, file: !1454, line: 162, baseType: !135, size: 32, offset: 1216)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1686, file: !1454, line: 162, baseType: !135, size: 32, offset: 1248)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1686, file: !1454, line: 163, baseType: !199, size: 16, offset: 1280)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1686, file: !1454, line: 163, baseType: !199, size: 16, offset: 1296)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "distr", scope: !1686, file: !1454, line: 163, baseType: !199, size: 16, offset: 1312)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !1686, file: !1454, line: 163, baseType: !199, size: 16, offset: 1328)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "phystype", scope: !1686, file: !1454, line: 165, baseType: !199, size: 16, offset: 1344)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1686, file: !1454, line: 165, baseType: !199, size: 16, offset: 1360)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "avemode", scope: !1686, file: !1454, line: 165, baseType: !199, size: 16, offset: 1376)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "reactevent", scope: !1686, file: !1454, line: 165, baseType: !199, size: 16, offset: 1392)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1686, file: !1454, line: 166, baseType: !135, size: 32, offset: 1408)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1686, file: !1454, line: 166, baseType: !135, size: 32, offset: 1440)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "draw_as", scope: !1686, file: !1454, line: 167, baseType: !199, size: 16, offset: 1472)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "draw_size", scope: !1686, file: !1454, line: 167, baseType: !199, size: 16, offset: 1488)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "childtype", scope: !1686, file: !1454, line: 167, baseType: !199, size: 16, offset: 1504)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1686, file: !1454, line: 167, baseType: !199, size: 16, offset: 1520)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ren_as", scope: !1686, file: !1454, line: 168, baseType: !199, size: 16, offset: 1536)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "subframes", scope: !1686, file: !1454, line: 168, baseType: !199, size: 16, offset: 1552)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "draw_col", scope: !1686, file: !1454, line: 168, baseType: !199, size: 16, offset: 1568)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1686, file: !1454, line: 170, baseType: !199, size: 16, offset: 1584)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "ren_step", scope: !1686, file: !1454, line: 170, baseType: !199, size: 16, offset: 1600)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "hair_step", scope: !1686, file: !1454, line: 171, baseType: !199, size: 16, offset: 1616)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "keys_step", scope: !1686, file: !1454, line: 171, baseType: !199, size: 16, offset: 1632)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_angle", scope: !1686, file: !1454, line: 174, baseType: !199, size: 16, offset: 1648)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_pix", scope: !1686, file: !1454, line: 174, baseType: !199, size: 16, offset: 1664)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !1686, file: !1454, line: 176, baseType: !199, size: 16, offset: 1680)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "omat", scope: !1686, file: !1454, line: 176, baseType: !199, size: 16, offset: 1696)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "interpolation", scope: !1686, file: !1454, line: 176, baseType: !199, size: 16, offset: 1712)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "integrator", scope: !1686, file: !1454, line: 176, baseType: !199, size: 16, offset: 1728)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "rotfrom", scope: !1686, file: !1454, line: 177, baseType: !199, size: 16, offset: 1744)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "kink", scope: !1686, file: !1454, line: 178, baseType: !199, size: 16, offset: 1760)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "kink_axis", scope: !1686, file: !1454, line: 178, baseType: !199, size: 16, offset: 1776)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "bb_align", scope: !1686, file: !1454, line: 181, baseType: !199, size: 16, offset: 1792)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uv_split", scope: !1686, file: !1454, line: 181, baseType: !199, size: 16, offset: 1808)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "bb_anim", scope: !1686, file: !1454, line: 181, baseType: !199, size: 16, offset: 1824)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "bb_split_offset", scope: !1686, file: !1454, line: 181, baseType: !199, size: 16, offset: 1840)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "bb_tilt", scope: !1686, file: !1454, line: 182, baseType: !207, size: 32, offset: 1856)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "bb_rand_tilt", scope: !1686, file: !1454, line: 182, baseType: !207, size: 32, offset: 1888)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "bb_offset", scope: !1686, file: !1454, line: 182, baseType: !217, size: 64, offset: 1920)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "bb_size", scope: !1686, file: !1454, line: 182, baseType: !217, size: 64, offset: 1984)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_head", scope: !1686, file: !1454, line: 182, baseType: !207, size: 32, offset: 2048)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "bb_vel_tail", scope: !1686, file: !1454, line: 182, baseType: !207, size: 32, offset: 2080)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "color_vec_max", scope: !1686, file: !1454, line: 185, baseType: !207, size: 32, offset: 2112)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1686, file: !1454, line: 188, baseType: !199, size: 16, offset: 2144)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_refsize", scope: !1686, file: !1454, line: 188, baseType: !199, size: 16, offset: 2160)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_rate", scope: !1686, file: !1454, line: 189, baseType: !207, size: 32, offset: 2176)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_transition", scope: !1686, file: !1454, line: 189, baseType: !207, size: 32, offset: 2208)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_viewport", scope: !1686, file: !1454, line: 190, baseType: !207, size: 32, offset: 2240)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "sta", scope: !1686, file: !1454, line: 193, baseType: !207, size: 32, offset: 2272)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !1686, file: !1454, line: 193, baseType: !207, size: 32, offset: 2304)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "lifetime", scope: !1686, file: !1454, line: 193, baseType: !207, size: 32, offset: 2336)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "randlife", scope: !1686, file: !1454, line: 193, baseType: !207, size: 32, offset: 2368)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "timetweak", scope: !1686, file: !1454, line: 194, baseType: !207, size: 32, offset: 2400)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "courant_target", scope: !1686, file: !1454, line: 194, baseType: !207, size: 32, offset: 2432)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "jitfac", scope: !1686, file: !1454, line: 195, baseType: !207, size: 32, offset: 2464)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "eff_hair", scope: !1686, file: !1454, line: 195, baseType: !207, size: 32, offset: 2496)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "grid_rand", scope: !1686, file: !1454, line: 195, baseType: !207, size: 32, offset: 2528)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "ps_offset", scope: !1686, file: !1454, line: 195, baseType: !1809, size: 32, offset: 2560)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 32, elements: !656)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !1686, file: !1454, line: 196, baseType: !135, size: 32, offset: 2592)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "userjit", scope: !1686, file: !1454, line: 196, baseType: !135, size: 32, offset: 2624)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "grid_res", scope: !1686, file: !1454, line: 196, baseType: !135, size: 32, offset: 2656)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "effector_amount", scope: !1686, file: !1454, line: 196, baseType: !135, size: 32, offset: 2688)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "time_flag", scope: !1686, file: !1454, line: 197, baseType: !199, size: 16, offset: 2720)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "time_pad", scope: !1686, file: !1454, line: 197, baseType: !976, size: 48, offset: 2736)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "normfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2784)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "obfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2816)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "randfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2848)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "partfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2880)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "tanfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2912)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "tanphase", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2944)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "reactfac", scope: !1686, file: !1454, line: 200, baseType: !207, size: 32, offset: 2976)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ob_vel", scope: !1686, file: !1454, line: 201, baseType: !206, size: 96, offset: 3008)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "avefac", scope: !1686, file: !1454, line: 202, baseType: !207, size: 32, offset: 3104)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "phasefac", scope: !1686, file: !1454, line: 202, baseType: !207, size: 32, offset: 3136)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "randrotfac", scope: !1686, file: !1454, line: 202, baseType: !207, size: 32, offset: 3168)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "randphasefac", scope: !1686, file: !1454, line: 202, baseType: !207, size: 32, offset: 3200)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1686, file: !1454, line: 204, baseType: !207, size: 32, offset: 3232)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1686, file: !1454, line: 204, baseType: !207, size: 32, offset: 3264)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "randsize", scope: !1686, file: !1454, line: 204, baseType: !207, size: 32, offset: 3296)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "acc", scope: !1686, file: !1454, line: 206, baseType: !206, size: 96, offset: 3328)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "dragfac", scope: !1686, file: !1454, line: 206, baseType: !207, size: 32, offset: 3424)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "brownfac", scope: !1686, file: !1454, line: 206, baseType: !207, size: 32, offset: 3456)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !1686, file: !1454, line: 206, baseType: !207, size: 32, offset: 3488)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "randlength", scope: !1686, file: !1454, line: 208, baseType: !207, size: 32, offset: 3520)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "child_nbr", scope: !1686, file: !1454, line: 210, baseType: !135, size: 32, offset: 3552)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ren_child_nbr", scope: !1686, file: !1454, line: 210, baseType: !135, size: 32, offset: 3584)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "parents", scope: !1686, file: !1454, line: 211, baseType: !207, size: 32, offset: 3616)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "childsize", scope: !1686, file: !1454, line: 211, baseType: !207, size: 32, offset: 3648)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "childrandsize", scope: !1686, file: !1454, line: 211, baseType: !207, size: 32, offset: 3680)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "childrad", scope: !1686, file: !1454, line: 212, baseType: !207, size: 32, offset: 3712)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "childflat", scope: !1686, file: !1454, line: 212, baseType: !207, size: 32, offset: 3744)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !1686, file: !1454, line: 214, baseType: !207, size: 32, offset: 3776)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "clumppow", scope: !1686, file: !1454, line: 214, baseType: !207, size: 32, offset: 3808)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp", scope: !1686, file: !1454, line: 216, baseType: !207, size: 32, offset: 3840)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "kink_freq", scope: !1686, file: !1454, line: 216, baseType: !207, size: 32, offset: 3872)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "kink_shape", scope: !1686, file: !1454, line: 216, baseType: !207, size: 32, offset: 3904)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "kink_flat", scope: !1686, file: !1454, line: 216, baseType: !207, size: 32, offset: 3936)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "kink_amp_clump", scope: !1686, file: !1454, line: 217, baseType: !207, size: 32, offset: 3968)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "rough1", scope: !1686, file: !1454, line: 219, baseType: !207, size: 32, offset: 4000)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "rough1_size", scope: !1686, file: !1454, line: 219, baseType: !207, size: 32, offset: 4032)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "rough2", scope: !1686, file: !1454, line: 220, baseType: !207, size: 32, offset: 4064)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_size", scope: !1686, file: !1454, line: 220, baseType: !207, size: 32, offset: 4096)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "rough2_thres", scope: !1686, file: !1454, line: 220, baseType: !207, size: 32, offset: 4128)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end", scope: !1686, file: !1454, line: 221, baseType: !207, size: 32, offset: 4160)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "rough_end_shape", scope: !1686, file: !1454, line: 221, baseType: !207, size: 32, offset: 4192)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "clength", scope: !1686, file: !1454, line: 223, baseType: !207, size: 32, offset: 4224)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "clength_thres", scope: !1686, file: !1454, line: 223, baseType: !207, size: 32, offset: 4256)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "parting_fac", scope: !1686, file: !1454, line: 225, baseType: !207, size: 32, offset: 4288)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "parting_min", scope: !1686, file: !1454, line: 226, baseType: !207, size: 32, offset: 4320)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "parting_max", scope: !1686, file: !1454, line: 226, baseType: !207, size: 32, offset: 4352)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "branch_thres", scope: !1686, file: !1454, line: 228, baseType: !207, size: 32, offset: 4384)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "draw_line", scope: !1686, file: !1454, line: 230, baseType: !217, size: 64, offset: 4416)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "path_start", scope: !1686, file: !1454, line: 231, baseType: !207, size: 32, offset: 4480)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "path_end", scope: !1686, file: !1454, line: 231, baseType: !207, size: 32, offset: 4512)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "trail_count", scope: !1686, file: !1454, line: 232, baseType: !135, size: 32, offset: 4544)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "keyed_loops", scope: !1686, file: !1454, line: 234, baseType: !135, size: 32, offset: 4576)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !1686, file: !1454, line: 236, baseType: !681, size: 1152, offset: 4608)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1686, file: !1454, line: 238, baseType: !1123, size: 64, offset: 5760)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "dupliweights", scope: !1686, file: !1454, line: 239, baseType: !336, size: 128, offset: 5824)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "eff_group", scope: !1686, file: !1454, line: 240, baseType: !1123, size: 64, offset: 5952)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "dup_ob", scope: !1686, file: !1454, line: 241, baseType: !414, size: 64, offset: 6016)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "bb_ob", scope: !1686, file: !1454, line: 242, baseType: !414, size: 64, offset: 6080)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1686, file: !1454, line: 243, baseType: !434, size: 64, offset: 6144)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1686, file: !1454, line: 244, baseType: !1286, size: 64, offset: 6208)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "pd2", scope: !1686, file: !1454, line: 245, baseType: !1286, size: 64, offset: 6272)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "use_modifier_stack", scope: !1686, file: !1454, line: 248, baseType: !199, size: 16, offset: 6336)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1686, file: !1454, line: 249, baseType: !976, size: 48, offset: 6352)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1679, file: !1454, line: 261, baseType: !1880, size: 64, offset: 192)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleData", file: !1454, line: 125, baseType: !1453)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1679, file: !1454, line: 262, baseType: !1883, size: 64, offset: 256)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChildParticle", file: !1454, line: 77, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ChildParticle", file: !1454, line: 71, size: 512, elements: !1886)
!1886 = !{!1887, !1888, !1889, !1891, !1892, !1893, !1894}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1885, file: !1454, line: 72, baseType: !135, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1885, file: !1454, line: 72, baseType: !135, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "pa", scope: !1885, file: !1454, line: 73, baseType: !1890, size: 128, offset: 64)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 128, elements: !639)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1885, file: !1454, line: 74, baseType: !638, size: 128, offset: 192)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "fuv", scope: !1885, file: !1454, line: 75, baseType: !638, size: 128, offset: 320)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "foffset", scope: !1885, file: !1454, line: 75, baseType: !207, size: 32, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1885, file: !1454, line: 76, baseType: !207, size: 32, offset: 480)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "edit", scope: !1679, file: !1454, line: 264, baseType: !1422, size: 64, offset: 320)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1679, file: !1454, line: 265, baseType: !1897, size: 64, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1898, size: 64)
!1898 = !DISubroutineType(types: !1899)
!1899 = !{null, !1422}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1679, file: !1454, line: 267, baseType: !1901, size: 64, offset: 448)
!1901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1902, size: 64)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleCacheKey", file: !1904, line: 123, size: 480, elements: !1905)
!1904 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_particle.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1905 = !{!1906, !1907, !1908, !1909, !1910, !1911}
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1903, file: !1904, line: 124, baseType: !206, size: 96)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !1903, file: !1904, line: 125, baseType: !206, size: 96, offset: 96)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1903, file: !1904, line: 126, baseType: !638, size: 128, offset: 192)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1903, file: !1904, line: 127, baseType: !206, size: 96, offset: 320)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1903, file: !1904, line: 128, baseType: !207, size: 32, offset: 416)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "steps", scope: !1903, file: !1904, line: 129, baseType: !135, size: 32, offset: 448)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "childcache", scope: !1679, file: !1454, line: 268, baseType: !1901, size: 64, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1679, file: !1454, line: 269, baseType: !334, size: 128, offset: 576)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "childcachebufs", scope: !1679, file: !1454, line: 269, baseType: !334, size: 128, offset: 704)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "clmd", scope: !1679, file: !1454, line: 271, baseType: !1916, size: 64, offset: 832)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ClothModifierData", file: !78, line: 557, size: 1344, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1924, !1927, !1930, !1931}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !1917, file: !78, line: 558, baseType: !259, size: 896)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1917, file: !78, line: 560, baseType: !275, size: 64, offset: 896)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "clothObject", scope: !1917, file: !78, line: 561, baseType: !1922, size: 64, offset: 960)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DICompositeType(tag: DW_TAG_structure_type, name: "Cloth", file: !78, line: 561, flags: DIFlagFwdDecl)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "sim_parms", scope: !1917, file: !78, line: 562, baseType: !1925, size: 64, offset: 1024)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothSimSettings", file: !78, line: 562, flags: DIFlagFwdDecl)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "coll_parms", scope: !1917, file: !78, line: 563, baseType: !1928, size: 64, offset: 1088)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = !DICompositeType(tag: DW_TAG_structure_type, name: "ClothCollSettings", file: !78, line: 563, flags: DIFlagFwdDecl)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "point_cache", scope: !1917, file: !78, line: 564, baseType: !1397, size: 64, offset: 1152)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1917, file: !78, line: 565, baseType: !336, size: 128, offset: 1216)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "hair_in_dm", scope: !1679, file: !1454, line: 272, baseType: !1933, size: 64, offset: 896)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !6, line: 178, size: 13504, elements: !1935)
!1935 = !{!1936, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1988, !1991, !1993, !1994, !1996, !1997, !1998, !1999, !2005, !2010, !2011, !2015, !2016, !2017, !2018, !2019, !2031, !2043, !2057, !2061, !2065, !2069, !2078, !2090, !2094, !2098, !2102, !2106, !2110, !2111, !2112, !2113, !2114, !2115, !2119, !2120, !2121, !2122, !2126, !2127, !2128, !2129, !2130, !2135, !2136, !2137, !2138, !2139, !2143, !2144, !2145, !2146, !2147, !2154, !2164, !2168, !2174, !2184, !2188, !2199, !2206, !2213, !2217, !2221, !2225, !2230, !2231, !2232, !2239, !2245, !2246, !2247, !2251, !2252, !2261, !2288, !2292, !2300, !2304, !2308, !2312, !2320, !2330}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !1934, file: !6, line: 180, baseType: !1937, size: 1600)
!1937 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !34, line: 73, baseType: !1938)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !34, line: 64, size: 1600, elements: !1939)
!1939 = !{!1940, !1955, !1959, !1960, !1961, !1962, !1965}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1938, file: !34, line: 65, baseType: !1941, size: 64)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !34, line: 53, baseType: !1943)
!1943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !34, line: 42, size: 832, elements: !1944)
!1944 = !{!1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954}
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1943, file: !34, line: 43, baseType: !135, size: 32)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1943, file: !34, line: 44, baseType: !135, size: 32, offset: 32)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1943, file: !34, line: 45, baseType: !135, size: 32, offset: 64)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1943, file: !34, line: 46, baseType: !135, size: 32, offset: 96)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !1943, file: !34, line: 47, baseType: !135, size: 32, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !1943, file: !34, line: 48, baseType: !135, size: 32, offset: 160)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !1943, file: !34, line: 49, baseType: !135, size: 32, offset: 192)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1943, file: !34, line: 50, baseType: !135, size: 32, offset: 224)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1943, file: !34, line: 51, baseType: !270, size: 512, offset: 256)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1943, file: !34, line: 52, baseType: !221, size: 64, offset: 768)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !1938, file: !34, line: 66, baseType: !1956, size: 1312, offset: 64)
!1956 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 1312, elements: !1957)
!1957 = !{!1958}
!1958 = !DISubrange(count: 41)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !1938, file: !34, line: 69, baseType: !135, size: 32, offset: 1376)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !1938, file: !34, line: 69, baseType: !135, size: 32, offset: 1408)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !1938, file: !34, line: 70, baseType: !135, size: 32, offset: 1440)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !1938, file: !34, line: 71, baseType: !1963, size: 64, offset: 1472)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !34, line: 71, flags: DIFlagFwdDecl)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !1938, file: !34, line: 72, baseType: !1966, size: 64, offset: 1536)
!1966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1967, size: 64)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !34, line: 59, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !34, line: 57, size: 8192, elements: !1969)
!1969 = !{!1970}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1968, file: !34, line: 58, baseType: !299, size: 8192)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !1934, file: !6, line: 180, baseType: !1937, size: 1600, offset: 1600)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !1934, file: !6, line: 180, baseType: !1937, size: 1600, offset: 3200)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !1934, file: !6, line: 180, baseType: !1937, size: 1600, offset: 4800)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !1934, file: !6, line: 180, baseType: !1937, size: 1600, offset: 6400)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !1934, file: !6, line: 181, baseType: !135, size: 32, offset: 8000)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !1934, file: !6, line: 181, baseType: !135, size: 32, offset: 8032)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !1934, file: !6, line: 181, baseType: !135, size: 32, offset: 8064)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !1934, file: !6, line: 181, baseType: !135, size: 32, offset: 8096)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !1934, file: !6, line: 181, baseType: !135, size: 32, offset: 8128)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !1934, file: !6, line: 182, baseType: !135, size: 32, offset: 8160)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !1934, file: !6, line: 183, baseType: !135, size: 32, offset: 8192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !1934, file: !6, line: 184, baseType: !1983, size: 64, offset: 8256)
!1983 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !1984, line: 124, baseType: !1985)
!1984 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !1987, line: 118, flags: DIFlagFwdDecl)
!1987 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !1934, file: !6, line: 185, baseType: !1989, size: 64, offset: 8320)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !6, line: 97, flags: DIFlagFwdDecl)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1934, file: !6, line: 186, baseType: !1992, size: 32, offset: 8384)
!1992 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !6, line: 132, baseType: !5)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !1934, file: !6, line: 187, baseType: !207, size: 32, offset: 8416)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !1934, file: !6, line: 188, baseType: !1995, size: 32, offset: 8448)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !6, line: 175, baseType: !12)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !1934, file: !6, line: 189, baseType: !135, size: 32, offset: 8480)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1934, file: !6, line: 190, baseType: !519, size: 64, offset: 8512)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !1934, file: !6, line: 193, baseType: !271, size: 8, offset: 8576)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !1934, file: !6, line: 196, baseType: !2000, size: 64, offset: 8640)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{null, !2003}
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !6, line: 177, baseType: !1934)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !1934, file: !6, line: 199, baseType: !2006, size: 64, offset: 8704)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DISubroutineType(types: !2008)
!2008 = !{null, !2003, !2009}
!2009 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !1934, file: !6, line: 202, baseType: !2000, size: 64, offset: 8768)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !1934, file: !6, line: 207, baseType: !2012, size: 64, offset: 8832)
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2013, size: 64)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{!135, !2003}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !1934, file: !6, line: 208, baseType: !2012, size: 64, offset: 8896)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !1934, file: !6, line: 209, baseType: !2012, size: 64, offset: 8960)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !1934, file: !6, line: 210, baseType: !2012, size: 64, offset: 9024)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !1934, file: !6, line: 211, baseType: !2012, size: 64, offset: 9088)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !1934, file: !6, line: 218, baseType: !2020, size: 64, offset: 9152)
!2020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2021, size: 64)
!2021 = !DISubroutineType(types: !2022)
!2022 = !{null, !2003, !135, !2023}
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !2025, line: 65, size: 160, elements: !2026)
!2025 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2026 = !{!2027, !2028, !2029, !2030}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !2024, file: !2025, line: 66, baseType: !206, size: 96)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !2024, file: !2025, line: 67, baseType: !976, size: 48, offset: 96)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2024, file: !2025, line: 68, baseType: !271, size: 8, offset: 144)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2024, file: !2025, line: 68, baseType: !271, size: 8, offset: 152)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !1934, file: !6, line: 219, baseType: !2032, size: 64, offset: 9216)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !2003, !135, !2035}
!2035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2036, size: 64)
!2036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !2025, line: 48, size: 96, elements: !2037)
!2037 = !{!2038, !2039, !2040, !2041, !2042}
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2036, file: !2025, line: 49, baseType: !7, size: 32)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2036, file: !2025, line: 49, baseType: !7, size: 32, offset: 32)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !2036, file: !2025, line: 50, baseType: !271, size: 8, offset: 64)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !2036, file: !2025, line: 50, baseType: !271, size: 8, offset: 72)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2036, file: !2025, line: 51, baseType: !199, size: 16, offset: 80)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !1934, file: !6, line: 220, baseType: !2044, size: 64, offset: 9280)
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DISubroutineType(types: !2046)
!2046 = !{null, !2003, !135, !2047}
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !2025, line: 42, size: 160, elements: !2049)
!2049 = !{!2050, !2051, !2052, !2053, !2054, !2055, !2056}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2048, file: !2025, line: 43, baseType: !7, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2048, file: !2025, line: 43, baseType: !7, size: 32, offset: 32)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2048, file: !2025, line: 43, baseType: !7, size: 32, offset: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2048, file: !2025, line: 43, baseType: !7, size: 32, offset: 96)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2048, file: !2025, line: 44, baseType: !199, size: 16, offset: 128)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !2048, file: !2025, line: 45, baseType: !271, size: 8, offset: 144)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2048, file: !2025, line: 45, baseType: !271, size: 8, offset: 152)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !1934, file: !6, line: 227, baseType: !2058, size: 64, offset: 9344)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{!2023, !2003}
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !1934, file: !6, line: 228, baseType: !2062, size: 64, offset: 9408)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DISubroutineType(types: !2064)
!2064 = !{!2035, !2003}
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !1934, file: !6, line: 229, baseType: !2066, size: 64, offset: 9472)
!2066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2067, size: 64)
!2067 = !DISubroutineType(types: !2068)
!2068 = !{!2047, !2003}
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !1934, file: !6, line: 230, baseType: !2070, size: 64, offset: 9536)
!2070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2071, size: 64)
!2071 = !DISubroutineType(types: !2072)
!2072 = !{!2073, !2003}
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !2025, line: 88, size: 64, elements: !2075)
!2075 = !{!2076, !2077}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !2074, file: !2025, line: 89, baseType: !7, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !2074, file: !2025, line: 90, baseType: !7, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !1934, file: !6, line: 231, baseType: !2079, size: 64, offset: 9600)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DISubroutineType(types: !2081)
!2081 = !{!2082, !2003}
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !2025, line: 79, size: 96, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088, !2089}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !2083, file: !2025, line: 81, baseType: !135, size: 32)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !2083, file: !2025, line: 82, baseType: !135, size: 32, offset: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2083, file: !2025, line: 83, baseType: !199, size: 16, offset: 64)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2083, file: !2025, line: 84, baseType: !271, size: 8, offset: 80)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2083, file: !2025, line: 84, baseType: !271, size: 8, offset: 88)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !1934, file: !6, line: 236, baseType: !2091, size: 64, offset: 9664)
!2091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2092 = !DISubroutineType(types: !2093)
!2093 = !{null, !2003, !2023}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !1934, file: !6, line: 237, baseType: !2095, size: 64, offset: 9728)
!2095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2096, size: 64)
!2096 = !DISubroutineType(types: !2097)
!2097 = !{null, !2003, !2035}
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !1934, file: !6, line: 238, baseType: !2099, size: 64, offset: 9792)
!2099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2100, size: 64)
!2100 = !DISubroutineType(types: !2101)
!2101 = !{null, !2003, !2047}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !1934, file: !6, line: 239, baseType: !2103, size: 64, offset: 9856)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{null, !2003, !2073}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !1934, file: !6, line: 240, baseType: !2107, size: 64, offset: 9920)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null, !2003, !2082}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !1934, file: !6, line: 245, baseType: !2058, size: 64, offset: 9984)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !1934, file: !6, line: 246, baseType: !2062, size: 64, offset: 10048)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !1934, file: !6, line: 247, baseType: !2066, size: 64, offset: 10112)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !1934, file: !6, line: 248, baseType: !2070, size: 64, offset: 10176)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !1934, file: !6, line: 249, baseType: !2079, size: 64, offset: 10240)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !1934, file: !6, line: 255, baseType: !2116, size: 64, offset: 10304)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!221, !2003, !135, !135}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !1934, file: !6, line: 256, baseType: !2116, size: 64, offset: 10368)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !1934, file: !6, line: 257, baseType: !2116, size: 64, offset: 10432)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !1934, file: !6, line: 258, baseType: !2116, size: 64, offset: 10496)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !1934, file: !6, line: 264, baseType: !2123, size: 64, offset: 10560)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = !DISubroutineType(types: !2125)
!2125 = !{!221, !2003, !135}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !1934, file: !6, line: 265, baseType: !2123, size: 64, offset: 10624)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !1934, file: !6, line: 266, baseType: !2123, size: 64, offset: 10688)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !1934, file: !6, line: 267, baseType: !2123, size: 64, offset: 10752)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !1934, file: !6, line: 268, baseType: !2123, size: 64, offset: 10816)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !1934, file: !6, line: 272, baseType: !2131, size: 64, offset: 10880)
!2131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2132, size: 64)
!2132 = !DISubroutineType(types: !2133)
!2133 = !{!2134, !2003}
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !1934, file: !6, line: 273, baseType: !2131, size: 64, offset: 10944)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !1934, file: !6, line: 274, baseType: !2131, size: 64, offset: 11008)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !1934, file: !6, line: 275, baseType: !2131, size: 64, offset: 11072)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !1934, file: !6, line: 276, baseType: !2131, size: 64, offset: 11136)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !1934, file: !6, line: 279, baseType: !2140, size: 64, offset: 11200)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{null, !2003, !135, !2134, !135}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !1934, file: !6, line: 280, baseType: !2140, size: 64, offset: 11264)
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !1934, file: !6, line: 281, baseType: !2140, size: 64, offset: 11328)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !1934, file: !6, line: 284, baseType: !2012, size: 64, offset: 11392)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !1934, file: !6, line: 285, baseType: !2012, size: 64, offset: 11456)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !1934, file: !6, line: 286, baseType: !2148, size: 64, offset: 11520)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2149, size: 64)
!2149 = !DISubroutineType(types: !2150)
!2150 = !{!2151, !2003}
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !6, line: 82, flags: DIFlagFwdDecl)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !1934, file: !6, line: 287, baseType: !2155, size: 64, offset: 11584)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DISubroutineType(types: !2157)
!2157 = !{!2158, !2003}
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !6, line: 120, baseType: !2160)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !6, line: 117, size: 256, elements: !2161)
!2161 = !{!2162, !2163}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2160, file: !6, line: 118, baseType: !1890, size: 128)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !2160, file: !6, line: 119, baseType: !1890, size: 128, offset: 128)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !1934, file: !6, line: 288, baseType: !2165, size: 64, offset: 11648)
!2165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2166, size: 64)
!2166 = !DISubroutineType(types: !2167)
!2167 = !{!211, !2003}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !1934, file: !6, line: 289, baseType: !2169, size: 64, offset: 11712)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = !DISubroutineType(types: !2171)
!2171 = !{null, !2003, !2172}
!2172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2173, size: 64)
!2173 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !6, line: 83, flags: DIFlagFwdDecl)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !1934, file: !6, line: 290, baseType: !2175, size: 64, offset: 11776)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DISubroutineType(types: !2177)
!2177 = !{!2178, !2003}
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !6, line: 126, baseType: !2180)
!2180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !6, line: 123, size: 32, elements: !2181)
!2181 = !{!2182, !2183}
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2180, file: !6, line: 124, baseType: !199, size: 16)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2180, file: !6, line: 125, baseType: !271, size: 8, offset: 16)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !1934, file: !6, line: 291, baseType: !2185, size: 64, offset: 11840)
!2185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2186, size: 64)
!2186 = !DISubroutineType(types: !2187)
!2187 = !{!880, !2003}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !1934, file: !6, line: 299, baseType: !2189, size: 64, offset: 11904)
!2189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2190, size: 64)
!2190 = !DISubroutineType(types: !2191)
!2191 = !{null, !2003, !2192, !221, !2198}
!2192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2193, size: 64)
!2193 = !DISubroutineType(types: !2194)
!2194 = !{null, !221, !135, !2195, !2195, !2196}
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2009, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2197, size: 64)
!2197 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!2198 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !6, line: 162, baseType: !17)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !1934, file: !6, line: 309, baseType: !2200, size: 64, offset: 11968)
!2200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2201, size: 64)
!2201 = !DISubroutineType(types: !2202)
!2202 = !{null, !2003, !2203, !221}
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = !DISubroutineType(types: !2205)
!2205 = !{null, !221, !135, !2195, !2195}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !1934, file: !6, line: 317, baseType: !2207, size: 64, offset: 12032)
!2207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2208, size: 64)
!2208 = !DISubroutineType(types: !2209)
!2209 = !{null, !2003, !2210, !221, !2198}
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = !DISubroutineType(types: !2212)
!2212 = !{null, !221, !135, !135, !2195, !2195}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !1934, file: !6, line: 327, baseType: !2214, size: 64, offset: 12096)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2215, size: 64)
!2215 = !DISubroutineType(types: !2216)
!2216 = !{null, !2003, !2203, !221, !2198}
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !1934, file: !6, line: 337, baseType: !2218, size: 64, offset: 12160)
!2218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2219 = !DISubroutineType(types: !2220)
!2220 = !{null, !2003, !233, !233}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !1934, file: !6, line: 344, baseType: !2222, size: 64, offset: 12224)
!2222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2223, size: 64)
!2223 = !DISubroutineType(types: !2224)
!2224 = !{null, !2003, !135, !233}
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !1934, file: !6, line: 347, baseType: !2226, size: 64, offset: 12288)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DISubroutineType(types: !2228)
!2228 = !{null, !2003, !2229}
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !1934, file: !6, line: 350, baseType: !2222, size: 64, offset: 12352)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !1934, file: !6, line: 351, baseType: !2222, size: 64, offset: 12416)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !1934, file: !6, line: 355, baseType: !2233, size: 64, offset: 12480)
!2233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2234, size: 64)
!2234 = !DISubroutineType(types: !2235)
!2235 = !{!2236, !414, !2003}
!2236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2237, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2238)
!2238 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !6, line: 355, flags: DIFlagFwdDecl)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !1934, file: !6, line: 359, baseType: !2240, size: 64, offset: 12544)
!2240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2241, size: 64)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!2243, !414, !2003}
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !6, line: 100, flags: DIFlagFwdDecl)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !1934, file: !6, line: 364, baseType: !2000, size: 64, offset: 12608)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !1934, file: !6, line: 367, baseType: !2000, size: 64, offset: 12672)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !1934, file: !6, line: 373, baseType: !2248, size: 64, offset: 12736)
!2248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2249, size: 64)
!2249 = !DISubroutineType(types: !2250)
!2250 = !{null, !2003, !866, !866}
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !1934, file: !6, line: 376, baseType: !2000, size: 64, offset: 12800)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !1934, file: !6, line: 385, baseType: !2253, size: 64, offset: 12864)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{null, !2003, !2256, !866, !2257}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!2257 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !6, line: 146, baseType: !2258)
!2258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2259, size: 64)
!2259 = !DISubroutineType(types: !2260)
!2260 = !{!135, !135, !221}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !1934, file: !6, line: 391, baseType: !2262, size: 64, offset: 12928)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{null, !2003, !2265, !2283, !221, !2287}
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !6, line: 150, baseType: !2266)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!2269, !2270, !2282, !135}
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !6, line: 143, baseType: !21)
!2270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2271, size: 64)
!2271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !2025, line: 160, size: 384, elements: !2272)
!2272 = !{!2273, !2276, !2277, !2278, !2279, !2280, !2281}
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2271, file: !2025, line: 161, baseType: !2274, size: 256)
!2274 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 256, elements: !2275)
!2275 = !{!640, !219}
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2271, file: !2025, line: 162, baseType: !768, size: 64, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2271, file: !2025, line: 163, baseType: !271, size: 8, offset: 320)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2271, file: !2025, line: 163, baseType: !271, size: 8, offset: 328)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2271, file: !2025, line: 164, baseType: !199, size: 16, offset: 336)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2271, file: !2025, line: 164, baseType: !199, size: 16, offset: 352)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2271, file: !2025, line: 164, baseType: !199, size: 16, offset: 368)
!2282 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !866)
!2283 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !6, line: 147, baseType: !2284)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!135, !221, !135, !135}
!2287 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !6, line: 157, baseType: !27)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !1934, file: !6, line: 400, baseType: !2289, size: 64, offset: 12992)
!2289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2290, size: 64)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{null, !2003, !2257}
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !1934, file: !6, line: 415, baseType: !2293, size: 64, offset: 13056)
!2293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2294, size: 64)
!2294 = !DISubroutineType(types: !2295)
!2295 = !{null, !2003, !2296, !2257, !2283, !221, !2287}
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !6, line: 149, baseType: !2297)
!2297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2298, size: 64)
!2298 = !DISubroutineType(types: !2299)
!2299 = !{!2269, !221, !135}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !1934, file: !6, line: 425, baseType: !2301, size: 64, offset: 13120)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2302, size: 64)
!2302 = !DISubroutineType(types: !2303)
!2303 = !{null, !2003, !2296, !2283, !221, !2287}
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !1934, file: !6, line: 435, baseType: !2305, size: 64, offset: 13184)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{null, !2003, !2257, !2296, !221}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !1934, file: !6, line: 444, baseType: !2309, size: 64, offset: 13248)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{null, !2003, !2296, !221}
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !1934, file: !6, line: 455, baseType: !2313, size: 64, offset: 13312)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{null, !2003, !2296, !2316, !221}
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !6, line: 148, baseType: !2317)
!2317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2318, size: 64)
!2318 = !DISubroutineType(types: !2319)
!2319 = !{null, !221, !135, !207}
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !1934, file: !6, line: 464, baseType: !2321, size: 64, offset: 13376)
!2321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2322, size: 64)
!2322 = !DISubroutineType(types: !2323)
!2323 = !{null, !2003, !2324, !2327, !221}
!2324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2325, size: 64)
!2325 = !DISubroutineType(types: !2326)
!2326 = !{null, !221, !135, !221}
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DISubroutineType(types: !2329)
!2329 = !{!866, !221, !135}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1934, file: !6, line: 470, baseType: !2000, size: 64, offset: 13440)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "hair_out_dm", scope: !1679, file: !1454, line: 272, baseType: !1933, size: 64, offset: 960)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "target_ob", scope: !1679, file: !1454, line: 274, baseType: !414, size: 64, offset: 1024)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "lattice_deform_data", scope: !1679, file: !1454, line: 276, baseType: !2334, size: 64, offset: 1088)
!2334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2335, size: 64)
!2335 = !DICompositeType(tag: DW_TAG_structure_type, name: "LatticeDeformData", file: !1454, line: 276, flags: DIFlagFwdDecl)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1679, file: !1454, line: 278, baseType: !414, size: 64, offset: 1152)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "targets", scope: !1679, file: !1454, line: 280, baseType: !336, size: 128, offset: 1216)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1679, file: !1454, line: 282, baseType: !270, size: 512, offset: 1344)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1679, file: !1454, line: 284, baseType: !935, size: 512, offset: 1856)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1679, file: !1454, line: 285, baseType: !207, size: 32, offset: 2368)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "tree_frame", scope: !1679, file: !1454, line: 285, baseType: !207, size: 32, offset: 2400)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree_frame", scope: !1679, file: !1454, line: 285, baseType: !207, size: 32, offset: 2432)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !1679, file: !1454, line: 286, baseType: !135, size: 32, offset: 2464)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "child_seed", scope: !1679, file: !1454, line: 286, baseType: !135, size: 32, offset: 2496)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2528)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "totpart", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2560)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "totunexist", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2592)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "totchild", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2624)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2656)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "totchildcache", scope: !1679, file: !1454, line: 287, baseType: !135, size: 32, offset: 2688)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1679, file: !1454, line: 288, baseType: !199, size: 16, offset: 2720)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "target_psys", scope: !1679, file: !1454, line: 288, baseType: !199, size: 16, offset: 2736)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "totkeyed", scope: !1679, file: !1454, line: 288, baseType: !199, size: 16, offset: 2752)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "bakespace", scope: !1679, file: !1454, line: 288, baseType: !199, size: 16, offset: 2768)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "bb_uvname", scope: !1679, file: !1454, line: 290, baseType: !2356, size: 1536, offset: 2784)
!2356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 1536, elements: !2357)
!2357 = !{!209, !273}
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !1679, file: !1454, line: 293, baseType: !2359, size: 192, offset: 4320)
!2359 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 192, elements: !2360)
!2360 = !{!2361}
!2361 = !DISubrange(count: 12)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "vg_neg", scope: !1679, file: !1454, line: 293, baseType: !199, size: 16, offset: 4512)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "rt3", scope: !1679, file: !1454, line: 293, baseType: !199, size: 16, offset: 4528)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "renderdata", scope: !1679, file: !1454, line: 296, baseType: !221, size: 64, offset: 4544)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !1679, file: !1454, line: 299, baseType: !1397, size: 64, offset: 4608)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1679, file: !1454, line: 300, baseType: !336, size: 128, offset: 4672)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "effectors", scope: !1679, file: !1454, line: 302, baseType: !1676, size: 64, offset: 4800)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "fluid_springs", scope: !1679, file: !1454, line: 304, baseType: !2369, size: 64, offset: 4864)
!2369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSpring", file: !1454, line: 68, baseType: !2371)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleSpring", file: !1454, line: 65, size: 128, elements: !2372)
!2372 = !{!2373, !2374, !2375}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "rest_length", scope: !2371, file: !1454, line: 66, baseType: !207, size: 32)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "particle_index", scope: !2371, file: !1454, line: 67, baseType: !810, size: 64, offset: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "delete_flag", scope: !2371, file: !1454, line: 67, baseType: !7, size: 32, offset: 96)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "tot_fluidsprings", scope: !1679, file: !1454, line: 305, baseType: !135, size: 32, offset: 4928)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_fluidsprings", scope: !1679, file: !1454, line: 305, baseType: !135, size: 32, offset: 4960)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !1679, file: !1454, line: 307, baseType: !1510, size: 64, offset: 4992)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "bvhtree", scope: !1679, file: !1454, line: 308, baseType: !2380, size: 64, offset: 5056)
!2380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2381, size: 64)
!2381 = !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTree", file: !78, line: 583, flags: DIFlagFwdDecl)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "pdd", scope: !1679, file: !1454, line: 310, baseType: !2383, size: 64, offset: 5120)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleDrawData", file: !1904, line: 237, size: 704, elements: !2385)
!2385 = !{!2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398}
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2384, file: !1904, line: 238, baseType: !233, size: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !2384, file: !1904, line: 238, baseType: !233, size: 64, offset: 64)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "ndata", scope: !2384, file: !1904, line: 239, baseType: !233, size: 64, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "nd", scope: !2384, file: !1904, line: 239, baseType: !233, size: 64, offset: 192)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "cdata", scope: !2384, file: !1904, line: 240, baseType: !233, size: 64, offset: 256)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "cd", scope: !2384, file: !1904, line: 240, baseType: !233, size: 64, offset: 320)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "vedata", scope: !2384, file: !1904, line: 241, baseType: !233, size: 64, offset: 384)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "ved", scope: !2384, file: !1904, line: 241, baseType: !233, size: 64, offset: 448)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "ma_col", scope: !2384, file: !1904, line: 242, baseType: !233, size: 64, offset: 512)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "tot_vec_size", scope: !2384, file: !1904, line: 243, baseType: !135, size: 32, offset: 576)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2384, file: !1904, line: 243, baseType: !135, size: 32, offset: 608)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2384, file: !1904, line: 244, baseType: !135, size: 32, offset: 640)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "totve", scope: !2384, file: !1904, line: 244, baseType: !135, size: 32, offset: 672)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "dt_frac", scope: !1679, file: !1454, line: 312, baseType: !207, size: 32, offset: 5184)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1679, file: !1454, line: 313, baseType: !207, size: 32, offset: 5216)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "particles", scope: !1423, file: !1424, line: 244, baseType: !1452, size: 64, offset: 1920)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_field", scope: !1423, file: !1424, line: 245, baseType: !1510, size: 64, offset: 1984)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "emitter_cosnos", scope: !1423, file: !1424, line: 246, baseType: !233, size: 64, offset: 2048)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cache", scope: !1423, file: !1424, line: 247, baseType: !211, size: 64, offset: 2112)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "pathcache", scope: !1423, file: !1424, line: 249, baseType: !1901, size: 64, offset: 2176)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "pathcachebufs", scope: !1423, file: !1424, line: 250, baseType: !334, size: 128, offset: 2240)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1423, file: !1424, line: 252, baseType: !135, size: 32, offset: 2368)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "totframes", scope: !1423, file: !1424, line: 252, baseType: !135, size: 32, offset: 2400)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "totcached", scope: !1423, file: !1424, line: 252, baseType: !135, size: 32, offset: 2432)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "edited", scope: !1423, file: !1424, line: 252, baseType: !135, size: 32, offset: 2464)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sel_col", scope: !1423, file: !1424, line: 254, baseType: !2412, size: 24, offset: 2496)
!2412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 24, elements: !208)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "nosel_col", scope: !1423, file: !1424, line: 255, baseType: !2412, size: 24, offset: 2520)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "free_edit", scope: !1398, file: !1245, line: 208, baseType: !1897, size: 64, offset: 10496)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !1335, file: !1245, line: 340, baseType: !336, size: 128, offset: 2880)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !1335, file: !1245, line: 342, baseType: !1739, size: 64, offset: 3008)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "lcom", scope: !1335, file: !1245, line: 344, baseType: !206, size: 96, offset: 3072)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "lrot", scope: !1335, file: !1245, line: 345, baseType: !938, size: 288, offset: 3168)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "lscale", scope: !1335, file: !1245, line: 346, baseType: !938, size: 288, offset: 3456)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "last_frame", scope: !1335, file: !1245, line: 348, baseType: !135, size: 32, offset: 3744)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !415, file: !152, line: 265, baseType: !1123, size: 64, offset: 10048)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !415, file: !152, line: 267, baseType: !271, size: 8, offset: 10112)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !415, file: !152, line: 268, baseType: !271, size: 8, offset: 10120)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !415, file: !152, line: 269, baseType: !199, size: 16, offset: 10128)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !415, file: !152, line: 270, baseType: !207, size: 32, offset: 10144)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !415, file: !152, line: 272, baseType: !2427, size: 64, offset: 10176)
!2427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2428, size: 64)
!2428 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !78, line: 732, flags: DIFlagFwdDecl)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !415, file: !152, line: 275, baseType: !2430, size: 64, offset: 10240)
!2430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2431, size: 64)
!2431 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !152, line: 275, flags: DIFlagFwdDecl)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !415, file: !152, line: 277, baseType: !1933, size: 64, offset: 10304)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !415, file: !152, line: 277, baseType: !1933, size: 64, offset: 10368)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !415, file: !152, line: 278, baseType: !2435, size: 64, offset: 10432)
!2435 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !2436, line: 27, baseType: !2437)
!2436 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1586, line: 45, baseType: !1608)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !415, file: !152, line: 279, baseType: !2435, size: 64, offset: 10496)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !415, file: !152, line: 280, baseType: !7, size: 32, offset: 10560)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !415, file: !152, line: 281, baseType: !7, size: 32, offset: 10592)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !415, file: !152, line: 283, baseType: !334, size: 128, offset: 10624)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !415, file: !152, line: 284, baseType: !334, size: 128, offset: 10752)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !415, file: !152, line: 285, baseType: !2444, size: 64, offset: 10880)
!2444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !415, file: !152, line: 287, baseType: !2446, size: 64, offset: 10944)
!2446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!2447 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !152, line: 59, flags: DIFlagFwdDecl)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !415, file: !152, line: 288, baseType: !2449, size: 64, offset: 11008)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2450, size: 64)
!2450 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !152, line: 288, flags: DIFlagFwdDecl)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !415, file: !152, line: 290, baseType: !217, size: 64, offset: 11072)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !415, file: !152, line: 291, baseType: !2453, size: 64, offset: 11136)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !747, line: 65, baseType: !746)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !415, file: !152, line: 293, baseType: !334, size: 128, offset: 11200)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !415, file: !152, line: 294, baseType: !2457, size: 64, offset: 11328)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !152, line: 113, baseType: !2459)
!2459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !152, line: 108, size: 256, elements: !2460)
!2460 = !{!2461, !2463, !2464, !2465, !2466}
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2459, file: !152, line: 109, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2459, file: !152, line: 109, baseType: !2462, size: 64, offset: 64)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2459, file: !152, line: 110, baseType: !414, size: 64, offset: 128)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2459, file: !152, line: 111, baseType: !135, size: 32, offset: 192)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2459, file: !152, line: 112, baseType: !207, size: 32, offset: 224)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !276, file: !277, line: 1221, baseType: !2468, size: 64, offset: 1088)
!2468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2469, size: 64)
!2469 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !277, line: 52, flags: DIFlagFwdDecl)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !276, file: !277, line: 1223, baseType: !275, size: 64, offset: 1152)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !276, file: !277, line: 1225, baseType: !334, size: 128, offset: 1216)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !276, file: !277, line: 1226, baseType: !2473, size: 64, offset: 1344)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2474, size: 64)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !277, line: 69, size: 320, elements: !2475)
!2475 = !{!2476, !2477, !2478, !2479, !2480, !2481, !2482, !2483}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2474, file: !277, line: 70, baseType: !2473, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2474, file: !277, line: 70, baseType: !2473, size: 64, offset: 64)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !2474, file: !277, line: 71, baseType: !7, size: 32, offset: 128)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !2474, file: !277, line: 71, baseType: !7, size: 32, offset: 160)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2474, file: !277, line: 72, baseType: !135, size: 32, offset: 192)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !2474, file: !277, line: 73, baseType: !199, size: 16, offset: 224)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !2474, file: !277, line: 73, baseType: !199, size: 16, offset: 240)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2474, file: !277, line: 74, baseType: !414, size: 64, offset: 256)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !276, file: !277, line: 1227, baseType: !414, size: 64, offset: 1408)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !276, file: !277, line: 1229, baseType: !206, size: 96, offset: 1472)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !276, file: !277, line: 1230, baseType: !206, size: 96, offset: 1568)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !276, file: !277, line: 1231, baseType: !206, size: 96, offset: 1664)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !276, file: !277, line: 1231, baseType: !206, size: 96, offset: 1760)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !276, file: !277, line: 1233, baseType: !7, size: 32, offset: 1856)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !276, file: !277, line: 1234, baseType: !135, size: 32, offset: 1888)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !276, file: !277, line: 1235, baseType: !7, size: 32, offset: 1920)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !276, file: !277, line: 1237, baseType: !199, size: 16, offset: 1952)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !276, file: !277, line: 1239, baseType: !271, size: 8, offset: 1968)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !276, file: !277, line: 1240, baseType: !655, size: 8, offset: 1976)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !276, file: !277, line: 1242, baseType: !764, size: 64, offset: 1984)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !276, file: !277, line: 1244, baseType: !2497, size: 64, offset: 2048)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !277, line: 59, flags: DIFlagFwdDecl)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !276, file: !277, line: 1246, baseType: !2500, size: 64, offset: 2112)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !277, line: 1067, size: 5184, elements: !2502)
!2502 = !{!2503, !2541, !2542, !2556, !2562, !2563, !2564, !2565, !2566, !2567, !2568, !2569, !2570, !2571, !2572, !2573, !2574, !2578, !2594, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2703}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2501, file: !277, line: 1068, baseType: !2504, size: 64)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !277, line: 934, baseType: !2506)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !277, line: 925, size: 576, elements: !2507)
!2507 = !{!2508, !2524, !2525, !2526, !2527, !2528, !2540}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2506, file: !277, line: 926, baseType: !2509, size: 320)
!2509 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !277, line: 830, baseType: !2510)
!2510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !277, line: 813, size: 320, elements: !2511)
!2511 = !{!2512, !2515, !2518, !2519, !2521, !2522, !2523}
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2510, file: !277, line: 814, baseType: !2513, size: 64)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !277, line: 51, flags: DIFlagFwdDecl)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2510, file: !277, line: 815, baseType: !2516, size: 64, offset: 64)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !277, line: 815, flags: DIFlagFwdDecl)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2510, file: !277, line: 818, baseType: !221, size: 64, offset: 128)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2510, file: !277, line: 819, baseType: !2520, size: 32, offset: 192)
!2520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !866, size: 32, elements: !639)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2510, file: !277, line: 822, baseType: !135, size: 32, offset: 224)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2510, file: !277, line: 826, baseType: !135, size: 32, offset: 256)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2510, file: !277, line: 829, baseType: !135, size: 32, offset: 288)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2506, file: !277, line: 928, baseType: !199, size: 16, offset: 320)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2506, file: !277, line: 928, baseType: !199, size: 16, offset: 336)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2506, file: !277, line: 929, baseType: !135, size: 32, offset: 352)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2506, file: !277, line: 930, baseType: !803, size: 64, offset: 384)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2506, file: !277, line: 931, baseType: !2529, size: 64, offset: 448)
!2529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2530, size: 64)
!2530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !2025, line: 59, size: 128, elements: !2531)
!2531 = !{!2532, !2538, !2539}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !2530, file: !2025, line: 60, baseType: !2533, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !2025, line: 54, size: 64, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !2534, file: !2025, line: 55, baseType: !135, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2534, file: !2025, line: 56, baseType: !207, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !2530, file: !2025, line: 61, baseType: !135, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2530, file: !2025, line: 62, baseType: !135, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2506, file: !277, line: 933, baseType: !221, size: 64, offset: 512)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2501, file: !277, line: 1069, baseType: !2504, size: 64, offset: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2501, file: !277, line: 1070, baseType: !2543, size: 64, offset: 128)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !277, line: 916, baseType: !2545)
!2545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !277, line: 891, size: 704, elements: !2546)
!2546 = !{!2547, !2548, !2549, !2550, !2551, !2552, !2553, !2554, !2555}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2545, file: !277, line: 892, baseType: !2509, size: 320)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2545, file: !277, line: 896, baseType: !135, size: 32, offset: 320)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2545, file: !277, line: 900, baseType: !1033, size: 96, offset: 352)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2545, file: !277, line: 903, baseType: !207, size: 32, offset: 448)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2545, file: !277, line: 906, baseType: !135, size: 32, offset: 480)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2545, file: !277, line: 909, baseType: !207, size: 32, offset: 512)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2545, file: !277, line: 912, baseType: !207, size: 32, offset: 544)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2545, file: !277, line: 914, baseType: !414, size: 64, offset: 576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2545, file: !277, line: 915, baseType: !221, size: 64, offset: 640)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2501, file: !277, line: 1071, baseType: !2557, size: 64, offset: 192)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !277, line: 920, baseType: !2559)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !277, line: 918, size: 320, elements: !2560)
!2560 = !{!2561}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2559, file: !277, line: 919, baseType: !2509, size: 320)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2501, file: !277, line: 1075, baseType: !207, size: 32, offset: 256)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2501, file: !277, line: 1077, baseType: !207, size: 32, offset: 288)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2501, file: !277, line: 1078, baseType: !207, size: 32, offset: 320)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2501, file: !277, line: 1079, baseType: !199, size: 16, offset: 352)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2501, file: !277, line: 1082, baseType: !199, size: 16, offset: 368)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2501, file: !277, line: 1085, baseType: !271, size: 8, offset: 384)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2501, file: !277, line: 1086, baseType: !271, size: 8, offset: 392)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2501, file: !277, line: 1087, baseType: !271, size: 8, offset: 400)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2501, file: !277, line: 1088, baseType: !271, size: 8, offset: 408)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2501, file: !277, line: 1090, baseType: !207, size: 32, offset: 416)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2501, file: !277, line: 1093, baseType: !199, size: 16, offset: 448)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2501, file: !277, line: 1096, baseType: !271, size: 8, offset: 464)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2501, file: !277, line: 1098, baseType: !2575, size: 40, offset: 472)
!2575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 40, elements: !2576)
!2576 = !{!2577}
!2577 = !DISubrange(count: 5)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2501, file: !277, line: 1101, baseType: !2579, size: 832, offset: 512)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !277, line: 836, size: 832, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2584, !2585, !2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2579, file: !277, line: 837, baseType: !2509, size: 320)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2579, file: !277, line: 839, baseType: !199, size: 16, offset: 320)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2579, file: !277, line: 839, baseType: !199, size: 16, offset: 336)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2579, file: !277, line: 842, baseType: !199, size: 16, offset: 352)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2579, file: !277, line: 842, baseType: !199, size: 16, offset: 368)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2579, file: !277, line: 843, baseType: !813, size: 32, offset: 384)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2579, file: !277, line: 845, baseType: !135, size: 32, offset: 416)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2579, file: !277, line: 847, baseType: !221, size: 64, offset: 448)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2579, file: !277, line: 848, baseType: !768, size: 64, offset: 512)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2579, file: !277, line: 849, baseType: !768, size: 64, offset: 576)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2579, file: !277, line: 850, baseType: !768, size: 64, offset: 640)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2579, file: !277, line: 851, baseType: !206, size: 96, offset: 704)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2579, file: !277, line: 852, baseType: !207, size: 32, offset: 800)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2501, file: !277, line: 1104, baseType: !2595, size: 1344, offset: 1344)
!2595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !277, line: 867, size: 1344, elements: !2596)
!2596 = !{!2597, !2598, !2599, !2600, !2601, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620}
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2595, file: !277, line: 868, baseType: !199, size: 16)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2595, file: !277, line: 869, baseType: !199, size: 16, offset: 16)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2595, file: !277, line: 870, baseType: !199, size: 16, offset: 32)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2595, file: !277, line: 871, baseType: !199, size: 16, offset: 48)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2595, file: !277, line: 873, baseType: !2602, size: 896, offset: 64)
!2602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2603, size: 896, elements: !840)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !277, line: 864, baseType: !2604)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !277, line: 859, size: 128, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2604, file: !277, line: 860, baseType: !199, size: 16)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2604, file: !277, line: 861, baseType: !199, size: 16, offset: 16)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2604, file: !277, line: 861, baseType: !199, size: 16, offset: 32)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2604, file: !277, line: 861, baseType: !199, size: 16, offset: 48)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2604, file: !277, line: 862, baseType: !135, size: 32, offset: 64)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2604, file: !277, line: 863, baseType: !207, size: 32, offset: 96)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2595, file: !277, line: 874, baseType: !221, size: 64, offset: 960)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2595, file: !277, line: 876, baseType: !207, size: 32, offset: 1024)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2595, file: !277, line: 876, baseType: !207, size: 32, offset: 1056)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2595, file: !277, line: 878, baseType: !135, size: 32, offset: 1088)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2595, file: !277, line: 879, baseType: !135, size: 32, offset: 1120)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2595, file: !277, line: 881, baseType: !135, size: 32, offset: 1152)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2595, file: !277, line: 881, baseType: !135, size: 32, offset: 1184)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2595, file: !277, line: 883, baseType: !275, size: 64, offset: 1216)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2595, file: !277, line: 884, baseType: !414, size: 64, offset: 1280)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2501, file: !277, line: 1107, baseType: !207, size: 32, offset: 2688)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2501, file: !277, line: 1110, baseType: !207, size: 32, offset: 2720)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2501, file: !277, line: 1113, baseType: !199, size: 16, offset: 2752)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2501, file: !277, line: 1113, baseType: !199, size: 16, offset: 2768)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2501, file: !277, line: 1116, baseType: !271, size: 8, offset: 2784)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2501, file: !277, line: 1117, baseType: !655, size: 8, offset: 2792)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2501, file: !277, line: 1120, baseType: !199, size: 16, offset: 2800)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2501, file: !277, line: 1121, baseType: !207, size: 32, offset: 2816)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2501, file: !277, line: 1122, baseType: !207, size: 32, offset: 2848)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2501, file: !277, line: 1123, baseType: !207, size: 32, offset: 2880)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2501, file: !277, line: 1124, baseType: !207, size: 32, offset: 2912)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2501, file: !277, line: 1125, baseType: !207, size: 32, offset: 2944)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2501, file: !277, line: 1126, baseType: !207, size: 32, offset: 2976)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2501, file: !277, line: 1127, baseType: !207, size: 32, offset: 3008)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2501, file: !277, line: 1128, baseType: !207, size: 32, offset: 3040)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2501, file: !277, line: 1129, baseType: !207, size: 32, offset: 3072)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2501, file: !277, line: 1130, baseType: !207, size: 32, offset: 3104)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2501, file: !277, line: 1131, baseType: !199, size: 16, offset: 3136)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2501, file: !277, line: 1132, baseType: !271, size: 8, offset: 3152)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2501, file: !277, line: 1133, baseType: !271, size: 8, offset: 3160)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2501, file: !277, line: 1134, baseType: !2642, size: 24, offset: 3168)
!2642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 24, elements: !208)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2501, file: !277, line: 1135, baseType: !271, size: 8, offset: 3192)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2501, file: !277, line: 1138, baseType: !414, size: 64, offset: 3200)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2501, file: !277, line: 1139, baseType: !271, size: 8, offset: 3264)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2501, file: !277, line: 1140, baseType: !271, size: 8, offset: 3272)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2501, file: !277, line: 1141, baseType: !271, size: 8, offset: 3280)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2501, file: !277, line: 1142, baseType: !271, size: 8, offset: 3288)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2501, file: !277, line: 1143, baseType: !271, size: 8, offset: 3296)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2501, file: !277, line: 1144, baseType: !2651, size: 64, offset: 3304)
!2651 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 64, elements: !787)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2501, file: !277, line: 1145, baseType: !2651, size: 64, offset: 3368)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2501, file: !277, line: 1148, baseType: !271, size: 8, offset: 3432)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2501, file: !277, line: 1149, baseType: !271, size: 8, offset: 3440)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2501, file: !277, line: 1152, baseType: !271, size: 8, offset: 3448)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2501, file: !277, line: 1152, baseType: !271, size: 8, offset: 3456)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2501, file: !277, line: 1153, baseType: !271, size: 8, offset: 3464)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2501, file: !277, line: 1154, baseType: !199, size: 16, offset: 3472)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2501, file: !277, line: 1154, baseType: !199, size: 16, offset: 3488)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2501, file: !277, line: 1155, baseType: !199, size: 16, offset: 3504)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2501, file: !277, line: 1155, baseType: !199, size: 16, offset: 3520)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2501, file: !277, line: 1156, baseType: !271, size: 8, offset: 3536)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2501, file: !277, line: 1157, baseType: !271, size: 8, offset: 3544)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2501, file: !277, line: 1159, baseType: !271, size: 8, offset: 3552)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2501, file: !277, line: 1160, baseType: !271, size: 8, offset: 3560)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2501, file: !277, line: 1161, baseType: !271, size: 8, offset: 3568)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2501, file: !277, line: 1162, baseType: !271, size: 8, offset: 3576)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2501, file: !277, line: 1165, baseType: !135, size: 32, offset: 3584)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2501, file: !277, line: 1166, baseType: !135, size: 32, offset: 3616)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2501, file: !277, line: 1167, baseType: !135, size: 32, offset: 3648)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2501, file: !277, line: 1168, baseType: !135, size: 32, offset: 3680)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2501, file: !277, line: 1171, baseType: !199, size: 16, offset: 3712)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2501, file: !277, line: 1171, baseType: !199, size: 16, offset: 3728)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2501, file: !277, line: 1172, baseType: !135, size: 32, offset: 3744)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2501, file: !277, line: 1173, baseType: !207, size: 32, offset: 3776)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2501, file: !277, line: 1174, baseType: !207, size: 32, offset: 3808)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2501, file: !277, line: 1177, baseType: !2678, size: 1024, offset: 3840)
!2678 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !277, line: 963, size: 1024, elements: !2679)
!2679 = !{!2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702}
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2678, file: !277, line: 965, baseType: !135, size: 32)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2678, file: !277, line: 968, baseType: !207, size: 32, offset: 32)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2678, file: !277, line: 971, baseType: !207, size: 32, offset: 64)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2678, file: !277, line: 974, baseType: !207, size: 32, offset: 96)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2678, file: !277, line: 977, baseType: !206, size: 96, offset: 128)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2678, file: !277, line: 979, baseType: !206, size: 96, offset: 224)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2678, file: !277, line: 982, baseType: !135, size: 32, offset: 320)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2678, file: !277, line: 987, baseType: !217, size: 64, offset: 352)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2678, file: !277, line: 989, baseType: !207, size: 32, offset: 416)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2678, file: !277, line: 994, baseType: !135, size: 32, offset: 448)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2678, file: !277, line: 995, baseType: !135, size: 32, offset: 480)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2678, file: !277, line: 997, baseType: !271, size: 8, offset: 512)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2678, file: !277, line: 998, baseType: !839, size: 56, offset: 520)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2678, file: !277, line: 1000, baseType: !207, size: 32, offset: 576)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2678, file: !277, line: 1003, baseType: !217, size: 64, offset: 608)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2678, file: !277, line: 1006, baseType: !135, size: 32, offset: 672)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2678, file: !277, line: 1009, baseType: !207, size: 32, offset: 704)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2678, file: !277, line: 1012, baseType: !217, size: 64, offset: 736)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2678, file: !277, line: 1015, baseType: !217, size: 64, offset: 800)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2678, file: !277, line: 1018, baseType: !135, size: 32, offset: 864)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2678, file: !277, line: 1019, baseType: !908, size: 64, offset: 896)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2678, file: !277, line: 1023, baseType: !207, size: 32, offset: 960)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2678, file: !277, line: 1024, baseType: !135, size: 32, offset: 992)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2501, file: !277, line: 1179, baseType: !2704, size: 320, offset: 4864)
!2704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !277, line: 1043, size: 320, elements: !2705)
!2705 = !{!2706, !2707, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2704, file: !277, line: 1044, baseType: !271, size: 8)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2704, file: !277, line: 1045, baseType: !2708, size: 16, offset: 8)
!2708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 16, elements: !218)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2704, file: !277, line: 1048, baseType: !271, size: 8, offset: 24)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2704, file: !277, line: 1049, baseType: !207, size: 32, offset: 32)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2704, file: !277, line: 1049, baseType: !207, size: 32, offset: 64)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2704, file: !277, line: 1052, baseType: !207, size: 32, offset: 96)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2704, file: !277, line: 1052, baseType: !207, size: 32, offset: 128)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2704, file: !277, line: 1053, baseType: !271, size: 8, offset: 160)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2704, file: !277, line: 1054, baseType: !2642, size: 24, offset: 168)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2704, file: !277, line: 1057, baseType: !207, size: 32, offset: 192)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2704, file: !277, line: 1057, baseType: !207, size: 32, offset: 224)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2704, file: !277, line: 1060, baseType: !207, size: 32, offset: 256)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2704, file: !277, line: 1060, baseType: !207, size: 32, offset: 288)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !276, file: !277, line: 1247, baseType: !2721, size: 64, offset: 2176)
!2721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2722, size: 64)
!2722 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !277, line: 60, flags: DIFlagFwdDecl)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !276, file: !277, line: 1251, baseType: !2724, size: 31872, offset: 2240)
!2724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !277, line: 403, size: 31872, elements: !2725)
!2725 = !{!2726, !2761, !2781, !2790, !2810, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2861, !2862, !2863, !2864, !2865, !2866, !2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2917, !2918, !2919, !2920, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932, !2933, !2934, !2935, !2936, !2937, !2938, !2939, !2940, !2943, !2944, !2945, !2947, !2963, !2964}
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2724, file: !277, line: 404, baseType: !2727, size: 1984)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !277, line: 259, size: 1984, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2744, !2756}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2727, file: !277, line: 260, baseType: !271, size: 8)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2727, file: !277, line: 263, baseType: !271, size: 8, offset: 8)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2727, file: !277, line: 266, baseType: !271, size: 8, offset: 16)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2727, file: !277, line: 267, baseType: !271, size: 8, offset: 24)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2727, file: !277, line: 269, baseType: !271, size: 8, offset: 32)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2727, file: !277, line: 270, baseType: !271, size: 8, offset: 40)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2727, file: !277, line: 276, baseType: !271, size: 8, offset: 48)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2727, file: !277, line: 279, baseType: !271, size: 8, offset: 56)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2727, file: !277, line: 280, baseType: !199, size: 16, offset: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2727, file: !277, line: 280, baseType: !199, size: 16, offset: 80)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2727, file: !277, line: 281, baseType: !207, size: 32, offset: 96)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2727, file: !277, line: 284, baseType: !271, size: 8, offset: 128)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2727, file: !277, line: 285, baseType: !271, size: 8, offset: 136)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2727, file: !277, line: 287, baseType: !2743, size: 48, offset: 144)
!2743 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 48, elements: !932)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2727, file: !277, line: 290, baseType: !2745, size: 1280, offset: 192)
!2745 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !833, line: 174, baseType: !2746)
!2746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !833, line: 166, size: 1280, elements: !2747)
!2747 = !{!2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2746, file: !833, line: 167, baseType: !135, size: 32)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2746, file: !833, line: 167, baseType: !135, size: 32, offset: 32)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2746, file: !833, line: 168, baseType: !270, size: 512, offset: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2746, file: !833, line: 169, baseType: !270, size: 512, offset: 576)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2746, file: !833, line: 170, baseType: !207, size: 32, offset: 1088)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2746, file: !833, line: 171, baseType: !207, size: 32, offset: 1120)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2746, file: !833, line: 172, baseType: !983, size: 64, offset: 1152)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2746, file: !833, line: 173, baseType: !221, size: 64, offset: 1216)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2727, file: !277, line: 291, baseType: !2757, size: 512, offset: 1472)
!2757 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !833, line: 178, baseType: !2758)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !833, line: 176, size: 512, elements: !2759)
!2759 = !{!2760}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2758, file: !833, line: 177, baseType: !270, size: 512)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2724, file: !277, line: 406, baseType: !2762, size: 64, offset: 1984)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !277, line: 80, size: 1472, elements: !2764)
!2764 = !{!2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777}
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2763, file: !277, line: 81, baseType: !221, size: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2763, file: !277, line: 82, baseType: !221, size: 64, offset: 64)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2763, file: !277, line: 83, baseType: !7, size: 32, offset: 128)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2763, file: !277, line: 84, baseType: !7, size: 32, offset: 160)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2763, file: !277, line: 86, baseType: !7, size: 32, offset: 192)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2763, file: !277, line: 87, baseType: !7, size: 32, offset: 224)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2763, file: !277, line: 88, baseType: !7, size: 32, offset: 256)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2763, file: !277, line: 89, baseType: !7, size: 32, offset: 288)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2763, file: !277, line: 90, baseType: !7, size: 32, offset: 320)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2763, file: !277, line: 91, baseType: !7, size: 32, offset: 352)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2763, file: !277, line: 92, baseType: !7, size: 32, offset: 384)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2763, file: !277, line: 93, baseType: !7, size: 32, offset: 416)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2763, file: !277, line: 95, baseType: !2778, size: 1024, offset: 448)
!2778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 1024, elements: !2779)
!2779 = !{!2780}
!2780 = !DISubrange(count: 128)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2724, file: !277, line: 407, baseType: !2782, size: 64, offset: 2048)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !277, line: 98, size: 1216, elements: !2784)
!2784 = !{!2785, !2786, !2787, !2788, !2789}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2783, file: !277, line: 100, baseType: !221, size: 64)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2783, file: !277, line: 101, baseType: !221, size: 64, offset: 64)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2783, file: !277, line: 103, baseType: !7, size: 32, offset: 128)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2783, file: !277, line: 104, baseType: !7, size: 32, offset: 160)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2783, file: !277, line: 106, baseType: !2778, size: 1024, offset: 192)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2724, file: !277, line: 408, baseType: !2791, size: 512, offset: 2112)
!2791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !277, line: 109, size: 512, elements: !2792)
!2792 = !{!2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2791, file: !277, line: 111, baseType: !135, size: 32)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2791, file: !277, line: 112, baseType: !135, size: 32, offset: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2791, file: !277, line: 115, baseType: !135, size: 32, offset: 64)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2791, file: !277, line: 116, baseType: !135, size: 32, offset: 96)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2791, file: !277, line: 117, baseType: !135, size: 32, offset: 128)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2791, file: !277, line: 118, baseType: !135, size: 32, offset: 160)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2791, file: !277, line: 119, baseType: !135, size: 32, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2791, file: !277, line: 120, baseType: !135, size: 32, offset: 224)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2791, file: !277, line: 121, baseType: !135, size: 32, offset: 256)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2791, file: !277, line: 122, baseType: !135, size: 32, offset: 288)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2791, file: !277, line: 125, baseType: !135, size: 32, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2791, file: !277, line: 126, baseType: !135, size: 32, offset: 352)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2791, file: !277, line: 127, baseType: !199, size: 16, offset: 384)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2791, file: !277, line: 128, baseType: !199, size: 16, offset: 400)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2791, file: !277, line: 129, baseType: !135, size: 32, offset: 416)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2791, file: !277, line: 130, baseType: !135, size: 32, offset: 448)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2791, file: !277, line: 131, baseType: !135, size: 32, offset: 480)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2724, file: !277, line: 409, baseType: !2811, size: 576, offset: 2624)
!2811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !277, line: 134, size: 576, elements: !2812)
!2812 = !{!2813, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829}
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2811, file: !277, line: 135, baseType: !135, size: 32)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2811, file: !277, line: 136, baseType: !135, size: 32, offset: 32)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2811, file: !277, line: 137, baseType: !135, size: 32, offset: 64)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2811, file: !277, line: 138, baseType: !135, size: 32, offset: 96)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2811, file: !277, line: 139, baseType: !135, size: 32, offset: 128)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2811, file: !277, line: 140, baseType: !135, size: 32, offset: 160)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2811, file: !277, line: 141, baseType: !135, size: 32, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2811, file: !277, line: 142, baseType: !135, size: 32, offset: 224)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2811, file: !277, line: 143, baseType: !207, size: 32, offset: 256)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2811, file: !277, line: 144, baseType: !135, size: 32, offset: 288)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2811, file: !277, line: 145, baseType: !135, size: 32, offset: 320)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2811, file: !277, line: 147, baseType: !135, size: 32, offset: 352)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2811, file: !277, line: 148, baseType: !135, size: 32, offset: 384)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2811, file: !277, line: 149, baseType: !135, size: 32, offset: 416)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2811, file: !277, line: 150, baseType: !135, size: 32, offset: 448)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2811, file: !277, line: 151, baseType: !135, size: 32, offset: 480)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2811, file: !277, line: 152, baseType: !316, size: 64, offset: 512)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2724, file: !277, line: 411, baseType: !135, size: 32, offset: 3200)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2724, file: !277, line: 411, baseType: !135, size: 32, offset: 3232)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2724, file: !277, line: 411, baseType: !135, size: 32, offset: 3264)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2724, file: !277, line: 412, baseType: !207, size: 32, offset: 3296)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2724, file: !277, line: 413, baseType: !135, size: 32, offset: 3328)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2724, file: !277, line: 413, baseType: !135, size: 32, offset: 3360)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2724, file: !277, line: 415, baseType: !135, size: 32, offset: 3392)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2724, file: !277, line: 415, baseType: !135, size: 32, offset: 3424)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2724, file: !277, line: 416, baseType: !199, size: 16, offset: 3456)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2724, file: !277, line: 416, baseType: !199, size: 16, offset: 3472)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2724, file: !277, line: 418, baseType: !207, size: 32, offset: 3488)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2724, file: !277, line: 418, baseType: !207, size: 32, offset: 3520)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2724, file: !277, line: 421, baseType: !207, size: 32, offset: 3552)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2724, file: !277, line: 421, baseType: !207, size: 32, offset: 3584)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2724, file: !277, line: 421, baseType: !207, size: 32, offset: 3616)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2724, file: !277, line: 425, baseType: !199, size: 16, offset: 3648)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2724, file: !277, line: 425, baseType: !199, size: 16, offset: 3664)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2724, file: !277, line: 425, baseType: !199, size: 16, offset: 3680)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2724, file: !277, line: 426, baseType: !199, size: 16, offset: 3696)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2724, file: !277, line: 428, baseType: !199, size: 16, offset: 3712)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2724, file: !277, line: 428, baseType: !199, size: 16, offset: 3728)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2724, file: !277, line: 431, baseType: !135, size: 32, offset: 3744)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2724, file: !277, line: 433, baseType: !199, size: 16, offset: 3776)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2724, file: !277, line: 435, baseType: !199, size: 16, offset: 3792)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2724, file: !277, line: 437, baseType: !199, size: 16, offset: 3808)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2724, file: !277, line: 439, baseType: !199, size: 16, offset: 3824)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2724, file: !277, line: 441, baseType: !199, size: 16, offset: 3840)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2724, file: !277, line: 443, baseType: !199, size: 16, offset: 3856)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2724, file: !277, line: 449, baseType: !135, size: 32, offset: 3872)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2724, file: !277, line: 453, baseType: !135, size: 32, offset: 3904)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2724, file: !277, line: 458, baseType: !199, size: 16, offset: 3936)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2724, file: !277, line: 462, baseType: !199, size: 16, offset: 3952)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2724, file: !277, line: 467, baseType: !135, size: 32, offset: 3968)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2724, file: !277, line: 467, baseType: !135, size: 32, offset: 4000)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2724, file: !277, line: 469, baseType: !199, size: 16, offset: 4032)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2724, file: !277, line: 469, baseType: !199, size: 16, offset: 4048)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2724, file: !277, line: 469, baseType: !199, size: 16, offset: 4064)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2724, file: !277, line: 469, baseType: !199, size: 16, offset: 4080)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2724, file: !277, line: 474, baseType: !199, size: 16, offset: 4096)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2724, file: !277, line: 475, baseType: !271, size: 8, offset: 4112)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2724, file: !277, line: 476, baseType: !271, size: 8, offset: 4120)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2724, file: !277, line: 481, baseType: !135, size: 32, offset: 4128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2724, file: !277, line: 486, baseType: !135, size: 32, offset: 4160)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2724, file: !277, line: 491, baseType: !135, size: 32, offset: 4192)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2724, file: !277, line: 496, baseType: !199, size: 16, offset: 4224)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2724, file: !277, line: 498, baseType: !199, size: 16, offset: 4240)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2724, file: !277, line: 501, baseType: !199, size: 16, offset: 4256)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2724, file: !277, line: 502, baseType: !199, size: 16, offset: 4272)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2724, file: !277, line: 508, baseType: !199, size: 16, offset: 4288)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2724, file: !277, line: 513, baseType: !199, size: 16, offset: 4304)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2724, file: !277, line: 515, baseType: !199, size: 16, offset: 4320)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2724, file: !277, line: 515, baseType: !199, size: 16, offset: 4336)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2724, file: !277, line: 519, baseType: !991, size: 128, offset: 4352)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2724, file: !277, line: 519, baseType: !991, size: 128, offset: 4480)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2724, file: !277, line: 520, baseType: !917, size: 128, offset: 4608)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2724, file: !277, line: 523, baseType: !334, size: 128, offset: 4736)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2724, file: !277, line: 524, baseType: !199, size: 16, offset: 4864)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2724, file: !277, line: 527, baseType: !199, size: 16, offset: 4880)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2724, file: !277, line: 532, baseType: !207, size: 32, offset: 4896)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2724, file: !277, line: 532, baseType: !207, size: 32, offset: 4928)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2724, file: !277, line: 534, baseType: !207, size: 32, offset: 4960)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2724, file: !277, line: 538, baseType: !207, size: 32, offset: 4992)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2724, file: !277, line: 542, baseType: !135, size: 32, offset: 5024)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2724, file: !277, line: 545, baseType: !207, size: 32, offset: 5056)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2724, file: !277, line: 545, baseType: !207, size: 32, offset: 5088)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2724, file: !277, line: 545, baseType: !207, size: 32, offset: 5120)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2724, file: !277, line: 548, baseType: !207, size: 32, offset: 5152)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2724, file: !277, line: 551, baseType: !199, size: 16, offset: 5184)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2724, file: !277, line: 551, baseType: !199, size: 16, offset: 5200)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2724, file: !277, line: 551, baseType: !199, size: 16, offset: 5216)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2724, file: !277, line: 551, baseType: !199, size: 16, offset: 5232)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2724, file: !277, line: 552, baseType: !199, size: 16, offset: 5248)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2724, file: !277, line: 552, baseType: !199, size: 16, offset: 5264)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2724, file: !277, line: 553, baseType: !207, size: 32, offset: 5280)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2724, file: !277, line: 553, baseType: !207, size: 32, offset: 5312)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2724, file: !277, line: 554, baseType: !199, size: 16, offset: 5344)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2724, file: !277, line: 554, baseType: !199, size: 16, offset: 5360)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2724, file: !277, line: 555, baseType: !207, size: 32, offset: 5376)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2724, file: !277, line: 555, baseType: !207, size: 32, offset: 5408)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2724, file: !277, line: 558, baseType: !299, size: 8192, offset: 5440)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2724, file: !277, line: 561, baseType: !135, size: 32, offset: 13632)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2724, file: !277, line: 562, baseType: !199, size: 16, offset: 13664)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2724, file: !277, line: 562, baseType: !199, size: 16, offset: 13680)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2724, file: !277, line: 565, baseType: !2914, size: 6144, offset: 13696)
!2914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 6144, elements: !2915)
!2915 = !{!2916}
!2916 = !DISubrange(count: 768)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2724, file: !277, line: 568, baseType: !638, size: 128, offset: 19840)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2724, file: !277, line: 569, baseType: !638, size: 128, offset: 19968)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2724, file: !277, line: 572, baseType: !271, size: 8, offset: 20096)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2724, file: !277, line: 573, baseType: !271, size: 8, offset: 20104)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2724, file: !277, line: 574, baseType: !271, size: 8, offset: 20112)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2724, file: !277, line: 575, baseType: !2575, size: 40, offset: 20120)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2724, file: !277, line: 578, baseType: !135, size: 32, offset: 20160)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2724, file: !277, line: 579, baseType: !199, size: 16, offset: 20192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2724, file: !277, line: 580, baseType: !199, size: 16, offset: 20208)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2724, file: !277, line: 581, baseType: !207, size: 32, offset: 20224)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2724, file: !277, line: 582, baseType: !207, size: 32, offset: 20256)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2724, file: !277, line: 585, baseType: !199, size: 16, offset: 20288)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2724, file: !277, line: 585, baseType: !199, size: 16, offset: 20304)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2724, file: !277, line: 586, baseType: !207, size: 32, offset: 20320)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2724, file: !277, line: 589, baseType: !199, size: 16, offset: 20352)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2724, file: !277, line: 589, baseType: !199, size: 16, offset: 20368)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2724, file: !277, line: 590, baseType: !135, size: 32, offset: 20384)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2724, file: !277, line: 593, baseType: !199, size: 16, offset: 20416)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2724, file: !277, line: 593, baseType: !199, size: 16, offset: 20432)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2724, file: !277, line: 594, baseType: !199, size: 16, offset: 20448)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2724, file: !277, line: 594, baseType: !199, size: 16, offset: 20464)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2724, file: !277, line: 595, baseType: !207, size: 32, offset: 20480)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2724, file: !277, line: 596, baseType: !207, size: 32, offset: 20512)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2724, file: !277, line: 597, baseType: !2941, size: 64, offset: 20544)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !146, line: 205, flags: DIFlagFwdDecl)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2724, file: !277, line: 600, baseType: !135, size: 32, offset: 20608)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2724, file: !277, line: 601, baseType: !207, size: 32, offset: 20640)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2724, file: !277, line: 604, baseType: !2946, size: 256, offset: 20672)
!2946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 256, elements: !669)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2724, file: !277, line: 607, baseType: !2948, size: 10880, offset: 20928)
!2948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !277, line: 364, size: 10880, elements: !2949)
!2949 = !{!2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962}
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2948, file: !277, line: 365, baseType: !2727, size: 1984)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2948, file: !277, line: 367, baseType: !299, size: 8192, offset: 1984)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2948, file: !277, line: 369, baseType: !199, size: 16, offset: 10176)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2948, file: !277, line: 369, baseType: !199, size: 16, offset: 10192)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2948, file: !277, line: 370, baseType: !199, size: 16, offset: 10208)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2948, file: !277, line: 370, baseType: !199, size: 16, offset: 10224)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2948, file: !277, line: 372, baseType: !207, size: 32, offset: 10240)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2948, file: !277, line: 373, baseType: !207, size: 32, offset: 10272)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2948, file: !277, line: 375, baseType: !2642, size: 24, offset: 10304)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2948, file: !277, line: 376, baseType: !271, size: 8, offset: 10328)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2948, file: !277, line: 378, baseType: !271, size: 8, offset: 10336)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2948, file: !277, line: 379, baseType: !2642, size: 24, offset: 10344)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2948, file: !277, line: 381, baseType: !270, size: 512, offset: 10368)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2724, file: !277, line: 609, baseType: !135, size: 32, offset: 31808)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2724, file: !277, line: 610, baseType: !135, size: 32, offset: 31840)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !276, file: !277, line: 1252, baseType: !2966, size: 256, offset: 34112)
!2966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !277, line: 158, size: 256, elements: !2967)
!2967 = !{!2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976}
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2966, file: !277, line: 159, baseType: !135, size: 32)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2966, file: !277, line: 160, baseType: !207, size: 32, offset: 32)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2966, file: !277, line: 161, baseType: !207, size: 32, offset: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2966, file: !277, line: 162, baseType: !207, size: 32, offset: 96)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2966, file: !277, line: 163, baseType: !135, size: 32, offset: 128)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2966, file: !277, line: 164, baseType: !199, size: 16, offset: 160)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2966, file: !277, line: 165, baseType: !199, size: 16, offset: 176)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2966, file: !277, line: 166, baseType: !207, size: 32, offset: 192)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2966, file: !277, line: 167, baseType: !207, size: 32, offset: 224)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !276, file: !277, line: 1254, baseType: !334, size: 128, offset: 34368)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !276, file: !277, line: 1255, baseType: !334, size: 128, offset: 34496)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !276, file: !277, line: 1257, baseType: !221, size: 64, offset: 34624)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !276, file: !277, line: 1258, baseType: !221, size: 64, offset: 34688)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !276, file: !277, line: 1259, baseType: !221, size: 64, offset: 34752)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !276, file: !277, line: 1260, baseType: !221, size: 64, offset: 34816)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !276, file: !277, line: 1262, baseType: !221, size: 64, offset: 34880)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !276, file: !277, line: 1265, baseType: !2985, size: 64, offset: 34944)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !277, line: 1265, flags: DIFlagFwdDecl)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !276, file: !277, line: 1266, baseType: !199, size: 16, offset: 35008)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !276, file: !277, line: 1267, baseType: !199, size: 16, offset: 35024)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !276, file: !277, line: 1270, baseType: !135, size: 32, offset: 35040)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !276, file: !277, line: 1271, baseType: !334, size: 128, offset: 35072)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !276, file: !277, line: 1274, baseType: !2992, size: 128, offset: 35200)
!2992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !277, line: 650, size: 128, elements: !2993)
!2993 = !{!2994, !2995, !2996, !2997, !2998}
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2992, file: !277, line: 651, baseType: !206, size: 96)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2992, file: !277, line: 652, baseType: !271, size: 8, offset: 96)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2992, file: !277, line: 652, baseType: !271, size: 8, offset: 104)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2992, file: !277, line: 652, baseType: !271, size: 8, offset: 112)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2992, file: !277, line: 652, baseType: !271, size: 8, offset: 120)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !276, file: !277, line: 1275, baseType: !3000, size: 1472, offset: 35328)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !277, line: 676, size: 1472, elements: !3001)
!3001 = !{!3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3023, !3024, !3025, !3026, !3045, !3046, !3047, !3048, !3049, !3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !3000, file: !277, line: 679, baseType: !2992, size: 128)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !3000, file: !277, line: 680, baseType: !199, size: 16, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !3000, file: !277, line: 680, baseType: !199, size: 16, offset: 144)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !3000, file: !277, line: 680, baseType: !199, size: 16, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !3000, file: !277, line: 680, baseType: !199, size: 16, offset: 176)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !3000, file: !277, line: 681, baseType: !199, size: 16, offset: 192)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !3000, file: !277, line: 681, baseType: !199, size: 16, offset: 208)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !3000, file: !277, line: 681, baseType: !199, size: 16, offset: 224)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !3000, file: !277, line: 681, baseType: !199, size: 16, offset: 240)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !3000, file: !277, line: 682, baseType: !199, size: 16, offset: 256)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !3000, file: !277, line: 682, baseType: !976, size: 48, offset: 272)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !3000, file: !277, line: 685, baseType: !3014, size: 192, offset: 320)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !277, line: 633, size: 192, elements: !3015)
!3015 = !{!3016, !3017, !3018, !3019, !3020, !3021, !3022}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !3014, file: !277, line: 634, baseType: !199, size: 16)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3014, file: !277, line: 634, baseType: !199, size: 16, offset: 16)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !3014, file: !277, line: 635, baseType: !199, size: 16, offset: 32)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !3014, file: !277, line: 635, baseType: !199, size: 16, offset: 48)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !3014, file: !277, line: 636, baseType: !207, size: 32, offset: 64)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3014, file: !277, line: 636, baseType: !207, size: 32, offset: 96)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !3014, file: !277, line: 637, baseType: !2941, size: 64, offset: 128)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !3000, file: !277, line: 686, baseType: !199, size: 16, offset: 512)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !3000, file: !277, line: 686, baseType: !199, size: 16, offset: 528)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !3000, file: !277, line: 687, baseType: !207, size: 32, offset: 544)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !3000, file: !277, line: 688, baseType: !3027, size: 448, offset: 576)
!3027 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !277, line: 674, baseType: !3028)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !277, line: 659, size: 448, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033, !3034, !3035, !3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !3028, file: !277, line: 660, baseType: !207, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !3028, file: !277, line: 661, baseType: !207, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !3028, file: !277, line: 662, baseType: !207, size: 32, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !3028, file: !277, line: 663, baseType: !207, size: 32, offset: 96)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !3028, file: !277, line: 664, baseType: !207, size: 32, offset: 128)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !3028, file: !277, line: 665, baseType: !207, size: 32, offset: 160)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !3028, file: !277, line: 666, baseType: !207, size: 32, offset: 192)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !3028, file: !277, line: 667, baseType: !207, size: 32, offset: 224)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !3028, file: !277, line: 668, baseType: !207, size: 32, offset: 256)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !3028, file: !277, line: 669, baseType: !207, size: 32, offset: 288)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !3028, file: !277, line: 670, baseType: !135, size: 32, offset: 320)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !3028, file: !277, line: 671, baseType: !207, size: 32, offset: 352)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !3028, file: !277, line: 672, baseType: !207, size: 32, offset: 384)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3028, file: !277, line: 673, baseType: !199, size: 16, offset: 416)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3028, file: !277, line: 673, baseType: !199, size: 16, offset: 432)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3000, file: !277, line: 692, baseType: !207, size: 32, offset: 1024)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !3000, file: !277, line: 697, baseType: !207, size: 32, offset: 1056)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3000, file: !277, line: 703, baseType: !135, size: 32, offset: 1088)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3000, file: !277, line: 704, baseType: !199, size: 16, offset: 1120)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !3000, file: !277, line: 704, baseType: !199, size: 16, offset: 1136)
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !3000, file: !277, line: 705, baseType: !199, size: 16, offset: 1152)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !3000, file: !277, line: 706, baseType: !199, size: 16, offset: 1168)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !3000, file: !277, line: 707, baseType: !199, size: 16, offset: 1184)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !3000, file: !277, line: 708, baseType: !199, size: 16, offset: 1200)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !3000, file: !277, line: 709, baseType: !199, size: 16, offset: 1216)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !3000, file: !277, line: 709, baseType: !199, size: 16, offset: 1232)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !3000, file: !277, line: 709, baseType: !199, size: 16, offset: 1248)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !3000, file: !277, line: 709, baseType: !199, size: 16, offset: 1264)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !3000, file: !277, line: 710, baseType: !199, size: 16, offset: 1280)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !3000, file: !277, line: 711, baseType: !199, size: 16, offset: 1296)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !3000, file: !277, line: 712, baseType: !207, size: 32, offset: 1312)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !3000, file: !277, line: 713, baseType: !207, size: 32, offset: 1344)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !3000, file: !277, line: 713, baseType: !207, size: 32, offset: 1376)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !3000, file: !277, line: 713, baseType: !207, size: 32, offset: 1408)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3000, file: !277, line: 713, baseType: !207, size: 32, offset: 1440)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !276, file: !277, line: 1278, baseType: !3066, size: 64, offset: 36800)
!3066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !277, line: 1197, size: 64, elements: !3067)
!3067 = !{!3068, !3069, !3070, !3071}
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !3066, file: !277, line: 1199, baseType: !207, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !3066, file: !277, line: 1200, baseType: !271, size: 8, offset: 32)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !3066, file: !277, line: 1201, baseType: !271, size: 8, offset: 40)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3066, file: !277, line: 1202, baseType: !199, size: 16, offset: 48)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !276, file: !277, line: 1281, baseType: !493, size: 64, offset: 36864)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !276, file: !277, line: 1284, baseType: !3074, size: 192, offset: 36928)
!3074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !277, line: 1208, size: 192, elements: !3075)
!3075 = !{!3076, !3077, !3078, !3079}
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !3074, file: !277, line: 1209, baseType: !206, size: 96)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3074, file: !277, line: 1210, baseType: !135, size: 32, offset: 96)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !3074, file: !277, line: 1210, baseType: !135, size: 32, offset: 128)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !3074, file: !277, line: 1210, baseType: !135, size: 32, offset: 160)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !276, file: !277, line: 1287, baseType: !3081, size: 64, offset: 37120)
!3081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3082, size: 64)
!3082 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !3083, line: 431, flags: DIFlagFwdDecl)
!3083 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !276, file: !277, line: 1289, baseType: !2435, size: 64, offset: 37184)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !276, file: !277, line: 1290, baseType: !2435, size: 64, offset: 37248)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !276, file: !277, line: 1293, baseType: !2745, size: 1280, offset: 37312)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !276, file: !277, line: 1294, baseType: !2757, size: 512, offset: 38592)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !276, file: !277, line: 1295, baseType: !832, size: 512, offset: 39104)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !276, file: !277, line: 1298, baseType: !3090, size: 64, offset: 39616)
!3090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3091, size: 64)
!3091 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !277, line: 1298, flags: DIFlagFwdDecl)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !260, file: !78, line: 109, baseType: !1166, size: 64, offset: 832)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !256, file: !78, line: 1136, baseType: !251, size: 64, offset: 896)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !256, file: !78, line: 1137, baseType: !3095, size: 64, offset: 960)
!3095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3096, size: 64)
!3096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DynamicPaintBrushSettings", file: !244, line: 203, size: 896, elements: !3097)
!3097 = !{!3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121}
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !3096, file: !244, line: 204, baseType: !255, size: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !3096, file: !244, line: 205, baseType: !1933, size: 64, offset: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !3096, file: !244, line: 206, baseType: !1678, size: 64, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3096, file: !244, line: 207, baseType: !520, size: 64, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3096, file: !244, line: 209, baseType: !135, size: 32, offset: 256)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "collision", scope: !3096, file: !244, line: 210, baseType: !135, size: 32, offset: 288)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3096, file: !244, line: 212, baseType: !207, size: 32, offset: 320)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3096, file: !244, line: 212, baseType: !207, size: 32, offset: 352)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3096, file: !244, line: 212, baseType: !207, size: 32, offset: 384)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !3096, file: !244, line: 212, baseType: !207, size: 32, offset: 416)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "wetness", scope: !3096, file: !244, line: 213, baseType: !207, size: 32, offset: 448)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "particle_radius", scope: !3096, file: !244, line: 215, baseType: !207, size: 32, offset: 480)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "particle_smooth", scope: !3096, file: !244, line: 215, baseType: !207, size: 32, offset: 512)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "paint_distance", scope: !3096, file: !244, line: 216, baseType: !207, size: 32, offset: 544)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "paint_ramp", scope: !3096, file: !244, line: 219, baseType: !646, size: 64, offset: 576)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "vel_ramp", scope: !3096, file: !244, line: 220, baseType: !646, size: 64, offset: 640)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "proximity_falloff", scope: !3096, file: !244, line: 222, baseType: !199, size: 16, offset: 704)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "wave_type", scope: !3096, file: !244, line: 223, baseType: !199, size: 16, offset: 720)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "ray_dir", scope: !3096, file: !244, line: 224, baseType: !199, size: 16, offset: 736)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3096, file: !244, line: 225, baseType: !199, size: 16, offset: 752)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "wave_factor", scope: !3096, file: !244, line: 227, baseType: !207, size: 32, offset: 768)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "wave_clamp", scope: !3096, file: !244, line: 227, baseType: !207, size: 32, offset: 800)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "max_velocity", scope: !3096, file: !244, line: 228, baseType: !207, size: 32, offset: 832)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "smudge_strength", scope: !3096, file: !244, line: 228, baseType: !207, size: 32, offset: 864)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !256, file: !78, line: 1138, baseType: !135, size: 32, offset: 1024)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !256, file: !78, line: 1139, baseType: !135, size: 32, offset: 1056)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !252, file: !244, line: 148, baseType: !1933, size: 64, offset: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "surfaces", scope: !252, file: !244, line: 150, baseType: !336, size: 128, offset: 128)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "active_sur", scope: !252, file: !244, line: 151, baseType: !199, size: 16, offset: 256)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !252, file: !244, line: 151, baseType: !199, size: 16, offset: 272)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !252, file: !244, line: 152, baseType: !135, size: 32, offset: 288)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !252, file: !244, line: 154, baseType: !270, size: 512, offset: 320)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !245, file: !244, line: 90, baseType: !3131, size: 64, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintSurfaceData", file: !224, line: 35, size: 320, elements: !3133)
!3133 = !{!3134, !3135, !3136, !3145, !3194}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "format_data", scope: !3132, file: !224, line: 36, baseType: !221, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "type_data", scope: !3132, file: !224, line: 37, baseType: !221, size: 64, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "adj_data", scope: !3132, file: !224, line: 38, baseType: !3137, size: 64, offset: 128)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintAdjData", file: !3, line: 223, size: 320, elements: !3139)
!3139 = !{!3140, !3141, !3142, !3143, !3144}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "n_target", scope: !3138, file: !3, line: 224, baseType: !211, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "n_index", scope: !3138, file: !3, line: 226, baseType: !211, size: 64, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "n_num", scope: !3138, file: !3, line: 227, baseType: !211, size: 64, offset: 128)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3138, file: !3, line: 228, baseType: !211, size: 64, offset: 192)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "total_targets", scope: !3138, file: !3, line: 229, baseType: !135, size: 32, offset: 256)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "bData", scope: !3132, file: !224, line: 40, baseType: !3146, size: 64, offset: 192)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintBakeData", file: !3, line: 178, size: 1536, elements: !3148)
!3148 = !{!3149, !3156, !3157, !3158, !3159, !3166, !3173, !3174, !3186, !3187, !3188, !3189, !3192, !3193}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "bNormal", scope: !3147, file: !3, line: 180, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintBakeNormal", file: !3, line: 175, baseType: !3152)
!3152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintBakeNormal", file: !3, line: 172, size: 128, elements: !3153)
!3153 = !{!3154, !3155}
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "invNorm", scope: !3152, file: !3, line: 173, baseType: !206, size: 96)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "normal_scale", scope: !3152, file: !3, line: 174, baseType: !207, size: 32, offset: 96)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "s_pos", scope: !3147, file: !3, line: 181, baseType: !211, size: 64, offset: 64)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "s_num", scope: !3147, file: !3, line: 182, baseType: !211, size: 64, offset: 128)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "realCoord", scope: !3147, file: !3, line: 183, baseType: !201, size: 64, offset: 192)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "mesh_bounds", scope: !3147, file: !3, line: 185, baseType: !3160, size: 224, offset: 256)
!3160 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bounds3D", file: !3, line: 149, baseType: !3161)
!3161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bounds3D", file: !3, line: 146, size: 224, elements: !3162)
!3162 = !{!3163, !3164, !3165}
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3161, file: !3, line: 147, baseType: !135, size: 32)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3161, file: !3, line: 148, baseType: !206, size: 96, offset: 32)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3161, file: !3, line: 148, baseType: !206, size: 96, offset: 128)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "bNeighs", scope: !3147, file: !3, line: 188, baseType: !3167, size: 64, offset: 512)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_typedef, name: "BakeAdjPoint", file: !3, line: 169, baseType: !3169)
!3169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeAdjPoint", file: !3, line: 166, size: 128, elements: !3170)
!3170 = !{!3171, !3172}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3169, file: !3, line: 167, baseType: !206, size: 96)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3169, file: !3, line: 168, baseType: !207, size: 32, offset: 96)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "average_dist", scope: !3147, file: !3, line: 189, baseType: !874, size: 64, offset: 576)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !3147, file: !3, line: 191, baseType: !3175, size: 64, offset: 640)
!3175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3176, size: 64)
!3176 = !DIDerivedType(tag: DW_TAG_typedef, name: "VolumeGrid", file: !3, line: 160, baseType: !3177)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeGrid", file: !3, line: 151, size: 576, elements: !3178)
!3178 = !{!3179, !3180, !3181, !3183, !3184, !3185}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !3177, file: !3, line: 152, baseType: !1033, size: 96)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bounds", scope: !3177, file: !3, line: 153, baseType: !3160, size: 224, offset: 96)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !3177, file: !3, line: 155, baseType: !3182, size: 64, offset: 320)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3160, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "s_pos", scope: !3177, file: !3, line: 156, baseType: !211, size: 64, offset: 384)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "s_num", scope: !3177, file: !3, line: 157, baseType: !211, size: 64, offset: 448)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "t_index", scope: !3177, file: !3, line: 158, baseType: !211, size: 64, offset: 512)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "velocity", scope: !3147, file: !3, line: 194, baseType: !201, size: 64, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "prev_velocity", scope: !3147, file: !3, line: 195, baseType: !201, size: 64, offset: 768)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "brush_velocity", scope: !3147, file: !3, line: 196, baseType: !233, size: 64, offset: 832)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "prev_verts", scope: !3147, file: !3, line: 198, baseType: !3190, size: 64, offset: 896)
!3190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3191, size: 64)
!3191 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !2025, line: 69, baseType: !2024)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "prev_obmat", scope: !3147, file: !3, line: 199, baseType: !935, size: 512, offset: 960)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "clear", scope: !3147, file: !3, line: 200, baseType: !135, size: 32, offset: 1472)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "total_points", scope: !3132, file: !224, line: 41, baseType: !135, size: 32, offset: 256)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "brush_group", scope: !245, file: !244, line: 92, baseType: !1123, size: 64, offset: 256)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "effector_weights", scope: !245, file: !244, line: 93, baseType: !1739, size: 64, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "pointcache", scope: !245, file: !244, line: 96, baseType: !1397, size: 64, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "ptcaches", scope: !245, file: !244, line: 97, baseType: !336, size: 128, offset: 448)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "current_frame", scope: !245, file: !244, line: 98, baseType: !135, size: 32, offset: 576)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !245, file: !244, line: 101, baseType: !270, size: 512, offset: 608)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !245, file: !244, line: 102, baseType: !199, size: 16, offset: 1120)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !245, file: !244, line: 102, baseType: !199, size: 16, offset: 1136)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "disp_type", scope: !245, file: !244, line: 103, baseType: !199, size: 16, offset: 1152)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "image_fileformat", scope: !245, file: !244, line: 103, baseType: !199, size: 16, offset: 1168)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "effect_ui", scope: !245, file: !244, line: 104, baseType: !199, size: 16, offset: 1184)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "preview_id", scope: !245, file: !244, line: 105, baseType: !199, size: 16, offset: 1200)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "init_color_type", scope: !245, file: !244, line: 106, baseType: !199, size: 16, offset: 1216)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "pad_s", scope: !245, file: !244, line: 106, baseType: !199, size: 16, offset: 1232)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !245, file: !244, line: 107, baseType: !135, size: 32, offset: 1248)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !245, file: !244, line: 107, baseType: !135, size: 32, offset: 1280)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "image_resolution", scope: !245, file: !244, line: 109, baseType: !135, size: 32, offset: 1312)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "substeps", scope: !245, file: !244, line: 109, baseType: !135, size: 32, offset: 1344)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !245, file: !244, line: 110, baseType: !135, size: 32, offset: 1376)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !245, file: !244, line: 110, baseType: !135, size: 32, offset: 1408)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !245, file: !244, line: 110, baseType: !135, size: 32, offset: 1440)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "init_color", scope: !245, file: !244, line: 113, baseType: !638, size: 128, offset: 1472)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "init_texture", scope: !245, file: !244, line: 114, baseType: !691, size: 64, offset: 1600)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "init_layername", scope: !245, file: !244, line: 115, baseType: !270, size: 512, offset: 1664)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "dry_speed", scope: !245, file: !244, line: 117, baseType: !135, size: 32, offset: 2176)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "diss_speed", scope: !245, file: !244, line: 117, baseType: !135, size: 32, offset: 2208)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "color_dry_threshold", scope: !245, file: !244, line: 118, baseType: !207, size: 32, offset: 2240)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "depth_clamp", scope: !245, file: !244, line: 119, baseType: !207, size: 32, offset: 2272)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "disp_factor", scope: !245, file: !244, line: 119, baseType: !207, size: 32, offset: 2304)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "spread_speed", scope: !245, file: !244, line: 121, baseType: !207, size: 32, offset: 2336)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "color_spread_speed", scope: !245, file: !244, line: 121, baseType: !207, size: 32, offset: 2368)
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "shrink_speed", scope: !245, file: !244, line: 121, baseType: !207, size: 32, offset: 2400)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "drip_vel", scope: !245, file: !244, line: 122, baseType: !207, size: 32, offset: 2432)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "drip_acc", scope: !245, file: !244, line: 122, baseType: !207, size: 32, offset: 2464)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "influence_scale", scope: !245, file: !244, line: 125, baseType: !207, size: 32, offset: 2496)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "radius_scale", scope: !245, file: !244, line: 125, baseType: !207, size: 32, offset: 2528)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "wave_damping", scope: !245, file: !244, line: 128, baseType: !207, size: 32, offset: 2560)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "wave_speed", scope: !245, file: !244, line: 128, baseType: !207, size: 32, offset: 2592)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "wave_timescale", scope: !245, file: !244, line: 128, baseType: !207, size: 32, offset: 2624)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "wave_spring", scope: !245, file: !244, line: 128, baseType: !207, size: 32, offset: 2656)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "wave_smoothness", scope: !245, file: !244, line: 128, baseType: !207, size: 32, offset: 2688)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !245, file: !244, line: 129, baseType: !135, size: 32, offset: 2720)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "uvlayer_name", scope: !245, file: !244, line: 131, baseType: !270, size: 512, offset: 2752)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "image_output_path", scope: !245, file: !244, line: 132, baseType: !299, size: 8192, offset: 3264)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "output_name", scope: !245, file: !244, line: 133, baseType: !270, size: 512, offset: 11456)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "output_name2", scope: !245, file: !244, line: 134, baseType: !270, size: 512, offset: 11968)
!3241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3152, size: 64)
!3242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3243, size: 64)
!3243 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintModifierData", file: !78, line: 1140, baseType: !256)
!3244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3245, size: 64)
!3245 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeFromMesh", file: !1984, line: 69, baseType: !3246)
!3246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeFromMesh", file: !1984, line: 47, size: 576, elements: !3247)
!3247 = !{!3248, !3249, !3264, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294}
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "tree", scope: !3246, file: !1984, line: 48, baseType: !2380, size: 64)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "nearest_callback", scope: !3246, file: !1984, line: 51, baseType: !3250, size: 64, offset: 64)
!3250 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_NearestPointCallback", file: !3251, line: 76, baseType: !3252)
!3251 = !DIFile(filename: "blender/source/blender/blenlib/BLI_kdopbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3253, size: 64)
!3253 = !DISubroutineType(types: !3254)
!3254 = !{null, !221, !135, !2195, !3255}
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeNearest", file: !3251, line: 59, baseType: !3257)
!3257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeNearest", file: !3251, line: 53, size: 288, elements: !3258)
!3258 = !{!3259, !3260, !3261, !3262, !3263}
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3257, file: !3251, line: 54, baseType: !135, size: 32)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3257, file: !3251, line: 55, baseType: !206, size: 96, offset: 32)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3257, file: !3251, line: 56, baseType: !206, size: 96, offset: 128)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "dist_sq", scope: !3257, file: !3251, line: 57, baseType: !207, size: 32, offset: 224)
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3257, file: !3251, line: 58, baseType: !135, size: 32, offset: 256)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "raycast_callback", scope: !3246, file: !1984, line: 52, baseType: !3265, size: 64, offset: 128)
!3265 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTree_RayCastCallback", file: !3251, line: 79, baseType: !3266)
!3266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3267, size: 64)
!3267 = !DISubroutineType(types: !3268)
!3268 = !{null, !221, !135, !3269, !3277}
!3269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3271)
!3271 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRay", file: !3251, line: 65, baseType: !3272)
!3272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRay", file: !3251, line: 61, size: 224, elements: !3273)
!3273 = !{!3274, !3275, !3276}
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "origin", scope: !3272, file: !3251, line: 62, baseType: !206, size: 96)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !3272, file: !3251, line: 63, baseType: !206, size: 96, offset: 96)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !3272, file: !3251, line: 64, baseType: !207, size: 32, offset: 192)
!3277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3278, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHTreeRayHit", file: !3251, line: 73, baseType: !3279)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BVHTreeRayHit", file: !3251, line: 67, size: 288, elements: !3280)
!3280 = !{!3281, !3282, !3283, !3284, !3285}
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3279, file: !3251, line: 68, baseType: !135, size: 32)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !3279, file: !3251, line: 69, baseType: !206, size: 96, offset: 32)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !3279, file: !3251, line: 70, baseType: !206, size: 96, offset: 128)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !3279, file: !3251, line: 71, baseType: !207, size: 32, offset: 224)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3279, file: !3251, line: 72, baseType: !135, size: 32, offset: 256)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3246, file: !1984, line: 55, baseType: !2023, size: 64, offset: 192)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !3246, file: !1984, line: 56, baseType: !2035, size: 64, offset: 256)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !3246, file: !1984, line: 57, baseType: !2047, size: 64, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "vert_allocated", scope: !3246, file: !1984, line: 58, baseType: !866, size: 8, offset: 384)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "face_allocated", scope: !3246, file: !1984, line: 59, baseType: !866, size: 8, offset: 392)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "edge_allocated", scope: !3246, file: !1984, line: 60, baseType: !866, size: 8, offset: 400)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "sphere_radius", scope: !3246, file: !1984, line: 63, baseType: !207, size: 32, offset: 416)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "em_evil", scope: !3246, file: !1984, line: 66, baseType: !221, size: 64, offset: 448)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "cached", scope: !3246, file: !1984, line: 67, baseType: !866, size: 8, offset: 512)
!3295 = !{!0, !3296, !3299, !3301}
!3296 = !DIGlobalVariableExpression(var: !3297, expr: !DIExpression())
!3297 = distinct !DIGlobalVariable(name: "neighY", scope: !2, file: !3, line: 106, type: !3298, isLocal: true, isDefinition: true)
!3298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 256, elements: !787)
!3299 = !DIGlobalVariableExpression(var: !3300, expr: !DIExpression(DW_OP_constu, 1079233951, DW_OP_stack_value))
!3300 = distinct !DIGlobalVariable(name: "gaussianTotal", scope: !2, file: !3, line: 102, type: !2009, isLocal: true, isDefinition: true)
!3301 = !DIGlobalVariableExpression(var: !3302, expr: !DIExpression())
!3302 = distinct !DIGlobalVariable(name: "gaussianFactors", scope: !2, file: !3, line: 96, type: !3303, isLocal: true, isDefinition: true)
!3303 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 160, elements: !2576)
!3304 = !{i32 7, !"Dwarf Version", i32 4}
!3305 = !{i32 2, !"Debug Info Version", i32 3}
!3306 = !{i32 1, !"wchar_size", i32 4}
!3307 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3308 = distinct !DISubprogram(name: "dynamicPaint_surfaceHasColorPreview", scope: !3, file: !3, line: 257, type: !3309, scopeLine: 258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!866, !242}
!3311 = !{}
!3312 = !DILocalVariable(name: "surface", arg: 1, scope: !3308, file: !3, line: 257, type: !242)
!3313 = !DILocation(line: 257, column: 63, scope: !3308)
!3314 = !DILocation(line: 259, column: 6, scope: !3315)
!3315 = distinct !DILexicalBlock(scope: !3308, file: !3, line: 259, column: 6)
!3316 = !DILocation(line: 259, column: 15, scope: !3315)
!3317 = !DILocation(line: 259, column: 22, scope: !3315)
!3318 = !DILocation(line: 259, column: 6, scope: !3308)
!3319 = !DILocation(line: 260, column: 3, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 259, column: 56)
!3321 = !DILocation(line: 262, column: 11, scope: !3322)
!3322 = distinct !DILexicalBlock(scope: !3315, file: !3, line: 262, column: 11)
!3323 = !DILocation(line: 262, column: 20, scope: !3322)
!3324 = !DILocation(line: 262, column: 27, scope: !3322)
!3325 = !DILocation(line: 262, column: 11, scope: !3315)
!3326 = !DILocation(line: 263, column: 7, scope: !3327)
!3327 = distinct !DILexicalBlock(scope: !3328, file: !3, line: 263, column: 7)
!3328 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 262, column: 59)
!3329 = !DILocation(line: 263, column: 16, scope: !3327)
!3330 = !DILocation(line: 263, column: 21, scope: !3327)
!3331 = !DILocation(line: 263, column: 54, scope: !3327)
!3332 = !DILocation(line: 264, column: 7, scope: !3327)
!3333 = !DILocation(line: 264, column: 16, scope: !3327)
!3334 = !DILocation(line: 264, column: 21, scope: !3327)
!3335 = !DILocation(line: 263, column: 7, scope: !3328)
!3336 = !DILocation(line: 266, column: 4, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 265, column: 3)
!3338 = !DILocation(line: 269, column: 4, scope: !3339)
!3339 = distinct !DILexicalBlock(scope: !3327, file: !3, line: 268, column: 8)
!3340 = !DILocation(line: 273, column: 3, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3322, file: !3, line: 272, column: 7)
!3342 = !DILocation(line: 275, column: 1, scope: !3308)
!3343 = distinct !DISubprogram(name: "get_activeSurface", scope: !3, file: !3, line: 278, type: !3344, scopeLine: 279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3344 = !DISubroutineType(types: !3345)
!3345 = !{!248, !3346}
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintCanvasSettings", file: !244, line: 156, baseType: !252)
!3348 = !DILocalVariable(name: "canvas", arg: 1, scope: !3343, file: !3, line: 278, type: !3346)
!3349 = !DILocation(line: 278, column: 68, scope: !3343)
!3350 = !DILocalVariable(name: "surface", scope: !3343, file: !3, line: 280, type: !242)
!3351 = !DILocation(line: 280, column: 23, scope: !3343)
!3352 = !DILocation(line: 280, column: 33, scope: !3343)
!3353 = !DILocation(line: 280, column: 41, scope: !3343)
!3354 = !DILocation(line: 280, column: 50, scope: !3343)
!3355 = !DILocalVariable(name: "i", scope: !3343, file: !3, line: 281, type: !135)
!3356 = !DILocation(line: 281, column: 6, scope: !3343)
!3357 = !DILocation(line: 283, column: 9, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3343, file: !3, line: 283, column: 2)
!3359 = !DILocation(line: 283, column: 7, scope: !3358)
!3360 = !DILocation(line: 283, column: 14, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3358, file: !3, line: 283, column: 2)
!3362 = !DILocation(line: 283, column: 2, scope: !3358)
!3363 = !DILocation(line: 284, column: 7, scope: !3364)
!3364 = distinct !DILexicalBlock(scope: !3365, file: !3, line: 284, column: 7)
!3365 = distinct !DILexicalBlock(scope: !3361, file: !3, line: 283, column: 48)
!3366 = !DILocation(line: 284, column: 12, scope: !3364)
!3367 = !DILocation(line: 284, column: 20, scope: !3364)
!3368 = !DILocation(line: 284, column: 9, scope: !3364)
!3369 = !DILocation(line: 284, column: 7, scope: !3365)
!3370 = !DILocation(line: 285, column: 11, scope: !3364)
!3371 = !DILocation(line: 285, column: 4, scope: !3364)
!3372 = !DILocation(line: 286, column: 4, scope: !3365)
!3373 = !DILocation(line: 287, column: 2, scope: !3365)
!3374 = !DILocation(line: 283, column: 33, scope: !3361)
!3375 = !DILocation(line: 283, column: 42, scope: !3361)
!3376 = !DILocation(line: 283, column: 31, scope: !3361)
!3377 = !DILocation(line: 283, column: 2, scope: !3361)
!3378 = distinct !{!3378, !3362, !3379}
!3379 = !DILocation(line: 287, column: 2, scope: !3358)
!3380 = !DILocation(line: 288, column: 2, scope: !3343)
!3381 = !DILocation(line: 289, column: 1, scope: !3343)
!3382 = distinct !DISubprogram(name: "dynamicPaint_resetPreview", scope: !3, file: !3, line: 292, type: !3383, scopeLine: 293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3346}
!3385 = !DILocalVariable(name: "canvas", arg: 1, scope: !3382, file: !3, line: 292, type: !3346)
!3386 = !DILocation(line: 292, column: 60, scope: !3382)
!3387 = !DILocalVariable(name: "surface", scope: !3382, file: !3, line: 294, type: !242)
!3388 = !DILocation(line: 294, column: 23, scope: !3382)
!3389 = !DILocation(line: 294, column: 33, scope: !3382)
!3390 = !DILocation(line: 294, column: 41, scope: !3382)
!3391 = !DILocation(line: 294, column: 50, scope: !3382)
!3392 = !DILocalVariable(name: "done", scope: !3382, file: !3, line: 295, type: !866)
!3393 = !DILocation(line: 295, column: 7, scope: !3382)
!3394 = !DILocation(line: 297, column: 2, scope: !3382)
!3395 = !DILocation(line: 297, column: 9, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3397, file: !3, line: 297, column: 2)
!3397 = distinct !DILexicalBlock(scope: !3382, file: !3, line: 297, column: 2)
!3398 = !DILocation(line: 297, column: 2, scope: !3397)
!3399 = !DILocation(line: 298, column: 8, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !3, line: 298, column: 7)
!3401 = distinct !DILexicalBlock(scope: !3396, file: !3, line: 297, column: 43)
!3402 = !DILocation(line: 298, column: 13, scope: !3400)
!3403 = !DILocation(line: 298, column: 52, scope: !3400)
!3404 = !DILocation(line: 298, column: 16, scope: !3400)
!3405 = !DILocation(line: 298, column: 7, scope: !3401)
!3406 = !DILocation(line: 299, column: 4, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 298, column: 62)
!3408 = !DILocation(line: 299, column: 13, scope: !3407)
!3409 = !DILocation(line: 299, column: 19, scope: !3407)
!3410 = !DILocation(line: 300, column: 9, scope: !3407)
!3411 = !DILocation(line: 301, column: 3, scope: !3407)
!3412 = !DILocation(line: 303, column: 4, scope: !3400)
!3413 = !DILocation(line: 303, column: 13, scope: !3400)
!3414 = !DILocation(line: 303, column: 19, scope: !3400)
!3415 = !DILocation(line: 304, column: 2, scope: !3401)
!3416 = !DILocation(line: 297, column: 28, scope: !3396)
!3417 = !DILocation(line: 297, column: 37, scope: !3396)
!3418 = !DILocation(line: 297, column: 26, scope: !3396)
!3419 = !DILocation(line: 297, column: 2, scope: !3396)
!3420 = distinct !{!3420, !3398, !3421}
!3421 = !DILocation(line: 304, column: 2, scope: !3397)
!3422 = !DILocation(line: 305, column: 1, scope: !3382)
!3423 = distinct !DISubprogram(name: "dynamicPaint_outputLayerExists", scope: !3, file: !3, line: 319, type: !3424, scopeLine: 320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!866, !248, !3426, !135}
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !152, line: 295, baseType: !415)
!3428 = !DILocalVariable(name: "surface", arg: 1, scope: !3423, file: !3, line: 319, type: !248)
!3429 = !DILocation(line: 319, column: 65, scope: !3423)
!3430 = !DILocalVariable(name: "ob", arg: 2, scope: !3423, file: !3, line: 319, type: !3426)
!3431 = !DILocation(line: 319, column: 82, scope: !3423)
!3432 = !DILocalVariable(name: "output", arg: 3, scope: !3423, file: !3, line: 319, type: !135)
!3433 = !DILocation(line: 319, column: 90, scope: !3423)
!3434 = !DILocalVariable(name: "name", scope: !3423, file: !3, line: 321, type: !1664)
!3435 = !DILocation(line: 321, column: 14, scope: !3423)
!3436 = !DILocation(line: 323, column: 6, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 323, column: 6)
!3438 = !DILocation(line: 323, column: 13, scope: !3437)
!3439 = !DILocation(line: 323, column: 6, scope: !3423)
!3440 = !DILocation(line: 324, column: 10, scope: !3437)
!3441 = !DILocation(line: 324, column: 19, scope: !3437)
!3442 = !DILocation(line: 324, column: 8, scope: !3437)
!3443 = !DILocation(line: 324, column: 3, scope: !3437)
!3444 = !DILocation(line: 325, column: 11, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 325, column: 11)
!3446 = !DILocation(line: 325, column: 18, scope: !3445)
!3447 = !DILocation(line: 325, column: 11, scope: !3437)
!3448 = !DILocation(line: 326, column: 10, scope: !3445)
!3449 = !DILocation(line: 326, column: 19, scope: !3445)
!3450 = !DILocation(line: 326, column: 8, scope: !3445)
!3451 = !DILocation(line: 326, column: 3, scope: !3445)
!3452 = !DILocation(line: 328, column: 3, scope: !3445)
!3453 = !DILocation(line: 330, column: 6, scope: !3454)
!3454 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 330, column: 6)
!3455 = !DILocation(line: 330, column: 15, scope: !3454)
!3456 = !DILocation(line: 330, column: 22, scope: !3454)
!3457 = !DILocation(line: 330, column: 6, scope: !3423)
!3458 = !DILocation(line: 331, column: 7, scope: !3459)
!3459 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 331, column: 7)
!3460 = distinct !DILexicalBlock(scope: !3454, file: !3, line: 330, column: 54)
!3461 = !DILocation(line: 331, column: 16, scope: !3459)
!3462 = !DILocation(line: 331, column: 21, scope: !3459)
!3463 = !DILocation(line: 331, column: 7, scope: !3460)
!3464 = !DILocalVariable(name: "me", scope: !3465, file: !3, line: 332, type: !3466)
!3465 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 331, column: 52)
!3466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3467, size: 64)
!3467 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !3468, line: 133, baseType: !3469)
!3468 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !3468, line: 58, size: 11008, elements: !3470)
!3470 = !{!3471, !3472, !3473, !3474, !3475, !3479, !3480, !3486, !3487, !3497, !3498, !3504, !3512, !3513, !3514, !3527, !3528, !3529, !3530, !3538, !3540, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3469, file: !3468, line: 59, baseType: !280, size: 960)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3469, file: !3468, line: 60, baseType: !345, size: 64, offset: 960)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3469, file: !3468, line: 62, baseType: !438, size: 64, offset: 1024)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3469, file: !3468, line: 64, baseType: !434, size: 64, offset: 1088)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3469, file: !3468, line: 65, baseType: !3476, size: 64, offset: 1152)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !3478, line: 45, flags: DIFlagFwdDecl)
!3478 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3469, file: !3468, line: 66, baseType: !519, size: 64, offset: 1216)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !3469, file: !3468, line: 67, baseType: !3481, size: 64, offset: 1280)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !2025, line: 154, size: 64, elements: !3483)
!3483 = !{!3484, !3485}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3482, file: !2025, line: 155, baseType: !135, size: 32)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3482, file: !2025, line: 156, baseType: !135, size: 32, offset: 32)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !3469, file: !3468, line: 71, baseType: !2082, size: 64, offset: 1344)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !3469, file: !3468, line: 72, baseType: !3488, size: 64, offset: 1408)
!3488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3489, size: 64)
!3489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !2025, line: 93, size: 128, elements: !3490)
!3490 = !{!3491, !3492, !3493, !3494, !3495, !3496}
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3489, file: !2025, line: 94, baseType: !768, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3489, file: !2025, line: 95, baseType: !271, size: 8, offset: 64)
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3489, file: !2025, line: 95, baseType: !271, size: 8, offset: 72)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3489, file: !2025, line: 96, baseType: !199, size: 16, offset: 80)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3489, file: !2025, line: 96, baseType: !199, size: 16, offset: 96)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3489, file: !2025, line: 96, baseType: !199, size: 16, offset: 112)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !3469, file: !3468, line: 73, baseType: !2073, size: 64, offset: 1472)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !3469, file: !3468, line: 74, baseType: !3499, size: 64, offset: 1536)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !2025, line: 109, size: 96, elements: !3501)
!3501 = !{!3502, !3503}
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3500, file: !2025, line: 110, baseType: !217, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3500, file: !2025, line: 111, baseType: !135, size: 32, offset: 64)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !3469, file: !3468, line: 75, baseType: !3505, size: 64, offset: 1600)
!3505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3506, size: 64)
!3506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !2025, line: 129, size: 32, elements: !3507)
!3507 = !{!3508, !3509, !3510, !3511}
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3506, file: !2025, line: 130, baseType: !271, size: 8)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3506, file: !2025, line: 130, baseType: !271, size: 8, offset: 8)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3506, file: !2025, line: 130, baseType: !271, size: 8, offset: 16)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3506, file: !2025, line: 130, baseType: !271, size: 8, offset: 24)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3469, file: !3468, line: 80, baseType: !2047, size: 64, offset: 1664)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3469, file: !3468, line: 81, baseType: !2270, size: 64, offset: 1728)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !3469, file: !3468, line: 82, baseType: !3515, size: 64, offset: 1792)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3516, size: 64)
!3516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !3468, line: 136, size: 512, elements: !3517)
!3517 = !{!3518, !3519, !3520, !3522, !3523, !3524, !3525, !3526}
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3516, file: !3468, line: 137, baseType: !221, size: 64)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3516, file: !3468, line: 138, baseType: !2274, size: 256, offset: 64)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3516, file: !3468, line: 139, baseType: !3521, size: 128, offset: 320)
!3521 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !639)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3516, file: !3468, line: 140, baseType: !271, size: 8, offset: 448)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3516, file: !3468, line: 140, baseType: !271, size: 8, offset: 456)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3516, file: !3468, line: 141, baseType: !199, size: 16, offset: 464)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3516, file: !3468, line: 141, baseType: !199, size: 16, offset: 480)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3516, file: !3468, line: 141, baseType: !199, size: 16, offset: 496)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3469, file: !3468, line: 83, baseType: !2023, size: 64, offset: 1856)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !3469, file: !3468, line: 84, baseType: !2035, size: 64, offset: 1920)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3469, file: !3468, line: 85, baseType: !2529, size: 64, offset: 1984)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3469, file: !3468, line: 89, baseType: !3531, size: 64, offset: 2048)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !2025, line: 74, size: 32, elements: !3533)
!3533 = !{!3534, !3535, !3536, !3537}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3532, file: !2025, line: 75, baseType: !271, size: 8)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3532, file: !2025, line: 75, baseType: !271, size: 8, offset: 8)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3532, file: !2025, line: 75, baseType: !271, size: 8, offset: 16)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3532, file: !2025, line: 75, baseType: !271, size: 8, offset: 24)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !3469, file: !3468, line: 90, baseType: !3539, size: 64, offset: 2112)
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !3469, file: !3468, line: 93, baseType: !3541, size: 64, offset: 2176)
!3541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3542, size: 64)
!3542 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3468, line: 93, flags: DIFlagFwdDecl)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3469, file: !3468, line: 95, baseType: !1938, size: 1600, offset: 2240)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3469, file: !3468, line: 95, baseType: !1938, size: 1600, offset: 3840)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3469, file: !3468, line: 95, baseType: !1938, size: 1600, offset: 5440)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3469, file: !3468, line: 98, baseType: !1938, size: 1600, offset: 7040)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3469, file: !3468, line: 98, baseType: !1938, size: 1600, offset: 8640)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3469, file: !3468, line: 101, baseType: !135, size: 32, offset: 10240)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3469, file: !3468, line: 101, baseType: !135, size: 32, offset: 10272)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3469, file: !3468, line: 101, baseType: !135, size: 32, offset: 10304)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !3469, file: !3468, line: 101, baseType: !135, size: 32, offset: 10336)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !3469, file: !3468, line: 104, baseType: !135, size: 32, offset: 10368)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3469, file: !3468, line: 104, baseType: !135, size: 32, offset: 10400)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3469, file: !3468, line: 111, baseType: !135, size: 32, offset: 10432)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3469, file: !3468, line: 114, baseType: !206, size: 96, offset: 10464)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3469, file: !3468, line: 115, baseType: !206, size: 96, offset: 10560)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3469, file: !3468, line: 116, baseType: !206, size: 96, offset: 10656)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3469, file: !3468, line: 118, baseType: !135, size: 32, offset: 10752)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3469, file: !3468, line: 119, baseType: !199, size: 16, offset: 10784)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3469, file: !3468, line: 119, baseType: !199, size: 16, offset: 10800)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !3469, file: !3468, line: 120, baseType: !207, size: 32, offset: 10816)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3469, file: !3468, line: 121, baseType: !135, size: 32, offset: 10848)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3469, file: !3468, line: 124, baseType: !271, size: 8, offset: 10880)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3469, file: !3468, line: 124, baseType: !271, size: 8, offset: 10888)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !3469, file: !3468, line: 126, baseType: !271, size: 8, offset: 10896)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !3469, file: !3468, line: 126, baseType: !271, size: 8, offset: 10904)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !3469, file: !3468, line: 127, baseType: !271, size: 8, offset: 10912)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3469, file: !3468, line: 128, baseType: !271, size: 8, offset: 10920)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3469, file: !3468, line: 130, baseType: !199, size: 16, offset: 10928)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !3469, file: !3468, line: 132, baseType: !3571, size: 64, offset: 10944)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !2025, line: 233, size: 3584, elements: !3573)
!3573 = !{!3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3588}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !3572, file: !2025, line: 234, baseType: !334, size: 128)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !3572, file: !2025, line: 235, baseType: !3190, size: 64, offset: 128)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 192)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 200)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 208)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 216)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 224)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !3572, file: !2025, line: 237, baseType: !866, size: 8, offset: 232)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !3572, file: !2025, line: 238, baseType: !866, size: 8, offset: 240)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3572, file: !2025, line: 238, baseType: !866, size: 8, offset: 248)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3572, file: !2025, line: 241, baseType: !1937, size: 1600, offset: 256)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3572, file: !2025, line: 242, baseType: !1937, size: 1600, offset: 1856)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !3572, file: !2025, line: 243, baseType: !3587, size: 64, offset: 3456)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !3572, file: !2025, line: 244, baseType: !1166, size: 64, offset: 3520)
!3589 = !DILocation(line: 332, column: 10, scope: !3465)
!3590 = !DILocation(line: 332, column: 15, scope: !3465)
!3591 = !DILocation(line: 332, column: 19, scope: !3465)
!3592 = !DILocation(line: 333, column: 46, scope: !3465)
!3593 = !DILocation(line: 333, column: 50, scope: !3465)
!3594 = !DILocation(line: 333, column: 66, scope: !3465)
!3595 = !DILocation(line: 333, column: 12, scope: !3465)
!3596 = !DILocation(line: 333, column: 72, scope: !3465)
!3597 = !DILocation(line: 333, column: 11, scope: !3465)
!3598 = !DILocation(line: 333, column: 4, scope: !3465)
!3599 = !DILocation(line: 335, column: 12, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3459, file: !3, line: 335, column: 12)
!3601 = !DILocation(line: 335, column: 21, scope: !3600)
!3602 = !DILocation(line: 335, column: 26, scope: !3600)
!3603 = !DILocation(line: 335, column: 12, scope: !3459)
!3604 = !DILocation(line: 336, column: 32, scope: !3600)
!3605 = !DILocation(line: 336, column: 36, scope: !3600)
!3606 = !DILocation(line: 336, column: 45, scope: !3600)
!3607 = !DILocation(line: 336, column: 12, scope: !3600)
!3608 = !DILocation(line: 336, column: 58, scope: !3600)
!3609 = !DILocation(line: 336, column: 11, scope: !3600)
!3610 = !DILocation(line: 336, column: 4, scope: !3600)
!3611 = !DILocation(line: 337, column: 2, scope: !3460)
!3612 = !DILocation(line: 339, column: 2, scope: !3423)
!3613 = !DILocation(line: 340, column: 1, scope: !3423)
!3614 = distinct !DISubprogram(name: "dynamicPaintSurface_setUniqueName", scope: !3, file: !3, line: 380, type: !3615, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3615 = !DISubroutineType(types: !3616)
!3616 = !{null, !242, !1664}
!3617 = !DILocalVariable(name: "surface", arg: 1, scope: !3614, file: !3, line: 380, type: !242)
!3618 = !DILocation(line: 380, column: 61, scope: !3614)
!3619 = !DILocalVariable(name: "basename", arg: 2, scope: !3614, file: !3, line: 380, type: !1664)
!3620 = !DILocation(line: 380, column: 82, scope: !3614)
!3621 = !DILocalVariable(name: "name", scope: !3614, file: !3, line: 382, type: !270)
!3622 = !DILocation(line: 382, column: 7, scope: !3614)
!3623 = !DILocation(line: 383, column: 14, scope: !3614)
!3624 = !DILocation(line: 383, column: 20, scope: !3614)
!3625 = !DILocation(line: 383, column: 2, scope: !3614)
!3626 = !DILocation(line: 384, column: 49, scope: !3614)
!3627 = !DILocation(line: 384, column: 58, scope: !3614)
!3628 = !DILocation(line: 384, column: 69, scope: !3614)
!3629 = !DILocation(line: 384, column: 78, scope: !3614)
!3630 = !DILocation(line: 384, column: 2, scope: !3614)
!3631 = !DILocation(line: 385, column: 1, scope: !3614)
!3632 = distinct !DISubprogram(name: "surface_duplicateNameExists", scope: !3, file: !3, line: 369, type: !3633, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!866, !221, !1664}
!3635 = !DILocalVariable(name: "arg", arg: 1, scope: !3632, file: !3, line: 369, type: !221)
!3636 = !DILocation(line: 369, column: 47, scope: !3632)
!3637 = !DILocalVariable(name: "name", arg: 2, scope: !3632, file: !3, line: 369, type: !1664)
!3638 = !DILocation(line: 369, column: 64, scope: !3632)
!3639 = !DILocalVariable(name: "t_surface", scope: !3632, file: !3, line: 371, type: !242)
!3640 = !DILocation(line: 371, column: 23, scope: !3632)
!3641 = !DILocation(line: 371, column: 58, scope: !3632)
!3642 = !DILocation(line: 371, column: 35, scope: !3632)
!3643 = !DILocalVariable(name: "surface", scope: !3632, file: !3, line: 372, type: !242)
!3644 = !DILocation(line: 372, column: 23, scope: !3632)
!3645 = !DILocation(line: 372, column: 33, scope: !3632)
!3646 = !DILocation(line: 372, column: 44, scope: !3632)
!3647 = !DILocation(line: 372, column: 52, scope: !3632)
!3648 = !DILocation(line: 372, column: 61, scope: !3632)
!3649 = !DILocation(line: 374, column: 2, scope: !3632)
!3650 = !DILocation(line: 374, column: 9, scope: !3651)
!3651 = distinct !DILexicalBlock(scope: !3652, file: !3, line: 374, column: 2)
!3652 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 374, column: 2)
!3653 = !DILocation(line: 374, column: 2, scope: !3652)
!3654 = !DILocation(line: 375, column: 7, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3656, file: !3, line: 375, column: 7)
!3656 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 374, column: 43)
!3657 = !DILocation(line: 375, column: 18, scope: !3655)
!3658 = !DILocation(line: 375, column: 15, scope: !3655)
!3659 = !DILocation(line: 375, column: 28, scope: !3655)
!3660 = !DILocation(line: 375, column: 39, scope: !3655)
!3661 = !DILocation(line: 375, column: 45, scope: !3655)
!3662 = !DILocation(line: 375, column: 54, scope: !3655)
!3663 = !DILocation(line: 375, column: 32, scope: !3655)
!3664 = !DILocation(line: 375, column: 7, scope: !3656)
!3665 = !DILocation(line: 375, column: 61, scope: !3655)
!3666 = !DILocation(line: 376, column: 2, scope: !3656)
!3667 = !DILocation(line: 374, column: 28, scope: !3651)
!3668 = !DILocation(line: 374, column: 37, scope: !3651)
!3669 = !DILocation(line: 374, column: 26, scope: !3651)
!3670 = !DILocation(line: 374, column: 2, scope: !3651)
!3671 = distinct !{!3671, !3653, !3672}
!3672 = !DILocation(line: 376, column: 2, scope: !3652)
!3673 = !DILocation(line: 377, column: 2, scope: !3632)
!3674 = !DILocation(line: 378, column: 1, scope: !3632)
!3675 = distinct !DISubprogram(name: "dynamicPaintSurface_updateType", scope: !3, file: !3, line: 389, type: !3676, scopeLine: 390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3676 = !DISubroutineType(types: !3677)
!3677 = !{null, !248}
!3678 = !DILocalVariable(name: "surface", arg: 1, scope: !3675, file: !3, line: 389, type: !248)
!3679 = !DILocation(line: 389, column: 65, scope: !3675)
!3680 = !DILocation(line: 391, column: 6, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 391, column: 6)
!3682 = !DILocation(line: 391, column: 15, scope: !3681)
!3683 = !DILocation(line: 391, column: 22, scope: !3681)
!3684 = !DILocation(line: 391, column: 6, scope: !3675)
!3685 = !DILocation(line: 392, column: 3, scope: !3686)
!3686 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 391, column: 56)
!3687 = !DILocation(line: 392, column: 12, scope: !3686)
!3688 = !DILocation(line: 392, column: 27, scope: !3686)
!3689 = !DILocation(line: 393, column: 3, scope: !3686)
!3690 = !DILocation(line: 393, column: 12, scope: !3686)
!3691 = !DILocation(line: 393, column: 28, scope: !3686)
!3692 = !DILocation(line: 394, column: 3, scope: !3686)
!3693 = !DILocation(line: 394, column: 12, scope: !3686)
!3694 = !DILocation(line: 394, column: 18, scope: !3686)
!3695 = !DILocation(line: 395, column: 3, scope: !3686)
!3696 = !DILocation(line: 395, column: 12, scope: !3686)
!3697 = !DILocation(line: 395, column: 24, scope: !3686)
!3698 = !DILocation(line: 396, column: 2, scope: !3686)
!3699 = !DILocation(line: 398, column: 10, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 397, column: 7)
!3701 = !DILocation(line: 398, column: 19, scope: !3700)
!3702 = !DILocation(line: 398, column: 3, scope: !3700)
!3703 = !DILocation(line: 399, column: 15, scope: !3700)
!3704 = !DILocation(line: 399, column: 24, scope: !3700)
!3705 = !DILocation(line: 399, column: 38, scope: !3700)
!3706 = !DILocation(line: 399, column: 47, scope: !3700)
!3707 = !DILocation(line: 399, column: 3, scope: !3700)
!3708 = !DILocation(line: 400, column: 3, scope: !3700)
!3709 = !DILocation(line: 400, column: 12, scope: !3700)
!3710 = !DILocation(line: 400, column: 18, scope: !3700)
!3711 = !DILocation(line: 401, column: 3, scope: !3700)
!3712 = !DILocation(line: 401, column: 12, scope: !3700)
!3713 = !DILocation(line: 401, column: 24, scope: !3700)
!3714 = !DILocation(line: 404, column: 6, scope: !3715)
!3715 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 404, column: 6)
!3716 = !DILocation(line: 404, column: 15, scope: !3715)
!3717 = !DILocation(line: 404, column: 20, scope: !3715)
!3718 = !DILocation(line: 404, column: 6, scope: !3675)
!3719 = !DILocation(line: 405, column: 10, scope: !3720)
!3720 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 404, column: 51)
!3721 = !DILocation(line: 405, column: 19, scope: !3720)
!3722 = !DILocation(line: 405, column: 3, scope: !3720)
!3723 = !DILocation(line: 406, column: 10, scope: !3720)
!3724 = !DILocation(line: 406, column: 19, scope: !3720)
!3725 = !DILocation(line: 406, column: 3, scope: !3720)
!3726 = !DILocation(line: 407, column: 31, scope: !3720)
!3727 = !DILocation(line: 407, column: 40, scope: !3720)
!3728 = !DILocation(line: 407, column: 49, scope: !3720)
!3729 = !DILocation(line: 407, column: 3, scope: !3720)
!3730 = !DILocation(line: 408, column: 2, scope: !3720)
!3731 = !DILocation(line: 409, column: 11, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3715, file: !3, line: 409, column: 11)
!3733 = !DILocation(line: 409, column: 20, scope: !3732)
!3734 = !DILocation(line: 409, column: 25, scope: !3732)
!3735 = !DILocation(line: 409, column: 11, scope: !3715)
!3736 = !DILocation(line: 410, column: 10, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 409, column: 59)
!3738 = !DILocation(line: 410, column: 19, scope: !3737)
!3739 = !DILocation(line: 410, column: 3, scope: !3737)
!3740 = !DILocation(line: 411, column: 2, scope: !3737)
!3741 = !DILocation(line: 412, column: 11, scope: !3742)
!3742 = distinct !DILexicalBlock(scope: !3732, file: !3, line: 412, column: 11)
!3743 = !DILocation(line: 412, column: 20, scope: !3742)
!3744 = !DILocation(line: 412, column: 25, scope: !3742)
!3745 = !DILocation(line: 412, column: 11, scope: !3732)
!3746 = !DILocation(line: 413, column: 10, scope: !3747)
!3747 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 412, column: 57)
!3748 = !DILocation(line: 413, column: 19, scope: !3747)
!3749 = !DILocation(line: 413, column: 3, scope: !3747)
!3750 = !DILocation(line: 414, column: 2, scope: !3747)
!3751 = !DILocation(line: 415, column: 11, scope: !3752)
!3752 = distinct !DILexicalBlock(scope: !3742, file: !3, line: 415, column: 11)
!3753 = !DILocation(line: 415, column: 20, scope: !3752)
!3754 = !DILocation(line: 415, column: 25, scope: !3752)
!3755 = !DILocation(line: 415, column: 11, scope: !3742)
!3756 = !DILocation(line: 416, column: 10, scope: !3757)
!3757 = distinct !DILexicalBlock(scope: !3752, file: !3, line: 415, column: 55)
!3758 = !DILocation(line: 416, column: 19, scope: !3757)
!3759 = !DILocation(line: 416, column: 3, scope: !3757)
!3760 = !DILocation(line: 417, column: 2, scope: !3757)
!3761 = !DILocation(line: 419, column: 30, scope: !3675)
!3762 = !DILocation(line: 419, column: 39, scope: !3675)
!3763 = !DILocation(line: 419, column: 48, scope: !3675)
!3764 = !DILocation(line: 419, column: 2, scope: !3675)
!3765 = !DILocation(line: 422, column: 42, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3675, file: !3, line: 422, column: 6)
!3767 = !DILocation(line: 422, column: 6, scope: !3766)
!3768 = !DILocation(line: 422, column: 6, scope: !3675)
!3769 = !DILocation(line: 423, column: 27, scope: !3766)
!3770 = !DILocation(line: 423, column: 3, scope: !3766)
!3771 = !DILocation(line: 425, column: 29, scope: !3766)
!3772 = !DILocation(line: 425, column: 38, scope: !3766)
!3773 = !DILocation(line: 425, column: 3, scope: !3766)
!3774 = !DILocation(line: 426, column: 1, scope: !3675)
!3775 = distinct !DISubprogram(name: "surface_setUniqueOutputName", scope: !3, file: !3, line: 358, type: !3776, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3776 = !DISubroutineType(types: !3777)
!3777 = !{null, !242, !1166, !135}
!3778 = !DILocalVariable(name: "surface", arg: 1, scope: !3775, file: !3, line: 358, type: !242)
!3779 = !DILocation(line: 358, column: 62, scope: !3775)
!3780 = !DILocalVariable(name: "basename", arg: 2, scope: !3775, file: !3, line: 358, type: !1166)
!3781 = !DILocation(line: 358, column: 77, scope: !3775)
!3782 = !DILocalVariable(name: "output", arg: 3, scope: !3775, file: !3, line: 358, type: !135)
!3783 = !DILocation(line: 358, column: 91, scope: !3775)
!3784 = !DILocalVariable(name: "name", scope: !3775, file: !3, line: 360, type: !270)
!3785 = !DILocation(line: 360, column: 7, scope: !3775)
!3786 = !DILocation(line: 361, column: 14, scope: !3775)
!3787 = !DILocation(line: 361, column: 20, scope: !3775)
!3788 = !DILocation(line: 361, column: 2, scope: !3775)
!3789 = !DILocation(line: 362, column: 7, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 362, column: 6)
!3791 = !DILocation(line: 362, column: 6, scope: !3775)
!3792 = !DILocation(line: 363, column: 52, scope: !3790)
!3793 = !DILocation(line: 363, column: 61, scope: !3790)
!3794 = !DILocation(line: 363, column: 72, scope: !3790)
!3795 = !DILocation(line: 363, column: 81, scope: !3790)
!3796 = !DILocation(line: 363, column: 3, scope: !3790)
!3797 = !DILocation(line: 364, column: 6, scope: !3798)
!3798 = distinct !DILexicalBlock(scope: !3775, file: !3, line: 364, column: 6)
!3799 = !DILocation(line: 364, column: 6, scope: !3775)
!3800 = !DILocation(line: 365, column: 52, scope: !3798)
!3801 = !DILocation(line: 365, column: 61, scope: !3798)
!3802 = !DILocation(line: 365, column: 72, scope: !3798)
!3803 = !DILocation(line: 365, column: 81, scope: !3798)
!3804 = !DILocation(line: 365, column: 3, scope: !3798)
!3805 = !DILocation(line: 366, column: 1, scope: !3775)
!3806 = distinct !DISubprogram(name: "dynamicPaint_setPreview", scope: !3, file: !3, line: 308, type: !3807, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3807 = !DISubroutineType(types: !3808)
!3808 = !{null, !242}
!3809 = !DILocalVariable(name: "t_surface", arg: 1, scope: !3806, file: !3, line: 308, type: !242)
!3810 = !DILocation(line: 308, column: 58, scope: !3806)
!3811 = !DILocalVariable(name: "surface", scope: !3806, file: !3, line: 310, type: !242)
!3812 = !DILocation(line: 310, column: 23, scope: !3806)
!3813 = !DILocation(line: 310, column: 33, scope: !3806)
!3814 = !DILocation(line: 310, column: 44, scope: !3806)
!3815 = !DILocation(line: 310, column: 52, scope: !3806)
!3816 = !DILocation(line: 310, column: 61, scope: !3806)
!3817 = !DILocation(line: 311, column: 2, scope: !3806)
!3818 = !DILocation(line: 311, column: 9, scope: !3819)
!3819 = distinct !DILexicalBlock(scope: !3820, file: !3, line: 311, column: 2)
!3820 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 311, column: 2)
!3821 = !DILocation(line: 311, column: 2, scope: !3820)
!3822 = !DILocation(line: 312, column: 7, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3824, file: !3, line: 312, column: 7)
!3824 = distinct !DILexicalBlock(scope: !3819, file: !3, line: 311, column: 43)
!3825 = !DILocation(line: 312, column: 18, scope: !3823)
!3826 = !DILocation(line: 312, column: 15, scope: !3823)
!3827 = !DILocation(line: 312, column: 7, scope: !3824)
!3828 = !DILocation(line: 313, column: 4, scope: !3823)
!3829 = !DILocation(line: 313, column: 13, scope: !3823)
!3830 = !DILocation(line: 313, column: 19, scope: !3823)
!3831 = !DILocation(line: 315, column: 4, scope: !3823)
!3832 = !DILocation(line: 315, column: 13, scope: !3823)
!3833 = !DILocation(line: 315, column: 19, scope: !3823)
!3834 = !DILocation(line: 316, column: 2, scope: !3824)
!3835 = !DILocation(line: 311, column: 28, scope: !3819)
!3836 = !DILocation(line: 311, column: 37, scope: !3819)
!3837 = !DILocation(line: 311, column: 26, scope: !3819)
!3838 = !DILocation(line: 311, column: 2, scope: !3819)
!3839 = distinct !{!3839, !3821, !3840}
!3840 = !DILocation(line: 316, column: 2, scope: !3820)
!3841 = !DILocation(line: 317, column: 1, scope: !3806)
!3842 = distinct !DISubprogram(name: "dynamicPaint_freeBrush", scope: !3, file: !3, line: 885, type: !3843, scopeLine: 886, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3843 = !DISubroutineType(types: !3844)
!3844 = !{null, !255}
!3845 = !DILocalVariable(name: "pmd", arg: 1, scope: !3842, file: !3, line: 885, type: !255)
!3846 = !DILocation(line: 885, column: 62, scope: !3842)
!3847 = !DILocation(line: 887, column: 6, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3842, file: !3, line: 887, column: 6)
!3849 = !DILocation(line: 887, column: 11, scope: !3848)
!3850 = !DILocation(line: 887, column: 6, scope: !3842)
!3851 = !DILocation(line: 888, column: 7, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 888, column: 7)
!3853 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 887, column: 18)
!3854 = !DILocation(line: 888, column: 12, scope: !3852)
!3855 = !DILocation(line: 888, column: 19, scope: !3852)
!3856 = !DILocation(line: 888, column: 7, scope: !3853)
!3857 = !DILocation(line: 889, column: 4, scope: !3852)
!3858 = !DILocation(line: 889, column: 9, scope: !3852)
!3859 = !DILocation(line: 889, column: 16, scope: !3852)
!3860 = !DILocation(line: 889, column: 20, scope: !3852)
!3861 = !DILocation(line: 889, column: 28, scope: !3852)
!3862 = !DILocation(line: 889, column: 33, scope: !3852)
!3863 = !DILocation(line: 889, column: 40, scope: !3852)
!3864 = !DILocation(line: 890, column: 3, scope: !3853)
!3865 = !DILocation(line: 890, column: 8, scope: !3853)
!3866 = !DILocation(line: 890, column: 15, scope: !3853)
!3867 = !DILocation(line: 890, column: 18, scope: !3853)
!3868 = !DILocation(line: 892, column: 7, scope: !3869)
!3869 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 892, column: 7)
!3870 = !DILocation(line: 892, column: 12, scope: !3869)
!3871 = !DILocation(line: 892, column: 19, scope: !3869)
!3872 = !DILocation(line: 892, column: 7, scope: !3853)
!3873 = !DILocation(line: 893, column: 4, scope: !3869)
!3874 = !DILocation(line: 893, column: 14, scope: !3869)
!3875 = !DILocation(line: 893, column: 19, scope: !3869)
!3876 = !DILocation(line: 893, column: 26, scope: !3869)
!3877 = !DILocation(line: 894, column: 3, scope: !3853)
!3878 = !DILocation(line: 894, column: 8, scope: !3853)
!3879 = !DILocation(line: 894, column: 15, scope: !3853)
!3880 = !DILocation(line: 894, column: 26, scope: !3853)
!3881 = !DILocation(line: 895, column: 7, scope: !3882)
!3882 = distinct !DILexicalBlock(scope: !3853, file: !3, line: 895, column: 7)
!3883 = !DILocation(line: 895, column: 12, scope: !3882)
!3884 = !DILocation(line: 895, column: 19, scope: !3882)
!3885 = !DILocation(line: 895, column: 7, scope: !3853)
!3886 = !DILocation(line: 896, column: 4, scope: !3882)
!3887 = !DILocation(line: 896, column: 14, scope: !3882)
!3888 = !DILocation(line: 896, column: 19, scope: !3882)
!3889 = !DILocation(line: 896, column: 26, scope: !3882)
!3890 = !DILocation(line: 897, column: 3, scope: !3853)
!3891 = !DILocation(line: 897, column: 8, scope: !3853)
!3892 = !DILocation(line: 897, column: 15, scope: !3853)
!3893 = !DILocation(line: 897, column: 24, scope: !3853)
!3894 = !DILocation(line: 899, column: 3, scope: !3853)
!3895 = !DILocation(line: 899, column: 13, scope: !3853)
!3896 = !DILocation(line: 899, column: 18, scope: !3853)
!3897 = !DILocation(line: 900, column: 3, scope: !3853)
!3898 = !DILocation(line: 900, column: 8, scope: !3853)
!3899 = !DILocation(line: 900, column: 14, scope: !3853)
!3900 = !DILocation(line: 901, column: 2, scope: !3853)
!3901 = !DILocation(line: 902, column: 1, scope: !3842)
!3902 = distinct !DISubprogram(name: "dynamicPaint_freeSurfaceData", scope: !3, file: !3, line: 948, type: !3807, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3903 = !DILocalVariable(name: "surface", arg: 1, scope: !3902, file: !3, line: 948, type: !242)
!3904 = !DILocation(line: 948, column: 56, scope: !3902)
!3905 = !DILocalVariable(name: "data", scope: !3902, file: !3, line: 950, type: !3906)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintSurfaceData", file: !224, line: 43, baseType: !3132)
!3908 = !DILocation(line: 950, column: 20, scope: !3902)
!3909 = !DILocation(line: 950, column: 27, scope: !3902)
!3910 = !DILocation(line: 950, column: 36, scope: !3902)
!3911 = !DILocation(line: 951, column: 7, scope: !3912)
!3912 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 951, column: 6)
!3913 = !DILocation(line: 951, column: 6, scope: !3902)
!3914 = !DILocation(line: 951, column: 13, scope: !3912)
!3915 = !DILocation(line: 952, column: 6, scope: !3916)
!3916 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 952, column: 6)
!3917 = !DILocation(line: 952, column: 12, scope: !3916)
!3918 = !DILocation(line: 952, column: 6, scope: !3902)
!3919 = !DILocation(line: 954, column: 7, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3921, file: !3, line: 954, column: 7)
!3921 = distinct !DILexicalBlock(scope: !3916, file: !3, line: 952, column: 25)
!3922 = !DILocation(line: 954, column: 16, scope: !3920)
!3923 = !DILocation(line: 954, column: 23, scope: !3920)
!3924 = !DILocation(line: 954, column: 7, scope: !3921)
!3925 = !DILocalVariable(name: "format_data", scope: !3926, file: !3, line: 955, type: !183)
!3926 = distinct !DILexicalBlock(scope: !3920, file: !3, line: 954, column: 57)
!3927 = !DILocation(line: 955, column: 22, scope: !3926)
!3928 = !DILocation(line: 955, column: 56, scope: !3926)
!3929 = !DILocation(line: 955, column: 62, scope: !3926)
!3930 = !DILocation(line: 955, column: 36, scope: !3926)
!3931 = !DILocation(line: 956, column: 8, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 956, column: 8)
!3933 = !DILocation(line: 956, column: 21, scope: !3932)
!3934 = !DILocation(line: 956, column: 8, scope: !3926)
!3935 = !DILocation(line: 957, column: 5, scope: !3932)
!3936 = !DILocation(line: 957, column: 15, scope: !3932)
!3937 = !DILocation(line: 957, column: 28, scope: !3932)
!3938 = !DILocation(line: 958, column: 8, scope: !3939)
!3939 = distinct !DILexicalBlock(scope: !3926, file: !3, line: 958, column: 8)
!3940 = !DILocation(line: 958, column: 21, scope: !3939)
!3941 = !DILocation(line: 958, column: 8, scope: !3926)
!3942 = !DILocation(line: 959, column: 5, scope: !3939)
!3943 = !DILocation(line: 959, column: 15, scope: !3939)
!3944 = !DILocation(line: 959, column: 28, scope: !3939)
!3945 = !DILocation(line: 960, column: 3, scope: !3926)
!3946 = !DILocation(line: 961, column: 3, scope: !3921)
!3947 = !DILocation(line: 961, column: 13, scope: !3921)
!3948 = !DILocation(line: 961, column: 19, scope: !3921)
!3949 = !DILocation(line: 962, column: 2, scope: !3921)
!3950 = !DILocation(line: 964, column: 6, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3902, file: !3, line: 964, column: 6)
!3952 = !DILocation(line: 964, column: 12, scope: !3951)
!3953 = !DILocation(line: 964, column: 6, scope: !3902)
!3954 = !DILocation(line: 964, column: 23, scope: !3951)
!3955 = !DILocation(line: 964, column: 33, scope: !3951)
!3956 = !DILocation(line: 964, column: 39, scope: !3951)
!3957 = !DILocation(line: 965, column: 27, scope: !3902)
!3958 = !DILocation(line: 965, column: 2, scope: !3902)
!3959 = !DILocation(line: 967, column: 16, scope: !3902)
!3960 = !DILocation(line: 967, column: 2, scope: !3902)
!3961 = !DILocation(line: 969, column: 2, scope: !3902)
!3962 = !DILocation(line: 969, column: 12, scope: !3902)
!3963 = !DILocation(line: 969, column: 21, scope: !3902)
!3964 = !DILocation(line: 970, column: 2, scope: !3902)
!3965 = !DILocation(line: 970, column: 11, scope: !3902)
!3966 = !DILocation(line: 970, column: 16, scope: !3902)
!3967 = !DILocation(line: 971, column: 1, scope: !3902)
!3968 = distinct !DISubprogram(name: "dynamicPaint_freeAdjData", scope: !3, file: !3, line: 904, type: !3969, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!3969 = !DISubroutineType(types: !3970)
!3970 = !{null, !3906}
!3971 = !DILocalVariable(name: "data", arg: 1, scope: !3968, file: !3, line: 904, type: !3906)
!3972 = !DILocation(line: 904, column: 56, scope: !3968)
!3973 = !DILocation(line: 906, column: 6, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 906, column: 6)
!3975 = !DILocation(line: 906, column: 12, scope: !3974)
!3976 = !DILocation(line: 906, column: 6, scope: !3968)
!3977 = !DILocation(line: 907, column: 7, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 907, column: 7)
!3979 = distinct !DILexicalBlock(scope: !3974, file: !3, line: 906, column: 22)
!3980 = !DILocation(line: 907, column: 13, scope: !3978)
!3981 = !DILocation(line: 907, column: 23, scope: !3978)
!3982 = !DILocation(line: 907, column: 7, scope: !3979)
!3983 = !DILocation(line: 907, column: 32, scope: !3978)
!3984 = !DILocation(line: 907, column: 42, scope: !3978)
!3985 = !DILocation(line: 907, column: 48, scope: !3978)
!3986 = !DILocation(line: 907, column: 58, scope: !3978)
!3987 = !DILocation(line: 908, column: 7, scope: !3988)
!3988 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 908, column: 7)
!3989 = !DILocation(line: 908, column: 13, scope: !3988)
!3990 = !DILocation(line: 908, column: 23, scope: !3988)
!3991 = !DILocation(line: 908, column: 7, scope: !3979)
!3992 = !DILocation(line: 908, column: 30, scope: !3988)
!3993 = !DILocation(line: 908, column: 40, scope: !3988)
!3994 = !DILocation(line: 908, column: 46, scope: !3988)
!3995 = !DILocation(line: 908, column: 56, scope: !3988)
!3996 = !DILocation(line: 909, column: 7, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 909, column: 7)
!3998 = !DILocation(line: 909, column: 13, scope: !3997)
!3999 = !DILocation(line: 909, column: 23, scope: !3997)
!4000 = !DILocation(line: 909, column: 7, scope: !3979)
!4001 = !DILocation(line: 909, column: 33, scope: !3997)
!4002 = !DILocation(line: 909, column: 43, scope: !3997)
!4003 = !DILocation(line: 909, column: 49, scope: !3997)
!4004 = !DILocation(line: 909, column: 59, scope: !3997)
!4005 = !DILocation(line: 910, column: 7, scope: !4006)
!4006 = distinct !DILexicalBlock(scope: !3979, file: !3, line: 910, column: 7)
!4007 = !DILocation(line: 910, column: 13, scope: !4006)
!4008 = !DILocation(line: 910, column: 23, scope: !4006)
!4009 = !DILocation(line: 910, column: 7, scope: !3979)
!4010 = !DILocation(line: 910, column: 30, scope: !4006)
!4011 = !DILocation(line: 910, column: 40, scope: !4006)
!4012 = !DILocation(line: 910, column: 46, scope: !4006)
!4013 = !DILocation(line: 910, column: 56, scope: !4006)
!4014 = !DILocation(line: 911, column: 3, scope: !3979)
!4015 = !DILocation(line: 911, column: 13, scope: !3979)
!4016 = !DILocation(line: 911, column: 19, scope: !3979)
!4017 = !DILocation(line: 912, column: 3, scope: !3979)
!4018 = !DILocation(line: 912, column: 9, scope: !3979)
!4019 = !DILocation(line: 912, column: 18, scope: !3979)
!4020 = !DILocation(line: 913, column: 2, scope: !3979)
!4021 = !DILocation(line: 914, column: 1, scope: !3968)
!4022 = distinct !DISubprogram(name: "free_bakeData", scope: !3, file: !3, line: 916, type: !3969, scopeLine: 917, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4023 = !DILocalVariable(name: "data", arg: 1, scope: !4022, file: !3, line: 916, type: !3906)
!4024 = !DILocation(line: 916, column: 45, scope: !4022)
!4025 = !DILocalVariable(name: "bData", scope: !4022, file: !3, line: 918, type: !4026)
!4026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4027, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintBakeData", file: !3, line: 202, baseType: !3147)
!4028 = !DILocation(line: 918, column: 17, scope: !4022)
!4029 = !DILocation(line: 918, column: 25, scope: !4022)
!4030 = !DILocation(line: 918, column: 31, scope: !4022)
!4031 = !DILocation(line: 919, column: 6, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4022, file: !3, line: 919, column: 6)
!4033 = !DILocation(line: 919, column: 6, scope: !4022)
!4034 = !DILocation(line: 920, column: 7, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 920, column: 7)
!4036 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 919, column: 13)
!4037 = !DILocation(line: 920, column: 14, scope: !4035)
!4038 = !DILocation(line: 920, column: 7, scope: !4036)
!4039 = !DILocation(line: 920, column: 23, scope: !4035)
!4040 = !DILocation(line: 920, column: 33, scope: !4035)
!4041 = !DILocation(line: 920, column: 40, scope: !4035)
!4042 = !DILocation(line: 921, column: 7, scope: !4043)
!4043 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 921, column: 7)
!4044 = !DILocation(line: 921, column: 14, scope: !4043)
!4045 = !DILocation(line: 921, column: 7, scope: !4036)
!4046 = !DILocation(line: 921, column: 21, scope: !4043)
!4047 = !DILocation(line: 921, column: 31, scope: !4043)
!4048 = !DILocation(line: 921, column: 38, scope: !4043)
!4049 = !DILocation(line: 922, column: 7, scope: !4050)
!4050 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 922, column: 7)
!4051 = !DILocation(line: 922, column: 14, scope: !4050)
!4052 = !DILocation(line: 922, column: 7, scope: !4036)
!4053 = !DILocation(line: 922, column: 21, scope: !4050)
!4054 = !DILocation(line: 922, column: 31, scope: !4050)
!4055 = !DILocation(line: 922, column: 38, scope: !4050)
!4056 = !DILocation(line: 923, column: 7, scope: !4057)
!4057 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 923, column: 7)
!4058 = !DILocation(line: 923, column: 14, scope: !4057)
!4059 = !DILocation(line: 923, column: 7, scope: !4036)
!4060 = !DILocation(line: 923, column: 25, scope: !4057)
!4061 = !DILocation(line: 923, column: 35, scope: !4057)
!4062 = !DILocation(line: 923, column: 42, scope: !4057)
!4063 = !DILocation(line: 924, column: 7, scope: !4064)
!4064 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 924, column: 7)
!4065 = !DILocation(line: 924, column: 14, scope: !4064)
!4066 = !DILocation(line: 924, column: 7, scope: !4036)
!4067 = !DILocation(line: 924, column: 23, scope: !4064)
!4068 = !DILocation(line: 924, column: 33, scope: !4064)
!4069 = !DILocation(line: 924, column: 40, scope: !4064)
!4070 = !DILocation(line: 925, column: 7, scope: !4071)
!4071 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 925, column: 7)
!4072 = !DILocation(line: 925, column: 14, scope: !4071)
!4073 = !DILocation(line: 925, column: 7, scope: !4036)
!4074 = !DILocation(line: 925, column: 29, scope: !4071)
!4075 = !DILocation(line: 925, column: 20, scope: !4071)
!4076 = !DILocation(line: 926, column: 7, scope: !4077)
!4077 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 926, column: 7)
!4078 = !DILocation(line: 926, column: 14, scope: !4077)
!4079 = !DILocation(line: 926, column: 7, scope: !4036)
!4080 = !DILocation(line: 926, column: 26, scope: !4077)
!4081 = !DILocation(line: 926, column: 36, scope: !4077)
!4082 = !DILocation(line: 926, column: 43, scope: !4077)
!4083 = !DILocation(line: 927, column: 7, scope: !4084)
!4084 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 927, column: 7)
!4085 = !DILocation(line: 927, column: 14, scope: !4084)
!4086 = !DILocation(line: 927, column: 7, scope: !4036)
!4087 = !DILocation(line: 927, column: 24, scope: !4084)
!4088 = !DILocation(line: 927, column: 34, scope: !4084)
!4089 = !DILocation(line: 927, column: 41, scope: !4084)
!4090 = !DILocation(line: 928, column: 7, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4036, file: !3, line: 928, column: 7)
!4092 = !DILocation(line: 928, column: 14, scope: !4091)
!4093 = !DILocation(line: 928, column: 7, scope: !4036)
!4094 = !DILocation(line: 928, column: 29, scope: !4091)
!4095 = !DILocation(line: 928, column: 39, scope: !4091)
!4096 = !DILocation(line: 928, column: 46, scope: !4091)
!4097 = !DILocation(line: 930, column: 3, scope: !4036)
!4098 = !DILocation(line: 930, column: 13, scope: !4036)
!4099 = !DILocation(line: 930, column: 19, scope: !4036)
!4100 = !DILocation(line: 931, column: 3, scope: !4036)
!4101 = !DILocation(line: 931, column: 9, scope: !4036)
!4102 = !DILocation(line: 931, column: 15, scope: !4036)
!4103 = !DILocation(line: 932, column: 2, scope: !4036)
!4104 = !DILocation(line: 933, column: 1, scope: !4022)
!4105 = distinct !DISubprogram(name: "dynamicPaint_freeSurface", scope: !3, file: !3, line: 973, type: !3807, scopeLine: 974, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4106 = !DILocalVariable(name: "surface", arg: 1, scope: !4105, file: !3, line: 973, type: !242)
!4107 = !DILocation(line: 973, column: 52, scope: !4105)
!4108 = !DILocation(line: 976, column: 26, scope: !4105)
!4109 = !DILocation(line: 976, column: 35, scope: !4105)
!4110 = !DILocation(line: 976, column: 2, scope: !4105)
!4111 = !DILocation(line: 977, column: 2, scope: !4105)
!4112 = !DILocation(line: 977, column: 11, scope: !4105)
!4113 = !DILocation(line: 977, column: 22, scope: !4105)
!4114 = !DILocation(line: 979, column: 6, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 979, column: 6)
!4116 = !DILocation(line: 979, column: 15, scope: !4115)
!4117 = !DILocation(line: 979, column: 6, scope: !4105)
!4118 = !DILocation(line: 980, column: 3, scope: !4115)
!4119 = !DILocation(line: 980, column: 13, scope: !4115)
!4120 = !DILocation(line: 980, column: 22, scope: !4115)
!4121 = !DILocation(line: 981, column: 2, scope: !4105)
!4122 = !DILocation(line: 981, column: 11, scope: !4105)
!4123 = !DILocation(line: 981, column: 28, scope: !4105)
!4124 = !DILocation(line: 983, column: 16, scope: !4105)
!4125 = !DILocation(line: 983, column: 25, scope: !4105)
!4126 = !DILocation(line: 983, column: 33, scope: !4105)
!4127 = !DILocation(line: 983, column: 44, scope: !4105)
!4128 = !DILocation(line: 983, column: 2, scope: !4105)
!4129 = !DILocation(line: 984, column: 31, scope: !4105)
!4130 = !DILocation(line: 984, column: 2, scope: !4105)
!4131 = !DILocation(line: 985, column: 2, scope: !4105)
!4132 = !DILocation(line: 985, column: 12, scope: !4105)
!4133 = !DILocation(line: 986, column: 1, scope: !4105)
!4134 = distinct !DISubprogram(name: "dynamicPaint_freeCanvas", scope: !3, file: !3, line: 989, type: !4135, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4135 = !DISubroutineType(types: !4136)
!4136 = !{null, !3242}
!4137 = !DILocalVariable(name: "pmd", arg: 1, scope: !4134, file: !3, line: 989, type: !3242)
!4138 = !DILocation(line: 989, column: 56, scope: !4134)
!4139 = !DILocation(line: 991, column: 6, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4134, file: !3, line: 991, column: 6)
!4141 = !DILocation(line: 991, column: 11, scope: !4140)
!4142 = !DILocation(line: 991, column: 6, scope: !4134)
!4143 = !DILocalVariable(name: "surface", scope: !4144, file: !3, line: 993, type: !242)
!4144 = distinct !DILexicalBlock(scope: !4140, file: !3, line: 991, column: 19)
!4145 = !DILocation(line: 993, column: 24, scope: !4144)
!4146 = !DILocation(line: 993, column: 34, scope: !4144)
!4147 = !DILocation(line: 993, column: 39, scope: !4144)
!4148 = !DILocation(line: 993, column: 47, scope: !4144)
!4149 = !DILocation(line: 993, column: 56, scope: !4144)
!4150 = !DILocalVariable(name: "next_surface", scope: !4144, file: !3, line: 994, type: !242)
!4151 = !DILocation(line: 994, column: 24, scope: !4144)
!4152 = !DILocation(line: 996, column: 3, scope: !4144)
!4153 = !DILocation(line: 996, column: 10, scope: !4144)
!4154 = !DILocation(line: 997, column: 19, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 996, column: 19)
!4156 = !DILocation(line: 997, column: 28, scope: !4155)
!4157 = !DILocation(line: 997, column: 17, scope: !4155)
!4158 = !DILocation(line: 998, column: 29, scope: !4155)
!4159 = !DILocation(line: 998, column: 4, scope: !4155)
!4160 = !DILocation(line: 999, column: 14, scope: !4155)
!4161 = !DILocation(line: 999, column: 12, scope: !4155)
!4162 = distinct !{!4162, !4152, !4163}
!4163 = !DILocation(line: 1000, column: 3, scope: !4144)
!4164 = !DILocation(line: 1003, column: 7, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 1003, column: 7)
!4166 = !DILocation(line: 1003, column: 12, scope: !4165)
!4167 = !DILocation(line: 1003, column: 20, scope: !4165)
!4168 = !DILocation(line: 1003, column: 7, scope: !4144)
!4169 = !DILocation(line: 1004, column: 4, scope: !4165)
!4170 = !DILocation(line: 1004, column: 9, scope: !4165)
!4171 = !DILocation(line: 1004, column: 17, scope: !4165)
!4172 = !DILocation(line: 1004, column: 21, scope: !4165)
!4173 = !DILocation(line: 1004, column: 29, scope: !4165)
!4174 = !DILocation(line: 1004, column: 34, scope: !4165)
!4175 = !DILocation(line: 1004, column: 42, scope: !4165)
!4176 = !DILocation(line: 1005, column: 3, scope: !4144)
!4177 = !DILocation(line: 1005, column: 8, scope: !4144)
!4178 = !DILocation(line: 1005, column: 16, scope: !4144)
!4179 = !DILocation(line: 1005, column: 19, scope: !4144)
!4180 = !DILocation(line: 1007, column: 3, scope: !4144)
!4181 = !DILocation(line: 1007, column: 13, scope: !4144)
!4182 = !DILocation(line: 1007, column: 18, scope: !4144)
!4183 = !DILocation(line: 1008, column: 3, scope: !4144)
!4184 = !DILocation(line: 1008, column: 8, scope: !4144)
!4185 = !DILocation(line: 1008, column: 15, scope: !4144)
!4186 = !DILocation(line: 1009, column: 2, scope: !4144)
!4187 = !DILocation(line: 1010, column: 1, scope: !4134)
!4188 = distinct !DISubprogram(name: "dynamicPaint_Modifier_free", scope: !3, file: !3, line: 1013, type: !3843, scopeLine: 1014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4189 = !DILocalVariable(name: "pmd", arg: 1, scope: !4188, file: !3, line: 1013, type: !255)
!4190 = !DILocation(line: 1013, column: 66, scope: !4188)
!4191 = !DILocation(line: 1015, column: 6, scope: !4192)
!4192 = distinct !DILexicalBlock(scope: !4188, file: !3, line: 1015, column: 6)
!4193 = !DILocation(line: 1015, column: 6, scope: !4188)
!4194 = !DILocation(line: 1016, column: 27, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 1015, column: 11)
!4196 = !DILocation(line: 1016, column: 3, scope: !4195)
!4197 = !DILocation(line: 1017, column: 26, scope: !4195)
!4198 = !DILocation(line: 1017, column: 3, scope: !4195)
!4199 = !DILocation(line: 1018, column: 2, scope: !4195)
!4200 = !DILocation(line: 1019, column: 1, scope: !4188)
!4201 = distinct !DISubprogram(name: "dynamicPaint_createNewSurface", scope: !3, file: !3, line: 1029, type: !4202, scopeLine: 1030, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!248, !3346, !4204}
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !277, line: 1299, baseType: !276)
!4206 = !DILocalVariable(name: "canvas", arg: 1, scope: !4201, file: !3, line: 1029, type: !3346)
!4207 = !DILocation(line: 1029, column: 80, scope: !4201)
!4208 = !DILocalVariable(name: "scene", arg: 2, scope: !4201, file: !3, line: 1029, type: !4204)
!4209 = !DILocation(line: 1029, column: 95, scope: !4201)
!4210 = !DILocalVariable(name: "surface", scope: !4201, file: !3, line: 1031, type: !242)
!4211 = !DILocation(line: 1031, column: 23, scope: !4201)
!4212 = !DILocation(line: 1031, column: 33, scope: !4201)
!4213 = !DILocation(line: 1032, column: 7, scope: !4214)
!4214 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 1032, column: 6)
!4215 = !DILocation(line: 1032, column: 6, scope: !4201)
!4216 = !DILocation(line: 1033, column: 3, scope: !4214)
!4217 = !DILocation(line: 1035, column: 20, scope: !4201)
!4218 = !DILocation(line: 1035, column: 2, scope: !4201)
!4219 = !DILocation(line: 1035, column: 11, scope: !4201)
!4220 = !DILocation(line: 1035, column: 18, scope: !4201)
!4221 = !DILocation(line: 1036, column: 2, scope: !4201)
!4222 = !DILocation(line: 1036, column: 11, scope: !4201)
!4223 = !DILocation(line: 1036, column: 18, scope: !4201)
!4224 = !DILocation(line: 1037, column: 2, scope: !4201)
!4225 = !DILocation(line: 1037, column: 11, scope: !4201)
!4226 = !DILocation(line: 1037, column: 16, scope: !4201)
!4227 = !DILocation(line: 1040, column: 42, scope: !4201)
!4228 = !DILocation(line: 1040, column: 51, scope: !4201)
!4229 = !DILocation(line: 1040, column: 24, scope: !4201)
!4230 = !DILocation(line: 1040, column: 2, scope: !4201)
!4231 = !DILocation(line: 1040, column: 11, scope: !4201)
!4232 = !DILocation(line: 1040, column: 22, scope: !4201)
!4233 = !DILocation(line: 1041, column: 2, scope: !4201)
!4234 = !DILocation(line: 1041, column: 11, scope: !4201)
!4235 = !DILocation(line: 1041, column: 23, scope: !4201)
!4236 = !DILocation(line: 1041, column: 28, scope: !4201)
!4237 = !DILocation(line: 1042, column: 2, scope: !4201)
!4238 = !DILocation(line: 1042, column: 11, scope: !4201)
!4239 = !DILocation(line: 1042, column: 23, scope: !4201)
!4240 = !DILocation(line: 1042, column: 28, scope: !4201)
!4241 = !DILocation(line: 1045, column: 2, scope: !4201)
!4242 = !DILocation(line: 1045, column: 11, scope: !4201)
!4243 = !DILocation(line: 1045, column: 17, scope: !4201)
!4244 = !DILocation(line: 1047, column: 2, scope: !4201)
!4245 = !DILocation(line: 1047, column: 11, scope: !4201)
!4246 = !DILocation(line: 1047, column: 18, scope: !4201)
!4247 = !DILocation(line: 1048, column: 2, scope: !4201)
!4248 = !DILocation(line: 1048, column: 11, scope: !4201)
!4249 = !DILocation(line: 1048, column: 21, scope: !4201)
!4250 = !DILocation(line: 1050, column: 2, scope: !4201)
!4251 = !DILocation(line: 1050, column: 11, scope: !4201)
!4252 = !DILocation(line: 1050, column: 22, scope: !4201)
!4253 = !DILocation(line: 1051, column: 2, scope: !4201)
!4254 = !DILocation(line: 1051, column: 11, scope: !4201)
!4255 = !DILocation(line: 1051, column: 21, scope: !4201)
!4256 = !DILocation(line: 1052, column: 2, scope: !4201)
!4257 = !DILocation(line: 1052, column: 11, scope: !4201)
!4258 = !DILocation(line: 1052, column: 31, scope: !4201)
!4259 = !DILocation(line: 1053, column: 2, scope: !4201)
!4260 = !DILocation(line: 1053, column: 11, scope: !4201)
!4261 = !DILocation(line: 1053, column: 23, scope: !4201)
!4262 = !DILocation(line: 1054, column: 2, scope: !4201)
!4263 = !DILocation(line: 1054, column: 11, scope: !4201)
!4264 = !DILocation(line: 1054, column: 23, scope: !4201)
!4265 = !DILocation(line: 1055, column: 2, scope: !4201)
!4266 = !DILocation(line: 1055, column: 11, scope: !4201)
!4267 = !DILocation(line: 1055, column: 21, scope: !4201)
!4268 = !DILocation(line: 1056, column: 2, scope: !4201)
!4269 = !DILocation(line: 1056, column: 11, scope: !4201)
!4270 = !DILocation(line: 1056, column: 28, scope: !4201)
!4271 = !DILocation(line: 1058, column: 2, scope: !4201)
!4272 = !DILocation(line: 1058, column: 11, scope: !4201)
!4273 = !DILocation(line: 1058, column: 27, scope: !4201)
!4274 = !DILocation(line: 1059, column: 2, scope: !4201)
!4275 = !DILocation(line: 1059, column: 11, scope: !4201)
!4276 = !DILocation(line: 1059, column: 24, scope: !4201)
!4277 = !DILocation(line: 1061, column: 2, scope: !4201)
!4278 = !DILocation(line: 1061, column: 11, scope: !4201)
!4279 = !DILocation(line: 1061, column: 25, scope: !4201)
!4280 = !DILocation(line: 1062, column: 2, scope: !4201)
!4281 = !DILocation(line: 1062, column: 11, scope: !4201)
!4282 = !DILocation(line: 1062, column: 25, scope: !4201)
!4283 = !DILocation(line: 1063, column: 2, scope: !4201)
!4284 = !DILocation(line: 1063, column: 11, scope: !4201)
!4285 = !DILocation(line: 1063, column: 25, scope: !4201)
!4286 = !DILocation(line: 1064, column: 2, scope: !4201)
!4287 = !DILocation(line: 1064, column: 11, scope: !4201)
!4288 = !DILocation(line: 1064, column: 25, scope: !4201)
!4289 = !DILocation(line: 1066, column: 2, scope: !4201)
!4290 = !DILocation(line: 1066, column: 11, scope: !4201)
!4291 = !DILocation(line: 1066, column: 28, scope: !4201)
!4292 = !DILocation(line: 1067, column: 2, scope: !4201)
!4293 = !DILocation(line: 1067, column: 11, scope: !4201)
!4294 = !DILocation(line: 1067, column: 20, scope: !4201)
!4295 = !DILocation(line: 1069, column: 6, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4201, file: !3, line: 1069, column: 6)
!4297 = !DILocation(line: 1069, column: 6, scope: !4201)
!4298 = !DILocation(line: 1070, column: 26, scope: !4299)
!4299 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1069, column: 13)
!4300 = !DILocation(line: 1070, column: 33, scope: !4299)
!4301 = !DILocation(line: 1070, column: 35, scope: !4299)
!4302 = !DILocation(line: 1070, column: 3, scope: !4299)
!4303 = !DILocation(line: 1070, column: 12, scope: !4299)
!4304 = !DILocation(line: 1070, column: 24, scope: !4299)
!4305 = !DILocation(line: 1071, column: 24, scope: !4299)
!4306 = !DILocation(line: 1071, column: 31, scope: !4299)
!4307 = !DILocation(line: 1071, column: 33, scope: !4299)
!4308 = !DILocation(line: 1071, column: 3, scope: !4299)
!4309 = !DILocation(line: 1071, column: 12, scope: !4299)
!4310 = !DILocation(line: 1071, column: 22, scope: !4299)
!4311 = !DILocation(line: 1072, column: 2, scope: !4299)
!4312 = !DILocation(line: 1074, column: 3, scope: !4313)
!4313 = distinct !DILexicalBlock(scope: !4296, file: !3, line: 1073, column: 7)
!4314 = !DILocation(line: 1074, column: 12, scope: !4313)
!4315 = !DILocation(line: 1074, column: 24, scope: !4313)
!4316 = !DILocation(line: 1075, column: 3, scope: !4313)
!4317 = !DILocation(line: 1075, column: 12, scope: !4313)
!4318 = !DILocation(line: 1075, column: 22, scope: !4313)
!4319 = !DILocation(line: 1078, column: 2, scope: !4201)
!4320 = !DILocation(line: 1078, column: 11, scope: !4201)
!4321 = !DILocation(line: 1078, column: 24, scope: !4201)
!4322 = !DILocation(line: 1079, column: 2, scope: !4201)
!4323 = !DILocation(line: 1079, column: 11, scope: !4201)
!4324 = !DILocation(line: 1079, column: 30, scope: !4201)
!4325 = !DILocation(line: 1080, column: 2, scope: !4201)
!4326 = !DILocation(line: 1080, column: 11, scope: !4201)
!4327 = !DILocation(line: 1080, column: 24, scope: !4201)
!4328 = !DILocation(line: 1082, column: 2, scope: !4201)
!4329 = !DILocation(line: 1082, column: 11, scope: !4201)
!4330 = !DILocation(line: 1082, column: 24, scope: !4201)
!4331 = !DILocation(line: 1083, column: 2, scope: !4201)
!4332 = !DILocation(line: 1083, column: 11, scope: !4201)
!4333 = !DILocation(line: 1083, column: 22, scope: !4201)
!4334 = !DILocation(line: 1084, column: 2, scope: !4201)
!4335 = !DILocation(line: 1084, column: 11, scope: !4201)
!4336 = !DILocation(line: 1084, column: 26, scope: !4201)
!4337 = !DILocation(line: 1085, column: 2, scope: !4201)
!4338 = !DILocation(line: 1085, column: 11, scope: !4201)
!4339 = !DILocation(line: 1085, column: 23, scope: !4201)
!4340 = !DILocation(line: 1086, column: 2, scope: !4201)
!4341 = !DILocation(line: 1086, column: 11, scope: !4201)
!4342 = !DILocation(line: 1086, column: 27, scope: !4201)
!4343 = !DILocation(line: 1088, column: 21, scope: !4201)
!4344 = !DILocation(line: 1088, column: 30, scope: !4201)
!4345 = !DILocation(line: 1088, column: 2, scope: !4201)
!4346 = !DILocation(line: 1091, column: 36, scope: !4201)
!4347 = !DILocation(line: 1091, column: 2, scope: !4201)
!4348 = !DILocation(line: 1093, column: 30, scope: !4201)
!4349 = !DILocation(line: 1093, column: 2, scope: !4201)
!4350 = !DILocation(line: 1093, column: 11, scope: !4201)
!4351 = !DILocation(line: 1093, column: 28, scope: !4201)
!4352 = !DILocation(line: 1095, column: 33, scope: !4201)
!4353 = !DILocation(line: 1095, column: 2, scope: !4201)
!4354 = !DILocation(line: 1097, column: 15, scope: !4201)
!4355 = !DILocation(line: 1097, column: 23, scope: !4201)
!4356 = !DILocation(line: 1097, column: 33, scope: !4201)
!4357 = !DILocation(line: 1097, column: 2, scope: !4201)
!4358 = !DILocation(line: 1099, column: 9, scope: !4201)
!4359 = !DILocation(line: 1099, column: 2, scope: !4201)
!4360 = !DILocation(line: 1100, column: 1, scope: !4201)
!4361 = distinct !DISubprogram(name: "dynamicPaint_createType", scope: !3, file: !3, line: 1105, type: !4362, scopeLine: 1106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4362 = !DISubroutineType(types: !4363)
!4363 = !{!866, !255, !135, !275}
!4364 = !DILocalVariable(name: "pmd", arg: 1, scope: !4361, file: !3, line: 1105, type: !255)
!4365 = !DILocation(line: 1105, column: 63, scope: !4361)
!4366 = !DILocalVariable(name: "type", arg: 2, scope: !4361, file: !3, line: 1105, type: !135)
!4367 = !DILocation(line: 1105, column: 72, scope: !4361)
!4368 = !DILocalVariable(name: "scene", arg: 3, scope: !4361, file: !3, line: 1105, type: !275)
!4369 = !DILocation(line: 1105, column: 92, scope: !4361)
!4370 = !DILocation(line: 1107, column: 6, scope: !4371)
!4371 = distinct !DILexicalBlock(scope: !4361, file: !3, line: 1107, column: 6)
!4372 = !DILocation(line: 1107, column: 6, scope: !4361)
!4373 = !DILocation(line: 1108, column: 7, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 1108, column: 7)
!4375 = distinct !DILexicalBlock(scope: !4371, file: !3, line: 1107, column: 11)
!4376 = !DILocation(line: 1108, column: 12, scope: !4374)
!4377 = !DILocation(line: 1108, column: 7, scope: !4375)
!4378 = !DILocalVariable(name: "canvas", scope: !4379, file: !3, line: 1109, type: !3346)
!4379 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 1108, column: 45)
!4380 = !DILocation(line: 1109, column: 32, scope: !4379)
!4381 = !DILocation(line: 1110, column: 8, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1110, column: 8)
!4383 = !DILocation(line: 1110, column: 13, scope: !4382)
!4384 = !DILocation(line: 1110, column: 8, scope: !4379)
!4385 = !DILocation(line: 1111, column: 29, scope: !4382)
!4386 = !DILocation(line: 1111, column: 5, scope: !4382)
!4387 = !DILocation(line: 1113, column: 27, scope: !4379)
!4388 = !DILocation(line: 1113, column: 13, scope: !4379)
!4389 = !DILocation(line: 1113, column: 18, scope: !4379)
!4390 = !DILocation(line: 1113, column: 25, scope: !4379)
!4391 = !DILocation(line: 1113, column: 11, scope: !4379)
!4392 = !DILocation(line: 1114, column: 9, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1114, column: 8)
!4394 = !DILocation(line: 1114, column: 8, scope: !4379)
!4395 = !DILocation(line: 1115, column: 5, scope: !4393)
!4396 = !DILocation(line: 1116, column: 18, scope: !4379)
!4397 = !DILocation(line: 1116, column: 4, scope: !4379)
!4398 = !DILocation(line: 1116, column: 12, scope: !4379)
!4399 = !DILocation(line: 1116, column: 16, scope: !4379)
!4400 = !DILocation(line: 1117, column: 4, scope: !4379)
!4401 = !DILocation(line: 1117, column: 12, scope: !4379)
!4402 = !DILocation(line: 1117, column: 15, scope: !4379)
!4403 = !DILocation(line: 1120, column: 39, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 1120, column: 8)
!4405 = !DILocation(line: 1120, column: 47, scope: !4404)
!4406 = !DILocation(line: 1120, column: 9, scope: !4404)
!4407 = !DILocation(line: 1120, column: 8, scope: !4379)
!4408 = !DILocation(line: 1121, column: 5, scope: !4404)
!4409 = !DILocation(line: 1123, column: 3, scope: !4379)
!4410 = !DILocation(line: 1124, column: 12, scope: !4411)
!4411 = distinct !DILexicalBlock(scope: !4374, file: !3, line: 1124, column: 12)
!4412 = !DILocation(line: 1124, column: 17, scope: !4411)
!4413 = !DILocation(line: 1124, column: 12, scope: !4374)
!4414 = !DILocalVariable(name: "brush", scope: !4415, file: !3, line: 1125, type: !4416)
!4415 = distinct !DILexicalBlock(scope: !4411, file: !3, line: 1124, column: 49)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynamicPaintBrushSettings", file: !244, line: 229, baseType: !3096)
!4418 = !DILocation(line: 1125, column: 31, scope: !4415)
!4419 = !DILocation(line: 1126, column: 8, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1126, column: 8)
!4421 = !DILocation(line: 1126, column: 13, scope: !4420)
!4422 = !DILocation(line: 1126, column: 8, scope: !4415)
!4423 = !DILocation(line: 1127, column: 28, scope: !4420)
!4424 = !DILocation(line: 1127, column: 5, scope: !4420)
!4425 = !DILocation(line: 1129, column: 25, scope: !4415)
!4426 = !DILocation(line: 1129, column: 12, scope: !4415)
!4427 = !DILocation(line: 1129, column: 17, scope: !4415)
!4428 = !DILocation(line: 1129, column: 23, scope: !4415)
!4429 = !DILocation(line: 1129, column: 10, scope: !4415)
!4430 = !DILocation(line: 1130, column: 9, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1130, column: 8)
!4432 = !DILocation(line: 1130, column: 8, scope: !4415)
!4433 = !DILocation(line: 1131, column: 5, scope: !4431)
!4434 = !DILocation(line: 1132, column: 17, scope: !4415)
!4435 = !DILocation(line: 1132, column: 4, scope: !4415)
!4436 = !DILocation(line: 1132, column: 11, scope: !4415)
!4437 = !DILocation(line: 1132, column: 15, scope: !4415)
!4438 = !DILocation(line: 1134, column: 4, scope: !4415)
!4439 = !DILocation(line: 1134, column: 11, scope: !4415)
!4440 = !DILocation(line: 1134, column: 16, scope: !4415)
!4441 = !DILocation(line: 1136, column: 4, scope: !4415)
!4442 = !DILocation(line: 1136, column: 11, scope: !4415)
!4443 = !DILocation(line: 1136, column: 17, scope: !4415)
!4444 = !DILocation(line: 1137, column: 4, scope: !4415)
!4445 = !DILocation(line: 1137, column: 11, scope: !4415)
!4446 = !DILocation(line: 1137, column: 21, scope: !4415)
!4447 = !DILocation(line: 1139, column: 4, scope: !4415)
!4448 = !DILocation(line: 1139, column: 11, scope: !4415)
!4449 = !DILocation(line: 1139, column: 15, scope: !4415)
!4450 = !DILocation(line: 1140, column: 4, scope: !4415)
!4451 = !DILocation(line: 1140, column: 11, scope: !4415)
!4452 = !DILocation(line: 1140, column: 13, scope: !4415)
!4453 = !DILocation(line: 1141, column: 4, scope: !4415)
!4454 = !DILocation(line: 1141, column: 11, scope: !4415)
!4455 = !DILocation(line: 1141, column: 13, scope: !4415)
!4456 = !DILocation(line: 1142, column: 4, scope: !4415)
!4457 = !DILocation(line: 1142, column: 11, scope: !4415)
!4458 = !DILocation(line: 1142, column: 13, scope: !4415)
!4459 = !DILocation(line: 1143, column: 4, scope: !4415)
!4460 = !DILocation(line: 1143, column: 11, scope: !4415)
!4461 = !DILocation(line: 1143, column: 17, scope: !4415)
!4462 = !DILocation(line: 1144, column: 4, scope: !4415)
!4463 = !DILocation(line: 1144, column: 11, scope: !4415)
!4464 = !DILocation(line: 1144, column: 19, scope: !4415)
!4465 = !DILocation(line: 1146, column: 4, scope: !4415)
!4466 = !DILocation(line: 1146, column: 11, scope: !4415)
!4467 = !DILocation(line: 1146, column: 26, scope: !4415)
!4468 = !DILocation(line: 1147, column: 4, scope: !4415)
!4469 = !DILocation(line: 1147, column: 11, scope: !4415)
!4470 = !DILocation(line: 1147, column: 29, scope: !4415)
!4471 = !DILocation(line: 1149, column: 4, scope: !4415)
!4472 = !DILocation(line: 1149, column: 11, scope: !4415)
!4473 = !DILocation(line: 1149, column: 27, scope: !4415)
!4474 = !DILocation(line: 1150, column: 4, scope: !4415)
!4475 = !DILocation(line: 1150, column: 11, scope: !4415)
!4476 = !DILocation(line: 1150, column: 27, scope: !4415)
!4477 = !DILocation(line: 1152, column: 4, scope: !4415)
!4478 = !DILocation(line: 1152, column: 11, scope: !4415)
!4479 = !DILocation(line: 1152, column: 21, scope: !4415)
!4480 = !DILocation(line: 1153, column: 4, scope: !4415)
!4481 = !DILocation(line: 1153, column: 11, scope: !4415)
!4482 = !DILocation(line: 1153, column: 23, scope: !4415)
!4483 = !DILocation(line: 1154, column: 4, scope: !4415)
!4484 = !DILocation(line: 1154, column: 11, scope: !4415)
!4485 = !DILocation(line: 1154, column: 22, scope: !4415)
!4486 = !DILocation(line: 1155, column: 4, scope: !4415)
!4487 = !DILocation(line: 1155, column: 11, scope: !4415)
!4488 = !DILocation(line: 1155, column: 27, scope: !4415)
!4489 = !DILocation(line: 1156, column: 4, scope: !4415)
!4490 = !DILocation(line: 1156, column: 11, scope: !4415)
!4491 = !DILocation(line: 1156, column: 24, scope: !4415)
!4492 = !DILocation(line: 1158, column: 4, scope: !4415)
!4493 = !DILocation(line: 1158, column: 11, scope: !4415)
!4494 = !DILocation(line: 1158, column: 14, scope: !4415)
!4495 = !DILocalVariable(name: "ramp", scope: !4496, file: !3, line: 1162, type: !4497)
!4496 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1161, column: 4)
!4497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!4498 = !DILocation(line: 1162, column: 13, scope: !4496)
!4499 = !DILocation(line: 1164, column: 25, scope: !4496)
!4500 = !DILocation(line: 1164, column: 5, scope: !4496)
!4501 = !DILocation(line: 1164, column: 12, scope: !4496)
!4502 = !DILocation(line: 1164, column: 23, scope: !4496)
!4503 = !DILocation(line: 1165, column: 10, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4496, file: !3, line: 1165, column: 9)
!4505 = !DILocation(line: 1165, column: 17, scope: !4504)
!4506 = !DILocation(line: 1165, column: 9, scope: !4496)
!4507 = !DILocation(line: 1166, column: 6, scope: !4504)
!4508 = !DILocation(line: 1167, column: 12, scope: !4496)
!4509 = !DILocation(line: 1167, column: 19, scope: !4496)
!4510 = !DILocation(line: 1167, column: 31, scope: !4496)
!4511 = !DILocation(line: 1167, column: 10, scope: !4496)
!4512 = !DILocation(line: 1169, column: 41, scope: !4496)
!4513 = !DILocation(line: 1169, column: 49, scope: !4496)
!4514 = !DILocation(line: 1169, column: 51, scope: !4496)
!4515 = !DILocation(line: 1169, column: 29, scope: !4496)
!4516 = !DILocation(line: 1169, column: 37, scope: !4496)
!4517 = !DILocation(line: 1169, column: 39, scope: !4496)
!4518 = !DILocation(line: 1169, column: 17, scope: !4496)
!4519 = !DILocation(line: 1169, column: 25, scope: !4496)
!4520 = !DILocation(line: 1169, column: 27, scope: !4496)
!4521 = !DILocation(line: 1169, column: 5, scope: !4496)
!4522 = !DILocation(line: 1169, column: 13, scope: !4496)
!4523 = !DILocation(line: 1169, column: 15, scope: !4496)
!4524 = !DILocation(line: 1170, column: 5, scope: !4496)
!4525 = !DILocation(line: 1170, column: 13, scope: !4496)
!4526 = !DILocation(line: 1170, column: 17, scope: !4496)
!4527 = !DILocation(line: 1171, column: 41, scope: !4496)
!4528 = !DILocation(line: 1171, column: 49, scope: !4496)
!4529 = !DILocation(line: 1171, column: 53, scope: !4496)
!4530 = !DILocation(line: 1171, column: 29, scope: !4496)
!4531 = !DILocation(line: 1171, column: 37, scope: !4496)
!4532 = !DILocation(line: 1171, column: 39, scope: !4496)
!4533 = !DILocation(line: 1171, column: 17, scope: !4496)
!4534 = !DILocation(line: 1171, column: 25, scope: !4496)
!4535 = !DILocation(line: 1171, column: 27, scope: !4496)
!4536 = !DILocation(line: 1171, column: 5, scope: !4496)
!4537 = !DILocation(line: 1171, column: 13, scope: !4496)
!4538 = !DILocation(line: 1171, column: 15, scope: !4496)
!4539 = !DILocation(line: 1172, column: 5, scope: !4496)
!4540 = !DILocation(line: 1172, column: 13, scope: !4496)
!4541 = !DILocation(line: 1172, column: 15, scope: !4496)
!4542 = !DILocation(line: 1173, column: 5, scope: !4496)
!4543 = !DILocation(line: 1173, column: 10, scope: !4496)
!4544 = !DILocation(line: 1173, column: 17, scope: !4496)
!4545 = !DILocation(line: 1173, column: 29, scope: !4496)
!4546 = !DILocation(line: 1173, column: 33, scope: !4496)
!4547 = !DILocalVariable(name: "ramp", scope: !4548, file: !3, line: 1178, type: !4497)
!4548 = distinct !DILexicalBlock(scope: !4415, file: !3, line: 1177, column: 4)
!4549 = !DILocation(line: 1178, column: 13, scope: !4548)
!4550 = !DILocation(line: 1180, column: 23, scope: !4548)
!4551 = !DILocation(line: 1180, column: 5, scope: !4548)
!4552 = !DILocation(line: 1180, column: 12, scope: !4548)
!4553 = !DILocation(line: 1180, column: 21, scope: !4548)
!4554 = !DILocation(line: 1181, column: 10, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4548, file: !3, line: 1181, column: 9)
!4556 = !DILocation(line: 1181, column: 17, scope: !4555)
!4557 = !DILocation(line: 1181, column: 9, scope: !4548)
!4558 = !DILocation(line: 1182, column: 6, scope: !4555)
!4559 = !DILocation(line: 1183, column: 12, scope: !4548)
!4560 = !DILocation(line: 1183, column: 19, scope: !4548)
!4561 = !DILocation(line: 1183, column: 29, scope: !4548)
!4562 = !DILocation(line: 1183, column: 10, scope: !4548)
!4563 = !DILocation(line: 1184, column: 53, scope: !4548)
!4564 = !DILocation(line: 1184, column: 61, scope: !4548)
!4565 = !DILocation(line: 1184, column: 65, scope: !4548)
!4566 = !DILocation(line: 1184, column: 41, scope: !4548)
!4567 = !DILocation(line: 1184, column: 49, scope: !4548)
!4568 = !DILocation(line: 1184, column: 51, scope: !4548)
!4569 = !DILocation(line: 1184, column: 29, scope: !4548)
!4570 = !DILocation(line: 1184, column: 37, scope: !4548)
!4571 = !DILocation(line: 1184, column: 39, scope: !4548)
!4572 = !DILocation(line: 1184, column: 17, scope: !4548)
!4573 = !DILocation(line: 1184, column: 25, scope: !4548)
!4574 = !DILocation(line: 1184, column: 27, scope: !4548)
!4575 = !DILocation(line: 1184, column: 5, scope: !4548)
!4576 = !DILocation(line: 1184, column: 13, scope: !4548)
!4577 = !DILocation(line: 1184, column: 15, scope: !4548)
!4578 = !DILocation(line: 1185, column: 53, scope: !4548)
!4579 = !DILocation(line: 1185, column: 61, scope: !4548)
!4580 = !DILocation(line: 1185, column: 65, scope: !4548)
!4581 = !DILocation(line: 1185, column: 41, scope: !4548)
!4582 = !DILocation(line: 1185, column: 49, scope: !4548)
!4583 = !DILocation(line: 1185, column: 51, scope: !4548)
!4584 = !DILocation(line: 1185, column: 29, scope: !4548)
!4585 = !DILocation(line: 1185, column: 37, scope: !4548)
!4586 = !DILocation(line: 1185, column: 39, scope: !4548)
!4587 = !DILocation(line: 1185, column: 17, scope: !4548)
!4588 = !DILocation(line: 1185, column: 25, scope: !4548)
!4589 = !DILocation(line: 1185, column: 27, scope: !4548)
!4590 = !DILocation(line: 1185, column: 5, scope: !4548)
!4591 = !DILocation(line: 1185, column: 13, scope: !4548)
!4592 = !DILocation(line: 1185, column: 15, scope: !4548)
!4593 = !DILocation(line: 1186, column: 5, scope: !4548)
!4594 = !DILocation(line: 1186, column: 12, scope: !4548)
!4595 = !DILocation(line: 1186, column: 24, scope: !4548)
!4596 = !DILocation(line: 1186, column: 28, scope: !4548)
!4597 = !DILocation(line: 1188, column: 3, scope: !4415)
!4598 = !DILocation(line: 1189, column: 2, scope: !4375)
!4599 = !DILocation(line: 1191, column: 3, scope: !4371)
!4600 = !DILocation(line: 1193, column: 2, scope: !4361)
!4601 = !DILocation(line: 1194, column: 1, scope: !4361)
!4602 = distinct !DISubprogram(name: "dynamicPaint_Modifier_copy", scope: !3, file: !3, line: 1196, type: !4603, scopeLine: 1197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!4603 = !DISubroutineType(types: !4604)
!4604 = !{null, !255, !255}
!4605 = !DILocalVariable(name: "pmd", arg: 1, scope: !4602, file: !3, line: 1196, type: !255)
!4606 = !DILocation(line: 1196, column: 66, scope: !4602)
!4607 = !DILocalVariable(name: "tpmd", arg: 2, scope: !4602, file: !3, line: 1196, type: !255)
!4608 = !DILocation(line: 1196, column: 104, scope: !4602)
!4609 = !DILocation(line: 1199, column: 15, scope: !4602)
!4610 = !DILocation(line: 1199, column: 20, scope: !4602)
!4611 = !DILocation(line: 1199, column: 2, scope: !4602)
!4612 = !DILocation(line: 1199, column: 8, scope: !4602)
!4613 = !DILocation(line: 1199, column: 13, scope: !4602)
!4614 = !DILocation(line: 1200, column: 6, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1200, column: 6)
!4616 = !DILocation(line: 1200, column: 11, scope: !4615)
!4617 = !DILocation(line: 1200, column: 6, scope: !4602)
!4618 = !DILocation(line: 1201, column: 27, scope: !4615)
!4619 = !DILocation(line: 1201, column: 3, scope: !4615)
!4620 = !DILocation(line: 1202, column: 6, scope: !4621)
!4621 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1202, column: 6)
!4622 = !DILocation(line: 1202, column: 11, scope: !4621)
!4623 = !DILocation(line: 1202, column: 6, scope: !4602)
!4624 = !DILocation(line: 1203, column: 27, scope: !4621)
!4625 = !DILocation(line: 1203, column: 3, scope: !4621)
!4626 = !DILocation(line: 1206, column: 6, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4602, file: !3, line: 1206, column: 6)
!4628 = !DILocation(line: 1206, column: 12, scope: !4627)
!4629 = !DILocation(line: 1206, column: 6, scope: !4602)
!4630 = !DILocalVariable(name: "surface", scope: !4631, file: !3, line: 1207, type: !242)
!4631 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 1206, column: 20)
!4632 = !DILocation(line: 1207, column: 24, scope: !4631)
!4633 = !DILocation(line: 1208, column: 23, scope: !4631)
!4634 = !DILocation(line: 1208, column: 3, scope: !4631)
!4635 = !DILocation(line: 1208, column: 9, scope: !4631)
!4636 = !DILocation(line: 1208, column: 17, scope: !4631)
!4637 = !DILocation(line: 1208, column: 21, scope: !4631)
!4638 = !DILocation(line: 1210, column: 7, scope: !4639)
!4639 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 1210, column: 7)
!4640 = !DILocation(line: 1210, column: 13, scope: !4639)
!4641 = !DILocation(line: 1210, column: 21, scope: !4639)
!4642 = !DILocation(line: 1210, column: 30, scope: !4639)
!4643 = !DILocation(line: 1210, column: 7, scope: !4631)
!4644 = !DILocation(line: 1211, column: 29, scope: !4639)
!4645 = !DILocation(line: 1211, column: 35, scope: !4639)
!4646 = !DILocation(line: 1211, column: 43, scope: !4639)
!4647 = !DILocation(line: 1211, column: 52, scope: !4639)
!4648 = !DILocation(line: 1211, column: 4, scope: !4639)
!4649 = !DILocation(line: 1214, column: 18, scope: !4650)
!4650 = distinct !DILexicalBlock(scope: !4631, file: !3, line: 1214, column: 3)
!4651 = !DILocation(line: 1214, column: 23, scope: !4650)
!4652 = !DILocation(line: 1214, column: 31, scope: !4650)
!4653 = !DILocation(line: 1214, column: 40, scope: !4650)
!4654 = !DILocation(line: 1214, column: 16, scope: !4650)
!4655 = !DILocation(line: 1214, column: 8, scope: !4650)
!4656 = !DILocation(line: 1214, column: 47, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4650, file: !3, line: 1214, column: 3)
!4658 = !DILocation(line: 1214, column: 3, scope: !4650)
!4659 = !DILocalVariable(name: "t_surface", scope: !4660, file: !3, line: 1215, type: !242)
!4660 = distinct !DILexicalBlock(scope: !4657, file: !3, line: 1214, column: 81)
!4661 = !DILocation(line: 1215, column: 25, scope: !4660)
!4662 = !DILocation(line: 1215, column: 67, scope: !4660)
!4663 = !DILocation(line: 1215, column: 73, scope: !4660)
!4664 = !DILocation(line: 1215, column: 37, scope: !4660)
!4665 = !DILocation(line: 1218, column: 29, scope: !4660)
!4666 = !DILocation(line: 1218, column: 38, scope: !4660)
!4667 = !DILocation(line: 1218, column: 4, scope: !4660)
!4668 = !DILocation(line: 1218, column: 15, scope: !4660)
!4669 = !DILocation(line: 1218, column: 27, scope: !4660)
!4670 = !DILocation(line: 1219, column: 4, scope: !4660)
!4671 = !DILocation(line: 1219, column: 14, scope: !4660)
!4672 = !DILocation(line: 1219, column: 25, scope: !4660)
!4673 = !DILocation(line: 1220, column: 34, scope: !4660)
!4674 = !DILocation(line: 1220, column: 48, scope: !4660)
!4675 = !DILocation(line: 1220, column: 57, scope: !4660)
!4676 = !DILocation(line: 1220, column: 4, scope: !4660)
!4677 = !DILocation(line: 1220, column: 15, scope: !4660)
!4678 = !DILocation(line: 1220, column: 32, scope: !4660)
!4679 = !DILocation(line: 1222, column: 16, scope: !4660)
!4680 = !DILocation(line: 1222, column: 27, scope: !4660)
!4681 = !DILocation(line: 1222, column: 33, scope: !4660)
!4682 = !DILocation(line: 1222, column: 42, scope: !4660)
!4683 = !DILocation(line: 1222, column: 4, scope: !4660)
!4684 = !DILocation(line: 1223, column: 24, scope: !4660)
!4685 = !DILocation(line: 1223, column: 33, scope: !4660)
!4686 = !DILocation(line: 1223, column: 4, scope: !4660)
!4687 = !DILocation(line: 1223, column: 15, scope: !4660)
!4688 = !DILocation(line: 1223, column: 22, scope: !4660)
!4689 = !DILocation(line: 1224, column: 22, scope: !4660)
!4690 = !DILocation(line: 1224, column: 31, scope: !4660)
!4691 = !DILocation(line: 1224, column: 4, scope: !4660)
!4692 = !DILocation(line: 1224, column: 15, scope: !4660)
!4693 = !DILocation(line: 1224, column: 20, scope: !4660)
!4694 = !DILocation(line: 1225, column: 27, scope: !4660)
!4695 = !DILocation(line: 1225, column: 36, scope: !4660)
!4696 = !DILocation(line: 1225, column: 4, scope: !4660)
!4697 = !DILocation(line: 1225, column: 15, scope: !4660)
!4698 = !DILocation(line: 1225, column: 25, scope: !4660)
!4699 = !DILocation(line: 1226, column: 34, scope: !4660)
!4700 = !DILocation(line: 1226, column: 43, scope: !4660)
!4701 = !DILocation(line: 1226, column: 4, scope: !4660)
!4702 = !DILocation(line: 1226, column: 15, scope: !4660)
!4703 = !DILocation(line: 1226, column: 32, scope: !4660)
!4704 = !DILocation(line: 1227, column: 27, scope: !4660)
!4705 = !DILocation(line: 1227, column: 36, scope: !4660)
!4706 = !DILocation(line: 1227, column: 4, scope: !4660)
!4707 = !DILocation(line: 1227, column: 15, scope: !4660)
!4708 = !DILocation(line: 1227, column: 25, scope: !4660)
!4709 = !DILocation(line: 1228, column: 28, scope: !4660)
!4710 = !DILocation(line: 1228, column: 37, scope: !4660)
!4711 = !DILocation(line: 1228, column: 4, scope: !4660)
!4712 = !DILocation(line: 1228, column: 15, scope: !4660)
!4713 = !DILocation(line: 1228, column: 26, scope: !4660)
!4714 = !DILocation(line: 1229, column: 33, scope: !4660)
!4715 = !DILocation(line: 1229, column: 42, scope: !4660)
!4716 = !DILocation(line: 1229, column: 4, scope: !4660)
!4717 = !DILocation(line: 1229, column: 15, scope: !4660)
!4718 = !DILocation(line: 1229, column: 31, scope: !4660)
!4719 = !DILocation(line: 1230, column: 23, scope: !4660)
!4720 = !DILocation(line: 1230, column: 32, scope: !4660)
!4721 = !DILocation(line: 1230, column: 4, scope: !4660)
!4722 = !DILocation(line: 1230, column: 15, scope: !4660)
!4723 = !DILocation(line: 1230, column: 21, scope: !4660)
!4724 = !DILocation(line: 1231, column: 24, scope: !4660)
!4725 = !DILocation(line: 1231, column: 33, scope: !4660)
!4726 = !DILocation(line: 1231, column: 4, scope: !4660)
!4727 = !DILocation(line: 1231, column: 15, scope: !4660)
!4728 = !DILocation(line: 1231, column: 22, scope: !4660)
!4729 = !DILocation(line: 1233, column: 34, scope: !4660)
!4730 = !DILocation(line: 1233, column: 43, scope: !4660)
!4731 = !DILocation(line: 1233, column: 4, scope: !4660)
!4732 = !DILocation(line: 1233, column: 15, scope: !4660)
!4733 = !DILocation(line: 1233, column: 32, scope: !4660)
!4734 = !DILocation(line: 1234, column: 26, scope: !4660)
!4735 = !DILocation(line: 1234, column: 35, scope: !4660)
!4736 = !DILocation(line: 1234, column: 4, scope: !4660)
!4737 = !DILocation(line: 1234, column: 15, scope: !4660)
!4738 = !DILocation(line: 1234, column: 24, scope: !4660)
!4739 = !DILocation(line: 1235, column: 29, scope: !4660)
!4740 = !DILocation(line: 1235, column: 38, scope: !4660)
!4741 = !DILocation(line: 1235, column: 4, scope: !4660)
!4742 = !DILocation(line: 1235, column: 15, scope: !4660)
!4743 = !DILocation(line: 1235, column: 27, scope: !4660)
!4744 = !DILocation(line: 1236, column: 27, scope: !4660)
!4745 = !DILocation(line: 1236, column: 36, scope: !4660)
!4746 = !DILocation(line: 1236, column: 4, scope: !4660)
!4747 = !DILocation(line: 1236, column: 15, scope: !4660)
!4748 = !DILocation(line: 1236, column: 25, scope: !4660)
!4749 = !DILocation(line: 1238, column: 15, scope: !4660)
!4750 = !DILocation(line: 1238, column: 26, scope: !4660)
!4751 = !DILocation(line: 1238, column: 38, scope: !4660)
!4752 = !DILocation(line: 1238, column: 47, scope: !4660)
!4753 = !DILocation(line: 1238, column: 4, scope: !4660)
!4754 = !DILocation(line: 1239, column: 30, scope: !4660)
!4755 = !DILocation(line: 1239, column: 39, scope: !4660)
!4756 = !DILocation(line: 1239, column: 4, scope: !4660)
!4757 = !DILocation(line: 1239, column: 15, scope: !4660)
!4758 = !DILocation(line: 1239, column: 28, scope: !4660)
!4759 = !DILocation(line: 1240, column: 16, scope: !4660)
!4760 = !DILocation(line: 1240, column: 27, scope: !4660)
!4761 = !DILocation(line: 1240, column: 43, scope: !4660)
!4762 = !DILocation(line: 1240, column: 52, scope: !4660)
!4763 = !DILocation(line: 1240, column: 4, scope: !4660)
!4764 = !DILocation(line: 1242, column: 27, scope: !4660)
!4765 = !DILocation(line: 1242, column: 36, scope: !4660)
!4766 = !DILocation(line: 1242, column: 4, scope: !4660)
!4767 = !DILocation(line: 1242, column: 15, scope: !4660)
!4768 = !DILocation(line: 1242, column: 25, scope: !4660)
!4769 = !DILocation(line: 1243, column: 28, scope: !4660)
!4770 = !DILocation(line: 1243, column: 37, scope: !4660)
!4771 = !DILocation(line: 1243, column: 4, scope: !4660)
!4772 = !DILocation(line: 1243, column: 15, scope: !4660)
!4773 = !DILocation(line: 1243, column: 26, scope: !4660)
!4774 = !DILocation(line: 1244, column: 37, scope: !4660)
!4775 = !DILocation(line: 1244, column: 46, scope: !4660)
!4776 = !DILocation(line: 1244, column: 4, scope: !4660)
!4777 = !DILocation(line: 1244, column: 15, scope: !4660)
!4778 = !DILocation(line: 1244, column: 35, scope: !4660)
!4779 = !DILocation(line: 1245, column: 29, scope: !4660)
!4780 = !DILocation(line: 1245, column: 38, scope: !4660)
!4781 = !DILocation(line: 1245, column: 4, scope: !4660)
!4782 = !DILocation(line: 1245, column: 15, scope: !4660)
!4783 = !DILocation(line: 1245, column: 27, scope: !4660)
!4784 = !DILocation(line: 1246, column: 29, scope: !4660)
!4785 = !DILocation(line: 1246, column: 38, scope: !4660)
!4786 = !DILocation(line: 1246, column: 4, scope: !4660)
!4787 = !DILocation(line: 1246, column: 15, scope: !4660)
!4788 = !DILocation(line: 1246, column: 27, scope: !4660)
!4789 = !DILocation(line: 1249, column: 30, scope: !4660)
!4790 = !DILocation(line: 1249, column: 39, scope: !4660)
!4791 = !DILocation(line: 1249, column: 4, scope: !4660)
!4792 = !DILocation(line: 1249, column: 15, scope: !4660)
!4793 = !DILocation(line: 1249, column: 28, scope: !4660)
!4794 = !DILocation(line: 1250, column: 36, scope: !4660)
!4795 = !DILocation(line: 1250, column: 45, scope: !4660)
!4796 = !DILocation(line: 1250, column: 4, scope: !4660)
!4797 = !DILocation(line: 1250, column: 15, scope: !4660)
!4798 = !DILocation(line: 1250, column: 34, scope: !4660)
!4799 = !DILocation(line: 1251, column: 30, scope: !4660)
!4800 = !DILocation(line: 1251, column: 39, scope: !4660)
!4801 = !DILocation(line: 1251, column: 4, scope: !4660)
!4802 = !DILocation(line: 1251, column: 15, scope: !4660)
!4803 = !DILocation(line: 1251, column: 28, scope: !4660)
!4804 = !DILocation(line: 1252, column: 26, scope: !4660)
!4805 = !DILocation(line: 1252, column: 35, scope: !4660)
!4806 = !DILocation(line: 1252, column: 4, scope: !4660)
!4807 = !DILocation(line: 1252, column: 15, scope: !4660)
!4808 = !DILocation(line: 1252, column: 24, scope: !4660)
!4809 = !DILocation(line: 1253, column: 26, scope: !4660)
!4810 = !DILocation(line: 1253, column: 35, scope: !4660)
!4811 = !DILocation(line: 1253, column: 4, scope: !4660)
!4812 = !DILocation(line: 1253, column: 15, scope: !4660)
!4813 = !DILocation(line: 1253, column: 24, scope: !4660)
!4814 = !DILocation(line: 1255, column: 33, scope: !4660)
!4815 = !DILocation(line: 1255, column: 42, scope: !4660)
!4816 = !DILocation(line: 1255, column: 4, scope: !4660)
!4817 = !DILocation(line: 1255, column: 15, scope: !4660)
!4818 = !DILocation(line: 1255, column: 31, scope: !4660)
!4819 = !DILocation(line: 1256, column: 30, scope: !4660)
!4820 = !DILocation(line: 1256, column: 39, scope: !4660)
!4821 = !DILocation(line: 1256, column: 4, scope: !4660)
!4822 = !DILocation(line: 1256, column: 15, scope: !4660)
!4823 = !DILocation(line: 1256, column: 28, scope: !4660)
!4824 = !DILocation(line: 1258, column: 30, scope: !4660)
!4825 = !DILocation(line: 1258, column: 39, scope: !4660)
!4826 = !DILocation(line: 1258, column: 4, scope: !4660)
!4827 = !DILocation(line: 1258, column: 15, scope: !4660)
!4828 = !DILocation(line: 1258, column: 28, scope: !4660)
!4829 = !DILocation(line: 1259, column: 28, scope: !4660)
!4830 = !DILocation(line: 1259, column: 37, scope: !4660)
!4831 = !DILocation(line: 1259, column: 4, scope: !4660)
!4832 = !DILocation(line: 1259, column: 15, scope: !4660)
!4833 = !DILocation(line: 1259, column: 26, scope: !4660)
!4834 = !DILocation(line: 1260, column: 32, scope: !4660)
!4835 = !DILocation(line: 1260, column: 41, scope: !4660)
!4836 = !DILocation(line: 1260, column: 4, scope: !4660)
!4837 = !DILocation(line: 1260, column: 15, scope: !4660)
!4838 = !DILocation(line: 1260, column: 30, scope: !4660)
!4839 = !DILocation(line: 1261, column: 29, scope: !4660)
!4840 = !DILocation(line: 1261, column: 38, scope: !4660)
!4841 = !DILocation(line: 1261, column: 4, scope: !4660)
!4842 = !DILocation(line: 1261, column: 15, scope: !4660)
!4843 = !DILocation(line: 1261, column: 27, scope: !4660)
!4844 = !DILocation(line: 1262, column: 33, scope: !4660)
!4845 = !DILocation(line: 1262, column: 42, scope: !4660)
!4846 = !DILocation(line: 1262, column: 4, scope: !4660)
!4847 = !DILocation(line: 1262, column: 15, scope: !4660)
!4848 = !DILocation(line: 1262, column: 31, scope: !4660)
!4849 = !DILocation(line: 1264, column: 16, scope: !4660)
!4850 = !DILocation(line: 1264, column: 27, scope: !4660)
!4851 = !DILocation(line: 1264, column: 41, scope: !4660)
!4852 = !DILocation(line: 1264, column: 50, scope: !4660)
!4853 = !DILocation(line: 1264, column: 4, scope: !4660)
!4854 = !DILocation(line: 1265, column: 16, scope: !4660)
!4855 = !DILocation(line: 1265, column: 27, scope: !4660)
!4856 = !DILocation(line: 1265, column: 46, scope: !4660)
!4857 = !DILocation(line: 1265, column: 55, scope: !4660)
!4858 = !DILocation(line: 1265, column: 4, scope: !4660)
!4859 = !DILocation(line: 1266, column: 16, scope: !4660)
!4860 = !DILocation(line: 1266, column: 27, scope: !4660)
!4861 = !DILocation(line: 1266, column: 40, scope: !4660)
!4862 = !DILocation(line: 1266, column: 49, scope: !4660)
!4863 = !DILocation(line: 1266, column: 4, scope: !4660)
!4864 = !DILocation(line: 1267, column: 16, scope: !4660)
!4865 = !DILocation(line: 1267, column: 27, scope: !4660)
!4866 = !DILocation(line: 1267, column: 41, scope: !4660)
!4867 = !DILocation(line: 1267, column: 50, scope: !4660)
!4868 = !DILocation(line: 1267, column: 4, scope: !4660)
!4869 = !DILocation(line: 1268, column: 3, scope: !4660)
!4870 = !DILocation(line: 1214, column: 66, scope: !4657)
!4871 = !DILocation(line: 1214, column: 75, scope: !4657)
!4872 = !DILocation(line: 1214, column: 64, scope: !4657)
!4873 = !DILocation(line: 1214, column: 3, scope: !4657)
!4874 = distinct !{!4874, !4658, !4875}
!4875 = !DILocation(line: 1268, column: 3, scope: !4650)
!4876 = !DILocation(line: 1269, column: 29, scope: !4631)
!4877 = !DILocation(line: 1269, column: 35, scope: !4631)
!4878 = !DILocation(line: 1269, column: 3, scope: !4631)
!4879 = !DILocation(line: 1270, column: 2, scope: !4631)
!4880 = !DILocation(line: 1271, column: 11, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4627, file: !3, line: 1271, column: 11)
!4882 = !DILocation(line: 1271, column: 17, scope: !4881)
!4883 = !DILocation(line: 1271, column: 11, scope: !4627)
!4884 = !DILocalVariable(name: "brush", scope: !4885, file: !3, line: 1272, type: !4416)
!4885 = distinct !DILexicalBlock(scope: !4881, file: !3, line: 1271, column: 24)
!4886 = !DILocation(line: 1272, column: 30, scope: !4885)
!4887 = !DILocation(line: 1272, column: 38, scope: !4885)
!4888 = !DILocation(line: 1272, column: 43, scope: !4885)
!4889 = !DILocalVariable(name: "t_brush", scope: !4885, file: !3, line: 1272, type: !4416)
!4890 = !DILocation(line: 1272, column: 51, scope: !4885)
!4891 = !DILocation(line: 1272, column: 61, scope: !4885)
!4892 = !DILocation(line: 1272, column: 67, scope: !4885)
!4893 = !DILocation(line: 1273, column: 18, scope: !4885)
!4894 = !DILocation(line: 1273, column: 3, scope: !4885)
!4895 = !DILocation(line: 1273, column: 12, scope: !4885)
!4896 = !DILocation(line: 1273, column: 16, scope: !4885)
!4897 = !DILocation(line: 1275, column: 20, scope: !4885)
!4898 = !DILocation(line: 1275, column: 27, scope: !4885)
!4899 = !DILocation(line: 1275, column: 3, scope: !4885)
!4900 = !DILocation(line: 1275, column: 12, scope: !4885)
!4901 = !DILocation(line: 1275, column: 18, scope: !4885)
!4902 = !DILocation(line: 1276, column: 24, scope: !4885)
!4903 = !DILocation(line: 1276, column: 31, scope: !4885)
!4904 = !DILocation(line: 1276, column: 3, scope: !4885)
!4905 = !DILocation(line: 1276, column: 12, scope: !4885)
!4906 = !DILocation(line: 1276, column: 22, scope: !4885)
!4907 = !DILocation(line: 1278, column: 18, scope: !4885)
!4908 = !DILocation(line: 1278, column: 25, scope: !4885)
!4909 = !DILocation(line: 1278, column: 3, scope: !4885)
!4910 = !DILocation(line: 1278, column: 12, scope: !4885)
!4911 = !DILocation(line: 1278, column: 16, scope: !4885)
!4912 = !DILocation(line: 1279, column: 16, scope: !4885)
!4913 = !DILocation(line: 1279, column: 23, scope: !4885)
!4914 = !DILocation(line: 1279, column: 3, scope: !4885)
!4915 = !DILocation(line: 1279, column: 12, scope: !4885)
!4916 = !DILocation(line: 1279, column: 14, scope: !4885)
!4917 = !DILocation(line: 1280, column: 16, scope: !4885)
!4918 = !DILocation(line: 1280, column: 23, scope: !4885)
!4919 = !DILocation(line: 1280, column: 3, scope: !4885)
!4920 = !DILocation(line: 1280, column: 12, scope: !4885)
!4921 = !DILocation(line: 1280, column: 14, scope: !4885)
!4922 = !DILocation(line: 1281, column: 16, scope: !4885)
!4923 = !DILocation(line: 1281, column: 23, scope: !4885)
!4924 = !DILocation(line: 1281, column: 3, scope: !4885)
!4925 = !DILocation(line: 1281, column: 12, scope: !4885)
!4926 = !DILocation(line: 1281, column: 14, scope: !4885)
!4927 = !DILocation(line: 1282, column: 20, scope: !4885)
!4928 = !DILocation(line: 1282, column: 27, scope: !4885)
!4929 = !DILocation(line: 1282, column: 3, scope: !4885)
!4930 = !DILocation(line: 1282, column: 12, scope: !4885)
!4931 = !DILocation(line: 1282, column: 18, scope: !4885)
!4932 = !DILocation(line: 1283, column: 22, scope: !4885)
!4933 = !DILocation(line: 1283, column: 29, scope: !4885)
!4934 = !DILocation(line: 1283, column: 3, scope: !4885)
!4935 = !DILocation(line: 1283, column: 12, scope: !4885)
!4936 = !DILocation(line: 1283, column: 20, scope: !4885)
!4937 = !DILocation(line: 1285, column: 30, scope: !4885)
!4938 = !DILocation(line: 1285, column: 37, scope: !4885)
!4939 = !DILocation(line: 1285, column: 3, scope: !4885)
!4940 = !DILocation(line: 1285, column: 12, scope: !4885)
!4941 = !DILocation(line: 1285, column: 28, scope: !4885)
!4942 = !DILocation(line: 1286, column: 30, scope: !4885)
!4943 = !DILocation(line: 1286, column: 37, scope: !4885)
!4944 = !DILocation(line: 1286, column: 3, scope: !4885)
!4945 = !DILocation(line: 1286, column: 12, scope: !4885)
!4946 = !DILocation(line: 1286, column: 28, scope: !4885)
!4947 = !DILocation(line: 1287, column: 29, scope: !4885)
!4948 = !DILocation(line: 1287, column: 36, scope: !4885)
!4949 = !DILocation(line: 1287, column: 3, scope: !4885)
!4950 = !DILocation(line: 1287, column: 12, scope: !4885)
!4951 = !DILocation(line: 1287, column: 27, scope: !4885)
!4952 = !DILocation(line: 1288, column: 19, scope: !4885)
!4953 = !DILocation(line: 1288, column: 26, scope: !4885)
!4954 = !DILocation(line: 1288, column: 3, scope: !4885)
!4955 = !DILocation(line: 1288, column: 12, scope: !4885)
!4956 = !DILocation(line: 1288, column: 17, scope: !4885)
!4957 = !DILocation(line: 1290, column: 7, scope: !4958)
!4958 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1290, column: 7)
!4959 = !DILocation(line: 1290, column: 14, scope: !4958)
!4960 = !DILocation(line: 1290, column: 7, scope: !4885)
!4961 = !DILocation(line: 1291, column: 11, scope: !4958)
!4962 = !DILocation(line: 1291, column: 20, scope: !4958)
!4963 = !DILocation(line: 1291, column: 4, scope: !4958)
!4964 = !DILocation(line: 1291, column: 32, scope: !4958)
!4965 = !DILocation(line: 1291, column: 39, scope: !4958)
!4966 = !DILocation(line: 1292, column: 7, scope: !4967)
!4967 = distinct !DILexicalBlock(scope: !4885, file: !3, line: 1292, column: 7)
!4968 = !DILocation(line: 1292, column: 14, scope: !4967)
!4969 = !DILocation(line: 1292, column: 7, scope: !4885)
!4970 = !DILocation(line: 1293, column: 11, scope: !4967)
!4971 = !DILocation(line: 1293, column: 20, scope: !4967)
!4972 = !DILocation(line: 1293, column: 4, scope: !4967)
!4973 = !DILocation(line: 1293, column: 30, scope: !4967)
!4974 = !DILocation(line: 1293, column: 37, scope: !4967)
!4975 = !DILocation(line: 1295, column: 32, scope: !4885)
!4976 = !DILocation(line: 1295, column: 39, scope: !4885)
!4977 = !DILocation(line: 1295, column: 3, scope: !4885)
!4978 = !DILocation(line: 1295, column: 12, scope: !4885)
!4979 = !DILocation(line: 1295, column: 30, scope: !4885)
!4980 = !DILocation(line: 1296, column: 24, scope: !4885)
!4981 = !DILocation(line: 1296, column: 31, scope: !4885)
!4982 = !DILocation(line: 1296, column: 3, scope: !4885)
!4983 = !DILocation(line: 1296, column: 12, scope: !4885)
!4984 = !DILocation(line: 1296, column: 22, scope: !4885)
!4985 = !DILocation(line: 1297, column: 22, scope: !4885)
!4986 = !DILocation(line: 1297, column: 29, scope: !4885)
!4987 = !DILocation(line: 1297, column: 3, scope: !4885)
!4988 = !DILocation(line: 1297, column: 12, scope: !4885)
!4989 = !DILocation(line: 1297, column: 20, scope: !4885)
!4990 = !DILocation(line: 1299, column: 26, scope: !4885)
!4991 = !DILocation(line: 1299, column: 33, scope: !4885)
!4992 = !DILocation(line: 1299, column: 3, scope: !4885)
!4993 = !DILocation(line: 1299, column: 12, scope: !4885)
!4994 = !DILocation(line: 1299, column: 24, scope: !4885)
!4995 = !DILocation(line: 1300, column: 25, scope: !4885)
!4996 = !DILocation(line: 1300, column: 32, scope: !4885)
!4997 = !DILocation(line: 1300, column: 3, scope: !4885)
!4998 = !DILocation(line: 1300, column: 12, scope: !4885)
!4999 = !DILocation(line: 1300, column: 23, scope: !4885)
!5000 = !DILocation(line: 1301, column: 27, scope: !4885)
!5001 = !DILocation(line: 1301, column: 34, scope: !4885)
!5002 = !DILocation(line: 1301, column: 3, scope: !4885)
!5003 = !DILocation(line: 1301, column: 12, scope: !4885)
!5004 = !DILocation(line: 1301, column: 25, scope: !4885)
!5005 = !DILocation(line: 1302, column: 30, scope: !4885)
!5006 = !DILocation(line: 1302, column: 37, scope: !4885)
!5007 = !DILocation(line: 1302, column: 3, scope: !4885)
!5008 = !DILocation(line: 1302, column: 12, scope: !4885)
!5009 = !DILocation(line: 1302, column: 28, scope: !4885)
!5010 = !DILocation(line: 1303, column: 2, scope: !4885)
!5011 = !DILocation(line: 1304, column: 1, scope: !4602)
!5012 = distinct !DISubprogram(name: "copy_v4_v4", scope: !5013, file: !5013, line: 71, type: !5014, scopeLine: 72, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5013 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5014 = !DISubroutineType(types: !5015)
!5015 = !{null, !233, !2195}
!5016 = !DILocalVariable(name: "r", arg: 1, scope: !5012, file: !5013, line: 71, type: !233)
!5017 = !DILocation(line: 71, column: 31, scope: !5012)
!5018 = !DILocalVariable(name: "a", arg: 2, scope: !5012, file: !5013, line: 71, type: !2195)
!5019 = !DILocation(line: 71, column: 49, scope: !5012)
!5020 = !DILocation(line: 73, column: 9, scope: !5012)
!5021 = !DILocation(line: 73, column: 2, scope: !5012)
!5022 = !DILocation(line: 73, column: 7, scope: !5012)
!5023 = !DILocation(line: 74, column: 9, scope: !5012)
!5024 = !DILocation(line: 74, column: 2, scope: !5012)
!5025 = !DILocation(line: 74, column: 7, scope: !5012)
!5026 = !DILocation(line: 75, column: 9, scope: !5012)
!5027 = !DILocation(line: 75, column: 2, scope: !5012)
!5028 = !DILocation(line: 75, column: 7, scope: !5012)
!5029 = !DILocation(line: 76, column: 9, scope: !5012)
!5030 = !DILocation(line: 76, column: 2, scope: !5012)
!5031 = !DILocation(line: 76, column: 7, scope: !5012)
!5032 = !DILocation(line: 77, column: 1, scope: !5012)
!5033 = distinct !DISubprogram(name: "dynamicPaint_clearSurface", scope: !3, file: !3, line: 1617, type: !5034, scopeLine: 1618, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5034 = !DISubroutineType(types: !5035)
!5035 = !{null, !4204, !242}
!5036 = !DILocalVariable(name: "scene", arg: 1, scope: !5033, file: !3, line: 1617, type: !4204)
!5037 = !DILocation(line: 1617, column: 39, scope: !5033)
!5038 = !DILocalVariable(name: "surface", arg: 2, scope: !5033, file: !3, line: 1617, type: !242)
!5039 = !DILocation(line: 1617, column: 67, scope: !5033)
!5040 = !DILocalVariable(name: "sData", scope: !5033, file: !3, line: 1619, type: !3906)
!5041 = !DILocation(line: 1619, column: 20, scope: !5033)
!5042 = !DILocation(line: 1619, column: 28, scope: !5033)
!5043 = !DILocation(line: 1619, column: 37, scope: !5033)
!5044 = !DILocation(line: 1620, column: 6, scope: !5045)
!5045 = distinct !DILexicalBlock(scope: !5033, file: !3, line: 1620, column: 6)
!5046 = !DILocation(line: 1620, column: 12, scope: !5045)
!5047 = !DILocation(line: 1620, column: 15, scope: !5045)
!5048 = !DILocation(line: 1620, column: 22, scope: !5045)
!5049 = !DILocation(line: 1620, column: 6, scope: !5033)
!5050 = !DILocalVariable(name: "data_size", scope: !5051, file: !3, line: 1621, type: !7)
!5051 = distinct !DILexicalBlock(scope: !5045, file: !3, line: 1620, column: 33)
!5052 = !DILocation(line: 1621, column: 16, scope: !5051)
!5053 = !DILocation(line: 1623, column: 7, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1623, column: 7)
!5055 = !DILocation(line: 1623, column: 16, scope: !5054)
!5056 = !DILocation(line: 1623, column: 21, scope: !5054)
!5057 = !DILocation(line: 1623, column: 7, scope: !5051)
!5058 = !DILocation(line: 1624, column: 14, scope: !5054)
!5059 = !DILocation(line: 1624, column: 4, scope: !5054)
!5060 = !DILocation(line: 1625, column: 12, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 1625, column: 12)
!5062 = !DILocation(line: 1625, column: 21, scope: !5061)
!5063 = !DILocation(line: 1625, column: 26, scope: !5061)
!5064 = !DILocation(line: 1625, column: 12, scope: !5054)
!5065 = !DILocation(line: 1626, column: 14, scope: !5061)
!5066 = !DILocation(line: 1626, column: 4, scope: !5061)
!5067 = !DILocation(line: 1628, column: 14, scope: !5061)
!5068 = !DILocation(line: 1630, column: 10, scope: !5051)
!5069 = !DILocation(line: 1630, column: 17, scope: !5051)
!5070 = !DILocation(line: 1630, column: 31, scope: !5051)
!5071 = !DILocation(line: 1630, column: 43, scope: !5051)
!5072 = !DILocation(line: 1630, column: 50, scope: !5051)
!5073 = !DILocation(line: 1630, column: 41, scope: !5051)
!5074 = !DILocation(line: 1630, column: 3, scope: !5051)
!5075 = !DILocation(line: 1633, column: 7, scope: !5076)
!5076 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1633, column: 7)
!5077 = !DILocation(line: 1633, column: 16, scope: !5076)
!5078 = !DILocation(line: 1633, column: 21, scope: !5076)
!5079 = !DILocation(line: 1633, column: 7, scope: !5051)
!5080 = !DILocation(line: 1634, column: 33, scope: !5076)
!5081 = !DILocation(line: 1634, column: 40, scope: !5076)
!5082 = !DILocation(line: 1634, column: 4, scope: !5076)
!5083 = !DILocation(line: 1636, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5051, file: !3, line: 1636, column: 7)
!5085 = !DILocation(line: 1636, column: 14, scope: !5084)
!5086 = !DILocation(line: 1636, column: 7, scope: !5051)
!5087 = !DILocation(line: 1637, column: 4, scope: !5084)
!5088 = !DILocation(line: 1637, column: 11, scope: !5084)
!5089 = !DILocation(line: 1637, column: 18, scope: !5084)
!5090 = !DILocation(line: 1637, column: 24, scope: !5084)
!5091 = !DILocation(line: 1638, column: 2, scope: !5051)
!5092 = !DILocation(line: 1639, column: 1, scope: !5033)
!5093 = distinct !DISubprogram(name: "dynamicPaint_setInitialColor", scope: !3, file: !3, line: 1459, type: !5034, scopeLine: 1460, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5094 = !DILocalVariable(name: "scene", arg: 1, scope: !5093, file: !3, line: 1459, type: !4204)
!5095 = !DILocation(line: 1459, column: 49, scope: !5093)
!5096 = !DILocalVariable(name: "surface", arg: 2, scope: !5093, file: !3, line: 1459, type: !242)
!5097 = !DILocation(line: 1459, column: 77, scope: !5093)
!5098 = !DILocalVariable(name: "sData", scope: !5093, file: !3, line: 1461, type: !3906)
!5099 = !DILocation(line: 1461, column: 20, scope: !5093)
!5100 = !DILocation(line: 1461, column: 28, scope: !5093)
!5101 = !DILocation(line: 1461, column: 37, scope: !5093)
!5102 = !DILocalVariable(name: "pPoint", scope: !5093, file: !3, line: 1462, type: !222)
!5103 = !DILocation(line: 1462, column: 14, scope: !5093)
!5104 = !DILocation(line: 1462, column: 37, scope: !5093)
!5105 = !DILocation(line: 1462, column: 44, scope: !5093)
!5106 = !DILocation(line: 1462, column: 23, scope: !5093)
!5107 = !DILocalVariable(name: "dm", scope: !5093, file: !3, line: 1463, type: !2003)
!5108 = !DILocation(line: 1463, column: 15, scope: !5093)
!5109 = !DILocation(line: 1463, column: 20, scope: !5093)
!5110 = !DILocation(line: 1463, column: 29, scope: !5093)
!5111 = !DILocation(line: 1463, column: 37, scope: !5093)
!5112 = !DILocalVariable(name: "i", scope: !5093, file: !3, line: 1464, type: !135)
!5113 = !DILocation(line: 1464, column: 6, scope: !5093)
!5114 = !DILocalVariable(name: "scene_color_manage", scope: !5093, file: !3, line: 1465, type: !2282)
!5115 = !DILocation(line: 1465, column: 13, scope: !5093)
!5116 = !DILocation(line: 1465, column: 75, scope: !5093)
!5117 = !DILocation(line: 1465, column: 34, scope: !5093)
!5118 = !DILocation(line: 1467, column: 6, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1467, column: 6)
!5120 = !DILocation(line: 1467, column: 15, scope: !5119)
!5121 = !DILocation(line: 1467, column: 20, scope: !5119)
!5122 = !DILocation(line: 1467, column: 6, scope: !5093)
!5123 = !DILocation(line: 1468, column: 3, scope: !5119)
!5124 = !DILocation(line: 1470, column: 6, scope: !5125)
!5125 = distinct !DILexicalBlock(scope: !5093, file: !3, line: 1470, column: 6)
!5126 = !DILocation(line: 1470, column: 15, scope: !5125)
!5127 = !DILocation(line: 1470, column: 31, scope: !5125)
!5128 = !DILocation(line: 1470, column: 6, scope: !5093)
!5129 = !DILocation(line: 1471, column: 3, scope: !5125)
!5130 = !DILocation(line: 1473, column: 11, scope: !5131)
!5131 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 1473, column: 11)
!5132 = !DILocation(line: 1473, column: 20, scope: !5131)
!5133 = !DILocation(line: 1473, column: 36, scope: !5131)
!5134 = !DILocation(line: 1473, column: 11, scope: !5125)
!5135 = !DILocation(line: 1478, column: 10, scope: !5136)
!5136 = distinct !DILexicalBlock(scope: !5137, file: !3, line: 1478, column: 3)
!5137 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1473, column: 65)
!5138 = !DILocation(line: 1478, column: 8, scope: !5136)
!5139 = !DILocation(line: 1478, column: 15, scope: !5140)
!5140 = distinct !DILexicalBlock(scope: !5136, file: !3, line: 1478, column: 3)
!5141 = !DILocation(line: 1478, column: 19, scope: !5140)
!5142 = !DILocation(line: 1478, column: 26, scope: !5140)
!5143 = !DILocation(line: 1478, column: 17, scope: !5140)
!5144 = !DILocation(line: 1478, column: 3, scope: !5136)
!5145 = !DILocation(line: 1479, column: 15, scope: !5146)
!5146 = distinct !DILexicalBlock(scope: !5140, file: !3, line: 1478, column: 45)
!5147 = !DILocation(line: 1479, column: 22, scope: !5146)
!5148 = !DILocation(line: 1479, column: 25, scope: !5146)
!5149 = !DILocation(line: 1479, column: 32, scope: !5146)
!5150 = !DILocation(line: 1479, column: 41, scope: !5146)
!5151 = !DILocation(line: 1479, column: 4, scope: !5146)
!5152 = !DILocation(line: 1480, column: 22, scope: !5146)
!5153 = !DILocation(line: 1480, column: 31, scope: !5146)
!5154 = !DILocation(line: 1480, column: 4, scope: !5146)
!5155 = !DILocation(line: 1480, column: 11, scope: !5146)
!5156 = !DILocation(line: 1480, column: 14, scope: !5146)
!5157 = !DILocation(line: 1480, column: 20, scope: !5146)
!5158 = !DILocation(line: 1481, column: 3, scope: !5146)
!5159 = !DILocation(line: 1478, column: 41, scope: !5140)
!5160 = !DILocation(line: 1478, column: 3, scope: !5140)
!5161 = distinct !{!5161, !5144, !5162}
!5162 = !DILocation(line: 1481, column: 3, scope: !5136)
!5163 = !DILocation(line: 1482, column: 2, scope: !5137)
!5164 = !DILocation(line: 1484, column: 11, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 1484, column: 11)
!5166 = !DILocation(line: 1484, column: 20, scope: !5165)
!5167 = !DILocation(line: 1484, column: 36, scope: !5165)
!5168 = !DILocation(line: 1484, column: 11, scope: !5131)
!5169 = !DILocalVariable(name: "tex", scope: !5170, file: !3, line: 1485, type: !5171)
!5170 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 1484, column: 67)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DIDerivedType(tag: DW_TAG_typedef, name: "Tex", file: !436, line: 261, baseType: !692)
!5173 = !DILocation(line: 1485, column: 8, scope: !5170)
!5174 = !DILocation(line: 1485, column: 14, scope: !5170)
!5175 = !DILocation(line: 1485, column: 23, scope: !5170)
!5176 = !DILocalVariable(name: "tface", scope: !5170, file: !3, line: 1486, type: !5177)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !2025, line: 165, baseType: !2271)
!5179 = !DILocation(line: 1486, column: 11, scope: !5170)
!5180 = !DILocalVariable(name: "mface", scope: !5170, file: !3, line: 1487, type: !5181)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !2025, line: 46, baseType: !2048)
!5183 = !DILocation(line: 1487, column: 10, scope: !5170)
!5184 = !DILocation(line: 1487, column: 18, scope: !5170)
!5185 = !DILocation(line: 1487, column: 22, scope: !5170)
!5186 = !DILocation(line: 1487, column: 39, scope: !5170)
!5187 = !DILocalVariable(name: "numOfFaces", scope: !5170, file: !3, line: 1488, type: !135)
!5188 = !DILocation(line: 1488, column: 7, scope: !5170)
!5189 = !DILocation(line: 1488, column: 20, scope: !5170)
!5190 = !DILocation(line: 1488, column: 24, scope: !5170)
!5191 = !DILocation(line: 1488, column: 40, scope: !5170)
!5192 = !DILocalVariable(name: "uvname", scope: !5170, file: !3, line: 1489, type: !270)
!5193 = !DILocation(line: 1489, column: 8, scope: !5170)
!5194 = !DILocation(line: 1491, column: 8, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1491, column: 7)
!5196 = !DILocation(line: 1491, column: 7, scope: !5170)
!5197 = !DILocation(line: 1491, column: 13, scope: !5195)
!5198 = !DILocation(line: 1494, column: 35, scope: !5170)
!5199 = !DILocation(line: 1494, column: 39, scope: !5170)
!5200 = !DILocation(line: 1494, column: 60, scope: !5170)
!5201 = !DILocation(line: 1494, column: 69, scope: !5170)
!5202 = !DILocation(line: 1494, column: 85, scope: !5170)
!5203 = !DILocation(line: 1494, column: 3, scope: !5170)
!5204 = !DILocation(line: 1495, column: 39, scope: !5170)
!5205 = !DILocation(line: 1495, column: 43, scope: !5170)
!5206 = !DILocation(line: 1495, column: 64, scope: !5170)
!5207 = !DILocation(line: 1495, column: 11, scope: !5170)
!5208 = !DILocation(line: 1495, column: 9, scope: !5170)
!5209 = !DILocation(line: 1496, column: 8, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1496, column: 7)
!5211 = !DILocation(line: 1496, column: 7, scope: !5170)
!5212 = !DILocation(line: 1496, column: 15, scope: !5210)
!5213 = !DILocation(line: 1500, column: 7, scope: !5214)
!5214 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1500, column: 7)
!5215 = !DILocation(line: 1500, column: 16, scope: !5214)
!5216 = !DILocation(line: 1500, column: 23, scope: !5214)
!5217 = !DILocation(line: 1500, column: 7, scope: !5170)
!5218 = !DILocalVariable(name: "pool", scope: !5219, file: !3, line: 1501, type: !5220)
!5219 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1500, column: 55)
!5220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5221, size: 64)
!5221 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !5222, line: 47, flags: DIFlagFwdDecl)
!5222 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5223 = !DILocation(line: 1501, column: 22, scope: !5219)
!5224 = !DILocation(line: 1501, column: 29, scope: !5219)
!5225 = !DILocation(line: 1506, column: 11, scope: !5226)
!5226 = distinct !DILexicalBlock(scope: !5219, file: !3, line: 1506, column: 4)
!5227 = !DILocation(line: 1506, column: 9, scope: !5226)
!5228 = !DILocation(line: 1506, column: 16, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5226, file: !3, line: 1506, column: 4)
!5230 = !DILocation(line: 1506, column: 20, scope: !5229)
!5231 = !DILocation(line: 1506, column: 18, scope: !5229)
!5232 = !DILocation(line: 1506, column: 4, scope: !5226)
!5233 = !DILocalVariable(name: "numOfVert", scope: !5234, file: !3, line: 1507, type: !135)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !3, line: 1506, column: 37)
!5235 = !DILocation(line: 1507, column: 9, scope: !5234)
!5236 = !DILocation(line: 1507, column: 22, scope: !5234)
!5237 = !DILocation(line: 1507, column: 28, scope: !5234)
!5238 = !DILocation(line: 1507, column: 31, scope: !5234)
!5239 = !DILocation(line: 1507, column: 21, scope: !5234)
!5240 = !DILocalVariable(name: "uv", scope: !5234, file: !3, line: 1508, type: !206)
!5241 = !DILocation(line: 1508, column: 11, scope: !5234)
!5242 = !DILocalVariable(name: "j", scope: !5234, file: !3, line: 1509, type: !135)
!5243 = !DILocation(line: 1509, column: 9, scope: !5234)
!5244 = !DILocation(line: 1510, column: 12, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5234, file: !3, line: 1510, column: 5)
!5246 = !DILocation(line: 1510, column: 10, scope: !5245)
!5247 = !DILocation(line: 1510, column: 17, scope: !5248)
!5248 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 1510, column: 5)
!5249 = !DILocation(line: 1510, column: 21, scope: !5248)
!5250 = !DILocation(line: 1510, column: 19, scope: !5248)
!5251 = !DILocation(line: 1510, column: 5, scope: !5245)
!5252 = !DILocalVariable(name: "texres", scope: !5253, file: !3, line: 1511, type: !5254)
!5253 = distinct !DILexicalBlock(scope: !5248, file: !3, line: 1510, column: 37)
!5254 = !DIDerivedType(tag: DW_TAG_typedef, name: "TexResult", file: !5255, line: 45, baseType: !5256)
!5255 = !DIFile(filename: "blender/source/blender/render/extern/include/RE_shader_ext.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexResult", file: !5255, line: 41, size: 256, elements: !5257)
!5257 = !{!5258, !5259, !5260, !5261, !5262, !5263, !5264}
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "tin", scope: !5256, file: !5255, line: 42, baseType: !207, size: 32)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "tr", scope: !5256, file: !5255, line: 42, baseType: !207, size: 32, offset: 32)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "tg", scope: !5256, file: !5255, line: 42, baseType: !207, size: 32, offset: 64)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !5256, file: !5255, line: 42, baseType: !207, size: 32, offset: 96)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "ta", scope: !5256, file: !5255, line: 42, baseType: !207, size: 32, offset: 128)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "talpha", scope: !5256, file: !5255, line: 43, baseType: !135, size: 32, offset: 160)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "nor", scope: !5256, file: !5255, line: 44, baseType: !233, size: 64, offset: 192)
!5265 = !DILocation(line: 1511, column: 16, scope: !5253)
!5266 = !DILocalVariable(name: "vert", scope: !5253, file: !3, line: 1512, type: !803)
!5267 = !DILocation(line: 1512, column: 20, scope: !5253)
!5268 = !DILocation(line: 1512, column: 29, scope: !5253)
!5269 = !DILocation(line: 1512, column: 35, scope: !5253)
!5270 = !DILocation(line: 1512, column: 38, scope: !5253)
!5271 = !DILocation(line: 1512, column: 44, scope: !5253)
!5272 = !DILocation(line: 1512, column: 42, scope: !5253)
!5273 = !DILocation(line: 1515, column: 14, scope: !5253)
!5274 = !DILocation(line: 1515, column: 20, scope: !5253)
!5275 = !DILocation(line: 1515, column: 23, scope: !5253)
!5276 = !DILocation(line: 1515, column: 26, scope: !5253)
!5277 = !DILocation(line: 1515, column: 32, scope: !5253)
!5278 = !DILocation(line: 1515, column: 39, scope: !5253)
!5279 = !DILocation(line: 1515, column: 6, scope: !5253)
!5280 = !DILocation(line: 1515, column: 12, scope: !5253)
!5281 = !DILocation(line: 1516, column: 14, scope: !5253)
!5282 = !DILocation(line: 1516, column: 20, scope: !5253)
!5283 = !DILocation(line: 1516, column: 23, scope: !5253)
!5284 = !DILocation(line: 1516, column: 26, scope: !5253)
!5285 = !DILocation(line: 1516, column: 32, scope: !5253)
!5286 = !DILocation(line: 1516, column: 39, scope: !5253)
!5287 = !DILocation(line: 1516, column: 6, scope: !5253)
!5288 = !DILocation(line: 1516, column: 12, scope: !5253)
!5289 = !DILocation(line: 1518, column: 24, scope: !5253)
!5290 = !DILocation(line: 1518, column: 29, scope: !5253)
!5291 = !DILocation(line: 1518, column: 42, scope: !5253)
!5292 = !DILocation(line: 1518, column: 48, scope: !5253)
!5293 = !DILocation(line: 1518, column: 6, scope: !5253)
!5294 = !DILocation(line: 1520, column: 17, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1520, column: 10)
!5296 = !DILocation(line: 1520, column: 23, scope: !5295)
!5297 = !DILocation(line: 1520, column: 31, scope: !5295)
!5298 = !DILocation(line: 1520, column: 30, scope: !5295)
!5299 = !DILocation(line: 1520, column: 37, scope: !5295)
!5300 = !DILocation(line: 1520, column: 21, scope: !5295)
!5301 = !DILocation(line: 1520, column: 10, scope: !5253)
!5302 = !DILocation(line: 1521, column: 18, scope: !5303)
!5303 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 1520, column: 44)
!5304 = !DILocation(line: 1521, column: 26, scope: !5303)
!5305 = !DILocation(line: 1521, column: 25, scope: !5303)
!5306 = !DILocation(line: 1521, column: 32, scope: !5303)
!5307 = !DILocation(line: 1521, column: 47, scope: !5303)
!5308 = !DILocation(line: 1521, column: 7, scope: !5303)
!5309 = !DILocation(line: 1522, column: 36, scope: !5303)
!5310 = !DILocation(line: 1522, column: 7, scope: !5303)
!5311 = !DILocation(line: 1522, column: 15, scope: !5303)
!5312 = !DILocation(line: 1522, column: 14, scope: !5303)
!5313 = !DILocation(line: 1522, column: 21, scope: !5303)
!5314 = !DILocation(line: 1522, column: 27, scope: !5303)
!5315 = !DILocation(line: 1523, column: 6, scope: !5303)
!5316 = !DILocation(line: 1524, column: 5, scope: !5253)
!5317 = !DILocation(line: 1510, column: 33, scope: !5248)
!5318 = !DILocation(line: 1510, column: 5, scope: !5248)
!5319 = distinct !{!5319, !5251, !5320}
!5320 = !DILocation(line: 1524, column: 5, scope: !5245)
!5321 = !DILocation(line: 1525, column: 4, scope: !5234)
!5322 = !DILocation(line: 1506, column: 33, scope: !5229)
!5323 = !DILocation(line: 1506, column: 4, scope: !5229)
!5324 = distinct !{!5324, !5232, !5325}
!5325 = !DILocation(line: 1525, column: 4, scope: !5226)
!5326 = !DILocation(line: 1526, column: 24, scope: !5219)
!5327 = !DILocation(line: 1526, column: 4, scope: !5219)
!5328 = !DILocation(line: 1527, column: 3, scope: !5219)
!5329 = !DILocation(line: 1528, column: 12, scope: !5330)
!5330 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 1528, column: 12)
!5331 = !DILocation(line: 1528, column: 21, scope: !5330)
!5332 = !DILocation(line: 1528, column: 28, scope: !5330)
!5333 = !DILocation(line: 1528, column: 12, scope: !5214)
!5334 = !DILocalVariable(name: "f_data", scope: !5335, file: !3, line: 1529, type: !183)
!5335 = distinct !DILexicalBlock(scope: !5330, file: !3, line: 1528, column: 62)
!5336 = !DILocation(line: 1529, column: 22, scope: !5335)
!5337 = !DILocation(line: 1529, column: 51, scope: !5335)
!5338 = !DILocation(line: 1529, column: 58, scope: !5335)
!5339 = !DILocation(line: 1529, column: 31, scope: !5335)
!5340 = !DILocalVariable(name: "samples", scope: !5335, file: !3, line: 1530, type: !135)
!5341 = !DILocation(line: 1530, column: 8, scope: !5335)
!5342 = !DILocation(line: 1530, column: 19, scope: !5335)
!5343 = !DILocation(line: 1530, column: 28, scope: !5335)
!5344 = !DILocation(line: 1530, column: 34, scope: !5335)
!5345 = !DILocation(line: 1530, column: 18, scope: !5335)
!5346 = !DILocation(line: 1535, column: 11, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5335, file: !3, line: 1535, column: 4)
!5348 = !DILocation(line: 1535, column: 9, scope: !5347)
!5349 = !DILocation(line: 1535, column: 16, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 1535, column: 4)
!5351 = !DILocation(line: 1535, column: 20, scope: !5350)
!5352 = !DILocation(line: 1535, column: 27, scope: !5350)
!5353 = !DILocation(line: 1535, column: 18, scope: !5350)
!5354 = !DILocation(line: 1535, column: 4, scope: !5347)
!5355 = !DILocalVariable(name: "uv", scope: !5356, file: !3, line: 1536, type: !5357)
!5356 = distinct !DILexicalBlock(scope: !5350, file: !3, line: 1535, column: 46)
!5357 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 288, elements: !5358)
!5358 = !{!5359}
!5359 = !DISubrange(count: 9)
!5360 = !DILocation(line: 1536, column: 11, scope: !5356)
!5361 = !DILocalVariable(name: "uv_final", scope: !5356, file: !3, line: 1537, type: !206)
!5362 = !DILocation(line: 1537, column: 11, scope: !5356)
!5363 = !DILocalVariable(name: "j", scope: !5356, file: !3, line: 1538, type: !135)
!5364 = !DILocation(line: 1538, column: 9, scope: !5356)
!5365 = !DILocalVariable(name: "texres", scope: !5356, file: !3, line: 1539, type: !5254)
!5366 = !DILocation(line: 1539, column: 15, scope: !5356)
!5367 = !DILocation(line: 1542, column: 12, scope: !5368)
!5368 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1542, column: 5)
!5369 = !DILocation(line: 1542, column: 10, scope: !5368)
!5370 = !DILocation(line: 1542, column: 17, scope: !5371)
!5371 = distinct !DILexicalBlock(scope: !5368, file: !3, line: 1542, column: 5)
!5372 = !DILocation(line: 1542, column: 19, scope: !5371)
!5373 = !DILocation(line: 1542, column: 5, scope: !5368)
!5374 = !DILocalVariable(name: "v", scope: !5375, file: !3, line: 1543, type: !135)
!5375 = distinct !DILexicalBlock(scope: !5371, file: !3, line: 1542, column: 29)
!5376 = !DILocation(line: 1543, column: 10, scope: !5375)
!5377 = !DILocation(line: 1543, column: 15, scope: !5375)
!5378 = !DILocation(line: 1543, column: 23, scope: !5375)
!5379 = !DILocation(line: 1543, column: 28, scope: !5375)
!5380 = !DILocation(line: 1543, column: 31, scope: !5375)
!5381 = !DILocation(line: 1543, column: 36, scope: !5375)
!5382 = !DILocation(line: 1543, column: 39, scope: !5375)
!5383 = !DILocation(line: 1543, column: 41, scope: !5375)
!5384 = !DILocation(line: 1543, column: 14, scope: !5375)
!5385 = !DILocation(line: 1543, column: 48, scope: !5375)
!5386 = !DILocation(line: 1543, column: 50, scope: !5375)
!5387 = !DILocation(line: 1543, column: 56, scope: !5375)
!5388 = !DILocation(line: 1544, column: 21, scope: !5375)
!5389 = !DILocation(line: 1544, column: 23, scope: !5375)
!5390 = !DILocation(line: 1544, column: 18, scope: !5375)
!5391 = !DILocation(line: 1544, column: 29, scope: !5375)
!5392 = !DILocation(line: 1544, column: 35, scope: !5375)
!5393 = !DILocation(line: 1544, column: 43, scope: !5375)
!5394 = !DILocation(line: 1544, column: 48, scope: !5375)
!5395 = !DILocation(line: 1544, column: 51, scope: !5375)
!5396 = !DILocation(line: 1544, column: 63, scope: !5375)
!5397 = !DILocation(line: 1544, column: 66, scope: !5375)
!5398 = !DILocation(line: 1544, column: 6, scope: !5375)
!5399 = !DILocation(line: 1545, column: 5, scope: !5375)
!5400 = !DILocation(line: 1542, column: 25, scope: !5371)
!5401 = !DILocation(line: 1542, column: 5, scope: !5371)
!5402 = distinct !{!5402, !5373, !5403}
!5403 = !DILocation(line: 1545, column: 5, scope: !5368)
!5404 = !DILocation(line: 1548, column: 22, scope: !5356)
!5405 = !DILocation(line: 1548, column: 33, scope: !5356)
!5406 = !DILocation(line: 1548, column: 41, scope: !5356)
!5407 = !DILocation(line: 1548, column: 49, scope: !5356)
!5408 = !DILocation(line: 1549, column: 22, scope: !5356)
!5409 = !DILocation(line: 1549, column: 30, scope: !5356)
!5410 = !DILocation(line: 1549, column: 49, scope: !5356)
!5411 = !DILocation(line: 1549, column: 53, scope: !5356)
!5412 = !DILocation(line: 1549, column: 51, scope: !5356)
!5413 = !DILocation(line: 1549, column: 62, scope: !5356)
!5414 = !DILocation(line: 1548, column: 5, scope: !5356)
!5415 = !DILocation(line: 1551, column: 19, scope: !5356)
!5416 = !DILocation(line: 1551, column: 31, scope: !5356)
!5417 = !DILocation(line: 1551, column: 38, scope: !5356)
!5418 = !DILocation(line: 1551, column: 5, scope: !5356)
!5419 = !DILocation(line: 1551, column: 17, scope: !5356)
!5420 = !DILocation(line: 1552, column: 19, scope: !5356)
!5421 = !DILocation(line: 1552, column: 31, scope: !5356)
!5422 = !DILocation(line: 1552, column: 38, scope: !5356)
!5423 = !DILocation(line: 1552, column: 5, scope: !5356)
!5424 = !DILocation(line: 1552, column: 17, scope: !5356)
!5425 = !DILocation(line: 1554, column: 23, scope: !5356)
!5426 = !DILocation(line: 1554, column: 28, scope: !5356)
!5427 = !DILocation(line: 1554, column: 53, scope: !5356)
!5428 = !DILocation(line: 1554, column: 5, scope: !5356)
!5429 = !DILocation(line: 1557, column: 16, scope: !5356)
!5430 = !DILocation(line: 1557, column: 23, scope: !5356)
!5431 = !DILocation(line: 1557, column: 26, scope: !5356)
!5432 = !DILocation(line: 1557, column: 41, scope: !5356)
!5433 = !DILocation(line: 1557, column: 5, scope: !5356)
!5434 = !DILocation(line: 1558, column: 30, scope: !5356)
!5435 = !DILocation(line: 1558, column: 5, scope: !5356)
!5436 = !DILocation(line: 1558, column: 12, scope: !5356)
!5437 = !DILocation(line: 1558, column: 15, scope: !5356)
!5438 = !DILocation(line: 1558, column: 21, scope: !5356)
!5439 = !DILocation(line: 1559, column: 4, scope: !5356)
!5440 = !DILocation(line: 1535, column: 42, scope: !5350)
!5441 = !DILocation(line: 1535, column: 4, scope: !5350)
!5442 = distinct !{!5442, !5354, !5443}
!5443 = !DILocation(line: 1559, column: 4, scope: !5347)
!5444 = !DILocation(line: 1560, column: 3, scope: !5335)
!5445 = !DILocation(line: 1561, column: 2, scope: !5170)
!5446 = !DILocation(line: 1563, column: 11, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 1563, column: 11)
!5448 = !DILocation(line: 1563, column: 20, scope: !5447)
!5449 = !DILocation(line: 1563, column: 36, scope: !5447)
!5450 = !DILocation(line: 1563, column: 11, scope: !5165)
!5451 = !DILocation(line: 1566, column: 7, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1566, column: 7)
!5453 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1563, column: 71)
!5454 = !DILocation(line: 1566, column: 16, scope: !5452)
!5455 = !DILocation(line: 1566, column: 23, scope: !5452)
!5456 = !DILocation(line: 1566, column: 7, scope: !5453)
!5457 = !DILocalVariable(name: "mloop", scope: !5458, file: !3, line: 1567, type: !5459)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1566, column: 55)
!5459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5460, size: 64)
!5460 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !2025, line: 91, baseType: !2074)
!5461 = !DILocation(line: 1567, column: 11, scope: !5458)
!5462 = !DILocation(line: 1567, column: 19, scope: !5458)
!5463 = !DILocation(line: 1567, column: 23, scope: !5458)
!5464 = !DILocation(line: 1567, column: 36, scope: !5458)
!5465 = !DILocalVariable(name: "numOfLoops", scope: !5458, file: !3, line: 1568, type: !135)
!5466 = !DILocation(line: 1568, column: 8, scope: !5458)
!5467 = !DILocation(line: 1568, column: 21, scope: !5458)
!5468 = !DILocation(line: 1568, column: 25, scope: !5458)
!5469 = !DILocation(line: 1568, column: 37, scope: !5458)
!5470 = !DILocalVariable(name: "col", scope: !5458, file: !3, line: 1569, type: !5471)
!5471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5472, size: 64)
!5472 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !2025, line: 76, baseType: !3532)
!5473 = !DILocation(line: 1569, column: 10, scope: !5458)
!5474 = !DILocation(line: 1569, column: 44, scope: !5458)
!5475 = !DILocation(line: 1569, column: 48, scope: !5458)
!5476 = !DILocation(line: 1569, column: 71, scope: !5458)
!5477 = !DILocation(line: 1569, column: 80, scope: !5458)
!5478 = !DILocation(line: 1569, column: 16, scope: !5458)
!5479 = !DILocation(line: 1570, column: 9, scope: !5480)
!5480 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1570, column: 8)
!5481 = !DILocation(line: 1570, column: 8, scope: !5458)
!5482 = !DILocation(line: 1570, column: 14, scope: !5480)
!5483 = !DILocation(line: 1575, column: 11, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1575, column: 4)
!5485 = !DILocation(line: 1575, column: 9, scope: !5484)
!5486 = !DILocation(line: 1575, column: 16, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5484, file: !3, line: 1575, column: 4)
!5488 = !DILocation(line: 1575, column: 20, scope: !5487)
!5489 = !DILocation(line: 1575, column: 18, scope: !5487)
!5490 = !DILocation(line: 1575, column: 4, scope: !5484)
!5491 = !DILocation(line: 1576, column: 57, scope: !5492)
!5492 = distinct !DILexicalBlock(scope: !5487, file: !3, line: 1575, column: 37)
!5493 = !DILocation(line: 1576, column: 61, scope: !5492)
!5494 = !DILocation(line: 1576, column: 64, scope: !5492)
!5495 = !DILocation(line: 1576, column: 50, scope: !5492)
!5496 = !DILocation(line: 1576, column: 48, scope: !5492)
!5497 = !DILocation(line: 1576, column: 5, scope: !5492)
!5498 = !DILocation(line: 1576, column: 12, scope: !5492)
!5499 = !DILocation(line: 1576, column: 18, scope: !5492)
!5500 = !DILocation(line: 1576, column: 21, scope: !5492)
!5501 = !DILocation(line: 1576, column: 24, scope: !5492)
!5502 = !DILocation(line: 1576, column: 33, scope: !5492)
!5503 = !DILocation(line: 1577, column: 57, scope: !5492)
!5504 = !DILocation(line: 1577, column: 61, scope: !5492)
!5505 = !DILocation(line: 1577, column: 64, scope: !5492)
!5506 = !DILocation(line: 1577, column: 50, scope: !5492)
!5507 = !DILocation(line: 1577, column: 48, scope: !5492)
!5508 = !DILocation(line: 1577, column: 5, scope: !5492)
!5509 = !DILocation(line: 1577, column: 12, scope: !5492)
!5510 = !DILocation(line: 1577, column: 18, scope: !5492)
!5511 = !DILocation(line: 1577, column: 21, scope: !5492)
!5512 = !DILocation(line: 1577, column: 24, scope: !5492)
!5513 = !DILocation(line: 1577, column: 33, scope: !5492)
!5514 = !DILocation(line: 1578, column: 57, scope: !5492)
!5515 = !DILocation(line: 1578, column: 61, scope: !5492)
!5516 = !DILocation(line: 1578, column: 64, scope: !5492)
!5517 = !DILocation(line: 1578, column: 50, scope: !5492)
!5518 = !DILocation(line: 1578, column: 48, scope: !5492)
!5519 = !DILocation(line: 1578, column: 5, scope: !5492)
!5520 = !DILocation(line: 1578, column: 12, scope: !5492)
!5521 = !DILocation(line: 1578, column: 18, scope: !5492)
!5522 = !DILocation(line: 1578, column: 21, scope: !5492)
!5523 = !DILocation(line: 1578, column: 24, scope: !5492)
!5524 = !DILocation(line: 1578, column: 33, scope: !5492)
!5525 = !DILocation(line: 1579, column: 54, scope: !5492)
!5526 = !DILocation(line: 1579, column: 58, scope: !5492)
!5527 = !DILocation(line: 1579, column: 61, scope: !5492)
!5528 = !DILocation(line: 1579, column: 47, scope: !5492)
!5529 = !DILocation(line: 1579, column: 45, scope: !5492)
!5530 = !DILocation(line: 1579, column: 5, scope: !5492)
!5531 = !DILocation(line: 1579, column: 12, scope: !5492)
!5532 = !DILocation(line: 1579, column: 18, scope: !5492)
!5533 = !DILocation(line: 1579, column: 21, scope: !5492)
!5534 = !DILocation(line: 1579, column: 24, scope: !5492)
!5535 = !DILocation(line: 1579, column: 30, scope: !5492)
!5536 = !DILocation(line: 1580, column: 4, scope: !5492)
!5537 = !DILocation(line: 1575, column: 33, scope: !5487)
!5538 = !DILocation(line: 1575, column: 4, scope: !5487)
!5539 = distinct !{!5539, !5490, !5540}
!5540 = !DILocation(line: 1580, column: 4, scope: !5484)
!5541 = !DILocation(line: 1581, column: 3, scope: !5458)
!5542 = !DILocation(line: 1582, column: 12, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1582, column: 12)
!5544 = !DILocation(line: 1582, column: 21, scope: !5543)
!5545 = !DILocation(line: 1582, column: 28, scope: !5543)
!5546 = !DILocation(line: 1582, column: 12, scope: !5452)
!5547 = !DILocalVariable(name: "f_data", scope: !5548, file: !3, line: 1583, type: !183)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1582, column: 62)
!5549 = !DILocation(line: 1583, column: 22, scope: !5548)
!5550 = !DILocation(line: 1583, column: 51, scope: !5548)
!5551 = !DILocation(line: 1583, column: 58, scope: !5548)
!5552 = !DILocation(line: 1583, column: 31, scope: !5548)
!5553 = !DILocalVariable(name: "samples", scope: !5548, file: !3, line: 1584, type: !135)
!5554 = !DILocation(line: 1584, column: 8, scope: !5548)
!5555 = !DILocation(line: 1584, column: 19, scope: !5548)
!5556 = !DILocation(line: 1584, column: 28, scope: !5548)
!5557 = !DILocation(line: 1584, column: 34, scope: !5548)
!5558 = !DILocation(line: 1584, column: 18, scope: !5548)
!5559 = !DILocalVariable(name: "col", scope: !5548, file: !3, line: 1585, type: !5471)
!5560 = !DILocation(line: 1585, column: 10, scope: !5548)
!5561 = !DILocation(line: 1585, column: 44, scope: !5548)
!5562 = !DILocation(line: 1585, column: 48, scope: !5548)
!5563 = !DILocation(line: 1585, column: 67, scope: !5548)
!5564 = !DILocation(line: 1585, column: 76, scope: !5548)
!5565 = !DILocation(line: 1585, column: 16, scope: !5548)
!5566 = !DILocation(line: 1586, column: 9, scope: !5567)
!5567 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1586, column: 8)
!5568 = !DILocation(line: 1586, column: 8, scope: !5548)
!5569 = !DILocation(line: 1586, column: 14, scope: !5567)
!5570 = !DILocation(line: 1591, column: 11, scope: !5571)
!5571 = distinct !DILexicalBlock(scope: !5548, file: !3, line: 1591, column: 4)
!5572 = !DILocation(line: 1591, column: 9, scope: !5571)
!5573 = !DILocation(line: 1591, column: 16, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 1591, column: 4)
!5575 = !DILocation(line: 1591, column: 20, scope: !5574)
!5576 = !DILocation(line: 1591, column: 27, scope: !5574)
!5577 = !DILocation(line: 1591, column: 18, scope: !5574)
!5578 = !DILocation(line: 1591, column: 4, scope: !5571)
!5579 = !DILocalVariable(name: "face_ind", scope: !5580, file: !3, line: 1592, type: !135)
!5580 = distinct !DILexicalBlock(scope: !5574, file: !3, line: 1591, column: 46)
!5581 = !DILocation(line: 1592, column: 9, scope: !5580)
!5582 = !DILocation(line: 1592, column: 20, scope: !5580)
!5583 = !DILocation(line: 1592, column: 28, scope: !5580)
!5584 = !DILocation(line: 1592, column: 33, scope: !5580)
!5585 = !DILocation(line: 1592, column: 36, scope: !5580)
!5586 = !DILocalVariable(name: "colors", scope: !5580, file: !3, line: 1593, type: !5587)
!5587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 384, elements: !5588)
!5588 = !{!209, !640}
!5589 = !DILocation(line: 1593, column: 11, scope: !5580)
!5590 = !DILocalVariable(name: "final_color", scope: !5580, file: !3, line: 1594, type: !638)
!5591 = !DILocation(line: 1594, column: 11, scope: !5580)
!5592 = !DILocalVariable(name: "j", scope: !5580, file: !3, line: 1595, type: !135)
!5593 = !DILocation(line: 1595, column: 9, scope: !5580)
!5594 = !DILocation(line: 1597, column: 12, scope: !5595)
!5595 = distinct !DILexicalBlock(scope: !5580, file: !3, line: 1597, column: 5)
!5596 = !DILocation(line: 1597, column: 10, scope: !5595)
!5597 = !DILocation(line: 1597, column: 17, scope: !5598)
!5598 = distinct !DILexicalBlock(scope: !5595, file: !3, line: 1597, column: 5)
!5599 = !DILocation(line: 1597, column: 19, scope: !5598)
!5600 = !DILocation(line: 1597, column: 5, scope: !5595)
!5601 = !DILocalVariable(name: "v", scope: !5602, file: !3, line: 1598, type: !135)
!5602 = distinct !DILexicalBlock(scope: !5598, file: !3, line: 1597, column: 29)
!5603 = !DILocation(line: 1598, column: 10, scope: !5602)
!5604 = !DILocation(line: 1598, column: 15, scope: !5602)
!5605 = !DILocation(line: 1598, column: 23, scope: !5602)
!5606 = !DILocation(line: 1598, column: 28, scope: !5602)
!5607 = !DILocation(line: 1598, column: 31, scope: !5602)
!5608 = !DILocation(line: 1598, column: 36, scope: !5602)
!5609 = !DILocation(line: 1598, column: 39, scope: !5602)
!5610 = !DILocation(line: 1598, column: 41, scope: !5602)
!5611 = !DILocation(line: 1598, column: 14, scope: !5602)
!5612 = !DILocation(line: 1598, column: 48, scope: !5602)
!5613 = !DILocation(line: 1598, column: 50, scope: !5602)
!5614 = !DILocation(line: 1598, column: 56, scope: !5602)
!5615 = !DILocation(line: 1599, column: 43, scope: !5602)
!5616 = !DILocation(line: 1599, column: 47, scope: !5602)
!5617 = !DILocation(line: 1599, column: 56, scope: !5602)
!5618 = !DILocation(line: 1599, column: 62, scope: !5602)
!5619 = !DILocation(line: 1599, column: 60, scope: !5602)
!5620 = !DILocation(line: 1599, column: 65, scope: !5602)
!5621 = !DILocation(line: 1599, column: 36, scope: !5602)
!5622 = !DILocation(line: 1599, column: 34, scope: !5602)
!5623 = !DILocation(line: 1599, column: 13, scope: !5602)
!5624 = !DILocation(line: 1599, column: 6, scope: !5602)
!5625 = !DILocation(line: 1599, column: 19, scope: !5602)
!5626 = !DILocation(line: 1600, column: 43, scope: !5602)
!5627 = !DILocation(line: 1600, column: 47, scope: !5602)
!5628 = !DILocation(line: 1600, column: 56, scope: !5602)
!5629 = !DILocation(line: 1600, column: 62, scope: !5602)
!5630 = !DILocation(line: 1600, column: 60, scope: !5602)
!5631 = !DILocation(line: 1600, column: 65, scope: !5602)
!5632 = !DILocation(line: 1600, column: 36, scope: !5602)
!5633 = !DILocation(line: 1600, column: 34, scope: !5602)
!5634 = !DILocation(line: 1600, column: 13, scope: !5602)
!5635 = !DILocation(line: 1600, column: 6, scope: !5602)
!5636 = !DILocation(line: 1600, column: 19, scope: !5602)
!5637 = !DILocation(line: 1601, column: 43, scope: !5602)
!5638 = !DILocation(line: 1601, column: 47, scope: !5602)
!5639 = !DILocation(line: 1601, column: 56, scope: !5602)
!5640 = !DILocation(line: 1601, column: 62, scope: !5602)
!5641 = !DILocation(line: 1601, column: 60, scope: !5602)
!5642 = !DILocation(line: 1601, column: 65, scope: !5602)
!5643 = !DILocation(line: 1601, column: 36, scope: !5602)
!5644 = !DILocation(line: 1601, column: 34, scope: !5602)
!5645 = !DILocation(line: 1601, column: 13, scope: !5602)
!5646 = !DILocation(line: 1601, column: 6, scope: !5602)
!5647 = !DILocation(line: 1601, column: 19, scope: !5602)
!5648 = !DILocation(line: 1602, column: 43, scope: !5602)
!5649 = !DILocation(line: 1602, column: 47, scope: !5602)
!5650 = !DILocation(line: 1602, column: 56, scope: !5602)
!5651 = !DILocation(line: 1602, column: 62, scope: !5602)
!5652 = !DILocation(line: 1602, column: 60, scope: !5602)
!5653 = !DILocation(line: 1602, column: 65, scope: !5602)
!5654 = !DILocation(line: 1602, column: 36, scope: !5602)
!5655 = !DILocation(line: 1602, column: 34, scope: !5602)
!5656 = !DILocation(line: 1602, column: 13, scope: !5602)
!5657 = !DILocation(line: 1602, column: 6, scope: !5602)
!5658 = !DILocation(line: 1602, column: 19, scope: !5602)
!5659 = !DILocation(line: 1603, column: 5, scope: !5602)
!5660 = !DILocation(line: 1597, column: 25, scope: !5598)
!5661 = !DILocation(line: 1597, column: 5, scope: !5598)
!5662 = distinct !{!5662, !5600, !5663}
!5663 = !DILocation(line: 1603, column: 5, scope: !5595)
!5664 = !DILocation(line: 1606, column: 22, scope: !5580)
!5665 = !DILocation(line: 1606, column: 35, scope: !5580)
!5666 = !DILocation(line: 1606, column: 46, scope: !5580)
!5667 = !DILocation(line: 1606, column: 57, scope: !5580)
!5668 = !DILocation(line: 1607, column: 22, scope: !5580)
!5669 = !DILocation(line: 1607, column: 30, scope: !5580)
!5670 = !DILocation(line: 1607, column: 49, scope: !5580)
!5671 = !DILocation(line: 1607, column: 53, scope: !5580)
!5672 = !DILocation(line: 1607, column: 51, scope: !5580)
!5673 = !DILocation(line: 1607, column: 62, scope: !5580)
!5674 = !DILocation(line: 1606, column: 5, scope: !5580)
!5675 = !DILocation(line: 1609, column: 16, scope: !5580)
!5676 = !DILocation(line: 1609, column: 23, scope: !5580)
!5677 = !DILocation(line: 1609, column: 26, scope: !5580)
!5678 = !DILocation(line: 1609, column: 33, scope: !5580)
!5679 = !DILocation(line: 1609, column: 5, scope: !5580)
!5680 = !DILocation(line: 1610, column: 23, scope: !5580)
!5681 = !DILocation(line: 1610, column: 5, scope: !5580)
!5682 = !DILocation(line: 1610, column: 12, scope: !5580)
!5683 = !DILocation(line: 1610, column: 15, scope: !5580)
!5684 = !DILocation(line: 1610, column: 21, scope: !5580)
!5685 = !DILocation(line: 1611, column: 4, scope: !5580)
!5686 = !DILocation(line: 1591, column: 42, scope: !5574)
!5687 = !DILocation(line: 1591, column: 4, scope: !5574)
!5688 = distinct !{!5688, !5578, !5689}
!5689 = !DILocation(line: 1611, column: 4, scope: !5571)
!5690 = !DILocation(line: 1612, column: 3, scope: !5548)
!5691 = !DILocation(line: 1613, column: 2, scope: !5453)
!5692 = !DILocation(line: 1614, column: 1, scope: !5093)
!5693 = distinct !DISubprogram(name: "dynamicPaint_resetSurface", scope: !3, file: !3, line: 1642, type: !5694, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{!866, !4204, !242}
!5696 = !DILocalVariable(name: "scene", arg: 1, scope: !5693, file: !3, line: 1642, type: !4204)
!5697 = !DILocation(line: 1642, column: 39, scope: !5693)
!5698 = !DILocalVariable(name: "surface", arg: 2, scope: !5693, file: !3, line: 1642, type: !242)
!5699 = !DILocation(line: 1642, column: 67, scope: !5693)
!5700 = !DILocalVariable(name: "numOfPoints", scope: !5693, file: !3, line: 1644, type: !135)
!5701 = !DILocation(line: 1644, column: 6, scope: !5693)
!5702 = !DILocation(line: 1644, column: 52, scope: !5693)
!5703 = !DILocation(line: 1644, column: 20, scope: !5693)
!5704 = !DILocation(line: 1646, column: 6, scope: !5705)
!5705 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1646, column: 6)
!5706 = !DILocation(line: 1646, column: 15, scope: !5705)
!5707 = !DILocation(line: 1646, column: 6, scope: !5693)
!5708 = !DILocation(line: 1646, column: 50, scope: !5705)
!5709 = !DILocation(line: 1646, column: 21, scope: !5705)
!5710 = !DILocation(line: 1649, column: 6, scope: !5711)
!5711 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1649, column: 6)
!5712 = !DILocation(line: 1649, column: 15, scope: !5711)
!5713 = !DILocation(line: 1649, column: 22, scope: !5711)
!5714 = !DILocation(line: 1649, column: 6, scope: !5693)
!5715 = !DILocation(line: 1649, column: 56, scope: !5711)
!5716 = !DILocation(line: 1650, column: 6, scope: !5717)
!5717 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1650, column: 6)
!5718 = !DILocation(line: 1650, column: 18, scope: !5717)
!5719 = !DILocation(line: 1650, column: 6, scope: !5693)
!5720 = !DILocation(line: 1650, column: 23, scope: !5717)
!5721 = !DILocation(line: 1653, column: 18, scope: !5693)
!5722 = !DILocation(line: 1653, column: 2, scope: !5693)
!5723 = !DILocation(line: 1653, column: 11, scope: !5693)
!5724 = !DILocation(line: 1653, column: 16, scope: !5693)
!5725 = !DILocation(line: 1654, column: 7, scope: !5726)
!5726 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1654, column: 6)
!5727 = !DILocation(line: 1654, column: 16, scope: !5726)
!5728 = !DILocation(line: 1654, column: 6, scope: !5693)
!5729 = !DILocation(line: 1654, column: 22, scope: !5726)
!5730 = !DILocation(line: 1657, column: 32, scope: !5693)
!5731 = !DILocation(line: 1657, column: 2, scope: !5693)
!5732 = !DILocation(line: 1657, column: 11, scope: !5693)
!5733 = !DILocation(line: 1657, column: 17, scope: !5693)
!5734 = !DILocation(line: 1657, column: 30, scope: !5693)
!5735 = !DILocation(line: 1658, column: 35, scope: !5693)
!5736 = !DILocation(line: 1658, column: 2, scope: !5693)
!5737 = !DILocation(line: 1659, column: 33, scope: !5693)
!5738 = !DILocation(line: 1659, column: 2, scope: !5693)
!5739 = !DILocation(line: 1662, column: 6, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 1662, column: 6)
!5741 = !DILocation(line: 1662, column: 15, scope: !5740)
!5742 = !DILocation(line: 1662, column: 20, scope: !5740)
!5743 = !DILocation(line: 1662, column: 6, scope: !5693)
!5744 = !DILocation(line: 1663, column: 32, scope: !5740)
!5745 = !DILocation(line: 1663, column: 39, scope: !5740)
!5746 = !DILocation(line: 1663, column: 3, scope: !5740)
!5747 = !DILocation(line: 1665, column: 2, scope: !5693)
!5748 = !DILocation(line: 1666, column: 1, scope: !5693)
!5749 = distinct !DISubprogram(name: "dynamicPaint_surfaceNumOfPoints", scope: !3, file: !3, line: 243, type: !5750, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!135, !242}
!5752 = !DILocalVariable(name: "surface", arg: 1, scope: !5749, file: !3, line: 243, type: !242)
!5753 = !DILocation(line: 243, column: 65, scope: !5749)
!5754 = !DILocation(line: 245, column: 6, scope: !5755)
!5755 = distinct !DILexicalBlock(scope: !5749, file: !3, line: 245, column: 6)
!5756 = !DILocation(line: 245, column: 15, scope: !5755)
!5757 = !DILocation(line: 245, column: 22, scope: !5755)
!5758 = !DILocation(line: 245, column: 6, scope: !5749)
!5759 = !DILocation(line: 246, column: 3, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 245, column: 52)
!5761 = !DILocation(line: 248, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5755, file: !3, line: 248, column: 11)
!5763 = !DILocation(line: 248, column: 20, scope: !5762)
!5764 = !DILocation(line: 248, column: 27, scope: !5762)
!5765 = !DILocation(line: 248, column: 11, scope: !5755)
!5766 = !DILocation(line: 249, column: 8, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5768, file: !3, line: 249, column: 7)
!5768 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 248, column: 59)
!5769 = !DILocation(line: 249, column: 17, scope: !5767)
!5770 = !DILocation(line: 249, column: 25, scope: !5767)
!5771 = !DILocation(line: 249, column: 7, scope: !5768)
!5772 = !DILocation(line: 249, column: 29, scope: !5767)
!5773 = !DILocation(line: 250, column: 10, scope: !5768)
!5774 = !DILocation(line: 250, column: 19, scope: !5768)
!5775 = !DILocation(line: 250, column: 27, scope: !5768)
!5776 = !DILocation(line: 250, column: 31, scope: !5768)
!5777 = !DILocation(line: 250, column: 43, scope: !5768)
!5778 = !DILocation(line: 250, column: 52, scope: !5768)
!5779 = !DILocation(line: 250, column: 60, scope: !5768)
!5780 = !DILocation(line: 250, column: 3, scope: !5768)
!5781 = !DILocation(line: 253, column: 3, scope: !5762)
!5782 = !DILocation(line: 254, column: 1, scope: !5749)
!5783 = distinct !DISubprogram(name: "dynamicPaint_allocateSurfaceType", scope: !3, file: !3, line: 1307, type: !3807, scopeLine: 1308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5784 = !DILocalVariable(name: "surface", arg: 1, scope: !5783, file: !3, line: 1307, type: !242)
!5785 = !DILocation(line: 1307, column: 67, scope: !5783)
!5786 = !DILocalVariable(name: "sData", scope: !5783, file: !3, line: 1309, type: !3906)
!5787 = !DILocation(line: 1309, column: 20, scope: !5783)
!5788 = !DILocation(line: 1309, column: 28, scope: !5783)
!5789 = !DILocation(line: 1309, column: 37, scope: !5783)
!5790 = !DILocation(line: 1311, column: 10, scope: !5783)
!5791 = !DILocation(line: 1311, column: 19, scope: !5783)
!5792 = !DILocation(line: 1311, column: 2, scope: !5783)
!5793 = !DILocation(line: 1313, column: 23, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1311, column: 25)
!5795 = !DILocation(line: 1313, column: 56, scope: !5794)
!5796 = !DILocation(line: 1313, column: 63, scope: !5794)
!5797 = !DILocation(line: 1313, column: 54, scope: !5794)
!5798 = !DILocation(line: 1313, column: 4, scope: !5794)
!5799 = !DILocation(line: 1313, column: 11, scope: !5794)
!5800 = !DILocation(line: 1313, column: 21, scope: !5794)
!5801 = !DILocation(line: 1314, column: 4, scope: !5794)
!5802 = !DILocation(line: 1316, column: 23, scope: !5794)
!5803 = !DILocation(line: 1316, column: 51, scope: !5794)
!5804 = !DILocation(line: 1316, column: 58, scope: !5794)
!5805 = !DILocation(line: 1316, column: 49, scope: !5794)
!5806 = !DILocation(line: 1316, column: 4, scope: !5794)
!5807 = !DILocation(line: 1316, column: 11, scope: !5794)
!5808 = !DILocation(line: 1316, column: 21, scope: !5794)
!5809 = !DILocation(line: 1317, column: 4, scope: !5794)
!5810 = !DILocation(line: 1319, column: 23, scope: !5794)
!5811 = !DILocation(line: 1319, column: 51, scope: !5794)
!5812 = !DILocation(line: 1319, column: 58, scope: !5794)
!5813 = !DILocation(line: 1319, column: 49, scope: !5794)
!5814 = !DILocation(line: 1319, column: 4, scope: !5794)
!5815 = !DILocation(line: 1319, column: 11, scope: !5794)
!5816 = !DILocation(line: 1319, column: 21, scope: !5794)
!5817 = !DILocation(line: 1320, column: 4, scope: !5794)
!5818 = !DILocation(line: 1322, column: 23, scope: !5794)
!5819 = !DILocation(line: 1322, column: 60, scope: !5794)
!5820 = !DILocation(line: 1322, column: 67, scope: !5794)
!5821 = !DILocation(line: 1322, column: 58, scope: !5794)
!5822 = !DILocation(line: 1322, column: 4, scope: !5794)
!5823 = !DILocation(line: 1322, column: 11, scope: !5794)
!5824 = !DILocation(line: 1322, column: 21, scope: !5794)
!5825 = !DILocation(line: 1323, column: 4, scope: !5794)
!5826 = !DILocation(line: 1326, column: 6, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 1326, column: 6)
!5828 = !DILocation(line: 1326, column: 13, scope: !5827)
!5829 = !DILocation(line: 1326, column: 23, scope: !5827)
!5830 = !DILocation(line: 1326, column: 6, scope: !5783)
!5831 = !DILocation(line: 1326, column: 41, scope: !5827)
!5832 = !DILocation(line: 1326, column: 50, scope: !5827)
!5833 = !DILocation(line: 1326, column: 32, scope: !5827)
!5834 = !DILocation(line: 1327, column: 1, scope: !5783)
!5835 = distinct !DISubprogram(name: "dynamicPaint_initAdjacencyData", scope: !3, file: !3, line: 1350, type: !5836, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{null, !242, !135}
!5838 = !DILocalVariable(name: "surface", arg: 1, scope: !5835, file: !3, line: 1350, type: !242)
!5839 = !DILocation(line: 1350, column: 65, scope: !5835)
!5840 = !DILocalVariable(name: "force_init", arg: 2, scope: !5835, file: !3, line: 1350, type: !135)
!5841 = !DILocation(line: 1350, column: 78, scope: !5835)
!5842 = !DILocalVariable(name: "sData", scope: !5835, file: !3, line: 1352, type: !3906)
!5843 = !DILocation(line: 1352, column: 20, scope: !5835)
!5844 = !DILocation(line: 1352, column: 28, scope: !5835)
!5845 = !DILocation(line: 1352, column: 37, scope: !5835)
!5846 = !DILocalVariable(name: "dm", scope: !5835, file: !3, line: 1353, type: !2003)
!5847 = !DILocation(line: 1353, column: 15, scope: !5835)
!5848 = !DILocation(line: 1353, column: 20, scope: !5835)
!5849 = !DILocation(line: 1353, column: 29, scope: !5835)
!5850 = !DILocation(line: 1353, column: 37, scope: !5835)
!5851 = !DILocalVariable(name: "ad", scope: !5835, file: !3, line: 1354, type: !5852)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 64)
!5853 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintAdjData", file: !3, line: 230, baseType: !3138)
!5854 = !DILocation(line: 1354, column: 16, scope: !5835)
!5855 = !DILocalVariable(name: "temp_data", scope: !5835, file: !3, line: 1355, type: !211)
!5856 = !DILocation(line: 1355, column: 7, scope: !5835)
!5857 = !DILocalVariable(name: "neigh_points", scope: !5835, file: !3, line: 1356, type: !135)
!5858 = !DILocation(line: 1356, column: 6, scope: !5835)
!5859 = !DILocation(line: 1358, column: 27, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1358, column: 6)
!5861 = !DILocation(line: 1358, column: 7, scope: !5860)
!5862 = !DILocation(line: 1358, column: 36, scope: !5860)
!5863 = !DILocation(line: 1358, column: 40, scope: !5860)
!5864 = !DILocation(line: 1358, column: 6, scope: !5835)
!5865 = !DILocation(line: 1358, column: 52, scope: !5860)
!5866 = !DILocation(line: 1360, column: 6, scope: !5867)
!5867 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1360, column: 6)
!5868 = !DILocation(line: 1360, column: 15, scope: !5867)
!5869 = !DILocation(line: 1360, column: 22, scope: !5867)
!5870 = !DILocation(line: 1360, column: 6, scope: !5835)
!5871 = !DILocation(line: 1362, column: 22, scope: !5872)
!5872 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 1360, column: 54)
!5873 = !DILocation(line: 1362, column: 26, scope: !5872)
!5874 = !DILocation(line: 1362, column: 38, scope: !5872)
!5875 = !DILocation(line: 1362, column: 20, scope: !5872)
!5876 = !DILocation(line: 1362, column: 16, scope: !5872)
!5877 = !DILocation(line: 1363, column: 2, scope: !5872)
!5878 = !DILocation(line: 1364, column: 11, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5867, file: !3, line: 1364, column: 11)
!5880 = !DILocation(line: 1364, column: 20, scope: !5879)
!5881 = !DILocation(line: 1364, column: 27, scope: !5879)
!5882 = !DILocation(line: 1364, column: 11, scope: !5867)
!5883 = !DILocation(line: 1365, column: 18, scope: !5879)
!5884 = !DILocation(line: 1365, column: 25, scope: !5879)
!5885 = !DILocation(line: 1365, column: 38, scope: !5879)
!5886 = !DILocation(line: 1365, column: 16, scope: !5879)
!5887 = !DILocation(line: 1365, column: 3, scope: !5879)
!5888 = !DILocation(line: 1367, column: 7, scope: !5889)
!5889 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1367, column: 6)
!5890 = !DILocation(line: 1367, column: 6, scope: !5835)
!5891 = !DILocation(line: 1367, column: 21, scope: !5889)
!5892 = !DILocation(line: 1370, column: 25, scope: !5835)
!5893 = !DILocation(line: 1370, column: 7, scope: !5835)
!5894 = !DILocation(line: 1370, column: 14, scope: !5835)
!5895 = !DILocation(line: 1370, column: 23, scope: !5835)
!5896 = !DILocation(line: 1370, column: 5, scope: !5835)
!5897 = !DILocation(line: 1371, column: 7, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1371, column: 6)
!5899 = !DILocation(line: 1371, column: 6, scope: !5835)
!5900 = !DILocation(line: 1371, column: 11, scope: !5898)
!5901 = !DILocation(line: 1372, column: 16, scope: !5835)
!5902 = !DILocation(line: 1372, column: 42, scope: !5835)
!5903 = !DILocation(line: 1372, column: 49, scope: !5835)
!5904 = !DILocation(line: 1372, column: 40, scope: !5835)
!5905 = !DILocation(line: 1372, column: 2, scope: !5835)
!5906 = !DILocation(line: 1372, column: 6, scope: !5835)
!5907 = !DILocation(line: 1372, column: 14, scope: !5835)
!5908 = !DILocation(line: 1373, column: 14, scope: !5835)
!5909 = !DILocation(line: 1373, column: 40, scope: !5835)
!5910 = !DILocation(line: 1373, column: 47, scope: !5835)
!5911 = !DILocation(line: 1373, column: 38, scope: !5835)
!5912 = !DILocation(line: 1373, column: 2, scope: !5835)
!5913 = !DILocation(line: 1373, column: 6, scope: !5835)
!5914 = !DILocation(line: 1373, column: 12, scope: !5835)
!5915 = !DILocation(line: 1374, column: 14, scope: !5835)
!5916 = !DILocation(line: 1374, column: 40, scope: !5835)
!5917 = !DILocation(line: 1374, column: 47, scope: !5835)
!5918 = !DILocation(line: 1374, column: 38, scope: !5835)
!5919 = !DILocation(line: 1374, column: 12, scope: !5835)
!5920 = !DILocation(line: 1375, column: 17, scope: !5835)
!5921 = !DILocation(line: 1375, column: 43, scope: !5835)
!5922 = !DILocation(line: 1375, column: 41, scope: !5835)
!5923 = !DILocation(line: 1375, column: 2, scope: !5835)
!5924 = !DILocation(line: 1375, column: 6, scope: !5835)
!5925 = !DILocation(line: 1375, column: 15, scope: !5835)
!5926 = !DILocation(line: 1376, column: 14, scope: !5835)
!5927 = !DILocation(line: 1376, column: 40, scope: !5835)
!5928 = !DILocation(line: 1376, column: 47, scope: !5835)
!5929 = !DILocation(line: 1376, column: 38, scope: !5835)
!5930 = !DILocation(line: 1376, column: 2, scope: !5835)
!5931 = !DILocation(line: 1376, column: 6, scope: !5835)
!5932 = !DILocation(line: 1376, column: 12, scope: !5835)
!5933 = !DILocation(line: 1377, column: 22, scope: !5835)
!5934 = !DILocation(line: 1377, column: 2, scope: !5835)
!5935 = !DILocation(line: 1377, column: 6, scope: !5835)
!5936 = !DILocation(line: 1377, column: 20, scope: !5835)
!5937 = !DILocation(line: 1380, column: 7, scope: !5938)
!5938 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1380, column: 6)
!5939 = !DILocation(line: 1380, column: 11, scope: !5938)
!5940 = !DILocation(line: 1380, column: 19, scope: !5938)
!5941 = !DILocation(line: 1380, column: 23, scope: !5938)
!5942 = !DILocation(line: 1380, column: 27, scope: !5938)
!5943 = !DILocation(line: 1380, column: 33, scope: !5938)
!5944 = !DILocation(line: 1380, column: 37, scope: !5938)
!5945 = !DILocation(line: 1380, column: 41, scope: !5938)
!5946 = !DILocation(line: 1380, column: 50, scope: !5938)
!5947 = !DILocation(line: 1380, column: 54, scope: !5938)
!5948 = !DILocation(line: 1380, column: 6, scope: !5835)
!5949 = !DILocation(line: 1381, column: 28, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5938, file: !3, line: 1380, column: 65)
!5951 = !DILocation(line: 1381, column: 3, scope: !5950)
!5952 = !DILocation(line: 1382, column: 7, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 1382, column: 7)
!5954 = !DILocation(line: 1382, column: 7, scope: !5950)
!5955 = !DILocation(line: 1382, column: 18, scope: !5953)
!5956 = !DILocation(line: 1382, column: 28, scope: !5953)
!5957 = !DILocation(line: 1383, column: 12, scope: !5950)
!5958 = !DILocation(line: 1383, column: 21, scope: !5950)
!5959 = !DILocation(line: 1383, column: 3, scope: !5950)
!5960 = !DILocation(line: 1384, column: 3, scope: !5950)
!5961 = !DILocation(line: 1387, column: 6, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 1387, column: 6)
!5963 = !DILocation(line: 1387, column: 15, scope: !5962)
!5964 = !DILocation(line: 1387, column: 22, scope: !5962)
!5965 = !DILocation(line: 1387, column: 6, scope: !5835)
!5966 = !DILocalVariable(name: "i", scope: !5967, file: !3, line: 1388, type: !135)
!5967 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1387, column: 54)
!5968 = !DILocation(line: 1388, column: 7, scope: !5967)
!5969 = !DILocalVariable(name: "n_pos", scope: !5967, file: !3, line: 1389, type: !135)
!5970 = !DILocation(line: 1389, column: 7, scope: !5967)
!5971 = !DILocalVariable(name: "numOfEdges", scope: !5967, file: !3, line: 1392, type: !135)
!5972 = !DILocation(line: 1392, column: 7, scope: !5967)
!5973 = !DILocation(line: 1392, column: 20, scope: !5967)
!5974 = !DILocation(line: 1392, column: 24, scope: !5967)
!5975 = !DILocation(line: 1392, column: 36, scope: !5967)
!5976 = !DILocalVariable(name: "numOfPolys", scope: !5967, file: !3, line: 1393, type: !135)
!5977 = !DILocation(line: 1393, column: 7, scope: !5967)
!5978 = !DILocation(line: 1393, column: 20, scope: !5967)
!5979 = !DILocation(line: 1393, column: 24, scope: !5967)
!5980 = !DILocation(line: 1393, column: 36, scope: !5967)
!5981 = !DILocalVariable(name: "edge", scope: !5967, file: !3, line: 1394, type: !2035)
!5982 = !DILocation(line: 1394, column: 17, scope: !5967)
!5983 = !DILocation(line: 1394, column: 25, scope: !5967)
!5984 = !DILocation(line: 1394, column: 29, scope: !5967)
!5985 = !DILocation(line: 1394, column: 42, scope: !5967)
!5986 = !DILocalVariable(name: "mpoly", scope: !5967, file: !3, line: 1395, type: !2082)
!5987 = !DILocation(line: 1395, column: 17, scope: !5967)
!5988 = !DILocation(line: 1395, column: 25, scope: !5967)
!5989 = !DILocation(line: 1395, column: 29, scope: !5967)
!5990 = !DILocation(line: 1395, column: 42, scope: !5967)
!5991 = !DILocalVariable(name: "mloop", scope: !5967, file: !3, line: 1396, type: !2073)
!5992 = !DILocation(line: 1396, column: 17, scope: !5967)
!5993 = !DILocation(line: 1396, column: 25, scope: !5967)
!5994 = !DILocation(line: 1396, column: 29, scope: !5967)
!5995 = !DILocation(line: 1396, column: 42, scope: !5967)
!5996 = !DILocation(line: 1399, column: 10, scope: !5997)
!5997 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1399, column: 3)
!5998 = !DILocation(line: 1399, column: 8, scope: !5997)
!5999 = !DILocation(line: 1399, column: 15, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5997, file: !3, line: 1399, column: 3)
!6001 = !DILocation(line: 1399, column: 19, scope: !6000)
!6002 = !DILocation(line: 1399, column: 17, scope: !6000)
!6003 = !DILocation(line: 1399, column: 3, scope: !5997)
!6004 = !DILocation(line: 1400, column: 4, scope: !6005)
!6005 = distinct !DILexicalBlock(scope: !6000, file: !3, line: 1399, column: 36)
!6006 = !DILocation(line: 1400, column: 8, scope: !6005)
!6007 = !DILocation(line: 1400, column: 14, scope: !6005)
!6008 = !DILocation(line: 1400, column: 19, scope: !6005)
!6009 = !DILocation(line: 1400, column: 22, scope: !6005)
!6010 = !DILocation(line: 1400, column: 25, scope: !6005)
!6011 = !DILocation(line: 1401, column: 4, scope: !6005)
!6012 = !DILocation(line: 1401, column: 8, scope: !6005)
!6013 = !DILocation(line: 1401, column: 14, scope: !6005)
!6014 = !DILocation(line: 1401, column: 19, scope: !6005)
!6015 = !DILocation(line: 1401, column: 22, scope: !6005)
!6016 = !DILocation(line: 1401, column: 25, scope: !6005)
!6017 = !DILocation(line: 1403, column: 4, scope: !6005)
!6018 = !DILocation(line: 1403, column: 14, scope: !6005)
!6019 = !DILocation(line: 1403, column: 19, scope: !6005)
!6020 = !DILocation(line: 1403, column: 22, scope: !6005)
!6021 = !DILocation(line: 1403, column: 25, scope: !6005)
!6022 = !DILocation(line: 1404, column: 4, scope: !6005)
!6023 = !DILocation(line: 1404, column: 14, scope: !6005)
!6024 = !DILocation(line: 1404, column: 19, scope: !6005)
!6025 = !DILocation(line: 1404, column: 22, scope: !6005)
!6026 = !DILocation(line: 1404, column: 25, scope: !6005)
!6027 = !DILocation(line: 1405, column: 3, scope: !6005)
!6028 = !DILocation(line: 1399, column: 32, scope: !6000)
!6029 = !DILocation(line: 1399, column: 3, scope: !6000)
!6030 = distinct !{!6030, !6003, !6031}
!6031 = !DILocation(line: 1405, column: 3, scope: !5997)
!6032 = !DILocation(line: 1409, column: 10, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1409, column: 3)
!6034 = !DILocation(line: 1409, column: 8, scope: !6033)
!6035 = !DILocation(line: 1409, column: 15, scope: !6036)
!6036 = distinct !DILexicalBlock(scope: !6033, file: !3, line: 1409, column: 3)
!6037 = !DILocation(line: 1409, column: 19, scope: !6036)
!6038 = !DILocation(line: 1409, column: 17, scope: !6036)
!6039 = !DILocation(line: 1409, column: 3, scope: !6033)
!6040 = !DILocalVariable(name: "j", scope: !6041, file: !3, line: 1410, type: !135)
!6041 = distinct !DILexicalBlock(scope: !6036, file: !3, line: 1409, column: 36)
!6042 = !DILocation(line: 1410, column: 8, scope: !6041)
!6043 = !DILocation(line: 1411, column: 4, scope: !6041)
!6044 = !DILocation(line: 1411, column: 11, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6046, file: !3, line: 1411, column: 4)
!6046 = distinct !DILexicalBlock(scope: !6041, file: !3, line: 1411, column: 4)
!6047 = !DILocation(line: 1411, column: 15, scope: !6045)
!6048 = !DILocation(line: 1411, column: 21, scope: !6045)
!6049 = !DILocation(line: 1411, column: 24, scope: !6045)
!6050 = !DILocation(line: 1411, column: 13, scope: !6045)
!6051 = !DILocation(line: 1411, column: 4, scope: !6046)
!6052 = !DILocation(line: 1412, column: 5, scope: !6053)
!6053 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 1411, column: 38)
!6054 = !DILocation(line: 1412, column: 15, scope: !6053)
!6055 = !DILocation(line: 1412, column: 21, scope: !6053)
!6056 = !DILocation(line: 1412, column: 27, scope: !6053)
!6057 = !DILocation(line: 1412, column: 30, scope: !6053)
!6058 = !DILocation(line: 1412, column: 42, scope: !6053)
!6059 = !DILocation(line: 1412, column: 40, scope: !6053)
!6060 = !DILocation(line: 1412, column: 45, scope: !6053)
!6061 = !DILocation(line: 1412, column: 47, scope: !6053)
!6062 = !DILocation(line: 1413, column: 4, scope: !6053)
!6063 = !DILocation(line: 1411, column: 34, scope: !6045)
!6064 = !DILocation(line: 1411, column: 4, scope: !6045)
!6065 = distinct !{!6065, !6051, !6066}
!6066 = !DILocation(line: 1413, column: 4, scope: !6046)
!6067 = !DILocation(line: 1414, column: 3, scope: !6041)
!6068 = !DILocation(line: 1409, column: 32, scope: !6036)
!6069 = !DILocation(line: 1409, column: 3, scope: !6036)
!6070 = distinct !{!6070, !6039, !6071}
!6071 = !DILocation(line: 1414, column: 3, scope: !6033)
!6072 = !DILocation(line: 1418, column: 10, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1418, column: 3)
!6074 = !DILocation(line: 1418, column: 8, scope: !6073)
!6075 = !DILocation(line: 1418, column: 15, scope: !6076)
!6076 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1418, column: 3)
!6077 = !DILocation(line: 1418, column: 19, scope: !6076)
!6078 = !DILocation(line: 1418, column: 26, scope: !6076)
!6079 = !DILocation(line: 1418, column: 17, scope: !6076)
!6080 = !DILocation(line: 1418, column: 3, scope: !6073)
!6081 = !DILocation(line: 1419, column: 9, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6083, file: !3, line: 1419, column: 8)
!6083 = distinct !DILexicalBlock(scope: !6076, file: !3, line: 1418, column: 45)
!6084 = !DILocation(line: 1419, column: 19, scope: !6082)
!6085 = !DILocation(line: 1419, column: 22, scope: !6082)
!6086 = !DILocation(line: 1419, column: 27, scope: !6082)
!6087 = !DILocation(line: 1420, column: 9, scope: !6082)
!6088 = !DILocation(line: 1420, column: 19, scope: !6082)
!6089 = !DILocation(line: 1420, column: 22, scope: !6082)
!6090 = !DILocation(line: 1419, column: 8, scope: !6083)
!6091 = !DILocation(line: 1422, column: 5, scope: !6092)
!6092 = distinct !DILexicalBlock(scope: !6082, file: !3, line: 1421, column: 4)
!6093 = !DILocation(line: 1422, column: 9, scope: !6092)
!6094 = !DILocation(line: 1422, column: 15, scope: !6092)
!6095 = !DILocation(line: 1422, column: 18, scope: !6092)
!6096 = !DILocation(line: 1423, column: 4, scope: !6092)
!6097 = !DILocation(line: 1426, column: 4, scope: !6083)
!6098 = !DILocation(line: 1426, column: 14, scope: !6083)
!6099 = !DILocation(line: 1426, column: 17, scope: !6083)
!6100 = !DILocation(line: 1427, column: 3, scope: !6083)
!6101 = !DILocation(line: 1418, column: 41, scope: !6076)
!6102 = !DILocation(line: 1418, column: 3, scope: !6076)
!6103 = distinct !{!6103, !6080, !6104}
!6104 = !DILocation(line: 1427, column: 3, scope: !6073)
!6105 = !DILocation(line: 1430, column: 9, scope: !5967)
!6106 = !DILocation(line: 1431, column: 10, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1431, column: 3)
!6108 = !DILocation(line: 1431, column: 8, scope: !6107)
!6109 = !DILocation(line: 1431, column: 15, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 1431, column: 3)
!6111 = !DILocation(line: 1431, column: 19, scope: !6110)
!6112 = !DILocation(line: 1431, column: 26, scope: !6110)
!6113 = !DILocation(line: 1431, column: 17, scope: !6110)
!6114 = !DILocation(line: 1431, column: 3, scope: !6107)
!6115 = !DILocation(line: 1432, column: 21, scope: !6116)
!6116 = distinct !DILexicalBlock(scope: !6110, file: !3, line: 1431, column: 45)
!6117 = !DILocation(line: 1432, column: 4, scope: !6116)
!6118 = !DILocation(line: 1432, column: 8, scope: !6116)
!6119 = !DILocation(line: 1432, column: 16, scope: !6116)
!6120 = !DILocation(line: 1432, column: 19, scope: !6116)
!6121 = !DILocation(line: 1433, column: 13, scope: !6116)
!6122 = !DILocation(line: 1433, column: 17, scope: !6116)
!6123 = !DILocation(line: 1433, column: 23, scope: !6116)
!6124 = !DILocation(line: 1433, column: 10, scope: !6116)
!6125 = !DILocation(line: 1434, column: 3, scope: !6116)
!6126 = !DILocation(line: 1431, column: 41, scope: !6110)
!6127 = !DILocation(line: 1431, column: 3, scope: !6110)
!6128 = distinct !{!6128, !6114, !6129}
!6129 = !DILocation(line: 1434, column: 3, scope: !6107)
!6130 = !DILocation(line: 1437, column: 10, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !5967, file: !3, line: 1437, column: 3)
!6132 = !DILocation(line: 1437, column: 8, scope: !6131)
!6133 = !DILocation(line: 1437, column: 15, scope: !6134)
!6134 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 1437, column: 3)
!6135 = !DILocation(line: 1437, column: 19, scope: !6134)
!6136 = !DILocation(line: 1437, column: 17, scope: !6134)
!6137 = !DILocation(line: 1437, column: 3, scope: !6131)
!6138 = !DILocalVariable(name: "index", scope: !6139, file: !3, line: 1439, type: !135)
!6139 = distinct !DILexicalBlock(scope: !6134, file: !3, line: 1437, column: 36)
!6140 = !DILocation(line: 1439, column: 8, scope: !6139)
!6141 = !DILocation(line: 1439, column: 16, scope: !6139)
!6142 = !DILocation(line: 1439, column: 21, scope: !6139)
!6143 = !DILocation(line: 1439, column: 24, scope: !6139)
!6144 = !DILocation(line: 1440, column: 12, scope: !6139)
!6145 = !DILocation(line: 1440, column: 16, scope: !6139)
!6146 = !DILocation(line: 1440, column: 24, scope: !6139)
!6147 = !DILocation(line: 1440, column: 33, scope: !6139)
!6148 = !DILocation(line: 1440, column: 43, scope: !6139)
!6149 = !DILocation(line: 1440, column: 31, scope: !6139)
!6150 = !DILocation(line: 1440, column: 10, scope: !6139)
!6151 = !DILocation(line: 1441, column: 26, scope: !6139)
!6152 = !DILocation(line: 1441, column: 31, scope: !6139)
!6153 = !DILocation(line: 1441, column: 34, scope: !6139)
!6154 = !DILocation(line: 1441, column: 4, scope: !6139)
!6155 = !DILocation(line: 1441, column: 8, scope: !6139)
!6156 = !DILocation(line: 1441, column: 17, scope: !6139)
!6157 = !DILocation(line: 1441, column: 24, scope: !6139)
!6158 = !DILocation(line: 1442, column: 4, scope: !6139)
!6159 = !DILocation(line: 1442, column: 14, scope: !6139)
!6160 = !DILocation(line: 1442, column: 20, scope: !6139)
!6161 = !DILocation(line: 1445, column: 12, scope: !6139)
!6162 = !DILocation(line: 1445, column: 17, scope: !6139)
!6163 = !DILocation(line: 1445, column: 20, scope: !6139)
!6164 = !DILocation(line: 1445, column: 10, scope: !6139)
!6165 = !DILocation(line: 1446, column: 12, scope: !6139)
!6166 = !DILocation(line: 1446, column: 16, scope: !6139)
!6167 = !DILocation(line: 1446, column: 24, scope: !6139)
!6168 = !DILocation(line: 1446, column: 33, scope: !6139)
!6169 = !DILocation(line: 1446, column: 43, scope: !6139)
!6170 = !DILocation(line: 1446, column: 31, scope: !6139)
!6171 = !DILocation(line: 1446, column: 10, scope: !6139)
!6172 = !DILocation(line: 1447, column: 26, scope: !6139)
!6173 = !DILocation(line: 1447, column: 31, scope: !6139)
!6174 = !DILocation(line: 1447, column: 34, scope: !6139)
!6175 = !DILocation(line: 1447, column: 4, scope: !6139)
!6176 = !DILocation(line: 1447, column: 8, scope: !6139)
!6177 = !DILocation(line: 1447, column: 17, scope: !6139)
!6178 = !DILocation(line: 1447, column: 24, scope: !6139)
!6179 = !DILocation(line: 1448, column: 4, scope: !6139)
!6180 = !DILocation(line: 1448, column: 14, scope: !6139)
!6181 = !DILocation(line: 1448, column: 20, scope: !6139)
!6182 = !DILocation(line: 1449, column: 3, scope: !6139)
!6183 = !DILocation(line: 1437, column: 32, scope: !6134)
!6184 = !DILocation(line: 1437, column: 3, scope: !6134)
!6185 = distinct !{!6185, !6137, !6186}
!6186 = !DILocation(line: 1449, column: 3, scope: !6131)
!6187 = !DILocation(line: 1450, column: 2, scope: !5967)
!6188 = !DILocation(line: 1451, column: 11, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !5962, file: !3, line: 1451, column: 11)
!6190 = !DILocation(line: 1451, column: 20, scope: !6189)
!6191 = !DILocation(line: 1451, column: 27, scope: !6189)
!6192 = !DILocation(line: 1451, column: 11, scope: !5962)
!6193 = !DILocation(line: 1454, column: 2, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6189, file: !3, line: 1451, column: 61)
!6195 = !DILocation(line: 1456, column: 2, scope: !5835)
!6196 = !DILocation(line: 1456, column: 12, scope: !5835)
!6197 = !DILocation(line: 1457, column: 1, scope: !5835)
!6198 = distinct !DISubprogram(name: "dynamicPaint_cacheUpdateFrames", scope: !3, file: !3, line: 1940, type: !3807, scopeLine: 1941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!6199 = !DILocalVariable(name: "surface", arg: 1, scope: !6198, file: !3, line: 1940, type: !242)
!6200 = !DILocation(line: 1940, column: 58, scope: !6198)
!6201 = !DILocation(line: 1942, column: 6, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 1942, column: 6)
!6203 = !DILocation(line: 1942, column: 15, scope: !6202)
!6204 = !DILocation(line: 1942, column: 6, scope: !6198)
!6205 = !DILocation(line: 1943, column: 37, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6202, file: !3, line: 1942, column: 27)
!6207 = !DILocation(line: 1943, column: 46, scope: !6206)
!6208 = !DILocation(line: 1943, column: 3, scope: !6206)
!6209 = !DILocation(line: 1943, column: 12, scope: !6206)
!6210 = !DILocation(line: 1943, column: 24, scope: !6206)
!6211 = !DILocation(line: 1943, column: 35, scope: !6206)
!6212 = !DILocation(line: 1944, column: 35, scope: !6206)
!6213 = !DILocation(line: 1944, column: 44, scope: !6206)
!6214 = !DILocation(line: 1944, column: 3, scope: !6206)
!6215 = !DILocation(line: 1944, column: 12, scope: !6206)
!6216 = !DILocation(line: 1944, column: 24, scope: !6206)
!6217 = !DILocation(line: 1944, column: 33, scope: !6206)
!6218 = !DILocation(line: 1945, column: 2, scope: !6206)
!6219 = !DILocation(line: 1946, column: 1, scope: !6198)
!6220 = distinct !DISubprogram(name: "dynamicPaint_Modifier_do", scope: !3, file: !3, line: 2036, type: !6221, scopeLine: 2037, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!1933, !3242, !4204, !3426, !2003}
!6223 = !DILocalVariable(name: "pmd", arg: 1, scope: !6220, file: !3, line: 2036, type: !3242)
!6224 = !DILocation(line: 2036, column: 65, scope: !6220)
!6225 = !DILocalVariable(name: "scene", arg: 2, scope: !6220, file: !3, line: 2036, type: !4204)
!6226 = !DILocation(line: 2036, column: 77, scope: !6220)
!6227 = !DILocalVariable(name: "ob", arg: 3, scope: !6220, file: !3, line: 2036, type: !3426)
!6228 = !DILocation(line: 2036, column: 92, scope: !6220)
!6229 = !DILocalVariable(name: "dm", arg: 4, scope: !6220, file: !3, line: 2036, type: !2003)
!6230 = !DILocation(line: 2036, column: 109, scope: !6220)
!6231 = !DILocation(line: 2040, column: 21, scope: !6220)
!6232 = !DILocation(line: 2040, column: 2, scope: !6220)
!6233 = !DILocation(line: 2043, column: 27, scope: !6220)
!6234 = !DILocation(line: 2043, column: 32, scope: !6220)
!6235 = !DILocation(line: 2043, column: 39, scope: !6220)
!6236 = !DILocation(line: 2043, column: 43, scope: !6220)
!6237 = !DILocation(line: 2043, column: 2, scope: !6220)
!6238 = !DILocation(line: 2046, column: 37, scope: !6220)
!6239 = !DILocation(line: 2046, column: 42, scope: !6220)
!6240 = !DILocation(line: 2046, column: 46, scope: !6220)
!6241 = !DILocation(line: 2046, column: 9, scope: !6220)
!6242 = !DILocation(line: 2046, column: 2, scope: !6220)
!6243 = distinct !DISubprogram(name: "dynamicPaint_frameUpdate", scope: !3, file: !3, line: 1960, type: !6244, scopeLine: 1961, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!6244 = !DISubroutineType(types: !6245)
!6245 = !{null, !3242, !4204, !3426, !2003}
!6246 = !DILocalVariable(name: "pmd", arg: 1, scope: !6243, file: !3, line: 1960, type: !3242)
!6247 = !DILocation(line: 1960, column: 64, scope: !6243)
!6248 = !DILocalVariable(name: "scene", arg: 2, scope: !6243, file: !3, line: 1960, type: !4204)
!6249 = !DILocation(line: 1960, column: 76, scope: !6243)
!6250 = !DILocalVariable(name: "ob", arg: 3, scope: !6243, file: !3, line: 1960, type: !3426)
!6251 = !DILocation(line: 1960, column: 91, scope: !6243)
!6252 = !DILocalVariable(name: "dm", arg: 4, scope: !6243, file: !3, line: 1960, type: !2003)
!6253 = !DILocation(line: 1960, column: 108, scope: !6243)
!6254 = !DILocation(line: 1962, column: 6, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1962, column: 6)
!6256 = !DILocation(line: 1962, column: 11, scope: !6255)
!6257 = !DILocation(line: 1962, column: 6, scope: !6243)
!6258 = !DILocalVariable(name: "canvas", scope: !6259, file: !3, line: 1963, type: !3346)
!6259 = distinct !DILexicalBlock(scope: !6255, file: !3, line: 1962, column: 19)
!6260 = !DILocation(line: 1963, column: 31, scope: !6259)
!6261 = !DILocation(line: 1963, column: 40, scope: !6259)
!6262 = !DILocation(line: 1963, column: 45, scope: !6259)
!6263 = !DILocalVariable(name: "surface", scope: !6259, file: !3, line: 1964, type: !242)
!6264 = !DILocation(line: 1964, column: 24, scope: !6259)
!6265 = !DILocation(line: 1964, column: 34, scope: !6259)
!6266 = !DILocation(line: 1964, column: 42, scope: !6259)
!6267 = !DILocation(line: 1964, column: 51, scope: !6259)
!6268 = !DILocation(line: 1967, column: 26, scope: !6259)
!6269 = !DILocation(line: 1967, column: 34, scope: !6259)
!6270 = !DILocation(line: 1967, column: 3, scope: !6259)
!6271 = !DILocation(line: 1970, column: 7, scope: !6272)
!6272 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 1970, column: 7)
!6273 = !DILocation(line: 1970, column: 15, scope: !6272)
!6274 = !DILocation(line: 1970, column: 21, scope: !6272)
!6275 = !DILocation(line: 1970, column: 7, scope: !6259)
!6276 = !DILocation(line: 1970, column: 42, scope: !6272)
!6277 = !DILocation(line: 1973, column: 3, scope: !6259)
!6278 = !DILocation(line: 1973, column: 10, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6280, file: !3, line: 1973, column: 3)
!6280 = distinct !DILexicalBlock(scope: !6259, file: !3, line: 1973, column: 3)
!6281 = !DILocation(line: 1973, column: 3, scope: !6280)
!6282 = !DILocalVariable(name: "current_frame", scope: !6283, file: !3, line: 1974, type: !135)
!6283 = distinct !DILexicalBlock(scope: !6279, file: !3, line: 1973, column: 44)
!6284 = !DILocation(line: 1974, column: 8, scope: !6283)
!6285 = !DILocation(line: 1974, column: 29, scope: !6283)
!6286 = !DILocation(line: 1974, column: 36, scope: !6283)
!6287 = !DILocation(line: 1974, column: 38, scope: !6283)
!6288 = !DILocalVariable(name: "no_surface_data", scope: !6283, file: !3, line: 1975, type: !866)
!6289 = !DILocation(line: 1975, column: 9, scope: !6283)
!6290 = !DILocation(line: 1978, column: 27, scope: !6283)
!6291 = !DILocation(line: 1978, column: 4, scope: !6283)
!6292 = !DILocation(line: 1981, column: 8, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1981, column: 8)
!6294 = !DILocation(line: 1981, column: 17, scope: !6293)
!6295 = !DILocation(line: 1981, column: 24, scope: !6293)
!6296 = !DILocation(line: 1981, column: 8, scope: !6283)
!6297 = !DILocation(line: 1981, column: 58, scope: !6293)
!6298 = !DILocation(line: 1982, column: 10, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1982, column: 8)
!6300 = !DILocation(line: 1982, column: 19, scope: !6299)
!6301 = !DILocation(line: 1982, column: 25, scope: !6299)
!6302 = !DILocation(line: 1982, column: 8, scope: !6283)
!6303 = !DILocation(line: 1982, column: 47, scope: !6299)
!6304 = !DILocation(line: 1985, column: 22, scope: !6283)
!6305 = !DILocation(line: 1985, column: 31, scope: !6283)
!6306 = !DILocation(line: 1985, column: 36, scope: !6283)
!6307 = !DILocation(line: 1985, column: 20, scope: !6283)
!6308 = !DILocation(line: 1986, column: 39, scope: !6309)
!6309 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1986, column: 8)
!6310 = !DILocation(line: 1986, column: 46, scope: !6309)
!6311 = !DILocation(line: 1986, column: 9, scope: !6309)
!6312 = !DILocation(line: 1986, column: 8, scope: !6283)
!6313 = !DILocation(line: 1986, column: 56, scope: !6309)
!6314 = !DILocation(line: 1989, column: 4, scope: !6315)
!6315 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 1989, column: 4)
!6316 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1989, column: 4)
!6317 = !DILocation(line: 1989, column: 4, scope: !6316)
!6318 = !DILocation(line: 1989, column: 4, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6315, file: !3, line: 1989, column: 4)
!6320 = !DILocation(line: 1991, column: 8, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 1991, column: 8)
!6322 = !DILocation(line: 1991, column: 24, scope: !6321)
!6323 = !DILocation(line: 1991, column: 27, scope: !6321)
!6324 = !DILocation(line: 1991, column: 44, scope: !6321)
!6325 = !DILocation(line: 1991, column: 53, scope: !6321)
!6326 = !DILocation(line: 1991, column: 41, scope: !6321)
!6327 = !DILocation(line: 1991, column: 67, scope: !6321)
!6328 = !DILocation(line: 1991, column: 75, scope: !6321)
!6329 = !DILocation(line: 1991, column: 82, scope: !6321)
!6330 = !DILocation(line: 1991, column: 84, scope: !6321)
!6331 = !DILocation(line: 1991, column: 92, scope: !6321)
!6332 = !DILocation(line: 1991, column: 101, scope: !6321)
!6333 = !DILocation(line: 1991, column: 89, scope: !6321)
!6334 = !DILocation(line: 1991, column: 8, scope: !6283)
!6335 = !DILocalVariable(name: "cache", scope: !6336, file: !3, line: 1992, type: !6337)
!6336 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 1991, column: 114)
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 64)
!6338 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointCache", file: !1245, line: 209, baseType: !1398)
!6339 = !DILocation(line: 1992, column: 17, scope: !6336)
!6340 = !DILocation(line: 1992, column: 25, scope: !6336)
!6341 = !DILocation(line: 1992, column: 34, scope: !6336)
!6342 = !DILocalVariable(name: "pid", scope: !6336, file: !3, line: 1993, type: !6343)
!6343 = !DIDerivedType(tag: DW_TAG_typedef, name: "PTCacheID", file: !1424, line: 171, baseType: !1522)
!6344 = !DILocation(line: 1993, column: 15, scope: !6336)
!6345 = !DILocation(line: 1994, column: 30, scope: !6336)
!6346 = !DILocation(line: 1994, column: 5, scope: !6336)
!6347 = !DILocation(line: 1994, column: 14, scope: !6336)
!6348 = !DILocation(line: 1994, column: 28, scope: !6336)
!6349 = !DILocation(line: 1997, column: 44, scope: !6336)
!6350 = !DILocation(line: 1997, column: 48, scope: !6336)
!6351 = !DILocation(line: 1997, column: 5, scope: !6336)
!6352 = !DILocation(line: 1998, column: 29, scope: !6336)
!6353 = !DILocation(line: 1998, column: 38, scope: !6336)
!6354 = !DILocation(line: 1998, column: 9, scope: !6336)
!6355 = !DILocation(line: 1998, column: 16, scope: !6336)
!6356 = !DILocation(line: 1998, column: 27, scope: !6336)
!6357 = !DILocation(line: 1999, column: 27, scope: !6336)
!6358 = !DILocation(line: 1999, column: 36, scope: !6336)
!6359 = !DILocation(line: 1999, column: 9, scope: !6336)
!6360 = !DILocation(line: 1999, column: 16, scope: !6336)
!6361 = !DILocation(line: 1999, column: 25, scope: !6336)
!6362 = !DILocation(line: 2000, column: 31, scope: !6336)
!6363 = !DILocation(line: 2000, column: 45, scope: !6336)
!6364 = !DILocation(line: 2000, column: 52, scope: !6336)
!6365 = !DILocation(line: 2000, column: 54, scope: !6336)
!6366 = !DILocation(line: 2000, column: 38, scope: !6336)
!6367 = !DILocation(line: 2000, column: 5, scope: !6336)
!6368 = !DILocation(line: 2003, column: 14, scope: !6369)
!6369 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2003, column: 9)
!6370 = !DILocation(line: 2003, column: 21, scope: !6369)
!6371 = !DILocation(line: 2003, column: 23, scope: !6369)
!6372 = !DILocation(line: 2003, column: 31, scope: !6369)
!6373 = !DILocation(line: 2003, column: 40, scope: !6369)
!6374 = !DILocation(line: 2003, column: 28, scope: !6369)
!6375 = !DILocation(line: 2003, column: 52, scope: !6369)
!6376 = !DILocation(line: 2003, column: 57, scope: !6369)
!6377 = !DILocation(line: 2003, column: 64, scope: !6369)
!6378 = !DILocation(line: 2003, column: 69, scope: !6369)
!6379 = !DILocation(line: 2003, column: 9, scope: !6336)
!6380 = !DILocation(line: 2004, column: 6, scope: !6381)
!6381 = distinct !DILexicalBlock(scope: !6369, file: !3, line: 2003, column: 87)
!6382 = !DILocation(line: 2004, column: 13, scope: !6381)
!6383 = !DILocation(line: 2004, column: 18, scope: !6381)
!6384 = !DILocation(line: 2005, column: 27, scope: !6381)
!6385 = !DILocation(line: 2005, column: 6, scope: !6381)
!6386 = !DILocation(line: 2006, column: 6, scope: !6381)
!6387 = !DILocation(line: 2006, column: 13, scope: !6381)
!6388 = !DILocation(line: 2006, column: 18, scope: !6381)
!6389 = !DILocation(line: 2007, column: 5, scope: !6381)
!6390 = !DILocation(line: 2010, column: 39, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6336, file: !3, line: 2010, column: 9)
!6392 = !DILocation(line: 2010, column: 46, scope: !6391)
!6393 = !DILocation(line: 2010, column: 48, scope: !6391)
!6394 = !DILocation(line: 2010, column: 32, scope: !6391)
!6395 = !DILocation(line: 2010, column: 9, scope: !6391)
!6396 = !DILocation(line: 2010, column: 9, scope: !6336)
!6397 = !DILocation(line: 2011, column: 27, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2010, column: 55)
!6399 = !DILocation(line: 2011, column: 39, scope: !6398)
!6400 = !DILocation(line: 2011, column: 46, scope: !6398)
!6401 = !DILocation(line: 2011, column: 48, scope: !6398)
!6402 = !DILocation(line: 2011, column: 6, scope: !6398)
!6403 = !DILocation(line: 2012, column: 5, scope: !6398)
!6404 = !DILocation(line: 2014, column: 19, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 2014, column: 14)
!6406 = !DILocation(line: 2014, column: 26, scope: !6405)
!6407 = !DILocation(line: 2014, column: 28, scope: !6405)
!6408 = !DILocation(line: 2014, column: 36, scope: !6405)
!6409 = !DILocation(line: 2014, column: 33, scope: !6405)
!6410 = !DILocation(line: 2014, column: 50, scope: !6405)
!6411 = !DILocation(line: 2014, column: 55, scope: !6405)
!6412 = !DILocation(line: 2014, column: 62, scope: !6405)
!6413 = !DILocation(line: 2014, column: 67, scope: !6405)
!6414 = !DILocation(line: 2014, column: 14, scope: !6391)
!6415 = !DILocation(line: 2016, column: 6, scope: !6416)
!6416 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2014, column: 85)
!6417 = !DILocation(line: 2016, column: 14, scope: !6416)
!6418 = !DILocation(line: 2016, column: 20, scope: !6416)
!6419 = !DILocation(line: 2017, column: 34, scope: !6416)
!6420 = !DILocation(line: 2017, column: 43, scope: !6416)
!6421 = !DILocation(line: 2017, column: 50, scope: !6416)
!6422 = !DILocation(line: 2017, column: 54, scope: !6416)
!6423 = !DILocation(line: 2017, column: 6, scope: !6416)
!6424 = !DILocation(line: 2018, column: 6, scope: !6416)
!6425 = !DILocation(line: 2018, column: 14, scope: !6416)
!6426 = !DILocation(line: 2018, column: 20, scope: !6416)
!6427 = !DILocation(line: 2021, column: 10, scope: !6428)
!6428 = distinct !DILexicalBlock(scope: !6416, file: !3, line: 2021, column: 10)
!6429 = !DILocation(line: 2021, column: 19, scope: !6428)
!6430 = !DILocation(line: 2021, column: 24, scope: !6428)
!6431 = !DILocation(line: 2021, column: 57, scope: !6428)
!6432 = !DILocation(line: 2022, column: 10, scope: !6428)
!6433 = !DILocation(line: 2022, column: 19, scope: !6428)
!6434 = !DILocation(line: 2022, column: 25, scope: !6428)
!6435 = !DILocation(line: 2022, column: 55, scope: !6428)
!6436 = !DILocation(line: 2022, column: 58, scope: !6428)
!6437 = !DILocation(line: 2022, column: 67, scope: !6428)
!6438 = !DILocation(line: 2021, column: 10, scope: !6416)
!6439 = !DILocation(line: 2024, column: 30, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6428, file: !3, line: 2023, column: 6)
!6441 = !DILocation(line: 2024, column: 38, scope: !6440)
!6442 = !DILocation(line: 2024, column: 7, scope: !6440)
!6443 = !DILocation(line: 2025, column: 6, scope: !6440)
!6444 = !DILocation(line: 2027, column: 27, scope: !6416)
!6445 = !DILocation(line: 2027, column: 34, scope: !6416)
!6446 = !DILocation(line: 2027, column: 43, scope: !6416)
!6447 = !DILocation(line: 2027, column: 6, scope: !6416)
!6448 = !DILocation(line: 2028, column: 30, scope: !6416)
!6449 = !DILocation(line: 2028, column: 39, scope: !6416)
!6450 = !DILocation(line: 2028, column: 6, scope: !6416)
!6451 = !DILocation(line: 2029, column: 5, scope: !6416)
!6452 = !DILocation(line: 2030, column: 4, scope: !6336)
!6453 = !DILocation(line: 2031, column: 3, scope: !6283)
!6454 = !DILocation(line: 1973, column: 29, scope: !6279)
!6455 = !DILocation(line: 1973, column: 38, scope: !6279)
!6456 = !DILocation(line: 1973, column: 27, scope: !6279)
!6457 = !DILocation(line: 1973, column: 3, scope: !6279)
!6458 = distinct !{!6458, !6281, !6459}
!6459 = !DILocation(line: 2031, column: 3, scope: !6280)
!6460 = !DILocation(line: 2032, column: 2, scope: !6259)
!6461 = !DILocation(line: 2033, column: 1, scope: !6243)
!6462 = distinct !DISubprogram(name: "dynamicPaint_Modifier_apply", scope: !3, file: !3, line: 1712, type: !6463, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!6463 = !DISubroutineType(types: !6464)
!6464 = !{!2003, !3242, !3426, !2003}
!6465 = !DILocalVariable(name: "pmd", arg: 1, scope: !6462, file: !3, line: 1712, type: !3242)
!6466 = !DILocation(line: 1712, column: 75, scope: !6462)
!6467 = !DILocalVariable(name: "ob", arg: 2, scope: !6462, file: !3, line: 1713, type: !3426)
!6468 = !DILocation(line: 1713, column: 57, scope: !6462)
!6469 = !DILocalVariable(name: "dm", arg: 3, scope: !6462, file: !3, line: 1714, type: !2003)
!6470 = !DILocation(line: 1714, column: 62, scope: !6462)
!6471 = !DILocalVariable(name: "result", scope: !6462, file: !3, line: 1716, type: !2003)
!6472 = !DILocation(line: 1716, column: 15, scope: !6462)
!6473 = !DILocation(line: 1716, column: 34, scope: !6462)
!6474 = !DILocation(line: 1716, column: 24, scope: !6462)
!6475 = !DILocation(line: 1718, column: 6, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1718, column: 6)
!6477 = !DILocation(line: 1718, column: 11, scope: !6476)
!6478 = !DILocation(line: 1718, column: 18, scope: !6476)
!6479 = !DILocation(line: 1718, column: 23, scope: !6476)
!6480 = !DILocation(line: 1718, column: 28, scope: !6476)
!6481 = !DILocation(line: 1718, column: 36, scope: !6476)
!6482 = !DILocation(line: 1718, column: 42, scope: !6476)
!6483 = !DILocation(line: 1718, column: 6, scope: !6462)
!6484 = !DILocalVariable(name: "surface", scope: !6485, file: !3, line: 1720, type: !242)
!6485 = distinct !DILexicalBlock(scope: !6476, file: !3, line: 1718, column: 64)
!6486 = !DILocation(line: 1720, column: 24, scope: !6485)
!6487 = !DILocalVariable(name: "update_normals", scope: !6485, file: !3, line: 1721, type: !866)
!6488 = !DILocation(line: 1721, column: 8, scope: !6485)
!6489 = !DILocation(line: 1724, column: 18, scope: !6490)
!6490 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1724, column: 3)
!6491 = !DILocation(line: 1724, column: 23, scope: !6490)
!6492 = !DILocation(line: 1724, column: 31, scope: !6490)
!6493 = !DILocation(line: 1724, column: 40, scope: !6490)
!6494 = !DILocation(line: 1724, column: 16, scope: !6490)
!6495 = !DILocation(line: 1724, column: 8, scope: !6490)
!6496 = !DILocation(line: 1724, column: 47, scope: !6497)
!6497 = distinct !DILexicalBlock(scope: !6490, file: !3, line: 1724, column: 3)
!6498 = !DILocation(line: 1724, column: 3, scope: !6490)
!6499 = !DILocalVariable(name: "sData", scope: !6500, file: !3, line: 1725, type: !3906)
!6500 = distinct !DILexicalBlock(scope: !6497, file: !3, line: 1724, column: 81)
!6501 = !DILocation(line: 1725, column: 22, scope: !6500)
!6502 = !DILocation(line: 1725, column: 30, scope: !6500)
!6503 = !DILocation(line: 1725, column: 39, scope: !6500)
!6504 = !DILocation(line: 1727, column: 8, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 1727, column: 8)
!6506 = !DILocation(line: 1727, column: 17, scope: !6505)
!6507 = !DILocation(line: 1727, column: 24, scope: !6505)
!6508 = !DILocation(line: 1727, column: 57, scope: !6505)
!6509 = !DILocation(line: 1727, column: 60, scope: !6505)
!6510 = !DILocation(line: 1727, column: 8, scope: !6500)
!6511 = !DILocation(line: 1728, column: 11, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1728, column: 9)
!6513 = distinct !DILexicalBlock(scope: !6505, file: !3, line: 1727, column: 67)
!6514 = !DILocation(line: 1728, column: 20, scope: !6512)
!6515 = !DILocation(line: 1728, column: 26, scope: !6512)
!6516 = !DILocation(line: 1728, column: 9, scope: !6513)
!6517 = !DILocation(line: 1728, column: 50, scope: !6512)
!6518 = !DILocation(line: 1731, column: 9, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6513, file: !3, line: 1731, column: 9)
!6520 = !DILocation(line: 1731, column: 18, scope: !6519)
!6521 = !DILocation(line: 1731, column: 25, scope: !6519)
!6522 = !DILocation(line: 1731, column: 9, scope: !6513)
!6523 = !DILocation(line: 1734, column: 10, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1734, column: 10)
!6525 = distinct !DILexicalBlock(scope: !6519, file: !3, line: 1731, column: 57)
!6526 = !DILocation(line: 1734, column: 19, scope: !6524)
!6527 = !DILocation(line: 1734, column: 24, scope: !6524)
!6528 = !DILocation(line: 1734, column: 10, scope: !6525)
!6529 = !DILocalVariable(name: "i", scope: !6530, file: !3, line: 1736, type: !135)
!6530 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1734, column: 55)
!6531 = !DILocation(line: 1736, column: 11, scope: !6530)
!6532 = !DILocalVariable(name: "pPoint", scope: !6530, file: !3, line: 1737, type: !222)
!6533 = !DILocation(line: 1737, column: 19, scope: !6530)
!6534 = !DILocation(line: 1737, column: 42, scope: !6530)
!6535 = !DILocation(line: 1737, column: 49, scope: !6530)
!6536 = !DILocation(line: 1737, column: 28, scope: !6530)
!6537 = !DILocalVariable(name: "col", scope: !6530, file: !3, line: 1738, type: !6538)
!6538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6539, size: 64)
!6539 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !2025, line: 131, baseType: !3506)
!6540 = !DILocation(line: 1738, column: 17, scope: !6530)
!6541 = !DILocalVariable(name: "mloop", scope: !6530, file: !3, line: 1739, type: !5459)
!6542 = !DILocation(line: 1739, column: 14, scope: !6530)
!6543 = !DILocation(line: 1739, column: 37, scope: !6530)
!6544 = !DILocation(line: 1739, column: 22, scope: !6530)
!6545 = !DILocalVariable(name: "totloop", scope: !6530, file: !3, line: 1740, type: !135)
!6546 = !DILocation(line: 1740, column: 11, scope: !6530)
!6547 = !DILocation(line: 1740, column: 21, scope: !6530)
!6548 = !DILocation(line: 1740, column: 29, scope: !6530)
!6549 = !DILocalVariable(name: "fcolor", scope: !6530, file: !3, line: 1743, type: !233)
!6550 = !DILocation(line: 1743, column: 14, scope: !6530)
!6551 = !DILocation(line: 1743, column: 23, scope: !6530)
!6552 = !DILocation(line: 1743, column: 51, scope: !6530)
!6553 = !DILocation(line: 1743, column: 58, scope: !6530)
!6554 = !DILocation(line: 1743, column: 49, scope: !6530)
!6555 = !DILocation(line: 1743, column: 71, scope: !6530)
!6556 = !DILocation(line: 1748, column: 14, scope: !6557)
!6557 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1748, column: 7)
!6558 = !DILocation(line: 1748, column: 12, scope: !6557)
!6559 = !DILocation(line: 1748, column: 19, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6557, file: !3, line: 1748, column: 7)
!6561 = !DILocation(line: 1748, column: 23, scope: !6560)
!6562 = !DILocation(line: 1748, column: 30, scope: !6560)
!6563 = !DILocation(line: 1748, column: 21, scope: !6560)
!6564 = !DILocation(line: 1748, column: 7, scope: !6557)
!6565 = !DILocation(line: 1750, column: 20, scope: !6566)
!6566 = distinct !DILexicalBlock(scope: !6560, file: !3, line: 1748, column: 49)
!6567 = !DILocation(line: 1750, column: 27, scope: !6566)
!6568 = !DILocation(line: 1750, column: 30, scope: !6566)
!6569 = !DILocation(line: 1750, column: 37, scope: !6566)
!6570 = !DILocation(line: 1750, column: 44, scope: !6566)
!6571 = !DILocation(line: 1750, column: 47, scope: !6566)
!6572 = !DILocation(line: 1750, column: 54, scope: !6566)
!6573 = !DILocation(line: 1750, column: 61, scope: !6566)
!6574 = !DILocation(line: 1750, column: 64, scope: !6566)
!6575 = !DILocation(line: 1750, column: 73, scope: !6566)
!6576 = !DILocation(line: 1750, column: 80, scope: !6566)
!6577 = !DILocation(line: 1750, column: 83, scope: !6566)
!6578 = !DILocation(line: 1750, column: 93, scope: !6566)
!6579 = !DILocation(line: 1750, column: 100, scope: !6566)
!6580 = !DILocation(line: 1750, column: 102, scope: !6566)
!6581 = !DILocation(line: 1750, column: 8, scope: !6566)
!6582 = !DILocation(line: 1751, column: 7, scope: !6566)
!6583 = !DILocation(line: 1748, column: 45, scope: !6560)
!6584 = !DILocation(line: 1748, column: 7, scope: !6560)
!6585 = distinct !{!6585, !6564, !6586}
!6586 = !DILocation(line: 1751, column: 7, scope: !6557)
!6587 = !DILocation(line: 1754, column: 11, scope: !6588)
!6588 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1754, column: 11)
!6589 = !DILocation(line: 1754, column: 20, scope: !6588)
!6590 = !DILocation(line: 1754, column: 26, scope: !6588)
!6591 = !DILocation(line: 1754, column: 11, scope: !6530)
!6592 = !DILocalVariable(name: "mp", scope: !6593, file: !3, line: 1755, type: !6594)
!6593 = distinct !DILexicalBlock(scope: !6588, file: !3, line: 1754, column: 48)
!6594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6595, size: 64)
!6595 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !2025, line: 85, baseType: !2083)
!6596 = !DILocation(line: 1755, column: 15, scope: !6593)
!6597 = !DILocation(line: 1755, column: 35, scope: !6593)
!6598 = !DILocation(line: 1755, column: 20, scope: !6593)
!6599 = !DILocalVariable(name: "totpoly", scope: !6593, file: !3, line: 1756, type: !135)
!6600 = !DILocation(line: 1756, column: 12, scope: !6593)
!6601 = !DILocation(line: 1756, column: 22, scope: !6593)
!6602 = !DILocation(line: 1756, column: 30, scope: !6593)
!6603 = !DILocation(line: 1769, column: 36, scope: !6593)
!6604 = !DILocation(line: 1769, column: 44, scope: !6593)
!6605 = !DILocation(line: 1769, column: 14, scope: !6593)
!6606 = !DILocation(line: 1769, column: 12, scope: !6593)
!6607 = !DILocation(line: 1770, column: 13, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1770, column: 12)
!6609 = !DILocation(line: 1770, column: 12, scope: !6593)
!6610 = !DILocation(line: 1771, column: 37, scope: !6608)
!6611 = !DILocation(line: 1771, column: 45, scope: !6608)
!6612 = !DILocation(line: 1772, column: 42, scope: !6608)
!6613 = !DILocation(line: 1771, column: 15, scope: !6608)
!6614 = !DILocation(line: 1771, column: 13, scope: !6608)
!6615 = !DILocation(line: 1771, column: 9, scope: !6608)
!6616 = !DILocation(line: 1774, column: 12, scope: !6617)
!6617 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1774, column: 12)
!6618 = !DILocation(line: 1774, column: 12, scope: !6593)
!6619 = !DILocation(line: 1778, column: 16, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6621, file: !3, line: 1778, column: 9)
!6621 = distinct !DILexicalBlock(scope: !6617, file: !3, line: 1774, column: 17)
!6622 = !DILocation(line: 1778, column: 14, scope: !6620)
!6623 = !DILocation(line: 1778, column: 21, scope: !6624)
!6624 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 1778, column: 9)
!6625 = !DILocation(line: 1778, column: 25, scope: !6624)
!6626 = !DILocation(line: 1778, column: 23, scope: !6624)
!6627 = !DILocation(line: 1778, column: 9, scope: !6620)
!6628 = !DILocalVariable(name: "j", scope: !6629, file: !3, line: 1779, type: !135)
!6629 = distinct !DILexicalBlock(scope: !6624, file: !3, line: 1778, column: 39)
!6630 = !DILocation(line: 1779, column: 14, scope: !6629)
!6631 = !DILocalVariable(name: "material", scope: !6629, file: !3, line: 1780, type: !6632)
!6632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6633, size: 64)
!6633 = !DIDerivedType(tag: DW_TAG_typedef, name: "Material", file: !522, line: 203, baseType: !521)
!6634 = !DILocation(line: 1780, column: 20, scope: !6629)
!6635 = !DILocation(line: 1780, column: 53, scope: !6629)
!6636 = !DILocation(line: 1780, column: 57, scope: !6629)
!6637 = !DILocation(line: 1780, column: 60, scope: !6629)
!6638 = !DILocation(line: 1780, column: 63, scope: !6629)
!6639 = !DILocation(line: 1780, column: 70, scope: !6629)
!6640 = !DILocation(line: 1780, column: 31, scope: !6629)
!6641 = !DILocation(line: 1782, column: 10, scope: !6629)
!6642 = !DILocation(line: 1782, column: 17, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6644, file: !3, line: 1782, column: 10)
!6644 = distinct !DILexicalBlock(scope: !6629, file: !3, line: 1782, column: 10)
!6645 = !DILocation(line: 1782, column: 21, scope: !6643)
!6646 = !DILocation(line: 1782, column: 24, scope: !6643)
!6647 = !DILocation(line: 1782, column: 27, scope: !6643)
!6648 = !DILocation(line: 1782, column: 19, scope: !6643)
!6649 = !DILocation(line: 1782, column: 10, scope: !6644)
!6650 = !DILocalVariable(name: "l_index", scope: !6651, file: !3, line: 1783, type: !135)
!6651 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 1782, column: 41)
!6652 = !DILocation(line: 1783, column: 15, scope: !6651)
!6653 = !DILocation(line: 1783, column: 25, scope: !6651)
!6654 = !DILocation(line: 1783, column: 28, scope: !6651)
!6655 = !DILocation(line: 1783, column: 31, scope: !6651)
!6656 = !DILocation(line: 1783, column: 43, scope: !6651)
!6657 = !DILocation(line: 1783, column: 41, scope: !6651)
!6658 = !DILocalVariable(name: "v_index", scope: !6651, file: !3, line: 1784, type: !135)
!6659 = !DILocation(line: 1784, column: 15, scope: !6651)
!6660 = !DILocation(line: 1784, column: 25, scope: !6651)
!6661 = !DILocation(line: 1784, column: 31, scope: !6651)
!6662 = !DILocation(line: 1784, column: 40, scope: !6651)
!6663 = !DILocation(line: 1786, column: 15, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6651, file: !3, line: 1786, column: 15)
!6665 = !DILocation(line: 1786, column: 24, scope: !6664)
!6666 = !DILocation(line: 1786, column: 35, scope: !6664)
!6667 = !DILocation(line: 1786, column: 15, scope: !6651)
!6668 = !DILocalVariable(name: "c", scope: !6669, file: !3, line: 1787, type: !206)
!6669 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1786, column: 69)
!6670 = !DILocation(line: 1787, column: 18, scope: !6669)
!6671 = !DILocation(line: 1788, column: 20, scope: !6669)
!6672 = !DILocation(line: 1791, column: 12, scope: !6669)
!6673 = !DILocation(line: 1791, column: 16, scope: !6669)
!6674 = !DILocation(line: 1791, column: 25, scope: !6669)
!6675 = !DILocation(line: 1791, column: 27, scope: !6669)
!6676 = !DILocation(line: 1792, column: 16, scope: !6677)
!6677 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1792, column: 16)
!6678 = !DILocation(line: 1792, column: 16, scope: !6669)
!6679 = !DILocation(line: 1793, column: 20, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1792, column: 26)
!6681 = !DILocation(line: 1793, column: 30, scope: !6680)
!6682 = !DILocation(line: 1793, column: 13, scope: !6680)
!6683 = !DILocation(line: 1793, column: 18, scope: !6680)
!6684 = !DILocation(line: 1794, column: 20, scope: !6680)
!6685 = !DILocation(line: 1794, column: 30, scope: !6680)
!6686 = !DILocation(line: 1794, column: 13, scope: !6680)
!6687 = !DILocation(line: 1794, column: 18, scope: !6680)
!6688 = !DILocation(line: 1795, column: 20, scope: !6680)
!6689 = !DILocation(line: 1795, column: 30, scope: !6680)
!6690 = !DILocation(line: 1795, column: 13, scope: !6680)
!6691 = !DILocation(line: 1795, column: 18, scope: !6680)
!6692 = !DILocation(line: 1796, column: 12, scope: !6680)
!6693 = !DILocation(line: 1798, column: 13, scope: !6694)
!6694 = distinct !DILexicalBlock(scope: !6677, file: !3, line: 1797, column: 17)
!6695 = !DILocation(line: 1798, column: 18, scope: !6694)
!6696 = !DILocation(line: 1799, column: 13, scope: !6694)
!6697 = !DILocation(line: 1799, column: 18, scope: !6694)
!6698 = !DILocation(line: 1800, column: 13, scope: !6694)
!6699 = !DILocation(line: 1800, column: 18, scope: !6694)
!6700 = !DILocation(line: 1803, column: 27, scope: !6669)
!6701 = !DILocation(line: 1803, column: 30, scope: !6669)
!6702 = !DILocation(line: 1803, column: 34, scope: !6669)
!6703 = !DILocation(line: 1803, column: 41, scope: !6669)
!6704 = !DILocation(line: 1803, column: 51, scope: !6669)
!6705 = !DILocation(line: 1803, column: 58, scope: !6669)
!6706 = !DILocation(line: 1803, column: 66, scope: !6669)
!6707 = !DILocation(line: 1803, column: 12, scope: !6669)
!6708 = !DILocation(line: 1805, column: 49, scope: !6669)
!6709 = !DILocation(line: 1805, column: 53, scope: !6669)
!6710 = !DILocation(line: 1805, column: 62, scope: !6669)
!6711 = !DILocation(line: 1805, column: 65, scope: !6669)
!6712 = !DILocation(line: 1805, column: 12, scope: !6669)
!6713 = !DILocation(line: 1806, column: 11, scope: !6669)
!6714 = !DILocation(line: 1810, column: 37, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6664, file: !3, line: 1807, column: 16)
!6716 = !DILocation(line: 1810, column: 20, scope: !6715)
!6717 = !DILocation(line: 1810, column: 24, scope: !6715)
!6718 = !DILocation(line: 1810, column: 33, scope: !6715)
!6719 = !DILocation(line: 1810, column: 35, scope: !6715)
!6720 = !DILocation(line: 1809, column: 16, scope: !6715)
!6721 = !DILocation(line: 1809, column: 20, scope: !6715)
!6722 = !DILocation(line: 1809, column: 29, scope: !6715)
!6723 = !DILocation(line: 1809, column: 31, scope: !6715)
!6724 = !DILocation(line: 1808, column: 12, scope: !6715)
!6725 = !DILocation(line: 1808, column: 16, scope: !6715)
!6726 = !DILocation(line: 1808, column: 25, scope: !6715)
!6727 = !DILocation(line: 1808, column: 27, scope: !6715)
!6728 = !DILocation(line: 1811, column: 12, scope: !6715)
!6729 = !DILocation(line: 1811, column: 16, scope: !6715)
!6730 = !DILocation(line: 1811, column: 25, scope: !6715)
!6731 = !DILocation(line: 1811, column: 27, scope: !6715)
!6732 = !DILocation(line: 1813, column: 10, scope: !6651)
!6733 = !DILocation(line: 1782, column: 37, scope: !6643)
!6734 = !DILocation(line: 1782, column: 10, scope: !6643)
!6735 = distinct !{!6735, !6649, !6736}
!6736 = !DILocation(line: 1813, column: 10, scope: !6644)
!6737 = !DILocation(line: 1814, column: 9, scope: !6629)
!6738 = !DILocation(line: 1778, column: 35, scope: !6624)
!6739 = !DILocation(line: 1778, column: 9, scope: !6624)
!6740 = distinct !{!6740, !6627, !6741}
!6741 = !DILocation(line: 1814, column: 9, scope: !6620)
!6742 = !DILocation(line: 1815, column: 8, scope: !6621)
!6743 = !DILocation(line: 1816, column: 7, scope: !6593)
!6744 = !DILocation(line: 1822, column: 41, scope: !6530)
!6745 = !DILocation(line: 1822, column: 49, scope: !6530)
!6746 = !DILocation(line: 1822, column: 72, scope: !6530)
!6747 = !DILocation(line: 1822, column: 81, scope: !6530)
!6748 = !DILocation(line: 1822, column: 13, scope: !6530)
!6749 = !DILocation(line: 1822, column: 11, scope: !6530)
!6750 = !DILocation(line: 1824, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1824, column: 11)
!6752 = !DILocation(line: 1824, column: 16, scope: !6751)
!6753 = !DILocation(line: 1824, column: 50, scope: !6751)
!6754 = !DILocation(line: 1824, column: 59, scope: !6751)
!6755 = !DILocation(line: 1824, column: 19, scope: !6751)
!6756 = !DILocation(line: 1824, column: 11, scope: !6530)
!6757 = !DILocation(line: 1825, column: 42, scope: !6751)
!6758 = !DILocation(line: 1825, column: 50, scope: !6751)
!6759 = !DILocation(line: 1825, column: 90, scope: !6751)
!6760 = !DILocation(line: 1825, column: 99, scope: !6751)
!6761 = !DILocation(line: 1825, column: 108, scope: !6751)
!6762 = !DILocation(line: 1825, column: 14, scope: !6751)
!6763 = !DILocation(line: 1825, column: 12, scope: !6751)
!6764 = !DILocation(line: 1825, column: 8, scope: !6751)
!6765 = !DILocation(line: 1827, column: 11, scope: !6766)
!6766 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1827, column: 11)
!6767 = !DILocation(line: 1827, column: 11, scope: !6530)
!6768 = !DILocation(line: 1831, column: 15, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6770, file: !3, line: 1831, column: 8)
!6770 = distinct !DILexicalBlock(scope: !6766, file: !3, line: 1827, column: 16)
!6771 = !DILocation(line: 1831, column: 13, scope: !6769)
!6772 = !DILocation(line: 1831, column: 20, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 1831, column: 8)
!6774 = !DILocation(line: 1831, column: 24, scope: !6773)
!6775 = !DILocation(line: 1831, column: 22, scope: !6773)
!6776 = !DILocation(line: 1831, column: 8, scope: !6769)
!6777 = !DILocalVariable(name: "index", scope: !6778, file: !3, line: 1832, type: !135)
!6778 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 1831, column: 38)
!6779 = !DILocation(line: 1832, column: 13, scope: !6778)
!6780 = !DILocation(line: 1832, column: 21, scope: !6778)
!6781 = !DILocation(line: 1832, column: 27, scope: !6778)
!6782 = !DILocation(line: 1832, column: 30, scope: !6778)
!6783 = !DILocation(line: 1832, column: 32, scope: !6778)
!6784 = !DILocation(line: 1833, column: 46, scope: !6778)
!6785 = !DILocation(line: 1833, column: 50, scope: !6778)
!6786 = !DILocation(line: 1833, column: 53, scope: !6778)
!6787 = !DILocation(line: 1833, column: 57, scope: !6778)
!6788 = !DILocation(line: 1833, column: 64, scope: !6778)
!6789 = !DILocation(line: 1833, column: 9, scope: !6778)
!6790 = !DILocation(line: 1834, column: 20, scope: !6778)
!6791 = !DILocation(line: 1834, column: 9, scope: !6778)
!6792 = !DILocation(line: 1834, column: 13, scope: !6778)
!6793 = !DILocation(line: 1834, column: 16, scope: !6778)
!6794 = !DILocation(line: 1834, column: 18, scope: !6778)
!6795 = !DILocation(line: 1835, column: 8, scope: !6778)
!6796 = !DILocation(line: 1831, column: 34, scope: !6773)
!6797 = !DILocation(line: 1831, column: 8, scope: !6773)
!6798 = distinct !{!6798, !6776, !6799}
!6799 = !DILocation(line: 1835, column: 8, scope: !6769)
!6800 = !DILocation(line: 1836, column: 7, scope: !6770)
!6801 = !DILocation(line: 1838, column: 7, scope: !6530)
!6802 = !DILocation(line: 1838, column: 17, scope: !6530)
!6803 = !DILocation(line: 1841, column: 41, scope: !6530)
!6804 = !DILocation(line: 1841, column: 49, scope: !6530)
!6805 = !DILocation(line: 1841, column: 72, scope: !6530)
!6806 = !DILocation(line: 1841, column: 81, scope: !6530)
!6807 = !DILocation(line: 1841, column: 13, scope: !6530)
!6808 = !DILocation(line: 1841, column: 11, scope: !6530)
!6809 = !DILocation(line: 1843, column: 12, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1843, column: 11)
!6811 = !DILocation(line: 1843, column: 16, scope: !6810)
!6812 = !DILocation(line: 1843, column: 50, scope: !6810)
!6813 = !DILocation(line: 1843, column: 59, scope: !6810)
!6814 = !DILocation(line: 1843, column: 19, scope: !6810)
!6815 = !DILocation(line: 1843, column: 11, scope: !6530)
!6816 = !DILocation(line: 1844, column: 42, scope: !6810)
!6817 = !DILocation(line: 1844, column: 50, scope: !6810)
!6818 = !DILocation(line: 1844, column: 90, scope: !6810)
!6819 = !DILocation(line: 1844, column: 99, scope: !6810)
!6820 = !DILocation(line: 1844, column: 108, scope: !6810)
!6821 = !DILocation(line: 1844, column: 14, scope: !6810)
!6822 = !DILocation(line: 1844, column: 12, scope: !6810)
!6823 = !DILocation(line: 1844, column: 8, scope: !6810)
!6824 = !DILocation(line: 1846, column: 11, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 1846, column: 11)
!6826 = !DILocation(line: 1846, column: 11, scope: !6530)
!6827 = !DILocation(line: 1850, column: 15, scope: !6828)
!6828 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1850, column: 8)
!6829 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1846, column: 16)
!6830 = !DILocation(line: 1850, column: 13, scope: !6828)
!6831 = !DILocation(line: 1850, column: 20, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6828, file: !3, line: 1850, column: 8)
!6833 = !DILocation(line: 1850, column: 24, scope: !6832)
!6834 = !DILocation(line: 1850, column: 22, scope: !6832)
!6835 = !DILocation(line: 1850, column: 8, scope: !6828)
!6836 = !DILocalVariable(name: "index", scope: !6837, file: !3, line: 1851, type: !135)
!6837 = distinct !DILexicalBlock(scope: !6832, file: !3, line: 1850, column: 38)
!6838 = !DILocation(line: 1851, column: 13, scope: !6837)
!6839 = !DILocation(line: 1851, column: 21, scope: !6837)
!6840 = !DILocation(line: 1851, column: 27, scope: !6837)
!6841 = !DILocation(line: 1851, column: 30, scope: !6837)
!6842 = !DILocation(line: 1854, column: 28, scope: !6837)
!6843 = !DILocation(line: 1854, column: 17, scope: !6837)
!6844 = !DILocation(line: 1854, column: 21, scope: !6837)
!6845 = !DILocation(line: 1854, column: 24, scope: !6837)
!6846 = !DILocation(line: 1854, column: 26, scope: !6837)
!6847 = !DILocation(line: 1853, column: 13, scope: !6837)
!6848 = !DILocation(line: 1853, column: 17, scope: !6837)
!6849 = !DILocation(line: 1853, column: 20, scope: !6837)
!6850 = !DILocation(line: 1853, column: 22, scope: !6837)
!6851 = !DILocation(line: 1852, column: 9, scope: !6837)
!6852 = !DILocation(line: 1852, column: 13, scope: !6837)
!6853 = !DILocation(line: 1852, column: 16, scope: !6837)
!6854 = !DILocation(line: 1852, column: 18, scope: !6837)
!6855 = !DILocation(line: 1855, column: 9, scope: !6837)
!6856 = !DILocation(line: 1855, column: 13, scope: !6837)
!6857 = !DILocation(line: 1855, column: 16, scope: !6837)
!6858 = !DILocation(line: 1855, column: 18, scope: !6837)
!6859 = !DILocation(line: 1856, column: 8, scope: !6837)
!6860 = !DILocation(line: 1850, column: 34, scope: !6832)
!6861 = !DILocation(line: 1850, column: 8, scope: !6832)
!6862 = distinct !{!6862, !6835, !6863}
!6863 = !DILocation(line: 1856, column: 8, scope: !6828)
!6864 = !DILocation(line: 1857, column: 7, scope: !6829)
!6865 = !DILocation(line: 1860, column: 7, scope: !6530)
!6866 = !DILocation(line: 1860, column: 15, scope: !6530)
!6867 = !DILocation(line: 1860, column: 21, scope: !6530)
!6868 = !DILocation(line: 1861, column: 6, scope: !6530)
!6869 = !DILocation(line: 1863, column: 15, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6524, file: !3, line: 1863, column: 15)
!6871 = !DILocation(line: 1863, column: 24, scope: !6870)
!6872 = !DILocation(line: 1863, column: 29, scope: !6870)
!6873 = !DILocation(line: 1863, column: 15, scope: !6524)
!6874 = !DILocalVariable(name: "defgrp_index", scope: !6875, file: !3, line: 1864, type: !135)
!6875 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1863, column: 61)
!6876 = !DILocation(line: 1864, column: 11, scope: !6875)
!6877 = !DILocation(line: 1864, column: 46, scope: !6875)
!6878 = !DILocation(line: 1864, column: 50, scope: !6875)
!6879 = !DILocation(line: 1864, column: 59, scope: !6875)
!6880 = !DILocation(line: 1864, column: 26, scope: !6875)
!6881 = !DILocalVariable(name: "dvert", scope: !6875, file: !3, line: 1865, type: !6882)
!6882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6883, size: 64)
!6883 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !2025, line: 63, baseType: !2530)
!6884 = !DILocation(line: 1865, column: 20, scope: !6875)
!6885 = !DILocation(line: 1865, column: 28, scope: !6875)
!6886 = !DILocation(line: 1865, column: 36, scope: !6875)
!6887 = !DILocation(line: 1865, column: 53, scope: !6875)
!6888 = !DILocalVariable(name: "weight", scope: !6875, file: !3, line: 1866, type: !233)
!6889 = !DILocation(line: 1866, column: 14, scope: !6875)
!6890 = !DILocation(line: 1866, column: 32, scope: !6875)
!6891 = !DILocation(line: 1866, column: 39, scope: !6875)
!6892 = !DILocation(line: 1866, column: 23, scope: !6875)
!6893 = !DILocation(line: 1869, column: 11, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1869, column: 11)
!6895 = !DILocation(line: 1869, column: 20, scope: !6894)
!6896 = !DILocation(line: 1869, column: 26, scope: !6894)
!6897 = !DILocation(line: 1869, column: 11, scope: !6875)
!6898 = !DILocation(line: 1873, column: 30, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 1869, column: 48)
!6900 = !DILocation(line: 1873, column: 34, scope: !6899)
!6901 = !DILocation(line: 1873, column: 45, scope: !6899)
!6902 = !DILocation(line: 1873, column: 8, scope: !6899)
!6903 = !DILocation(line: 1874, column: 7, scope: !6899)
!6904 = !DILocation(line: 1877, column: 11, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1877, column: 11)
!6906 = !DILocation(line: 1877, column: 24, scope: !6905)
!6907 = !DILocation(line: 1877, column: 30, scope: !6905)
!6908 = !DILocation(line: 1877, column: 34, scope: !6905)
!6909 = !DILocation(line: 1877, column: 40, scope: !6905)
!6910 = !DILocation(line: 1877, column: 44, scope: !6905)
!6911 = !DILocation(line: 1877, column: 53, scope: !6905)
!6912 = !DILocation(line: 1877, column: 68, scope: !6905)
!6913 = !DILocation(line: 1877, column: 11, scope: !6875)
!6914 = !DILocation(line: 1878, column: 44, scope: !6905)
!6915 = !DILocation(line: 1878, column: 52, scope: !6905)
!6916 = !DILocation(line: 1879, column: 49, scope: !6905)
!6917 = !DILocation(line: 1879, column: 56, scope: !6905)
!6918 = !DILocation(line: 1879, column: 70, scope: !6905)
!6919 = !DILocation(line: 1879, column: 79, scope: !6905)
!6920 = !DILocation(line: 1878, column: 16, scope: !6905)
!6921 = !DILocation(line: 1878, column: 14, scope: !6905)
!6922 = !DILocation(line: 1878, column: 8, scope: !6905)
!6923 = !DILocation(line: 1880, column: 11, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6875, file: !3, line: 1880, column: 11)
!6925 = !DILocation(line: 1880, column: 24, scope: !6924)
!6926 = !DILocation(line: 1880, column: 30, scope: !6924)
!6927 = !DILocation(line: 1880, column: 33, scope: !6924)
!6928 = !DILocation(line: 1880, column: 11, scope: !6875)
!6929 = !DILocalVariable(name: "i", scope: !6930, file: !3, line: 1881, type: !135)
!6930 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 1880, column: 40)
!6931 = !DILocation(line: 1881, column: 12, scope: !6930)
!6932 = !DILocation(line: 1882, column: 15, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 1882, column: 8)
!6934 = !DILocation(line: 1882, column: 13, scope: !6933)
!6935 = !DILocation(line: 1882, column: 20, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6933, file: !3, line: 1882, column: 8)
!6937 = !DILocation(line: 1882, column: 24, scope: !6936)
!6938 = !DILocation(line: 1882, column: 31, scope: !6936)
!6939 = !DILocation(line: 1882, column: 22, scope: !6936)
!6940 = !DILocation(line: 1882, column: 8, scope: !6933)
!6941 = !DILocalVariable(name: "dv", scope: !6942, file: !3, line: 1883, type: !6882)
!6942 = distinct !DILexicalBlock(scope: !6936, file: !3, line: 1882, column: 50)
!6943 = !DILocation(line: 1883, column: 22, scope: !6942)
!6944 = !DILocation(line: 1883, column: 28, scope: !6942)
!6945 = !DILocation(line: 1883, column: 34, scope: !6942)
!6946 = !DILocalVariable(name: "def_weight", scope: !6942, file: !3, line: 1884, type: !6947)
!6947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6948, size: 64)
!6948 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !2025, line: 57, baseType: !2534)
!6949 = !DILocation(line: 1884, column: 24, scope: !6942)
!6950 = !DILocation(line: 1884, column: 56, scope: !6942)
!6951 = !DILocation(line: 1884, column: 60, scope: !6942)
!6952 = !DILocation(line: 1884, column: 37, scope: !6942)
!6953 = !DILocation(line: 1887, column: 14, scope: !6954)
!6954 = distinct !DILexicalBlock(scope: !6942, file: !3, line: 1887, column: 13)
!6955 = !DILocation(line: 1887, column: 25, scope: !6954)
!6956 = !DILocation(line: 1887, column: 34, scope: !6954)
!6957 = !DILocation(line: 1887, column: 38, scope: !6954)
!6958 = !DILocation(line: 1887, column: 45, scope: !6954)
!6959 = !DILocation(line: 1887, column: 48, scope: !6954)
!6960 = !DILocation(line: 1887, column: 13, scope: !6942)
!6961 = !DILocation(line: 1890, column: 14, scope: !6962)
!6962 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 1890, column: 14)
!6963 = distinct !DILexicalBlock(scope: !6954, file: !3, line: 1887, column: 58)
!6964 = !DILocation(line: 1890, column: 25, scope: !6962)
!6965 = !DILocation(line: 1890, column: 14, scope: !6963)
!6966 = !DILocation(line: 1891, column: 45, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6962, file: !3, line: 1890, column: 34)
!6968 = !DILocation(line: 1891, column: 49, scope: !6967)
!6969 = !DILocation(line: 1891, column: 24, scope: !6967)
!6970 = !DILocation(line: 1891, column: 22, scope: !6967)
!6971 = !DILocation(line: 1892, column: 10, scope: !6967)
!6972 = !DILocation(line: 1895, column: 31, scope: !6963)
!6973 = !DILocation(line: 1895, column: 38, scope: !6963)
!6974 = !DILocation(line: 1895, column: 10, scope: !6963)
!6975 = !DILocation(line: 1895, column: 22, scope: !6963)
!6976 = !DILocation(line: 1895, column: 29, scope: !6963)
!6977 = !DILocation(line: 1896, column: 9, scope: !6963)
!6978 = !DILocation(line: 1897, column: 8, scope: !6942)
!6979 = !DILocation(line: 1882, column: 46, scope: !6936)
!6980 = !DILocation(line: 1882, column: 8, scope: !6936)
!6981 = distinct !{!6981, !6940, !6982}
!6982 = !DILocation(line: 1897, column: 8, scope: !6933)
!6983 = !DILocation(line: 1898, column: 7, scope: !6930)
!6984 = !DILocation(line: 1899, column: 6, scope: !6875)
!6985 = !DILocation(line: 1901, column: 15, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 1901, column: 15)
!6987 = !DILocation(line: 1901, column: 24, scope: !6986)
!6988 = !DILocation(line: 1901, column: 29, scope: !6986)
!6989 = !DILocation(line: 1901, column: 15, scope: !6870)
!6990 = !DILocalVariable(name: "mvert", scope: !6991, file: !3, line: 1902, type: !3190)
!6991 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 1901, column: 59)
!6992 = !DILocation(line: 1902, column: 14, scope: !6991)
!6993 = !DILocation(line: 1902, column: 22, scope: !6991)
!6994 = !DILocation(line: 1902, column: 30, scope: !6991)
!6995 = !DILocation(line: 1902, column: 43, scope: !6991)
!6996 = !DILocalVariable(name: "i", scope: !6991, file: !3, line: 1903, type: !135)
!6997 = !DILocation(line: 1903, column: 11, scope: !6991)
!6998 = !DILocalVariable(name: "wPoint", scope: !6991, file: !3, line: 1904, type: !234)
!6999 = !DILocation(line: 1904, column: 23, scope: !6991)
!7000 = !DILocation(line: 1904, column: 50, scope: !6991)
!7001 = !DILocation(line: 1904, column: 57, scope: !6991)
!7002 = !DILocation(line: 1904, column: 32, scope: !6991)
!7003 = !DILocation(line: 1909, column: 14, scope: !7004)
!7004 = distinct !DILexicalBlock(scope: !6991, file: !3, line: 1909, column: 7)
!7005 = !DILocation(line: 1909, column: 12, scope: !7004)
!7006 = !DILocation(line: 1909, column: 19, scope: !7007)
!7007 = distinct !DILexicalBlock(scope: !7004, file: !3, line: 1909, column: 7)
!7008 = !DILocation(line: 1909, column: 23, scope: !7007)
!7009 = !DILocation(line: 1909, column: 30, scope: !7007)
!7010 = !DILocation(line: 1909, column: 21, scope: !7007)
!7011 = !DILocation(line: 1909, column: 7, scope: !7004)
!7012 = !DILocalVariable(name: "normal", scope: !7013, file: !3, line: 1910, type: !206)
!7013 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 1909, column: 49)
!7014 = !DILocation(line: 1910, column: 14, scope: !7013)
!7015 = !DILocation(line: 1911, column: 33, scope: !7013)
!7016 = !DILocation(line: 1911, column: 41, scope: !7013)
!7017 = !DILocation(line: 1911, column: 47, scope: !7013)
!7018 = !DILocation(line: 1911, column: 50, scope: !7013)
!7019 = !DILocation(line: 1911, column: 8, scope: !7013)
!7020 = !DILocation(line: 1912, column: 21, scope: !7013)
!7021 = !DILocation(line: 1912, column: 27, scope: !7013)
!7022 = !DILocation(line: 1912, column: 30, scope: !7013)
!7023 = !DILocation(line: 1912, column: 34, scope: !7013)
!7024 = !DILocation(line: 1912, column: 42, scope: !7013)
!7025 = !DILocation(line: 1912, column: 49, scope: !7013)
!7026 = !DILocation(line: 1912, column: 52, scope: !7013)
!7027 = !DILocation(line: 1912, column: 8, scope: !7013)
!7028 = !DILocation(line: 1913, column: 7, scope: !7013)
!7029 = !DILocation(line: 1909, column: 45, scope: !7007)
!7030 = !DILocation(line: 1909, column: 7, scope: !7007)
!7031 = distinct !{!7031, !7011, !7032}
!7032 = !DILocation(line: 1913, column: 7, scope: !7004)
!7033 = !DILocation(line: 1914, column: 22, scope: !6991)
!7034 = !DILocation(line: 1915, column: 6, scope: !6991)
!7035 = !DILocation(line: 1918, column: 10, scope: !7036)
!7036 = distinct !DILexicalBlock(scope: !6525, file: !3, line: 1918, column: 10)
!7037 = !DILocation(line: 1918, column: 19, scope: !7036)
!7038 = !DILocation(line: 1918, column: 24, scope: !7036)
!7039 = !DILocation(line: 1918, column: 10, scope: !6525)
!7040 = !DILocation(line: 1919, column: 41, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !7036, file: !3, line: 1918, column: 58)
!7042 = !DILocation(line: 1919, column: 50, scope: !7041)
!7043 = !DILocation(line: 1919, column: 7, scope: !7041)
!7044 = !DILocation(line: 1920, column: 22, scope: !7041)
!7045 = !DILocation(line: 1921, column: 6, scope: !7041)
!7046 = !DILocation(line: 1922, column: 5, scope: !6525)
!7047 = !DILocation(line: 1923, column: 4, scope: !6513)
!7048 = !DILocation(line: 1924, column: 3, scope: !6500)
!7049 = !DILocation(line: 1724, column: 66, scope: !6497)
!7050 = !DILocation(line: 1724, column: 75, scope: !6497)
!7051 = !DILocation(line: 1724, column: 64, scope: !6497)
!7052 = !DILocation(line: 1724, column: 3, scope: !6497)
!7053 = distinct !{!7053, !6498, !7054}
!7054 = !DILocation(line: 1924, column: 3, scope: !6490)
!7055 = !DILocation(line: 1926, column: 7, scope: !7056)
!7056 = distinct !DILexicalBlock(scope: !6485, file: !3, line: 1926, column: 7)
!7057 = !DILocation(line: 1926, column: 7, scope: !6485)
!7058 = !DILocation(line: 1927, column: 4, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !7056, file: !3, line: 1926, column: 23)
!7060 = !DILocation(line: 1927, column: 12, scope: !7059)
!7061 = !DILocation(line: 1927, column: 18, scope: !7059)
!7062 = !DILocation(line: 1928, column: 3, scope: !7059)
!7063 = !DILocation(line: 1929, column: 2, scope: !6485)
!7064 = !DILocation(line: 1931, column: 6, scope: !7065)
!7065 = distinct !DILexicalBlock(scope: !6462, file: !3, line: 1931, column: 6)
!7066 = !DILocation(line: 1931, column: 11, scope: !7065)
!7067 = !DILocation(line: 1931, column: 6, scope: !6462)
!7068 = !DILocation(line: 1932, column: 7, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 1932, column: 7)
!7070 = distinct !DILexicalBlock(scope: !7065, file: !3, line: 1931, column: 18)
!7071 = !DILocation(line: 1932, column: 12, scope: !7069)
!7072 = !DILocation(line: 1932, column: 19, scope: !7069)
!7073 = !DILocation(line: 1932, column: 7, scope: !7070)
!7074 = !DILocation(line: 1932, column: 23, scope: !7069)
!7075 = !DILocation(line: 1932, column: 28, scope: !7069)
!7076 = !DILocation(line: 1932, column: 35, scope: !7069)
!7077 = !DILocation(line: 1932, column: 39, scope: !7069)
!7078 = !DILocation(line: 1932, column: 47, scope: !7069)
!7079 = !DILocation(line: 1932, column: 52, scope: !7069)
!7080 = !DILocation(line: 1932, column: 59, scope: !7069)
!7081 = !DILocation(line: 1933, column: 30, scope: !7070)
!7082 = !DILocation(line: 1933, column: 20, scope: !7070)
!7083 = !DILocation(line: 1933, column: 3, scope: !7070)
!7084 = !DILocation(line: 1933, column: 8, scope: !7070)
!7085 = !DILocation(line: 1933, column: 15, scope: !7070)
!7086 = !DILocation(line: 1933, column: 18, scope: !7070)
!7087 = !DILocation(line: 1934, column: 2, scope: !7070)
!7088 = !DILocation(line: 1936, column: 9, scope: !6462)
!7089 = !DILocation(line: 1936, column: 2, scope: !6462)
!7090 = distinct !DISubprogram(name: "dynamicPaint_createUVSurface", scope: !3, file: !3, line: 2258, type: !7091, scopeLine: 2259, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!7091 = !DISubroutineType(types: !7092)
!7092 = !{!135, !4204, !242}
!7093 = !DILocalVariable(name: "scene", arg: 1, scope: !7090, file: !3, line: 2258, type: !4204)
!7094 = !DILocation(line: 2258, column: 41, scope: !7090)
!7095 = !DILocalVariable(name: "surface", arg: 2, scope: !7090, file: !3, line: 2258, type: !242)
!7096 = !DILocation(line: 2258, column: 69, scope: !7090)
!7097 = !DILocalVariable(name: "jitter5sample", scope: !7090, file: !3, line: 2261, type: !7098)
!7098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2009, size: 320, elements: !7099)
!7099 = !{!7100}
!7100 = !DISubrange(count: 10)
!7101 = !DILocation(line: 2261, column: 14, scope: !7090)
!7102 = !DILocalVariable(name: "ty", scope: !7090, file: !3, line: 2268, type: !135)
!7103 = !DILocation(line: 2268, column: 6, scope: !7090)
!7104 = !DILocalVariable(name: "w", scope: !7090, file: !3, line: 2269, type: !135)
!7105 = !DILocation(line: 2269, column: 6, scope: !7090)
!7106 = !DILocalVariable(name: "h", scope: !7090, file: !3, line: 2269, type: !135)
!7107 = !DILocation(line: 2269, column: 9, scope: !7090)
!7108 = !DILocalVariable(name: "numOfFaces", scope: !7090, file: !3, line: 2270, type: !135)
!7109 = !DILocation(line: 2270, column: 6, scope: !7090)
!7110 = !DILocalVariable(name: "uvname", scope: !7090, file: !3, line: 2271, type: !270)
!7111 = !DILocation(line: 2271, column: 7, scope: !7090)
!7112 = !DILocalVariable(name: "active_points", scope: !7090, file: !3, line: 2272, type: !135)
!7113 = !DILocation(line: 2272, column: 6, scope: !7090)
!7114 = !DILocalVariable(name: "error", scope: !7090, file: !3, line: 2273, type: !135)
!7115 = !DILocation(line: 2273, column: 6, scope: !7090)
!7116 = !DILocalVariable(name: "sData", scope: !7090, file: !3, line: 2275, type: !3906)
!7117 = !DILocation(line: 2275, column: 20, scope: !7090)
!7118 = !DILocalVariable(name: "canvas", scope: !7090, file: !3, line: 2276, type: !3346)
!7119 = !DILocation(line: 2276, column: 30, scope: !7090)
!7120 = !DILocation(line: 2276, column: 39, scope: !7090)
!7121 = !DILocation(line: 2276, column: 48, scope: !7090)
!7122 = !DILocalVariable(name: "dm", scope: !7090, file: !3, line: 2277, type: !2003)
!7123 = !DILocation(line: 2277, column: 15, scope: !7090)
!7124 = !DILocation(line: 2277, column: 20, scope: !7090)
!7125 = !DILocation(line: 2277, column: 28, scope: !7090)
!7126 = !DILocalVariable(name: "tempPoints", scope: !7090, file: !3, line: 2279, type: !188)
!7127 = !DILocation(line: 2279, column: 16, scope: !7090)
!7128 = !DILocalVariable(name: "tempWeights", scope: !7090, file: !3, line: 2280, type: !201)
!7129 = !DILocation(line: 2280, column: 9, scope: !7090)
!7130 = !DILocalVariable(name: "mface", scope: !7090, file: !3, line: 2281, type: !5181)
!7131 = !DILocation(line: 2281, column: 9, scope: !7090)
!7132 = !DILocalVariable(name: "tface", scope: !7090, file: !3, line: 2282, type: !5177)
!7133 = !DILocation(line: 2282, column: 10, scope: !7090)
!7134 = !DILocalVariable(name: "faceBB", scope: !7090, file: !3, line: 2283, type: !7135)
!7135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7136, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bounds2D", file: !3, line: 144, baseType: !214)
!7137 = !DILocation(line: 2283, column: 12, scope: !7090)
!7138 = !DILocalVariable(name: "final_index", scope: !7090, file: !3, line: 2284, type: !211)
!7139 = !DILocation(line: 2284, column: 7, scope: !7090)
!7140 = !DILocalVariable(name: "aa_samples", scope: !7090, file: !3, line: 2285, type: !135)
!7141 = !DILocation(line: 2285, column: 6, scope: !7090)
!7142 = !DILocation(line: 2287, column: 7, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2287, column: 6)
!7144 = !DILocation(line: 2287, column: 6, scope: !7090)
!7145 = !DILocation(line: 2288, column: 19, scope: !7143)
!7146 = !DILocation(line: 2288, column: 10, scope: !7143)
!7147 = !DILocation(line: 2288, column: 3, scope: !7143)
!7148 = !DILocation(line: 2289, column: 6, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2289, column: 6)
!7150 = !DILocation(line: 2289, column: 15, scope: !7149)
!7151 = !DILocation(line: 2289, column: 22, scope: !7149)
!7152 = !DILocation(line: 2289, column: 6, scope: !7090)
!7153 = !DILocation(line: 2290, column: 19, scope: !7149)
!7154 = !DILocation(line: 2290, column: 10, scope: !7149)
!7155 = !DILocation(line: 2290, column: 3, scope: !7149)
!7156 = !DILocation(line: 2292, column: 15, scope: !7090)
!7157 = !DILocation(line: 2292, column: 19, scope: !7090)
!7158 = !DILocation(line: 2292, column: 35, scope: !7090)
!7159 = !DILocation(line: 2292, column: 13, scope: !7090)
!7160 = !DILocation(line: 2293, column: 10, scope: !7090)
!7161 = !DILocation(line: 2293, column: 14, scope: !7090)
!7162 = !DILocation(line: 2293, column: 31, scope: !7090)
!7163 = !DILocation(line: 2293, column: 8, scope: !7090)
!7164 = !DILocation(line: 2296, column: 34, scope: !7090)
!7165 = !DILocation(line: 2296, column: 38, scope: !7090)
!7166 = !DILocation(line: 2296, column: 59, scope: !7090)
!7167 = !DILocation(line: 2296, column: 68, scope: !7090)
!7168 = !DILocation(line: 2296, column: 82, scope: !7090)
!7169 = !DILocation(line: 2296, column: 2, scope: !7090)
!7170 = !DILocation(line: 2297, column: 38, scope: !7090)
!7171 = !DILocation(line: 2297, column: 42, scope: !7090)
!7172 = !DILocation(line: 2297, column: 63, scope: !7090)
!7173 = !DILocation(line: 2297, column: 10, scope: !7090)
!7174 = !DILocation(line: 2297, column: 8, scope: !7090)
!7175 = !DILocation(line: 2300, column: 7, scope: !7176)
!7176 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2300, column: 6)
!7177 = !DILocation(line: 2300, column: 6, scope: !7090)
!7178 = !DILocation(line: 2301, column: 19, scope: !7176)
!7179 = !DILocation(line: 2301, column: 10, scope: !7176)
!7180 = !DILocation(line: 2301, column: 3, scope: !7176)
!7181 = !DILocation(line: 2302, column: 6, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2302, column: 6)
!7183 = !DILocation(line: 2302, column: 15, scope: !7182)
!7184 = !DILocation(line: 2302, column: 32, scope: !7182)
!7185 = !DILocation(line: 2302, column: 37, scope: !7182)
!7186 = !DILocation(line: 2302, column: 40, scope: !7182)
!7187 = !DILocation(line: 2302, column: 49, scope: !7182)
!7188 = !DILocation(line: 2302, column: 66, scope: !7182)
!7189 = !DILocation(line: 2302, column: 6, scope: !7090)
!7190 = !DILocation(line: 2303, column: 19, scope: !7182)
!7191 = !DILocation(line: 2303, column: 10, scope: !7182)
!7192 = !DILocation(line: 2303, column: 3, scope: !7182)
!7193 = !DILocation(line: 2305, column: 10, scope: !7090)
!7194 = !DILocation(line: 2305, column: 19, scope: !7090)
!7195 = !DILocation(line: 2305, column: 8, scope: !7090)
!7196 = !DILocation(line: 2305, column: 4, scope: !7090)
!7197 = !DILocation(line: 2310, column: 79, scope: !7090)
!7198 = !DILocation(line: 2310, column: 82, scope: !7090)
!7199 = !DILocation(line: 2310, column: 85, scope: !7090)
!7200 = !DILocation(line: 2310, column: 2, scope: !7090)
!7201 = !DILocation(line: 2313, column: 6, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2313, column: 6)
!7203 = !DILocation(line: 2313, column: 15, scope: !7202)
!7204 = !DILocation(line: 2313, column: 6, scope: !7090)
!7205 = !DILocation(line: 2313, column: 50, scope: !7202)
!7206 = !DILocation(line: 2313, column: 21, scope: !7202)
!7207 = !DILocation(line: 2314, column: 26, scope: !7090)
!7208 = !DILocation(line: 2314, column: 10, scope: !7090)
!7209 = !DILocation(line: 2314, column: 19, scope: !7090)
!7210 = !DILocation(line: 2314, column: 24, scope: !7090)
!7211 = !DILocation(line: 2314, column: 8, scope: !7090)
!7212 = !DILocation(line: 2315, column: 7, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2315, column: 6)
!7214 = !DILocation(line: 2315, column: 16, scope: !7213)
!7215 = !DILocation(line: 2315, column: 6, scope: !7090)
!7216 = !DILocation(line: 2316, column: 19, scope: !7213)
!7217 = !DILocation(line: 2316, column: 10, scope: !7213)
!7218 = !DILocation(line: 2316, column: 3, scope: !7213)
!7219 = !DILocation(line: 2318, column: 16, scope: !7090)
!7220 = !DILocation(line: 2318, column: 25, scope: !7090)
!7221 = !DILocation(line: 2318, column: 31, scope: !7090)
!7222 = !DILocation(line: 2318, column: 15, scope: !7090)
!7223 = !DILocation(line: 2318, column: 13, scope: !7090)
!7224 = !DILocation(line: 2319, column: 39, scope: !7090)
!7225 = !DILocation(line: 2319, column: 51, scope: !7090)
!7226 = !DILocation(line: 2319, column: 55, scope: !7090)
!7227 = !DILocation(line: 2319, column: 53, scope: !7090)
!7228 = !DILocation(line: 2319, column: 57, scope: !7090)
!7229 = !DILocation(line: 2319, column: 15, scope: !7090)
!7230 = !DILocation(line: 2319, column: 13, scope: !7090)
!7231 = !DILocation(line: 2320, column: 7, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2320, column: 6)
!7233 = !DILocation(line: 2320, column: 6, scope: !7090)
!7234 = !DILocation(line: 2320, column: 25, scope: !7232)
!7235 = !DILocation(line: 2320, column: 19, scope: !7232)
!7236 = !DILocation(line: 2322, column: 24, scope: !7090)
!7237 = !DILocation(line: 2322, column: 36, scope: !7090)
!7238 = !DILocation(line: 2322, column: 40, scope: !7090)
!7239 = !DILocation(line: 2322, column: 38, scope: !7090)
!7240 = !DILocation(line: 2322, column: 42, scope: !7090)
!7241 = !DILocation(line: 2322, column: 16, scope: !7090)
!7242 = !DILocation(line: 2322, column: 14, scope: !7090)
!7243 = !DILocation(line: 2323, column: 7, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2323, column: 6)
!7245 = !DILocation(line: 2323, column: 6, scope: !7090)
!7246 = !DILocation(line: 2323, column: 26, scope: !7244)
!7247 = !DILocation(line: 2323, column: 20, scope: !7244)
!7248 = !DILocation(line: 2325, column: 33, scope: !7090)
!7249 = !DILocation(line: 2325, column: 45, scope: !7090)
!7250 = !DILocation(line: 2325, column: 49, scope: !7090)
!7251 = !DILocation(line: 2325, column: 47, scope: !7090)
!7252 = !DILocation(line: 2325, column: 53, scope: !7090)
!7253 = !DILocation(line: 2325, column: 51, scope: !7090)
!7254 = !DILocation(line: 2325, column: 64, scope: !7090)
!7255 = !DILocation(line: 2325, column: 16, scope: !7090)
!7256 = !DILocation(line: 2325, column: 14, scope: !7090)
!7257 = !DILocation(line: 2326, column: 7, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2326, column: 6)
!7259 = !DILocation(line: 2326, column: 6, scope: !7090)
!7260 = !DILocation(line: 2326, column: 26, scope: !7258)
!7261 = !DILocation(line: 2326, column: 20, scope: !7258)
!7262 = !DILocation(line: 2332, column: 7, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2332, column: 6)
!7264 = !DILocation(line: 2332, column: 6, scope: !7090)
!7265 = !DILocation(line: 2333, column: 32, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 2332, column: 14)
!7267 = !DILocation(line: 2333, column: 44, scope: !7266)
!7268 = !DILocation(line: 2333, column: 55, scope: !7266)
!7269 = !DILocation(line: 2333, column: 12, scope: !7266)
!7270 = !DILocation(line: 2333, column: 10, scope: !7266)
!7271 = !DILocation(line: 2334, column: 8, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 2334, column: 7)
!7273 = !DILocation(line: 2334, column: 7, scope: !7266)
!7274 = !DILocation(line: 2334, column: 22, scope: !7272)
!7275 = !DILocation(line: 2334, column: 16, scope: !7272)
!7276 = !DILocation(line: 2335, column: 2, scope: !7266)
!7277 = !DILocation(line: 2337, column: 7, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2337, column: 6)
!7279 = !DILocation(line: 2337, column: 6, scope: !7090)
!7280 = !DILocation(line: 2338, column: 11, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 2338, column: 3)
!7282 = !DILocation(line: 2338, column: 8, scope: !7281)
!7283 = !DILocation(line: 2338, column: 16, scope: !7284)
!7284 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 2338, column: 3)
!7285 = !DILocation(line: 2338, column: 21, scope: !7284)
!7286 = !DILocation(line: 2338, column: 19, scope: !7284)
!7287 = !DILocation(line: 2338, column: 3, scope: !7281)
!7288 = !DILocalVariable(name: "numOfVert", scope: !7289, file: !3, line: 2339, type: !135)
!7289 = distinct !DILexicalBlock(scope: !7284, file: !3, line: 2338, column: 39)
!7290 = !DILocation(line: 2339, column: 8, scope: !7289)
!7291 = !DILocation(line: 2339, column: 21, scope: !7289)
!7292 = !DILocation(line: 2339, column: 27, scope: !7289)
!7293 = !DILocation(line: 2339, column: 31, scope: !7289)
!7294 = !DILocation(line: 2339, column: 20, scope: !7289)
!7295 = !DILocalVariable(name: "i", scope: !7289, file: !3, line: 2340, type: !135)
!7296 = !DILocation(line: 2340, column: 8, scope: !7289)
!7297 = !DILocation(line: 2342, column: 15, scope: !7289)
!7298 = !DILocation(line: 2342, column: 22, scope: !7289)
!7299 = !DILocation(line: 2342, column: 26, scope: !7289)
!7300 = !DILocation(line: 2342, column: 31, scope: !7289)
!7301 = !DILocation(line: 2342, column: 37, scope: !7289)
!7302 = !DILocation(line: 2342, column: 41, scope: !7289)
!7303 = !DILocation(line: 2342, column: 4, scope: !7289)
!7304 = !DILocation(line: 2343, column: 15, scope: !7289)
!7305 = !DILocation(line: 2343, column: 22, scope: !7289)
!7306 = !DILocation(line: 2343, column: 26, scope: !7289)
!7307 = !DILocation(line: 2343, column: 31, scope: !7289)
!7308 = !DILocation(line: 2343, column: 37, scope: !7289)
!7309 = !DILocation(line: 2343, column: 41, scope: !7289)
!7310 = !DILocation(line: 2343, column: 4, scope: !7289)
!7311 = !DILocation(line: 2345, column: 11, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7289, file: !3, line: 2345, column: 4)
!7313 = !DILocation(line: 2345, column: 9, scope: !7312)
!7314 = !DILocation(line: 2345, column: 16, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 2345, column: 4)
!7316 = !DILocation(line: 2345, column: 20, scope: !7315)
!7317 = !DILocation(line: 2345, column: 18, scope: !7315)
!7318 = !DILocation(line: 2345, column: 4, scope: !7312)
!7319 = !DILocation(line: 2346, column: 9, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2346, column: 9)
!7321 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 2345, column: 36)
!7322 = !DILocation(line: 2346, column: 15, scope: !7320)
!7323 = !DILocation(line: 2346, column: 19, scope: !7320)
!7324 = !DILocation(line: 2346, column: 22, scope: !7320)
!7325 = !DILocation(line: 2346, column: 30, scope: !7320)
!7326 = !DILocation(line: 2346, column: 37, scope: !7320)
!7327 = !DILocation(line: 2346, column: 41, scope: !7320)
!7328 = !DILocation(line: 2346, column: 28, scope: !7320)
!7329 = !DILocation(line: 2346, column: 9, scope: !7321)
!7330 = !DILocation(line: 2346, column: 69, scope: !7320)
!7331 = !DILocation(line: 2346, column: 75, scope: !7320)
!7332 = !DILocation(line: 2346, column: 79, scope: !7320)
!7333 = !DILocation(line: 2346, column: 82, scope: !7320)
!7334 = !DILocation(line: 2346, column: 49, scope: !7320)
!7335 = !DILocation(line: 2346, column: 56, scope: !7320)
!7336 = !DILocation(line: 2346, column: 60, scope: !7320)
!7337 = !DILocation(line: 2346, column: 67, scope: !7320)
!7338 = !DILocation(line: 2347, column: 9, scope: !7339)
!7339 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2347, column: 9)
!7340 = !DILocation(line: 2347, column: 15, scope: !7339)
!7341 = !DILocation(line: 2347, column: 19, scope: !7339)
!7342 = !DILocation(line: 2347, column: 22, scope: !7339)
!7343 = !DILocation(line: 2347, column: 30, scope: !7339)
!7344 = !DILocation(line: 2347, column: 37, scope: !7339)
!7345 = !DILocation(line: 2347, column: 41, scope: !7339)
!7346 = !DILocation(line: 2347, column: 28, scope: !7339)
!7347 = !DILocation(line: 2347, column: 9, scope: !7321)
!7348 = !DILocation(line: 2347, column: 69, scope: !7339)
!7349 = !DILocation(line: 2347, column: 75, scope: !7339)
!7350 = !DILocation(line: 2347, column: 79, scope: !7339)
!7351 = !DILocation(line: 2347, column: 82, scope: !7339)
!7352 = !DILocation(line: 2347, column: 49, scope: !7339)
!7353 = !DILocation(line: 2347, column: 56, scope: !7339)
!7354 = !DILocation(line: 2347, column: 60, scope: !7339)
!7355 = !DILocation(line: 2347, column: 67, scope: !7339)
!7356 = !DILocation(line: 2348, column: 9, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2348, column: 9)
!7358 = !DILocation(line: 2348, column: 15, scope: !7357)
!7359 = !DILocation(line: 2348, column: 19, scope: !7357)
!7360 = !DILocation(line: 2348, column: 22, scope: !7357)
!7361 = !DILocation(line: 2348, column: 30, scope: !7357)
!7362 = !DILocation(line: 2348, column: 37, scope: !7357)
!7363 = !DILocation(line: 2348, column: 41, scope: !7357)
!7364 = !DILocation(line: 2348, column: 28, scope: !7357)
!7365 = !DILocation(line: 2348, column: 9, scope: !7321)
!7366 = !DILocation(line: 2348, column: 69, scope: !7357)
!7367 = !DILocation(line: 2348, column: 75, scope: !7357)
!7368 = !DILocation(line: 2348, column: 79, scope: !7357)
!7369 = !DILocation(line: 2348, column: 82, scope: !7357)
!7370 = !DILocation(line: 2348, column: 49, scope: !7357)
!7371 = !DILocation(line: 2348, column: 56, scope: !7357)
!7372 = !DILocation(line: 2348, column: 60, scope: !7357)
!7373 = !DILocation(line: 2348, column: 67, scope: !7357)
!7374 = !DILocation(line: 2349, column: 9, scope: !7375)
!7375 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 2349, column: 9)
!7376 = !DILocation(line: 2349, column: 15, scope: !7375)
!7377 = !DILocation(line: 2349, column: 19, scope: !7375)
!7378 = !DILocation(line: 2349, column: 22, scope: !7375)
!7379 = !DILocation(line: 2349, column: 30, scope: !7375)
!7380 = !DILocation(line: 2349, column: 37, scope: !7375)
!7381 = !DILocation(line: 2349, column: 41, scope: !7375)
!7382 = !DILocation(line: 2349, column: 28, scope: !7375)
!7383 = !DILocation(line: 2349, column: 9, scope: !7321)
!7384 = !DILocation(line: 2349, column: 69, scope: !7375)
!7385 = !DILocation(line: 2349, column: 75, scope: !7375)
!7386 = !DILocation(line: 2349, column: 79, scope: !7375)
!7387 = !DILocation(line: 2349, column: 82, scope: !7375)
!7388 = !DILocation(line: 2349, column: 49, scope: !7375)
!7389 = !DILocation(line: 2349, column: 56, scope: !7375)
!7390 = !DILocation(line: 2349, column: 60, scope: !7375)
!7391 = !DILocation(line: 2349, column: 67, scope: !7375)
!7392 = !DILocation(line: 2351, column: 4, scope: !7321)
!7393 = !DILocation(line: 2345, column: 32, scope: !7315)
!7394 = !DILocation(line: 2345, column: 4, scope: !7315)
!7395 = distinct !{!7395, !7318, !7396}
!7396 = !DILocation(line: 2351, column: 4, scope: !7312)
!7397 = !DILocation(line: 2352, column: 3, scope: !7289)
!7398 = !DILocation(line: 2338, column: 35, scope: !7284)
!7399 = !DILocation(line: 2338, column: 3, scope: !7284)
!7400 = distinct !{!7400, !7287, !7401}
!7401 = !DILocation(line: 2352, column: 3, scope: !7281)
!7402 = !DILocation(line: 2358, column: 7, scope: !7403)
!7403 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2358, column: 6)
!7404 = !DILocation(line: 2358, column: 6, scope: !7090)
!7405 = !DILocation(line: 2362, column: 11, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2362, column: 3)
!7407 = distinct !DILexicalBlock(scope: !7403, file: !3, line: 2358, column: 14)
!7408 = !DILocation(line: 2362, column: 8, scope: !7406)
!7409 = !DILocation(line: 2362, column: 16, scope: !7410)
!7410 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 2362, column: 3)
!7411 = !DILocation(line: 2362, column: 21, scope: !7410)
!7412 = !DILocation(line: 2362, column: 19, scope: !7410)
!7413 = !DILocation(line: 2362, column: 3, scope: !7406)
!7414 = !DILocalVariable(name: "tx", scope: !7415, file: !3, line: 2363, type: !135)
!7415 = distinct !DILexicalBlock(scope: !7410, file: !3, line: 2362, column: 30)
!7416 = !DILocation(line: 2363, column: 8, scope: !7415)
!7417 = !DILocation(line: 2364, column: 12, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7415, file: !3, line: 2364, column: 4)
!7419 = !DILocation(line: 2364, column: 9, scope: !7418)
!7420 = !DILocation(line: 2364, column: 17, scope: !7421)
!7421 = distinct !DILexicalBlock(scope: !7418, file: !3, line: 2364, column: 4)
!7422 = !DILocation(line: 2364, column: 22, scope: !7421)
!7423 = !DILocation(line: 2364, column: 20, scope: !7421)
!7424 = !DILocation(line: 2364, column: 4, scope: !7418)
!7425 = !DILocalVariable(name: "i", scope: !7426, file: !3, line: 2365, type: !135)
!7426 = distinct !DILexicalBlock(scope: !7421, file: !3, line: 2364, column: 31)
!7427 = !DILocation(line: 2365, column: 9, scope: !7426)
!7428 = !DILocalVariable(name: "sample", scope: !7426, file: !3, line: 2365, type: !135)
!7429 = !DILocation(line: 2365, column: 12, scope: !7426)
!7430 = !DILocalVariable(name: "index", scope: !7426, file: !3, line: 2366, type: !135)
!7431 = !DILocation(line: 2366, column: 9, scope: !7426)
!7432 = !DILocation(line: 2366, column: 17, scope: !7426)
!7433 = !DILocation(line: 2366, column: 22, scope: !7426)
!7434 = !DILocation(line: 2366, column: 26, scope: !7426)
!7435 = !DILocation(line: 2366, column: 24, scope: !7426)
!7436 = !DILocation(line: 2366, column: 20, scope: !7426)
!7437 = !DILocalVariable(name: "tPoint", scope: !7426, file: !3, line: 2367, type: !188)
!7438 = !DILocation(line: 2367, column: 19, scope: !7426)
!7439 = !DILocation(line: 2367, column: 30, scope: !7426)
!7440 = !DILocation(line: 2367, column: 41, scope: !7426)
!7441 = !DILocalVariable(name: "isInside", scope: !7426, file: !3, line: 2369, type: !199)
!7442 = !DILocation(line: 2369, column: 11, scope: !7426)
!7443 = !DILocalVariable(name: "d1", scope: !7426, file: !3, line: 2371, type: !217)
!7444 = !DILocation(line: 2371, column: 11, scope: !7426)
!7445 = !DILocalVariable(name: "d2", scope: !7426, file: !3, line: 2371, type: !217)
!7446 = !DILocation(line: 2371, column: 18, scope: !7426)
!7447 = !DILocalVariable(name: "d3", scope: !7426, file: !3, line: 2371, type: !217)
!7448 = !DILocation(line: 2371, column: 25, scope: !7426)
!7449 = !DILocalVariable(name: "point", scope: !7426, file: !3, line: 2371, type: !7450)
!7450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !207, size: 320, elements: !7451)
!7451 = !{!2577, !219}
!7452 = !DILocation(line: 2371, column: 32, scope: !7426)
!7453 = !DILocalVariable(name: "dot00", scope: !7426, file: !3, line: 2372, type: !207)
!7454 = !DILocation(line: 2372, column: 11, scope: !7426)
!7455 = !DILocalVariable(name: "dot01", scope: !7426, file: !3, line: 2372, type: !207)
!7456 = !DILocation(line: 2372, column: 18, scope: !7426)
!7457 = !DILocalVariable(name: "dot02", scope: !7426, file: !3, line: 2372, type: !207)
!7458 = !DILocation(line: 2372, column: 25, scope: !7426)
!7459 = !DILocalVariable(name: "dot11", scope: !7426, file: !3, line: 2372, type: !207)
!7460 = !DILocation(line: 2372, column: 32, scope: !7426)
!7461 = !DILocalVariable(name: "dot12", scope: !7426, file: !3, line: 2372, type: !207)
!7462 = !DILocation(line: 2372, column: 39, scope: !7426)
!7463 = !DILocalVariable(name: "invDenom", scope: !7426, file: !3, line: 2372, type: !207)
!7464 = !DILocation(line: 2372, column: 46, scope: !7426)
!7465 = !DILocalVariable(name: "u", scope: !7426, file: !3, line: 2372, type: !207)
!7466 = !DILocation(line: 2372, column: 56, scope: !7426)
!7467 = !DILocalVariable(name: "v", scope: !7426, file: !3, line: 2372, type: !207)
!7468 = !DILocation(line: 2372, column: 59, scope: !7426)
!7469 = !DILocation(line: 2375, column: 5, scope: !7426)
!7470 = !DILocation(line: 2375, column: 13, scope: !7426)
!7471 = !DILocation(line: 2375, column: 24, scope: !7426)
!7472 = !DILocation(line: 2376, column: 5, scope: !7426)
!7473 = !DILocation(line: 2376, column: 13, scope: !7426)
!7474 = !DILocation(line: 2376, column: 29, scope: !7426)
!7475 = !DILocation(line: 2377, column: 27, scope: !7426)
!7476 = !DILocation(line: 2377, column: 5, scope: !7426)
!7477 = !DILocation(line: 2377, column: 13, scope: !7426)
!7478 = !DILocation(line: 2377, column: 25, scope: !7426)
!7479 = !DILocation(line: 2380, column: 27, scope: !7426)
!7480 = !DILocation(line: 2380, column: 20, scope: !7426)
!7481 = !DILocation(line: 2380, column: 30, scope: !7426)
!7482 = !DILocation(line: 2380, column: 40, scope: !7426)
!7483 = !DILocation(line: 2380, column: 38, scope: !7426)
!7484 = !DILocation(line: 2380, column: 5, scope: !7426)
!7485 = !DILocation(line: 2380, column: 17, scope: !7426)
!7486 = !DILocation(line: 2381, column: 27, scope: !7426)
!7487 = !DILocation(line: 2381, column: 20, scope: !7426)
!7488 = !DILocation(line: 2381, column: 30, scope: !7426)
!7489 = !DILocation(line: 2381, column: 40, scope: !7426)
!7490 = !DILocation(line: 2381, column: 38, scope: !7426)
!7491 = !DILocation(line: 2381, column: 5, scope: !7426)
!7492 = !DILocation(line: 2381, column: 17, scope: !7426)
!7493 = !DILocation(line: 2387, column: 27, scope: !7426)
!7494 = !DILocation(line: 2387, column: 20, scope: !7426)
!7495 = !DILocation(line: 2387, column: 33, scope: !7426)
!7496 = !DILocation(line: 2387, column: 31, scope: !7426)
!7497 = !DILocation(line: 2387, column: 5, scope: !7426)
!7498 = !DILocation(line: 2387, column: 17, scope: !7426)
!7499 = !DILocation(line: 2388, column: 27, scope: !7426)
!7500 = !DILocation(line: 2388, column: 20, scope: !7426)
!7501 = !DILocation(line: 2388, column: 33, scope: !7426)
!7502 = !DILocation(line: 2388, column: 31, scope: !7426)
!7503 = !DILocation(line: 2388, column: 5, scope: !7426)
!7504 = !DILocation(line: 2388, column: 17, scope: !7426)
!7505 = !DILocation(line: 2390, column: 27, scope: !7426)
!7506 = !DILocation(line: 2390, column: 20, scope: !7426)
!7507 = !DILocation(line: 2390, column: 30, scope: !7426)
!7508 = !DILocation(line: 2390, column: 37, scope: !7426)
!7509 = !DILocation(line: 2390, column: 35, scope: !7426)
!7510 = !DILocation(line: 2390, column: 5, scope: !7426)
!7511 = !DILocation(line: 2390, column: 17, scope: !7426)
!7512 = !DILocation(line: 2391, column: 27, scope: !7426)
!7513 = !DILocation(line: 2391, column: 20, scope: !7426)
!7514 = !DILocation(line: 2391, column: 33, scope: !7426)
!7515 = !DILocation(line: 2391, column: 31, scope: !7426)
!7516 = !DILocation(line: 2391, column: 5, scope: !7426)
!7517 = !DILocation(line: 2391, column: 17, scope: !7426)
!7518 = !DILocation(line: 2393, column: 27, scope: !7426)
!7519 = !DILocation(line: 2393, column: 20, scope: !7426)
!7520 = !DILocation(line: 2393, column: 33, scope: !7426)
!7521 = !DILocation(line: 2393, column: 31, scope: !7426)
!7522 = !DILocation(line: 2393, column: 5, scope: !7426)
!7523 = !DILocation(line: 2393, column: 17, scope: !7426)
!7524 = !DILocation(line: 2394, column: 27, scope: !7426)
!7525 = !DILocation(line: 2394, column: 20, scope: !7426)
!7526 = !DILocation(line: 2394, column: 30, scope: !7426)
!7527 = !DILocation(line: 2394, column: 37, scope: !7426)
!7528 = !DILocation(line: 2394, column: 35, scope: !7426)
!7529 = !DILocation(line: 2394, column: 5, scope: !7426)
!7530 = !DILocation(line: 2394, column: 17, scope: !7426)
!7531 = !DILocation(line: 2396, column: 27, scope: !7426)
!7532 = !DILocation(line: 2396, column: 20, scope: !7426)
!7533 = !DILocation(line: 2396, column: 30, scope: !7426)
!7534 = !DILocation(line: 2396, column: 37, scope: !7426)
!7535 = !DILocation(line: 2396, column: 35, scope: !7426)
!7536 = !DILocation(line: 2396, column: 5, scope: !7426)
!7537 = !DILocation(line: 2396, column: 17, scope: !7426)
!7538 = !DILocation(line: 2397, column: 27, scope: !7426)
!7539 = !DILocation(line: 2397, column: 20, scope: !7426)
!7540 = !DILocation(line: 2397, column: 30, scope: !7426)
!7541 = !DILocation(line: 2397, column: 37, scope: !7426)
!7542 = !DILocation(line: 2397, column: 35, scope: !7426)
!7543 = !DILocation(line: 2397, column: 5, scope: !7426)
!7544 = !DILocation(line: 2397, column: 17, scope: !7426)
!7545 = !DILocation(line: 2401, column: 17, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 2401, column: 5)
!7547 = !DILocation(line: 2401, column: 10, scope: !7546)
!7548 = !DILocation(line: 2401, column: 22, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7546, file: !3, line: 2401, column: 5)
!7550 = !DILocation(line: 2401, column: 29, scope: !7549)
!7551 = !DILocation(line: 2401, column: 5, scope: !7546)
!7552 = !DILocation(line: 2404, column: 13, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7554, file: !3, line: 2404, column: 6)
!7554 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 2401, column: 44)
!7555 = !DILocation(line: 2404, column: 11, scope: !7553)
!7556 = !DILocation(line: 2404, column: 18, scope: !7557)
!7557 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 2404, column: 6)
!7558 = !DILocation(line: 2404, column: 22, scope: !7557)
!7559 = !DILocation(line: 2404, column: 20, scope: !7557)
!7560 = !DILocation(line: 2404, column: 6, scope: !7553)
!7561 = !DILocation(line: 2407, column: 11, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2407, column: 11)
!7563 = distinct !DILexicalBlock(scope: !7557, file: !3, line: 2404, column: 39)
!7564 = !DILocation(line: 2407, column: 18, scope: !7562)
!7565 = !DILocation(line: 2407, column: 21, scope: !7562)
!7566 = !DILocation(line: 2407, column: 37, scope: !7562)
!7567 = !DILocation(line: 2407, column: 31, scope: !7562)
!7568 = !DILocation(line: 2407, column: 28, scope: !7562)
!7569 = !DILocation(line: 2407, column: 11, scope: !7563)
!7570 = !DILocation(line: 2407, column: 50, scope: !7562)
!7571 = !DILocation(line: 2408, column: 11, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2408, column: 11)
!7573 = !DILocation(line: 2408, column: 18, scope: !7572)
!7574 = !DILocation(line: 2408, column: 21, scope: !7572)
!7575 = !DILocation(line: 2408, column: 37, scope: !7572)
!7576 = !DILocation(line: 2408, column: 31, scope: !7572)
!7577 = !DILocation(line: 2408, column: 28, scope: !7572)
!7578 = !DILocation(line: 2408, column: 11, scope: !7563)
!7579 = !DILocation(line: 2408, column: 50, scope: !7572)
!7580 = !DILocation(line: 2409, column: 11, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2409, column: 11)
!7582 = !DILocation(line: 2409, column: 18, scope: !7581)
!7583 = !DILocation(line: 2409, column: 21, scope: !7581)
!7584 = !DILocation(line: 2409, column: 37, scope: !7581)
!7585 = !DILocation(line: 2409, column: 31, scope: !7581)
!7586 = !DILocation(line: 2409, column: 28, scope: !7581)
!7587 = !DILocation(line: 2409, column: 11, scope: !7563)
!7588 = !DILocation(line: 2409, column: 50, scope: !7581)
!7589 = !DILocation(line: 2410, column: 11, scope: !7590)
!7590 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2410, column: 11)
!7591 = !DILocation(line: 2410, column: 18, scope: !7590)
!7592 = !DILocation(line: 2410, column: 21, scope: !7590)
!7593 = !DILocation(line: 2410, column: 37, scope: !7590)
!7594 = !DILocation(line: 2410, column: 31, scope: !7590)
!7595 = !DILocation(line: 2410, column: 28, scope: !7590)
!7596 = !DILocation(line: 2410, column: 11, scope: !7563)
!7597 = !DILocation(line: 2410, column: 50, scope: !7590)
!7598 = !DILocation(line: 2414, column: 19, scope: !7563)
!7599 = !DILocation(line: 2414, column: 24, scope: !7563)
!7600 = !DILocation(line: 2414, column: 30, scope: !7563)
!7601 = !DILocation(line: 2414, column: 33, scope: !7563)
!7602 = !DILocation(line: 2414, column: 40, scope: !7563)
!7603 = !DILocation(line: 2414, column: 46, scope: !7563)
!7604 = !DILocation(line: 2414, column: 49, scope: !7563)
!7605 = !DILocation(line: 2414, column: 7, scope: !7563)
!7606 = !DILocation(line: 2415, column: 19, scope: !7563)
!7607 = !DILocation(line: 2415, column: 24, scope: !7563)
!7608 = !DILocation(line: 2415, column: 30, scope: !7563)
!7609 = !DILocation(line: 2415, column: 33, scope: !7563)
!7610 = !DILocation(line: 2415, column: 40, scope: !7563)
!7611 = !DILocation(line: 2415, column: 46, scope: !7563)
!7612 = !DILocation(line: 2415, column: 49, scope: !7563)
!7613 = !DILocation(line: 2415, column: 7, scope: !7563)
!7614 = !DILocation(line: 2416, column: 19, scope: !7563)
!7615 = !DILocation(line: 2416, column: 30, scope: !7563)
!7616 = !DILocation(line: 2416, column: 24, scope: !7563)
!7617 = !DILocation(line: 2416, column: 39, scope: !7563)
!7618 = !DILocation(line: 2416, column: 45, scope: !7563)
!7619 = !DILocation(line: 2416, column: 48, scope: !7563)
!7620 = !DILocation(line: 2416, column: 7, scope: !7563)
!7621 = !DILocation(line: 2418, column: 15, scope: !7563)
!7622 = !DILocation(line: 2418, column: 23, scope: !7563)
!7623 = !DILocation(line: 2418, column: 21, scope: !7563)
!7624 = !DILocation(line: 2418, column: 31, scope: !7563)
!7625 = !DILocation(line: 2418, column: 39, scope: !7563)
!7626 = !DILocation(line: 2418, column: 37, scope: !7563)
!7627 = !DILocation(line: 2418, column: 29, scope: !7563)
!7628 = !DILocation(line: 2418, column: 13, scope: !7563)
!7629 = !DILocation(line: 2419, column: 15, scope: !7563)
!7630 = !DILocation(line: 2419, column: 23, scope: !7563)
!7631 = !DILocation(line: 2419, column: 21, scope: !7563)
!7632 = !DILocation(line: 2419, column: 31, scope: !7563)
!7633 = !DILocation(line: 2419, column: 39, scope: !7563)
!7634 = !DILocation(line: 2419, column: 37, scope: !7563)
!7635 = !DILocation(line: 2419, column: 29, scope: !7563)
!7636 = !DILocation(line: 2419, column: 13, scope: !7563)
!7637 = !DILocation(line: 2420, column: 15, scope: !7563)
!7638 = !DILocation(line: 2420, column: 23, scope: !7563)
!7639 = !DILocation(line: 2420, column: 21, scope: !7563)
!7640 = !DILocation(line: 2420, column: 31, scope: !7563)
!7641 = !DILocation(line: 2420, column: 39, scope: !7563)
!7642 = !DILocation(line: 2420, column: 37, scope: !7563)
!7643 = !DILocation(line: 2420, column: 29, scope: !7563)
!7644 = !DILocation(line: 2420, column: 13, scope: !7563)
!7645 = !DILocation(line: 2421, column: 15, scope: !7563)
!7646 = !DILocation(line: 2421, column: 23, scope: !7563)
!7647 = !DILocation(line: 2421, column: 21, scope: !7563)
!7648 = !DILocation(line: 2421, column: 31, scope: !7563)
!7649 = !DILocation(line: 2421, column: 39, scope: !7563)
!7650 = !DILocation(line: 2421, column: 37, scope: !7563)
!7651 = !DILocation(line: 2421, column: 29, scope: !7563)
!7652 = !DILocation(line: 2421, column: 13, scope: !7563)
!7653 = !DILocation(line: 2422, column: 15, scope: !7563)
!7654 = !DILocation(line: 2422, column: 23, scope: !7563)
!7655 = !DILocation(line: 2422, column: 21, scope: !7563)
!7656 = !DILocation(line: 2422, column: 31, scope: !7563)
!7657 = !DILocation(line: 2422, column: 39, scope: !7563)
!7658 = !DILocation(line: 2422, column: 37, scope: !7563)
!7659 = !DILocation(line: 2422, column: 29, scope: !7563)
!7660 = !DILocation(line: 2422, column: 13, scope: !7563)
!7661 = !DILocation(line: 2424, column: 19, scope: !7563)
!7662 = !DILocation(line: 2424, column: 27, scope: !7563)
!7663 = !DILocation(line: 2424, column: 25, scope: !7563)
!7664 = !DILocation(line: 2424, column: 35, scope: !7563)
!7665 = !DILocation(line: 2424, column: 43, scope: !7563)
!7666 = !DILocation(line: 2424, column: 41, scope: !7563)
!7667 = !DILocation(line: 2424, column: 33, scope: !7563)
!7668 = !DILocation(line: 2424, column: 16, scope: !7563)
!7669 = !DILocation(line: 2425, column: 18, scope: !7563)
!7670 = !DILocation(line: 2425, column: 36, scope: !7563)
!7671 = !DILocation(line: 2425, column: 34, scope: !7563)
!7672 = !DILocation(line: 2425, column: 16, scope: !7563)
!7673 = !DILocation(line: 2426, column: 12, scope: !7563)
!7674 = !DILocation(line: 2426, column: 20, scope: !7563)
!7675 = !DILocation(line: 2426, column: 18, scope: !7563)
!7676 = !DILocation(line: 2426, column: 28, scope: !7563)
!7677 = !DILocation(line: 2426, column: 36, scope: !7563)
!7678 = !DILocation(line: 2426, column: 34, scope: !7563)
!7679 = !DILocation(line: 2426, column: 26, scope: !7563)
!7680 = !DILocation(line: 2426, column: 45, scope: !7563)
!7681 = !DILocation(line: 2426, column: 43, scope: !7563)
!7682 = !DILocation(line: 2426, column: 9, scope: !7563)
!7683 = !DILocation(line: 2427, column: 12, scope: !7563)
!7684 = !DILocation(line: 2427, column: 20, scope: !7563)
!7685 = !DILocation(line: 2427, column: 18, scope: !7563)
!7686 = !DILocation(line: 2427, column: 28, scope: !7563)
!7687 = !DILocation(line: 2427, column: 36, scope: !7563)
!7688 = !DILocation(line: 2427, column: 34, scope: !7563)
!7689 = !DILocation(line: 2427, column: 26, scope: !7563)
!7690 = !DILocation(line: 2427, column: 45, scope: !7563)
!7691 = !DILocation(line: 2427, column: 43, scope: !7563)
!7692 = !DILocation(line: 2427, column: 9, scope: !7563)
!7693 = !DILocation(line: 2429, column: 12, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2429, column: 11)
!7695 = !DILocation(line: 2429, column: 14, scope: !7694)
!7696 = !DILocation(line: 2429, column: 19, scope: !7694)
!7697 = !DILocation(line: 2429, column: 23, scope: !7694)
!7698 = !DILocation(line: 2429, column: 25, scope: !7694)
!7699 = !DILocation(line: 2429, column: 30, scope: !7694)
!7700 = !DILocation(line: 2429, column: 34, scope: !7694)
!7701 = !DILocation(line: 2429, column: 38, scope: !7694)
!7702 = !DILocation(line: 2429, column: 36, scope: !7694)
!7703 = !DILocation(line: 2429, column: 40, scope: !7694)
!7704 = !DILocation(line: 2429, column: 11, scope: !7563)
!7705 = !DILocation(line: 2429, column: 57, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7694, file: !3, line: 2429, column: 46)
!7707 = !DILocation(line: 2429, column: 62, scope: !7706)
!7708 = !DILocation(line: 2433, column: 13, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2433, column: 11)
!7710 = !DILocation(line: 2433, column: 23, scope: !7709)
!7711 = !DILocation(line: 2433, column: 26, scope: !7709)
!7712 = !DILocation(line: 2433, column: 32, scope: !7709)
!7713 = !DILocation(line: 2433, column: 35, scope: !7709)
!7714 = !DILocation(line: 2433, column: 11, scope: !7563)
!7715 = !DILocation(line: 2436, column: 20, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 2433, column: 39)
!7717 = !DILocation(line: 2436, column: 25, scope: !7716)
!7718 = !DILocation(line: 2436, column: 31, scope: !7716)
!7719 = !DILocation(line: 2436, column: 34, scope: !7716)
!7720 = !DILocation(line: 2436, column: 41, scope: !7716)
!7721 = !DILocation(line: 2436, column: 47, scope: !7716)
!7722 = !DILocation(line: 2436, column: 50, scope: !7716)
!7723 = !DILocation(line: 2436, column: 8, scope: !7716)
!7724 = !DILocation(line: 2439, column: 16, scope: !7716)
!7725 = !DILocation(line: 2439, column: 24, scope: !7716)
!7726 = !DILocation(line: 2439, column: 22, scope: !7716)
!7727 = !DILocation(line: 2439, column: 32, scope: !7716)
!7728 = !DILocation(line: 2439, column: 40, scope: !7716)
!7729 = !DILocation(line: 2439, column: 38, scope: !7716)
!7730 = !DILocation(line: 2439, column: 30, scope: !7716)
!7731 = !DILocation(line: 2439, column: 14, scope: !7716)
!7732 = !DILocation(line: 2440, column: 16, scope: !7716)
!7733 = !DILocation(line: 2440, column: 24, scope: !7716)
!7734 = !DILocation(line: 2440, column: 22, scope: !7716)
!7735 = !DILocation(line: 2440, column: 32, scope: !7716)
!7736 = !DILocation(line: 2440, column: 40, scope: !7716)
!7737 = !DILocation(line: 2440, column: 38, scope: !7716)
!7738 = !DILocation(line: 2440, column: 30, scope: !7716)
!7739 = !DILocation(line: 2440, column: 14, scope: !7716)
!7740 = !DILocation(line: 2441, column: 16, scope: !7716)
!7741 = !DILocation(line: 2441, column: 24, scope: !7716)
!7742 = !DILocation(line: 2441, column: 22, scope: !7716)
!7743 = !DILocation(line: 2441, column: 32, scope: !7716)
!7744 = !DILocation(line: 2441, column: 40, scope: !7716)
!7745 = !DILocation(line: 2441, column: 38, scope: !7716)
!7746 = !DILocation(line: 2441, column: 30, scope: !7716)
!7747 = !DILocation(line: 2441, column: 14, scope: !7716)
!7748 = !DILocation(line: 2442, column: 16, scope: !7716)
!7749 = !DILocation(line: 2442, column: 24, scope: !7716)
!7750 = !DILocation(line: 2442, column: 22, scope: !7716)
!7751 = !DILocation(line: 2442, column: 32, scope: !7716)
!7752 = !DILocation(line: 2442, column: 40, scope: !7716)
!7753 = !DILocation(line: 2442, column: 38, scope: !7716)
!7754 = !DILocation(line: 2442, column: 30, scope: !7716)
!7755 = !DILocation(line: 2442, column: 14, scope: !7716)
!7756 = !DILocation(line: 2443, column: 16, scope: !7716)
!7757 = !DILocation(line: 2443, column: 24, scope: !7716)
!7758 = !DILocation(line: 2443, column: 22, scope: !7716)
!7759 = !DILocation(line: 2443, column: 32, scope: !7716)
!7760 = !DILocation(line: 2443, column: 40, scope: !7716)
!7761 = !DILocation(line: 2443, column: 38, scope: !7716)
!7762 = !DILocation(line: 2443, column: 30, scope: !7716)
!7763 = !DILocation(line: 2443, column: 14, scope: !7716)
!7764 = !DILocation(line: 2445, column: 20, scope: !7716)
!7765 = !DILocation(line: 2445, column: 28, scope: !7716)
!7766 = !DILocation(line: 2445, column: 26, scope: !7716)
!7767 = !DILocation(line: 2445, column: 36, scope: !7716)
!7768 = !DILocation(line: 2445, column: 44, scope: !7716)
!7769 = !DILocation(line: 2445, column: 42, scope: !7716)
!7770 = !DILocation(line: 2445, column: 34, scope: !7716)
!7771 = !DILocation(line: 2445, column: 17, scope: !7716)
!7772 = !DILocation(line: 2446, column: 19, scope: !7716)
!7773 = !DILocation(line: 2446, column: 37, scope: !7716)
!7774 = !DILocation(line: 2446, column: 35, scope: !7716)
!7775 = !DILocation(line: 2446, column: 17, scope: !7716)
!7776 = !DILocation(line: 2447, column: 13, scope: !7716)
!7777 = !DILocation(line: 2447, column: 21, scope: !7716)
!7778 = !DILocation(line: 2447, column: 19, scope: !7716)
!7779 = !DILocation(line: 2447, column: 29, scope: !7716)
!7780 = !DILocation(line: 2447, column: 37, scope: !7716)
!7781 = !DILocation(line: 2447, column: 35, scope: !7716)
!7782 = !DILocation(line: 2447, column: 27, scope: !7716)
!7783 = !DILocation(line: 2447, column: 46, scope: !7716)
!7784 = !DILocation(line: 2447, column: 44, scope: !7716)
!7785 = !DILocation(line: 2447, column: 10, scope: !7716)
!7786 = !DILocation(line: 2448, column: 13, scope: !7716)
!7787 = !DILocation(line: 2448, column: 21, scope: !7716)
!7788 = !DILocation(line: 2448, column: 19, scope: !7716)
!7789 = !DILocation(line: 2448, column: 29, scope: !7716)
!7790 = !DILocation(line: 2448, column: 37, scope: !7716)
!7791 = !DILocation(line: 2448, column: 35, scope: !7716)
!7792 = !DILocation(line: 2448, column: 27, scope: !7716)
!7793 = !DILocation(line: 2448, column: 46, scope: !7716)
!7794 = !DILocation(line: 2448, column: 44, scope: !7716)
!7795 = !DILocation(line: 2448, column: 10, scope: !7716)
!7796 = !DILocation(line: 2450, column: 13, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7716, file: !3, line: 2450, column: 12)
!7798 = !DILocation(line: 2450, column: 15, scope: !7797)
!7799 = !DILocation(line: 2450, column: 20, scope: !7797)
!7800 = !DILocation(line: 2450, column: 24, scope: !7797)
!7801 = !DILocation(line: 2450, column: 26, scope: !7797)
!7802 = !DILocation(line: 2450, column: 31, scope: !7797)
!7803 = !DILocation(line: 2450, column: 35, scope: !7797)
!7804 = !DILocation(line: 2450, column: 39, scope: !7797)
!7805 = !DILocation(line: 2450, column: 37, scope: !7797)
!7806 = !DILocation(line: 2450, column: 41, scope: !7797)
!7807 = !DILocation(line: 2450, column: 12, scope: !7716)
!7808 = !DILocation(line: 2450, column: 58, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7797, file: !3, line: 2450, column: 47)
!7810 = !DILocation(line: 2450, column: 63, scope: !7809)
!7811 = !DILocation(line: 2452, column: 7, scope: !7716)
!7812 = !DILocation(line: 2457, column: 11, scope: !7813)
!7813 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2457, column: 11)
!7814 = !DILocation(line: 2457, column: 20, scope: !7813)
!7815 = !DILocation(line: 2457, column: 11, scope: !7563)
!7816 = !DILocalVariable(name: "uv1co", scope: !7817, file: !3, line: 2459, type: !217)
!7817 = distinct !DILexicalBlock(scope: !7813, file: !3, line: 2457, column: 26)
!7818 = !DILocation(line: 2459, column: 14, scope: !7817)
!7819 = !DILocalVariable(name: "uv2co", scope: !7817, file: !3, line: 2459, type: !217)
!7820 = !DILocation(line: 2459, column: 24, scope: !7817)
!7821 = !DILocalVariable(name: "uv3co", scope: !7817, file: !3, line: 2459, type: !217)
!7822 = !DILocation(line: 2459, column: 34, scope: !7817)
!7823 = !DILocalVariable(name: "uv", scope: !7817, file: !3, line: 2459, type: !217)
!7824 = !DILocation(line: 2459, column: 44, scope: !7817)
!7825 = !DILocalVariable(name: "j", scope: !7817, file: !3, line: 2460, type: !135)
!7826 = !DILocation(line: 2460, column: 12, scope: !7817)
!7827 = !DILocation(line: 2463, column: 12, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 2463, column: 12)
!7829 = !DILocation(line: 2463, column: 21, scope: !7828)
!7830 = !DILocation(line: 2463, column: 12, scope: !7817)
!7831 = !DILocation(line: 2464, column: 20, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 2463, column: 27)
!7833 = !DILocation(line: 2464, column: 27, scope: !7832)
!7834 = !DILocation(line: 2464, column: 33, scope: !7832)
!7835 = !DILocation(line: 2464, column: 36, scope: !7832)
!7836 = !DILocation(line: 2464, column: 9, scope: !7832)
!7837 = !DILocation(line: 2465, column: 20, scope: !7832)
!7838 = !DILocation(line: 2465, column: 27, scope: !7832)
!7839 = !DILocation(line: 2465, column: 33, scope: !7832)
!7840 = !DILocation(line: 2465, column: 36, scope: !7832)
!7841 = !DILocation(line: 2465, column: 9, scope: !7832)
!7842 = !DILocation(line: 2466, column: 20, scope: !7832)
!7843 = !DILocation(line: 2466, column: 27, scope: !7832)
!7844 = !DILocation(line: 2466, column: 33, scope: !7832)
!7845 = !DILocation(line: 2466, column: 36, scope: !7832)
!7846 = !DILocation(line: 2466, column: 9, scope: !7832)
!7847 = !DILocation(line: 2467, column: 8, scope: !7832)
!7848 = !DILocation(line: 2469, column: 20, scope: !7849)
!7849 = distinct !DILexicalBlock(scope: !7828, file: !3, line: 2468, column: 13)
!7850 = !DILocation(line: 2469, column: 27, scope: !7849)
!7851 = !DILocation(line: 2469, column: 33, scope: !7849)
!7852 = !DILocation(line: 2469, column: 36, scope: !7849)
!7853 = !DILocation(line: 2469, column: 9, scope: !7849)
!7854 = !DILocation(line: 2470, column: 20, scope: !7849)
!7855 = !DILocation(line: 2470, column: 27, scope: !7849)
!7856 = !DILocation(line: 2470, column: 33, scope: !7849)
!7857 = !DILocation(line: 2470, column: 36, scope: !7849)
!7858 = !DILocation(line: 2470, column: 9, scope: !7849)
!7859 = !DILocation(line: 2471, column: 20, scope: !7849)
!7860 = !DILocation(line: 2471, column: 27, scope: !7849)
!7861 = !DILocation(line: 2471, column: 33, scope: !7849)
!7862 = !DILocation(line: 2471, column: 36, scope: !7849)
!7863 = !DILocation(line: 2471, column: 9, scope: !7849)
!7864 = !DILocation(line: 2475, column: 15, scope: !7865)
!7865 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 2475, column: 8)
!7866 = !DILocation(line: 2475, column: 13, scope: !7865)
!7867 = !DILocation(line: 2475, column: 20, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7865, file: !3, line: 2475, column: 8)
!7869 = !DILocation(line: 2475, column: 24, scope: !7868)
!7870 = !DILocation(line: 2475, column: 22, scope: !7868)
!7871 = !DILocation(line: 2475, column: 8, scope: !7865)
!7872 = !DILocation(line: 2476, column: 17, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 2475, column: 41)
!7874 = !DILocation(line: 2476, column: 45, scope: !7873)
!7875 = !DILocation(line: 2476, column: 47, scope: !7873)
!7876 = !DILocation(line: 2476, column: 31, scope: !7873)
!7877 = !DILocation(line: 2476, column: 54, scope: !7873)
!7878 = !DILocation(line: 2476, column: 52, scope: !7873)
!7879 = !DILocation(line: 2476, column: 29, scope: !7873)
!7880 = !DILocation(line: 2476, column: 9, scope: !7873)
!7881 = !DILocation(line: 2476, column: 15, scope: !7873)
!7882 = !DILocation(line: 2477, column: 17, scope: !7873)
!7883 = !DILocation(line: 2477, column: 45, scope: !7873)
!7884 = !DILocation(line: 2477, column: 47, scope: !7873)
!7885 = !DILocation(line: 2477, column: 51, scope: !7873)
!7886 = !DILocation(line: 2477, column: 31, scope: !7873)
!7887 = !DILocation(line: 2477, column: 58, scope: !7873)
!7888 = !DILocation(line: 2477, column: 56, scope: !7873)
!7889 = !DILocation(line: 2477, column: 29, scope: !7873)
!7890 = !DILocation(line: 2477, column: 9, scope: !7873)
!7891 = !DILocation(line: 2477, column: 15, scope: !7873)
!7892 = !DILocation(line: 2479, column: 32, scope: !7873)
!7893 = !DILocation(line: 2479, column: 39, scope: !7873)
!7894 = !DILocation(line: 2479, column: 46, scope: !7873)
!7895 = !DILocation(line: 2479, column: 53, scope: !7873)
!7896 = !DILocation(line: 2479, column: 57, scope: !7873)
!7897 = !DILocation(line: 2479, column: 69, scope: !7873)
!7898 = !DILocation(line: 2479, column: 77, scope: !7873)
!7899 = !DILocation(line: 2479, column: 75, scope: !7873)
!7900 = !DILocation(line: 2479, column: 90, scope: !7873)
!7901 = !DILocation(line: 2479, column: 88, scope: !7873)
!7902 = !DILocation(line: 2479, column: 93, scope: !7873)
!7903 = !DILocation(line: 2479, column: 9, scope: !7873)
!7904 = !DILocation(line: 2480, column: 8, scope: !7873)
!7905 = !DILocation(line: 2475, column: 37, scope: !7868)
!7906 = !DILocation(line: 2475, column: 8, scope: !7868)
!7907 = distinct !{!7907, !7871, !7908}
!7908 = !DILocation(line: 2480, column: 8, scope: !7865)
!7909 = !DILocation(line: 2483, column: 29, scope: !7817)
!7910 = !DILocation(line: 2483, column: 8, scope: !7817)
!7911 = !DILocation(line: 2483, column: 16, scope: !7817)
!7912 = !DILocation(line: 2483, column: 27, scope: !7817)
!7913 = !DILocation(line: 2484, column: 24, scope: !7817)
!7914 = !DILocation(line: 2484, column: 33, scope: !7817)
!7915 = !DILocation(line: 2484, column: 23, scope: !7817)
!7916 = !DILocation(line: 2484, column: 8, scope: !7817)
!7917 = !DILocation(line: 2484, column: 16, scope: !7817)
!7918 = !DILocation(line: 2484, column: 21, scope: !7817)
!7919 = !DILocation(line: 2487, column: 21, scope: !7817)
!7920 = !DILocation(line: 2487, column: 27, scope: !7817)
!7921 = !DILocation(line: 2487, column: 30, scope: !7817)
!7922 = !DILocation(line: 2487, column: 8, scope: !7817)
!7923 = !DILocation(line: 2487, column: 16, scope: !7817)
!7924 = !DILocation(line: 2487, column: 19, scope: !7817)
!7925 = !DILocation(line: 2488, column: 22, scope: !7817)
!7926 = !DILocation(line: 2488, column: 31, scope: !7817)
!7927 = !DILocation(line: 2488, column: 21, scope: !7817)
!7928 = !DILocation(line: 2488, column: 39, scope: !7817)
!7929 = !DILocation(line: 2488, column: 45, scope: !7817)
!7930 = !DILocation(line: 2488, column: 48, scope: !7817)
!7931 = !DILocation(line: 2488, column: 53, scope: !7817)
!7932 = !DILocation(line: 2488, column: 59, scope: !7817)
!7933 = !DILocation(line: 2488, column: 62, scope: !7817)
!7934 = !DILocation(line: 2488, column: 8, scope: !7817)
!7935 = !DILocation(line: 2488, column: 16, scope: !7817)
!7936 = !DILocation(line: 2488, column: 19, scope: !7817)
!7937 = !DILocation(line: 2489, column: 22, scope: !7817)
!7938 = !DILocation(line: 2489, column: 31, scope: !7817)
!7939 = !DILocation(line: 2489, column: 21, scope: !7817)
!7940 = !DILocation(line: 2489, column: 39, scope: !7817)
!7941 = !DILocation(line: 2489, column: 45, scope: !7817)
!7942 = !DILocation(line: 2489, column: 48, scope: !7817)
!7943 = !DILocation(line: 2489, column: 53, scope: !7817)
!7944 = !DILocation(line: 2489, column: 59, scope: !7817)
!7945 = !DILocation(line: 2489, column: 62, scope: !7817)
!7946 = !DILocation(line: 2489, column: 8, scope: !7817)
!7947 = !DILocation(line: 2489, column: 16, scope: !7817)
!7948 = !DILocation(line: 2489, column: 19, scope: !7817)
!7949 = !DILocation(line: 2491, column: 15, scope: !7817)
!7950 = !DILocation(line: 2492, column: 8, scope: !7817)
!7951 = !DILocation(line: 2494, column: 6, scope: !7563)
!7952 = !DILocation(line: 2404, column: 35, scope: !7557)
!7953 = !DILocation(line: 2404, column: 6, scope: !7557)
!7954 = distinct !{!7954, !7560, !7955}
!7955 = !DILocation(line: 2494, column: 6, scope: !7553)
!7956 = !DILocation(line: 2495, column: 5, scope: !7554)
!7957 = !DILocation(line: 2401, column: 40, scope: !7549)
!7958 = !DILocation(line: 2401, column: 5, scope: !7549)
!7959 = distinct !{!7959, !7551, !7960}
!7960 = !DILocation(line: 2495, column: 5, scope: !7546)
!7961 = !DILocation(line: 2496, column: 4, scope: !7426)
!7962 = !DILocation(line: 2364, column: 27, scope: !7421)
!7963 = !DILocation(line: 2364, column: 4, scope: !7421)
!7964 = distinct !{!7964, !7424, !7965}
!7965 = !DILocation(line: 2496, column: 4, scope: !7418)
!7966 = !DILocation(line: 2497, column: 3, scope: !7415)
!7967 = !DILocation(line: 2362, column: 26, scope: !7410)
!7968 = !DILocation(line: 2362, column: 3, scope: !7410)
!7969 = distinct !{!7969, !7413, !7970}
!7970 = !DILocation(line: 2497, column: 3, scope: !7406)
!7971 = !DILocation(line: 2508, column: 11, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2508, column: 3)
!7973 = !DILocation(line: 2508, column: 8, scope: !7972)
!7974 = !DILocation(line: 2508, column: 16, scope: !7975)
!7975 = distinct !DILexicalBlock(scope: !7972, file: !3, line: 2508, column: 3)
!7976 = !DILocation(line: 2508, column: 21, scope: !7975)
!7977 = !DILocation(line: 2508, column: 19, scope: !7975)
!7978 = !DILocation(line: 2508, column: 3, scope: !7972)
!7979 = !DILocalVariable(name: "tx", scope: !7980, file: !3, line: 2509, type: !135)
!7980 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 2508, column: 30)
!7981 = !DILocation(line: 2509, column: 8, scope: !7980)
!7982 = !DILocation(line: 2510, column: 12, scope: !7983)
!7983 = distinct !DILexicalBlock(scope: !7980, file: !3, line: 2510, column: 4)
!7984 = !DILocation(line: 2510, column: 9, scope: !7983)
!7985 = !DILocation(line: 2510, column: 17, scope: !7986)
!7986 = distinct !DILexicalBlock(scope: !7983, file: !3, line: 2510, column: 4)
!7987 = !DILocation(line: 2510, column: 22, scope: !7986)
!7988 = !DILocation(line: 2510, column: 20, scope: !7986)
!7989 = !DILocation(line: 2510, column: 4, scope: !7983)
!7990 = !DILocalVariable(name: "index", scope: !7991, file: !3, line: 2511, type: !135)
!7991 = distinct !DILexicalBlock(scope: !7986, file: !3, line: 2510, column: 31)
!7992 = !DILocation(line: 2511, column: 9, scope: !7991)
!7993 = !DILocation(line: 2511, column: 17, scope: !7991)
!7994 = !DILocation(line: 2511, column: 22, scope: !7991)
!7995 = !DILocation(line: 2511, column: 26, scope: !7991)
!7996 = !DILocation(line: 2511, column: 24, scope: !7991)
!7997 = !DILocation(line: 2511, column: 20, scope: !7991)
!7998 = !DILocalVariable(name: "tPoint", scope: !7991, file: !3, line: 2512, type: !188)
!7999 = !DILocation(line: 2512, column: 19, scope: !7991)
!8000 = !DILocation(line: 2512, column: 30, scope: !7991)
!8001 = !DILocation(line: 2512, column: 41, scope: !7991)
!8002 = !DILocation(line: 2515, column: 9, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7991, file: !3, line: 2515, column: 9)
!8004 = !DILocation(line: 2515, column: 17, scope: !8003)
!8005 = !DILocation(line: 2515, column: 28, scope: !8003)
!8006 = !DILocation(line: 2515, column: 9, scope: !7991)
!8007 = !DILocalVariable(name: "u_min", scope: !8008, file: !3, line: 2516, type: !135)
!8008 = distinct !DILexicalBlock(scope: !8003, file: !3, line: 2515, column: 35)
!8009 = !DILocation(line: 2516, column: 10, scope: !8008)
!8010 = !DILocalVariable(name: "u_max", scope: !8008, file: !3, line: 2516, type: !135)
!8011 = !DILocation(line: 2516, column: 17, scope: !8008)
!8012 = !DILocalVariable(name: "v_min", scope: !8008, file: !3, line: 2516, type: !135)
!8013 = !DILocation(line: 2516, column: 24, scope: !8008)
!8014 = !DILocalVariable(name: "v_max", scope: !8008, file: !3, line: 2516, type: !135)
!8015 = !DILocation(line: 2516, column: 31, scope: !8008)
!8016 = !DILocalVariable(name: "u", scope: !8008, file: !3, line: 2517, type: !135)
!8017 = !DILocation(line: 2517, column: 10, scope: !8008)
!8018 = !DILocalVariable(name: "v", scope: !8008, file: !3, line: 2517, type: !135)
!8019 = !DILocation(line: 2517, column: 13, scope: !8008)
!8020 = !DILocalVariable(name: "ind", scope: !8008, file: !3, line: 2517, type: !135)
!8021 = !DILocation(line: 2517, column: 16, scope: !8008)
!8022 = !DILocalVariable(name: "point", scope: !8008, file: !3, line: 2518, type: !217)
!8023 = !DILocation(line: 2518, column: 12, scope: !8008)
!8024 = !DILocation(line: 2521, column: 15, scope: !8008)
!8025 = !DILocation(line: 2521, column: 18, scope: !8008)
!8026 = !DILocation(line: 2521, column: 14, scope: !8008)
!8027 = !DILocation(line: 2521, column: 12, scope: !8008)
!8028 = !DILocation(line: 2522, column: 15, scope: !8008)
!8029 = !DILocation(line: 2522, column: 21, scope: !8008)
!8030 = !DILocation(line: 2522, column: 23, scope: !8008)
!8031 = !DILocation(line: 2522, column: 18, scope: !8008)
!8032 = !DILocation(line: 2522, column: 14, scope: !8008)
!8033 = !DILocation(line: 2522, column: 12, scope: !8008)
!8034 = !DILocation(line: 2523, column: 15, scope: !8008)
!8035 = !DILocation(line: 2523, column: 18, scope: !8008)
!8036 = !DILocation(line: 2523, column: 14, scope: !8008)
!8037 = !DILocation(line: 2523, column: 12, scope: !8008)
!8038 = !DILocation(line: 2524, column: 15, scope: !8008)
!8039 = !DILocation(line: 2524, column: 21, scope: !8008)
!8040 = !DILocation(line: 2524, column: 23, scope: !8008)
!8041 = !DILocation(line: 2524, column: 18, scope: !8008)
!8042 = !DILocation(line: 2524, column: 14, scope: !8008)
!8043 = !DILocation(line: 2524, column: 12, scope: !8008)
!8044 = !DILocation(line: 2526, column: 25, scope: !8008)
!8045 = !DILocation(line: 2526, column: 18, scope: !8008)
!8046 = !DILocation(line: 2526, column: 28, scope: !8008)
!8047 = !DILocation(line: 2526, column: 38, scope: !8008)
!8048 = !DILocation(line: 2526, column: 36, scope: !8008)
!8049 = !DILocation(line: 2526, column: 6, scope: !8008)
!8050 = !DILocation(line: 2526, column: 15, scope: !8008)
!8051 = !DILocation(line: 2527, column: 25, scope: !8008)
!8052 = !DILocation(line: 2527, column: 18, scope: !8008)
!8053 = !DILocation(line: 2527, column: 28, scope: !8008)
!8054 = !DILocation(line: 2527, column: 38, scope: !8008)
!8055 = !DILocation(line: 2527, column: 36, scope: !8008)
!8056 = !DILocation(line: 2527, column: 6, scope: !8008)
!8057 = !DILocation(line: 2527, column: 15, scope: !8008)
!8058 = !DILocation(line: 2530, column: 15, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8008, file: !3, line: 2530, column: 6)
!8060 = !DILocation(line: 2530, column: 13, scope: !8059)
!8061 = !DILocation(line: 2530, column: 11, scope: !8059)
!8062 = !DILocation(line: 2530, column: 22, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8059, file: !3, line: 2530, column: 6)
!8064 = !DILocation(line: 2530, column: 27, scope: !8063)
!8065 = !DILocation(line: 2530, column: 24, scope: !8063)
!8066 = !DILocation(line: 2530, column: 6, scope: !8059)
!8067 = !DILocation(line: 2531, column: 16, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2531, column: 7)
!8069 = !DILocation(line: 2531, column: 14, scope: !8068)
!8070 = !DILocation(line: 2531, column: 12, scope: !8068)
!8071 = !DILocation(line: 2531, column: 23, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 2531, column: 7)
!8073 = !DILocation(line: 2531, column: 28, scope: !8072)
!8074 = !DILocation(line: 2531, column: 25, scope: !8072)
!8075 = !DILocation(line: 2531, column: 7, scope: !8068)
!8076 = !DILocation(line: 2533, column: 12, scope: !8077)
!8077 = distinct !DILexicalBlock(scope: !8078, file: !3, line: 2533, column: 12)
!8078 = distinct !DILexicalBlock(scope: !8072, file: !3, line: 2531, column: 40)
!8079 = !DILocation(line: 2533, column: 14, scope: !8077)
!8080 = !DILocation(line: 2533, column: 19, scope: !8077)
!8081 = !DILocation(line: 2533, column: 22, scope: !8077)
!8082 = !DILocation(line: 2533, column: 24, scope: !8077)
!8083 = !DILocation(line: 2533, column: 12, scope: !8078)
!8084 = !DILocation(line: 2534, column: 16, scope: !8085)
!8085 = distinct !DILexicalBlock(scope: !8077, file: !3, line: 2533, column: 30)
!8086 = !DILocation(line: 2534, column: 21, scope: !8085)
!8087 = !DILocation(line: 2534, column: 19, scope: !8085)
!8088 = !DILocation(line: 2534, column: 26, scope: !8085)
!8089 = !DILocation(line: 2534, column: 31, scope: !8085)
!8090 = !DILocation(line: 2534, column: 36, scope: !8085)
!8091 = !DILocation(line: 2534, column: 34, scope: !8085)
!8092 = !DILocation(line: 2534, column: 28, scope: !8085)
!8093 = !DILocation(line: 2534, column: 24, scope: !8085)
!8094 = !DILocation(line: 2534, column: 13, scope: !8085)
!8095 = !DILocation(line: 2537, column: 13, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8085, file: !3, line: 2537, column: 13)
!8097 = !DILocation(line: 2537, column: 24, scope: !8096)
!8098 = !DILocation(line: 2537, column: 29, scope: !8096)
!8099 = !DILocation(line: 2537, column: 40, scope: !8096)
!8100 = !DILocation(line: 2537, column: 13, scope: !8085)
!8101 = !DILocalVariable(name: "uv1co", scope: !8102, file: !3, line: 2539, type: !217)
!8102 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 2537, column: 47)
!8103 = !DILocation(line: 2539, column: 16, scope: !8102)
!8104 = !DILocalVariable(name: "uv2co", scope: !8102, file: !3, line: 2539, type: !217)
!8105 = !DILocation(line: 2539, column: 26, scope: !8102)
!8106 = !DILocalVariable(name: "uv3co", scope: !8102, file: !3, line: 2539, type: !217)
!8107 = !DILocation(line: 2539, column: 36, scope: !8102)
!8108 = !DILocalVariable(name: "uv", scope: !8102, file: !3, line: 2539, type: !217)
!8109 = !DILocation(line: 2539, column: 46, scope: !8102)
!8110 = !DILocalVariable(name: "i", scope: !8102, file: !3, line: 2540, type: !135)
!8111 = !DILocation(line: 2540, column: 14, scope: !8102)
!8112 = !DILocation(line: 2540, column: 18, scope: !8102)
!8113 = !DILocation(line: 2540, column: 29, scope: !8102)
!8114 = !DILocation(line: 2540, column: 34, scope: !8102)
!8115 = !DILocalVariable(name: "j", scope: !8102, file: !3, line: 2540, type: !135)
!8116 = !DILocation(line: 2540, column: 46, scope: !8102)
!8117 = !DILocation(line: 2543, column: 15, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 2543, column: 14)
!8119 = !DILocation(line: 2543, column: 26, scope: !8118)
!8120 = !DILocation(line: 2543, column: 31, scope: !8118)
!8121 = !DILocation(line: 2543, column: 14, scope: !8102)
!8122 = !DILocation(line: 2544, column: 22, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2543, column: 37)
!8124 = !DILocation(line: 2544, column: 29, scope: !8123)
!8125 = !DILocation(line: 2544, column: 35, scope: !8123)
!8126 = !DILocation(line: 2544, column: 38, scope: !8123)
!8127 = !DILocation(line: 2544, column: 11, scope: !8123)
!8128 = !DILocation(line: 2545, column: 22, scope: !8123)
!8129 = !DILocation(line: 2545, column: 29, scope: !8123)
!8130 = !DILocation(line: 2545, column: 35, scope: !8123)
!8131 = !DILocation(line: 2545, column: 38, scope: !8123)
!8132 = !DILocation(line: 2545, column: 11, scope: !8123)
!8133 = !DILocation(line: 2546, column: 22, scope: !8123)
!8134 = !DILocation(line: 2546, column: 29, scope: !8123)
!8135 = !DILocation(line: 2546, column: 35, scope: !8123)
!8136 = !DILocation(line: 2546, column: 38, scope: !8123)
!8137 = !DILocation(line: 2546, column: 11, scope: !8123)
!8138 = !DILocation(line: 2547, column: 10, scope: !8123)
!8139 = !DILocation(line: 2549, column: 22, scope: !8140)
!8140 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 2548, column: 15)
!8141 = !DILocation(line: 2549, column: 29, scope: !8140)
!8142 = !DILocation(line: 2549, column: 35, scope: !8140)
!8143 = !DILocation(line: 2549, column: 38, scope: !8140)
!8144 = !DILocation(line: 2549, column: 11, scope: !8140)
!8145 = !DILocation(line: 2550, column: 22, scope: !8140)
!8146 = !DILocation(line: 2550, column: 29, scope: !8140)
!8147 = !DILocation(line: 2550, column: 35, scope: !8140)
!8148 = !DILocation(line: 2550, column: 38, scope: !8140)
!8149 = !DILocation(line: 2550, column: 11, scope: !8140)
!8150 = !DILocation(line: 2551, column: 22, scope: !8140)
!8151 = !DILocation(line: 2551, column: 29, scope: !8140)
!8152 = !DILocation(line: 2551, column: 35, scope: !8140)
!8153 = !DILocation(line: 2551, column: 38, scope: !8140)
!8154 = !DILocation(line: 2551, column: 11, scope: !8140)
!8155 = !DILocation(line: 2555, column: 17, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 2555, column: 10)
!8157 = !DILocation(line: 2555, column: 15, scope: !8156)
!8158 = !DILocation(line: 2555, column: 22, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !3, line: 2555, column: 10)
!8160 = !DILocation(line: 2555, column: 26, scope: !8159)
!8161 = !DILocation(line: 2555, column: 24, scope: !8159)
!8162 = !DILocation(line: 2555, column: 10, scope: !8156)
!8163 = !DILocation(line: 2557, column: 19, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8159, file: !3, line: 2555, column: 43)
!8165 = !DILocation(line: 2557, column: 44, scope: !8164)
!8166 = !DILocation(line: 2557, column: 46, scope: !8164)
!8167 = !DILocation(line: 2557, column: 30, scope: !8164)
!8168 = !DILocation(line: 2557, column: 53, scope: !8164)
!8169 = !DILocation(line: 2557, column: 51, scope: !8164)
!8170 = !DILocation(line: 2557, column: 28, scope: !8164)
!8171 = !DILocation(line: 2557, column: 11, scope: !8164)
!8172 = !DILocation(line: 2557, column: 17, scope: !8164)
!8173 = !DILocation(line: 2558, column: 19, scope: !8164)
!8174 = !DILocation(line: 2558, column: 44, scope: !8164)
!8175 = !DILocation(line: 2558, column: 46, scope: !8164)
!8176 = !DILocation(line: 2558, column: 50, scope: !8164)
!8177 = !DILocation(line: 2558, column: 30, scope: !8164)
!8178 = !DILocation(line: 2558, column: 57, scope: !8164)
!8179 = !DILocation(line: 2558, column: 55, scope: !8164)
!8180 = !DILocation(line: 2558, column: 28, scope: !8164)
!8181 = !DILocation(line: 2558, column: 11, scope: !8164)
!8182 = !DILocation(line: 2558, column: 17, scope: !8164)
!8183 = !DILocation(line: 2559, column: 34, scope: !8164)
!8184 = !DILocation(line: 2559, column: 41, scope: !8164)
!8185 = !DILocation(line: 2559, column: 48, scope: !8164)
!8186 = !DILocation(line: 2559, column: 55, scope: !8164)
!8187 = !DILocation(line: 2559, column: 59, scope: !8164)
!8188 = !DILocation(line: 2559, column: 71, scope: !8164)
!8189 = !DILocation(line: 2559, column: 79, scope: !8164)
!8190 = !DILocation(line: 2559, column: 77, scope: !8164)
!8191 = !DILocation(line: 2559, column: 92, scope: !8164)
!8192 = !DILocation(line: 2559, column: 90, scope: !8164)
!8193 = !DILocation(line: 2559, column: 95, scope: !8164)
!8194 = !DILocation(line: 2559, column: 11, scope: !8164)
!8195 = !DILocation(line: 2560, column: 10, scope: !8164)
!8196 = !DILocation(line: 2555, column: 39, scope: !8159)
!8197 = !DILocation(line: 2555, column: 10, scope: !8159)
!8198 = distinct !{!8198, !8162, !8199}
!8199 = !DILocation(line: 2560, column: 10, scope: !8156)
!8200 = !DILocation(line: 2563, column: 36, scope: !8102)
!8201 = !DILocation(line: 2563, column: 10, scope: !8102)
!8202 = !DILocation(line: 2563, column: 18, scope: !8102)
!8203 = !DILocation(line: 2563, column: 34, scope: !8102)
!8204 = !DILocation(line: 2564, column: 25, scope: !8102)
!8205 = !DILocation(line: 2564, column: 36, scope: !8102)
!8206 = !DILocation(line: 2564, column: 41, scope: !8102)
!8207 = !DILocation(line: 2564, column: 10, scope: !8102)
!8208 = !DILocation(line: 2564, column: 18, scope: !8102)
!8209 = !DILocation(line: 2564, column: 23, scope: !8102)
!8210 = !DILocation(line: 2567, column: 23, scope: !8102)
!8211 = !DILocation(line: 2567, column: 29, scope: !8102)
!8212 = !DILocation(line: 2567, column: 32, scope: !8102)
!8213 = !DILocation(line: 2567, column: 10, scope: !8102)
!8214 = !DILocation(line: 2567, column: 18, scope: !8102)
!8215 = !DILocation(line: 2567, column: 21, scope: !8102)
!8216 = !DILocation(line: 2568, column: 24, scope: !8102)
!8217 = !DILocation(line: 2568, column: 32, scope: !8102)
!8218 = !DILocation(line: 2568, column: 23, scope: !8102)
!8219 = !DILocation(line: 2568, column: 40, scope: !8102)
!8220 = !DILocation(line: 2568, column: 46, scope: !8102)
!8221 = !DILocation(line: 2568, column: 49, scope: !8102)
!8222 = !DILocation(line: 2568, column: 54, scope: !8102)
!8223 = !DILocation(line: 2568, column: 60, scope: !8102)
!8224 = !DILocation(line: 2568, column: 63, scope: !8102)
!8225 = !DILocation(line: 2568, column: 10, scope: !8102)
!8226 = !DILocation(line: 2568, column: 18, scope: !8102)
!8227 = !DILocation(line: 2568, column: 21, scope: !8102)
!8228 = !DILocation(line: 2569, column: 24, scope: !8102)
!8229 = !DILocation(line: 2569, column: 32, scope: !8102)
!8230 = !DILocation(line: 2569, column: 23, scope: !8102)
!8231 = !DILocation(line: 2569, column: 40, scope: !8102)
!8232 = !DILocation(line: 2569, column: 46, scope: !8102)
!8233 = !DILocation(line: 2569, column: 49, scope: !8102)
!8234 = !DILocation(line: 2569, column: 54, scope: !8102)
!8235 = !DILocation(line: 2569, column: 60, scope: !8102)
!8236 = !DILocation(line: 2569, column: 63, scope: !8102)
!8237 = !DILocation(line: 2569, column: 10, scope: !8102)
!8238 = !DILocation(line: 2569, column: 18, scope: !8102)
!8239 = !DILocation(line: 2569, column: 21, scope: !8102)
!8240 = !DILocation(line: 2571, column: 14, scope: !8102)
!8241 = !DILocation(line: 2571, column: 20, scope: !8102)
!8242 = !DILocation(line: 2571, column: 12, scope: !8102)
!8243 = !DILocation(line: 2572, column: 10, scope: !8102)
!8244 = !DILocation(line: 2574, column: 8, scope: !8085)
!8245 = !DILocation(line: 2575, column: 7, scope: !8078)
!8246 = !DILocation(line: 2531, column: 36, scope: !8072)
!8247 = !DILocation(line: 2531, column: 7, scope: !8072)
!8248 = distinct !{!8248, !8075, !8249}
!8249 = !DILocation(line: 2575, column: 7, scope: !8068)
!8250 = !DILocation(line: 2530, column: 35, scope: !8063)
!8251 = !DILocation(line: 2530, column: 6, scope: !8063)
!8252 = distinct !{!8252, !8066, !8253}
!8253 = !DILocation(line: 2575, column: 7, scope: !8059)
!8254 = !DILocation(line: 2576, column: 5, scope: !8008)
!8255 = !DILocation(line: 2577, column: 4, scope: !7991)
!8256 = !DILocation(line: 2510, column: 27, scope: !7986)
!8257 = !DILocation(line: 2510, column: 4, scope: !7986)
!8258 = distinct !{!8258, !7989, !8259}
!8259 = !DILocation(line: 2577, column: 4, scope: !7983)
!8260 = !DILocation(line: 2578, column: 3, scope: !7980)
!8261 = !DILocation(line: 2508, column: 26, scope: !7975)
!8262 = !DILocation(line: 2508, column: 3, scope: !7975)
!8263 = distinct !{!8263, !7978, !8264}
!8264 = !DILocation(line: 2578, column: 3, scope: !7972)
!8265 = !DILocation(line: 2584, column: 11, scope: !8266)
!8266 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2584, column: 3)
!8267 = !DILocation(line: 2584, column: 8, scope: !8266)
!8268 = !DILocation(line: 2584, column: 16, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 2584, column: 3)
!8270 = !DILocation(line: 2584, column: 21, scope: !8269)
!8271 = !DILocation(line: 2584, column: 19, scope: !8269)
!8272 = !DILocation(line: 2584, column: 3, scope: !8266)
!8273 = !DILocalVariable(name: "tx", scope: !8274, file: !3, line: 2585, type: !135)
!8274 = distinct !DILexicalBlock(scope: !8269, file: !3, line: 2584, column: 30)
!8275 = !DILocation(line: 2585, column: 8, scope: !8274)
!8276 = !DILocation(line: 2586, column: 12, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8274, file: !3, line: 2586, column: 4)
!8278 = !DILocation(line: 2586, column: 9, scope: !8277)
!8279 = !DILocation(line: 2586, column: 17, scope: !8280)
!8280 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 2586, column: 4)
!8281 = !DILocation(line: 2586, column: 22, scope: !8280)
!8282 = !DILocation(line: 2586, column: 20, scope: !8280)
!8283 = !DILocation(line: 2586, column: 4, scope: !8277)
!8284 = !DILocalVariable(name: "index", scope: !8285, file: !3, line: 2587, type: !135)
!8285 = distinct !DILexicalBlock(scope: !8280, file: !3, line: 2586, column: 31)
!8286 = !DILocation(line: 2587, column: 9, scope: !8285)
!8287 = !DILocation(line: 2587, column: 17, scope: !8285)
!8288 = !DILocation(line: 2587, column: 22, scope: !8285)
!8289 = !DILocation(line: 2587, column: 26, scope: !8285)
!8290 = !DILocation(line: 2587, column: 24, scope: !8285)
!8291 = !DILocation(line: 2587, column: 20, scope: !8285)
!8292 = !DILocalVariable(name: "tPoint", scope: !8285, file: !3, line: 2588, type: !188)
!8293 = !DILocation(line: 2588, column: 19, scope: !8285)
!8294 = !DILocation(line: 2588, column: 30, scope: !8285)
!8295 = !DILocation(line: 2588, column: 41, scope: !8285)
!8296 = !DILocation(line: 2590, column: 9, scope: !8297)
!8297 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2590, column: 9)
!8298 = !DILocation(line: 2590, column: 17, scope: !8297)
!8299 = !DILocation(line: 2590, column: 28, scope: !8297)
!8300 = !DILocation(line: 2590, column: 34, scope: !8297)
!8301 = !DILocation(line: 2590, column: 37, scope: !8297)
!8302 = !DILocation(line: 2590, column: 45, scope: !8297)
!8303 = !DILocation(line: 2590, column: 61, scope: !8297)
!8304 = !DILocation(line: 2590, column: 9, scope: !8285)
!8305 = !DILocation(line: 2590, column: 89, scope: !8297)
!8306 = !DILocation(line: 2590, column: 100, scope: !8297)
!8307 = !DILocation(line: 2590, column: 108, scope: !8297)
!8308 = !DILocation(line: 2590, column: 125, scope: !8297)
!8309 = !DILocation(line: 2590, column: 68, scope: !8297)
!8310 = !DILocation(line: 2590, column: 76, scope: !8297)
!8311 = !DILocation(line: 2590, column: 87, scope: !8297)
!8312 = !DILocation(line: 2591, column: 9, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 2591, column: 9)
!8314 = !DILocation(line: 2591, column: 17, scope: !8313)
!8315 = !DILocation(line: 2591, column: 28, scope: !8313)
!8316 = !DILocation(line: 2591, column: 9, scope: !8285)
!8317 = !DILocation(line: 2591, column: 48, scope: !8313)
!8318 = !DILocation(line: 2591, column: 35, scope: !8313)
!8319 = !DILocation(line: 2592, column: 4, scope: !8285)
!8320 = !DILocation(line: 2586, column: 27, scope: !8280)
!8321 = !DILocation(line: 2586, column: 4, scope: !8280)
!8322 = distinct !{!8322, !8283, !8323}
!8323 = !DILocation(line: 2592, column: 4, scope: !8277)
!8324 = !DILocation(line: 2593, column: 3, scope: !8274)
!8325 = !DILocation(line: 2584, column: 26, scope: !8269)
!8326 = !DILocation(line: 2584, column: 3, scope: !8269)
!8327 = distinct !{!8327, !8272, !8328}
!8328 = !DILocation(line: 2593, column: 3, scope: !8266)
!8329 = !DILocalVariable(name: "i", scope: !8330, file: !3, line: 2597, type: !135)
!8330 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2596, column: 3)
!8331 = !DILocation(line: 2597, column: 8, scope: !8330)
!8332 = !DILocalVariable(name: "cursor", scope: !8330, file: !3, line: 2597, type: !135)
!8333 = !DILocation(line: 2597, column: 11, scope: !8330)
!8334 = !DILocation(line: 2601, column: 11, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 2601, column: 4)
!8336 = !DILocation(line: 2601, column: 9, scope: !8335)
!8337 = !DILocation(line: 2601, column: 16, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8335, file: !3, line: 2601, column: 4)
!8339 = !DILocation(line: 2601, column: 20, scope: !8338)
!8340 = !DILocation(line: 2601, column: 24, scope: !8338)
!8341 = !DILocation(line: 2601, column: 22, scope: !8338)
!8342 = !DILocation(line: 2601, column: 18, scope: !8338)
!8343 = !DILocation(line: 2601, column: 4, scope: !8335)
!8344 = !DILocation(line: 2602, column: 9, scope: !8345)
!8345 = distinct !DILexicalBlock(scope: !8346, file: !3, line: 2602, column: 9)
!8346 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 2601, column: 32)
!8347 = !DILocation(line: 2602, column: 20, scope: !8345)
!8348 = !DILocation(line: 2602, column: 23, scope: !8345)
!8349 = !DILocation(line: 2602, column: 34, scope: !8345)
!8350 = !DILocation(line: 2602, column: 9, scope: !8346)
!8351 = !DILocation(line: 2603, column: 23, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8345, file: !3, line: 2602, column: 41)
!8353 = !DILocation(line: 2603, column: 6, scope: !8352)
!8354 = !DILocation(line: 2603, column: 18, scope: !8352)
!8355 = !DILocation(line: 2603, column: 21, scope: !8352)
!8356 = !DILocation(line: 2604, column: 12, scope: !8352)
!8357 = !DILocation(line: 2605, column: 5, scope: !8352)
!8358 = !DILocation(line: 2606, column: 4, scope: !8346)
!8359 = !DILocation(line: 2601, column: 28, scope: !8338)
!8360 = !DILocation(line: 2601, column: 4, scope: !8338)
!8361 = distinct !{!8361, !8343, !8362}
!8362 = !DILocation(line: 2606, column: 4, scope: !8335)
!8363 = !DILocation(line: 2608, column: 26, scope: !8330)
!8364 = !DILocation(line: 2608, column: 30, scope: !8330)
!8365 = !DILocation(line: 2608, column: 28, scope: !8330)
!8366 = !DILocation(line: 2608, column: 4, scope: !8330)
!8367 = !DILocation(line: 2608, column: 11, scope: !8330)
!8368 = !DILocation(line: 2608, column: 24, scope: !8330)
!8369 = !DILocation(line: 2609, column: 35, scope: !8330)
!8370 = !DILocation(line: 2609, column: 4, scope: !8330)
!8371 = !DILocation(line: 2611, column: 8, scope: !8372)
!8372 = distinct !DILexicalBlock(scope: !8330, file: !3, line: 2611, column: 8)
!8373 = !DILocation(line: 2611, column: 15, scope: !8372)
!8374 = !DILocation(line: 2611, column: 8, scope: !8330)
!8375 = !DILocalVariable(name: "ed", scope: !8376, file: !3, line: 2612, type: !5852)
!8376 = distinct !DILexicalBlock(scope: !8372, file: !3, line: 2611, column: 25)
!8377 = !DILocation(line: 2612, column: 19, scope: !8376)
!8378 = !DILocation(line: 2612, column: 24, scope: !8376)
!8379 = !DILocation(line: 2612, column: 31, scope: !8376)
!8380 = !DILocalVariable(name: "n_pos", scope: !8376, file: !3, line: 2613, type: !7)
!8381 = !DILocation(line: 2613, column: 18, scope: !8376)
!8382 = !DILocation(line: 2614, column: 13, scope: !8383)
!8383 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 2614, column: 5)
!8384 = !DILocation(line: 2614, column: 10, scope: !8383)
!8385 = !DILocation(line: 2614, column: 18, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8383, file: !3, line: 2614, column: 5)
!8387 = !DILocation(line: 2614, column: 23, scope: !8386)
!8388 = !DILocation(line: 2614, column: 21, scope: !8386)
!8389 = !DILocation(line: 2614, column: 5, scope: !8383)
!8390 = !DILocalVariable(name: "tx", scope: !8391, file: !3, line: 2615, type: !135)
!8391 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 2614, column: 32)
!8392 = !DILocation(line: 2615, column: 10, scope: !8391)
!8393 = !DILocation(line: 2616, column: 14, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 2616, column: 6)
!8395 = !DILocation(line: 2616, column: 11, scope: !8394)
!8396 = !DILocation(line: 2616, column: 19, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8394, file: !3, line: 2616, column: 6)
!8398 = !DILocation(line: 2616, column: 24, scope: !8397)
!8399 = !DILocation(line: 2616, column: 22, scope: !8397)
!8400 = !DILocation(line: 2616, column: 6, scope: !8394)
!8401 = !DILocalVariable(name: "i", scope: !8402, file: !3, line: 2617, type: !135)
!8402 = distinct !DILexicalBlock(scope: !8397, file: !3, line: 2616, column: 33)
!8403 = !DILocation(line: 2617, column: 11, scope: !8402)
!8404 = !DILocalVariable(name: "index", scope: !8402, file: !3, line: 2617, type: !135)
!8405 = !DILocation(line: 2617, column: 14, scope: !8402)
!8406 = !DILocation(line: 2617, column: 22, scope: !8402)
!8407 = !DILocation(line: 2617, column: 27, scope: !8402)
!8408 = !DILocation(line: 2617, column: 31, scope: !8402)
!8409 = !DILocation(line: 2617, column: 29, scope: !8402)
!8410 = !DILocation(line: 2617, column: 25, scope: !8402)
!8411 = !DILocation(line: 2619, column: 11, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8402, file: !3, line: 2619, column: 11)
!8413 = !DILocation(line: 2619, column: 22, scope: !8412)
!8414 = !DILocation(line: 2619, column: 29, scope: !8412)
!8415 = !DILocation(line: 2619, column: 40, scope: !8412)
!8416 = !DILocation(line: 2619, column: 11, scope: !8402)
!8417 = !DILocation(line: 2620, column: 42, scope: !8418)
!8418 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 2619, column: 47)
!8419 = !DILocation(line: 2620, column: 8, scope: !8418)
!8420 = !DILocation(line: 2620, column: 12, scope: !8418)
!8421 = !DILocation(line: 2620, column: 20, scope: !8418)
!8422 = !DILocation(line: 2620, column: 32, scope: !8418)
!8423 = !DILocation(line: 2620, column: 40, scope: !8418)
!8424 = !DILocation(line: 2621, column: 8, scope: !8418)
!8425 = !DILocation(line: 2621, column: 12, scope: !8418)
!8426 = !DILocation(line: 2621, column: 18, scope: !8418)
!8427 = !DILocation(line: 2621, column: 30, scope: !8418)
!8428 = !DILocation(line: 2621, column: 38, scope: !8418)
!8429 = !DILocation(line: 2623, column: 15, scope: !8430)
!8430 = distinct !DILexicalBlock(scope: !8418, file: !3, line: 2623, column: 8)
!8431 = !DILocation(line: 2623, column: 13, scope: !8430)
!8432 = !DILocation(line: 2623, column: 20, scope: !8433)
!8433 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 2623, column: 8)
!8434 = !DILocation(line: 2623, column: 22, scope: !8433)
!8435 = !DILocation(line: 2623, column: 8, scope: !8430)
!8436 = !DILocalVariable(name: "n_target", scope: !8437, file: !3, line: 2627, type: !135)
!8437 = distinct !DILexicalBlock(scope: !8433, file: !3, line: 2623, column: 32)
!8438 = !DILocation(line: 2627, column: 13, scope: !8437)
!8439 = !DILocation(line: 2627, column: 56, scope: !8437)
!8440 = !DILocation(line: 2627, column: 68, scope: !8437)
!8441 = !DILocation(line: 2627, column: 72, scope: !8437)
!8442 = !DILocation(line: 2627, column: 80, scope: !8437)
!8443 = !DILocation(line: 2627, column: 83, scope: !8437)
!8444 = !DILocation(line: 2627, column: 86, scope: !8437)
!8445 = !DILocation(line: 2627, column: 90, scope: !8437)
!8446 = !DILocation(line: 2627, column: 94, scope: !8437)
!8447 = !DILocation(line: 2627, column: 24, scope: !8437)
!8448 = !DILocation(line: 2629, column: 13, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8437, file: !3, line: 2629, column: 13)
!8450 = !DILocation(line: 2629, column: 22, scope: !8449)
!8451 = !DILocation(line: 2629, column: 13, scope: !8437)
!8452 = !DILocation(line: 2630, column: 32, scope: !8453)
!8453 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 2629, column: 28)
!8454 = !DILocation(line: 2630, column: 44, scope: !8453)
!8455 = !DILocation(line: 2630, column: 10, scope: !8453)
!8456 = !DILocation(line: 2630, column: 14, scope: !8453)
!8457 = !DILocation(line: 2630, column: 23, scope: !8453)
!8458 = !DILocation(line: 2630, column: 30, scope: !8453)
!8459 = !DILocation(line: 2631, column: 10, scope: !8453)
!8460 = !DILocation(line: 2631, column: 14, scope: !8453)
!8461 = !DILocation(line: 2631, column: 20, scope: !8453)
!8462 = !DILocation(line: 2631, column: 32, scope: !8453)
!8463 = !DILocation(line: 2631, column: 39, scope: !8453)
!8464 = !DILocation(line: 2632, column: 15, scope: !8453)
!8465 = !DILocation(line: 2633, column: 9, scope: !8453)
!8466 = !DILocation(line: 2634, column: 18, scope: !8467)
!8467 = distinct !DILexicalBlock(scope: !8449, file: !3, line: 2634, column: 18)
!8468 = !DILocation(line: 2634, column: 27, scope: !8467)
!8469 = !DILocation(line: 2634, column: 43, scope: !8467)
!8470 = !DILocation(line: 2634, column: 46, scope: !8467)
!8471 = !DILocation(line: 2634, column: 55, scope: !8467)
!8472 = !DILocation(line: 2634, column: 18, scope: !8449)
!8473 = !DILocation(line: 2635, column: 10, scope: !8474)
!8474 = distinct !DILexicalBlock(scope: !8467, file: !3, line: 2634, column: 74)
!8475 = !DILocation(line: 2635, column: 14, scope: !8474)
!8476 = !DILocation(line: 2635, column: 20, scope: !8474)
!8477 = !DILocation(line: 2635, column: 32, scope: !8474)
!8478 = !DILocation(line: 2635, column: 40, scope: !8474)
!8479 = !DILocation(line: 2636, column: 9, scope: !8474)
!8480 = !DILocation(line: 2637, column: 8, scope: !8437)
!8481 = !DILocation(line: 2623, column: 28, scope: !8433)
!8482 = !DILocation(line: 2623, column: 8, scope: !8433)
!8483 = distinct !{!8483, !8435, !8484}
!8484 = !DILocation(line: 2637, column: 8, scope: !8430)
!8485 = !DILocation(line: 2638, column: 7, scope: !8418)
!8486 = !DILocation(line: 2639, column: 6, scope: !8402)
!8487 = !DILocation(line: 2616, column: 29, scope: !8397)
!8488 = !DILocation(line: 2616, column: 6, scope: !8397)
!8489 = distinct !{!8489, !8400, !8490}
!8490 = !DILocation(line: 2639, column: 6, scope: !8394)
!8491 = !DILocation(line: 2640, column: 5, scope: !8391)
!8492 = !DILocation(line: 2614, column: 28, scope: !8386)
!8493 = !DILocation(line: 2614, column: 5, scope: !8386)
!8494 = distinct !{!8494, !8389, !8495}
!8495 = !DILocation(line: 2640, column: 5, scope: !8383)
!8496 = !DILocation(line: 2641, column: 4, scope: !8376)
!8497 = !DILocalVariable(name: "f_data", scope: !8498, file: !3, line: 2646, type: !183)
!8498 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 2645, column: 3)
!8499 = !DILocation(line: 2646, column: 22, scope: !8498)
!8500 = !DILocation(line: 2646, column: 31, scope: !8498)
!8501 = !DILocation(line: 2647, column: 8, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 2647, column: 8)
!8503 = !DILocation(line: 2647, column: 8, scope: !8498)
!8504 = !DILocation(line: 2648, column: 20, scope: !8505)
!8505 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 2647, column: 16)
!8506 = !DILocation(line: 2648, column: 32, scope: !8505)
!8507 = !DILocation(line: 2648, column: 46, scope: !8505)
!8508 = !DILocation(line: 2648, column: 5, scope: !8505)
!8509 = !DILocation(line: 2648, column: 13, scope: !8505)
!8510 = !DILocation(line: 2648, column: 18, scope: !8505)
!8511 = !DILocation(line: 2649, column: 34, scope: !8505)
!8512 = !DILocation(line: 2649, column: 46, scope: !8505)
!8513 = !DILocation(line: 2649, column: 62, scope: !8505)
!8514 = !DILocation(line: 2649, column: 60, scope: !8505)
!8515 = !DILocation(line: 2649, column: 73, scope: !8505)
!8516 = !DILocation(line: 2649, column: 5, scope: !8505)
!8517 = !DILocation(line: 2649, column: 13, scope: !8505)
!8518 = !DILocation(line: 2649, column: 32, scope: !8505)
!8519 = !DILocation(line: 2651, column: 10, scope: !8520)
!8520 = distinct !DILexicalBlock(scope: !8505, file: !3, line: 2651, column: 9)
!8521 = !DILocation(line: 2651, column: 18, scope: !8520)
!8522 = !DILocation(line: 2651, column: 23, scope: !8520)
!8523 = !DILocation(line: 2651, column: 27, scope: !8520)
!8524 = !DILocation(line: 2651, column: 35, scope: !8520)
!8525 = !DILocation(line: 2651, column: 9, scope: !8505)
!8526 = !DILocation(line: 2651, column: 61, scope: !8520)
!8527 = !DILocation(line: 2651, column: 55, scope: !8520)
!8528 = !DILocation(line: 2652, column: 4, scope: !8505)
!8529 = !DILocation(line: 2654, column: 11, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 2653, column: 9)
!8531 = !DILocation(line: 2657, column: 26, scope: !8498)
!8532 = !DILocation(line: 2657, column: 4, scope: !8498)
!8533 = !DILocation(line: 2657, column: 11, scope: !8498)
!8534 = !DILocation(line: 2657, column: 24, scope: !8498)
!8535 = !DILocation(line: 2660, column: 8, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8498, file: !3, line: 2660, column: 8)
!8537 = !DILocation(line: 2660, column: 8, scope: !8498)
!8538 = !DILocation(line: 2661, column: 9, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8540, file: !3, line: 2661, column: 9)
!8540 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 2660, column: 15)
!8541 = !DILocation(line: 2661, column: 9, scope: !8540)
!8542 = !DILocation(line: 2662, column: 10, scope: !8543)
!8543 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 2662, column: 10)
!8544 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 2661, column: 17)
!8545 = !DILocation(line: 2662, column: 18, scope: !8543)
!8546 = !DILocation(line: 2662, column: 10, scope: !8544)
!8547 = !DILocation(line: 2662, column: 24, scope: !8543)
!8548 = !DILocation(line: 2662, column: 34, scope: !8543)
!8549 = !DILocation(line: 2662, column: 42, scope: !8543)
!8550 = !DILocation(line: 2663, column: 10, scope: !8551)
!8551 = distinct !DILexicalBlock(scope: !8544, file: !3, line: 2663, column: 10)
!8552 = !DILocation(line: 2663, column: 18, scope: !8551)
!8553 = !DILocation(line: 2663, column: 10, scope: !8544)
!8554 = !DILocation(line: 2663, column: 38, scope: !8551)
!8555 = !DILocation(line: 2663, column: 48, scope: !8551)
!8556 = !DILocation(line: 2663, column: 56, scope: !8551)
!8557 = !DILocation(line: 2664, column: 6, scope: !8544)
!8558 = !DILocation(line: 2664, column: 16, scope: !8544)
!8559 = !DILocation(line: 2665, column: 5, scope: !8544)
!8560 = !DILocation(line: 2666, column: 4, scope: !8540)
!8561 = !DILocalVariable(name: "index", scope: !8562, file: !3, line: 2668, type: !135)
!8562 = distinct !DILexicalBlock(scope: !8536, file: !3, line: 2667, column: 9)
!8563 = !DILocation(line: 2668, column: 9, scope: !8562)
!8564 = !DILocalVariable(name: "cursor", scope: !8562, file: !3, line: 2668, type: !135)
!8565 = !DILocation(line: 2668, column: 16, scope: !8562)
!8566 = !DILocation(line: 2669, column: 27, scope: !8562)
!8567 = !DILocation(line: 2669, column: 5, scope: !8562)
!8568 = !DILocation(line: 2669, column: 12, scope: !8562)
!8569 = !DILocation(line: 2669, column: 25, scope: !8562)
!8570 = !DILocation(line: 2670, column: 26, scope: !8562)
!8571 = !DILocation(line: 2670, column: 5, scope: !8562)
!8572 = !DILocation(line: 2670, column: 12, scope: !8562)
!8573 = !DILocation(line: 2670, column: 24, scope: !8562)
!8574 = !DILocation(line: 2672, column: 16, scope: !8575)
!8575 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 2672, column: 5)
!8576 = !DILocation(line: 2672, column: 10, scope: !8575)
!8577 = !DILocation(line: 2672, column: 21, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2672, column: 5)
!8579 = !DILocation(line: 2672, column: 30, scope: !8578)
!8580 = !DILocation(line: 2672, column: 34, scope: !8578)
!8581 = !DILocation(line: 2672, column: 32, scope: !8578)
!8582 = !DILocation(line: 2672, column: 27, scope: !8578)
!8583 = !DILocation(line: 2672, column: 5, scope: !8575)
!8584 = !DILocation(line: 2673, column: 10, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8586, file: !3, line: 2673, column: 10)
!8586 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 2672, column: 47)
!8587 = !DILocation(line: 2673, column: 21, scope: !8585)
!8588 = !DILocation(line: 2673, column: 28, scope: !8585)
!8589 = !DILocation(line: 2673, column: 39, scope: !8585)
!8590 = !DILocation(line: 2673, column: 10, scope: !8586)
!8591 = !DILocation(line: 2674, column: 15, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 2673, column: 46)
!8593 = !DILocation(line: 2674, column: 23, scope: !8592)
!8594 = !DILocation(line: 2674, column: 28, scope: !8592)
!8595 = !DILocation(line: 2674, column: 7, scope: !8592)
!8596 = !DILocation(line: 2674, column: 38, scope: !8592)
!8597 = !DILocation(line: 2674, column: 49, scope: !8592)
!8598 = !DILocation(line: 2675, column: 15, scope: !8592)
!8599 = !DILocation(line: 2675, column: 23, scope: !8592)
!8600 = !DILocation(line: 2675, column: 42, scope: !8592)
!8601 = !DILocation(line: 2675, column: 51, scope: !8592)
!8602 = !DILocation(line: 2675, column: 49, scope: !8592)
!8603 = !DILocation(line: 2675, column: 7, scope: !8592)
!8604 = !DILocation(line: 2675, column: 65, scope: !8592)
!8605 = !DILocation(line: 2675, column: 77, scope: !8592)
!8606 = !DILocation(line: 2675, column: 85, scope: !8592)
!8607 = !DILocation(line: 2675, column: 83, scope: !8592)
!8608 = !DILocation(line: 2675, column: 114, scope: !8592)
!8609 = !DILocation(line: 2675, column: 112, scope: !8592)
!8610 = !DILocation(line: 2676, column: 13, scope: !8592)
!8611 = !DILocation(line: 2677, column: 6, scope: !8592)
!8612 = !DILocation(line: 2678, column: 5, scope: !8586)
!8613 = !DILocation(line: 2672, column: 43, scope: !8578)
!8614 = !DILocation(line: 2672, column: 5, scope: !8578)
!8615 = distinct !{!8615, !8583, !8616}
!8616 = !DILocation(line: 2678, column: 5, scope: !8575)
!8617 = !DILocation(line: 2681, column: 2, scope: !7407)
!8618 = !DILocation(line: 2682, column: 6, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2682, column: 6)
!8620 = !DILocation(line: 2682, column: 12, scope: !8619)
!8621 = !DILocation(line: 2682, column: 6, scope: !7090)
!8622 = !DILocation(line: 2683, column: 12, scope: !8619)
!8623 = !DILocation(line: 2683, column: 3, scope: !8619)
!8624 = !DILocation(line: 2685, column: 6, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2685, column: 6)
!8626 = !DILocation(line: 2685, column: 6, scope: !7090)
!8627 = !DILocation(line: 2685, column: 14, scope: !8625)
!8628 = !DILocation(line: 2685, column: 24, scope: !8625)
!8629 = !DILocation(line: 2686, column: 6, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2686, column: 6)
!8631 = !DILocation(line: 2686, column: 6, scope: !7090)
!8632 = !DILocation(line: 2686, column: 18, scope: !8630)
!8633 = !DILocation(line: 2686, column: 28, scope: !8630)
!8634 = !DILocation(line: 2687, column: 6, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2687, column: 6)
!8636 = !DILocation(line: 2687, column: 6, scope: !7090)
!8637 = !DILocation(line: 2687, column: 19, scope: !8635)
!8638 = !DILocation(line: 2687, column: 29, scope: !8635)
!8639 = !DILocation(line: 2688, column: 6, scope: !8640)
!8640 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2688, column: 6)
!8641 = !DILocation(line: 2688, column: 6, scope: !7090)
!8642 = !DILocation(line: 2688, column: 19, scope: !8640)
!8643 = !DILocation(line: 2688, column: 29, scope: !8640)
!8644 = !DILocation(line: 2691, column: 7, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 2691, column: 6)
!8646 = !DILocation(line: 2691, column: 6, scope: !7090)
!8647 = !DILocation(line: 2692, column: 36, scope: !8648)
!8648 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2691, column: 14)
!8649 = !DILocation(line: 2692, column: 3, scope: !8648)
!8650 = !DILocation(line: 2717, column: 32, scope: !8648)
!8651 = !DILocation(line: 2717, column: 39, scope: !8648)
!8652 = !DILocation(line: 2717, column: 3, scope: !8648)
!8653 = !DILocation(line: 2718, column: 2, scope: !8648)
!8654 = !DILocation(line: 2720, column: 10, scope: !7090)
!8655 = !DILocation(line: 2720, column: 16, scope: !7090)
!8656 = !DILocation(line: 2720, column: 2, scope: !7090)
!8657 = !DILocation(line: 2721, column: 1, scope: !7090)
!8658 = distinct !DISubprogram(name: "setError", scope: !3, file: !3, line: 235, type: !8659, scopeLine: 236, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!8659 = !DISubroutineType(types: !8660)
!8660 = !{!135, !3346, !1664}
!8661 = !DILocalVariable(name: "canvas", arg: 1, scope: !8658, file: !3, line: 235, type: !3346)
!8662 = !DILocation(line: 235, column: 49, scope: !8658)
!8663 = !DILocalVariable(name: "string", arg: 2, scope: !8658, file: !3, line: 235, type: !1664)
!8664 = !DILocation(line: 235, column: 69, scope: !8658)
!8665 = !DILocation(line: 238, column: 14, scope: !8658)
!8666 = !DILocation(line: 238, column: 22, scope: !8658)
!8667 = !DILocation(line: 238, column: 29, scope: !8658)
!8668 = !DILocation(line: 238, column: 2, scope: !8658)
!8669 = !DILocation(line: 239, column: 2, scope: !8658)
!8670 = distinct !DISubprogram(name: "copy_v2_v2", scope: !5013, file: !5013, line: 58, type: !5014, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!8671 = !DILocalVariable(name: "r", arg: 1, scope: !8670, file: !5013, line: 58, type: !233)
!8672 = !DILocation(line: 58, column: 31, scope: !8670)
!8673 = !DILocalVariable(name: "a", arg: 2, scope: !8670, file: !5013, line: 58, type: !2195)
!8674 = !DILocation(line: 58, column: 49, scope: !8670)
!8675 = !DILocation(line: 60, column: 9, scope: !8670)
!8676 = !DILocation(line: 60, column: 2, scope: !8670)
!8677 = !DILocation(line: 60, column: 7, scope: !8670)
!8678 = !DILocation(line: 61, column: 9, scope: !8670)
!8679 = !DILocation(line: 61, column: 2, scope: !8670)
!8680 = !DILocation(line: 61, column: 7, scope: !8670)
!8681 = !DILocation(line: 62, column: 1, scope: !8670)
!8682 = distinct !DISubprogram(name: "sub_v2_v2v2", scope: !5013, file: !5013, line: 338, type: !8683, scopeLine: 339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!8683 = !DISubroutineType(types: !8684)
!8684 = !{null, !233, !2195, !2195}
!8685 = !DILocalVariable(name: "r", arg: 1, scope: !8682, file: !5013, line: 338, type: !233)
!8686 = !DILocation(line: 338, column: 32, scope: !8682)
!8687 = !DILocalVariable(name: "a", arg: 2, scope: !8682, file: !5013, line: 338, type: !2195)
!8688 = !DILocation(line: 338, column: 50, scope: !8682)
!8689 = !DILocalVariable(name: "b", arg: 3, scope: !8682, file: !5013, line: 338, type: !2195)
!8690 = !DILocation(line: 338, column: 68, scope: !8682)
!8691 = !DILocation(line: 340, column: 9, scope: !8682)
!8692 = !DILocation(line: 340, column: 16, scope: !8682)
!8693 = !DILocation(line: 340, column: 14, scope: !8682)
!8694 = !DILocation(line: 340, column: 2, scope: !8682)
!8695 = !DILocation(line: 340, column: 7, scope: !8682)
!8696 = !DILocation(line: 341, column: 9, scope: !8682)
!8697 = !DILocation(line: 341, column: 16, scope: !8682)
!8698 = !DILocation(line: 341, column: 14, scope: !8682)
!8699 = !DILocation(line: 341, column: 2, scope: !8682)
!8700 = !DILocation(line: 341, column: 7, scope: !8682)
!8701 = !DILocation(line: 342, column: 1, scope: !8682)
!8702 = distinct !DISubprogram(name: "dynamicPaint_findNeighbourPixel", scope: !3, file: !3, line: 2059, type: !8703, scopeLine: 2061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!8703 = !DISubroutineType(types: !8704)
!8704 = !{!135, !188, !2003, !1664, !135, !135, !135, !135, !135}
!8705 = !DILocalVariable(name: "tempPoints", arg: 1, scope: !8702, file: !3, line: 2059, type: !188)
!8706 = !DILocation(line: 2059, column: 58, scope: !8702)
!8707 = !DILocalVariable(name: "dm", arg: 2, scope: !8702, file: !3, line: 2059, type: !2003)
!8708 = !DILocation(line: 2059, column: 83, scope: !8702)
!8709 = !DILocalVariable(name: "uvname", arg: 3, scope: !8702, file: !3, line: 2060, type: !1664)
!8710 = !DILocation(line: 2060, column: 56, scope: !8702)
!8711 = !DILocalVariable(name: "w", arg: 4, scope: !8702, file: !3, line: 2060, type: !135)
!8712 = !DILocation(line: 2060, column: 68, scope: !8702)
!8713 = !DILocalVariable(name: "h", arg: 5, scope: !8702, file: !3, line: 2060, type: !135)
!8714 = !DILocation(line: 2060, column: 75, scope: !8702)
!8715 = !DILocalVariable(name: "px", arg: 6, scope: !8702, file: !3, line: 2060, type: !135)
!8716 = !DILocation(line: 2060, column: 82, scope: !8702)
!8717 = !DILocalVariable(name: "py", arg: 7, scope: !8702, file: !3, line: 2060, type: !135)
!8718 = !DILocation(line: 2060, column: 90, scope: !8702)
!8719 = !DILocalVariable(name: "n_index", arg: 8, scope: !8702, file: !3, line: 2060, type: !135)
!8720 = !DILocation(line: 2060, column: 98, scope: !8702)
!8721 = !DILocalVariable(name: "x", scope: !8702, file: !3, line: 2067, type: !135)
!8722 = !DILocation(line: 2067, column: 6, scope: !8702)
!8723 = !DILocalVariable(name: "y", scope: !8702, file: !3, line: 2067, type: !135)
!8724 = !DILocation(line: 2067, column: 9, scope: !8702)
!8725 = !DILocalVariable(name: "tPoint", scope: !8702, file: !3, line: 2068, type: !188)
!8726 = !DILocation(line: 2068, column: 16, scope: !8702)
!8727 = !DILocalVariable(name: "cPoint", scope: !8702, file: !3, line: 2069, type: !188)
!8728 = !DILocation(line: 2069, column: 16, scope: !8702)
!8729 = !DILocation(line: 2072, column: 6, scope: !8702)
!8730 = !DILocation(line: 2072, column: 18, scope: !8702)
!8731 = !DILocation(line: 2072, column: 11, scope: !8702)
!8732 = !DILocation(line: 2072, column: 9, scope: !8702)
!8733 = !DILocation(line: 2072, column: 4, scope: !8702)
!8734 = !DILocation(line: 2073, column: 6, scope: !8702)
!8735 = !DILocation(line: 2073, column: 18, scope: !8702)
!8736 = !DILocation(line: 2073, column: 11, scope: !8702)
!8737 = !DILocation(line: 2073, column: 9, scope: !8702)
!8738 = !DILocation(line: 2073, column: 4, scope: !8702)
!8739 = !DILocation(line: 2075, column: 6, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2075, column: 6)
!8741 = !DILocation(line: 2075, column: 8, scope: !8740)
!8742 = !DILocation(line: 2075, column: 12, scope: !8740)
!8743 = !DILocation(line: 2075, column: 15, scope: !8740)
!8744 = !DILocation(line: 2075, column: 20, scope: !8740)
!8745 = !DILocation(line: 2075, column: 17, scope: !8740)
!8746 = !DILocation(line: 2075, column: 6, scope: !8702)
!8747 = !DILocation(line: 2075, column: 23, scope: !8740)
!8748 = !DILocation(line: 2076, column: 6, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2076, column: 6)
!8750 = !DILocation(line: 2076, column: 8, scope: !8749)
!8751 = !DILocation(line: 2076, column: 12, scope: !8749)
!8752 = !DILocation(line: 2076, column: 15, scope: !8749)
!8753 = !DILocation(line: 2076, column: 20, scope: !8749)
!8754 = !DILocation(line: 2076, column: 17, scope: !8749)
!8755 = !DILocation(line: 2076, column: 6, scope: !8702)
!8756 = !DILocation(line: 2076, column: 23, scope: !8749)
!8757 = !DILocation(line: 2078, column: 12, scope: !8702)
!8758 = !DILocation(line: 2078, column: 23, scope: !8702)
!8759 = !DILocation(line: 2078, column: 27, scope: !8702)
!8760 = !DILocation(line: 2078, column: 31, scope: !8702)
!8761 = !DILocation(line: 2078, column: 29, scope: !8702)
!8762 = !DILocation(line: 2078, column: 25, scope: !8702)
!8763 = !DILocation(line: 2078, column: 9, scope: !8702)
!8764 = !DILocation(line: 2079, column: 12, scope: !8702)
!8765 = !DILocation(line: 2079, column: 23, scope: !8702)
!8766 = !DILocation(line: 2079, column: 28, scope: !8702)
!8767 = !DILocation(line: 2079, column: 32, scope: !8702)
!8768 = !DILocation(line: 2079, column: 30, scope: !8702)
!8769 = !DILocation(line: 2079, column: 26, scope: !8702)
!8770 = !DILocation(line: 2079, column: 9, scope: !8702)
!8771 = !DILocation(line: 2085, column: 7, scope: !8772)
!8772 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2085, column: 6)
!8773 = !DILocation(line: 2085, column: 15, scope: !8772)
!8774 = !DILocation(line: 2085, column: 29, scope: !8772)
!8775 = !DILocation(line: 2085, column: 37, scope: !8772)
!8776 = !DILocation(line: 2085, column: 26, scope: !8772)
!8777 = !DILocation(line: 2085, column: 49, scope: !8772)
!8778 = !DILocation(line: 2085, column: 53, scope: !8772)
!8779 = !DILocation(line: 2085, column: 61, scope: !8772)
!8780 = !DILocation(line: 2085, column: 77, scope: !8772)
!8781 = !DILocation(line: 2085, column: 6, scope: !8702)
!8782 = !DILocation(line: 2086, column: 11, scope: !8772)
!8783 = !DILocation(line: 2086, column: 15, scope: !8772)
!8784 = !DILocation(line: 2086, column: 19, scope: !8772)
!8785 = !DILocation(line: 2086, column: 17, scope: !8772)
!8786 = !DILocation(line: 2086, column: 13, scope: !8772)
!8787 = !DILocation(line: 2086, column: 3, scope: !8772)
!8788 = !DILocation(line: 2096, column: 7, scope: !8789)
!8789 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2096, column: 6)
!8790 = !DILocation(line: 2096, column: 15, scope: !8789)
!8791 = !DILocation(line: 2096, column: 26, scope: !8789)
!8792 = !DILocation(line: 2096, column: 33, scope: !8789)
!8793 = !DILocation(line: 2096, column: 37, scope: !8789)
!8794 = !DILocation(line: 2096, column: 45, scope: !8789)
!8795 = !DILocation(line: 2096, column: 61, scope: !8789)
!8796 = !DILocation(line: 2096, column: 6, scope: !8702)
!8797 = !DILocation(line: 2097, column: 11, scope: !8798)
!8798 = distinct !DILexicalBlock(scope: !8789, file: !3, line: 2096, column: 69)
!8799 = !DILocation(line: 2097, column: 15, scope: !8798)
!8800 = !DILocation(line: 2097, column: 19, scope: !8798)
!8801 = !DILocation(line: 2097, column: 17, scope: !8798)
!8802 = !DILocation(line: 2097, column: 13, scope: !8798)
!8803 = !DILocation(line: 2097, column: 3, scope: !8798)
!8804 = !DILocalVariable(name: "numOfFaces", scope: !8805, file: !3, line: 2114, type: !135)
!8805 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2113, column: 2)
!8806 = !DILocation(line: 2114, column: 7, scope: !8805)
!8807 = !DILocation(line: 2114, column: 20, scope: !8805)
!8808 = !DILocation(line: 2114, column: 24, scope: !8805)
!8809 = !DILocation(line: 2114, column: 40, scope: !8805)
!8810 = !DILocalVariable(name: "mface", scope: !8805, file: !3, line: 2115, type: !5181)
!8811 = !DILocation(line: 2115, column: 10, scope: !8805)
!8812 = !DILocation(line: 2115, column: 18, scope: !8805)
!8813 = !DILocation(line: 2115, column: 22, scope: !8805)
!8814 = !DILocation(line: 2115, column: 39, scope: !8805)
!8815 = !DILocalVariable(name: "tface", scope: !8805, file: !3, line: 2116, type: !5177)
!8816 = !DILocation(line: 2116, column: 11, scope: !8805)
!8817 = !DILocation(line: 2116, column: 48, scope: !8805)
!8818 = !DILocation(line: 2116, column: 52, scope: !8805)
!8819 = !DILocation(line: 2116, column: 73, scope: !8805)
!8820 = !DILocation(line: 2116, column: 20, scope: !8805)
!8821 = !DILocalVariable(name: "pixel", scope: !8822, file: !3, line: 2120, type: !217)
!8822 = distinct !DILexicalBlock(scope: !8805, file: !3, line: 2119, column: 3)
!8823 = !DILocation(line: 2120, column: 10, scope: !8822)
!8824 = !DILocalVariable(name: "dist_squared", scope: !8822, file: !3, line: 2122, type: !207)
!8825 = !DILocation(line: 2122, column: 10, scope: !8822)
!8826 = !DILocalVariable(name: "t_dist_squared", scope: !8822, file: !3, line: 2122, type: !207)
!8827 = !DILocation(line: 2122, column: 24, scope: !8822)
!8828 = !DILocalVariable(name: "i", scope: !8822, file: !3, line: 2124, type: !135)
!8829 = !DILocation(line: 2124, column: 8, scope: !8822)
!8830 = !DILocalVariable(name: "uindex", scope: !8822, file: !3, line: 2124, type: !1033)
!8831 = !DILocation(line: 2124, column: 11, scope: !8822)
!8832 = !DILocalVariable(name: "edge1_index", scope: !8822, file: !3, line: 2124, type: !135)
!8833 = !DILocation(line: 2124, column: 22, scope: !8822)
!8834 = !DILocalVariable(name: "edge2_index", scope: !8822, file: !3, line: 2124, type: !135)
!8835 = !DILocation(line: 2124, column: 35, scope: !8822)
!8836 = !DILocalVariable(name: "e1_index", scope: !8822, file: !3, line: 2125, type: !135)
!8837 = !DILocation(line: 2125, column: 8, scope: !8822)
!8838 = !DILocalVariable(name: "e2_index", scope: !8822, file: !3, line: 2125, type: !135)
!8839 = !DILocation(line: 2125, column: 18, scope: !8822)
!8840 = !DILocalVariable(name: "target_face", scope: !8822, file: !3, line: 2125, type: !135)
!8841 = !DILocation(line: 2125, column: 28, scope: !8822)
!8842 = !DILocalVariable(name: "closest_point", scope: !8822, file: !3, line: 2126, type: !217)
!8843 = !DILocation(line: 2126, column: 10, scope: !8822)
!8844 = !DILocalVariable(name: "lambda", scope: !8822, file: !3, line: 2126, type: !207)
!8845 = !DILocation(line: 2126, column: 28, scope: !8822)
!8846 = !DILocalVariable(name: "dir_vec", scope: !8822, file: !3, line: 2126, type: !217)
!8847 = !DILocation(line: 2126, column: 36, scope: !8822)
!8848 = !DILocalVariable(name: "target_uv1", scope: !8822, file: !3, line: 2127, type: !135)
!8849 = !DILocation(line: 2127, column: 8, scope: !8822)
!8850 = !DILocalVariable(name: "target_uv2", scope: !8822, file: !3, line: 2127, type: !135)
!8851 = !DILocation(line: 2127, column: 20, scope: !8822)
!8852 = !DILocalVariable(name: "final_pixel", scope: !8822, file: !3, line: 2127, type: !8853)
!8853 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !218)
!8854 = !DILocation(line: 2127, column: 32, scope: !8822)
!8855 = !DILocalVariable(name: "final_index", scope: !8822, file: !3, line: 2127, type: !135)
!8856 = !DILocation(line: 2127, column: 48, scope: !8822)
!8857 = !DILocalVariable(name: "s_uv1", scope: !8822, file: !3, line: 2129, type: !2195)
!8858 = !DILocation(line: 2129, column: 17, scope: !8822)
!8859 = !DILocalVariable(name: "s_uv2", scope: !8822, file: !3, line: 2129, type: !2195)
!8860 = !DILocation(line: 2129, column: 25, scope: !8822)
!8861 = !DILocalVariable(name: "t_uv1", scope: !8822, file: !3, line: 2129, type: !2195)
!8862 = !DILocation(line: 2129, column: 33, scope: !8822)
!8863 = !DILocalVariable(name: "t_uv2", scope: !8822, file: !3, line: 2129, type: !2195)
!8864 = !DILocation(line: 2129, column: 41, scope: !8822)
!8865 = !DILocation(line: 2131, column: 24, scope: !8822)
!8866 = !DILocation(line: 2131, column: 36, scope: !8822)
!8867 = !DILocation(line: 2131, column: 29, scope: !8822)
!8868 = !DILocation(line: 2131, column: 27, scope: !8822)
!8869 = !DILocation(line: 2131, column: 16, scope: !8822)
!8870 = !DILocation(line: 2131, column: 46, scope: !8822)
!8871 = !DILocation(line: 2131, column: 63, scope: !8822)
!8872 = !DILocation(line: 2131, column: 56, scope: !8822)
!8873 = !DILocation(line: 2131, column: 54, scope: !8822)
!8874 = !DILocation(line: 2131, column: 4, scope: !8822)
!8875 = !DILocation(line: 2131, column: 13, scope: !8822)
!8876 = !DILocation(line: 2132, column: 24, scope: !8822)
!8877 = !DILocation(line: 2132, column: 36, scope: !8822)
!8878 = !DILocation(line: 2132, column: 29, scope: !8822)
!8879 = !DILocation(line: 2132, column: 27, scope: !8822)
!8880 = !DILocation(line: 2132, column: 16, scope: !8822)
!8881 = !DILocation(line: 2132, column: 46, scope: !8822)
!8882 = !DILocation(line: 2132, column: 63, scope: !8822)
!8883 = !DILocation(line: 2132, column: 56, scope: !8822)
!8884 = !DILocation(line: 2132, column: 54, scope: !8822)
!8885 = !DILocation(line: 2132, column: 4, scope: !8822)
!8886 = !DILocation(line: 2132, column: 13, scope: !8822)
!8887 = !DILocation(line: 2135, column: 8, scope: !8888)
!8888 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2135, column: 8)
!8889 = !DILocation(line: 2135, column: 16, scope: !8888)
!8890 = !DILocation(line: 2135, column: 8, scope: !8822)
!8891 = !DILocation(line: 2136, column: 5, scope: !8892)
!8892 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2135, column: 22)
!8893 = !DILocation(line: 2136, column: 15, scope: !8892)
!8894 = !DILocation(line: 2136, column: 20, scope: !8892)
!8895 = !DILocation(line: 2136, column: 30, scope: !8892)
!8896 = !DILocation(line: 2136, column: 35, scope: !8892)
!8897 = !DILocation(line: 2136, column: 45, scope: !8892)
!8898 = !DILocation(line: 2137, column: 4, scope: !8892)
!8899 = !DILocation(line: 2139, column: 5, scope: !8900)
!8900 = distinct !DILexicalBlock(scope: !8888, file: !3, line: 2138, column: 9)
!8901 = !DILocation(line: 2139, column: 15, scope: !8900)
!8902 = !DILocation(line: 2139, column: 20, scope: !8900)
!8903 = !DILocation(line: 2139, column: 30, scope: !8900)
!8904 = !DILocation(line: 2139, column: 35, scope: !8900)
!8905 = !DILocation(line: 2139, column: 45, scope: !8900)
!8906 = !DILocation(line: 2146, column: 15, scope: !8822)
!8907 = !DILocation(line: 2146, column: 23, scope: !8822)
!8908 = !DILocation(line: 2146, column: 13, scope: !8822)
!8909 = !DILocation(line: 2146, column: 38, scope: !8822)
!8910 = !DILocation(line: 2146, column: 46, scope: !8822)
!8911 = !DILocation(line: 2146, column: 36, scope: !8822)
!8912 = !DILocation(line: 2146, column: 64, scope: !8822)
!8913 = !DILocation(line: 2146, column: 62, scope: !8822)
!8914 = !DILocation(line: 2146, column: 89, scope: !8822)
!8915 = !DILocation(line: 2146, column: 87, scope: !8822)
!8916 = !DILocation(line: 2147, column: 51, scope: !8822)
!8917 = !DILocation(line: 2147, column: 58, scope: !8822)
!8918 = !DILocation(line: 2147, column: 64, scope: !8822)
!8919 = !DILocation(line: 2147, column: 72, scope: !8822)
!8920 = !DILocation(line: 2147, column: 84, scope: !8822)
!8921 = !DILocation(line: 2147, column: 87, scope: !8822)
!8922 = !DILocation(line: 2147, column: 101, scope: !8822)
!8923 = !DILocation(line: 2147, column: 107, scope: !8822)
!8924 = !DILocation(line: 2147, column: 115, scope: !8822)
!8925 = !DILocation(line: 2147, column: 127, scope: !8822)
!8926 = !DILocation(line: 2147, column: 130, scope: !8822)
!8927 = !DILocation(line: 2147, column: 19, scope: !8822)
!8928 = !DILocation(line: 2147, column: 17, scope: !8822)
!8929 = !DILocation(line: 2150, column: 53, scope: !8822)
!8930 = !DILocation(line: 2150, column: 60, scope: !8822)
!8931 = !DILocation(line: 2150, column: 66, scope: !8822)
!8932 = !DILocation(line: 2150, column: 74, scope: !8822)
!8933 = !DILocation(line: 2150, column: 86, scope: !8822)
!8934 = !DILocation(line: 2150, column: 89, scope: !8822)
!8935 = !DILocation(line: 2150, column: 101, scope: !8822)
!8936 = !DILocation(line: 2150, column: 107, scope: !8822)
!8937 = !DILocation(line: 2150, column: 115, scope: !8822)
!8938 = !DILocation(line: 2150, column: 127, scope: !8822)
!8939 = !DILocation(line: 2150, column: 130, scope: !8822)
!8940 = !DILocation(line: 2150, column: 21, scope: !8822)
!8941 = !DILocation(line: 2150, column: 19, scope: !8822)
!8942 = !DILocation(line: 2151, column: 8, scope: !8943)
!8943 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2151, column: 8)
!8944 = !DILocation(line: 2151, column: 25, scope: !8943)
!8945 = !DILocation(line: 2151, column: 23, scope: !8943)
!8946 = !DILocation(line: 2151, column: 8, scope: !8822)
!8947 = !DILocation(line: 2151, column: 52, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8943, file: !3, line: 2151, column: 39)
!8949 = !DILocation(line: 2151, column: 60, scope: !8948)
!8950 = !DILocation(line: 2151, column: 50, scope: !8948)
!8951 = !DILocation(line: 2151, column: 75, scope: !8948)
!8952 = !DILocation(line: 2151, column: 83, scope: !8948)
!8953 = !DILocation(line: 2151, column: 73, scope: !8948)
!8954 = !DILocation(line: 2151, column: 101, scope: !8948)
!8955 = !DILocation(line: 2151, column: 99, scope: !8948)
!8956 = !DILocation(line: 2151, column: 126, scope: !8948)
!8957 = !DILocation(line: 2151, column: 124, scope: !8948)
!8958 = !DILocation(line: 2151, column: 152, scope: !8948)
!8959 = !DILocation(line: 2151, column: 150, scope: !8948)
!8960 = !DILocation(line: 2151, column: 168, scope: !8948)
!8961 = !DILocation(line: 2154, column: 53, scope: !8822)
!8962 = !DILocation(line: 2154, column: 60, scope: !8822)
!8963 = !DILocation(line: 2154, column: 66, scope: !8822)
!8964 = !DILocation(line: 2154, column: 74, scope: !8822)
!8965 = !DILocation(line: 2154, column: 86, scope: !8822)
!8966 = !DILocation(line: 2154, column: 89, scope: !8822)
!8967 = !DILocation(line: 2154, column: 101, scope: !8822)
!8968 = !DILocation(line: 2154, column: 107, scope: !8822)
!8969 = !DILocation(line: 2154, column: 115, scope: !8822)
!8970 = !DILocation(line: 2154, column: 127, scope: !8822)
!8971 = !DILocation(line: 2154, column: 130, scope: !8822)
!8972 = !DILocation(line: 2154, column: 21, scope: !8822)
!8973 = !DILocation(line: 2154, column: 19, scope: !8822)
!8974 = !DILocation(line: 2155, column: 8, scope: !8975)
!8975 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2155, column: 8)
!8976 = !DILocation(line: 2155, column: 25, scope: !8975)
!8977 = !DILocation(line: 2155, column: 23, scope: !8975)
!8978 = !DILocation(line: 2155, column: 8, scope: !8822)
!8979 = !DILocation(line: 2155, column: 52, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !8975, file: !3, line: 2155, column: 39)
!8981 = !DILocation(line: 2155, column: 60, scope: !8980)
!8982 = !DILocation(line: 2155, column: 50, scope: !8980)
!8983 = !DILocation(line: 2155, column: 75, scope: !8980)
!8984 = !DILocation(line: 2155, column: 83, scope: !8980)
!8985 = !DILocation(line: 2155, column: 73, scope: !8980)
!8986 = !DILocation(line: 2155, column: 102, scope: !8980)
!8987 = !DILocation(line: 2155, column: 100, scope: !8980)
!8988 = !DILocation(line: 2155, column: 127, scope: !8980)
!8989 = !DILocation(line: 2155, column: 125, scope: !8980)
!8990 = !DILocation(line: 2155, column: 153, scope: !8980)
!8991 = !DILocation(line: 2155, column: 151, scope: !8980)
!8992 = !DILocation(line: 2155, column: 169, scope: !8980)
!8993 = !DILocation(line: 2161, column: 16, scope: !8822)
!8994 = !DILocation(line: 2163, column: 11, scope: !8995)
!8995 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2163, column: 4)
!8996 = !DILocation(line: 2163, column: 9, scope: !8995)
!8997 = !DILocation(line: 2163, column: 16, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8995, file: !3, line: 2163, column: 4)
!8999 = !DILocation(line: 2163, column: 20, scope: !8998)
!9000 = !DILocation(line: 2163, column: 18, scope: !8998)
!9001 = !DILocation(line: 2163, column: 4, scope: !8995)
!9002 = !DILocalVariable(name: "v4", scope: !9003, file: !3, line: 2167, type: !135)
!9003 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2163, column: 37)
!9004 = !DILocation(line: 2167, column: 9, scope: !9003)
!9005 = !DILocation(line: 2167, column: 15, scope: !9003)
!9006 = !DILocation(line: 2167, column: 21, scope: !9003)
!9007 = !DILocation(line: 2167, column: 24, scope: !9003)
!9008 = !DILocation(line: 2167, column: 14, scope: !9003)
!9009 = !DILocation(line: 2167, column: 30, scope: !9003)
!9010 = !DILocation(line: 2167, column: 36, scope: !9003)
!9011 = !DILocation(line: 2167, column: 39, scope: !9003)
!9012 = !DILocation(line: 2169, column: 10, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 2169, column: 9)
!9014 = !DILocation(line: 2169, column: 22, scope: !9013)
!9015 = !DILocation(line: 2169, column: 28, scope: !9013)
!9016 = !DILocation(line: 2169, column: 31, scope: !9013)
!9017 = !DILocation(line: 2169, column: 19, scope: !9013)
!9018 = !DILocation(line: 2169, column: 34, scope: !9013)
!9019 = !DILocation(line: 2169, column: 37, scope: !9013)
!9020 = !DILocation(line: 2169, column: 49, scope: !9013)
!9021 = !DILocation(line: 2169, column: 55, scope: !9013)
!9022 = !DILocation(line: 2169, column: 58, scope: !9013)
!9023 = !DILocation(line: 2169, column: 46, scope: !9013)
!9024 = !DILocation(line: 2169, column: 61, scope: !9013)
!9025 = !DILocation(line: 2169, column: 64, scope: !9013)
!9026 = !DILocation(line: 2169, column: 76, scope: !9013)
!9027 = !DILocation(line: 2169, column: 82, scope: !9013)
!9028 = !DILocation(line: 2169, column: 85, scope: !9013)
!9029 = !DILocation(line: 2169, column: 73, scope: !9013)
!9030 = !DILocation(line: 2169, column: 88, scope: !9013)
!9031 = !DILocation(line: 2169, column: 91, scope: !9013)
!9032 = !DILocation(line: 2169, column: 103, scope: !9013)
!9033 = !DILocation(line: 2169, column: 100, scope: !9013)
!9034 = !DILocation(line: 2169, column: 107, scope: !9013)
!9035 = !DILocation(line: 2170, column: 10, scope: !9013)
!9036 = !DILocation(line: 2170, column: 22, scope: !9013)
!9037 = !DILocation(line: 2170, column: 28, scope: !9013)
!9038 = !DILocation(line: 2170, column: 31, scope: !9013)
!9039 = !DILocation(line: 2170, column: 19, scope: !9013)
!9040 = !DILocation(line: 2170, column: 34, scope: !9013)
!9041 = !DILocation(line: 2170, column: 37, scope: !9013)
!9042 = !DILocation(line: 2170, column: 49, scope: !9013)
!9043 = !DILocation(line: 2170, column: 55, scope: !9013)
!9044 = !DILocation(line: 2170, column: 58, scope: !9013)
!9045 = !DILocation(line: 2170, column: 46, scope: !9013)
!9046 = !DILocation(line: 2170, column: 61, scope: !9013)
!9047 = !DILocation(line: 2170, column: 64, scope: !9013)
!9048 = !DILocation(line: 2170, column: 76, scope: !9013)
!9049 = !DILocation(line: 2170, column: 82, scope: !9013)
!9050 = !DILocation(line: 2170, column: 85, scope: !9013)
!9051 = !DILocation(line: 2170, column: 73, scope: !9013)
!9052 = !DILocation(line: 2170, column: 88, scope: !9013)
!9053 = !DILocation(line: 2170, column: 91, scope: !9013)
!9054 = !DILocation(line: 2170, column: 103, scope: !9013)
!9055 = !DILocation(line: 2170, column: 100, scope: !9013)
!9056 = !DILocation(line: 2169, column: 9, scope: !9003)
!9057 = !DILocation(line: 2172, column: 10, scope: !9058)
!9058 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 2172, column: 10)
!9059 = distinct !DILexicalBlock(scope: !9013, file: !3, line: 2171, column: 5)
!9060 = !DILocation(line: 2172, column: 15, scope: !9058)
!9061 = !DILocation(line: 2172, column: 23, scope: !9058)
!9062 = !DILocation(line: 2172, column: 12, scope: !9058)
!9063 = !DILocation(line: 2172, column: 10, scope: !9059)
!9064 = !DILocation(line: 2172, column: 35, scope: !9058)
!9065 = !DILocation(line: 2174, column: 20, scope: !9059)
!9066 = !DILocation(line: 2174, column: 18, scope: !9059)
!9067 = !DILocation(line: 2179, column: 10, scope: !9068)
!9068 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 2179, column: 10)
!9069 = !DILocation(line: 2179, column: 22, scope: !9068)
!9070 = !DILocation(line: 2179, column: 28, scope: !9068)
!9071 = !DILocation(line: 2179, column: 31, scope: !9068)
!9072 = !DILocation(line: 2179, column: 19, scope: !9068)
!9073 = !DILocation(line: 2179, column: 10, scope: !9059)
!9074 = !DILocation(line: 2179, column: 46, scope: !9068)
!9075 = !DILocation(line: 2179, column: 35, scope: !9068)
!9076 = !DILocation(line: 2180, column: 15, scope: !9077)
!9077 = distinct !DILexicalBlock(scope: !9068, file: !3, line: 2180, column: 15)
!9078 = !DILocation(line: 2180, column: 27, scope: !9077)
!9079 = !DILocation(line: 2180, column: 33, scope: !9077)
!9080 = !DILocation(line: 2180, column: 36, scope: !9077)
!9081 = !DILocation(line: 2180, column: 24, scope: !9077)
!9082 = !DILocation(line: 2180, column: 15, scope: !9068)
!9083 = !DILocation(line: 2180, column: 51, scope: !9077)
!9084 = !DILocation(line: 2180, column: 40, scope: !9077)
!9085 = !DILocation(line: 2181, column: 15, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2181, column: 15)
!9087 = !DILocation(line: 2181, column: 27, scope: !9086)
!9088 = !DILocation(line: 2181, column: 33, scope: !9086)
!9089 = !DILocation(line: 2181, column: 36, scope: !9086)
!9090 = !DILocation(line: 2181, column: 24, scope: !9086)
!9091 = !DILocation(line: 2181, column: 15, scope: !9077)
!9092 = !DILocation(line: 2181, column: 51, scope: !9086)
!9093 = !DILocation(line: 2181, column: 40, scope: !9086)
!9094 = !DILocation(line: 2182, column: 22, scope: !9086)
!9095 = !DILocation(line: 2184, column: 10, scope: !9096)
!9096 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 2184, column: 10)
!9097 = !DILocation(line: 2184, column: 22, scope: !9096)
!9098 = !DILocation(line: 2184, column: 28, scope: !9096)
!9099 = !DILocation(line: 2184, column: 31, scope: !9096)
!9100 = !DILocation(line: 2184, column: 19, scope: !9096)
!9101 = !DILocation(line: 2184, column: 10, scope: !9059)
!9102 = !DILocation(line: 2184, column: 46, scope: !9096)
!9103 = !DILocation(line: 2184, column: 35, scope: !9096)
!9104 = !DILocation(line: 2185, column: 15, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9096, file: !3, line: 2185, column: 15)
!9106 = !DILocation(line: 2185, column: 27, scope: !9105)
!9107 = !DILocation(line: 2185, column: 33, scope: !9105)
!9108 = !DILocation(line: 2185, column: 36, scope: !9105)
!9109 = !DILocation(line: 2185, column: 24, scope: !9105)
!9110 = !DILocation(line: 2185, column: 15, scope: !9096)
!9111 = !DILocation(line: 2185, column: 51, scope: !9105)
!9112 = !DILocation(line: 2185, column: 40, scope: !9105)
!9113 = !DILocation(line: 2186, column: 15, scope: !9114)
!9114 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 2186, column: 15)
!9115 = !DILocation(line: 2186, column: 27, scope: !9114)
!9116 = !DILocation(line: 2186, column: 33, scope: !9114)
!9117 = !DILocation(line: 2186, column: 36, scope: !9114)
!9118 = !DILocation(line: 2186, column: 24, scope: !9114)
!9119 = !DILocation(line: 2186, column: 15, scope: !9105)
!9120 = !DILocation(line: 2186, column: 51, scope: !9114)
!9121 = !DILocation(line: 2186, column: 40, scope: !9114)
!9122 = !DILocation(line: 2187, column: 22, scope: !9114)
!9123 = !DILocation(line: 2189, column: 6, scope: !9059)
!9124 = !DILocation(line: 2191, column: 4, scope: !9003)
!9125 = !DILocation(line: 2163, column: 33, scope: !8998)
!9126 = !DILocation(line: 2163, column: 4, scope: !8998)
!9127 = distinct !{!9127, !9001, !9128}
!9128 = !DILocation(line: 2191, column: 4, scope: !8995)
!9129 = !DILocation(line: 2194, column: 8, scope: !9130)
!9130 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2194, column: 8)
!9131 = !DILocation(line: 2194, column: 20, scope: !9130)
!9132 = !DILocation(line: 2194, column: 8, scope: !8822)
!9133 = !DILocation(line: 2194, column: 27, scope: !9130)
!9134 = !DILocation(line: 2199, column: 21, scope: !8822)
!9135 = !DILocation(line: 2199, column: 27, scope: !8822)
!9136 = !DILocation(line: 2199, column: 35, scope: !8822)
!9137 = !DILocation(line: 2199, column: 47, scope: !8822)
!9138 = !DILocation(line: 2199, column: 50, scope: !8822)
!9139 = !DILocation(line: 2199, column: 10, scope: !8822)
!9140 = !DILocation(line: 2200, column: 21, scope: !8822)
!9141 = !DILocation(line: 2200, column: 27, scope: !8822)
!9142 = !DILocation(line: 2200, column: 35, scope: !8822)
!9143 = !DILocation(line: 2200, column: 47, scope: !8822)
!9144 = !DILocation(line: 2200, column: 50, scope: !8822)
!9145 = !DILocation(line: 2200, column: 10, scope: !8822)
!9146 = !DILocation(line: 2201, column: 21, scope: !8822)
!9147 = !DILocation(line: 2201, column: 27, scope: !8822)
!9148 = !DILocation(line: 2201, column: 40, scope: !8822)
!9149 = !DILocation(line: 2201, column: 43, scope: !8822)
!9150 = !DILocation(line: 2201, column: 10, scope: !8822)
!9151 = !DILocation(line: 2202, column: 21, scope: !8822)
!9152 = !DILocation(line: 2202, column: 27, scope: !8822)
!9153 = !DILocation(line: 2202, column: 40, scope: !8822)
!9154 = !DILocation(line: 2202, column: 43, scope: !8822)
!9155 = !DILocation(line: 2202, column: 10, scope: !8822)
!9156 = !DILocation(line: 2206, column: 10, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2206, column: 8)
!9158 = !DILocation(line: 2206, column: 22, scope: !9157)
!9159 = !DILocation(line: 2206, column: 19, scope: !9157)
!9160 = !DILocation(line: 2206, column: 31, scope: !9157)
!9161 = !DILocation(line: 2206, column: 34, scope: !9157)
!9162 = !DILocation(line: 2206, column: 46, scope: !9157)
!9163 = !DILocation(line: 2206, column: 43, scope: !9157)
!9164 = !DILocation(line: 2206, column: 56, scope: !9157)
!9165 = !DILocation(line: 2207, column: 10, scope: !9157)
!9166 = !DILocation(line: 2207, column: 22, scope: !9157)
!9167 = !DILocation(line: 2207, column: 19, scope: !9157)
!9168 = !DILocation(line: 2207, column: 31, scope: !9157)
!9169 = !DILocation(line: 2207, column: 34, scope: !9157)
!9170 = !DILocation(line: 2207, column: 46, scope: !9157)
!9171 = !DILocation(line: 2207, column: 43, scope: !9157)
!9172 = !DILocation(line: 2207, column: 58, scope: !9157)
!9173 = !DILocation(line: 2208, column: 10, scope: !9157)
!9174 = !DILocation(line: 2208, column: 22, scope: !9157)
!9175 = !DILocation(line: 2208, column: 19, scope: !9157)
!9176 = !DILocation(line: 2208, column: 31, scope: !9157)
!9177 = !DILocation(line: 2208, column: 34, scope: !9157)
!9178 = !DILocation(line: 2208, column: 46, scope: !9157)
!9179 = !DILocation(line: 2208, column: 43, scope: !9157)
!9180 = !DILocation(line: 2208, column: 56, scope: !9157)
!9181 = !DILocation(line: 2209, column: 10, scope: !9157)
!9182 = !DILocation(line: 2209, column: 22, scope: !9157)
!9183 = !DILocation(line: 2209, column: 19, scope: !9157)
!9184 = !DILocation(line: 2209, column: 31, scope: !9157)
!9185 = !DILocation(line: 2209, column: 34, scope: !9157)
!9186 = !DILocation(line: 2209, column: 46, scope: !9157)
!9187 = !DILocation(line: 2209, column: 43, scope: !9157)
!9188 = !DILocation(line: 2206, column: 8, scope: !8822)
!9189 = !DILocation(line: 2211, column: 14, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9157, file: !3, line: 2210, column: 4)
!9191 = !DILocation(line: 2211, column: 26, scope: !9190)
!9192 = !DILocation(line: 2211, column: 19, scope: !9190)
!9193 = !DILocation(line: 2211, column: 17, scope: !9190)
!9194 = !DILocation(line: 2211, column: 38, scope: !9190)
!9195 = !DILocation(line: 2211, column: 43, scope: !9190)
!9196 = !DILocation(line: 2211, column: 55, scope: !9190)
!9197 = !DILocation(line: 2211, column: 48, scope: !9190)
!9198 = !DILocation(line: 2211, column: 46, scope: !9190)
!9199 = !DILocation(line: 2211, column: 40, scope: !9190)
!9200 = !DILocation(line: 2211, column: 36, scope: !9190)
!9201 = !DILocation(line: 2211, column: 5, scope: !9190)
!9202 = !DILocation(line: 2218, column: 32, scope: !8822)
!9203 = !DILocation(line: 2218, column: 47, scope: !8822)
!9204 = !DILocation(line: 2218, column: 54, scope: !8822)
!9205 = !DILocation(line: 2218, column: 60, scope: !8822)
!9206 = !DILocation(line: 2218, column: 68, scope: !8822)
!9207 = !DILocation(line: 2218, column: 80, scope: !8822)
!9208 = !DILocation(line: 2218, column: 83, scope: !8822)
!9209 = !DILocation(line: 2218, column: 97, scope: !8822)
!9210 = !DILocation(line: 2218, column: 103, scope: !8822)
!9211 = !DILocation(line: 2218, column: 111, scope: !8822)
!9212 = !DILocation(line: 2218, column: 123, scope: !8822)
!9213 = !DILocation(line: 2218, column: 126, scope: !8822)
!9214 = !DILocation(line: 2218, column: 13, scope: !8822)
!9215 = !DILocation(line: 2218, column: 11, scope: !8822)
!9216 = !DILocation(line: 2219, column: 8, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2219, column: 8)
!9218 = !DILocation(line: 2219, column: 15, scope: !9217)
!9219 = !DILocation(line: 2219, column: 8, scope: !8822)
!9220 = !DILocation(line: 2219, column: 30, scope: !9217)
!9221 = !DILocation(line: 2219, column: 23, scope: !9217)
!9222 = !DILocation(line: 2220, column: 8, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2220, column: 8)
!9224 = !DILocation(line: 2220, column: 15, scope: !9223)
!9225 = !DILocation(line: 2220, column: 8, scope: !8822)
!9226 = !DILocation(line: 2220, column: 30, scope: !9223)
!9227 = !DILocation(line: 2220, column: 23, scope: !9223)
!9228 = !DILocation(line: 2222, column: 16, scope: !8822)
!9229 = !DILocation(line: 2222, column: 25, scope: !8822)
!9230 = !DILocation(line: 2222, column: 31, scope: !8822)
!9231 = !DILocation(line: 2222, column: 44, scope: !8822)
!9232 = !DILocation(line: 2222, column: 47, scope: !8822)
!9233 = !DILocation(line: 2222, column: 60, scope: !8822)
!9234 = !DILocation(line: 2222, column: 66, scope: !8822)
!9235 = !DILocation(line: 2222, column: 79, scope: !8822)
!9236 = !DILocation(line: 2222, column: 82, scope: !8822)
!9237 = !DILocation(line: 2222, column: 4, scope: !8822)
!9238 = !DILocation(line: 2224, column: 14, scope: !8822)
!9239 = !DILocation(line: 2224, column: 23, scope: !8822)
!9240 = !DILocation(line: 2224, column: 4, scope: !8822)
!9241 = !DILocation(line: 2226, column: 15, scope: !8822)
!9242 = !DILocation(line: 2226, column: 22, scope: !8822)
!9243 = !DILocation(line: 2226, column: 28, scope: !8822)
!9244 = !DILocation(line: 2226, column: 41, scope: !8822)
!9245 = !DILocation(line: 2226, column: 44, scope: !8822)
!9246 = !DILocation(line: 2226, column: 4, scope: !8822)
!9247 = !DILocation(line: 2227, column: 14, scope: !8822)
!9248 = !DILocation(line: 2227, column: 21, scope: !8822)
!9249 = !DILocation(line: 2227, column: 4, scope: !8822)
!9250 = !DILocation(line: 2228, column: 16, scope: !8822)
!9251 = !DILocation(line: 2228, column: 34, scope: !8822)
!9252 = !DILocation(line: 2228, column: 27, scope: !8822)
!9253 = !DILocation(line: 2228, column: 25, scope: !8822)
!9254 = !DILocation(line: 2228, column: 37, scope: !8822)
!9255 = !DILocation(line: 2228, column: 4, scope: !8822)
!9256 = !DILocation(line: 2228, column: 13, scope: !8822)
!9257 = !DILocation(line: 2229, column: 16, scope: !8822)
!9258 = !DILocation(line: 2229, column: 34, scope: !8822)
!9259 = !DILocation(line: 2229, column: 27, scope: !8822)
!9260 = !DILocation(line: 2229, column: 25, scope: !8822)
!9261 = !DILocation(line: 2229, column: 37, scope: !8822)
!9262 = !DILocation(line: 2229, column: 4, scope: !8822)
!9263 = !DILocation(line: 2229, column: 13, scope: !8822)
!9264 = !DILocation(line: 2231, column: 32, scope: !8822)
!9265 = !DILocation(line: 2231, column: 26, scope: !8822)
!9266 = !DILocation(line: 2231, column: 21, scope: !8822)
!9267 = !DILocation(line: 2231, column: 4, scope: !8822)
!9268 = !DILocation(line: 2231, column: 19, scope: !8822)
!9269 = !DILocation(line: 2232, column: 32, scope: !8822)
!9270 = !DILocation(line: 2232, column: 26, scope: !8822)
!9271 = !DILocation(line: 2232, column: 21, scope: !8822)
!9272 = !DILocation(line: 2232, column: 4, scope: !8822)
!9273 = !DILocation(line: 2232, column: 19, scope: !8822)
!9274 = !DILocation(line: 2235, column: 8, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2235, column: 8)
!9276 = !DILocation(line: 2235, column: 23, scope: !9275)
!9277 = !DILocation(line: 2235, column: 27, scope: !9275)
!9278 = !DILocation(line: 2235, column: 30, scope: !9275)
!9279 = !DILocation(line: 2235, column: 48, scope: !9275)
!9280 = !DILocation(line: 2235, column: 45, scope: !9275)
!9281 = !DILocation(line: 2235, column: 8, scope: !8822)
!9282 = !DILocation(line: 2235, column: 51, scope: !9275)
!9283 = !DILocation(line: 2236, column: 8, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2236, column: 8)
!9285 = !DILocation(line: 2236, column: 23, scope: !9284)
!9286 = !DILocation(line: 2236, column: 27, scope: !9284)
!9287 = !DILocation(line: 2236, column: 30, scope: !9284)
!9288 = !DILocation(line: 2236, column: 48, scope: !9284)
!9289 = !DILocation(line: 2236, column: 45, scope: !9284)
!9290 = !DILocation(line: 2236, column: 8, scope: !8822)
!9291 = !DILocation(line: 2236, column: 51, scope: !9284)
!9292 = !DILocation(line: 2238, column: 18, scope: !8822)
!9293 = !DILocation(line: 2238, column: 35, scope: !8822)
!9294 = !DILocation(line: 2238, column: 39, scope: !8822)
!9295 = !DILocation(line: 2238, column: 37, scope: !8822)
!9296 = !DILocation(line: 2238, column: 33, scope: !8822)
!9297 = !DILocation(line: 2238, column: 16, scope: !8822)
!9298 = !DILocation(line: 2241, column: 8, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2241, column: 8)
!9300 = !DILocation(line: 2241, column: 24, scope: !9299)
!9301 = !DILocation(line: 2241, column: 29, scope: !9299)
!9302 = !DILocation(line: 2241, column: 33, scope: !9299)
!9303 = !DILocation(line: 2241, column: 31, scope: !9299)
!9304 = !DILocation(line: 2241, column: 27, scope: !9299)
!9305 = !DILocation(line: 2241, column: 20, scope: !9299)
!9306 = !DILocation(line: 2241, column: 8, scope: !8822)
!9307 = !DILocation(line: 2241, column: 38, scope: !9299)
!9308 = !DILocation(line: 2243, column: 8, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2243, column: 8)
!9310 = !DILocation(line: 2243, column: 19, scope: !9309)
!9311 = !DILocation(line: 2243, column: 32, scope: !9309)
!9312 = !DILocation(line: 2243, column: 46, scope: !9309)
!9313 = !DILocation(line: 2243, column: 43, scope: !9309)
!9314 = !DILocation(line: 2243, column: 8, scope: !8822)
!9315 = !DILocation(line: 2243, column: 59, scope: !9309)
!9316 = !DILocation(line: 2248, column: 8, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2248, column: 8)
!9318 = !DILocation(line: 2248, column: 19, scope: !9317)
!9319 = !DILocation(line: 2248, column: 32, scope: !9317)
!9320 = !DILocation(line: 2248, column: 48, scope: !9317)
!9321 = !DILocation(line: 2248, column: 8, scope: !8822)
!9322 = !DILocation(line: 2248, column: 69, scope: !9317)
!9323 = !DILocation(line: 2248, column: 77, scope: !9317)
!9324 = !DILocation(line: 2248, column: 67, scope: !9317)
!9325 = !DILocation(line: 2248, column: 55, scope: !9317)
!9326 = !DILocation(line: 2250, column: 11, scope: !8822)
!9327 = !DILocation(line: 2250, column: 4, scope: !8822)
!9328 = !DILocation(line: 2253, column: 1, scope: !8702)
!9329 = distinct !DISubprogram(name: "dynamicPaint_outputSurfaceImage", scope: !3, file: !3, line: 2726, type: !9330, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!9330 = !DISubroutineType(types: !9331)
!9331 = !{null, !242, !1166, !199}
!9332 = !DILocalVariable(name: "surface", arg: 1, scope: !9329, file: !3, line: 2726, type: !242)
!9333 = !DILocation(line: 2726, column: 59, scope: !9329)
!9334 = !DILocalVariable(name: "filename", arg: 2, scope: !9329, file: !3, line: 2726, type: !1166)
!9335 = !DILocation(line: 2726, column: 74, scope: !9329)
!9336 = !DILocalVariable(name: "output_layer", arg: 3, scope: !9329, file: !3, line: 2726, type: !199)
!9337 = !DILocation(line: 2726, column: 90, scope: !9329)
!9338 = !DILocalVariable(name: "index", scope: !9329, file: !3, line: 2728, type: !135)
!9339 = !DILocation(line: 2728, column: 6, scope: !9329)
!9340 = !DILocalVariable(name: "ibuf", scope: !9329, file: !3, line: 2729, type: !9341)
!9341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9342, size: 64)
!9342 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !859, line: 141, baseType: !858)
!9343 = !DILocation(line: 2729, column: 9, scope: !9329)
!9344 = !DILocalVariable(name: "sData", scope: !9329, file: !3, line: 2730, type: !3906)
!9345 = !DILocation(line: 2730, column: 20, scope: !9329)
!9346 = !DILocation(line: 2730, column: 28, scope: !9329)
!9347 = !DILocation(line: 2730, column: 37, scope: !9329)
!9348 = !DILocalVariable(name: "f_data", scope: !9329, file: !3, line: 2731, type: !183)
!9349 = !DILocation(line: 2731, column: 20, scope: !9329)
!9350 = !DILocation(line: 2731, column: 49, scope: !9329)
!9351 = !DILocation(line: 2731, column: 56, scope: !9329)
!9352 = !DILocation(line: 2731, column: 29, scope: !9329)
!9353 = !DILocalVariable(name: "format", scope: !9329, file: !3, line: 2733, type: !135)
!9354 = !DILocation(line: 2733, column: 6, scope: !9329)
!9355 = !DILocation(line: 2733, column: 16, scope: !9329)
!9356 = !DILocation(line: 2733, column: 25, scope: !9329)
!9357 = !DILocation(line: 2733, column: 42, scope: !9329)
!9358 = !DILocation(line: 2733, column: 15, scope: !9329)
!9359 = !DILocalVariable(name: "output_file", scope: !9329, file: !3, line: 2734, type: !299)
!9360 = !DILocation(line: 2734, column: 7, scope: !9329)
!9361 = !DILocation(line: 2736, column: 7, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 2736, column: 6)
!9363 = !DILocation(line: 2736, column: 14, scope: !9362)
!9364 = !DILocation(line: 2736, column: 6, scope: !9329)
!9365 = !DILocation(line: 2737, column: 12, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 2736, column: 25)
!9367 = !DILocation(line: 2737, column: 21, scope: !9366)
!9368 = !DILocation(line: 2737, column: 3, scope: !9366)
!9369 = !DILocation(line: 2738, column: 3, scope: !9366)
!9370 = !DILocation(line: 2742, column: 6, scope: !9371)
!9371 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 2742, column: 6)
!9372 = !DILocation(line: 2742, column: 13, scope: !9371)
!9373 = !DILocation(line: 2742, column: 6, scope: !9329)
!9374 = !DILocation(line: 2742, column: 45, scope: !9371)
!9375 = !DILocation(line: 2742, column: 38, scope: !9371)
!9376 = !DILocation(line: 2744, column: 14, scope: !9329)
!9377 = !DILocation(line: 2744, column: 27, scope: !9329)
!9378 = !DILocation(line: 2744, column: 2, scope: !9329)
!9379 = !DILocation(line: 2745, column: 36, scope: !9329)
!9380 = !DILocation(line: 2745, column: 49, scope: !9329)
!9381 = !DILocation(line: 2745, column: 2, scope: !9329)
!9382 = !DILocation(line: 2748, column: 15, scope: !9329)
!9383 = !DILocation(line: 2748, column: 30, scope: !9329)
!9384 = !DILocation(line: 2748, column: 36, scope: !9329)
!9385 = !DILocation(line: 2748, column: 28, scope: !9329)
!9386 = !DILocation(line: 2748, column: 2, scope: !9329)
!9387 = !DILocation(line: 2749, column: 25, scope: !9329)
!9388 = !DILocation(line: 2749, column: 2, scope: !9329)
!9389 = !DILocation(line: 2752, column: 24, scope: !9329)
!9390 = !DILocation(line: 2752, column: 33, scope: !9329)
!9391 = !DILocation(line: 2752, column: 51, scope: !9329)
!9392 = !DILocation(line: 2752, column: 60, scope: !9329)
!9393 = !DILocation(line: 2752, column: 9, scope: !9329)
!9394 = !DILocation(line: 2752, column: 7, scope: !9329)
!9395 = !DILocation(line: 2753, column: 6, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 2753, column: 6)
!9397 = !DILocation(line: 2753, column: 11, scope: !9396)
!9398 = !DILocation(line: 2753, column: 6, scope: !9329)
!9399 = !DILocation(line: 2754, column: 12, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9396, file: !3, line: 2753, column: 20)
!9401 = !DILocation(line: 2754, column: 21, scope: !9400)
!9402 = !DILocation(line: 2754, column: 3, scope: !9400)
!9403 = !DILocation(line: 2755, column: 3, scope: !9400)
!9404 = !DILocation(line: 2761, column: 13, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9329, file: !3, line: 2761, column: 2)
!9406 = !DILocation(line: 2761, column: 7, scope: !9405)
!9407 = !DILocation(line: 2761, column: 18, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 2761, column: 2)
!9409 = !DILocation(line: 2761, column: 26, scope: !9408)
!9410 = !DILocation(line: 2761, column: 33, scope: !9408)
!9411 = !DILocation(line: 2761, column: 24, scope: !9408)
!9412 = !DILocation(line: 2761, column: 2, scope: !9405)
!9413 = !DILocalVariable(name: "pos", scope: !9414, file: !3, line: 2762, type: !135)
!9414 = distinct !DILexicalBlock(scope: !9408, file: !3, line: 2761, column: 56)
!9415 = !DILocation(line: 2762, column: 7, scope: !9414)
!9416 = !DILocation(line: 2762, column: 13, scope: !9414)
!9417 = !DILocation(line: 2762, column: 21, scope: !9414)
!9418 = !DILocation(line: 2762, column: 26, scope: !9414)
!9419 = !DILocation(line: 2762, column: 33, scope: !9414)
!9420 = !DILocation(line: 2762, column: 45, scope: !9414)
!9421 = !DILocation(line: 2765, column: 7, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9414, file: !3, line: 2765, column: 7)
!9423 = !DILocation(line: 2765, column: 20, scope: !9422)
!9424 = !DILocation(line: 2765, column: 7, scope: !9414)
!9425 = !DILocation(line: 2767, column: 8, scope: !9426)
!9426 = distinct !DILexicalBlock(scope: !9427, file: !3, line: 2767, column: 8)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 2765, column: 26)
!9428 = !DILocation(line: 2767, column: 17, scope: !9426)
!9429 = !DILocation(line: 2767, column: 22, scope: !9426)
!9430 = !DILocation(line: 2767, column: 8, scope: !9427)
!9431 = !DILocalVariable(name: "point", scope: !9432, file: !3, line: 2768, type: !222)
!9432 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 2767, column: 53)
!9433 = !DILocation(line: 2768, column: 17, scope: !9432)
!9434 = !DILocation(line: 2768, column: 41, scope: !9432)
!9435 = !DILocation(line: 2768, column: 48, scope: !9432)
!9436 = !DILocation(line: 2768, column: 27, scope: !9432)
!9437 = !DILocation(line: 2768, column: 59, scope: !9432)
!9438 = !DILocation(line: 2768, column: 26, scope: !9432)
!9439 = !DILocalVariable(name: "value", scope: !9432, file: !3, line: 2769, type: !207)
!9440 = !DILocation(line: 2769, column: 11, scope: !9432)
!9441 = !DILocation(line: 2769, column: 20, scope: !9432)
!9442 = !DILocation(line: 2769, column: 27, scope: !9432)
!9443 = !DILocation(line: 2769, column: 35, scope: !9432)
!9444 = !DILocation(line: 2769, column: 19, scope: !9432)
!9445 = !DILocation(line: 2769, column: 52, scope: !9432)
!9446 = !DILocation(line: 2769, column: 59, scope: !9432)
!9447 = !DILocation(line: 2771, column: 29, scope: !9432)
!9448 = !DILocation(line: 2771, column: 5, scope: !9432)
!9449 = !DILocation(line: 2771, column: 11, scope: !9432)
!9450 = !DILocation(line: 2771, column: 22, scope: !9432)
!9451 = !DILocation(line: 2771, column: 27, scope: !9432)
!9452 = !DILocation(line: 2772, column: 33, scope: !9432)
!9453 = !DILocation(line: 2772, column: 5, scope: !9432)
!9454 = !DILocation(line: 2772, column: 11, scope: !9432)
!9455 = !DILocation(line: 2772, column: 22, scope: !9432)
!9456 = !DILocation(line: 2772, column: 26, scope: !9432)
!9457 = !DILocation(line: 2772, column: 31, scope: !9432)
!9458 = !DILocation(line: 2773, column: 33, scope: !9432)
!9459 = !DILocation(line: 2773, column: 5, scope: !9432)
!9460 = !DILocation(line: 2773, column: 11, scope: !9432)
!9461 = !DILocation(line: 2773, column: 22, scope: !9432)
!9462 = !DILocation(line: 2773, column: 26, scope: !9432)
!9463 = !DILocation(line: 2773, column: 31, scope: !9432)
!9464 = !DILocation(line: 2774, column: 5, scope: !9432)
!9465 = !DILocation(line: 2774, column: 11, scope: !9432)
!9466 = !DILocation(line: 2774, column: 22, scope: !9432)
!9467 = !DILocation(line: 2774, column: 26, scope: !9432)
!9468 = !DILocation(line: 2774, column: 31, scope: !9432)
!9469 = !DILocation(line: 2775, column: 4, scope: !9432)
!9470 = !DILocation(line: 2776, column: 3, scope: !9427)
!9471 = !DILocation(line: 2777, column: 12, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 2777, column: 12)
!9473 = !DILocation(line: 2777, column: 25, scope: !9472)
!9474 = !DILocation(line: 2777, column: 12, scope: !9422)
!9475 = !DILocation(line: 2779, column: 8, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9477, file: !3, line: 2779, column: 8)
!9477 = distinct !DILexicalBlock(scope: !9472, file: !3, line: 2777, column: 31)
!9478 = !DILocation(line: 2779, column: 17, scope: !9476)
!9479 = !DILocation(line: 2779, column: 22, scope: !9476)
!9480 = !DILocation(line: 2779, column: 8, scope: !9477)
!9481 = !DILocalVariable(name: "point", scope: !9482, file: !3, line: 2780, type: !222)
!9482 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2779, column: 53)
!9483 = !DILocation(line: 2780, column: 17, scope: !9482)
!9484 = !DILocation(line: 2780, column: 41, scope: !9482)
!9485 = !DILocation(line: 2780, column: 48, scope: !9482)
!9486 = !DILocation(line: 2780, column: 27, scope: !9482)
!9487 = !DILocation(line: 2780, column: 59, scope: !9482)
!9488 = !DILocation(line: 2780, column: 26, scope: !9482)
!9489 = !DILocation(line: 2783, column: 17, scope: !9482)
!9490 = !DILocation(line: 2783, column: 24, scope: !9482)
!9491 = !DILocation(line: 2783, column: 31, scope: !9482)
!9492 = !DILocation(line: 2783, column: 38, scope: !9482)
!9493 = !DILocation(line: 2783, column: 45, scope: !9482)
!9494 = !DILocation(line: 2783, column: 52, scope: !9482)
!9495 = !DILocation(line: 2783, column: 61, scope: !9482)
!9496 = !DILocation(line: 2783, column: 68, scope: !9482)
!9497 = !DILocation(line: 2783, column: 78, scope: !9482)
!9498 = !DILocation(line: 2783, column: 84, scope: !9482)
!9499 = !DILocation(line: 2783, column: 95, scope: !9482)
!9500 = !DILocation(line: 2783, column: 5, scope: !9482)
!9501 = !DILocation(line: 2786, column: 9, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 2786, column: 9)
!9503 = !DILocation(line: 2786, column: 18, scope: !9502)
!9504 = !DILocation(line: 2786, column: 24, scope: !9502)
!9505 = !DILocation(line: 2786, column: 9, scope: !9482)
!9506 = !DILocation(line: 2787, column: 33, scope: !9507)
!9507 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 2786, column: 47)
!9508 = !DILocation(line: 2787, column: 39, scope: !9507)
!9509 = !DILocation(line: 2787, column: 50, scope: !9507)
!9510 = !DILocation(line: 2787, column: 54, scope: !9507)
!9511 = !DILocation(line: 2787, column: 6, scope: !9507)
!9512 = !DILocation(line: 2787, column: 12, scope: !9507)
!9513 = !DILocation(line: 2787, column: 23, scope: !9507)
!9514 = !DILocation(line: 2787, column: 30, scope: !9507)
!9515 = !DILocation(line: 2788, column: 35, scope: !9507)
!9516 = !DILocation(line: 2788, column: 41, scope: !9507)
!9517 = !DILocation(line: 2788, column: 52, scope: !9507)
!9518 = !DILocation(line: 2788, column: 56, scope: !9507)
!9519 = !DILocation(line: 2788, column: 6, scope: !9507)
!9520 = !DILocation(line: 2788, column: 12, scope: !9507)
!9521 = !DILocation(line: 2788, column: 23, scope: !9507)
!9522 = !DILocation(line: 2788, column: 27, scope: !9507)
!9523 = !DILocation(line: 2788, column: 32, scope: !9507)
!9524 = !DILocation(line: 2789, column: 35, scope: !9507)
!9525 = !DILocation(line: 2789, column: 41, scope: !9507)
!9526 = !DILocation(line: 2789, column: 52, scope: !9507)
!9527 = !DILocation(line: 2789, column: 56, scope: !9507)
!9528 = !DILocation(line: 2789, column: 6, scope: !9507)
!9529 = !DILocation(line: 2789, column: 12, scope: !9507)
!9530 = !DILocation(line: 2789, column: 23, scope: !9507)
!9531 = !DILocation(line: 2789, column: 27, scope: !9507)
!9532 = !DILocation(line: 2789, column: 32, scope: !9507)
!9533 = !DILocation(line: 2790, column: 5, scope: !9507)
!9534 = !DILocation(line: 2791, column: 4, scope: !9482)
!9535 = !DILocation(line: 2793, column: 13, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9476, file: !3, line: 2793, column: 13)
!9537 = !DILocation(line: 2793, column: 22, scope: !9536)
!9538 = !DILocation(line: 2793, column: 27, scope: !9536)
!9539 = !DILocation(line: 2793, column: 13, scope: !9476)
!9540 = !DILocalVariable(name: "depth", scope: !9541, file: !3, line: 2794, type: !207)
!9541 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2793, column: 61)
!9542 = !DILocation(line: 2794, column: 11, scope: !9541)
!9543 = !DILocation(line: 2794, column: 29, scope: !9541)
!9544 = !DILocation(line: 2794, column: 36, scope: !9541)
!9545 = !DILocation(line: 2794, column: 20, scope: !9541)
!9546 = !DILocation(line: 2794, column: 47, scope: !9541)
!9547 = !DILocation(line: 2794, column: 19, scope: !9541)
!9548 = !DILocation(line: 2795, column: 9, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 2795, column: 9)
!9550 = !DILocation(line: 2795, column: 18, scope: !9549)
!9551 = !DILocation(line: 2795, column: 9, scope: !9541)
!9552 = !DILocation(line: 2796, column: 15, scope: !9549)
!9553 = !DILocation(line: 2796, column: 24, scope: !9549)
!9554 = !DILocation(line: 2796, column: 12, scope: !9549)
!9555 = !DILocation(line: 2796, column: 6, scope: !9549)
!9556 = !DILocation(line: 2798, column: 9, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 2798, column: 9)
!9558 = !DILocation(line: 2798, column: 18, scope: !9557)
!9559 = !DILocation(line: 2798, column: 28, scope: !9557)
!9560 = !DILocation(line: 2798, column: 9, scope: !9541)
!9561 = !DILocation(line: 2799, column: 22, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9557, file: !3, line: 2798, column: 57)
!9563 = !DILocation(line: 2799, column: 28, scope: !9562)
!9564 = !DILocation(line: 2799, column: 20, scope: !9562)
!9565 = !DILocation(line: 2799, column: 12, scope: !9562)
!9566 = !DILocation(line: 2800, column: 5, scope: !9562)
!9567 = !DILocation(line: 2802, column: 5, scope: !9568)
!9568 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 2802, column: 5)
!9569 = distinct !DILexicalBlock(scope: !9541, file: !3, line: 2802, column: 5)
!9570 = !DILocation(line: 2802, column: 5, scope: !9569)
!9571 = !DILocation(line: 2802, column: 5, scope: !9572)
!9572 = distinct !DILexicalBlock(scope: !9568, file: !3, line: 2802, column: 5)
!9573 = !DILocation(line: 2804, column: 29, scope: !9541)
!9574 = !DILocation(line: 2804, column: 5, scope: !9541)
!9575 = !DILocation(line: 2804, column: 11, scope: !9541)
!9576 = !DILocation(line: 2804, column: 22, scope: !9541)
!9577 = !DILocation(line: 2804, column: 27, scope: !9541)
!9578 = !DILocation(line: 2805, column: 33, scope: !9541)
!9579 = !DILocation(line: 2805, column: 5, scope: !9541)
!9580 = !DILocation(line: 2805, column: 11, scope: !9541)
!9581 = !DILocation(line: 2805, column: 22, scope: !9541)
!9582 = !DILocation(line: 2805, column: 26, scope: !9541)
!9583 = !DILocation(line: 2805, column: 31, scope: !9541)
!9584 = !DILocation(line: 2806, column: 33, scope: !9541)
!9585 = !DILocation(line: 2806, column: 5, scope: !9541)
!9586 = !DILocation(line: 2806, column: 11, scope: !9541)
!9587 = !DILocation(line: 2806, column: 22, scope: !9541)
!9588 = !DILocation(line: 2806, column: 26, scope: !9541)
!9589 = !DILocation(line: 2806, column: 31, scope: !9541)
!9590 = !DILocation(line: 2807, column: 5, scope: !9541)
!9591 = !DILocation(line: 2807, column: 11, scope: !9541)
!9592 = !DILocation(line: 2807, column: 22, scope: !9541)
!9593 = !DILocation(line: 2807, column: 26, scope: !9541)
!9594 = !DILocation(line: 2807, column: 31, scope: !9541)
!9595 = !DILocation(line: 2808, column: 4, scope: !9541)
!9596 = !DILocation(line: 2810, column: 13, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 2810, column: 13)
!9598 = !DILocation(line: 2810, column: 22, scope: !9597)
!9599 = !DILocation(line: 2810, column: 27, scope: !9597)
!9600 = !DILocation(line: 2810, column: 13, scope: !9536)
!9601 = !DILocalVariable(name: "wPoint", scope: !9602, file: !3, line: 2811, type: !234)
!9602 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 2810, column: 57)
!9603 = !DILocation(line: 2811, column: 21, scope: !9602)
!9604 = !DILocation(line: 2811, column: 50, scope: !9602)
!9605 = !DILocation(line: 2811, column: 57, scope: !9602)
!9606 = !DILocation(line: 2811, column: 32, scope: !9602)
!9607 = !DILocation(line: 2811, column: 68, scope: !9602)
!9608 = !DILocation(line: 2811, column: 31, scope: !9602)
!9609 = !DILocalVariable(name: "depth", scope: !9602, file: !3, line: 2812, type: !207)
!9610 = !DILocation(line: 2812, column: 11, scope: !9602)
!9611 = !DILocation(line: 2812, column: 19, scope: !9602)
!9612 = !DILocation(line: 2812, column: 27, scope: !9602)
!9613 = !DILocation(line: 2813, column: 9, scope: !9614)
!9614 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 2813, column: 9)
!9615 = !DILocation(line: 2813, column: 18, scope: !9614)
!9616 = !DILocation(line: 2813, column: 9, scope: !9602)
!9617 = !DILocation(line: 2814, column: 15, scope: !9614)
!9618 = !DILocation(line: 2814, column: 24, scope: !9614)
!9619 = !DILocation(line: 2814, column: 12, scope: !9614)
!9620 = !DILocation(line: 2814, column: 6, scope: !9614)
!9621 = !DILocation(line: 2815, column: 21, scope: !9602)
!9622 = !DILocation(line: 2815, column: 27, scope: !9602)
!9623 = !DILocation(line: 2815, column: 19, scope: !9602)
!9624 = !DILocation(line: 2815, column: 11, scope: !9602)
!9625 = !DILocation(line: 2816, column: 5, scope: !9626)
!9626 = distinct !DILexicalBlock(scope: !9627, file: !3, line: 2816, column: 5)
!9627 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 2816, column: 5)
!9628 = !DILocation(line: 2816, column: 5, scope: !9627)
!9629 = !DILocation(line: 2816, column: 5, scope: !9630)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 2816, column: 5)
!9631 = !DILocation(line: 2818, column: 29, scope: !9602)
!9632 = !DILocation(line: 2818, column: 5, scope: !9602)
!9633 = !DILocation(line: 2818, column: 11, scope: !9602)
!9634 = !DILocation(line: 2818, column: 22, scope: !9602)
!9635 = !DILocation(line: 2818, column: 27, scope: !9602)
!9636 = !DILocation(line: 2819, column: 33, scope: !9602)
!9637 = !DILocation(line: 2819, column: 5, scope: !9602)
!9638 = !DILocation(line: 2819, column: 11, scope: !9602)
!9639 = !DILocation(line: 2819, column: 22, scope: !9602)
!9640 = !DILocation(line: 2819, column: 26, scope: !9602)
!9641 = !DILocation(line: 2819, column: 31, scope: !9602)
!9642 = !DILocation(line: 2820, column: 33, scope: !9602)
!9643 = !DILocation(line: 2820, column: 5, scope: !9602)
!9644 = !DILocation(line: 2820, column: 11, scope: !9602)
!9645 = !DILocation(line: 2820, column: 22, scope: !9602)
!9646 = !DILocation(line: 2820, column: 26, scope: !9602)
!9647 = !DILocation(line: 2820, column: 31, scope: !9602)
!9648 = !DILocation(line: 2821, column: 5, scope: !9602)
!9649 = !DILocation(line: 2821, column: 11, scope: !9602)
!9650 = !DILocation(line: 2821, column: 22, scope: !9602)
!9651 = !DILocation(line: 2821, column: 26, scope: !9602)
!9652 = !DILocation(line: 2821, column: 31, scope: !9602)
!9653 = !DILocation(line: 2822, column: 4, scope: !9602)
!9654 = !DILocation(line: 2823, column: 3, scope: !9477)
!9655 = !DILocation(line: 2824, column: 2, scope: !9414)
!9656 = !DILocation(line: 2761, column: 52, scope: !9408)
!9657 = !DILocation(line: 2761, column: 2, scope: !9408)
!9658 = distinct !{!9658, !9412, !9659}
!9659 = !DILocation(line: 2824, column: 2, scope: !9405)
!9660 = !DILocation(line: 2827, column: 2, scope: !9329)
!9661 = !DILocation(line: 2827, column: 8, scope: !9329)
!9662 = !DILocation(line: 2827, column: 14, scope: !9329)
!9663 = !DILocation(line: 2835, column: 14, scope: !9329)
!9664 = !DILocation(line: 2835, column: 20, scope: !9329)
!9665 = !DILocation(line: 2835, column: 2, scope: !9329)
!9666 = !DILocation(line: 2836, column: 16, scope: !9329)
!9667 = !DILocation(line: 2836, column: 2, scope: !9329)
!9668 = !DILocation(line: 2837, column: 1, scope: !9329)
!9669 = distinct !DISubprogram(name: "blendColors", scope: !3, file: !3, line: 444, type: !9670, scopeLine: 445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!9670 = !DISubroutineType(types: !9671)
!9671 = !{null, !2195, !207, !2195, !207, !233}
!9672 = !DILocalVariable(name: "t_color", arg: 1, scope: !9669, file: !3, line: 444, type: !2195)
!9673 = !DILocation(line: 444, column: 37, scope: !9669)
!9674 = !DILocalVariable(name: "t_alpha", arg: 2, scope: !9669, file: !3, line: 444, type: !207)
!9675 = !DILocation(line: 444, column: 55, scope: !9669)
!9676 = !DILocalVariable(name: "s_color", arg: 3, scope: !9669, file: !3, line: 444, type: !2195)
!9677 = !DILocation(line: 444, column: 76, scope: !9669)
!9678 = !DILocalVariable(name: "s_alpha", arg: 4, scope: !9669, file: !3, line: 444, type: !207)
!9679 = !DILocation(line: 444, column: 94, scope: !9669)
!9680 = !DILocalVariable(name: "result", arg: 5, scope: !9669, file: !3, line: 444, type: !233)
!9681 = !DILocation(line: 444, column: 109, scope: !9669)
!9682 = !DILocalVariable(name: "i", scope: !9669, file: !3, line: 446, type: !135)
!9683 = !DILocation(line: 446, column: 6, scope: !9669)
!9684 = !DILocalVariable(name: "i_alpha", scope: !9669, file: !3, line: 447, type: !207)
!9685 = !DILocation(line: 447, column: 8, scope: !9669)
!9686 = !DILocation(line: 447, column: 25, scope: !9669)
!9687 = !DILocation(line: 447, column: 23, scope: !9669)
!9688 = !DILocalVariable(name: "f_alpha", scope: !9669, file: !3, line: 448, type: !207)
!9689 = !DILocation(line: 448, column: 8, scope: !9669)
!9690 = !DILocation(line: 448, column: 18, scope: !9669)
!9691 = !DILocation(line: 448, column: 28, scope: !9669)
!9692 = !DILocation(line: 448, column: 26, scope: !9669)
!9693 = !DILocation(line: 448, column: 38, scope: !9669)
!9694 = !DILocation(line: 448, column: 36, scope: !9669)
!9695 = !DILocation(line: 451, column: 6, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9669, file: !3, line: 451, column: 6)
!9697 = !DILocation(line: 451, column: 6, scope: !9669)
!9698 = !DILocation(line: 452, column: 10, scope: !9699)
!9699 = distinct !DILexicalBlock(scope: !9700, file: !3, line: 452, column: 3)
!9700 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 451, column: 15)
!9701 = !DILocation(line: 452, column: 8, scope: !9699)
!9702 = !DILocation(line: 452, column: 15, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9699, file: !3, line: 452, column: 3)
!9704 = !DILocation(line: 452, column: 17, scope: !9703)
!9705 = !DILocation(line: 452, column: 3, scope: !9699)
!9706 = !DILocation(line: 453, column: 17, scope: !9707)
!9707 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 452, column: 27)
!9708 = !DILocation(line: 453, column: 25, scope: !9707)
!9709 = !DILocation(line: 453, column: 30, scope: !9707)
!9710 = !DILocation(line: 453, column: 28, scope: !9707)
!9711 = !DILocation(line: 453, column: 40, scope: !9707)
!9712 = !DILocation(line: 453, column: 38, scope: !9707)
!9713 = !DILocation(line: 453, column: 50, scope: !9707)
!9714 = !DILocation(line: 453, column: 58, scope: !9707)
!9715 = !DILocation(line: 453, column: 63, scope: !9707)
!9716 = !DILocation(line: 453, column: 61, scope: !9707)
!9717 = !DILocation(line: 453, column: 48, scope: !9707)
!9718 = !DILocation(line: 453, column: 74, scope: !9707)
!9719 = !DILocation(line: 453, column: 72, scope: !9707)
!9720 = !DILocation(line: 453, column: 4, scope: !9707)
!9721 = !DILocation(line: 453, column: 11, scope: !9707)
!9722 = !DILocation(line: 453, column: 14, scope: !9707)
!9723 = !DILocation(line: 454, column: 3, scope: !9707)
!9724 = !DILocation(line: 452, column: 23, scope: !9703)
!9725 = !DILocation(line: 452, column: 3, scope: !9703)
!9726 = distinct !{!9726, !9705, !9727}
!9727 = !DILocation(line: 454, column: 3, scope: !9699)
!9728 = !DILocation(line: 455, column: 2, scope: !9700)
!9729 = !DILocation(line: 457, column: 14, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 456, column: 7)
!9731 = !DILocation(line: 457, column: 22, scope: !9730)
!9732 = !DILocation(line: 457, column: 3, scope: !9730)
!9733 = !DILocation(line: 460, column: 14, scope: !9669)
!9734 = !DILocation(line: 460, column: 2, scope: !9669)
!9735 = !DILocation(line: 460, column: 12, scope: !9669)
!9736 = !DILocation(line: 461, column: 1, scope: !9669)
!9737 = distinct !DISubprogram(name: "dynamicPaint_calculateFrame", scope: !3, file: !3, line: 5145, type: !9738, scopeLine: 5146, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!9738 = !DISubroutineType(types: !9739)
!9739 = !{!135, !242, !4204, !3426, !135}
!9740 = !DILocalVariable(name: "surface", arg: 1, scope: !9737, file: !3, line: 5145, type: !242)
!9741 = !DILocation(line: 5145, column: 54, scope: !9737)
!9742 = !DILocalVariable(name: "scene", arg: 2, scope: !9737, file: !3, line: 5145, type: !4204)
!9743 = !DILocation(line: 5145, column: 70, scope: !9737)
!9744 = !DILocalVariable(name: "cObject", arg: 3, scope: !9737, file: !3, line: 5145, type: !3426)
!9745 = !DILocation(line: 5145, column: 85, scope: !9737)
!9746 = !DILocalVariable(name: "frame", arg: 4, scope: !9737, file: !3, line: 5145, type: !135)
!9747 = !DILocation(line: 5145, column: 98, scope: !9737)
!9748 = !DILocalVariable(name: "timescale", scope: !9737, file: !3, line: 5147, type: !207)
!9749 = !DILocation(line: 5147, column: 8, scope: !9737)
!9750 = !DILocation(line: 5150, column: 6, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 5150, column: 6)
!9752 = !DILocation(line: 5150, column: 15, scope: !9751)
!9753 = !DILocation(line: 5150, column: 21, scope: !9751)
!9754 = !DILocation(line: 5150, column: 6, scope: !9737)
!9755 = !DILocation(line: 5151, column: 37, scope: !9751)
!9756 = !DILocation(line: 5151, column: 46, scope: !9751)
!9757 = !DILocation(line: 5151, column: 55, scope: !9751)
!9758 = !DILocation(line: 5151, column: 63, scope: !9751)
!9759 = !DILocation(line: 5151, column: 3, scope: !9751)
!9760 = !DILocation(line: 5154, column: 32, scope: !9737)
!9761 = !DILocation(line: 5154, column: 41, scope: !9737)
!9762 = !DILocation(line: 5154, column: 48, scope: !9737)
!9763 = !DILocation(line: 5154, column: 2, scope: !9737)
!9764 = !DILocation(line: 5157, column: 6, scope: !9765)
!9765 = distinct !DILexicalBlock(scope: !9737, file: !3, line: 5157, column: 6)
!9766 = !DILocation(line: 5157, column: 15, scope: !9765)
!9767 = !DILocation(line: 5157, column: 24, scope: !9765)
!9768 = !DILocation(line: 5157, column: 28, scope: !9765)
!9769 = !DILocation(line: 5157, column: 37, scope: !9765)
!9770 = !DILocation(line: 5157, column: 46, scope: !9765)
!9771 = !DILocation(line: 5157, column: 34, scope: !9765)
!9772 = !DILocation(line: 5157, column: 6, scope: !9737)
!9773 = !DILocalVariable(name: "st", scope: !9774, file: !3, line: 5158, type: !135)
!9774 = distinct !DILexicalBlock(scope: !9765, file: !3, line: 5157, column: 60)
!9775 = !DILocation(line: 5158, column: 7, scope: !9774)
!9776 = !DILocation(line: 5159, column: 23, scope: !9774)
!9777 = !DILocation(line: 5159, column: 32, scope: !9774)
!9778 = !DILocation(line: 5159, column: 41, scope: !9774)
!9779 = !DILocation(line: 5159, column: 22, scope: !9774)
!9780 = !DILocation(line: 5159, column: 20, scope: !9774)
!9781 = !DILocation(line: 5159, column: 13, scope: !9774)
!9782 = !DILocation(line: 5161, column: 11, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9774, file: !3, line: 5161, column: 3)
!9784 = !DILocation(line: 5161, column: 8, scope: !9783)
!9785 = !DILocation(line: 5161, column: 16, scope: !9786)
!9786 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 5161, column: 3)
!9787 = !DILocation(line: 5161, column: 22, scope: !9786)
!9788 = !DILocation(line: 5161, column: 31, scope: !9786)
!9789 = !DILocation(line: 5161, column: 19, scope: !9786)
!9790 = !DILocation(line: 5161, column: 3, scope: !9783)
!9791 = !DILocalVariable(name: "subframe", scope: !9792, file: !3, line: 5162, type: !207)
!9792 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 5161, column: 47)
!9793 = !DILocation(line: 5162, column: 10, scope: !9792)
!9794 = !DILocation(line: 5162, column: 30, scope: !9792)
!9795 = !DILocation(line: 5162, column: 22, scope: !9792)
!9796 = !DILocation(line: 5162, column: 37, scope: !9792)
!9797 = !DILocation(line: 5162, column: 46, scope: !9792)
!9798 = !DILocation(line: 5162, column: 55, scope: !9792)
!9799 = !DILocation(line: 5162, column: 36, scope: !9792)
!9800 = !DILocation(line: 5162, column: 34, scope: !9792)
!9801 = !DILocation(line: 5163, column: 29, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 5163, column: 8)
!9803 = !DILocation(line: 5163, column: 36, scope: !9802)
!9804 = !DILocation(line: 5163, column: 45, scope: !9802)
!9805 = !DILocation(line: 5163, column: 54, scope: !9802)
!9806 = !DILocation(line: 5163, column: 65, scope: !9802)
!9807 = !DILocation(line: 5163, column: 9, scope: !9802)
!9808 = !DILocation(line: 5163, column: 8, scope: !9792)
!9809 = !DILocation(line: 5163, column: 76, scope: !9802)
!9810 = !DILocation(line: 5164, column: 3, scope: !9792)
!9811 = !DILocation(line: 5161, column: 43, scope: !9786)
!9812 = !DILocation(line: 5161, column: 3, scope: !9786)
!9813 = distinct !{!9813, !9790, !9814}
!9814 = !DILocation(line: 5164, column: 3, scope: !9783)
!9815 = !DILocation(line: 5165, column: 2, scope: !9774)
!9816 = !DILocation(line: 5167, column: 29, scope: !9737)
!9817 = !DILocation(line: 5167, column: 36, scope: !9737)
!9818 = !DILocation(line: 5167, column: 45, scope: !9737)
!9819 = !DILocation(line: 5167, column: 54, scope: !9737)
!9820 = !DILocation(line: 5167, column: 9, scope: !9737)
!9821 = !DILocation(line: 5167, column: 2, scope: !9737)
!9822 = !DILocation(line: 5168, column: 1, scope: !9737)
!9823 = distinct !DISubprogram(name: "dynamicPaint_applySurfaceDisplace", scope: !3, file: !3, line: 1682, type: !9824, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!9824 = !DISubroutineType(types: !9825)
!9825 = !{null, !242, !2003}
!9826 = !DILocalVariable(name: "surface", arg: 1, scope: !9823, file: !3, line: 1682, type: !242)
!9827 = !DILocation(line: 1682, column: 68, scope: !9823)
!9828 = !DILocalVariable(name: "result", arg: 2, scope: !9823, file: !3, line: 1682, type: !2003)
!9829 = !DILocation(line: 1682, column: 90, scope: !9823)
!9830 = !DILocalVariable(name: "sData", scope: !9823, file: !3, line: 1684, type: !3906)
!9831 = !DILocation(line: 1684, column: 20, scope: !9823)
!9832 = !DILocation(line: 1684, column: 28, scope: !9823)
!9833 = !DILocation(line: 1684, column: 37, scope: !9823)
!9834 = !DILocation(line: 1686, column: 7, scope: !9835)
!9835 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1686, column: 6)
!9836 = !DILocation(line: 1686, column: 13, scope: !9835)
!9837 = !DILocation(line: 1686, column: 16, scope: !9835)
!9838 = !DILocation(line: 1686, column: 25, scope: !9835)
!9839 = !DILocation(line: 1686, column: 32, scope: !9835)
!9840 = !DILocation(line: 1686, column: 6, scope: !9823)
!9841 = !DILocation(line: 1686, column: 64, scope: !9835)
!9842 = !DILocation(line: 1689, column: 6, scope: !9843)
!9843 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 1689, column: 6)
!9844 = !DILocation(line: 1689, column: 15, scope: !9843)
!9845 = !DILocation(line: 1689, column: 20, scope: !9843)
!9846 = !DILocation(line: 1689, column: 6, scope: !9823)
!9847 = !DILocalVariable(name: "mvert", scope: !9848, file: !3, line: 1690, type: !3190)
!9848 = distinct !DILexicalBlock(scope: !9843, file: !3, line: 1689, column: 54)
!9849 = !DILocation(line: 1690, column: 10, scope: !9848)
!9850 = !DILocation(line: 1690, column: 18, scope: !9848)
!9851 = !DILocation(line: 1690, column: 26, scope: !9848)
!9852 = !DILocation(line: 1690, column: 39, scope: !9848)
!9853 = !DILocalVariable(name: "i", scope: !9848, file: !3, line: 1691, type: !135)
!9854 = !DILocation(line: 1691, column: 7, scope: !9848)
!9855 = !DILocalVariable(name: "value", scope: !9848, file: !3, line: 1692, type: !2195)
!9856 = !DILocation(line: 1692, column: 16, scope: !9848)
!9857 = !DILocation(line: 1692, column: 33, scope: !9848)
!9858 = !DILocation(line: 1692, column: 40, scope: !9848)
!9859 = !DILocation(line: 1692, column: 24, scope: !9848)
!9860 = !DILocation(line: 1697, column: 10, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9848, file: !3, line: 1697, column: 3)
!9862 = !DILocation(line: 1697, column: 8, scope: !9861)
!9863 = !DILocation(line: 1697, column: 15, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9861, file: !3, line: 1697, column: 3)
!9865 = !DILocation(line: 1697, column: 19, scope: !9864)
!9866 = !DILocation(line: 1697, column: 26, scope: !9864)
!9867 = !DILocation(line: 1697, column: 17, scope: !9864)
!9868 = !DILocation(line: 1697, column: 3, scope: !9861)
!9869 = !DILocalVariable(name: "normal", scope: !9870, file: !3, line: 1698, type: !206)
!9870 = distinct !DILexicalBlock(scope: !9864, file: !3, line: 1697, column: 45)
!9871 = !DILocation(line: 1698, column: 10, scope: !9870)
!9872 = !DILocalVariable(name: "val", scope: !9870, file: !3, line: 1698, type: !207)
!9873 = !DILocation(line: 1698, column: 21, scope: !9870)
!9874 = !DILocation(line: 1698, column: 27, scope: !9870)
!9875 = !DILocation(line: 1698, column: 33, scope: !9870)
!9876 = !DILocation(line: 1698, column: 38, scope: !9870)
!9877 = !DILocation(line: 1698, column: 47, scope: !9870)
!9878 = !DILocation(line: 1698, column: 36, scope: !9870)
!9879 = !DILocation(line: 1699, column: 29, scope: !9870)
!9880 = !DILocation(line: 1699, column: 37, scope: !9870)
!9881 = !DILocation(line: 1699, column: 43, scope: !9870)
!9882 = !DILocation(line: 1699, column: 46, scope: !9870)
!9883 = !DILocation(line: 1699, column: 4, scope: !9870)
!9884 = !DILocation(line: 1700, column: 17, scope: !9870)
!9885 = !DILocation(line: 1700, column: 4, scope: !9870)
!9886 = !DILocation(line: 1702, column: 22, scope: !9870)
!9887 = !DILocation(line: 1702, column: 34, scope: !9870)
!9888 = !DILocation(line: 1702, column: 32, scope: !9870)
!9889 = !DILocation(line: 1702, column: 4, scope: !9870)
!9890 = !DILocation(line: 1702, column: 10, scope: !9870)
!9891 = !DILocation(line: 1702, column: 13, scope: !9870)
!9892 = !DILocation(line: 1702, column: 19, scope: !9870)
!9893 = !DILocation(line: 1703, column: 22, scope: !9870)
!9894 = !DILocation(line: 1703, column: 34, scope: !9870)
!9895 = !DILocation(line: 1703, column: 32, scope: !9870)
!9896 = !DILocation(line: 1703, column: 4, scope: !9870)
!9897 = !DILocation(line: 1703, column: 10, scope: !9870)
!9898 = !DILocation(line: 1703, column: 13, scope: !9870)
!9899 = !DILocation(line: 1703, column: 19, scope: !9870)
!9900 = !DILocation(line: 1704, column: 22, scope: !9870)
!9901 = !DILocation(line: 1704, column: 34, scope: !9870)
!9902 = !DILocation(line: 1704, column: 32, scope: !9870)
!9903 = !DILocation(line: 1704, column: 4, scope: !9870)
!9904 = !DILocation(line: 1704, column: 10, scope: !9870)
!9905 = !DILocation(line: 1704, column: 13, scope: !9870)
!9906 = !DILocation(line: 1704, column: 19, scope: !9870)
!9907 = !DILocation(line: 1705, column: 3, scope: !9870)
!9908 = !DILocation(line: 1697, column: 41, scope: !9864)
!9909 = !DILocation(line: 1697, column: 3, scope: !9864)
!9910 = distinct !{!9910, !9868, !9911}
!9911 = !DILocation(line: 1705, column: 3, scope: !9861)
!9912 = !DILocation(line: 1706, column: 2, scope: !9848)
!9913 = !DILocation(line: 1707, column: 1, scope: !9823)
!9914 = distinct !DISubprogram(name: "dynamicPaint_generateBakeData", scope: !3, file: !3, line: 4782, type: !9915, scopeLine: 4783, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!9915 = !DISubroutineType(types: !9916)
!9916 = !{!135, !242, !4204, !3426}
!9917 = !DILocalVariable(name: "surface", arg: 1, scope: !9914, file: !3, line: 4782, type: !242)
!9918 = !DILocation(line: 4782, column: 63, scope: !9914)
!9919 = !DILocalVariable(name: "scene", arg: 2, scope: !9914, file: !3, line: 4782, type: !4204)
!9920 = !DILocation(line: 4782, column: 79, scope: !9914)
!9921 = !DILocalVariable(name: "ob", arg: 3, scope: !9914, file: !3, line: 4782, type: !3426)
!9922 = !DILocation(line: 4782, column: 94, scope: !9914)
!9923 = !DILocalVariable(name: "sData", scope: !9914, file: !3, line: 4784, type: !3906)
!9924 = !DILocation(line: 4784, column: 20, scope: !9914)
!9925 = !DILocation(line: 4784, column: 28, scope: !9914)
!9926 = !DILocation(line: 4784, column: 37, scope: !9914)
!9927 = !DILocalVariable(name: "adj_data", scope: !9914, file: !3, line: 4785, type: !5852)
!9928 = !DILocation(line: 4785, column: 16, scope: !9914)
!9929 = !DILocation(line: 4785, column: 27, scope: !9914)
!9930 = !DILocation(line: 4785, column: 34, scope: !9914)
!9931 = !DILocalVariable(name: "bData", scope: !9914, file: !3, line: 4786, type: !4026)
!9932 = !DILocation(line: 4786, column: 17, scope: !9914)
!9933 = !DILocation(line: 4786, column: 25, scope: !9914)
!9934 = !DILocation(line: 4786, column: 32, scope: !9914)
!9935 = !DILocalVariable(name: "dm", scope: !9914, file: !3, line: 4787, type: !2003)
!9936 = !DILocation(line: 4787, column: 15, scope: !9914)
!9937 = !DILocation(line: 4787, column: 20, scope: !9914)
!9938 = !DILocation(line: 4787, column: 29, scope: !9914)
!9939 = !DILocation(line: 4787, column: 37, scope: !9914)
!9940 = !DILocalVariable(name: "index", scope: !9914, file: !3, line: 4788, type: !135)
!9941 = !DILocation(line: 4788, column: 6, scope: !9914)
!9942 = !DILocalVariable(name: "new_bdata", scope: !9914, file: !3, line: 4788, type: !135)
!9943 = !DILocation(line: 4788, column: 13, scope: !9914)
!9944 = !DILocalVariable(name: "do_velocity_data", scope: !9914, file: !3, line: 4789, type: !135)
!9945 = !DILocation(line: 4789, column: 6, scope: !9914)
!9946 = !DILocation(line: 4789, column: 51, scope: !9914)
!9947 = !DILocation(line: 4789, column: 60, scope: !9914)
!9948 = !DILocation(line: 4789, column: 25, scope: !9914)
!9949 = !DILocalVariable(name: "do_accel_data", scope: !9914, file: !3, line: 4790, type: !135)
!9950 = !DILocation(line: 4790, column: 6, scope: !9914)
!9951 = !DILocation(line: 4790, column: 52, scope: !9914)
!9952 = !DILocation(line: 4790, column: 22, scope: !9914)
!9953 = !DILocalVariable(name: "canvasNumOfVerts", scope: !9914, file: !3, line: 4792, type: !135)
!9954 = !DILocation(line: 4792, column: 6, scope: !9914)
!9955 = !DILocation(line: 4792, column: 25, scope: !9914)
!9956 = !DILocation(line: 4792, column: 29, scope: !9914)
!9957 = !DILocation(line: 4792, column: 41, scope: !9914)
!9958 = !DILocalVariable(name: "mvert", scope: !9914, file: !3, line: 4793, type: !3190)
!9959 = !DILocation(line: 4793, column: 9, scope: !9914)
!9960 = !DILocation(line: 4793, column: 17, scope: !9914)
!9961 = !DILocation(line: 4793, column: 21, scope: !9914)
!9962 = !DILocation(line: 4793, column: 34, scope: !9914)
!9963 = !DILocalVariable(name: "canvas_verts", scope: !9914, file: !3, line: 4794, type: !201)
!9964 = !DILocation(line: 4794, column: 9, scope: !9914)
!9965 = !DILocation(line: 4796, column: 6, scope: !9966)
!9966 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4796, column: 6)
!9967 = !DILocation(line: 4796, column: 6, scope: !9914)
!9968 = !DILocalVariable(name: "surface_moved", scope: !9969, file: !3, line: 4797, type: !135)
!9969 = distinct !DILexicalBlock(scope: !9966, file: !3, line: 4796, column: 13)
!9970 = !DILocation(line: 4797, column: 7, scope: !9969)
!9971 = !DILocation(line: 4797, column: 52, scope: !9969)
!9972 = !DILocation(line: 4797, column: 61, scope: !9969)
!9973 = !DILocation(line: 4797, column: 23, scope: !9969)
!9974 = !DILocation(line: 4800, column: 7, scope: !9975)
!9975 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 4800, column: 7)
!9976 = !DILocation(line: 4800, column: 21, scope: !9975)
!9977 = !DILocation(line: 4800, column: 24, scope: !9975)
!9978 = !DILocation(line: 4800, column: 31, scope: !9975)
!9979 = !DILocation(line: 4800, column: 45, scope: !9975)
!9980 = !DILocation(line: 4800, column: 48, scope: !9975)
!9981 = !DILocation(line: 4800, column: 55, scope: !9975)
!9982 = !DILocation(line: 4800, column: 7, scope: !9969)
!9983 = !DILocation(line: 4801, column: 11, scope: !9975)
!9984 = !DILocation(line: 4801, column: 18, scope: !9975)
!9985 = !DILocation(line: 4801, column: 4, scope: !9975)
!9986 = !DILocation(line: 4801, column: 33, scope: !9975)
!9987 = !DILocation(line: 4801, column: 40, scope: !9975)
!9988 = !DILocation(line: 4801, column: 50, scope: !9975)
!9989 = !DILocation(line: 4801, column: 57, scope: !9975)
!9990 = !DILocation(line: 4801, column: 70, scope: !9975)
!9991 = !DILocation(line: 4804, column: 7, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 4804, column: 7)
!9993 = !DILocation(line: 4804, column: 24, scope: !9992)
!9994 = !DILocation(line: 4804, column: 27, scope: !9992)
!9995 = !DILocation(line: 4804, column: 34, scope: !9992)
!9996 = !DILocation(line: 4804, column: 43, scope: !9992)
!9997 = !DILocation(line: 4804, column: 47, scope: !9992)
!9998 = !DILocation(line: 4804, column: 54, scope: !9992)
!9999 = !DILocation(line: 4804, column: 60, scope: !9992)
!10000 = !DILocation(line: 4804, column: 64, scope: !9992)
!10001 = !DILocation(line: 4804, column: 7, scope: !9969)
!10002 = !DILocation(line: 4805, column: 11, scope: !9992)
!10003 = !DILocation(line: 4805, column: 18, scope: !9992)
!10004 = !DILocation(line: 4805, column: 4, scope: !9992)
!10005 = !DILocation(line: 4805, column: 31, scope: !9992)
!10006 = !DILocation(line: 4805, column: 38, scope: !9992)
!10007 = !DILocation(line: 4805, column: 51, scope: !9992)
!10008 = !DILocation(line: 4808, column: 8, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 4808, column: 7)
!10010 = !DILocation(line: 4808, column: 7, scope: !9969)
!10011 = !DILocation(line: 4809, column: 4, scope: !10009)
!10012 = !DILocation(line: 4810, column: 2, scope: !9969)
!10013 = !DILocation(line: 4812, column: 34, scope: !9914)
!10014 = !DILocation(line: 4812, column: 46, scope: !9914)
!10015 = !DILocation(line: 4812, column: 63, scope: !9914)
!10016 = !DILocation(line: 4812, column: 17, scope: !9914)
!10017 = !DILocation(line: 4812, column: 15, scope: !9914)
!10018 = !DILocation(line: 4813, column: 7, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4813, column: 6)
!10020 = !DILocation(line: 4813, column: 6, scope: !9914)
!10021 = !DILocation(line: 4813, column: 21, scope: !10019)
!10022 = !DILocation(line: 4816, column: 7, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4816, column: 6)
!10024 = !DILocation(line: 4816, column: 6, scope: !9914)
!10025 = !DILocation(line: 4817, column: 51, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10023, file: !3, line: 4816, column: 14)
!10027 = !DILocation(line: 4817, column: 26, scope: !10026)
!10028 = !DILocation(line: 4817, column: 24, scope: !10026)
!10029 = !DILocation(line: 4817, column: 3, scope: !10026)
!10030 = !DILocation(line: 4817, column: 10, scope: !10026)
!10031 = !DILocation(line: 4817, column: 16, scope: !10026)
!10032 = !DILocation(line: 4818, column: 8, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 4818, column: 7)
!10034 = !DILocation(line: 4818, column: 7, scope: !10026)
!10035 = !DILocation(line: 4819, column: 8, scope: !10036)
!10036 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 4819, column: 8)
!10037 = distinct !DILexicalBlock(scope: !10033, file: !3, line: 4818, column: 15)
!10038 = !DILocation(line: 4819, column: 8, scope: !10037)
!10039 = !DILocation(line: 4819, column: 22, scope: !10036)
!10040 = !DILocation(line: 4819, column: 32, scope: !10036)
!10041 = !DILocation(line: 4820, column: 4, scope: !10037)
!10042 = !DILocation(line: 4824, column: 47, scope: !10026)
!10043 = !DILocation(line: 4824, column: 59, scope: !10026)
!10044 = !DILocation(line: 4824, column: 66, scope: !10026)
!10045 = !DILocation(line: 4824, column: 79, scope: !10026)
!10046 = !DILocation(line: 4824, column: 20, scope: !10026)
!10047 = !DILocation(line: 4824, column: 3, scope: !10026)
!10048 = !DILocation(line: 4824, column: 10, scope: !10026)
!10049 = !DILocation(line: 4824, column: 18, scope: !10026)
!10050 = !DILocation(line: 4825, column: 18, scope: !10026)
!10051 = !DILocation(line: 4825, column: 30, scope: !10026)
!10052 = !DILocation(line: 4825, column: 37, scope: !10026)
!10053 = !DILocation(line: 4825, column: 50, scope: !10026)
!10054 = !DILocation(line: 4825, column: 3, scope: !10026)
!10055 = !DILocation(line: 4825, column: 10, scope: !10026)
!10056 = !DILocation(line: 4825, column: 16, scope: !10026)
!10057 = !DILocation(line: 4826, column: 18, scope: !10026)
!10058 = !DILocation(line: 4826, column: 30, scope: !10026)
!10059 = !DILocation(line: 4826, column: 37, scope: !10026)
!10060 = !DILocation(line: 4826, column: 50, scope: !10026)
!10061 = !DILocation(line: 4826, column: 3, scope: !10026)
!10062 = !DILocation(line: 4826, column: 10, scope: !10026)
!10063 = !DILocation(line: 4826, column: 16, scope: !10026)
!10064 = !DILocation(line: 4827, column: 39, scope: !10026)
!10065 = !DILocation(line: 4827, column: 72, scope: !10026)
!10066 = !DILocation(line: 4827, column: 51, scope: !10026)
!10067 = !DILocation(line: 4827, column: 81, scope: !10026)
!10068 = !DILocation(line: 4827, column: 22, scope: !10026)
!10069 = !DILocation(line: 4827, column: 3, scope: !10026)
!10070 = !DILocation(line: 4827, column: 10, scope: !10026)
!10071 = !DILocation(line: 4827, column: 20, scope: !10026)
!10072 = !DILocation(line: 4828, column: 23, scope: !10026)
!10073 = !DILocation(line: 4828, column: 35, scope: !10026)
!10074 = !DILocation(line: 4828, column: 52, scope: !10026)
!10075 = !DILocation(line: 4828, column: 3, scope: !10026)
!10076 = !DILocation(line: 4828, column: 10, scope: !10026)
!10077 = !DILocation(line: 4828, column: 21, scope: !10026)
!10078 = !DILocation(line: 4831, column: 8, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10026, file: !3, line: 4831, column: 7)
!10080 = !DILocation(line: 4831, column: 15, scope: !10079)
!10081 = !DILocation(line: 4831, column: 23, scope: !10079)
!10082 = !DILocation(line: 4831, column: 27, scope: !10079)
!10083 = !DILocation(line: 4831, column: 34, scope: !10079)
!10084 = !DILocation(line: 4831, column: 40, scope: !10079)
!10085 = !DILocation(line: 4831, column: 44, scope: !10079)
!10086 = !DILocation(line: 4831, column: 51, scope: !10079)
!10087 = !DILocation(line: 4831, column: 57, scope: !10079)
!10088 = !DILocation(line: 4831, column: 61, scope: !10079)
!10089 = !DILocation(line: 4831, column: 68, scope: !10079)
!10090 = !DILocation(line: 4831, column: 78, scope: !10079)
!10091 = !DILocation(line: 4831, column: 82, scope: !10079)
!10092 = !DILocation(line: 4831, column: 7, scope: !10026)
!10093 = !DILocation(line: 4832, column: 8, scope: !10094)
!10094 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 4832, column: 8)
!10095 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 4831, column: 96)
!10096 = !DILocation(line: 4832, column: 15, scope: !10094)
!10097 = !DILocation(line: 4832, column: 8, scope: !10095)
!10098 = !DILocation(line: 4832, column: 24, scope: !10094)
!10099 = !DILocation(line: 4832, column: 34, scope: !10094)
!10100 = !DILocation(line: 4832, column: 41, scope: !10094)
!10101 = !DILocation(line: 4833, column: 8, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 4833, column: 8)
!10103 = !DILocation(line: 4833, column: 15, scope: !10102)
!10104 = !DILocation(line: 4833, column: 8, scope: !10095)
!10105 = !DILocation(line: 4833, column: 22, scope: !10102)
!10106 = !DILocation(line: 4833, column: 32, scope: !10102)
!10107 = !DILocation(line: 4833, column: 39, scope: !10102)
!10108 = !DILocation(line: 4834, column: 8, scope: !10109)
!10109 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 4834, column: 8)
!10110 = !DILocation(line: 4834, column: 15, scope: !10109)
!10111 = !DILocation(line: 4834, column: 8, scope: !10095)
!10112 = !DILocation(line: 4834, column: 22, scope: !10109)
!10113 = !DILocation(line: 4834, column: 32, scope: !10109)
!10114 = !DILocation(line: 4834, column: 39, scope: !10109)
!10115 = !DILocation(line: 4835, column: 8, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 4835, column: 8)
!10117 = !DILocation(line: 4835, column: 15, scope: !10116)
!10118 = !DILocation(line: 4835, column: 8, scope: !10095)
!10119 = !DILocation(line: 4835, column: 26, scope: !10116)
!10120 = !DILocation(line: 4835, column: 36, scope: !10116)
!10121 = !DILocation(line: 4835, column: 43, scope: !10116)
!10122 = !DILocation(line: 4836, column: 8, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 4836, column: 8)
!10124 = !DILocation(line: 4836, column: 8, scope: !10095)
!10125 = !DILocation(line: 4836, column: 22, scope: !10123)
!10126 = !DILocation(line: 4836, column: 32, scope: !10123)
!10127 = !DILocation(line: 4838, column: 20, scope: !10095)
!10128 = !DILocation(line: 4838, column: 29, scope: !10095)
!10129 = !DILocation(line: 4838, column: 11, scope: !10095)
!10130 = !DILocation(line: 4838, column: 4, scope: !10095)
!10131 = !DILocation(line: 4841, column: 13, scope: !10026)
!10132 = !DILocation(line: 4842, column: 2, scope: !10026)
!10133 = !DILocation(line: 4844, column: 6, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4844, column: 6)
!10135 = !DILocation(line: 4844, column: 23, scope: !10134)
!10136 = !DILocation(line: 4844, column: 27, scope: !10134)
!10137 = !DILocation(line: 4844, column: 34, scope: !10134)
!10138 = !DILocation(line: 4844, column: 6, scope: !9914)
!10139 = !DILocation(line: 4845, column: 38, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 4844, column: 44)
!10141 = !DILocation(line: 4845, column: 50, scope: !10140)
!10142 = !DILocation(line: 4845, column: 57, scope: !10140)
!10143 = !DILocation(line: 4845, column: 70, scope: !10140)
!10144 = !DILocation(line: 4845, column: 21, scope: !10140)
!10145 = !DILocation(line: 4845, column: 3, scope: !10140)
!10146 = !DILocation(line: 4845, column: 10, scope: !10140)
!10147 = !DILocation(line: 4845, column: 19, scope: !10140)
!10148 = !DILocation(line: 4846, column: 2, scope: !10140)
!10149 = !DILocation(line: 4847, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4847, column: 6)
!10151 = !DILocation(line: 4847, column: 20, scope: !10150)
!10152 = !DILocation(line: 4847, column: 24, scope: !10150)
!10153 = !DILocation(line: 4847, column: 31, scope: !10150)
!10154 = !DILocation(line: 4847, column: 6, scope: !9914)
!10155 = !DILocation(line: 4848, column: 43, scope: !10156)
!10156 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 4847, column: 46)
!10157 = !DILocation(line: 4848, column: 55, scope: !10156)
!10158 = !DILocation(line: 4848, column: 62, scope: !10156)
!10159 = !DILocation(line: 4848, column: 75, scope: !10156)
!10160 = !DILocation(line: 4848, column: 26, scope: !10156)
!10161 = !DILocation(line: 4848, column: 3, scope: !10156)
!10162 = !DILocation(line: 4848, column: 10, scope: !10156)
!10163 = !DILocation(line: 4848, column: 24, scope: !10156)
!10164 = !DILocation(line: 4850, column: 7, scope: !10165)
!10165 = distinct !DILexicalBlock(scope: !10156, file: !3, line: 4850, column: 7)
!10166 = !DILocation(line: 4850, column: 14, scope: !10165)
!10167 = !DILocation(line: 4850, column: 28, scope: !10165)
!10168 = !DILocation(line: 4850, column: 31, scope: !10165)
!10169 = !DILocation(line: 4850, column: 38, scope: !10165)
!10170 = !DILocation(line: 4850, column: 7, scope: !10156)
!10171 = !DILocation(line: 4851, column: 11, scope: !10165)
!10172 = !DILocation(line: 4851, column: 18, scope: !10165)
!10173 = !DILocation(line: 4851, column: 4, scope: !10165)
!10174 = !DILocation(line: 4851, column: 33, scope: !10165)
!10175 = !DILocation(line: 4851, column: 40, scope: !10165)
!10176 = !DILocation(line: 4851, column: 50, scope: !10165)
!10177 = !DILocation(line: 4851, column: 57, scope: !10165)
!10178 = !DILocation(line: 4851, column: 70, scope: !10165)
!10179 = !DILocation(line: 4852, column: 2, scope: !10156)
!10180 = !DILocation(line: 4857, column: 2, scope: !9914)
!10181 = !DILocation(line: 4857, column: 9, scope: !9914)
!10182 = !DILocation(line: 4857, column: 21, scope: !9914)
!10183 = !DILocation(line: 4857, column: 27, scope: !9914)
!10184 = !DILocation(line: 4858, column: 13, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4858, column: 2)
!10186 = !DILocation(line: 4858, column: 7, scope: !10185)
!10187 = !DILocation(line: 4858, column: 18, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 4858, column: 2)
!10189 = !DILocation(line: 4858, column: 26, scope: !10188)
!10190 = !DILocation(line: 4858, column: 24, scope: !10188)
!10191 = !DILocation(line: 4858, column: 2, scope: !10185)
!10192 = !DILocation(line: 4859, column: 14, scope: !10193)
!10193 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 4858, column: 53)
!10194 = !DILocation(line: 4859, column: 27, scope: !10193)
!10195 = !DILocation(line: 4859, column: 34, scope: !10193)
!10196 = !DILocation(line: 4859, column: 37, scope: !10193)
!10197 = !DILocation(line: 4859, column: 43, scope: !10193)
!10198 = !DILocation(line: 4859, column: 50, scope: !10193)
!10199 = !DILocation(line: 4859, column: 3, scope: !10193)
!10200 = !DILocation(line: 4860, column: 13, scope: !10193)
!10201 = !DILocation(line: 4860, column: 17, scope: !10193)
!10202 = !DILocation(line: 4860, column: 24, scope: !10193)
!10203 = !DILocation(line: 4860, column: 37, scope: !10193)
!10204 = !DILocation(line: 4860, column: 44, scope: !10193)
!10205 = !DILocation(line: 4860, column: 3, scope: !10193)
!10206 = !DILocation(line: 4861, column: 16, scope: !10193)
!10207 = !DILocation(line: 4861, column: 23, scope: !10193)
!10208 = !DILocation(line: 4861, column: 36, scope: !10193)
!10209 = !DILocation(line: 4861, column: 49, scope: !10193)
!10210 = !DILocation(line: 4861, column: 56, scope: !10193)
!10211 = !DILocation(line: 4861, column: 3, scope: !10193)
!10212 = !DILocation(line: 4862, column: 2, scope: !10193)
!10213 = !DILocation(line: 4858, column: 49, scope: !10188)
!10214 = !DILocation(line: 4858, column: 2, scope: !10188)
!10215 = distinct !{!10215, !10191, !10216}
!10216 = !DILocation(line: 4862, column: 2, scope: !10185)
!10217 = !DILocation(line: 4870, column: 13, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 4870, column: 2)
!10219 = !DILocation(line: 4870, column: 7, scope: !10218)
!10220 = !DILocation(line: 4870, column: 18, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 4870, column: 2)
!10222 = !DILocation(line: 4870, column: 26, scope: !10221)
!10223 = !DILocation(line: 4870, column: 33, scope: !10221)
!10224 = !DILocation(line: 4870, column: 24, scope: !10221)
!10225 = !DILocation(line: 4870, column: 2, scope: !10218)
!10226 = !DILocalVariable(name: "prev_point", scope: !10227, file: !3, line: 4871, type: !206)
!10227 = distinct !DILexicalBlock(scope: !10221, file: !3, line: 4870, column: 56)
!10228 = !DILocation(line: 4871, column: 9, scope: !10227)
!10229 = !DILocation(line: 4872, column: 7, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 4872, column: 7)
!10231 = !DILocation(line: 4872, column: 24, scope: !10230)
!10232 = !DILocation(line: 4872, column: 28, scope: !10230)
!10233 = !DILocation(line: 4872, column: 7, scope: !10227)
!10234 = !DILocation(line: 4873, column: 15, scope: !10235)
!10235 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 4872, column: 39)
!10236 = !DILocation(line: 4873, column: 27, scope: !10235)
!10237 = !DILocation(line: 4873, column: 34, scope: !10235)
!10238 = !DILocation(line: 4873, column: 44, scope: !10235)
!10239 = !DILocation(line: 4873, column: 51, scope: !10235)
!10240 = !DILocation(line: 4873, column: 57, scope: !10235)
!10241 = !DILocation(line: 4873, column: 65, scope: !10235)
!10242 = !DILocation(line: 4873, column: 4, scope: !10235)
!10243 = !DILocation(line: 4874, column: 3, scope: !10235)
!10244 = !DILocation(line: 4878, column: 7, scope: !10245)
!10245 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 4878, column: 7)
!10246 = !DILocation(line: 4878, column: 16, scope: !10245)
!10247 = !DILocation(line: 4878, column: 23, scope: !10245)
!10248 = !DILocation(line: 4878, column: 7, scope: !10227)
!10249 = !DILocalVariable(name: "n1", scope: !10250, file: !3, line: 4879, type: !206)
!10250 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 4878, column: 57)
!10251 = !DILocation(line: 4879, column: 10, scope: !10250)
!10252 = !DILocalVariable(name: "n2", scope: !10250, file: !3, line: 4879, type: !206)
!10253 = !DILocation(line: 4879, column: 17, scope: !10250)
!10254 = !DILocalVariable(name: "n3", scope: !10250, file: !3, line: 4879, type: !206)
!10255 = !DILocation(line: 4879, column: 24, scope: !10250)
!10256 = !DILocalVariable(name: "f_data", scope: !10250, file: !3, line: 4880, type: !183)
!10257 = !DILocation(line: 4880, column: 22, scope: !10250)
!10258 = !DILocation(line: 4880, column: 51, scope: !10250)
!10259 = !DILocation(line: 4880, column: 58, scope: !10250)
!10260 = !DILocation(line: 4880, column: 31, scope: !10250)
!10261 = !DILocalVariable(name: "tPoint", scope: !10250, file: !3, line: 4881, type: !188)
!10262 = !DILocation(line: 4881, column: 18, scope: !10250)
!10263 = !DILocation(line: 4881, column: 45, scope: !10250)
!10264 = !DILocation(line: 4881, column: 53, scope: !10250)
!10265 = !DILocation(line: 4881, column: 59, scope: !10250)
!10266 = !DILocation(line: 4881, column: 28, scope: !10250)
!10267 = !DILocalVariable(name: "ss", scope: !10250, file: !3, line: 4882, type: !135)
!10268 = !DILocation(line: 4882, column: 8, scope: !10250)
!10269 = !DILocation(line: 4884, column: 27, scope: !10250)
!10270 = !DILocation(line: 4884, column: 36, scope: !10250)
!10271 = !DILocation(line: 4884, column: 42, scope: !10250)
!10272 = !DILocation(line: 4884, column: 26, scope: !10250)
!10273 = !DILocation(line: 4884, column: 4, scope: !10250)
!10274 = !DILocation(line: 4884, column: 11, scope: !10250)
!10275 = !DILocation(line: 4884, column: 17, scope: !10250)
!10276 = !DILocation(line: 4884, column: 24, scope: !10250)
!10277 = !DILocation(line: 4885, column: 26, scope: !10250)
!10278 = !DILocation(line: 4885, column: 34, scope: !10250)
!10279 = !DILocation(line: 4885, column: 41, scope: !10250)
!10280 = !DILocation(line: 4885, column: 47, scope: !10250)
!10281 = !DILocation(line: 4885, column: 32, scope: !10250)
!10282 = !DILocation(line: 4885, column: 4, scope: !10250)
!10283 = !DILocation(line: 4885, column: 11, scope: !10250)
!10284 = !DILocation(line: 4885, column: 17, scope: !10250)
!10285 = !DILocation(line: 4885, column: 24, scope: !10250)
!10286 = !DILocation(line: 4888, column: 12, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10250, file: !3, line: 4888, column: 4)
!10288 = !DILocation(line: 4888, column: 9, scope: !10287)
!10289 = !DILocation(line: 4888, column: 17, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 4888, column: 4)
!10291 = !DILocation(line: 4888, column: 22, scope: !10290)
!10292 = !DILocation(line: 4888, column: 29, scope: !10290)
!10293 = !DILocation(line: 4888, column: 35, scope: !10290)
!10294 = !DILocation(line: 4888, column: 20, scope: !10290)
!10295 = !DILocation(line: 4888, column: 4, scope: !10287)
!10296 = !DILocation(line: 4889, column: 22, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10290, file: !3, line: 4888, column: 49)
!10298 = !DILocation(line: 4889, column: 29, scope: !10297)
!10299 = !DILocation(line: 4889, column: 39, scope: !10297)
!10300 = !DILocation(line: 4889, column: 46, scope: !10297)
!10301 = !DILocation(line: 4889, column: 52, scope: !10297)
!10302 = !DILocation(line: 4889, column: 61, scope: !10297)
!10303 = !DILocation(line: 4889, column: 59, scope: !10297)
!10304 = !DILocation(line: 4889, column: 65, scope: !10297)
!10305 = !DILocation(line: 4890, column: 22, scope: !10297)
!10306 = !DILocation(line: 4890, column: 35, scope: !10297)
!10307 = !DILocation(line: 4890, column: 43, scope: !10297)
!10308 = !DILocation(line: 4890, column: 47, scope: !10297)
!10309 = !DILocation(line: 4891, column: 22, scope: !10297)
!10310 = !DILocation(line: 4891, column: 35, scope: !10297)
!10311 = !DILocation(line: 4891, column: 43, scope: !10297)
!10312 = !DILocation(line: 4891, column: 47, scope: !10297)
!10313 = !DILocation(line: 4892, column: 22, scope: !10297)
!10314 = !DILocation(line: 4892, column: 35, scope: !10297)
!10315 = !DILocation(line: 4892, column: 43, scope: !10297)
!10316 = !DILocation(line: 4892, column: 47, scope: !10297)
!10317 = !DILocation(line: 4893, column: 22, scope: !10297)
!10318 = !DILocation(line: 4893, column: 30, scope: !10297)
!10319 = !DILocation(line: 4893, column: 49, scope: !10297)
!10320 = !DILocation(line: 4893, column: 57, scope: !10297)
!10321 = !DILocation(line: 4893, column: 64, scope: !10297)
!10322 = !DILocation(line: 4893, column: 70, scope: !10297)
!10323 = !DILocation(line: 4893, column: 55, scope: !10297)
!10324 = !DILocation(line: 4893, column: 79, scope: !10297)
!10325 = !DILocation(line: 4893, column: 77, scope: !10297)
!10326 = !DILocation(line: 4893, column: 83, scope: !10297)
!10327 = !DILocation(line: 4889, column: 5, scope: !10297)
!10328 = !DILocation(line: 4894, column: 4, scope: !10297)
!10329 = !DILocation(line: 4888, column: 45, scope: !10290)
!10330 = !DILocation(line: 4888, column: 4, scope: !10290)
!10331 = distinct !{!10331, !10295, !10332}
!10332 = !DILocation(line: 4894, column: 4, scope: !10287)
!10333 = !DILocation(line: 4897, column: 29, scope: !10250)
!10334 = !DILocation(line: 4897, column: 33, scope: !10250)
!10335 = !DILocation(line: 4897, column: 39, scope: !10250)
!10336 = !DILocation(line: 4897, column: 47, scope: !10250)
!10337 = !DILocation(line: 4897, column: 51, scope: !10250)
!10338 = !DILocation(line: 4897, column: 4, scope: !10250)
!10339 = !DILocation(line: 4898, column: 29, scope: !10250)
!10340 = !DILocation(line: 4898, column: 33, scope: !10250)
!10341 = !DILocation(line: 4898, column: 39, scope: !10250)
!10342 = !DILocation(line: 4898, column: 47, scope: !10250)
!10343 = !DILocation(line: 4898, column: 51, scope: !10250)
!10344 = !DILocation(line: 4898, column: 4, scope: !10250)
!10345 = !DILocation(line: 4899, column: 29, scope: !10250)
!10346 = !DILocation(line: 4899, column: 33, scope: !10250)
!10347 = !DILocation(line: 4899, column: 39, scope: !10250)
!10348 = !DILocation(line: 4899, column: 47, scope: !10250)
!10349 = !DILocation(line: 4899, column: 51, scope: !10250)
!10350 = !DILocation(line: 4899, column: 4, scope: !10250)
!10351 = !DILocation(line: 4901, column: 21, scope: !10250)
!10352 = !DILocation(line: 4901, column: 28, scope: !10250)
!10353 = !DILocation(line: 4901, column: 36, scope: !10250)
!10354 = !DILocation(line: 4901, column: 43, scope: !10250)
!10355 = !DILocation(line: 4902, column: 21, scope: !10250)
!10356 = !DILocation(line: 4902, column: 25, scope: !10250)
!10357 = !DILocation(line: 4902, column: 29, scope: !10250)
!10358 = !DILocation(line: 4902, column: 33, scope: !10250)
!10359 = !DILocation(line: 4902, column: 41, scope: !10250)
!10360 = !DILocation(line: 4902, column: 60, scope: !10250)
!10361 = !DILocation(line: 4902, column: 68, scope: !10250)
!10362 = !DILocation(line: 4902, column: 75, scope: !10250)
!10363 = !DILocation(line: 4902, column: 81, scope: !10250)
!10364 = !DILocation(line: 4902, column: 66, scope: !10250)
!10365 = !DILocation(line: 4902, column: 89, scope: !10250)
!10366 = !DILocation(line: 4901, column: 4, scope: !10250)
!10367 = !DILocation(line: 4903, column: 19, scope: !10250)
!10368 = !DILocation(line: 4903, column: 23, scope: !10250)
!10369 = !DILocation(line: 4903, column: 30, scope: !10250)
!10370 = !DILocation(line: 4903, column: 37, scope: !10250)
!10371 = !DILocation(line: 4903, column: 45, scope: !10250)
!10372 = !DILocation(line: 4903, column: 52, scope: !10250)
!10373 = !DILocation(line: 4903, column: 4, scope: !10250)
!10374 = !DILocation(line: 4904, column: 17, scope: !10250)
!10375 = !DILocation(line: 4904, column: 24, scope: !10250)
!10376 = !DILocation(line: 4904, column: 32, scope: !10250)
!10377 = !DILocation(line: 4904, column: 39, scope: !10250)
!10378 = !DILocation(line: 4904, column: 4, scope: !10250)
!10379 = !DILocation(line: 4905, column: 14, scope: !10250)
!10380 = !DILocation(line: 4905, column: 21, scope: !10250)
!10381 = !DILocation(line: 4905, column: 29, scope: !10250)
!10382 = !DILocation(line: 4905, column: 36, scope: !10250)
!10383 = !DILocation(line: 4905, column: 4, scope: !10250)
!10384 = !DILocation(line: 4906, column: 3, scope: !10250)
!10385 = !DILocation(line: 4907, column: 12, scope: !10386)
!10386 = distinct !DILexicalBlock(scope: !10245, file: !3, line: 4907, column: 12)
!10387 = !DILocation(line: 4907, column: 21, scope: !10386)
!10388 = !DILocation(line: 4907, column: 28, scope: !10386)
!10389 = !DILocation(line: 4907, column: 12, scope: !10245)
!10390 = !DILocalVariable(name: "ss", scope: !10391, file: !3, line: 4908, type: !135)
!10391 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 4907, column: 60)
!10392 = !DILocation(line: 4908, column: 8, scope: !10391)
!10393 = !DILocation(line: 4909, column: 8, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 4909, column: 8)
!10395 = !DILocation(line: 4909, column: 17, scope: !10394)
!10396 = !DILocation(line: 4909, column: 23, scope: !10394)
!10397 = !DILocation(line: 4909, column: 46, scope: !10394)
!10398 = !DILocation(line: 4909, column: 49, scope: !10394)
!10399 = !DILocation(line: 4909, column: 8, scope: !10391)
!10400 = !DILocation(line: 4910, column: 27, scope: !10401)
!10401 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 4909, column: 59)
!10402 = !DILocation(line: 4910, column: 37, scope: !10401)
!10403 = !DILocation(line: 4910, column: 43, scope: !10401)
!10404 = !DILocation(line: 4910, column: 50, scope: !10401)
!10405 = !DILocation(line: 4910, column: 5, scope: !10401)
!10406 = !DILocation(line: 4910, column: 12, scope: !10401)
!10407 = !DILocation(line: 4910, column: 18, scope: !10401)
!10408 = !DILocation(line: 4910, column: 25, scope: !10401)
!10409 = !DILocation(line: 4911, column: 27, scope: !10401)
!10410 = !DILocation(line: 4911, column: 37, scope: !10401)
!10411 = !DILocation(line: 4911, column: 45, scope: !10401)
!10412 = !DILocation(line: 4911, column: 54, scope: !10401)
!10413 = !DILocation(line: 4911, column: 52, scope: !10401)
!10414 = !DILocation(line: 4911, column: 5, scope: !10401)
!10415 = !DILocation(line: 4911, column: 12, scope: !10401)
!10416 = !DILocation(line: 4911, column: 18, scope: !10401)
!10417 = !DILocation(line: 4911, column: 25, scope: !10401)
!10418 = !DILocation(line: 4912, column: 4, scope: !10401)
!10419 = !DILocation(line: 4914, column: 5, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10394, file: !3, line: 4913, column: 9)
!10421 = !DILocation(line: 4914, column: 12, scope: !10420)
!10422 = !DILocation(line: 4914, column: 18, scope: !10420)
!10423 = !DILocation(line: 4914, column: 25, scope: !10420)
!10424 = !DILocation(line: 4915, column: 27, scope: !10420)
!10425 = !DILocation(line: 4915, column: 5, scope: !10420)
!10426 = !DILocation(line: 4915, column: 12, scope: !10420)
!10427 = !DILocation(line: 4915, column: 18, scope: !10420)
!10428 = !DILocation(line: 4915, column: 25, scope: !10420)
!10429 = !DILocation(line: 4919, column: 12, scope: !10430)
!10430 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 4919, column: 4)
!10431 = !DILocation(line: 4919, column: 9, scope: !10430)
!10432 = !DILocation(line: 4919, column: 17, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10430, file: !3, line: 4919, column: 4)
!10434 = !DILocation(line: 4919, column: 22, scope: !10433)
!10435 = !DILocation(line: 4919, column: 29, scope: !10433)
!10436 = !DILocation(line: 4919, column: 35, scope: !10433)
!10437 = !DILocation(line: 4919, column: 20, scope: !10433)
!10438 = !DILocation(line: 4919, column: 4, scope: !10430)
!10439 = !DILocation(line: 4921, column: 16, scope: !10440)
!10440 = distinct !DILexicalBlock(scope: !10433, file: !3, line: 4919, column: 49)
!10441 = !DILocation(line: 4921, column: 23, scope: !10440)
!10442 = !DILocation(line: 4921, column: 33, scope: !10440)
!10443 = !DILocation(line: 4921, column: 40, scope: !10440)
!10444 = !DILocation(line: 4921, column: 46, scope: !10440)
!10445 = !DILocation(line: 4921, column: 55, scope: !10440)
!10446 = !DILocation(line: 4921, column: 53, scope: !10440)
!10447 = !DILocation(line: 4921, column: 59, scope: !10440)
!10448 = !DILocation(line: 4921, column: 62, scope: !10440)
!10449 = !DILocation(line: 4921, column: 75, scope: !10440)
!10450 = !DILocation(line: 4921, column: 82, scope: !10440)
!10451 = !DILocation(line: 4921, column: 5, scope: !10440)
!10452 = !DILocation(line: 4922, column: 9, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10440, file: !3, line: 4922, column: 9)
!10454 = !DILocation(line: 4922, column: 12, scope: !10453)
!10455 = !DILocation(line: 4922, column: 9, scope: !10440)
!10456 = !DILocalVariable(name: "t_index", scope: !10457, file: !3, line: 4923, type: !135)
!10457 = distinct !DILexicalBlock(scope: !10453, file: !3, line: 4922, column: 17)
!10458 = !DILocation(line: 4923, column: 10, scope: !10457)
!10459 = !DILocation(line: 4923, column: 20, scope: !10457)
!10460 = !DILocation(line: 4923, column: 30, scope: !10457)
!10461 = !DILocation(line: 4923, column: 38, scope: !10457)
!10462 = !DILocation(line: 4923, column: 48, scope: !10457)
!10463 = !DILocation(line: 4923, column: 51, scope: !10457)
!10464 = !DILocation(line: 4923, column: 45, scope: !10457)
!10465 = !DILocation(line: 4925, column: 16, scope: !10457)
!10466 = !DILocation(line: 4925, column: 23, scope: !10457)
!10467 = !DILocation(line: 4925, column: 33, scope: !10457)
!10468 = !DILocation(line: 4925, column: 40, scope: !10457)
!10469 = !DILocation(line: 4925, column: 46, scope: !10457)
!10470 = !DILocation(line: 4925, column: 55, scope: !10457)
!10471 = !DILocation(line: 4925, column: 53, scope: !10457)
!10472 = !DILocation(line: 4925, column: 59, scope: !10457)
!10473 = !DILocation(line: 4925, column: 6, scope: !10457)
!10474 = !DILocation(line: 4926, column: 19, scope: !10457)
!10475 = !DILocation(line: 4926, column: 26, scope: !10457)
!10476 = !DILocation(line: 4926, column: 36, scope: !10457)
!10477 = !DILocation(line: 4926, column: 43, scope: !10457)
!10478 = !DILocation(line: 4926, column: 49, scope: !10457)
!10479 = !DILocation(line: 4926, column: 58, scope: !10457)
!10480 = !DILocation(line: 4926, column: 56, scope: !10457)
!10481 = !DILocation(line: 4926, column: 62, scope: !10457)
!10482 = !DILocation(line: 4926, column: 65, scope: !10457)
!10483 = !DILocation(line: 4926, column: 78, scope: !10457)
!10484 = !DILocation(line: 4926, column: 88, scope: !10457)
!10485 = !DILocation(line: 4926, column: 97, scope: !10457)
!10486 = !DILocation(line: 4926, column: 107, scope: !10457)
!10487 = !DILocation(line: 4926, column: 6, scope: !10457)
!10488 = !DILocation(line: 4927, column: 5, scope: !10457)
!10489 = !DILocation(line: 4928, column: 4, scope: !10440)
!10490 = !DILocation(line: 4919, column: 45, scope: !10433)
!10491 = !DILocation(line: 4919, column: 4, scope: !10433)
!10492 = distinct !{!10492, !10438, !10493}
!10493 = !DILocation(line: 4928, column: 4, scope: !10430)
!10494 = !DILocation(line: 4931, column: 29, scope: !10391)
!10495 = !DILocation(line: 4931, column: 36, scope: !10391)
!10496 = !DILocation(line: 4931, column: 44, scope: !10391)
!10497 = !DILocation(line: 4931, column: 51, scope: !10391)
!10498 = !DILocation(line: 4931, column: 60, scope: !10391)
!10499 = !DILocation(line: 4931, column: 66, scope: !10391)
!10500 = !DILocation(line: 4931, column: 73, scope: !10391)
!10501 = !DILocation(line: 4931, column: 4, scope: !10391)
!10502 = !DILocation(line: 4932, column: 19, scope: !10391)
!10503 = !DILocation(line: 4932, column: 23, scope: !10391)
!10504 = !DILocation(line: 4932, column: 30, scope: !10391)
!10505 = !DILocation(line: 4932, column: 37, scope: !10391)
!10506 = !DILocation(line: 4932, column: 45, scope: !10391)
!10507 = !DILocation(line: 4932, column: 52, scope: !10391)
!10508 = !DILocation(line: 4932, column: 4, scope: !10391)
!10509 = !DILocation(line: 4933, column: 17, scope: !10391)
!10510 = !DILocation(line: 4933, column: 24, scope: !10391)
!10511 = !DILocation(line: 4933, column: 32, scope: !10391)
!10512 = !DILocation(line: 4933, column: 39, scope: !10391)
!10513 = !DILocation(line: 4933, column: 4, scope: !10391)
!10514 = !DILocation(line: 4934, column: 14, scope: !10391)
!10515 = !DILocation(line: 4934, column: 21, scope: !10391)
!10516 = !DILocation(line: 4934, column: 29, scope: !10391)
!10517 = !DILocation(line: 4934, column: 36, scope: !10391)
!10518 = !DILocation(line: 4934, column: 4, scope: !10391)
!10519 = !DILocation(line: 4935, column: 3, scope: !10391)
!10520 = !DILocation(line: 4939, column: 7, scope: !10521)
!10521 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 4939, column: 7)
!10522 = !DILocation(line: 4939, column: 16, scope: !10521)
!10523 = !DILocation(line: 4939, column: 21, scope: !10521)
!10524 = !DILocation(line: 4939, column: 54, scope: !10521)
!10525 = !DILocation(line: 4940, column: 7, scope: !10521)
!10526 = !DILocation(line: 4940, column: 16, scope: !10521)
!10527 = !DILocation(line: 4940, column: 21, scope: !10521)
!10528 = !DILocation(line: 4939, column: 7, scope: !10227)
!10529 = !DILocalVariable(name: "temp_nor", scope: !10530, file: !3, line: 4942, type: !206)
!10530 = distinct !DILexicalBlock(scope: !10521, file: !3, line: 4941, column: 3)
!10531 = !DILocation(line: 4942, column: 10, scope: !10530)
!10532 = !DILocation(line: 4943, column: 8, scope: !10533)
!10533 = distinct !DILexicalBlock(scope: !10530, file: !3, line: 4943, column: 8)
!10534 = !DILocation(line: 4943, column: 17, scope: !10533)
!10535 = !DILocation(line: 4943, column: 24, scope: !10533)
!10536 = !DILocation(line: 4943, column: 8, scope: !10530)
!10537 = !DILocation(line: 4944, column: 30, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 4943, column: 56)
!10539 = !DILocation(line: 4944, column: 40, scope: !10538)
!10540 = !DILocation(line: 4944, column: 46, scope: !10538)
!10541 = !DILocation(line: 4944, column: 53, scope: !10538)
!10542 = !DILocation(line: 4944, column: 5, scope: !10538)
!10543 = !DILocation(line: 4945, column: 18, scope: !10538)
!10544 = !DILocation(line: 4945, column: 5, scope: !10538)
!10545 = !DILocation(line: 4946, column: 4, scope: !10538)
!10546 = !DILocalVariable(name: "n1", scope: !10547, file: !3, line: 4948, type: !206)
!10547 = distinct !DILexicalBlock(scope: !10533, file: !3, line: 4947, column: 9)
!10548 = !DILocation(line: 4948, column: 11, scope: !10547)
!10549 = !DILocalVariable(name: "n2", scope: !10547, file: !3, line: 4948, type: !206)
!10550 = !DILocation(line: 4948, column: 18, scope: !10547)
!10551 = !DILocalVariable(name: "n3", scope: !10547, file: !3, line: 4948, type: !206)
!10552 = !DILocation(line: 4948, column: 25, scope: !10547)
!10553 = !DILocalVariable(name: "f_data", scope: !10547, file: !3, line: 4949, type: !183)
!10554 = !DILocation(line: 4949, column: 23, scope: !10547)
!10555 = !DILocation(line: 4949, column: 52, scope: !10547)
!10556 = !DILocation(line: 4949, column: 59, scope: !10547)
!10557 = !DILocation(line: 4949, column: 32, scope: !10547)
!10558 = !DILocalVariable(name: "tPoint", scope: !10547, file: !3, line: 4950, type: !188)
!10559 = !DILocation(line: 4950, column: 19, scope: !10547)
!10560 = !DILocation(line: 4950, column: 46, scope: !10547)
!10561 = !DILocation(line: 4950, column: 54, scope: !10547)
!10562 = !DILocation(line: 4950, column: 60, scope: !10547)
!10563 = !DILocation(line: 4950, column: 29, scope: !10547)
!10564 = !DILocation(line: 4952, column: 30, scope: !10547)
!10565 = !DILocation(line: 4952, column: 34, scope: !10547)
!10566 = !DILocation(line: 4952, column: 40, scope: !10547)
!10567 = !DILocation(line: 4952, column: 48, scope: !10547)
!10568 = !DILocation(line: 4952, column: 52, scope: !10547)
!10569 = !DILocation(line: 4952, column: 5, scope: !10547)
!10570 = !DILocation(line: 4953, column: 30, scope: !10547)
!10571 = !DILocation(line: 4953, column: 34, scope: !10547)
!10572 = !DILocation(line: 4953, column: 40, scope: !10547)
!10573 = !DILocation(line: 4953, column: 48, scope: !10547)
!10574 = !DILocation(line: 4953, column: 52, scope: !10547)
!10575 = !DILocation(line: 4953, column: 5, scope: !10547)
!10576 = !DILocation(line: 4954, column: 30, scope: !10547)
!10577 = !DILocation(line: 4954, column: 34, scope: !10547)
!10578 = !DILocation(line: 4954, column: 40, scope: !10547)
!10579 = !DILocation(line: 4954, column: 48, scope: !10547)
!10580 = !DILocation(line: 4954, column: 52, scope: !10547)
!10581 = !DILocation(line: 4954, column: 5, scope: !10547)
!10582 = !DILocation(line: 4955, column: 22, scope: !10547)
!10583 = !DILocation(line: 4956, column: 22, scope: !10547)
!10584 = !DILocation(line: 4956, column: 26, scope: !10547)
!10585 = !DILocation(line: 4956, column: 30, scope: !10547)
!10586 = !DILocation(line: 4956, column: 34, scope: !10547)
!10587 = !DILocation(line: 4956, column: 42, scope: !10547)
!10588 = !DILocation(line: 4956, column: 61, scope: !10547)
!10589 = !DILocation(line: 4956, column: 69, scope: !10547)
!10590 = !DILocation(line: 4956, column: 76, scope: !10547)
!10591 = !DILocation(line: 4956, column: 82, scope: !10547)
!10592 = !DILocation(line: 4956, column: 67, scope: !10547)
!10593 = !DILocation(line: 4956, column: 90, scope: !10547)
!10594 = !DILocation(line: 4955, column: 5, scope: !10547)
!10595 = !DILocation(line: 4959, column: 14, scope: !10530)
!10596 = !DILocation(line: 4959, column: 24, scope: !10530)
!10597 = !DILocation(line: 4959, column: 28, scope: !10530)
!10598 = !DILocation(line: 4959, column: 4, scope: !10530)
!10599 = !DILocation(line: 4960, column: 48, scope: !10530)
!10600 = !DILocation(line: 4960, column: 41, scope: !10530)
!10601 = !DILocation(line: 4960, column: 4, scope: !10530)
!10602 = !DILocation(line: 4960, column: 11, scope: !10530)
!10603 = !DILocation(line: 4960, column: 19, scope: !10530)
!10604 = !DILocation(line: 4960, column: 26, scope: !10530)
!10605 = !DILocation(line: 4960, column: 39, scope: !10530)
!10606 = !DILocation(line: 4961, column: 3, scope: !10530)
!10607 = !DILocation(line: 4964, column: 7, scope: !10608)
!10608 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 4964, column: 7)
!10609 = !DILocation(line: 4964, column: 24, scope: !10608)
!10610 = !DILocation(line: 4964, column: 28, scope: !10608)
!10611 = !DILocation(line: 4964, column: 38, scope: !10608)
!10612 = !DILocation(line: 4964, column: 42, scope: !10608)
!10613 = !DILocation(line: 4964, column: 49, scope: !10608)
!10614 = !DILocation(line: 4964, column: 7, scope: !10227)
!10615 = !DILocation(line: 4965, column: 16, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10608, file: !3, line: 4964, column: 56)
!10617 = !DILocation(line: 4965, column: 23, scope: !10616)
!10618 = !DILocation(line: 4965, column: 32, scope: !10616)
!10619 = !DILocation(line: 4965, column: 39, scope: !10616)
!10620 = !DILocation(line: 4965, column: 42, scope: !10616)
!10621 = !DILocation(line: 4965, column: 49, scope: !10616)
!10622 = !DILocation(line: 4965, column: 59, scope: !10616)
!10623 = !DILocation(line: 4965, column: 66, scope: !10616)
!10624 = !DILocation(line: 4965, column: 72, scope: !10616)
!10625 = !DILocation(line: 4965, column: 80, scope: !10616)
!10626 = !DILocation(line: 4965, column: 83, scope: !10616)
!10627 = !DILocation(line: 4965, column: 4, scope: !10616)
!10628 = !DILocation(line: 4966, column: 3, scope: !10616)
!10629 = !DILocation(line: 4967, column: 2, scope: !10227)
!10630 = !DILocation(line: 4870, column: 52, scope: !10221)
!10631 = !DILocation(line: 4870, column: 2, scope: !10221)
!10632 = distinct !{!10632, !10225, !10633}
!10633 = !DILocation(line: 4967, column: 2, scope: !10218)
!10634 = !DILocation(line: 4969, column: 2, scope: !9914)
!10635 = !DILocation(line: 4969, column: 12, scope: !9914)
!10636 = !DILocation(line: 4972, column: 22, scope: !9914)
!10637 = !DILocation(line: 4972, column: 2, scope: !9914)
!10638 = !DILocation(line: 4974, column: 36, scope: !9914)
!10639 = !DILocation(line: 4974, column: 2, scope: !9914)
!10640 = !DILocation(line: 4977, column: 13, scope: !9914)
!10641 = !DILocation(line: 4977, column: 20, scope: !9914)
!10642 = !DILocation(line: 4977, column: 32, scope: !9914)
!10643 = !DILocation(line: 4977, column: 36, scope: !9914)
!10644 = !DILocation(line: 4977, column: 2, scope: !9914)
!10645 = !DILocation(line: 4978, column: 9, scope: !9914)
!10646 = !DILocation(line: 4978, column: 16, scope: !9914)
!10647 = !DILocation(line: 4978, column: 2, scope: !9914)
!10648 = !DILocation(line: 4978, column: 28, scope: !9914)
!10649 = !DILocation(line: 4978, column: 35, scope: !9914)
!10650 = !DILocation(line: 4978, column: 52, scope: !9914)
!10651 = !DILocation(line: 4980, column: 2, scope: !9914)
!10652 = !DILocation(line: 4980, column: 9, scope: !9914)
!10653 = !DILocation(line: 4980, column: 15, scope: !9914)
!10654 = !DILocation(line: 4982, column: 2, scope: !9914)
!10655 = !DILocation(line: 4983, column: 1, scope: !9914)
!10656 = distinct !DISubprogram(name: "dynamicPaint_doStep", scope: !3, file: !3, line: 4988, type: !10657, scopeLine: 4989, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!10657 = !DISubroutineType(types: !10658)
!10658 = !{!135, !4204, !3426, !242, !207, !207}
!10659 = !DILocalVariable(name: "scene", arg: 1, scope: !10656, file: !3, line: 4988, type: !4204)
!10660 = !DILocation(line: 4988, column: 39, scope: !10656)
!10661 = !DILocalVariable(name: "ob", arg: 2, scope: !10656, file: !3, line: 4988, type: !3426)
!10662 = !DILocation(line: 4988, column: 54, scope: !10656)
!10663 = !DILocalVariable(name: "surface", arg: 3, scope: !10656, file: !3, line: 4988, type: !242)
!10664 = !DILocation(line: 4988, column: 79, scope: !10656)
!10665 = !DILocalVariable(name: "timescale", arg: 4, scope: !10656, file: !3, line: 4988, type: !207)
!10666 = !DILocation(line: 4988, column: 94, scope: !10656)
!10667 = !DILocalVariable(name: "subframe", arg: 5, scope: !10656, file: !3, line: 4988, type: !207)
!10668 = !DILocation(line: 4988, column: 111, scope: !10656)
!10669 = !DILocalVariable(name: "sData", scope: !10656, file: !3, line: 4990, type: !3906)
!10670 = !DILocation(line: 4990, column: 20, scope: !10656)
!10671 = !DILocation(line: 4990, column: 28, scope: !10656)
!10672 = !DILocation(line: 4990, column: 37, scope: !10656)
!10673 = !DILocalVariable(name: "bData", scope: !10656, file: !3, line: 4991, type: !4026)
!10674 = !DILocation(line: 4991, column: 17, scope: !10656)
!10675 = !DILocation(line: 4991, column: 25, scope: !10656)
!10676 = !DILocation(line: 4991, column: 32, scope: !10656)
!10677 = !DILocalVariable(name: "canvas", scope: !10656, file: !3, line: 4992, type: !3346)
!10678 = !DILocation(line: 4992, column: 30, scope: !10656)
!10679 = !DILocation(line: 4992, column: 39, scope: !10656)
!10680 = !DILocation(line: 4992, column: 48, scope: !10656)
!10681 = !DILocalVariable(name: "ret", scope: !10656, file: !3, line: 4993, type: !135)
!10682 = !DILocation(line: 4993, column: 6, scope: !10656)
!10683 = !DILocation(line: 4994, column: 6, scope: !10684)
!10684 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 4994, column: 6)
!10685 = !DILocation(line: 4994, column: 13, scope: !10684)
!10686 = !DILocation(line: 4994, column: 26, scope: !10684)
!10687 = !DILocation(line: 4994, column: 6, scope: !10656)
!10688 = !DILocation(line: 4994, column: 31, scope: !10684)
!10689 = !DILocation(line: 4996, column: 30, scope: !10656)
!10690 = !DILocation(line: 4996, column: 39, scope: !10656)
!10691 = !DILocation(line: 4996, column: 2, scope: !10656)
!10692 = !DILocalVariable(name: "base", scope: !10693, file: !3, line: 5001, type: !10694)
!10693 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 5000, column: 2)
!10694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10695, size: 64)
!10695 = !DIDerivedType(tag: DW_TAG_typedef, name: "Base", file: !277, line: 75, baseType: !2474)
!10696 = !DILocation(line: 5001, column: 9, scope: !10693)
!10697 = !DILocalVariable(name: "go", scope: !10693, file: !3, line: 5002, type: !10698)
!10698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10699, size: 64)
!10699 = !DIDerivedType(tag: DW_TAG_typedef, name: "GroupObject", file: !1125, line: 48, baseType: !10700)
!10700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GroupObject", file: !1125, line: 42, size: 320, elements: !10701)
!10701 = !{!10702, !10704, !10705, !10706, !10707, !10708}
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10700, file: !1125, line: 43, baseType: !10703, size: 64)
!10703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10700, size: 64)
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10700, file: !1125, line: 43, baseType: !10703, size: 64, offset: 64)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !10700, file: !1125, line: 44, baseType: !414, size: 64, offset: 128)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "lampren", scope: !10700, file: !1125, line: 45, baseType: !221, size: 64, offset: 192)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !10700, file: !1125, line: 46, baseType: !199, size: 16, offset: 256)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10700, file: !1125, line: 47, baseType: !2743, size: 48, offset: 272)
!10709 = !DILocation(line: 5002, column: 16, scope: !10693)
!10710 = !DILocalVariable(name: "brushObj", scope: !10693, file: !3, line: 5003, type: !3426)
!10711 = !DILocation(line: 5003, column: 11, scope: !10693)
!10712 = !DILocalVariable(name: "md", scope: !10693, file: !3, line: 5004, type: !10713)
!10713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!10714 = !DILocation(line: 5004, column: 17, scope: !10693)
!10715 = !DILocalVariable(name: "scene_frame", scope: !10693, file: !3, line: 5007, type: !135)
!10716 = !DILocation(line: 5007, column: 7, scope: !10693)
!10717 = !DILocation(line: 5007, column: 21, scope: !10693)
!10718 = !DILocation(line: 5007, column: 28, scope: !10693)
!10719 = !DILocation(line: 5007, column: 30, scope: !10693)
!10720 = !DILocalVariable(name: "scene_subframe", scope: !10693, file: !3, line: 5008, type: !207)
!10721 = !DILocation(line: 5008, column: 9, scope: !10693)
!10722 = !DILocation(line: 5008, column: 26, scope: !10693)
!10723 = !DILocation(line: 5008, column: 33, scope: !10693)
!10724 = !DILocation(line: 5008, column: 35, scope: !10693)
!10725 = !DILocation(line: 5011, column: 7, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 5011, column: 7)
!10727 = !DILocation(line: 5011, column: 16, scope: !10726)
!10728 = !DILocation(line: 5011, column: 7, scope: !10693)
!10729 = !DILocation(line: 5012, column: 9, scope: !10726)
!10730 = !DILocation(line: 5012, column: 18, scope: !10726)
!10731 = !DILocation(line: 5012, column: 31, scope: !10726)
!10732 = !DILocation(line: 5012, column: 39, scope: !10726)
!10733 = !DILocation(line: 5012, column: 7, scope: !10726)
!10734 = !DILocation(line: 5012, column: 4, scope: !10726)
!10735 = !DILocation(line: 5014, column: 11, scope: !10726)
!10736 = !DILocation(line: 5014, column: 18, scope: !10726)
!10737 = !DILocation(line: 5014, column: 23, scope: !10726)
!10738 = !DILocation(line: 5014, column: 9, scope: !10726)
!10739 = !DILocation(line: 5016, column: 3, scope: !10693)
!10740 = !DILocation(line: 5016, column: 10, scope: !10693)
!10741 = !DILocation(line: 5016, column: 15, scope: !10693)
!10742 = !DILocation(line: 5016, column: 18, scope: !10693)
!10743 = !DILocation(line: 5017, column: 13, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 5016, column: 22)
!10745 = !DILocation(line: 5019, column: 8, scope: !10746)
!10746 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 5019, column: 8)
!10747 = !DILocation(line: 5019, column: 17, scope: !10746)
!10748 = !DILocation(line: 5019, column: 8, scope: !10744)
!10749 = !DILocation(line: 5020, column: 9, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10751, file: !3, line: 5020, column: 9)
!10751 = distinct !DILexicalBlock(scope: !10746, file: !3, line: 5019, column: 30)
!10752 = !DILocation(line: 5020, column: 13, scope: !10750)
!10753 = !DILocation(line: 5020, column: 9, scope: !10751)
!10754 = !DILocation(line: 5020, column: 28, scope: !10750)
!10755 = !DILocation(line: 5020, column: 32, scope: !10750)
!10756 = !DILocation(line: 5020, column: 26, scope: !10750)
!10757 = !DILocation(line: 5020, column: 17, scope: !10750)
!10758 = !DILocation(line: 5021, column: 4, scope: !10751)
!10759 = !DILocation(line: 5023, column: 16, scope: !10746)
!10760 = !DILocation(line: 5023, column: 22, scope: !10746)
!10761 = !DILocation(line: 5023, column: 14, scope: !10746)
!10762 = !DILocation(line: 5025, column: 9, scope: !10763)
!10763 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 5025, column: 8)
!10764 = !DILocation(line: 5025, column: 8, scope: !10744)
!10765 = !DILocation(line: 5027, column: 9, scope: !10766)
!10766 = distinct !DILexicalBlock(scope: !10767, file: !3, line: 5027, column: 9)
!10767 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 5025, column: 19)
!10768 = !DILocation(line: 5027, column: 18, scope: !10766)
!10769 = !DILocation(line: 5027, column: 9, scope: !10767)
!10770 = !DILocation(line: 5027, column: 36, scope: !10766)
!10771 = !DILocation(line: 5027, column: 40, scope: !10766)
!10772 = !DILocation(line: 5027, column: 34, scope: !10766)
!10773 = !DILocation(line: 5027, column: 31, scope: !10766)
!10774 = !DILocation(line: 5028, column: 17, scope: !10766)
!10775 = !DILocation(line: 5028, column: 23, scope: !10766)
!10776 = !DILocation(line: 5028, column: 15, scope: !10766)
!10777 = !DILocation(line: 5029, column: 5, scope: !10767)
!10778 = distinct !{!10778, !10739, !10779}
!10779 = !DILocation(line: 5106, column: 3, scope: !10693)
!10780 = !DILocation(line: 5033, column: 8, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 5033, column: 8)
!10782 = !DILocation(line: 5033, column: 17, scope: !10781)
!10783 = !DILocation(line: 5033, column: 8, scope: !10744)
!10784 = !DILocation(line: 5034, column: 10, scope: !10781)
!10785 = !DILocation(line: 5034, column: 14, scope: !10781)
!10786 = !DILocation(line: 5034, column: 8, scope: !10781)
!10787 = !DILocation(line: 5034, column: 5, scope: !10781)
!10788 = !DILocation(line: 5036, column: 12, scope: !10781)
!10789 = !DILocation(line: 5036, column: 18, scope: !10781)
!10790 = !DILocation(line: 5036, column: 10, scope: !10781)
!10791 = !DILocation(line: 5039, column: 30, scope: !10744)
!10792 = !DILocation(line: 5039, column: 9, scope: !10744)
!10793 = !DILocation(line: 5039, column: 7, scope: !10744)
!10794 = !DILocation(line: 5040, column: 8, scope: !10795)
!10795 = distinct !DILexicalBlock(scope: !10744, file: !3, line: 5040, column: 8)
!10796 = !DILocation(line: 5040, column: 11, scope: !10795)
!10797 = !DILocation(line: 5040, column: 14, scope: !10795)
!10798 = !DILocation(line: 5040, column: 18, scope: !10795)
!10799 = !DILocation(line: 5040, column: 23, scope: !10795)
!10800 = !DILocation(line: 5040, column: 8, scope: !10744)
!10801 = !DILocalVariable(name: "pmd2", scope: !10802, file: !3, line: 5041, type: !3242)
!10802 = distinct !DILexicalBlock(scope: !10795, file: !3, line: 5040, column: 74)
!10803 = !DILocation(line: 5041, column: 31, scope: !10802)
!10804 = !DILocation(line: 5041, column: 66, scope: !10802)
!10805 = !DILocation(line: 5041, column: 38, scope: !10802)
!10806 = !DILocation(line: 5043, column: 9, scope: !10807)
!10807 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 5043, column: 9)
!10808 = !DILocation(line: 5043, column: 15, scope: !10807)
!10809 = !DILocation(line: 5043, column: 9, scope: !10802)
!10810 = !DILocalVariable(name: "brush", scope: !10811, file: !3, line: 5044, type: !4416)
!10811 = distinct !DILexicalBlock(scope: !10807, file: !3, line: 5043, column: 22)
!10812 = !DILocation(line: 5044, column: 33, scope: !10811)
!10813 = !DILocation(line: 5044, column: 41, scope: !10811)
!10814 = !DILocation(line: 5044, column: 47, scope: !10811)
!10815 = !DILocalVariable(name: "bMats", scope: !10811, file: !3, line: 5045, type: !10816)
!10816 = !DIDerivedType(tag: DW_TAG_typedef, name: "BrushMaterials", file: !3, line: 2848, baseType: !10817)
!10817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushMaterials", file: !3, line: 2844, size: 192, elements: !10818)
!10818 = !{!10819, !10820, !10822}
!10819 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !10817, file: !3, line: 2845, baseType: !6632, size: 64)
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mats", scope: !10817, file: !3, line: 2846, baseType: !10821, size: 64, offset: 64)
!10821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6632, size: 64)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !10817, file: !3, line: 2847, baseType: !135, size: 32, offset: 128)
!10823 = !DILocation(line: 5045, column: 21, scope: !10811)
!10824 = !DILocation(line: 5048, column: 10, scope: !10825)
!10825 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5048, column: 10)
!10826 = !DILocation(line: 5048, column: 19, scope: !10825)
!10827 = !DILocation(line: 5048, column: 24, scope: !10825)
!10828 = !DILocation(line: 5048, column: 54, scope: !10825)
!10829 = !DILocation(line: 5048, column: 57, scope: !10825)
!10830 = !DILocation(line: 5048, column: 64, scope: !10825)
!10831 = !DILocation(line: 5048, column: 70, scope: !10825)
!10832 = !DILocation(line: 5048, column: 10, scope: !10811)
!10833 = !DILocation(line: 5049, column: 31, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10825, file: !3, line: 5048, column: 94)
!10835 = !DILocation(line: 5049, column: 43, scope: !10834)
!10836 = !DILocation(line: 5049, column: 50, scope: !10834)
!10837 = !DILocation(line: 5049, column: 63, scope: !10834)
!10838 = !DILocation(line: 5049, column: 79, scope: !10834)
!10839 = !DILocation(line: 5049, column: 7, scope: !10834)
!10840 = !DILocation(line: 5049, column: 14, scope: !10834)
!10841 = !DILocation(line: 5049, column: 29, scope: !10834)
!10842 = !DILocation(line: 5051, column: 12, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 5051, column: 11)
!10844 = !DILocation(line: 5051, column: 19, scope: !10843)
!10845 = !DILocation(line: 5051, column: 11, scope: !10834)
!10846 = !DILocation(line: 5052, column: 39, scope: !10843)
!10847 = !DILocation(line: 5052, column: 8, scope: !10843)
!10848 = !DILocation(line: 5053, column: 12, scope: !10849)
!10849 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 5053, column: 11)
!10850 = !DILocation(line: 5053, column: 19, scope: !10849)
!10851 = !DILocation(line: 5053, column: 11, scope: !10834)
!10852 = !DILocation(line: 5054, column: 42, scope: !10849)
!10853 = !DILocation(line: 5054, column: 8, scope: !10849)
!10854 = !DILocation(line: 5055, column: 6, scope: !10834)
!10855 = !DILocation(line: 5058, column: 10, scope: !10856)
!10856 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5058, column: 10)
!10857 = !DILocation(line: 5058, column: 10, scope: !10811)
!10858 = !DILocation(line: 5059, column: 25, scope: !10859)
!10859 = distinct !DILexicalBlock(scope: !10856, file: !3, line: 5058, column: 20)
!10860 = !DILocation(line: 5059, column: 32, scope: !10859)
!10861 = !DILocation(line: 5059, column: 7, scope: !10859)
!10862 = !DILocation(line: 5060, column: 29, scope: !10859)
!10863 = !DILocation(line: 5060, column: 36, scope: !10859)
!10864 = !DILocation(line: 5060, column: 105, scope: !10859)
!10865 = !DILocation(line: 5060, column: 85, scope: !10859)
!10866 = !DILocation(line: 5060, column: 7, scope: !10859)
!10867 = !DILocation(line: 5061, column: 6, scope: !10859)
!10868 = !DILocation(line: 5063, column: 29, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5063, column: 10)
!10870 = !DILocation(line: 5063, column: 36, scope: !10869)
!10871 = !DILocation(line: 5063, column: 10, scope: !10869)
!10872 = !DILocation(line: 5063, column: 10, scope: !10811)
!10873 = !DILocation(line: 5064, column: 41, scope: !10869)
!10874 = !DILocation(line: 5064, column: 51, scope: !10869)
!10875 = !DILocation(line: 5064, column: 58, scope: !10869)
!10876 = !DILocation(line: 5064, column: 63, scope: !10869)
!10877 = !DILocation(line: 5064, column: 7, scope: !10869)
!10878 = !DILocation(line: 5068, column: 10, scope: !10879)
!10879 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5068, column: 10)
!10880 = !DILocation(line: 5068, column: 17, scope: !10879)
!10881 = !DILocation(line: 5068, column: 27, scope: !10879)
!10882 = !DILocation(line: 5068, column: 10, scope: !10811)
!10883 = !DILocation(line: 5069, column: 11, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10885, file: !3, line: 5069, column: 11)
!10885 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 5068, column: 51)
!10886 = !DILocation(line: 5069, column: 18, scope: !10884)
!10887 = !DILocation(line: 5069, column: 23, scope: !10884)
!10888 = !DILocation(line: 5069, column: 26, scope: !10884)
!10889 = !DILocation(line: 5069, column: 33, scope: !10884)
!10890 = !DILocation(line: 5069, column: 39, scope: !10884)
!10891 = !DILocation(line: 5069, column: 44, scope: !10884)
!10892 = !DILocation(line: 5069, column: 47, scope: !10884)
!10893 = !DILocation(line: 5069, column: 103, scope: !10884)
!10894 = !DILocation(line: 5070, column: 30, scope: !10884)
!10895 = !DILocation(line: 5070, column: 40, scope: !10884)
!10896 = !DILocation(line: 5070, column: 47, scope: !10884)
!10897 = !DILocation(line: 5070, column: 11, scope: !10884)
!10898 = !DILocation(line: 5069, column: 11, scope: !10885)
!10899 = !DILocation(line: 5074, column: 38, scope: !10900)
!10900 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 5071, column: 7)
!10901 = !DILocation(line: 5074, column: 46, scope: !10900)
!10902 = !DILocation(line: 5074, column: 53, scope: !10900)
!10903 = !DILocation(line: 5074, column: 59, scope: !10900)
!10904 = !DILocation(line: 5074, column: 65, scope: !10900)
!10905 = !DILocation(line: 5074, column: 69, scope: !10900)
!10906 = !DILocation(line: 5074, column: 76, scope: !10900)
!10907 = !DILocation(line: 5074, column: 82, scope: !10900)
!10908 = !DILocation(line: 5074, column: 88, scope: !10900)
!10909 = !DILocation(line: 5074, column: 113, scope: !10900)
!10910 = !DILocation(line: 5074, column: 93, scope: !10900)
!10911 = !DILocation(line: 5074, column: 8, scope: !10900)
!10912 = !DILocation(line: 5075, column: 36, scope: !10900)
!10913 = !DILocation(line: 5075, column: 45, scope: !10900)
!10914 = !DILocation(line: 5075, column: 52, scope: !10900)
!10915 = !DILocation(line: 5075, column: 58, scope: !10900)
!10916 = !DILocation(line: 5075, column: 65, scope: !10900)
!10917 = !DILocation(line: 5075, column: 8, scope: !10900)
!10918 = !DILocation(line: 5076, column: 7, scope: !10900)
!10919 = !DILocation(line: 5077, column: 6, scope: !10885)
!10920 = !DILocation(line: 5079, column: 15, scope: !10921)
!10921 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 5079, column: 15)
!10922 = !DILocation(line: 5079, column: 22, scope: !10921)
!10923 = !DILocation(line: 5079, column: 32, scope: !10921)
!10924 = !DILocation(line: 5079, column: 56, scope: !10921)
!10925 = !DILocation(line: 5079, column: 59, scope: !10921)
!10926 = !DILocation(line: 5079, column: 71, scope: !10921)
!10927 = !DILocation(line: 5079, column: 68, scope: !10921)
!10928 = !DILocation(line: 5079, column: 15, scope: !10879)
!10929 = !DILocation(line: 5080, column: 37, scope: !10930)
!10930 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 5079, column: 75)
!10931 = !DILocation(line: 5080, column: 46, scope: !10930)
!10932 = !DILocation(line: 5080, column: 56, scope: !10930)
!10933 = !DILocation(line: 5080, column: 61, scope: !10930)
!10934 = !DILocation(line: 5080, column: 68, scope: !10930)
!10935 = !DILocation(line: 5080, column: 86, scope: !10930)
!10936 = !DILocation(line: 5080, column: 93, scope: !10930)
!10937 = !DILocation(line: 5080, column: 7, scope: !10930)
!10938 = !DILocation(line: 5081, column: 6, scope: !10930)
!10939 = !DILocation(line: 5083, column: 15, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10921, file: !3, line: 5083, column: 15)
!10941 = !DILocation(line: 5083, column: 27, scope: !10940)
!10942 = !DILocation(line: 5083, column: 24, scope: !10940)
!10943 = !DILocation(line: 5083, column: 15, scope: !10921)
!10944 = !DILocation(line: 5084, column: 30, scope: !10945)
!10945 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 5083, column: 31)
!10946 = !DILocation(line: 5084, column: 39, scope: !10945)
!10947 = !DILocation(line: 5084, column: 46, scope: !10945)
!10948 = !DILocation(line: 5084, column: 64, scope: !10945)
!10949 = !DILocation(line: 5084, column: 71, scope: !10945)
!10950 = !DILocation(line: 5084, column: 7, scope: !10945)
!10951 = !DILocation(line: 5085, column: 6, scope: !10945)
!10952 = !DILocation(line: 5088, column: 29, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5088, column: 10)
!10954 = !DILocation(line: 5088, column: 36, scope: !10953)
!10955 = !DILocation(line: 5088, column: 10, scope: !10953)
!10956 = !DILocation(line: 5088, column: 10, scope: !10811)
!10957 = !DILocation(line: 5089, column: 7, scope: !10953)
!10958 = !DILocation(line: 5091, column: 10, scope: !10959)
!10959 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5091, column: 10)
!10960 = !DILocation(line: 5091, column: 10, scope: !10811)
!10961 = !DILocation(line: 5092, column: 23, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10959, file: !3, line: 5091, column: 20)
!10963 = !DILocation(line: 5092, column: 7, scope: !10962)
!10964 = !DILocation(line: 5092, column: 14, scope: !10962)
!10965 = !DILocation(line: 5092, column: 16, scope: !10962)
!10966 = !DILocation(line: 5092, column: 21, scope: !10962)
!10967 = !DILocation(line: 5093, column: 27, scope: !10962)
!10968 = !DILocation(line: 5093, column: 7, scope: !10962)
!10969 = !DILocation(line: 5093, column: 14, scope: !10962)
!10970 = !DILocation(line: 5093, column: 16, scope: !10962)
!10971 = !DILocation(line: 5093, column: 25, scope: !10962)
!10972 = !DILocation(line: 5094, column: 29, scope: !10962)
!10973 = !DILocation(line: 5094, column: 36, scope: !10962)
!10974 = !DILocation(line: 5094, column: 105, scope: !10962)
!10975 = !DILocation(line: 5094, column: 85, scope: !10962)
!10976 = !DILocation(line: 5094, column: 7, scope: !10962)
!10977 = !DILocation(line: 5095, column: 6, scope: !10962)
!10978 = !DILocation(line: 5098, column: 10, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10811, file: !3, line: 5098, column: 10)
!10980 = !DILocation(line: 5098, column: 17, scope: !10979)
!10981 = !DILocation(line: 5098, column: 10, scope: !10811)
!10982 = !DILocation(line: 5099, column: 11, scope: !10983)
!10983 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 5099, column: 11)
!10984 = distinct !DILexicalBlock(scope: !10979, file: !3, line: 5098, column: 33)
!10985 = !DILocation(line: 5099, column: 20, scope: !10983)
!10986 = !DILocation(line: 5099, column: 25, scope: !10983)
!10987 = !DILocation(line: 5099, column: 55, scope: !10983)
!10988 = !DILocation(line: 5099, column: 58, scope: !10983)
!10989 = !DILocation(line: 5099, column: 65, scope: !10983)
!10990 = !DILocation(line: 5099, column: 71, scope: !10983)
!10991 = !DILocation(line: 5099, column: 11, scope: !10984)
!10992 = !DILocation(line: 5100, column: 30, scope: !10983)
!10993 = !DILocation(line: 5100, column: 39, scope: !10983)
!10994 = !DILocation(line: 5100, column: 46, scope: !10983)
!10995 = !DILocation(line: 5100, column: 8, scope: !10983)
!10996 = !DILocation(line: 5101, column: 7, scope: !10984)
!10997 = !DILocation(line: 5101, column: 17, scope: !10984)
!10998 = !DILocation(line: 5101, column: 24, scope: !10984)
!10999 = !DILocation(line: 5102, column: 7, scope: !10984)
!11000 = !DILocation(line: 5102, column: 14, scope: !10984)
!11001 = !DILocation(line: 5102, column: 29, scope: !10984)
!11002 = !DILocation(line: 5103, column: 6, scope: !10984)
!11003 = !DILocation(line: 5104, column: 5, scope: !10811)
!11004 = !DILocation(line: 5105, column: 4, scope: !10802)
!11005 = !DILocation(line: 5110, column: 6, scope: !11006)
!11006 = distinct !DILexicalBlock(scope: !10656, file: !3, line: 5110, column: 6)
!11007 = !DILocation(line: 5110, column: 13, scope: !11006)
!11008 = !DILocation(line: 5110, column: 22, scope: !11006)
!11009 = !DILocation(line: 5110, column: 25, scope: !11006)
!11010 = !DILocation(line: 5110, column: 32, scope: !11006)
!11011 = !DILocation(line: 5110, column: 6, scope: !10656)
!11012 = !DILocation(line: 5112, column: 7, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 5112, column: 7)
!11014 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 5110, column: 41)
!11015 = !DILocation(line: 5112, column: 16, scope: !11013)
!11016 = !DILocation(line: 5112, column: 21, scope: !11013)
!11017 = !DILocation(line: 5112, column: 7, scope: !11014)
!11018 = !DILocation(line: 5113, column: 28, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11013, file: !3, line: 5112, column: 51)
!11020 = !DILocation(line: 5113, column: 37, scope: !11019)
!11021 = !DILocation(line: 5113, column: 4, scope: !11019)
!11022 = !DILocation(line: 5114, column: 3, scope: !11019)
!11023 = !DILocation(line: 5117, column: 7, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 5117, column: 7)
!11025 = !DILocation(line: 5117, column: 16, scope: !11024)
!11026 = !DILocation(line: 5117, column: 23, scope: !11024)
!11027 = !DILocation(line: 5117, column: 26, scope: !11024)
!11028 = !DILocation(line: 5117, column: 35, scope: !11024)
!11029 = !DILocation(line: 5117, column: 40, scope: !11024)
!11030 = !DILocation(line: 5117, column: 7, scope: !11014)
!11031 = !DILocalVariable(name: "steps", scope: !11032, file: !3, line: 5118, type: !135)
!11032 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 5117, column: 71)
!11033 = !DILocation(line: 5118, column: 8, scope: !11032)
!11034 = !DILocalVariable(name: "s", scope: !11032, file: !3, line: 5118, type: !135)
!11035 = !DILocation(line: 5118, column: 19, scope: !11032)
!11036 = !DILocalVariable(name: "prevPoint", scope: !11032, file: !3, line: 5119, type: !222)
!11037 = !DILocation(line: 5119, column: 16, scope: !11032)
!11038 = !DILocalVariable(name: "force", scope: !11032, file: !3, line: 5120, type: !233)
!11039 = !DILocation(line: 5120, column: 11, scope: !11032)
!11040 = !DILocation(line: 5123, column: 16, scope: !11032)
!11041 = !DILocation(line: 5123, column: 28, scope: !11032)
!11042 = !DILocation(line: 5123, column: 35, scope: !11032)
!11043 = !DILocation(line: 5123, column: 48, scope: !11032)
!11044 = !DILocation(line: 5123, column: 14, scope: !11032)
!11045 = !DILocation(line: 5124, column: 9, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 5124, column: 8)
!11047 = !DILocation(line: 5124, column: 8, scope: !11032)
!11048 = !DILocation(line: 5125, column: 21, scope: !11046)
!11049 = !DILocation(line: 5125, column: 12, scope: !11046)
!11050 = !DILocation(line: 5125, column: 5, scope: !11046)
!11051 = !DILocation(line: 5128, column: 43, scope: !11032)
!11052 = !DILocation(line: 5128, column: 52, scope: !11032)
!11053 = !DILocation(line: 5128, column: 59, scope: !11032)
!11054 = !DILocation(line: 5128, column: 71, scope: !11032)
!11055 = !DILocation(line: 5128, column: 12, scope: !11032)
!11056 = !DILocation(line: 5128, column: 10, scope: !11032)
!11057 = !DILocation(line: 5129, column: 11, scope: !11058)
!11058 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 5129, column: 4)
!11059 = !DILocation(line: 5129, column: 9, scope: !11058)
!11060 = !DILocation(line: 5129, column: 16, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11058, file: !3, line: 5129, column: 4)
!11062 = !DILocation(line: 5129, column: 20, scope: !11061)
!11063 = !DILocation(line: 5129, column: 18, scope: !11061)
!11064 = !DILocation(line: 5129, column: 4, scope: !11058)
!11065 = !DILocation(line: 5130, column: 31, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 5129, column: 32)
!11067 = !DILocation(line: 5130, column: 40, scope: !11066)
!11068 = !DILocation(line: 5130, column: 47, scope: !11066)
!11069 = !DILocation(line: 5130, column: 58, scope: !11066)
!11070 = !DILocation(line: 5130, column: 76, scope: !11066)
!11071 = !DILocation(line: 5130, column: 69, scope: !11066)
!11072 = !DILocation(line: 5130, column: 5, scope: !11066)
!11073 = !DILocation(line: 5131, column: 4, scope: !11066)
!11074 = !DILocation(line: 5129, column: 28, scope: !11061)
!11075 = !DILocation(line: 5129, column: 4, scope: !11061)
!11076 = distinct !{!11076, !11064, !11077}
!11077 = !DILocation(line: 5131, column: 4, scope: !11058)
!11078 = !DILocation(line: 5134, column: 8, scope: !11079)
!11079 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 5134, column: 8)
!11080 = !DILocation(line: 5134, column: 8, scope: !11032)
!11081 = !DILocation(line: 5134, column: 19, scope: !11079)
!11082 = !DILocation(line: 5134, column: 29, scope: !11079)
!11083 = !DILocation(line: 5135, column: 8, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11032, file: !3, line: 5135, column: 8)
!11085 = !DILocation(line: 5135, column: 8, scope: !11032)
!11086 = !DILocation(line: 5135, column: 15, scope: !11084)
!11087 = !DILocation(line: 5135, column: 25, scope: !11084)
!11088 = !DILocation(line: 5136, column: 3, scope: !11032)
!11089 = !DILocation(line: 5137, column: 2, scope: !11014)
!11090 = !DILocation(line: 5139, column: 9, scope: !10656)
!11091 = !DILocation(line: 5139, column: 2, scope: !10656)
!11092 = !DILocation(line: 5140, column: 1, scope: !10656)
!11093 = distinct !DISubprogram(name: "surface_duplicateOutputExists", scope: !3, file: !3, line: 342, type: !3633, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11094 = !DILocalVariable(name: "arg", arg: 1, scope: !11093, file: !3, line: 342, type: !221)
!11095 = !DILocation(line: 342, column: 49, scope: !11093)
!11096 = !DILocalVariable(name: "name", arg: 2, scope: !11093, file: !3, line: 342, type: !1664)
!11097 = !DILocation(line: 342, column: 66, scope: !11093)
!11098 = !DILocalVariable(name: "t_surface", scope: !11093, file: !3, line: 344, type: !242)
!11099 = !DILocation(line: 344, column: 23, scope: !11093)
!11100 = !DILocation(line: 344, column: 58, scope: !11093)
!11101 = !DILocation(line: 344, column: 35, scope: !11093)
!11102 = !DILocalVariable(name: "surface", scope: !11093, file: !3, line: 345, type: !242)
!11103 = !DILocation(line: 345, column: 23, scope: !11093)
!11104 = !DILocation(line: 345, column: 33, scope: !11093)
!11105 = !DILocation(line: 345, column: 44, scope: !11093)
!11106 = !DILocation(line: 345, column: 52, scope: !11093)
!11107 = !DILocation(line: 345, column: 61, scope: !11093)
!11108 = !DILocation(line: 347, column: 2, scope: !11093)
!11109 = !DILocation(line: 347, column: 9, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !11111, file: !3, line: 347, column: 2)
!11111 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 347, column: 2)
!11112 = !DILocation(line: 347, column: 2, scope: !11111)
!11113 = !DILocation(line: 348, column: 7, scope: !11114)
!11114 = distinct !DILexicalBlock(scope: !11115, file: !3, line: 348, column: 7)
!11115 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 347, column: 43)
!11116 = !DILocation(line: 348, column: 18, scope: !11114)
!11117 = !DILocation(line: 348, column: 15, scope: !11114)
!11118 = !DILocation(line: 348, column: 28, scope: !11114)
!11119 = !DILocation(line: 348, column: 31, scope: !11114)
!11120 = !DILocation(line: 348, column: 40, scope: !11114)
!11121 = !DILocation(line: 348, column: 48, scope: !11114)
!11122 = !DILocation(line: 348, column: 59, scope: !11114)
!11123 = !DILocation(line: 348, column: 45, scope: !11114)
!11124 = !DILocation(line: 348, column: 64, scope: !11114)
!11125 = !DILocation(line: 349, column: 7, scope: !11114)
!11126 = !DILocation(line: 349, column: 16, scope: !11114)
!11127 = !DILocation(line: 349, column: 26, scope: !11114)
!11128 = !DILocation(line: 349, column: 37, scope: !11114)
!11129 = !DILocation(line: 349, column: 23, scope: !11114)
!11130 = !DILocation(line: 348, column: 7, scope: !11115)
!11131 = !DILocation(line: 351, column: 8, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 351, column: 8)
!11133 = distinct !DILexicalBlock(scope: !11114, file: !3, line: 350, column: 3)
!11134 = !DILocation(line: 351, column: 17, scope: !11132)
!11135 = !DILocation(line: 351, column: 32, scope: !11132)
!11136 = !DILocation(line: 351, column: 40, scope: !11132)
!11137 = !DILocation(line: 351, column: 57, scope: !11132)
!11138 = !DILocation(line: 351, column: 63, scope: !11132)
!11139 = !DILocation(line: 351, column: 72, scope: !11132)
!11140 = !DILocation(line: 351, column: 44, scope: !11132)
!11141 = !DILocation(line: 351, column: 8, scope: !11133)
!11142 = !DILocation(line: 351, column: 86, scope: !11132)
!11143 = !DILocation(line: 352, column: 8, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11133, file: !3, line: 352, column: 8)
!11145 = !DILocation(line: 352, column: 17, scope: !11144)
!11146 = !DILocation(line: 352, column: 33, scope: !11144)
!11147 = !DILocation(line: 352, column: 41, scope: !11144)
!11148 = !DILocation(line: 352, column: 58, scope: !11144)
!11149 = !DILocation(line: 352, column: 64, scope: !11144)
!11150 = !DILocation(line: 352, column: 73, scope: !11144)
!11151 = !DILocation(line: 352, column: 45, scope: !11144)
!11152 = !DILocation(line: 352, column: 8, scope: !11133)
!11153 = !DILocation(line: 352, column: 88, scope: !11144)
!11154 = !DILocation(line: 353, column: 3, scope: !11133)
!11155 = !DILocation(line: 354, column: 2, scope: !11115)
!11156 = !DILocation(line: 347, column: 28, scope: !11110)
!11157 = !DILocation(line: 347, column: 37, scope: !11110)
!11158 = !DILocation(line: 347, column: 26, scope: !11110)
!11159 = !DILocation(line: 347, column: 2, scope: !11110)
!11160 = distinct !{!11160, !11112, !11161}
!11161 = !DILocation(line: 354, column: 2, scope: !11111)
!11162 = !DILocation(line: 355, column: 2, scope: !11093)
!11163 = !DILocation(line: 356, column: 1, scope: !11093)
!11164 = distinct !DISubprogram(name: "freeGrid", scope: !3, file: !3, line: 695, type: !3969, scopeLine: 696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11165 = !DILocalVariable(name: "data", arg: 1, scope: !11164, file: !3, line: 695, type: !3906)
!11166 = !DILocation(line: 695, column: 40, scope: !11164)
!11167 = !DILocalVariable(name: "bData", scope: !11164, file: !3, line: 697, type: !4026)
!11168 = !DILocation(line: 697, column: 17, scope: !11164)
!11169 = !DILocation(line: 697, column: 25, scope: !11164)
!11170 = !DILocation(line: 697, column: 31, scope: !11164)
!11171 = !DILocalVariable(name: "grid", scope: !11164, file: !3, line: 698, type: !3175)
!11172 = !DILocation(line: 698, column: 14, scope: !11164)
!11173 = !DILocation(line: 698, column: 21, scope: !11164)
!11174 = !DILocation(line: 698, column: 28, scope: !11164)
!11175 = !DILocation(line: 700, column: 6, scope: !11176)
!11176 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 700, column: 6)
!11177 = !DILocation(line: 700, column: 12, scope: !11176)
!11178 = !DILocation(line: 700, column: 6, scope: !11164)
!11179 = !DILocation(line: 700, column: 20, scope: !11176)
!11180 = !DILocation(line: 700, column: 30, scope: !11176)
!11181 = !DILocation(line: 700, column: 36, scope: !11176)
!11182 = !DILocation(line: 701, column: 6, scope: !11183)
!11183 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 701, column: 6)
!11184 = !DILocation(line: 701, column: 12, scope: !11183)
!11185 = !DILocation(line: 701, column: 6, scope: !11164)
!11186 = !DILocation(line: 701, column: 19, scope: !11183)
!11187 = !DILocation(line: 701, column: 29, scope: !11183)
!11188 = !DILocation(line: 701, column: 35, scope: !11183)
!11189 = !DILocation(line: 702, column: 6, scope: !11190)
!11190 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 702, column: 6)
!11191 = !DILocation(line: 702, column: 12, scope: !11190)
!11192 = !DILocation(line: 702, column: 6, scope: !11164)
!11193 = !DILocation(line: 702, column: 19, scope: !11190)
!11194 = !DILocation(line: 702, column: 29, scope: !11190)
!11195 = !DILocation(line: 702, column: 35, scope: !11190)
!11196 = !DILocation(line: 703, column: 6, scope: !11197)
!11197 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 703, column: 6)
!11198 = !DILocation(line: 703, column: 12, scope: !11197)
!11199 = !DILocation(line: 703, column: 6, scope: !11164)
!11200 = !DILocation(line: 703, column: 21, scope: !11197)
!11201 = !DILocation(line: 703, column: 31, scope: !11197)
!11202 = !DILocation(line: 703, column: 37, scope: !11197)
!11203 = !DILocation(line: 705, column: 2, scope: !11164)
!11204 = !DILocation(line: 705, column: 12, scope: !11164)
!11205 = !DILocation(line: 705, column: 19, scope: !11164)
!11206 = !DILocation(line: 706, column: 2, scope: !11164)
!11207 = !DILocation(line: 706, column: 9, scope: !11164)
!11208 = !DILocation(line: 706, column: 14, scope: !11164)
!11209 = !DILocation(line: 707, column: 1, scope: !11164)
!11210 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5013, file: !5013, line: 64, type: !5014, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11211 = !DILocalVariable(name: "r", arg: 1, scope: !11210, file: !5013, line: 64, type: !233)
!11212 = !DILocation(line: 64, column: 31, scope: !11210)
!11213 = !DILocalVariable(name: "a", arg: 2, scope: !11210, file: !5013, line: 64, type: !2195)
!11214 = !DILocation(line: 64, column: 49, scope: !11210)
!11215 = !DILocation(line: 66, column: 9, scope: !11210)
!11216 = !DILocation(line: 66, column: 2, scope: !11210)
!11217 = !DILocation(line: 66, column: 7, scope: !11210)
!11218 = !DILocation(line: 67, column: 9, scope: !11210)
!11219 = !DILocation(line: 67, column: 2, scope: !11210)
!11220 = !DILocation(line: 67, column: 7, scope: !11210)
!11221 = !DILocation(line: 68, column: 9, scope: !11210)
!11222 = !DILocation(line: 68, column: 2, scope: !11210)
!11223 = !DILocation(line: 68, column: 7, scope: !11210)
!11224 = !DILocation(line: 69, column: 1, scope: !11210)
!11225 = distinct !DISubprogram(name: "surface_usesAdjData", scope: !3, file: !3, line: 1336, type: !5750, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11226 = !DILocalVariable(name: "surface", arg: 1, scope: !11225, file: !3, line: 1336, type: !242)
!11227 = !DILocation(line: 1336, column: 53, scope: !11225)
!11228 = !DILocation(line: 1338, column: 30, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 1338, column: 6)
!11230 = !DILocation(line: 1338, column: 6, scope: !11229)
!11231 = !DILocation(line: 1338, column: 6, scope: !11225)
!11232 = !DILocation(line: 1338, column: 40, scope: !11229)
!11233 = !DILocation(line: 1339, column: 6, scope: !11234)
!11234 = distinct !DILexicalBlock(scope: !11225, file: !3, line: 1339, column: 6)
!11235 = !DILocation(line: 1339, column: 15, scope: !11234)
!11236 = !DILocation(line: 1339, column: 22, scope: !11234)
!11237 = !DILocation(line: 1339, column: 53, scope: !11234)
!11238 = !DILocation(line: 1340, column: 6, scope: !11234)
!11239 = !DILocation(line: 1340, column: 15, scope: !11234)
!11240 = !DILocation(line: 1340, column: 21, scope: !11234)
!11241 = !DILocation(line: 1339, column: 6, scope: !11225)
!11242 = !DILocation(line: 1342, column: 3, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 1341, column: 2)
!11244 = !DILocation(line: 1345, column: 3, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11234, file: !3, line: 1344, column: 7)
!11246 = !DILocation(line: 1347, column: 1, scope: !11225)
!11247 = distinct !DISubprogram(name: "surface_usesAdjDistance", scope: !3, file: !3, line: 1329, type: !5750, scopeLine: 1330, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11248 = !DILocalVariable(name: "surface", arg: 1, scope: !11247, file: !3, line: 1329, type: !242)
!11249 = !DILocation(line: 1329, column: 57, scope: !11247)
!11250 = !DILocation(line: 1331, column: 6, scope: !11251)
!11251 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 1331, column: 6)
!11252 = !DILocation(line: 1331, column: 15, scope: !11251)
!11253 = !DILocation(line: 1331, column: 20, scope: !11251)
!11254 = !DILocation(line: 1331, column: 50, scope: !11251)
!11255 = !DILocation(line: 1331, column: 53, scope: !11251)
!11256 = !DILocation(line: 1331, column: 62, scope: !11251)
!11257 = !DILocation(line: 1331, column: 6, scope: !11247)
!11258 = !DILocation(line: 1331, column: 70, scope: !11251)
!11259 = !DILocation(line: 1332, column: 6, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11247, file: !3, line: 1332, column: 6)
!11261 = !DILocation(line: 1332, column: 15, scope: !11260)
!11262 = !DILocation(line: 1332, column: 20, scope: !11260)
!11263 = !DILocation(line: 1332, column: 6, scope: !11247)
!11264 = !DILocation(line: 1332, column: 50, scope: !11260)
!11265 = !DILocation(line: 1333, column: 2, scope: !11247)
!11266 = !DILocation(line: 1334, column: 1, scope: !11247)
!11267 = distinct !DISubprogram(name: "canvas_copyDerivedMesh", scope: !3, file: !3, line: 1948, type: !11268, scopeLine: 1949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11268 = !DISubroutineType(types: !11269)
!11269 = !{null, !3346, !2003}
!11270 = !DILocalVariable(name: "canvas", arg: 1, scope: !11267, file: !3, line: 1948, type: !3346)
!11271 = !DILocation(line: 1948, column: 64, scope: !11267)
!11272 = !DILocalVariable(name: "dm", arg: 2, scope: !11267, file: !3, line: 1948, type: !2003)
!11273 = !DILocation(line: 1948, column: 85, scope: !11267)
!11274 = !DILocation(line: 1950, column: 6, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 1950, column: 6)
!11276 = !DILocation(line: 1950, column: 14, scope: !11275)
!11277 = !DILocation(line: 1950, column: 6, scope: !11267)
!11278 = !DILocation(line: 1951, column: 3, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11275, file: !3, line: 1950, column: 18)
!11280 = !DILocation(line: 1951, column: 11, scope: !11279)
!11281 = !DILocation(line: 1951, column: 15, scope: !11279)
!11282 = !DILocation(line: 1951, column: 23, scope: !11279)
!11283 = !DILocation(line: 1951, column: 31, scope: !11279)
!11284 = !DILocation(line: 1952, column: 2, scope: !11279)
!11285 = !DILocation(line: 1954, column: 25, scope: !11267)
!11286 = !DILocation(line: 1954, column: 15, scope: !11267)
!11287 = !DILocation(line: 1954, column: 2, scope: !11267)
!11288 = !DILocation(line: 1954, column: 10, scope: !11267)
!11289 = !DILocation(line: 1954, column: 13, scope: !11267)
!11290 = !DILocation(line: 1955, column: 1, scope: !11267)
!11291 = distinct !DISubprogram(name: "surface_freeUnusedData", scope: !3, file: !3, line: 936, type: !3807, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11292 = !DILocalVariable(name: "surface", arg: 1, scope: !11291, file: !3, line: 936, type: !242)
!11293 = !DILocation(line: 936, column: 57, scope: !11291)
!11294 = !DILocation(line: 938, column: 7, scope: !11295)
!11295 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 938, column: 6)
!11296 = !DILocation(line: 938, column: 16, scope: !11295)
!11297 = !DILocation(line: 938, column: 6, scope: !11291)
!11298 = !DILocation(line: 938, column: 22, scope: !11295)
!11299 = !DILocation(line: 941, column: 8, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 941, column: 6)
!11301 = !DILocation(line: 941, column: 17, scope: !11300)
!11302 = !DILocation(line: 941, column: 23, scope: !11300)
!11303 = !DILocation(line: 941, column: 44, scope: !11300)
!11304 = !DILocation(line: 942, column: 7, scope: !11300)
!11305 = !DILocation(line: 942, column: 16, scope: !11300)
!11306 = !DILocation(line: 942, column: 27, scope: !11300)
!11307 = !DILocation(line: 942, column: 30, scope: !11300)
!11308 = !DILocation(line: 942, column: 39, scope: !11300)
!11309 = !DILocation(line: 942, column: 51, scope: !11300)
!11310 = !DILocation(line: 942, column: 56, scope: !11300)
!11311 = !DILocation(line: 941, column: 6, scope: !11291)
!11312 = !DILocation(line: 944, column: 17, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11300, file: !3, line: 943, column: 2)
!11314 = !DILocation(line: 944, column: 26, scope: !11313)
!11315 = !DILocation(line: 944, column: 3, scope: !11313)
!11316 = !DILocation(line: 945, column: 2, scope: !11313)
!11317 = !DILocation(line: 946, column: 1, scope: !11291)
!11318 = distinct !DISubprogram(name: "dynamicPaint_checkSurfaceData", scope: !3, file: !3, line: 1669, type: !5694, scopeLine: 1670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11319 = !DILocalVariable(name: "scene", arg: 1, scope: !11318, file: !3, line: 1669, type: !4204)
!11320 = !DILocation(line: 1669, column: 50, scope: !11318)
!11321 = !DILocalVariable(name: "surface", arg: 2, scope: !11318, file: !3, line: 1669, type: !242)
!11322 = !DILocation(line: 1669, column: 78, scope: !11318)
!11323 = !DILocation(line: 1671, column: 7, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11318, file: !3, line: 1671, column: 6)
!11325 = !DILocation(line: 1671, column: 16, scope: !11324)
!11326 = !DILocation(line: 1671, column: 21, scope: !11324)
!11327 = !DILocation(line: 1671, column: 58, scope: !11324)
!11328 = !DILocation(line: 1671, column: 26, scope: !11324)
!11329 = !DILocation(line: 1671, column: 70, scope: !11324)
!11330 = !DILocation(line: 1671, column: 79, scope: !11324)
!11331 = !DILocation(line: 1671, column: 85, scope: !11324)
!11332 = !DILocation(line: 1671, column: 67, scope: !11324)
!11333 = !DILocation(line: 1671, column: 6, scope: !11318)
!11334 = !DILocation(line: 1672, column: 36, scope: !11335)
!11335 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 1671, column: 101)
!11336 = !DILocation(line: 1672, column: 43, scope: !11335)
!11337 = !DILocation(line: 1672, column: 10, scope: !11335)
!11338 = !DILocation(line: 1672, column: 3, scope: !11335)
!11339 = !DILocation(line: 1674, column: 2, scope: !11318)
!11340 = !DILocation(line: 1675, column: 1, scope: !11318)
!11341 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !5013, file: !5013, line: 835, type: !11342, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11342 = !DISubroutineType(types: !11343)
!11343 = !{null, !233, !2196}
!11344 = !DILocalVariable(name: "out", arg: 1, scope: !11341, file: !5013, line: 835, type: !233)
!11345 = !DILocation(line: 835, column: 45, scope: !11341)
!11346 = !DILocalVariable(name: "in", arg: 2, scope: !11341, file: !5013, line: 835, type: !2196)
!11347 = !DILocation(line: 835, column: 65, scope: !11341)
!11348 = !DILocation(line: 837, column: 11, scope: !11341)
!11349 = !DILocation(line: 837, column: 17, scope: !11341)
!11350 = !DILocation(line: 837, column: 2, scope: !11341)
!11351 = !DILocation(line: 837, column: 9, scope: !11341)
!11352 = !DILocation(line: 838, column: 11, scope: !11341)
!11353 = !DILocation(line: 838, column: 17, scope: !11341)
!11354 = !DILocation(line: 838, column: 2, scope: !11341)
!11355 = !DILocation(line: 838, column: 9, scope: !11341)
!11356 = !DILocation(line: 839, column: 11, scope: !11341)
!11357 = !DILocation(line: 839, column: 17, scope: !11341)
!11358 = !DILocation(line: 839, column: 2, scope: !11341)
!11359 = !DILocation(line: 839, column: 9, scope: !11341)
!11360 = !DILocation(line: 840, column: 1, scope: !11341)
!11361 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !5013, file: !5013, line: 507, type: !11362, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{null, !233, !2195, !207}
!11364 = !DILocalVariable(name: "r", arg: 1, scope: !11361, file: !5013, line: 507, type: !233)
!11365 = !DILocation(line: 507, column: 33, scope: !11361)
!11366 = !DILocalVariable(name: "a", arg: 2, scope: !11361, file: !5013, line: 507, type: !2195)
!11367 = !DILocation(line: 507, column: 51, scope: !11361)
!11368 = !DILocalVariable(name: "f", arg: 3, scope: !11361, file: !5013, line: 507, type: !207)
!11369 = !DILocation(line: 507, column: 63, scope: !11361)
!11370 = !DILocation(line: 509, column: 10, scope: !11361)
!11371 = !DILocation(line: 509, column: 17, scope: !11361)
!11372 = !DILocation(line: 509, column: 15, scope: !11361)
!11373 = !DILocation(line: 509, column: 2, scope: !11361)
!11374 = !DILocation(line: 509, column: 7, scope: !11361)
!11375 = !DILocation(line: 510, column: 10, scope: !11361)
!11376 = !DILocation(line: 510, column: 17, scope: !11361)
!11377 = !DILocation(line: 510, column: 15, scope: !11361)
!11378 = !DILocation(line: 510, column: 2, scope: !11361)
!11379 = !DILocation(line: 510, column: 7, scope: !11361)
!11380 = !DILocation(line: 511, column: 10, scope: !11361)
!11381 = !DILocation(line: 511, column: 17, scope: !11361)
!11382 = !DILocation(line: 511, column: 15, scope: !11361)
!11383 = !DILocation(line: 511, column: 2, scope: !11361)
!11384 = !DILocation(line: 511, column: 7, scope: !11361)
!11385 = !DILocation(line: 512, column: 1, scope: !11361)
!11386 = distinct !DISubprogram(name: "mul_v2_fl", scope: !5013, file: !5013, line: 380, type: !11387, scopeLine: 381, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11387 = !DISubroutineType(types: !11388)
!11388 = !{null, !233, !207}
!11389 = !DILocalVariable(name: "r", arg: 1, scope: !11386, file: !5013, line: 380, type: !233)
!11390 = !DILocation(line: 380, column: 30, scope: !11386)
!11391 = !DILocalVariable(name: "f", arg: 2, scope: !11386, file: !5013, line: 380, type: !207)
!11392 = !DILocation(line: 380, column: 42, scope: !11386)
!11393 = !DILocation(line: 382, column: 10, scope: !11386)
!11394 = !DILocation(line: 382, column: 2, scope: !11386)
!11395 = !DILocation(line: 382, column: 7, scope: !11386)
!11396 = !DILocation(line: 383, column: 10, scope: !11386)
!11397 = !DILocation(line: 383, column: 2, scope: !11386)
!11398 = !DILocation(line: 383, column: 7, scope: !11386)
!11399 = !DILocation(line: 384, column: 1, scope: !11386)
!11400 = distinct !DISubprogram(name: "add_v2_v2", scope: !5013, file: !5013, line: 284, type: !5014, scopeLine: 285, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11401 = !DILocalVariable(name: "r", arg: 1, scope: !11400, file: !5013, line: 284, type: !233)
!11402 = !DILocation(line: 284, column: 30, scope: !11400)
!11403 = !DILocalVariable(name: "a", arg: 2, scope: !11400, file: !5013, line: 284, type: !2195)
!11404 = !DILocation(line: 284, column: 48, scope: !11400)
!11405 = !DILocation(line: 286, column: 10, scope: !11400)
!11406 = !DILocation(line: 286, column: 2, scope: !11400)
!11407 = !DILocation(line: 286, column: 7, scope: !11400)
!11408 = !DILocation(line: 287, column: 10, scope: !11400)
!11409 = !DILocation(line: 287, column: 2, scope: !11400)
!11410 = !DILocation(line: 287, column: 7, scope: !11400)
!11411 = !DILocation(line: 288, column: 1, scope: !11400)
!11412 = distinct !DISubprogram(name: "normalize_v3", scope: !5013, file: !5013, line: 830, type: !11413, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11413 = !DISubroutineType(types: !11414)
!11414 = !{!207, !233}
!11415 = !DILocalVariable(name: "n", arg: 1, scope: !11412, file: !5013, line: 830, type: !233)
!11416 = !DILocation(line: 830, column: 34, scope: !11412)
!11417 = !DILocation(line: 832, column: 25, scope: !11412)
!11418 = !DILocation(line: 832, column: 28, scope: !11412)
!11419 = !DILocation(line: 832, column: 9, scope: !11412)
!11420 = !DILocation(line: 832, column: 2, scope: !11412)
!11421 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !5013, file: !5013, line: 788, type: !11422, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11422 = !DISubroutineType(types: !11423)
!11423 = !{!207, !233, !2195}
!11424 = !DILocalVariable(name: "r", arg: 1, scope: !11421, file: !5013, line: 788, type: !233)
!11425 = !DILocation(line: 788, column: 37, scope: !11421)
!11426 = !DILocalVariable(name: "a", arg: 2, scope: !11421, file: !5013, line: 788, type: !2195)
!11427 = !DILocation(line: 788, column: 55, scope: !11421)
!11428 = !DILocalVariable(name: "d", scope: !11421, file: !5013, line: 790, type: !207)
!11429 = !DILocation(line: 790, column: 8, scope: !11421)
!11430 = !DILocation(line: 790, column: 21, scope: !11421)
!11431 = !DILocation(line: 790, column: 24, scope: !11421)
!11432 = !DILocation(line: 790, column: 12, scope: !11421)
!11433 = !DILocation(line: 794, column: 6, scope: !11434)
!11434 = distinct !DILexicalBlock(scope: !11421, file: !5013, line: 794, column: 6)
!11435 = !DILocation(line: 794, column: 8, scope: !11434)
!11436 = !DILocation(line: 794, column: 6, scope: !11421)
!11437 = !DILocation(line: 795, column: 13, scope: !11438)
!11438 = distinct !DILexicalBlock(scope: !11434, file: !5013, line: 794, column: 20)
!11439 = !DILocation(line: 795, column: 7, scope: !11438)
!11440 = !DILocation(line: 795, column: 5, scope: !11438)
!11441 = !DILocation(line: 796, column: 15, scope: !11438)
!11442 = !DILocation(line: 796, column: 18, scope: !11438)
!11443 = !DILocation(line: 796, column: 28, scope: !11438)
!11444 = !DILocation(line: 796, column: 26, scope: !11438)
!11445 = !DILocation(line: 796, column: 3, scope: !11438)
!11446 = !DILocation(line: 797, column: 2, scope: !11438)
!11447 = !DILocation(line: 799, column: 11, scope: !11448)
!11448 = distinct !DILexicalBlock(scope: !11434, file: !5013, line: 798, column: 7)
!11449 = !DILocation(line: 799, column: 3, scope: !11448)
!11450 = !DILocation(line: 800, column: 5, scope: !11448)
!11451 = !DILocation(line: 803, column: 9, scope: !11421)
!11452 = !DILocation(line: 803, column: 2, scope: !11421)
!11453 = distinct !DISubprogram(name: "dot_v3v3", scope: !5013, file: !5013, line: 619, type: !11454, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11454 = !DISubroutineType(types: !11455)
!11455 = !{!207, !2195, !2195}
!11456 = !DILocalVariable(name: "a", arg: 1, scope: !11453, file: !5013, line: 619, type: !2195)
!11457 = !DILocation(line: 619, column: 36, scope: !11453)
!11458 = !DILocalVariable(name: "b", arg: 2, scope: !11453, file: !5013, line: 619, type: !2195)
!11459 = !DILocation(line: 619, column: 54, scope: !11453)
!11460 = !DILocation(line: 621, column: 9, scope: !11453)
!11461 = !DILocation(line: 621, column: 16, scope: !11453)
!11462 = !DILocation(line: 621, column: 14, scope: !11453)
!11463 = !DILocation(line: 621, column: 23, scope: !11453)
!11464 = !DILocation(line: 621, column: 30, scope: !11453)
!11465 = !DILocation(line: 621, column: 28, scope: !11453)
!11466 = !DILocation(line: 621, column: 21, scope: !11453)
!11467 = !DILocation(line: 621, column: 37, scope: !11453)
!11468 = !DILocation(line: 621, column: 44, scope: !11453)
!11469 = !DILocation(line: 621, column: 42, scope: !11453)
!11470 = !DILocation(line: 621, column: 35, scope: !11453)
!11471 = !DILocation(line: 621, column: 2, scope: !11453)
!11472 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !5013, file: !5013, line: 399, type: !11362, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11473 = !DILocalVariable(name: "r", arg: 1, scope: !11472, file: !5013, line: 399, type: !233)
!11474 = !DILocation(line: 399, column: 32, scope: !11472)
!11475 = !DILocalVariable(name: "a", arg: 2, scope: !11472, file: !5013, line: 399, type: !2195)
!11476 = !DILocation(line: 399, column: 50, scope: !11472)
!11477 = !DILocalVariable(name: "f", arg: 3, scope: !11472, file: !5013, line: 399, type: !207)
!11478 = !DILocation(line: 399, column: 62, scope: !11472)
!11479 = !DILocation(line: 401, column: 9, scope: !11472)
!11480 = !DILocation(line: 401, column: 16, scope: !11472)
!11481 = !DILocation(line: 401, column: 14, scope: !11472)
!11482 = !DILocation(line: 401, column: 2, scope: !11472)
!11483 = !DILocation(line: 401, column: 7, scope: !11472)
!11484 = !DILocation(line: 402, column: 9, scope: !11472)
!11485 = !DILocation(line: 402, column: 16, scope: !11472)
!11486 = !DILocation(line: 402, column: 14, scope: !11472)
!11487 = !DILocation(line: 402, column: 2, scope: !11472)
!11488 = !DILocation(line: 402, column: 7, scope: !11472)
!11489 = !DILocation(line: 403, column: 9, scope: !11472)
!11490 = !DILocation(line: 403, column: 16, scope: !11472)
!11491 = !DILocation(line: 403, column: 14, scope: !11472)
!11492 = !DILocation(line: 403, column: 2, scope: !11472)
!11493 = !DILocation(line: 403, column: 7, scope: !11472)
!11494 = !DILocation(line: 404, column: 1, scope: !11472)
!11495 = distinct !DISubprogram(name: "zero_v3", scope: !5013, file: !5013, line: 43, type: !11496, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11496 = !DISubroutineType(types: !11497)
!11497 = !{null, !233}
!11498 = !DILocalVariable(name: "r", arg: 1, scope: !11495, file: !5013, line: 43, type: !233)
!11499 = !DILocation(line: 43, column: 28, scope: !11495)
!11500 = !DILocation(line: 45, column: 2, scope: !11495)
!11501 = !DILocation(line: 45, column: 7, scope: !11495)
!11502 = !DILocation(line: 46, column: 2, scope: !11495)
!11503 = !DILocation(line: 46, column: 7, scope: !11495)
!11504 = !DILocation(line: 47, column: 2, scope: !11495)
!11505 = !DILocation(line: 47, column: 7, scope: !11495)
!11506 = !DILocation(line: 48, column: 1, scope: !11495)
!11507 = distinct !DISubprogram(name: "surface_needsVelocityData", scope: !3, file: !3, line: 4762, type: !11508, scopeLine: 4763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11508 = !DISubroutineType(types: !11509)
!11509 = !{!135, !242, !4204}
!11510 = !DILocalVariable(name: "surface", arg: 1, scope: !11507, file: !3, line: 4762, type: !242)
!11511 = !DILocation(line: 4762, column: 59, scope: !11507)
!11512 = !DILocalVariable(name: "scene", arg: 2, scope: !11507, file: !3, line: 4762, type: !4204)
!11513 = !DILocation(line: 4762, column: 75, scope: !11507)
!11514 = !DILocation(line: 4764, column: 6, scope: !11515)
!11515 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 4764, column: 6)
!11516 = !DILocation(line: 4764, column: 15, scope: !11515)
!11517 = !DILocation(line: 4764, column: 22, scope: !11515)
!11518 = !DILocation(line: 4764, column: 6, scope: !11507)
!11519 = !DILocation(line: 4765, column: 3, scope: !11515)
!11520 = !DILocation(line: 4767, column: 28, scope: !11521)
!11521 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 4767, column: 6)
!11522 = !DILocation(line: 4767, column: 37, scope: !11521)
!11523 = !DILocation(line: 4767, column: 6, scope: !11521)
!11524 = !DILocation(line: 4767, column: 44, scope: !11521)
!11525 = !DILocation(line: 4767, column: 6, scope: !11507)
!11526 = !DILocation(line: 4768, column: 3, scope: !11521)
!11527 = !DILocation(line: 4770, column: 2, scope: !11507)
!11528 = !DILocation(line: 4771, column: 1, scope: !11507)
!11529 = distinct !DISubprogram(name: "surface_needsAccelerationData", scope: !3, file: !3, line: 4773, type: !5750, scopeLine: 4774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11530 = !DILocalVariable(name: "surface", arg: 1, scope: !11529, file: !3, line: 4773, type: !242)
!11531 = !DILocation(line: 4773, column: 63, scope: !11529)
!11532 = !DILocation(line: 4775, column: 6, scope: !11533)
!11533 = distinct !DILexicalBlock(scope: !11529, file: !3, line: 4775, column: 6)
!11534 = !DILocation(line: 4775, column: 15, scope: !11533)
!11535 = !DILocation(line: 4775, column: 22, scope: !11533)
!11536 = !DILocation(line: 4775, column: 6, scope: !11529)
!11537 = !DILocation(line: 4776, column: 3, scope: !11533)
!11538 = !DILocation(line: 4778, column: 2, scope: !11529)
!11539 = !DILocation(line: 4779, column: 1, scope: !11529)
!11540 = distinct !DISubprogram(name: "dynamicPaint_surfaceHasMoved", scope: !3, file: !3, line: 4726, type: !11541, scopeLine: 4727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11541 = !DISubroutineType(types: !11542)
!11542 = !{!135, !242, !3426}
!11543 = !DILocalVariable(name: "surface", arg: 1, scope: !11540, file: !3, line: 4726, type: !242)
!11544 = !DILocation(line: 4726, column: 62, scope: !11540)
!11545 = !DILocalVariable(name: "ob", arg: 2, scope: !11540, file: !3, line: 4726, type: !3426)
!11546 = !DILocation(line: 4726, column: 79, scope: !11540)
!11547 = !DILocalVariable(name: "sData", scope: !11540, file: !3, line: 4728, type: !3906)
!11548 = !DILocation(line: 4728, column: 20, scope: !11540)
!11549 = !DILocation(line: 4728, column: 28, scope: !11540)
!11550 = !DILocation(line: 4728, column: 37, scope: !11540)
!11551 = !DILocalVariable(name: "bData", scope: !11540, file: !3, line: 4729, type: !4026)
!11552 = !DILocation(line: 4729, column: 17, scope: !11540)
!11553 = !DILocation(line: 4729, column: 25, scope: !11540)
!11554 = !DILocation(line: 4729, column: 32, scope: !11540)
!11555 = !DILocalVariable(name: "dm", scope: !11540, file: !3, line: 4730, type: !2003)
!11556 = !DILocation(line: 4730, column: 15, scope: !11540)
!11557 = !DILocation(line: 4730, column: 20, scope: !11540)
!11558 = !DILocation(line: 4730, column: 29, scope: !11540)
!11559 = !DILocation(line: 4730, column: 37, scope: !11540)
!11560 = !DILocalVariable(name: "mvert", scope: !11540, file: !3, line: 4731, type: !3190)
!11561 = !DILocation(line: 4731, column: 9, scope: !11540)
!11562 = !DILocation(line: 4731, column: 17, scope: !11540)
!11563 = !DILocation(line: 4731, column: 21, scope: !11540)
!11564 = !DILocation(line: 4731, column: 34, scope: !11540)
!11565 = !DILocalVariable(name: "numOfVerts", scope: !11540, file: !3, line: 4733, type: !135)
!11566 = !DILocation(line: 4733, column: 6, scope: !11540)
!11567 = !DILocation(line: 4733, column: 19, scope: !11540)
!11568 = !DILocation(line: 4733, column: 23, scope: !11540)
!11569 = !DILocation(line: 4733, column: 35, scope: !11540)
!11570 = !DILocalVariable(name: "i", scope: !11540, file: !3, line: 4734, type: !135)
!11571 = !DILocation(line: 4734, column: 6, scope: !11540)
!11572 = !DILocalVariable(name: "ret", scope: !11540, file: !3, line: 4735, type: !135)
!11573 = !DILocation(line: 4735, column: 6, scope: !11540)
!11574 = !DILocation(line: 4737, column: 7, scope: !11575)
!11575 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 4737, column: 6)
!11576 = !DILocation(line: 4737, column: 14, scope: !11575)
!11577 = !DILocation(line: 4737, column: 6, scope: !11540)
!11578 = !DILocation(line: 4737, column: 26, scope: !11575)
!11579 = !DILocation(line: 4740, column: 9, scope: !11580)
!11580 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 4740, column: 2)
!11581 = !DILocation(line: 4740, column: 7, scope: !11580)
!11582 = !DILocation(line: 4740, column: 14, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 4740, column: 2)
!11584 = !DILocation(line: 4740, column: 16, scope: !11583)
!11585 = !DILocation(line: 4740, column: 2, scope: !11580)
!11586 = !DILocalVariable(name: "j", scope: !11587, file: !3, line: 4741, type: !135)
!11587 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 4740, column: 26)
!11588 = !DILocation(line: 4741, column: 7, scope: !11587)
!11589 = !DILocation(line: 4742, column: 10, scope: !11590)
!11590 = distinct !DILexicalBlock(scope: !11587, file: !3, line: 4742, column: 3)
!11591 = !DILocation(line: 4742, column: 8, scope: !11590)
!11592 = !DILocation(line: 4742, column: 15, scope: !11593)
!11593 = distinct !DILexicalBlock(scope: !11590, file: !3, line: 4742, column: 3)
!11594 = !DILocation(line: 4742, column: 17, scope: !11593)
!11595 = !DILocation(line: 4742, column: 3, scope: !11590)
!11596 = !DILocation(line: 4743, column: 8, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11593, file: !3, line: 4743, column: 8)
!11598 = !DILocation(line: 4743, column: 15, scope: !11597)
!11599 = !DILocation(line: 4743, column: 26, scope: !11597)
!11600 = !DILocation(line: 4743, column: 29, scope: !11597)
!11601 = !DILocation(line: 4743, column: 35, scope: !11597)
!11602 = !DILocation(line: 4743, column: 39, scope: !11597)
!11603 = !DILocation(line: 4743, column: 45, scope: !11597)
!11604 = !DILocation(line: 4743, column: 48, scope: !11597)
!11605 = !DILocation(line: 4743, column: 32, scope: !11597)
!11606 = !DILocation(line: 4743, column: 8, scope: !11593)
!11607 = !DILocation(line: 4743, column: 52, scope: !11597)
!11608 = !DILocation(line: 4743, column: 49, scope: !11597)
!11609 = !DILocation(line: 4742, column: 23, scope: !11593)
!11610 = !DILocation(line: 4742, column: 3, scope: !11593)
!11611 = distinct !{!11611, !11595, !11612}
!11612 = !DILocation(line: 4743, column: 59, scope: !11590)
!11613 = !DILocation(line: 4744, column: 2, scope: !11587)
!11614 = !DILocation(line: 4740, column: 22, scope: !11583)
!11615 = !DILocation(line: 4740, column: 2, scope: !11583)
!11616 = distinct !{!11616, !11585, !11617}
!11617 = !DILocation(line: 4744, column: 2, scope: !11580)
!11618 = !DILocation(line: 4750, column: 9, scope: !11619)
!11619 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 4750, column: 2)
!11620 = !DILocation(line: 4750, column: 7, scope: !11619)
!11621 = !DILocation(line: 4750, column: 14, scope: !11622)
!11622 = distinct !DILexicalBlock(scope: !11619, file: !3, line: 4750, column: 2)
!11623 = !DILocation(line: 4750, column: 18, scope: !11622)
!11624 = !DILocation(line: 4750, column: 16, scope: !11622)
!11625 = !DILocation(line: 4750, column: 2, scope: !11619)
!11626 = !DILocalVariable(name: "j", scope: !11627, file: !3, line: 4751, type: !135)
!11627 = distinct !DILexicalBlock(scope: !11622, file: !3, line: 4750, column: 35)
!11628 = !DILocation(line: 4751, column: 7, scope: !11627)
!11629 = !DILocation(line: 4752, column: 10, scope: !11630)
!11630 = distinct !DILexicalBlock(scope: !11627, file: !3, line: 4752, column: 3)
!11631 = !DILocation(line: 4752, column: 8, scope: !11630)
!11632 = !DILocation(line: 4752, column: 15, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11630, file: !3, line: 4752, column: 3)
!11634 = !DILocation(line: 4752, column: 17, scope: !11633)
!11635 = !DILocation(line: 4752, column: 3, scope: !11630)
!11636 = !DILocation(line: 4753, column: 8, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 4753, column: 8)
!11638 = !DILocation(line: 4753, column: 15, scope: !11637)
!11639 = !DILocation(line: 4753, column: 26, scope: !11637)
!11640 = !DILocation(line: 4753, column: 29, scope: !11637)
!11641 = !DILocation(line: 4753, column: 32, scope: !11637)
!11642 = !DILocation(line: 4753, column: 38, scope: !11637)
!11643 = !DILocation(line: 4753, column: 44, scope: !11637)
!11644 = !DILocation(line: 4753, column: 47, scope: !11637)
!11645 = !DILocation(line: 4753, column: 50, scope: !11637)
!11646 = !DILocation(line: 4753, column: 35, scope: !11637)
!11647 = !DILocation(line: 4753, column: 8, scope: !11633)
!11648 = !DILocation(line: 4754, column: 9, scope: !11649)
!11649 = distinct !DILexicalBlock(scope: !11637, file: !3, line: 4753, column: 54)
!11650 = !DILocation(line: 4755, column: 5, scope: !11649)
!11651 = !DILocation(line: 4753, column: 51, scope: !11637)
!11652 = !DILocation(line: 4752, column: 23, scope: !11633)
!11653 = !DILocation(line: 4752, column: 3, scope: !11633)
!11654 = distinct !{!11654, !11635, !11655}
!11655 = !DILocation(line: 4756, column: 4, scope: !11630)
!11656 = !DILocation(line: 4757, column: 2, scope: !11627)
!11657 = !DILocation(line: 4750, column: 31, scope: !11622)
!11658 = !DILocation(line: 4750, column: 2, scope: !11622)
!11659 = distinct !{!11659, !11625, !11660}
!11660 = !DILocation(line: 4757, column: 2, scope: !11619)
!11661 = !DILocation(line: 4759, column: 9, scope: !11540)
!11662 = !DILocation(line: 4759, column: 2, scope: !11540)
!11663 = !DILocation(line: 4760, column: 1, scope: !11540)
!11664 = distinct !DISubprogram(name: "surface_totalSamples", scope: !3, file: !3, line: 428, type: !5750, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11665 = !DILocalVariable(name: "surface", arg: 1, scope: !11664, file: !3, line: 428, type: !242)
!11666 = !DILocation(line: 428, column: 54, scope: !11664)
!11667 = !DILocation(line: 430, column: 6, scope: !11668)
!11668 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 430, column: 6)
!11669 = !DILocation(line: 430, column: 15, scope: !11668)
!11670 = !DILocation(line: 430, column: 22, scope: !11668)
!11671 = !DILocation(line: 430, column: 55, scope: !11668)
!11672 = !DILocation(line: 431, column: 6, scope: !11668)
!11673 = !DILocation(line: 431, column: 15, scope: !11668)
!11674 = !DILocation(line: 431, column: 21, scope: !11668)
!11675 = !DILocation(line: 430, column: 6, scope: !11664)
!11676 = !DILocation(line: 433, column: 11, scope: !11677)
!11677 = distinct !DILexicalBlock(scope: !11668, file: !3, line: 432, column: 2)
!11678 = !DILocation(line: 433, column: 20, scope: !11677)
!11679 = !DILocation(line: 433, column: 26, scope: !11677)
!11680 = !DILocation(line: 433, column: 39, scope: !11677)
!11681 = !DILocation(line: 433, column: 3, scope: !11677)
!11682 = !DILocation(line: 435, column: 6, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11664, file: !3, line: 435, column: 6)
!11684 = !DILocation(line: 435, column: 15, scope: !11683)
!11685 = !DILocation(line: 435, column: 22, scope: !11683)
!11686 = !DILocation(line: 435, column: 53, scope: !11683)
!11687 = !DILocation(line: 436, column: 6, scope: !11683)
!11688 = !DILocation(line: 436, column: 15, scope: !11683)
!11689 = !DILocation(line: 436, column: 21, scope: !11683)
!11690 = !DILocation(line: 436, column: 44, scope: !11683)
!11691 = !DILocation(line: 436, column: 47, scope: !11683)
!11692 = !DILocation(line: 436, column: 56, scope: !11683)
!11693 = !DILocation(line: 436, column: 62, scope: !11683)
!11694 = !DILocation(line: 435, column: 6, scope: !11664)
!11695 = !DILocation(line: 438, column: 11, scope: !11696)
!11696 = distinct !DILexicalBlock(scope: !11683, file: !3, line: 437, column: 2)
!11697 = !DILocation(line: 438, column: 20, scope: !11696)
!11698 = !DILocation(line: 438, column: 26, scope: !11696)
!11699 = !DILocation(line: 438, column: 41, scope: !11696)
!11700 = !DILocation(line: 438, column: 50, scope: !11696)
!11701 = !DILocation(line: 438, column: 56, scope: !11696)
!11702 = !DILocation(line: 438, column: 66, scope: !11696)
!11703 = !DILocation(line: 438, column: 39, scope: !11696)
!11704 = !DILocation(line: 438, column: 3, scope: !11696)
!11705 = !DILocation(line: 441, column: 9, scope: !11664)
!11706 = !DILocation(line: 441, column: 18, scope: !11664)
!11707 = !DILocation(line: 441, column: 24, scope: !11664)
!11708 = !DILocation(line: 441, column: 2, scope: !11664)
!11709 = !DILocation(line: 442, column: 1, scope: !11664)
!11710 = distinct !DISubprogram(name: "boundInsert", scope: !3, file: !3, line: 673, type: !11711, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11711 = !DISubroutineType(types: !11712)
!11712 = !{null, !3182, !233}
!11713 = !DILocalVariable(name: "b", arg: 1, scope: !11710, file: !3, line: 673, type: !3182)
!11714 = !DILocation(line: 673, column: 35, scope: !11710)
!11715 = !DILocalVariable(name: "point", arg: 2, scope: !11710, file: !3, line: 673, type: !233)
!11716 = !DILocation(line: 673, column: 44, scope: !11710)
!11717 = !DILocalVariable(name: "i", scope: !11710, file: !3, line: 675, type: !135)
!11718 = !DILocation(line: 675, column: 6, scope: !11710)
!11719 = !DILocation(line: 676, column: 7, scope: !11720)
!11720 = distinct !DILexicalBlock(scope: !11710, file: !3, line: 676, column: 6)
!11721 = !DILocation(line: 676, column: 10, scope: !11720)
!11722 = !DILocation(line: 676, column: 6, scope: !11710)
!11723 = !DILocation(line: 677, column: 14, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 676, column: 17)
!11725 = !DILocation(line: 677, column: 17, scope: !11724)
!11726 = !DILocation(line: 677, column: 22, scope: !11724)
!11727 = !DILocation(line: 677, column: 3, scope: !11724)
!11728 = !DILocation(line: 678, column: 14, scope: !11724)
!11729 = !DILocation(line: 678, column: 17, scope: !11724)
!11730 = !DILocation(line: 678, column: 22, scope: !11724)
!11731 = !DILocation(line: 678, column: 3, scope: !11724)
!11732 = !DILocation(line: 679, column: 3, scope: !11724)
!11733 = !DILocation(line: 679, column: 6, scope: !11724)
!11734 = !DILocation(line: 679, column: 12, scope: !11724)
!11735 = !DILocation(line: 680, column: 2, scope: !11724)
!11736 = !DILocation(line: 682, column: 3, scope: !11737)
!11737 = distinct !DILexicalBlock(scope: !11720, file: !3, line: 681, column: 7)
!11738 = !DILocation(line: 682, column: 10, scope: !11739)
!11739 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 682, column: 3)
!11740 = distinct !DILexicalBlock(scope: !11737, file: !3, line: 682, column: 3)
!11741 = !DILocation(line: 682, column: 12, scope: !11739)
!11742 = !DILocation(line: 682, column: 3, scope: !11740)
!11743 = !DILocation(line: 683, column: 8, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 683, column: 8)
!11745 = distinct !DILexicalBlock(scope: !11739, file: !3, line: 682, column: 26)
!11746 = !DILocation(line: 683, column: 14, scope: !11744)
!11747 = !DILocation(line: 683, column: 19, scope: !11744)
!11748 = !DILocation(line: 683, column: 22, scope: !11744)
!11749 = !DILocation(line: 683, column: 26, scope: !11744)
!11750 = !DILocation(line: 683, column: 17, scope: !11744)
!11751 = !DILocation(line: 683, column: 8, scope: !11745)
!11752 = !DILocation(line: 683, column: 42, scope: !11744)
!11753 = !DILocation(line: 683, column: 48, scope: !11744)
!11754 = !DILocation(line: 683, column: 30, scope: !11744)
!11755 = !DILocation(line: 683, column: 33, scope: !11744)
!11756 = !DILocation(line: 683, column: 37, scope: !11744)
!11757 = !DILocation(line: 683, column: 40, scope: !11744)
!11758 = !DILocation(line: 684, column: 8, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11745, file: !3, line: 684, column: 8)
!11760 = !DILocation(line: 684, column: 14, scope: !11759)
!11761 = !DILocation(line: 684, column: 19, scope: !11759)
!11762 = !DILocation(line: 684, column: 22, scope: !11759)
!11763 = !DILocation(line: 684, column: 26, scope: !11759)
!11764 = !DILocation(line: 684, column: 17, scope: !11759)
!11765 = !DILocation(line: 684, column: 8, scope: !11745)
!11766 = !DILocation(line: 684, column: 42, scope: !11759)
!11767 = !DILocation(line: 684, column: 48, scope: !11759)
!11768 = !DILocation(line: 684, column: 30, scope: !11759)
!11769 = !DILocation(line: 684, column: 33, scope: !11759)
!11770 = !DILocation(line: 684, column: 37, scope: !11759)
!11771 = !DILocation(line: 684, column: 40, scope: !11759)
!11772 = !DILocation(line: 685, column: 3, scope: !11745)
!11773 = !DILocation(line: 682, column: 20, scope: !11739)
!11774 = !DILocation(line: 682, column: 3, scope: !11739)
!11775 = distinct !{!11775, !11742, !11776}
!11776 = !DILocation(line: 685, column: 3, scope: !11740)
!11777 = !DILocation(line: 687, column: 1, scope: !11710)
!11778 = distinct !DISubprogram(name: "negate_v3", scope: !5013, file: !5013, line: 576, type: !11496, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11779 = !DILocalVariable(name: "r", arg: 1, scope: !11778, file: !5013, line: 576, type: !233)
!11780 = !DILocation(line: 576, column: 30, scope: !11778)
!11781 = !DILocation(line: 578, column: 10, scope: !11778)
!11782 = !DILocation(line: 578, column: 9, scope: !11778)
!11783 = !DILocation(line: 578, column: 2, scope: !11778)
!11784 = !DILocation(line: 578, column: 7, scope: !11778)
!11785 = !DILocation(line: 579, column: 10, scope: !11778)
!11786 = !DILocation(line: 579, column: 9, scope: !11778)
!11787 = !DILocation(line: 579, column: 2, scope: !11778)
!11788 = !DILocation(line: 579, column: 7, scope: !11778)
!11789 = !DILocation(line: 580, column: 10, scope: !11778)
!11790 = !DILocation(line: 580, column: 9, scope: !11778)
!11791 = !DILocation(line: 580, column: 2, scope: !11778)
!11792 = !DILocation(line: 580, column: 7, scope: !11778)
!11793 = !DILocation(line: 581, column: 1, scope: !11778)
!11794 = distinct !DISubprogram(name: "mul_v3_fl", scope: !5013, file: !5013, line: 392, type: !11387, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11795 = !DILocalVariable(name: "r", arg: 1, scope: !11794, file: !5013, line: 392, type: !233)
!11796 = !DILocation(line: 392, column: 30, scope: !11794)
!11797 = !DILocalVariable(name: "f", arg: 2, scope: !11794, file: !5013, line: 392, type: !207)
!11798 = !DILocation(line: 392, column: 42, scope: !11794)
!11799 = !DILocation(line: 394, column: 10, scope: !11794)
!11800 = !DILocation(line: 394, column: 2, scope: !11794)
!11801 = !DILocation(line: 394, column: 7, scope: !11794)
!11802 = !DILocation(line: 395, column: 10, scope: !11794)
!11803 = !DILocation(line: 395, column: 2, scope: !11794)
!11804 = !DILocation(line: 395, column: 7, scope: !11794)
!11805 = !DILocation(line: 396, column: 10, scope: !11794)
!11806 = !DILocation(line: 396, column: 2, scope: !11794)
!11807 = !DILocation(line: 396, column: 7, scope: !11794)
!11808 = !DILocation(line: 397, column: 1, scope: !11794)
!11809 = distinct !DISubprogram(name: "mul_v3_v3", scope: !5013, file: !5013, line: 412, type: !5014, scopeLine: 413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11810 = !DILocalVariable(name: "r", arg: 1, scope: !11809, file: !5013, line: 412, type: !233)
!11811 = !DILocation(line: 412, column: 30, scope: !11809)
!11812 = !DILocalVariable(name: "a", arg: 2, scope: !11809, file: !5013, line: 412, type: !2195)
!11813 = !DILocation(line: 412, column: 48, scope: !11809)
!11814 = !DILocation(line: 414, column: 10, scope: !11809)
!11815 = !DILocation(line: 414, column: 2, scope: !11809)
!11816 = !DILocation(line: 414, column: 7, scope: !11809)
!11817 = !DILocation(line: 415, column: 10, scope: !11809)
!11818 = !DILocation(line: 415, column: 2, scope: !11809)
!11819 = !DILocation(line: 415, column: 7, scope: !11809)
!11820 = !DILocation(line: 416, column: 10, scope: !11809)
!11821 = !DILocation(line: 416, column: 2, scope: !11809)
!11822 = !DILocation(line: 416, column: 7, scope: !11809)
!11823 = !DILocation(line: 417, column: 1, scope: !11809)
!11824 = distinct !DISubprogram(name: "len_v3", scope: !5013, file: !5013, line: 714, type: !11825, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11825 = !DISubroutineType(types: !11826)
!11826 = !{!207, !2195}
!11827 = !DILocalVariable(name: "a", arg: 1, scope: !11824, file: !5013, line: 714, type: !2195)
!11828 = !DILocation(line: 714, column: 34, scope: !11824)
!11829 = !DILocation(line: 716, column: 24, scope: !11824)
!11830 = !DILocation(line: 716, column: 27, scope: !11824)
!11831 = !DILocation(line: 716, column: 15, scope: !11824)
!11832 = !DILocation(line: 716, column: 9, scope: !11824)
!11833 = !DILocation(line: 716, column: 2, scope: !11824)
!11834 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !5013, file: !5013, line: 357, type: !8683, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11835 = !DILocalVariable(name: "r", arg: 1, scope: !11834, file: !5013, line: 357, type: !233)
!11836 = !DILocation(line: 357, column: 32, scope: !11834)
!11837 = !DILocalVariable(name: "a", arg: 2, scope: !11834, file: !5013, line: 357, type: !2195)
!11838 = !DILocation(line: 357, column: 50, scope: !11834)
!11839 = !DILocalVariable(name: "b", arg: 3, scope: !11834, file: !5013, line: 357, type: !2195)
!11840 = !DILocation(line: 357, column: 68, scope: !11834)
!11841 = !DILocation(line: 359, column: 9, scope: !11834)
!11842 = !DILocation(line: 359, column: 16, scope: !11834)
!11843 = !DILocation(line: 359, column: 14, scope: !11834)
!11844 = !DILocation(line: 359, column: 2, scope: !11834)
!11845 = !DILocation(line: 359, column: 7, scope: !11834)
!11846 = !DILocation(line: 360, column: 9, scope: !11834)
!11847 = !DILocation(line: 360, column: 16, scope: !11834)
!11848 = !DILocation(line: 360, column: 14, scope: !11834)
!11849 = !DILocation(line: 360, column: 2, scope: !11834)
!11850 = !DILocation(line: 360, column: 7, scope: !11834)
!11851 = !DILocation(line: 361, column: 9, scope: !11834)
!11852 = !DILocation(line: 361, column: 16, scope: !11834)
!11853 = !DILocation(line: 361, column: 14, scope: !11834)
!11854 = !DILocation(line: 361, column: 2, scope: !11834)
!11855 = !DILocation(line: 361, column: 7, scope: !11834)
!11856 = !DILocation(line: 362, column: 1, scope: !11834)
!11857 = distinct !DISubprogram(name: "surfaceGenerateGrid", scope: !3, file: !3, line: 709, type: !3676, scopeLine: 710, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!11858 = !DILocalVariable(name: "surface", arg: 1, scope: !11857, file: !3, line: 709, type: !248)
!11859 = !DILocation(line: 709, column: 61, scope: !11857)
!11860 = !DILocalVariable(name: "sData", scope: !11857, file: !3, line: 711, type: !3906)
!11861 = !DILocation(line: 711, column: 20, scope: !11857)
!11862 = !DILocation(line: 711, column: 28, scope: !11857)
!11863 = !DILocation(line: 711, column: 37, scope: !11857)
!11864 = !DILocalVariable(name: "bData", scope: !11857, file: !3, line: 712, type: !4026)
!11865 = !DILocation(line: 712, column: 17, scope: !11857)
!11866 = !DILocation(line: 712, column: 25, scope: !11857)
!11867 = !DILocation(line: 712, column: 32, scope: !11857)
!11868 = !DILocalVariable(name: "grid_bounds", scope: !11857, file: !3, line: 713, type: !3182)
!11869 = !DILocation(line: 713, column: 12, scope: !11857)
!11870 = !DILocalVariable(name: "grid", scope: !11857, file: !3, line: 714, type: !3175)
!11871 = !DILocation(line: 714, column: 14, scope: !11857)
!11872 = !DILocalVariable(name: "grid_cells", scope: !11857, file: !3, line: 715, type: !135)
!11873 = !DILocation(line: 715, column: 6, scope: !11857)
!11874 = !DILocalVariable(name: "axis", scope: !11857, file: !3, line: 715, type: !135)
!11875 = !DILocation(line: 715, column: 18, scope: !11857)
!11876 = !DILocalVariable(name: "temp_t_index", scope: !11857, file: !3, line: 716, type: !211)
!11877 = !DILocation(line: 716, column: 7, scope: !11857)
!11878 = !DILocalVariable(name: "temp_s_num", scope: !11857, file: !3, line: 717, type: !211)
!11879 = !DILocation(line: 717, column: 7, scope: !11857)
!11880 = !DILocalVariable(name: "num_of_threads", scope: !11857, file: !3, line: 722, type: !135)
!11881 = !DILocation(line: 722, column: 6, scope: !11857)
!11882 = !DILocation(line: 725, column: 6, scope: !11883)
!11883 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 725, column: 6)
!11884 = !DILocation(line: 725, column: 13, scope: !11883)
!11885 = !DILocation(line: 725, column: 6, scope: !11857)
!11886 = !DILocation(line: 726, column: 12, scope: !11883)
!11887 = !DILocation(line: 726, column: 3, scope: !11883)
!11888 = !DILocation(line: 729, column: 16, scope: !11857)
!11889 = !DILocation(line: 729, column: 47, scope: !11857)
!11890 = !DILocation(line: 729, column: 45, scope: !11857)
!11891 = !DILocation(line: 729, column: 14, scope: !11857)
!11892 = !DILocation(line: 730, column: 16, scope: !11857)
!11893 = !DILocation(line: 730, column: 2, scope: !11857)
!11894 = !DILocation(line: 730, column: 9, scope: !11857)
!11895 = !DILocation(line: 730, column: 14, scope: !11857)
!11896 = !DILocation(line: 731, column: 9, scope: !11857)
!11897 = !DILocation(line: 731, column: 16, scope: !11857)
!11898 = !DILocation(line: 731, column: 7, scope: !11857)
!11899 = !DILocation(line: 733, column: 6, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 733, column: 6)
!11901 = !DILocation(line: 733, column: 11, scope: !11900)
!11902 = !DILocation(line: 733, column: 14, scope: !11900)
!11903 = !DILocation(line: 733, column: 6, scope: !11857)
!11904 = !DILocalVariable(name: "i", scope: !11905, file: !3, line: 734, type: !135)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !3, line: 733, column: 27)
!11906 = !DILocation(line: 734, column: 7, scope: !11905)
!11907 = !DILocalVariable(name: "error", scope: !11905, file: !3, line: 734, type: !135)
!11908 = !DILocation(line: 734, column: 10, scope: !11905)
!11909 = !DILocalVariable(name: "dim_factor", scope: !11905, file: !3, line: 735, type: !207)
!11910 = !DILocation(line: 735, column: 9, scope: !11905)
!11911 = !DILocalVariable(name: "volume", scope: !11905, file: !3, line: 735, type: !207)
!11912 = !DILocation(line: 735, column: 21, scope: !11905)
!11913 = !DILocalVariable(name: "dim", scope: !11905, file: !3, line: 735, type: !206)
!11914 = !DILocation(line: 735, column: 29, scope: !11905)
!11915 = !DILocalVariable(name: "td", scope: !11905, file: !3, line: 736, type: !206)
!11916 = !DILocation(line: 736, column: 9, scope: !11905)
!11917 = !DILocalVariable(name: "min_dim", scope: !11905, file: !3, line: 737, type: !207)
!11918 = !DILocation(line: 737, column: 9, scope: !11905)
!11919 = !DILocation(line: 743, column: 10, scope: !11920)
!11920 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 743, column: 3)
!11921 = !DILocation(line: 743, column: 8, scope: !11920)
!11922 = !DILocation(line: 743, column: 15, scope: !11923)
!11923 = distinct !DILexicalBlock(scope: !11920, file: !3, line: 743, column: 3)
!11924 = !DILocation(line: 743, column: 19, scope: !11923)
!11925 = !DILocation(line: 743, column: 26, scope: !11923)
!11926 = !DILocation(line: 743, column: 17, scope: !11923)
!11927 = !DILocation(line: 743, column: 3, scope: !11920)
!11928 = !DILocation(line: 748, column: 17, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 743, column: 45)
!11930 = !DILocation(line: 748, column: 34, scope: !11929)
!11931 = !DILocation(line: 748, column: 41, scope: !11929)
!11932 = !DILocation(line: 748, column: 51, scope: !11929)
!11933 = !DILocation(line: 748, column: 58, scope: !11929)
!11934 = !DILocation(line: 748, column: 64, scope: !11929)
!11935 = !DILocation(line: 748, column: 68, scope: !11929)
!11936 = !DILocation(line: 748, column: 33, scope: !11929)
!11937 = !DILocation(line: 748, column: 4, scope: !11929)
!11938 = !DILocation(line: 750, column: 3, scope: !11929)
!11939 = !DILocation(line: 743, column: 41, scope: !11923)
!11940 = !DILocation(line: 743, column: 3, scope: !11923)
!11941 = distinct !{!11941, !11927, !11942}
!11942 = !DILocation(line: 750, column: 3, scope: !11920)
!11943 = !DILocation(line: 753, column: 10, scope: !11944)
!11944 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 753, column: 3)
!11945 = !DILocation(line: 753, column: 8, scope: !11944)
!11946 = !DILocation(line: 753, column: 15, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11944, file: !3, line: 753, column: 3)
!11948 = !DILocation(line: 753, column: 19, scope: !11947)
!11949 = !DILocation(line: 753, column: 17, scope: !11947)
!11950 = !DILocation(line: 753, column: 3, scope: !11944)
!11951 = !DILocation(line: 754, column: 17, scope: !11952)
!11952 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 753, column: 40)
!11953 = !DILocation(line: 754, column: 23, scope: !11952)
!11954 = !DILocation(line: 754, column: 36, scope: !11952)
!11955 = !DILocation(line: 754, column: 48, scope: !11952)
!11956 = !DILocation(line: 754, column: 51, scope: !11952)
!11957 = !DILocation(line: 754, column: 4, scope: !11952)
!11958 = !DILocation(line: 755, column: 17, scope: !11952)
!11959 = !DILocation(line: 755, column: 23, scope: !11952)
!11960 = !DILocation(line: 755, column: 36, scope: !11952)
!11961 = !DILocation(line: 755, column: 48, scope: !11952)
!11962 = !DILocation(line: 755, column: 51, scope: !11952)
!11963 = !DILocation(line: 755, column: 4, scope: !11952)
!11964 = !DILocation(line: 756, column: 3, scope: !11952)
!11965 = !DILocation(line: 753, column: 36, scope: !11947)
!11966 = !DILocation(line: 753, column: 3, scope: !11947)
!11967 = distinct !{!11967, !11950, !11968}
!11968 = !DILocation(line: 756, column: 3, scope: !11944)
!11969 = !DILocation(line: 759, column: 15, scope: !11905)
!11970 = !DILocation(line: 759, column: 20, scope: !11905)
!11971 = !DILocation(line: 759, column: 26, scope: !11905)
!11972 = !DILocation(line: 759, column: 38, scope: !11905)
!11973 = !DILocation(line: 759, column: 43, scope: !11905)
!11974 = !DILocation(line: 759, column: 49, scope: !11905)
!11975 = !DILocation(line: 759, column: 61, scope: !11905)
!11976 = !DILocation(line: 759, column: 3, scope: !11905)
!11977 = !DILocation(line: 760, column: 14, scope: !11905)
!11978 = !DILocation(line: 760, column: 18, scope: !11905)
!11979 = !DILocation(line: 760, column: 3, scope: !11905)
!11980 = !DILocation(line: 761, column: 21, scope: !11905)
!11981 = !DILocation(line: 761, column: 28, scope: !11905)
!11982 = !DILocation(line: 761, column: 35, scope: !11905)
!11983 = !DILocation(line: 761, column: 13, scope: !11905)
!11984 = !DILocation(line: 761, column: 42, scope: !11905)
!11985 = !DILocation(line: 761, column: 11, scope: !11905)
!11986 = !DILocation(line: 764, column: 10, scope: !11987)
!11987 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 764, column: 3)
!11988 = !DILocation(line: 764, column: 8, scope: !11987)
!11989 = !DILocation(line: 764, column: 15, scope: !11990)
!11990 = distinct !DILexicalBlock(scope: !11987, file: !3, line: 764, column: 3)
!11991 = !DILocation(line: 764, column: 17, scope: !11990)
!11992 = !DILocation(line: 764, column: 3, scope: !11987)
!11993 = !DILocation(line: 765, column: 11, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11995, file: !3, line: 765, column: 8)
!11995 = distinct !DILexicalBlock(scope: !11990, file: !3, line: 764, column: 27)
!11996 = !DILocation(line: 765, column: 8, scope: !11994)
!11997 = !DILocation(line: 765, column: 16, scope: !11994)
!11998 = !DILocation(line: 765, column: 14, scope: !11994)
!11999 = !DILocation(line: 765, column: 8, scope: !11995)
!12000 = !DILocation(line: 765, column: 30, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !11994, file: !3, line: 765, column: 25)
!12002 = !DILocation(line: 765, column: 27, scope: !12001)
!12003 = !DILocation(line: 765, column: 33, scope: !12001)
!12004 = !DILocation(line: 765, column: 46, scope: !12001)
!12005 = !DILocation(line: 765, column: 52, scope: !12001)
!12006 = !DILocation(line: 766, column: 3, scope: !11995)
!12007 = !DILocation(line: 764, column: 23, scope: !11990)
!12008 = !DILocation(line: 764, column: 3, scope: !11990)
!12009 = distinct !{!12009, !11992, !12010}
!12010 = !DILocation(line: 766, column: 3, scope: !11987)
!12011 = !DILocation(line: 768, column: 7, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 768, column: 7)
!12013 = !DILocation(line: 768, column: 12, scope: !12012)
!12014 = !DILocation(line: 768, column: 17, scope: !12012)
!12015 = !DILocation(line: 768, column: 28, scope: !12012)
!12016 = !DILocation(line: 768, column: 35, scope: !12012)
!12017 = !DILocation(line: 768, column: 42, scope: !12012)
!12018 = !DILocation(line: 768, column: 20, scope: !12012)
!12019 = !DILocation(line: 768, column: 49, scope: !12012)
!12020 = !DILocation(line: 768, column: 7, scope: !11905)
!12021 = !DILocation(line: 769, column: 4, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12012, file: !3, line: 768, column: 60)
!12023 = !DILocation(line: 769, column: 14, scope: !12022)
!12024 = !DILocation(line: 770, column: 4, scope: !12022)
!12025 = !DILocation(line: 770, column: 14, scope: !12022)
!12026 = !DILocation(line: 770, column: 21, scope: !12022)
!12027 = !DILocation(line: 771, column: 4, scope: !12022)
!12028 = !DILocation(line: 771, column: 11, scope: !12022)
!12029 = !DILocation(line: 771, column: 16, scope: !12022)
!12030 = !DILocation(line: 772, column: 4, scope: !12022)
!12031 = !DILocation(line: 776, column: 12, scope: !11905)
!12032 = !DILocation(line: 776, column: 20, scope: !11905)
!12033 = !DILocation(line: 776, column: 18, scope: !11905)
!12034 = !DILocation(line: 776, column: 28, scope: !11905)
!12035 = !DILocation(line: 776, column: 26, scope: !11905)
!12036 = !DILocation(line: 776, column: 10, scope: !11905)
!12037 = !DILocation(line: 779, column: 35, scope: !11905)
!12038 = !DILocation(line: 779, column: 27, scope: !11905)
!12039 = !DILocation(line: 779, column: 53, scope: !11905)
!12040 = !DILocation(line: 779, column: 60, scope: !11905)
!12041 = !DILocation(line: 779, column: 45, scope: !11905)
!12042 = !DILocation(line: 779, column: 73, scope: !11905)
!12043 = !DILocation(line: 779, column: 42, scope: !11905)
!12044 = !DILocation(line: 779, column: 99, scope: !11905)
!12045 = !DILocation(line: 779, column: 91, scope: !11905)
!12046 = !DILocation(line: 779, column: 89, scope: !11905)
!12047 = !DILocation(line: 779, column: 23, scope: !11905)
!12048 = !DILocation(line: 779, column: 16, scope: !11905)
!12049 = !DILocation(line: 779, column: 14, scope: !11905)
!12050 = !DILocation(line: 782, column: 10, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 782, column: 3)
!12052 = !DILocation(line: 782, column: 8, scope: !12051)
!12053 = !DILocation(line: 782, column: 15, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12051, file: !3, line: 782, column: 3)
!12055 = !DILocation(line: 782, column: 17, scope: !12054)
!12056 = !DILocation(line: 782, column: 3, scope: !12051)
!12057 = !DILocation(line: 783, column: 33, scope: !12058)
!12058 = distinct !DILexicalBlock(scope: !12054, file: !3, line: 782, column: 27)
!12059 = !DILocation(line: 783, column: 30, scope: !12058)
!12060 = !DILocation(line: 783, column: 38, scope: !12058)
!12061 = !DILocation(line: 783, column: 36, scope: !12058)
!12062 = !DILocation(line: 783, column: 24, scope: !12058)
!12063 = !DILocation(line: 783, column: 19, scope: !12058)
!12064 = !DILocation(line: 783, column: 4, scope: !12058)
!12065 = !DILocation(line: 783, column: 10, scope: !12058)
!12066 = !DILocation(line: 783, column: 14, scope: !12058)
!12067 = !DILocation(line: 783, column: 17, scope: !12058)
!12068 = !DILocation(line: 784, column: 4, scope: !12069)
!12069 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 784, column: 4)
!12070 = distinct !DILexicalBlock(scope: !12058, file: !3, line: 784, column: 4)
!12071 = !DILocation(line: 784, column: 4, scope: !12070)
!12072 = !DILocation(line: 784, column: 4, scope: !12073)
!12073 = distinct !DILexicalBlock(scope: !12069, file: !3, line: 784, column: 4)
!12074 = !DILocation(line: 785, column: 3, scope: !12058)
!12075 = !DILocation(line: 782, column: 23, scope: !12054)
!12076 = !DILocation(line: 782, column: 3, scope: !12054)
!12077 = distinct !{!12077, !12056, !12078}
!12078 = !DILocation(line: 785, column: 3, scope: !12051)
!12079 = !DILocation(line: 786, column: 16, scope: !11905)
!12080 = !DILocation(line: 786, column: 22, scope: !11905)
!12081 = !DILocation(line: 786, column: 31, scope: !11905)
!12082 = !DILocation(line: 786, column: 37, scope: !11905)
!12083 = !DILocation(line: 786, column: 29, scope: !11905)
!12084 = !DILocation(line: 786, column: 46, scope: !11905)
!12085 = !DILocation(line: 786, column: 52, scope: !11905)
!12086 = !DILocation(line: 786, column: 44, scope: !11905)
!12087 = !DILocation(line: 786, column: 14, scope: !11905)
!12088 = !DILocation(line: 789, column: 18, scope: !11905)
!12089 = !DILocation(line: 789, column: 49, scope: !11905)
!12090 = !DILocation(line: 789, column: 47, scope: !11905)
!12091 = !DILocation(line: 789, column: 3, scope: !11905)
!12092 = !DILocation(line: 789, column: 9, scope: !11905)
!12093 = !DILocation(line: 789, column: 16, scope: !11905)
!12094 = !DILocation(line: 790, column: 17, scope: !11905)
!12095 = !DILocation(line: 790, column: 43, scope: !11905)
!12096 = !DILocation(line: 790, column: 41, scope: !11905)
!12097 = !DILocation(line: 790, column: 3, scope: !11905)
!12098 = !DILocation(line: 790, column: 9, scope: !11905)
!12099 = !DILocation(line: 790, column: 15, scope: !11905)
!12100 = !DILocation(line: 791, column: 17, scope: !11905)
!12101 = !DILocation(line: 791, column: 43, scope: !11905)
!12102 = !DILocation(line: 791, column: 41, scope: !11905)
!12103 = !DILocation(line: 791, column: 56, scope: !11905)
!12104 = !DILocation(line: 791, column: 54, scope: !11905)
!12105 = !DILocation(line: 791, column: 3, scope: !11905)
!12106 = !DILocation(line: 791, column: 9, scope: !11905)
!12107 = !DILocation(line: 791, column: 15, scope: !11905)
!12108 = !DILocation(line: 792, column: 16, scope: !11905)
!12109 = !DILocation(line: 792, column: 42, scope: !11905)
!12110 = !DILocation(line: 792, column: 40, scope: !11905)
!12111 = !DILocation(line: 792, column: 14, scope: !11905)
!12112 = !DILocation(line: 793, column: 19, scope: !11905)
!12113 = !DILocation(line: 793, column: 45, scope: !11905)
!12114 = !DILocation(line: 793, column: 52, scope: !11905)
!12115 = !DILocation(line: 793, column: 43, scope: !11905)
!12116 = !DILocation(line: 793, column: 3, scope: !11905)
!12117 = !DILocation(line: 793, column: 9, scope: !11905)
!12118 = !DILocation(line: 793, column: 17, scope: !11905)
!12119 = !DILocation(line: 794, column: 18, scope: !11905)
!12120 = !DILocation(line: 794, column: 44, scope: !11905)
!12121 = !DILocation(line: 794, column: 51, scope: !11905)
!12122 = !DILocation(line: 794, column: 42, scope: !11905)
!12123 = !DILocation(line: 794, column: 16, scope: !11905)
!12124 = !DILocation(line: 797, column: 8, scope: !12125)
!12125 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 797, column: 7)
!12126 = !DILocation(line: 797, column: 14, scope: !12125)
!12127 = !DILocation(line: 797, column: 21, scope: !12125)
!12128 = !DILocation(line: 797, column: 25, scope: !12125)
!12129 = !DILocation(line: 797, column: 31, scope: !12125)
!12130 = !DILocation(line: 797, column: 37, scope: !12125)
!12131 = !DILocation(line: 797, column: 41, scope: !12125)
!12132 = !DILocation(line: 797, column: 47, scope: !12125)
!12133 = !DILocation(line: 797, column: 53, scope: !12125)
!12134 = !DILocation(line: 797, column: 57, scope: !12125)
!12135 = !DILocation(line: 797, column: 63, scope: !12125)
!12136 = !DILocation(line: 797, column: 71, scope: !12125)
!12137 = !DILocation(line: 797, column: 75, scope: !12125)
!12138 = !DILocation(line: 797, column: 86, scope: !12125)
!12139 = !DILocation(line: 797, column: 90, scope: !12125)
!12140 = !DILocation(line: 797, column: 7, scope: !11905)
!12141 = !DILocation(line: 798, column: 10, scope: !12125)
!12142 = !DILocation(line: 798, column: 4, scope: !12125)
!12143 = !DILocation(line: 800, column: 8, scope: !12144)
!12144 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 800, column: 7)
!12145 = !DILocation(line: 800, column: 7, scope: !11905)
!12146 = !DILocation(line: 805, column: 11, scope: !12147)
!12147 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 805, column: 4)
!12148 = distinct !DILexicalBlock(scope: !12144, file: !3, line: 800, column: 15)
!12149 = !DILocation(line: 805, column: 9, scope: !12147)
!12150 = !DILocation(line: 805, column: 16, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12147, file: !3, line: 805, column: 4)
!12152 = !DILocation(line: 805, column: 20, scope: !12151)
!12153 = !DILocation(line: 805, column: 27, scope: !12151)
!12154 = !DILocation(line: 805, column: 18, scope: !12151)
!12155 = !DILocation(line: 805, column: 4, scope: !12147)
!12156 = !DILocalVariable(name: "co", scope: !12157, file: !3, line: 806, type: !1033)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !3, line: 805, column: 46)
!12158 = !DILocation(line: 806, column: 9, scope: !12157)
!12159 = !DILocalVariable(name: "j", scope: !12157, file: !3, line: 806, type: !135)
!12160 = !DILocation(line: 806, column: 16, scope: !12157)
!12161 = !DILocation(line: 807, column: 12, scope: !12162)
!12162 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 807, column: 5)
!12163 = !DILocation(line: 807, column: 10, scope: !12162)
!12164 = !DILocation(line: 807, column: 17, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 807, column: 5)
!12166 = !DILocation(line: 807, column: 19, scope: !12165)
!12167 = !DILocation(line: 807, column: 5, scope: !12162)
!12168 = !DILocation(line: 808, column: 26, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 807, column: 29)
!12170 = !DILocation(line: 808, column: 33, scope: !12169)
!12171 = !DILocation(line: 808, column: 43, scope: !12169)
!12172 = !DILocation(line: 808, column: 50, scope: !12169)
!12173 = !DILocation(line: 808, column: 56, scope: !12169)
!12174 = !DILocation(line: 808, column: 60, scope: !12169)
!12175 = !DILocation(line: 808, column: 62, scope: !12169)
!12176 = !DILocation(line: 808, column: 67, scope: !12169)
!12177 = !DILocation(line: 808, column: 73, scope: !12169)
!12178 = !DILocation(line: 808, column: 85, scope: !12169)
!12179 = !DILocation(line: 808, column: 89, scope: !12169)
!12180 = !DILocation(line: 808, column: 65, scope: !12169)
!12181 = !DILocation(line: 808, column: 99, scope: !12169)
!12182 = !DILocation(line: 808, column: 95, scope: !12169)
!12183 = !DILocation(line: 808, column: 93, scope: !12169)
!12184 = !DILocation(line: 808, column: 104, scope: !12169)
!12185 = !DILocation(line: 808, column: 110, scope: !12169)
!12186 = !DILocation(line: 808, column: 114, scope: !12169)
!12187 = !DILocation(line: 808, column: 102, scope: !12169)
!12188 = !DILocation(line: 808, column: 25, scope: !12169)
!12189 = !DILocation(line: 808, column: 19, scope: !12169)
!12190 = !DILocation(line: 808, column: 14, scope: !12169)
!12191 = !DILocation(line: 808, column: 9, scope: !12169)
!12192 = !DILocation(line: 808, column: 6, scope: !12169)
!12193 = !DILocation(line: 808, column: 12, scope: !12169)
!12194 = !DILocation(line: 809, column: 6, scope: !12195)
!12195 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 809, column: 6)
!12196 = distinct !DILexicalBlock(scope: !12169, file: !3, line: 809, column: 6)
!12197 = !DILocation(line: 809, column: 6, scope: !12196)
!12198 = !DILocation(line: 809, column: 6, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12195, file: !3, line: 809, column: 6)
!12200 = !DILocation(line: 810, column: 5, scope: !12169)
!12201 = !DILocation(line: 807, column: 25, scope: !12165)
!12202 = !DILocation(line: 807, column: 5, scope: !12165)
!12203 = distinct !{!12203, !12167, !12204}
!12204 = !DILocation(line: 810, column: 5, scope: !12162)
!12205 = !DILocation(line: 812, column: 23, scope: !12157)
!12206 = !DILocation(line: 812, column: 31, scope: !12157)
!12207 = !DILocation(line: 812, column: 39, scope: !12157)
!12208 = !DILocation(line: 812, column: 45, scope: !12157)
!12209 = !DILocation(line: 812, column: 37, scope: !12157)
!12210 = !DILocation(line: 812, column: 29, scope: !12157)
!12211 = !DILocation(line: 812, column: 54, scope: !12157)
!12212 = !DILocation(line: 812, column: 62, scope: !12157)
!12213 = !DILocation(line: 812, column: 68, scope: !12157)
!12214 = !DILocation(line: 812, column: 60, scope: !12157)
!12215 = !DILocation(line: 812, column: 77, scope: !12157)
!12216 = !DILocation(line: 812, column: 83, scope: !12157)
!12217 = !DILocation(line: 812, column: 75, scope: !12157)
!12218 = !DILocation(line: 812, column: 52, scope: !12157)
!12219 = !DILocation(line: 812, column: 5, scope: !12157)
!12220 = !DILocation(line: 812, column: 18, scope: !12157)
!12221 = !DILocation(line: 812, column: 21, scope: !12157)
!12222 = !DILocation(line: 816, column: 5, scope: !12157)
!12223 = !DILocation(line: 816, column: 11, scope: !12157)
!12224 = !DILocation(line: 816, column: 17, scope: !12157)
!12225 = !DILocation(line: 816, column: 30, scope: !12157)
!12226 = !DILocation(line: 816, column: 33, scope: !12157)
!12227 = !DILocation(line: 818, column: 4, scope: !12157)
!12228 = !DILocation(line: 805, column: 42, scope: !12151)
!12229 = !DILocation(line: 805, column: 4, scope: !12151)
!12230 = distinct !{!12230, !12155, !12231}
!12231 = !DILocation(line: 818, column: 4, scope: !12147)
!12232 = !DILocation(line: 821, column: 11, scope: !12233)
!12233 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 821, column: 4)
!12234 = !DILocation(line: 821, column: 9, scope: !12233)
!12235 = !DILocation(line: 821, column: 16, scope: !12236)
!12236 = distinct !DILexicalBlock(scope: !12233, file: !3, line: 821, column: 4)
!12237 = !DILocation(line: 821, column: 20, scope: !12236)
!12238 = !DILocation(line: 821, column: 18, scope: !12236)
!12239 = !DILocation(line: 821, column: 4, scope: !12233)
!12240 = !DILocation(line: 822, column: 23, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12236, file: !3, line: 821, column: 41)
!12242 = !DILocation(line: 822, column: 29, scope: !12241)
!12243 = !DILocation(line: 822, column: 35, scope: !12241)
!12244 = !DILocation(line: 822, column: 39, scope: !12241)
!12245 = !DILocation(line: 822, column: 37, scope: !12241)
!12246 = !DILocation(line: 822, column: 5, scope: !12241)
!12247 = !DILocation(line: 822, column: 11, scope: !12241)
!12248 = !DILocation(line: 822, column: 20, scope: !12241)
!12249 = !DILocation(line: 823, column: 4, scope: !12241)
!12250 = !DILocation(line: 821, column: 37, scope: !12236)
!12251 = !DILocation(line: 821, column: 4, scope: !12236)
!12252 = distinct !{!12252, !12239, !12253}
!12253 = !DILocation(line: 823, column: 4, scope: !12233)
!12254 = !DILocation(line: 826, column: 11, scope: !12255)
!12255 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 826, column: 4)
!12256 = !DILocation(line: 826, column: 9, scope: !12255)
!12257 = !DILocation(line: 826, column: 16, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12255, file: !3, line: 826, column: 4)
!12259 = !DILocation(line: 826, column: 20, scope: !12258)
!12260 = !DILocation(line: 826, column: 18, scope: !12258)
!12261 = !DILocation(line: 826, column: 4, scope: !12255)
!12262 = !DILocalVariable(name: "id", scope: !12263, file: !3, line: 827, type: !135)
!12263 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 826, column: 37)
!12264 = !DILocation(line: 827, column: 9, scope: !12263)
!12265 = !DILocation(line: 828, column: 13, scope: !12266)
!12266 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 828, column: 5)
!12267 = !DILocation(line: 828, column: 10, scope: !12266)
!12268 = !DILocation(line: 828, column: 18, scope: !12269)
!12269 = distinct !DILexicalBlock(scope: !12266, file: !3, line: 828, column: 5)
!12270 = !DILocation(line: 828, column: 23, scope: !12269)
!12271 = !DILocation(line: 828, column: 21, scope: !12269)
!12272 = !DILocation(line: 828, column: 5, scope: !12266)
!12273 = !DILocation(line: 829, column: 24, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12269, file: !3, line: 828, column: 45)
!12275 = !DILocation(line: 829, column: 30, scope: !12274)
!12276 = !DILocation(line: 829, column: 36, scope: !12274)
!12277 = !DILocation(line: 829, column: 40, scope: !12274)
!12278 = !DILocation(line: 829, column: 45, scope: !12274)
!12279 = !DILocation(line: 829, column: 43, scope: !12274)
!12280 = !DILocation(line: 829, column: 38, scope: !12274)
!12281 = !DILocation(line: 829, column: 6, scope: !12274)
!12282 = !DILocation(line: 829, column: 12, scope: !12274)
!12283 = !DILocation(line: 829, column: 18, scope: !12274)
!12284 = !DILocation(line: 829, column: 21, scope: !12274)
!12285 = !DILocation(line: 830, column: 5, scope: !12274)
!12286 = !DILocation(line: 828, column: 41, scope: !12269)
!12287 = !DILocation(line: 828, column: 5, scope: !12269)
!12288 = distinct !{!12288, !12272, !12289}
!12289 = !DILocation(line: 830, column: 5, scope: !12266)
!12290 = !DILocation(line: 831, column: 22, scope: !12263)
!12291 = !DILocation(line: 831, column: 28, scope: !12263)
!12292 = !DILocation(line: 831, column: 34, scope: !12263)
!12293 = !DILocation(line: 831, column: 36, scope: !12263)
!12294 = !DILocation(line: 831, column: 43, scope: !12263)
!12295 = !DILocation(line: 831, column: 49, scope: !12263)
!12296 = !DILocation(line: 831, column: 55, scope: !12263)
!12297 = !DILocation(line: 831, column: 57, scope: !12263)
!12298 = !DILocation(line: 831, column: 41, scope: !12263)
!12299 = !DILocation(line: 831, column: 5, scope: !12263)
!12300 = !DILocation(line: 831, column: 11, scope: !12263)
!12301 = !DILocation(line: 831, column: 17, scope: !12263)
!12302 = !DILocation(line: 831, column: 20, scope: !12263)
!12303 = !DILocation(line: 832, column: 4, scope: !12263)
!12304 = !DILocation(line: 826, column: 33, scope: !12258)
!12305 = !DILocation(line: 826, column: 4, scope: !12258)
!12306 = distinct !{!12306, !12261, !12307}
!12307 = !DILocation(line: 832, column: 4, scope: !12255)
!12308 = !DILocation(line: 835, column: 11, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 835, column: 4)
!12310 = !DILocation(line: 835, column: 9, scope: !12309)
!12311 = !DILocation(line: 835, column: 16, scope: !12312)
!12312 = distinct !DILexicalBlock(scope: !12309, file: !3, line: 835, column: 4)
!12313 = !DILocation(line: 835, column: 20, scope: !12312)
!12314 = !DILocation(line: 835, column: 27, scope: !12312)
!12315 = !DILocation(line: 835, column: 18, scope: !12312)
!12316 = !DILocation(line: 835, column: 4, scope: !12309)
!12317 = !DILocalVariable(name: "pos", scope: !12318, file: !3, line: 836, type: !135)
!12318 = distinct !DILexicalBlock(scope: !12312, file: !3, line: 835, column: 46)
!12319 = !DILocation(line: 836, column: 9, scope: !12318)
!12320 = !DILocation(line: 836, column: 15, scope: !12318)
!12321 = !DILocation(line: 836, column: 21, scope: !12318)
!12322 = !DILocation(line: 836, column: 27, scope: !12318)
!12323 = !DILocation(line: 836, column: 40, scope: !12318)
!12324 = !DILocation(line: 836, column: 46, scope: !12318)
!12325 = !DILocation(line: 836, column: 57, scope: !12318)
!12326 = !DILocation(line: 836, column: 70, scope: !12318)
!12327 = !DILocation(line: 836, column: 44, scope: !12318)
!12328 = !DILocation(line: 837, column: 26, scope: !12318)
!12329 = !DILocation(line: 837, column: 5, scope: !12318)
!12330 = !DILocation(line: 837, column: 11, scope: !12318)
!12331 = !DILocation(line: 837, column: 19, scope: !12318)
!12332 = !DILocation(line: 837, column: 24, scope: !12318)
!12333 = !DILocation(line: 839, column: 5, scope: !12318)
!12334 = !DILocation(line: 839, column: 16, scope: !12318)
!12335 = !DILocation(line: 839, column: 29, scope: !12318)
!12336 = !DILocation(line: 839, column: 32, scope: !12318)
!12337 = !DILocation(line: 840, column: 4, scope: !12318)
!12338 = !DILocation(line: 835, column: 42, scope: !12312)
!12339 = !DILocation(line: 835, column: 4, scope: !12312)
!12340 = distinct !{!12340, !12316, !12341}
!12341 = !DILocation(line: 840, column: 4, scope: !12309)
!12342 = !DILocalVariable(name: "x", scope: !12343, file: !3, line: 844, type: !135)
!12343 = distinct !DILexicalBlock(scope: !12148, file: !3, line: 843, column: 4)
!12344 = !DILocation(line: 844, column: 9, scope: !12343)
!12345 = !DILocation(line: 848, column: 12, scope: !12346)
!12346 = distinct !DILexicalBlock(scope: !12343, file: !3, line: 848, column: 5)
!12347 = !DILocation(line: 848, column: 10, scope: !12346)
!12348 = !DILocation(line: 848, column: 17, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 848, column: 5)
!12350 = !DILocation(line: 848, column: 21, scope: !12349)
!12351 = !DILocation(line: 848, column: 27, scope: !12349)
!12352 = !DILocation(line: 848, column: 19, scope: !12349)
!12353 = !DILocation(line: 848, column: 5, scope: !12346)
!12354 = !DILocalVariable(name: "y", scope: !12355, file: !3, line: 849, type: !135)
!12355 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 848, column: 40)
!12356 = !DILocation(line: 849, column: 10, scope: !12355)
!12357 = !DILocation(line: 850, column: 13, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12355, file: !3, line: 850, column: 6)
!12359 = !DILocation(line: 850, column: 11, scope: !12358)
!12360 = !DILocation(line: 850, column: 18, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 850, column: 6)
!12362 = !DILocation(line: 850, column: 22, scope: !12361)
!12363 = !DILocation(line: 850, column: 28, scope: !12361)
!12364 = !DILocation(line: 850, column: 20, scope: !12361)
!12365 = !DILocation(line: 850, column: 6, scope: !12358)
!12366 = !DILocalVariable(name: "z", scope: !12367, file: !3, line: 851, type: !135)
!12367 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 850, column: 41)
!12368 = !DILocation(line: 851, column: 11, scope: !12367)
!12369 = !DILocation(line: 852, column: 14, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12367, file: !3, line: 852, column: 7)
!12371 = !DILocation(line: 852, column: 12, scope: !12370)
!12372 = !DILocation(line: 852, column: 19, scope: !12373)
!12373 = distinct !DILexicalBlock(scope: !12370, file: !3, line: 852, column: 7)
!12374 = !DILocation(line: 852, column: 23, scope: !12373)
!12375 = !DILocation(line: 852, column: 29, scope: !12373)
!12376 = !DILocation(line: 852, column: 21, scope: !12373)
!12377 = !DILocation(line: 852, column: 7, scope: !12370)
!12378 = !DILocalVariable(name: "j", scope: !12379, file: !3, line: 853, type: !135)
!12379 = distinct !DILexicalBlock(scope: !12373, file: !3, line: 852, column: 42)
!12380 = !DILocation(line: 853, column: 12, scope: !12379)
!12381 = !DILocalVariable(name: "b_index", scope: !12379, file: !3, line: 853, type: !135)
!12382 = !DILocation(line: 853, column: 15, scope: !12379)
!12383 = !DILocation(line: 853, column: 25, scope: !12379)
!12384 = !DILocation(line: 853, column: 29, scope: !12379)
!12385 = !DILocation(line: 853, column: 33, scope: !12379)
!12386 = !DILocation(line: 853, column: 39, scope: !12379)
!12387 = !DILocation(line: 853, column: 31, scope: !12379)
!12388 = !DILocation(line: 853, column: 27, scope: !12379)
!12389 = !DILocation(line: 853, column: 48, scope: !12379)
!12390 = !DILocation(line: 853, column: 52, scope: !12379)
!12391 = !DILocation(line: 853, column: 58, scope: !12379)
!12392 = !DILocation(line: 853, column: 50, scope: !12379)
!12393 = !DILocation(line: 853, column: 67, scope: !12379)
!12394 = !DILocation(line: 853, column: 73, scope: !12379)
!12395 = !DILocation(line: 853, column: 65, scope: !12379)
!12396 = !DILocation(line: 853, column: 46, scope: !12379)
!12397 = !DILocation(line: 855, column: 15, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12379, file: !3, line: 855, column: 8)
!12399 = !DILocation(line: 855, column: 13, scope: !12398)
!12400 = !DILocation(line: 855, column: 20, scope: !12401)
!12401 = distinct !DILexicalBlock(scope: !12398, file: !3, line: 855, column: 8)
!12402 = !DILocation(line: 855, column: 22, scope: !12401)
!12403 = !DILocation(line: 855, column: 8, scope: !12398)
!12404 = !DILocalVariable(name: "s", scope: !12405, file: !3, line: 856, type: !135)
!12405 = distinct !DILexicalBlock(scope: !12401, file: !3, line: 855, column: 32)
!12406 = !DILocation(line: 856, column: 13, scope: !12405)
!12407 = !DILocation(line: 856, column: 18, scope: !12405)
!12408 = !DILocation(line: 856, column: 20, scope: !12405)
!12409 = !DILocation(line: 856, column: 17, scope: !12405)
!12410 = !DILocation(line: 856, column: 28, scope: !12405)
!12411 = !DILocation(line: 856, column: 34, scope: !12405)
!12412 = !DILocation(line: 856, column: 36, scope: !12405)
!12413 = !DILocation(line: 856, column: 33, scope: !12405)
!12414 = !DILocation(line: 856, column: 44, scope: !12405)
!12415 = !DILocation(line: 856, column: 48, scope: !12405)
!12416 = !DILocation(line: 857, column: 40, scope: !12405)
!12417 = !DILocation(line: 857, column: 46, scope: !12405)
!12418 = !DILocation(line: 857, column: 58, scope: !12405)
!12419 = !DILocation(line: 857, column: 62, scope: !12405)
!12420 = !DILocation(line: 857, column: 71, scope: !12405)
!12421 = !DILocation(line: 857, column: 67, scope: !12405)
!12422 = !DILocation(line: 857, column: 76, scope: !12405)
!12423 = !DILocation(line: 857, column: 82, scope: !12405)
!12424 = !DILocation(line: 857, column: 86, scope: !12405)
!12425 = !DILocation(line: 857, column: 74, scope: !12405)
!12426 = !DILocation(line: 857, column: 91, scope: !12405)
!12427 = !DILocation(line: 857, column: 89, scope: !12405)
!12428 = !DILocation(line: 857, column: 65, scope: !12405)
!12429 = !DILocation(line: 857, column: 9, scope: !12405)
!12430 = !DILocation(line: 857, column: 15, scope: !12405)
!12431 = !DILocation(line: 857, column: 22, scope: !12405)
!12432 = !DILocation(line: 857, column: 31, scope: !12405)
!12433 = !DILocation(line: 857, column: 35, scope: !12405)
!12434 = !DILocation(line: 857, column: 38, scope: !12405)
!12435 = !DILocation(line: 858, column: 40, scope: !12405)
!12436 = !DILocation(line: 858, column: 46, scope: !12405)
!12437 = !DILocation(line: 858, column: 58, scope: !12405)
!12438 = !DILocation(line: 858, column: 62, scope: !12405)
!12439 = !DILocation(line: 858, column: 71, scope: !12405)
!12440 = !DILocation(line: 858, column: 67, scope: !12405)
!12441 = !DILocation(line: 858, column: 76, scope: !12405)
!12442 = !DILocation(line: 858, column: 82, scope: !12405)
!12443 = !DILocation(line: 858, column: 86, scope: !12405)
!12444 = !DILocation(line: 858, column: 74, scope: !12405)
!12445 = !DILocation(line: 858, column: 92, scope: !12405)
!12446 = !DILocation(line: 858, column: 94, scope: !12405)
!12447 = !DILocation(line: 858, column: 91, scope: !12405)
!12448 = !DILocation(line: 858, column: 89, scope: !12405)
!12449 = !DILocation(line: 858, column: 65, scope: !12405)
!12450 = !DILocation(line: 858, column: 9, scope: !12405)
!12451 = !DILocation(line: 858, column: 15, scope: !12405)
!12452 = !DILocation(line: 858, column: 22, scope: !12405)
!12453 = !DILocation(line: 858, column: 31, scope: !12405)
!12454 = !DILocation(line: 858, column: 35, scope: !12405)
!12455 = !DILocation(line: 858, column: 38, scope: !12405)
!12456 = !DILocation(line: 859, column: 8, scope: !12405)
!12457 = !DILocation(line: 855, column: 28, scope: !12401)
!12458 = !DILocation(line: 855, column: 8, scope: !12401)
!12459 = distinct !{!12459, !12403, !12460}
!12460 = !DILocation(line: 859, column: 8, scope: !12398)
!12461 = !DILocation(line: 860, column: 8, scope: !12379)
!12462 = !DILocation(line: 860, column: 14, scope: !12379)
!12463 = !DILocation(line: 860, column: 21, scope: !12379)
!12464 = !DILocation(line: 860, column: 30, scope: !12379)
!12465 = !DILocation(line: 860, column: 36, scope: !12379)
!12466 = !DILocation(line: 861, column: 7, scope: !12379)
!12467 = !DILocation(line: 852, column: 38, scope: !12373)
!12468 = !DILocation(line: 852, column: 7, scope: !12373)
!12469 = distinct !{!12469, !12377, !12470}
!12470 = !DILocation(line: 861, column: 7, scope: !12370)
!12471 = !DILocation(line: 862, column: 6, scope: !12367)
!12472 = !DILocation(line: 850, column: 37, scope: !12361)
!12473 = !DILocation(line: 850, column: 6, scope: !12361)
!12474 = distinct !{!12474, !12365, !12475}
!12475 = !DILocation(line: 862, column: 6, scope: !12358)
!12476 = !DILocation(line: 863, column: 5, scope: !12355)
!12477 = !DILocation(line: 848, column: 36, scope: !12349)
!12478 = !DILocation(line: 848, column: 5, scope: !12349)
!12479 = distinct !{!12479, !12353, !12480}
!12480 = !DILocation(line: 863, column: 5, scope: !12346)
!12481 = !DILocation(line: 865, column: 3, scope: !12148)
!12482 = !DILocation(line: 867, column: 7, scope: !12483)
!12483 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 867, column: 7)
!12484 = !DILocation(line: 867, column: 7, scope: !11905)
!12485 = !DILocation(line: 867, column: 19, scope: !12483)
!12486 = !DILocation(line: 867, column: 29, scope: !12483)
!12487 = !DILocation(line: 868, column: 7, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 868, column: 7)
!12489 = !DILocation(line: 868, column: 7, scope: !11905)
!12490 = !DILocation(line: 868, column: 21, scope: !12488)
!12491 = !DILocation(line: 868, column: 31, scope: !12488)
!12492 = !DILocation(line: 871, column: 17, scope: !11905)
!12493 = !DILocation(line: 871, column: 3, scope: !11905)
!12494 = !DILocation(line: 871, column: 9, scope: !11905)
!12495 = !DILocation(line: 871, column: 15, scope: !11905)
!12496 = !DILocation(line: 873, column: 7, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !11905, file: !3, line: 873, column: 7)
!12498 = !DILocation(line: 873, column: 13, scope: !12497)
!12499 = !DILocation(line: 873, column: 17, scope: !12497)
!12500 = !DILocation(line: 873, column: 23, scope: !12497)
!12501 = !DILocation(line: 873, column: 7, scope: !11905)
!12502 = !DILocation(line: 874, column: 13, scope: !12503)
!12503 = distinct !DILexicalBlock(scope: !12497, file: !3, line: 873, column: 30)
!12504 = !DILocation(line: 874, column: 22, scope: !12503)
!12505 = !DILocation(line: 874, column: 4, scope: !12503)
!12506 = !DILocation(line: 875, column: 13, scope: !12503)
!12507 = !DILocation(line: 875, column: 4, scope: !12503)
!12508 = !DILocation(line: 876, column: 3, scope: !12503)
!12509 = !DILocation(line: 877, column: 2, scope: !11905)
!12510 = !DILocation(line: 879, column: 6, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !11857, file: !3, line: 879, column: 6)
!12512 = !DILocation(line: 879, column: 6, scope: !11857)
!12513 = !DILocation(line: 879, column: 19, scope: !12511)
!12514 = !DILocation(line: 879, column: 29, scope: !12511)
!12515 = !DILocation(line: 880, column: 1, scope: !11857)
!12516 = distinct !DISubprogram(name: "dynamicPaint_prepareAdjacencyData", scope: !3, file: !3, line: 4073, type: !5836, scopeLine: 4074, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!12517 = !DILocalVariable(name: "surface", arg: 1, scope: !12516, file: !3, line: 4073, type: !242)
!12518 = !DILocation(line: 4073, column: 68, scope: !12516)
!12519 = !DILocalVariable(name: "force_init", arg: 2, scope: !12516, file: !3, line: 4073, type: !135)
!12520 = !DILocation(line: 4073, column: 81, scope: !12516)
!12521 = !DILocalVariable(name: "sData", scope: !12516, file: !3, line: 4075, type: !3906)
!12522 = !DILocation(line: 4075, column: 20, scope: !12516)
!12523 = !DILocation(line: 4075, column: 28, scope: !12516)
!12524 = !DILocation(line: 4075, column: 37, scope: !12516)
!12525 = !DILocalVariable(name: "bData", scope: !12516, file: !3, line: 4076, type: !4026)
!12526 = !DILocation(line: 4076, column: 17, scope: !12516)
!12527 = !DILocation(line: 4076, column: 25, scope: !12516)
!12528 = !DILocation(line: 4076, column: 32, scope: !12516)
!12529 = !DILocalVariable(name: "bNeighs", scope: !12516, file: !3, line: 4077, type: !3167)
!12530 = !DILocation(line: 4077, column: 16, scope: !12516)
!12531 = !DILocalVariable(name: "adj_data", scope: !12516, file: !3, line: 4078, type: !5852)
!12532 = !DILocation(line: 4078, column: 16, scope: !12516)
!12533 = !DILocation(line: 4078, column: 27, scope: !12516)
!12534 = !DILocation(line: 4078, column: 34, scope: !12516)
!12535 = !DILocalVariable(name: "realCoord", scope: !12516, file: !3, line: 4079, type: !201)
!12536 = !DILocation(line: 4079, column: 9, scope: !12516)
!12537 = !DILocation(line: 4079, column: 21, scope: !12516)
!12538 = !DILocation(line: 4079, column: 28, scope: !12516)
!12539 = !DILocalVariable(name: "index", scope: !12516, file: !3, line: 4080, type: !135)
!12540 = !DILocation(line: 4080, column: 6, scope: !12516)
!12541 = !DILocation(line: 4082, column: 32, scope: !12542)
!12542 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 4082, column: 6)
!12543 = !DILocation(line: 4082, column: 8, scope: !12542)
!12544 = !DILocation(line: 4082, column: 41, scope: !12542)
!12545 = !DILocation(line: 4082, column: 45, scope: !12542)
!12546 = !DILocation(line: 4082, column: 57, scope: !12542)
!12547 = !DILocation(line: 4082, column: 61, scope: !12542)
!12548 = !DILocation(line: 4082, column: 68, scope: !12542)
!12549 = !DILocation(line: 4082, column: 6, scope: !12516)
!12550 = !DILocation(line: 4082, column: 78, scope: !12542)
!12551 = !DILocation(line: 4084, column: 6, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 4084, column: 6)
!12553 = !DILocation(line: 4084, column: 13, scope: !12552)
!12554 = !DILocation(line: 4084, column: 6, scope: !12516)
!12555 = !DILocation(line: 4084, column: 22, scope: !12552)
!12556 = !DILocation(line: 4084, column: 32, scope: !12552)
!12557 = !DILocation(line: 4084, column: 39, scope: !12552)
!12558 = !DILocation(line: 4085, column: 29, scope: !12516)
!12559 = !DILocation(line: 4085, column: 41, scope: !12516)
!12560 = !DILocation(line: 4085, column: 48, scope: !12516)
!12561 = !DILocation(line: 4085, column: 58, scope: !12516)
!12562 = !DILocation(line: 4085, column: 72, scope: !12516)
!12563 = !DILocation(line: 4085, column: 12, scope: !12516)
!12564 = !DILocation(line: 4085, column: 19, scope: !12516)
!12565 = !DILocation(line: 4085, column: 27, scope: !12516)
!12566 = !DILocation(line: 4085, column: 10, scope: !12516)
!12567 = !DILocation(line: 4086, column: 7, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 4086, column: 6)
!12569 = !DILocation(line: 4086, column: 6, scope: !12516)
!12570 = !DILocation(line: 4086, column: 16, scope: !12568)
!12571 = !DILocation(line: 4091, column: 13, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 4091, column: 2)
!12573 = !DILocation(line: 4091, column: 7, scope: !12572)
!12574 = !DILocation(line: 4091, column: 18, scope: !12575)
!12575 = distinct !DILexicalBlock(scope: !12572, file: !3, line: 4091, column: 2)
!12576 = !DILocation(line: 4091, column: 26, scope: !12575)
!12577 = !DILocation(line: 4091, column: 33, scope: !12575)
!12578 = !DILocation(line: 4091, column: 24, scope: !12575)
!12579 = !DILocation(line: 4091, column: 2, scope: !12572)
!12580 = !DILocalVariable(name: "i", scope: !12581, file: !3, line: 4092, type: !135)
!12581 = distinct !DILexicalBlock(scope: !12575, file: !3, line: 4091, column: 56)
!12582 = !DILocation(line: 4092, column: 7, scope: !12581)
!12583 = !DILocalVariable(name: "numOfNeighs", scope: !12581, file: !3, line: 4093, type: !135)
!12584 = !DILocation(line: 4093, column: 7, scope: !12581)
!12585 = !DILocation(line: 4093, column: 21, scope: !12581)
!12586 = !DILocation(line: 4093, column: 31, scope: !12581)
!12587 = !DILocation(line: 4093, column: 37, scope: !12581)
!12588 = !DILocation(line: 4095, column: 10, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 4095, column: 3)
!12590 = !DILocation(line: 4095, column: 8, scope: !12589)
!12591 = !DILocation(line: 4095, column: 15, scope: !12592)
!12592 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 4095, column: 3)
!12593 = !DILocation(line: 4095, column: 19, scope: !12592)
!12594 = !DILocation(line: 4095, column: 17, scope: !12592)
!12595 = !DILocation(line: 4095, column: 3, scope: !12589)
!12596 = !DILocalVariable(name: "n_index", scope: !12597, file: !3, line: 4096, type: !135)
!12597 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 4095, column: 37)
!12598 = !DILocation(line: 4096, column: 8, scope: !12597)
!12599 = !DILocation(line: 4096, column: 18, scope: !12597)
!12600 = !DILocation(line: 4096, column: 28, scope: !12597)
!12601 = !DILocation(line: 4096, column: 36, scope: !12597)
!12602 = !DILocation(line: 4096, column: 45, scope: !12597)
!12603 = !DILocation(line: 4096, column: 43, scope: !12597)
!12604 = !DILocalVariable(name: "t_index", scope: !12597, file: !3, line: 4097, type: !135)
!12605 = !DILocation(line: 4097, column: 8, scope: !12597)
!12606 = !DILocation(line: 4097, column: 18, scope: !12597)
!12607 = !DILocation(line: 4097, column: 28, scope: !12597)
!12608 = !DILocation(line: 4097, column: 37, scope: !12597)
!12609 = !DILocation(line: 4100, column: 16, scope: !12597)
!12610 = !DILocation(line: 4100, column: 24, scope: !12597)
!12611 = !DILocation(line: 4100, column: 33, scope: !12597)
!12612 = !DILocation(line: 4100, column: 38, scope: !12597)
!12613 = !DILocation(line: 4100, column: 48, scope: !12597)
!12614 = !DILocation(line: 4100, column: 55, scope: !12597)
!12615 = !DILocation(line: 4100, column: 61, scope: !12597)
!12616 = !DILocation(line: 4100, column: 71, scope: !12597)
!12617 = !DILocation(line: 4100, column: 74, scope: !12597)
!12618 = !DILocation(line: 4100, column: 84, scope: !12597)
!12619 = !DILocation(line: 4100, column: 91, scope: !12597)
!12620 = !DILocation(line: 4100, column: 97, scope: !12597)
!12621 = !DILocation(line: 4100, column: 105, scope: !12597)
!12622 = !DILocation(line: 4100, column: 4, scope: !12597)
!12623 = !DILocation(line: 4102, column: 35, scope: !12597)
!12624 = !DILocation(line: 4102, column: 43, scope: !12597)
!12625 = !DILocation(line: 4102, column: 52, scope: !12597)
!12626 = !DILocation(line: 4102, column: 28, scope: !12597)
!12627 = !DILocation(line: 4102, column: 4, scope: !12597)
!12628 = !DILocation(line: 4102, column: 12, scope: !12597)
!12629 = !DILocation(line: 4102, column: 21, scope: !12597)
!12630 = !DILocation(line: 4102, column: 26, scope: !12597)
!12631 = !DILocation(line: 4104, column: 8, scope: !12632)
!12632 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 4104, column: 8)
!12633 = !DILocation(line: 4104, column: 16, scope: !12632)
!12634 = !DILocation(line: 4104, column: 25, scope: !12632)
!12635 = !DILocation(line: 4104, column: 8, scope: !12597)
!12636 = !DILocation(line: 4104, column: 41, scope: !12632)
!12637 = !DILocation(line: 4104, column: 49, scope: !12632)
!12638 = !DILocation(line: 4104, column: 58, scope: !12632)
!12639 = !DILocation(line: 4104, column: 70, scope: !12632)
!12640 = !DILocation(line: 4104, column: 78, scope: !12632)
!12641 = !DILocation(line: 4104, column: 87, scope: !12632)
!12642 = !DILocation(line: 4104, column: 68, scope: !12632)
!12643 = !DILocation(line: 4104, column: 31, scope: !12632)
!12644 = !DILocation(line: 4105, column: 3, scope: !12597)
!12645 = !DILocation(line: 4095, column: 33, scope: !12592)
!12646 = !DILocation(line: 4095, column: 3, scope: !12592)
!12647 = distinct !{!12647, !12595, !12648}
!12648 = !DILocation(line: 4105, column: 3, scope: !12589)
!12649 = !DILocation(line: 4106, column: 2, scope: !12581)
!12650 = !DILocation(line: 4091, column: 52, scope: !12575)
!12651 = !DILocation(line: 4091, column: 2, scope: !12575)
!12652 = distinct !{!12652, !12579, !12653}
!12653 = !DILocation(line: 4106, column: 2, scope: !12572)
!12654 = !DILocation(line: 4109, column: 2, scope: !12516)
!12655 = !DILocation(line: 4109, column: 9, scope: !12516)
!12656 = !DILocation(line: 4109, column: 22, scope: !12516)
!12657 = !DILocation(line: 4110, column: 13, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12516, file: !3, line: 4110, column: 2)
!12659 = !DILocation(line: 4110, column: 7, scope: !12658)
!12660 = !DILocation(line: 4110, column: 18, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12658, file: !3, line: 4110, column: 2)
!12662 = !DILocation(line: 4110, column: 26, scope: !12661)
!12663 = !DILocation(line: 4110, column: 33, scope: !12661)
!12664 = !DILocation(line: 4110, column: 24, scope: !12661)
!12665 = !DILocation(line: 4110, column: 2, scope: !12658)
!12666 = !DILocalVariable(name: "i", scope: !12667, file: !3, line: 4111, type: !135)
!12667 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 4110, column: 56)
!12668 = !DILocation(line: 4111, column: 7, scope: !12667)
!12669 = !DILocalVariable(name: "numOfNeighs", scope: !12667, file: !3, line: 4112, type: !135)
!12670 = !DILocation(line: 4112, column: 7, scope: !12667)
!12671 = !DILocation(line: 4112, column: 21, scope: !12667)
!12672 = !DILocation(line: 4112, column: 31, scope: !12667)
!12673 = !DILocation(line: 4112, column: 37, scope: !12667)
!12674 = !DILocation(line: 4114, column: 10, scope: !12675)
!12675 = distinct !DILexicalBlock(scope: !12667, file: !3, line: 4114, column: 3)
!12676 = !DILocation(line: 4114, column: 8, scope: !12675)
!12677 = !DILocation(line: 4114, column: 15, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 4114, column: 3)
!12679 = !DILocation(line: 4114, column: 19, scope: !12678)
!12680 = !DILocation(line: 4114, column: 17, scope: !12678)
!12681 = !DILocation(line: 4114, column: 3, scope: !12675)
!12682 = !DILocation(line: 4115, column: 35, scope: !12683)
!12683 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 4114, column: 37)
!12684 = !DILocation(line: 4115, column: 43, scope: !12683)
!12685 = !DILocation(line: 4115, column: 53, scope: !12683)
!12686 = !DILocation(line: 4115, column: 61, scope: !12683)
!12687 = !DILocation(line: 4115, column: 70, scope: !12683)
!12688 = !DILocation(line: 4115, column: 68, scope: !12683)
!12689 = !DILocation(line: 4115, column: 73, scope: !12683)
!12690 = !DILocation(line: 4115, column: 27, scope: !12683)
!12691 = !DILocation(line: 4115, column: 4, scope: !12683)
!12692 = !DILocation(line: 4115, column: 11, scope: !12683)
!12693 = !DILocation(line: 4115, column: 24, scope: !12683)
!12694 = !DILocation(line: 4116, column: 3, scope: !12683)
!12695 = !DILocation(line: 4114, column: 33, scope: !12678)
!12696 = !DILocation(line: 4114, column: 3, scope: !12678)
!12697 = distinct !{!12697, !12681, !12698}
!12698 = !DILocation(line: 4116, column: 3, scope: !12675)
!12699 = !DILocation(line: 4117, column: 2, scope: !12667)
!12700 = !DILocation(line: 4110, column: 52, scope: !12661)
!12701 = !DILocation(line: 4110, column: 2, scope: !12661)
!12702 = distinct !{!12702, !12665, !12703}
!12703 = !DILocation(line: 4117, column: 2, scope: !12658)
!12704 = !DILocation(line: 4118, column: 26, scope: !12516)
!12705 = !DILocation(line: 4118, column: 36, scope: !12516)
!12706 = !DILocation(line: 4118, column: 2, scope: !12516)
!12707 = !DILocation(line: 4118, column: 9, scope: !12516)
!12708 = !DILocation(line: 4118, column: 23, scope: !12516)
!12709 = !DILocation(line: 4119, column: 1, scope: !12516)
!12710 = distinct !DISubprogram(name: "surface_getBrushFlags", scope: !3, file: !3, line: 586, type: !11508, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!12711 = !DILocalVariable(name: "surface", arg: 1, scope: !12710, file: !3, line: 586, type: !242)
!12712 = !DILocation(line: 586, column: 55, scope: !12710)
!12713 = !DILocalVariable(name: "scene", arg: 2, scope: !12710, file: !3, line: 586, type: !4204)
!12714 = !DILocation(line: 586, column: 71, scope: !12710)
!12715 = !DILocalVariable(name: "base", scope: !12710, file: !3, line: 588, type: !10694)
!12716 = !DILocation(line: 588, column: 8, scope: !12710)
!12717 = !DILocalVariable(name: "go", scope: !12710, file: !3, line: 589, type: !10698)
!12718 = !DILocation(line: 589, column: 15, scope: !12710)
!12719 = !DILocalVariable(name: "brushObj", scope: !12710, file: !3, line: 590, type: !3426)
!12720 = !DILocation(line: 590, column: 10, scope: !12710)
!12721 = !DILocalVariable(name: "md", scope: !12710, file: !3, line: 591, type: !10713)
!12722 = !DILocation(line: 591, column: 16, scope: !12710)
!12723 = !DILocalVariable(name: "flags", scope: !12710, file: !3, line: 593, type: !135)
!12724 = !DILocation(line: 593, column: 6, scope: !12710)
!12725 = !DILocation(line: 595, column: 6, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 595, column: 6)
!12727 = !DILocation(line: 595, column: 15, scope: !12726)
!12728 = !DILocation(line: 595, column: 6, scope: !12710)
!12729 = !DILocation(line: 596, column: 8, scope: !12726)
!12730 = !DILocation(line: 596, column: 17, scope: !12726)
!12731 = !DILocation(line: 596, column: 30, scope: !12726)
!12732 = !DILocation(line: 596, column: 38, scope: !12726)
!12733 = !DILocation(line: 596, column: 6, scope: !12726)
!12734 = !DILocation(line: 596, column: 3, scope: !12726)
!12735 = !DILocation(line: 598, column: 10, scope: !12726)
!12736 = !DILocation(line: 598, column: 17, scope: !12726)
!12737 = !DILocation(line: 598, column: 22, scope: !12726)
!12738 = !DILocation(line: 598, column: 8, scope: !12726)
!12739 = !DILocation(line: 600, column: 2, scope: !12710)
!12740 = !DILocation(line: 600, column: 9, scope: !12710)
!12741 = !DILocation(line: 600, column: 14, scope: !12710)
!12742 = !DILocation(line: 600, column: 17, scope: !12710)
!12743 = !DILocation(line: 601, column: 12, scope: !12744)
!12744 = distinct !DILexicalBlock(scope: !12710, file: !3, line: 600, column: 21)
!12745 = !DILocation(line: 604, column: 7, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 604, column: 7)
!12747 = !DILocation(line: 604, column: 16, scope: !12746)
!12748 = !DILocation(line: 604, column: 7, scope: !12744)
!12749 = !DILocation(line: 605, column: 8, scope: !12750)
!12750 = distinct !DILexicalBlock(scope: !12751, file: !3, line: 605, column: 8)
!12751 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 604, column: 29)
!12752 = !DILocation(line: 605, column: 12, scope: !12750)
!12753 = !DILocation(line: 605, column: 8, scope: !12751)
!12754 = !DILocation(line: 605, column: 27, scope: !12750)
!12755 = !DILocation(line: 605, column: 31, scope: !12750)
!12756 = !DILocation(line: 605, column: 25, scope: !12750)
!12757 = !DILocation(line: 605, column: 16, scope: !12750)
!12758 = !DILocation(line: 606, column: 3, scope: !12751)
!12759 = !DILocation(line: 608, column: 15, scope: !12746)
!12760 = !DILocation(line: 608, column: 21, scope: !12746)
!12761 = !DILocation(line: 608, column: 13, scope: !12746)
!12762 = !DILocation(line: 610, column: 8, scope: !12763)
!12763 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 610, column: 7)
!12764 = !DILocation(line: 610, column: 7, scope: !12744)
!12765 = !DILocation(line: 611, column: 8, scope: !12766)
!12766 = distinct !DILexicalBlock(scope: !12767, file: !3, line: 611, column: 8)
!12767 = distinct !DILexicalBlock(scope: !12763, file: !3, line: 610, column: 18)
!12768 = !DILocation(line: 611, column: 17, scope: !12766)
!12769 = !DILocation(line: 611, column: 8, scope: !12767)
!12770 = !DILocation(line: 611, column: 35, scope: !12766)
!12771 = !DILocation(line: 611, column: 39, scope: !12766)
!12772 = !DILocation(line: 611, column: 33, scope: !12766)
!12773 = !DILocation(line: 611, column: 30, scope: !12766)
!12774 = !DILocation(line: 612, column: 16, scope: !12766)
!12775 = !DILocation(line: 612, column: 22, scope: !12766)
!12776 = !DILocation(line: 612, column: 14, scope: !12766)
!12777 = !DILocation(line: 613, column: 4, scope: !12767)
!12778 = distinct !{!12778, !12739, !12779}
!12779 = !DILocation(line: 632, column: 2, scope: !12710)
!12780 = !DILocation(line: 616, column: 7, scope: !12781)
!12781 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 616, column: 7)
!12782 = !DILocation(line: 616, column: 16, scope: !12781)
!12783 = !DILocation(line: 616, column: 7, scope: !12744)
!12784 = !DILocation(line: 617, column: 9, scope: !12781)
!12785 = !DILocation(line: 617, column: 13, scope: !12781)
!12786 = !DILocation(line: 617, column: 7, scope: !12781)
!12787 = !DILocation(line: 617, column: 4, scope: !12781)
!12788 = !DILocation(line: 619, column: 11, scope: !12781)
!12789 = !DILocation(line: 619, column: 17, scope: !12781)
!12790 = !DILocation(line: 619, column: 9, scope: !12781)
!12791 = !DILocation(line: 621, column: 29, scope: !12744)
!12792 = !DILocation(line: 621, column: 8, scope: !12744)
!12793 = !DILocation(line: 621, column: 6, scope: !12744)
!12794 = !DILocation(line: 622, column: 7, scope: !12795)
!12795 = distinct !DILexicalBlock(scope: !12744, file: !3, line: 622, column: 7)
!12796 = !DILocation(line: 622, column: 10, scope: !12795)
!12797 = !DILocation(line: 622, column: 13, scope: !12795)
!12798 = !DILocation(line: 622, column: 17, scope: !12795)
!12799 = !DILocation(line: 622, column: 22, scope: !12795)
!12800 = !DILocation(line: 622, column: 7, scope: !12744)
!12801 = !DILocalVariable(name: "pmd2", scope: !12802, file: !3, line: 623, type: !3242)
!12802 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 622, column: 73)
!12803 = !DILocation(line: 623, column: 30, scope: !12802)
!12804 = !DILocation(line: 623, column: 65, scope: !12802)
!12805 = !DILocation(line: 623, column: 37, scope: !12802)
!12806 = !DILocation(line: 625, column: 8, scope: !12807)
!12807 = distinct !DILexicalBlock(scope: !12802, file: !3, line: 625, column: 8)
!12808 = !DILocation(line: 625, column: 14, scope: !12807)
!12809 = !DILocation(line: 625, column: 8, scope: !12802)
!12810 = !DILocalVariable(name: "brush", scope: !12811, file: !3, line: 626, type: !4416)
!12811 = distinct !DILexicalBlock(scope: !12807, file: !3, line: 625, column: 21)
!12812 = !DILocation(line: 626, column: 32, scope: !12811)
!12813 = !DILocation(line: 626, column: 40, scope: !12811)
!12814 = !DILocation(line: 626, column: 46, scope: !12811)
!12815 = !DILocation(line: 628, column: 9, scope: !12816)
!12816 = distinct !DILexicalBlock(scope: !12811, file: !3, line: 628, column: 9)
!12817 = !DILocation(line: 628, column: 16, scope: !12816)
!12818 = !DILocation(line: 628, column: 22, scope: !12816)
!12819 = !DILocation(line: 628, column: 9, scope: !12811)
!12820 = !DILocation(line: 629, column: 12, scope: !12816)
!12821 = !DILocation(line: 629, column: 6, scope: !12816)
!12822 = !DILocation(line: 630, column: 4, scope: !12811)
!12823 = !DILocation(line: 631, column: 3, scope: !12802)
!12824 = !DILocation(line: 634, column: 9, scope: !12710)
!12825 = !DILocation(line: 634, column: 2, scope: !12710)
!12826 = distinct !DISubprogram(name: "max_fff", scope: !12827, file: !12827, line: 224, type: !12828, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!12827 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12828 = !DISubroutineType(types: !12829)
!12829 = !{!207, !207, !207, !207}
!12830 = !DILocalVariable(name: "a", arg: 1, scope: !12826, file: !12827, line: 224, type: !207)
!12831 = !DILocation(line: 224, column: 29, scope: !12826)
!12832 = !DILocalVariable(name: "b", arg: 2, scope: !12826, file: !12827, line: 224, type: !207)
!12833 = !DILocation(line: 224, column: 38, scope: !12826)
!12834 = !DILocalVariable(name: "c", arg: 3, scope: !12826, file: !12827, line: 224, type: !207)
!12835 = !DILocation(line: 224, column: 47, scope: !12826)
!12836 = !DILocation(line: 226, column: 23, scope: !12826)
!12837 = !DILocation(line: 226, column: 26, scope: !12826)
!12838 = !DILocation(line: 226, column: 16, scope: !12826)
!12839 = !DILocation(line: 226, column: 30, scope: !12826)
!12840 = !DILocation(line: 226, column: 9, scope: !12826)
!12841 = !DILocation(line: 226, column: 2, scope: !12826)
!12842 = distinct !DISubprogram(name: "max_ff", scope: !12827, file: !12827, line: 206, type: !12843, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!12843 = !DISubroutineType(types: !12844)
!12844 = !{!207, !207, !207}
!12845 = !DILocalVariable(name: "a", arg: 1, scope: !12842, file: !12827, line: 206, type: !207)
!12846 = !DILocation(line: 206, column: 28, scope: !12842)
!12847 = !DILocalVariable(name: "b", arg: 2, scope: !12842, file: !12827, line: 206, type: !207)
!12848 = !DILocation(line: 206, column: 37, scope: !12842)
!12849 = !DILocation(line: 208, column: 10, scope: !12842)
!12850 = !DILocation(line: 208, column: 14, scope: !12842)
!12851 = !DILocation(line: 208, column: 12, scope: !12842)
!12852 = !DILocation(line: 208, column: 9, scope: !12842)
!12853 = !DILocation(line: 208, column: 19, scope: !12842)
!12854 = !DILocation(line: 208, column: 23, scope: !12842)
!12855 = !DILocation(line: 208, column: 2, scope: !12842)
!12856 = distinct !DISubprogram(name: "dynamicPaint_surfacePreStep", scope: !3, file: !3, line: 4642, type: !12857, scopeLine: 4643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!12857 = !DISubroutineType(types: !12858)
!12858 = !{null, !242, !207}
!12859 = !DILocalVariable(name: "surface", arg: 1, scope: !12856, file: !3, line: 4642, type: !242)
!12860 = !DILocation(line: 4642, column: 62, scope: !12856)
!12861 = !DILocalVariable(name: "timescale", arg: 2, scope: !12856, file: !3, line: 4642, type: !207)
!12862 = !DILocation(line: 4642, column: 77, scope: !12856)
!12863 = !DILocalVariable(name: "sData", scope: !12856, file: !3, line: 4644, type: !3906)
!12864 = !DILocation(line: 4644, column: 20, scope: !12856)
!12865 = !DILocation(line: 4644, column: 28, scope: !12856)
!12866 = !DILocation(line: 4644, column: 37, scope: !12856)
!12867 = !DILocalVariable(name: "index", scope: !12856, file: !3, line: 4645, type: !135)
!12868 = !DILocation(line: 4645, column: 6, scope: !12856)
!12869 = !DILocation(line: 4650, column: 13, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12856, file: !3, line: 4650, column: 2)
!12871 = !DILocation(line: 4650, column: 7, scope: !12870)
!12872 = !DILocation(line: 4650, column: 18, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 4650, column: 2)
!12874 = !DILocation(line: 4650, column: 26, scope: !12873)
!12875 = !DILocation(line: 4650, column: 33, scope: !12873)
!12876 = !DILocation(line: 4650, column: 24, scope: !12873)
!12877 = !DILocation(line: 4650, column: 2, scope: !12870)
!12878 = !DILocation(line: 4652, column: 7, scope: !12879)
!12879 = distinct !DILexicalBlock(scope: !12880, file: !3, line: 4652, column: 7)
!12880 = distinct !DILexicalBlock(scope: !12873, file: !3, line: 4650, column: 56)
!12881 = !DILocation(line: 4652, column: 16, scope: !12879)
!12882 = !DILocation(line: 4652, column: 21, scope: !12879)
!12883 = !DILocation(line: 4652, column: 7, scope: !12880)
!12884 = !DILocalVariable(name: "pPoint", scope: !12885, file: !3, line: 4653, type: !222)
!12885 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 4652, column: 52)
!12886 = !DILocation(line: 4653, column: 16, scope: !12885)
!12887 = !DILocation(line: 4653, column: 41, scope: !12885)
!12888 = !DILocation(line: 4653, column: 48, scope: !12885)
!12889 = !DILocation(line: 4653, column: 27, scope: !12885)
!12890 = !DILocation(line: 4653, column: 59, scope: !12885)
!12891 = !DILocation(line: 4653, column: 26, scope: !12885)
!12892 = !DILocation(line: 4655, column: 8, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12885, file: !3, line: 4655, column: 8)
!12894 = !DILocation(line: 4655, column: 17, scope: !12893)
!12895 = !DILocation(line: 4655, column: 23, scope: !12893)
!12896 = !DILocation(line: 4655, column: 8, scope: !12885)
!12897 = !DILocation(line: 4656, column: 9, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12899, file: !3, line: 4656, column: 9)
!12899 = distinct !DILexicalBlock(scope: !12893, file: !3, line: 4655, column: 48)
!12900 = !DILocation(line: 4656, column: 17, scope: !12898)
!12901 = !DILocation(line: 4656, column: 25, scope: !12898)
!12902 = !DILocation(line: 4656, column: 9, scope: !12899)
!12903 = !DILocalVariable(name: "i", scope: !12904, file: !3, line: 4657, type: !135)
!12904 = distinct !DILexicalBlock(scope: !12898, file: !3, line: 4656, column: 41)
!12905 = !DILocation(line: 4657, column: 10, scope: !12904)
!12906 = !DILocalVariable(name: "dry_ratio", scope: !12904, file: !3, line: 4658, type: !207)
!12907 = !DILocation(line: 4658, column: 12, scope: !12904)
!12908 = !DILocalVariable(name: "f_color", scope: !12904, file: !3, line: 4658, type: !638)
!12909 = !DILocation(line: 4658, column: 23, scope: !12904)
!12910 = !DILocalVariable(name: "p_wetness", scope: !12904, file: !3, line: 4659, type: !207)
!12911 = !DILocation(line: 4659, column: 12, scope: !12904)
!12912 = !DILocation(line: 4659, column: 24, scope: !12904)
!12913 = !DILocation(line: 4659, column: 32, scope: !12904)
!12914 = !DILocation(line: 4660, column: 22, scope: !12904)
!12915 = !DILocation(line: 4660, column: 30, scope: !12904)
!12916 = !DILocation(line: 4660, column: 39, scope: !12904)
!12917 = !DILocation(line: 4660, column: 48, scope: !12904)
!12918 = !DILocation(line: 4660, column: 59, scope: !12904)
!12919 = !DILocation(line: 4660, column: 71, scope: !12904)
!12920 = !DILocation(line: 4660, column: 80, scope: !12904)
!12921 = !DILocation(line: 4660, column: 86, scope: !12904)
!12922 = !DILocation(line: 4660, column: 6, scope: !12904)
!12923 = !DILocation(line: 4661, column: 10, scope: !12924)
!12924 = distinct !DILexicalBlock(scope: !12904, file: !3, line: 4661, column: 10)
!12925 = !DILocation(line: 4661, column: 18, scope: !12924)
!12926 = !DILocation(line: 4661, column: 26, scope: !12924)
!12927 = !DILocation(line: 4661, column: 10, scope: !12904)
!12928 = !DILocation(line: 4661, column: 34, scope: !12924)
!12929 = !DILocation(line: 4661, column: 42, scope: !12924)
!12930 = !DILocation(line: 4661, column: 50, scope: !12924)
!12931 = !DILocation(line: 4663, column: 10, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12904, file: !3, line: 4663, column: 10)
!12933 = !DILocation(line: 4663, column: 18, scope: !12932)
!12934 = !DILocation(line: 4663, column: 28, scope: !12932)
!12935 = !DILocation(line: 4663, column: 37, scope: !12932)
!12936 = !DILocation(line: 4663, column: 26, scope: !12932)
!12937 = !DILocation(line: 4663, column: 10, scope: !12904)
!12938 = !DILocation(line: 4664, column: 19, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12932, file: !3, line: 4663, column: 58)
!12940 = !DILocation(line: 4664, column: 27, scope: !12939)
!12941 = !DILocation(line: 4664, column: 37, scope: !12939)
!12942 = !DILocation(line: 4664, column: 35, scope: !12939)
!12943 = !DILocation(line: 4664, column: 17, scope: !12939)
!12944 = !DILocation(line: 4670, column: 7, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12946, file: !3, line: 4670, column: 7)
!12946 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 4670, column: 7)
!12947 = !DILocation(line: 4670, column: 7, scope: !12946)
!12948 = !DILocation(line: 4670, column: 7, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 4670, column: 7)
!12950 = !DILocation(line: 4671, column: 7, scope: !12951)
!12951 = distinct !DILexicalBlock(scope: !12952, file: !3, line: 4671, column: 7)
!12952 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 4671, column: 7)
!12953 = !DILocation(line: 4671, column: 7, scope: !12952)
!12954 = !DILocation(line: 4671, column: 7, scope: !12955)
!12955 = distinct !DILexicalBlock(scope: !12951, file: !3, line: 4671, column: 7)
!12956 = !DILocation(line: 4674, column: 19, scope: !12939)
!12957 = !DILocation(line: 4674, column: 27, scope: !12939)
!12958 = !DILocation(line: 4674, column: 34, scope: !12939)
!12959 = !DILocation(line: 4674, column: 42, scope: !12939)
!12960 = !DILocation(line: 4674, column: 49, scope: !12939)
!12961 = !DILocation(line: 4674, column: 57, scope: !12939)
!12962 = !DILocation(line: 4674, column: 66, scope: !12939)
!12963 = !DILocation(line: 4674, column: 74, scope: !12939)
!12964 = !DILocation(line: 4674, column: 83, scope: !12939)
!12965 = !DILocation(line: 4674, column: 7, scope: !12939)
!12966 = !DILocation(line: 4676, column: 26, scope: !12939)
!12967 = !DILocation(line: 4676, column: 7, scope: !12939)
!12968 = !DILocation(line: 4676, column: 15, scope: !12939)
!12969 = !DILocation(line: 4676, column: 23, scope: !12939)
!12970 = !DILocation(line: 4679, column: 24, scope: !12939)
!12971 = !DILocation(line: 4679, column: 37, scope: !12939)
!12972 = !DILocation(line: 4679, column: 45, scope: !12939)
!12973 = !DILocation(line: 4679, column: 35, scope: !12939)
!12974 = !DILocation(line: 4679, column: 64, scope: !12939)
!12975 = !DILocation(line: 4679, column: 72, scope: !12939)
!12976 = !DILocation(line: 4679, column: 62, scope: !12939)
!12977 = !DILocation(line: 4679, column: 54, scope: !12939)
!12978 = !DILocation(line: 4679, column: 7, scope: !12939)
!12979 = !DILocation(line: 4679, column: 15, scope: !12939)
!12980 = !DILocation(line: 4679, column: 21, scope: !12939)
!12981 = !DILocation(line: 4682, column: 11, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12939, file: !3, line: 4682, column: 11)
!12983 = !DILocation(line: 4682, column: 19, scope: !12982)
!12984 = !DILocation(line: 4682, column: 11, scope: !12939)
!12985 = !DILocation(line: 4683, column: 15, scope: !12986)
!12986 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 4683, column: 8)
!12987 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 4682, column: 26)
!12988 = !DILocation(line: 4683, column: 13, scope: !12986)
!12989 = !DILocation(line: 4683, column: 20, scope: !12990)
!12990 = distinct !DILexicalBlock(scope: !12986, file: !3, line: 4683, column: 8)
!12991 = !DILocation(line: 4683, column: 22, scope: !12990)
!12992 = !DILocation(line: 4683, column: 8, scope: !12986)
!12993 = !DILocation(line: 4684, column: 37, scope: !12994)
!12994 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 4683, column: 32)
!12995 = !DILocation(line: 4684, column: 29, scope: !12994)
!12996 = !DILocation(line: 4684, column: 42, scope: !12994)
!12997 = !DILocation(line: 4684, column: 40, scope: !12994)
!12998 = !DILocation(line: 4684, column: 55, scope: !12994)
!12999 = !DILocation(line: 4684, column: 63, scope: !12994)
!13000 = !DILocation(line: 4684, column: 71, scope: !12994)
!13001 = !DILocation(line: 4684, column: 76, scope: !12994)
!13002 = !DILocation(line: 4684, column: 84, scope: !12994)
!13003 = !DILocation(line: 4684, column: 74, scope: !12994)
!13004 = !DILocation(line: 4684, column: 53, scope: !12994)
!13005 = !DILocation(line: 4684, column: 96, scope: !12994)
!13006 = !DILocation(line: 4684, column: 104, scope: !12994)
!13007 = !DILocation(line: 4684, column: 120, scope: !12994)
!13008 = !DILocation(line: 4684, column: 128, scope: !12994)
!13009 = !DILocation(line: 4684, column: 118, scope: !12994)
!13010 = !DILocation(line: 4684, column: 110, scope: !12994)
!13011 = !DILocation(line: 4684, column: 93, scope: !12994)
!13012 = !DILocation(line: 4684, column: 9, scope: !12994)
!13013 = !DILocation(line: 4684, column: 17, scope: !12994)
!13014 = !DILocation(line: 4684, column: 23, scope: !12994)
!13015 = !DILocation(line: 4684, column: 26, scope: !12994)
!13016 = !DILocation(line: 4685, column: 8, scope: !12994)
!13017 = !DILocation(line: 4683, column: 28, scope: !12990)
!13018 = !DILocation(line: 4683, column: 8, scope: !12990)
!13019 = distinct !{!13019, !12992, !13020}
!13020 = !DILocation(line: 4685, column: 8, scope: !12986)
!13021 = !DILocation(line: 4686, column: 7, scope: !12987)
!13022 = !DILocation(line: 4687, column: 6, scope: !12939)
!13023 = !DILocation(line: 4689, column: 6, scope: !12904)
!13024 = !DILocation(line: 4689, column: 14, scope: !12904)
!13025 = !DILocation(line: 4689, column: 20, scope: !12904)
!13026 = !DILocation(line: 4690, column: 5, scope: !12904)
!13027 = !DILocation(line: 4692, column: 14, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !12898, file: !3, line: 4692, column: 14)
!13029 = !DILocation(line: 4692, column: 22, scope: !13028)
!13030 = !DILocation(line: 4692, column: 28, scope: !13028)
!13031 = !DILocation(line: 4692, column: 14, scope: !12898)
!13032 = !DILocalVariable(name: "f_color", scope: !13033, file: !3, line: 4693, type: !638)
!13033 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 4692, column: 33)
!13034 = !DILocation(line: 4693, column: 12, scope: !13033)
!13035 = !DILocation(line: 4694, column: 18, scope: !13033)
!13036 = !DILocation(line: 4694, column: 26, scope: !13033)
!13037 = !DILocation(line: 4694, column: 33, scope: !13033)
!13038 = !DILocation(line: 4694, column: 41, scope: !13033)
!13039 = !DILocation(line: 4694, column: 48, scope: !13033)
!13040 = !DILocation(line: 4694, column: 56, scope: !13033)
!13041 = !DILocation(line: 4694, column: 65, scope: !13033)
!13042 = !DILocation(line: 4694, column: 73, scope: !13033)
!13043 = !DILocation(line: 4694, column: 82, scope: !13033)
!13044 = !DILocation(line: 4694, column: 6, scope: !13033)
!13045 = !DILocation(line: 4695, column: 17, scope: !13033)
!13046 = !DILocation(line: 4695, column: 25, scope: !13033)
!13047 = !DILocation(line: 4695, column: 32, scope: !13033)
!13048 = !DILocation(line: 4695, column: 6, scope: !13033)
!13049 = !DILocation(line: 4696, column: 22, scope: !13033)
!13050 = !DILocation(line: 4696, column: 6, scope: !13033)
!13051 = !DILocation(line: 4696, column: 14, scope: !13033)
!13052 = !DILocation(line: 4696, column: 20, scope: !13033)
!13053 = !DILocation(line: 4698, column: 6, scope: !13033)
!13054 = !DILocation(line: 4698, column: 14, scope: !13033)
!13055 = !DILocation(line: 4698, column: 22, scope: !13033)
!13056 = !DILocation(line: 4699, column: 6, scope: !13033)
!13057 = !DILocation(line: 4699, column: 14, scope: !13033)
!13058 = !DILocation(line: 4699, column: 22, scope: !13033)
!13059 = !DILocation(line: 4700, column: 6, scope: !13033)
!13060 = !DILocation(line: 4700, column: 14, scope: !13033)
!13061 = !DILocation(line: 4700, column: 20, scope: !13033)
!13062 = !DILocation(line: 4701, column: 5, scope: !13033)
!13063 = !DILocation(line: 4702, column: 4, scope: !12899)
!13064 = !DILocation(line: 4704, column: 8, scope: !13065)
!13065 = distinct !DILexicalBlock(scope: !12885, file: !3, line: 4704, column: 8)
!13066 = !DILocation(line: 4704, column: 17, scope: !13065)
!13067 = !DILocation(line: 4704, column: 23, scope: !13065)
!13068 = !DILocation(line: 4704, column: 8, scope: !12885)
!13069 = !DILocation(line: 4705, column: 21, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13065, file: !3, line: 4704, column: 46)
!13071 = !DILocation(line: 4705, column: 29, scope: !13070)
!13072 = !DILocation(line: 4705, column: 36, scope: !13070)
!13073 = !DILocation(line: 4705, column: 45, scope: !13070)
!13074 = !DILocation(line: 4705, column: 57, scope: !13070)
!13075 = !DILocation(line: 4705, column: 69, scope: !13070)
!13076 = !DILocation(line: 4705, column: 78, scope: !13070)
!13077 = !DILocation(line: 4705, column: 84, scope: !13070)
!13078 = !DILocation(line: 4705, column: 5, scope: !13070)
!13079 = !DILocation(line: 4706, column: 9, scope: !13080)
!13080 = distinct !DILexicalBlock(scope: !13070, file: !3, line: 4706, column: 9)
!13081 = !DILocation(line: 4706, column: 17, scope: !13080)
!13082 = !DILocation(line: 4706, column: 23, scope: !13080)
!13083 = !DILocation(line: 4706, column: 9, scope: !13070)
!13084 = !DILocation(line: 4706, column: 31, scope: !13080)
!13085 = !DILocation(line: 4706, column: 39, scope: !13080)
!13086 = !DILocation(line: 4706, column: 45, scope: !13080)
!13087 = !DILocation(line: 4708, column: 21, scope: !13070)
!13088 = !DILocation(line: 4708, column: 29, scope: !13070)
!13089 = !DILocation(line: 4708, column: 38, scope: !13070)
!13090 = !DILocation(line: 4708, column: 47, scope: !13070)
!13091 = !DILocation(line: 4708, column: 59, scope: !13070)
!13092 = !DILocation(line: 4708, column: 71, scope: !13070)
!13093 = !DILocation(line: 4708, column: 80, scope: !13070)
!13094 = !DILocation(line: 4708, column: 86, scope: !13070)
!13095 = !DILocation(line: 4708, column: 5, scope: !13070)
!13096 = !DILocation(line: 4709, column: 9, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !13070, file: !3, line: 4709, column: 9)
!13098 = !DILocation(line: 4709, column: 17, scope: !13097)
!13099 = !DILocation(line: 4709, column: 25, scope: !13097)
!13100 = !DILocation(line: 4709, column: 9, scope: !13070)
!13101 = !DILocation(line: 4709, column: 33, scope: !13097)
!13102 = !DILocation(line: 4709, column: 41, scope: !13097)
!13103 = !DILocation(line: 4709, column: 49, scope: !13097)
!13104 = !DILocation(line: 4710, column: 4, scope: !13070)
!13105 = !DILocation(line: 4711, column: 3, scope: !12885)
!13106 = !DILocation(line: 4713, column: 12, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 4713, column: 12)
!13108 = !DILocation(line: 4713, column: 21, scope: !13107)
!13109 = !DILocation(line: 4713, column: 27, scope: !13107)
!13110 = !DILocation(line: 4713, column: 49, scope: !13107)
!13111 = !DILocation(line: 4714, column: 13, scope: !13107)
!13112 = !DILocation(line: 4714, column: 22, scope: !13107)
!13113 = !DILocation(line: 4714, column: 27, scope: !13107)
!13114 = !DILocation(line: 4714, column: 60, scope: !13107)
!13115 = !DILocation(line: 4715, column: 13, scope: !13107)
!13116 = !DILocation(line: 4715, column: 22, scope: !13107)
!13117 = !DILocation(line: 4715, column: 27, scope: !13107)
!13118 = !DILocation(line: 4713, column: 12, scope: !12879)
!13119 = !DILocalVariable(name: "point", scope: !13120, file: !3, line: 4718, type: !233)
!13120 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 4716, column: 3)
!13121 = !DILocation(line: 4718, column: 11, scope: !13120)
!13122 = !DILocation(line: 4718, column: 30, scope: !13120)
!13123 = !DILocation(line: 4718, column: 37, scope: !13120)
!13124 = !DILocation(line: 4718, column: 21, scope: !13120)
!13125 = !DILocation(line: 4718, column: 48, scope: !13120)
!13126 = !DILocation(line: 4718, column: 20, scope: !13120)
!13127 = !DILocation(line: 4720, column: 19, scope: !13120)
!13128 = !DILocation(line: 4720, column: 26, scope: !13120)
!13129 = !DILocation(line: 4720, column: 35, scope: !13120)
!13130 = !DILocation(line: 4720, column: 47, scope: !13120)
!13131 = !DILocation(line: 4720, column: 59, scope: !13120)
!13132 = !DILocation(line: 4720, column: 68, scope: !13120)
!13133 = !DILocation(line: 4720, column: 74, scope: !13120)
!13134 = !DILocation(line: 4720, column: 4, scope: !13120)
!13135 = !DILocation(line: 4721, column: 9, scope: !13136)
!13136 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 4721, column: 8)
!13137 = !DILocation(line: 4721, column: 8, scope: !13136)
!13138 = !DILocation(line: 4721, column: 15, scope: !13136)
!13139 = !DILocation(line: 4721, column: 8, scope: !13120)
!13140 = !DILocation(line: 4721, column: 24, scope: !13136)
!13141 = !DILocation(line: 4721, column: 30, scope: !13136)
!13142 = !DILocation(line: 4721, column: 23, scope: !13136)
!13143 = !DILocation(line: 4722, column: 3, scope: !13120)
!13144 = !DILocation(line: 4723, column: 2, scope: !12880)
!13145 = !DILocation(line: 4650, column: 52, scope: !12873)
!13146 = !DILocation(line: 4650, column: 2, scope: !12873)
!13147 = distinct !{!13147, !12877, !13148}
!13148 = !DILocation(line: 4723, column: 2, scope: !12870)
!13149 = !DILocation(line: 4724, column: 1, scope: !12856)
!13150 = distinct !DISubprogram(name: "scene_setSubframe", scope: !3, file: !3, line: 579, type: !13151, scopeLine: 580, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!13151 = !DISubroutineType(types: !13152)
!13152 = !{null, !4204, !207}
!13153 = !DILocalVariable(name: "scene", arg: 1, scope: !13150, file: !3, line: 579, type: !4204)
!13154 = !DILocation(line: 579, column: 38, scope: !13150)
!13155 = !DILocalVariable(name: "subframe", arg: 2, scope: !13150, file: !3, line: 579, type: !207)
!13156 = !DILocation(line: 579, column: 51, scope: !13150)
!13157 = !DILocation(line: 582, column: 2, scope: !13150)
!13158 = !DILocation(line: 582, column: 9, scope: !13150)
!13159 = !DILocation(line: 582, column: 11, scope: !13150)
!13160 = !DILocation(line: 582, column: 16, scope: !13150)
!13161 = !DILocation(line: 583, column: 22, scope: !13150)
!13162 = !DILocation(line: 583, column: 2, scope: !13150)
!13163 = !DILocation(line: 583, column: 9, scope: !13150)
!13164 = !DILocation(line: 583, column: 11, scope: !13150)
!13165 = !DILocation(line: 583, column: 20, scope: !13150)
!13166 = !DILocation(line: 584, column: 1, scope: !13150)
!13167 = distinct !DISubprogram(name: "subframe_updateObject", scope: !3, file: !3, line: 511, type: !13168, scopeLine: 512, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!13168 = !DISubroutineType(types: !13169)
!13169 = !{!135, !4204, !3426, !135, !135, !207}
!13170 = !DILocalVariable(name: "scene", arg: 1, scope: !13167, file: !3, line: 511, type: !4204)
!13171 = !DILocation(line: 511, column: 41, scope: !13167)
!13172 = !DILocalVariable(name: "ob", arg: 2, scope: !13167, file: !3, line: 511, type: !3426)
!13173 = !DILocation(line: 511, column: 56, scope: !13167)
!13174 = !DILocalVariable(name: "flags", arg: 3, scope: !13167, file: !3, line: 511, type: !135)
!13175 = !DILocation(line: 511, column: 64, scope: !13167)
!13176 = !DILocalVariable(name: "parent_recursion", arg: 4, scope: !13167, file: !3, line: 511, type: !135)
!13177 = !DILocation(line: 511, column: 75, scope: !13167)
!13178 = !DILocalVariable(name: "frame", arg: 5, scope: !13167, file: !3, line: 511, type: !207)
!13179 = !DILocation(line: 511, column: 99, scope: !13167)
!13180 = !DILocalVariable(name: "pmd", scope: !13167, file: !3, line: 513, type: !3242)
!13181 = !DILocation(line: 513, column: 28, scope: !13167)
!13182 = !DILocation(line: 513, column: 83, scope: !13167)
!13183 = !DILocation(line: 513, column: 62, scope: !13167)
!13184 = !DILocation(line: 513, column: 34, scope: !13167)
!13185 = !DILocalVariable(name: "con", scope: !13167, file: !3, line: 514, type: !13186)
!13186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13187, size: 64)
!13187 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !3083, line: 76, baseType: !13188)
!13188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !3083, line: 54, size: 960, elements: !13189)
!13189 = !{!13190, !13192, !13193, !13194, !13195, !13196, !13197, !13198, !13199, !13200, !13201, !13202, !13203, !13204}
!13190 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13188, file: !3083, line: 55, baseType: !13191, size: 64)
!13191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13188, size: 64)
!13192 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13188, file: !3083, line: 55, baseType: !13191, size: 64, offset: 64)
!13193 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !13188, file: !3083, line: 57, baseType: !221, size: 64, offset: 128)
!13194 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13188, file: !3083, line: 58, baseType: !199, size: 16, offset: 192)
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13188, file: !3083, line: 59, baseType: !199, size: 16, offset: 208)
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !13188, file: !3083, line: 61, baseType: !271, size: 8, offset: 224)
!13197 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !13188, file: !3083, line: 62, baseType: !271, size: 8, offset: 232)
!13198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13188, file: !3083, line: 64, baseType: !270, size: 512, offset: 240)
!13199 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13188, file: !3083, line: 66, baseType: !199, size: 16, offset: 752)
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !13188, file: !3083, line: 68, baseType: !207, size: 32, offset: 768)
!13201 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !13188, file: !3083, line: 69, baseType: !207, size: 32, offset: 800)
!13202 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !13188, file: !3083, line: 71, baseType: !434, size: 64, offset: 832)
!13203 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !13188, file: !3083, line: 74, baseType: !207, size: 32, offset: 896)
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !13188, file: !3083, line: 75, baseType: !207, size: 32, offset: 928)
!13205 = !DILocation(line: 514, column: 15, scope: !13167)
!13206 = !DILocation(line: 517, column: 6, scope: !13207)
!13207 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 517, column: 6)
!13208 = !DILocation(line: 517, column: 10, scope: !13207)
!13209 = !DILocation(line: 517, column: 13, scope: !13207)
!13210 = !DILocation(line: 517, column: 18, scope: !13207)
!13211 = !DILocation(line: 517, column: 6, scope: !13167)
!13212 = !DILocation(line: 518, column: 3, scope: !13207)
!13213 = !DILocation(line: 521, column: 6, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 521, column: 6)
!13215 = !DILocation(line: 521, column: 6, scope: !13167)
!13216 = !DILocalVariable(name: "recursion", scope: !13217, file: !3, line: 522, type: !135)
!13217 = distinct !DILexicalBlock(scope: !13214, file: !3, line: 521, column: 24)
!13218 = !DILocation(line: 522, column: 7, scope: !13217)
!13219 = !DILocation(line: 522, column: 19, scope: !13217)
!13220 = !DILocation(line: 522, column: 36, scope: !13217)
!13221 = !DILocalVariable(name: "is_canvas", scope: !13217, file: !3, line: 523, type: !135)
!13222 = !DILocation(line: 523, column: 7, scope: !13217)
!13223 = !DILocation(line: 524, column: 7, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 524, column: 7)
!13225 = !DILocation(line: 524, column: 11, scope: !13224)
!13226 = !DILocation(line: 524, column: 7, scope: !13217)
!13227 = !DILocation(line: 524, column: 54, scope: !13224)
!13228 = !DILocation(line: 524, column: 61, scope: !13224)
!13229 = !DILocation(line: 524, column: 65, scope: !13224)
!13230 = !DILocation(line: 524, column: 76, scope: !13224)
!13231 = !DILocation(line: 524, column: 87, scope: !13224)
!13232 = !DILocation(line: 524, column: 32, scope: !13224)
!13233 = !DILocation(line: 524, column: 29, scope: !13224)
!13234 = !DILocation(line: 524, column: 19, scope: !13224)
!13235 = !DILocation(line: 525, column: 7, scope: !13236)
!13236 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 525, column: 7)
!13237 = !DILocation(line: 525, column: 11, scope: !13236)
!13238 = !DILocation(line: 525, column: 7, scope: !13217)
!13239 = !DILocation(line: 525, column: 53, scope: !13236)
!13240 = !DILocation(line: 525, column: 60, scope: !13236)
!13241 = !DILocation(line: 525, column: 64, scope: !13236)
!13242 = !DILocation(line: 525, column: 74, scope: !13236)
!13243 = !DILocation(line: 525, column: 85, scope: !13236)
!13244 = !DILocation(line: 525, column: 31, scope: !13236)
!13245 = !DILocation(line: 525, column: 28, scope: !13236)
!13246 = !DILocation(line: 525, column: 18, scope: !13236)
!13247 = !DILocation(line: 529, column: 7, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 529, column: 7)
!13249 = !DILocation(line: 529, column: 17, scope: !13248)
!13250 = !DILocation(line: 529, column: 21, scope: !13248)
!13251 = !DILocation(line: 529, column: 25, scope: !13248)
!13252 = !DILocation(line: 529, column: 33, scope: !13248)
!13253 = !DILocation(line: 529, column: 45, scope: !13248)
!13254 = !DILocation(line: 529, column: 48, scope: !13248)
!13255 = !DILocation(line: 529, column: 52, scope: !13248)
!13256 = !DILocation(line: 529, column: 60, scope: !13248)
!13257 = !DILocation(line: 529, column: 7, scope: !13217)
!13258 = !DILocation(line: 530, column: 4, scope: !13248)
!13259 = !DILocation(line: 533, column: 14, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13217, file: !3, line: 533, column: 3)
!13261 = !DILocation(line: 533, column: 18, scope: !13260)
!13262 = !DILocation(line: 533, column: 30, scope: !13260)
!13263 = !DILocation(line: 533, column: 12, scope: !13260)
!13264 = !DILocation(line: 533, column: 8, scope: !13260)
!13265 = !DILocation(line: 533, column: 37, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13260, file: !3, line: 533, column: 3)
!13267 = !DILocation(line: 533, column: 3, scope: !13260)
!13268 = !DILocalVariable(name: "cti", scope: !13269, file: !3, line: 534, type: !13270)
!13269 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 533, column: 59)
!13270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13271, size: 64)
!13271 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !13272, line: 108, baseType: !13273)
!13272 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !13272, line: 80, size: 1088, elements: !13274)
!13274 = !{!13275, !13276, !13277, !13278, !13279, !13283, !13292, !13296, !13300, !13304, !13308, !13410}
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13273, file: !13272, line: 82, baseType: !199, size: 16)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13273, file: !13272, line: 83, baseType: !199, size: 16, offset: 16)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13273, file: !13272, line: 84, baseType: !2946, size: 256, offset: 32)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !13273, file: !13272, line: 85, baseType: !2946, size: 256, offset: 288)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !13273, file: !13272, line: 89, baseType: !13280, size: 64, offset: 576)
!13280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13281, size: 64)
!13281 = !DISubroutineType(types: !13282)
!13282 = !{null, !13191}
!13283 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !13273, file: !13272, line: 91, baseType: !13284, size: 64, offset: 640)
!13284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13285, size: 64)
!13285 = !DISubroutineType(types: !13286)
!13286 = !{null, !13191, !13287, !221}
!13287 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !13272, line: 65, baseType: !13288)
!13288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13289, size: 64)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{null, !13191, !13291, !866, !221}
!13291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !13273, file: !13272, line: 93, baseType: !13293, size: 64, offset: 704)
!13293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13294, size: 64)
!13294 = !DISubroutineType(types: !13295)
!13295 = !{null, !13191, !13191}
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !13273, file: !13272, line: 95, baseType: !13297, size: 64, offset: 768)
!13297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13298, size: 64)
!13298 = !DISubroutineType(types: !13299)
!13299 = !{null, !221}
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !13273, file: !13272, line: 99, baseType: !13301, size: 64, offset: 832)
!13301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13302, size: 64)
!13302 = !DISubroutineType(types: !13303)
!13303 = !{!135, !13191, !1676}
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !13273, file: !13272, line: 101, baseType: !13305, size: 64, offset: 896)
!13305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13306, size: 64)
!13306 = !DISubroutineType(types: !13307)
!13307 = !{null, !13191, !1676, !866}
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !13273, file: !13272, line: 105, baseType: !13309, size: 64, offset: 960)
!13309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13310, size: 64)
!13310 = !DISubroutineType(types: !13311)
!13311 = !{null, !13191, !13312, !13398, !207}
!13312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13313, size: 64)
!13313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !13272, line: 50, size: 1280, elements: !13314)
!13314 = !{!13315, !13316, !13317, !13394, !13395, !13396, !13397}
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !13313, file: !13272, line: 51, baseType: !275, size: 64)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !13313, file: !13272, line: 52, baseType: !414, size: 64, offset: 64)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !13313, file: !13272, line: 53, baseType: !13318, size: 64, offset: 128)
!13318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13319, size: 64)
!13319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !351, line: 187, size: 4352, elements: !13320)
!13320 = !{!13321, !13322, !13323, !13324, !13325, !13326, !13327, !13328, !13329, !13330, !13331, !13332, !13333, !13367, !13368, !13369, !13370, !13371, !13372, !13373, !13374, !13375, !13376, !13377, !13378, !13379, !13380, !13381, !13382, !13383, !13384, !13385, !13386, !13387, !13388, !13389, !13390, !13391, !13392, !13393}
!13321 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13319, file: !351, line: 188, baseType: !13318, size: 64)
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13319, file: !351, line: 188, baseType: !13318, size: 64, offset: 64)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !13319, file: !351, line: 190, baseType: !316, size: 64, offset: 128)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !13319, file: !351, line: 192, baseType: !334, size: 128, offset: 192)
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13319, file: !351, line: 193, baseType: !270, size: 512, offset: 320)
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13319, file: !351, line: 195, baseType: !199, size: 16, offset: 832)
!13327 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !13319, file: !351, line: 196, baseType: !199, size: 16, offset: 848)
!13328 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !13319, file: !351, line: 197, baseType: !199, size: 16, offset: 864)
!13329 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !13319, file: !351, line: 198, baseType: !199, size: 16, offset: 880)
!13330 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !13319, file: !351, line: 199, baseType: !271, size: 8, offset: 896)
!13331 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !13319, file: !351, line: 200, baseType: !271, size: 8, offset: 904)
!13332 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !13319, file: !351, line: 201, baseType: !2743, size: 48, offset: 912)
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !13319, file: !351, line: 203, baseType: !13334, size: 64, offset: 960)
!13334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13335, size: 64)
!13335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !13336, line: 48, size: 2624, elements: !13337)
!13336 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13337 = !{!13338, !13339, !13340, !13341, !13342, !13343, !13344, !13345, !13346, !13347, !13348, !13349, !13350, !13351, !13352, !13353, !13354, !13355, !13356, !13357, !13358, !13359, !13360, !13361, !13362, !13363, !13364, !13365}
!13338 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13335, file: !13336, line: 49, baseType: !13334, size: 64)
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13335, file: !13336, line: 49, baseType: !13334, size: 64, offset: 64)
!13340 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !13335, file: !13336, line: 50, baseType: !316, size: 64, offset: 128)
!13341 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !13335, file: !13336, line: 51, baseType: !13334, size: 64, offset: 192)
!13342 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !13335, file: !13336, line: 52, baseType: !334, size: 128, offset: 256)
!13343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !13335, file: !13336, line: 53, baseType: !270, size: 512, offset: 384)
!13344 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !13335, file: !13336, line: 55, baseType: !207, size: 32, offset: 896)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !13335, file: !13336, line: 56, baseType: !206, size: 96, offset: 928)
!13346 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !13335, file: !13336, line: 57, baseType: !206, size: 96, offset: 1024)
!13347 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !13335, file: !13336, line: 58, baseType: !938, size: 288, offset: 1120)
!13348 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13335, file: !13336, line: 60, baseType: !135, size: 32, offset: 1408)
!13349 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !13335, file: !13336, line: 62, baseType: !206, size: 96, offset: 1440)
!13350 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !13335, file: !13336, line: 63, baseType: !206, size: 96, offset: 1536)
!13351 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !13335, file: !13336, line: 64, baseType: !935, size: 512, offset: 1632)
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !13335, file: !13336, line: 65, baseType: !207, size: 32, offset: 2144)
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !13335, file: !13336, line: 67, baseType: !207, size: 32, offset: 2176)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !13335, file: !13336, line: 67, baseType: !207, size: 32, offset: 2208)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !13335, file: !13336, line: 68, baseType: !207, size: 32, offset: 2240)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !13335, file: !13336, line: 68, baseType: !207, size: 32, offset: 2272)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !13335, file: !13336, line: 68, baseType: !207, size: 32, offset: 2304)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !13335, file: !13336, line: 69, baseType: !207, size: 32, offset: 2336)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !13335, file: !13336, line: 69, baseType: !207, size: 32, offset: 2368)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !13335, file: !13336, line: 70, baseType: !207, size: 32, offset: 2400)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !13335, file: !13336, line: 70, baseType: !207, size: 32, offset: 2432)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13335, file: !13336, line: 72, baseType: !206, size: 96, offset: 2464)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !13335, file: !13336, line: 73, baseType: !135, size: 32, offset: 2560)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !13335, file: !13336, line: 74, baseType: !199, size: 16, offset: 2592)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13335, file: !13336, line: 75, baseType: !13366, size: 16, offset: 2608)
!13366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 16, elements: !656)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !13319, file: !351, line: 204, baseType: !13318, size: 64, offset: 1024)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !13319, file: !351, line: 205, baseType: !13318, size: 64, offset: 1088)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !13319, file: !351, line: 207, baseType: !336, size: 128, offset: 1152)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !13319, file: !351, line: 208, baseType: !336, size: 128, offset: 1280)
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !13319, file: !351, line: 210, baseType: !497, size: 64, offset: 1408)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !13319, file: !351, line: 211, baseType: !414, size: 64, offset: 1472)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !13319, file: !351, line: 212, baseType: !13318, size: 64, offset: 1536)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !13319, file: !351, line: 217, baseType: !206, size: 96, offset: 1600)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13319, file: !351, line: 218, baseType: !206, size: 96, offset: 1696)
!13376 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !13319, file: !351, line: 221, baseType: !206, size: 96, offset: 1792)
!13377 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !13319, file: !351, line: 222, baseType: !638, size: 128, offset: 1888)
!13378 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !13319, file: !351, line: 223, baseType: !206, size: 96, offset: 2016)
!13379 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !13319, file: !351, line: 223, baseType: !207, size: 32, offset: 2112)
!13380 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !13319, file: !351, line: 224, baseType: !199, size: 16, offset: 2144)
!13381 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13319, file: !351, line: 225, baseType: !199, size: 16, offset: 2160)
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !13319, file: !351, line: 227, baseType: !935, size: 512, offset: 2176)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !13319, file: !351, line: 228, baseType: !935, size: 512, offset: 2688)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !13319, file: !351, line: 230, baseType: !935, size: 512, offset: 3200)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !13319, file: !351, line: 233, baseType: !206, size: 96, offset: 3712)
!13386 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !13319, file: !351, line: 234, baseType: !206, size: 96, offset: 3808)
!13387 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !13319, file: !351, line: 236, baseType: !206, size: 96, offset: 3904)
!13388 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !13319, file: !351, line: 236, baseType: !206, size: 96, offset: 4000)
!13389 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !13319, file: !351, line: 237, baseType: !206, size: 96, offset: 4096)
!13390 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !13319, file: !351, line: 238, baseType: !207, size: 32, offset: 4192)
!13391 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !13319, file: !351, line: 239, baseType: !207, size: 32, offset: 4224)
!13392 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !13319, file: !351, line: 240, baseType: !207, size: 32, offset: 4256)
!13393 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !13319, file: !351, line: 242, baseType: !221, size: 64, offset: 4288)
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !13313, file: !13272, line: 55, baseType: !935, size: 512, offset: 192)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !13313, file: !13272, line: 56, baseType: !935, size: 512, offset: 704)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13313, file: !13272, line: 58, baseType: !199, size: 16, offset: 1216)
!13397 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !13313, file: !13272, line: 59, baseType: !199, size: 16, offset: 1232)
!13398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13399, size: 64)
!13399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !3083, line: 85, size: 1280, elements: !13400)
!13400 = !{!13401, !13402, !13403, !13404, !13405, !13406, !13407, !13408, !13409}
!13401 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13399, file: !3083, line: 86, baseType: !13398, size: 64)
!13402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !13399, file: !3083, line: 86, baseType: !13398, size: 64, offset: 64)
!13403 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !13399, file: !3083, line: 88, baseType: !414, size: 64, offset: 128)
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !13399, file: !3083, line: 89, baseType: !270, size: 512, offset: 192)
!13405 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !13399, file: !3083, line: 91, baseType: !935, size: 512, offset: 704)
!13406 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !13399, file: !3083, line: 93, baseType: !199, size: 16, offset: 1216)
!13407 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13399, file: !3083, line: 94, baseType: !199, size: 16, offset: 1232)
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13399, file: !3083, line: 95, baseType: !199, size: 16, offset: 1248)
!13409 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !13399, file: !3083, line: 96, baseType: !199, size: 16, offset: 1264)
!13410 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !13273, file: !13272, line: 107, baseType: !13411, size: 64, offset: 1024)
!13411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13412, size: 64)
!13412 = !DISubroutineType(types: !13413)
!13413 = !{null, !13191, !13312, !1676}
!13414 = !DILocation(line: 534, column: 25, scope: !13269)
!13415 = !DILocation(line: 534, column: 59, scope: !13269)
!13416 = !DILocation(line: 534, column: 31, scope: !13269)
!13417 = !DILocalVariable(name: "targets", scope: !13269, file: !3, line: 535, type: !334)
!13418 = !DILocation(line: 535, column: 13, scope: !13269)
!13419 = !DILocation(line: 537, column: 8, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13269, file: !3, line: 537, column: 8)
!13421 = !DILocation(line: 537, column: 12, scope: !13420)
!13422 = !DILocation(line: 537, column: 15, scope: !13420)
!13423 = !DILocation(line: 537, column: 20, scope: !13420)
!13424 = !DILocation(line: 537, column: 8, scope: !13269)
!13425 = !DILocalVariable(name: "ct", scope: !13426, file: !3, line: 538, type: !13427)
!13426 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 537, column: 44)
!13427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13428, size: 64)
!13428 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !3083, line: 97, baseType: !13399)
!13429 = !DILocation(line: 538, column: 24, scope: !13426)
!13430 = !DILocation(line: 539, column: 5, scope: !13426)
!13431 = !DILocation(line: 539, column: 10, scope: !13426)
!13432 = !DILocation(line: 539, column: 33, scope: !13426)
!13433 = !DILocation(line: 540, column: 23, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 540, column: 5)
!13435 = !DILocation(line: 540, column: 15, scope: !13434)
!13436 = !DILocation(line: 540, column: 13, scope: !13434)
!13437 = !DILocation(line: 540, column: 10, scope: !13434)
!13438 = !DILocation(line: 540, column: 30, scope: !13439)
!13439 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 540, column: 5)
!13440 = !DILocation(line: 540, column: 5, scope: !13434)
!13441 = !DILocation(line: 541, column: 10, scope: !13442)
!13442 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 541, column: 10)
!13443 = distinct !DILexicalBlock(scope: !13439, file: !3, line: 540, column: 49)
!13444 = !DILocation(line: 541, column: 14, scope: !13442)
!13445 = !DILocation(line: 541, column: 10, scope: !13443)
!13446 = !DILocation(line: 542, column: 29, scope: !13442)
!13447 = !DILocation(line: 542, column: 36, scope: !13442)
!13448 = !DILocation(line: 542, column: 40, scope: !13442)
!13449 = !DILocation(line: 542, column: 48, scope: !13442)
!13450 = !DILocation(line: 542, column: 59, scope: !13442)
!13451 = !DILocation(line: 542, column: 7, scope: !13442)
!13452 = !DILocation(line: 543, column: 5, scope: !13443)
!13453 = !DILocation(line: 540, column: 39, scope: !13439)
!13454 = !DILocation(line: 540, column: 43, scope: !13439)
!13455 = !DILocation(line: 540, column: 37, scope: !13439)
!13456 = !DILocation(line: 540, column: 5, scope: !13439)
!13457 = distinct !{!13457, !13440, !13458}
!13458 = !DILocation(line: 543, column: 5, scope: !13434)
!13459 = !DILocation(line: 545, column: 9, scope: !13460)
!13460 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 545, column: 9)
!13461 = !DILocation(line: 545, column: 14, scope: !13460)
!13462 = !DILocation(line: 545, column: 9, scope: !13426)
!13463 = !DILocation(line: 546, column: 6, scope: !13460)
!13464 = !DILocation(line: 546, column: 11, scope: !13460)
!13465 = !DILocation(line: 546, column: 36, scope: !13460)
!13466 = !DILocation(line: 547, column: 4, scope: !13426)
!13467 = !DILocation(line: 548, column: 3, scope: !13269)
!13468 = !DILocation(line: 533, column: 48, scope: !13266)
!13469 = !DILocation(line: 533, column: 53, scope: !13266)
!13470 = !DILocation(line: 533, column: 46, scope: !13266)
!13471 = !DILocation(line: 533, column: 3, scope: !13266)
!13472 = distinct !{!13472, !13267, !13473}
!13473 = !DILocation(line: 548, column: 3, scope: !13260)
!13474 = !DILocation(line: 549, column: 2, scope: !13217)
!13475 = !DILocation(line: 552, column: 2, scope: !13167)
!13476 = !DILocation(line: 552, column: 6, scope: !13167)
!13477 = !DILocation(line: 552, column: 13, scope: !13167)
!13478 = !DILocation(line: 553, column: 32, scope: !13167)
!13479 = !DILocation(line: 553, column: 40, scope: !13167)
!13480 = !DILocation(line: 553, column: 44, scope: !13167)
!13481 = !DILocation(line: 553, column: 48, scope: !13167)
!13482 = !DILocation(line: 553, column: 52, scope: !13167)
!13483 = !DILocation(line: 553, column: 57, scope: !13167)
!13484 = !DILocation(line: 553, column: 2, scope: !13167)
!13485 = !DILocation(line: 554, column: 6, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 554, column: 6)
!13487 = !DILocation(line: 554, column: 12, scope: !13486)
!13488 = !DILocation(line: 554, column: 6, scope: !13167)
!13489 = !DILocation(line: 557, column: 27, scope: !13490)
!13490 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 554, column: 27)
!13491 = !DILocation(line: 557, column: 3, scope: !13490)
!13492 = !DILocation(line: 558, column: 30, scope: !13490)
!13493 = !DILocation(line: 558, column: 36, scope: !13490)
!13494 = !DILocation(line: 558, column: 46, scope: !13490)
!13495 = !DILocation(line: 558, column: 53, scope: !13490)
!13496 = !DILocation(line: 558, column: 3, scope: !13490)
!13497 = !DILocation(line: 559, column: 27, scope: !13490)
!13498 = !DILocation(line: 559, column: 3, scope: !13490)
!13499 = !DILocation(line: 560, column: 2, scope: !13490)
!13500 = !DILocation(line: 562, column: 33, scope: !13486)
!13501 = !DILocation(line: 562, column: 40, scope: !13486)
!13502 = !DILocation(line: 562, column: 44, scope: !13486)
!13503 = !DILocation(line: 562, column: 3, scope: !13486)
!13504 = !DILocation(line: 565, column: 6, scope: !13505)
!13505 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 565, column: 6)
!13506 = !DILocation(line: 565, column: 10, scope: !13505)
!13507 = !DILocation(line: 565, column: 15, scope: !13505)
!13508 = !DILocation(line: 565, column: 6, scope: !13167)
!13509 = !DILocalVariable(name: "cu", scope: !13510, file: !3, line: 566, type: !13511)
!13510 = distinct !DILexicalBlock(scope: !13505, file: !3, line: 565, column: 28)
!13511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13512, size: 64)
!13512 = !DIDerivedType(tag: DW_TAG_typedef, name: "Curve", file: !3478, line: 273, baseType: !13513)
!13513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Curve", file: !3478, line: 193, size: 4224, elements: !13514)
!13514 = !{!13515, !13516, !13517, !13518, !13519, !13529, !13530, !13531, !13532, !13533, !13534, !13535, !13536, !13537, !13538, !13539, !13540, !13541, !13542, !13543, !13544, !13545, !13546, !13547, !13548, !13549, !13550, !13551, !13552, !13553, !13554, !13555, !13556, !13557, !13558, !13559, !13560, !13561, !13562, !13563, !13564, !13565, !13566, !13567, !13568, !13569, !13570, !13571, !13572, !13573, !13574, !13575, !13576, !13577, !13580, !13581, !13584, !13585, !13586, !13587, !13595, !13596, !13597, !13606, !13607, !13608, !13609, !13610, !13611, !13612}
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13513, file: !3478, line: 194, baseType: !280, size: 960)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !13513, file: !3478, line: 195, baseType: !345, size: 64, offset: 960)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !13513, file: !3478, line: 197, baseType: !438, size: 64, offset: 1024)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "nurb", scope: !13513, file: !3478, line: 199, baseType: !334, size: 128, offset: 1088)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "editnurb", scope: !13513, file: !3478, line: 201, baseType: !13520, size: 64, offset: 1216)
!13520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13521, size: 64)
!13521 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditNurb", file: !3478, line: 191, baseType: !13522)
!13522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditNurb", file: !3478, line: 180, size: 256, elements: !13523)
!13523 = !{!13524, !13525, !13526, !13527}
!13524 = !DIDerivedType(tag: DW_TAG_member, name: "nurbs", scope: !13522, file: !3478, line: 182, baseType: !334, size: 128)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "keyindex", scope: !13522, file: !3478, line: 185, baseType: !456, size: 64, offset: 128)
!13526 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !13522, file: !3478, line: 188, baseType: !135, size: 32, offset: 192)
!13527 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13522, file: !3478, line: 190, baseType: !13528, size: 32, offset: 224)
!13528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 32, elements: !639)
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "bevobj", scope: !13513, file: !3478, line: 203, baseType: !414, size: 64, offset: 1280)
!13530 = !DIDerivedType(tag: DW_TAG_member, name: "taperobj", scope: !13513, file: !3478, line: 203, baseType: !414, size: 64, offset: 1344)
!13531 = !DIDerivedType(tag: DW_TAG_member, name: "textoncurve", scope: !13513, file: !3478, line: 203, baseType: !414, size: 64, offset: 1408)
!13532 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !13513, file: !3478, line: 204, baseType: !434, size: 64, offset: 1472)
!13533 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13513, file: !3478, line: 205, baseType: !3476, size: 64, offset: 1536)
!13534 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !13513, file: !3478, line: 206, baseType: !519, size: 64, offset: 1600)
!13535 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !13513, file: !3478, line: 209, baseType: !206, size: 96, offset: 1664)
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13513, file: !3478, line: 210, baseType: !206, size: 96, offset: 1760)
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !13513, file: !3478, line: 211, baseType: !206, size: 96, offset: 1856)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13513, file: !3478, line: 213, baseType: !199, size: 16, offset: 1952)
!13539 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !13513, file: !3478, line: 215, baseType: !199, size: 16, offset: 1968)
!13540 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !13513, file: !3478, line: 216, baseType: !199, size: 16, offset: 1984)
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "twist_mode", scope: !13513, file: !3478, line: 216, baseType: !199, size: 16, offset: 2000)
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "twist_smooth", scope: !13513, file: !3478, line: 217, baseType: !207, size: 32, offset: 2016)
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "smallcaps_scale", scope: !13513, file: !3478, line: 217, baseType: !207, size: 32, offset: 2048)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "pathlen", scope: !13513, file: !3478, line: 219, baseType: !135, size: 32, offset: 2080)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "bevresol", scope: !13513, file: !3478, line: 220, baseType: !199, size: 16, offset: 2112)
!13546 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !13513, file: !3478, line: 220, baseType: !199, size: 16, offset: 2128)
!13547 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13513, file: !3478, line: 221, baseType: !135, size: 32, offset: 2144)
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !13513, file: !3478, line: 222, baseType: !207, size: 32, offset: 2176)
!13549 = !DIDerivedType(tag: DW_TAG_member, name: "ext1", scope: !13513, file: !3478, line: 222, baseType: !207, size: 32, offset: 2208)
!13550 = !DIDerivedType(tag: DW_TAG_member, name: "ext2", scope: !13513, file: !3478, line: 222, baseType: !207, size: 32, offset: 2240)
!13551 = !DIDerivedType(tag: DW_TAG_member, name: "resolu", scope: !13513, file: !3478, line: 225, baseType: !199, size: 16, offset: 2272)
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "resolv", scope: !13513, file: !3478, line: 225, baseType: !199, size: 16, offset: 2288)
!13553 = !DIDerivedType(tag: DW_TAG_member, name: "resolu_ren", scope: !13513, file: !3478, line: 226, baseType: !199, size: 16, offset: 2304)
!13554 = !DIDerivedType(tag: DW_TAG_member, name: "resolv_ren", scope: !13513, file: !3478, line: 226, baseType: !199, size: 16, offset: 2320)
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "actnu", scope: !13513, file: !3478, line: 229, baseType: !135, size: 32, offset: 2336)
!13556 = !DIDerivedType(tag: DW_TAG_member, name: "actvert", scope: !13513, file: !3478, line: 231, baseType: !135, size: 32, offset: 2368)
!13557 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13513, file: !3478, line: 233, baseType: !13528, size: 32, offset: 2400)
!13558 = !DIDerivedType(tag: DW_TAG_member, name: "lines", scope: !13513, file: !3478, line: 236, baseType: !199, size: 16, offset: 2432)
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "spacemode", scope: !13513, file: !3478, line: 237, baseType: !271, size: 8, offset: 2448)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !13513, file: !3478, line: 237, baseType: !271, size: 8, offset: 2456)
!13561 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2464)
!13562 = !DIDerivedType(tag: DW_TAG_member, name: "linedist", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2496)
!13563 = !DIDerivedType(tag: DW_TAG_member, name: "shear", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2528)
!13564 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2560)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "wordspace", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2592)
!13566 = !DIDerivedType(tag: DW_TAG_member, name: "ulpos", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2624)
!13567 = !DIDerivedType(tag: DW_TAG_member, name: "ulheight", scope: !13513, file: !3478, line: 238, baseType: !207, size: 32, offset: 2656)
!13568 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !13513, file: !3478, line: 239, baseType: !207, size: 32, offset: 2688)
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !13513, file: !3478, line: 239, baseType: !207, size: 32, offset: 2720)
!13570 = !DIDerivedType(tag: DW_TAG_member, name: "linewidth", scope: !13513, file: !3478, line: 240, baseType: !207, size: 32, offset: 2752)
!13571 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !13513, file: !3478, line: 244, baseType: !135, size: 32, offset: 2784)
!13572 = !DIDerivedType(tag: DW_TAG_member, name: "selstart", scope: !13513, file: !3478, line: 245, baseType: !135, size: 32, offset: 2816)
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "selend", scope: !13513, file: !3478, line: 245, baseType: !135, size: 32, offset: 2848)
!13574 = !DIDerivedType(tag: DW_TAG_member, name: "len_wchar", scope: !13513, file: !3478, line: 248, baseType: !135, size: 32, offset: 2880)
!13575 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !13513, file: !3478, line: 249, baseType: !135, size: 32, offset: 2912)
!13576 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !13513, file: !3478, line: 250, baseType: !1166, size: 64, offset: 2944)
!13577 = !DIDerivedType(tag: DW_TAG_member, name: "editfont", scope: !13513, file: !3478, line: 251, baseType: !13578, size: 64, offset: 3008)
!13578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13579, size: 64)
!13579 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditFont", file: !3478, line: 50, flags: DIFlagFwdDecl)
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !13513, file: !3478, line: 253, baseType: !270, size: 512, offset: 3072)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !13513, file: !3478, line: 254, baseType: !13582, size: 64, offset: 3584)
!13582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13583, size: 64)
!13583 = !DICompositeType(tag: DW_TAG_structure_type, name: "VFont", file: !3478, line: 47, flags: DIFlagFwdDecl)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "vfontb", scope: !13513, file: !3478, line: 255, baseType: !13582, size: 64, offset: 3648)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "vfonti", scope: !13513, file: !3478, line: 256, baseType: !13582, size: 64, offset: 3712)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "vfontbi", scope: !13513, file: !3478, line: 257, baseType: !13582, size: 64, offset: 3776)
!13587 = !DIDerivedType(tag: DW_TAG_member, name: "tb", scope: !13513, file: !3478, line: 259, baseType: !13588, size: 64, offset: 3840)
!13588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13589, size: 64)
!13589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TextBox", file: !3478, line: 176, size: 128, elements: !13590)
!13590 = !{!13591, !13592, !13593, !13594}
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !13589, file: !3478, line: 177, baseType: !207, size: 32)
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !13589, file: !3478, line: 177, baseType: !207, size: 32, offset: 32)
!13593 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !13589, file: !3478, line: 177, baseType: !207, size: 32, offset: 64)
!13594 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !13589, file: !3478, line: 177, baseType: !207, size: 32, offset: 96)
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "totbox", scope: !13513, file: !3478, line: 260, baseType: !135, size: 32, offset: 3904)
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "actbox", scope: !13513, file: !3478, line: 260, baseType: !135, size: 32, offset: 3936)
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "strinfo", scope: !13513, file: !3478, line: 262, baseType: !13598, size: 64, offset: 3968)
!13598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13599, size: 64)
!13599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CharInfo", file: !3478, line: 168, size: 64, elements: !13600)
!13600 = !{!13601, !13602, !13603, !13604, !13605}
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "kern", scope: !13599, file: !3478, line: 169, baseType: !199, size: 16)
!13602 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !13599, file: !3478, line: 170, baseType: !199, size: 16, offset: 16)
!13603 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13599, file: !3478, line: 171, baseType: !271, size: 8, offset: 32)
!13604 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13599, file: !3478, line: 172, baseType: !271, size: 8, offset: 40)
!13605 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !13599, file: !3478, line: 173, baseType: !199, size: 16, offset: 48)
!13606 = !DIDerivedType(tag: DW_TAG_member, name: "curinfo", scope: !13513, file: !3478, line: 263, baseType: !13599, size: 64, offset: 4032)
!13607 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !13513, file: !3478, line: 267, baseType: !207, size: 32, offset: 4096)
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1", scope: !13513, file: !3478, line: 268, baseType: !207, size: 32, offset: 4128)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2", scope: !13513, file: !3478, line: 268, baseType: !207, size: 32, offset: 4160)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac1_mapping", scope: !13513, file: !3478, line: 269, baseType: !271, size: 8, offset: 4192)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "bevfac2_mapping", scope: !13513, file: !3478, line: 269, baseType: !271, size: 8, offset: 4200)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !13513, file: !3478, line: 271, baseType: !2708, size: 16, offset: 4208)
!13613 = !DILocation(line: 566, column: 10, scope: !13510)
!13614 = !DILocation(line: 566, column: 15, scope: !13510)
!13615 = !DILocation(line: 566, column: 19, scope: !13510)
!13616 = !DILocation(line: 567, column: 33, scope: !13510)
!13617 = !DILocation(line: 567, column: 41, scope: !13510)
!13618 = !DILocation(line: 567, column: 45, scope: !13510)
!13619 = !DILocation(line: 567, column: 49, scope: !13510)
!13620 = !DILocation(line: 567, column: 53, scope: !13510)
!13621 = !DILocation(line: 567, column: 58, scope: !13510)
!13622 = !DILocation(line: 567, column: 3, scope: !13510)
!13623 = !DILocation(line: 568, column: 2, scope: !13510)
!13624 = !DILocation(line: 570, column: 6, scope: !13625)
!13625 = distinct !DILexicalBlock(scope: !13167, file: !3, line: 570, column: 6)
!13626 = !DILocation(line: 570, column: 10, scope: !13625)
!13627 = !DILocation(line: 570, column: 15, scope: !13625)
!13628 = !DILocation(line: 570, column: 6, scope: !13167)
!13629 = !DILocalVariable(name: "arm", scope: !13630, file: !3, line: 571, type: !13631)
!13630 = distinct !DILexicalBlock(scope: !13625, file: !3, line: 570, column: 31)
!13631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13632, size: 64)
!13632 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !13336, line: 114, baseType: !13633)
!13633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !13336, line: 78, size: 2048, elements: !13634)
!13634 = !{!13635, !13636, !13637, !13638, !13639, !13640, !13643, !13646, !13647, !13648, !13649, !13650, !13651, !13652, !13653, !13654, !13655, !13656, !13657, !13658, !13659, !13660, !13661, !13662, !13663, !13664, !13665}
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13633, file: !13336, line: 79, baseType: !280, size: 960)
!13636 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !13633, file: !13336, line: 80, baseType: !345, size: 64, offset: 960)
!13637 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !13633, file: !13336, line: 82, baseType: !334, size: 128, offset: 1024)
!13638 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !13633, file: !13336, line: 83, baseType: !334, size: 128, offset: 1152)
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !13633, file: !13336, line: 84, baseType: !2444, size: 64, offset: 1280)
!13640 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !13633, file: !13336, line: 92, baseType: !13641, size: 64, offset: 1344)
!13641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13642, size: 64)
!13642 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !13336, line: 76, baseType: !13335)
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !13633, file: !13336, line: 93, baseType: !13644, size: 64, offset: 1408)
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13645, size: 64)
!13645 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !13336, line: 93, flags: DIFlagFwdDecl)
!13646 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !13633, file: !13336, line: 95, baseType: !221, size: 64, offset: 1472)
!13647 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !13633, file: !13336, line: 97, baseType: !135, size: 32, offset: 1536)
!13648 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !13633, file: !13336, line: 98, baseType: !135, size: 32, offset: 1568)
!13649 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !13633, file: !13336, line: 99, baseType: !135, size: 32, offset: 1600)
!13650 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !13633, file: !13336, line: 100, baseType: !135, size: 32, offset: 1632)
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !13633, file: !13336, line: 101, baseType: !199, size: 16, offset: 1664)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !13633, file: !13336, line: 102, baseType: !199, size: 16, offset: 1680)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !13633, file: !13336, line: 104, baseType: !7, size: 32, offset: 1696)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !13633, file: !13336, line: 105, baseType: !7, size: 32, offset: 1728)
!13655 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !13633, file: !13336, line: 105, baseType: !7, size: 32, offset: 1760)
!13656 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !13633, file: !13336, line: 108, baseType: !199, size: 16, offset: 1792)
!13657 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !13633, file: !13336, line: 108, baseType: !199, size: 16, offset: 1808)
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !13633, file: !13336, line: 109, baseType: !199, size: 16, offset: 1824)
!13659 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !13633, file: !13336, line: 109, baseType: !199, size: 16, offset: 1840)
!13660 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !13633, file: !13336, line: 110, baseType: !135, size: 32, offset: 1856)
!13661 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !13633, file: !13336, line: 110, baseType: !135, size: 32, offset: 1888)
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !13633, file: !13336, line: 111, baseType: !135, size: 32, offset: 1920)
!13663 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !13633, file: !13336, line: 111, baseType: !135, size: 32, offset: 1952)
!13664 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !13633, file: !13336, line: 112, baseType: !135, size: 32, offset: 1984)
!13665 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !13633, file: !13336, line: 112, baseType: !135, size: 32, offset: 2016)
!13666 = !DILocation(line: 571, column: 14, scope: !13630)
!13667 = !DILocation(line: 571, column: 20, scope: !13630)
!13668 = !DILocation(line: 571, column: 24, scope: !13630)
!13669 = !DILocation(line: 572, column: 33, scope: !13630)
!13670 = !DILocation(line: 572, column: 41, scope: !13630)
!13671 = !DILocation(line: 572, column: 46, scope: !13630)
!13672 = !DILocation(line: 572, column: 50, scope: !13630)
!13673 = !DILocation(line: 572, column: 55, scope: !13630)
!13674 = !DILocation(line: 572, column: 60, scope: !13630)
!13675 = !DILocation(line: 572, column: 3, scope: !13630)
!13676 = !DILocation(line: 573, column: 21, scope: !13630)
!13677 = !DILocation(line: 573, column: 28, scope: !13630)
!13678 = !DILocation(line: 573, column: 3, scope: !13630)
!13679 = !DILocation(line: 574, column: 2, scope: !13630)
!13680 = !DILocation(line: 576, column: 2, scope: !13167)
!13681 = !DILocation(line: 577, column: 1, scope: !13167)
!13682 = distinct !DISubprogram(name: "brush_usesMaterial", scope: !3, file: !3, line: 637, type: !13683, scopeLine: 638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!135, !4416, !4204}
!13685 = !DILocalVariable(name: "brush", arg: 1, scope: !13682, file: !3, line: 637, type: !4416)
!13686 = !DILocation(line: 637, column: 58, scope: !13682)
!13687 = !DILocalVariable(name: "scene", arg: 2, scope: !13682, file: !3, line: 637, type: !4204)
!13688 = !DILocation(line: 637, column: 72, scope: !13682)
!13689 = !DILocation(line: 639, column: 11, scope: !13682)
!13690 = !DILocation(line: 639, column: 18, scope: !13682)
!13691 = !DILocation(line: 639, column: 24, scope: !13682)
!13692 = !DILocation(line: 639, column: 51, scope: !13682)
!13693 = !DILocation(line: 639, column: 88, scope: !13682)
!13694 = !DILocation(line: 639, column: 56, scope: !13682)
!13695 = !DILocation(line: 639, column: 55, scope: !13682)
!13696 = !DILocation(line: 0, scope: !13682)
!13697 = !DILocation(line: 639, column: 2, scope: !13682)
!13698 = distinct !DISubprogram(name: "dynamicPaint_updateBrushMaterials", scope: !3, file: !3, line: 2853, type: !13699, scopeLine: 2854, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!13699 = !DISubroutineType(types: !13700)
!13700 = !{null, !3426, !6632, !4204, !13701}
!13701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10816, size: 64)
!13702 = !DILocalVariable(name: "brushOb", arg: 1, scope: !13698, file: !3, line: 2853, type: !3426)
!13703 = !DILocation(line: 2853, column: 55, scope: !13698)
!13704 = !DILocalVariable(name: "ui_mat", arg: 2, scope: !13698, file: !3, line: 2853, type: !6632)
!13705 = !DILocation(line: 2853, column: 74, scope: !13698)
!13706 = !DILocalVariable(name: "scene", arg: 3, scope: !13698, file: !3, line: 2853, type: !4204)
!13707 = !DILocation(line: 2853, column: 89, scope: !13698)
!13708 = !DILocalVariable(name: "bMats", arg: 4, scope: !13698, file: !3, line: 2853, type: !13701)
!13709 = !DILocation(line: 2853, column: 112, scope: !13698)
!13710 = !DILocation(line: 2857, column: 15, scope: !13698)
!13711 = !DILocation(line: 2857, column: 24, scope: !13698)
!13712 = !DILocation(line: 2857, column: 30, scope: !13698)
!13713 = !DILocation(line: 2857, column: 39, scope: !13698)
!13714 = !DILocation(line: 2857, column: 2, scope: !13698)
!13715 = !DILocation(line: 2858, column: 13, scope: !13698)
!13716 = !DILocation(line: 2858, column: 22, scope: !13698)
!13717 = !DILocation(line: 2858, column: 32, scope: !13698)
!13718 = !DILocation(line: 2858, column: 41, scope: !13698)
!13719 = !DILocation(line: 2858, column: 2, scope: !13698)
!13720 = !DILocation(line: 2861, column: 7, scope: !13721)
!13721 = distinct !DILexicalBlock(scope: !13698, file: !3, line: 2861, column: 6)
!13722 = !DILocation(line: 2861, column: 14, scope: !13721)
!13723 = !DILocation(line: 2861, column: 23, scope: !13721)
!13724 = !DILocation(line: 2861, column: 26, scope: !13721)
!13725 = !DILocation(line: 2861, column: 35, scope: !13721)
!13726 = !DILocation(line: 2861, column: 39, scope: !13721)
!13727 = !DILocation(line: 2861, column: 42, scope: !13721)
!13728 = !DILocation(line: 2861, column: 51, scope: !13721)
!13729 = !DILocation(line: 2861, column: 6, scope: !13698)
!13730 = !DILocalVariable(name: "i", scope: !13731, file: !3, line: 2862, type: !135)
!13731 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 2861, column: 59)
!13732 = !DILocation(line: 2862, column: 7, scope: !13731)
!13733 = !DILocalVariable(name: "tot", scope: !13731, file: !3, line: 2862, type: !135)
!13734 = !DILocation(line: 2862, column: 10, scope: !13731)
!13735 = !DILocation(line: 2862, column: 31, scope: !13731)
!13736 = !DILocation(line: 2862, column: 18, scope: !13731)
!13737 = !DILocation(line: 2862, column: 17, scope: !13731)
!13738 = !DILocation(line: 2862, column: 16, scope: !13731)
!13739 = !DILocation(line: 2865, column: 7, scope: !13740)
!13740 = distinct !DILexicalBlock(scope: !13731, file: !3, line: 2865, column: 7)
!13741 = !DILocation(line: 2865, column: 7, scope: !13731)
!13742 = !DILocation(line: 2866, column: 21, scope: !13743)
!13743 = distinct !DILexicalBlock(scope: !13740, file: !3, line: 2865, column: 12)
!13744 = !DILocation(line: 2866, column: 55, scope: !13743)
!13745 = !DILocation(line: 2866, column: 54, scope: !13743)
!13746 = !DILocation(line: 2866, column: 52, scope: !13743)
!13747 = !DILocation(line: 2866, column: 4, scope: !13743)
!13748 = !DILocation(line: 2866, column: 11, scope: !13743)
!13749 = !DILocation(line: 2866, column: 19, scope: !13743)
!13750 = !DILocation(line: 2867, column: 11, scope: !13751)
!13751 = distinct !DILexicalBlock(scope: !13743, file: !3, line: 2867, column: 4)
!13752 = !DILocation(line: 2867, column: 9, scope: !13751)
!13753 = !DILocation(line: 2867, column: 16, scope: !13754)
!13754 = distinct !DILexicalBlock(scope: !13751, file: !3, line: 2867, column: 4)
!13755 = !DILocation(line: 2867, column: 20, scope: !13754)
!13756 = !DILocation(line: 2867, column: 18, scope: !13754)
!13757 = !DILocation(line: 2867, column: 4, scope: !13751)
!13758 = !DILocation(line: 2868, column: 71, scope: !13759)
!13759 = distinct !DILexicalBlock(scope: !13754, file: !3, line: 2867, column: 30)
!13760 = !DILocation(line: 2868, column: 81, scope: !13759)
!13761 = !DILocation(line: 2868, column: 83, scope: !13759)
!13762 = !DILocation(line: 2868, column: 80, scope: !13759)
!13763 = !DILocation(line: 2868, column: 49, scope: !13759)
!13764 = !DILocation(line: 2868, column: 90, scope: !13759)
!13765 = !DILocation(line: 2868, column: 25, scope: !13759)
!13766 = !DILocation(line: 2868, column: 5, scope: !13759)
!13767 = !DILocation(line: 2868, column: 12, scope: !13759)
!13768 = !DILocation(line: 2868, column: 20, scope: !13759)
!13769 = !DILocation(line: 2868, column: 23, scope: !13759)
!13770 = !DILocation(line: 2869, column: 4, scope: !13759)
!13771 = !DILocation(line: 2867, column: 26, scope: !13754)
!13772 = !DILocation(line: 2867, column: 4, scope: !13754)
!13773 = distinct !{!13773, !13757, !13774}
!13774 = !DILocation(line: 2869, column: 4, scope: !13751)
!13775 = !DILocation(line: 2870, column: 3, scope: !13743)
!13776 = !DILocation(line: 2871, column: 16, scope: !13731)
!13777 = !DILocation(line: 2871, column: 3, scope: !13731)
!13778 = !DILocation(line: 2871, column: 10, scope: !13731)
!13779 = !DILocation(line: 2871, column: 14, scope: !13731)
!13780 = !DILocation(line: 2872, column: 2, scope: !13731)
!13781 = !DILocation(line: 2874, column: 40, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 2873, column: 7)
!13783 = !DILocation(line: 2874, column: 48, scope: !13782)
!13784 = !DILocation(line: 2874, column: 16, scope: !13782)
!13785 = !DILocation(line: 2874, column: 3, scope: !13782)
!13786 = !DILocation(line: 2874, column: 10, scope: !13782)
!13787 = !DILocation(line: 2874, column: 14, scope: !13782)
!13788 = !DILocation(line: 2876, column: 1, scope: !13698)
!13789 = distinct !DISubprogram(name: "dynamicPaint_paintParticles", scope: !3, file: !3, line: 3711, type: !13790, scopeLine: 3715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!13790 = !DISubroutineType(types: !13791)
!13791 = !{!135, !242, !13792, !4416, !207}
!13792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13793, size: 64)
!13793 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleSystem", file: !1454, line: 314, baseType: !1679)
!13794 = !DILocalVariable(name: "surface", arg: 1, scope: !13789, file: !3, line: 3711, type: !242)
!13795 = !DILocation(line: 3711, column: 61, scope: !13789)
!13796 = !DILocalVariable(name: "psys", arg: 2, scope: !13789, file: !3, line: 3712, type: !13792)
!13797 = !DILocation(line: 3712, column: 56, scope: !13789)
!13798 = !DILocalVariable(name: "brush", arg: 3, scope: !13789, file: !3, line: 3713, type: !4416)
!13799 = !DILocation(line: 3713, column: 67, scope: !13789)
!13800 = !DILocalVariable(name: "timescale", arg: 4, scope: !13789, file: !3, line: 3714, type: !207)
!13801 = !DILocation(line: 3714, column: 46, scope: !13789)
!13802 = !DILocalVariable(name: "part", scope: !13789, file: !3, line: 3716, type: !1684)
!13803 = !DILocation(line: 3716, column: 20, scope: !13789)
!13804 = !DILocation(line: 3716, column: 27, scope: !13789)
!13805 = !DILocation(line: 3716, column: 33, scope: !13789)
!13806 = !DILocalVariable(name: "pa", scope: !13789, file: !3, line: 3717, type: !1880)
!13807 = !DILocation(line: 3717, column: 16, scope: !13789)
!13808 = !DILocalVariable(name: "sData", scope: !13789, file: !3, line: 3718, type: !3906)
!13809 = !DILocation(line: 3718, column: 20, scope: !13789)
!13810 = !DILocation(line: 3718, column: 28, scope: !13789)
!13811 = !DILocation(line: 3718, column: 37, scope: !13789)
!13812 = !DILocalVariable(name: "bData", scope: !13789, file: !3, line: 3719, type: !4026)
!13813 = !DILocation(line: 3719, column: 17, scope: !13789)
!13814 = !DILocation(line: 3719, column: 25, scope: !13789)
!13815 = !DILocation(line: 3719, column: 32, scope: !13789)
!13816 = !DILocalVariable(name: "grid", scope: !13789, file: !3, line: 3720, type: !3175)
!13817 = !DILocation(line: 3720, column: 14, scope: !13789)
!13818 = !DILocation(line: 3720, column: 21, scope: !13789)
!13819 = !DILocation(line: 3720, column: 28, scope: !13789)
!13820 = !DILocalVariable(name: "tree", scope: !13789, file: !3, line: 3722, type: !13821)
!13821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13822, size: 64)
!13822 = !DIDerivedType(tag: DW_TAG_typedef, name: "KDTree", file: !1512, line: 37, baseType: !1511)
!13823 = !DILocation(line: 3722, column: 10, scope: !13789)
!13824 = !DILocalVariable(name: "particlesAdded", scope: !13789, file: !3, line: 3723, type: !135)
!13825 = !DILocation(line: 3723, column: 6, scope: !13789)
!13826 = !DILocalVariable(name: "invalidParticles", scope: !13789, file: !3, line: 3724, type: !135)
!13827 = !DILocation(line: 3724, column: 6, scope: !13789)
!13828 = !DILocalVariable(name: "p", scope: !13789, file: !3, line: 3725, type: !135)
!13829 = !DILocation(line: 3725, column: 6, scope: !13789)
!13830 = !DILocalVariable(name: "solidradius", scope: !13789, file: !3, line: 3727, type: !207)
!13831 = !DILocation(line: 3727, column: 8, scope: !13789)
!13832 = !DILocation(line: 3727, column: 22, scope: !13789)
!13833 = !DILocation(line: 3727, column: 31, scope: !13789)
!13834 = !DILocation(line: 3727, column: 48, scope: !13789)
!13835 = !DILocation(line: 3727, column: 55, scope: !13789)
!13836 = !DILocation(line: 3727, column: 61, scope: !13789)
!13837 = !DILocation(line: 3727, column: 47, scope: !13789)
!13838 = !DILocation(line: 3727, column: 86, scope: !13789)
!13839 = !DILocation(line: 3727, column: 92, scope: !13789)
!13840 = !DILocation(line: 3727, column: 98, scope: !13789)
!13841 = !DILocation(line: 3727, column: 105, scope: !13789)
!13842 = !DILocation(line: 3727, column: 112, scope: !13789)
!13843 = !DILocation(line: 3727, column: 44, scope: !13789)
!13844 = !DILocalVariable(name: "smooth", scope: !13789, file: !3, line: 3728, type: !207)
!13845 = !DILocation(line: 3728, column: 8, scope: !13789)
!13846 = !DILocation(line: 3728, column: 17, scope: !13789)
!13847 = !DILocation(line: 3728, column: 24, scope: !13789)
!13848 = !DILocation(line: 3728, column: 42, scope: !13789)
!13849 = !DILocation(line: 3728, column: 51, scope: !13789)
!13850 = !DILocation(line: 3728, column: 40, scope: !13789)
!13851 = !DILocalVariable(name: "range", scope: !13789, file: !3, line: 3730, type: !207)
!13852 = !DILocation(line: 3730, column: 8, scope: !13789)
!13853 = !DILocation(line: 3730, column: 16, scope: !13789)
!13854 = !DILocation(line: 3730, column: 30, scope: !13789)
!13855 = !DILocation(line: 3730, column: 28, scope: !13789)
!13856 = !DILocalVariable(name: "particle_timestep", scope: !13789, file: !3, line: 3731, type: !207)
!13857 = !DILocation(line: 3731, column: 8, scope: !13789)
!13858 = !DILocation(line: 3731, column: 36, scope: !13789)
!13859 = !DILocation(line: 3731, column: 42, scope: !13789)
!13860 = !DILocation(line: 3731, column: 34, scope: !13789)
!13861 = !DILocalVariable(name: "part_bb", scope: !13789, file: !3, line: 3733, type: !3160)
!13862 = !DILocation(line: 3733, column: 11, scope: !13789)
!13863 = !DILocation(line: 3735, column: 6, scope: !13864)
!13864 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 3735, column: 6)
!13865 = !DILocation(line: 3735, column: 12, scope: !13864)
!13866 = !DILocation(line: 3735, column: 20, scope: !13864)
!13867 = !DILocation(line: 3735, column: 6, scope: !13789)
!13868 = !DILocation(line: 3735, column: 25, scope: !13864)
!13869 = !DILocation(line: 3740, column: 24, scope: !13789)
!13870 = !DILocation(line: 3740, column: 30, scope: !13789)
!13871 = !DILocation(line: 3740, column: 9, scope: !13789)
!13872 = !DILocation(line: 3740, column: 7, scope: !13789)
!13873 = !DILocation(line: 3743, column: 9, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 3743, column: 2)
!13875 = !DILocation(line: 3743, column: 19, scope: !13874)
!13876 = !DILocation(line: 3743, column: 25, scope: !13874)
!13877 = !DILocation(line: 3743, column: 17, scope: !13874)
!13878 = !DILocation(line: 3743, column: 7, scope: !13874)
!13879 = !DILocation(line: 3743, column: 36, scope: !13880)
!13880 = distinct !DILexicalBlock(scope: !13874, file: !3, line: 3743, column: 2)
!13881 = !DILocation(line: 3743, column: 40, scope: !13880)
!13882 = !DILocation(line: 3743, column: 46, scope: !13880)
!13883 = !DILocation(line: 3743, column: 38, scope: !13880)
!13884 = !DILocation(line: 3743, column: 2, scope: !13874)
!13885 = !DILocation(line: 3746, column: 7, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 3746, column: 7)
!13887 = distinct !DILexicalBlock(scope: !13880, file: !3, line: 3743, column: 66)
!13888 = !DILocation(line: 3746, column: 11, scope: !13886)
!13889 = !DILocation(line: 3746, column: 17, scope: !13886)
!13890 = !DILocation(line: 3746, column: 32, scope: !13886)
!13891 = !DILocation(line: 3746, column: 36, scope: !13886)
!13892 = !DILocation(line: 3746, column: 42, scope: !13886)
!13893 = !DILocation(line: 3746, column: 47, scope: !13886)
!13894 = !DILocation(line: 3746, column: 62, scope: !13886)
!13895 = !DILocation(line: 3746, column: 7, scope: !13887)
!13896 = !DILocation(line: 3746, column: 68, scope: !13886)
!13897 = !DILocation(line: 3747, column: 12, scope: !13898)
!13898 = distinct !DILexicalBlock(scope: !13886, file: !3, line: 3747, column: 12)
!13899 = !DILocation(line: 3747, column: 16, scope: !13898)
!13900 = !DILocation(line: 3747, column: 22, scope: !13898)
!13901 = !DILocation(line: 3747, column: 35, scope: !13898)
!13902 = !DILocation(line: 3747, column: 39, scope: !13898)
!13903 = !DILocation(line: 3747, column: 45, scope: !13898)
!13904 = !DILocation(line: 3747, column: 50, scope: !13898)
!13905 = !DILocation(line: 3747, column: 63, scope: !13898)
!13906 = !DILocation(line: 3747, column: 12, scope: !13886)
!13907 = !DILocation(line: 3747, column: 69, scope: !13898)
!13908 = !DILocation(line: 3748, column: 12, scope: !13909)
!13909 = distinct !DILexicalBlock(scope: !13898, file: !3, line: 3748, column: 12)
!13910 = !DILocation(line: 3748, column: 16, scope: !13909)
!13911 = !DILocation(line: 3748, column: 21, scope: !13909)
!13912 = !DILocation(line: 3748, column: 12, scope: !13898)
!13913 = !DILocation(line: 3748, column: 37, scope: !13909)
!13914 = !DILocation(line: 3752, column: 7, scope: !13915)
!13915 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 3752, column: 7)
!13916 = !DILocation(line: 3752, column: 30, scope: !13915)
!13917 = !DILocation(line: 3752, column: 33, scope: !13915)
!13918 = !DILocation(line: 3752, column: 56, scope: !13915)
!13919 = !DILocation(line: 3752, column: 59, scope: !13915)
!13920 = !DILocation(line: 3752, column: 7, scope: !13887)
!13921 = !DILocation(line: 3752, column: 101, scope: !13922)
!13922 = distinct !DILexicalBlock(scope: !13915, file: !3, line: 3752, column: 83)
!13923 = !DILocation(line: 3752, column: 105, scope: !13922)
!13924 = !DILocation(line: 3755, column: 29, scope: !13925)
!13925 = distinct !DILexicalBlock(scope: !13887, file: !3, line: 3755, column: 7)
!13926 = !DILocation(line: 3755, column: 35, scope: !13925)
!13927 = !DILocation(line: 3755, column: 48, scope: !13925)
!13928 = !DILocation(line: 3755, column: 52, scope: !13925)
!13929 = !DILocation(line: 3755, column: 58, scope: !13925)
!13930 = !DILocation(line: 3755, column: 62, scope: !13925)
!13931 = !DILocation(line: 3755, column: 8, scope: !13925)
!13932 = !DILocation(line: 3755, column: 7, scope: !13887)
!13933 = !DILocation(line: 3755, column: 70, scope: !13925)
!13934 = !DILocation(line: 3757, column: 21, scope: !13887)
!13935 = !DILocation(line: 3757, column: 27, scope: !13887)
!13936 = !DILocation(line: 3757, column: 30, scope: !13887)
!13937 = !DILocation(line: 3757, column: 34, scope: !13887)
!13938 = !DILocation(line: 3757, column: 40, scope: !13887)
!13939 = !DILocation(line: 3757, column: 3, scope: !13887)
!13940 = !DILocation(line: 3760, column: 25, scope: !13887)
!13941 = !DILocation(line: 3760, column: 29, scope: !13887)
!13942 = !DILocation(line: 3760, column: 35, scope: !13887)
!13943 = !DILocation(line: 3760, column: 3, scope: !13887)
!13944 = !DILocation(line: 3762, column: 17, scope: !13887)
!13945 = !DILocation(line: 3763, column: 2, scope: !13887)
!13946 = !DILocation(line: 3743, column: 56, scope: !13880)
!13947 = !DILocation(line: 3743, column: 62, scope: !13880)
!13948 = !DILocation(line: 3743, column: 2, scope: !13880)
!13949 = distinct !{!13949, !13884, !13950}
!13950 = !DILocation(line: 3763, column: 2, scope: !13874)
!13951 = !DILocation(line: 3764, column: 6, scope: !13952)
!13952 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 3764, column: 6)
!13953 = !DILocation(line: 3764, column: 6, scope: !13789)
!13954 = !DILocation(line: 3765, column: 3, scope: !13952)
!13955 = !DILocation(line: 3768, column: 6, scope: !13956)
!13956 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 3768, column: 6)
!13957 = !DILocation(line: 3768, column: 21, scope: !13956)
!13958 = !DILocation(line: 3768, column: 6, scope: !13789)
!13959 = !DILocation(line: 3769, column: 19, scope: !13960)
!13960 = distinct !DILexicalBlock(scope: !13956, file: !3, line: 3768, column: 26)
!13961 = !DILocation(line: 3769, column: 3, scope: !13960)
!13962 = !DILocation(line: 3770, column: 3, scope: !13960)
!13963 = !DILocation(line: 3774, column: 2, scope: !13789)
!13964 = !DILocation(line: 3777, column: 27, scope: !13965)
!13965 = distinct !DILexicalBlock(scope: !13789, file: !3, line: 3777, column: 6)
!13966 = !DILocation(line: 3777, column: 33, scope: !13965)
!13967 = !DILocation(line: 3777, column: 56, scope: !13965)
!13968 = !DILocation(line: 3777, column: 6, scope: !13965)
!13969 = !DILocation(line: 3777, column: 6, scope: !13789)
!13970 = !DILocalVariable(name: "c_index", scope: !13971, file: !3, line: 3778, type: !135)
!13971 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 3777, column: 64)
!13972 = !DILocation(line: 3778, column: 7, scope: !13971)
!13973 = !DILocalVariable(name: "total_cells", scope: !13971, file: !3, line: 3779, type: !135)
!13974 = !DILocation(line: 3779, column: 7, scope: !13971)
!13975 = !DILocation(line: 3779, column: 21, scope: !13971)
!13976 = !DILocation(line: 3779, column: 27, scope: !13971)
!13977 = !DILocation(line: 3779, column: 36, scope: !13971)
!13978 = !DILocation(line: 3779, column: 42, scope: !13971)
!13979 = !DILocation(line: 3779, column: 34, scope: !13971)
!13980 = !DILocation(line: 3779, column: 51, scope: !13971)
!13981 = !DILocation(line: 3779, column: 57, scope: !13971)
!13982 = !DILocation(line: 3779, column: 49, scope: !13971)
!13983 = !DILocation(line: 3782, column: 22, scope: !13971)
!13984 = !DILocation(line: 3782, column: 3, scope: !13971)
!13985 = !DILocation(line: 3785, column: 16, scope: !13986)
!13986 = distinct !DILexicalBlock(scope: !13971, file: !3, line: 3785, column: 3)
!13987 = !DILocation(line: 3785, column: 8, scope: !13986)
!13988 = !DILocation(line: 3785, column: 21, scope: !13989)
!13989 = distinct !DILexicalBlock(scope: !13986, file: !3, line: 3785, column: 3)
!13990 = !DILocation(line: 3785, column: 31, scope: !13989)
!13991 = !DILocation(line: 3785, column: 29, scope: !13989)
!13992 = !DILocation(line: 3785, column: 3, scope: !13986)
!13993 = !DILocalVariable(name: "id", scope: !13994, file: !3, line: 3786, type: !135)
!13994 = distinct !DILexicalBlock(scope: !13989, file: !3, line: 3785, column: 55)
!13995 = !DILocation(line: 3786, column: 8, scope: !13994)
!13996 = !DILocation(line: 3789, column: 9, scope: !13997)
!13997 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 3789, column: 8)
!13998 = !DILocation(line: 3789, column: 15, scope: !13997)
!13999 = !DILocation(line: 3789, column: 21, scope: !13997)
!14000 = !DILocation(line: 3789, column: 30, scope: !13997)
!14001 = !DILocation(line: 3790, column: 30, scope: !13997)
!14002 = !DILocation(line: 3790, column: 36, scope: !13997)
!14003 = !DILocation(line: 3790, column: 43, scope: !13997)
!14004 = !DILocation(line: 3790, column: 63, scope: !13997)
!14005 = !DILocation(line: 3790, column: 9, scope: !13997)
!14006 = !DILocation(line: 3789, column: 8, scope: !13994)
!14007 = !DILocation(line: 3792, column: 5, scope: !14008)
!14008 = distinct !DILexicalBlock(scope: !13997, file: !3, line: 3791, column: 4)
!14009 = !DILocation(line: 3799, column: 12, scope: !14010)
!14010 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 3799, column: 4)
!14011 = !DILocation(line: 3799, column: 9, scope: !14010)
!14012 = !DILocation(line: 3799, column: 17, scope: !14013)
!14013 = distinct !DILexicalBlock(scope: !14010, file: !3, line: 3799, column: 4)
!14014 = !DILocation(line: 3799, column: 22, scope: !14013)
!14015 = !DILocation(line: 3799, column: 28, scope: !14013)
!14016 = !DILocation(line: 3799, column: 34, scope: !14013)
!14017 = !DILocation(line: 3799, column: 20, scope: !14013)
!14018 = !DILocation(line: 3799, column: 4, scope: !14010)
!14019 = !DILocalVariable(name: "index", scope: !14020, file: !3, line: 3800, type: !135)
!14020 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 3799, column: 50)
!14021 = !DILocation(line: 3800, column: 9, scope: !14020)
!14022 = !DILocation(line: 3800, column: 17, scope: !14020)
!14023 = !DILocation(line: 3800, column: 23, scope: !14020)
!14024 = !DILocation(line: 3800, column: 31, scope: !14020)
!14025 = !DILocation(line: 3800, column: 37, scope: !14020)
!14026 = !DILocation(line: 3800, column: 43, scope: !14020)
!14027 = !DILocation(line: 3800, column: 54, scope: !14020)
!14028 = !DILocation(line: 3800, column: 52, scope: !14020)
!14029 = !DILocalVariable(name: "disp_intersect", scope: !14020, file: !3, line: 3801, type: !207)
!14030 = !DILocation(line: 3801, column: 11, scope: !14020)
!14031 = !DILocalVariable(name: "radius", scope: !14020, file: !3, line: 3802, type: !207)
!14032 = !DILocation(line: 3802, column: 11, scope: !14020)
!14033 = !DILocalVariable(name: "strength", scope: !14020, file: !3, line: 3803, type: !207)
!14034 = !DILocation(line: 3803, column: 11, scope: !14020)
!14035 = !DILocalVariable(name: "velocity_val", scope: !14020, file: !3, line: 3804, type: !207)
!14036 = !DILocation(line: 3804, column: 11, scope: !14020)
!14037 = !DILocalVariable(name: "part_index", scope: !14020, file: !3, line: 3805, type: !135)
!14038 = !DILocation(line: 3805, column: 9, scope: !14020)
!14039 = !DILocalVariable(name: "nearest", scope: !14040, file: !3, line: 3812, type: !14041)
!14040 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 3811, column: 5)
!14041 = !DIDerivedType(tag: DW_TAG_typedef, name: "KDTreeNearest", file: !1512, line: 43, baseType: !14042)
!14042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "KDTreeNearest", file: !1512, line: 39, size: 160, elements: !14043)
!14043 = !{!14044, !14045, !14046}
!14044 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !14042, file: !1512, line: 40, baseType: !135, size: 32)
!14045 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !14042, file: !1512, line: 41, baseType: !207, size: 32, offset: 32)
!14046 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !14042, file: !1512, line: 42, baseType: !206, size: 96, offset: 64)
!14047 = !DILocation(line: 3812, column: 20, scope: !14040)
!14048 = !DILocalVariable(name: "smooth_range", scope: !14040, file: !3, line: 3813, type: !207)
!14049 = !DILocation(line: 3813, column: 12, scope: !14040)
!14050 = !DILocalVariable(name: "part_solidradius", scope: !14040, file: !3, line: 3813, type: !207)
!14051 = !DILocation(line: 3813, column: 26, scope: !14040)
!14052 = !DILocation(line: 3816, column: 30, scope: !14040)
!14053 = !DILocation(line: 3816, column: 36, scope: !14040)
!14054 = !DILocation(line: 3816, column: 43, scope: !14040)
!14055 = !DILocation(line: 3816, column: 53, scope: !14040)
!14056 = !DILocation(line: 3816, column: 60, scope: !14040)
!14057 = !DILocation(line: 3816, column: 66, scope: !14040)
!14058 = !DILocation(line: 3816, column: 74, scope: !14040)
!14059 = !DILocation(line: 3816, column: 6, scope: !14040)
!14060 = !DILocation(line: 3818, column: 18, scope: !14061)
!14061 = distinct !DILexicalBlock(scope: !14040, file: !3, line: 3818, column: 10)
!14062 = !DILocation(line: 3818, column: 25, scope: !14061)
!14063 = !DILocation(line: 3818, column: 23, scope: !14061)
!14064 = !DILocation(line: 3818, column: 10, scope: !14040)
!14065 = !DILocation(line: 3818, column: 32, scope: !14061)
!14066 = !DILocation(line: 3820, column: 10, scope: !14067)
!14067 = distinct !DILexicalBlock(scope: !14040, file: !3, line: 3820, column: 10)
!14068 = !DILocation(line: 3820, column: 17, scope: !14067)
!14069 = !DILocation(line: 3820, column: 23, scope: !14067)
!14070 = !DILocation(line: 3820, column: 10, scope: !14040)
!14071 = !DILocalVariable(name: "pa", scope: !14072, file: !3, line: 3822, type: !1880)
!14072 = distinct !DILexicalBlock(scope: !14067, file: !3, line: 3820, column: 46)
!14073 = !DILocation(line: 3822, column: 21, scope: !14072)
!14074 = !DILocation(line: 3822, column: 26, scope: !14072)
!14075 = !DILocation(line: 3822, column: 32, scope: !14072)
!14076 = !DILocation(line: 3822, column: 52, scope: !14072)
!14077 = !DILocation(line: 3822, column: 42, scope: !14072)
!14078 = !DILocation(line: 3823, column: 26, scope: !14072)
!14079 = !DILocation(line: 3823, column: 30, scope: !14072)
!14080 = !DILocation(line: 3823, column: 24, scope: !14072)
!14081 = !DILocation(line: 3824, column: 6, scope: !14072)
!14082 = !DILocation(line: 3826, column: 26, scope: !14083)
!14083 = distinct !DILexicalBlock(scope: !14067, file: !3, line: 3825, column: 11)
!14084 = !DILocation(line: 3826, column: 24, scope: !14083)
!14085 = !DILocation(line: 3828, column: 15, scope: !14040)
!14086 = !DILocation(line: 3828, column: 34, scope: !14040)
!14087 = !DILocation(line: 3828, column: 32, scope: !14040)
!14088 = !DILocation(line: 3828, column: 13, scope: !14040)
!14089 = !DILocation(line: 3829, column: 18, scope: !14090)
!14090 = distinct !DILexicalBlock(scope: !14040, file: !3, line: 3829, column: 10)
!14091 = !DILocation(line: 3829, column: 25, scope: !14090)
!14092 = !DILocation(line: 3829, column: 23, scope: !14090)
!14093 = !DILocation(line: 3829, column: 10, scope: !14040)
!14094 = !DILocation(line: 3831, column: 31, scope: !14095)
!14095 = distinct !DILexicalBlock(scope: !14090, file: !3, line: 3829, column: 33)
!14096 = !DILocation(line: 3831, column: 38, scope: !14095)
!14097 = !DILocation(line: 3831, column: 36, scope: !14095)
!14098 = !DILocation(line: 3831, column: 20, scope: !14095)
!14099 = !DILocation(line: 3832, column: 11, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 3832, column: 11)
!14101 = !DILocation(line: 3832, column: 24, scope: !14100)
!14102 = !DILocation(line: 3832, column: 11, scope: !14095)
!14103 = !DILocation(line: 3832, column: 45, scope: !14100)
!14104 = !DILocation(line: 3832, column: 32, scope: !14100)
!14105 = !DILocation(line: 3834, column: 11, scope: !14106)
!14106 = distinct !DILexicalBlock(scope: !14095, file: !3, line: 3834, column: 11)
!14107 = !DILocation(line: 3834, column: 11, scope: !14095)
!14108 = !DILocation(line: 3834, column: 35, scope: !14106)
!14109 = !DILocation(line: 3834, column: 32, scope: !14106)
!14110 = !DILocation(line: 3834, column: 19, scope: !14106)
!14111 = !DILocation(line: 3836, column: 25, scope: !14095)
!14112 = !DILocation(line: 3836, column: 23, scope: !14095)
!14113 = !DILocation(line: 3836, column: 16, scope: !14095)
!14114 = !DILocation(line: 3837, column: 24, scope: !14095)
!14115 = !DILocation(line: 3837, column: 41, scope: !14095)
!14116 = !DILocation(line: 3837, column: 31, scope: !14095)
!14117 = !DILocation(line: 3837, column: 22, scope: !14095)
!14118 = !DILocation(line: 3838, column: 28, scope: !14095)
!14119 = !DILocation(line: 3838, column: 18, scope: !14095)
!14120 = !DILocation(line: 3839, column: 6, scope: !14095)
!14121 = !DILocation(line: 3842, column: 9, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 3842, column: 9)
!14123 = !DILocation(line: 3842, column: 16, scope: !14122)
!14124 = !DILocation(line: 3842, column: 22, scope: !14122)
!14125 = !DILocation(line: 3842, column: 44, scope: !14122)
!14126 = !DILocation(line: 3842, column: 47, scope: !14122)
!14127 = !DILocation(line: 3842, column: 56, scope: !14122)
!14128 = !DILocation(line: 3842, column: 63, scope: !14122)
!14129 = !DILocation(line: 3842, column: 66, scope: !14122)
!14130 = !DILocation(line: 3842, column: 72, scope: !14122)
!14131 = !DILocation(line: 3842, column: 78, scope: !14122)
!14132 = !DILocation(line: 3842, column: 87, scope: !14122)
!14133 = !DILocation(line: 3842, column: 9, scope: !14020)
!14134 = !DILocalVariable(name: "nearest", scope: !14135, file: !3, line: 3847, type: !14136)
!14135 = distinct !DILexicalBlock(scope: !14122, file: !3, line: 3842, column: 95)
!14136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14041, size: 64)
!14137 = !DILocation(line: 3847, column: 21, scope: !14135)
!14138 = !DILocalVariable(name: "n", scope: !14135, file: !3, line: 3849, type: !135)
!14139 = !DILocation(line: 3849, column: 10, scope: !14135)
!14140 = !DILocalVariable(name: "particles", scope: !14135, file: !3, line: 3849, type: !135)
!14141 = !DILocation(line: 3849, column: 13, scope: !14135)
!14142 = !DILocalVariable(name: "smooth_range", scope: !14135, file: !3, line: 3850, type: !207)
!14143 = !DILocation(line: 3850, column: 12, scope: !14135)
!14144 = !DILocation(line: 3850, column: 27, scope: !14135)
!14145 = !DILocation(line: 3850, column: 44, scope: !14135)
!14146 = !DILocation(line: 3850, column: 42, scope: !14135)
!14147 = !DILocation(line: 3850, column: 34, scope: !14135)
!14148 = !DILocalVariable(name: "dist", scope: !14135, file: !3, line: 3850, type: !207)
!14149 = !DILocation(line: 3850, column: 55, scope: !14135)
!14150 = !DILocalVariable(name: "max_range", scope: !14135, file: !3, line: 3852, type: !207)
!14151 = !DILocation(line: 3852, column: 12, scope: !14135)
!14152 = !DILocation(line: 3852, column: 24, scope: !14135)
!14153 = !DILocation(line: 3852, column: 33, scope: !14135)
!14154 = !DILocation(line: 3852, column: 44, scope: !14135)
!14155 = !DILocation(line: 3852, column: 42, scope: !14135)
!14156 = !DILocation(line: 3852, column: 31, scope: !14135)
!14157 = !DILocation(line: 3852, column: 53, scope: !14135)
!14158 = !DILocation(line: 3852, column: 51, scope: !14135)
!14159 = !DILocation(line: 3854, column: 13, scope: !14135)
!14160 = !DILocation(line: 3854, column: 11, scope: !14135)
!14161 = !DILocation(line: 3856, column: 18, scope: !14135)
!14162 = !DILocation(line: 3856, column: 16, scope: !14135)
!14163 = !DILocation(line: 3860, column: 13, scope: !14164)
!14164 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 3860, column: 6)
!14165 = !DILocation(line: 3860, column: 11, scope: !14164)
!14166 = !DILocation(line: 3860, column: 18, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14164, file: !3, line: 3860, column: 6)
!14168 = !DILocation(line: 3860, column: 22, scope: !14167)
!14169 = !DILocation(line: 3860, column: 20, scope: !14167)
!14170 = !DILocation(line: 3860, column: 6, scope: !14164)
!14171 = !DILocalVariable(name: "pa", scope: !14172, file: !3, line: 3861, type: !1880)
!14172 = distinct !DILexicalBlock(scope: !14167, file: !3, line: 3860, column: 38)
!14173 = !DILocation(line: 3861, column: 21, scope: !14172)
!14174 = !DILocation(line: 3861, column: 26, scope: !14172)
!14175 = !DILocation(line: 3861, column: 32, scope: !14172)
!14176 = !DILocation(line: 3861, column: 44, scope: !14172)
!14177 = !DILocation(line: 3861, column: 52, scope: !14172)
!14178 = !DILocation(line: 3861, column: 55, scope: !14172)
!14179 = !DILocation(line: 3861, column: 42, scope: !14172)
!14180 = !DILocalVariable(name: "s_range", scope: !14172, file: !3, line: 3862, type: !207)
!14181 = !DILocation(line: 3862, column: 13, scope: !14172)
!14182 = !DILocation(line: 3865, column: 11, scope: !14183)
!14183 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3865, column: 11)
!14184 = !DILocation(line: 3865, column: 19, scope: !14183)
!14185 = !DILocation(line: 3865, column: 22, scope: !14183)
!14186 = !DILocation(line: 3865, column: 30, scope: !14183)
!14187 = !DILocation(line: 3865, column: 34, scope: !14183)
!14188 = !DILocation(line: 3865, column: 41, scope: !14183)
!14189 = !DILocation(line: 3865, column: 39, scope: !14183)
!14190 = !DILocation(line: 3865, column: 27, scope: !14183)
!14191 = !DILocation(line: 3865, column: 11, scope: !14172)
!14192 = !DILocation(line: 3866, column: 8, scope: !14183)
!14193 = !DILocation(line: 3869, column: 17, scope: !14172)
!14194 = !DILocation(line: 3869, column: 25, scope: !14172)
!14195 = !DILocation(line: 3869, column: 28, scope: !14172)
!14196 = !DILocation(line: 3869, column: 35, scope: !14172)
!14197 = !DILocation(line: 3869, column: 39, scope: !14172)
!14198 = !DILocation(line: 3869, column: 33, scope: !14172)
!14199 = !DILocation(line: 3869, column: 15, scope: !14172)
!14200 = !DILocation(line: 3871, column: 11, scope: !14201)
!14201 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3871, column: 11)
!14202 = !DILocation(line: 3871, column: 26, scope: !14201)
!14203 = !DILocation(line: 3871, column: 24, scope: !14201)
!14204 = !DILocation(line: 3871, column: 11, scope: !14172)
!14205 = !DILocation(line: 3872, column: 8, scope: !14201)
!14206 = !DILocation(line: 3875, column: 22, scope: !14172)
!14207 = !DILocation(line: 3875, column: 20, scope: !14172)
!14208 = !DILocation(line: 3876, column: 14, scope: !14172)
!14209 = !DILocation(line: 3876, column: 22, scope: !14172)
!14210 = !DILocation(line: 3876, column: 25, scope: !14172)
!14211 = !DILocation(line: 3876, column: 12, scope: !14172)
!14212 = !DILocation(line: 3877, column: 20, scope: !14172)
!14213 = !DILocation(line: 3877, column: 28, scope: !14172)
!14214 = !DILocation(line: 3877, column: 31, scope: !14172)
!14215 = !DILocation(line: 3877, column: 18, scope: !14172)
!14216 = !DILocation(line: 3880, column: 13, scope: !14217)
!14217 = distinct !DILexicalBlock(scope: !14172, file: !3, line: 3880, column: 12)
!14218 = !DILocation(line: 3880, column: 21, scope: !14217)
!14219 = !DILocation(line: 3880, column: 29, scope: !14217)
!14220 = !DILocation(line: 3881, column: 13, scope: !14217)
!14221 = !DILocation(line: 3881, column: 22, scope: !14217)
!14222 = !DILocation(line: 3881, column: 27, scope: !14217)
!14223 = !DILocation(line: 3881, column: 61, scope: !14217)
!14224 = !DILocation(line: 3882, column: 13, scope: !14217)
!14225 = !DILocation(line: 3882, column: 22, scope: !14217)
!14226 = !DILocation(line: 3882, column: 27, scope: !14217)
!14227 = !DILocation(line: 3880, column: 12, scope: !14172)
!14228 = !DILocation(line: 3884, column: 8, scope: !14229)
!14229 = distinct !DILexicalBlock(scope: !14217, file: !3, line: 3883, column: 7)
!14230 = !DILocation(line: 3886, column: 6, scope: !14172)
!14231 = !DILocation(line: 3860, column: 34, scope: !14167)
!14232 = !DILocation(line: 3860, column: 6, scope: !14167)
!14233 = distinct !{!14233, !14170, !14234}
!14234 = !DILocation(line: 3886, column: 6, scope: !14164)
!14235 = !DILocation(line: 3888, column: 10, scope: !14236)
!14236 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 3888, column: 10)
!14237 = !DILocation(line: 3888, column: 10, scope: !14135)
!14238 = !DILocation(line: 3888, column: 19, scope: !14236)
!14239 = !DILocation(line: 3888, column: 29, scope: !14236)
!14240 = !DILocalVariable(name: "rad", scope: !14241, file: !3, line: 3892, type: !207)
!14241 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 3891, column: 6)
!14242 = !DILocation(line: 3892, column: 13, scope: !14241)
!14243 = !DILocation(line: 3892, column: 19, scope: !14241)
!14244 = !DILocation(line: 3892, column: 28, scope: !14241)
!14245 = !DILocation(line: 3892, column: 26, scope: !14241)
!14246 = !DILocalVariable(name: "str", scope: !14241, file: !3, line: 3892, type: !207)
!14247 = !DILocation(line: 3892, column: 36, scope: !14241)
!14248 = !DILocation(line: 3893, column: 12, scope: !14249)
!14249 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3893, column: 11)
!14250 = !DILocation(line: 3893, column: 18, scope: !14249)
!14251 = !DILocation(line: 3893, column: 16, scope: !14249)
!14252 = !DILocation(line: 3893, column: 26, scope: !14249)
!14253 = !DILocation(line: 3893, column: 24, scope: !14249)
!14254 = !DILocation(line: 3893, column: 11, scope: !14241)
!14255 = !DILocation(line: 3894, column: 25, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 3893, column: 42)
!14257 = !DILocation(line: 3894, column: 34, scope: !14256)
!14258 = !DILocation(line: 3894, column: 32, scope: !14256)
!14259 = !DILocation(line: 3894, column: 23, scope: !14256)
!14260 = !DILocation(line: 3895, column: 17, scope: !14256)
!14261 = !DILocation(line: 3895, column: 15, scope: !14256)
!14262 = !DILocation(line: 3896, column: 7, scope: !14256)
!14263 = !DILocation(line: 3899, column: 11, scope: !14264)
!14264 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3899, column: 11)
!14265 = !DILocation(line: 3899, column: 24, scope: !14264)
!14266 = !DILocation(line: 3899, column: 11, scope: !14241)
!14267 = !DILocation(line: 3899, column: 45, scope: !14264)
!14268 = !DILocation(line: 3899, column: 32, scope: !14264)
!14269 = !DILocation(line: 3900, column: 11, scope: !14270)
!14270 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3900, column: 11)
!14271 = !DILocation(line: 3900, column: 11, scope: !14241)
!14272 = !DILocation(line: 3900, column: 35, scope: !14270)
!14273 = !DILocation(line: 3900, column: 32, scope: !14270)
!14274 = !DILocation(line: 3900, column: 19, scope: !14270)
!14275 = !DILocation(line: 3901, column: 20, scope: !14241)
!14276 = !DILocation(line: 3901, column: 18, scope: !14241)
!14277 = !DILocation(line: 3901, column: 11, scope: !14241)
!14278 = !DILocation(line: 3903, column: 11, scope: !14279)
!14279 = distinct !DILexicalBlock(scope: !14241, file: !3, line: 3903, column: 11)
!14280 = !DILocation(line: 3903, column: 17, scope: !14279)
!14281 = !DILocation(line: 3903, column: 15, scope: !14279)
!14282 = !DILocation(line: 3903, column: 11, scope: !14241)
!14283 = !DILocation(line: 3903, column: 38, scope: !14279)
!14284 = !DILocation(line: 3903, column: 36, scope: !14279)
!14285 = !DILocation(line: 3903, column: 27, scope: !14279)
!14286 = !DILocation(line: 3905, column: 5, scope: !14135)
!14287 = !DILocation(line: 3907, column: 9, scope: !14288)
!14288 = distinct !DILexicalBlock(scope: !14020, file: !3, line: 3907, column: 9)
!14289 = !DILocation(line: 3907, column: 18, scope: !14288)
!14290 = !DILocation(line: 3907, column: 9, scope: !14020)
!14291 = !DILocalVariable(name: "paintColor", scope: !14292, file: !3, line: 3908, type: !638)
!14292 = distinct !DILexicalBlock(scope: !14288, file: !3, line: 3907, column: 28)
!14293 = !DILocation(line: 3908, column: 12, scope: !14292)
!14294 = !DILocalVariable(name: "depth", scope: !14292, file: !3, line: 3909, type: !207)
!14295 = !DILocation(line: 3909, column: 12, scope: !14292)
!14296 = !DILocation(line: 3912, column: 11, scope: !14297)
!14297 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 3912, column: 10)
!14298 = !DILocation(line: 3912, column: 18, scope: !14297)
!14299 = !DILocation(line: 3912, column: 24, scope: !14297)
!14300 = !DILocation(line: 3912, column: 52, scope: !14297)
!14301 = !DILocation(line: 3912, column: 56, scope: !14297)
!14302 = !DILocation(line: 3912, column: 67, scope: !14297)
!14303 = !DILocation(line: 3912, column: 10, scope: !14292)
!14304 = !DILocalVariable(name: "velocity", scope: !14305, file: !3, line: 3913, type: !206)
!14305 = distinct !DILexicalBlock(scope: !14297, file: !3, line: 3912, column: 75)
!14306 = !DILocation(line: 3913, column: 13, scope: !14305)
!14307 = !DILocalVariable(name: "pa", scope: !14305, file: !3, line: 3914, type: !1880)
!14308 = !DILocation(line: 3914, column: 21, scope: !14305)
!14309 = !DILocation(line: 3914, column: 26, scope: !14305)
!14310 = !DILocation(line: 3914, column: 32, scope: !14305)
!14311 = !DILocation(line: 3914, column: 44, scope: !14305)
!14312 = !DILocation(line: 3914, column: 42, scope: !14305)
!14313 = !DILocation(line: 3915, column: 19, scope: !14305)
!14314 = !DILocation(line: 3915, column: 29, scope: !14305)
!14315 = !DILocation(line: 3915, column: 33, scope: !14305)
!14316 = !DILocation(line: 3915, column: 39, scope: !14305)
!14317 = !DILocation(line: 3915, column: 44, scope: !14305)
!14318 = !DILocation(line: 3915, column: 7, scope: !14305)
!14319 = !DILocation(line: 3918, column: 11, scope: !14320)
!14320 = distinct !DILexicalBlock(scope: !14305, file: !3, line: 3918, column: 11)
!14321 = !DILocation(line: 3918, column: 18, scope: !14320)
!14322 = !DILocation(line: 3918, column: 11, scope: !14305)
!14323 = !DILocation(line: 3919, column: 18, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14320, file: !3, line: 3918, column: 28)
!14325 = !DILocation(line: 3919, column: 28, scope: !14324)
!14326 = !DILocation(line: 3919, column: 35, scope: !14324)
!14327 = !DILocation(line: 3919, column: 44, scope: !14324)
!14328 = !DILocation(line: 3919, column: 51, scope: !14324)
!14329 = !DILocation(line: 3919, column: 8, scope: !14324)
!14330 = !DILocation(line: 3920, column: 7, scope: !14324)
!14331 = !DILocation(line: 3921, column: 29, scope: !14305)
!14332 = !DILocation(line: 3921, column: 22, scope: !14305)
!14333 = !DILocation(line: 3921, column: 20, scope: !14305)
!14334 = !DILocation(line: 3924, column: 13, scope: !14335)
!14335 = distinct !DILexicalBlock(scope: !14305, file: !3, line: 3924, column: 12)
!14336 = !DILocation(line: 3924, column: 22, scope: !14335)
!14337 = !DILocation(line: 3924, column: 27, scope: !14335)
!14338 = !DILocation(line: 3924, column: 58, scope: !14335)
!14339 = !DILocation(line: 3925, column: 13, scope: !14335)
!14340 = !DILocation(line: 3925, column: 20, scope: !14335)
!14341 = !DILocation(line: 3925, column: 26, scope: !14335)
!14342 = !DILocation(line: 3925, column: 49, scope: !14335)
!14343 = !DILocation(line: 3925, column: 52, scope: !14335)
!14344 = !DILocation(line: 3925, column: 59, scope: !14335)
!14345 = !DILocation(line: 3924, column: 12, scope: !14305)
!14346 = !DILocation(line: 3927, column: 20, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14335, file: !3, line: 3926, column: 7)
!14348 = !DILocation(line: 3927, column: 27, scope: !14347)
!14349 = !DILocation(line: 3927, column: 42, scope: !14347)
!14350 = !DILocation(line: 3927, column: 48, scope: !14347)
!14351 = !DILocation(line: 3927, column: 54, scope: !14347)
!14352 = !DILocation(line: 3927, column: 8, scope: !14347)
!14353 = !DILocation(line: 3928, column: 19, scope: !14347)
!14354 = !DILocation(line: 3928, column: 26, scope: !14347)
!14355 = !DILocation(line: 3928, column: 41, scope: !14347)
!14356 = !DILocation(line: 3928, column: 47, scope: !14347)
!14357 = !DILocation(line: 3928, column: 60, scope: !14347)
!14358 = !DILocation(line: 3928, column: 58, scope: !14347)
!14359 = !DILocation(line: 3928, column: 8, scope: !14347)
!14360 = !DILocation(line: 3929, column: 47, scope: !14347)
!14361 = !DILocation(line: 3929, column: 8, scope: !14347)
!14362 = !DILocation(line: 3929, column: 15, scope: !14347)
!14363 = !DILocation(line: 3929, column: 30, scope: !14347)
!14364 = !DILocation(line: 3929, column: 36, scope: !14347)
!14365 = !DILocation(line: 3929, column: 40, scope: !14347)
!14366 = !DILocation(line: 3929, column: 45, scope: !14347)
!14367 = !DILocation(line: 3930, column: 7, scope: !14347)
!14368 = !DILocation(line: 3931, column: 6, scope: !14305)
!14369 = !DILocation(line: 3933, column: 10, scope: !14370)
!14370 = distinct !DILexicalBlock(scope: !14292, file: !3, line: 3933, column: 10)
!14371 = !DILocation(line: 3933, column: 19, scope: !14370)
!14372 = !DILocation(line: 3933, column: 24, scope: !14370)
!14373 = !DILocation(line: 3933, column: 10, scope: !14292)
!14374 = !DILocation(line: 3934, column: 18, scope: !14375)
!14375 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 3933, column: 55)
!14376 = !DILocation(line: 3934, column: 31, scope: !14375)
!14377 = !DILocation(line: 3934, column: 38, scope: !14375)
!14378 = !DILocation(line: 3934, column: 7, scope: !14375)
!14379 = !DILocation(line: 3935, column: 6, scope: !14375)
!14380 = !DILocation(line: 3936, column: 17, scope: !14381)
!14381 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 3936, column: 16)
!14382 = !DILocation(line: 3936, column: 26, scope: !14381)
!14383 = !DILocation(line: 3936, column: 31, scope: !14381)
!14384 = !DILocation(line: 3936, column: 65, scope: !14381)
!14385 = !DILocation(line: 3937, column: 17, scope: !14381)
!14386 = !DILocation(line: 3937, column: 26, scope: !14381)
!14387 = !DILocation(line: 3937, column: 31, scope: !14381)
!14388 = !DILocation(line: 3936, column: 16, scope: !14370)
!14389 = !DILocation(line: 3940, column: 38, scope: !14390)
!14390 = distinct !DILexicalBlock(scope: !14381, file: !3, line: 3938, column: 6)
!14391 = !DILocation(line: 3940, column: 55, scope: !14390)
!14392 = !DILocation(line: 3940, column: 53, scope: !14390)
!14393 = !DILocation(line: 3940, column: 32, scope: !14390)
!14394 = !DILocation(line: 3940, column: 30, scope: !14390)
!14395 = !DILocation(line: 3940, column: 66, scope: !14390)
!14396 = !DILocation(line: 3940, column: 64, scope: !14390)
!14397 = !DILocation(line: 3940, column: 22, scope: !14390)
!14398 = !DILocation(line: 3941, column: 16, scope: !14390)
!14399 = !DILocation(line: 3941, column: 25, scope: !14390)
!14400 = !DILocation(line: 3941, column: 23, scope: !14390)
!14401 = !DILocation(line: 3941, column: 43, scope: !14390)
!14402 = !DILocation(line: 3941, column: 50, scope: !14390)
!14403 = !DILocation(line: 3941, column: 58, scope: !14390)
!14404 = !DILocation(line: 3941, column: 65, scope: !14390)
!14405 = !DILocation(line: 3941, column: 41, scope: !14390)
!14406 = !DILocation(line: 3941, column: 13, scope: !14390)
!14407 = !DILocation(line: 3942, column: 11, scope: !14408)
!14408 = distinct !DILexicalBlock(scope: !14390, file: !3, line: 3942, column: 11)
!14409 = !DILocation(line: 3942, column: 17, scope: !14408)
!14410 = !DILocation(line: 3942, column: 11, scope: !14390)
!14411 = !DILocation(line: 3942, column: 31, scope: !14408)
!14412 = !DILocation(line: 3942, column: 25, scope: !14408)
!14413 = !DILocation(line: 3943, column: 6, scope: !14390)
!14414 = !DILocation(line: 3945, column: 35, scope: !14292)
!14415 = !DILocation(line: 3945, column: 44, scope: !14292)
!14416 = !DILocation(line: 3945, column: 51, scope: !14292)
!14417 = !DILocation(line: 3945, column: 58, scope: !14292)
!14418 = !DILocation(line: 3945, column: 70, scope: !14292)
!14419 = !DILocation(line: 3945, column: 80, scope: !14292)
!14420 = !DILocation(line: 3945, column: 87, scope: !14292)
!14421 = !DILocation(line: 3945, column: 101, scope: !14292)
!14422 = !DILocation(line: 3945, column: 6, scope: !14292)
!14423 = !DILocation(line: 3946, column: 5, scope: !14292)
!14424 = !DILocation(line: 3947, column: 4, scope: !14020)
!14425 = !DILocation(line: 3799, column: 46, scope: !14013)
!14426 = !DILocation(line: 3799, column: 4, scope: !14013)
!14427 = distinct !{!14427, !14018, !14428}
!14428 = !DILocation(line: 3947, column: 4, scope: !14010)
!14429 = !DILocation(line: 3948, column: 3, scope: !13994)
!14430 = !DILocation(line: 3785, column: 51, scope: !13989)
!14431 = !DILocation(line: 3785, column: 3, scope: !13989)
!14432 = distinct !{!14432, !13992, !14433}
!14433 = !DILocation(line: 3948, column: 3, scope: !13986)
!14434 = !DILocation(line: 3949, column: 2, scope: !13971)
!14435 = !DILocation(line: 3950, column: 2, scope: !13789)
!14436 = !DILocation(line: 3951, column: 18, scope: !13789)
!14437 = !DILocation(line: 3951, column: 2, scope: !13789)
!14438 = !DILocation(line: 3953, column: 2, scope: !13789)
!14439 = !DILocation(line: 3954, column: 1, scope: !13789)
!14440 = distinct !DISubprogram(name: "dynamicPaint_paintSinglePoint", scope: !3, file: !3, line: 3957, type: !14441, scopeLine: 3959, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!14441 = !DISubroutineType(types: !14442)
!14442 = !{!135, !242, !233, !4416, !3426, !13701, !4204, !207}
!14443 = !DILocalVariable(name: "surface", arg: 1, scope: !14440, file: !3, line: 3957, type: !242)
!14444 = !DILocation(line: 3957, column: 63, scope: !14440)
!14445 = !DILocalVariable(name: "pointCoord", arg: 2, scope: !14440, file: !3, line: 3957, type: !233)
!14446 = !DILocation(line: 3957, column: 79, scope: !14440)
!14447 = !DILocalVariable(name: "brush", arg: 3, scope: !14440, file: !3, line: 3957, type: !4416)
!14448 = !DILocation(line: 3957, column: 118, scope: !14440)
!14449 = !DILocalVariable(name: "brushOb", arg: 4, scope: !14440, file: !3, line: 3958, type: !3426)
!14450 = !DILocation(line: 3958, column: 50, scope: !14440)
!14451 = !DILocalVariable(name: "bMats", arg: 5, scope: !14440, file: !3, line: 3958, type: !13701)
!14452 = !DILocation(line: 3958, column: 75, scope: !14440)
!14453 = !DILocalVariable(name: "scene", arg: 6, scope: !14440, file: !3, line: 3958, type: !4204)
!14454 = !DILocation(line: 3958, column: 89, scope: !14440)
!14455 = !DILocalVariable(name: "timescale", arg: 7, scope: !14440, file: !3, line: 3958, type: !207)
!14456 = !DILocation(line: 3958, column: 102, scope: !14440)
!14457 = !DILocalVariable(name: "index", scope: !14440, file: !3, line: 3960, type: !135)
!14458 = !DILocation(line: 3960, column: 6, scope: !14440)
!14459 = !DILocalVariable(name: "brush_radius", scope: !14440, file: !3, line: 3961, type: !207)
!14460 = !DILocation(line: 3961, column: 8, scope: !14440)
!14461 = !DILocation(line: 3961, column: 23, scope: !14440)
!14462 = !DILocation(line: 3961, column: 30, scope: !14440)
!14463 = !DILocation(line: 3961, column: 47, scope: !14440)
!14464 = !DILocation(line: 3961, column: 56, scope: !14440)
!14465 = !DILocation(line: 3961, column: 45, scope: !14440)
!14466 = !DILocalVariable(name: "sData", scope: !14440, file: !3, line: 3962, type: !3906)
!14467 = !DILocation(line: 3962, column: 20, scope: !14440)
!14468 = !DILocation(line: 3962, column: 28, scope: !14440)
!14469 = !DILocation(line: 3962, column: 37, scope: !14440)
!14470 = !DILocalVariable(name: "bData", scope: !14440, file: !3, line: 3963, type: !4026)
!14471 = !DILocation(line: 3963, column: 17, scope: !14440)
!14472 = !DILocation(line: 3963, column: 25, scope: !14440)
!14473 = !DILocation(line: 3963, column: 32, scope: !14440)
!14474 = !DILocalVariable(name: "brushVel", scope: !14440, file: !3, line: 3964, type: !202)
!14475 = !DILocation(line: 3964, column: 8, scope: !14440)
!14476 = !DILocation(line: 3966, column: 6, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 3966, column: 6)
!14478 = !DILocation(line: 3966, column: 13, scope: !14477)
!14479 = !DILocation(line: 3966, column: 19, scope: !14477)
!14480 = !DILocation(line: 3966, column: 6, scope: !14440)
!14481 = !DILocation(line: 3967, column: 45, scope: !14477)
!14482 = !DILocation(line: 3967, column: 52, scope: !14477)
!14483 = !DILocation(line: 3967, column: 72, scope: !14477)
!14484 = !DILocation(line: 3967, column: 3, scope: !14477)
!14485 = !DILocation(line: 3975, column: 13, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14440, file: !3, line: 3975, column: 2)
!14487 = !DILocation(line: 3975, column: 7, scope: !14486)
!14488 = !DILocation(line: 3975, column: 18, scope: !14489)
!14489 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 3975, column: 2)
!14490 = !DILocation(line: 3975, column: 26, scope: !14489)
!14491 = !DILocation(line: 3975, column: 33, scope: !14489)
!14492 = !DILocation(line: 3975, column: 24, scope: !14489)
!14493 = !DILocation(line: 3975, column: 2, scope: !14486)
!14494 = !DILocalVariable(name: "distance", scope: !14495, file: !3, line: 3976, type: !207)
!14495 = distinct !DILexicalBlock(scope: !14489, file: !3, line: 3975, column: 56)
!14496 = !DILocation(line: 3976, column: 9, scope: !14495)
!14497 = !DILocation(line: 3976, column: 29, scope: !14495)
!14498 = !DILocation(line: 3976, column: 41, scope: !14495)
!14499 = !DILocation(line: 3976, column: 48, scope: !14495)
!14500 = !DILocation(line: 3976, column: 58, scope: !14495)
!14501 = !DILocation(line: 3976, column: 65, scope: !14495)
!14502 = !DILocation(line: 3976, column: 71, scope: !14495)
!14503 = !DILocation(line: 3976, column: 79, scope: !14495)
!14504 = !DILocation(line: 3976, column: 20, scope: !14495)
!14505 = !DILocalVariable(name: "colorband", scope: !14495, file: !3, line: 3977, type: !638)
!14506 = !DILocation(line: 3977, column: 9, scope: !14495)
!14507 = !DILocalVariable(name: "strength", scope: !14495, file: !3, line: 3978, type: !207)
!14508 = !DILocation(line: 3978, column: 9, scope: !14495)
!14509 = !DILocation(line: 3980, column: 7, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 3980, column: 7)
!14511 = !DILocation(line: 3980, column: 18, scope: !14510)
!14512 = !DILocation(line: 3980, column: 16, scope: !14510)
!14513 = !DILocation(line: 3980, column: 7, scope: !14495)
!14514 = !DILocation(line: 3980, column: 32, scope: !14510)
!14515 = !DILocation(line: 3983, column: 7, scope: !14516)
!14516 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 3983, column: 7)
!14517 = !DILocation(line: 3983, column: 14, scope: !14516)
!14518 = !DILocation(line: 3983, column: 32, scope: !14516)
!14519 = !DILocation(line: 3983, column: 60, scope: !14516)
!14520 = !DILocation(line: 3984, column: 7, scope: !14516)
!14521 = !DILocation(line: 3984, column: 14, scope: !14516)
!14522 = !DILocation(line: 3984, column: 32, scope: !14516)
!14523 = !DILocation(line: 3983, column: 7, scope: !14495)
!14524 = !DILocation(line: 3986, column: 22, scope: !14525)
!14525 = distinct !DILexicalBlock(scope: !14516, file: !3, line: 3985, column: 3)
!14526 = !DILocation(line: 3986, column: 33, scope: !14525)
!14527 = !DILocation(line: 3986, column: 31, scope: !14525)
!14528 = !DILocation(line: 3986, column: 20, scope: !14525)
!14529 = !DILocation(line: 3986, column: 13, scope: !14525)
!14530 = !DILocation(line: 3987, column: 4, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14532, file: !3, line: 3987, column: 4)
!14532 = distinct !DILexicalBlock(scope: !14525, file: !3, line: 3987, column: 4)
!14533 = !DILocation(line: 3987, column: 4, scope: !14532)
!14534 = !DILocation(line: 3987, column: 4, scope: !14535)
!14535 = distinct !DILexicalBlock(scope: !14531, file: !3, line: 3987, column: 4)
!14536 = !DILocation(line: 3988, column: 3, scope: !14525)
!14537 = !DILocation(line: 3990, column: 13, scope: !14538)
!14538 = distinct !DILexicalBlock(scope: !14516, file: !3, line: 3989, column: 8)
!14539 = !DILocation(line: 3993, column: 7, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14495, file: !3, line: 3993, column: 7)
!14541 = !DILocation(line: 3993, column: 16, scope: !14540)
!14542 = !DILocation(line: 3993, column: 7, scope: !14495)
!14543 = !DILocalVariable(name: "paintColor", scope: !14544, file: !3, line: 3994, type: !206)
!14544 = distinct !DILexicalBlock(scope: !14540, file: !3, line: 3993, column: 27)
!14545 = !DILocation(line: 3994, column: 10, scope: !14544)
!14546 = !DILocalVariable(name: "depth", scope: !14544, file: !3, line: 3995, type: !207)
!14547 = !DILocation(line: 3995, column: 10, scope: !14544)
!14548 = !DILocalVariable(name: "velocity_val", scope: !14544, file: !3, line: 3996, type: !207)
!14549 = !DILocation(line: 3996, column: 10, scope: !14544)
!14550 = !DILocation(line: 3999, column: 27, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 3999, column: 8)
!14552 = !DILocation(line: 3999, column: 34, scope: !14551)
!14553 = !DILocation(line: 3999, column: 8, scope: !14551)
!14554 = !DILocation(line: 3999, column: 8, scope: !14544)
!14555 = !DILocalVariable(name: "alpha_factor", scope: !14556, file: !3, line: 4000, type: !207)
!14556 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 3999, column: 42)
!14557 = !DILocation(line: 4000, column: 11, scope: !14556)
!14558 = !DILocalVariable(name: "hit_coord", scope: !14556, file: !3, line: 4001, type: !206)
!14559 = !DILocation(line: 4001, column: 11, scope: !14556)
!14560 = !DILocalVariable(name: "mvert", scope: !14556, file: !3, line: 4002, type: !3190)
!14561 = !DILocation(line: 4002, column: 12, scope: !14556)
!14562 = !DILocation(line: 4002, column: 20, scope: !14556)
!14563 = !DILocation(line: 4002, column: 27, scope: !14556)
!14564 = !DILocation(line: 4002, column: 31, scope: !14556)
!14565 = !DILocation(line: 4002, column: 44, scope: !14556)
!14566 = !DILocation(line: 4002, column: 51, scope: !14556)
!14567 = !DILocation(line: 4004, column: 16, scope: !14556)
!14568 = !DILocation(line: 4004, column: 27, scope: !14556)
!14569 = !DILocation(line: 4004, column: 36, scope: !14556)
!14570 = !DILocation(line: 4004, column: 5, scope: !14556)
!14571 = !DILocation(line: 4005, column: 15, scope: !14556)
!14572 = !DILocation(line: 4005, column: 24, scope: !14556)
!14573 = !DILocation(line: 4005, column: 31, scope: !14556)
!14574 = !DILocation(line: 4005, column: 5, scope: !14556)
!14575 = !DILocation(line: 4007, column: 32, scope: !14556)
!14576 = !DILocation(line: 4007, column: 39, scope: !14556)
!14577 = !DILocation(line: 4007, column: 66, scope: !14556)
!14578 = !DILocation(line: 4007, column: 75, scope: !14556)
!14579 = !DILocation(line: 4007, column: 82, scope: !14556)
!14580 = !DILocation(line: 4007, column: 92, scope: !14556)
!14581 = !DILocation(line: 4007, column: 99, scope: !14556)
!14582 = !DILocation(line: 4007, column: 105, scope: !14556)
!14583 = !DILocation(line: 4007, column: 113, scope: !14556)
!14584 = !DILocation(line: 4007, column: 116, scope: !14556)
!14585 = !DILocation(line: 4007, column: 133, scope: !14556)
!14586 = !DILocation(line: 4007, column: 140, scope: !14556)
!14587 = !DILocation(line: 4007, column: 5, scope: !14556)
!14588 = !DILocation(line: 4008, column: 4, scope: !14556)
!14589 = !DILocation(line: 4011, column: 8, scope: !14590)
!14590 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 4011, column: 8)
!14591 = !DILocation(line: 4011, column: 15, scope: !14590)
!14592 = !DILocation(line: 4011, column: 33, scope: !14590)
!14593 = !DILocation(line: 4011, column: 59, scope: !14590)
!14594 = !DILocation(line: 4011, column: 75, scope: !14590)
!14595 = !DILocation(line: 4011, column: 82, scope: !14590)
!14596 = !DILocation(line: 4011, column: 102, scope: !14590)
!14597 = !DILocation(line: 4011, column: 100, scope: !14590)
!14598 = !DILocation(line: 4011, column: 113, scope: !14590)
!14599 = !DILocation(line: 4011, column: 62, scope: !14590)
!14600 = !DILocation(line: 4011, column: 8, scope: !14544)
!14601 = !DILocation(line: 4012, column: 16, scope: !14590)
!14602 = !DILocation(line: 4012, column: 14, scope: !14590)
!14603 = !DILocation(line: 4012, column: 5, scope: !14590)
!14604 = !DILocation(line: 4014, column: 8, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 4014, column: 8)
!14606 = !DILocation(line: 4014, column: 15, scope: !14605)
!14607 = !DILocation(line: 4014, column: 21, scope: !14605)
!14608 = !DILocation(line: 4014, column: 8, scope: !14544)
!14609 = !DILocalVariable(name: "velocity", scope: !14610, file: !3, line: 4015, type: !206)
!14610 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 4014, column: 49)
!14611 = !DILocation(line: 4015, column: 11, scope: !14610)
!14612 = !DILocation(line: 4018, column: 9, scope: !14613)
!14613 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 4018, column: 9)
!14614 = !DILocation(line: 4018, column: 16, scope: !14613)
!14615 = !DILocation(line: 4018, column: 9, scope: !14610)
!14616 = !DILocation(line: 4019, column: 18, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 4018, column: 26)
!14618 = !DILocation(line: 4019, column: 37, scope: !14617)
!14619 = !DILocation(line: 4019, column: 28, scope: !14617)
!14620 = !DILocation(line: 4019, column: 40, scope: !14617)
!14621 = !DILocation(line: 4019, column: 47, scope: !14617)
!14622 = !DILocation(line: 4019, column: 56, scope: !14617)
!14623 = !DILocation(line: 4019, column: 63, scope: !14617)
!14624 = !DILocation(line: 4019, column: 6, scope: !14617)
!14625 = !DILocation(line: 4020, column: 5, scope: !14617)
!14626 = !DILocation(line: 4022, column: 17, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14613, file: !3, line: 4021, column: 10)
!14628 = !DILocation(line: 4022, column: 36, scope: !14627)
!14629 = !DILocation(line: 4022, column: 27, scope: !14627)
!14630 = !DILocation(line: 4022, column: 6, scope: !14627)
!14631 = !DILocation(line: 4024, column: 27, scope: !14610)
!14632 = !DILocation(line: 4024, column: 20, scope: !14610)
!14633 = !DILocation(line: 4024, column: 18, scope: !14610)
!14634 = !DILocation(line: 4027, column: 9, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 4027, column: 9)
!14636 = !DILocation(line: 4027, column: 18, scope: !14635)
!14637 = !DILocation(line: 4027, column: 23, scope: !14635)
!14638 = !DILocation(line: 4027, column: 53, scope: !14635)
!14639 = !DILocation(line: 4028, column: 9, scope: !14635)
!14640 = !DILocation(line: 4028, column: 16, scope: !14635)
!14641 = !DILocation(line: 4028, column: 22, scope: !14635)
!14642 = !DILocation(line: 4028, column: 45, scope: !14635)
!14643 = !DILocation(line: 4028, column: 48, scope: !14635)
!14644 = !DILocation(line: 4028, column: 55, scope: !14635)
!14645 = !DILocation(line: 4027, column: 9, scope: !14610)
!14646 = !DILocation(line: 4030, column: 18, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 4029, column: 5)
!14648 = !DILocation(line: 4030, column: 25, scope: !14647)
!14649 = !DILocation(line: 4030, column: 40, scope: !14647)
!14650 = !DILocation(line: 4030, column: 46, scope: !14647)
!14651 = !DILocation(line: 4030, column: 52, scope: !14647)
!14652 = !DILocation(line: 4030, column: 6, scope: !14647)
!14653 = !DILocation(line: 4031, column: 17, scope: !14647)
!14654 = !DILocation(line: 4031, column: 24, scope: !14647)
!14655 = !DILocation(line: 4031, column: 39, scope: !14647)
!14656 = !DILocation(line: 4031, column: 45, scope: !14647)
!14657 = !DILocation(line: 4031, column: 58, scope: !14647)
!14658 = !DILocation(line: 4031, column: 56, scope: !14647)
!14659 = !DILocation(line: 4031, column: 6, scope: !14647)
!14660 = !DILocation(line: 4032, column: 45, scope: !14647)
!14661 = !DILocation(line: 4032, column: 6, scope: !14647)
!14662 = !DILocation(line: 4032, column: 13, scope: !14647)
!14663 = !DILocation(line: 4032, column: 28, scope: !14647)
!14664 = !DILocation(line: 4032, column: 34, scope: !14647)
!14665 = !DILocation(line: 4032, column: 38, scope: !14647)
!14666 = !DILocation(line: 4032, column: 43, scope: !14647)
!14667 = !DILocation(line: 4033, column: 5, scope: !14647)
!14668 = !DILocation(line: 4034, column: 4, scope: !14610)
!14669 = !DILocation(line: 4036, column: 8, scope: !14670)
!14670 = distinct !DILexicalBlock(scope: !14544, file: !3, line: 4036, column: 8)
!14671 = !DILocation(line: 4036, column: 17, scope: !14670)
!14672 = !DILocation(line: 4036, column: 22, scope: !14670)
!14673 = !DILocation(line: 4036, column: 8, scope: !14544)
!14674 = !DILocation(line: 4037, column: 9, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14676, file: !3, line: 4037, column: 9)
!14676 = distinct !DILexicalBlock(scope: !14670, file: !3, line: 4036, column: 53)
!14677 = !DILocation(line: 4037, column: 16, scope: !14675)
!14678 = !DILocation(line: 4037, column: 34, scope: !14675)
!14679 = !DILocation(line: 4037, column: 60, scope: !14675)
!14680 = !DILocation(line: 4038, column: 11, scope: !14675)
!14681 = !DILocation(line: 4038, column: 18, scope: !14675)
!14682 = !DILocation(line: 4038, column: 24, scope: !14675)
!14683 = !DILocation(line: 4037, column: 9, scope: !14676)
!14684 = !DILocation(line: 4040, column: 22, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14675, file: !3, line: 4039, column: 5)
!14686 = !DILocation(line: 4040, column: 6, scope: !14685)
!14687 = !DILocation(line: 4040, column: 20, scope: !14685)
!14688 = !DILocation(line: 4041, column: 22, scope: !14685)
!14689 = !DILocation(line: 4041, column: 6, scope: !14685)
!14690 = !DILocation(line: 4041, column: 20, scope: !14685)
!14691 = !DILocation(line: 4042, column: 22, scope: !14685)
!14692 = !DILocation(line: 4042, column: 6, scope: !14685)
!14693 = !DILocation(line: 4042, column: 20, scope: !14685)
!14694 = !DILocation(line: 4043, column: 5, scope: !14685)
!14695 = !DILocation(line: 4045, column: 30, scope: !14696)
!14696 = distinct !DILexicalBlock(scope: !14697, file: !3, line: 4045, column: 10)
!14697 = distinct !DILexicalBlock(scope: !14675, file: !3, line: 4044, column: 10)
!14698 = !DILocation(line: 4045, column: 37, scope: !14696)
!14699 = !DILocation(line: 4045, column: 11, scope: !14696)
!14700 = !DILocation(line: 4045, column: 10, scope: !14697)
!14701 = !DILocation(line: 4046, column: 23, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !14696, file: !3, line: 4045, column: 45)
!14703 = !DILocation(line: 4046, column: 30, scope: !14702)
!14704 = !DILocation(line: 4046, column: 7, scope: !14702)
!14705 = !DILocation(line: 4046, column: 21, scope: !14702)
!14706 = !DILocation(line: 4047, column: 23, scope: !14702)
!14707 = !DILocation(line: 4047, column: 30, scope: !14702)
!14708 = !DILocation(line: 4047, column: 7, scope: !14702)
!14709 = !DILocation(line: 4047, column: 21, scope: !14702)
!14710 = !DILocation(line: 4048, column: 23, scope: !14702)
!14711 = !DILocation(line: 4048, column: 30, scope: !14702)
!14712 = !DILocation(line: 4048, column: 7, scope: !14702)
!14713 = !DILocation(line: 4048, column: 21, scope: !14702)
!14714 = !DILocation(line: 4049, column: 6, scope: !14702)
!14715 = !DILocation(line: 4051, column: 4, scope: !14676)
!14716 = !DILocation(line: 4052, column: 13, scope: !14717)
!14717 = distinct !DILexicalBlock(scope: !14670, file: !3, line: 4052, column: 13)
!14718 = !DILocation(line: 4052, column: 22, scope: !14717)
!14719 = !DILocation(line: 4052, column: 27, scope: !14717)
!14720 = !DILocation(line: 4052, column: 60, scope: !14717)
!14721 = !DILocation(line: 4053, column: 13, scope: !14717)
!14722 = !DILocation(line: 4053, column: 22, scope: !14717)
!14723 = !DILocation(line: 4053, column: 27, scope: !14717)
!14724 = !DILocation(line: 4052, column: 13, scope: !14670)
!14725 = !DILocalVariable(name: "disp_intersect", scope: !14726, file: !3, line: 4056, type: !207)
!14726 = distinct !DILexicalBlock(scope: !14717, file: !3, line: 4054, column: 4)
!14727 = !DILocation(line: 4056, column: 11, scope: !14726)
!14728 = !DILocation(line: 4056, column: 43, scope: !14726)
!14729 = !DILocation(line: 4056, column: 58, scope: !14726)
!14730 = !DILocation(line: 4056, column: 56, scope: !14726)
!14731 = !DILocation(line: 4056, column: 70, scope: !14726)
!14732 = !DILocation(line: 4056, column: 68, scope: !14726)
!14733 = !DILocation(line: 4056, column: 36, scope: !14726)
!14734 = !DILocation(line: 4056, column: 34, scope: !14726)
!14735 = !DILocation(line: 4056, column: 87, scope: !14726)
!14736 = !DILocation(line: 4056, column: 85, scope: !14726)
!14737 = !DILocation(line: 4057, column: 14, scope: !14726)
!14738 = !DILocation(line: 4057, column: 29, scope: !14726)
!14739 = !DILocation(line: 4057, column: 27, scope: !14726)
!14740 = !DILocation(line: 4057, column: 47, scope: !14726)
!14741 = !DILocation(line: 4057, column: 54, scope: !14726)
!14742 = !DILocation(line: 4057, column: 62, scope: !14726)
!14743 = !DILocation(line: 4057, column: 69, scope: !14726)
!14744 = !DILocation(line: 4057, column: 45, scope: !14726)
!14745 = !DILocation(line: 4057, column: 11, scope: !14726)
!14746 = !DILocation(line: 4058, column: 9, scope: !14747)
!14747 = distinct !DILexicalBlock(scope: !14726, file: !3, line: 4058, column: 9)
!14748 = !DILocation(line: 4058, column: 15, scope: !14747)
!14749 = !DILocation(line: 4058, column: 9, scope: !14726)
!14750 = !DILocation(line: 4058, column: 29, scope: !14747)
!14751 = !DILocation(line: 4058, column: 23, scope: !14747)
!14752 = !DILocation(line: 4059, column: 4, scope: !14726)
!14753 = !DILocation(line: 4060, column: 33, scope: !14544)
!14754 = !DILocation(line: 4060, column: 42, scope: !14544)
!14755 = !DILocation(line: 4060, column: 49, scope: !14544)
!14756 = !DILocation(line: 4060, column: 56, scope: !14544)
!14757 = !DILocation(line: 4060, column: 68, scope: !14544)
!14758 = !DILocation(line: 4060, column: 78, scope: !14544)
!14759 = !DILocation(line: 4060, column: 85, scope: !14544)
!14760 = !DILocation(line: 4060, column: 99, scope: !14544)
!14761 = !DILocation(line: 4060, column: 4, scope: !14544)
!14762 = !DILocation(line: 4061, column: 3, scope: !14544)
!14763 = !DILocation(line: 4062, column: 2, scope: !14495)
!14764 = !DILocation(line: 3975, column: 52, scope: !14489)
!14765 = !DILocation(line: 3975, column: 2, scope: !14489)
!14766 = distinct !{!14766, !14493, !14767}
!14767 = !DILocation(line: 4062, column: 2, scope: !14486)
!14768 = !DILocation(line: 4064, column: 2, scope: !14440)
!14769 = distinct !DISubprogram(name: "dynamicPaint_paintMesh", scope: !3, file: !3, line: 3314, type: !14770, scopeLine: 3320, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!14770 = !DISubroutineType(types: !14771)
!14771 = !{!135, !242, !4416, !3426, !13701, !4204, !207}
!14772 = !DILocalVariable(name: "surface", arg: 1, scope: !14769, file: !3, line: 3314, type: !242)
!14773 = !DILocation(line: 3314, column: 56, scope: !14769)
!14774 = !DILocalVariable(name: "brush", arg: 2, scope: !14769, file: !3, line: 3315, type: !4416)
!14775 = !DILocation(line: 3315, column: 62, scope: !14769)
!14776 = !DILocalVariable(name: "brushOb", arg: 3, scope: !14769, file: !3, line: 3316, type: !3426)
!14777 = !DILocation(line: 3316, column: 43, scope: !14769)
!14778 = !DILocalVariable(name: "bMats", arg: 4, scope: !14769, file: !3, line: 3317, type: !13701)
!14779 = !DILocation(line: 3317, column: 51, scope: !14769)
!14780 = !DILocalVariable(name: "scene", arg: 5, scope: !14769, file: !3, line: 3318, type: !4204)
!14781 = !DILocation(line: 3318, column: 42, scope: !14769)
!14782 = !DILocalVariable(name: "timescale", arg: 6, scope: !14769, file: !3, line: 3319, type: !207)
!14783 = !DILocation(line: 3319, column: 41, scope: !14769)
!14784 = !DILocalVariable(name: "sData", scope: !14769, file: !3, line: 3321, type: !3906)
!14785 = !DILocation(line: 3321, column: 20, scope: !14769)
!14786 = !DILocation(line: 3321, column: 28, scope: !14769)
!14787 = !DILocation(line: 3321, column: 37, scope: !14769)
!14788 = !DILocalVariable(name: "bData", scope: !14769, file: !3, line: 3322, type: !4026)
!14789 = !DILocation(line: 3322, column: 17, scope: !14769)
!14790 = !DILocation(line: 3322, column: 25, scope: !14769)
!14791 = !DILocation(line: 3322, column: 32, scope: !14769)
!14792 = !DILocalVariable(name: "dm", scope: !14769, file: !3, line: 3323, type: !2003)
!14793 = !DILocation(line: 3323, column: 15, scope: !14769)
!14794 = !DILocalVariable(name: "brushVelocity", scope: !14769, file: !3, line: 3324, type: !201)
!14795 = !DILocation(line: 3324, column: 9, scope: !14769)
!14796 = !DILocalVariable(name: "mvert", scope: !14769, file: !3, line: 3325, type: !3190)
!14797 = !DILocation(line: 3325, column: 9, scope: !14769)
!14798 = !DILocalVariable(name: "mface", scope: !14769, file: !3, line: 3326, type: !5181)
!14799 = !DILocation(line: 3326, column: 9, scope: !14769)
!14800 = !DILocation(line: 3328, column: 6, scope: !14801)
!14801 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 3328, column: 6)
!14802 = !DILocation(line: 3328, column: 13, scope: !14801)
!14803 = !DILocation(line: 3328, column: 19, scope: !14801)
!14804 = !DILocation(line: 3328, column: 6, scope: !14769)
!14805 = !DILocation(line: 3329, column: 43, scope: !14801)
!14806 = !DILocation(line: 3329, column: 50, scope: !14801)
!14807 = !DILocation(line: 3329, column: 59, scope: !14801)
!14808 = !DILocation(line: 3329, column: 82, scope: !14801)
!14809 = !DILocation(line: 3329, column: 3, scope: !14801)
!14810 = !DILocation(line: 3331, column: 7, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 3331, column: 6)
!14812 = !DILocation(line: 3331, column: 14, scope: !14811)
!14813 = !DILocation(line: 3331, column: 6, scope: !14769)
!14814 = !DILocation(line: 3331, column: 18, scope: !14811)
!14815 = !DILocalVariable(name: "treeData", scope: !14816, file: !3, line: 3333, type: !3245)
!14816 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 3332, column: 2)
!14817 = !DILocation(line: 3333, column: 19, scope: !14816)
!14818 = !DILocalVariable(name: "avg_brushNor", scope: !14816, file: !3, line: 3334, type: !206)
!14819 = !DILocation(line: 3334, column: 9, scope: !14816)
!14820 = !DILocalVariable(name: "brush_radius", scope: !14816, file: !3, line: 3335, type: !207)
!14821 = !DILocation(line: 3335, column: 9, scope: !14816)
!14822 = !DILocation(line: 3335, column: 24, scope: !14816)
!14823 = !DILocation(line: 3335, column: 31, scope: !14816)
!14824 = !DILocation(line: 3335, column: 48, scope: !14816)
!14825 = !DILocation(line: 3335, column: 57, scope: !14816)
!14826 = !DILocation(line: 3335, column: 46, scope: !14816)
!14827 = !DILocalVariable(name: "numOfVerts", scope: !14816, file: !3, line: 3336, type: !135)
!14828 = !DILocation(line: 3336, column: 7, scope: !14816)
!14829 = !DILocalVariable(name: "ii", scope: !14816, file: !3, line: 3337, type: !135)
!14830 = !DILocation(line: 3337, column: 7, scope: !14816)
!14831 = !DILocalVariable(name: "mesh_bb", scope: !14816, file: !3, line: 3338, type: !3160)
!14832 = !DILocation(line: 3338, column: 12, scope: !14816)
!14833 = !DILocalVariable(name: "grid", scope: !14816, file: !3, line: 3339, type: !3175)
!14834 = !DILocation(line: 3339, column: 15, scope: !14816)
!14835 = !DILocation(line: 3339, column: 22, scope: !14816)
!14836 = !DILocation(line: 3339, column: 29, scope: !14816)
!14837 = !DILocation(line: 3341, column: 18, scope: !14816)
!14838 = !DILocation(line: 3341, column: 25, scope: !14816)
!14839 = !DILocation(line: 3341, column: 8, scope: !14816)
!14840 = !DILocation(line: 3341, column: 6, scope: !14816)
!14841 = !DILocation(line: 3342, column: 11, scope: !14816)
!14842 = !DILocation(line: 3342, column: 15, scope: !14816)
!14843 = !DILocation(line: 3342, column: 28, scope: !14816)
!14844 = !DILocation(line: 3342, column: 9, scope: !14816)
!14845 = !DILocation(line: 3343, column: 11, scope: !14816)
!14846 = !DILocation(line: 3343, column: 15, scope: !14816)
!14847 = !DILocation(line: 3343, column: 32, scope: !14816)
!14848 = !DILocation(line: 3343, column: 9, scope: !14816)
!14849 = !DILocation(line: 3344, column: 16, scope: !14816)
!14850 = !DILocation(line: 3344, column: 20, scope: !14816)
!14851 = !DILocation(line: 3344, column: 32, scope: !14816)
!14852 = !DILocation(line: 3344, column: 14, scope: !14816)
!14853 = !DILocation(line: 3349, column: 11, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 3349, column: 3)
!14855 = !DILocation(line: 3349, column: 8, scope: !14854)
!14856 = !DILocation(line: 3349, column: 16, scope: !14857)
!14857 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 3349, column: 3)
!14858 = !DILocation(line: 3349, column: 21, scope: !14857)
!14859 = !DILocation(line: 3349, column: 19, scope: !14857)
!14860 = !DILocation(line: 3349, column: 3, scope: !14854)
!14861 = !DILocation(line: 3350, column: 14, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14857, file: !3, line: 3349, column: 39)
!14863 = !DILocation(line: 3350, column: 23, scope: !14862)
!14864 = !DILocation(line: 3350, column: 30, scope: !14862)
!14865 = !DILocation(line: 3350, column: 36, scope: !14862)
!14866 = !DILocation(line: 3350, column: 40, scope: !14862)
!14867 = !DILocation(line: 3350, column: 4, scope: !14862)
!14868 = !DILocation(line: 3351, column: 26, scope: !14862)
!14869 = !DILocation(line: 3351, column: 32, scope: !14862)
!14870 = !DILocation(line: 3351, column: 36, scope: !14862)
!14871 = !DILocation(line: 3351, column: 4, scope: !14862)
!14872 = !DILocation(line: 3354, column: 8, scope: !14873)
!14873 = distinct !DILexicalBlock(scope: !14862, file: !3, line: 3354, column: 8)
!14874 = !DILocation(line: 3354, column: 15, scope: !14873)
!14875 = !DILocation(line: 3354, column: 21, scope: !14873)
!14876 = !DILocation(line: 3354, column: 47, scope: !14873)
!14877 = !DILocation(line: 3354, column: 50, scope: !14873)
!14878 = !DILocation(line: 3354, column: 57, scope: !14873)
!14879 = !DILocation(line: 3354, column: 67, scope: !14873)
!14880 = !DILocation(line: 3354, column: 8, scope: !14862)
!14881 = !DILocalVariable(name: "nor", scope: !14882, file: !3, line: 3355, type: !206)
!14882 = distinct !DILexicalBlock(scope: !14873, file: !3, line: 3354, column: 93)
!14883 = !DILocation(line: 3355, column: 11, scope: !14882)
!14884 = !DILocation(line: 3356, column: 30, scope: !14882)
!14885 = !DILocation(line: 3356, column: 35, scope: !14882)
!14886 = !DILocation(line: 3356, column: 41, scope: !14882)
!14887 = !DILocation(line: 3356, column: 45, scope: !14882)
!14888 = !DILocation(line: 3356, column: 5, scope: !14882)
!14889 = !DILocation(line: 3357, column: 20, scope: !14882)
!14890 = !DILocation(line: 3357, column: 29, scope: !14882)
!14891 = !DILocation(line: 3357, column: 36, scope: !14882)
!14892 = !DILocation(line: 3357, column: 5, scope: !14882)
!14893 = !DILocation(line: 3358, column: 18, scope: !14882)
!14894 = !DILocation(line: 3358, column: 5, scope: !14882)
!14895 = !DILocation(line: 3360, column: 15, scope: !14882)
!14896 = !DILocation(line: 3360, column: 29, scope: !14882)
!14897 = !DILocation(line: 3360, column: 5, scope: !14882)
!14898 = !DILocation(line: 3361, column: 4, scope: !14882)
!14899 = !DILocation(line: 3362, column: 3, scope: !14862)
!14900 = !DILocation(line: 3349, column: 35, scope: !14857)
!14901 = !DILocation(line: 3349, column: 3, scope: !14857)
!14902 = distinct !{!14902, !14860, !14903}
!14903 = !DILocation(line: 3362, column: 3, scope: !14854)
!14904 = !DILocation(line: 3364, column: 7, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 3364, column: 7)
!14906 = !DILocation(line: 3364, column: 14, scope: !14905)
!14907 = !DILocation(line: 3364, column: 20, scope: !14905)
!14908 = !DILocation(line: 3364, column: 46, scope: !14905)
!14909 = !DILocation(line: 3364, column: 49, scope: !14905)
!14910 = !DILocation(line: 3364, column: 56, scope: !14905)
!14911 = !DILocation(line: 3364, column: 66, scope: !14905)
!14912 = !DILocation(line: 3364, column: 7, scope: !14816)
!14913 = !DILocation(line: 3365, column: 14, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 3364, column: 92)
!14915 = !DILocation(line: 3365, column: 42, scope: !14914)
!14916 = !DILocation(line: 3365, column: 35, scope: !14914)
!14917 = !DILocation(line: 3365, column: 33, scope: !14914)
!14918 = !DILocation(line: 3365, column: 4, scope: !14914)
!14919 = !DILocation(line: 3367, column: 10, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14914, file: !3, line: 3367, column: 8)
!14921 = !DILocation(line: 3367, column: 8, scope: !14914)
!14922 = !DILocation(line: 3368, column: 5, scope: !14920)
!14923 = !DILocation(line: 3368, column: 21, scope: !14920)
!14924 = !DILocation(line: 3370, column: 18, scope: !14920)
!14925 = !DILocation(line: 3370, column: 5, scope: !14920)
!14926 = !DILocation(line: 3371, column: 3, scope: !14914)
!14927 = !DILocation(line: 3374, column: 7, scope: !14928)
!14928 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 3374, column: 7)
!14929 = !DILocation(line: 3374, column: 12, scope: !14928)
!14930 = !DILocation(line: 3374, column: 42, scope: !14928)
!14931 = !DILocation(line: 3374, column: 48, scope: !14928)
!14932 = !DILocation(line: 3374, column: 71, scope: !14928)
!14933 = !DILocation(line: 3374, column: 78, scope: !14928)
!14934 = !DILocation(line: 3374, column: 15, scope: !14928)
!14935 = !DILocation(line: 3374, column: 7, scope: !14816)
!14936 = !DILocation(line: 3376, column: 43, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14938, file: !3, line: 3376, column: 8)
!14938 = distinct !DILexicalBlock(scope: !14928, file: !3, line: 3374, column: 93)
!14939 = !DILocation(line: 3376, column: 8, scope: !14937)
!14940 = !DILocation(line: 3376, column: 8, scope: !14938)
!14941 = !DILocalVariable(name: "c_index", scope: !14942, file: !3, line: 3377, type: !135)
!14942 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 3376, column: 60)
!14943 = !DILocation(line: 3377, column: 9, scope: !14942)
!14944 = !DILocalVariable(name: "total_cells", scope: !14942, file: !3, line: 3378, type: !135)
!14945 = !DILocation(line: 3378, column: 9, scope: !14942)
!14946 = !DILocation(line: 3378, column: 23, scope: !14942)
!14947 = !DILocation(line: 3378, column: 29, scope: !14942)
!14948 = !DILocation(line: 3378, column: 38, scope: !14942)
!14949 = !DILocation(line: 3378, column: 44, scope: !14942)
!14950 = !DILocation(line: 3378, column: 36, scope: !14942)
!14951 = !DILocation(line: 3378, column: 53, scope: !14942)
!14952 = !DILocation(line: 3378, column: 59, scope: !14942)
!14953 = !DILocation(line: 3378, column: 51, scope: !14942)
!14954 = !DILocation(line: 3381, column: 18, scope: !14955)
!14955 = distinct !DILexicalBlock(scope: !14942, file: !3, line: 3381, column: 5)
!14956 = !DILocation(line: 3381, column: 10, scope: !14955)
!14957 = !DILocation(line: 3381, column: 23, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14955, file: !3, line: 3381, column: 5)
!14959 = !DILocation(line: 3381, column: 33, scope: !14958)
!14960 = !DILocation(line: 3381, column: 31, scope: !14958)
!14961 = !DILocation(line: 3381, column: 5, scope: !14955)
!14962 = !DILocalVariable(name: "id", scope: !14963, file: !3, line: 3382, type: !135)
!14963 = distinct !DILexicalBlock(scope: !14958, file: !3, line: 3381, column: 57)
!14964 = !DILocation(line: 3382, column: 10, scope: !14963)
!14965 = !DILocation(line: 3385, column: 11, scope: !14966)
!14966 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 3385, column: 10)
!14967 = !DILocation(line: 3385, column: 17, scope: !14966)
!14968 = !DILocation(line: 3385, column: 23, scope: !14966)
!14969 = !DILocation(line: 3385, column: 32, scope: !14966)
!14970 = !DILocation(line: 3385, column: 63, scope: !14966)
!14971 = !DILocation(line: 3385, column: 69, scope: !14966)
!14972 = !DILocation(line: 3385, column: 76, scope: !14966)
!14973 = !DILocation(line: 3385, column: 96, scope: !14966)
!14974 = !DILocation(line: 3385, column: 103, scope: !14966)
!14975 = !DILocation(line: 3385, column: 36, scope: !14966)
!14976 = !DILocation(line: 3385, column: 10, scope: !14963)
!14977 = !DILocation(line: 3386, column: 7, scope: !14966)
!14978 = !DILocation(line: 3392, column: 14, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14963, file: !3, line: 3392, column: 6)
!14980 = !DILocation(line: 3392, column: 11, scope: !14979)
!14981 = !DILocation(line: 3392, column: 19, scope: !14982)
!14982 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 3392, column: 6)
!14983 = !DILocation(line: 3392, column: 24, scope: !14982)
!14984 = !DILocation(line: 3392, column: 30, scope: !14982)
!14985 = !DILocation(line: 3392, column: 36, scope: !14982)
!14986 = !DILocation(line: 3392, column: 22, scope: !14982)
!14987 = !DILocation(line: 3392, column: 6, scope: !14979)
!14988 = !DILocalVariable(name: "index", scope: !14989, file: !3, line: 3393, type: !135)
!14989 = distinct !DILexicalBlock(scope: !14982, file: !3, line: 3392, column: 52)
!14990 = !DILocation(line: 3393, column: 11, scope: !14989)
!14991 = !DILocation(line: 3393, column: 19, scope: !14989)
!14992 = !DILocation(line: 3393, column: 25, scope: !14989)
!14993 = !DILocation(line: 3393, column: 33, scope: !14989)
!14994 = !DILocation(line: 3393, column: 39, scope: !14989)
!14995 = !DILocation(line: 3393, column: 45, scope: !14989)
!14996 = !DILocation(line: 3393, column: 56, scope: !14989)
!14997 = !DILocation(line: 3393, column: 54, scope: !14989)
!14998 = !DILocalVariable(name: "ss", scope: !14989, file: !3, line: 3394, type: !135)
!14999 = !DILocation(line: 3394, column: 11, scope: !14989)
!15000 = !DILocalVariable(name: "samples", scope: !14989, file: !3, line: 3394, type: !135)
!15001 = !DILocation(line: 3394, column: 15, scope: !14989)
!15002 = !DILocation(line: 3394, column: 25, scope: !14989)
!15003 = !DILocation(line: 3394, column: 32, scope: !14989)
!15004 = !DILocation(line: 3394, column: 38, scope: !14989)
!15005 = !DILocalVariable(name: "total_sample", scope: !14989, file: !3, line: 3395, type: !207)
!15006 = !DILocation(line: 3395, column: 13, scope: !14989)
!15007 = !DILocation(line: 3395, column: 35, scope: !14989)
!15008 = !DILocation(line: 3395, column: 28, scope: !14989)
!15009 = !DILocalVariable(name: "brushStrength", scope: !14989, file: !3, line: 3396, type: !207)
!15010 = !DILocation(line: 3396, column: 13, scope: !14989)
!15011 = !DILocalVariable(name: "depth", scope: !14989, file: !3, line: 3397, type: !207)
!15012 = !DILocation(line: 3397, column: 13, scope: !14989)
!15013 = !DILocalVariable(name: "velocity_val", scope: !14989, file: !3, line: 3398, type: !207)
!15014 = !DILocation(line: 3398, column: 13, scope: !14989)
!15015 = !DILocalVariable(name: "paintColor", scope: !14989, file: !3, line: 3400, type: !206)
!15016 = !DILocation(line: 3400, column: 13, scope: !14989)
!15017 = !DILocalVariable(name: "numOfHits", scope: !14989, file: !3, line: 3401, type: !135)
!15018 = !DILocation(line: 3401, column: 11, scope: !14989)
!15019 = !DILocation(line: 3404, column: 11, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 3404, column: 11)
!15021 = !DILocation(line: 3404, column: 19, scope: !15020)
!15022 = !DILocation(line: 3404, column: 23, scope: !15020)
!15023 = !DILocation(line: 3404, column: 26, scope: !15020)
!15024 = !DILocation(line: 3404, column: 35, scope: !15020)
!15025 = !DILocation(line: 3404, column: 42, scope: !15020)
!15026 = !DILocation(line: 3404, column: 11, scope: !14989)
!15027 = !DILocation(line: 3405, column: 21, scope: !15020)
!15028 = !DILocation(line: 3405, column: 8, scope: !15020)
!15029 = !DILocation(line: 3408, column: 15, scope: !15030)
!15030 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 3408, column: 7)
!15031 = !DILocation(line: 3408, column: 12, scope: !15030)
!15032 = !DILocation(line: 3408, column: 20, scope: !15033)
!15033 = distinct !DILexicalBlock(scope: !15030, file: !3, line: 3408, column: 7)
!15034 = !DILocation(line: 3408, column: 25, scope: !15033)
!15035 = !DILocation(line: 3408, column: 23, scope: !15033)
!15036 = !DILocation(line: 3408, column: 7, scope: !15030)
!15037 = !DILocalVariable(name: "ray_start", scope: !15038, file: !3, line: 3410, type: !206)
!15038 = distinct !DILexicalBlock(scope: !15033, file: !3, line: 3408, column: 40)
!15039 = !DILocation(line: 3410, column: 14, scope: !15038)
!15040 = !DILocalVariable(name: "ray_dir", scope: !15038, file: !3, line: 3410, type: !206)
!15041 = !DILocation(line: 3410, column: 28, scope: !15038)
!15042 = !DILocalVariable(name: "sample_factor", scope: !15038, file: !3, line: 3411, type: !207)
!15043 = !DILocation(line: 3411, column: 14, scope: !15038)
!15044 = !DILocalVariable(name: "sampleStrength", scope: !15038, file: !3, line: 3412, type: !207)
!15045 = !DILocation(line: 3412, column: 14, scope: !15038)
!15046 = !DILocalVariable(name: "hit", scope: !15038, file: !3, line: 3413, type: !3278)
!15047 = !DILocation(line: 3413, column: 22, scope: !15038)
!15048 = !DILocalVariable(name: "nearest", scope: !15038, file: !3, line: 3414, type: !3256)
!15049 = !DILocation(line: 3414, column: 23, scope: !15038)
!15050 = !DILocalVariable(name: "hit_found", scope: !15038, file: !3, line: 3415, type: !199)
!15051 = !DILocation(line: 3415, column: 14, scope: !15038)
!15052 = !DILocalVariable(name: "volume_factor", scope: !15038, file: !3, line: 3418, type: !207)
!15053 = !DILocation(line: 3418, column: 14, scope: !15038)
!15054 = !DILocalVariable(name: "proximity_factor", scope: !15038, file: !3, line: 3420, type: !207)
!15055 = !DILocation(line: 3420, column: 14, scope: !15038)
!15056 = !DILocalVariable(name: "prox_colorband", scope: !15038, file: !3, line: 3421, type: !638)
!15057 = !DILocation(line: 3421, column: 14, scope: !15038)
!15058 = !DILocalVariable(name: "inner_proximity", scope: !15038, file: !3, line: 3422, type: !135)
!15059 = !DILocation(line: 3422, column: 12, scope: !15038)
!15060 = !DILocation(line: 3422, column: 31, scope: !15038)
!15061 = !DILocation(line: 3422, column: 38, scope: !15038)
!15062 = !DILocation(line: 3422, column: 44, scope: !15038)
!15063 = !DILocation(line: 3422, column: 70, scope: !15038)
!15064 = !DILocation(line: 3423, column: 31, scope: !15038)
!15065 = !DILocation(line: 3423, column: 38, scope: !15038)
!15066 = !DILocation(line: 3423, column: 48, scope: !15038)
!15067 = !DILocation(line: 0, scope: !15038)
!15068 = !DILocalVariable(name: "hitCoord", scope: !15038, file: !3, line: 3426, type: !206)
!15069 = !DILocation(line: 3426, column: 14, scope: !15038)
!15070 = !DILocalVariable(name: "hitFace", scope: !15038, file: !3, line: 3427, type: !135)
!15071 = !DILocation(line: 3427, column: 12, scope: !15038)
!15072 = !DILocalVariable(name: "hitQuad", scope: !15038, file: !3, line: 3428, type: !199)
!15073 = !DILocation(line: 3428, column: 14, scope: !15038)
!15074 = !DILocation(line: 3431, column: 12, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3431, column: 12)
!15076 = !DILocation(line: 3431, column: 20, scope: !15075)
!15077 = !DILocation(line: 3431, column: 24, scope: !15075)
!15078 = !DILocation(line: 3431, column: 27, scope: !15075)
!15079 = !DILocation(line: 3431, column: 36, scope: !15075)
!15080 = !DILocation(line: 3431, column: 43, scope: !15075)
!15081 = !DILocation(line: 3431, column: 12, scope: !15038)
!15082 = !DILocation(line: 3432, column: 41, scope: !15075)
!15083 = !DILocation(line: 3432, column: 25, scope: !15075)
!15084 = !DILocation(line: 3432, column: 23, scope: !15075)
!15085 = !DILocation(line: 3432, column: 9, scope: !15075)
!15086 = !DILocation(line: 3434, column: 23, scope: !15075)
!15087 = !DILocation(line: 3437, column: 19, scope: !15038)
!15088 = !DILocation(line: 3437, column: 30, scope: !15038)
!15089 = !DILocation(line: 3437, column: 37, scope: !15038)
!15090 = !DILocation(line: 3437, column: 47, scope: !15038)
!15091 = !DILocation(line: 3437, column: 54, scope: !15038)
!15092 = !DILocation(line: 3437, column: 60, scope: !15038)
!15093 = !DILocation(line: 3437, column: 69, scope: !15038)
!15094 = !DILocation(line: 3437, column: 67, scope: !15038)
!15095 = !DILocation(line: 3437, column: 73, scope: !15038)
!15096 = !DILocation(line: 3437, column: 8, scope: !15038)
!15097 = !DILocation(line: 3438, column: 19, scope: !15038)
!15098 = !DILocation(line: 3438, column: 28, scope: !15038)
!15099 = !DILocation(line: 3438, column: 35, scope: !15038)
!15100 = !DILocation(line: 3438, column: 43, scope: !15038)
!15101 = !DILocation(line: 3438, column: 50, scope: !15038)
!15102 = !DILocation(line: 3438, column: 8, scope: !15038)
!15103 = !DILocation(line: 3441, column: 18, scope: !15038)
!15104 = !DILocation(line: 3441, column: 8, scope: !15038)
!15105 = !DILocation(line: 3443, column: 12, scope: !15038)
!15106 = !DILocation(line: 3443, column: 18, scope: !15038)
!15107 = !DILocation(line: 3444, column: 12, scope: !15038)
!15108 = !DILocation(line: 3444, column: 17, scope: !15038)
!15109 = !DILocation(line: 3445, column: 16, scope: !15038)
!15110 = !DILocation(line: 3445, column: 22, scope: !15038)
!15111 = !DILocation(line: 3446, column: 26, scope: !15038)
!15112 = !DILocation(line: 3446, column: 41, scope: !15038)
!15113 = !DILocation(line: 3446, column: 39, scope: !15038)
!15114 = !DILocation(line: 3446, column: 16, scope: !15038)
!15115 = !DILocation(line: 3446, column: 24, scope: !15038)
!15116 = !DILocation(line: 3449, column: 12, scope: !15117)
!15117 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3449, column: 12)
!15118 = !DILocation(line: 3449, column: 19, scope: !15117)
!15119 = !DILocation(line: 3449, column: 29, scope: !15117)
!15120 = !DILocation(line: 3449, column: 54, scope: !15117)
!15121 = !DILocation(line: 3449, column: 57, scope: !15117)
!15122 = !DILocation(line: 3449, column: 64, scope: !15117)
!15123 = !DILocation(line: 3449, column: 74, scope: !15117)
!15124 = !DILocation(line: 3449, column: 12, scope: !15038)
!15125 = !DILocation(line: 3450, column: 43, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15117, file: !3, line: 3450, column: 13)
!15127 = !DILocation(line: 3450, column: 49, scope: !15126)
!15128 = !DILocation(line: 3450, column: 60, scope: !15126)
!15129 = !DILocation(line: 3450, column: 107, scope: !15126)
!15130 = !DILocation(line: 3450, column: 13, scope: !15126)
!15131 = !DILocation(line: 3450, column: 118, scope: !15126)
!15132 = !DILocation(line: 3450, column: 13, scope: !15117)
!15133 = !DILocalVariable(name: "v1", scope: !15134, file: !3, line: 3454, type: !135)
!15134 = distinct !DILexicalBlock(scope: !15126, file: !3, line: 3450, column: 125)
!15135 = !DILocation(line: 3454, column: 14, scope: !15134)
!15136 = !DILocation(line: 3454, column: 19, scope: !15134)
!15137 = !DILocation(line: 3454, column: 29, scope: !15134)
!15138 = !DILocation(line: 3454, column: 36, scope: !15134)
!15139 = !DILocalVariable(name: "v2", scope: !15134, file: !3, line: 3454, type: !135)
!15140 = !DILocation(line: 3454, column: 40, scope: !15134)
!15141 = !DILocation(line: 3454, column: 45, scope: !15134)
!15142 = !DILocation(line: 3454, column: 55, scope: !15134)
!15143 = !DILocation(line: 3454, column: 62, scope: !15134)
!15144 = !DILocalVariable(name: "v3", scope: !15134, file: !3, line: 3454, type: !135)
!15145 = !DILocation(line: 3454, column: 66, scope: !15134)
!15146 = !DILocation(line: 3454, column: 71, scope: !15134)
!15147 = !DILocation(line: 3454, column: 81, scope: !15134)
!15148 = !DILocation(line: 3454, column: 88, scope: !15134)
!15149 = !DILocalVariable(name: "quad", scope: !15134, file: !3, line: 3454, type: !135)
!15150 = !DILocation(line: 3454, column: 92, scope: !15134)
!15151 = !DILocation(line: 3454, column: 104, scope: !15134)
!15152 = !DILocation(line: 3454, column: 100, scope: !15134)
!15153 = !DILocation(line: 3454, column: 110, scope: !15134)
!15154 = !DILocalVariable(name: "dot", scope: !15134, file: !3, line: 3455, type: !207)
!15155 = !DILocation(line: 3455, column: 16, scope: !15134)
!15156 = !DILocation(line: 3457, column: 14, scope: !15157)
!15157 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3457, column: 14)
!15158 = !DILocation(line: 3457, column: 14, scope: !15134)
!15159 = !DILocation(line: 3457, column: 27, scope: !15160)
!15160 = distinct !DILexicalBlock(scope: !15157, file: !3, line: 3457, column: 20)
!15161 = !DILocation(line: 3457, column: 37, scope: !15160)
!15162 = !DILocation(line: 3457, column: 44, scope: !15160)
!15163 = !DILocation(line: 3457, column: 25, scope: !15160)
!15164 = !DILocation(line: 3457, column: 53, scope: !15160)
!15165 = !DILocation(line: 3457, column: 63, scope: !15160)
!15166 = !DILocation(line: 3457, column: 70, scope: !15160)
!15167 = !DILocation(line: 3457, column: 51, scope: !15160)
!15168 = !DILocation(line: 3457, column: 74, scope: !15160)
!15169 = !DILocation(line: 3458, column: 28, scope: !15134)
!15170 = !DILocation(line: 3458, column: 24, scope: !15134)
!15171 = !DILocation(line: 3458, column: 32, scope: !15134)
!15172 = !DILocation(line: 3458, column: 38, scope: !15134)
!15173 = !DILocation(line: 3458, column: 42, scope: !15134)
!15174 = !DILocation(line: 3458, column: 46, scope: !15134)
!15175 = !DILocation(line: 3458, column: 52, scope: !15134)
!15176 = !DILocation(line: 3458, column: 56, scope: !15134)
!15177 = !DILocation(line: 3458, column: 60, scope: !15134)
!15178 = !DILocation(line: 3458, column: 66, scope: !15134)
!15179 = !DILocation(line: 3458, column: 70, scope: !15134)
!15180 = !DILocation(line: 3458, column: 10, scope: !15134)
!15181 = !DILocation(line: 3459, column: 16, scope: !15134)
!15182 = !DILocation(line: 3459, column: 33, scope: !15134)
!15183 = !DILocation(line: 3459, column: 29, scope: !15134)
!15184 = !DILocation(line: 3459, column: 27, scope: !15134)
!15185 = !DILocation(line: 3459, column: 41, scope: !15134)
!15186 = !DILocation(line: 3459, column: 58, scope: !15134)
!15187 = !DILocation(line: 3459, column: 54, scope: !15134)
!15188 = !DILocation(line: 3459, column: 52, scope: !15134)
!15189 = !DILocation(line: 3459, column: 39, scope: !15134)
!15190 = !DILocation(line: 3459, column: 66, scope: !15134)
!15191 = !DILocation(line: 3459, column: 83, scope: !15134)
!15192 = !DILocation(line: 3459, column: 79, scope: !15134)
!15193 = !DILocation(line: 3459, column: 77, scope: !15134)
!15194 = !DILocation(line: 3459, column: 64, scope: !15134)
!15195 = !DILocation(line: 3459, column: 14, scope: !15134)
!15196 = !DILocation(line: 3463, column: 14, scope: !15197)
!15197 = distinct !DILexicalBlock(scope: !15134, file: !3, line: 3463, column: 14)
!15198 = !DILocation(line: 3463, column: 18, scope: !15197)
!15199 = !DILocation(line: 3463, column: 14, scope: !15134)
!15200 = !DILocalVariable(name: "dist", scope: !15201, file: !3, line: 3464, type: !207)
!15201 = distinct !DILexicalBlock(scope: !15197, file: !3, line: 3463, column: 24)
!15202 = !DILocation(line: 3464, column: 17, scope: !15201)
!15203 = !DILocation(line: 3464, column: 28, scope: !15201)
!15204 = !DILocalVariable(name: "f_index", scope: !15201, file: !3, line: 3465, type: !135)
!15205 = !DILocation(line: 3465, column: 15, scope: !15201)
!15206 = !DILocation(line: 3465, column: 29, scope: !15201)
!15207 = !DILocation(line: 3469, column: 21, scope: !15201)
!15208 = !DILocation(line: 3469, column: 11, scope: !15201)
!15209 = !DILocation(line: 3470, column: 15, scope: !15201)
!15210 = !DILocation(line: 3470, column: 21, scope: !15201)
!15211 = !DILocation(line: 3471, column: 15, scope: !15201)
!15212 = !DILocation(line: 3471, column: 20, scope: !15201)
!15213 = !DILocation(line: 3473, column: 41, scope: !15201)
!15214 = !DILocation(line: 3473, column: 47, scope: !15201)
!15215 = !DILocation(line: 3473, column: 58, scope: !15201)
!15216 = !DILocation(line: 3473, column: 105, scope: !15201)
!15217 = !DILocation(line: 3473, column: 11, scope: !15201)
!15218 = !DILocation(line: 3475, column: 19, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15201, file: !3, line: 3475, column: 15)
!15220 = !DILocation(line: 3475, column: 25, scope: !15219)
!15221 = !DILocation(line: 3475, column: 15, scope: !15201)
!15222 = !DILocation(line: 3477, column: 26, scope: !15223)
!15223 = distinct !DILexicalBlock(scope: !15219, file: !3, line: 3475, column: 32)
!15224 = !DILocation(line: 3478, column: 22, scope: !15223)
!15225 = !DILocation(line: 3481, column: 27, scope: !15223)
!15226 = !DILocation(line: 3481, column: 37, scope: !15223)
!15227 = !DILocation(line: 3481, column: 48, scope: !15223)
!15228 = !DILocation(line: 3481, column: 61, scope: !15223)
!15229 = !DILocation(line: 3481, column: 12, scope: !15223)
!15230 = !DILocation(line: 3482, column: 21, scope: !15223)
!15231 = !DILocation(line: 3482, column: 28, scope: !15223)
!15232 = !DILocation(line: 3482, column: 26, scope: !15223)
!15233 = !DILocation(line: 3482, column: 18, scope: !15223)
!15234 = !DILocation(line: 3483, column: 22, scope: !15223)
!15235 = !DILocation(line: 3483, column: 20, scope: !15223)
!15236 = !DILocation(line: 3484, column: 22, scope: !15223)
!15237 = !DILocation(line: 3484, column: 20, scope: !15223)
!15238 = !DILocation(line: 3485, column: 11, scope: !15223)
!15239 = !DILocation(line: 3486, column: 10, scope: !15201)
!15240 = !DILocation(line: 3487, column: 9, scope: !15134)
!15241 = !DILocation(line: 3450, column: 122, scope: !15126)
!15242 = !DILocation(line: 3490, column: 13, scope: !15243)
!15243 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3490, column: 12)
!15244 = !DILocation(line: 3490, column: 20, scope: !15243)
!15245 = !DILocation(line: 3490, column: 30, scope: !15243)
!15246 = !DILocation(line: 3490, column: 53, scope: !15243)
!15247 = !DILocation(line: 3490, column: 56, scope: !15243)
!15248 = !DILocation(line: 3490, column: 63, scope: !15243)
!15249 = !DILocation(line: 3490, column: 73, scope: !15243)
!15250 = !DILocation(line: 3490, column: 100, scope: !15243)
!15251 = !DILocation(line: 3491, column: 14, scope: !15243)
!15252 = !DILocation(line: 3491, column: 24, scope: !15243)
!15253 = !DILocation(line: 3491, column: 28, scope: !15243)
!15254 = !DILocation(line: 3491, column: 35, scope: !15243)
!15255 = !DILocation(line: 3491, column: 41, scope: !15243)
!15256 = !DILocation(line: 3490, column: 12, scope: !15038)
!15257 = !DILocalVariable(name: "proxDist", scope: !15258, file: !3, line: 3493, type: !207)
!15258 = distinct !DILexicalBlock(scope: !15243, file: !3, line: 3492, column: 8)
!15259 = !DILocation(line: 3493, column: 15, scope: !15258)
!15260 = !DILocalVariable(name: "hitCo", scope: !15258, file: !3, line: 3494, type: !206)
!15261 = !DILocation(line: 3494, column: 15, scope: !15258)
!15262 = !DILocalVariable(name: "hQuad", scope: !15258, file: !3, line: 3495, type: !199)
!15263 = !DILocation(line: 3495, column: 15, scope: !15258)
!15264 = !DILocalVariable(name: "face", scope: !15258, file: !3, line: 3496, type: !135)
!15265 = !DILocation(line: 3496, column: 13, scope: !15258)
!15266 = !DILocation(line: 3499, column: 13, scope: !15267)
!15267 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 3499, column: 13)
!15268 = !DILocation(line: 3499, column: 29, scope: !15267)
!15269 = !DILocation(line: 3499, column: 33, scope: !15267)
!15270 = !DILocation(line: 3499, column: 13, scope: !15258)
!15271 = !DILocation(line: 3499, column: 44, scope: !15267)
!15272 = !DILocation(line: 3502, column: 15, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 3502, column: 13)
!15274 = !DILocation(line: 3502, column: 22, scope: !15273)
!15275 = !DILocation(line: 3502, column: 28, scope: !15273)
!15276 = !DILocation(line: 3502, column: 13, scope: !15258)
!15277 = !DILocation(line: 3503, column: 48, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15279, file: !3, line: 3503, column: 14)
!15279 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 3502, column: 56)
!15280 = !DILocation(line: 3503, column: 54, scope: !15278)
!15281 = !DILocation(line: 3503, column: 104, scope: !15278)
!15282 = !DILocation(line: 3503, column: 14, scope: !15278)
!15283 = !DILocation(line: 3503, column: 115, scope: !15278)
!15284 = !DILocation(line: 3503, column: 14, scope: !15279)
!15285 = !DILocation(line: 3504, column: 36, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15278, file: !3, line: 3503, column: 122)
!15287 = !DILocation(line: 3504, column: 22, scope: !15286)
!15288 = !DILocation(line: 3504, column: 20, scope: !15286)
!15289 = !DILocation(line: 3505, column: 22, scope: !15286)
!15290 = !DILocation(line: 3505, column: 37, scope: !15286)
!15291 = !DILocation(line: 3505, column: 29, scope: !15286)
!15292 = !DILocation(line: 3505, column: 11, scope: !15286)
!15293 = !DILocation(line: 3506, column: 28, scope: !15286)
!15294 = !DILocation(line: 3506, column: 20, scope: !15286)
!15295 = !DILocation(line: 3506, column: 34, scope: !15286)
!15296 = !DILocation(line: 3506, column: 19, scope: !15286)
!15297 = !DILocation(line: 3506, column: 17, scope: !15286)
!15298 = !DILocation(line: 3507, column: 26, scope: !15286)
!15299 = !DILocation(line: 3507, column: 16, scope: !15286)
!15300 = !DILocation(line: 3508, column: 10, scope: !15286)
!15301 = !DILocation(line: 3509, column: 9, scope: !15279)
!15302 = !DILocalVariable(name: "proj_ray", scope: !15303, file: !3, line: 3511, type: !206)
!15303 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 3510, column: 14)
!15304 = !DILocation(line: 3511, column: 16, scope: !15303)
!15305 = !DILocation(line: 3513, column: 14, scope: !15306)
!15306 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 3513, column: 14)
!15307 = !DILocation(line: 3513, column: 21, scope: !15306)
!15308 = !DILocation(line: 3513, column: 29, scope: !15306)
!15309 = !DILocation(line: 3513, column: 14, scope: !15303)
!15310 = !DILocation(line: 3514, column: 22, scope: !15311)
!15311 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 3513, column: 55)
!15312 = !DILocation(line: 3514, column: 32, scope: !15311)
!15313 = !DILocation(line: 3514, column: 39, scope: !15311)
!15314 = !DILocation(line: 3514, column: 47, scope: !15311)
!15315 = !DILocation(line: 3514, column: 54, scope: !15311)
!15316 = !DILocation(line: 3514, column: 11, scope: !15311)
!15317 = !DILocation(line: 3515, column: 21, scope: !15311)
!15318 = !DILocation(line: 3515, column: 11, scope: !15311)
!15319 = !DILocation(line: 3516, column: 10, scope: !15311)
!15320 = !DILocation(line: 3517, column: 19, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15306, file: !3, line: 3517, column: 19)
!15322 = !DILocation(line: 3517, column: 26, scope: !15321)
!15323 = !DILocation(line: 3517, column: 34, scope: !15321)
!15324 = !DILocation(line: 3517, column: 19, scope: !15306)
!15325 = !DILocation(line: 3518, column: 22, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15321, file: !3, line: 3517, column: 63)
!15327 = !DILocation(line: 3518, column: 32, scope: !15326)
!15328 = !DILocation(line: 3518, column: 11, scope: !15326)
!15329 = !DILocation(line: 3519, column: 10, scope: !15326)
!15330 = !DILocation(line: 3521, column: 11, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15321, file: !3, line: 3520, column: 15)
!15332 = !DILocation(line: 3521, column: 23, scope: !15331)
!15333 = !DILocation(line: 3523, column: 14, scope: !15303)
!15334 = !DILocation(line: 3523, column: 20, scope: !15303)
!15335 = !DILocation(line: 3524, column: 21, scope: !15303)
!15336 = !DILocation(line: 3524, column: 14, scope: !15303)
!15337 = !DILocation(line: 3524, column: 19, scope: !15303)
!15338 = !DILocation(line: 3527, column: 44, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15303, file: !3, line: 3527, column: 14)
!15340 = !DILocation(line: 3527, column: 50, scope: !15339)
!15341 = !DILocation(line: 3527, column: 61, scope: !15339)
!15342 = !DILocation(line: 3527, column: 109, scope: !15339)
!15343 = !DILocation(line: 3527, column: 14, scope: !15339)
!15344 = !DILocation(line: 3527, column: 120, scope: !15339)
!15345 = !DILocation(line: 3527, column: 14, scope: !15303)
!15346 = !DILocation(line: 3528, column: 26, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15339, file: !3, line: 3527, column: 127)
!15348 = !DILocation(line: 3528, column: 20, scope: !15347)
!15349 = !DILocation(line: 3529, column: 26, scope: !15347)
!15350 = !DILocation(line: 3529, column: 33, scope: !15347)
!15351 = !DILocation(line: 3529, column: 44, scope: !15347)
!15352 = !DILocation(line: 3529, column: 58, scope: !15347)
!15353 = !DILocation(line: 3529, column: 11, scope: !15347)
!15354 = !DILocation(line: 3530, column: 24, scope: !15347)
!15355 = !DILocation(line: 3530, column: 20, scope: !15347)
!15356 = !DILocation(line: 3530, column: 30, scope: !15347)
!15357 = !DILocation(line: 3530, column: 19, scope: !15347)
!15358 = !DILocation(line: 3530, column: 17, scope: !15347)
!15359 = !DILocation(line: 3531, column: 22, scope: !15347)
!15360 = !DILocation(line: 3531, column: 16, scope: !15347)
!15361 = !DILocation(line: 3532, column: 10, scope: !15347)
!15362 = !DILocation(line: 3536, column: 13, scope: !15363)
!15363 = distinct !DILexicalBlock(scope: !15258, file: !3, line: 3536, column: 13)
!15364 = !DILocation(line: 3536, column: 22, scope: !15363)
!15365 = !DILocation(line: 3536, column: 30, scope: !15363)
!15366 = !DILocation(line: 3536, column: 33, scope: !15363)
!15367 = !DILocation(line: 3536, column: 45, scope: !15363)
!15368 = !DILocation(line: 3536, column: 42, scope: !15363)
!15369 = !DILocation(line: 3536, column: 13, scope: !15258)
!15370 = !DILocation(line: 3537, column: 29, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15363, file: !3, line: 3536, column: 59)
!15372 = !DILocation(line: 3537, column: 40, scope: !15371)
!15373 = !DILocation(line: 3537, column: 38, scope: !15371)
!15374 = !DILocation(line: 3537, column: 27, scope: !15371)
!15375 = !DILocation(line: 3538, column: 10, scope: !15376)
!15376 = distinct !DILexicalBlock(scope: !15377, file: !3, line: 3538, column: 10)
!15377 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 3538, column: 10)
!15378 = !DILocation(line: 3538, column: 10, scope: !15377)
!15379 = !DILocation(line: 3538, column: 10, scope: !15380)
!15380 = distinct !DILexicalBlock(scope: !15376, file: !3, line: 3538, column: 10)
!15381 = !DILocation(line: 3539, column: 15, scope: !15382)
!15382 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 3539, column: 14)
!15383 = !DILocation(line: 3539, column: 14, scope: !15371)
!15384 = !DILocation(line: 3540, column: 37, scope: !15382)
!15385 = !DILocation(line: 3540, column: 35, scope: !15382)
!15386 = !DILocation(line: 3540, column: 28, scope: !15382)
!15387 = !DILocation(line: 3540, column: 11, scope: !15382)
!15388 = !DILocation(line: 3542, column: 20, scope: !15371)
!15389 = !DILocation(line: 3545, column: 14, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 3545, column: 14)
!15391 = !DILocation(line: 3545, column: 22, scope: !15390)
!15392 = !DILocation(line: 3545, column: 14, scope: !15371)
!15393 = !DILocation(line: 3546, column: 22, scope: !15394)
!15394 = distinct !DILexicalBlock(scope: !15390, file: !3, line: 3545, column: 29)
!15395 = !DILocation(line: 3546, column: 32, scope: !15394)
!15396 = !DILocation(line: 3546, column: 11, scope: !15394)
!15397 = !DILocation(line: 3547, column: 21, scope: !15394)
!15398 = !DILocation(line: 3547, column: 19, scope: !15394)
!15399 = !DILocation(line: 3548, column: 21, scope: !15394)
!15400 = !DILocation(line: 3548, column: 19, scope: !15394)
!15401 = !DILocation(line: 3549, column: 10, scope: !15394)
!15402 = !DILocation(line: 3550, column: 9, scope: !15371)
!15403 = !DILocation(line: 3551, column: 8, scope: !15258)
!15404 = !DILocation(line: 3554, column: 12, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3554, column: 12)
!15406 = !DILocation(line: 3554, column: 12, scope: !15038)
!15407 = !DILocation(line: 3556, column: 13, scope: !15408)
!15408 = distinct !DILexicalBlock(scope: !15409, file: !3, line: 3556, column: 13)
!15409 = distinct !DILexicalBlock(scope: !15405, file: !3, line: 3554, column: 23)
!15410 = !DILocation(line: 3556, column: 20, scope: !15408)
!15411 = !DILocation(line: 3556, column: 30, scope: !15408)
!15412 = !DILocation(line: 3556, column: 56, scope: !15408)
!15413 = !DILocation(line: 3556, column: 59, scope: !15408)
!15414 = !DILocation(line: 3556, column: 66, scope: !15408)
!15415 = !DILocation(line: 3556, column: 72, scope: !15408)
!15416 = !DILocation(line: 3556, column: 13, scope: !15409)
!15417 = !DILocation(line: 3557, column: 33, scope: !15418)
!15418 = distinct !DILexicalBlock(scope: !15408, file: !3, line: 3556, column: 100)
!15419 = !DILocation(line: 3557, column: 31, scope: !15418)
!15420 = !DILocation(line: 3557, column: 24, scope: !15418)
!15421 = !DILocation(line: 3558, column: 14, scope: !15422)
!15422 = distinct !DILexicalBlock(scope: !15418, file: !3, line: 3558, column: 14)
!15423 = !DILocation(line: 3558, column: 14, scope: !15418)
!15424 = !DILocation(line: 3559, column: 37, scope: !15422)
!15425 = !DILocation(line: 3559, column: 35, scope: !15422)
!15426 = !DILocation(line: 3559, column: 28, scope: !15422)
!15427 = !DILocation(line: 3559, column: 11, scope: !15422)
!15428 = !DILocation(line: 3560, column: 9, scope: !15418)
!15429 = !DILocation(line: 3563, column: 13, scope: !15430)
!15430 = distinct !DILexicalBlock(scope: !15409, file: !3, line: 3563, column: 13)
!15431 = !DILocation(line: 3563, column: 23, scope: !15430)
!15432 = !DILocation(line: 3563, column: 13, scope: !15409)
!15433 = !DILocation(line: 3564, column: 27, scope: !15434)
!15434 = distinct !DILexicalBlock(scope: !15430, file: !3, line: 3563, column: 38)
!15435 = !DILocation(line: 3564, column: 25, scope: !15434)
!15436 = !DILocation(line: 3565, column: 9, scope: !15434)
!15437 = !DILocation(line: 3566, column: 18, scope: !15438)
!15438 = distinct !DILexicalBlock(scope: !15430, file: !3, line: 3566, column: 18)
!15439 = !DILocation(line: 3566, column: 28, scope: !15438)
!15440 = !DILocation(line: 3566, column: 18, scope: !15430)
!15441 = !DILocation(line: 3568, column: 14, scope: !15442)
!15442 = distinct !DILexicalBlock(scope: !15443, file: !3, line: 3568, column: 14)
!15443 = distinct !DILexicalBlock(scope: !15438, file: !3, line: 3566, column: 46)
!15444 = !DILocation(line: 3568, column: 21, scope: !15442)
!15445 = !DILocation(line: 3568, column: 39, scope: !15442)
!15446 = !DILocation(line: 3568, column: 65, scope: !15442)
!15447 = !DILocation(line: 3568, column: 81, scope: !15442)
!15448 = !DILocation(line: 3568, column: 88, scope: !15442)
!15449 = !DILocation(line: 3568, column: 108, scope: !15442)
!15450 = !DILocation(line: 3568, column: 106, scope: !15442)
!15451 = !DILocation(line: 3568, column: 127, scope: !15442)
!15452 = !DILocation(line: 3568, column: 68, scope: !15442)
!15453 = !DILocation(line: 3568, column: 14, scope: !15443)
!15454 = !DILocation(line: 3569, column: 30, scope: !15442)
!15455 = !DILocation(line: 3569, column: 28, scope: !15442)
!15456 = !DILocation(line: 3569, column: 11, scope: !15442)
!15457 = !DILocation(line: 3570, column: 19, scope: !15458)
!15458 = distinct !DILexicalBlock(scope: !15442, file: !3, line: 3570, column: 19)
!15459 = !DILocation(line: 3570, column: 26, scope: !15458)
!15460 = !DILocation(line: 3570, column: 44, scope: !15458)
!15461 = !DILocation(line: 3570, column: 19, scope: !15442)
!15462 = !DILocation(line: 3571, column: 32, scope: !15458)
!15463 = !DILocation(line: 3571, column: 48, scope: !15458)
!15464 = !DILocation(line: 3571, column: 51, scope: !15458)
!15465 = !DILocation(line: 3571, column: 58, scope: !15458)
!15466 = !DILocation(line: 3571, column: 64, scope: !15458)
!15467 = !DILocation(line: 3571, column: 30, scope: !15458)
!15468 = !DILocation(line: 3571, column: 28, scope: !15458)
!15469 = !DILocation(line: 3571, column: 11, scope: !15458)
!15470 = !DILocation(line: 3573, column: 27, scope: !15443)
!15471 = !DILocation(line: 3573, column: 25, scope: !15443)
!15472 = !DILocation(line: 3574, column: 9, scope: !15443)
!15473 = !DILocation(line: 3576, column: 27, scope: !15409)
!15474 = !DILocation(line: 3576, column: 24, scope: !15409)
!15475 = !DILocation(line: 3577, column: 8, scope: !15409)
!15476 = !DILocation(line: 3579, column: 9, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15405, file: !3, line: 3578, column: 13)
!15478 = !DILocation(line: 3583, column: 12, scope: !15479)
!15479 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3583, column: 12)
!15480 = !DILocation(line: 3583, column: 19, scope: !15479)
!15481 = !DILocation(line: 3583, column: 25, scope: !15479)
!15482 = !DILocation(line: 3583, column: 52, scope: !15479)
!15483 = !DILocation(line: 3583, column: 55, scope: !15479)
!15484 = !DILocation(line: 3583, column: 58, scope: !15479)
!15485 = !DILocation(line: 3583, column: 63, scope: !15479)
!15486 = !DILocation(line: 3583, column: 66, scope: !15479)
!15487 = !DILocation(line: 3583, column: 12, scope: !15038)
!15488 = !DILocalVariable(name: "v1", scope: !15489, file: !3, line: 3584, type: !135)
!15489 = distinct !DILexicalBlock(scope: !15479, file: !3, line: 3583, column: 81)
!15490 = !DILocation(line: 3584, column: 13, scope: !15489)
!15491 = !DILocalVariable(name: "v2", scope: !15489, file: !3, line: 3584, type: !135)
!15492 = !DILocation(line: 3584, column: 17, scope: !15489)
!15493 = !DILocalVariable(name: "v3", scope: !15489, file: !3, line: 3584, type: !135)
!15494 = !DILocation(line: 3584, column: 21, scope: !15489)
!15495 = !DILocalVariable(name: "weights", scope: !15489, file: !3, line: 3585, type: !638)
!15496 = !DILocation(line: 3585, column: 15, scope: !15489)
!15497 = !DILocalVariable(name: "brushPointVelocity", scope: !15489, file: !3, line: 3586, type: !206)
!15498 = !DILocation(line: 3586, column: 15, scope: !15489)
!15499 = !DILocalVariable(name: "velocity", scope: !15489, file: !3, line: 3587, type: !206)
!15500 = !DILocation(line: 3587, column: 15, scope: !15489)
!15501 = !DILocation(line: 3589, column: 14, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 3589, column: 13)
!15503 = !DILocation(line: 3589, column: 13, scope: !15489)
!15504 = !DILocation(line: 3590, column: 15, scope: !15505)
!15505 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 3589, column: 23)
!15506 = !DILocation(line: 3590, column: 21, scope: !15505)
!15507 = !DILocation(line: 3590, column: 30, scope: !15505)
!15508 = !DILocation(line: 3590, column: 13, scope: !15505)
!15509 = !DILocation(line: 3591, column: 15, scope: !15505)
!15510 = !DILocation(line: 3591, column: 21, scope: !15505)
!15511 = !DILocation(line: 3591, column: 30, scope: !15505)
!15512 = !DILocation(line: 3591, column: 13, scope: !15505)
!15513 = !DILocation(line: 3592, column: 15, scope: !15505)
!15514 = !DILocation(line: 3592, column: 21, scope: !15505)
!15515 = !DILocation(line: 3592, column: 30, scope: !15505)
!15516 = !DILocation(line: 3592, column: 13, scope: !15505)
!15517 = !DILocation(line: 3593, column: 9, scope: !15505)
!15518 = !DILocation(line: 3595, column: 15, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15502, file: !3, line: 3594, column: 14)
!15520 = !DILocation(line: 3595, column: 21, scope: !15519)
!15521 = !DILocation(line: 3595, column: 30, scope: !15519)
!15522 = !DILocation(line: 3595, column: 13, scope: !15519)
!15523 = !DILocation(line: 3596, column: 15, scope: !15519)
!15524 = !DILocation(line: 3596, column: 21, scope: !15519)
!15525 = !DILocation(line: 3596, column: 30, scope: !15519)
!15526 = !DILocation(line: 3596, column: 13, scope: !15519)
!15527 = !DILocation(line: 3597, column: 15, scope: !15519)
!15528 = !DILocation(line: 3597, column: 21, scope: !15519)
!15529 = !DILocation(line: 3597, column: 30, scope: !15519)
!15530 = !DILocation(line: 3597, column: 13, scope: !15519)
!15531 = !DILocation(line: 3600, column: 32, scope: !15489)
!15532 = !DILocation(line: 3600, column: 41, scope: !15489)
!15533 = !DILocation(line: 3600, column: 47, scope: !15489)
!15534 = !DILocation(line: 3600, column: 51, scope: !15489)
!15535 = !DILocation(line: 3600, column: 55, scope: !15489)
!15536 = !DILocation(line: 3600, column: 61, scope: !15489)
!15537 = !DILocation(line: 3600, column: 65, scope: !15489)
!15538 = !DILocation(line: 3600, column: 69, scope: !15489)
!15539 = !DILocation(line: 3600, column: 75, scope: !15489)
!15540 = !DILocation(line: 3600, column: 79, scope: !15489)
!15541 = !DILocation(line: 3600, column: 89, scope: !15489)
!15542 = !DILocation(line: 3600, column: 9, scope: !15489)
!15543 = !DILocation(line: 3606, column: 26, scope: !15489)
!15544 = !DILocation(line: 3607, column: 26, scope: !15489)
!15545 = !DILocation(line: 3607, column: 40, scope: !15489)
!15546 = !DILocation(line: 3607, column: 44, scope: !15489)
!15547 = !DILocation(line: 3608, column: 26, scope: !15489)
!15548 = !DILocation(line: 3608, column: 40, scope: !15489)
!15549 = !DILocation(line: 3608, column: 44, scope: !15489)
!15550 = !DILocation(line: 3609, column: 26, scope: !15489)
!15551 = !DILocation(line: 3609, column: 40, scope: !15489)
!15552 = !DILocation(line: 3609, column: 44, scope: !15489)
!15553 = !DILocation(line: 3609, column: 47, scope: !15489)
!15554 = !DILocation(line: 3606, column: 9, scope: !15489)
!15555 = !DILocation(line: 3612, column: 13, scope: !15556)
!15556 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 3612, column: 13)
!15557 = !DILocation(line: 3612, column: 20, scope: !15556)
!15558 = !DILocation(line: 3612, column: 13, scope: !15489)
!15559 = !DILocation(line: 3613, column: 22, scope: !15560)
!15560 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 3612, column: 30)
!15561 = !DILocation(line: 3613, column: 32, scope: !15560)
!15562 = !DILocation(line: 3613, column: 52, scope: !15560)
!15563 = !DILocation(line: 3613, column: 59, scope: !15560)
!15564 = !DILocation(line: 3613, column: 68, scope: !15560)
!15565 = !DILocation(line: 3613, column: 75, scope: !15560)
!15566 = !DILocation(line: 3613, column: 10, scope: !15560)
!15567 = !DILocation(line: 3614, column: 9, scope: !15560)
!15568 = !DILocation(line: 3616, column: 21, scope: !15569)
!15569 = distinct !DILexicalBlock(scope: !15556, file: !3, line: 3615, column: 14)
!15570 = !DILocation(line: 3616, column: 31, scope: !15569)
!15571 = !DILocation(line: 3616, column: 10, scope: !15569)
!15572 = !DILocation(line: 3618, column: 31, scope: !15489)
!15573 = !DILocation(line: 3618, column: 24, scope: !15489)
!15574 = !DILocation(line: 3618, column: 22, scope: !15489)
!15575 = !DILocation(line: 3621, column: 13, scope: !15576)
!15576 = distinct !DILexicalBlock(scope: !15489, file: !3, line: 3621, column: 13)
!15577 = !DILocation(line: 3621, column: 22, scope: !15576)
!15578 = !DILocation(line: 3621, column: 27, scope: !15576)
!15579 = !DILocation(line: 3621, column: 57, scope: !15576)
!15580 = !DILocation(line: 3622, column: 13, scope: !15576)
!15581 = !DILocation(line: 3622, column: 20, scope: !15576)
!15582 = !DILocation(line: 3622, column: 26, scope: !15576)
!15583 = !DILocation(line: 3622, column: 49, scope: !15576)
!15584 = !DILocation(line: 3622, column: 52, scope: !15576)
!15585 = !DILocation(line: 3622, column: 59, scope: !15576)
!15586 = !DILocation(line: 3621, column: 13, scope: !15489)
!15587 = !DILocation(line: 3624, column: 22, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15576, file: !3, line: 3623, column: 9)
!15589 = !DILocation(line: 3624, column: 29, scope: !15588)
!15590 = !DILocation(line: 3624, column: 44, scope: !15588)
!15591 = !DILocation(line: 3624, column: 50, scope: !15588)
!15592 = !DILocation(line: 3624, column: 56, scope: !15588)
!15593 = !DILocation(line: 3624, column: 10, scope: !15588)
!15594 = !DILocation(line: 3625, column: 21, scope: !15588)
!15595 = !DILocation(line: 3625, column: 28, scope: !15588)
!15596 = !DILocation(line: 3625, column: 43, scope: !15588)
!15597 = !DILocation(line: 3625, column: 49, scope: !15588)
!15598 = !DILocation(line: 3625, column: 62, scope: !15588)
!15599 = !DILocation(line: 3625, column: 60, scope: !15588)
!15600 = !DILocation(line: 3625, column: 10, scope: !15588)
!15601 = !DILocation(line: 3626, column: 49, scope: !15588)
!15602 = !DILocation(line: 3626, column: 10, scope: !15588)
!15603 = !DILocation(line: 3626, column: 17, scope: !15588)
!15604 = !DILocation(line: 3626, column: 32, scope: !15588)
!15605 = !DILocation(line: 3626, column: 38, scope: !15588)
!15606 = !DILocation(line: 3626, column: 42, scope: !15588)
!15607 = !DILocation(line: 3626, column: 47, scope: !15588)
!15608 = !DILocation(line: 3627, column: 9, scope: !15588)
!15609 = !DILocation(line: 3628, column: 8, scope: !15489)
!15610 = !DILocation(line: 3633, column: 12, scope: !15611)
!15611 = distinct !DILexicalBlock(scope: !15038, file: !3, line: 3633, column: 12)
!15612 = !DILocation(line: 3633, column: 21, scope: !15611)
!15613 = !DILocation(line: 3633, column: 26, scope: !15611)
!15614 = !DILocation(line: 3633, column: 12, scope: !15038)
!15615 = !DILocalVariable(name: "sampleColor", scope: !15616, file: !3, line: 3634, type: !206)
!15616 = distinct !DILexicalBlock(scope: !15611, file: !3, line: 3633, column: 57)
!15617 = !DILocation(line: 3634, column: 15, scope: !15616)
!15618 = !DILocalVariable(name: "alpha_factor", scope: !15616, file: !3, line: 3635, type: !207)
!15619 = !DILocation(line: 3635, column: 15, scope: !15616)
!15620 = !DILocation(line: 3637, column: 26, scope: !15616)
!15621 = !DILocation(line: 3637, column: 33, scope: !15616)
!15622 = !DILocation(line: 3637, column: 9, scope: !15616)
!15623 = !DILocation(line: 3637, column: 24, scope: !15616)
!15624 = !DILocation(line: 3638, column: 26, scope: !15616)
!15625 = !DILocation(line: 3638, column: 33, scope: !15616)
!15626 = !DILocation(line: 3638, column: 9, scope: !15616)
!15627 = !DILocation(line: 3638, column: 24, scope: !15616)
!15628 = !DILocation(line: 3639, column: 26, scope: !15616)
!15629 = !DILocation(line: 3639, column: 33, scope: !15616)
!15630 = !DILocation(line: 3639, column: 9, scope: !15616)
!15631 = !DILocation(line: 3639, column: 24, scope: !15616)
!15632 = !DILocation(line: 3642, column: 32, scope: !15633)
!15633 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 3642, column: 13)
!15634 = !DILocation(line: 3642, column: 39, scope: !15633)
!15635 = !DILocation(line: 3642, column: 13, scope: !15633)
!15636 = !DILocation(line: 3642, column: 13, scope: !15616)
!15637 = !DILocation(line: 3643, column: 37, scope: !15633)
!15638 = !DILocation(line: 3643, column: 44, scope: !15633)
!15639 = !DILocation(line: 3643, column: 72, scope: !15633)
!15640 = !DILocation(line: 3643, column: 81, scope: !15633)
!15641 = !DILocation(line: 3643, column: 88, scope: !15633)
!15642 = !DILocation(line: 3643, column: 98, scope: !15633)
!15643 = !DILocation(line: 3643, column: 105, scope: !15633)
!15644 = !DILocation(line: 3643, column: 111, scope: !15633)
!15645 = !DILocation(line: 3643, column: 120, scope: !15633)
!15646 = !DILocation(line: 3643, column: 118, scope: !15633)
!15647 = !DILocation(line: 3643, column: 124, scope: !15633)
!15648 = !DILocation(line: 3643, column: 127, scope: !15633)
!15649 = !DILocation(line: 3643, column: 137, scope: !15633)
!15650 = !DILocation(line: 3643, column: 146, scope: !15633)
!15651 = !DILocation(line: 3643, column: 155, scope: !15633)
!15652 = !DILocation(line: 3643, column: 162, scope: !15633)
!15653 = !DILocation(line: 3643, column: 10, scope: !15633)
!15654 = !DILocation(line: 3646, column: 14, scope: !15655)
!15655 = distinct !DILexicalBlock(scope: !15616, file: !3, line: 3646, column: 13)
!15656 = !DILocation(line: 3646, column: 24, scope: !15655)
!15657 = !DILocation(line: 3646, column: 42, scope: !15655)
!15658 = !DILocation(line: 3646, column: 46, scope: !15655)
!15659 = !DILocation(line: 3646, column: 53, scope: !15655)
!15660 = !DILocation(line: 3646, column: 71, scope: !15655)
!15661 = !DILocation(line: 3646, column: 13, scope: !15616)
!15662 = !DILocation(line: 3647, column: 16, scope: !15663)
!15663 = distinct !DILexicalBlock(scope: !15664, file: !3, line: 3647, column: 14)
!15664 = distinct !DILexicalBlock(scope: !15655, file: !3, line: 3646, column: 99)
!15665 = !DILocation(line: 3647, column: 23, scope: !15663)
!15666 = !DILocation(line: 3647, column: 29, scope: !15663)
!15667 = !DILocation(line: 3647, column: 14, scope: !15664)
!15668 = !DILocation(line: 3648, column: 28, scope: !15669)
!15669 = distinct !DILexicalBlock(scope: !15663, file: !3, line: 3647, column: 55)
!15670 = !DILocation(line: 3648, column: 11, scope: !15669)
!15671 = !DILocation(line: 3648, column: 26, scope: !15669)
!15672 = !DILocation(line: 3649, column: 28, scope: !15669)
!15673 = !DILocation(line: 3649, column: 11, scope: !15669)
!15674 = !DILocation(line: 3649, column: 26, scope: !15669)
!15675 = !DILocation(line: 3650, column: 28, scope: !15669)
!15676 = !DILocation(line: 3650, column: 11, scope: !15669)
!15677 = !DILocation(line: 3650, column: 26, scope: !15669)
!15678 = !DILocation(line: 3651, column: 10, scope: !15669)
!15679 = !DILocation(line: 3652, column: 9, scope: !15664)
!15680 = !DILocation(line: 3655, column: 26, scope: !15616)
!15681 = !DILocation(line: 3655, column: 9, scope: !15616)
!15682 = !DILocation(line: 3655, column: 23, scope: !15616)
!15683 = !DILocation(line: 3656, column: 26, scope: !15616)
!15684 = !DILocation(line: 3656, column: 9, scope: !15616)
!15685 = !DILocation(line: 3656, column: 23, scope: !15616)
!15686 = !DILocation(line: 3657, column: 26, scope: !15616)
!15687 = !DILocation(line: 3657, column: 9, scope: !15616)
!15688 = !DILocation(line: 3657, column: 23, scope: !15616)
!15689 = !DILocation(line: 3658, column: 27, scope: !15616)
!15690 = !DILocation(line: 3658, column: 24, scope: !15616)
!15691 = !DILocation(line: 3659, column: 18, scope: !15616)
!15692 = !DILocation(line: 3660, column: 8, scope: !15616)
!15693 = !DILocation(line: 3663, column: 25, scope: !15038)
!15694 = !DILocation(line: 3663, column: 22, scope: !15038)
!15695 = !DILocation(line: 3664, column: 7, scope: !15038)
!15696 = !DILocation(line: 3408, column: 36, scope: !15033)
!15697 = !DILocation(line: 3408, column: 7, scope: !15033)
!15698 = distinct !{!15698, !15036, !15699}
!15699 = !DILocation(line: 3664, column: 7, scope: !15030)
!15700 = !DILocation(line: 3668, column: 11, scope: !15701)
!15701 = distinct !DILexicalBlock(scope: !14989, file: !3, line: 3668, column: 11)
!15702 = !DILocation(line: 3668, column: 25, scope: !15701)
!15703 = !DILocation(line: 3668, column: 32, scope: !15701)
!15704 = !DILocation(line: 3668, column: 35, scope: !15701)
!15705 = !DILocation(line: 3668, column: 41, scope: !15701)
!15706 = !DILocation(line: 3668, column: 11, scope: !14989)
!15707 = !DILocation(line: 3671, column: 12, scope: !15708)
!15708 = distinct !DILexicalBlock(scope: !15709, file: !3, line: 3671, column: 12)
!15709 = distinct !DILexicalBlock(scope: !15701, file: !3, line: 3668, column: 49)
!15710 = !DILocation(line: 3671, column: 20, scope: !15708)
!15711 = !DILocation(line: 3671, column: 12, scope: !15709)
!15712 = !DILocation(line: 3672, column: 26, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15708, file: !3, line: 3671, column: 25)
!15714 = !DILocation(line: 3672, column: 23, scope: !15713)
!15715 = !DILocation(line: 3673, column: 8, scope: !15713)
!15716 = !DILocation(line: 3674, column: 8, scope: !15717)
!15717 = distinct !DILexicalBlock(scope: !15718, file: !3, line: 3674, column: 8)
!15718 = distinct !DILexicalBlock(scope: !15709, file: !3, line: 3674, column: 8)
!15719 = !DILocation(line: 3674, column: 8, scope: !15718)
!15720 = !DILocation(line: 3674, column: 8, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15717, file: !3, line: 3674, column: 8)
!15722 = !DILocation(line: 3676, column: 12, scope: !15723)
!15723 = distinct !DILexicalBlock(scope: !15709, file: !3, line: 3676, column: 12)
!15724 = !DILocation(line: 3676, column: 21, scope: !15723)
!15725 = !DILocation(line: 3676, column: 26, scope: !15723)
!15726 = !DILocation(line: 3676, column: 12, scope: !15709)
!15727 = !DILocation(line: 3678, column: 26, scope: !15728)
!15728 = distinct !DILexicalBlock(scope: !15723, file: !3, line: 3676, column: 57)
!15729 = !DILocation(line: 3678, column: 9, scope: !15728)
!15730 = !DILocation(line: 3678, column: 23, scope: !15728)
!15731 = !DILocation(line: 3679, column: 26, scope: !15728)
!15732 = !DILocation(line: 3679, column: 9, scope: !15728)
!15733 = !DILocation(line: 3679, column: 23, scope: !15728)
!15734 = !DILocation(line: 3680, column: 26, scope: !15728)
!15735 = !DILocation(line: 3680, column: 9, scope: !15728)
!15736 = !DILocation(line: 3680, column: 23, scope: !15728)
!15737 = !DILocation(line: 3681, column: 8, scope: !15728)
!15738 = !DILocation(line: 3683, column: 17, scope: !15739)
!15739 = distinct !DILexicalBlock(scope: !15723, file: !3, line: 3683, column: 17)
!15740 = !DILocation(line: 3683, column: 26, scope: !15739)
!15741 = !DILocation(line: 3683, column: 31, scope: !15739)
!15742 = !DILocation(line: 3683, column: 64, scope: !15739)
!15743 = !DILocation(line: 3684, column: 17, scope: !15739)
!15744 = !DILocation(line: 3684, column: 26, scope: !15739)
!15745 = !DILocation(line: 3684, column: 31, scope: !15739)
!15746 = !DILocation(line: 3683, column: 17, scope: !15723)
!15747 = !DILocation(line: 3686, column: 18, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15739, file: !3, line: 3685, column: 8)
!15749 = !DILocation(line: 3686, column: 25, scope: !15748)
!15750 = !DILocation(line: 3686, column: 33, scope: !15748)
!15751 = !DILocation(line: 3686, column: 40, scope: !15748)
!15752 = !DILocation(line: 3686, column: 55, scope: !15748)
!15753 = !DILocation(line: 3686, column: 53, scope: !15748)
!15754 = !DILocation(line: 3686, column: 15, scope: !15748)
!15755 = !DILocation(line: 3687, column: 8, scope: !15748)
!15756 = !DILocation(line: 3689, column: 37, scope: !15709)
!15757 = !DILocation(line: 3689, column: 46, scope: !15709)
!15758 = !DILocation(line: 3689, column: 53, scope: !15709)
!15759 = !DILocation(line: 3689, column: 60, scope: !15709)
!15760 = !DILocation(line: 3689, column: 72, scope: !15709)
!15761 = !DILocation(line: 3689, column: 87, scope: !15709)
!15762 = !DILocation(line: 3689, column: 94, scope: !15709)
!15763 = !DILocation(line: 3689, column: 108, scope: !15709)
!15764 = !DILocation(line: 3689, column: 8, scope: !15709)
!15765 = !DILocation(line: 3690, column: 7, scope: !15709)
!15766 = !DILocation(line: 3691, column: 6, scope: !14989)
!15767 = !DILocation(line: 3392, column: 48, scope: !14982)
!15768 = !DILocation(line: 3392, column: 6, scope: !14982)
!15769 = distinct !{!15769, !14987, !15770}
!15770 = !DILocation(line: 3691, column: 6, scope: !14979)
!15771 = !DILocation(line: 3692, column: 5, scope: !14963)
!15772 = !DILocation(line: 3381, column: 53, scope: !14958)
!15773 = !DILocation(line: 3381, column: 5, scope: !14958)
!15774 = distinct !{!15774, !14961, !15775}
!15775 = !DILocation(line: 3692, column: 5, scope: !14955)
!15776 = !DILocation(line: 3693, column: 4, scope: !14942)
!15777 = !DILocation(line: 3694, column: 3, scope: !14938)
!15778 = !DILocation(line: 3696, column: 3, scope: !14816)
!15779 = !DILocation(line: 3697, column: 3, scope: !14816)
!15780 = !DILocation(line: 3697, column: 7, scope: !14816)
!15781 = !DILocation(line: 3697, column: 15, scope: !14816)
!15782 = !DILocation(line: 3702, column: 6, scope: !15783)
!15783 = distinct !DILexicalBlock(scope: !14769, file: !3, line: 3702, column: 6)
!15784 = !DILocation(line: 3702, column: 6, scope: !14769)
!15785 = !DILocation(line: 3703, column: 3, scope: !15783)
!15786 = !DILocation(line: 3703, column: 13, scope: !15783)
!15787 = !DILocation(line: 3705, column: 2, scope: !14769)
!15788 = !DILocation(line: 3706, column: 1, scope: !14769)
!15789 = distinct !DISubprogram(name: "dynamicPaint_freeBrushMaterials", scope: !3, file: !3, line: 2879, type: !15790, scopeLine: 2880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!15790 = !DISubroutineType(types: !15791)
!15791 = !{null, !13701}
!15792 = !DILocalVariable(name: "bMats", arg: 1, scope: !15789, file: !3, line: 2879, type: !13701)
!15793 = !DILocation(line: 2879, column: 61, scope: !15789)
!15794 = !DILocation(line: 2882, column: 6, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15789, file: !3, line: 2882, column: 6)
!15796 = !DILocation(line: 2882, column: 13, scope: !15795)
!15797 = !DILocation(line: 2882, column: 6, scope: !15789)
!15798 = !DILocalVariable(name: "i", scope: !15799, file: !3, line: 2883, type: !135)
!15799 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 2882, column: 22)
!15800 = !DILocation(line: 2883, column: 7, scope: !15799)
!15801 = !DILocation(line: 2884, column: 10, scope: !15802)
!15802 = distinct !DILexicalBlock(scope: !15799, file: !3, line: 2884, column: 3)
!15803 = !DILocation(line: 2884, column: 8, scope: !15802)
!15804 = !DILocation(line: 2884, column: 15, scope: !15805)
!15805 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 2884, column: 3)
!15806 = !DILocation(line: 2884, column: 19, scope: !15805)
!15807 = !DILocation(line: 2884, column: 26, scope: !15805)
!15808 = !DILocation(line: 2884, column: 17, scope: !15805)
!15809 = !DILocation(line: 2884, column: 3, scope: !15802)
!15810 = !DILocation(line: 2885, column: 28, scope: !15811)
!15811 = distinct !DILexicalBlock(scope: !15805, file: !3, line: 2884, column: 36)
!15812 = !DILocation(line: 2885, column: 35, scope: !15811)
!15813 = !DILocation(line: 2885, column: 43, scope: !15811)
!15814 = !DILocation(line: 2885, column: 4, scope: !15811)
!15815 = !DILocation(line: 2886, column: 3, scope: !15811)
!15816 = !DILocation(line: 2884, column: 32, scope: !15805)
!15817 = !DILocation(line: 2884, column: 3, scope: !15805)
!15818 = distinct !{!15818, !15809, !15819}
!15819 = !DILocation(line: 2886, column: 3, scope: !15802)
!15820 = !DILocation(line: 2887, column: 3, scope: !15799)
!15821 = !DILocation(line: 2887, column: 13, scope: !15799)
!15822 = !DILocation(line: 2887, column: 20, scope: !15799)
!15823 = !DILocation(line: 2888, column: 2, scope: !15799)
!15824 = !DILocation(line: 2889, column: 11, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 2889, column: 11)
!15826 = !DILocation(line: 2889, column: 18, scope: !15825)
!15827 = !DILocation(line: 2889, column: 11, scope: !15795)
!15828 = !DILocation(line: 2890, column: 27, scope: !15829)
!15829 = distinct !DILexicalBlock(scope: !15825, file: !3, line: 2889, column: 23)
!15830 = !DILocation(line: 2890, column: 34, scope: !15829)
!15831 = !DILocation(line: 2890, column: 3, scope: !15829)
!15832 = !DILocation(line: 2891, column: 2, scope: !15829)
!15833 = !DILocation(line: 2892, column: 1, scope: !15789)
!15834 = distinct !DISubprogram(name: "dynamicPaint_doSmudge", scope: !3, file: !3, line: 4190, type: !15835, scopeLine: 4191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!15835 = !DISubroutineType(types: !15836)
!15836 = !{null, !242, !4416, !207}
!15837 = !DILocalVariable(name: "surface", arg: 1, scope: !15834, file: !3, line: 4190, type: !242)
!15838 = !DILocation(line: 4190, column: 56, scope: !15834)
!15839 = !DILocalVariable(name: "brush", arg: 2, scope: !15834, file: !3, line: 4190, type: !4416)
!15840 = !DILocation(line: 4190, column: 92, scope: !15834)
!15841 = !DILocalVariable(name: "timescale", arg: 3, scope: !15834, file: !3, line: 4190, type: !207)
!15842 = !DILocation(line: 4190, column: 105, scope: !15834)
!15843 = !DILocalVariable(name: "sData", scope: !15834, file: !3, line: 4192, type: !3906)
!15844 = !DILocation(line: 4192, column: 20, scope: !15834)
!15845 = !DILocation(line: 4192, column: 28, scope: !15834)
!15846 = !DILocation(line: 4192, column: 37, scope: !15834)
!15847 = !DILocalVariable(name: "bData", scope: !15834, file: !3, line: 4193, type: !4026)
!15848 = !DILocation(line: 4193, column: 17, scope: !15834)
!15849 = !DILocation(line: 4193, column: 25, scope: !15834)
!15850 = !DILocation(line: 4193, column: 32, scope: !15834)
!15851 = !DILocalVariable(name: "bNeighs", scope: !15834, file: !3, line: 4194, type: !3167)
!15852 = !DILocation(line: 4194, column: 16, scope: !15834)
!15853 = !DILocation(line: 4194, column: 26, scope: !15834)
!15854 = !DILocation(line: 4194, column: 33, scope: !15834)
!15855 = !DILocation(line: 4194, column: 40, scope: !15834)
!15856 = !DILocalVariable(name: "index", scope: !15834, file: !3, line: 4195, type: !135)
!15857 = !DILocation(line: 4195, column: 6, scope: !15834)
!15858 = !DILocalVariable(name: "steps", scope: !15834, file: !3, line: 4195, type: !135)
!15859 = !DILocation(line: 4195, column: 13, scope: !15834)
!15860 = !DILocalVariable(name: "step", scope: !15834, file: !3, line: 4195, type: !135)
!15861 = !DILocation(line: 4195, column: 20, scope: !15834)
!15862 = !DILocalVariable(name: "eff_scale", scope: !15834, file: !3, line: 4196, type: !207)
!15863 = !DILocation(line: 4196, column: 8, scope: !15834)
!15864 = !DILocalVariable(name: "max_velocity", scope: !15834, file: !3, line: 4196, type: !207)
!15865 = !DILocation(line: 4196, column: 19, scope: !15834)
!15866 = !DILocation(line: 4198, column: 7, scope: !15867)
!15867 = distinct !DILexicalBlock(scope: !15834, file: !3, line: 4198, column: 6)
!15868 = !DILocation(line: 4198, column: 14, scope: !15867)
!15869 = !DILocation(line: 4198, column: 6, scope: !15834)
!15870 = !DILocation(line: 4198, column: 24, scope: !15867)
!15871 = !DILocation(line: 4201, column: 13, scope: !15872)
!15872 = distinct !DILexicalBlock(scope: !15834, file: !3, line: 4201, column: 2)
!15873 = !DILocation(line: 4201, column: 7, scope: !15872)
!15874 = !DILocation(line: 4201, column: 18, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15872, file: !3, line: 4201, column: 2)
!15876 = !DILocation(line: 4201, column: 26, scope: !15875)
!15877 = !DILocation(line: 4201, column: 33, scope: !15875)
!15878 = !DILocation(line: 4201, column: 24, scope: !15875)
!15879 = !DILocation(line: 4201, column: 2, scope: !15872)
!15880 = !DILocalVariable(name: "vel", scope: !15881, file: !3, line: 4202, type: !207)
!15881 = distinct !DILexicalBlock(scope: !15875, file: !3, line: 4201, column: 56)
!15882 = !DILocation(line: 4202, column: 9, scope: !15881)
!15883 = !DILocation(line: 4202, column: 15, scope: !15881)
!15884 = !DILocation(line: 4202, column: 22, scope: !15881)
!15885 = !DILocation(line: 4202, column: 37, scope: !15881)
!15886 = !DILocation(line: 4202, column: 43, scope: !15881)
!15887 = !DILocation(line: 4202, column: 47, scope: !15881)
!15888 = !DILocation(line: 4203, column: 7, scope: !15889)
!15889 = distinct !DILexicalBlock(scope: !15881, file: !3, line: 4203, column: 7)
!15890 = !DILocation(line: 4203, column: 13, scope: !15889)
!15891 = !DILocation(line: 4203, column: 11, scope: !15889)
!15892 = !DILocation(line: 4203, column: 7, scope: !15881)
!15893 = !DILocation(line: 4203, column: 42, scope: !15889)
!15894 = !DILocation(line: 4203, column: 40, scope: !15889)
!15895 = !DILocation(line: 4203, column: 27, scope: !15889)
!15896 = !DILocation(line: 4204, column: 2, scope: !15881)
!15897 = !DILocation(line: 4201, column: 52, scope: !15875)
!15898 = !DILocation(line: 4201, column: 2, scope: !15875)
!15899 = distinct !{!15899, !15879, !15900}
!15900 = !DILocation(line: 4204, column: 2, scope: !15872)
!15901 = !DILocation(line: 4206, column: 20, scope: !15834)
!15902 = !DILocation(line: 4206, column: 35, scope: !15834)
!15903 = !DILocation(line: 4206, column: 42, scope: !15834)
!15904 = !DILocation(line: 4206, column: 33, scope: !15834)
!15905 = !DILocation(line: 4206, column: 57, scope: !15834)
!15906 = !DILocation(line: 4206, column: 55, scope: !15834)
!15907 = !DILocation(line: 4206, column: 15, scope: !15834)
!15908 = !DILocation(line: 4206, column: 10, scope: !15834)
!15909 = !DILocation(line: 4206, column: 8, scope: !15834)
!15910 = !DILocation(line: 4207, column: 2, scope: !15911)
!15911 = distinct !DILexicalBlock(scope: !15912, file: !3, line: 4207, column: 2)
!15912 = distinct !DILexicalBlock(scope: !15834, file: !3, line: 4207, column: 2)
!15913 = !DILocation(line: 4207, column: 2, scope: !15912)
!15914 = !DILocation(line: 4207, column: 2, scope: !15915)
!15915 = distinct !DILexicalBlock(scope: !15911, file: !3, line: 4207, column: 2)
!15916 = !DILocation(line: 4208, column: 14, scope: !15834)
!15917 = !DILocation(line: 4208, column: 21, scope: !15834)
!15918 = !DILocation(line: 4208, column: 46, scope: !15834)
!15919 = !DILocation(line: 4208, column: 39, scope: !15834)
!15920 = !DILocation(line: 4208, column: 37, scope: !15834)
!15921 = !DILocation(line: 4208, column: 54, scope: !15834)
!15922 = !DILocation(line: 4208, column: 52, scope: !15834)
!15923 = !DILocation(line: 4208, column: 12, scope: !15834)
!15924 = !DILocation(line: 4210, column: 12, scope: !15925)
!15925 = distinct !DILexicalBlock(scope: !15834, file: !3, line: 4210, column: 2)
!15926 = !DILocation(line: 4210, column: 7, scope: !15925)
!15927 = !DILocation(line: 4210, column: 17, scope: !15928)
!15928 = distinct !DILexicalBlock(scope: !15925, file: !3, line: 4210, column: 2)
!15929 = !DILocation(line: 4210, column: 24, scope: !15928)
!15930 = !DILocation(line: 4210, column: 22, scope: !15928)
!15931 = !DILocation(line: 4210, column: 2, scope: !15925)
!15932 = !DILocation(line: 4212, column: 14, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15934, file: !3, line: 4212, column: 3)
!15934 = distinct !DILexicalBlock(scope: !15928, file: !3, line: 4210, column: 39)
!15935 = !DILocation(line: 4212, column: 8, scope: !15933)
!15936 = !DILocation(line: 4212, column: 19, scope: !15937)
!15937 = distinct !DILexicalBlock(scope: !15933, file: !3, line: 4212, column: 3)
!15938 = !DILocation(line: 4212, column: 27, scope: !15937)
!15939 = !DILocation(line: 4212, column: 34, scope: !15937)
!15940 = !DILocation(line: 4212, column: 25, scope: !15937)
!15941 = !DILocation(line: 4212, column: 3, scope: !15933)
!15942 = !DILocalVariable(name: "i", scope: !15943, file: !3, line: 4213, type: !135)
!15943 = distinct !DILexicalBlock(scope: !15937, file: !3, line: 4212, column: 57)
!15944 = !DILocation(line: 4213, column: 8, scope: !15943)
!15945 = !DILocalVariable(name: "pPoint", scope: !15943, file: !3, line: 4214, type: !222)
!15946 = !DILocation(line: 4214, column: 16, scope: !15943)
!15947 = !DILocation(line: 4214, column: 41, scope: !15943)
!15948 = !DILocation(line: 4214, column: 48, scope: !15943)
!15949 = !DILocation(line: 4214, column: 27, scope: !15943)
!15950 = !DILocation(line: 4214, column: 59, scope: !15943)
!15951 = !DILocation(line: 4214, column: 26, scope: !15943)
!15952 = !DILocalVariable(name: "smudge_str", scope: !15943, file: !3, line: 4215, type: !207)
!15953 = !DILocation(line: 4215, column: 10, scope: !15943)
!15954 = !DILocation(line: 4215, column: 23, scope: !15943)
!15955 = !DILocation(line: 4215, column: 30, scope: !15943)
!15956 = !DILocation(line: 4215, column: 45, scope: !15943)
!15957 = !DILocation(line: 4215, column: 51, scope: !15943)
!15958 = !DILocation(line: 4215, column: 55, scope: !15943)
!15959 = !DILocalVariable(name: "closest_id", scope: !15943, file: !3, line: 4218, type: !8853)
!15960 = !DILocation(line: 4218, column: 8, scope: !15943)
!15961 = !DILocalVariable(name: "closest_d", scope: !15943, file: !3, line: 4219, type: !217)
!15962 = !DILocation(line: 4219, column: 10, scope: !15943)
!15963 = !DILocation(line: 4221, column: 9, scope: !15964)
!15964 = distinct !DILexicalBlock(scope: !15943, file: !3, line: 4221, column: 8)
!15965 = !DILocation(line: 4221, column: 8, scope: !15943)
!15966 = !DILocation(line: 4221, column: 21, scope: !15964)
!15967 = !DILocation(line: 4224, column: 39, scope: !15943)
!15968 = !DILocation(line: 4224, column: 46, scope: !15943)
!15969 = !DILocation(line: 4224, column: 54, scope: !15943)
!15970 = !DILocation(line: 4224, column: 61, scope: !15943)
!15971 = !DILocation(line: 4224, column: 76, scope: !15943)
!15972 = !DILocation(line: 4224, column: 82, scope: !15943)
!15973 = !DILocation(line: 4224, column: 88, scope: !15943)
!15974 = !DILocation(line: 4224, column: 99, scope: !15943)
!15975 = !DILocation(line: 4224, column: 4, scope: !15943)
!15976 = !DILocation(line: 4227, column: 11, scope: !15977)
!15977 = distinct !DILexicalBlock(scope: !15943, file: !3, line: 4227, column: 4)
!15978 = !DILocation(line: 4227, column: 9, scope: !15977)
!15979 = !DILocation(line: 4227, column: 16, scope: !15980)
!15980 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4227, column: 4)
!15981 = !DILocation(line: 4227, column: 18, scope: !15980)
!15982 = !DILocation(line: 4227, column: 4, scope: !15977)
!15983 = !DILocalVariable(name: "n_index", scope: !15984, file: !3, line: 4228, type: !135)
!15984 = distinct !DILexicalBlock(scope: !15980, file: !3, line: 4227, column: 28)
!15985 = !DILocation(line: 4228, column: 9, scope: !15984)
!15986 = !DILocation(line: 4228, column: 30, scope: !15984)
!15987 = !DILocation(line: 4228, column: 19, scope: !15984)
!15988 = !DILocation(line: 4229, column: 9, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15984, file: !3, line: 4229, column: 9)
!15990 = !DILocation(line: 4229, column: 17, scope: !15989)
!15991 = !DILocation(line: 4229, column: 23, scope: !15989)
!15992 = !DILocation(line: 4229, column: 36, scope: !15989)
!15993 = !DILocation(line: 4229, column: 26, scope: !15989)
!15994 = !DILocation(line: 4229, column: 39, scope: !15989)
!15995 = !DILocation(line: 4229, column: 9, scope: !15984)
!15996 = !DILocalVariable(name: "dir_dot", scope: !15997, file: !3, line: 4230, type: !207)
!15997 = distinct !DILexicalBlock(scope: !15989, file: !3, line: 4229, column: 47)
!15998 = !DILocation(line: 4230, column: 12, scope: !15997)
!15999 = !DILocation(line: 4230, column: 32, scope: !15997)
!16000 = !DILocation(line: 4230, column: 22, scope: !15997)
!16001 = !DILocalVariable(name: "dir_factor", scope: !15997, file: !3, line: 4230, type: !207)
!16002 = !DILocation(line: 4230, column: 36, scope: !15997)
!16003 = !DILocalVariable(name: "speed_scale", scope: !15997, file: !3, line: 4231, type: !207)
!16004 = !DILocation(line: 4231, column: 12, scope: !15997)
!16005 = !DILocation(line: 4231, column: 26, scope: !15997)
!16006 = !DILocation(line: 4231, column: 38, scope: !15997)
!16007 = !DILocation(line: 4231, column: 36, scope: !15997)
!16008 = !DILocation(line: 4231, column: 51, scope: !15997)
!16009 = !DILocation(line: 4231, column: 59, scope: !15997)
!16010 = !DILocation(line: 4231, column: 68, scope: !15997)
!16011 = !DILocation(line: 4231, column: 49, scope: !15997)
!16012 = !DILocalVariable(name: "ePoint", scope: !15997, file: !3, line: 4232, type: !222)
!16013 = !DILocation(line: 4232, column: 18, scope: !15997)
!16014 = !DILocation(line: 4232, column: 43, scope: !15997)
!16015 = !DILocation(line: 4232, column: 50, scope: !15997)
!16016 = !DILocation(line: 4232, column: 29, scope: !15997)
!16017 = !DILocation(line: 4232, column: 61, scope: !15997)
!16018 = !DILocation(line: 4232, column: 68, scope: !15997)
!16019 = !DILocation(line: 4232, column: 78, scope: !15997)
!16020 = !DILocation(line: 4232, column: 87, scope: !15997)
!16021 = !DILocation(line: 4232, column: 28, scope: !15997)
!16022 = !DILocation(line: 4235, column: 10, scope: !16023)
!16023 = distinct !DILexicalBlock(scope: !15997, file: !3, line: 4235, column: 10)
!16024 = !DILocation(line: 4235, column: 18, scope: !16023)
!16025 = !DILocation(line: 4235, column: 10, scope: !15997)
!16026 = !DILocation(line: 4235, column: 27, scope: !16023)
!16027 = !DILocation(line: 4237, column: 19, scope: !15997)
!16028 = !DILocation(line: 4237, column: 29, scope: !15997)
!16029 = !DILocation(line: 4237, column: 27, scope: !15997)
!16030 = !DILocation(line: 4237, column: 17, scope: !15997)
!16031 = !DILocation(line: 4238, column: 10, scope: !16032)
!16032 = distinct !DILexicalBlock(scope: !15997, file: !3, line: 4238, column: 10)
!16033 = !DILocation(line: 4238, column: 23, scope: !16032)
!16034 = !DILocation(line: 4238, column: 30, scope: !16032)
!16035 = !DILocation(line: 4238, column: 21, scope: !16032)
!16036 = !DILocation(line: 4238, column: 10, scope: !15997)
!16037 = !DILocation(line: 4238, column: 60, scope: !16032)
!16038 = !DILocation(line: 4238, column: 67, scope: !16032)
!16039 = !DILocation(line: 4238, column: 58, scope: !16032)
!16040 = !DILocation(line: 4238, column: 47, scope: !16032)
!16041 = !DILocation(line: 4241, column: 16, scope: !15997)
!16042 = !DILocation(line: 4241, column: 24, scope: !15997)
!16043 = !DILocation(line: 4241, column: 31, scope: !15997)
!16044 = !DILocation(line: 4241, column: 39, scope: !15997)
!16045 = !DILocation(line: 4241, column: 46, scope: !15997)
!16046 = !DILocation(line: 4241, column: 54, scope: !15997)
!16047 = !DILocation(line: 4241, column: 61, scope: !15997)
!16048 = !DILocation(line: 4241, column: 69, scope: !15997)
!16049 = !DILocation(line: 4241, column: 76, scope: !15997)
!16050 = !DILocation(line: 4241, column: 6, scope: !15997)
!16051 = !DILocation(line: 4242, column: 22, scope: !15997)
!16052 = !DILocation(line: 4242, column: 30, scope: !15997)
!16053 = !DILocation(line: 4242, column: 46, scope: !15997)
!16054 = !DILocation(line: 4242, column: 44, scope: !15997)
!16055 = !DILocation(line: 4242, column: 36, scope: !15997)
!16056 = !DILocation(line: 4242, column: 60, scope: !15997)
!16057 = !DILocation(line: 4242, column: 68, scope: !15997)
!16058 = !DILocation(line: 4242, column: 76, scope: !15997)
!16059 = !DILocation(line: 4242, column: 74, scope: !15997)
!16060 = !DILocation(line: 4242, column: 58, scope: !15997)
!16061 = !DILocation(line: 4242, column: 6, scope: !15997)
!16062 = !DILocation(line: 4242, column: 14, scope: !15997)
!16063 = !DILocation(line: 4242, column: 20, scope: !15997)
!16064 = !DILocation(line: 4245, column: 16, scope: !15997)
!16065 = !DILocation(line: 4245, column: 24, scope: !15997)
!16066 = !DILocation(line: 4245, column: 33, scope: !15997)
!16067 = !DILocation(line: 4245, column: 41, scope: !15997)
!16068 = !DILocation(line: 4245, column: 50, scope: !15997)
!16069 = !DILocation(line: 4245, column: 58, scope: !15997)
!16070 = !DILocation(line: 4245, column: 67, scope: !15997)
!16071 = !DILocation(line: 4245, column: 75, scope: !15997)
!16072 = !DILocation(line: 4245, column: 84, scope: !15997)
!16073 = !DILocation(line: 4245, column: 6, scope: !15997)
!16074 = !DILocation(line: 4246, column: 24, scope: !15997)
!16075 = !DILocation(line: 4246, column: 32, scope: !15997)
!16076 = !DILocation(line: 4246, column: 50, scope: !15997)
!16077 = !DILocation(line: 4246, column: 48, scope: !15997)
!16078 = !DILocation(line: 4246, column: 40, scope: !15997)
!16079 = !DILocation(line: 4246, column: 64, scope: !15997)
!16080 = !DILocation(line: 4246, column: 72, scope: !15997)
!16081 = !DILocation(line: 4246, column: 82, scope: !15997)
!16082 = !DILocation(line: 4246, column: 80, scope: !15997)
!16083 = !DILocation(line: 4246, column: 62, scope: !15997)
!16084 = !DILocation(line: 4246, column: 6, scope: !15997)
!16085 = !DILocation(line: 4246, column: 14, scope: !15997)
!16086 = !DILocation(line: 4246, column: 22, scope: !15997)
!16087 = !DILocation(line: 4247, column: 33, scope: !15997)
!16088 = !DILocation(line: 4247, column: 31, scope: !15997)
!16089 = !DILocation(line: 4247, column: 6, scope: !15997)
!16090 = !DILocation(line: 4247, column: 14, scope: !15997)
!16091 = !DILocation(line: 4247, column: 22, scope: !15997)
!16092 = !DILocation(line: 4248, column: 5, scope: !15997)
!16093 = !DILocation(line: 4249, column: 4, scope: !15984)
!16094 = !DILocation(line: 4227, column: 24, scope: !15980)
!16095 = !DILocation(line: 4227, column: 4, scope: !15980)
!16096 = distinct !{!16096, !15982, !16097}
!16097 = !DILocation(line: 4249, column: 4, scope: !15977)
!16098 = !DILocation(line: 4250, column: 3, scope: !15943)
!16099 = !DILocation(line: 4212, column: 53, scope: !15937)
!16100 = !DILocation(line: 4212, column: 3, scope: !15937)
!16101 = distinct !{!16101, !15941, !16102}
!16102 = !DILocation(line: 4250, column: 3, scope: !15933)
!16103 = !DILocation(line: 4251, column: 2, scope: !15934)
!16104 = !DILocation(line: 4210, column: 35, scope: !15928)
!16105 = !DILocation(line: 4210, column: 2, scope: !15928)
!16106 = distinct !{!16106, !15931, !16107}
!16107 = !DILocation(line: 4251, column: 2, scope: !15925)
!16108 = !DILocation(line: 4252, column: 1, scope: !15834)
!16109 = distinct !DISubprogram(name: "dynamicPaint_doWaveStep", scope: !3, file: !3, line: 4517, type: !12857, scopeLine: 4518, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!16110 = !DILocalVariable(name: "surface", arg: 1, scope: !16109, file: !3, line: 4517, type: !242)
!16111 = !DILocation(line: 4517, column: 58, scope: !16109)
!16112 = !DILocalVariable(name: "timescale", arg: 2, scope: !16109, file: !3, line: 4517, type: !207)
!16113 = !DILocation(line: 4517, column: 73, scope: !16109)
!16114 = !DILocalVariable(name: "sData", scope: !16109, file: !3, line: 4519, type: !3906)
!16115 = !DILocation(line: 4519, column: 20, scope: !16109)
!16116 = !DILocation(line: 4519, column: 28, scope: !16109)
!16117 = !DILocation(line: 4519, column: 37, scope: !16109)
!16118 = !DILocalVariable(name: "bNeighs", scope: !16109, file: !3, line: 4520, type: !3167)
!16119 = !DILocation(line: 4520, column: 16, scope: !16109)
!16120 = !DILocation(line: 4520, column: 26, scope: !16109)
!16121 = !DILocation(line: 4520, column: 33, scope: !16109)
!16122 = !DILocation(line: 4520, column: 40, scope: !16109)
!16123 = !DILocalVariable(name: "index", scope: !16109, file: !3, line: 4521, type: !135)
!16124 = !DILocation(line: 4521, column: 6, scope: !16109)
!16125 = !DILocalVariable(name: "steps", scope: !16109, file: !3, line: 4522, type: !135)
!16126 = !DILocation(line: 4522, column: 6, scope: !16109)
!16127 = !DILocalVariable(name: "ss", scope: !16109, file: !3, line: 4522, type: !135)
!16128 = !DILocation(line: 4522, column: 13, scope: !16109)
!16129 = !DILocalVariable(name: "dt", scope: !16109, file: !3, line: 4523, type: !207)
!16130 = !DILocation(line: 4523, column: 8, scope: !16109)
!16131 = !DILocalVariable(name: "min_dist", scope: !16109, file: !3, line: 4523, type: !207)
!16132 = !DILocation(line: 4523, column: 12, scope: !16109)
!16133 = !DILocalVariable(name: "damp_factor", scope: !16109, file: !3, line: 4523, type: !207)
!16134 = !DILocation(line: 4523, column: 22, scope: !16109)
!16135 = !DILocalVariable(name: "wave_speed", scope: !16109, file: !3, line: 4524, type: !207)
!16136 = !DILocation(line: 4524, column: 8, scope: !16109)
!16137 = !DILocation(line: 4524, column: 21, scope: !16109)
!16138 = !DILocation(line: 4524, column: 30, scope: !16109)
!16139 = !DILocalVariable(name: "wave_max_slope", scope: !16109, file: !3, line: 4525, type: !207)
!16140 = !DILocation(line: 4525, column: 8, scope: !16109)
!16141 = !DILocation(line: 4525, column: 26, scope: !16109)
!16142 = !DILocation(line: 4525, column: 35, scope: !16109)
!16143 = !DILocation(line: 4525, column: 51, scope: !16109)
!16144 = !DILocation(line: 4525, column: 25, scope: !16109)
!16145 = !DILocation(line: 4525, column: 71, scope: !16109)
!16146 = !DILocation(line: 4525, column: 80, scope: !16109)
!16147 = !DILocation(line: 4525, column: 69, scope: !16109)
!16148 = !DILocalVariable(name: "average_dist", scope: !16109, file: !3, line: 4526, type: !874)
!16149 = !DILocation(line: 4526, column: 9, scope: !16109)
!16150 = !DILocalVariable(name: "canvas_size", scope: !16109, file: !3, line: 4527, type: !2009)
!16151 = !DILocation(line: 4527, column: 14, scope: !16109)
!16152 = !DILocation(line: 4527, column: 48, scope: !16109)
!16153 = !DILocation(line: 4527, column: 28, scope: !16109)
!16154 = !DILocalVariable(name: "wave_scale", scope: !16109, file: !3, line: 4528, type: !207)
!16155 = !DILocation(line: 4528, column: 8, scope: !16109)
!16156 = !DILocation(line: 4528, column: 39, scope: !16109)
!16157 = !DILocation(line: 4528, column: 37, scope: !16109)
!16158 = !DILocalVariable(name: "prevPoint", scope: !16109, file: !3, line: 4531, type: !234)
!16159 = !DILocation(line: 4531, column: 18, scope: !16109)
!16160 = !DILocation(line: 4531, column: 30, scope: !16109)
!16161 = !DILocation(line: 4531, column: 42, scope: !16109)
!16162 = !DILocation(line: 4531, column: 49, scope: !16109)
!16163 = !DILocation(line: 4531, column: 62, scope: !16109)
!16164 = !DILocation(line: 4532, column: 7, scope: !16165)
!16165 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 4532, column: 6)
!16166 = !DILocation(line: 4532, column: 6, scope: !16109)
!16167 = !DILocation(line: 4532, column: 18, scope: !16165)
!16168 = !DILocation(line: 4535, column: 13, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 4535, column: 2)
!16170 = !DILocation(line: 4535, column: 7, scope: !16169)
!16171 = !DILocation(line: 4535, column: 18, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 4535, column: 2)
!16173 = !DILocation(line: 4535, column: 26, scope: !16172)
!16174 = !DILocation(line: 4535, column: 33, scope: !16172)
!16175 = !DILocation(line: 4535, column: 24, scope: !16172)
!16176 = !DILocation(line: 4535, column: 2, scope: !16169)
!16177 = !DILocalVariable(name: "i", scope: !16178, file: !3, line: 4536, type: !135)
!16178 = distinct !DILexicalBlock(scope: !16172, file: !3, line: 4535, column: 56)
!16179 = !DILocation(line: 4536, column: 7, scope: !16178)
!16180 = !DILocalVariable(name: "numOfNeighs", scope: !16178, file: !3, line: 4537, type: !135)
!16181 = !DILocation(line: 4537, column: 7, scope: !16178)
!16182 = !DILocation(line: 4537, column: 21, scope: !16178)
!16183 = !DILocation(line: 4537, column: 28, scope: !16178)
!16184 = !DILocation(line: 4537, column: 38, scope: !16178)
!16185 = !DILocation(line: 4537, column: 44, scope: !16178)
!16186 = !DILocation(line: 4539, column: 10, scope: !16187)
!16187 = distinct !DILexicalBlock(scope: !16178, file: !3, line: 4539, column: 3)
!16188 = !DILocation(line: 4539, column: 8, scope: !16187)
!16189 = !DILocation(line: 4539, column: 15, scope: !16190)
!16190 = distinct !DILexicalBlock(scope: !16187, file: !3, line: 4539, column: 3)
!16191 = !DILocation(line: 4539, column: 19, scope: !16190)
!16192 = !DILocation(line: 4539, column: 17, scope: !16190)
!16193 = !DILocation(line: 4539, column: 3, scope: !16187)
!16194 = !DILocation(line: 4540, column: 20, scope: !16195)
!16195 = distinct !DILexicalBlock(scope: !16190, file: !3, line: 4539, column: 37)
!16196 = !DILocation(line: 4540, column: 28, scope: !16195)
!16197 = !DILocation(line: 4540, column: 35, scope: !16195)
!16198 = !DILocation(line: 4540, column: 45, scope: !16195)
!16199 = !DILocation(line: 4540, column: 53, scope: !16195)
!16200 = !DILocation(line: 4540, column: 62, scope: !16195)
!16201 = !DILocation(line: 4540, column: 60, scope: !16195)
!16202 = !DILocation(line: 4540, column: 65, scope: !16195)
!16203 = !DILocation(line: 4540, column: 17, scope: !16195)
!16204 = !DILocation(line: 4541, column: 3, scope: !16195)
!16205 = !DILocation(line: 4539, column: 33, scope: !16190)
!16206 = !DILocation(line: 4539, column: 3, scope: !16190)
!16207 = distinct !{!16207, !16193, !16208}
!16208 = !DILocation(line: 4541, column: 3, scope: !16187)
!16209 = !DILocation(line: 4542, column: 2, scope: !16178)
!16210 = !DILocation(line: 4535, column: 52, scope: !16172)
!16211 = !DILocation(line: 4535, column: 2, scope: !16172)
!16212 = distinct !{!16212, !16176, !16213}
!16213 = !DILocation(line: 4542, column: 2, scope: !16169)
!16214 = !DILocation(line: 4543, column: 19, scope: !16109)
!16215 = !DILocation(line: 4543, column: 32, scope: !16109)
!16216 = !DILocation(line: 4543, column: 39, scope: !16109)
!16217 = !DILocation(line: 4543, column: 49, scope: !16109)
!16218 = !DILocation(line: 4543, column: 30, scope: !16109)
!16219 = !DILocation(line: 4543, column: 16, scope: !16109)
!16220 = !DILocation(line: 4546, column: 37, scope: !16109)
!16221 = !DILocation(line: 4546, column: 35, scope: !16109)
!16222 = !DILocation(line: 4546, column: 49, scope: !16109)
!16223 = !DILocation(line: 4546, column: 58, scope: !16109)
!16224 = !DILocation(line: 4546, column: 47, scope: !16109)
!16225 = !DILocation(line: 4546, column: 20, scope: !16109)
!16226 = !DILocation(line: 4546, column: 77, scope: !16109)
!16227 = !DILocation(line: 4546, column: 92, scope: !16109)
!16228 = !DILocation(line: 4546, column: 90, scope: !16109)
!16229 = !DILocation(line: 4546, column: 103, scope: !16109)
!16230 = !DILocation(line: 4546, column: 74, scope: !16109)
!16231 = !DILocation(line: 4546, column: 15, scope: !16109)
!16232 = !DILocation(line: 4546, column: 10, scope: !16109)
!16233 = !DILocation(line: 4546, column: 8, scope: !16109)
!16234 = !DILocation(line: 4547, column: 2, scope: !16235)
!16235 = distinct !DILexicalBlock(scope: !16236, file: !3, line: 4547, column: 2)
!16236 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 4547, column: 2)
!16237 = !DILocation(line: 4547, column: 2, scope: !16236)
!16238 = !DILocation(line: 4547, column: 2, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16235, file: !3, line: 4547, column: 2)
!16240 = !DILocation(line: 4548, column: 15, scope: !16109)
!16241 = !DILocation(line: 4548, column: 12, scope: !16109)
!16242 = !DILocation(line: 4551, column: 23, scope: !16109)
!16243 = !DILocation(line: 4551, column: 21, scope: !16109)
!16244 = !DILocation(line: 4551, column: 35, scope: !16109)
!16245 = !DILocation(line: 4551, column: 44, scope: !16109)
!16246 = !DILocation(line: 4551, column: 33, scope: !16109)
!16247 = !DILocation(line: 4551, column: 5, scope: !16109)
!16248 = !DILocation(line: 4552, column: 13, scope: !16109)
!16249 = !DILocation(line: 4552, column: 26, scope: !16109)
!16250 = !DILocation(line: 4552, column: 24, scope: !16109)
!16251 = !DILocation(line: 4552, column: 29, scope: !16109)
!16252 = !DILocation(line: 4552, column: 11, scope: !16109)
!16253 = !DILocation(line: 4553, column: 28, scope: !16109)
!16254 = !DILocation(line: 4553, column: 37, scope: !16109)
!16255 = !DILocation(line: 4553, column: 26, scope: !16109)
!16256 = !DILocation(line: 4553, column: 20, scope: !16109)
!16257 = !DILocation(line: 4553, column: 52, scope: !16109)
!16258 = !DILocation(line: 4553, column: 64, scope: !16109)
!16259 = !DILocation(line: 4553, column: 73, scope: !16109)
!16260 = !DILocation(line: 4553, column: 62, scope: !16109)
!16261 = !DILocation(line: 4553, column: 16, scope: !16109)
!16262 = !DILocation(line: 4553, column: 14, scope: !16109)
!16263 = !DILocation(line: 4555, column: 10, scope: !16264)
!16264 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 4555, column: 2)
!16265 = !DILocation(line: 4555, column: 7, scope: !16264)
!16266 = !DILocation(line: 4555, column: 15, scope: !16267)
!16267 = distinct !DILexicalBlock(scope: !16264, file: !3, line: 4555, column: 2)
!16268 = !DILocation(line: 4555, column: 20, scope: !16267)
!16269 = !DILocation(line: 4555, column: 18, scope: !16267)
!16270 = !DILocation(line: 4555, column: 2, scope: !16264)
!16271 = !DILocation(line: 4558, column: 10, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 4555, column: 33)
!16273 = !DILocation(line: 4558, column: 3, scope: !16272)
!16274 = !DILocation(line: 4558, column: 21, scope: !16272)
!16275 = !DILocation(line: 4558, column: 28, scope: !16272)
!16276 = !DILocation(line: 4558, column: 39, scope: !16272)
!16277 = !DILocation(line: 4558, column: 46, scope: !16272)
!16278 = !DILocation(line: 4558, column: 59, scope: !16272)
!16279 = !DILocation(line: 4563, column: 14, scope: !16280)
!16280 = distinct !DILexicalBlock(scope: !16272, file: !3, line: 4563, column: 3)
!16281 = !DILocation(line: 4563, column: 8, scope: !16280)
!16282 = !DILocation(line: 4563, column: 19, scope: !16283)
!16283 = distinct !DILexicalBlock(scope: !16280, file: !3, line: 4563, column: 3)
!16284 = !DILocation(line: 4563, column: 27, scope: !16283)
!16285 = !DILocation(line: 4563, column: 34, scope: !16283)
!16286 = !DILocation(line: 4563, column: 25, scope: !16283)
!16287 = !DILocation(line: 4563, column: 3, scope: !16280)
!16288 = !DILocalVariable(name: "wPoint", scope: !16289, file: !3, line: 4564, type: !234)
!16289 = distinct !DILexicalBlock(scope: !16283, file: !3, line: 4563, column: 57)
!16290 = !DILocation(line: 4564, column: 20, scope: !16289)
!16291 = !DILocation(line: 4564, column: 49, scope: !16289)
!16292 = !DILocation(line: 4564, column: 56, scope: !16289)
!16293 = !DILocation(line: 4564, column: 31, scope: !16289)
!16294 = !DILocation(line: 4564, column: 67, scope: !16289)
!16295 = !DILocation(line: 4564, column: 30, scope: !16289)
!16296 = !DILocalVariable(name: "numOfNeighs", scope: !16289, file: !3, line: 4565, type: !135)
!16297 = !DILocation(line: 4565, column: 8, scope: !16289)
!16298 = !DILocation(line: 4565, column: 22, scope: !16289)
!16299 = !DILocation(line: 4565, column: 29, scope: !16289)
!16300 = !DILocation(line: 4565, column: 39, scope: !16289)
!16301 = !DILocation(line: 4565, column: 45, scope: !16289)
!16302 = !DILocalVariable(name: "force", scope: !16289, file: !3, line: 4566, type: !207)
!16303 = !DILocation(line: 4566, column: 10, scope: !16289)
!16304 = !DILocalVariable(name: "avg_dist", scope: !16289, file: !3, line: 4566, type: !207)
!16305 = !DILocation(line: 4566, column: 24, scope: !16289)
!16306 = !DILocalVariable(name: "avg_height", scope: !16289, file: !3, line: 4566, type: !207)
!16307 = !DILocation(line: 4566, column: 41, scope: !16289)
!16308 = !DILocalVariable(name: "avg_n_height", scope: !16289, file: !3, line: 4566, type: !207)
!16309 = !DILocation(line: 4566, column: 60, scope: !16289)
!16310 = !DILocalVariable(name: "numOfN", scope: !16289, file: !3, line: 4567, type: !135)
!16311 = !DILocation(line: 4567, column: 8, scope: !16289)
!16312 = !DILocalVariable(name: "numOfRN", scope: !16289, file: !3, line: 4567, type: !135)
!16313 = !DILocation(line: 4567, column: 20, scope: !16289)
!16314 = !DILocalVariable(name: "i", scope: !16289, file: !3, line: 4568, type: !135)
!16315 = !DILocation(line: 4568, column: 8, scope: !16289)
!16316 = !DILocation(line: 4570, column: 8, scope: !16317)
!16317 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4570, column: 8)
!16318 = !DILocation(line: 4570, column: 16, scope: !16317)
!16319 = !DILocation(line: 4570, column: 22, scope: !16317)
!16320 = !DILocation(line: 4570, column: 8, scope: !16289)
!16321 = !DILocation(line: 4570, column: 27, scope: !16317)
!16322 = !DILocation(line: 4573, column: 11, scope: !16323)
!16323 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4573, column: 4)
!16324 = !DILocation(line: 4573, column: 9, scope: !16323)
!16325 = !DILocation(line: 4573, column: 16, scope: !16326)
!16326 = distinct !DILexicalBlock(scope: !16323, file: !3, line: 4573, column: 4)
!16327 = !DILocation(line: 4573, column: 20, scope: !16326)
!16328 = !DILocation(line: 4573, column: 18, scope: !16326)
!16329 = !DILocation(line: 4573, column: 4, scope: !16323)
!16330 = !DILocalVariable(name: "n_index", scope: !16331, file: !3, line: 4574, type: !135)
!16331 = distinct !DILexicalBlock(scope: !16326, file: !3, line: 4573, column: 38)
!16332 = !DILocation(line: 4574, column: 9, scope: !16331)
!16333 = !DILocation(line: 4574, column: 19, scope: !16331)
!16334 = !DILocation(line: 4574, column: 26, scope: !16331)
!16335 = !DILocation(line: 4574, column: 36, scope: !16331)
!16336 = !DILocation(line: 4574, column: 44, scope: !16331)
!16337 = !DILocation(line: 4574, column: 53, scope: !16331)
!16338 = !DILocation(line: 4574, column: 51, scope: !16331)
!16339 = !DILocalVariable(name: "dist", scope: !16331, file: !3, line: 4575, type: !207)
!16340 = !DILocation(line: 4575, column: 11, scope: !16331)
!16341 = !DILocation(line: 4575, column: 18, scope: !16331)
!16342 = !DILocation(line: 4575, column: 26, scope: !16331)
!16343 = !DILocation(line: 4575, column: 35, scope: !16331)
!16344 = !DILocation(line: 4575, column: 42, scope: !16331)
!16345 = !DILocation(line: 4575, column: 40, scope: !16331)
!16346 = !DILocalVariable(name: "tPoint", scope: !16331, file: !3, line: 4576, type: !234)
!16347 = !DILocation(line: 4576, column: 21, scope: !16331)
!16348 = !DILocation(line: 4576, column: 31, scope: !16331)
!16349 = !DILocation(line: 4576, column: 41, scope: !16331)
!16350 = !DILocation(line: 4576, column: 48, scope: !16331)
!16351 = !DILocation(line: 4576, column: 58, scope: !16331)
!16352 = !DILocation(line: 4576, column: 67, scope: !16331)
!16353 = !DILocation(line: 4578, column: 10, scope: !16354)
!16354 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 4578, column: 9)
!16355 = !DILocation(line: 4578, column: 15, scope: !16354)
!16356 = !DILocation(line: 4578, column: 18, scope: !16354)
!16357 = !DILocation(line: 4578, column: 26, scope: !16354)
!16358 = !DILocation(line: 4578, column: 32, scope: !16354)
!16359 = !DILocation(line: 4578, column: 9, scope: !16331)
!16360 = !DILocation(line: 4578, column: 37, scope: !16354)
!16361 = !DILocation(line: 4579, column: 9, scope: !16362)
!16362 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 4579, column: 9)
!16363 = !DILocation(line: 4579, column: 16, scope: !16362)
!16364 = !DILocation(line: 4579, column: 14, scope: !16362)
!16365 = !DILocation(line: 4579, column: 9, scope: !16331)
!16366 = !DILocation(line: 4579, column: 33, scope: !16362)
!16367 = !DILocation(line: 4579, column: 31, scope: !16362)
!16368 = !DILocation(line: 4579, column: 26, scope: !16362)
!16369 = !DILocation(line: 4580, column: 17, scope: !16331)
!16370 = !DILocation(line: 4580, column: 14, scope: !16331)
!16371 = !DILocation(line: 4581, column: 11, scope: !16331)
!16372 = !DILocation(line: 4584, column: 11, scope: !16373)
!16373 = distinct !DILexicalBlock(scope: !16331, file: !3, line: 4584, column: 9)
!16374 = !DILocation(line: 4584, column: 18, scope: !16373)
!16375 = !DILocation(line: 4584, column: 28, scope: !16373)
!16376 = !DILocation(line: 4584, column: 34, scope: !16373)
!16377 = !DILocation(line: 4584, column: 41, scope: !16373)
!16378 = !DILocation(line: 4584, column: 51, scope: !16373)
!16379 = !DILocation(line: 4584, column: 60, scope: !16373)
!16380 = !DILocation(line: 4584, column: 70, scope: !16373)
!16381 = !DILocation(line: 4584, column: 9, scope: !16331)
!16382 = !DILocation(line: 4585, column: 22, scope: !16383)
!16383 = distinct !DILexicalBlock(scope: !16373, file: !3, line: 4584, column: 91)
!16384 = !DILocation(line: 4585, column: 30, scope: !16383)
!16385 = !DILocation(line: 4585, column: 19, scope: !16383)
!16386 = !DILocation(line: 4586, column: 13, scope: !16383)
!16387 = !DILocation(line: 4587, column: 5, scope: !16383)
!16388 = !DILocation(line: 4589, column: 15, scope: !16331)
!16389 = !DILocation(line: 4589, column: 23, scope: !16331)
!16390 = !DILocation(line: 4589, column: 32, scope: !16331)
!16391 = !DILocation(line: 4589, column: 40, scope: !16331)
!16392 = !DILocation(line: 4589, column: 30, scope: !16331)
!16393 = !DILocation(line: 4589, column: 51, scope: !16331)
!16394 = !DILocation(line: 4589, column: 58, scope: !16331)
!16395 = !DILocation(line: 4589, column: 56, scope: !16331)
!16396 = !DILocation(line: 4589, column: 48, scope: !16331)
!16397 = !DILocation(line: 4589, column: 11, scope: !16331)
!16398 = !DILocation(line: 4590, column: 19, scope: !16331)
!16399 = !DILocation(line: 4590, column: 27, scope: !16331)
!16400 = !DILocation(line: 4590, column: 16, scope: !16331)
!16401 = !DILocation(line: 4591, column: 4, scope: !16331)
!16402 = !DILocation(line: 4573, column: 34, scope: !16326)
!16403 = !DILocation(line: 4573, column: 4, scope: !16326)
!16404 = distinct !{!16404, !16329, !16405}
!16405 = !DILocation(line: 4591, column: 4, scope: !16323)
!16406 = !DILocation(line: 4592, column: 16, scope: !16289)
!16407 = !DILocation(line: 4592, column: 15, scope: !16289)
!16408 = !DILocation(line: 4592, column: 26, scope: !16289)
!16409 = !DILocation(line: 4592, column: 37, scope: !16289)
!16410 = !DILocation(line: 4592, column: 35, scope: !16289)
!16411 = !DILocation(line: 4592, column: 13, scope: !16289)
!16412 = !DILocation(line: 4594, column: 8, scope: !16413)
!16413 = distinct !DILexicalBlock(scope: !16289, file: !3, line: 4594, column: 8)
!16414 = !DILocation(line: 4594, column: 17, scope: !16413)
!16415 = !DILocation(line: 4594, column: 23, scope: !16413)
!16416 = !DILocation(line: 4594, column: 54, scope: !16413)
!16417 = !DILocation(line: 4595, column: 8, scope: !16413)
!16418 = !DILocation(line: 4595, column: 15, scope: !16413)
!16419 = !DILocation(line: 4595, column: 25, scope: !16413)
!16420 = !DILocation(line: 4595, column: 31, scope: !16413)
!16421 = !DILocation(line: 4595, column: 38, scope: !16413)
!16422 = !DILocation(line: 4594, column: 8, scope: !16289)
!16423 = !DILocation(line: 4598, column: 21, scope: !16424)
!16424 = distinct !DILexicalBlock(scope: !16413, file: !3, line: 4596, column: 4)
!16425 = !DILocation(line: 4598, column: 20, scope: !16424)
!16426 = !DILocation(line: 4598, column: 32, scope: !16424)
!16427 = !DILocation(line: 4598, column: 47, scope: !16424)
!16428 = !DILocation(line: 4598, column: 45, scope: !16424)
!16429 = !DILocation(line: 4598, column: 18, scope: !16424)
!16430 = !DILocation(line: 4599, column: 23, scope: !16424)
!16431 = !DILocation(line: 4599, column: 28, scope: !16424)
!16432 = !DILocation(line: 4599, column: 26, scope: !16424)
!16433 = !DILocation(line: 4599, column: 41, scope: !16424)
!16434 = !DILocation(line: 4599, column: 39, scope: !16424)
!16435 = !DILocation(line: 4599, column: 56, scope: !16424)
!16436 = !DILocation(line: 4599, column: 64, scope: !16424)
!16437 = !DILocation(line: 4599, column: 73, scope: !16424)
!16438 = !DILocation(line: 4599, column: 71, scope: !16424)
!16439 = !DILocation(line: 4599, column: 54, scope: !16424)
!16440 = !DILocation(line: 4599, column: 86, scope: !16424)
!16441 = !DILocation(line: 4599, column: 97, scope: !16424)
!16442 = !DILocation(line: 4599, column: 102, scope: !16424)
!16443 = !DILocation(line: 4599, column: 100, scope: !16424)
!16444 = !DILocation(line: 4599, column: 95, scope: !16424)
!16445 = !DILocation(line: 4599, column: 83, scope: !16424)
!16446 = !DILocation(line: 4599, column: 5, scope: !16424)
!16447 = !DILocation(line: 4599, column: 13, scope: !16424)
!16448 = !DILocation(line: 4599, column: 20, scope: !16424)
!16449 = !DILocation(line: 4600, column: 4, scope: !16424)
!16450 = !DILocation(line: 4604, column: 9, scope: !16451)
!16451 = distinct !DILexicalBlock(scope: !16452, file: !3, line: 4604, column: 9)
!16452 = distinct !DILexicalBlock(scope: !16413, file: !3, line: 4602, column: 9)
!16453 = !DILocation(line: 4604, column: 9, scope: !16452)
!16454 = !DILocation(line: 4605, column: 23, scope: !16451)
!16455 = !DILocation(line: 4605, column: 31, scope: !16451)
!16456 = !DILocation(line: 4605, column: 21, scope: !16451)
!16457 = !DILocation(line: 4605, column: 41, scope: !16451)
!16458 = !DILocation(line: 4605, column: 50, scope: !16451)
!16459 = !DILocation(line: 4605, column: 39, scope: !16451)
!16460 = !DILocation(line: 4605, column: 65, scope: !16451)
!16461 = !DILocation(line: 4605, column: 76, scope: !16451)
!16462 = !DILocation(line: 4605, column: 74, scope: !16451)
!16463 = !DILocation(line: 4605, column: 62, scope: !16451)
!16464 = !DILocation(line: 4605, column: 86, scope: !16451)
!16465 = !DILocation(line: 4605, column: 12, scope: !16451)
!16466 = !DILocation(line: 4605, column: 6, scope: !16451)
!16467 = !DILocation(line: 4608, column: 25, scope: !16452)
!16468 = !DILocation(line: 4608, column: 33, scope: !16452)
!16469 = !DILocation(line: 4608, column: 31, scope: !16452)
!16470 = !DILocation(line: 4608, column: 38, scope: !16452)
!16471 = !DILocation(line: 4608, column: 36, scope: !16452)
!16472 = !DILocation(line: 4608, column: 51, scope: !16452)
!16473 = !DILocation(line: 4608, column: 49, scope: !16452)
!16474 = !DILocation(line: 4608, column: 5, scope: !16452)
!16475 = !DILocation(line: 4608, column: 13, scope: !16452)
!16476 = !DILocation(line: 4608, column: 22, scope: !16452)
!16477 = !DILocation(line: 4610, column: 25, scope: !16452)
!16478 = !DILocation(line: 4610, column: 5, scope: !16452)
!16479 = !DILocation(line: 4610, column: 13, scope: !16452)
!16480 = !DILocation(line: 4610, column: 22, scope: !16452)
!16481 = !DILocation(line: 4612, column: 23, scope: !16452)
!16482 = !DILocation(line: 4612, column: 31, scope: !16452)
!16483 = !DILocation(line: 4612, column: 42, scope: !16452)
!16484 = !DILocation(line: 4612, column: 40, scope: !16452)
!16485 = !DILocation(line: 4612, column: 5, scope: !16452)
!16486 = !DILocation(line: 4612, column: 13, scope: !16452)
!16487 = !DILocation(line: 4612, column: 20, scope: !16452)
!16488 = !DILocation(line: 4615, column: 9, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16452, file: !3, line: 4615, column: 9)
!16490 = !DILocation(line: 4615, column: 24, scope: !16489)
!16491 = !DILocation(line: 4615, column: 27, scope: !16489)
!16492 = !DILocation(line: 4615, column: 9, scope: !16452)
!16493 = !DILocalVariable(name: "max_offset", scope: !16494, file: !3, line: 4616, type: !207)
!16494 = distinct !DILexicalBlock(scope: !16489, file: !3, line: 4615, column: 37)
!16495 = !DILocation(line: 4616, column: 12, scope: !16494)
!16496 = !DILocation(line: 4616, column: 25, scope: !16494)
!16497 = !DILocation(line: 4616, column: 42, scope: !16494)
!16498 = !DILocation(line: 4616, column: 40, scope: !16494)
!16499 = !DILocalVariable(name: "offset", scope: !16494, file: !3, line: 4617, type: !207)
!16500 = !DILocation(line: 4617, column: 12, scope: !16494)
!16501 = !DILocation(line: 4617, column: 22, scope: !16494)
!16502 = !DILocation(line: 4617, column: 21, scope: !16494)
!16503 = !DILocation(line: 4617, column: 33, scope: !16494)
!16504 = !DILocation(line: 4617, column: 46, scope: !16494)
!16505 = !DILocation(line: 4617, column: 44, scope: !16494)
!16506 = !DILocation(line: 4617, column: 55, scope: !16494)
!16507 = !DILocation(line: 4617, column: 63, scope: !16494)
!16508 = !DILocation(line: 4617, column: 53, scope: !16494)
!16509 = !DILocation(line: 4618, column: 10, scope: !16510)
!16510 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 4618, column: 10)
!16511 = !DILocation(line: 4618, column: 19, scope: !16510)
!16512 = !DILocation(line: 4618, column: 17, scope: !16510)
!16513 = !DILocation(line: 4618, column: 10, scope: !16494)
!16514 = !DILocation(line: 4618, column: 49, scope: !16510)
!16515 = !DILocation(line: 4618, column: 58, scope: !16510)
!16516 = !DILocation(line: 4618, column: 56, scope: !16510)
!16517 = !DILocation(line: 4618, column: 31, scope: !16510)
!16518 = !DILocation(line: 4618, column: 39, scope: !16510)
!16519 = !DILocation(line: 4618, column: 46, scope: !16510)
!16520 = !DILocation(line: 4619, column: 10, scope: !16521)
!16521 = distinct !DILexicalBlock(scope: !16494, file: !3, line: 4619, column: 10)
!16522 = !DILocation(line: 4619, column: 20, scope: !16521)
!16523 = !DILocation(line: 4619, column: 19, scope: !16521)
!16524 = !DILocation(line: 4619, column: 17, scope: !16521)
!16525 = !DILocation(line: 4619, column: 10, scope: !16494)
!16526 = !DILocation(line: 4619, column: 50, scope: !16521)
!16527 = !DILocation(line: 4619, column: 59, scope: !16521)
!16528 = !DILocation(line: 4619, column: 57, scope: !16521)
!16529 = !DILocation(line: 4619, column: 32, scope: !16521)
!16530 = !DILocation(line: 4619, column: 40, scope: !16521)
!16531 = !DILocation(line: 4619, column: 47, scope: !16521)
!16532 = !DILocation(line: 4620, column: 5, scope: !16494)
!16533 = !DILocation(line: 4622, column: 3, scope: !16289)
!16534 = !DILocation(line: 4563, column: 53, scope: !16283)
!16535 = !DILocation(line: 4563, column: 3, scope: !16283)
!16536 = distinct !{!16536, !16287, !16537}
!16537 = !DILocation(line: 4622, column: 3, scope: !16280)
!16538 = !DILocation(line: 4623, column: 2, scope: !16272)
!16539 = !DILocation(line: 4555, column: 29, scope: !16267)
!16540 = !DILocation(line: 4555, column: 2, scope: !16267)
!16541 = distinct !{!16541, !16270, !16542}
!16542 = !DILocation(line: 4623, column: 2, scope: !16264)
!16543 = !DILocation(line: 4629, column: 13, scope: !16544)
!16544 = distinct !DILexicalBlock(scope: !16109, file: !3, line: 4629, column: 2)
!16545 = !DILocation(line: 4629, column: 7, scope: !16544)
!16546 = !DILocation(line: 4629, column: 18, scope: !16547)
!16547 = distinct !DILexicalBlock(scope: !16544, file: !3, line: 4629, column: 2)
!16548 = !DILocation(line: 4629, column: 26, scope: !16547)
!16549 = !DILocation(line: 4629, column: 33, scope: !16547)
!16550 = !DILocation(line: 4629, column: 24, scope: !16547)
!16551 = !DILocation(line: 4629, column: 2, scope: !16544)
!16552 = !DILocalVariable(name: "wPoint", scope: !16553, file: !3, line: 4630, type: !234)
!16553 = distinct !DILexicalBlock(scope: !16547, file: !3, line: 4629, column: 56)
!16554 = !DILocation(line: 4630, column: 19, scope: !16553)
!16555 = !DILocation(line: 4630, column: 48, scope: !16553)
!16556 = !DILocation(line: 4630, column: 55, scope: !16553)
!16557 = !DILocation(line: 4630, column: 30, scope: !16553)
!16558 = !DILocation(line: 4630, column: 66, scope: !16553)
!16559 = !DILocation(line: 4630, column: 29, scope: !16553)
!16560 = !DILocation(line: 4632, column: 7, scope: !16561)
!16561 = distinct !DILexicalBlock(scope: !16553, file: !3, line: 4632, column: 7)
!16562 = !DILocation(line: 4632, column: 15, scope: !16561)
!16563 = !DILocation(line: 4632, column: 21, scope: !16561)
!16564 = !DILocation(line: 4632, column: 7, scope: !16553)
!16565 = !DILocation(line: 4633, column: 4, scope: !16566)
!16566 = distinct !DILexicalBlock(scope: !16561, file: !3, line: 4632, column: 42)
!16567 = !DILocation(line: 4633, column: 12, scope: !16566)
!16568 = !DILocation(line: 4633, column: 24, scope: !16566)
!16569 = !DILocation(line: 4634, column: 3, scope: !16566)
!16570 = !DILocation(line: 4635, column: 3, scope: !16553)
!16571 = !DILocation(line: 4635, column: 11, scope: !16553)
!16572 = !DILocation(line: 4635, column: 17, scope: !16553)
!16573 = !DILocation(line: 4636, column: 2, scope: !16553)
!16574 = !DILocation(line: 4629, column: 52, scope: !16547)
!16575 = !DILocation(line: 4629, column: 2, scope: !16547)
!16576 = distinct !{!16576, !16551, !16577}
!16577 = !DILocation(line: 4636, column: 2, scope: !16544)
!16578 = !DILocation(line: 4638, column: 2, scope: !16109)
!16579 = !DILocation(line: 4638, column: 12, scope: !16109)
!16580 = !DILocation(line: 4639, column: 1, scope: !16109)
!16581 = distinct !DISubprogram(name: "dynamicPaint_prepareEffectStep", scope: !3, file: !3, line: 4258, type: !16582, scopeLine: 4259, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!16582 = !DISubroutineType(types: !16583)
!16583 = !{!135, !242, !4204, !3426, !16584, !207}
!16584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!16585 = !DILocalVariable(name: "surface", arg: 1, scope: !16581, file: !3, line: 4258, type: !242)
!16586 = !DILocation(line: 4258, column: 64, scope: !16581)
!16587 = !DILocalVariable(name: "scene", arg: 2, scope: !16581, file: !3, line: 4258, type: !4204)
!16588 = !DILocation(line: 4258, column: 80, scope: !16581)
!16589 = !DILocalVariable(name: "ob", arg: 3, scope: !16581, file: !3, line: 4258, type: !3426)
!16590 = !DILocation(line: 4258, column: 95, scope: !16581)
!16591 = !DILocalVariable(name: "force", arg: 4, scope: !16581, file: !3, line: 4258, type: !16584)
!16592 = !DILocation(line: 4258, column: 107, scope: !16581)
!16593 = !DILocalVariable(name: "timescale", arg: 5, scope: !16581, file: !3, line: 4258, type: !207)
!16594 = !DILocation(line: 4258, column: 120, scope: !16581)
!16595 = !DILocalVariable(name: "average_force", scope: !16581, file: !3, line: 4260, type: !874)
!16596 = !DILocation(line: 4260, column: 9, scope: !16581)
!16597 = !DILocalVariable(name: "shrink_speed", scope: !16581, file: !3, line: 4261, type: !207)
!16598 = !DILocation(line: 4261, column: 8, scope: !16581)
!16599 = !DILocalVariable(name: "spread_speed", scope: !16581, file: !3, line: 4261, type: !207)
!16600 = !DILocation(line: 4261, column: 29, scope: !16581)
!16601 = !DILocalVariable(name: "fastest_effect", scope: !16581, file: !3, line: 4262, type: !207)
!16602 = !DILocation(line: 4262, column: 8, scope: !16581)
!16603 = !DILocalVariable(name: "avg_dist", scope: !16581, file: !3, line: 4262, type: !207)
!16604 = !DILocation(line: 4262, column: 24, scope: !16581)
!16605 = !DILocalVariable(name: "steps", scope: !16581, file: !3, line: 4263, type: !135)
!16606 = !DILocation(line: 4263, column: 6, scope: !16581)
!16607 = !DILocalVariable(name: "sData", scope: !16581, file: !3, line: 4264, type: !3906)
!16608 = !DILocation(line: 4264, column: 20, scope: !16581)
!16609 = !DILocation(line: 4264, column: 28, scope: !16581)
!16610 = !DILocation(line: 4264, column: 37, scope: !16581)
!16611 = !DILocalVariable(name: "bData", scope: !16581, file: !3, line: 4265, type: !4026)
!16612 = !DILocation(line: 4265, column: 17, scope: !16581)
!16613 = !DILocation(line: 4265, column: 25, scope: !16581)
!16614 = !DILocation(line: 4265, column: 32, scope: !16581)
!16615 = !DILocalVariable(name: "realCoord", scope: !16581, file: !3, line: 4266, type: !201)
!16616 = !DILocation(line: 4266, column: 9, scope: !16581)
!16617 = !DILocation(line: 4266, column: 21, scope: !16581)
!16618 = !DILocation(line: 4266, column: 28, scope: !16581)
!16619 = !DILocalVariable(name: "index", scope: !16581, file: !3, line: 4267, type: !135)
!16620 = !DILocation(line: 4267, column: 6, scope: !16581)
!16621 = !DILocation(line: 4270, column: 6, scope: !16622)
!16622 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 4270, column: 6)
!16623 = !DILocation(line: 4270, column: 15, scope: !16622)
!16624 = !DILocation(line: 4270, column: 22, scope: !16622)
!16625 = !DILocation(line: 4270, column: 6, scope: !16581)
!16626 = !DILocalVariable(name: "vel", scope: !16627, file: !3, line: 4271, type: !206)
!16627 = distinct !DILexicalBlock(scope: !16622, file: !3, line: 4270, column: 51)
!16628 = !DILocation(line: 4271, column: 9, scope: !16627)
!16629 = !DILocalVariable(name: "effectors", scope: !16627, file: !3, line: 4272, type: !2444)
!16630 = !DILocation(line: 4272, column: 13, scope: !16627)
!16631 = !DILocation(line: 4272, column: 41, scope: !16627)
!16632 = !DILocation(line: 4272, column: 48, scope: !16627)
!16633 = !DILocation(line: 4272, column: 58, scope: !16627)
!16634 = !DILocation(line: 4272, column: 67, scope: !16627)
!16635 = !DILocation(line: 4272, column: 25, scope: !16627)
!16636 = !DILocation(line: 4275, column: 12, scope: !16627)
!16637 = !DILocation(line: 4275, column: 24, scope: !16627)
!16638 = !DILocation(line: 4275, column: 31, scope: !16627)
!16639 = !DILocation(line: 4275, column: 44, scope: !16627)
!16640 = !DILocation(line: 4275, column: 48, scope: !16627)
!16641 = !DILocation(line: 4275, column: 4, scope: !16627)
!16642 = !DILocation(line: 4275, column: 10, scope: !16627)
!16643 = !DILocation(line: 4277, column: 8, scope: !16644)
!16644 = distinct !DILexicalBlock(scope: !16627, file: !3, line: 4277, column: 7)
!16645 = !DILocation(line: 4277, column: 7, scope: !16644)
!16646 = !DILocation(line: 4277, column: 7, scope: !16627)
!16647 = !DILocation(line: 4281, column: 15, scope: !16648)
!16648 = distinct !DILexicalBlock(scope: !16649, file: !3, line: 4281, column: 4)
!16649 = distinct !DILexicalBlock(scope: !16644, file: !3, line: 4277, column: 15)
!16650 = !DILocation(line: 4281, column: 9, scope: !16648)
!16651 = !DILocation(line: 4281, column: 20, scope: !16652)
!16652 = distinct !DILexicalBlock(scope: !16648, file: !3, line: 4281, column: 4)
!16653 = !DILocation(line: 4281, column: 28, scope: !16652)
!16654 = !DILocation(line: 4281, column: 35, scope: !16652)
!16655 = !DILocation(line: 4281, column: 26, scope: !16652)
!16656 = !DILocation(line: 4281, column: 4, scope: !16648)
!16657 = !DILocalVariable(name: "forc", scope: !16658, file: !3, line: 4282, type: !206)
!16658 = distinct !DILexicalBlock(scope: !16652, file: !3, line: 4281, column: 58)
!16659 = !DILocation(line: 4282, column: 11, scope: !16658)
!16660 = !DILocation(line: 4285, column: 9, scope: !16661)
!16661 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4285, column: 9)
!16662 = !DILocation(line: 4285, column: 9, scope: !16658)
!16663 = !DILocalVariable(name: "epoint", scope: !16664, file: !3, line: 4286, type: !16665)
!16664 = distinct !DILexicalBlock(scope: !16661, file: !3, line: 4285, column: 20)
!16665 = !DIDerivedType(tag: DW_TAG_typedef, name: "EffectedPoint", file: !1329, line: 67, baseType: !16666)
!16666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EffectedPoint", file: !1329, line: 52, size: 512, elements: !16667)
!16667 = !{!16668, !16669, !16670, !16671, !16672, !16673, !16674, !16675, !16676, !16677, !16678}
!16668 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !16666, file: !1329, line: 53, baseType: !233, size: 64)
!16669 = !DIDerivedType(tag: DW_TAG_member, name: "vel", scope: !16666, file: !1329, line: 54, baseType: !233, size: 64, offset: 64)
!16670 = !DIDerivedType(tag: DW_TAG_member, name: "ave", scope: !16666, file: !1329, line: 55, baseType: !233, size: 64, offset: 128)
!16671 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !16666, file: !1329, line: 56, baseType: !233, size: 64, offset: 192)
!16672 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_frame", scope: !16666, file: !1329, line: 57, baseType: !207, size: 32, offset: 256)
!16673 = !DIDerivedType(tag: DW_TAG_member, name: "vel_to_sec", scope: !16666, file: !1329, line: 58, baseType: !207, size: 32, offset: 288)
!16674 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !16666, file: !1329, line: 61, baseType: !207, size: 32, offset: 320)
!16675 = !DIDerivedType(tag: DW_TAG_member, name: "charge", scope: !16666, file: !1329, line: 61, baseType: !207, size: 32, offset: 352)
!16676 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !16666, file: !1329, line: 63, baseType: !7, size: 32, offset: 384)
!16677 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !16666, file: !1329, line: 64, baseType: !135, size: 32, offset: 416)
!16678 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !16666, file: !1329, line: 66, baseType: !1678, size: 64, offset: 448)
!16679 = !DILocation(line: 4286, column: 20, scope: !16664)
!16680 = !DILocation(line: 4287, column: 24, scope: !16664)
!16681 = !DILocation(line: 4287, column: 31, scope: !16664)
!16682 = !DILocation(line: 4287, column: 41, scope: !16664)
!16683 = !DILocation(line: 4287, column: 48, scope: !16664)
!16684 = !DILocation(line: 4287, column: 54, scope: !16664)
!16685 = !DILocation(line: 4287, column: 62, scope: !16664)
!16686 = !DILocation(line: 4287, column: 65, scope: !16664)
!16687 = !DILocation(line: 4287, column: 70, scope: !16664)
!16688 = !DILocation(line: 4287, column: 6, scope: !16664)
!16689 = !DILocation(line: 4288, column: 13, scope: !16664)
!16690 = !DILocation(line: 4288, column: 24, scope: !16664)
!16691 = !DILocation(line: 4289, column: 20, scope: !16664)
!16692 = !DILocation(line: 4289, column: 37, scope: !16664)
!16693 = !DILocation(line: 4289, column: 46, scope: !16664)
!16694 = !DILocation(line: 4289, column: 73, scope: !16664)
!16695 = !DILocation(line: 4289, column: 6, scope: !16664)
!16696 = !DILocation(line: 4290, column: 5, scope: !16664)
!16697 = !DILocation(line: 4293, column: 9, scope: !16698)
!16698 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4293, column: 9)
!16699 = !DILocation(line: 4293, column: 16, scope: !16698)
!16700 = !DILocation(line: 4293, column: 33, scope: !16698)
!16701 = !DILocation(line: 4293, column: 38, scope: !16698)
!16702 = !DILocation(line: 4293, column: 9, scope: !16658)
!16703 = !DILocation(line: 4296, column: 19, scope: !16698)
!16704 = !DILocation(line: 4296, column: 25, scope: !16698)
!16705 = !DILocation(line: 4296, column: 32, scope: !16698)
!16706 = !DILocation(line: 4296, column: 49, scope: !16698)
!16707 = !DILocation(line: 4297, column: 19, scope: !16698)
!16708 = !DILocation(line: 4297, column: 28, scope: !16698)
!16709 = !DILocation(line: 4297, column: 46, scope: !16698)
!16710 = !DILocation(line: 4297, column: 63, scope: !16698)
!16711 = !DILocation(line: 4297, column: 72, scope: !16698)
!16712 = !DILocation(line: 4297, column: 90, scope: !16698)
!16713 = !DILocation(line: 4297, column: 61, scope: !16698)
!16714 = !DILocation(line: 4297, column: 100, scope: !16698)
!16715 = !DILocation(line: 4296, column: 6, scope: !16698)
!16716 = !DILocation(line: 4300, column: 9, scope: !16717)
!16717 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4300, column: 9)
!16718 = !DILocation(line: 4300, column: 16, scope: !16717)
!16719 = !DILocation(line: 4300, column: 9, scope: !16658)
!16720 = !DILocation(line: 4301, column: 10, scope: !16721)
!16721 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 4301, column: 10)
!16722 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 4300, column: 26)
!16723 = !DILocation(line: 4301, column: 19, scope: !16721)
!16724 = !DILocation(line: 4301, column: 10, scope: !16722)
!16725 = !DILocation(line: 4302, column: 20, scope: !16721)
!16726 = !DILocation(line: 4302, column: 26, scope: !16721)
!16727 = !DILocation(line: 4302, column: 33, scope: !16721)
!16728 = !DILocation(line: 4302, column: 42, scope: !16721)
!16729 = !DILocation(line: 4302, column: 49, scope: !16721)
!16730 = !DILocation(line: 4302, column: 52, scope: !16721)
!16731 = !DILocation(line: 4302, column: 61, scope: !16721)
!16732 = !DILocation(line: 4302, column: 70, scope: !16721)
!16733 = !DILocation(line: 4302, column: 7, scope: !16721)
!16734 = !DILocation(line: 4305, column: 10, scope: !16735)
!16735 = distinct !DILexicalBlock(scope: !16722, file: !3, line: 4305, column: 10)
!16736 = !DILocation(line: 4305, column: 17, scope: !16735)
!16737 = !DILocation(line: 4305, column: 31, scope: !16735)
!16738 = !DILocation(line: 4305, column: 34, scope: !16735)
!16739 = !DILocation(line: 4305, column: 43, scope: !16735)
!16740 = !DILocation(line: 4305, column: 10, scope: !16722)
!16741 = !DILocalVariable(name: "acc", scope: !16742, file: !3, line: 4306, type: !206)
!16742 = distinct !DILexicalBlock(scope: !16735, file: !3, line: 4305, column: 53)
!16743 = !DILocation(line: 4306, column: 13, scope: !16742)
!16744 = !DILocation(line: 4307, column: 18, scope: !16742)
!16745 = !DILocation(line: 4307, column: 23, scope: !16742)
!16746 = !DILocation(line: 4307, column: 30, scope: !16742)
!16747 = !DILocation(line: 4307, column: 39, scope: !16742)
!16748 = !DILocation(line: 4307, column: 46, scope: !16742)
!16749 = !DILocation(line: 4307, column: 7, scope: !16742)
!16750 = !DILocation(line: 4308, column: 17, scope: !16742)
!16751 = !DILocation(line: 4308, column: 22, scope: !16742)
!16752 = !DILocation(line: 4308, column: 29, scope: !16742)
!16753 = !DILocation(line: 4308, column: 43, scope: !16742)
!16754 = !DILocation(line: 4308, column: 50, scope: !16742)
!16755 = !DILocation(line: 4308, column: 7, scope: !16742)
!16756 = !DILocation(line: 4309, column: 20, scope: !16742)
!16757 = !DILocation(line: 4309, column: 26, scope: !16742)
!16758 = !DILocation(line: 4309, column: 31, scope: !16742)
!16759 = !DILocation(line: 4309, column: 40, scope: !16742)
!16760 = !DILocation(line: 4309, column: 49, scope: !16742)
!16761 = !DILocation(line: 4309, column: 7, scope: !16742)
!16762 = !DILocation(line: 4310, column: 6, scope: !16742)
!16763 = !DILocation(line: 4311, column: 5, scope: !16722)
!16764 = !DILocation(line: 4314, column: 38, scope: !16658)
!16765 = !DILocation(line: 4314, column: 31, scope: !16658)
!16766 = !DILocation(line: 4314, column: 7, scope: !16658)
!16767 = !DILocation(line: 4314, column: 6, scope: !16658)
!16768 = !DILocation(line: 4314, column: 14, scope: !16658)
!16769 = !DILocation(line: 4314, column: 20, scope: !16658)
!16770 = !DILocation(line: 4314, column: 24, scope: !16658)
!16771 = !DILocation(line: 4314, column: 5, scope: !16658)
!16772 = !DILocation(line: 4314, column: 29, scope: !16658)
!16773 = !DILocation(line: 4316, column: 11, scope: !16774)
!16774 = distinct !DILexicalBlock(scope: !16658, file: !3, line: 4316, column: 9)
!16775 = !DILocation(line: 4316, column: 10, scope: !16774)
!16776 = !DILocation(line: 4316, column: 18, scope: !16774)
!16777 = !DILocation(line: 4316, column: 24, scope: !16774)
!16778 = !DILocation(line: 4316, column: 28, scope: !16774)
!16779 = !DILocation(line: 4316, column: 9, scope: !16774)
!16780 = !DILocation(line: 4316, column: 9, scope: !16658)
!16781 = !DILocation(line: 4316, column: 44, scope: !16774)
!16782 = !DILocation(line: 4316, column: 59, scope: !16774)
!16783 = !DILocation(line: 4316, column: 58, scope: !16774)
!16784 = !DILocation(line: 4316, column: 66, scope: !16774)
!16785 = !DILocation(line: 4316, column: 72, scope: !16774)
!16786 = !DILocation(line: 4316, column: 76, scope: !16774)
!16787 = !DILocation(line: 4316, column: 57, scope: !16774)
!16788 = !DILocation(line: 4316, column: 55, scope: !16774)
!16789 = !DILocation(line: 4316, column: 34, scope: !16774)
!16790 = !DILocation(line: 4317, column: 20, scope: !16658)
!16791 = !DILocation(line: 4317, column: 19, scope: !16658)
!16792 = !DILocation(line: 4317, column: 27, scope: !16658)
!16793 = !DILocation(line: 4317, column: 33, scope: !16658)
!16794 = !DILocation(line: 4317, column: 18, scope: !16658)
!16795 = !DILocation(line: 4317, column: 40, scope: !16658)
!16796 = !DILocation(line: 4317, column: 5, scope: !16658)
!16797 = !DILocation(line: 4318, column: 4, scope: !16658)
!16798 = !DILocation(line: 4281, column: 54, scope: !16652)
!16799 = !DILocation(line: 4281, column: 4, scope: !16652)
!16800 = distinct !{!16800, !16656, !16801}
!16801 = !DILocation(line: 4318, column: 4, scope: !16648)
!16802 = !DILocation(line: 4321, column: 15, scope: !16803)
!16803 = distinct !DILexicalBlock(scope: !16649, file: !3, line: 4321, column: 4)
!16804 = !DILocation(line: 4321, column: 9, scope: !16803)
!16805 = !DILocation(line: 4321, column: 20, scope: !16806)
!16806 = distinct !DILexicalBlock(scope: !16803, file: !3, line: 4321, column: 4)
!16807 = !DILocation(line: 4321, column: 28, scope: !16806)
!16808 = !DILocation(line: 4321, column: 35, scope: !16806)
!16809 = !DILocation(line: 4321, column: 26, scope: !16806)
!16810 = !DILocation(line: 4321, column: 4, scope: !16803)
!16811 = !DILocation(line: 4322, column: 24, scope: !16812)
!16812 = distinct !DILexicalBlock(scope: !16806, file: !3, line: 4321, column: 58)
!16813 = !DILocation(line: 4322, column: 23, scope: !16812)
!16814 = !DILocation(line: 4322, column: 31, scope: !16812)
!16815 = !DILocation(line: 4322, column: 37, scope: !16812)
!16816 = !DILocation(line: 4322, column: 41, scope: !16812)
!16817 = !DILocation(line: 4322, column: 22, scope: !16812)
!16818 = !DILocation(line: 4322, column: 19, scope: !16812)
!16819 = !DILocation(line: 4323, column: 4, scope: !16812)
!16820 = !DILocation(line: 4321, column: 54, scope: !16806)
!16821 = !DILocation(line: 4321, column: 4, scope: !16806)
!16822 = distinct !{!16822, !16810, !16823}
!16823 = !DILocation(line: 4323, column: 4, scope: !16803)
!16824 = !DILocation(line: 4324, column: 21, scope: !16649)
!16825 = !DILocation(line: 4324, column: 28, scope: !16649)
!16826 = !DILocation(line: 4324, column: 18, scope: !16649)
!16827 = !DILocation(line: 4325, column: 3, scope: !16649)
!16828 = !DILocation(line: 4326, column: 3, scope: !16627)
!16829 = !DILocation(line: 4327, column: 2, scope: !16627)
!16830 = !DILocation(line: 4333, column: 6, scope: !16831)
!16831 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 4333, column: 6)
!16832 = !DILocation(line: 4333, column: 15, scope: !16831)
!16833 = !DILocation(line: 4333, column: 22, scope: !16831)
!16834 = !DILocation(line: 4333, column: 6, scope: !16581)
!16835 = !DILocation(line: 4334, column: 18, scope: !16831)
!16836 = !DILocation(line: 4334, column: 27, scope: !16831)
!16837 = !DILocation(line: 4334, column: 16, scope: !16831)
!16838 = !DILocation(line: 4334, column: 3, scope: !16831)
!16839 = !DILocation(line: 4335, column: 6, scope: !16840)
!16840 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 4335, column: 6)
!16841 = !DILocation(line: 4335, column: 15, scope: !16840)
!16842 = !DILocation(line: 4335, column: 22, scope: !16840)
!16843 = !DILocation(line: 4335, column: 6, scope: !16581)
!16844 = !DILocation(line: 4336, column: 18, scope: !16840)
!16845 = !DILocation(line: 4336, column: 27, scope: !16840)
!16846 = !DILocation(line: 4336, column: 16, scope: !16840)
!16847 = !DILocation(line: 4336, column: 3, scope: !16840)
!16848 = !DILocation(line: 4338, column: 27, scope: !16581)
!16849 = !DILocation(line: 4338, column: 41, scope: !16581)
!16850 = !DILocation(line: 4338, column: 55, scope: !16581)
!16851 = !DILocation(line: 4338, column: 19, scope: !16581)
!16852 = !DILocation(line: 4338, column: 17, scope: !16581)
!16853 = !DILocation(line: 4339, column: 13, scope: !16581)
!16854 = !DILocation(line: 4339, column: 20, scope: !16581)
!16855 = !DILocation(line: 4339, column: 33, scope: !16581)
!16856 = !DILocation(line: 4339, column: 73, scope: !16581)
!16857 = !DILocation(line: 4339, column: 53, scope: !16581)
!16858 = !DILocation(line: 4339, column: 51, scope: !16581)
!16859 = !DILocation(line: 4339, column: 11, scope: !16581)
!16860 = !DILocation(line: 4341, column: 52, scope: !16581)
!16861 = !DILocation(line: 4341, column: 50, scope: !16581)
!16862 = !DILocation(line: 4341, column: 69, scope: !16581)
!16863 = !DILocation(line: 4341, column: 67, scope: !16581)
!16864 = !DILocation(line: 4341, column: 80, scope: !16581)
!16865 = !DILocation(line: 4341, column: 78, scope: !16581)
!16866 = !DILocation(line: 4341, column: 20, scope: !16581)
!16867 = !DILocation(line: 4341, column: 15, scope: !16581)
!16868 = !DILocation(line: 4341, column: 10, scope: !16581)
!16869 = !DILocation(line: 4341, column: 8, scope: !16581)
!16870 = !DILocation(line: 4342, column: 2, scope: !16871)
!16871 = distinct !DILexicalBlock(scope: !16872, file: !3, line: 4342, column: 2)
!16872 = distinct !DILexicalBlock(scope: !16581, file: !3, line: 4342, column: 2)
!16873 = !DILocation(line: 4342, column: 2, scope: !16872)
!16874 = !DILocation(line: 4342, column: 2, scope: !16875)
!16875 = distinct !DILexicalBlock(scope: !16871, file: !3, line: 4342, column: 2)
!16876 = !DILocation(line: 4344, column: 9, scope: !16581)
!16877 = !DILocation(line: 4344, column: 2, scope: !16581)
!16878 = distinct !DISubprogram(name: "dynamicPaint_doEffectStep", scope: !3, file: !3, line: 4350, type: !16879, scopeLine: 4351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!16879 = !DISubroutineType(types: !16880)
!16880 = !{null, !242, !233, !222, !207, !207}
!16881 = !DILocalVariable(name: "surface", arg: 1, scope: !16878, file: !3, line: 4350, type: !242)
!16882 = !DILocation(line: 4350, column: 60, scope: !16878)
!16883 = !DILocalVariable(name: "force", arg: 2, scope: !16878, file: !3, line: 4350, type: !233)
!16884 = !DILocation(line: 4350, column: 76, scope: !16878)
!16885 = !DILocalVariable(name: "prevPoint", arg: 3, scope: !16878, file: !3, line: 4350, type: !222)
!16886 = !DILocation(line: 4350, column: 95, scope: !16878)
!16887 = !DILocalVariable(name: "timescale", arg: 4, scope: !16878, file: !3, line: 4350, type: !207)
!16888 = !DILocation(line: 4350, column: 112, scope: !16878)
!16889 = !DILocalVariable(name: "steps", arg: 5, scope: !16878, file: !3, line: 4350, type: !207)
!16890 = !DILocation(line: 4350, column: 129, scope: !16878)
!16891 = !DILocalVariable(name: "sData", scope: !16878, file: !3, line: 4352, type: !3906)
!16892 = !DILocation(line: 4352, column: 20, scope: !16878)
!16893 = !DILocation(line: 4352, column: 28, scope: !16878)
!16894 = !DILocation(line: 4352, column: 37, scope: !16878)
!16895 = !DILocalVariable(name: "bNeighs", scope: !16878, file: !3, line: 4353, type: !3167)
!16896 = !DILocation(line: 4353, column: 16, scope: !16878)
!16897 = !DILocation(line: 4353, column: 26, scope: !16878)
!16898 = !DILocation(line: 4353, column: 33, scope: !16878)
!16899 = !DILocation(line: 4353, column: 40, scope: !16878)
!16900 = !DILocalVariable(name: "distance_scale", scope: !16878, file: !3, line: 4354, type: !207)
!16901 = !DILocation(line: 4354, column: 8, scope: !16878)
!16902 = !DILocation(line: 4354, column: 45, scope: !16878)
!16903 = !DILocation(line: 4354, column: 25, scope: !16878)
!16904 = !DILocation(line: 4354, column: 52, scope: !16878)
!16905 = !DILocalVariable(name: "index", scope: !16878, file: !3, line: 4355, type: !135)
!16906 = !DILocation(line: 4355, column: 6, scope: !16878)
!16907 = !DILocation(line: 4356, column: 15, scope: !16878)
!16908 = !DILocation(line: 4356, column: 12, scope: !16878)
!16909 = !DILocation(line: 4358, column: 7, scope: !16910)
!16910 = distinct !DILexicalBlock(scope: !16878, file: !3, line: 4358, column: 6)
!16911 = !DILocation(line: 4358, column: 14, scope: !16910)
!16912 = !DILocation(line: 4358, column: 6, scope: !16878)
!16913 = !DILocation(line: 4358, column: 24, scope: !16910)
!16914 = !DILocation(line: 4363, column: 6, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16878, file: !3, line: 4363, column: 6)
!16916 = !DILocation(line: 4363, column: 15, scope: !16915)
!16917 = !DILocation(line: 4363, column: 22, scope: !16915)
!16918 = !DILocation(line: 4363, column: 6, scope: !16878)
!16919 = !DILocalVariable(name: "eff_scale", scope: !16920, file: !3, line: 4364, type: !207)
!16920 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 4363, column: 53)
!16921 = !DILocation(line: 4364, column: 9, scope: !16920)
!16922 = !DILocation(line: 4364, column: 21, scope: !16920)
!16923 = !DILocation(line: 4364, column: 36, scope: !16920)
!16924 = !DILocation(line: 4364, column: 63, scope: !16920)
!16925 = !DILocation(line: 4364, column: 72, scope: !16920)
!16926 = !DILocation(line: 4364, column: 61, scope: !16920)
!16927 = !DILocation(line: 4364, column: 87, scope: !16920)
!16928 = !DILocation(line: 4364, column: 85, scope: !16920)
!16929 = !DILocation(line: 4367, column: 10, scope: !16920)
!16930 = !DILocation(line: 4367, column: 3, scope: !16920)
!16931 = !DILocation(line: 4367, column: 21, scope: !16920)
!16932 = !DILocation(line: 4367, column: 28, scope: !16920)
!16933 = !DILocation(line: 4367, column: 39, scope: !16920)
!16934 = !DILocation(line: 4367, column: 46, scope: !16920)
!16935 = !DILocation(line: 4367, column: 59, scope: !16920)
!16936 = !DILocation(line: 4372, column: 14, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16920, file: !3, line: 4372, column: 3)
!16938 = !DILocation(line: 4372, column: 8, scope: !16937)
!16939 = !DILocation(line: 4372, column: 19, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16937, file: !3, line: 4372, column: 3)
!16941 = !DILocation(line: 4372, column: 27, scope: !16940)
!16942 = !DILocation(line: 4372, column: 34, scope: !16940)
!16943 = !DILocation(line: 4372, column: 25, scope: !16940)
!16944 = !DILocation(line: 4372, column: 3, scope: !16937)
!16945 = !DILocalVariable(name: "i", scope: !16946, file: !3, line: 4373, type: !135)
!16946 = distinct !DILexicalBlock(scope: !16940, file: !3, line: 4372, column: 57)
!16947 = !DILocation(line: 4373, column: 8, scope: !16946)
!16948 = !DILocalVariable(name: "numOfNeighs", scope: !16946, file: !3, line: 4374, type: !135)
!16949 = !DILocation(line: 4374, column: 8, scope: !16946)
!16950 = !DILocation(line: 4374, column: 22, scope: !16946)
!16951 = !DILocation(line: 4374, column: 29, scope: !16946)
!16952 = !DILocation(line: 4374, column: 39, scope: !16946)
!16953 = !DILocation(line: 4374, column: 45, scope: !16946)
!16954 = !DILocalVariable(name: "pPoint", scope: !16946, file: !3, line: 4375, type: !222)
!16955 = !DILocation(line: 4375, column: 16, scope: !16946)
!16956 = !DILocation(line: 4375, column: 41, scope: !16946)
!16957 = !DILocation(line: 4375, column: 48, scope: !16946)
!16958 = !DILocation(line: 4375, column: 27, scope: !16946)
!16959 = !DILocation(line: 4375, column: 59, scope: !16946)
!16960 = !DILocation(line: 4375, column: 26, scope: !16946)
!16961 = !DILocation(line: 4381, column: 11, scope: !16962)
!16962 = distinct !DILexicalBlock(scope: !16946, file: !3, line: 4381, column: 4)
!16963 = !DILocation(line: 4381, column: 9, scope: !16962)
!16964 = !DILocation(line: 4381, column: 16, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16962, file: !3, line: 4381, column: 4)
!16966 = !DILocation(line: 4381, column: 20, scope: !16965)
!16967 = !DILocation(line: 4381, column: 18, scope: !16965)
!16968 = !DILocation(line: 4381, column: 4, scope: !16962)
!16969 = !DILocalVariable(name: "n_index", scope: !16970, file: !3, line: 4382, type: !135)
!16970 = distinct !DILexicalBlock(scope: !16965, file: !3, line: 4381, column: 38)
!16971 = !DILocation(line: 4382, column: 9, scope: !16970)
!16972 = !DILocation(line: 4382, column: 19, scope: !16970)
!16973 = !DILocation(line: 4382, column: 26, scope: !16970)
!16974 = !DILocation(line: 4382, column: 36, scope: !16970)
!16975 = !DILocation(line: 4382, column: 44, scope: !16970)
!16976 = !DILocation(line: 4382, column: 53, scope: !16970)
!16977 = !DILocation(line: 4382, column: 51, scope: !16970)
!16978 = !DILocalVariable(name: "w_factor", scope: !16970, file: !3, line: 4383, type: !207)
!16979 = !DILocation(line: 4383, column: 11, scope: !16970)
!16980 = !DILocalVariable(name: "ePoint", scope: !16970, file: !3, line: 4384, type: !222)
!16981 = !DILocation(line: 4384, column: 17, scope: !16970)
!16982 = !DILocation(line: 4384, column: 27, scope: !16970)
!16983 = !DILocation(line: 4384, column: 37, scope: !16970)
!16984 = !DILocation(line: 4384, column: 44, scope: !16970)
!16985 = !DILocation(line: 4384, column: 54, scope: !16970)
!16986 = !DILocation(line: 4384, column: 63, scope: !16970)
!16987 = !DILocalVariable(name: "speed_scale", scope: !16970, file: !3, line: 4385, type: !207)
!16988 = !DILocation(line: 4385, column: 11, scope: !16970)
!16989 = !DILocation(line: 4385, column: 26, scope: !16970)
!16990 = !DILocation(line: 4385, column: 34, scope: !16970)
!16991 = !DILocation(line: 4385, column: 43, scope: !16970)
!16992 = !DILocation(line: 4385, column: 50, scope: !16970)
!16993 = !DILocation(line: 4385, column: 48, scope: !16970)
!16994 = !DILocation(line: 4385, column: 25, scope: !16970)
!16995 = !DILocation(line: 4385, column: 70, scope: !16970)
!16996 = !DILocation(line: 4385, column: 82, scope: !16970)
!16997 = !DILocation(line: 4385, column: 90, scope: !16970)
!16998 = !DILocation(line: 4385, column: 99, scope: !16970)
!16999 = !DILocation(line: 4385, column: 80, scope: !16970)
!17000 = !DILocalVariable(name: "color_mix", scope: !16970, file: !3, line: 4386, type: !207)
!17001 = !DILocation(line: 4386, column: 11, scope: !16970)
!17002 = !DILocation(line: 4386, column: 24, scope: !16970)
!17003 = !DILocation(line: 4386, column: 70, scope: !16970)
!17004 = !DILocation(line: 4386, column: 80, scope: !16970)
!17005 = !DILocation(line: 4386, column: 89, scope: !16970)
!17006 = !DILocation(line: 4386, column: 78, scope: !16970)
!17007 = !DILocation(line: 4389, column: 9, scope: !17008)
!17008 = distinct !DILexicalBlock(scope: !16970, file: !3, line: 4389, column: 9)
!17009 = !DILocation(line: 4389, column: 9, scope: !16970)
!17010 = !DILocation(line: 4389, column: 30, scope: !17008)
!17011 = !DILocation(line: 4389, column: 38, scope: !17008)
!17012 = !DILocation(line: 4389, column: 47, scope: !17008)
!17013 = !DILocation(line: 4389, column: 55, scope: !17008)
!17014 = !DILocation(line: 4389, column: 64, scope: !17008)
!17015 = !DILocation(line: 4389, column: 72, scope: !17008)
!17016 = !DILocation(line: 4389, column: 81, scope: !17008)
!17017 = !DILocation(line: 4389, column: 89, scope: !17008)
!17018 = !DILocation(line: 4389, column: 98, scope: !17008)
!17019 = !DILocation(line: 4389, column: 20, scope: !17008)
!17020 = !DILocation(line: 4392, column: 9, scope: !17021)
!17021 = distinct !DILexicalBlock(scope: !16970, file: !3, line: 4392, column: 9)
!17022 = !DILocation(line: 4392, column: 17, scope: !17021)
!17023 = !DILocation(line: 4392, column: 27, scope: !17021)
!17024 = !DILocation(line: 4392, column: 35, scope: !17021)
!17025 = !DILocation(line: 4392, column: 25, scope: !17021)
!17026 = !DILocation(line: 4392, column: 43, scope: !17021)
!17027 = !DILocation(line: 4392, column: 46, scope: !17021)
!17028 = !DILocation(line: 4392, column: 54, scope: !17021)
!17029 = !DILocation(line: 4392, column: 62, scope: !17021)
!17030 = !DILocation(line: 4392, column: 9, scope: !16970)
!17031 = !DILocation(line: 4392, column: 77, scope: !17021)
!17032 = !DILocation(line: 4394, column: 23, scope: !16970)
!17033 = !DILocation(line: 4394, column: 21, scope: !16970)
!17034 = !DILocation(line: 4394, column: 37, scope: !16970)
!17035 = !DILocation(line: 4394, column: 35, scope: !16970)
!17036 = !DILocation(line: 4394, column: 67, scope: !16970)
!17037 = !DILocation(line: 4394, column: 65, scope: !16970)
!17038 = !DILocation(line: 4394, column: 14, scope: !16970)
!17039 = !DILocation(line: 4395, column: 5, scope: !17040)
!17040 = distinct !DILexicalBlock(scope: !17041, file: !3, line: 4395, column: 5)
!17041 = distinct !DILexicalBlock(scope: !16970, file: !3, line: 4395, column: 5)
!17042 = !DILocation(line: 4395, column: 5, scope: !17041)
!17043 = !DILocation(line: 4395, column: 5, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !17040, file: !3, line: 4395, column: 5)
!17045 = !DILocation(line: 4398, column: 31, scope: !16970)
!17046 = !DILocation(line: 4398, column: 29, scope: !16970)
!17047 = !DILocation(line: 4398, column: 43, scope: !16970)
!17048 = !DILocation(line: 4398, column: 51, scope: !16970)
!17049 = !DILocation(line: 4398, column: 41, scope: !16970)
!17050 = !DILocation(line: 4398, column: 61, scope: !16970)
!17051 = !DILocation(line: 4398, column: 72, scope: !16970)
!17052 = !DILocation(line: 4398, column: 80, scope: !16970)
!17053 = !DILocation(line: 4398, column: 70, scope: !16970)
!17054 = !DILocation(line: 4398, column: 59, scope: !16970)
!17055 = !DILocation(line: 4398, column: 5, scope: !16970)
!17056 = !DILocation(line: 4398, column: 13, scope: !16970)
!17057 = !DILocation(line: 4398, column: 21, scope: !16970)
!17058 = !DILocation(line: 4399, column: 33, scope: !16970)
!17059 = !DILocation(line: 4399, column: 41, scope: !16970)
!17060 = !DILocation(line: 4399, column: 50, scope: !16970)
!17061 = !DILocation(line: 4399, column: 58, scope: !16970)
!17062 = !DILocation(line: 4399, column: 67, scope: !16970)
!17063 = !DILocation(line: 4399, column: 75, scope: !16970)
!17064 = !DILocation(line: 4399, column: 84, scope: !16970)
!17065 = !DILocation(line: 4399, column: 92, scope: !16970)
!17066 = !DILocation(line: 4399, column: 101, scope: !16970)
!17067 = !DILocation(line: 4399, column: 23, scope: !16970)
!17068 = !DILocation(line: 4399, column: 5, scope: !16970)
!17069 = !DILocation(line: 4399, column: 13, scope: !16970)
!17070 = !DILocation(line: 4399, column: 21, scope: !16970)
!17071 = !DILocation(line: 4400, column: 4, scope: !16970)
!17072 = !DILocation(line: 4381, column: 34, scope: !16965)
!17073 = !DILocation(line: 4381, column: 4, scope: !16965)
!17074 = distinct !{!17074, !16968, !17075}
!17075 = !DILocation(line: 4400, column: 4, scope: !16962)
!17076 = !DILocation(line: 4401, column: 3, scope: !16946)
!17077 = !DILocation(line: 4372, column: 53, scope: !16940)
!17078 = !DILocation(line: 4372, column: 3, scope: !16940)
!17079 = distinct !{!17079, !16944, !17080}
!17080 = !DILocation(line: 4401, column: 3, scope: !16937)
!17081 = !DILocation(line: 4402, column: 2, scope: !16920)
!17082 = !DILocation(line: 4407, column: 6, scope: !17083)
!17083 = distinct !DILexicalBlock(scope: !16878, file: !3, line: 4407, column: 6)
!17084 = !DILocation(line: 4407, column: 15, scope: !17083)
!17085 = !DILocation(line: 4407, column: 22, scope: !17083)
!17086 = !DILocation(line: 4407, column: 6, scope: !16878)
!17087 = !DILocalVariable(name: "eff_scale", scope: !17088, file: !3, line: 4408, type: !207)
!17088 = distinct !DILexicalBlock(scope: !17083, file: !3, line: 4407, column: 53)
!17089 = !DILocation(line: 4408, column: 9, scope: !17088)
!17090 = !DILocation(line: 4408, column: 21, scope: !17088)
!17091 = !DILocation(line: 4408, column: 36, scope: !17088)
!17092 = !DILocation(line: 4408, column: 63, scope: !17088)
!17093 = !DILocation(line: 4408, column: 72, scope: !17088)
!17094 = !DILocation(line: 4408, column: 61, scope: !17088)
!17095 = !DILocation(line: 4408, column: 87, scope: !17088)
!17096 = !DILocation(line: 4408, column: 85, scope: !17088)
!17097 = !DILocation(line: 4411, column: 10, scope: !17088)
!17098 = !DILocation(line: 4411, column: 3, scope: !17088)
!17099 = !DILocation(line: 4411, column: 21, scope: !17088)
!17100 = !DILocation(line: 4411, column: 28, scope: !17088)
!17101 = !DILocation(line: 4411, column: 39, scope: !17088)
!17102 = !DILocation(line: 4411, column: 46, scope: !17088)
!17103 = !DILocation(line: 4411, column: 59, scope: !17088)
!17104 = !DILocation(line: 4416, column: 14, scope: !17105)
!17105 = distinct !DILexicalBlock(scope: !17088, file: !3, line: 4416, column: 3)
!17106 = !DILocation(line: 4416, column: 8, scope: !17105)
!17107 = !DILocation(line: 4416, column: 19, scope: !17108)
!17108 = distinct !DILexicalBlock(scope: !17105, file: !3, line: 4416, column: 3)
!17109 = !DILocation(line: 4416, column: 27, scope: !17108)
!17110 = !DILocation(line: 4416, column: 34, scope: !17108)
!17111 = !DILocation(line: 4416, column: 25, scope: !17108)
!17112 = !DILocation(line: 4416, column: 3, scope: !17105)
!17113 = !DILocalVariable(name: "i", scope: !17114, file: !3, line: 4417, type: !135)
!17114 = distinct !DILexicalBlock(scope: !17108, file: !3, line: 4416, column: 57)
!17115 = !DILocation(line: 4417, column: 8, scope: !17114)
!17116 = !DILocalVariable(name: "numOfNeighs", scope: !17114, file: !3, line: 4418, type: !135)
!17117 = !DILocation(line: 4418, column: 8, scope: !17114)
!17118 = !DILocation(line: 4418, column: 22, scope: !17114)
!17119 = !DILocation(line: 4418, column: 29, scope: !17114)
!17120 = !DILocation(line: 4418, column: 39, scope: !17114)
!17121 = !DILocation(line: 4418, column: 45, scope: !17114)
!17122 = !DILocalVariable(name: "totalAlpha", scope: !17114, file: !3, line: 4419, type: !207)
!17123 = !DILocation(line: 4419, column: 10, scope: !17114)
!17124 = !DILocalVariable(name: "pPoint", scope: !17114, file: !3, line: 4420, type: !222)
!17125 = !DILocation(line: 4420, column: 16, scope: !17114)
!17126 = !DILocation(line: 4420, column: 41, scope: !17114)
!17127 = !DILocation(line: 4420, column: 48, scope: !17114)
!17128 = !DILocation(line: 4420, column: 27, scope: !17114)
!17129 = !DILocation(line: 4420, column: 59, scope: !17114)
!17130 = !DILocation(line: 4420, column: 26, scope: !17114)
!17131 = !DILocation(line: 4422, column: 11, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17114, file: !3, line: 4422, column: 4)
!17133 = !DILocation(line: 4422, column: 9, scope: !17132)
!17134 = !DILocation(line: 4422, column: 16, scope: !17135)
!17135 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 4422, column: 4)
!17136 = !DILocation(line: 4422, column: 20, scope: !17135)
!17137 = !DILocation(line: 4422, column: 18, scope: !17135)
!17138 = !DILocation(line: 4422, column: 4, scope: !17132)
!17139 = !DILocalVariable(name: "n_index", scope: !17140, file: !3, line: 4423, type: !135)
!17140 = distinct !DILexicalBlock(scope: !17135, file: !3, line: 4422, column: 38)
!17141 = !DILocation(line: 4423, column: 9, scope: !17140)
!17142 = !DILocation(line: 4423, column: 19, scope: !17140)
!17143 = !DILocation(line: 4423, column: 26, scope: !17140)
!17144 = !DILocation(line: 4423, column: 36, scope: !17140)
!17145 = !DILocation(line: 4423, column: 44, scope: !17140)
!17146 = !DILocation(line: 4423, column: 53, scope: !17140)
!17147 = !DILocation(line: 4423, column: 51, scope: !17140)
!17148 = !DILocalVariable(name: "speed_scale", scope: !17140, file: !3, line: 4424, type: !207)
!17149 = !DILocation(line: 4424, column: 11, scope: !17140)
!17150 = !DILocation(line: 4424, column: 26, scope: !17140)
!17151 = !DILocation(line: 4424, column: 34, scope: !17140)
!17152 = !DILocation(line: 4424, column: 43, scope: !17140)
!17153 = !DILocation(line: 4424, column: 50, scope: !17140)
!17154 = !DILocation(line: 4424, column: 48, scope: !17140)
!17155 = !DILocation(line: 4424, column: 25, scope: !17140)
!17156 = !DILocation(line: 4424, column: 70, scope: !17140)
!17157 = !DILocation(line: 4424, column: 82, scope: !17140)
!17158 = !DILocation(line: 4424, column: 90, scope: !17140)
!17159 = !DILocation(line: 4424, column: 99, scope: !17140)
!17160 = !DILocation(line: 4424, column: 80, scope: !17140)
!17161 = !DILocalVariable(name: "ePoint", scope: !17140, file: !3, line: 4425, type: !222)
!17162 = !DILocation(line: 4425, column: 17, scope: !17140)
!17163 = !DILocation(line: 4425, column: 27, scope: !17140)
!17164 = !DILocation(line: 4425, column: 37, scope: !17140)
!17165 = !DILocation(line: 4425, column: 44, scope: !17140)
!17166 = !DILocation(line: 4425, column: 54, scope: !17140)
!17167 = !DILocation(line: 4425, column: 63, scope: !17140)
!17168 = !DILocalVariable(name: "a_factor", scope: !17140, file: !3, line: 4426, type: !207)
!17169 = !DILocation(line: 4426, column: 11, scope: !17140)
!17170 = !DILocalVariable(name: "ea_factor", scope: !17140, file: !3, line: 4426, type: !207)
!17171 = !DILocation(line: 4426, column: 21, scope: !17140)
!17172 = !DILocalVariable(name: "w_factor", scope: !17140, file: !3, line: 4426, type: !207)
!17173 = !DILocation(line: 4426, column: 32, scope: !17140)
!17174 = !DILocation(line: 4428, column: 19, scope: !17140)
!17175 = !DILocation(line: 4428, column: 27, scope: !17140)
!17176 = !DILocation(line: 4428, column: 16, scope: !17140)
!17177 = !DILocation(line: 4432, column: 9, scope: !17178)
!17178 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4432, column: 9)
!17179 = !DILocation(line: 4432, column: 17, scope: !17178)
!17180 = !DILocation(line: 4432, column: 23, scope: !17178)
!17181 = !DILocation(line: 4432, column: 31, scope: !17178)
!17182 = !DILocation(line: 4432, column: 34, scope: !17178)
!17183 = !DILocation(line: 4432, column: 42, scope: !17178)
!17184 = !DILocation(line: 4432, column: 50, scope: !17178)
!17185 = !DILocation(line: 4432, column: 58, scope: !17178)
!17186 = !DILocation(line: 4432, column: 61, scope: !17178)
!17187 = !DILocation(line: 4432, column: 69, scope: !17178)
!17188 = !DILocation(line: 4432, column: 77, scope: !17178)
!17189 = !DILocation(line: 4432, column: 9, scope: !17140)
!17190 = !DILocation(line: 4432, column: 86, scope: !17178)
!17191 = !DILocation(line: 4435, column: 24, scope: !17140)
!17192 = !DILocation(line: 4435, column: 32, scope: !17140)
!17193 = !DILocation(line: 4435, column: 22, scope: !17140)
!17194 = !DILocation(line: 4435, column: 41, scope: !17140)
!17195 = !DILocation(line: 4435, column: 39, scope: !17140)
!17196 = !DILocation(line: 4435, column: 56, scope: !17140)
!17197 = !DILocation(line: 4435, column: 64, scope: !17140)
!17198 = !DILocation(line: 4435, column: 72, scope: !17140)
!17199 = !DILocation(line: 4435, column: 80, scope: !17140)
!17200 = !DILocation(line: 4435, column: 70, scope: !17140)
!17201 = !DILocation(line: 4435, column: 53, scope: !17140)
!17202 = !DILocation(line: 4435, column: 89, scope: !17140)
!17203 = !DILocation(line: 4435, column: 87, scope: !17140)
!17204 = !DILocation(line: 4435, column: 14, scope: !17140)
!17205 = !DILocation(line: 4436, column: 9, scope: !17206)
!17206 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4436, column: 9)
!17207 = !DILocation(line: 4436, column: 18, scope: !17206)
!17208 = !DILocation(line: 4436, column: 9, scope: !17140)
!17209 = !DILocation(line: 4436, column: 35, scope: !17206)
!17210 = !DILocation(line: 4436, column: 26, scope: !17206)
!17211 = !DILocation(line: 4438, column: 25, scope: !17140)
!17212 = !DILocation(line: 4438, column: 33, scope: !17140)
!17213 = !DILocation(line: 4438, column: 23, scope: !17140)
!17214 = !DILocation(line: 4438, column: 42, scope: !17140)
!17215 = !DILocation(line: 4438, column: 49, scope: !17140)
!17216 = !DILocation(line: 4438, column: 57, scope: !17140)
!17217 = !DILocation(line: 4438, column: 67, scope: !17140)
!17218 = !DILocation(line: 4438, column: 75, scope: !17140)
!17219 = !DILocation(line: 4438, column: 65, scope: !17140)
!17220 = !DILocation(line: 4438, column: 46, scope: !17140)
!17221 = !DILocation(line: 4438, column: 86, scope: !17140)
!17222 = !DILocation(line: 4438, column: 84, scope: !17140)
!17223 = !DILocation(line: 4438, column: 15, scope: !17140)
!17224 = !DILocation(line: 4439, column: 9, scope: !17225)
!17225 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4439, column: 9)
!17226 = !DILocation(line: 4439, column: 19, scope: !17225)
!17227 = !DILocation(line: 4439, column: 9, scope: !17140)
!17228 = !DILocation(line: 4439, column: 37, scope: !17225)
!17229 = !DILocation(line: 4439, column: 27, scope: !17225)
!17230 = !DILocation(line: 4441, column: 24, scope: !17140)
!17231 = !DILocation(line: 4441, column: 32, scope: !17140)
!17232 = !DILocation(line: 4441, column: 22, scope: !17140)
!17233 = !DILocation(line: 4441, column: 41, scope: !17140)
!17234 = !DILocation(line: 4441, column: 48, scope: !17140)
!17235 = !DILocation(line: 4441, column: 56, scope: !17140)
!17236 = !DILocation(line: 4441, column: 66, scope: !17140)
!17237 = !DILocation(line: 4441, column: 74, scope: !17140)
!17238 = !DILocation(line: 4441, column: 64, scope: !17140)
!17239 = !DILocation(line: 4441, column: 45, scope: !17140)
!17240 = !DILocation(line: 4441, column: 85, scope: !17140)
!17241 = !DILocation(line: 4441, column: 83, scope: !17140)
!17242 = !DILocation(line: 4441, column: 14, scope: !17140)
!17243 = !DILocation(line: 4442, column: 9, scope: !17244)
!17244 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4442, column: 9)
!17245 = !DILocation(line: 4442, column: 18, scope: !17244)
!17246 = !DILocation(line: 4442, column: 9, scope: !17140)
!17247 = !DILocation(line: 4442, column: 35, scope: !17244)
!17248 = !DILocation(line: 4442, column: 26, scope: !17244)
!17249 = !DILocation(line: 4444, column: 22, scope: !17140)
!17250 = !DILocation(line: 4444, column: 5, scope: !17140)
!17251 = !DILocation(line: 4444, column: 13, scope: !17140)
!17252 = !DILocation(line: 4444, column: 19, scope: !17140)
!17253 = !DILocation(line: 4445, column: 9, scope: !17254)
!17254 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4445, column: 9)
!17255 = !DILocation(line: 4445, column: 17, scope: !17254)
!17256 = !DILocation(line: 4445, column: 23, scope: !17254)
!17257 = !DILocation(line: 4445, column: 9, scope: !17140)
!17258 = !DILocation(line: 4445, column: 31, scope: !17254)
!17259 = !DILocation(line: 4445, column: 39, scope: !17254)
!17260 = !DILocation(line: 4445, column: 45, scope: !17254)
!17261 = !DILocation(line: 4446, column: 24, scope: !17140)
!17262 = !DILocation(line: 4446, column: 5, scope: !17140)
!17263 = !DILocation(line: 4446, column: 13, scope: !17140)
!17264 = !DILocation(line: 4446, column: 21, scope: !17140)
!17265 = !DILocation(line: 4447, column: 9, scope: !17266)
!17266 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4447, column: 9)
!17267 = !DILocation(line: 4447, column: 17, scope: !17266)
!17268 = !DILocation(line: 4447, column: 25, scope: !17266)
!17269 = !DILocation(line: 4447, column: 9, scope: !17140)
!17270 = !DILocation(line: 4447, column: 33, scope: !17266)
!17271 = !DILocation(line: 4447, column: 41, scope: !17266)
!17272 = !DILocation(line: 4447, column: 49, scope: !17266)
!17273 = !DILocation(line: 4448, column: 24, scope: !17140)
!17274 = !DILocation(line: 4448, column: 5, scope: !17140)
!17275 = !DILocation(line: 4448, column: 13, scope: !17140)
!17276 = !DILocation(line: 4448, column: 21, scope: !17140)
!17277 = !DILocation(line: 4449, column: 9, scope: !17278)
!17278 = distinct !DILexicalBlock(scope: !17140, file: !3, line: 4449, column: 9)
!17279 = !DILocation(line: 4449, column: 17, scope: !17278)
!17280 = !DILocation(line: 4449, column: 25, scope: !17278)
!17281 = !DILocation(line: 4449, column: 9, scope: !17140)
!17282 = !DILocation(line: 4449, column: 33, scope: !17278)
!17283 = !DILocation(line: 4449, column: 41, scope: !17278)
!17284 = !DILocation(line: 4449, column: 49, scope: !17278)
!17285 = !DILocation(line: 4450, column: 4, scope: !17140)
!17286 = !DILocation(line: 4422, column: 34, scope: !17135)
!17287 = !DILocation(line: 4422, column: 4, scope: !17135)
!17288 = distinct !{!17288, !17138, !17289}
!17289 = !DILocation(line: 4450, column: 4, scope: !17132)
!17290 = !DILocation(line: 4451, column: 3, scope: !17114)
!17291 = !DILocation(line: 4416, column: 53, scope: !17108)
!17292 = !DILocation(line: 4416, column: 3, scope: !17108)
!17293 = distinct !{!17293, !17112, !17294}
!17294 = !DILocation(line: 4451, column: 3, scope: !17105)
!17295 = !DILocation(line: 4452, column: 2, scope: !17088)
!17296 = !DILocation(line: 4457, column: 6, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !16878, file: !3, line: 4457, column: 6)
!17298 = !DILocation(line: 4457, column: 15, scope: !17297)
!17299 = !DILocation(line: 4457, column: 22, scope: !17297)
!17300 = !DILocation(line: 4457, column: 50, scope: !17297)
!17301 = !DILocation(line: 4457, column: 53, scope: !17297)
!17302 = !DILocation(line: 4457, column: 6, scope: !16878)
!17303 = !DILocalVariable(name: "eff_scale", scope: !17304, file: !3, line: 4458, type: !207)
!17304 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 4457, column: 60)
!17305 = !DILocation(line: 4458, column: 9, scope: !17304)
!17306 = !DILocation(line: 4458, column: 21, scope: !17304)
!17307 = !DILocation(line: 4458, column: 36, scope: !17304)
!17308 = !DILocation(line: 4458, column: 63, scope: !17304)
!17309 = !DILocation(line: 4458, column: 61, scope: !17304)
!17310 = !DILocation(line: 4458, column: 73, scope: !17304)
!17311 = !DILocation(line: 4460, column: 10, scope: !17304)
!17312 = !DILocation(line: 4460, column: 3, scope: !17304)
!17313 = !DILocation(line: 4460, column: 21, scope: !17304)
!17314 = !DILocation(line: 4460, column: 28, scope: !17304)
!17315 = !DILocation(line: 4460, column: 39, scope: !17304)
!17316 = !DILocation(line: 4460, column: 46, scope: !17304)
!17317 = !DILocation(line: 4460, column: 59, scope: !17304)
!17318 = !DILocation(line: 4462, column: 14, scope: !17319)
!17319 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 4462, column: 3)
!17320 = !DILocation(line: 4462, column: 8, scope: !17319)
!17321 = !DILocation(line: 4462, column: 19, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17319, file: !3, line: 4462, column: 3)
!17323 = !DILocation(line: 4462, column: 27, scope: !17322)
!17324 = !DILocation(line: 4462, column: 34, scope: !17322)
!17325 = !DILocation(line: 4462, column: 25, scope: !17322)
!17326 = !DILocation(line: 4462, column: 3, scope: !17319)
!17327 = !DILocalVariable(name: "i", scope: !17328, file: !3, line: 4463, type: !135)
!17328 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 4462, column: 57)
!17329 = !DILocation(line: 4463, column: 8, scope: !17328)
!17330 = !DILocalVariable(name: "pPoint", scope: !17328, file: !3, line: 4464, type: !222)
!17331 = !DILocation(line: 4464, column: 16, scope: !17328)
!17332 = !DILocation(line: 4464, column: 41, scope: !17328)
!17333 = !DILocation(line: 4464, column: 48, scope: !17328)
!17334 = !DILocation(line: 4464, column: 27, scope: !17328)
!17335 = !DILocation(line: 4464, column: 59, scope: !17328)
!17336 = !DILocation(line: 4464, column: 26, scope: !17328)
!17337 = !DILocalVariable(name: "pPoint_prev", scope: !17328, file: !3, line: 4465, type: !222)
!17338 = !DILocation(line: 4465, column: 16, scope: !17328)
!17339 = !DILocation(line: 4465, column: 31, scope: !17328)
!17340 = !DILocation(line: 4465, column: 41, scope: !17328)
!17341 = !DILocalVariable(name: "closest_id", scope: !17328, file: !3, line: 4467, type: !8853)
!17342 = !DILocation(line: 4467, column: 8, scope: !17328)
!17343 = !DILocalVariable(name: "closest_d", scope: !17328, file: !3, line: 4468, type: !217)
!17344 = !DILocation(line: 4468, column: 10, scope: !17328)
!17345 = !DILocalVariable(name: "w_factor", scope: !17328, file: !3, line: 4471, type: !207)
!17346 = !DILocation(line: 4471, column: 10, scope: !17328)
!17347 = !DILocation(line: 4471, column: 21, scope: !17328)
!17348 = !DILocation(line: 4471, column: 34, scope: !17328)
!17349 = !DILocation(line: 4471, column: 42, scope: !17328)
!17350 = !DILocation(line: 4472, column: 8, scope: !17351)
!17351 = distinct !DILexicalBlock(scope: !17328, file: !3, line: 4472, column: 8)
!17352 = !DILocation(line: 4472, column: 17, scope: !17351)
!17353 = !DILocation(line: 4472, column: 8, scope: !17328)
!17354 = !DILocation(line: 4472, column: 23, scope: !17351)
!17355 = !DILocation(line: 4473, column: 4, scope: !17356)
!17356 = distinct !DILexicalBlock(scope: !17357, file: !3, line: 4473, column: 4)
!17357 = distinct !DILexicalBlock(scope: !17328, file: !3, line: 4473, column: 4)
!17358 = !DILocation(line: 4473, column: 4, scope: !17357)
!17359 = !DILocation(line: 4473, column: 4, scope: !17360)
!17360 = distinct !DILexicalBlock(scope: !17356, file: !3, line: 4473, column: 4)
!17361 = !DILocation(line: 4476, column: 39, scope: !17328)
!17362 = !DILocation(line: 4476, column: 46, scope: !17328)
!17363 = !DILocation(line: 4476, column: 54, scope: !17328)
!17364 = !DILocation(line: 4476, column: 60, scope: !17328)
!17365 = !DILocation(line: 4476, column: 66, scope: !17328)
!17366 = !DILocation(line: 4476, column: 72, scope: !17328)
!17367 = !DILocation(line: 4476, column: 83, scope: !17328)
!17368 = !DILocation(line: 4476, column: 4, scope: !17328)
!17369 = !DILocation(line: 4479, column: 11, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17328, file: !3, line: 4479, column: 4)
!17371 = !DILocation(line: 4479, column: 9, scope: !17370)
!17372 = !DILocation(line: 4479, column: 16, scope: !17373)
!17373 = distinct !DILexicalBlock(scope: !17370, file: !3, line: 4479, column: 4)
!17374 = !DILocation(line: 4479, column: 18, scope: !17373)
!17375 = !DILocation(line: 4479, column: 4, scope: !17370)
!17376 = !DILocalVariable(name: "n_index", scope: !17377, file: !3, line: 4480, type: !135)
!17377 = distinct !DILexicalBlock(scope: !17373, file: !3, line: 4479, column: 28)
!17378 = !DILocation(line: 4480, column: 9, scope: !17377)
!17379 = !DILocation(line: 4480, column: 30, scope: !17377)
!17380 = !DILocation(line: 4480, column: 19, scope: !17377)
!17381 = !DILocation(line: 4481, column: 9, scope: !17382)
!17382 = distinct !DILexicalBlock(scope: !17377, file: !3, line: 4481, column: 9)
!17383 = !DILocation(line: 4481, column: 17, scope: !17382)
!17384 = !DILocation(line: 4481, column: 23, scope: !17382)
!17385 = !DILocation(line: 4481, column: 36, scope: !17382)
!17386 = !DILocation(line: 4481, column: 26, scope: !17382)
!17387 = !DILocation(line: 4481, column: 39, scope: !17382)
!17388 = !DILocation(line: 4481, column: 9, scope: !17377)
!17389 = !DILocalVariable(name: "dir_dot", scope: !17390, file: !3, line: 4482, type: !207)
!17390 = distinct !DILexicalBlock(scope: !17382, file: !3, line: 4481, column: 47)
!17391 = !DILocation(line: 4482, column: 12, scope: !17390)
!17392 = !DILocation(line: 4482, column: 32, scope: !17390)
!17393 = !DILocation(line: 4482, column: 22, scope: !17390)
!17394 = !DILocalVariable(name: "dir_factor", scope: !17390, file: !3, line: 4482, type: !207)
!17395 = !DILocation(line: 4482, column: 36, scope: !17390)
!17396 = !DILocalVariable(name: "a_factor", scope: !17390, file: !3, line: 4482, type: !207)
!17397 = !DILocation(line: 4482, column: 48, scope: !17390)
!17398 = !DILocalVariable(name: "speed_scale", scope: !17390, file: !3, line: 4483, type: !207)
!17399 = !DILocation(line: 4483, column: 12, scope: !17390)
!17400 = !DILocation(line: 4483, column: 26, scope: !17390)
!17401 = !DILocation(line: 4483, column: 38, scope: !17390)
!17402 = !DILocation(line: 4483, column: 44, scope: !17390)
!17403 = !DILocation(line: 4483, column: 50, scope: !17390)
!17404 = !DILocation(line: 4483, column: 54, scope: !17390)
!17405 = !DILocation(line: 4483, column: 36, scope: !17390)
!17406 = !DILocation(line: 4483, column: 61, scope: !17390)
!17407 = !DILocation(line: 4483, column: 69, scope: !17390)
!17408 = !DILocation(line: 4483, column: 78, scope: !17390)
!17409 = !DILocation(line: 4483, column: 59, scope: !17390)
!17410 = !DILocalVariable(name: "ePoint", scope: !17390, file: !3, line: 4484, type: !222)
!17411 = !DILocation(line: 4484, column: 18, scope: !17390)
!17412 = !DILocation(line: 4484, column: 43, scope: !17390)
!17413 = !DILocation(line: 4484, column: 50, scope: !17390)
!17414 = !DILocation(line: 4484, column: 29, scope: !17390)
!17415 = !DILocation(line: 4484, column: 61, scope: !17390)
!17416 = !DILocation(line: 4484, column: 68, scope: !17390)
!17417 = !DILocation(line: 4484, column: 78, scope: !17390)
!17418 = !DILocation(line: 4484, column: 87, scope: !17390)
!17419 = !DILocation(line: 4484, column: 28, scope: !17390)
!17420 = !DILocalVariable(name: "e_wet", scope: !17390, file: !3, line: 4485, type: !207)
!17421 = !DILocation(line: 4485, column: 12, scope: !17390)
!17422 = !DILocation(line: 4485, column: 20, scope: !17390)
!17423 = !DILocation(line: 4485, column: 28, scope: !17390)
!17424 = !DILocation(line: 4488, column: 10, scope: !17425)
!17425 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4488, column: 10)
!17426 = !DILocation(line: 4488, column: 18, scope: !17425)
!17427 = !DILocation(line: 4488, column: 10, scope: !17390)
!17428 = !DILocation(line: 4488, column: 27, scope: !17425)
!17429 = !DILocation(line: 4490, column: 19, scope: !17390)
!17430 = !DILocation(line: 4490, column: 29, scope: !17390)
!17431 = !DILocation(line: 4490, column: 27, scope: !17390)
!17432 = !DILocation(line: 4490, column: 55, scope: !17390)
!17433 = !DILocation(line: 4490, column: 53, scope: !17390)
!17434 = !DILocation(line: 4490, column: 17, scope: !17390)
!17435 = !DILocation(line: 4491, column: 10, scope: !17436)
!17436 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4491, column: 10)
!17437 = !DILocation(line: 4491, column: 21, scope: !17436)
!17438 = !DILocation(line: 4491, column: 10, scope: !17390)
!17439 = !DILocation(line: 4491, column: 40, scope: !17436)
!17440 = !DILocation(line: 4491, column: 29, scope: !17436)
!17441 = !DILocation(line: 4494, column: 25, scope: !17390)
!17442 = !DILocation(line: 4494, column: 6, scope: !17390)
!17443 = !DILocation(line: 4494, column: 14, scope: !17390)
!17444 = !DILocation(line: 4494, column: 22, scope: !17390)
!17445 = !DILocation(line: 4495, column: 6, scope: !17446)
!17446 = distinct !DILexicalBlock(scope: !17447, file: !3, line: 4495, column: 6)
!17447 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4495, column: 6)
!17448 = !DILocation(line: 4495, column: 6, scope: !17447)
!17449 = !DILocation(line: 4495, column: 6, scope: !17450)
!17450 = distinct !DILexicalBlock(scope: !17446, file: !3, line: 4495, column: 6)
!17451 = !DILocation(line: 4498, column: 17, scope: !17390)
!17452 = !DILocation(line: 4498, column: 30, scope: !17390)
!17453 = !DILocation(line: 4498, column: 43, scope: !17390)
!17454 = !DILocation(line: 4498, column: 28, scope: !17390)
!17455 = !DILocation(line: 4498, column: 15, scope: !17390)
!17456 = !DILocation(line: 4499, column: 6, scope: !17457)
!17457 = distinct !DILexicalBlock(scope: !17458, file: !3, line: 4499, column: 6)
!17458 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4499, column: 6)
!17459 = !DILocation(line: 4499, column: 6, scope: !17458)
!17460 = !DILocation(line: 4499, column: 6, scope: !17461)
!17461 = distinct !DILexicalBlock(scope: !17457, file: !3, line: 4499, column: 6)
!17462 = !DILocation(line: 4500, column: 16, scope: !17390)
!17463 = !DILocation(line: 4500, column: 24, scope: !17390)
!17464 = !DILocation(line: 4500, column: 33, scope: !17390)
!17465 = !DILocation(line: 4500, column: 41, scope: !17390)
!17466 = !DILocation(line: 4500, column: 50, scope: !17390)
!17467 = !DILocation(line: 4500, column: 63, scope: !17390)
!17468 = !DILocation(line: 4500, column: 72, scope: !17390)
!17469 = !DILocation(line: 4500, column: 85, scope: !17390)
!17470 = !DILocation(line: 4500, column: 94, scope: !17390)
!17471 = !DILocation(line: 4500, column: 6, scope: !17390)
!17472 = !DILocation(line: 4502, column: 10, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4502, column: 10)
!17474 = !DILocation(line: 4502, column: 23, scope: !17473)
!17475 = !DILocation(line: 4502, column: 33, scope: !17473)
!17476 = !DILocation(line: 4502, column: 41, scope: !17473)
!17477 = !DILocation(line: 4502, column: 31, scope: !17473)
!17478 = !DILocation(line: 4502, column: 10, scope: !17390)
!17479 = !DILocation(line: 4503, column: 26, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17473, file: !3, line: 4502, column: 50)
!17481 = !DILocation(line: 4503, column: 37, scope: !17480)
!17482 = !DILocation(line: 4503, column: 50, scope: !17480)
!17483 = !DILocation(line: 4503, column: 35, scope: !17480)
!17484 = !DILocation(line: 4503, column: 7, scope: !17480)
!17485 = !DILocation(line: 4503, column: 15, scope: !17480)
!17486 = !DILocation(line: 4503, column: 23, scope: !17480)
!17487 = !DILocation(line: 4504, column: 11, scope: !17488)
!17488 = distinct !DILexicalBlock(scope: !17480, file: !3, line: 4504, column: 11)
!17489 = !DILocation(line: 4504, column: 19, scope: !17488)
!17490 = !DILocation(line: 4504, column: 29, scope: !17488)
!17491 = !DILocation(line: 4504, column: 42, scope: !17488)
!17492 = !DILocation(line: 4504, column: 27, scope: !17488)
!17493 = !DILocation(line: 4504, column: 11, scope: !17480)
!17494 = !DILocation(line: 4505, column: 26, scope: !17488)
!17495 = !DILocation(line: 4505, column: 39, scope: !17488)
!17496 = !DILocation(line: 4505, column: 8, scope: !17488)
!17497 = !DILocation(line: 4505, column: 16, scope: !17488)
!17498 = !DILocation(line: 4505, column: 24, scope: !17488)
!17499 = !DILocation(line: 4506, column: 6, scope: !17480)
!17500 = !DILocation(line: 4509, column: 26, scope: !17390)
!17501 = !DILocation(line: 4509, column: 34, scope: !17390)
!17502 = !DILocation(line: 4509, column: 44, scope: !17390)
!17503 = !DILocation(line: 4509, column: 42, scope: !17390)
!17504 = !DILocation(line: 4509, column: 6, scope: !17390)
!17505 = !DILocation(line: 4509, column: 14, scope: !17390)
!17506 = !DILocation(line: 4509, column: 22, scope: !17390)
!17507 = !DILocation(line: 4510, column: 6, scope: !17508)
!17508 = distinct !DILexicalBlock(scope: !17509, file: !3, line: 4510, column: 6)
!17509 = distinct !DILexicalBlock(scope: !17390, file: !3, line: 4510, column: 6)
!17510 = !DILocation(line: 4510, column: 6, scope: !17509)
!17511 = !DILocation(line: 4510, column: 6, scope: !17512)
!17512 = distinct !DILexicalBlock(scope: !17508, file: !3, line: 4510, column: 6)
!17513 = !DILocation(line: 4511, column: 5, scope: !17390)
!17514 = !DILocation(line: 4512, column: 4, scope: !17377)
!17515 = !DILocation(line: 4479, column: 24, scope: !17373)
!17516 = !DILocation(line: 4479, column: 4, scope: !17373)
!17517 = distinct !{!17517, !17375, !17518}
!17518 = !DILocation(line: 4512, column: 4, scope: !17370)
!17519 = !DILocation(line: 4513, column: 3, scope: !17328)
!17520 = !DILocation(line: 4462, column: 53, scope: !17322)
!17521 = !DILocation(line: 4462, column: 3, scope: !17322)
!17522 = distinct !{!17522, !17326, !17523}
!17523 = !DILocation(line: 4513, column: 3, scope: !17319)
!17524 = !DILocation(line: 4514, column: 2, scope: !17304)
!17525 = !DILocation(line: 4515, column: 1, scope: !16878)
!17526 = distinct !DISubprogram(name: "value_dissolve", scope: !3, file: !3, line: 132, type: !17527, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17527 = !DISubroutineType(types: !17528)
!17528 = !{null, !233, !2009, !2009, !17529}
!17529 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!17530 = !DILocalVariable(name: "r_value", arg: 1, scope: !17526, file: !3, line: 132, type: !233)
!17531 = !DILocation(line: 132, column: 39, scope: !17526)
!17532 = !DILocalVariable(name: "time", arg: 2, scope: !17526, file: !3, line: 132, type: !2009)
!17533 = !DILocation(line: 132, column: 60, scope: !17526)
!17534 = !DILocalVariable(name: "scale", arg: 3, scope: !17526, file: !3, line: 132, type: !2009)
!17535 = !DILocation(line: 132, column: 78, scope: !17526)
!17536 = !DILocalVariable(name: "is_log", arg: 4, scope: !17526, file: !3, line: 132, type: !17529)
!17537 = !DILocation(line: 132, column: 95, scope: !17526)
!17538 = !DILocation(line: 134, column: 14, scope: !17526)
!17539 = !DILocation(line: 134, column: 13, scope: !17526)
!17540 = !DILocation(line: 135, column: 18, scope: !17526)
!17541 = !DILocation(line: 135, column: 17, scope: !17526)
!17542 = !DILocation(line: 135, column: 63, scope: !17526)
!17543 = !DILocation(line: 135, column: 61, scope: !17526)
!17544 = !DILocation(line: 135, column: 70, scope: !17526)
!17545 = !DILocation(line: 135, column: 68, scope: !17526)
!17546 = !DILocation(line: 135, column: 53, scope: !17526)
!17547 = !DILocation(line: 135, column: 30, scope: !17526)
!17548 = !DILocation(line: 135, column: 27, scope: !17526)
!17549 = !DILocation(line: 136, column: 18, scope: !17526)
!17550 = !DILocation(line: 136, column: 17, scope: !17526)
!17551 = !DILocation(line: 136, column: 36, scope: !17526)
!17552 = !DILocation(line: 136, column: 34, scope: !17526)
!17553 = !DILocation(line: 136, column: 43, scope: !17526)
!17554 = !DILocation(line: 136, column: 41, scope: !17526)
!17555 = !DILocation(line: 136, column: 27, scope: !17526)
!17556 = !DILocation(line: 134, column: 3, scope: !17526)
!17557 = !DILocation(line: 134, column: 11, scope: !17526)
!17558 = !DILocation(line: 137, column: 1, scope: !17526)
!17559 = distinct !DISubprogram(name: "object_cacheIgnoreClear", scope: !3, file: !3, line: 493, type: !17560, scopeLine: 494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17560 = !DISubroutineType(types: !17561)
!17561 = !{null, !3426, !135}
!17562 = !DILocalVariable(name: "ob", arg: 1, scope: !17559, file: !3, line: 493, type: !3426)
!17563 = !DILocation(line: 493, column: 45, scope: !17559)
!17564 = !DILocalVariable(name: "state", arg: 2, scope: !17559, file: !3, line: 493, type: !135)
!17565 = !DILocation(line: 493, column: 53, scope: !17559)
!17566 = !DILocalVariable(name: "pidlist", scope: !17559, file: !3, line: 495, type: !334)
!17567 = !DILocation(line: 495, column: 11, scope: !17559)
!17568 = !DILocalVariable(name: "pid", scope: !17559, file: !3, line: 496, type: !17569)
!17569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6343, size: 64)
!17570 = !DILocation(line: 496, column: 13, scope: !17559)
!17571 = !DILocation(line: 497, column: 40, scope: !17559)
!17572 = !DILocation(line: 497, column: 2, scope: !17559)
!17573 = !DILocation(line: 499, column: 21, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17559, file: !3, line: 499, column: 2)
!17575 = !DILocation(line: 499, column: 13, scope: !17574)
!17576 = !DILocation(line: 499, column: 11, scope: !17574)
!17577 = !DILocation(line: 499, column: 7, scope: !17574)
!17578 = !DILocation(line: 499, column: 28, scope: !17579)
!17579 = distinct !DILexicalBlock(scope: !17574, file: !3, line: 499, column: 2)
!17580 = !DILocation(line: 499, column: 2, scope: !17574)
!17581 = !DILocation(line: 500, column: 7, scope: !17582)
!17582 = distinct !DILexicalBlock(scope: !17583, file: !3, line: 500, column: 7)
!17583 = distinct !DILexicalBlock(scope: !17579, file: !3, line: 499, column: 50)
!17584 = !DILocation(line: 500, column: 12, scope: !17582)
!17585 = !DILocation(line: 500, column: 7, scope: !17583)
!17586 = !DILocation(line: 501, column: 8, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17588, file: !3, line: 501, column: 8)
!17588 = distinct !DILexicalBlock(scope: !17582, file: !3, line: 500, column: 19)
!17589 = !DILocation(line: 501, column: 8, scope: !17588)
!17590 = !DILocation(line: 502, column: 5, scope: !17587)
!17591 = !DILocation(line: 502, column: 10, scope: !17587)
!17592 = !DILocation(line: 502, column: 17, scope: !17587)
!17593 = !DILocation(line: 502, column: 22, scope: !17587)
!17594 = !DILocation(line: 504, column: 5, scope: !17587)
!17595 = !DILocation(line: 504, column: 10, scope: !17587)
!17596 = !DILocation(line: 504, column: 17, scope: !17587)
!17597 = !DILocation(line: 504, column: 22, scope: !17587)
!17598 = !DILocation(line: 505, column: 3, scope: !17588)
!17599 = !DILocation(line: 506, column: 2, scope: !17583)
!17600 = !DILocation(line: 499, column: 39, scope: !17579)
!17601 = !DILocation(line: 499, column: 44, scope: !17579)
!17602 = !DILocation(line: 499, column: 37, scope: !17579)
!17603 = !DILocation(line: 499, column: 2, scope: !17579)
!17604 = distinct !{!17604, !17580, !17605}
!17605 = !DILocation(line: 506, column: 2, scope: !17574)
!17606 = !DILocation(line: 508, column: 2, scope: !17559)
!17607 = !DILocation(line: 509, column: 1, scope: !17559)
!17608 = distinct !DISubprogram(name: "boundIntersectPoint", scope: !3, file: !3, line: 663, type: !17609, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17609 = !DISubroutineType(types: !17610)
!17610 = !{!135, !3182, !233, !207}
!17611 = !DILocalVariable(name: "b", arg: 1, scope: !17608, file: !3, line: 663, type: !3182)
!17612 = !DILocation(line: 663, column: 42, scope: !17608)
!17613 = !DILocalVariable(name: "point", arg: 2, scope: !17608, file: !3, line: 663, type: !233)
!17614 = !DILocation(line: 663, column: 51, scope: !17608)
!17615 = !DILocalVariable(name: "radius", arg: 3, scope: !17608, file: !3, line: 663, type: !207)
!17616 = !DILocation(line: 663, column: 67, scope: !17608)
!17617 = !DILocalVariable(name: "i", scope: !17608, file: !3, line: 665, type: !135)
!17618 = !DILocation(line: 665, column: 6, scope: !17608)
!17619 = !DILocation(line: 666, column: 7, scope: !17620)
!17620 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 666, column: 6)
!17621 = !DILocation(line: 666, column: 10, scope: !17620)
!17622 = !DILocation(line: 666, column: 6, scope: !17608)
!17623 = !DILocation(line: 666, column: 17, scope: !17620)
!17624 = !DILocation(line: 667, column: 2, scope: !17608)
!17625 = !DILocation(line: 667, column: 9, scope: !17626)
!17626 = distinct !DILexicalBlock(scope: !17627, file: !3, line: 667, column: 2)
!17627 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 667, column: 2)
!17628 = !DILocation(line: 667, column: 11, scope: !17626)
!17629 = !DILocation(line: 667, column: 2, scope: !17627)
!17630 = !DILocation(line: 668, column: 9, scope: !17631)
!17631 = distinct !DILexicalBlock(scope: !17626, file: !3, line: 668, column: 7)
!17632 = !DILocation(line: 668, column: 12, scope: !17631)
!17633 = !DILocation(line: 668, column: 16, scope: !17631)
!17634 = !DILocation(line: 668, column: 23, scope: !17631)
!17635 = !DILocation(line: 668, column: 29, scope: !17631)
!17636 = !DILocation(line: 668, column: 34, scope: !17631)
!17637 = !DILocation(line: 668, column: 32, scope: !17631)
!17638 = !DILocation(line: 668, column: 19, scope: !17631)
!17639 = !DILocation(line: 668, column: 42, scope: !17631)
!17640 = !DILocation(line: 668, column: 45, scope: !17631)
!17641 = !DILocation(line: 668, column: 48, scope: !17631)
!17642 = !DILocation(line: 668, column: 52, scope: !17631)
!17643 = !DILocation(line: 668, column: 59, scope: !17631)
!17644 = !DILocation(line: 668, column: 65, scope: !17631)
!17645 = !DILocation(line: 668, column: 70, scope: !17631)
!17646 = !DILocation(line: 668, column: 68, scope: !17631)
!17647 = !DILocation(line: 668, column: 55, scope: !17631)
!17648 = !DILocation(line: 668, column: 7, scope: !17626)
!17649 = !DILocation(line: 668, column: 80, scope: !17631)
!17650 = !DILocation(line: 668, column: 77, scope: !17631)
!17651 = !DILocation(line: 667, column: 19, scope: !17626)
!17652 = !DILocation(line: 667, column: 2, scope: !17626)
!17653 = distinct !{!17653, !17629, !17654}
!17654 = !DILocation(line: 668, column: 87, scope: !17627)
!17655 = !DILocation(line: 669, column: 2, scope: !17608)
!17656 = !DILocation(line: 670, column: 1, scope: !17608)
!17657 = distinct !DISubprogram(name: "boundsIntersectDist", scope: !3, file: !3, line: 653, type: !17658, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17658 = !DISubroutineType(types: !17659)
!17659 = !{!135, !3182, !3182, !207}
!17660 = !DILocalVariable(name: "b1", arg: 1, scope: !17657, file: !3, line: 653, type: !3182)
!17661 = !DILocation(line: 653, column: 42, scope: !17657)
!17662 = !DILocalVariable(name: "b2", arg: 2, scope: !17657, file: !3, line: 653, type: !3182)
!17663 = !DILocation(line: 653, column: 56, scope: !17657)
!17664 = !DILocalVariable(name: "dist", arg: 3, scope: !17657, file: !3, line: 653, type: !207)
!17665 = !DILocation(line: 653, column: 66, scope: !17657)
!17666 = !DILocalVariable(name: "i", scope: !17657, file: !3, line: 655, type: !135)
!17667 = !DILocation(line: 655, column: 6, scope: !17657)
!17668 = !DILocation(line: 656, column: 7, scope: !17669)
!17669 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 656, column: 6)
!17670 = !DILocation(line: 656, column: 11, scope: !17669)
!17671 = !DILocation(line: 656, column: 17, scope: !17669)
!17672 = !DILocation(line: 656, column: 21, scope: !17669)
!17673 = !DILocation(line: 656, column: 25, scope: !17669)
!17674 = !DILocation(line: 656, column: 6, scope: !17657)
!17675 = !DILocation(line: 656, column: 32, scope: !17669)
!17676 = !DILocation(line: 657, column: 2, scope: !17657)
!17677 = !DILocation(line: 657, column: 9, scope: !17678)
!17678 = distinct !DILexicalBlock(scope: !17679, file: !3, line: 657, column: 2)
!17679 = distinct !DILexicalBlock(scope: !17657, file: !3, line: 657, column: 2)
!17680 = !DILocation(line: 657, column: 11, scope: !17678)
!17681 = !DILocation(line: 657, column: 2, scope: !17679)
!17682 = !DILocation(line: 658, column: 9, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17678, file: !3, line: 658, column: 7)
!17684 = !DILocation(line: 658, column: 13, scope: !17683)
!17685 = !DILocation(line: 658, column: 17, scope: !17683)
!17686 = !DILocation(line: 658, column: 24, scope: !17683)
!17687 = !DILocation(line: 658, column: 28, scope: !17683)
!17688 = !DILocation(line: 658, column: 32, scope: !17683)
!17689 = !DILocation(line: 658, column: 37, scope: !17683)
!17690 = !DILocation(line: 658, column: 35, scope: !17683)
!17691 = !DILocation(line: 658, column: 20, scope: !17683)
!17692 = !DILocation(line: 658, column: 43, scope: !17683)
!17693 = !DILocation(line: 658, column: 46, scope: !17683)
!17694 = !DILocation(line: 658, column: 50, scope: !17683)
!17695 = !DILocation(line: 658, column: 54, scope: !17683)
!17696 = !DILocation(line: 658, column: 61, scope: !17683)
!17697 = !DILocation(line: 658, column: 65, scope: !17683)
!17698 = !DILocation(line: 658, column: 69, scope: !17683)
!17699 = !DILocation(line: 658, column: 74, scope: !17683)
!17700 = !DILocation(line: 658, column: 72, scope: !17683)
!17701 = !DILocation(line: 658, column: 57, scope: !17683)
!17702 = !DILocation(line: 658, column: 7, scope: !17678)
!17703 = !DILocation(line: 658, column: 82, scope: !17683)
!17704 = !DILocation(line: 658, column: 79, scope: !17683)
!17705 = !DILocation(line: 657, column: 19, scope: !17678)
!17706 = !DILocation(line: 657, column: 2, scope: !17678)
!17707 = distinct !{!17707, !17681, !17708}
!17708 = !DILocation(line: 658, column: 89, scope: !17679)
!17709 = !DILocation(line: 659, column: 2, scope: !17657)
!17710 = !DILocation(line: 660, column: 1, scope: !17657)
!17711 = distinct !DISubprogram(name: "sub_v3_v3", scope: !5013, file: !5013, line: 350, type: !5014, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17712 = !DILocalVariable(name: "r", arg: 1, scope: !17711, file: !5013, line: 350, type: !233)
!17713 = !DILocation(line: 350, column: 30, scope: !17711)
!17714 = !DILocalVariable(name: "a", arg: 2, scope: !17711, file: !5013, line: 350, type: !2195)
!17715 = !DILocation(line: 350, column: 48, scope: !17711)
!17716 = !DILocation(line: 352, column: 10, scope: !17711)
!17717 = !DILocation(line: 352, column: 2, scope: !17711)
!17718 = !DILocation(line: 352, column: 7, scope: !17711)
!17719 = !DILocation(line: 353, column: 10, scope: !17711)
!17720 = !DILocation(line: 353, column: 2, scope: !17711)
!17721 = !DILocation(line: 353, column: 7, scope: !17711)
!17722 = !DILocation(line: 354, column: 10, scope: !17711)
!17723 = !DILocation(line: 354, column: 2, scope: !17711)
!17724 = !DILocation(line: 354, column: 7, scope: !17711)
!17725 = !DILocation(line: 355, column: 1, scope: !17711)
!17726 = distinct !DISubprogram(name: "dynamicPaint_updatePointData", scope: !3, file: !3, line: 3112, type: !17727, scopeLine: 3114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!17727 = !DISubroutineType(types: !17728)
!17728 = !{null, !242, !7, !4416, !233, !207, !207, !207, !207}
!17729 = !DILocalVariable(name: "surface", arg: 1, scope: !17726, file: !3, line: 3112, type: !242)
!17730 = !DILocation(line: 3112, column: 63, scope: !17726)
!17731 = !DILocalVariable(name: "index", arg: 2, scope: !17726, file: !3, line: 3112, type: !7)
!17732 = !DILocation(line: 3112, column: 85, scope: !17726)
!17733 = !DILocalVariable(name: "brush", arg: 3, scope: !17726, file: !3, line: 3112, type: !4416)
!17734 = !DILocation(line: 3112, column: 119, scope: !17726)
!17735 = !DILocalVariable(name: "paint", arg: 4, scope: !17726, file: !3, line: 3113, type: !233)
!17736 = !DILocation(line: 3113, column: 48, scope: !17726)
!17737 = !DILocalVariable(name: "influence", arg: 5, scope: !17726, file: !3, line: 3113, type: !207)
!17738 = !DILocation(line: 3113, column: 64, scope: !17726)
!17739 = !DILocalVariable(name: "depth", arg: 6, scope: !17726, file: !3, line: 3113, type: !207)
!17740 = !DILocation(line: 3113, column: 81, scope: !17726)
!17741 = !DILocalVariable(name: "vel_factor", arg: 7, scope: !17726, file: !3, line: 3113, type: !207)
!17742 = !DILocation(line: 3113, column: 94, scope: !17726)
!17743 = !DILocalVariable(name: "timescale", arg: 8, scope: !17726, file: !3, line: 3113, type: !207)
!17744 = !DILocation(line: 3113, column: 112, scope: !17726)
!17745 = !DILocalVariable(name: "sData", scope: !17726, file: !3, line: 3115, type: !3906)
!17746 = !DILocation(line: 3115, column: 20, scope: !17726)
!17747 = !DILocation(line: 3115, column: 28, scope: !17726)
!17748 = !DILocation(line: 3115, column: 37, scope: !17726)
!17749 = !DILocalVariable(name: "strength", scope: !17726, file: !3, line: 3116, type: !207)
!17750 = !DILocation(line: 3116, column: 8, scope: !17726)
!17751 = !DILocation(line: 3119, column: 15, scope: !17726)
!17752 = !DILocation(line: 3119, column: 24, scope: !17726)
!17753 = !DILocation(line: 3119, column: 12, scope: !17726)
!17754 = !DILocation(line: 3120, column: 11, scope: !17726)
!17755 = !DILocation(line: 3120, column: 20, scope: !17726)
!17756 = !DILocation(line: 3120, column: 8, scope: !17726)
!17757 = !DILocation(line: 3122, column: 13, scope: !17726)
!17758 = !DILocation(line: 3122, column: 25, scope: !17726)
!17759 = !DILocation(line: 3122, column: 32, scope: !17726)
!17760 = !DILocation(line: 3122, column: 23, scope: !17726)
!17761 = !DILocation(line: 3122, column: 11, scope: !17726)
!17762 = !DILocation(line: 3123, column: 2, scope: !17763)
!17763 = distinct !DILexicalBlock(scope: !17764, file: !3, line: 3123, column: 2)
!17764 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 3123, column: 2)
!17765 = !DILocation(line: 3123, column: 2, scope: !17764)
!17766 = !DILocation(line: 3123, column: 2, scope: !17767)
!17767 = distinct !DILexicalBlock(scope: !17763, file: !3, line: 3123, column: 2)
!17768 = !DILocation(line: 3126, column: 6, scope: !17769)
!17769 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 3126, column: 6)
!17770 = !DILocation(line: 3126, column: 13, scope: !17769)
!17771 = !DILocation(line: 3126, column: 19, scope: !17769)
!17772 = !DILocation(line: 3126, column: 6, scope: !17726)
!17773 = !DILocalVariable(name: "coba_res", scope: !17774, file: !3, line: 3127, type: !638)
!17774 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 3126, column: 106)
!17775 = !DILocation(line: 3127, column: 9, scope: !17774)
!17776 = !DILocation(line: 3128, column: 17, scope: !17774)
!17777 = !DILocation(line: 3128, column: 24, scope: !17774)
!17778 = !DILocation(line: 3128, column: 14, scope: !17774)
!17779 = !DILocation(line: 3129, column: 3, scope: !17780)
!17780 = distinct !DILexicalBlock(scope: !17781, file: !3, line: 3129, column: 3)
!17781 = distinct !DILexicalBlock(scope: !17774, file: !3, line: 3129, column: 3)
!17782 = !DILocation(line: 3129, column: 3, scope: !17781)
!17783 = !DILocation(line: 3129, column: 3, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17780, file: !3, line: 3129, column: 3)
!17785 = !DILocation(line: 3131, column: 20, scope: !17786)
!17786 = distinct !DILexicalBlock(scope: !17774, file: !3, line: 3131, column: 7)
!17787 = !DILocation(line: 3131, column: 27, scope: !17786)
!17788 = !DILocation(line: 3131, column: 37, scope: !17786)
!17789 = !DILocation(line: 3131, column: 49, scope: !17786)
!17790 = !DILocation(line: 3131, column: 7, scope: !17786)
!17791 = !DILocation(line: 3131, column: 7, scope: !17774)
!17792 = !DILocation(line: 3132, column: 8, scope: !17793)
!17793 = distinct !DILexicalBlock(scope: !17794, file: !3, line: 3132, column: 8)
!17794 = distinct !DILexicalBlock(scope: !17786, file: !3, line: 3131, column: 60)
!17795 = !DILocation(line: 3132, column: 15, scope: !17793)
!17796 = !DILocation(line: 3132, column: 21, scope: !17793)
!17797 = !DILocation(line: 3132, column: 8, scope: !17794)
!17798 = !DILocation(line: 3133, column: 16, scope: !17799)
!17799 = distinct !DILexicalBlock(scope: !17793, file: !3, line: 3132, column: 50)
!17800 = !DILocation(line: 3133, column: 5, scope: !17799)
!17801 = !DILocation(line: 3133, column: 14, scope: !17799)
!17802 = !DILocation(line: 3134, column: 16, scope: !17799)
!17803 = !DILocation(line: 3134, column: 5, scope: !17799)
!17804 = !DILocation(line: 3134, column: 14, scope: !17799)
!17805 = !DILocation(line: 3135, column: 16, scope: !17799)
!17806 = !DILocation(line: 3135, column: 5, scope: !17799)
!17807 = !DILocation(line: 3135, column: 14, scope: !17799)
!17808 = !DILocation(line: 3136, column: 4, scope: !17799)
!17809 = !DILocation(line: 3137, column: 8, scope: !17810)
!17810 = distinct !DILexicalBlock(scope: !17794, file: !3, line: 3137, column: 8)
!17811 = !DILocation(line: 3137, column: 15, scope: !17810)
!17812 = !DILocation(line: 3137, column: 21, scope: !17810)
!17813 = !DILocation(line: 3137, column: 8, scope: !17794)
!17814 = !DILocation(line: 3138, column: 17, scope: !17810)
!17815 = !DILocation(line: 3138, column: 14, scope: !17810)
!17816 = !DILocation(line: 3138, column: 5, scope: !17810)
!17817 = !DILocation(line: 3139, column: 8, scope: !17818)
!17818 = distinct !DILexicalBlock(scope: !17794, file: !3, line: 3139, column: 8)
!17819 = !DILocation(line: 3139, column: 15, scope: !17818)
!17820 = !DILocation(line: 3139, column: 21, scope: !17818)
!17821 = !DILocation(line: 3139, column: 8, scope: !17794)
!17822 = !DILocation(line: 3140, column: 14, scope: !17818)
!17823 = !DILocation(line: 3140, column: 11, scope: !17818)
!17824 = !DILocation(line: 3140, column: 5, scope: !17818)
!17825 = !DILocation(line: 3141, column: 3, scope: !17794)
!17826 = !DILocation(line: 3142, column: 2, scope: !17774)
!17827 = !DILocation(line: 3145, column: 6, scope: !17828)
!17828 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 3145, column: 6)
!17829 = !DILocation(line: 3145, column: 15, scope: !17828)
!17830 = !DILocation(line: 3145, column: 20, scope: !17828)
!17831 = !DILocation(line: 3145, column: 6, scope: !17726)
!17832 = !DILocalVariable(name: "paintWetness", scope: !17833, file: !3, line: 3147, type: !207)
!17833 = distinct !DILexicalBlock(scope: !17828, file: !3, line: 3145, column: 51)
!17834 = !DILocation(line: 3147, column: 9, scope: !17833)
!17835 = !DILocation(line: 3147, column: 24, scope: !17833)
!17836 = !DILocation(line: 3147, column: 31, scope: !17833)
!17837 = !DILocation(line: 3147, column: 41, scope: !17833)
!17838 = !DILocation(line: 3147, column: 39, scope: !17833)
!17839 = !DILocalVariable(name: "paintAlpha", scope: !17833, file: !3, line: 3148, type: !207)
!17840 = !DILocation(line: 3148, column: 9, scope: !17833)
!17841 = !DILocation(line: 3148, column: 22, scope: !17833)
!17842 = !DILocation(line: 3150, column: 31, scope: !17833)
!17843 = !DILocation(line: 3150, column: 40, scope: !17833)
!17844 = !DILocation(line: 3150, column: 47, scope: !17833)
!17845 = !DILocation(line: 3150, column: 54, scope: !17833)
!17846 = !DILocation(line: 3150, column: 61, scope: !17833)
!17847 = !DILocation(line: 3150, column: 3, scope: !17833)
!17848 = !DILocation(line: 3152, column: 2, scope: !17833)
!17849 = !DILocation(line: 3154, column: 11, scope: !17850)
!17850 = distinct !DILexicalBlock(scope: !17828, file: !3, line: 3154, column: 11)
!17851 = !DILocation(line: 3154, column: 20, scope: !17850)
!17852 = !DILocation(line: 3154, column: 25, scope: !17850)
!17853 = !DILocation(line: 3154, column: 11, scope: !17828)
!17854 = !DILocalVariable(name: "value", scope: !17855, file: !3, line: 3155, type: !233)
!17855 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 3154, column: 59)
!17856 = !DILocation(line: 3155, column: 10, scope: !17855)
!17857 = !DILocation(line: 3155, column: 27, scope: !17855)
!17858 = !DILocation(line: 3155, column: 34, scope: !17855)
!17859 = !DILocation(line: 3155, column: 18, scope: !17855)
!17860 = !DILocation(line: 3157, column: 7, scope: !17861)
!17861 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 3157, column: 7)
!17862 = !DILocation(line: 3157, column: 16, scope: !17861)
!17863 = !DILocation(line: 3157, column: 22, scope: !17861)
!17864 = !DILocation(line: 3157, column: 7, scope: !17855)
!17865 = !DILocation(line: 3158, column: 12, scope: !17861)
!17866 = !DILocation(line: 3158, column: 18, scope: !17861)
!17867 = !DILocation(line: 3158, column: 27, scope: !17861)
!17868 = !DILocation(line: 3158, column: 25, scope: !17861)
!17869 = !DILocation(line: 3158, column: 10, scope: !17861)
!17870 = !DILocation(line: 3158, column: 4, scope: !17861)
!17871 = !DILocation(line: 3160, column: 7, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 3160, column: 7)
!17873 = !DILocation(line: 3160, column: 16, scope: !17872)
!17874 = !DILocation(line: 3160, column: 7, scope: !17855)
!17875 = !DILocation(line: 3161, column: 4, scope: !17876)
!17876 = distinct !DILexicalBlock(scope: !17877, file: !3, line: 3161, column: 4)
!17877 = distinct !DILexicalBlock(scope: !17878, file: !3, line: 3161, column: 4)
!17878 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 3160, column: 29)
!17879 = !DILocation(line: 3161, column: 4, scope: !17877)
!17880 = !DILocation(line: 3161, column: 4, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17876, file: !3, line: 3161, column: 4)
!17882 = !DILocation(line: 3162, column: 3, scope: !17878)
!17883 = !DILocation(line: 3164, column: 7, scope: !17884)
!17884 = distinct !DILexicalBlock(scope: !17855, file: !3, line: 3164, column: 7)
!17885 = !DILocation(line: 3164, column: 14, scope: !17884)
!17886 = !DILocation(line: 3164, column: 20, scope: !17884)
!17887 = !DILocation(line: 3164, column: 7, scope: !17855)
!17888 = !DILocation(line: 3165, column: 28, scope: !17889)
!17889 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 3164, column: 40)
!17890 = !DILocation(line: 3165, column: 26, scope: !17889)
!17891 = !DILocation(line: 3165, column: 4, scope: !17889)
!17892 = !DILocation(line: 3165, column: 10, scope: !17889)
!17893 = !DILocation(line: 3165, column: 17, scope: !17889)
!17894 = !DILocation(line: 3166, column: 8, scope: !17895)
!17895 = distinct !DILexicalBlock(scope: !17889, file: !3, line: 3166, column: 8)
!17896 = !DILocation(line: 3166, column: 14, scope: !17895)
!17897 = !DILocation(line: 3166, column: 21, scope: !17895)
!17898 = !DILocation(line: 3166, column: 8, scope: !17889)
!17899 = !DILocation(line: 3166, column: 29, scope: !17895)
!17900 = !DILocation(line: 3166, column: 35, scope: !17895)
!17901 = !DILocation(line: 3166, column: 42, scope: !17895)
!17902 = !DILocation(line: 3167, column: 3, scope: !17889)
!17903 = !DILocation(line: 3169, column: 8, scope: !17904)
!17904 = distinct !DILexicalBlock(scope: !17905, file: !3, line: 3169, column: 8)
!17905 = distinct !DILexicalBlock(scope: !17884, file: !3, line: 3168, column: 8)
!17906 = !DILocation(line: 3169, column: 14, scope: !17904)
!17907 = !DILocation(line: 3169, column: 23, scope: !17904)
!17908 = !DILocation(line: 3169, column: 21, scope: !17904)
!17909 = !DILocation(line: 3169, column: 8, scope: !17905)
!17910 = !DILocation(line: 3169, column: 45, scope: !17904)
!17911 = !DILocation(line: 3169, column: 30, scope: !17904)
!17912 = !DILocation(line: 3169, column: 36, scope: !17904)
!17913 = !DILocation(line: 3169, column: 43, scope: !17904)
!17914 = !DILocation(line: 3171, column: 2, scope: !17855)
!17915 = !DILocation(line: 3173, column: 11, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17850, file: !3, line: 3173, column: 11)
!17917 = !DILocation(line: 3173, column: 20, scope: !17916)
!17918 = !DILocation(line: 3173, column: 25, scope: !17916)
!17919 = !DILocation(line: 3173, column: 11, scope: !17850)
!17920 = !DILocalVariable(name: "value", scope: !17921, file: !3, line: 3174, type: !233)
!17921 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 3173, column: 57)
!17922 = !DILocation(line: 3174, column: 10, scope: !17921)
!17923 = !DILocation(line: 3174, column: 27, scope: !17921)
!17924 = !DILocation(line: 3174, column: 34, scope: !17921)
!17925 = !DILocation(line: 3174, column: 18, scope: !17921)
!17926 = !DILocation(line: 3176, column: 7, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17921, file: !3, line: 3176, column: 7)
!17928 = !DILocation(line: 3176, column: 14, scope: !17927)
!17929 = !DILocation(line: 3176, column: 20, scope: !17927)
!17930 = !DILocation(line: 3176, column: 7, scope: !17921)
!17931 = !DILocation(line: 3177, column: 28, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17927, file: !3, line: 3176, column: 40)
!17933 = !DILocation(line: 3177, column: 26, scope: !17932)
!17934 = !DILocation(line: 3177, column: 4, scope: !17932)
!17935 = !DILocation(line: 3177, column: 10, scope: !17932)
!17936 = !DILocation(line: 3177, column: 17, scope: !17932)
!17937 = !DILocation(line: 3178, column: 8, scope: !17938)
!17938 = distinct !DILexicalBlock(scope: !17932, file: !3, line: 3178, column: 8)
!17939 = !DILocation(line: 3178, column: 14, scope: !17938)
!17940 = !DILocation(line: 3178, column: 21, scope: !17938)
!17941 = !DILocation(line: 3178, column: 8, scope: !17932)
!17942 = !DILocation(line: 3178, column: 29, scope: !17938)
!17943 = !DILocation(line: 3178, column: 35, scope: !17938)
!17944 = !DILocation(line: 3178, column: 42, scope: !17938)
!17945 = !DILocation(line: 3179, column: 3, scope: !17932)
!17946 = !DILocation(line: 3181, column: 8, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17948, file: !3, line: 3181, column: 8)
!17948 = distinct !DILexicalBlock(scope: !17927, file: !3, line: 3180, column: 8)
!17949 = !DILocation(line: 3181, column: 14, scope: !17947)
!17950 = !DILocation(line: 3181, column: 23, scope: !17947)
!17951 = !DILocation(line: 3181, column: 21, scope: !17947)
!17952 = !DILocation(line: 3181, column: 8, scope: !17948)
!17953 = !DILocation(line: 3181, column: 48, scope: !17947)
!17954 = !DILocation(line: 3181, column: 33, scope: !17947)
!17955 = !DILocation(line: 3181, column: 39, scope: !17947)
!17956 = !DILocation(line: 3181, column: 46, scope: !17947)
!17957 = !DILocation(line: 3183, column: 2, scope: !17921)
!17958 = !DILocation(line: 3185, column: 11, scope: !17959)
!17959 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 3185, column: 11)
!17960 = !DILocation(line: 3185, column: 20, scope: !17959)
!17961 = !DILocation(line: 3185, column: 25, scope: !17959)
!17962 = !DILocation(line: 3185, column: 11, scope: !17916)
!17963 = !DILocation(line: 3186, column: 7, scope: !17964)
!17964 = distinct !DILexicalBlock(scope: !17965, file: !3, line: 3186, column: 7)
!17965 = distinct !DILexicalBlock(scope: !17959, file: !3, line: 3185, column: 55)
!17966 = !DILocation(line: 3186, column: 14, scope: !17964)
!17967 = !DILocation(line: 3186, column: 7, scope: !17965)
!17968 = !DILocation(line: 3187, column: 4, scope: !17969)
!17969 = distinct !DILexicalBlock(scope: !17970, file: !3, line: 3187, column: 4)
!17970 = distinct !DILexicalBlock(scope: !17971, file: !3, line: 3187, column: 4)
!17971 = distinct !DILexicalBlock(scope: !17964, file: !3, line: 3186, column: 26)
!17972 = !DILocation(line: 3187, column: 4, scope: !17970)
!17973 = !DILocation(line: 3187, column: 4, scope: !17974)
!17974 = distinct !DILexicalBlock(scope: !17969, file: !3, line: 3187, column: 4)
!17975 = !DILocation(line: 3188, column: 3, scope: !17971)
!17976 = !DILocation(line: 3190, column: 50, scope: !17965)
!17977 = !DILocation(line: 3190, column: 57, scope: !17965)
!17978 = !DILocation(line: 3190, column: 32, scope: !17965)
!17979 = !DILocation(line: 3190, column: 68, scope: !17965)
!17980 = !DILocation(line: 3190, column: 31, scope: !17965)
!17981 = !DILocation(line: 3191, column: 30, scope: !17965)
!17982 = !DILocation(line: 3191, column: 44, scope: !17965)
!17983 = !DILocation(line: 3191, column: 42, scope: !17965)
!17984 = !DILocation(line: 3190, column: 3, scope: !17965)
!17985 = !DILocation(line: 3192, column: 2, scope: !17965)
!17986 = !DILocation(line: 3195, column: 6, scope: !17987)
!17987 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 3195, column: 6)
!17988 = !DILocation(line: 3195, column: 13, scope: !17987)
!17989 = !DILocation(line: 3195, column: 20, scope: !17987)
!17990 = !DILocation(line: 3195, column: 6, scope: !17726)
!17991 = !DILocation(line: 3196, column: 50, scope: !17992)
!17992 = distinct !DILexicalBlock(scope: !17987, file: !3, line: 3195, column: 36)
!17993 = !DILocation(line: 3196, column: 3, scope: !17992)
!17994 = !DILocation(line: 3196, column: 10, scope: !17992)
!17995 = !DILocation(line: 3196, column: 17, scope: !17992)
!17996 = !DILocation(line: 3196, column: 32, scope: !17992)
!17997 = !DILocation(line: 3196, column: 38, scope: !17992)
!17998 = !DILocation(line: 3196, column: 42, scope: !17992)
!17999 = !DILocation(line: 3196, column: 47, scope: !17992)
!18000 = !DILocation(line: 3197, column: 2, scope: !17992)
!18001 = !DILocation(line: 3198, column: 1, scope: !17726)
!18002 = distinct !DISubprogram(name: "dynamicPaint_mixPaintColors", scope: !3, file: !3, line: 3013, type: !18003, scopeLine: 3015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18003 = !DISubroutineType(types: !18004)
!18004 = !{null, !242, !135, !135, !2195, !233, !233, !233}
!18005 = !DILocalVariable(name: "surface", arg: 1, scope: !18002, file: !3, line: 3013, type: !242)
!18006 = !DILocation(line: 3013, column: 62, scope: !18002)
!18007 = !DILocalVariable(name: "index", arg: 2, scope: !18002, file: !3, line: 3013, type: !135)
!18008 = !DILocation(line: 3013, column: 75, scope: !18002)
!18009 = !DILocalVariable(name: "paintFlags", arg: 3, scope: !18002, file: !3, line: 3013, type: !135)
!18010 = !DILocation(line: 3013, column: 86, scope: !18002)
!18011 = !DILocalVariable(name: "paintColor", arg: 4, scope: !18002, file: !3, line: 3014, type: !2195)
!18012 = !DILocation(line: 3014, column: 53, scope: !18002)
!18013 = !DILocalVariable(name: "paintAlpha", arg: 5, scope: !18002, file: !3, line: 3014, type: !233)
!18014 = !DILocation(line: 3014, column: 75, scope: !18002)
!18015 = !DILocalVariable(name: "paintWetness", arg: 6, scope: !18002, file: !3, line: 3014, type: !233)
!18016 = !DILocation(line: 3014, column: 94, scope: !18002)
!18017 = !DILocalVariable(name: "timescale", arg: 7, scope: !18002, file: !3, line: 3014, type: !233)
!18018 = !DILocation(line: 3014, column: 115, scope: !18002)
!18019 = !DILocalVariable(name: "pPoint", scope: !18002, file: !3, line: 3016, type: !222)
!18020 = !DILocation(line: 3016, column: 14, scope: !18002)
!18021 = !DILocation(line: 3016, column: 39, scope: !18002)
!18022 = !DILocation(line: 3016, column: 48, scope: !18002)
!18023 = !DILocation(line: 3016, column: 54, scope: !18002)
!18024 = !DILocation(line: 3016, column: 25, scope: !18002)
!18025 = !DILocation(line: 3016, column: 65, scope: !18002)
!18026 = !DILocation(line: 3016, column: 24, scope: !18002)
!18027 = !DILocation(line: 3019, column: 8, scope: !18028)
!18028 = distinct !DILexicalBlock(scope: !18002, file: !3, line: 3019, column: 6)
!18029 = !DILocation(line: 3019, column: 19, scope: !18028)
!18030 = !DILocation(line: 3019, column: 6, scope: !18002)
!18031 = !DILocalVariable(name: "mix", scope: !18032, file: !3, line: 3020, type: !638)
!18032 = distinct !DILexicalBlock(scope: !18028, file: !3, line: 3019, column: 40)
!18033 = !DILocation(line: 3020, column: 9, scope: !18032)
!18034 = !DILocalVariable(name: "temp_alpha", scope: !18032, file: !3, line: 3021, type: !207)
!18035 = !DILocation(line: 3021, column: 9, scope: !18032)
!18036 = !DILocation(line: 3021, column: 24, scope: !18032)
!18037 = !DILocation(line: 3021, column: 23, scope: !18032)
!18038 = !DILocation(line: 3021, column: 40, scope: !18032)
!18039 = !DILocation(line: 3021, column: 51, scope: !18032)
!18040 = !DILocation(line: 3021, column: 39, scope: !18032)
!18041 = !DILocation(line: 3021, column: 86, scope: !18032)
!18042 = !DILocation(line: 3021, column: 85, scope: !18032)
!18043 = !DILocation(line: 3021, column: 36, scope: !18032)
!18044 = !DILocation(line: 3024, column: 15, scope: !18032)
!18045 = !DILocation(line: 3024, column: 23, scope: !18032)
!18046 = !DILocation(line: 3024, column: 32, scope: !18032)
!18047 = !DILocation(line: 3024, column: 40, scope: !18032)
!18048 = !DILocation(line: 3024, column: 49, scope: !18032)
!18049 = !DILocation(line: 3024, column: 61, scope: !18032)
!18050 = !DILocation(line: 3024, column: 73, scope: !18032)
!18051 = !DILocation(line: 3024, column: 3, scope: !18032)
!18052 = !DILocation(line: 3025, column: 14, scope: !18032)
!18053 = !DILocation(line: 3025, column: 22, scope: !18032)
!18054 = !DILocation(line: 3025, column: 31, scope: !18032)
!18055 = !DILocation(line: 3025, column: 3, scope: !18032)
!18056 = !DILocation(line: 3028, column: 7, scope: !18057)
!18057 = distinct !DILexicalBlock(scope: !18032, file: !3, line: 3028, column: 7)
!18058 = !DILocation(line: 3028, column: 18, scope: !18057)
!18059 = !DILocation(line: 3028, column: 7, scope: !18032)
!18060 = !DILocation(line: 3030, column: 8, scope: !18061)
!18061 = distinct !DILexicalBlock(scope: !18062, file: !3, line: 3030, column: 8)
!18062 = distinct !DILexicalBlock(scope: !18057, file: !3, line: 3028, column: 42)
!18063 = !DILocation(line: 3030, column: 16, scope: !18061)
!18064 = !DILocation(line: 3030, column: 28, scope: !18061)
!18065 = !DILocation(line: 3030, column: 27, scope: !18061)
!18066 = !DILocation(line: 3030, column: 24, scope: !18061)
!18067 = !DILocation(line: 3030, column: 8, scope: !18062)
!18068 = !DILocation(line: 3030, column: 61, scope: !18061)
!18069 = !DILocation(line: 3030, column: 60, scope: !18061)
!18070 = !DILocation(line: 3030, column: 41, scope: !18061)
!18071 = !DILocation(line: 3030, column: 49, scope: !18061)
!18072 = !DILocation(line: 3030, column: 57, scope: !18061)
!18073 = !DILocation(line: 3031, column: 8, scope: !18074)
!18074 = distinct !DILexicalBlock(scope: !18062, file: !3, line: 3031, column: 8)
!18075 = !DILocation(line: 3031, column: 16, scope: !18074)
!18076 = !DILocation(line: 3031, column: 28, scope: !18074)
!18077 = !DILocation(line: 3031, column: 27, scope: !18074)
!18078 = !DILocation(line: 3031, column: 24, scope: !18074)
!18079 = !DILocation(line: 3031, column: 8, scope: !18062)
!18080 = !DILocation(line: 3031, column: 63, scope: !18074)
!18081 = !DILocation(line: 3031, column: 62, scope: !18074)
!18082 = !DILocation(line: 3031, column: 43, scope: !18074)
!18083 = !DILocation(line: 3031, column: 51, scope: !18074)
!18084 = !DILocation(line: 3031, column: 59, scope: !18074)
!18085 = !DILocation(line: 3032, column: 3, scope: !18062)
!18086 = !DILocalVariable(name: "wetness", scope: !18087, file: !3, line: 3034, type: !207)
!18087 = distinct !DILexicalBlock(scope: !18057, file: !3, line: 3033, column: 8)
!18088 = !DILocation(line: 3034, column: 10, scope: !18087)
!18089 = !DILocation(line: 3034, column: 22, scope: !18087)
!18090 = !DILocation(line: 3034, column: 21, scope: !18087)
!18091 = !DILocation(line: 3035, column: 4, scope: !18092)
!18092 = distinct !DILexicalBlock(scope: !18093, file: !3, line: 3035, column: 4)
!18093 = distinct !DILexicalBlock(scope: !18087, file: !3, line: 3035, column: 4)
!18094 = !DILocation(line: 3035, column: 4, scope: !18093)
!18095 = !DILocation(line: 3035, column: 4, scope: !18096)
!18096 = distinct !DILexicalBlock(scope: !18092, file: !3, line: 3035, column: 4)
!18097 = !DILocation(line: 3036, column: 22, scope: !18087)
!18098 = !DILocation(line: 3036, column: 4, scope: !18087)
!18099 = !DILocation(line: 3036, column: 12, scope: !18087)
!18100 = !DILocation(line: 3036, column: 20, scope: !18087)
!18101 = !DILocation(line: 3037, column: 22, scope: !18087)
!18102 = !DILocation(line: 3037, column: 30, scope: !18087)
!18103 = !DILocation(line: 3037, column: 48, scope: !18087)
!18104 = !DILocation(line: 3037, column: 46, scope: !18087)
!18105 = !DILocation(line: 3037, column: 38, scope: !18087)
!18106 = !DILocation(line: 3037, column: 59, scope: !18087)
!18107 = !DILocation(line: 3037, column: 57, scope: !18087)
!18108 = !DILocation(line: 3037, column: 4, scope: !18087)
!18109 = !DILocation(line: 3037, column: 12, scope: !18087)
!18110 = !DILocation(line: 3037, column: 20, scope: !18087)
!18111 = !DILocation(line: 3040, column: 7, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !18032, file: !3, line: 3040, column: 7)
!18113 = !DILocation(line: 3040, column: 15, scope: !18112)
!18114 = !DILocation(line: 3040, column: 23, scope: !18112)
!18115 = !DILocation(line: 3040, column: 7, scope: !18032)
!18116 = !DILocation(line: 3040, column: 38, scope: !18112)
!18117 = !DILocation(line: 3040, column: 46, scope: !18112)
!18118 = !DILocation(line: 3040, column: 54, scope: !18112)
!18119 = !DILocation(line: 3042, column: 3, scope: !18032)
!18120 = !DILocation(line: 3042, column: 11, scope: !18032)
!18121 = !DILocation(line: 3042, column: 17, scope: !18032)
!18122 = !DILocation(line: 3043, column: 2, scope: !18032)
!18123 = !DILocalVariable(name: "a_ratio", scope: !18124, file: !3, line: 3046, type: !207)
!18124 = distinct !DILexicalBlock(scope: !18028, file: !3, line: 3045, column: 7)
!18125 = !DILocation(line: 3046, column: 9, scope: !18124)
!18126 = !DILocalVariable(name: "a_highest", scope: !18124, file: !3, line: 3046, type: !207)
!18127 = !DILocation(line: 3046, column: 18, scope: !18124)
!18128 = !DILocalVariable(name: "wetness", scope: !18124, file: !3, line: 3047, type: !207)
!18129 = !DILocation(line: 3047, column: 9, scope: !18124)
!18130 = !DILocalVariable(name: "invFact", scope: !18124, file: !3, line: 3048, type: !207)
!18131 = !DILocation(line: 3048, column: 9, scope: !18124)
!18132 = !DILocation(line: 3048, column: 28, scope: !18124)
!18133 = !DILocation(line: 3048, column: 27, scope: !18124)
!18134 = !DILocation(line: 3048, column: 24, scope: !18124)
!18135 = !DILocation(line: 3054, column: 7, scope: !18136)
!18136 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3054, column: 7)
!18137 = !DILocation(line: 3054, column: 18, scope: !18136)
!18138 = !DILocation(line: 3054, column: 7, scope: !18124)
!18139 = !DILocation(line: 3055, column: 17, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !18136, file: !3, line: 3054, column: 42)
!18141 = !DILocation(line: 3055, column: 25, scope: !18140)
!18142 = !DILocation(line: 3055, column: 35, scope: !18140)
!18143 = !DILocation(line: 3055, column: 43, scope: !18140)
!18144 = !DILocation(line: 3055, column: 33, scope: !18140)
!18145 = !DILocation(line: 3055, column: 16, scope: !18140)
!18146 = !DILocation(line: 3055, column: 52, scope: !18140)
!18147 = !DILocation(line: 3055, column: 60, scope: !18140)
!18148 = !DILocation(line: 3055, column: 70, scope: !18140)
!18149 = !DILocation(line: 3055, column: 78, scope: !18140)
!18150 = !DILocation(line: 3055, column: 14, scope: !18140)
!18151 = !DILocation(line: 3056, column: 8, scope: !18152)
!18152 = distinct !DILexicalBlock(scope: !18140, file: !3, line: 3056, column: 8)
!18153 = !DILocation(line: 3056, column: 20, scope: !18152)
!18154 = !DILocation(line: 3056, column: 18, scope: !18152)
!18155 = !DILocation(line: 3056, column: 8, scope: !18140)
!18156 = !DILocation(line: 3057, column: 15, scope: !18157)
!18157 = distinct !DILexicalBlock(scope: !18152, file: !3, line: 3056, column: 29)
!18158 = !DILocation(line: 3057, column: 25, scope: !18157)
!18159 = !DILocation(line: 3057, column: 23, scope: !18157)
!18160 = !DILocation(line: 3057, column: 13, scope: !18157)
!18161 = !DILocation(line: 3059, column: 24, scope: !18157)
!18162 = !DILocation(line: 3059, column: 5, scope: !18157)
!18163 = !DILocation(line: 3059, column: 13, scope: !18157)
!18164 = !DILocation(line: 3059, column: 21, scope: !18157)
!18165 = !DILocation(line: 3060, column: 22, scope: !18157)
!18166 = !DILocation(line: 3060, column: 5, scope: !18157)
!18167 = !DILocation(line: 3060, column: 13, scope: !18157)
!18168 = !DILocation(line: 3060, column: 19, scope: !18157)
!18169 = !DILocation(line: 3061, column: 4, scope: !18157)
!18170 = !DILocation(line: 3062, column: 3, scope: !18140)
!18171 = !DILocation(line: 3064, column: 25, scope: !18172)
!18172 = distinct !DILexicalBlock(scope: !18136, file: !3, line: 3063, column: 8)
!18173 = !DILocation(line: 3064, column: 24, scope: !18172)
!18174 = !DILocation(line: 3064, column: 41, scope: !18172)
!18175 = !DILocation(line: 3064, column: 40, scope: !18172)
!18176 = !DILocation(line: 3064, column: 37, scope: !18172)
!18177 = !DILocation(line: 3064, column: 4, scope: !18172)
!18178 = !DILocation(line: 3064, column: 12, scope: !18172)
!18179 = !DILocation(line: 3064, column: 20, scope: !18172)
!18180 = !DILocation(line: 3065, column: 8, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 3065, column: 8)
!18182 = !DILocation(line: 3065, column: 16, scope: !18181)
!18183 = !DILocation(line: 3065, column: 24, scope: !18181)
!18184 = !DILocation(line: 3065, column: 8, scope: !18172)
!18185 = !DILocation(line: 3065, column: 32, scope: !18181)
!18186 = !DILocation(line: 3065, column: 40, scope: !18181)
!18187 = !DILocation(line: 3065, column: 48, scope: !18181)
!18188 = !DILocation(line: 3066, column: 23, scope: !18172)
!18189 = !DILocation(line: 3066, column: 22, scope: !18172)
!18190 = !DILocation(line: 3066, column: 39, scope: !18172)
!18191 = !DILocation(line: 3066, column: 38, scope: !18172)
!18192 = !DILocation(line: 3066, column: 35, scope: !18172)
!18193 = !DILocation(line: 3066, column: 4, scope: !18172)
!18194 = !DILocation(line: 3066, column: 12, scope: !18172)
!18195 = !DILocation(line: 3066, column: 18, scope: !18172)
!18196 = !DILocation(line: 3067, column: 8, scope: !18197)
!18197 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 3067, column: 8)
!18198 = !DILocation(line: 3067, column: 16, scope: !18197)
!18199 = !DILocation(line: 3067, column: 22, scope: !18197)
!18200 = !DILocation(line: 3067, column: 8, scope: !18172)
!18201 = !DILocation(line: 3067, column: 30, scope: !18197)
!18202 = !DILocation(line: 3067, column: 38, scope: !18197)
!18203 = !DILocation(line: 3067, column: 44, scope: !18197)
!18204 = !DILocation(line: 3070, column: 23, scope: !18124)
!18205 = !DILocation(line: 3070, column: 22, scope: !18124)
!18206 = !DILocation(line: 3070, column: 19, scope: !18124)
!18207 = !DILocation(line: 3070, column: 40, scope: !18124)
!18208 = !DILocation(line: 3070, column: 48, scope: !18124)
!18209 = !DILocation(line: 3070, column: 38, scope: !18124)
!18210 = !DILocation(line: 3070, column: 11, scope: !18124)
!18211 = !DILocation(line: 3071, column: 7, scope: !18212)
!18212 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 3071, column: 7)
!18213 = !DILocation(line: 3071, column: 15, scope: !18212)
!18214 = !DILocation(line: 3071, column: 25, scope: !18212)
!18215 = !DILocation(line: 3071, column: 23, scope: !18212)
!18216 = !DILocation(line: 3071, column: 7, scope: !18124)
!18217 = !DILocation(line: 3071, column: 52, scope: !18212)
!18218 = !DILocation(line: 3071, column: 34, scope: !18212)
!18219 = !DILocation(line: 3071, column: 42, scope: !18212)
!18220 = !DILocation(line: 3071, column: 50, scope: !18212)
!18221 = !DILocation(line: 3073, column: 1, scope: !18002)
!18222 = distinct !DISubprogram(name: "dynamicPaint_mixWaveHeight", scope: !3, file: !3, line: 3076, type: !18223, scopeLine: 3077, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18223 = !DISubroutineType(types: !18224)
!18224 = !{null, !234, !4416, !207}
!18225 = !DILocalVariable(name: "wPoint", arg: 1, scope: !18222, file: !3, line: 3076, type: !234)
!18226 = !DILocation(line: 3076, column: 56, scope: !18222)
!18227 = !DILocalVariable(name: "brush", arg: 2, scope: !18222, file: !3, line: 3076, type: !4416)
!18228 = !DILocation(line: 3076, column: 91, scope: !18222)
!18229 = !DILocalVariable(name: "isect_height", arg: 3, scope: !18222, file: !3, line: 3076, type: !207)
!18230 = !DILocation(line: 3076, column: 104, scope: !18222)
!18231 = !DILocalVariable(name: "isect_change", scope: !18222, file: !3, line: 3078, type: !207)
!18232 = !DILocation(line: 3078, column: 8, scope: !18222)
!18233 = !DILocation(line: 3078, column: 23, scope: !18222)
!18234 = !DILocation(line: 3078, column: 38, scope: !18222)
!18235 = !DILocation(line: 3078, column: 46, scope: !18222)
!18236 = !DILocation(line: 3078, column: 36, scope: !18222)
!18237 = !DILocalVariable(name: "hit", scope: !18222, file: !3, line: 3079, type: !135)
!18238 = !DILocation(line: 3079, column: 6, scope: !18222)
!18239 = !DILocation(line: 3081, column: 24, scope: !18222)
!18240 = !DILocation(line: 3081, column: 2, scope: !18222)
!18241 = !DILocation(line: 3081, column: 10, scope: !18222)
!18242 = !DILocation(line: 3081, column: 22, scope: !18222)
!18243 = !DILocation(line: 3082, column: 2, scope: !18222)
!18244 = !DILocation(line: 3082, column: 10, scope: !18222)
!18245 = !DILocation(line: 3082, column: 16, scope: !18222)
!18246 = !DILocation(line: 3084, column: 18, scope: !18222)
!18247 = !DILocation(line: 3084, column: 25, scope: !18222)
!18248 = !DILocation(line: 3084, column: 15, scope: !18222)
!18249 = !DILocation(line: 3087, column: 6, scope: !18250)
!18250 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 3087, column: 6)
!18251 = !DILocation(line: 3087, column: 13, scope: !18250)
!18252 = !DILocation(line: 3087, column: 25, scope: !18250)
!18253 = !DILocation(line: 3087, column: 32, scope: !18250)
!18254 = !DILocation(line: 3087, column: 35, scope: !18250)
!18255 = !DILocation(line: 3087, column: 43, scope: !18250)
!18256 = !DILocation(line: 3087, column: 52, scope: !18250)
!18257 = !DILocation(line: 3087, column: 50, scope: !18250)
!18258 = !DILocation(line: 3087, column: 6, scope: !18222)
!18259 = !DILocation(line: 3088, column: 7, scope: !18250)
!18260 = !DILocation(line: 3088, column: 3, scope: !18250)
!18261 = !DILocation(line: 3089, column: 11, scope: !18262)
!18262 = distinct !DILexicalBlock(scope: !18250, file: !3, line: 3089, column: 11)
!18263 = !DILocation(line: 3089, column: 18, scope: !18262)
!18264 = !DILocation(line: 3089, column: 30, scope: !18262)
!18265 = !DILocation(line: 3089, column: 37, scope: !18262)
!18266 = !DILocation(line: 3089, column: 40, scope: !18262)
!18267 = !DILocation(line: 3089, column: 48, scope: !18262)
!18268 = !DILocation(line: 3089, column: 57, scope: !18262)
!18269 = !DILocation(line: 3089, column: 55, scope: !18262)
!18270 = !DILocation(line: 3089, column: 11, scope: !18250)
!18271 = !DILocation(line: 3090, column: 7, scope: !18262)
!18272 = !DILocation(line: 3090, column: 3, scope: !18262)
!18273 = !DILocation(line: 3092, column: 6, scope: !18274)
!18274 = distinct !DILexicalBlock(scope: !18222, file: !3, line: 3092, column: 6)
!18275 = !DILocation(line: 3092, column: 6, scope: !18222)
!18276 = !DILocation(line: 3093, column: 7, scope: !18277)
!18277 = distinct !DILexicalBlock(scope: !18278, file: !3, line: 3093, column: 7)
!18278 = distinct !DILexicalBlock(scope: !18274, file: !3, line: 3092, column: 11)
!18279 = !DILocation(line: 3093, column: 14, scope: !18277)
!18280 = !DILocation(line: 3093, column: 24, scope: !18277)
!18281 = !DILocation(line: 3093, column: 7, scope: !18278)
!18282 = !DILocation(line: 3094, column: 21, scope: !18283)
!18283 = distinct !DILexicalBlock(scope: !18277, file: !3, line: 3093, column: 51)
!18284 = !DILocation(line: 3094, column: 4, scope: !18283)
!18285 = !DILocation(line: 3094, column: 12, scope: !18283)
!18286 = !DILocation(line: 3094, column: 19, scope: !18283)
!18287 = !DILocation(line: 3095, column: 4, scope: !18283)
!18288 = !DILocation(line: 3095, column: 12, scope: !18283)
!18289 = !DILocation(line: 3095, column: 18, scope: !18283)
!18290 = !DILocation(line: 3096, column: 4, scope: !18283)
!18291 = !DILocation(line: 3096, column: 12, scope: !18283)
!18292 = !DILocation(line: 3096, column: 21, scope: !18283)
!18293 = !DILocation(line: 3097, column: 3, scope: !18283)
!18294 = !DILocation(line: 3098, column: 12, scope: !18295)
!18295 = distinct !DILexicalBlock(scope: !18277, file: !3, line: 3098, column: 12)
!18296 = !DILocation(line: 3098, column: 19, scope: !18295)
!18297 = !DILocation(line: 3098, column: 29, scope: !18295)
!18298 = !DILocation(line: 3098, column: 12, scope: !18277)
!18299 = !DILocation(line: 3099, column: 23, scope: !18295)
!18300 = !DILocation(line: 3099, column: 4, scope: !18295)
!18301 = !DILocation(line: 3099, column: 12, scope: !18295)
!18302 = !DILocation(line: 3099, column: 21, scope: !18295)
!18303 = !DILocation(line: 3100, column: 12, scope: !18304)
!18304 = distinct !DILexicalBlock(scope: !18295, file: !3, line: 3100, column: 12)
!18305 = !DILocation(line: 3100, column: 19, scope: !18304)
!18306 = !DILocation(line: 3100, column: 29, scope: !18304)
!18307 = !DILocation(line: 3100, column: 12, scope: !18295)
!18308 = !DILocation(line: 3101, column: 4, scope: !18304)
!18309 = !DILocation(line: 3101, column: 12, scope: !18304)
!18310 = !DILocation(line: 3101, column: 18, scope: !18304)
!18311 = !DILocation(line: 3102, column: 12, scope: !18312)
!18312 = distinct !DILexicalBlock(scope: !18304, file: !3, line: 3102, column: 12)
!18313 = !DILocation(line: 3102, column: 19, scope: !18312)
!18314 = !DILocation(line: 3102, column: 29, scope: !18312)
!18315 = !DILocation(line: 3102, column: 12, scope: !18304)
!18316 = !DILocation(line: 3103, column: 8, scope: !18317)
!18317 = distinct !DILexicalBlock(scope: !18318, file: !3, line: 3103, column: 8)
!18318 = distinct !DILexicalBlock(scope: !18312, file: !3, line: 3102, column: 57)
!18319 = !DILocation(line: 3103, column: 21, scope: !18317)
!18320 = !DILocation(line: 3103, column: 8, scope: !18318)
!18321 = !DILocation(line: 3104, column: 23, scope: !18317)
!18322 = !DILocation(line: 3104, column: 38, scope: !18317)
!18323 = !DILocation(line: 3104, column: 45, scope: !18317)
!18324 = !DILocation(line: 3104, column: 36, scope: !18317)
!18325 = !DILocation(line: 3104, column: 5, scope: !18317)
!18326 = !DILocation(line: 3104, column: 13, scope: !18317)
!18327 = !DILocation(line: 3104, column: 20, scope: !18317)
!18328 = !DILocation(line: 3105, column: 3, scope: !18318)
!18329 = !DILocation(line: 3106, column: 2, scope: !18278)
!18330 = !DILocation(line: 3107, column: 1, scope: !18222)
!18331 = distinct !DISubprogram(name: "dynamicPaint_brushObjectCalculateVelocity", scope: !3, file: !3, line: 3277, type: !18332, scopeLine: 3278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18332 = !DISubroutineType(types: !18333)
!18333 = !{null, !4204, !3426, !201, !207}
!18334 = !DILocalVariable(name: "scene", arg: 1, scope: !18331, file: !3, line: 3277, type: !4204)
!18335 = !DILocation(line: 3277, column: 62, scope: !18331)
!18336 = !DILocalVariable(name: "ob", arg: 2, scope: !18331, file: !3, line: 3277, type: !3426)
!18337 = !DILocation(line: 3277, column: 77, scope: !18331)
!18338 = !DILocalVariable(name: "brushVel", arg: 3, scope: !18331, file: !3, line: 3277, type: !201)
!18339 = !DILocation(line: 3277, column: 88, scope: !18331)
!18340 = !DILocalVariable(name: "timescale", arg: 4, scope: !18331, file: !3, line: 3277, type: !207)
!18341 = !DILocation(line: 3277, column: 104, scope: !18331)
!18342 = !DILocalVariable(name: "prev_obmat", scope: !18331, file: !3, line: 3279, type: !935)
!18343 = !DILocation(line: 3279, column: 8, scope: !18331)
!18344 = !DILocalVariable(name: "cur_loc", scope: !18331, file: !3, line: 3280, type: !206)
!18345 = !DILocation(line: 3280, column: 8, scope: !18331)
!18346 = !DILocalVariable(name: "prev_loc", scope: !18331, file: !3, line: 3280, type: !206)
!18347 = !DILocation(line: 3280, column: 29, scope: !18331)
!18348 = !DILocalVariable(name: "cur_sfra", scope: !18331, file: !3, line: 3282, type: !207)
!18349 = !DILocation(line: 3282, column: 8, scope: !18331)
!18350 = !DILocation(line: 3282, column: 19, scope: !18331)
!18351 = !DILocation(line: 3282, column: 26, scope: !18331)
!18352 = !DILocation(line: 3282, column: 28, scope: !18331)
!18353 = !DILocalVariable(name: "cur_fra", scope: !18331, file: !3, line: 3283, type: !135)
!18354 = !DILocation(line: 3283, column: 6, scope: !18331)
!18355 = !DILocation(line: 3283, column: 16, scope: !18331)
!18356 = !DILocation(line: 3283, column: 23, scope: !18331)
!18357 = !DILocation(line: 3283, column: 25, scope: !18331)
!18358 = !DILocalVariable(name: "prev_sfra", scope: !18331, file: !3, line: 3284, type: !207)
!18359 = !DILocation(line: 3284, column: 8, scope: !18331)
!18360 = !DILocation(line: 3284, column: 20, scope: !18331)
!18361 = !DILocation(line: 3284, column: 31, scope: !18331)
!18362 = !DILocation(line: 3284, column: 29, scope: !18331)
!18363 = !DILocalVariable(name: "prev_fra", scope: !18331, file: !3, line: 3285, type: !135)
!18364 = !DILocation(line: 3285, column: 6, scope: !18331)
!18365 = !DILocation(line: 3285, column: 17, scope: !18331)
!18366 = !DILocation(line: 3287, column: 6, scope: !18367)
!18367 = distinct !DILexicalBlock(scope: !18331, file: !3, line: 3287, column: 6)
!18368 = !DILocation(line: 3287, column: 16, scope: !18367)
!18369 = !DILocation(line: 3287, column: 6, scope: !18331)
!18370 = !DILocation(line: 3288, column: 13, scope: !18371)
!18371 = distinct !DILexicalBlock(scope: !18367, file: !3, line: 3287, column: 24)
!18372 = !DILocation(line: 3289, column: 14, scope: !18371)
!18373 = !DILocation(line: 3289, column: 22, scope: !18371)
!18374 = !DILocation(line: 3289, column: 12, scope: !18371)
!18375 = !DILocation(line: 3290, column: 2, scope: !18371)
!18376 = !DILocation(line: 3293, column: 18, scope: !18331)
!18377 = !DILocation(line: 3293, column: 2, scope: !18331)
!18378 = !DILocation(line: 3293, column: 9, scope: !18331)
!18379 = !DILocation(line: 3293, column: 11, scope: !18331)
!18380 = !DILocation(line: 3293, column: 16, scope: !18331)
!18381 = !DILocation(line: 3294, column: 22, scope: !18331)
!18382 = !DILocation(line: 3294, column: 2, scope: !18331)
!18383 = !DILocation(line: 3294, column: 9, scope: !18331)
!18384 = !DILocation(line: 3294, column: 11, scope: !18331)
!18385 = !DILocation(line: 3294, column: 20, scope: !18331)
!18386 = !DILocation(line: 3295, column: 24, scope: !18331)
!18387 = !DILocation(line: 3295, column: 31, scope: !18331)
!18388 = !DILocation(line: 3295, column: 78, scope: !18331)
!18389 = !DILocation(line: 3295, column: 58, scope: !18331)
!18390 = !DILocation(line: 3295, column: 2, scope: !18331)
!18391 = !DILocation(line: 3296, column: 13, scope: !18331)
!18392 = !DILocation(line: 3296, column: 25, scope: !18331)
!18393 = !DILocation(line: 3296, column: 29, scope: !18331)
!18394 = !DILocation(line: 3296, column: 2, scope: !18331)
!18395 = !DILocation(line: 3299, column: 18, scope: !18331)
!18396 = !DILocation(line: 3299, column: 2, scope: !18331)
!18397 = !DILocation(line: 3299, column: 9, scope: !18331)
!18398 = !DILocation(line: 3299, column: 11, scope: !18331)
!18399 = !DILocation(line: 3299, column: 16, scope: !18331)
!18400 = !DILocation(line: 3300, column: 22, scope: !18331)
!18401 = !DILocation(line: 3300, column: 2, scope: !18331)
!18402 = !DILocation(line: 3300, column: 9, scope: !18331)
!18403 = !DILocation(line: 3300, column: 11, scope: !18331)
!18404 = !DILocation(line: 3300, column: 20, scope: !18331)
!18405 = !DILocation(line: 3301, column: 24, scope: !18331)
!18406 = !DILocation(line: 3301, column: 31, scope: !18331)
!18407 = !DILocation(line: 3301, column: 78, scope: !18331)
!18408 = !DILocation(line: 3301, column: 58, scope: !18331)
!18409 = !DILocation(line: 3301, column: 2, scope: !18331)
!18410 = !DILocation(line: 3304, column: 12, scope: !18331)
!18411 = !DILocation(line: 3304, column: 24, scope: !18331)
!18412 = !DILocation(line: 3304, column: 2, scope: !18331)
!18413 = !DILocation(line: 3305, column: 12, scope: !18331)
!18414 = !DILocation(line: 3305, column: 16, scope: !18331)
!18415 = !DILocation(line: 3305, column: 23, scope: !18331)
!18416 = !DILocation(line: 3305, column: 2, scope: !18331)
!18417 = !DILocation(line: 3307, column: 14, scope: !18331)
!18418 = !DILocation(line: 3307, column: 24, scope: !18331)
!18419 = !DILocation(line: 3307, column: 27, scope: !18331)
!18420 = !DILocation(line: 3307, column: 36, scope: !18331)
!18421 = !DILocation(line: 3307, column: 2, scope: !18331)
!18422 = !DILocation(line: 3308, column: 12, scope: !18331)
!18423 = !DILocation(line: 3308, column: 22, scope: !18331)
!18424 = !DILocation(line: 3308, column: 32, scope: !18331)
!18425 = !DILocation(line: 3308, column: 30, scope: !18331)
!18426 = !DILocation(line: 3308, column: 2, scope: !18331)
!18427 = !DILocation(line: 3309, column: 1, scope: !18331)
!18428 = distinct !DISubprogram(name: "len_v3v3", scope: !5013, file: !5013, line: 759, type: !11454, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18429 = !DILocalVariable(name: "a", arg: 1, scope: !18428, file: !5013, line: 759, type: !2195)
!18430 = !DILocation(line: 759, column: 36, scope: !18428)
!18431 = !DILocalVariable(name: "b", arg: 2, scope: !18428, file: !5013, line: 759, type: !2195)
!18432 = !DILocation(line: 759, column: 54, scope: !18428)
!18433 = !DILocalVariable(name: "d", scope: !18428, file: !5013, line: 761, type: !206)
!18434 = !DILocation(line: 761, column: 8, scope: !18428)
!18435 = !DILocation(line: 763, column: 14, scope: !18428)
!18436 = !DILocation(line: 763, column: 17, scope: !18428)
!18437 = !DILocation(line: 763, column: 20, scope: !18428)
!18438 = !DILocation(line: 763, column: 2, scope: !18428)
!18439 = !DILocation(line: 764, column: 16, scope: !18428)
!18440 = !DILocation(line: 764, column: 9, scope: !18428)
!18441 = !DILocation(line: 764, column: 2, scope: !18428)
!18442 = distinct !DISubprogram(name: "dynamicPaint_doMaterialTex", scope: !3, file: !3, line: 2897, type: !18443, scopeLine: 2900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18443 = !DISubroutineType(types: !18444)
!18444 = !{null, !13701, !233, !233, !3426, !2195, !2195, !135, !199, !2003}
!18445 = !DILocalVariable(name: "bMats", arg: 1, scope: !18442, file: !3, line: 2897, type: !13701)
!18446 = !DILocation(line: 2897, column: 56, scope: !18442)
!18447 = !DILocalVariable(name: "color", arg: 2, scope: !18442, file: !3, line: 2897, type: !233)
!18448 = !DILocation(line: 2897, column: 69, scope: !18442)
!18449 = !DILocalVariable(name: "alpha", arg: 3, scope: !18442, file: !3, line: 2897, type: !233)
!18450 = !DILocation(line: 2897, column: 86, scope: !18442)
!18451 = !DILocalVariable(name: "brushOb", arg: 4, scope: !18442, file: !3, line: 2897, type: !3426)
!18452 = !DILocation(line: 2897, column: 101, scope: !18442)
!18453 = !DILocalVariable(name: "volume_co", arg: 5, scope: !18442, file: !3, line: 2898, type: !2195)
!18454 = !DILocation(line: 2898, column: 52, scope: !18442)
!18455 = !DILocalVariable(name: "surface_co", arg: 6, scope: !18442, file: !3, line: 2898, type: !2195)
!18456 = !DILocation(line: 2898, column: 78, scope: !18442)
!18457 = !DILocalVariable(name: "faceIndex", arg: 7, scope: !18442, file: !3, line: 2899, type: !135)
!18458 = !DILocation(line: 2899, column: 44, scope: !18442)
!18459 = !DILocalVariable(name: "isQuad", arg: 8, scope: !18442, file: !3, line: 2899, type: !199)
!18460 = !DILocation(line: 2899, column: 61, scope: !18442)
!18461 = !DILocalVariable(name: "orcoDm", arg: 9, scope: !18442, file: !3, line: 2899, type: !2003)
!18462 = !DILocation(line: 2899, column: 82, scope: !18442)
!18463 = !DILocalVariable(name: "mat", scope: !18442, file: !3, line: 2901, type: !6632)
!18464 = !DILocation(line: 2901, column: 12, scope: !18442)
!18465 = !DILocation(line: 2901, column: 18, scope: !18442)
!18466 = !DILocation(line: 2901, column: 25, scope: !18442)
!18467 = !DILocalVariable(name: "mface", scope: !18442, file: !3, line: 2902, type: !5181)
!18468 = !DILocation(line: 2902, column: 9, scope: !18442)
!18469 = !DILocation(line: 2902, column: 17, scope: !18442)
!18470 = !DILocation(line: 2902, column: 25, scope: !18442)
!18471 = !DILocation(line: 2902, column: 42, scope: !18442)
!18472 = !DILocation(line: 2905, column: 6, scope: !18473)
!18473 = distinct !DILexicalBlock(scope: !18442, file: !3, line: 2905, column: 6)
!18474 = !DILocation(line: 2905, column: 10, scope: !18473)
!18475 = !DILocation(line: 2905, column: 6, scope: !18442)
!18476 = !DILocation(line: 2906, column: 7, scope: !18477)
!18477 = distinct !DILexicalBlock(scope: !18478, file: !3, line: 2906, column: 7)
!18478 = distinct !DILexicalBlock(scope: !18473, file: !3, line: 2905, column: 19)
!18479 = !DILocation(line: 2906, column: 14, scope: !18477)
!18480 = !DILocation(line: 2906, column: 7, scope: !18478)
!18481 = !DILocalVariable(name: "mat_nr", scope: !18482, file: !3, line: 2907, type: !135)
!18482 = distinct !DILexicalBlock(scope: !18477, file: !3, line: 2906, column: 23)
!18483 = !DILocation(line: 2907, column: 8, scope: !18482)
!18484 = !DILocation(line: 2907, column: 17, scope: !18482)
!18485 = !DILocation(line: 2907, column: 23, scope: !18482)
!18486 = !DILocation(line: 2907, column: 34, scope: !18482)
!18487 = !DILocation(line: 2908, column: 8, scope: !18488)
!18488 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2908, column: 8)
!18489 = !DILocation(line: 2908, column: 33, scope: !18488)
!18490 = !DILocation(line: 2908, column: 20, scope: !18488)
!18491 = !DILocation(line: 2908, column: 19, scope: !18488)
!18492 = !DILocation(line: 2908, column: 18, scope: !18488)
!18493 = !DILocation(line: 2908, column: 15, scope: !18488)
!18494 = !DILocation(line: 2908, column: 8, scope: !18482)
!18495 = !DILocation(line: 2908, column: 44, scope: !18488)
!18496 = !DILocation(line: 2909, column: 10, scope: !18482)
!18497 = !DILocation(line: 2909, column: 17, scope: !18482)
!18498 = !DILocation(line: 2909, column: 25, scope: !18482)
!18499 = !DILocation(line: 2909, column: 8, scope: !18482)
!18500 = !DILocation(line: 2910, column: 8, scope: !18501)
!18501 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 2910, column: 8)
!18502 = !DILocation(line: 2910, column: 12, scope: !18501)
!18503 = !DILocation(line: 2910, column: 8, scope: !18482)
!18504 = !DILocation(line: 2910, column: 21, scope: !18501)
!18505 = !DILocation(line: 2911, column: 3, scope: !18482)
!18506 = !DILocation(line: 2913, column: 4, scope: !18507)
!18507 = distinct !DILexicalBlock(scope: !18477, file: !3, line: 2912, column: 8)
!18508 = !DILocation(line: 2915, column: 2, scope: !18478)
!18509 = !DILocation(line: 2917, column: 27, scope: !18442)
!18510 = !DILocation(line: 2917, column: 32, scope: !18442)
!18511 = !DILocation(line: 2917, column: 39, scope: !18442)
!18512 = !DILocation(line: 2917, column: 46, scope: !18442)
!18513 = !DILocation(line: 2917, column: 57, scope: !18442)
!18514 = !DILocation(line: 2917, column: 69, scope: !18442)
!18515 = !DILocation(line: 2917, column: 80, scope: !18442)
!18516 = !DILocation(line: 2917, column: 88, scope: !18442)
!18517 = !DILocation(line: 2917, column: 96, scope: !18442)
!18518 = !DILocation(line: 2917, column: 2, scope: !18442)
!18519 = !DILocation(line: 2918, column: 1, scope: !18442)
!18520 = distinct !DISubprogram(name: "dynamicPaint_brushMeshCalculateVelocity", scope: !3, file: !3, line: 3211, type: !18521, scopeLine: 3212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18521 = !DISubroutineType(types: !18522)
!18522 = !{null, !4204, !3426, !4416, !18523, !207}
!18523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !201, size: 64)
!18524 = !DILocalVariable(name: "scene", arg: 1, scope: !18520, file: !3, line: 3211, type: !4204)
!18525 = !DILocation(line: 3211, column: 60, scope: !18520)
!18526 = !DILocalVariable(name: "ob", arg: 2, scope: !18520, file: !3, line: 3211, type: !3426)
!18527 = !DILocation(line: 3211, column: 75, scope: !18520)
!18528 = !DILocalVariable(name: "brush", arg: 3, scope: !18520, file: !3, line: 3211, type: !4416)
!18529 = !DILocation(line: 3211, column: 106, scope: !18520)
!18530 = !DILocalVariable(name: "brushVel", arg: 4, scope: !18520, file: !3, line: 3211, type: !18523)
!18531 = !DILocation(line: 3211, column: 121, scope: !18520)
!18532 = !DILocalVariable(name: "timescale", arg: 5, scope: !18520, file: !3, line: 3211, type: !207)
!18533 = !DILocation(line: 3211, column: 137, scope: !18520)
!18534 = !DILocalVariable(name: "i", scope: !18520, file: !3, line: 3213, type: !135)
!18535 = !DILocation(line: 3213, column: 6, scope: !18520)
!18536 = !DILocalVariable(name: "prev_obmat", scope: !18520, file: !3, line: 3214, type: !935)
!18537 = !DILocation(line: 3214, column: 8, scope: !18520)
!18538 = !DILocalVariable(name: "dm_p", scope: !18520, file: !3, line: 3215, type: !2003)
!18539 = !DILocation(line: 3215, column: 15, scope: !18520)
!18540 = !DILocalVariable(name: "dm_c", scope: !18520, file: !3, line: 3215, type: !2003)
!18541 = !DILocation(line: 3215, column: 22, scope: !18520)
!18542 = !DILocalVariable(name: "mvert_p", scope: !18520, file: !3, line: 3216, type: !3190)
!18543 = !DILocation(line: 3216, column: 9, scope: !18520)
!18544 = !DILocalVariable(name: "mvert_c", scope: !18520, file: !3, line: 3216, type: !3190)
!18545 = !DILocation(line: 3216, column: 19, scope: !18520)
!18546 = !DILocalVariable(name: "numOfVerts_p", scope: !18520, file: !3, line: 3217, type: !135)
!18547 = !DILocation(line: 3217, column: 6, scope: !18520)
!18548 = !DILocalVariable(name: "numOfVerts_c", scope: !18520, file: !3, line: 3217, type: !135)
!18549 = !DILocation(line: 3217, column: 20, scope: !18520)
!18550 = !DILocalVariable(name: "cur_sfra", scope: !18520, file: !3, line: 3219, type: !207)
!18551 = !DILocation(line: 3219, column: 8, scope: !18520)
!18552 = !DILocation(line: 3219, column: 19, scope: !18520)
!18553 = !DILocation(line: 3219, column: 26, scope: !18520)
!18554 = !DILocation(line: 3219, column: 28, scope: !18520)
!18555 = !DILocalVariable(name: "cur_fra", scope: !18520, file: !3, line: 3220, type: !135)
!18556 = !DILocation(line: 3220, column: 6, scope: !18520)
!18557 = !DILocation(line: 3220, column: 16, scope: !18520)
!18558 = !DILocation(line: 3220, column: 23, scope: !18520)
!18559 = !DILocation(line: 3220, column: 25, scope: !18520)
!18560 = !DILocalVariable(name: "prev_sfra", scope: !18520, file: !3, line: 3221, type: !207)
!18561 = !DILocation(line: 3221, column: 8, scope: !18520)
!18562 = !DILocation(line: 3221, column: 20, scope: !18520)
!18563 = !DILocation(line: 3221, column: 31, scope: !18520)
!18564 = !DILocation(line: 3221, column: 29, scope: !18520)
!18565 = !DILocalVariable(name: "prev_fra", scope: !18520, file: !3, line: 3222, type: !135)
!18566 = !DILocation(line: 3222, column: 6, scope: !18520)
!18567 = !DILocation(line: 3222, column: 17, scope: !18520)
!18568 = !DILocation(line: 3224, column: 6, scope: !18569)
!18569 = distinct !DILexicalBlock(scope: !18520, file: !3, line: 3224, column: 6)
!18570 = !DILocation(line: 3224, column: 16, scope: !18569)
!18571 = !DILocation(line: 3224, column: 6, scope: !18520)
!18572 = !DILocation(line: 3225, column: 13, scope: !18573)
!18573 = distinct !DILexicalBlock(scope: !18569, file: !3, line: 3224, column: 24)
!18574 = !DILocation(line: 3226, column: 14, scope: !18573)
!18575 = !DILocation(line: 3226, column: 22, scope: !18573)
!18576 = !DILocation(line: 3226, column: 12, scope: !18573)
!18577 = !DILocation(line: 3227, column: 2, scope: !18573)
!18578 = !DILocation(line: 3230, column: 18, scope: !18520)
!18579 = !DILocation(line: 3230, column: 2, scope: !18520)
!18580 = !DILocation(line: 3230, column: 9, scope: !18520)
!18581 = !DILocation(line: 3230, column: 11, scope: !18520)
!18582 = !DILocation(line: 3230, column: 16, scope: !18520)
!18583 = !DILocation(line: 3231, column: 22, scope: !18520)
!18584 = !DILocation(line: 3231, column: 2, scope: !18520)
!18585 = !DILocation(line: 3231, column: 9, scope: !18520)
!18586 = !DILocation(line: 3231, column: 11, scope: !18520)
!18587 = !DILocation(line: 3231, column: 20, scope: !18520)
!18588 = !DILocation(line: 3233, column: 24, scope: !18520)
!18589 = !DILocation(line: 3233, column: 31, scope: !18520)
!18590 = !DILocation(line: 3233, column: 94, scope: !18520)
!18591 = !DILocation(line: 3233, column: 74, scope: !18520)
!18592 = !DILocation(line: 3233, column: 2, scope: !18520)
!18593 = !DILocation(line: 3234, column: 19, scope: !18520)
!18594 = !DILocation(line: 3234, column: 26, scope: !18520)
!18595 = !DILocation(line: 3234, column: 9, scope: !18520)
!18596 = !DILocation(line: 3234, column: 7, scope: !18520)
!18597 = !DILocation(line: 3235, column: 17, scope: !18520)
!18598 = !DILocation(line: 3235, column: 23, scope: !18520)
!18599 = !DILocation(line: 3235, column: 35, scope: !18520)
!18600 = !DILocation(line: 3235, column: 15, scope: !18520)
!18601 = !DILocation(line: 3236, column: 12, scope: !18520)
!18602 = !DILocation(line: 3236, column: 18, scope: !18520)
!18603 = !DILocation(line: 3236, column: 31, scope: !18520)
!18604 = !DILocation(line: 3236, column: 10, scope: !18520)
!18605 = !DILocation(line: 3237, column: 13, scope: !18520)
!18606 = !DILocation(line: 3237, column: 25, scope: !18520)
!18607 = !DILocation(line: 3237, column: 29, scope: !18520)
!18608 = !DILocation(line: 3237, column: 2, scope: !18520)
!18609 = !DILocation(line: 3240, column: 18, scope: !18520)
!18610 = !DILocation(line: 3240, column: 2, scope: !18520)
!18611 = !DILocation(line: 3240, column: 9, scope: !18520)
!18612 = !DILocation(line: 3240, column: 11, scope: !18520)
!18613 = !DILocation(line: 3240, column: 16, scope: !18520)
!18614 = !DILocation(line: 3241, column: 22, scope: !18520)
!18615 = !DILocation(line: 3241, column: 2, scope: !18520)
!18616 = !DILocation(line: 3241, column: 9, scope: !18520)
!18617 = !DILocation(line: 3241, column: 11, scope: !18520)
!18618 = !DILocation(line: 3241, column: 20, scope: !18520)
!18619 = !DILocation(line: 3243, column: 24, scope: !18520)
!18620 = !DILocation(line: 3243, column: 31, scope: !18520)
!18621 = !DILocation(line: 3243, column: 94, scope: !18520)
!18622 = !DILocation(line: 3243, column: 74, scope: !18520)
!18623 = !DILocation(line: 3243, column: 2, scope: !18520)
!18624 = !DILocation(line: 3244, column: 9, scope: !18520)
!18625 = !DILocation(line: 3244, column: 16, scope: !18520)
!18626 = !DILocation(line: 3244, column: 7, scope: !18520)
!18627 = !DILocation(line: 3245, column: 17, scope: !18520)
!18628 = !DILocation(line: 3245, column: 23, scope: !18520)
!18629 = !DILocation(line: 3245, column: 35, scope: !18520)
!18630 = !DILocation(line: 3245, column: 15, scope: !18520)
!18631 = !DILocation(line: 3246, column: 12, scope: !18520)
!18632 = !DILocation(line: 3246, column: 18, scope: !18520)
!18633 = !DILocation(line: 3246, column: 31, scope: !18520)
!18634 = !DILocation(line: 3246, column: 10, scope: !18520)
!18635 = !DILocation(line: 3248, column: 33, scope: !18520)
!18636 = !DILocation(line: 3248, column: 45, scope: !18520)
!18637 = !DILocation(line: 3248, column: 58, scope: !18520)
!18638 = !DILocation(line: 3248, column: 16, scope: !18520)
!18639 = !DILocation(line: 3248, column: 4, scope: !18520)
!18640 = !DILocation(line: 3248, column: 14, scope: !18520)
!18641 = !DILocation(line: 3249, column: 9, scope: !18642)
!18642 = distinct !DILexicalBlock(scope: !18520, file: !3, line: 3249, column: 6)
!18643 = !DILocation(line: 3249, column: 8, scope: !18642)
!18644 = !DILocation(line: 3249, column: 7, scope: !18642)
!18645 = !DILocation(line: 3249, column: 6, scope: !18520)
!18646 = !DILocation(line: 3249, column: 20, scope: !18642)
!18647 = !DILocation(line: 3253, column: 6, scope: !18648)
!18648 = distinct !DILexicalBlock(scope: !18520, file: !3, line: 3253, column: 6)
!18649 = !DILocation(line: 3253, column: 22, scope: !18648)
!18650 = !DILocation(line: 3253, column: 19, scope: !18648)
!18651 = !DILocation(line: 3253, column: 6, scope: !18520)
!18652 = !DILocation(line: 3254, column: 13, scope: !18648)
!18653 = !DILocation(line: 3254, column: 11, scope: !18648)
!18654 = !DILocation(line: 3254, column: 3, scope: !18648)
!18655 = !DILocation(line: 3260, column: 9, scope: !18656)
!18656 = distinct !DILexicalBlock(scope: !18520, file: !3, line: 3260, column: 2)
!18657 = !DILocation(line: 3260, column: 7, scope: !18656)
!18658 = !DILocation(line: 3260, column: 14, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18656, file: !3, line: 3260, column: 2)
!18660 = !DILocation(line: 3260, column: 18, scope: !18659)
!18661 = !DILocation(line: 3260, column: 16, scope: !18659)
!18662 = !DILocation(line: 3260, column: 2, scope: !18656)
!18663 = !DILocalVariable(name: "p1", scope: !18664, file: !3, line: 3261, type: !206)
!18664 = distinct !DILexicalBlock(scope: !18659, file: !3, line: 3260, column: 37)
!18665 = !DILocation(line: 3261, column: 9, scope: !18664)
!18666 = !DILocalVariable(name: "p2", scope: !18664, file: !3, line: 3261, type: !206)
!18667 = !DILocation(line: 3261, column: 16, scope: !18664)
!18668 = !DILocation(line: 3263, column: 14, scope: !18664)
!18669 = !DILocation(line: 3263, column: 18, scope: !18664)
!18670 = !DILocation(line: 3263, column: 26, scope: !18664)
!18671 = !DILocation(line: 3263, column: 29, scope: !18664)
!18672 = !DILocation(line: 3263, column: 3, scope: !18664)
!18673 = !DILocation(line: 3264, column: 13, scope: !18664)
!18674 = !DILocation(line: 3264, column: 25, scope: !18664)
!18675 = !DILocation(line: 3264, column: 3, scope: !18664)
!18676 = !DILocation(line: 3266, column: 14, scope: !18664)
!18677 = !DILocation(line: 3266, column: 18, scope: !18664)
!18678 = !DILocation(line: 3266, column: 26, scope: !18664)
!18679 = !DILocation(line: 3266, column: 29, scope: !18664)
!18680 = !DILocation(line: 3266, column: 3, scope: !18664)
!18681 = !DILocation(line: 3267, column: 13, scope: !18664)
!18682 = !DILocation(line: 3267, column: 17, scope: !18664)
!18683 = !DILocation(line: 3267, column: 24, scope: !18664)
!18684 = !DILocation(line: 3267, column: 3, scope: !18664)
!18685 = !DILocation(line: 3269, column: 17, scope: !18664)
!18686 = !DILocation(line: 3269, column: 16, scope: !18664)
!18687 = !DILocation(line: 3269, column: 27, scope: !18664)
!18688 = !DILocation(line: 3269, column: 15, scope: !18664)
!18689 = !DILocation(line: 3269, column: 30, scope: !18664)
!18690 = !DILocation(line: 3269, column: 33, scope: !18664)
!18691 = !DILocation(line: 3269, column: 37, scope: !18664)
!18692 = !DILocation(line: 3269, column: 3, scope: !18664)
!18693 = !DILocation(line: 3270, column: 15, scope: !18664)
!18694 = !DILocation(line: 3270, column: 14, scope: !18664)
!18695 = !DILocation(line: 3270, column: 25, scope: !18664)
!18696 = !DILocation(line: 3270, column: 13, scope: !18664)
!18697 = !DILocation(line: 3270, column: 28, scope: !18664)
!18698 = !DILocation(line: 3270, column: 38, scope: !18664)
!18699 = !DILocation(line: 3270, column: 36, scope: !18664)
!18700 = !DILocation(line: 3270, column: 3, scope: !18664)
!18701 = !DILocation(line: 3271, column: 2, scope: !18664)
!18702 = !DILocation(line: 3260, column: 33, scope: !18659)
!18703 = !DILocation(line: 3260, column: 2, scope: !18659)
!18704 = distinct !{!18704, !18662, !18705}
!18705 = !DILocation(line: 3271, column: 2, scope: !18656)
!18706 = !DILocation(line: 3273, column: 2, scope: !18520)
!18707 = !DILocation(line: 3273, column: 8, scope: !18520)
!18708 = !DILocation(line: 3273, column: 16, scope: !18520)
!18709 = !DILocation(line: 3274, column: 1, scope: !18520)
!18710 = distinct !DISubprogram(name: "add_v3_v3", scope: !5013, file: !5013, line: 302, type: !5014, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18711 = !DILocalVariable(name: "r", arg: 1, scope: !18710, file: !5013, line: 302, type: !233)
!18712 = !DILocation(line: 302, column: 30, scope: !18710)
!18713 = !DILocalVariable(name: "a", arg: 2, scope: !18710, file: !5013, line: 302, type: !2195)
!18714 = !DILocation(line: 302, column: 48, scope: !18710)
!18715 = !DILocation(line: 304, column: 10, scope: !18710)
!18716 = !DILocation(line: 304, column: 2, scope: !18710)
!18717 = !DILocation(line: 304, column: 7, scope: !18710)
!18718 = !DILocation(line: 305, column: 10, scope: !18710)
!18719 = !DILocation(line: 305, column: 2, scope: !18710)
!18720 = !DILocation(line: 305, column: 7, scope: !18710)
!18721 = !DILocation(line: 306, column: 10, scope: !18710)
!18722 = !DILocation(line: 306, column: 2, scope: !18710)
!18723 = !DILocation(line: 306, column: 7, scope: !18710)
!18724 = !DILocation(line: 307, column: 1, scope: !18710)
!18725 = distinct !DISubprogram(name: "meshBrush_boundsIntersect", scope: !3, file: !3, line: 3201, type: !18726, scopeLine: 3202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18726 = !DISubroutineType(types: !18727)
!18727 = !{!135, !3182, !3182, !4416, !207}
!18728 = !DILocalVariable(name: "b1", arg: 1, scope: !18725, file: !3, line: 3201, type: !3182)
!18729 = !DILocation(line: 3201, column: 48, scope: !18725)
!18730 = !DILocalVariable(name: "b2", arg: 2, scope: !18725, file: !3, line: 3201, type: !3182)
!18731 = !DILocation(line: 3201, column: 62, scope: !18725)
!18732 = !DILocalVariable(name: "brush", arg: 3, scope: !18725, file: !3, line: 3201, type: !4416)
!18733 = !DILocation(line: 3201, column: 93, scope: !18725)
!18734 = !DILocalVariable(name: "brush_radius", arg: 4, scope: !18725, file: !3, line: 3201, type: !207)
!18735 = !DILocation(line: 3201, column: 106, scope: !18725)
!18736 = !DILocation(line: 3203, column: 6, scope: !18737)
!18737 = distinct !DILexicalBlock(scope: !18725, file: !3, line: 3203, column: 6)
!18738 = !DILocation(line: 3203, column: 13, scope: !18737)
!18739 = !DILocation(line: 3203, column: 23, scope: !18737)
!18740 = !DILocation(line: 3203, column: 6, scope: !18725)
!18741 = !DILocation(line: 3204, column: 26, scope: !18737)
!18742 = !DILocation(line: 3204, column: 30, scope: !18737)
!18743 = !DILocation(line: 3204, column: 10, scope: !18737)
!18744 = !DILocation(line: 3204, column: 3, scope: !18737)
!18745 = !DILocation(line: 3205, column: 11, scope: !18746)
!18746 = distinct !DILexicalBlock(scope: !18737, file: !3, line: 3205, column: 11)
!18747 = !DILocation(line: 3205, column: 18, scope: !18746)
!18748 = !DILocation(line: 3205, column: 28, scope: !18746)
!18749 = !DILocation(line: 3205, column: 51, scope: !18746)
!18750 = !DILocation(line: 3205, column: 54, scope: !18746)
!18751 = !DILocation(line: 3205, column: 61, scope: !18746)
!18752 = !DILocation(line: 3205, column: 71, scope: !18746)
!18753 = !DILocation(line: 3205, column: 11, scope: !18737)
!18754 = !DILocation(line: 3206, column: 30, scope: !18746)
!18755 = !DILocation(line: 3206, column: 34, scope: !18746)
!18756 = !DILocation(line: 3206, column: 38, scope: !18746)
!18757 = !DILocation(line: 3206, column: 10, scope: !18746)
!18758 = !DILocation(line: 3206, column: 3, scope: !18746)
!18759 = !DILocation(line: 3207, column: 7, scope: !18746)
!18760 = !DILocation(line: 3208, column: 1, scope: !18725)
!18761 = distinct !DISubprogram(name: "add_v3_fl", scope: !5013, file: !5013, line: 269, type: !11387, scopeLine: 270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18762 = !DILocalVariable(name: "r", arg: 1, scope: !18761, file: !5013, line: 269, type: !233)
!18763 = !DILocation(line: 269, column: 30, scope: !18761)
!18764 = !DILocalVariable(name: "f", arg: 2, scope: !18761, file: !5013, line: 269, type: !207)
!18765 = !DILocation(line: 269, column: 42, scope: !18761)
!18766 = !DILocation(line: 271, column: 10, scope: !18761)
!18767 = !DILocation(line: 271, column: 2, scope: !18761)
!18768 = !DILocation(line: 271, column: 7, scope: !18761)
!18769 = !DILocation(line: 272, column: 10, scope: !18761)
!18770 = !DILocation(line: 272, column: 2, scope: !18761)
!18771 = !DILocation(line: 272, column: 7, scope: !18761)
!18772 = !DILocation(line: 273, column: 10, scope: !18761)
!18773 = !DILocation(line: 273, column: 2, scope: !18761)
!18774 = !DILocation(line: 273, column: 7, scope: !18761)
!18775 = !DILocation(line: 274, column: 1, scope: !18761)
!18776 = distinct !DISubprogram(name: "mesh_faces_spherecast_dp", scope: !3, file: !3, line: 2930, type: !3267, scopeLine: 2931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18777 = !DILocalVariable(name: "userdata", arg: 1, scope: !18776, file: !3, line: 2930, type: !221)
!18778 = !DILocation(line: 2930, column: 44, scope: !18776)
!18779 = !DILocalVariable(name: "index", arg: 2, scope: !18776, file: !3, line: 2930, type: !135)
!18780 = !DILocation(line: 2930, column: 58, scope: !18776)
!18781 = !DILocalVariable(name: "ray", arg: 3, scope: !18776, file: !3, line: 2930, type: !3269)
!18782 = !DILocation(line: 2930, column: 83, scope: !18776)
!18783 = !DILocalVariable(name: "hit", arg: 4, scope: !18776, file: !3, line: 2930, type: !3277)
!18784 = !DILocation(line: 2930, column: 103, scope: !18776)
!18785 = !DILocalVariable(name: "data", scope: !18776, file: !3, line: 2932, type: !18786)
!18786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18787, size: 64)
!18787 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3245)
!18788 = !DILocation(line: 2932, column: 25, scope: !18776)
!18789 = !DILocation(line: 2932, column: 52, scope: !18776)
!18790 = !DILocation(line: 2932, column: 32, scope: !18776)
!18791 = !DILocalVariable(name: "vert", scope: !18776, file: !3, line: 2933, type: !3190)
!18792 = !DILocation(line: 2933, column: 9, scope: !18776)
!18793 = !DILocation(line: 2933, column: 16, scope: !18776)
!18794 = !DILocation(line: 2933, column: 22, scope: !18776)
!18795 = !DILocalVariable(name: "face", scope: !18776, file: !3, line: 2934, type: !5181)
!18796 = !DILocation(line: 2934, column: 9, scope: !18776)
!18797 = !DILocation(line: 2934, column: 16, scope: !18776)
!18798 = !DILocation(line: 2934, column: 22, scope: !18776)
!18799 = !DILocation(line: 2934, column: 29, scope: !18776)
!18800 = !DILocation(line: 2934, column: 27, scope: !18776)
!18801 = !DILocalVariable(name: "quad", scope: !18776, file: !3, line: 2935, type: !199)
!18802 = !DILocation(line: 2935, column: 8, scope: !18776)
!18803 = !DILocalVariable(name: "t0", scope: !18776, file: !3, line: 2937, type: !2195)
!18804 = !DILocation(line: 2937, column: 15, scope: !18776)
!18805 = !DILocalVariable(name: "t1", scope: !18776, file: !3, line: 2937, type: !2195)
!18806 = !DILocation(line: 2937, column: 20, scope: !18776)
!18807 = !DILocalVariable(name: "t2", scope: !18776, file: !3, line: 2937, type: !2195)
!18808 = !DILocation(line: 2937, column: 25, scope: !18776)
!18809 = !DILocalVariable(name: "t3", scope: !18776, file: !3, line: 2937, type: !2195)
!18810 = !DILocation(line: 2937, column: 30, scope: !18776)
!18811 = !DILocation(line: 2938, column: 7, scope: !18776)
!18812 = !DILocation(line: 2938, column: 12, scope: !18776)
!18813 = !DILocation(line: 2938, column: 18, scope: !18776)
!18814 = !DILocation(line: 2938, column: 22, scope: !18776)
!18815 = !DILocation(line: 2938, column: 5, scope: !18776)
!18816 = !DILocation(line: 2939, column: 7, scope: !18776)
!18817 = !DILocation(line: 2939, column: 12, scope: !18776)
!18818 = !DILocation(line: 2939, column: 18, scope: !18776)
!18819 = !DILocation(line: 2939, column: 22, scope: !18776)
!18820 = !DILocation(line: 2939, column: 5, scope: !18776)
!18821 = !DILocation(line: 2940, column: 7, scope: !18776)
!18822 = !DILocation(line: 2940, column: 12, scope: !18776)
!18823 = !DILocation(line: 2940, column: 18, scope: !18776)
!18824 = !DILocation(line: 2940, column: 22, scope: !18776)
!18825 = !DILocation(line: 2940, column: 5, scope: !18776)
!18826 = !DILocation(line: 2941, column: 7, scope: !18776)
!18827 = !DILocation(line: 2941, column: 13, scope: !18776)
!18828 = !DILocation(line: 2941, column: 18, scope: !18776)
!18829 = !DILocation(line: 2941, column: 23, scope: !18776)
!18830 = !DILocation(line: 2941, column: 29, scope: !18776)
!18831 = !DILocation(line: 2941, column: 33, scope: !18776)
!18832 = !DILocation(line: 2941, column: 5, scope: !18776)
!18833 = !DILocation(line: 2943, column: 2, scope: !18776)
!18834 = !DILocalVariable(name: "dist", scope: !18835, file: !3, line: 2944, type: !207)
!18835 = distinct !DILexicalBlock(scope: !18776, file: !3, line: 2943, column: 5)
!18836 = !DILocation(line: 2944, column: 9, scope: !18835)
!18837 = !DILocation(line: 2944, column: 45, scope: !18835)
!18838 = !DILocation(line: 2944, column: 50, scope: !18835)
!18839 = !DILocation(line: 2944, column: 55, scope: !18835)
!18840 = !DILocation(line: 2944, column: 61, scope: !18835)
!18841 = !DILocation(line: 2944, column: 65, scope: !18835)
!18842 = !DILocation(line: 2944, column: 69, scope: !18835)
!18843 = !DILocation(line: 2944, column: 16, scope: !18835)
!18844 = !DILocation(line: 2946, column: 7, scope: !18845)
!18845 = distinct !DILexicalBlock(scope: !18835, file: !3, line: 2946, column: 7)
!18846 = !DILocation(line: 2946, column: 12, scope: !18845)
!18847 = !DILocation(line: 2946, column: 17, scope: !18845)
!18848 = !DILocation(line: 2946, column: 20, scope: !18845)
!18849 = !DILocation(line: 2946, column: 27, scope: !18845)
!18850 = !DILocation(line: 2946, column: 32, scope: !18845)
!18851 = !DILocation(line: 2946, column: 25, scope: !18845)
!18852 = !DILocation(line: 2946, column: 7, scope: !18835)
!18853 = !DILocation(line: 2947, column: 17, scope: !18854)
!18854 = distinct !DILexicalBlock(scope: !18845, file: !3, line: 2946, column: 38)
!18855 = !DILocation(line: 2947, column: 4, scope: !18854)
!18856 = !DILocation(line: 2947, column: 9, scope: !18854)
!18857 = !DILocation(line: 2947, column: 15, scope: !18854)
!18858 = !DILocation(line: 2948, column: 16, scope: !18854)
!18859 = !DILocation(line: 2948, column: 4, scope: !18854)
!18860 = !DILocation(line: 2948, column: 9, scope: !18854)
!18861 = !DILocation(line: 2948, column: 14, scope: !18854)
!18862 = !DILocation(line: 2949, column: 18, scope: !18854)
!18863 = !DILocation(line: 2949, column: 17, scope: !18854)
!18864 = !DILocation(line: 2949, column: 4, scope: !18854)
!18865 = !DILocation(line: 2949, column: 9, scope: !18854)
!18866 = !DILocation(line: 2949, column: 15, scope: !18854)
!18867 = !DILocation(line: 2950, column: 3, scope: !18854)
!18868 = !DILocation(line: 2952, column: 8, scope: !18835)
!18869 = !DILocation(line: 2952, column: 6, scope: !18835)
!18870 = !DILocation(line: 2953, column: 8, scope: !18835)
!18871 = !DILocation(line: 2953, column: 6, scope: !18835)
!18872 = !DILocation(line: 2954, column: 6, scope: !18835)
!18873 = !DILocation(line: 2955, column: 8, scope: !18835)
!18874 = !DILocation(line: 2957, column: 2, scope: !18835)
!18875 = !DILocation(line: 2957, column: 11, scope: !18776)
!18876 = distinct !{!18876, !18833, !18877}
!18877 = !DILocation(line: 2957, column: 13, scope: !18776)
!18878 = !DILocation(line: 2958, column: 1, scope: !18776)
!18879 = distinct !DISubprogram(name: "madd_v3_v3v3fl", scope: !5013, file: !5013, line: 527, type: !18880, scopeLine: 528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18880 = !DISubroutineType(types: !18881)
!18881 = !{null, !233, !2195, !2195, !207}
!18882 = !DILocalVariable(name: "r", arg: 1, scope: !18879, file: !5013, line: 527, type: !233)
!18883 = !DILocation(line: 527, column: 35, scope: !18879)
!18884 = !DILocalVariable(name: "a", arg: 2, scope: !18879, file: !5013, line: 527, type: !2195)
!18885 = !DILocation(line: 527, column: 53, scope: !18879)
!18886 = !DILocalVariable(name: "b", arg: 3, scope: !18879, file: !5013, line: 527, type: !2195)
!18887 = !DILocation(line: 527, column: 71, scope: !18879)
!18888 = !DILocalVariable(name: "f", arg: 4, scope: !18879, file: !5013, line: 527, type: !207)
!18889 = !DILocation(line: 527, column: 83, scope: !18879)
!18890 = !DILocation(line: 529, column: 9, scope: !18879)
!18891 = !DILocation(line: 529, column: 16, scope: !18879)
!18892 = !DILocation(line: 529, column: 23, scope: !18879)
!18893 = !DILocation(line: 529, column: 21, scope: !18879)
!18894 = !DILocation(line: 529, column: 14, scope: !18879)
!18895 = !DILocation(line: 529, column: 2, scope: !18879)
!18896 = !DILocation(line: 529, column: 7, scope: !18879)
!18897 = !DILocation(line: 530, column: 9, scope: !18879)
!18898 = !DILocation(line: 530, column: 16, scope: !18879)
!18899 = !DILocation(line: 530, column: 23, scope: !18879)
!18900 = !DILocation(line: 530, column: 21, scope: !18879)
!18901 = !DILocation(line: 530, column: 14, scope: !18879)
!18902 = !DILocation(line: 530, column: 2, scope: !18879)
!18903 = !DILocation(line: 530, column: 7, scope: !18879)
!18904 = !DILocation(line: 531, column: 9, scope: !18879)
!18905 = !DILocation(line: 531, column: 16, scope: !18879)
!18906 = !DILocation(line: 531, column: 23, scope: !18879)
!18907 = !DILocation(line: 531, column: 21, scope: !18879)
!18908 = !DILocation(line: 531, column: 14, scope: !18879)
!18909 = !DILocation(line: 531, column: 2, scope: !18879)
!18910 = !DILocation(line: 531, column: 7, scope: !18879)
!18911 = !DILocation(line: 532, column: 1, scope: !18879)
!18912 = distinct !DISubprogram(name: "mesh_faces_nearest_point_dp", scope: !3, file: !3, line: 2966, type: !3253, scopeLine: 2967, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!18913 = !DILocalVariable(name: "userdata", arg: 1, scope: !18912, file: !3, line: 2966, type: !221)
!18914 = !DILocation(line: 2966, column: 47, scope: !18912)
!18915 = !DILocalVariable(name: "index", arg: 2, scope: !18912, file: !3, line: 2966, type: !135)
!18916 = !DILocation(line: 2966, column: 61, scope: !18912)
!18917 = !DILocalVariable(name: "co", arg: 3, scope: !18912, file: !3, line: 2966, type: !2195)
!18918 = !DILocation(line: 2966, column: 80, scope: !18912)
!18919 = !DILocalVariable(name: "nearest", arg: 4, scope: !18912, file: !3, line: 2966, type: !3255)
!18920 = !DILocation(line: 2966, column: 103, scope: !18912)
!18921 = !DILocalVariable(name: "data", scope: !18912, file: !3, line: 2968, type: !18786)
!18922 = !DILocation(line: 2968, column: 25, scope: !18912)
!18923 = !DILocation(line: 2968, column: 52, scope: !18912)
!18924 = !DILocation(line: 2968, column: 32, scope: !18912)
!18925 = !DILocalVariable(name: "vert", scope: !18912, file: !3, line: 2969, type: !3190)
!18926 = !DILocation(line: 2969, column: 9, scope: !18912)
!18927 = !DILocation(line: 2969, column: 16, scope: !18912)
!18928 = !DILocation(line: 2969, column: 22, scope: !18912)
!18929 = !DILocalVariable(name: "face", scope: !18912, file: !3, line: 2970, type: !5181)
!18930 = !DILocation(line: 2970, column: 9, scope: !18912)
!18931 = !DILocation(line: 2970, column: 16, scope: !18912)
!18932 = !DILocation(line: 2970, column: 22, scope: !18912)
!18933 = !DILocation(line: 2970, column: 29, scope: !18912)
!18934 = !DILocation(line: 2970, column: 27, scope: !18912)
!18935 = !DILocalVariable(name: "quad", scope: !18912, file: !3, line: 2971, type: !199)
!18936 = !DILocation(line: 2971, column: 8, scope: !18912)
!18937 = !DILocalVariable(name: "t0", scope: !18912, file: !3, line: 2973, type: !2195)
!18938 = !DILocation(line: 2973, column: 15, scope: !18912)
!18939 = !DILocalVariable(name: "t1", scope: !18912, file: !3, line: 2973, type: !2195)
!18940 = !DILocation(line: 2973, column: 20, scope: !18912)
!18941 = !DILocalVariable(name: "t2", scope: !18912, file: !3, line: 2973, type: !2195)
!18942 = !DILocation(line: 2973, column: 25, scope: !18912)
!18943 = !DILocalVariable(name: "t3", scope: !18912, file: !3, line: 2973, type: !2195)
!18944 = !DILocation(line: 2973, column: 30, scope: !18912)
!18945 = !DILocation(line: 2974, column: 7, scope: !18912)
!18946 = !DILocation(line: 2974, column: 12, scope: !18912)
!18947 = !DILocation(line: 2974, column: 18, scope: !18912)
!18948 = !DILocation(line: 2974, column: 22, scope: !18912)
!18949 = !DILocation(line: 2974, column: 5, scope: !18912)
!18950 = !DILocation(line: 2975, column: 7, scope: !18912)
!18951 = !DILocation(line: 2975, column: 12, scope: !18912)
!18952 = !DILocation(line: 2975, column: 18, scope: !18912)
!18953 = !DILocation(line: 2975, column: 22, scope: !18912)
!18954 = !DILocation(line: 2975, column: 5, scope: !18912)
!18955 = !DILocation(line: 2976, column: 7, scope: !18912)
!18956 = !DILocation(line: 2976, column: 12, scope: !18912)
!18957 = !DILocation(line: 2976, column: 18, scope: !18912)
!18958 = !DILocation(line: 2976, column: 22, scope: !18912)
!18959 = !DILocation(line: 2976, column: 5, scope: !18912)
!18960 = !DILocation(line: 2977, column: 7, scope: !18912)
!18961 = !DILocation(line: 2977, column: 13, scope: !18912)
!18962 = !DILocation(line: 2977, column: 18, scope: !18912)
!18963 = !DILocation(line: 2977, column: 23, scope: !18912)
!18964 = !DILocation(line: 2977, column: 29, scope: !18912)
!18965 = !DILocation(line: 2977, column: 33, scope: !18912)
!18966 = !DILocation(line: 2977, column: 5, scope: !18912)
!18967 = !DILocation(line: 2979, column: 2, scope: !18912)
!18968 = !DILocalVariable(name: "nearest_tmp", scope: !18969, file: !3, line: 2980, type: !206)
!18969 = distinct !DILexicalBlock(scope: !18912, file: !3, line: 2979, column: 5)
!18970 = !DILocation(line: 2980, column: 9, scope: !18969)
!18971 = !DILocalVariable(name: "dist_sq", scope: !18969, file: !3, line: 2980, type: !207)
!18972 = !DILocation(line: 2980, column: 25, scope: !18969)
!18973 = !DILocation(line: 2982, column: 30, scope: !18969)
!18974 = !DILocation(line: 2982, column: 43, scope: !18969)
!18975 = !DILocation(line: 2982, column: 47, scope: !18969)
!18976 = !DILocation(line: 2982, column: 51, scope: !18969)
!18977 = !DILocation(line: 2982, column: 55, scope: !18969)
!18978 = !DILocation(line: 2982, column: 3, scope: !18969)
!18979 = !DILocation(line: 2983, column: 30, scope: !18969)
!18980 = !DILocation(line: 2983, column: 34, scope: !18969)
!18981 = !DILocation(line: 2983, column: 13, scope: !18969)
!18982 = !DILocation(line: 2983, column: 11, scope: !18969)
!18983 = !DILocation(line: 2985, column: 7, scope: !18984)
!18984 = distinct !DILexicalBlock(scope: !18969, file: !3, line: 2985, column: 7)
!18985 = !DILocation(line: 2985, column: 17, scope: !18984)
!18986 = !DILocation(line: 2985, column: 26, scope: !18984)
!18987 = !DILocation(line: 2985, column: 15, scope: !18984)
!18988 = !DILocation(line: 2985, column: 7, scope: !18969)
!18989 = !DILocation(line: 2986, column: 21, scope: !18990)
!18990 = distinct !DILexicalBlock(scope: !18984, file: !3, line: 2985, column: 35)
!18991 = !DILocation(line: 2986, column: 4, scope: !18990)
!18992 = !DILocation(line: 2986, column: 13, scope: !18990)
!18993 = !DILocation(line: 2986, column: 19, scope: !18990)
!18994 = !DILocation(line: 2987, column: 23, scope: !18990)
!18995 = !DILocation(line: 2987, column: 4, scope: !18990)
!18996 = !DILocation(line: 2987, column: 13, scope: !18990)
!18997 = !DILocation(line: 2987, column: 21, scope: !18990)
!18998 = !DILocation(line: 2988, column: 15, scope: !18990)
!18999 = !DILocation(line: 2988, column: 24, scope: !18990)
!19000 = !DILocation(line: 2988, column: 28, scope: !18990)
!19001 = !DILocation(line: 2988, column: 4, scope: !18990)
!19002 = !DILocation(line: 2989, column: 22, scope: !18990)
!19003 = !DILocation(line: 2989, column: 21, scope: !18990)
!19004 = !DILocation(line: 2989, column: 4, scope: !18990)
!19005 = !DILocation(line: 2989, column: 13, scope: !18990)
!19006 = !DILocation(line: 2989, column: 19, scope: !18990)
!19007 = !DILocation(line: 2990, column: 3, scope: !18990)
!19008 = !DILocation(line: 2992, column: 8, scope: !18969)
!19009 = !DILocation(line: 2992, column: 6, scope: !18969)
!19010 = !DILocation(line: 2993, column: 8, scope: !18969)
!19011 = !DILocation(line: 2993, column: 6, scope: !18969)
!19012 = !DILocation(line: 2994, column: 6, scope: !18969)
!19013 = !DILocation(line: 2995, column: 8, scope: !18969)
!19014 = !DILocation(line: 2997, column: 2, scope: !18969)
!19015 = !DILocation(line: 2997, column: 11, scope: !18912)
!19016 = distinct !{!19016, !18967, !19017}
!19017 = !DILocation(line: 2997, column: 13, scope: !18912)
!19018 = !DILocation(line: 2998, column: 1, scope: !18912)
!19019 = distinct !DISubprogram(name: "boundsIntersect", scope: !3, file: !3, line: 643, type: !19020, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19020 = !DISubroutineType(types: !19021)
!19021 = !{!135, !3182, !3182}
!19022 = !DILocalVariable(name: "b1", arg: 1, scope: !19019, file: !3, line: 643, type: !3182)
!19023 = !DILocation(line: 643, column: 38, scope: !19019)
!19024 = !DILocalVariable(name: "b2", arg: 2, scope: !19019, file: !3, line: 643, type: !3182)
!19025 = !DILocation(line: 643, column: 52, scope: !19019)
!19026 = !DILocalVariable(name: "i", scope: !19019, file: !3, line: 645, type: !135)
!19027 = !DILocation(line: 645, column: 6, scope: !19019)
!19028 = !DILocation(line: 646, column: 7, scope: !19029)
!19029 = distinct !DILexicalBlock(scope: !19019, file: !3, line: 646, column: 6)
!19030 = !DILocation(line: 646, column: 11, scope: !19029)
!19031 = !DILocation(line: 646, column: 17, scope: !19029)
!19032 = !DILocation(line: 646, column: 21, scope: !19029)
!19033 = !DILocation(line: 646, column: 25, scope: !19029)
!19034 = !DILocation(line: 646, column: 6, scope: !19019)
!19035 = !DILocation(line: 646, column: 32, scope: !19029)
!19036 = !DILocation(line: 647, column: 2, scope: !19019)
!19037 = !DILocation(line: 647, column: 9, scope: !19038)
!19038 = distinct !DILexicalBlock(scope: !19039, file: !3, line: 647, column: 2)
!19039 = distinct !DILexicalBlock(scope: !19019, file: !3, line: 647, column: 2)
!19040 = !DILocation(line: 647, column: 11, scope: !19038)
!19041 = !DILocation(line: 647, column: 2, scope: !19039)
!19042 = !DILocation(line: 648, column: 9, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19038, file: !3, line: 648, column: 7)
!19044 = !DILocation(line: 648, column: 13, scope: !19043)
!19045 = !DILocation(line: 648, column: 17, scope: !19043)
!19046 = !DILocation(line: 648, column: 23, scope: !19043)
!19047 = !DILocation(line: 648, column: 27, scope: !19043)
!19048 = !DILocation(line: 648, column: 31, scope: !19043)
!19049 = !DILocation(line: 648, column: 20, scope: !19043)
!19050 = !DILocation(line: 648, column: 34, scope: !19043)
!19051 = !DILocation(line: 648, column: 37, scope: !19043)
!19052 = !DILocation(line: 648, column: 41, scope: !19043)
!19053 = !DILocation(line: 648, column: 45, scope: !19043)
!19054 = !DILocation(line: 648, column: 51, scope: !19043)
!19055 = !DILocation(line: 648, column: 55, scope: !19043)
!19056 = !DILocation(line: 648, column: 59, scope: !19043)
!19057 = !DILocation(line: 648, column: 48, scope: !19043)
!19058 = !DILocation(line: 648, column: 7, scope: !19038)
!19059 = !DILocation(line: 648, column: 64, scope: !19043)
!19060 = !DILocation(line: 648, column: 61, scope: !19043)
!19061 = !DILocation(line: 647, column: 19, scope: !19038)
!19062 = !DILocation(line: 647, column: 2, scope: !19038)
!19063 = distinct !{!19063, !19041, !19064}
!19064 = !DILocation(line: 648, column: 71, scope: !19039)
!19065 = !DILocation(line: 649, column: 2, scope: !19019)
!19066 = !DILocation(line: 650, column: 1, scope: !19019)
!19067 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !5013, file: !5013, line: 727, type: !11454, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19068 = !DILocalVariable(name: "a", arg: 1, scope: !19067, file: !5013, line: 727, type: !2195)
!19069 = !DILocation(line: 727, column: 44, scope: !19067)
!19070 = !DILocalVariable(name: "b", arg: 2, scope: !19067, file: !5013, line: 727, type: !2195)
!19071 = !DILocation(line: 727, column: 62, scope: !19067)
!19072 = !DILocalVariable(name: "d", scope: !19067, file: !5013, line: 729, type: !206)
!19073 = !DILocation(line: 729, column: 8, scope: !19067)
!19074 = !DILocation(line: 731, column: 14, scope: !19067)
!19075 = !DILocation(line: 731, column: 17, scope: !19067)
!19076 = !DILocation(line: 731, column: 20, scope: !19067)
!19077 = !DILocation(line: 731, column: 2, scope: !19067)
!19078 = !DILocation(line: 732, column: 18, scope: !19067)
!19079 = !DILocation(line: 732, column: 21, scope: !19067)
!19080 = !DILocation(line: 732, column: 9, scope: !19067)
!19081 = !DILocation(line: 732, column: 2, scope: !19067)
!19082 = distinct !DISubprogram(name: "surface_determineForceTargetPoints", scope: !3, file: !3, line: 4122, type: !19083, scopeLine: 4123, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19083 = !DISubroutineType(types: !19084)
!19084 = !{null, !3906, !135, !233, !233, !211}
!19085 = !DILocalVariable(name: "sData", arg: 1, scope: !19082, file: !3, line: 4122, type: !3906)
!19086 = !DILocation(line: 4122, column: 66, scope: !19082)
!19087 = !DILocalVariable(name: "index", arg: 2, scope: !19082, file: !3, line: 4122, type: !135)
!19088 = !DILocation(line: 4122, column: 77, scope: !19082)
!19089 = !DILocalVariable(name: "force", arg: 3, scope: !19082, file: !3, line: 4122, type: !233)
!19090 = !DILocation(line: 4122, column: 90, scope: !19082)
!19091 = !DILocalVariable(name: "closest_d", arg: 4, scope: !19082, file: !3, line: 4122, type: !233)
!19092 = !DILocation(line: 4122, column: 106, scope: !19082)
!19093 = !DILocalVariable(name: "closest_id", arg: 5, scope: !19082, file: !3, line: 4122, type: !211)
!19094 = !DILocation(line: 4122, column: 124, scope: !19082)
!19095 = !DILocalVariable(name: "bNeighs", scope: !19082, file: !3, line: 4124, type: !3167)
!19096 = !DILocation(line: 4124, column: 16, scope: !19082)
!19097 = !DILocation(line: 4124, column: 26, scope: !19082)
!19098 = !DILocation(line: 4124, column: 33, scope: !19082)
!19099 = !DILocation(line: 4124, column: 40, scope: !19082)
!19100 = !DILocalVariable(name: "numOfNeighs", scope: !19082, file: !3, line: 4125, type: !135)
!19101 = !DILocation(line: 4125, column: 6, scope: !19082)
!19102 = !DILocation(line: 4125, column: 20, scope: !19082)
!19103 = !DILocation(line: 4125, column: 27, scope: !19082)
!19104 = !DILocation(line: 4125, column: 37, scope: !19082)
!19105 = !DILocation(line: 4125, column: 43, scope: !19082)
!19106 = !DILocalVariable(name: "i", scope: !19082, file: !3, line: 4126, type: !135)
!19107 = !DILocation(line: 4126, column: 6, scope: !19082)
!19108 = !DILocation(line: 4128, column: 18, scope: !19082)
!19109 = !DILocation(line: 4128, column: 32, scope: !19082)
!19110 = !DILocation(line: 4128, column: 2, scope: !19082)
!19111 = !DILocation(line: 4128, column: 16, scope: !19082)
!19112 = !DILocation(line: 4129, column: 17, scope: !19082)
!19113 = !DILocation(line: 4129, column: 30, scope: !19082)
!19114 = !DILocation(line: 4129, column: 2, scope: !19082)
!19115 = !DILocation(line: 4129, column: 15, scope: !19082)
!19116 = !DILocation(line: 4132, column: 9, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19082, file: !3, line: 4132, column: 2)
!19118 = !DILocation(line: 4132, column: 7, scope: !19117)
!19119 = !DILocation(line: 4132, column: 14, scope: !19120)
!19120 = distinct !DILexicalBlock(scope: !19117, file: !3, line: 4132, column: 2)
!19121 = !DILocation(line: 4132, column: 18, scope: !19120)
!19122 = !DILocation(line: 4132, column: 16, scope: !19120)
!19123 = !DILocation(line: 4132, column: 2, scope: !19117)
!19124 = !DILocalVariable(name: "n_index", scope: !19125, file: !3, line: 4133, type: !135)
!19125 = distinct !DILexicalBlock(scope: !19120, file: !3, line: 4132, column: 36)
!19126 = !DILocation(line: 4133, column: 7, scope: !19125)
!19127 = !DILocation(line: 4133, column: 17, scope: !19125)
!19128 = !DILocation(line: 4133, column: 24, scope: !19125)
!19129 = !DILocation(line: 4133, column: 34, scope: !19125)
!19130 = !DILocation(line: 4133, column: 42, scope: !19125)
!19131 = !DILocation(line: 4133, column: 51, scope: !19125)
!19132 = !DILocation(line: 4133, column: 49, scope: !19125)
!19133 = !DILocalVariable(name: "dir_dot", scope: !19125, file: !3, line: 4134, type: !207)
!19134 = !DILocation(line: 4134, column: 9, scope: !19125)
!19135 = !DILocation(line: 4134, column: 28, scope: !19125)
!19136 = !DILocation(line: 4134, column: 36, scope: !19125)
!19137 = !DILocation(line: 4134, column: 45, scope: !19125)
!19138 = !DILocation(line: 4134, column: 50, scope: !19125)
!19139 = !DILocation(line: 4134, column: 19, scope: !19125)
!19140 = !DILocation(line: 4136, column: 7, scope: !19141)
!19141 = distinct !DILexicalBlock(scope: !19125, file: !3, line: 4136, column: 7)
!19142 = !DILocation(line: 4136, column: 17, scope: !19141)
!19143 = !DILocation(line: 4136, column: 15, scope: !19141)
!19144 = !DILocation(line: 4136, column: 30, scope: !19141)
!19145 = !DILocation(line: 4136, column: 33, scope: !19141)
!19146 = !DILocation(line: 4136, column: 41, scope: !19141)
!19147 = !DILocation(line: 4136, column: 7, scope: !19125)
!19148 = !DILocation(line: 4136, column: 66, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19141, file: !3, line: 4136, column: 49)
!19150 = !DILocation(line: 4136, column: 51, scope: !19149)
!19151 = !DILocation(line: 4136, column: 64, scope: !19149)
!19152 = !DILocation(line: 4136, column: 91, scope: !19149)
!19153 = !DILocation(line: 4136, column: 75, scope: !19149)
!19154 = !DILocation(line: 4136, column: 89, scope: !19149)
!19155 = !DILocation(line: 4136, column: 100, scope: !19149)
!19156 = !DILocation(line: 4137, column: 2, scope: !19125)
!19157 = !DILocation(line: 4132, column: 32, scope: !19120)
!19158 = !DILocation(line: 4132, column: 2, scope: !19120)
!19159 = distinct !{!19159, !19123, !19160}
!19160 = !DILocation(line: 4137, column: 2, scope: !19117)
!19161 = !DILocation(line: 4139, column: 6, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19082, file: !3, line: 4139, column: 6)
!19163 = !DILocation(line: 4139, column: 19, scope: !19162)
!19164 = !DILocation(line: 4139, column: 6, scope: !19082)
!19165 = !DILocation(line: 4139, column: 27, scope: !19162)
!19166 = !DILocation(line: 4142, column: 9, scope: !19167)
!19167 = distinct !DILexicalBlock(scope: !19082, file: !3, line: 4142, column: 2)
!19168 = !DILocation(line: 4142, column: 7, scope: !19167)
!19169 = !DILocation(line: 4142, column: 14, scope: !19170)
!19170 = distinct !DILexicalBlock(scope: !19167, file: !3, line: 4142, column: 2)
!19171 = !DILocation(line: 4142, column: 18, scope: !19170)
!19172 = !DILocation(line: 4142, column: 16, scope: !19170)
!19173 = !DILocation(line: 4142, column: 2, scope: !19167)
!19174 = !DILocalVariable(name: "n_index", scope: !19175, file: !3, line: 4143, type: !135)
!19175 = distinct !DILexicalBlock(scope: !19170, file: !3, line: 4142, column: 36)
!19176 = !DILocation(line: 4143, column: 7, scope: !19175)
!19177 = !DILocation(line: 4143, column: 17, scope: !19175)
!19178 = !DILocation(line: 4143, column: 24, scope: !19175)
!19179 = !DILocation(line: 4143, column: 34, scope: !19175)
!19180 = !DILocation(line: 4143, column: 42, scope: !19175)
!19181 = !DILocation(line: 4143, column: 51, scope: !19175)
!19182 = !DILocation(line: 4143, column: 49, scope: !19175)
!19183 = !DILocalVariable(name: "dir_dot", scope: !19175, file: !3, line: 4144, type: !207)
!19184 = !DILocation(line: 4144, column: 9, scope: !19175)
!19185 = !DILocation(line: 4144, column: 28, scope: !19175)
!19186 = !DILocation(line: 4144, column: 36, scope: !19175)
!19187 = !DILocation(line: 4144, column: 45, scope: !19175)
!19188 = !DILocation(line: 4144, column: 50, scope: !19175)
!19189 = !DILocation(line: 4144, column: 19, scope: !19175)
!19190 = !DILocalVariable(name: "closest_dot", scope: !19175, file: !3, line: 4145, type: !207)
!19191 = !DILocation(line: 4145, column: 9, scope: !19175)
!19192 = !DILocation(line: 4145, column: 32, scope: !19175)
!19193 = !DILocation(line: 4145, column: 40, scope: !19175)
!19194 = !DILocation(line: 4145, column: 49, scope: !19175)
!19195 = !DILocation(line: 4145, column: 54, scope: !19175)
!19196 = !DILocation(line: 4145, column: 62, scope: !19175)
!19197 = !DILocation(line: 4145, column: 77, scope: !19175)
!19198 = !DILocation(line: 4145, column: 23, scope: !19175)
!19199 = !DILocation(line: 4147, column: 7, scope: !19200)
!19200 = distinct !DILexicalBlock(scope: !19175, file: !3, line: 4147, column: 7)
!19201 = !DILocation(line: 4147, column: 18, scope: !19200)
!19202 = !DILocation(line: 4147, column: 15, scope: !19200)
!19203 = !DILocation(line: 4147, column: 7, scope: !19175)
!19204 = !DILocation(line: 4147, column: 33, scope: !19200)
!19205 = !DILocation(line: 4151, column: 7, scope: !19206)
!19206 = distinct !DILexicalBlock(scope: !19175, file: !3, line: 4151, column: 7)
!19207 = !DILocation(line: 4151, column: 17, scope: !19206)
!19208 = !DILocation(line: 4151, column: 15, scope: !19206)
!19209 = !DILocation(line: 4151, column: 30, scope: !19206)
!19210 = !DILocation(line: 4151, column: 33, scope: !19206)
!19211 = !DILocation(line: 4151, column: 47, scope: !19206)
!19212 = !DILocation(line: 4151, column: 45, scope: !19206)
!19213 = !DILocation(line: 4151, column: 60, scope: !19206)
!19214 = !DILocation(line: 4151, column: 63, scope: !19206)
!19215 = !DILocation(line: 4151, column: 71, scope: !19206)
!19216 = !DILocation(line: 4151, column: 7, scope: !19175)
!19217 = !DILocation(line: 4152, column: 19, scope: !19218)
!19218 = distinct !DILexicalBlock(scope: !19206, file: !3, line: 4151, column: 79)
!19219 = !DILocation(line: 4152, column: 4, scope: !19218)
!19220 = !DILocation(line: 4152, column: 17, scope: !19218)
!19221 = !DILocation(line: 4152, column: 44, scope: !19218)
!19222 = !DILocation(line: 4152, column: 28, scope: !19218)
!19223 = !DILocation(line: 4152, column: 42, scope: !19218)
!19224 = !DILocation(line: 4153, column: 3, scope: !19218)
!19225 = !DILocation(line: 4154, column: 2, scope: !19175)
!19226 = !DILocation(line: 4142, column: 32, scope: !19170)
!19227 = !DILocation(line: 4142, column: 2, scope: !19170)
!19228 = distinct !{!19228, !19173, !19229}
!19229 = !DILocation(line: 4154, column: 2, scope: !19167)
!19230 = !DILocation(line: 4158, column: 6, scope: !19231)
!19231 = distinct !DILexicalBlock(scope: !19082, file: !3, line: 4158, column: 6)
!19232 = !DILocation(line: 4158, column: 20, scope: !19231)
!19233 = !DILocation(line: 4158, column: 6, scope: !19082)
!19234 = !DILocalVariable(name: "force_proj", scope: !19235, file: !3, line: 4159, type: !206)
!19235 = distinct !DILexicalBlock(scope: !19231, file: !3, line: 4158, column: 27)
!19236 = !DILocation(line: 4159, column: 9, scope: !19235)
!19237 = !DILocalVariable(name: "tangent", scope: !19235, file: !3, line: 4160, type: !206)
!19238 = !DILocation(line: 4160, column: 9, scope: !19235)
!19239 = !DILocalVariable(name: "neigh_diff", scope: !19235, file: !3, line: 4161, type: !207)
!19240 = !DILocation(line: 4161, column: 9, scope: !19235)
!19241 = !DILocation(line: 4161, column: 37, scope: !19235)
!19242 = !DILocation(line: 4161, column: 45, scope: !19235)
!19243 = !DILocation(line: 4161, column: 60, scope: !19235)
!19244 = !DILocation(line: 4161, column: 65, scope: !19235)
!19245 = !DILocation(line: 4161, column: 73, scope: !19235)
!19246 = !DILocation(line: 4161, column: 88, scope: !19235)
!19247 = !DILocation(line: 4161, column: 28, scope: !19235)
!19248 = !DILocation(line: 4161, column: 22, scope: !19235)
!19249 = !DILocalVariable(name: "force_intersect", scope: !19235, file: !3, line: 4162, type: !207)
!19250 = !DILocation(line: 4162, column: 9, scope: !19235)
!19251 = !DILocalVariable(name: "temp", scope: !19235, file: !3, line: 4163, type: !207)
!19252 = !DILocation(line: 4163, column: 9, scope: !19235)
!19253 = !DILocation(line: 4167, column: 17, scope: !19235)
!19254 = !DILocation(line: 4167, column: 26, scope: !19235)
!19255 = !DILocation(line: 4167, column: 34, scope: !19235)
!19256 = !DILocation(line: 4167, column: 49, scope: !19235)
!19257 = !DILocation(line: 4167, column: 54, scope: !19235)
!19258 = !DILocation(line: 4167, column: 62, scope: !19235)
!19259 = !DILocation(line: 4167, column: 77, scope: !19235)
!19260 = !DILocation(line: 4167, column: 3, scope: !19235)
!19261 = !DILocation(line: 4168, column: 16, scope: !19235)
!19262 = !DILocation(line: 4168, column: 3, scope: !19235)
!19263 = !DILocation(line: 4169, column: 30, scope: !19235)
!19264 = !DILocation(line: 4169, column: 37, scope: !19235)
!19265 = !DILocation(line: 4169, column: 21, scope: !19235)
!19266 = !DILocation(line: 4169, column: 19, scope: !19235)
!19267 = !DILocation(line: 4170, column: 18, scope: !19235)
!19268 = !DILocation(line: 4170, column: 30, scope: !19235)
!19269 = !DILocation(line: 4170, column: 37, scope: !19235)
!19270 = !DILocation(line: 4170, column: 56, scope: !19235)
!19271 = !DILocation(line: 4170, column: 54, scope: !19235)
!19272 = !DILocation(line: 4170, column: 3, scope: !19235)
!19273 = !DILocation(line: 4171, column: 16, scope: !19235)
!19274 = !DILocation(line: 4171, column: 3, scope: !19235)
!19275 = !DILocation(line: 4174, column: 19, scope: !19235)
!19276 = !DILocation(line: 4174, column: 27, scope: !19235)
!19277 = !DILocation(line: 4174, column: 42, scope: !19235)
!19278 = !DILocation(line: 4174, column: 47, scope: !19235)
!19279 = !DILocation(line: 4174, column: 10, scope: !19235)
!19280 = !DILocation(line: 4174, column: 8, scope: !19235)
!19281 = !DILocation(line: 4175, column: 3, scope: !19282)
!19282 = distinct !DILexicalBlock(scope: !19283, file: !3, line: 4175, column: 3)
!19283 = distinct !DILexicalBlock(scope: !19235, file: !3, line: 4175, column: 3)
!19284 = !DILocation(line: 4175, column: 3, scope: !19283)
!19285 = !DILocation(line: 4175, column: 3, scope: !19286)
!19286 = distinct !DILexicalBlock(scope: !19282, file: !3, line: 4175, column: 3)
!19287 = !DILocation(line: 4176, column: 24, scope: !19235)
!19288 = !DILocation(line: 4176, column: 18, scope: !19235)
!19289 = !DILocation(line: 4176, column: 32, scope: !19235)
!19290 = !DILocation(line: 4176, column: 30, scope: !19235)
!19291 = !DILocation(line: 4176, column: 3, scope: !19235)
!19292 = !DILocation(line: 4176, column: 16, scope: !19235)
!19293 = !DILocation(line: 4177, column: 25, scope: !19235)
!19294 = !DILocation(line: 4177, column: 23, scope: !19235)
!19295 = !DILocation(line: 4177, column: 3, scope: !19235)
!19296 = !DILocation(line: 4177, column: 16, scope: !19235)
!19297 = !DILocation(line: 4180, column: 16, scope: !19235)
!19298 = !DILocation(line: 4180, column: 10, scope: !19235)
!19299 = !DILocation(line: 4180, column: 8, scope: !19235)
!19300 = !DILocation(line: 4181, column: 3, scope: !19301)
!19301 = distinct !DILexicalBlock(scope: !19302, file: !3, line: 4181, column: 3)
!19302 = distinct !DILexicalBlock(scope: !19235, file: !3, line: 4181, column: 3)
!19303 = !DILocation(line: 4181, column: 3, scope: !19302)
!19304 = !DILocation(line: 4181, column: 3, scope: !19305)
!19305 = distinct !DILexicalBlock(scope: !19301, file: !3, line: 4181, column: 3)
!19306 = !DILocation(line: 4182, column: 13, scope: !19235)
!19307 = !DILocation(line: 4182, column: 30, scope: !19235)
!19308 = !DILocation(line: 4182, column: 24, scope: !19235)
!19309 = !DILocation(line: 4182, column: 36, scope: !19235)
!19310 = !DILocation(line: 4182, column: 3, scope: !19235)
!19311 = !DILocation(line: 4183, column: 2, scope: !19235)
!19312 = !DILocation(line: 4186, column: 31, scope: !19313)
!19313 = distinct !DILexicalBlock(scope: !19231, file: !3, line: 4184, column: 7)
!19314 = !DILocation(line: 4186, column: 25, scope: !19313)
!19315 = !DILocation(line: 4186, column: 45, scope: !19313)
!19316 = !DILocation(line: 4186, column: 23, scope: !19313)
!19317 = !DILocation(line: 4186, column: 3, scope: !19313)
!19318 = !DILocation(line: 4186, column: 16, scope: !19313)
!19319 = !DILocation(line: 4188, column: 1, scope: !19082)
!19320 = distinct !DISubprogram(name: "mixColors", scope: !3, file: !3, line: 464, type: !19321, scopeLine: 465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19321 = !DISubroutineType(types: !19322)
!19322 = !{!207, !233, !207, !233, !207, !207}
!19323 = !DILocalVariable(name: "a_color", arg: 1, scope: !19320, file: !3, line: 464, type: !233)
!19324 = !DILocation(line: 464, column: 30, scope: !19320)
!19325 = !DILocalVariable(name: "a_weight", arg: 2, scope: !19320, file: !3, line: 464, type: !207)
!19326 = !DILocation(line: 464, column: 48, scope: !19320)
!19327 = !DILocalVariable(name: "b_color", arg: 3, scope: !19320, file: !3, line: 464, type: !233)
!19328 = !DILocation(line: 464, column: 64, scope: !19320)
!19329 = !DILocalVariable(name: "b_weight", arg: 4, scope: !19320, file: !3, line: 464, type: !207)
!19330 = !DILocation(line: 464, column: 82, scope: !19320)
!19331 = !DILocalVariable(name: "ratio", arg: 5, scope: !19320, file: !3, line: 464, type: !207)
!19332 = !DILocation(line: 464, column: 98, scope: !19320)
!19333 = !DILocalVariable(name: "weight_ratio", scope: !19320, file: !3, line: 466, type: !207)
!19334 = !DILocation(line: 466, column: 8, scope: !19320)
!19335 = !DILocalVariable(name: "factor", scope: !19320, file: !3, line: 466, type: !207)
!19336 = !DILocation(line: 466, column: 22, scope: !19320)
!19337 = !DILocation(line: 467, column: 6, scope: !19338)
!19338 = distinct !DILexicalBlock(scope: !19320, file: !3, line: 467, column: 6)
!19339 = !DILocation(line: 467, column: 6, scope: !19320)
!19340 = !DILocation(line: 469, column: 8, scope: !19341)
!19341 = distinct !DILexicalBlock(scope: !19342, file: !3, line: 469, column: 7)
!19342 = distinct !DILexicalBlock(scope: !19338, file: !3, line: 467, column: 16)
!19343 = !DILocation(line: 469, column: 7, scope: !19342)
!19344 = !DILocation(line: 470, column: 15, scope: !19345)
!19345 = distinct !DILexicalBlock(scope: !19341, file: !3, line: 469, column: 18)
!19346 = !DILocation(line: 470, column: 24, scope: !19345)
!19347 = !DILocation(line: 470, column: 4, scope: !19345)
!19348 = !DILocation(line: 471, column: 11, scope: !19345)
!19349 = !DILocation(line: 471, column: 22, scope: !19345)
!19350 = !DILocation(line: 471, column: 20, scope: !19345)
!19351 = !DILocation(line: 471, column: 4, scope: !19345)
!19352 = !DILocation(line: 473, column: 18, scope: !19342)
!19353 = !DILocation(line: 473, column: 30, scope: !19342)
!19354 = !DILocation(line: 473, column: 41, scope: !19342)
!19355 = !DILocation(line: 473, column: 39, scope: !19342)
!19356 = !DILocation(line: 473, column: 27, scope: !19342)
!19357 = !DILocation(line: 473, column: 16, scope: !19342)
!19358 = !DILocation(line: 474, column: 2, scope: !19342)
!19359 = !DILocation(line: 476, column: 10, scope: !19360)
!19360 = distinct !DILexicalBlock(scope: !19338, file: !3, line: 475, column: 7)
!19361 = !DILocation(line: 476, column: 29, scope: !19360)
!19362 = !DILocation(line: 476, column: 27, scope: !19360)
!19363 = !DILocation(line: 476, column: 19, scope: !19360)
!19364 = !DILocation(line: 476, column: 3, scope: !19360)
!19365 = !DILocation(line: 480, column: 6, scope: !19366)
!19366 = distinct !DILexicalBlock(scope: !19320, file: !3, line: 480, column: 6)
!19367 = !DILocation(line: 480, column: 12, scope: !19366)
!19368 = !DILocation(line: 480, column: 6, scope: !19320)
!19369 = !DILocation(line: 481, column: 12, scope: !19370)
!19370 = distinct !DILexicalBlock(scope: !19366, file: !3, line: 480, column: 21)
!19371 = !DILocation(line: 481, column: 28, scope: !19370)
!19372 = !DILocation(line: 481, column: 34, scope: !19370)
!19373 = !DILocation(line: 481, column: 25, scope: !19370)
!19374 = !DILocation(line: 481, column: 10, scope: !19370)
!19375 = !DILocation(line: 482, column: 2, scope: !19370)
!19376 = !DILocation(line: 484, column: 12, scope: !19377)
!19377 = distinct !DILexicalBlock(scope: !19366, file: !3, line: 483, column: 7)
!19378 = !DILocation(line: 484, column: 18, scope: !19377)
!19379 = !DILocation(line: 484, column: 25, scope: !19377)
!19380 = !DILocation(line: 484, column: 9, scope: !19377)
!19381 = !DILocation(line: 485, column: 12, scope: !19377)
!19382 = !DILocation(line: 485, column: 35, scope: !19377)
!19383 = !DILocation(line: 485, column: 33, scope: !19377)
!19384 = !DILocation(line: 485, column: 25, scope: !19377)
!19385 = !DILocation(line: 485, column: 44, scope: !19377)
!19386 = !DILocation(line: 485, column: 42, scope: !19377)
!19387 = !DILocation(line: 485, column: 10, scope: !19377)
!19388 = !DILocation(line: 488, column: 17, scope: !19320)
!19389 = !DILocation(line: 488, column: 26, scope: !19320)
!19390 = !DILocation(line: 488, column: 35, scope: !19320)
!19391 = !DILocation(line: 488, column: 44, scope: !19320)
!19392 = !DILocation(line: 488, column: 2, scope: !19320)
!19393 = !DILocation(line: 489, column: 17, scope: !19320)
!19394 = !DILocation(line: 489, column: 15, scope: !19320)
!19395 = !DILocation(line: 489, column: 27, scope: !19320)
!19396 = !DILocation(line: 489, column: 25, scope: !19320)
!19397 = !DILocation(line: 489, column: 38, scope: !19320)
!19398 = !DILocation(line: 489, column: 47, scope: !19320)
!19399 = !DILocation(line: 489, column: 45, scope: !19320)
!19400 = !DILocation(line: 489, column: 36, scope: !19320)
!19401 = !DILocation(line: 489, column: 2, scope: !19320)
!19402 = !DILocation(line: 490, column: 1, scope: !19320)
!19403 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !5013, file: !5013, line: 634, type: !8683, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19404 = !DILocalVariable(name: "r", arg: 1, scope: !19403, file: !5013, line: 634, type: !233)
!19405 = !DILocation(line: 634, column: 34, scope: !19403)
!19406 = !DILocalVariable(name: "a", arg: 2, scope: !19403, file: !5013, line: 634, type: !2195)
!19407 = !DILocation(line: 634, column: 52, scope: !19403)
!19408 = !DILocalVariable(name: "b", arg: 3, scope: !19403, file: !5013, line: 634, type: !2195)
!19409 = !DILocation(line: 634, column: 70, scope: !19403)
!19410 = !DILocation(line: 637, column: 9, scope: !19403)
!19411 = !DILocation(line: 637, column: 16, scope: !19403)
!19412 = !DILocation(line: 637, column: 14, scope: !19403)
!19413 = !DILocation(line: 637, column: 23, scope: !19403)
!19414 = !DILocation(line: 637, column: 30, scope: !19403)
!19415 = !DILocation(line: 637, column: 28, scope: !19403)
!19416 = !DILocation(line: 637, column: 21, scope: !19403)
!19417 = !DILocation(line: 637, column: 2, scope: !19403)
!19418 = !DILocation(line: 637, column: 7, scope: !19403)
!19419 = !DILocation(line: 638, column: 9, scope: !19403)
!19420 = !DILocation(line: 638, column: 16, scope: !19403)
!19421 = !DILocation(line: 638, column: 14, scope: !19403)
!19422 = !DILocation(line: 638, column: 23, scope: !19403)
!19423 = !DILocation(line: 638, column: 30, scope: !19403)
!19424 = !DILocation(line: 638, column: 28, scope: !19403)
!19425 = !DILocation(line: 638, column: 21, scope: !19403)
!19426 = !DILocation(line: 638, column: 2, scope: !19403)
!19427 = !DILocation(line: 638, column: 7, scope: !19403)
!19428 = !DILocation(line: 639, column: 9, scope: !19403)
!19429 = !DILocation(line: 639, column: 16, scope: !19403)
!19430 = !DILocation(line: 639, column: 14, scope: !19403)
!19431 = !DILocation(line: 639, column: 23, scope: !19403)
!19432 = !DILocation(line: 639, column: 30, scope: !19403)
!19433 = !DILocation(line: 639, column: 28, scope: !19403)
!19434 = !DILocation(line: 639, column: 21, scope: !19403)
!19435 = !DILocation(line: 639, column: 2, scope: !19403)
!19436 = !DILocation(line: 639, column: 7, scope: !19403)
!19437 = !DILocation(line: 640, column: 1, scope: !19403)
!19438 = distinct !DISubprogram(name: "getSurfaceDimension", scope: !3, file: !3, line: 689, type: !19439, scopeLine: 690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3311)
!19439 = !DISubroutineType(types: !19440)
!19440 = !{!207, !3906}
!19441 = !DILocalVariable(name: "sData", arg: 1, scope: !19438, file: !3, line: 689, type: !3906)
!19442 = !DILocation(line: 689, column: 52, scope: !19438)
!19443 = !DILocalVariable(name: "mb", scope: !19438, file: !3, line: 691, type: !3182)
!19444 = !DILocation(line: 691, column: 12, scope: !19438)
!19445 = !DILocation(line: 691, column: 18, scope: !19438)
!19446 = !DILocation(line: 691, column: 25, scope: !19438)
!19447 = !DILocation(line: 691, column: 32, scope: !19438)
!19448 = !DILocation(line: 692, column: 18, scope: !19438)
!19449 = !DILocation(line: 692, column: 22, scope: !19438)
!19450 = !DILocation(line: 692, column: 31, scope: !19438)
!19451 = !DILocation(line: 692, column: 35, scope: !19438)
!19452 = !DILocation(line: 692, column: 29, scope: !19438)
!19453 = !DILocation(line: 692, column: 45, scope: !19438)
!19454 = !DILocation(line: 692, column: 49, scope: !19438)
!19455 = !DILocation(line: 692, column: 58, scope: !19438)
!19456 = !DILocation(line: 692, column: 62, scope: !19438)
!19457 = !DILocation(line: 692, column: 56, scope: !19438)
!19458 = !DILocation(line: 692, column: 72, scope: !19438)
!19459 = !DILocation(line: 692, column: 76, scope: !19438)
!19460 = !DILocation(line: 692, column: 85, scope: !19438)
!19461 = !DILocation(line: 692, column: 89, scope: !19438)
!19462 = !DILocation(line: 692, column: 83, scope: !19438)
!19463 = !DILocation(line: 692, column: 9, scope: !19438)
!19464 = !DILocation(line: 692, column: 2, scope: !19438)
