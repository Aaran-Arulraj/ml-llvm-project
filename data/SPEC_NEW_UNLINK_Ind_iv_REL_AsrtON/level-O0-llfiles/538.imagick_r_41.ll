; ModuleID = 'magick/colorspace.c'
source_filename = "magick/colorspace.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._TransformPacket = type { float, float, float }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }

@.str = private unnamed_addr constant [20 x i8] c"magick/colorspace.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"gamma\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"film-gamma\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"reference-black\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"reference-white\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.9 = private unnamed_addr constant [19 x i8] c"RGBTransform/Image\00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"icc\00", align 1
@.str.11 = private unnamed_addr constant [4 x i8] c"icm\00", align 1
@TransformRGBImage.YCCMap = internal constant [1389 x float] [float 0.000000e+00, float 0x3F4797CC40000000, float 0x3F579BFE00000000, float 0x3F61B3F200000000, float 0x3F679BFE00000000, float 0x3F6D81F100000000, float 0x3F71B4FE80000000, float 0x3F74A7F800000000, float 0x3F779BFE00000000, float 0x3F7A8EF780000000, float 0x3F7D82FD80000000, float 0x3F803AFB80000000, float 0x3F81B4FE80000000, float 0x3F832E7B40000000, float 0x3F84A7F800000000, float 0x3F8621FB00000000, float 0x3F879B77C0000000, float 0x3F89157AC0000000, float 0x3F8A8EF780000000, float 0x3F8C08FA80000000, float 0x3F8D827740000000, float 0x3F8EFC7A40000000, float 0x3F903AFB80000000, float 0x3F90F7FD00000000, float 0x3F91B4BB60000000, float 0x3F9271BCE0000000, float 0x3F932E7B40000000, float 0x3F93EB39A0000000, float 0x3F94A83B20000000, float 0x3F9564F980000000, float 0x3F9621FB00000000, float 0x3F96DEB960000000, float 0x3F979BBAE0000000, float 0x3F98587940000000, float 0x3F99157AC0000000, float 0x3F99D23920000000, float 0x3F9A8F3AA0000000, float 0x3F9B4BF900000000, float 0x3F9C08FA80000000, float 0x3F9CC5B8E0000000, float 0x3F9D827740000000, float 0x3F9E3F78C0000000, float 0x3F9EFC3720000000, float 0x3F9FB938A0000000, float 0x3FA03AFB80000000, float 0x3FA0997C40000000, float 0x3FA0F7DB60000000, float 0x3FA1565C20000000, float 0x3FA1B4BB60000000, float 0x3FA2133C20000000, float 0x3FA2719B40000000, float 0x3FA2D01C00000000, float 0x3FA32E7B40000000, float 0x3FA38CDA60000000, float 0x3FA3EB5B20000000, float 0x3FA449BA60000000, float 0x3FA4A83B20000000, float 0x3FA5069A40000000, float 0x3FA5651B00000000, float 0x3FA5C37A40000000, float 0x3FA621FB00000000, float 0x3FA6805A20000000, float 0x3FA6DEDAE0000000, float 0x3FA73D3A20000000, float 0x3FA79BBAE0000000, float 0x3FA7FA1A00000000, float 0x3FA8587940000000, float 0x3FA8B6FA00000000, float 0x3FA9155920000000, float 0x3FA973D9E0000000, float 0x3FA9D23920000000, float 0x3FAA30B9E0000000, float 0x3FAA8F1900000000, float 0x3FAAED99C0000000, float 0x3FAB4BF900000000, float 0x3FABAA79C0000000, float 0x3FAC08D8E0000000, float 0x3FAC6759A0000000, float 0x3FACC5B8E0000000, float 0x3FAD241800000000, float 0x3FAD8298C0000000, float 0x3FADE0F800000000, float 0x3FAE3F78C0000000, float 0x3FAE9DD7E0000000, float 0x3FAEFC58A0000000, float 0x3FAF5AB7E0000000, float 0x3FAFB938A0000000, float 0x3FB00BCBE0000000, float 0x3FB03B0C40000000, float 0x3FB06A3BE0000000, float 0x3FB0997C40000000, float 0x3FB0C8ABE0000000, float 0x3FB0F7DB60000000, float 0x3FB1271BC0000000, float 0x3FB1564B60000000, float 0x3FB1858BC0000000, float 0x3FB1B4BB60000000, float 0x3FB1E3FBC0000000, float 0x3FB2132B60000000, float 0x3FB2426BC0000000, float 0x3FB2719B40000000, float 0x3FB2A0DBA0000000, float 0x3FB2D00B40000000, float 0x3FB2FF3AE0000000, float 0x3FB32E7B40000000, float 0x3FB35DAAE0000000, float 0x3FB38CEB40000000, float 0x3FB3BC1AC0000000, float 0x3FB3EB5B20000000, float 0x3FB41A8AC0000000, float 0x3FB449CB20000000, float 0x3FB478FAC0000000, float 0x3FB4A83B20000000, float 0x3FB4D76AC0000000, float 0x3FB506AB20000000, float 0x3FB535DAA0000000, float 0x3FB5650A40000000, float 0x3FB5944AA0000000, float 0x3FB5C37A40000000, float 0x3FB5F2BAA0000000, float 0x3FB621EA40000000, float 0x3FB6512AA0000000, float 0x3FB6805A20000000, float 0x3FB6AF9A80000000, float 0x3FB6DECA20000000, float 0x3FB70E0A80000000, float 0x3FB73D3A20000000, float 0x3FB76C7A80000000, float 0x3FB79BAA20000000, float 0x3FB7CAD9A0000000, float 0x3FB7FA1A00000000, float 0x3FB82949A0000000, float 0x3FB8588A00000000, float 0x3FB887B9A0000000, float 0x3FB8B6FA00000000, float 0x3FB8E629A0000000, float 0x3FB9156A00000000, float 0x3FB9449980000000, float 0x3FB973D9E0000000, float 0x3FB9A30980000000, float 0x3FB9D249E0000000, float 0x3FBA017980000000, float 0x3FBA30A920000000, float 0x3FBA5FE980000000, float 0x3FBA8F1900000000, float 0x3FBABE5960000000, float 0x3FBAED8900000000, float 0x3FBB1CC960000000, float 0x3FBB4BF900000000, float 0x3FBB7B3960000000, float 0x3FBBAA6900000000, float 0x3FBBD9A960000000, float 0x3FBC08D8E0000000, float 0x3FBC381940000000, float 0x3FBC6748E0000000, float 0x3FBC967880000000, float 0x3FBCC5B8E0000000, float 0x3FBCF4E880000000, float 0x3FBD2428E0000000, float 0x3FBD535860000000, float 0x3FBD8298C0000000, float 0x3FBDB1C860000000, float 0x3FBDE108C0000000, float 0x3FBE103860000000, float 0x3FBE3F78C0000000, float 0x3FBE6EA860000000, float 0x3FBE9DE8C0000000, float 0x3FBECD1840000000, float 0x3FBEFC47E0000000, float 0x3FBF2B8840000000, float 0x3FBF5AB7E0000000, float 0x3FBF89F840000000, float 0x3FBFB927E0000000, float 0x3FBFE86840000000, float 0x3FC00BCBE0000000, float 0x3FC0236C20000000, float 0x3FC03B03E0000000, float 0x3FC052A420000000, float 0x3FC06A3BE0000000, float 0x3FC081DC00000000, float 0x3FC09973E0000000, float 0x3FC0B10BA0000000, float 0x3FC0C8ABE0000000, float 0x3FC0E043A0000000, float 0x3FC0F7E3E0000000, float 0x3FC10F7BA0000000, float 0x3FC1271BC0000000, float 0x3FC13EB3A0000000, float 0x3FC15653C0000000, float 0x3FC16DEBA0000000, float 0x3FC1858BC0000000, float 0x3FC19D23A0000000, float 0x3FC1B4C3C0000000, float 0x3FC1CC5B80000000, float 0x3FC1E3F360000000, float 0x3FC1FB9380000000, float 0x3FC2132B60000000, float 0x3FC22ACB80000000, float 0x3FC2426360000000, float 0x3FC25A0380000000, float 0x3FC2719B40000000, float 0x3FC2893B80000000, float 0x3FC2A0D340000000, float 0x3FC2B87380000000, float 0x3FC2D00B40000000, float 0x3FC2E7AB80000000, float 0x3FC2FF4340000000, float 0x3FC316DB00000000, float 0x3FC32E7B40000000, float 0x3FC3461300000000, float 0x3FC35DB340000000, float 0x3FC3754B00000000, float 0x3FC38CEB40000000, float 0x3FC3A48300000000, float 0x3FC3BC2340000000, float 0x3FC3D3BB00000000, float 0x3FC3EB5B20000000, float 0x3FC402F300000000, float 0x3FC41A9320000000, float 0x3FC4322B00000000, float 0x3FC449C2C0000000, float 0x3FC4616300000000, float 0x3FC478FAC0000000, float 0x3FC4909AE0000000, float 0x3FC4A832C0000000, float 0x3FC4BFD2E0000000, float 0x3FC4D76AC0000000, float 0x3FC4EF0AE0000000, float 0x3FC506A2C0000000, float 0x3FC51E42E0000000, float 0x3FC535DAA0000000, float 0x3FC54D7AE0000000, float 0x3FC56512A0000000, float 0x3FC57CAA80000000, float 0x3FC5944AA0000000, float 0x3FC5ABE280000000, float 0x3FC5C382A0000000, float 0x3FC5DB1A60000000, float 0x3FC5F2BAA0000000, float 0x3FC60A5260000000, float 0x3FC621F2A0000000, float 0x3FC6398A60000000, float 0x3FC6512AA0000000, float 0x3FC668C260000000, float 0x3FC68062A0000000, float 0x3FC697FA60000000, float 0x3FC6AF9220000000, float 0x3FC6C73260000000, float 0x3FC6DECA20000000, float 0x3FC6F66A60000000, float 0x3FC70E0220000000, float 0x3FC725A260000000, float 0x3FC73D3A20000000, float 0x3FC754DA40000000, float 0x3FC76C7220000000, float 0x3FC7841240000000, float 0x3FC79BAA20000000, float 0x3FC7B34A40000000, float 0x3FC7CAE220000000, float 0x3FC7E279E0000000, float 0x3FC7FA1A00000000, float 0x3FC811B1E0000000, float 0x3FC8295200000000, float 0x3FC840E9E0000000, float 0x3FC8588A00000000, float 0x3FC87021E0000000, float 0x3FC887C200000000, float 0x3FC89F59C0000000, float 0x3FC8B6FA00000000, float 0x3FC8CE91C0000000, float 0x3FC8E629A0000000, float 0x3FC8FDC9C0000000, float 0x3FC91561A0000000, float 0x3FC92D01C0000000, float 0x3FC9449980000000, float 0x3FC95C39C0000000, float 0x3FC973D180000000, float 0x3FC98B71C0000000, float 0x3FC9A30980000000, float 0x3FC9BAA9C0000000, float 0x3FC9D24180000000, float 0x3FC9E9E1C0000000, float 0x3FCA017980000000, float 0x3FCA191140000000, float 0x3FCA30B180000000, float 0x3FCA484940000000, float 0x3FCA5FE980000000, float 0x3FCA778140000000, float 0x3FCA8F2180000000, float 0x3FCAA6B940000000, float 0x3FCABE5960000000, float 0x3FCAD5F140000000, float 0x3FCAED9160000000, float 0x3FCB052940000000, float 0x3FCB1CC960000000, float 0x3FCB346140000000, float 0x3FCB4BF900000000, float 0x3FCB639920000000, float 0x3FCB7B3100000000, float 0x3FCB92D120000000, float 0x3FCBAA6900000000, float 0x3FCBC20920000000, float 0x3FCBD9A100000000, float 0x3FCBF14120000000, float 0x3FCC08D8E0000000, float 0x3FCC207920000000, float 0x3FCC3810E0000000, float 0x3FCC4FB120000000, float 0x3FCC6748E0000000, float 0x3FCC7EE0C0000000, float 0x3FCC9680E0000000, float 0x3FCCAE18A0000000, float 0x3FCCC5B8E0000000, float 0x3FCCDD50A0000000, float 0x3FCCF4F0E0000000, float 0x3FCD0C88A0000000, float 0x3FCD2428E0000000, float 0x3FCD3BC0A0000000, float 0x3FCD5360E0000000, float 0x3FCD6AF8A0000000, float 0x3FCD8298C0000000, float 0x3FCD9A30A0000000, float 0x3FCDB1C860000000, float 0x3FCDC968A0000000, float 0x3FCDE10060000000, float 0x3FCDF8A0A0000000, float 0x3FCE103860000000, float 0x3FCE27D880000000, float 0x3FCE3F7060000000, float 0x3FCE571080000000, float 0x3FCE6EA860000000, float 0x3FCE864880000000, float 0x3FCE9DE060000000, float 0x3FCEB58080000000, float 0x3FCECD1840000000, float 0x3FCEE4B020000000, float 0x3FCEFC5040000000, float 0x3FCF13E820000000, float 0x3FCF2B8840000000, float 0x3FCF432020000000, float 0x3FCF5AC040000000, float 0x3FCF725800000000, float 0x3FCF89F840000000, float 0x3FCFA19000000000, float 0x3FCFB93040000000, float 0x3FCFD0C800000000, float 0x3FCFE86840000000, float 2.500000e-01, float 0x3FD00BCBE0000000, float 0x3FD0179C00000000, float 0x3FD02367E0000000, float 0x3FD02F3800000000, float 0x3FD03B03E0000000, float 0x3FD046D400000000, float 0x3FD0529FE0000000, float 0x3FD05E7000000000, float 0x3FD06A3BE0000000, float 0x3FD0760C00000000, float 0x3FD081D7E0000000, float 0x3FD08DA800000000, float 0x3FD09973E0000000, float 0x3FD0A53FC0000000, float 0x3FD0B10FE0000000, float 0x3FD0BCDBC0000000, float 0x3FD0C8ABE0000000, float 0x3FD0D477C0000000, float 0x3FD0E047E0000000, float 0x3FD0EC13C0000000, float 0x3FD0F7E3E0000000, float 0x3FD103AFC0000000, float 0x3FD10F7FC0000000, float 0x3FD11B4BC0000000, float 0x3FD1271BC0000000, float 0x3FD132E7C0000000, float 0x3FD13EB3A0000000, float 0x3FD14A83C0000000, float 0x3FD1564FA0000000, float 0x3FD1621FA0000000, float 0x3FD16DEBA0000000, float 0x3FD179BBA0000000, float 0x3FD18587A0000000, float 0x3FD19157A0000000, float 0x3FD19D23A0000000, float 0x3FD1A8F3A0000000, float 0x3FD1B4BF80000000, float 0x3FD1C08FA0000000, float 0x3FD1CC5B80000000, float 0x3FD1D82780000000, float 0x3FD1E3F780000000, float 0x3FD1EFC380000000, float 0x3FD1FB9380000000, float 0x3FD2075F60000000, float 0x3FD2132F80000000, float 0x3FD21EFB60000000, float 0x3FD22ACB80000000, float 0x3FD2369760000000, float 0x3FD2426780000000, float 0x3FD24E3360000000, float 0x3FD25A0380000000, float 0x3FD265CF60000000, float 0x3FD2719B40000000, float 0x3FD27D6B60000000, float 0x3FD2893740000000, float 0x3FD2950760000000, float 0x3FD2A0D340000000, float 0x3FD2ACA360000000, float 0x3FD2B86F40000000, float 0x3FD2C43F60000000, float 0x3FD2D00B40000000, float 0x3FD2DBDB60000000, float 0x3FD2E7A740000000, float 0x3FD2F37320000000, float 0x3FD2FF4340000000, float 0x3FD30B0F20000000, float 0x3FD316DF40000000, float 0x3FD322AB20000000, float 0x3FD32E7B40000000, float 0x3FD33A4720000000, float 0x3FD3461740000000, float 0x3FD351E320000000, float 0x3FD35DB340000000, float 0x3FD3697F20000000, float 0x3FD3754F40000000, float 0x3FD3811B20000000, float 0x3FD38CEB40000000, float 0x3FD398B720000000, float 0x3FD3A48300000000, float 0x3FD3B05320000000, float 0x3FD3BC1F00000000, float 0x3FD3C7EF20000000, float 0x3FD3D3BB00000000, float 0x3FD3DF8B20000000, float 0x3FD3EB5700000000, float 0x3FD3F72720000000, float 0x3FD402F300000000, float 0x3FD40EC320000000, float 0x3FD41A8F00000000, float 0x3FD4265F00000000, float 0x3FD4322B00000000, float 0x3FD43DF6E0000000, float 0x3FD449C700000000, float 0x3FD45592E0000000, float 0x3FD4616300000000, float 0x3FD46D2EE0000000, float 0x3FD478FEE0000000, float 0x3FD484CAE0000000, float 0x3FD4909AE0000000, float 0x3FD49C66E0000000, float 0x3FD4A836E0000000, float 0x3FD4B402E0000000, float 0x3FD4BFCEC0000000, float 0x3FD4CB9EC0000000, float 0x3FD4D76AC0000000, float 0x3FD4E33AC0000000, float 0x3FD4EF06C0000000, float 0x3FD4FAD6C0000000, float 0x3FD506A2C0000000, float 0x3FD51272C0000000, float 0x3FD51E3EA0000000, float 0x3FD52A0EC0000000, float 0x3FD535DAA0000000, float 0x3FD541AAC0000000, float 0x3FD54D76A0000000, float 0x3FD55942A0000000, float 0x3FD56512A0000000, float 0x3FD570DE80000000, float 0x3FD57CAEA0000000, float 0x3FD5887A80000000, float 0x3FD5944AA0000000, float 0x3FD5A01680000000, float 0x3FD5ABE6A0000000, float 0x3FD5B7B280000000, float 0x3FD5C382A0000000, float 0x3FD5CF4E80000000, float 0x3FD5DB1EA0000000, float 0x3FD5E6EA80000000, float 0x3FD5F2B660000000, float 0x3FD5FE8680000000, float 0x3FD60A5260000000, float 0x3FD6162280000000, float 0x3FD621EE60000000, float 0x3FD62DBE80000000, float 0x3FD6398A60000000, float 0x3FD6455A80000000, float 0x3FD6512660000000, float 0x3FD65CF680000000, float 0x3FD668C260000000, float 0x3FD6749280000000, float 0x3FD6805E60000000, float 0x3FD68C2A40000000, float 0x3FD697FA60000000, float 0x3FD6A3C640000000, float 0x3FD6AF9660000000, float 0x3FD6BB6240000000, float 0x3FD6C73260000000, float 0x3FD6D2FE40000000, float 0x3FD6DECE60000000, float 0x3FD6EA9A40000000, float 0x3FD6F66A60000000, float 0x3FD7023640000000, float 0x3FD70E0660000000, float 0x3FD719D240000000, float 0x3FD7259E20000000, float 0x3FD7316E40000000, float 0x3FD73D3A20000000, float 0x3FD7490A40000000, float 0x3FD754D620000000, float 0x3FD760A640000000, float 0x3FD76C7220000000, float 0x3FD7784240000000, float 0x3FD7840E20000000, float 0x3FD78FDE20000000, float 0x3FD79BAA20000000, float 0x3FD7A77A20000000, float 0x3FD7B34620000000, float 0x3FD7BF1200000000, float 0x3FD7CAE220000000, float 0x3FD7D6AE00000000, float 0x3FD7E27E00000000, float 0x3FD7EE4A00000000, float 0x3FD7FA1A00000000, float 0x3FD805E600000000, float 0x3FD811B600000000, float 0x3FD81D8200000000, float 0x3FD8295200000000, float 0x3FD8351DE0000000, float 0x3FD840EE00000000, float 0x3FD84CB9E0000000, float 0x3FD85885E0000000, float 0x3FD86455E0000000, float 0x3FD87021E0000000, float 0x3FD87BF1E0000000, float 0x3FD887BDC0000000, float 0x3FD8938DE0000000, float 0x3FD89F59C0000000, float 0x3FD8AB29E0000000, float 0x3FD8B6F5C0000000, float 0x3FD8C2C5E0000000, float 0x3FD8CE91C0000000, float 0x3FD8DA61E0000000, float 0x3FD8E62DC0000000, float 0x3FD8F1F9A0000000, float 0x3FD8FDC9C0000000, float 0x3FD90995A0000000, float 0x3FD91565C0000000, float 0x3FD92131A0000000, float 0x3FD92D01C0000000, float 0x3FD938CDA0000000, float 0x3FD9449DC0000000, float 0x3FD95069A0000000, float 0x3FD95C39C0000000, float 0x3FD96805A0000000, float 0x3FD973D5C0000000, float 0x3FD97FA1A0000000, float 0x3FD98B6D80000000, float 0x3FD9973DA0000000, float 0x3FD9A30980000000, float 0x3FD9AED9A0000000, float 0x3FD9BAA580000000, float 0x3FD9C675A0000000, float 0x3FD9D24180000000, float 0x3FD9DE11A0000000, float 0x3FD9E9DD80000000, float 0x3FD9F5ADA0000000, float 0x3FDA017980000000, float 0x3FDA0D49A0000000, float 0x3FDA191580000000, float 0x3FDA24E160000000, float 0x3FDA30B180000000, float 0x3FDA3C7D60000000, float 0x3FDA484D80000000, float 0x3FDA541960000000, float 0x3FDA5FE980000000, float 0x3FDA6BB560000000, float 0x3FDA778580000000, float 0x3FDA835160000000, float 0x3FDA8F2180000000, float 0x3FDA9AED60000000, float 0x3FDAA6BD60000000, float 0x3FDAB28960000000, float 0x3FDABE5540000000, float 0x3FDACA2560000000, float 0x3FDAD5F140000000, float 0x3FDAE1C160000000, float 0x3FDAED8D40000000, float 0x3FDAF95D40000000, float 0x3FDB052940000000, float 0x3FDB10F940000000, float 0x3FDB1CC540000000, float 0x3FDB289540000000, float 0x3FDB346140000000, float 0x3FDB403140000000, float 0x3FDB4BFD20000000, float 0x3FDB57C920000000, float 0x3FDB639920000000, float 0x3FDB6F6520000000, float 0x3FDB7B3520000000, float 0x3FDB870120000000, float 0x3FDB92D120000000, float 0x3FDB9E9D00000000, float 0x3FDBAA6D20000000, float 0x3FDBB63900000000, float 0x3FDBC20920000000, float 0x3FDBCDD500000000, float 0x3FDBD9A100000000, float 0x3FDBE57100000000, float 0x3FDBF13CE0000000, float 0x3FDBFD0D00000000, float 0x3FDC08D8E0000000, float 0x3FDC14A900000000, float 0x3FDC2074E0000000, float 0x3FDC2C4500000000, float 0x3FDC3810E0000000, float 0x3FDC43E100000000, float 0x3FDC4FACE0000000, float 0x3FDC5B7D00000000, float 0x3FDC6748E0000000, float 0x3FDC7314C0000000, float 0x3FDC7EE4E0000000, float 0x3FDC8AB0C0000000, float 0x3FDC9680E0000000, float 0x3FDCA24CC0000000, float 0x3FDCAE1CE0000000, float 0x3FDCB9E8C0000000, float 0x3FDCC5B8E0000000, float 0x3FDCD184C0000000, float 0x3FDCDD54E0000000, float 0x3FDCE920C0000000, float 0x3FDCF4F0E0000000, float 0x3FDD00BCC0000000, float 0x3FDD0C8CE0000000, float 0x3FDD1858C0000000, float 0x3FDD2424A0000000, float 0x3FDD2FF4C0000000, float 0x3FDD3BC0A0000000, float 0x3FDD4790C0000000, float 0x3FDD535CA0000000, float 0x3FDD5F2CC0000000, float 0x3FDD6AF8A0000000, float 0x3FDD76C8C0000000, float 0x3FDD8294A0000000, float 0x3FDD8E64C0000000, float 0x3FDD9A30A0000000, float 0x3FDDA5FC80000000, float 0x3FDDB1CCA0000000, float 0x3FDDBD9880000000, float 0x3FDDC968A0000000, float 0x3FDDD53480000000, float 0x3FDDE104A0000000, float 0x3FDDECD080000000, float 0x3FDDF8A0A0000000, float 0x3FDE046C80000000, float 0x3FDE103C80000000, float 0x3FDE1C0880000000, float 0x3FDE27D880000000, float 0x3FDE33A480000000, float 0x3FDE3F7060000000, float 0x3FDE4B4080000000, float 0x3FDE570C60000000, float 0x3FDE62DC60000000, float 0x3FDE6EA860000000, float 0x3FDE7A7860000000, float 0x3FDE864460000000, float 0x3FDE921460000000, float 0x3FDE9DE060000000, float 0x3FDEA9B060000000, float 0x3FDEB57C40000000, float 0x3FDEC14C60000000, float 0x3FDECD1840000000, float 0x3FDED8E440000000, float 0x3FDEE4B440000000, float 0x3FDEF08040000000, float 0x3FDEFC5040000000, float 0x3FDF081C20000000, float 0x3FDF13EC40000000, float 0x3FDF1FB820000000, float 0x3FDF2B8840000000, float 0x3FDF375420000000, float 0x3FDF432440000000, float 0x3FDF4EF020000000, float 0x3FDF5AC040000000, float 0x3FDF668C20000000, float 0x3FDF725800000000, float 0x3FDF7E2820000000, float 0x3FDF89F400000000, float 0x3FDF95C420000000, float 0x3FDFA19000000000, float 0x3FDFAD6020000000, float 0x3FDFB92C00000000, float 0x3FDFC4FC20000000, float 0x3FDFD0C800000000, float 0x3FDFDC9820000000, float 0x3FDFE86400000000, float 0x3FDFF43420000000, float 5.000000e-01, float 0x3FE005E600000000, float 0x3FE00BCE00000000, float 0x3FE011B400000000, float 0x3FE0179C00000000, float 0x3FE01D8200000000, float 0x3FE0236A00000000, float 0x3FE0295000000000, float 0x3FE02F3800000000, float 0x3FE0351DE0000000, float 0x3FE03B0600000000, float 0x3FE040EBE0000000, float 0x3FE046D400000000, float 0x3FE04CB9E0000000, float 0x3FE0529FE0000000, float 0x3FE05887E0000000, float 0x3FE05E6DE0000000, float 0x3FE06455E0000000, float 0x3FE06A3BE0000000, float 0x3FE07023E0000000, float 0x3FE07609E0000000, float 0x3FE07BF1E0000000, float 0x3FE081D7E0000000, float 0x3FE087BFE0000000, float 0x3FE08DA5E0000000, float 0x3FE0938DE0000000, float 0x3FE09973E0000000, float 0x3FE09F59C0000000, float 0x3FE0A541E0000000, float 0x3FE0AB27C0000000, float 0x3FE0B10FE0000000, float 0x3FE0B6F5C0000000, float 0x3FE0BCDDE0000000, float 0x3FE0C2C3C0000000, float 0x3FE0C8ABE0000000, float 0x3FE0CE91C0000000, float 0x3FE0D479E0000000, float 0x3FE0DA5FC0000000, float 0x3FE0E047E0000000, float 0x3FE0E62DC0000000, float 0x3FE0EC13C0000000, float 0x3FE0F1FBC0000000, float 0x3FE0F7E1C0000000, float 0x3FE0FDC9C0000000, float 0x3FE103AFC0000000, float 0x3FE10997C0000000, float 0x3FE10F7DC0000000, float 0x3FE11565C0000000, float 0x3FE11B4BC0000000, float 0x3FE12133C0000000, float 0x3FE12719C0000000, float 0x3FE12D01C0000000, float 0x3FE132E7C0000000, float 0x3FE138CDA0000000, float 0x3FE13EB5C0000000, float 0x3FE1449BA0000000, float 0x3FE14A83C0000000, float 0x3FE15069A0000000, float 0x3FE15651C0000000, float 0x3FE15C37A0000000, float 0x3FE1621FA0000000, float 0x3FE16805A0000000, float 0x3FE16DEDA0000000, float 0x3FE173D3A0000000, float 0x3FE179B9A0000000, float 0x3FE17FA1A0000000, float 0x3FE18587A0000000, float 0x3FE18B6FA0000000, float 0x3FE19155A0000000, float 0x3FE1973DA0000000, float 0x3FE19D23A0000000, float 0x3FE1A30BA0000000, float 0x3FE1A8F1A0000000, float 0x3FE1AED9A0000000, float 0x3FE1B4BF80000000, float 0x3FE1BAA7A0000000, float 0x3FE1C08D80000000, float 0x3FE1C675A0000000, float 0x3FE1CC5B80000000, float 0x3FE1D24180000000, float 0x3FE1D82980000000, float 0x3FE1DE0F80000000, float 0x3FE1E3F780000000, float 0x3FE1E9DD80000000, float 0x3FE1EFC580000000, float 0x3FE1F5AB80000000, float 0x3FE1FB9380000000, float 0x3FE2017980000000, float 0x3FE2076180000000, float 0x3FE20D4780000000, float 0x3FE2132F80000000, float 0x3FE2191580000000, float 0x3FE21EFB60000000, float 0x3FE224E380000000, float 0x3FE22AC960000000, float 0x3FE230B180000000, float 0x3FE2369760000000, float 0x3FE23C7F80000000, float 0x3FE2426560000000, float 0x3FE2484D80000000, float 0x3FE24E3360000000, float 0x3FE2541B80000000, float 0x3FE25A0160000000, float 0x3FE25FE760000000, float 0x3FE265CF60000000, float 0x3FE26BB560000000, float 0x3FE2719D60000000, float 0x3FE2778360000000, float 0x3FE27D6B60000000, float 0x3FE2835160000000, float 0x3FE2893960000000, float 0x3FE28F1F60000000, float 0x3FE2950760000000, float 0x3FE29AED60000000, float 0x3FE2A0D560000000, float 0x3FE2A6BB60000000, float 0x3FE2ACA140000000, float 0x3FE2B28960000000, float 0x3FE2B86F40000000, float 0x3FE2BE5760000000, float 0x3FE2C43D40000000, float 0x3FE2CA2560000000, float 0x3FE2D00B40000000, float 0x3FE2D5F360000000, float 0x3FE2DBD940000000, float 0x3FE2E1C160000000, float 0x3FE2E7A740000000, float 0x3FE2ED8F40000000, float 0x3FE2F37540000000, float 0x3FE2F95B40000000, float 0x3FE2FF4340000000, float 0x3FE3052940000000, float 0x3FE30B1140000000, float 0x3FE310F740000000, float 0x3FE316DF40000000, float 0x3FE31CC540000000, float 0x3FE322AD40000000, float 0x3FE3289340000000, float 0x3FE32E7B40000000, float 0x3FE3346140000000, float 0x3FE33A4940000000, float 0x3FE3402F20000000, float 0x3FE3461520000000, float 0x3FE34BFD20000000, float 0x3FE351E320000000, float 0x3FE357CB20000000, float 0x3FE35DB120000000, float 0x3FE3639920000000, float 0x3FE3697F20000000, float 0x3FE36F6720000000, float 0x3FE3754D20000000, float 0x3FE37B3520000000, float 0x3FE3811B20000000, float 0x3FE3870320000000, float 0x3FE38CE920000000, float 0x3FE392CF00000000, float 0x3FE398B720000000, float 0x3FE39E9D00000000, float 0x3FE3A48520000000, float 0x3FE3AA6B00000000, float 0x3FE3B05320000000, float 0x3FE3B63900000000, float 0x3FE3BC2120000000, float 0x3FE3C20700000000, float 0x3FE3C7EF20000000, float 0x3FE3CDD500000000, float 0x3FE3D3BD20000000, float 0x3FE3D9A300000000, float 0x3FE3DF8900000000, float 0x3FE3E57100000000, float 0x3FE3EB5700000000, float 0x3FE3F13F00000000, float 0x3FE3F72500000000, float 0x3FE3FD0D00000000, float 0x3FE402F300000000, float 0x3FE408DB00000000, float 0x3FE40EC100000000, float 0x3FE414A900000000, float 0x3FE41A8F00000000, float 0x3FE4207700000000, float 0x3FE4265D00000000, float 0x3FE42C42E0000000, float 0x3FE4322B00000000, float 0x3FE43810E0000000, float 0x3FE43DF900000000, float 0x3FE443DEE0000000, float 0x3FE449C700000000, float 0x3FE44FACE0000000, float 0x3FE4559500000000, float 0x3FE45B7AE0000000, float 0x3FE4616300000000, float 0x3FE46748E0000000, float 0x3FE46D3100000000, float 0x3FE47316E0000000, float 0x3FE478FCE0000000, float 0x3FE47EE4E0000000, float 0x3FE484CAE0000000, float 0x3FE48AB2E0000000, float 0x3FE49098E0000000, float 0x3FE49680E0000000, float 0x3FE49C66E0000000, float 0x3FE4A24EE0000000, float 0x3FE4A834E0000000, float 0x3FE4AE1CE0000000, float 0x3FE4B402E0000000, float 0x3FE4B9EAE0000000, float 0x3FE4BFD0E0000000, float 0x3FE4C5B6C0000000, float 0x3FE4CB9EC0000000, float 0x3FE4D184C0000000, float 0x3FE4D76CC0000000, float 0x3FE4DD52C0000000, float 0x3FE4E33AC0000000, float 0x3FE4E920C0000000, float 0x3FE4EF08C0000000, float 0x3FE4F4EEC0000000, float 0x3FE4FAD6C0000000, float 0x3FE500BCC0000000, float 0x3FE506A4C0000000, float 0x3FE50C8AC0000000, float 0x3FE51270C0000000, float 0x3FE51858C0000000, float 0x3FE51E3EA0000000, float 0x3FE52426C0000000, float 0x3FE52A0CA0000000, float 0x3FE52FF4C0000000, float 0x3FE535DAA0000000, float 0x3FE53BC2C0000000, float 0x3FE541A8A0000000, float 0x3FE54790C0000000, float 0x3FE54D76A0000000, float 0x3FE5535EC0000000, float 0x3FE55944A0000000, float 0x3FE55F2AA0000000, float 0x3FE56512A0000000, float 0x3FE56AF8A0000000, float 0x3FE570E0A0000000, float 0x3FE576C6A0000000, float 0x3FE57CAEA0000000, float 0x3FE58294A0000000, float 0x3FE5887CA0000000, float 0x3FE58E62A0000000, float 0x3FE5944AA0000000, float 0x3FE59A30A0000000, float 0x3FE5A018A0000000, float 0x3FE5A5FEA0000000, float 0x3FE5ABE480000000, float 0x3FE5B1CCA0000000, float 0x3FE5B7B280000000, float 0x3FE5BD9AA0000000, float 0x3FE5C38080000000, float 0x3FE5C968A0000000, float 0x3FE5CF4E80000000, float 0x3FE5D536A0000000, float 0x3FE5DB1C80000000, float 0x3FE5E104A0000000, float 0x3FE5E6EA80000000, float 0x3FE5ECD080000000, float 0x3FE5F2B880000000, float 0x3FE5F89E80000000, float 0x3FE5FE8680000000, float 0x3FE6046C80000000, float 0x3FE60A5480000000, float 0x3FE6103A80000000, float 0x3FE6162280000000, float 0x3FE61C0880000000, float 0x3FE621F080000000, float 0x3FE627D680000000, float 0x3FE62DBE80000000, float 0x3FE633A480000000, float 0x3FE6398A60000000, float 0x3FE63F7280000000, float 0x3FE6455860000000, float 0x3FE64B4080000000, float 0x3FE6512660000000, float 0x3FE6570E60000000, float 0x3FE65CF460000000, float 0x3FE662DC60000000, float 0x3FE668C260000000, float 0x3FE66EAA60000000, float 0x3FE6749060000000, float 0x3FE67A7860000000, float 0x3FE6805E60000000, float 0x3FE6864660000000, float 0x3FE68C2C60000000, float 0x3FE6921260000000, float 0x3FE697FA60000000, float 0x3FE69DE060000000, float 0x3FE6A3C860000000, float 0x3FE6A9AE40000000, float 0x3FE6AF9660000000, float 0x3FE6B57C40000000, float 0x3FE6BB6460000000, float 0x3FE6C14A40000000, float 0x3FE6C73260000000, float 0x3FE6CD1840000000, float 0x3FE6D2FE40000000, float 0x3FE6D8E640000000, float 0x3FE6DECC40000000, float 0x3FE6E4B440000000, float 0x3FE6EA9A40000000, float 0x3FE6F08240000000, float 0x3FE6F66840000000, float 0x3FE6FC5040000000, float 0x3FE7023640000000, float 0x3FE7081E40000000, float 0x3FE70E0440000000, float 0x3FE713EC40000000, float 0x3FE719D240000000, float 0x3FE71FB820000000, float 0x3FE725A040000000, float 0x3FE72B8620000000, float 0x3FE7316E40000000, float 0x3FE7375420000000, float 0x3FE73D3C40000000, float 0x3FE7432220000000, float 0x3FE7490A40000000, float 0x3FE74EF020000000, float 0x3FE754D840000000, float 0x3FE75ABE20000000, float 0x3FE760A640000000, float 0x3FE7668C20000000, float 0x3FE76C7220000000, float 0x3FE7725A20000000, float 0x3FE7784020000000, float 0x3FE77E2820000000, float 0x3FE7840E20000000, float 0x3FE789F620000000, float 0x3FE78FDC20000000, float 0x3FE795C420000000, float 0x3FE79BAA20000000, float 0x3FE7A19220000000, float 0x3FE7A77820000000, float 0x3FE7AD6020000000, float 0x3FE7B34620000000, float 0x3FE7B92C00000000, float 0x3FE7BF1420000000, float 0x3FE7C4FA00000000, float 0x3FE7CAE220000000, float 0x3FE7D0C800000000, float 0x3FE7D6B000000000, float 0x3FE7DC9600000000, float 0x3FE7E27E00000000, float 0x3FE7E86400000000, float 0x3FE7EE4C00000000, float 0x3FE7F43200000000, float 0x3FE7FA1A00000000, float 7.500000e-01, float 0x3FE805E600000000, float 0x3FE80BCE00000000, float 0x3FE811B400000000, float 0x3FE8179C00000000, float 0x3FE81D8200000000, float 0x3FE8236A00000000, float 0x3FE8295000000000, float 0x3FE82F3800000000, float 0x3FE8351DE0000000, float 0x3FE83B0600000000, float 0x3FE840EBE0000000, float 0x3FE846D400000000, float 0x3FE84CB9E0000000, float 0x3FE8529FE0000000, float 0x3FE85887E0000000, float 0x3FE85E6DE0000000, float 0x3FE86455E0000000, float 0x3FE86A3BE0000000, float 0x3FE87023E0000000, float 0x3FE87609E0000000, float 0x3FE87BF1E0000000, float 0x3FE881D7E0000000, float 0x3FE887BFE0000000, float 0x3FE88DA5E0000000, float 0x3FE8938DE0000000, float 0x3FE89973E0000000, float 0x3FE89F59C0000000, float 0x3FE8A541E0000000, float 0x3FE8AB27C0000000, float 0x3FE8B10FE0000000, float 0x3FE8B6F5C0000000, float 0x3FE8BCDDE0000000, float 0x3FE8C2C3C0000000, float 0x3FE8C8ABE0000000, float 0x3FE8CE91C0000000, float 0x3FE8D479E0000000, float 0x3FE8DA5FC0000000, float 0x3FE8E047E0000000, float 0x3FE8E62DC0000000, float 0x3FE8EC13C0000000, float 0x3FE8F1FBC0000000, float 0x3FE8F7E1C0000000, float 0x3FE8FDC9C0000000, float 0x3FE903AFC0000000, float 0x3FE90997C0000000, float 0x3FE90F7DC0000000, float 0x3FE91565C0000000, float 0x3FE91B4BC0000000, float 0x3FE92133C0000000, float 0x3FE92719C0000000, float 0x3FE92D01C0000000, float 0x3FE932E7C0000000, float 0x3FE938CDA0000000, float 0x3FE93EB5C0000000, float 0x3FE9449BA0000000, float 0x3FE94A83C0000000, float 0x3FE95069A0000000, float 0x3FE95651C0000000, float 0x3FE95C37A0000000, float 0x3FE9621FA0000000, float 0x3FE96805A0000000, float 0x3FE96DEDA0000000, float 0x3FE973D3A0000000, float 0x3FE979B9A0000000, float 0x3FE97FA1A0000000, float 0x3FE98587A0000000, float 0x3FE98B6FA0000000, float 0x3FE99155A0000000, float 0x3FE9973DA0000000, float 0x3FE99D23A0000000, float 0x3FE9A30BA0000000, float 0x3FE9A8F1A0000000, float 0x3FE9AED9A0000000, float 0x3FE9B4BF80000000, float 0x3FE9BAA7A0000000, float 0x3FE9C08D80000000, float 0x3FE9C675A0000000, float 0x3FE9CC5B80000000, float 0x3FE9D24180000000, float 0x3FE9D82980000000, float 0x3FE9DE0F80000000, float 0x3FE9E3F780000000, float 0x3FE9E9DD80000000, float 0x3FE9EFC580000000, float 0x3FE9F5AB80000000, float 0x3FE9FB9380000000, float 0x3FEA017980000000, float 0x3FEA076180000000, float 0x3FEA0D4780000000, float 0x3FEA132F80000000, float 0x3FEA191580000000, float 0x3FEA1EFB60000000, float 0x3FEA24E380000000, float 0x3FEA2AC960000000, float 0x3FEA30B180000000, float 0x3FEA369760000000, float 0x3FEA3C7F80000000, float 0x3FEA426560000000, float 0x3FEA484D80000000, float 0x3FEA4E3360000000, float 0x3FEA541B80000000, float 0x3FEA5A0160000000, float 0x3FEA5FE760000000, float 0x3FEA65CF60000000, float 0x3FEA6BB560000000, float 0x3FEA719D60000000, float 0x3FEA778360000000, float 0x3FEA7D6B60000000, float 0x3FEA835160000000, float 0x3FEA893960000000, float 0x3FEA8F1F60000000, float 0x3FEA950760000000, float 0x3FEA9AED60000000, float 0x3FEAA0D560000000, float 0x3FEAA6BB60000000, float 0x3FEAACA140000000, float 0x3FEAB28960000000, float 0x3FEAB86F40000000, float 0x3FEABE5760000000, float 0x3FEAC43D40000000, float 0x3FEACA2560000000, float 0x3FEAD00B40000000, float 0x3FEAD5F360000000, float 0x3FEADBD940000000, float 0x3FEAE1C160000000, float 0x3FEAE7A740000000, float 0x3FEAED8F40000000, float 0x3FEAF37540000000, float 0x3FEAF95B40000000, float 0x3FEAFF4340000000, float 0x3FEB052940000000, float 0x3FEB0B1140000000, float 0x3FEB10F740000000, float 0x3FEB16DF40000000, float 0x3FEB1CC540000000, float 0x3FEB22AD40000000, float 0x3FEB289340000000, float 0x3FEB2E7B40000000, float 0x3FEB346140000000, float 0x3FEB3A4940000000, float 0x3FEB402F20000000, float 0x3FEB461520000000, float 0x3FEB4BFD20000000, float 0x3FEB51E320000000, float 0x3FEB57CB20000000, float 0x3FEB5DB120000000, float 0x3FEB639920000000, float 0x3FEB697F20000000, float 0x3FEB6F6720000000, float 0x3FEB754D20000000, float 0x3FEB7B3520000000, float 0x3FEB811B20000000, float 0x3FEB870320000000, float 0x3FEB8CE920000000, float 0x3FEB92CF00000000, float 0x3FEB98B720000000, float 0x3FEB9E9D00000000, float 0x3FEBA48520000000, float 0x3FEBAA6B00000000, float 0x3FEBB05320000000, float 0x3FEBB63900000000, float 0x3FEBBC2120000000, float 0x3FEBC20700000000, float 0x3FEBC7EF20000000, float 0x3FEBCDD500000000, float 0x3FEBD3BD20000000, float 0x3FEBD9A300000000, float 0x3FEBDF8900000000, float 0x3FEBE57100000000, float 0x3FEBEB5700000000, float 0x3FEBF13F00000000, float 0x3FEBF72500000000, float 0x3FEBFD0D00000000, float 0x3FEC02F300000000, float 0x3FEC08DB00000000, float 0x3FEC0EC100000000, float 0x3FEC14A900000000, float 0x3FEC1A8F00000000, float 0x3FEC207700000000, float 0x3FEC265D00000000, float 0x3FEC2C42E0000000, float 0x3FEC322B00000000, float 0x3FEC3810E0000000, float 0x3FEC3DF900000000, float 0x3FEC43DEE0000000, float 0x3FEC49C700000000, float 0x3FEC4FACE0000000, float 0x3FEC559500000000, float 0x3FEC5B7AE0000000, float 0x3FEC616300000000, float 0x3FEC6748E0000000, float 0x3FEC6D3100000000, float 0x3FEC7316E0000000, float 0x3FEC78FCE0000000, float 0x3FEC7EE4E0000000, float 0x3FEC84CAE0000000, float 0x3FEC8AB2E0000000, float 0x3FEC9098E0000000, float 0x3FEC9680E0000000, float 0x3FEC9C66E0000000, float 0x3FECA24EE0000000, float 0x3FECA834E0000000, float 0x3FECAE1CE0000000, float 0x3FECB402E0000000, float 0x3FECB9EAE0000000, float 0x3FECBFD0E0000000, float 0x3FECC5B6C0000000, float 0x3FECCB9EC0000000, float 0x3FECD184C0000000, float 0x3FECD76CC0000000, float 0x3FECDD52C0000000, float 0x3FECE33AC0000000, float 0x3FECE920C0000000, float 0x3FECEF08C0000000, float 0x3FECF4EEC0000000, float 0x3FECFAD6C0000000, float 0x3FED00BCC0000000, float 0x3FED06A4C0000000, float 0x3FED0C8AC0000000, float 0x3FED1270C0000000, float 0x3FED1858C0000000, float 0x3FED1E3EA0000000, float 0x3FED2426C0000000, float 0x3FED2A0CA0000000, float 0x3FED2FF4C0000000, float 0x3FED35DAA0000000, float 0x3FED3BC2C0000000, float 0x3FED41A8A0000000, float 0x3FED4790C0000000, float 0x3FED4D76A0000000, float 0x3FED535EC0000000, float 0x3FED5944A0000000, float 0x3FED5F2AA0000000, float 0x3FED6512A0000000, float 0x3FED6AF8A0000000, float 0x3FED70E0A0000000, float 0x3FED76C6A0000000, float 0x3FED7CAEA0000000, float 0x3FED8294A0000000, float 0x3FED887CA0000000, float 0x3FED8E62A0000000, float 0x3FED944AA0000000, float 0x3FED9A30A0000000, float 0x3FEDA018A0000000, float 0x3FEDA5FEA0000000, float 0x3FEDABE480000000, float 0x3FEDB1CCA0000000, float 0x3FEDB7B280000000, float 0x3FEDBD9AA0000000, float 0x3FEDC38080000000, float 0x3FEDC968A0000000, float 0x3FEDCF4E80000000, float 0x3FEDD536A0000000, float 0x3FEDDB1C80000000, float 0x3FEDE104A0000000, float 0x3FEDE6EA80000000, float 0x3FEDECD080000000, float 0x3FEDF2B880000000, float 0x3FEDF89E80000000, float 0x3FEDFE8680000000, float 0x3FEE046C80000000, float 0x3FEE0A5480000000, float 0x3FEE103A80000000, float 0x3FEE162280000000, float 0x3FEE1C0880000000, float 0x3FEE21F080000000, float 0x3FEE27D680000000, float 0x3FEE2DBE80000000, float 0x3FEE33A480000000, float 0x3FEE398A60000000, float 0x3FEE3F7280000000, float 0x3FEE455860000000, float 0x3FEE4B4080000000, float 0x3FEE512660000000, float 0x3FEE570E60000000, float 0x3FEE5CF460000000, float 0x3FEE62DC60000000, float 0x3FEE68C260000000, float 0x3FEE6EAA60000000, float 0x3FEE749060000000, float 0x3FEE7A7860000000, float 0x3FEE805E60000000, float 0x3FEE864660000000, float 0x3FEE8C2C60000000, float 0x3FEE921260000000, float 0x3FEE97FA60000000, float 0x3FEE9DE060000000, float 0x3FEEA3C860000000, float 0x3FEEA9AE40000000, float 0x3FEEAF9660000000, float 0x3FEEB57C40000000, float 0x3FEEBB6460000000, float 0x3FEEC14A40000000, float 0x3FEEC73260000000, float 0x3FEECD1840000000, float 0x3FEED2FE40000000, float 0x3FEED8E640000000, float 0x3FEEDECC40000000, float 0x3FEEE4B440000000, float 0x3FEEEA9A40000000, float 0x3FEEF08240000000, float 0x3FEEF66840000000, float 0x3FEEFC5040000000, float 0x3FEF023640000000, float 0x3FEF081E40000000, float 0x3FEF0E0440000000, float 0x3FEF13EC40000000, float 0x3FEF19D240000000, float 0x3FEF1FB820000000, float 0x3FEF25A040000000, float 0x3FEF2B8620000000, float 0x3FEF316E40000000, float 0x3FEF375420000000, float 0x3FEF3D3C40000000, float 0x3FEF432220000000, float 0x3FEF490A40000000, float 0x3FEF4EF020000000, float 0x3FEF54D840000000, float 0x3FEF5ABE20000000, float 0x3FEF60A640000000, float 0x3FEF668C20000000, float 0x3FEF6C7220000000, float 0x3FEF725A20000000, float 0x3FEF784020000000, float 0x3FEF7E2820000000, float 0x3FEF840E20000000, float 0x3FEF89F620000000, float 0x3FEF8FDC20000000, float 0x3FEF95C420000000, float 0x3FEF9BAA20000000, float 0x3FEFA19220000000, float 0x3FEFA77820000000, float 0x3FEFAD6020000000, float 0x3FEFB34620000000, float 0x3FEFB92C00000000, float 0x3FEFBF1420000000, float 0x3FEFC4FA00000000, float 0x3FEFCAE220000000, float 0x3FEFD0C800000000, float 0x3FEFD6B000000000, float 0x3FEFDC9600000000, float 0x3FEFE27E00000000, float 0x3FEFE86400000000, float 0x3FEFEE4C00000000, float 0x3FEFF43200000000, float 0x3FEFFA1A00000000, float 1.000000e+00], align 16, !dbg !0
@.str.12 = private unnamed_addr constant [16 x i8] c"Transform/Image\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @RGBTransformImage(%struct._Image* %image, i32 %colorspace) #0 !dbg !647 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %colorspace.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %primary_info = alloca %struct._PrimaryInfo, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %x_map = alloca %struct._TransformPacket*, align 8
  %y_map = alloca %struct._TransformPacket*, align 8
  %z_map = alloca %struct._TransformPacket*, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %sync = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %sync66 = alloca i32, align 4
  %x67 = alloca i64, align 8
  %q68 = alloca %struct._PixelPacket*, align 8
  %sync121 = alloca i32, align 4
  %x122 = alloca i64, align 8
  %q123 = alloca %struct._PixelPacket*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  %blue136 = alloca i16, align 2
  %green137 = alloca i16, align 2
  %red138 = alloca i16, align 2
  %value = alloca i8*, align 8
  %black = alloca double, align 8
  %density = alloca double, align 8
  %film_gamma = alloca double, align 8
  %gamma = alloca double, align 8
  %reference_black = alloca double, align 8
  %reference_white = alloca double, align 8
  %logmap = alloca i16*, align 8
  %sync275 = alloca i32, align 4
  %x276 = alloca i64, align 8
  %q277 = alloca %struct._PixelPacket*, align 8
  %blue293 = alloca i16, align 2
  %green294 = alloca i16, align 2
  %red295 = alloca i16, align 2
  %sync359 = alloca i32, align 4
  %x360 = alloca i64, align 8
  %q361 = alloca %struct._PixelPacket*, align 8
  %blue377 = alloca i16, align 2
  %green378 = alloca i16, align 2
  %red379 = alloca i16, align 2
  %sync882 = alloca i32, align 4
  %pixel883 = alloca %struct._MagickPixelPacket, align 8
  %x884 = alloca i64, align 8
  %q885 = alloca %struct._PixelPacket*, align 8
  %blue886 = alloca i64, align 8
  %green887 = alloca i64, align 8
  %red888 = alloca i64, align 8
  %proceed = alloca i32, align 4
  %blue989 = alloca i64, align 8
  %green990 = alloca i64, align 8
  %red991 = alloca i64, align 8
  %pixel996 = alloca %struct._MagickPixelPacket, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !648, metadata !DIExpression()), !dbg !649
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !650, metadata !DIExpression()), !dbg !651
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !652, metadata !DIExpression()), !dbg !657
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !658, metadata !DIExpression()), !dbg !660
  call void @llvm.dbg.declare(metadata i32* %status, metadata !661, metadata !DIExpression()), !dbg !662
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !663, metadata !DIExpression()), !dbg !664
  call void @llvm.dbg.declare(metadata %struct._PrimaryInfo* %primary_info, metadata !665, metadata !DIExpression()), !dbg !666
  call void @llvm.dbg.declare(metadata i64* %i, metadata !667, metadata !DIExpression()), !dbg !668
  call void @llvm.dbg.declare(metadata i64* %y, metadata !669, metadata !DIExpression()), !dbg !670
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %x_map, metadata !671, metadata !DIExpression()), !dbg !672
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %y_map, metadata !673, metadata !DIExpression()), !dbg !674
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %z_map, metadata !675, metadata !DIExpression()), !dbg !676
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !677
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !679
  %1 = load i32, i32* %debug, align 8, !dbg !679
  %cmp = icmp ne i32 %1, 0, !dbg !680
  br i1 %cmp, label %if.then, label %if.end, !dbg !681

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !682
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !683
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !682
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 233, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !684
  br label %if.end, !dbg !685

if.end:                                           ; preds = %if.then, %entry
  store i32 1, i32* %status, align 4, !dbg !686
  store i64 0, i64* %progress, align 8, !dbg !687
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !688
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !689
  store %struct._ExceptionInfo* %exception1, %struct._ExceptionInfo** %exception, align 8, !dbg !690
  %4 = load i32, i32* %colorspace.addr, align 4, !dbg !691
  switch i32 %4, label %sw.default413 [
    i32 12, label %sw.bb
    i32 2, label %sw.bb48
    i32 22, label %sw.bb103
    i32 24, label %sw.bb103
    i32 32, label %sw.bb103
    i32 14, label %sw.bb103
    i32 30, label %sw.bb103
    i32 15, label %sw.bb103
    i32 31, label %sw.bb103
    i32 16, label %sw.bb103
    i32 5, label %sw.bb103
    i32 25, label %sw.bb103
    i32 27, label %sw.bb103
    i32 28, label %sw.bb103
    i32 26, label %sw.bb103
    i32 23, label %sw.bb103
    i32 6, label %sw.bb103
    i32 7, label %sw.bb103
    i32 33, label %sw.bb103
    i32 9, label %sw.bb103
    i32 10, label %sw.bb103
    i32 11, label %sw.bb103
    i32 21, label %sw.bb204
    i32 1, label %sw.bb337
    i32 29, label %sw.bb337
  ], !dbg !692

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !693, metadata !DIExpression()), !dbg !709
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !710
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 0, !dbg !712
  %6 = load i32, i32* %storage_class, align 8, !dbg !712
  %cmp2 = icmp eq i32 %6, 2, !dbg !713
  br i1 %cmp2, label %if.then3, label %if.end12, !dbg !714

if.then3:                                         ; preds = %sw.bb
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !715
  %call4 = call i32 @SyncImage(%struct._Image* %7), !dbg !718
  %cmp5 = icmp eq i32 %call4, 0, !dbg !719
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !720

if.then6:                                         ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !721
  br label %return, !dbg !721

if.end7:                                          ; preds = %if.then3
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !722
  %call8 = call i32 @SetImageStorageClass(%struct._Image* %8, i32 1), !dbg !724
  %cmp9 = icmp eq i32 %call8, 0, !dbg !725
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !726

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !727
  br label %return, !dbg !727

if.end11:                                         ; preds = %if.end7
  br label %if.end12, !dbg !728

if.end12:                                         ; preds = %if.end11, %sw.bb
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !729
  %10 = load i32, i32* %colorspace.addr, align 4, !dbg !731
  %call13 = call i32 @SetImageColorspace(%struct._Image* %9, i32 %10), !dbg !732
  %cmp14 = icmp eq i32 %call13, 0, !dbg !733
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !734

if.then15:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !735
  br label %return, !dbg !735

if.end16:                                         ; preds = %if.end12
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !736
  call void @GetMagickPixelPacket(%struct._Image* %11, %struct._MagickPixelPacket* %zero), !dbg !737
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !738
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !739
  %call17 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %12, %struct._ExceptionInfo* %13), !dbg !740
  store %struct._CacheView* %call17, %struct._CacheView** %image_view, align 8, !dbg !741
  store i64 0, i64* %y, align 8, !dbg !742
  br label %for.cond, !dbg !744

for.cond:                                         ; preds = %for.inc39, %if.end16
  %14 = load i64, i64* %y, align 8, !dbg !745
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !747
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 8, !dbg !748
  %16 = load i64, i64* %rows, align 8, !dbg !748
  %cmp18 = icmp slt i64 %14, %16, !dbg !749
  br i1 %cmp18, label %for.body, label %for.end41, !dbg !750

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !751, metadata !DIExpression()), !dbg !753
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !754, metadata !DIExpression()), !dbg !755
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !756, metadata !DIExpression()), !dbg !758
  call void @llvm.dbg.declare(metadata i64* %x, metadata !759, metadata !DIExpression()), !dbg !760
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !761, metadata !DIExpression()), !dbg !763
  %17 = load i32, i32* %status, align 4, !dbg !764
  %cmp19 = icmp eq i32 %17, 0, !dbg !766
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !767

if.then20:                                        ; preds = %for.body
  br label %for.inc39, !dbg !768

if.end21:                                         ; preds = %for.body
  %18 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !769
  %19 = load i64, i64* %y, align 8, !dbg !770
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !771
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 7, !dbg !772
  %21 = load i64, i64* %columns, align 8, !dbg !772
  %22 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !773
  %call22 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %18, i64 0, i64 %19, i64 %21, i64 1, %struct._ExceptionInfo* %22), !dbg !774
  store %struct._PixelPacket* %call22, %struct._PixelPacket** %q, align 8, !dbg !775
  %23 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !776
  %cmp23 = icmp eq %struct._PixelPacket* %23, null, !dbg !778
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !779

if.then24:                                        ; preds = %if.end21
  store i32 0, i32* %status, align 4, !dbg !780
  br label %for.inc39, !dbg !782

if.end25:                                         ; preds = %if.end21
  %24 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !783
  %call26 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %24), !dbg !784
  store i16* %call26, i16** %indexes, align 8, !dbg !785
  %25 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !786
  %26 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !786
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 56, i1 false), !dbg !786
  store i64 0, i64* %x, align 8, !dbg !787
  br label %for.cond27, !dbg !789

for.cond27:                                       ; preds = %for.inc, %if.end25
  %27 = load i64, i64* %x, align 8, !dbg !790
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !792
  %columns28 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !793
  %29 = load i64, i64* %columns28, align 8, !dbg !793
  %cmp29 = icmp slt i64 %27, %29, !dbg !794
  br i1 %cmp29, label %for.body30, label %for.end, !dbg !795

for.body30:                                       ; preds = %for.cond27
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !796
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !798
  %32 = load i16*, i16** %indexes, align 8, !dbg !799
  %33 = load i64, i64* %x, align 8, !dbg !800
  %add.ptr = getelementptr inbounds i16, i16* %32, i64 %33, !dbg !801
  call void @SetMagickPixelPacket(%struct._Image* %30, %struct._PixelPacket* %31, i16* %add.ptr, %struct._MagickPixelPacket* %pixel), !dbg !802
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !803
  %34 = load float, float* %red, align 8, !dbg !803
  %red31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !804
  store float %34, float* %red31, align 8, !dbg !805
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !806
  %35 = load float, float* %green, align 4, !dbg !806
  %green32 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !807
  store float %35, float* %green32, align 4, !dbg !808
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !809
  %36 = load float, float* %blue, align 8, !dbg !809
  %blue33 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !810
  store float %36, float* %blue33, align 8, !dbg !811
  call void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %pixel), !dbg !812
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !813
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !814
  %39 = load i16*, i16** %indexes, align 8, !dbg !815
  %40 = load i64, i64* %x, align 8, !dbg !816
  %add.ptr34 = getelementptr inbounds i16, i16* %39, i64 %40, !dbg !817
  call void @SetPixelPacket(%struct._Image* %37, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %38, i16* %add.ptr34), !dbg !818
  %41 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !819
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %41, i32 1, !dbg !819
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !819
  br label %for.inc, !dbg !820

for.inc:                                          ; preds = %for.body30
  %42 = load i64, i64* %x, align 8, !dbg !821
  %inc = add nsw i64 %42, 1, !dbg !821
  store i64 %inc, i64* %x, align 8, !dbg !821
  br label %for.cond27, !dbg !822, !llvm.loop !823

for.end:                                          ; preds = %for.cond27
  %43 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !825
  %44 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !826
  %call35 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %43, %struct._ExceptionInfo* %44), !dbg !827
  store i32 %call35, i32* %sync, align 4, !dbg !828
  %45 = load i32, i32* %sync, align 4, !dbg !829
  %cmp36 = icmp eq i32 %45, 0, !dbg !831
  br i1 %cmp36, label %if.then37, label %if.end38, !dbg !832

if.then37:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !833
  br label %if.end38, !dbg !834

if.end38:                                         ; preds = %if.then37, %for.end
  br label %for.inc39, !dbg !835

for.inc39:                                        ; preds = %if.end38, %if.then24, %if.then20
  %46 = load i64, i64* %y, align 8, !dbg !836
  %inc40 = add nsw i64 %46, 1, !dbg !836
  store i64 %inc40, i64* %y, align 8, !dbg !836
  br label %for.cond, !dbg !837, !llvm.loop !838

for.end41:                                        ; preds = %for.cond
  %47 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !840
  %call42 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %47), !dbg !841
  store %struct._CacheView* %call42, %struct._CacheView** %image_view, align 8, !dbg !842
  %48 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !843
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %48, i32 0, i32 6, !dbg !844
  %49 = load i32, i32* %matte, align 8, !dbg !844
  %cmp43 = icmp eq i32 %49, 0, !dbg !845
  %50 = zext i1 %cmp43 to i64, !dbg !843
  %cond = select i1 %cmp43, i32 8, i32 9, !dbg !843
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !846
  %type = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 77, !dbg !847
  store i32 %cond, i32* %type, align 8, !dbg !848
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !849
  %53 = load i32, i32* %colorspace.addr, align 4, !dbg !851
  %call44 = call i32 @SetImageColorspace(%struct._Image* %52, i32 %53), !dbg !852
  %cmp45 = icmp eq i32 %call44, 0, !dbg !853
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !854

if.then46:                                        ; preds = %for.end41
  store i32 0, i32* %retval, align 4, !dbg !855
  br label %return, !dbg !855

if.end47:                                         ; preds = %for.end41
  %54 = load i32, i32* %status, align 4, !dbg !856
  store i32 %54, i32* %retval, align 4, !dbg !857
  br label %return, !dbg !857

sw.bb48:                                          ; preds = %if.end
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !858
  %storage_class49 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 0, !dbg !861
  %56 = load i32, i32* %storage_class49, align 8, !dbg !861
  %cmp50 = icmp eq i32 %56, 2, !dbg !862
  br i1 %cmp50, label %if.then51, label %if.end60, !dbg !863

if.then51:                                        ; preds = %sw.bb48
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !864
  %call52 = call i32 @SyncImage(%struct._Image* %57), !dbg !867
  %cmp53 = icmp eq i32 %call52, 0, !dbg !868
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !869

if.then54:                                        ; preds = %if.then51
  store i32 0, i32* %retval, align 4, !dbg !870
  br label %return, !dbg !870

if.end55:                                         ; preds = %if.then51
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !871
  %call56 = call i32 @SetImageStorageClass(%struct._Image* %58, i32 1), !dbg !873
  %cmp57 = icmp eq i32 %call56, 0, !dbg !874
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !875

if.then58:                                        ; preds = %if.end55
  store i32 0, i32* %retval, align 4, !dbg !876
  br label %return, !dbg !876

if.end59:                                         ; preds = %if.end55
  br label %if.end60, !dbg !877

if.end60:                                         ; preds = %if.end59, %sw.bb48
  %59 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !878
  %60 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !879
  %call61 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %59, %struct._ExceptionInfo* %60), !dbg !880
  store %struct._CacheView* %call61, %struct._CacheView** %image_view, align 8, !dbg !881
  store i64 0, i64* %y, align 8, !dbg !882
  br label %for.cond62, !dbg !884

for.cond62:                                       ; preds = %for.inc94, %if.end60
  %61 = load i64, i64* %y, align 8, !dbg !885
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !887
  %rows63 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 8, !dbg !888
  %63 = load i64, i64* %rows63, align 8, !dbg !888
  %cmp64 = icmp slt i64 %61, %63, !dbg !889
  br i1 %cmp64, label %for.body65, label %for.end96, !dbg !890

for.body65:                                       ; preds = %for.cond62
  call void @llvm.dbg.declare(metadata i32* %sync66, metadata !891, metadata !DIExpression()), !dbg !893
  call void @llvm.dbg.declare(metadata i64* %x67, metadata !894, metadata !DIExpression()), !dbg !895
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q68, metadata !896, metadata !DIExpression()), !dbg !897
  %64 = load i32, i32* %status, align 4, !dbg !898
  %cmp69 = icmp eq i32 %64, 0, !dbg !900
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !901

if.then70:                                        ; preds = %for.body65
  br label %for.inc94, !dbg !902

if.end71:                                         ; preds = %for.body65
  %65 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !903
  %66 = load i64, i64* %y, align 8, !dbg !904
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !905
  %columns72 = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 7, !dbg !906
  %68 = load i64, i64* %columns72, align 8, !dbg !906
  %69 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !907
  %call73 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %65, i64 0, i64 %66, i64 %68, i64 1, %struct._ExceptionInfo* %69), !dbg !908
  store %struct._PixelPacket* %call73, %struct._PixelPacket** %q68, align 8, !dbg !909
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !910
  %cmp74 = icmp eq %struct._PixelPacket* %70, null, !dbg !912
  br i1 %cmp74, label %if.then75, label %if.end76, !dbg !913

if.then75:                                        ; preds = %if.end71
  store i32 0, i32* %status, align 4, !dbg !914
  br label %for.inc94, !dbg !916

if.end76:                                         ; preds = %if.end71
  store i64 0, i64* %x67, align 8, !dbg !917
  br label %for.cond77, !dbg !919

for.cond77:                                       ; preds = %for.inc87, %if.end76
  %71 = load i64, i64* %x67, align 8, !dbg !920
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !922
  %columns78 = getelementptr inbounds %struct._Image, %struct._Image* %72, i32 0, i32 7, !dbg !923
  %73 = load i64, i64* %columns78, align 8, !dbg !923
  %cmp79 = icmp slt i64 %71, %73, !dbg !924
  br i1 %cmp79, label %for.body80, label %for.end89, !dbg !925

for.body80:                                       ; preds = %for.cond77
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !926
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !926
  %call81 = call float @GetPixelIntensity(%struct._Image* %74, %struct._PixelPacket* %75), !dbg !926
  %call82 = call zeroext i16 @ClampToQuantum(float %call81), !dbg !926
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !926
  %blue83 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 0, !dbg !926
  store i16 %call82, i16* %blue83, align 2, !dbg !926
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !926
  %green84 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 1, !dbg !926
  store i16 %call82, i16* %green84, align 2, !dbg !926
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !926
  %red85 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 0, i32 2, !dbg !926
  store i16 %call82, i16* %red85, align 2, !dbg !926
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %q68, align 8, !dbg !928
  %incdec.ptr86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 1, !dbg !928
  store %struct._PixelPacket* %incdec.ptr86, %struct._PixelPacket** %q68, align 8, !dbg !928
  br label %for.inc87, !dbg !929

for.inc87:                                        ; preds = %for.body80
  %80 = load i64, i64* %x67, align 8, !dbg !930
  %inc88 = add nsw i64 %80, 1, !dbg !930
  store i64 %inc88, i64* %x67, align 8, !dbg !930
  br label %for.cond77, !dbg !931, !llvm.loop !932

for.end89:                                        ; preds = %for.cond77
  %81 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !934
  %82 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !935
  %call90 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %81, %struct._ExceptionInfo* %82), !dbg !936
  store i32 %call90, i32* %sync66, align 4, !dbg !937
  %83 = load i32, i32* %sync66, align 4, !dbg !938
  %cmp91 = icmp eq i32 %83, 0, !dbg !940
  br i1 %cmp91, label %if.then92, label %if.end93, !dbg !941

if.then92:                                        ; preds = %for.end89
  store i32 0, i32* %status, align 4, !dbg !942
  br label %if.end93, !dbg !943

if.end93:                                         ; preds = %if.then92, %for.end89
  br label %for.inc94, !dbg !944

for.inc94:                                        ; preds = %if.end93, %if.then75, %if.then70
  %84 = load i64, i64* %y, align 8, !dbg !945
  %inc95 = add nsw i64 %84, 1, !dbg !945
  store i64 %inc95, i64* %y, align 8, !dbg !945
  br label %for.cond62, !dbg !946, !llvm.loop !947

for.end96:                                        ; preds = %for.cond62
  %85 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !949
  %call97 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %85), !dbg !950
  store %struct._CacheView* %call97, %struct._CacheView** %image_view, align 8, !dbg !951
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !952
  %87 = load i32, i32* %colorspace.addr, align 4, !dbg !954
  %call98 = call i32 @SetImageColorspace(%struct._Image* %86, i32 %87), !dbg !955
  %cmp99 = icmp eq i32 %call98, 0, !dbg !956
  br i1 %cmp99, label %if.then100, label %if.end101, !dbg !957

if.then100:                                       ; preds = %for.end96
  store i32 0, i32* %retval, align 4, !dbg !958
  br label %return, !dbg !958

if.end101:                                        ; preds = %for.end96
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !959
  %type102 = getelementptr inbounds %struct._Image, %struct._Image* %88, i32 0, i32 77, !dbg !960
  store i32 2, i32* %type102, align 8, !dbg !961
  %89 = load i32, i32* %status, align 4, !dbg !962
  store i32 %89, i32* %retval, align 4, !dbg !963
  br label %return, !dbg !963

sw.bb103:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !964
  %storage_class104 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 0, !dbg !967
  %91 = load i32, i32* %storage_class104, align 8, !dbg !967
  %cmp105 = icmp eq i32 %91, 2, !dbg !968
  br i1 %cmp105, label %if.then106, label %if.end115, !dbg !969

if.then106:                                       ; preds = %sw.bb103
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !970
  %call107 = call i32 @SyncImage(%struct._Image* %92), !dbg !973
  %cmp108 = icmp eq i32 %call107, 0, !dbg !974
  br i1 %cmp108, label %if.then109, label %if.end110, !dbg !975

if.then109:                                       ; preds = %if.then106
  store i32 0, i32* %retval, align 4, !dbg !976
  br label %return, !dbg !976

if.end110:                                        ; preds = %if.then106
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !977
  %call111 = call i32 @SetImageStorageClass(%struct._Image* %93, i32 1), !dbg !979
  %cmp112 = icmp eq i32 %call111, 0, !dbg !980
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !981

if.then113:                                       ; preds = %if.end110
  store i32 0, i32* %retval, align 4, !dbg !982
  br label %return, !dbg !982

if.end114:                                        ; preds = %if.end110
  br label %if.end115, !dbg !983

if.end115:                                        ; preds = %if.end114, %sw.bb103
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !984
  %95 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !985
  %call116 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %94, %struct._ExceptionInfo* %95), !dbg !986
  store %struct._CacheView* %call116, %struct._CacheView** %image_view, align 8, !dbg !987
  store i64 0, i64* %y, align 8, !dbg !988
  br label %for.cond117, !dbg !990

for.cond117:                                      ; preds = %for.inc195, %if.end115
  %96 = load i64, i64* %y, align 8, !dbg !991
  %97 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !993
  %rows118 = getelementptr inbounds %struct._Image, %struct._Image* %97, i32 0, i32 8, !dbg !994
  %98 = load i64, i64* %rows118, align 8, !dbg !994
  %cmp119 = icmp slt i64 %96, %98, !dbg !995
  br i1 %cmp119, label %for.body120, label %for.end197, !dbg !996

for.body120:                                      ; preds = %for.cond117
  call void @llvm.dbg.declare(metadata i32* %sync121, metadata !997, metadata !DIExpression()), !dbg !999
  call void @llvm.dbg.declare(metadata i64* %x122, metadata !1000, metadata !DIExpression()), !dbg !1001
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q123, metadata !1002, metadata !DIExpression()), !dbg !1003
  %99 = load i32, i32* %status, align 4, !dbg !1004
  %cmp124 = icmp eq i32 %99, 0, !dbg !1006
  br i1 %cmp124, label %if.then125, label %if.end126, !dbg !1007

if.then125:                                       ; preds = %for.body120
  br label %for.inc195, !dbg !1008

if.end126:                                        ; preds = %for.body120
  %100 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1009
  %101 = load i64, i64* %y, align 8, !dbg !1010
  %102 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1011
  %columns127 = getelementptr inbounds %struct._Image, %struct._Image* %102, i32 0, i32 7, !dbg !1012
  %103 = load i64, i64* %columns127, align 8, !dbg !1012
  %104 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1013
  %call128 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %100, i64 0, i64 %101, i64 %103, i64 1, %struct._ExceptionInfo* %104), !dbg !1014
  store %struct._PixelPacket* %call128, %struct._PixelPacket** %q123, align 8, !dbg !1015
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1016
  %cmp129 = icmp eq %struct._PixelPacket* %105, null, !dbg !1018
  br i1 %cmp129, label %if.then130, label %if.end131, !dbg !1019

if.then130:                                       ; preds = %if.end126
  store i32 0, i32* %status, align 4, !dbg !1020
  br label %for.inc195, !dbg !1022

if.end131:                                        ; preds = %if.end126
  store i64 0, i64* %x122, align 8, !dbg !1023
  br label %for.cond132, !dbg !1025

for.cond132:                                      ; preds = %for.inc187, %if.end131
  %106 = load i64, i64* %x122, align 8, !dbg !1026
  %107 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1028
  %columns133 = getelementptr inbounds %struct._Image, %struct._Image* %107, i32 0, i32 7, !dbg !1029
  %108 = load i64, i64* %columns133, align 8, !dbg !1029
  %cmp134 = icmp slt i64 %106, %108, !dbg !1030
  br i1 %cmp134, label %for.body135, label %for.end189, !dbg !1031

for.body135:                                      ; preds = %for.cond132
  call void @llvm.dbg.declare(metadata double* %X, metadata !1032, metadata !DIExpression()), !dbg !1034
  call void @llvm.dbg.declare(metadata double* %Y, metadata !1035, metadata !DIExpression()), !dbg !1036
  call void @llvm.dbg.declare(metadata double* %Z, metadata !1037, metadata !DIExpression()), !dbg !1038
  call void @llvm.dbg.declare(metadata i16* %blue136, metadata !1039, metadata !DIExpression()), !dbg !1040
  call void @llvm.dbg.declare(metadata i16* %green137, metadata !1041, metadata !DIExpression()), !dbg !1042
  call void @llvm.dbg.declare(metadata i16* %red138, metadata !1043, metadata !DIExpression()), !dbg !1044
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1045
  %red139 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 2, !dbg !1045
  %110 = load i16, i16* %red139, align 2, !dbg !1045
  %conv = uitofp i16 %110 to float, !dbg !1046
  %call140 = call zeroext i16 @ClampToQuantum(float %conv), !dbg !1047
  store i16 %call140, i16* %red138, align 2, !dbg !1048
  %111 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1049
  %green141 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %111, i32 0, i32 1, !dbg !1049
  %112 = load i16, i16* %green141, align 2, !dbg !1049
  %conv142 = uitofp i16 %112 to float, !dbg !1050
  %call143 = call zeroext i16 @ClampToQuantum(float %conv142), !dbg !1051
  store i16 %call143, i16* %green137, align 2, !dbg !1052
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1053
  %blue144 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 0, i32 0, !dbg !1053
  %114 = load i16, i16* %blue144, align 2, !dbg !1053
  %conv145 = uitofp i16 %114 to float, !dbg !1054
  %call146 = call zeroext i16 @ClampToQuantum(float %conv145), !dbg !1055
  store i16 %call146, i16* %blue136, align 2, !dbg !1056
  %115 = load i32, i32* %colorspace.addr, align 4, !dbg !1057
  switch i32 %115, label %sw.default [
    i32 22, label %sw.bb147
    i32 24, label %sw.bb148
    i32 32, label %sw.bb149
    i32 14, label %sw.bb150
    i32 30, label %sw.bb151
    i32 15, label %sw.bb152
    i32 31, label %sw.bb153
    i32 16, label %sw.bb154
    i32 5, label %sw.bb155
    i32 25, label %sw.bb156
    i32 27, label %sw.bb156
    i32 28, label %sw.bb157
    i32 26, label %sw.bb158
    i32 23, label %sw.bb159
    i32 6, label %sw.bb160
    i32 7, label %sw.bb161
    i32 33, label %sw.bb162
    i32 9, label %sw.bb163
    i32 10, label %sw.bb164
    i32 11, label %sw.bb165
  ], !dbg !1058

sw.bb147:                                         ; preds = %for.body135
  %116 = load i16, i16* %red138, align 2, !dbg !1059
  %117 = load i16, i16* %green137, align 2, !dbg !1062
  %118 = load i16, i16* %blue136, align 2, !dbg !1063
  call void @ConvertRGBToCMY(i16 zeroext %116, i16 zeroext %117, i16 zeroext %118, double* %X, double* %Y, double* %Z), !dbg !1064
  br label %sw.epilog, !dbg !1065

sw.bb148:                                         ; preds = %for.body135
  %119 = load i16, i16* %red138, align 2, !dbg !1066
  %120 = load i16, i16* %green137, align 2, !dbg !1068
  %121 = load i16, i16* %blue136, align 2, !dbg !1069
  call void @ConvertRGBToHCL(i16 zeroext %119, i16 zeroext %120, i16 zeroext %121, double* %X, double* %Y, double* %Z), !dbg !1070
  br label %sw.epilog, !dbg !1071

sw.bb149:                                         ; preds = %for.body135
  %122 = load i16, i16* %red138, align 2, !dbg !1072
  %123 = load i16, i16* %green137, align 2, !dbg !1074
  %124 = load i16, i16* %blue136, align 2, !dbg !1075
  call void @ConvertRGBToHCLp(i16 zeroext %122, i16 zeroext %123, i16 zeroext %124, double* %X, double* %Y, double* %Z), !dbg !1076
  br label %sw.epilog, !dbg !1077

sw.bb150:                                         ; preds = %for.body135
  %125 = load i16, i16* %red138, align 2, !dbg !1078
  %126 = load i16, i16* %green137, align 2, !dbg !1080
  %127 = load i16, i16* %blue136, align 2, !dbg !1081
  call void @ConvertRGBToHSB(i16 zeroext %125, i16 zeroext %126, i16 zeroext %127, double* %X, double* %Y, double* %Z), !dbg !1082
  br label %sw.epilog, !dbg !1083

sw.bb151:                                         ; preds = %for.body135
  %128 = load i16, i16* %red138, align 2, !dbg !1084
  %129 = load i16, i16* %green137, align 2, !dbg !1086
  %130 = load i16, i16* %blue136, align 2, !dbg !1087
  call void @ConvertRGBToHSI(i16 zeroext %128, i16 zeroext %129, i16 zeroext %130, double* %X, double* %Y, double* %Z), !dbg !1088
  br label %sw.epilog, !dbg !1089

sw.bb152:                                         ; preds = %for.body135
  %131 = load i16, i16* %red138, align 2, !dbg !1090
  %132 = load i16, i16* %green137, align 2, !dbg !1092
  %133 = load i16, i16* %blue136, align 2, !dbg !1093
  call void @ConvertRGBToHSL(i16 zeroext %131, i16 zeroext %132, i16 zeroext %133, double* %X, double* %Y, double* %Z), !dbg !1094
  br label %sw.epilog, !dbg !1095

sw.bb153:                                         ; preds = %for.body135
  %134 = load i16, i16* %red138, align 2, !dbg !1096
  %135 = load i16, i16* %green137, align 2, !dbg !1098
  %136 = load i16, i16* %blue136, align 2, !dbg !1099
  call void @ConvertRGBToHSV(i16 zeroext %134, i16 zeroext %135, i16 zeroext %136, double* %X, double* %Y, double* %Z), !dbg !1100
  br label %sw.epilog, !dbg !1101

sw.bb154:                                         ; preds = %for.body135
  %137 = load i16, i16* %red138, align 2, !dbg !1102
  %138 = load i16, i16* %green137, align 2, !dbg !1104
  %139 = load i16, i16* %blue136, align 2, !dbg !1105
  call void @ConvertRGBToHWB(i16 zeroext %137, i16 zeroext %138, i16 zeroext %139, double* %X, double* %Y, double* %Z), !dbg !1106
  br label %sw.epilog, !dbg !1107

sw.bb155:                                         ; preds = %for.body135
  %140 = load i16, i16* %red138, align 2, !dbg !1108
  %141 = load i16, i16* %green137, align 2, !dbg !1110
  %142 = load i16, i16* %blue136, align 2, !dbg !1111
  call void @ConvertRGBToLab(i16 zeroext %140, i16 zeroext %141, i16 zeroext %142, double* %X, double* %Y, double* %Z), !dbg !1112
  br label %sw.epilog, !dbg !1113

sw.bb156:                                         ; preds = %for.body135, %for.body135
  %143 = load i16, i16* %red138, align 2, !dbg !1114
  %144 = load i16, i16* %green137, align 2, !dbg !1116
  %145 = load i16, i16* %blue136, align 2, !dbg !1117
  call void @ConvertRGBToLCHab(i16 zeroext %143, i16 zeroext %144, i16 zeroext %145, double* %X, double* %Y, double* %Z), !dbg !1118
  br label %sw.epilog, !dbg !1119

sw.bb157:                                         ; preds = %for.body135
  %146 = load i16, i16* %red138, align 2, !dbg !1120
  %147 = load i16, i16* %green137, align 2, !dbg !1122
  %148 = load i16, i16* %blue136, align 2, !dbg !1123
  call void @ConvertRGBToLCHuv(i16 zeroext %146, i16 zeroext %147, i16 zeroext %148, double* %X, double* %Y, double* %Z), !dbg !1124
  br label %sw.epilog, !dbg !1125

sw.bb158:                                         ; preds = %for.body135
  %149 = load i16, i16* %red138, align 2, !dbg !1126
  %150 = load i16, i16* %green137, align 2, !dbg !1128
  %151 = load i16, i16* %blue136, align 2, !dbg !1129
  call void @ConvertRGBToLMS(i16 zeroext %149, i16 zeroext %150, i16 zeroext %151, double* %X, double* %Y, double* %Z), !dbg !1130
  br label %sw.epilog, !dbg !1131

sw.bb159:                                         ; preds = %for.body135
  %152 = load i16, i16* %red138, align 2, !dbg !1132
  %153 = load i16, i16* %green137, align 2, !dbg !1134
  %154 = load i16, i16* %blue136, align 2, !dbg !1135
  call void @ConvertRGBToLuv(i16 zeroext %152, i16 zeroext %153, i16 zeroext %154, double* %X, double* %Y, double* %Z), !dbg !1136
  br label %sw.epilog, !dbg !1137

sw.bb160:                                         ; preds = %for.body135
  %155 = load i16, i16* %red138, align 2, !dbg !1138
  %156 = load i16, i16* %green137, align 2, !dbg !1140
  %157 = load i16, i16* %blue136, align 2, !dbg !1141
  call void @ConvertRGBToXYZ(i16 zeroext %155, i16 zeroext %156, i16 zeroext %157, double* %X, double* %Y, double* %Z), !dbg !1142
  br label %sw.epilog, !dbg !1143

sw.bb161:                                         ; preds = %for.body135
  %158 = load i16, i16* %red138, align 2, !dbg !1144
  %159 = load i16, i16* %green137, align 2, !dbg !1146
  %160 = load i16, i16* %blue136, align 2, !dbg !1147
  call void @ConvertRGBToYCbCr(i16 zeroext %158, i16 zeroext %159, i16 zeroext %160, double* %X, double* %Y, double* %Z), !dbg !1148
  br label %sw.epilog, !dbg !1149

sw.bb162:                                         ; preds = %for.body135
  %161 = load i16, i16* %red138, align 2, !dbg !1150
  %162 = load i16, i16* %green137, align 2, !dbg !1152
  %163 = load i16, i16* %blue136, align 2, !dbg !1153
  call void @ConvertRGBToYDbDr(i16 zeroext %161, i16 zeroext %162, i16 zeroext %163, double* %X, double* %Y, double* %Z), !dbg !1154
  br label %sw.epilog, !dbg !1155

sw.bb163:                                         ; preds = %for.body135
  %164 = load i16, i16* %red138, align 2, !dbg !1156
  %165 = load i16, i16* %green137, align 2, !dbg !1158
  %166 = load i16, i16* %blue136, align 2, !dbg !1159
  call void @ConvertRGBToYIQ(i16 zeroext %164, i16 zeroext %165, i16 zeroext %166, double* %X, double* %Y, double* %Z), !dbg !1160
  br label %sw.epilog, !dbg !1161

sw.bb164:                                         ; preds = %for.body135
  %167 = load i16, i16* %red138, align 2, !dbg !1162
  %168 = load i16, i16* %green137, align 2, !dbg !1164
  %169 = load i16, i16* %blue136, align 2, !dbg !1165
  call void @ConvertRGBToYPbPr(i16 zeroext %167, i16 zeroext %168, i16 zeroext %169, double* %X, double* %Y, double* %Z), !dbg !1166
  br label %sw.epilog, !dbg !1167

sw.bb165:                                         ; preds = %for.body135
  %170 = load i16, i16* %red138, align 2, !dbg !1168
  %171 = load i16, i16* %green137, align 2, !dbg !1170
  %172 = load i16, i16* %blue136, align 2, !dbg !1171
  call void @ConvertRGBToYUV(i16 zeroext %170, i16 zeroext %171, i16 zeroext %172, double* %X, double* %Y, double* %Z), !dbg !1172
  br label %sw.epilog, !dbg !1173

sw.default:                                       ; preds = %for.body135
  %173 = load i16, i16* %red138, align 2, !dbg !1174
  %conv166 = zext i16 %173 to i32, !dbg !1174
  %conv167 = sitofp i32 %conv166 to double, !dbg !1174
  %mul = fmul double 0x3EF0001000100010, %conv167, !dbg !1176
  store double %mul, double* %X, align 8, !dbg !1177
  %174 = load i16, i16* %green137, align 2, !dbg !1178
  %conv168 = zext i16 %174 to i32, !dbg !1178
  %conv169 = sitofp i32 %conv168 to double, !dbg !1178
  %mul170 = fmul double 0x3EF0001000100010, %conv169, !dbg !1179
  store double %mul170, double* %Y, align 8, !dbg !1180
  %175 = load i16, i16* %blue136, align 2, !dbg !1181
  %conv171 = zext i16 %175 to i32, !dbg !1181
  %conv172 = sitofp i32 %conv171 to double, !dbg !1181
  %mul173 = fmul double 0x3EF0001000100010, %conv172, !dbg !1182
  store double %mul173, double* %Z, align 8, !dbg !1183
  br label %sw.epilog, !dbg !1184

sw.epilog:                                        ; preds = %sw.default, %sw.bb165, %sw.bb164, %sw.bb163, %sw.bb162, %sw.bb161, %sw.bb160, %sw.bb159, %sw.bb158, %sw.bb157, %sw.bb156, %sw.bb155, %sw.bb154, %sw.bb153, %sw.bb152, %sw.bb151, %sw.bb150, %sw.bb149, %sw.bb148, %sw.bb147
  %176 = load double, double* %X, align 8, !dbg !1185
  %mul174 = fmul double 6.553500e+04, %176, !dbg !1185
  %conv175 = fptrunc double %mul174 to float, !dbg !1185
  %call176 = call zeroext i16 @ClampToQuantum(float %conv175), !dbg !1185
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1185
  %red177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 0, i32 2, !dbg !1185
  store i16 %call176, i16* %red177, align 2, !dbg !1185
  %178 = load double, double* %Y, align 8, !dbg !1186
  %mul178 = fmul double 6.553500e+04, %178, !dbg !1186
  %conv179 = fptrunc double %mul178 to float, !dbg !1186
  %call180 = call zeroext i16 @ClampToQuantum(float %conv179), !dbg !1186
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1186
  %green181 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 1, !dbg !1186
  store i16 %call180, i16* %green181, align 2, !dbg !1186
  %180 = load double, double* %Z, align 8, !dbg !1187
  %mul182 = fmul double 6.553500e+04, %180, !dbg !1187
  %conv183 = fptrunc double %mul182 to float, !dbg !1187
  %call184 = call zeroext i16 @ClampToQuantum(float %conv183), !dbg !1187
  %181 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1187
  %blue185 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %181, i32 0, i32 0, !dbg !1187
  store i16 %call184, i16* %blue185, align 2, !dbg !1187
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %q123, align 8, !dbg !1188
  %incdec.ptr186 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %182, i32 1, !dbg !1188
  store %struct._PixelPacket* %incdec.ptr186, %struct._PixelPacket** %q123, align 8, !dbg !1188
  br label %for.inc187, !dbg !1189

for.inc187:                                       ; preds = %sw.epilog
  %183 = load i64, i64* %x122, align 8, !dbg !1190
  %inc188 = add nsw i64 %183, 1, !dbg !1190
  store i64 %inc188, i64* %x122, align 8, !dbg !1190
  br label %for.cond132, !dbg !1191, !llvm.loop !1192

for.end189:                                       ; preds = %for.cond132
  %184 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1194
  %185 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1195
  %call190 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %184, %struct._ExceptionInfo* %185), !dbg !1196
  store i32 %call190, i32* %sync121, align 4, !dbg !1197
  %186 = load i32, i32* %sync121, align 4, !dbg !1198
  %cmp191 = icmp eq i32 %186, 0, !dbg !1200
  br i1 %cmp191, label %if.then193, label %if.end194, !dbg !1201

if.then193:                                       ; preds = %for.end189
  store i32 0, i32* %status, align 4, !dbg !1202
  br label %if.end194, !dbg !1203

if.end194:                                        ; preds = %if.then193, %for.end189
  br label %for.inc195, !dbg !1204

for.inc195:                                       ; preds = %if.end194, %if.then130, %if.then125
  %187 = load i64, i64* %y, align 8, !dbg !1205
  %inc196 = add nsw i64 %187, 1, !dbg !1205
  store i64 %inc196, i64* %y, align 8, !dbg !1205
  br label %for.cond117, !dbg !1206, !llvm.loop !1207

for.end197:                                       ; preds = %for.cond117
  %188 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1209
  %call198 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %188), !dbg !1210
  store %struct._CacheView* %call198, %struct._CacheView** %image_view, align 8, !dbg !1211
  %189 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1212
  %190 = load i32, i32* %colorspace.addr, align 4, !dbg !1214
  %call199 = call i32 @SetImageColorspace(%struct._Image* %189, i32 %190), !dbg !1215
  %cmp200 = icmp eq i32 %call199, 0, !dbg !1216
  br i1 %cmp200, label %if.then202, label %if.end203, !dbg !1217

if.then202:                                       ; preds = %for.end197
  store i32 0, i32* %retval, align 4, !dbg !1218
  br label %return, !dbg !1218

if.end203:                                        ; preds = %for.end197
  %191 = load i32, i32* %status, align 4, !dbg !1219
  store i32 %191, i32* %retval, align 4, !dbg !1220
  br label %return, !dbg !1220

sw.bb204:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %value, metadata !1221, metadata !DIExpression()), !dbg !1223
  call void @llvm.dbg.declare(metadata double* %black, metadata !1224, metadata !DIExpression()), !dbg !1225
  call void @llvm.dbg.declare(metadata double* %density, metadata !1226, metadata !DIExpression()), !dbg !1227
  call void @llvm.dbg.declare(metadata double* %film_gamma, metadata !1228, metadata !DIExpression()), !dbg !1229
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !1230, metadata !DIExpression()), !dbg !1231
  call void @llvm.dbg.declare(metadata double* %reference_black, metadata !1232, metadata !DIExpression()), !dbg !1233
  call void @llvm.dbg.declare(metadata double* %reference_white, metadata !1234, metadata !DIExpression()), !dbg !1235
  call void @llvm.dbg.declare(metadata i16** %logmap, metadata !1236, metadata !DIExpression()), !dbg !1237
  store double 0x3FE2D2D2D2D2D2D3, double* %density, align 8, !dbg !1238
  store double 0x3FE2D2D2D2D2D2D3, double* %gamma, align 8, !dbg !1239
  %192 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1240
  %call205 = call i8* @GetImageProperty(%struct._Image* %192, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !1241
  store i8* %call205, i8** %value, align 8, !dbg !1242
  %193 = load i8*, i8** %value, align 8, !dbg !1243
  %cmp206 = icmp ne i8* %193, null, !dbg !1245
  br i1 %cmp206, label %if.then208, label %if.end211, !dbg !1246

if.then208:                                       ; preds = %sw.bb204
  %194 = load i8*, i8** %value, align 8, !dbg !1247
  %call209 = call double @StringToDouble(i8* %194, i8** null), !dbg !1248
  %call210 = call double @PerceptibleReciprocal(double %call209), !dbg !1249
  store double %call210, double* %gamma, align 8, !dbg !1250
  br label %if.end211, !dbg !1251

if.end211:                                        ; preds = %if.then208, %sw.bb204
  store double 6.000000e-01, double* %film_gamma, align 8, !dbg !1252
  %195 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1253
  %call212 = call i8* @GetImageProperty(%struct._Image* %195, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)), !dbg !1254
  store i8* %call212, i8** %value, align 8, !dbg !1255
  %196 = load i8*, i8** %value, align 8, !dbg !1256
  %cmp213 = icmp ne i8* %196, null, !dbg !1258
  br i1 %cmp213, label %if.then215, label %if.end217, !dbg !1259

if.then215:                                       ; preds = %if.end211
  %197 = load i8*, i8** %value, align 8, !dbg !1260
  %call216 = call double @StringToDouble(i8* %197, i8** null), !dbg !1261
  store double %call216, double* %film_gamma, align 8, !dbg !1262
  br label %if.end217, !dbg !1263

if.end217:                                        ; preds = %if.then215, %if.end211
  store double 9.500000e+01, double* %reference_black, align 8, !dbg !1264
  %198 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1265
  %call218 = call i8* @GetImageProperty(%struct._Image* %198, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !1266
  store i8* %call218, i8** %value, align 8, !dbg !1267
  %199 = load i8*, i8** %value, align 8, !dbg !1268
  %cmp219 = icmp ne i8* %199, null, !dbg !1270
  br i1 %cmp219, label %if.then221, label %if.end223, !dbg !1271

if.then221:                                       ; preds = %if.end217
  %200 = load i8*, i8** %value, align 8, !dbg !1272
  %call222 = call double @StringToDouble(i8* %200, i8** null), !dbg !1273
  store double %call222, double* %reference_black, align 8, !dbg !1274
  br label %if.end223, !dbg !1275

if.end223:                                        ; preds = %if.then221, %if.end217
  store double 6.850000e+02, double* %reference_white, align 8, !dbg !1276
  %201 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1277
  %call224 = call i8* @GetImageProperty(%struct._Image* %201, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)), !dbg !1278
  store i8* %call224, i8** %value, align 8, !dbg !1279
  %202 = load i8*, i8** %value, align 8, !dbg !1280
  %cmp225 = icmp ne i8* %202, null, !dbg !1282
  br i1 %cmp225, label %if.then227, label %if.end229, !dbg !1283

if.then227:                                       ; preds = %if.end223
  %203 = load i8*, i8** %value, align 8, !dbg !1284
  %call228 = call double @StringToDouble(i8* %203, i8** null), !dbg !1285
  store double %call228, double* %reference_white, align 8, !dbg !1286
  br label %if.end229, !dbg !1287

if.end229:                                        ; preds = %if.then227, %if.end223
  %call230 = call i8* @AcquireQuantumMemory(i64 65536, i64 2) #6, !dbg !1288
  %204 = bitcast i8* %call230 to i16*, !dbg !1289
  store i16* %204, i16** %logmap, align 8, !dbg !1290
  %205 = load i16*, i16** %logmap, align 8, !dbg !1291
  %cmp231 = icmp eq i16* %205, null, !dbg !1293
  br i1 %cmp231, label %if.then233, label %if.end242, !dbg !1294

if.then233:                                       ; preds = %if.end229
  %206 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1295
  %cmp234 = icmp ne %struct._Image* %206, null, !dbg !1295
  br i1 %cmp234, label %if.then236, label %if.end241, !dbg !1298

if.then236:                                       ; preds = %if.then233
  %207 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1295
  %exception237 = getelementptr inbounds %struct._Image, %struct._Image* %207, i32 0, i32 58, !dbg !1295
  %208 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1295
  %filename238 = getelementptr inbounds %struct._Image, %struct._Image* %208, i32 0, i32 53, !dbg !1295
  %arraydecay239 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename238, i64 0, i64 0, !dbg !1295
  %call240 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception237, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 602, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay239), !dbg !1295
  br label %if.end241, !dbg !1295

if.end241:                                        ; preds = %if.then236, %if.then233
  store i32 0, i32* %retval, align 4, !dbg !1298
  br label %return, !dbg !1298

if.end242:                                        ; preds = %if.end229
  %209 = load double, double* %reference_black, align 8, !dbg !1299
  %210 = load double, double* %reference_white, align 8, !dbg !1300
  %sub = fsub double %209, %210, !dbg !1301
  %211 = load double, double* %gamma, align 8, !dbg !1302
  %212 = load double, double* %density, align 8, !dbg !1303
  %div = fdiv double %211, %212, !dbg !1304
  %mul243 = fmul double %sub, %div, !dbg !1305
  %mul244 = fmul double %mul243, 2.000000e-03, !dbg !1306
  %213 = load double, double* %film_gamma, align 8, !dbg !1307
  %div245 = fdiv double %mul244, %213, !dbg !1308
  %call246 = call double @pow(double 1.000000e+01, double %div245) #7, !dbg !1309
  store double %call246, double* %black, align 8, !dbg !1310
  store i64 0, i64* %i, align 8, !dbg !1311
  br label %for.cond247, !dbg !1313

for.cond247:                                      ; preds = %for.inc266, %if.end242
  %214 = load i64, i64* %i, align 8, !dbg !1314
  %cmp248 = icmp sle i64 %214, 65535, !dbg !1316
  br i1 %cmp248, label %for.body250, label %for.end268, !dbg !1317

for.body250:                                      ; preds = %for.cond247
  %215 = load double, double* %reference_white, align 8, !dbg !1318
  %216 = load double, double* %black, align 8, !dbg !1319
  %217 = load i64, i64* %i, align 8, !dbg !1320
  %conv251 = sitofp i64 %217 to double, !dbg !1320
  %mul252 = fmul double 1.000000e+00, %conv251, !dbg !1321
  %div253 = fdiv double %mul252, 6.553500e+04, !dbg !1322
  %218 = load double, double* %black, align 8, !dbg !1323
  %sub254 = fsub double 1.000000e+00, %218, !dbg !1324
  %mul255 = fmul double %div253, %sub254, !dbg !1325
  %add = fadd double %216, %mul255, !dbg !1326
  %call256 = call double @log10(double %add) #7, !dbg !1327
  %219 = load double, double* %gamma, align 8, !dbg !1328
  %220 = load double, double* %density, align 8, !dbg !1329
  %div257 = fdiv double %219, %220, !dbg !1330
  %mul258 = fmul double %div257, 2.000000e-03, !dbg !1331
  %221 = load double, double* %film_gamma, align 8, !dbg !1332
  %div259 = fdiv double %mul258, %221, !dbg !1333
  %div260 = fdiv double %call256, %div259, !dbg !1334
  %add261 = fadd double %215, %div260, !dbg !1335
  %mul262 = fmul double 6.553500e+04, %add261, !dbg !1336
  %div263 = fdiv double %mul262, 1.024000e+03, !dbg !1337
  %conv264 = fptrunc double %div263 to float, !dbg !1338
  %call265 = call zeroext i16 @ScaleMapToQuantum(float %conv264), !dbg !1339
  %222 = load i16*, i16** %logmap, align 8, !dbg !1340
  %223 = load i64, i64* %i, align 8, !dbg !1341
  %arrayidx = getelementptr inbounds i16, i16* %222, i64 %223, !dbg !1340
  store i16 %call265, i16* %arrayidx, align 2, !dbg !1342
  br label %for.inc266, !dbg !1340

for.inc266:                                       ; preds = %for.body250
  %224 = load i64, i64* %i, align 8, !dbg !1343
  %inc267 = add nsw i64 %224, 1, !dbg !1343
  store i64 %inc267, i64* %i, align 8, !dbg !1343
  br label %for.cond247, !dbg !1344, !llvm.loop !1345

for.end268:                                       ; preds = %for.cond247
  %225 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1347
  %226 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1348
  %call269 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %225, %struct._ExceptionInfo* %226), !dbg !1349
  store %struct._CacheView* %call269, %struct._CacheView** %image_view, align 8, !dbg !1350
  store i64 0, i64* %y, align 8, !dbg !1351
  br label %for.cond270, !dbg !1353

for.cond270:                                      ; preds = %for.inc327, %for.end268
  %227 = load i64, i64* %y, align 8, !dbg !1354
  %228 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1356
  %rows271 = getelementptr inbounds %struct._Image, %struct._Image* %228, i32 0, i32 8, !dbg !1357
  %229 = load i64, i64* %rows271, align 8, !dbg !1357
  %cmp272 = icmp slt i64 %227, %229, !dbg !1358
  br i1 %cmp272, label %for.body274, label %for.end329, !dbg !1359

for.body274:                                      ; preds = %for.cond270
  call void @llvm.dbg.declare(metadata i32* %sync275, metadata !1360, metadata !DIExpression()), !dbg !1362
  call void @llvm.dbg.declare(metadata i64* %x276, metadata !1363, metadata !DIExpression()), !dbg !1364
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q277, metadata !1365, metadata !DIExpression()), !dbg !1366
  %230 = load i32, i32* %status, align 4, !dbg !1367
  %cmp278 = icmp eq i32 %230, 0, !dbg !1369
  br i1 %cmp278, label %if.then280, label %if.end281, !dbg !1370

if.then280:                                       ; preds = %for.body274
  br label %for.inc327, !dbg !1371

if.end281:                                        ; preds = %for.body274
  %231 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1372
  %232 = load i64, i64* %y, align 8, !dbg !1373
  %233 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1374
  %columns282 = getelementptr inbounds %struct._Image, %struct._Image* %233, i32 0, i32 7, !dbg !1375
  %234 = load i64, i64* %columns282, align 8, !dbg !1375
  %235 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1376
  %call283 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %231, i64 0, i64 %232, i64 %234, i64 1, %struct._ExceptionInfo* %235), !dbg !1377
  store %struct._PixelPacket* %call283, %struct._PixelPacket** %q277, align 8, !dbg !1378
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1379
  %cmp284 = icmp eq %struct._PixelPacket* %236, null, !dbg !1381
  br i1 %cmp284, label %if.then286, label %if.end287, !dbg !1382

if.then286:                                       ; preds = %if.end281
  store i32 0, i32* %status, align 4, !dbg !1383
  br label %for.inc327, !dbg !1385

if.end287:                                        ; preds = %if.end281
  %237 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1386
  %columns288 = getelementptr inbounds %struct._Image, %struct._Image* %237, i32 0, i32 7, !dbg !1388
  %238 = load i64, i64* %columns288, align 8, !dbg !1388
  store i64 %238, i64* %x276, align 8, !dbg !1389
  br label %for.cond289, !dbg !1390

for.cond289:                                      ; preds = %for.inc320, %if.end287
  %239 = load i64, i64* %x276, align 8, !dbg !1391
  %cmp290 = icmp ne i64 %239, 0, !dbg !1393
  br i1 %cmp290, label %for.body292, label %for.end321, !dbg !1394

for.body292:                                      ; preds = %for.cond289
  call void @llvm.dbg.declare(metadata i16* %blue293, metadata !1395, metadata !DIExpression()), !dbg !1397
  call void @llvm.dbg.declare(metadata i16* %green294, metadata !1398, metadata !DIExpression()), !dbg !1399
  call void @llvm.dbg.declare(metadata i16* %red295, metadata !1400, metadata !DIExpression()), !dbg !1401
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1402
  %red296 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 2, !dbg !1402
  %241 = load i16, i16* %red296, align 2, !dbg !1402
  %conv297 = uitofp i16 %241 to float, !dbg !1403
  %call298 = call float @DecodePixelGamma(float %conv297), !dbg !1404
  %call299 = call zeroext i16 @ClampToQuantum(float %call298), !dbg !1405
  store i16 %call299, i16* %red295, align 2, !dbg !1406
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1407
  %green300 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 0, i32 1, !dbg !1407
  %243 = load i16, i16* %green300, align 2, !dbg !1407
  %conv301 = uitofp i16 %243 to float, !dbg !1408
  %call302 = call float @DecodePixelGamma(float %conv301), !dbg !1409
  %call303 = call zeroext i16 @ClampToQuantum(float %call302), !dbg !1410
  store i16 %call303, i16* %green294, align 2, !dbg !1411
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1412
  %blue304 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 0, i32 0, !dbg !1412
  %245 = load i16, i16* %blue304, align 2, !dbg !1412
  %conv305 = uitofp i16 %245 to float, !dbg !1413
  %call306 = call float @DecodePixelGamma(float %conv305), !dbg !1414
  %call307 = call zeroext i16 @ClampToQuantum(float %call306), !dbg !1415
  store i16 %call307, i16* %blue293, align 2, !dbg !1416
  %246 = load i16*, i16** %logmap, align 8, !dbg !1417
  %247 = load i16, i16* %red295, align 2, !dbg !1417
  %call308 = call i32 @ScaleQuantumToMap(i16 zeroext %247), !dbg !1417
  %idxprom = zext i32 %call308 to i64, !dbg !1417
  %arrayidx309 = getelementptr inbounds i16, i16* %246, i64 %idxprom, !dbg !1417
  %248 = load i16, i16* %arrayidx309, align 2, !dbg !1417
  %249 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1417
  %red310 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %249, i32 0, i32 2, !dbg !1417
  store i16 %248, i16* %red310, align 2, !dbg !1417
  %250 = load i16*, i16** %logmap, align 8, !dbg !1418
  %251 = load i16, i16* %green294, align 2, !dbg !1418
  %call311 = call i32 @ScaleQuantumToMap(i16 zeroext %251), !dbg !1418
  %idxprom312 = zext i32 %call311 to i64, !dbg !1418
  %arrayidx313 = getelementptr inbounds i16, i16* %250, i64 %idxprom312, !dbg !1418
  %252 = load i16, i16* %arrayidx313, align 2, !dbg !1418
  %253 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1418
  %green314 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %253, i32 0, i32 1, !dbg !1418
  store i16 %252, i16* %green314, align 2, !dbg !1418
  %254 = load i16*, i16** %logmap, align 8, !dbg !1419
  %255 = load i16, i16* %blue293, align 2, !dbg !1419
  %call315 = call i32 @ScaleQuantumToMap(i16 zeroext %255), !dbg !1419
  %idxprom316 = zext i32 %call315 to i64, !dbg !1419
  %arrayidx317 = getelementptr inbounds i16, i16* %254, i64 %idxprom316, !dbg !1419
  %256 = load i16, i16* %arrayidx317, align 2, !dbg !1419
  %257 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1419
  %blue318 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %257, i32 0, i32 0, !dbg !1419
  store i16 %256, i16* %blue318, align 2, !dbg !1419
  %258 = load %struct._PixelPacket*, %struct._PixelPacket** %q277, align 8, !dbg !1420
  %incdec.ptr319 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %258, i32 1, !dbg !1420
  store %struct._PixelPacket* %incdec.ptr319, %struct._PixelPacket** %q277, align 8, !dbg !1420
  br label %for.inc320, !dbg !1421

for.inc320:                                       ; preds = %for.body292
  %259 = load i64, i64* %x276, align 8, !dbg !1422
  %dec = add nsw i64 %259, -1, !dbg !1422
  store i64 %dec, i64* %x276, align 8, !dbg !1422
  br label %for.cond289, !dbg !1423, !llvm.loop !1424

for.end321:                                       ; preds = %for.cond289
  %260 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1426
  %261 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1427
  %call322 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %260, %struct._ExceptionInfo* %261), !dbg !1428
  store i32 %call322, i32* %sync275, align 4, !dbg !1429
  %262 = load i32, i32* %sync275, align 4, !dbg !1430
  %cmp323 = icmp eq i32 %262, 0, !dbg !1432
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !1433

if.then325:                                       ; preds = %for.end321
  store i32 0, i32* %status, align 4, !dbg !1434
  br label %if.end326, !dbg !1435

if.end326:                                        ; preds = %if.then325, %for.end321
  br label %for.inc327, !dbg !1436

for.inc327:                                       ; preds = %if.end326, %if.then286, %if.then280
  %263 = load i64, i64* %y, align 8, !dbg !1437
  %inc328 = add nsw i64 %263, 1, !dbg !1437
  store i64 %inc328, i64* %y, align 8, !dbg !1437
  br label %for.cond270, !dbg !1438, !llvm.loop !1439

for.end329:                                       ; preds = %for.cond270
  %264 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1441
  %call330 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %264), !dbg !1442
  store %struct._CacheView* %call330, %struct._CacheView** %image_view, align 8, !dbg !1443
  %265 = load i16*, i16** %logmap, align 8, !dbg !1444
  %266 = bitcast i16* %265 to i8*, !dbg !1444
  %call331 = call i8* @RelinquishMagickMemory(i8* %266), !dbg !1445
  %267 = bitcast i8* %call331 to i16*, !dbg !1446
  store i16* %267, i16** %logmap, align 8, !dbg !1447
  %268 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1448
  %269 = load i32, i32* %colorspace.addr, align 4, !dbg !1450
  %call332 = call i32 @SetImageColorspace(%struct._Image* %268, i32 %269), !dbg !1451
  %cmp333 = icmp eq i32 %call332, 0, !dbg !1452
  br i1 %cmp333, label %if.then335, label %if.end336, !dbg !1453

if.then335:                                       ; preds = %for.end329
  store i32 0, i32* %retval, align 4, !dbg !1454
  br label %return, !dbg !1454

if.end336:                                        ; preds = %for.end329
  %270 = load i32, i32* %status, align 4, !dbg !1455
  store i32 %270, i32* %retval, align 4, !dbg !1456
  br label %return, !dbg !1456

sw.bb337:                                         ; preds = %if.end, %if.end
  %271 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1457
  %storage_class338 = getelementptr inbounds %struct._Image, %struct._Image* %271, i32 0, i32 0, !dbg !1460
  %272 = load i32, i32* %storage_class338, align 8, !dbg !1460
  %cmp339 = icmp eq i32 %272, 2, !dbg !1461
  br i1 %cmp339, label %if.then341, label %if.end352, !dbg !1462

if.then341:                                       ; preds = %sw.bb337
  %273 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1463
  %call342 = call i32 @SyncImage(%struct._Image* %273), !dbg !1466
  %cmp343 = icmp eq i32 %call342, 0, !dbg !1467
  br i1 %cmp343, label %if.then345, label %if.end346, !dbg !1468

if.then345:                                       ; preds = %if.then341
  store i32 0, i32* %retval, align 4, !dbg !1469
  br label %return, !dbg !1469

if.end346:                                        ; preds = %if.then341
  %274 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1470
  %call347 = call i32 @SetImageStorageClass(%struct._Image* %274, i32 1), !dbg !1472
  %cmp348 = icmp eq i32 %call347, 0, !dbg !1473
  br i1 %cmp348, label %if.then350, label %if.end351, !dbg !1474

if.then350:                                       ; preds = %if.end346
  store i32 0, i32* %retval, align 4, !dbg !1475
  br label %return, !dbg !1475

if.end351:                                        ; preds = %if.end346
  br label %if.end352, !dbg !1476

if.end352:                                        ; preds = %if.end351, %sw.bb337
  %275 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1477
  %276 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1478
  %call353 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %275, %struct._ExceptionInfo* %276), !dbg !1479
  store %struct._CacheView* %call353, %struct._CacheView** %image_view, align 8, !dbg !1480
  store i64 0, i64* %y, align 8, !dbg !1481
  br label %for.cond354, !dbg !1483

for.cond354:                                      ; preds = %for.inc404, %if.end352
  %277 = load i64, i64* %y, align 8, !dbg !1484
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1486
  %rows355 = getelementptr inbounds %struct._Image, %struct._Image* %278, i32 0, i32 8, !dbg !1487
  %279 = load i64, i64* %rows355, align 8, !dbg !1487
  %cmp356 = icmp slt i64 %277, %279, !dbg !1488
  br i1 %cmp356, label %for.body358, label %for.end406, !dbg !1489

for.body358:                                      ; preds = %for.cond354
  call void @llvm.dbg.declare(metadata i32* %sync359, metadata !1490, metadata !DIExpression()), !dbg !1492
  call void @llvm.dbg.declare(metadata i64* %x360, metadata !1493, metadata !DIExpression()), !dbg !1494
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q361, metadata !1495, metadata !DIExpression()), !dbg !1496
  %280 = load i32, i32* %status, align 4, !dbg !1497
  %cmp362 = icmp eq i32 %280, 0, !dbg !1499
  br i1 %cmp362, label %if.then364, label %if.end365, !dbg !1500

if.then364:                                       ; preds = %for.body358
  br label %for.inc404, !dbg !1501

if.end365:                                        ; preds = %for.body358
  %281 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1502
  %282 = load i64, i64* %y, align 8, !dbg !1503
  %283 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1504
  %columns366 = getelementptr inbounds %struct._Image, %struct._Image* %283, i32 0, i32 7, !dbg !1505
  %284 = load i64, i64* %columns366, align 8, !dbg !1505
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1506
  %call367 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %281, i64 0, i64 %282, i64 %284, i64 1, %struct._ExceptionInfo* %285), !dbg !1507
  store %struct._PixelPacket* %call367, %struct._PixelPacket** %q361, align 8, !dbg !1508
  %286 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1509
  %cmp368 = icmp eq %struct._PixelPacket* %286, null, !dbg !1511
  br i1 %cmp368, label %if.then370, label %if.end371, !dbg !1512

if.then370:                                       ; preds = %if.end365
  store i32 0, i32* %status, align 4, !dbg !1513
  br label %for.inc404, !dbg !1515

if.end371:                                        ; preds = %if.end365
  store i64 0, i64* %x360, align 8, !dbg !1516
  br label %for.cond372, !dbg !1518

for.cond372:                                      ; preds = %for.inc396, %if.end371
  %287 = load i64, i64* %x360, align 8, !dbg !1519
  %288 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1521
  %columns373 = getelementptr inbounds %struct._Image, %struct._Image* %288, i32 0, i32 7, !dbg !1522
  %289 = load i64, i64* %columns373, align 8, !dbg !1522
  %cmp374 = icmp slt i64 %287, %289, !dbg !1523
  br i1 %cmp374, label %for.body376, label %for.end398, !dbg !1524

for.body376:                                      ; preds = %for.cond372
  call void @llvm.dbg.declare(metadata i16* %blue377, metadata !1525, metadata !DIExpression()), !dbg !1527
  call void @llvm.dbg.declare(metadata i16* %green378, metadata !1528, metadata !DIExpression()), !dbg !1529
  call void @llvm.dbg.declare(metadata i16* %red379, metadata !1530, metadata !DIExpression()), !dbg !1531
  %290 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1532
  %red380 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %290, i32 0, i32 2, !dbg !1532
  %291 = load i16, i16* %red380, align 2, !dbg !1532
  %conv381 = uitofp i16 %291 to float, !dbg !1533
  %call382 = call float @DecodePixelGamma(float %conv381), !dbg !1534
  %call383 = call zeroext i16 @ClampToQuantum(float %call382), !dbg !1535
  store i16 %call383, i16* %red379, align 2, !dbg !1536
  %292 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1537
  %green384 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %292, i32 0, i32 1, !dbg !1537
  %293 = load i16, i16* %green384, align 2, !dbg !1537
  %conv385 = uitofp i16 %293 to float, !dbg !1538
  %call386 = call float @DecodePixelGamma(float %conv385), !dbg !1539
  %call387 = call zeroext i16 @ClampToQuantum(float %call386), !dbg !1540
  store i16 %call387, i16* %green378, align 2, !dbg !1541
  %294 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1542
  %blue388 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %294, i32 0, i32 0, !dbg !1542
  %295 = load i16, i16* %blue388, align 2, !dbg !1542
  %conv389 = uitofp i16 %295 to float, !dbg !1543
  %call390 = call float @DecodePixelGamma(float %conv389), !dbg !1544
  %call391 = call zeroext i16 @ClampToQuantum(float %call390), !dbg !1545
  store i16 %call391, i16* %blue377, align 2, !dbg !1546
  %296 = load i16, i16* %red379, align 2, !dbg !1547
  %297 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1547
  %red392 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %297, i32 0, i32 2, !dbg !1547
  store i16 %296, i16* %red392, align 2, !dbg !1547
  %298 = load i16, i16* %green378, align 2, !dbg !1548
  %299 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1548
  %green393 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %299, i32 0, i32 1, !dbg !1548
  store i16 %298, i16* %green393, align 2, !dbg !1548
  %300 = load i16, i16* %blue377, align 2, !dbg !1549
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1549
  %blue394 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 0, !dbg !1549
  store i16 %300, i16* %blue394, align 2, !dbg !1549
  %302 = load %struct._PixelPacket*, %struct._PixelPacket** %q361, align 8, !dbg !1550
  %incdec.ptr395 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %302, i32 1, !dbg !1550
  store %struct._PixelPacket* %incdec.ptr395, %struct._PixelPacket** %q361, align 8, !dbg !1550
  br label %for.inc396, !dbg !1551

for.inc396:                                       ; preds = %for.body376
  %303 = load i64, i64* %x360, align 8, !dbg !1552
  %inc397 = add nsw i64 %303, 1, !dbg !1552
  store i64 %inc397, i64* %x360, align 8, !dbg !1552
  br label %for.cond372, !dbg !1553, !llvm.loop !1554

for.end398:                                       ; preds = %for.cond372
  %304 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1556
  %305 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1557
  %call399 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %304, %struct._ExceptionInfo* %305), !dbg !1558
  store i32 %call399, i32* %sync359, align 4, !dbg !1559
  %306 = load i32, i32* %sync359, align 4, !dbg !1560
  %cmp400 = icmp eq i32 %306, 0, !dbg !1562
  br i1 %cmp400, label %if.then402, label %if.end403, !dbg !1563

if.then402:                                       ; preds = %for.end398
  store i32 0, i32* %status, align 4, !dbg !1564
  br label %if.end403, !dbg !1565

if.end403:                                        ; preds = %if.then402, %for.end398
  br label %for.inc404, !dbg !1566

for.inc404:                                       ; preds = %if.end403, %if.then370, %if.then364
  %307 = load i64, i64* %y, align 8, !dbg !1567
  %inc405 = add nsw i64 %307, 1, !dbg !1567
  store i64 %inc405, i64* %y, align 8, !dbg !1567
  br label %for.cond354, !dbg !1568, !llvm.loop !1569

for.end406:                                       ; preds = %for.cond354
  %308 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1571
  %call407 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %308), !dbg !1572
  store %struct._CacheView* %call407, %struct._CacheView** %image_view, align 8, !dbg !1573
  %309 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1574
  %310 = load i32, i32* %colorspace.addr, align 4, !dbg !1576
  %call408 = call i32 @SetImageColorspace(%struct._Image* %309, i32 %310), !dbg !1577
  %cmp409 = icmp eq i32 %call408, 0, !dbg !1578
  br i1 %cmp409, label %if.then411, label %if.end412, !dbg !1579

if.then411:                                       ; preds = %for.end406
  store i32 0, i32* %retval, align 4, !dbg !1580
  br label %return, !dbg !1580

if.end412:                                        ; preds = %for.end406
  %311 = load i32, i32* %status, align 4, !dbg !1581
  store i32 %311, i32* %retval, align 4, !dbg !1582
  br label %return, !dbg !1582

sw.default413:                                    ; preds = %if.end
  br label %sw.epilog414, !dbg !1583

sw.epilog414:                                     ; preds = %sw.default413
  %call415 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !1584
  %312 = bitcast i8* %call415 to %struct._TransformPacket*, !dbg !1585
  store %struct._TransformPacket* %312, %struct._TransformPacket** %x_map, align 8, !dbg !1586
  %call416 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !1587
  %313 = bitcast i8* %call416 to %struct._TransformPacket*, !dbg !1588
  store %struct._TransformPacket* %313, %struct._TransformPacket** %y_map, align 8, !dbg !1589
  %call417 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !1590
  %314 = bitcast i8* %call417 to %struct._TransformPacket*, !dbg !1591
  store %struct._TransformPacket* %314, %struct._TransformPacket** %z_map, align 8, !dbg !1592
  %315 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1593
  %cmp418 = icmp eq %struct._TransformPacket* %315, null, !dbg !1595
  br i1 %cmp418, label %if.then425, label %lor.lhs.false, !dbg !1596

lor.lhs.false:                                    ; preds = %sw.epilog414
  %316 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1597
  %cmp420 = icmp eq %struct._TransformPacket* %316, null, !dbg !1598
  br i1 %cmp420, label %if.then425, label %lor.lhs.false422, !dbg !1599

lor.lhs.false422:                                 ; preds = %lor.lhs.false
  %317 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1600
  %cmp423 = icmp eq %struct._TransformPacket* %317, null, !dbg !1601
  br i1 %cmp423, label %if.then425, label %if.end434, !dbg !1602

if.then425:                                       ; preds = %lor.lhs.false422, %lor.lhs.false, %sw.epilog414
  %318 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1603
  %cmp426 = icmp ne %struct._Image* %318, null, !dbg !1603
  br i1 %cmp426, label %if.then428, label %if.end433, !dbg !1606

if.then428:                                       ; preds = %if.then425
  %319 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1603
  %exception429 = getelementptr inbounds %struct._Image, %struct._Image* %319, i32 0, i32 58, !dbg !1603
  %320 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1603
  %filename430 = getelementptr inbounds %struct._Image, %struct._Image* %320, i32 0, i32 53, !dbg !1603
  %arraydecay431 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename430, i64 0, i64 0, !dbg !1603
  %call432 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception429, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 747, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay431), !dbg !1603
  br label %if.end433, !dbg !1603

if.end433:                                        ; preds = %if.then428, %if.then425
  store i32 0, i32* %retval, align 4, !dbg !1606
  br label %return, !dbg !1606

if.end434:                                        ; preds = %lor.lhs.false422
  %321 = bitcast %struct._PrimaryInfo* %primary_info to i8*, !dbg !1607
  %call435 = call i8* @ResetMagickMemory(i8* %321, i32 0, i64 24), !dbg !1608
  %322 = load i32, i32* %colorspace.addr, align 4, !dbg !1609
  switch i32 %322, label %sw.default837 [
    i32 4, label %sw.bb436
    i32 17, label %sw.bb490
    i32 18, label %sw.bb543
    i32 19, label %sw.bb598
    i32 20, label %sw.bb651
    i32 8, label %sw.bb706
  ], !dbg !1610

sw.bb436:                                         ; preds = %if.end434
  %y437 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !1611
  store double 3.276800e+04, double* %y437, align 8, !dbg !1614
  %z = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !1615
  store double 3.276800e+04, double* %z, align 8, !dbg !1616
  store i64 0, i64* %i, align 8, !dbg !1617
  br label %for.cond438, !dbg !1619

for.cond438:                                      ; preds = %for.inc487, %sw.bb436
  %323 = load i64, i64* %i, align 8, !dbg !1620
  %cmp439 = icmp sle i64 %323, 65535, !dbg !1622
  br i1 %cmp439, label %for.body441, label %for.end489, !dbg !1623

for.body441:                                      ; preds = %for.cond438
  %324 = load i64, i64* %i, align 8, !dbg !1624
  %conv442 = sitofp i64 %324 to double, !dbg !1626
  %mul443 = fmul double 3.333300e-01, %conv442, !dbg !1627
  %conv444 = fptrunc double %mul443 to float, !dbg !1628
  %325 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1629
  %326 = load i64, i64* %i, align 8, !dbg !1630
  %arrayidx445 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %325, i64 %326, !dbg !1629
  %x446 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx445, i32 0, i32 0, !dbg !1631
  store float %conv444, float* %x446, align 4, !dbg !1632
  %327 = load i64, i64* %i, align 8, !dbg !1633
  %conv447 = sitofp i64 %327 to double, !dbg !1634
  %mul448 = fmul double 3.333400e-01, %conv447, !dbg !1635
  %conv449 = fptrunc double %mul448 to float, !dbg !1636
  %328 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1637
  %329 = load i64, i64* %i, align 8, !dbg !1638
  %arrayidx450 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %328, i64 %329, !dbg !1637
  %x451 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx450, i32 0, i32 0, !dbg !1639
  store float %conv449, float* %x451, align 4, !dbg !1640
  %330 = load i64, i64* %i, align 8, !dbg !1641
  %conv452 = sitofp i64 %330 to double, !dbg !1642
  %mul453 = fmul double 3.333300e-01, %conv452, !dbg !1643
  %conv454 = fptrunc double %mul453 to float, !dbg !1644
  %331 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1645
  %332 = load i64, i64* %i, align 8, !dbg !1646
  %arrayidx455 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %331, i64 %332, !dbg !1645
  %x456 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx455, i32 0, i32 0, !dbg !1647
  store float %conv454, float* %x456, align 4, !dbg !1648
  %333 = load i64, i64* %i, align 8, !dbg !1649
  %conv457 = sitofp i64 %333 to double, !dbg !1650
  %mul458 = fmul double 5.000000e-01, %conv457, !dbg !1651
  %conv459 = fptrunc double %mul458 to float, !dbg !1652
  %334 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1653
  %335 = load i64, i64* %i, align 8, !dbg !1654
  %arrayidx460 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %334, i64 %335, !dbg !1653
  %y461 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx460, i32 0, i32 1, !dbg !1655
  store float %conv459, float* %y461, align 4, !dbg !1656
  %336 = load i64, i64* %i, align 8, !dbg !1657
  %conv462 = sitofp i64 %336 to double, !dbg !1658
  %mul463 = fmul double 0.000000e+00, %conv462, !dbg !1659
  %conv464 = fptrunc double %mul463 to float, !dbg !1660
  %337 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1661
  %338 = load i64, i64* %i, align 8, !dbg !1662
  %arrayidx465 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %337, i64 %338, !dbg !1661
  %y466 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx465, i32 0, i32 1, !dbg !1663
  store float %conv464, float* %y466, align 4, !dbg !1664
  %339 = load i64, i64* %i, align 8, !dbg !1665
  %conv467 = sitofp i64 %339 to double, !dbg !1666
  %mul468 = fmul double -5.000000e-01, %conv467, !dbg !1667
  %conv469 = fptrunc double %mul468 to float, !dbg !1668
  %340 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1669
  %341 = load i64, i64* %i, align 8, !dbg !1670
  %arrayidx470 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %340, i64 %341, !dbg !1669
  %y471 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx470, i32 0, i32 1, !dbg !1671
  store float %conv469, float* %y471, align 4, !dbg !1672
  %342 = load i64, i64* %i, align 8, !dbg !1673
  %conv472 = sitofp i64 %342 to double, !dbg !1674
  %mul473 = fmul double -2.500000e-01, %conv472, !dbg !1675
  %conv474 = fptrunc double %mul473 to float, !dbg !1676
  %343 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1677
  %344 = load i64, i64* %i, align 8, !dbg !1678
  %arrayidx475 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %343, i64 %344, !dbg !1677
  %z476 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx475, i32 0, i32 2, !dbg !1679
  store float %conv474, float* %z476, align 4, !dbg !1680
  %345 = load i64, i64* %i, align 8, !dbg !1681
  %conv477 = sitofp i64 %345 to double, !dbg !1682
  %mul478 = fmul double 5.000000e-01, %conv477, !dbg !1683
  %conv479 = fptrunc double %mul478 to float, !dbg !1684
  %346 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1685
  %347 = load i64, i64* %i, align 8, !dbg !1686
  %arrayidx480 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %346, i64 %347, !dbg !1685
  %z481 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx480, i32 0, i32 2, !dbg !1687
  store float %conv479, float* %z481, align 4, !dbg !1688
  %348 = load i64, i64* %i, align 8, !dbg !1689
  %conv482 = sitofp i64 %348 to double, !dbg !1690
  %mul483 = fmul double -2.500000e-01, %conv482, !dbg !1691
  %conv484 = fptrunc double %mul483 to float, !dbg !1692
  %349 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1693
  %350 = load i64, i64* %i, align 8, !dbg !1694
  %arrayidx485 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %349, i64 %350, !dbg !1693
  %z486 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx485, i32 0, i32 2, !dbg !1695
  store float %conv484, float* %z486, align 4, !dbg !1696
  br label %for.inc487, !dbg !1697

for.inc487:                                       ; preds = %for.body441
  %351 = load i64, i64* %i, align 8, !dbg !1698
  %inc488 = add nsw i64 %351, 1, !dbg !1698
  store i64 %inc488, i64* %i, align 8, !dbg !1698
  br label %for.cond438, !dbg !1699, !llvm.loop !1700

for.end489:                                       ; preds = %for.cond438
  br label %sw.epilog872, !dbg !1702

sw.bb490:                                         ; preds = %if.end434
  store i64 0, i64* %i, align 8, !dbg !1703
  br label %for.cond491, !dbg !1706

for.cond491:                                      ; preds = %for.inc540, %sw.bb490
  %352 = load i64, i64* %i, align 8, !dbg !1707
  %cmp492 = icmp sle i64 %352, 65535, !dbg !1709
  br i1 %cmp492, label %for.body494, label %for.end542, !dbg !1710

for.body494:                                      ; preds = %for.cond491
  %353 = load i64, i64* %i, align 8, !dbg !1711
  %conv495 = sitofp i64 %353 to double, !dbg !1713
  %mul496 = fmul double 2.988390e-01, %conv495, !dbg !1714
  %conv497 = fptrunc double %mul496 to float, !dbg !1715
  %354 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1716
  %355 = load i64, i64* %i, align 8, !dbg !1717
  %arrayidx498 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %354, i64 %355, !dbg !1716
  %x499 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx498, i32 0, i32 0, !dbg !1718
  store float %conv497, float* %x499, align 4, !dbg !1719
  %356 = load i64, i64* %i, align 8, !dbg !1720
  %conv500 = sitofp i64 %356 to double, !dbg !1721
  %mul501 = fmul double 5.868110e-01, %conv500, !dbg !1722
  %conv502 = fptrunc double %mul501 to float, !dbg !1723
  %357 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1724
  %358 = load i64, i64* %i, align 8, !dbg !1725
  %arrayidx503 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %357, i64 %358, !dbg !1724
  %x504 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx503, i32 0, i32 0, !dbg !1726
  store float %conv502, float* %x504, align 4, !dbg !1727
  %359 = load i64, i64* %i, align 8, !dbg !1728
  %conv505 = sitofp i64 %359 to double, !dbg !1729
  %mul506 = fmul double 1.143500e-01, %conv505, !dbg !1730
  %conv507 = fptrunc double %mul506 to float, !dbg !1731
  %360 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1732
  %361 = load i64, i64* %i, align 8, !dbg !1733
  %arrayidx508 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %360, i64 %361, !dbg !1732
  %x509 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx508, i32 0, i32 0, !dbg !1734
  store float %conv507, float* %x509, align 4, !dbg !1735
  %362 = load i64, i64* %i, align 8, !dbg !1736
  %conv510 = sitofp i64 %362 to double, !dbg !1737
  %mul511 = fmul double 2.988390e-01, %conv510, !dbg !1738
  %conv512 = fptrunc double %mul511 to float, !dbg !1739
  %363 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1740
  %364 = load i64, i64* %i, align 8, !dbg !1741
  %arrayidx513 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %363, i64 %364, !dbg !1740
  %y514 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx513, i32 0, i32 1, !dbg !1742
  store float %conv512, float* %y514, align 4, !dbg !1743
  %365 = load i64, i64* %i, align 8, !dbg !1744
  %conv515 = sitofp i64 %365 to double, !dbg !1745
  %mul516 = fmul double 5.868110e-01, %conv515, !dbg !1746
  %conv517 = fptrunc double %mul516 to float, !dbg !1747
  %366 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1748
  %367 = load i64, i64* %i, align 8, !dbg !1749
  %arrayidx518 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %366, i64 %367, !dbg !1748
  %y519 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx518, i32 0, i32 1, !dbg !1750
  store float %conv517, float* %y519, align 4, !dbg !1751
  %368 = load i64, i64* %i, align 8, !dbg !1752
  %conv520 = sitofp i64 %368 to double, !dbg !1753
  %mul521 = fmul double 1.143500e-01, %conv520, !dbg !1754
  %conv522 = fptrunc double %mul521 to float, !dbg !1755
  %369 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1756
  %370 = load i64, i64* %i, align 8, !dbg !1757
  %arrayidx523 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %369, i64 %370, !dbg !1756
  %y524 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx523, i32 0, i32 1, !dbg !1758
  store float %conv522, float* %y524, align 4, !dbg !1759
  %371 = load i64, i64* %i, align 8, !dbg !1760
  %conv525 = sitofp i64 %371 to double, !dbg !1761
  %mul526 = fmul double 2.988390e-01, %conv525, !dbg !1762
  %conv527 = fptrunc double %mul526 to float, !dbg !1763
  %372 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1764
  %373 = load i64, i64* %i, align 8, !dbg !1765
  %arrayidx528 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %372, i64 %373, !dbg !1764
  %z529 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx528, i32 0, i32 2, !dbg !1766
  store float %conv527, float* %z529, align 4, !dbg !1767
  %374 = load i64, i64* %i, align 8, !dbg !1768
  %conv530 = sitofp i64 %374 to double, !dbg !1769
  %mul531 = fmul double 5.868110e-01, %conv530, !dbg !1770
  %conv532 = fptrunc double %mul531 to float, !dbg !1771
  %375 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1772
  %376 = load i64, i64* %i, align 8, !dbg !1773
  %arrayidx533 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %375, i64 %376, !dbg !1772
  %z534 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx533, i32 0, i32 2, !dbg !1774
  store float %conv532, float* %z534, align 4, !dbg !1775
  %377 = load i64, i64* %i, align 8, !dbg !1776
  %conv535 = sitofp i64 %377 to double, !dbg !1777
  %mul536 = fmul double 1.143500e-01, %conv535, !dbg !1778
  %conv537 = fptrunc double %mul536 to float, !dbg !1779
  %378 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1780
  %379 = load i64, i64* %i, align 8, !dbg !1781
  %arrayidx538 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %378, i64 %379, !dbg !1780
  %z539 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx538, i32 0, i32 2, !dbg !1782
  store float %conv537, float* %z539, align 4, !dbg !1783
  br label %for.inc540, !dbg !1784

for.inc540:                                       ; preds = %for.body494
  %380 = load i64, i64* %i, align 8, !dbg !1785
  %inc541 = add nsw i64 %380, 1, !dbg !1785
  store i64 %inc541, i64* %i, align 8, !dbg !1785
  br label %for.cond491, !dbg !1786, !llvm.loop !1787

for.end542:                                       ; preds = %for.cond491
  br label %sw.epilog872, !dbg !1789

sw.bb543:                                         ; preds = %if.end434
  %y544 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !1790
  store double 3.276800e+04, double* %y544, align 8, !dbg !1792
  %z545 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !1793
  store double 3.276800e+04, double* %z545, align 8, !dbg !1794
  store i64 0, i64* %i, align 8, !dbg !1795
  br label %for.cond546, !dbg !1797

for.cond546:                                      ; preds = %for.inc595, %sw.bb543
  %381 = load i64, i64* %i, align 8, !dbg !1798
  %cmp547 = icmp sle i64 %381, 65535, !dbg !1800
  br i1 %cmp547, label %for.body549, label %for.end597, !dbg !1801

for.body549:                                      ; preds = %for.cond546
  %382 = load i64, i64* %i, align 8, !dbg !1802
  %conv550 = sitofp i64 %382 to double, !dbg !1804
  %mul551 = fmul double 2.988390e-01, %conv550, !dbg !1805
  %conv552 = fptrunc double %mul551 to float, !dbg !1806
  %383 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1807
  %384 = load i64, i64* %i, align 8, !dbg !1808
  %arrayidx553 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %383, i64 %384, !dbg !1807
  %x554 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx553, i32 0, i32 0, !dbg !1809
  store float %conv552, float* %x554, align 4, !dbg !1810
  %385 = load i64, i64* %i, align 8, !dbg !1811
  %conv555 = sitofp i64 %385 to double, !dbg !1812
  %mul556 = fmul double 5.868110e-01, %conv555, !dbg !1813
  %conv557 = fptrunc double %mul556 to float, !dbg !1814
  %386 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1815
  %387 = load i64, i64* %i, align 8, !dbg !1816
  %arrayidx558 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %386, i64 %387, !dbg !1815
  %x559 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx558, i32 0, i32 0, !dbg !1817
  store float %conv557, float* %x559, align 4, !dbg !1818
  %388 = load i64, i64* %i, align 8, !dbg !1819
  %conv560 = sitofp i64 %388 to double, !dbg !1820
  %mul561 = fmul double 1.143500e-01, %conv560, !dbg !1821
  %conv562 = fptrunc double %mul561 to float, !dbg !1822
  %389 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1823
  %390 = load i64, i64* %i, align 8, !dbg !1824
  %arrayidx563 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %389, i64 %390, !dbg !1823
  %x564 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx563, i32 0, i32 0, !dbg !1825
  store float %conv562, float* %x564, align 4, !dbg !1826
  %391 = load i64, i64* %i, align 8, !dbg !1827
  %conv565 = sitofp i64 %391 to double, !dbg !1828
  %mul566 = fmul double 0xBFC5992A08114679, %conv565, !dbg !1829
  %conv567 = fptrunc double %mul566 to float, !dbg !1830
  %392 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1831
  %393 = load i64, i64* %i, align 8, !dbg !1832
  %arrayidx568 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %392, i64 %393, !dbg !1831
  %y569 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx568, i32 0, i32 1, !dbg !1833
  store float %conv567, float* %y569, align 4, !dbg !1834
  %394 = load i64, i64* %i, align 8, !dbg !1835
  %conv570 = sitofp i64 %394 to double, !dbg !1836
  %mul571 = fmul double -3.312640e-01, %conv570, !dbg !1837
  %conv572 = fptrunc double %mul571 to float, !dbg !1838
  %395 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1839
  %396 = load i64, i64* %i, align 8, !dbg !1840
  %arrayidx573 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %395, i64 %396, !dbg !1839
  %y574 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx573, i32 0, i32 1, !dbg !1841
  store float %conv572, float* %y574, align 4, !dbg !1842
  %397 = load i64, i64* %i, align 8, !dbg !1843
  %conv575 = sitofp i64 %397 to double, !dbg !1844
  %mul576 = fmul double 5.000000e-01, %conv575, !dbg !1845
  %conv577 = fptrunc double %mul576 to float, !dbg !1846
  %398 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1847
  %399 = load i64, i64* %i, align 8, !dbg !1848
  %arrayidx578 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %398, i64 %399, !dbg !1847
  %y579 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx578, i32 0, i32 1, !dbg !1849
  store float %conv577, float* %y579, align 4, !dbg !1850
  %400 = load i64, i64* %i, align 8, !dbg !1851
  %conv580 = sitofp i64 %400 to double, !dbg !1852
  %mul581 = fmul double 5.000000e-01, %conv580, !dbg !1853
  %conv582 = fptrunc double %mul581 to float, !dbg !1854
  %401 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1855
  %402 = load i64, i64* %i, align 8, !dbg !1856
  %arrayidx583 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %401, i64 %402, !dbg !1855
  %z584 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx583, i32 0, i32 2, !dbg !1857
  store float %conv582, float* %z584, align 4, !dbg !1858
  %403 = load i64, i64* %i, align 8, !dbg !1859
  %conv585 = sitofp i64 %403 to double, !dbg !1860
  %mul586 = fmul double -4.186880e-01, %conv585, !dbg !1861
  %conv587 = fptrunc double %mul586 to float, !dbg !1862
  %404 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1863
  %405 = load i64, i64* %i, align 8, !dbg !1864
  %arrayidx588 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %404, i64 %405, !dbg !1863
  %z589 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx588, i32 0, i32 2, !dbg !1865
  store float %conv587, float* %z589, align 4, !dbg !1866
  %406 = load i64, i64* %i, align 8, !dbg !1867
  %conv590 = sitofp i64 %406 to double, !dbg !1868
  %mul591 = fmul double -8.131200e-02, %conv590, !dbg !1869
  %conv592 = fptrunc double %mul591 to float, !dbg !1870
  %407 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1871
  %408 = load i64, i64* %i, align 8, !dbg !1872
  %arrayidx593 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %407, i64 %408, !dbg !1871
  %z594 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx593, i32 0, i32 2, !dbg !1873
  store float %conv592, float* %z594, align 4, !dbg !1874
  br label %for.inc595, !dbg !1875

for.inc595:                                       ; preds = %for.body549
  %409 = load i64, i64* %i, align 8, !dbg !1876
  %inc596 = add nsw i64 %409, 1, !dbg !1876
  store i64 %inc596, i64* %i, align 8, !dbg !1876
  br label %for.cond546, !dbg !1877, !llvm.loop !1878

for.end597:                                       ; preds = %for.cond546
  br label %sw.epilog872, !dbg !1880

sw.bb598:                                         ; preds = %if.end434
  store i64 0, i64* %i, align 8, !dbg !1881
  br label %for.cond599, !dbg !1884

for.cond599:                                      ; preds = %for.inc648, %sw.bb598
  %410 = load i64, i64* %i, align 8, !dbg !1885
  %cmp600 = icmp sle i64 %410, 65535, !dbg !1887
  br i1 %cmp600, label %for.body602, label %for.end650, !dbg !1888

for.body602:                                      ; preds = %for.cond599
  %411 = load i64, i64* %i, align 8, !dbg !1889
  %conv603 = sitofp i64 %411 to double, !dbg !1891
  %mul604 = fmul double 2.126560e-01, %conv603, !dbg !1892
  %conv605 = fptrunc double %mul604 to float, !dbg !1893
  %412 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1894
  %413 = load i64, i64* %i, align 8, !dbg !1895
  %arrayidx606 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %412, i64 %413, !dbg !1894
  %x607 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx606, i32 0, i32 0, !dbg !1896
  store float %conv605, float* %x607, align 4, !dbg !1897
  %414 = load i64, i64* %i, align 8, !dbg !1898
  %conv608 = sitofp i64 %414 to double, !dbg !1899
  %mul609 = fmul double 0x3FE6E29307AF20EA, %conv608, !dbg !1900
  %conv610 = fptrunc double %mul609 to float, !dbg !1901
  %415 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1902
  %416 = load i64, i64* %i, align 8, !dbg !1903
  %arrayidx611 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %415, i64 %416, !dbg !1902
  %x612 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx611, i32 0, i32 0, !dbg !1904
  store float %conv610, float* %x612, align 4, !dbg !1905
  %417 = load i64, i64* %i, align 8, !dbg !1906
  %conv613 = sitofp i64 %417 to double, !dbg !1907
  %mul614 = fmul double 7.218600e-02, %conv613, !dbg !1908
  %conv615 = fptrunc double %mul614 to float, !dbg !1909
  %418 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1910
  %419 = load i64, i64* %i, align 8, !dbg !1911
  %arrayidx616 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %418, i64 %419, !dbg !1910
  %x617 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx616, i32 0, i32 0, !dbg !1912
  store float %conv615, float* %x617, align 4, !dbg !1913
  %420 = load i64, i64* %i, align 8, !dbg !1914
  %conv618 = sitofp i64 %420 to double, !dbg !1915
  %mul619 = fmul double 2.126560e-01, %conv618, !dbg !1916
  %conv620 = fptrunc double %mul619 to float, !dbg !1917
  %421 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1918
  %422 = load i64, i64* %i, align 8, !dbg !1919
  %arrayidx621 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %421, i64 %422, !dbg !1918
  %y622 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx621, i32 0, i32 1, !dbg !1920
  store float %conv620, float* %y622, align 4, !dbg !1921
  %423 = load i64, i64* %i, align 8, !dbg !1922
  %conv623 = sitofp i64 %423 to double, !dbg !1923
  %mul624 = fmul double 0x3FE6E29307AF20EA, %conv623, !dbg !1924
  %conv625 = fptrunc double %mul624 to float, !dbg !1925
  %424 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1926
  %425 = load i64, i64* %i, align 8, !dbg !1927
  %arrayidx626 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %424, i64 %425, !dbg !1926
  %y627 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx626, i32 0, i32 1, !dbg !1928
  store float %conv625, float* %y627, align 4, !dbg !1929
  %426 = load i64, i64* %i, align 8, !dbg !1930
  %conv628 = sitofp i64 %426 to double, !dbg !1931
  %mul629 = fmul double 7.218600e-02, %conv628, !dbg !1932
  %conv630 = fptrunc double %mul629 to float, !dbg !1933
  %427 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1934
  %428 = load i64, i64* %i, align 8, !dbg !1935
  %arrayidx631 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %427, i64 %428, !dbg !1934
  %y632 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx631, i32 0, i32 1, !dbg !1936
  store float %conv630, float* %y632, align 4, !dbg !1937
  %429 = load i64, i64* %i, align 8, !dbg !1938
  %conv633 = sitofp i64 %429 to double, !dbg !1939
  %mul634 = fmul double 2.126560e-01, %conv633, !dbg !1940
  %conv635 = fptrunc double %mul634 to float, !dbg !1941
  %430 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1942
  %431 = load i64, i64* %i, align 8, !dbg !1943
  %arrayidx636 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %430, i64 %431, !dbg !1942
  %z637 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx636, i32 0, i32 2, !dbg !1944
  store float %conv635, float* %z637, align 4, !dbg !1945
  %432 = load i64, i64* %i, align 8, !dbg !1946
  %conv638 = sitofp i64 %432 to double, !dbg !1947
  %mul639 = fmul double 0x3FE6E29307AF20EA, %conv638, !dbg !1948
  %conv640 = fptrunc double %mul639 to float, !dbg !1949
  %433 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1950
  %434 = load i64, i64* %i, align 8, !dbg !1951
  %arrayidx641 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %433, i64 %434, !dbg !1950
  %z642 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx641, i32 0, i32 2, !dbg !1952
  store float %conv640, float* %z642, align 4, !dbg !1953
  %435 = load i64, i64* %i, align 8, !dbg !1954
  %conv643 = sitofp i64 %435 to double, !dbg !1955
  %mul644 = fmul double 7.218600e-02, %conv643, !dbg !1956
  %conv645 = fptrunc double %mul644 to float, !dbg !1957
  %436 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !1958
  %437 = load i64, i64* %i, align 8, !dbg !1959
  %arrayidx646 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %436, i64 %437, !dbg !1958
  %z647 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx646, i32 0, i32 2, !dbg !1960
  store float %conv645, float* %z647, align 4, !dbg !1961
  br label %for.inc648, !dbg !1962

for.inc648:                                       ; preds = %for.body602
  %438 = load i64, i64* %i, align 8, !dbg !1963
  %inc649 = add nsw i64 %438, 1, !dbg !1963
  store i64 %inc649, i64* %i, align 8, !dbg !1963
  br label %for.cond599, !dbg !1964, !llvm.loop !1965

for.end650:                                       ; preds = %for.cond599
  br label %sw.epilog872, !dbg !1967

sw.bb651:                                         ; preds = %if.end434
  %y652 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !1968
  store double 3.276800e+04, double* %y652, align 8, !dbg !1970
  %z653 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !1971
  store double 3.276800e+04, double* %z653, align 8, !dbg !1972
  store i64 0, i64* %i, align 8, !dbg !1973
  br label %for.cond654, !dbg !1975

for.cond654:                                      ; preds = %for.inc703, %sw.bb651
  %439 = load i64, i64* %i, align 8, !dbg !1976
  %cmp655 = icmp sle i64 %439, 65535, !dbg !1978
  br i1 %cmp655, label %for.body657, label %for.end705, !dbg !1979

for.body657:                                      ; preds = %for.cond654
  %440 = load i64, i64* %i, align 8, !dbg !1980
  %conv658 = sitofp i64 %440 to double, !dbg !1982
  %mul659 = fmul double 2.126560e-01, %conv658, !dbg !1983
  %conv660 = fptrunc double %mul659 to float, !dbg !1984
  %441 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !1985
  %442 = load i64, i64* %i, align 8, !dbg !1986
  %arrayidx661 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %441, i64 %442, !dbg !1985
  %x662 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx661, i32 0, i32 0, !dbg !1987
  store float %conv660, float* %x662, align 4, !dbg !1988
  %443 = load i64, i64* %i, align 8, !dbg !1989
  %conv663 = sitofp i64 %443 to double, !dbg !1990
  %mul664 = fmul double 0x3FE6E29307AF20EA, %conv663, !dbg !1991
  %conv665 = fptrunc double %mul664 to float, !dbg !1992
  %444 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !1993
  %445 = load i64, i64* %i, align 8, !dbg !1994
  %arrayidx666 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %444, i64 %445, !dbg !1993
  %x667 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx666, i32 0, i32 0, !dbg !1995
  store float %conv665, float* %x667, align 4, !dbg !1996
  %446 = load i64, i64* %i, align 8, !dbg !1997
  %conv668 = sitofp i64 %446 to double, !dbg !1998
  %mul669 = fmul double 7.218600e-02, %conv668, !dbg !1999
  %conv670 = fptrunc double %mul669 to float, !dbg !2000
  %447 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2001
  %448 = load i64, i64* %i, align 8, !dbg !2002
  %arrayidx671 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %447, i64 %448, !dbg !2001
  %x672 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx671, i32 0, i32 0, !dbg !2003
  store float %conv670, float* %x672, align 4, !dbg !2004
  %449 = load i64, i64* %i, align 8, !dbg !2005
  %conv673 = sitofp i64 %449 to double, !dbg !2006
  %mul674 = fmul double -1.145720e-01, %conv673, !dbg !2007
  %conv675 = fptrunc double %mul674 to float, !dbg !2008
  %450 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2009
  %451 = load i64, i64* %i, align 8, !dbg !2010
  %arrayidx676 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %450, i64 %451, !dbg !2009
  %y677 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx676, i32 0, i32 1, !dbg !2011
  store float %conv675, float* %y677, align 4, !dbg !2012
  %452 = load i64, i64* %i, align 8, !dbg !2013
  %conv678 = sitofp i64 %452 to double, !dbg !2014
  %mul679 = fmul double -3.854280e-01, %conv678, !dbg !2015
  %conv680 = fptrunc double %mul679 to float, !dbg !2016
  %453 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2017
  %454 = load i64, i64* %i, align 8, !dbg !2018
  %arrayidx681 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %453, i64 %454, !dbg !2017
  %y682 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx681, i32 0, i32 1, !dbg !2019
  store float %conv680, float* %y682, align 4, !dbg !2020
  %455 = load i64, i64* %i, align 8, !dbg !2021
  %conv683 = sitofp i64 %455 to double, !dbg !2022
  %mul684 = fmul double 5.000000e-01, %conv683, !dbg !2023
  %conv685 = fptrunc double %mul684 to float, !dbg !2024
  %456 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2025
  %457 = load i64, i64* %i, align 8, !dbg !2026
  %arrayidx686 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %456, i64 %457, !dbg !2025
  %y687 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx686, i32 0, i32 1, !dbg !2027
  store float %conv685, float* %y687, align 4, !dbg !2028
  %458 = load i64, i64* %i, align 8, !dbg !2029
  %conv688 = sitofp i64 %458 to double, !dbg !2030
  %mul689 = fmul double 5.000000e-01, %conv688, !dbg !2031
  %conv690 = fptrunc double %mul689 to float, !dbg !2032
  %459 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2033
  %460 = load i64, i64* %i, align 8, !dbg !2034
  %arrayidx691 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %459, i64 %460, !dbg !2033
  %z692 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx691, i32 0, i32 2, !dbg !2035
  store float %conv690, float* %z692, align 4, !dbg !2036
  %461 = load i64, i64* %i, align 8, !dbg !2037
  %conv693 = sitofp i64 %461 to double, !dbg !2038
  %mul694 = fmul double -4.541530e-01, %conv693, !dbg !2039
  %conv695 = fptrunc double %mul694 to float, !dbg !2040
  %462 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2041
  %463 = load i64, i64* %i, align 8, !dbg !2042
  %arrayidx696 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %462, i64 %463, !dbg !2041
  %z697 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx696, i32 0, i32 2, !dbg !2043
  store float %conv695, float* %z697, align 4, !dbg !2044
  %464 = load i64, i64* %i, align 8, !dbg !2045
  %conv698 = sitofp i64 %464 to double, !dbg !2046
  %mul699 = fmul double -4.584700e-02, %conv698, !dbg !2047
  %conv700 = fptrunc double %mul699 to float, !dbg !2048
  %465 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2049
  %466 = load i64, i64* %i, align 8, !dbg !2050
  %arrayidx701 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %465, i64 %466, !dbg !2049
  %z702 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx701, i32 0, i32 2, !dbg !2051
  store float %conv700, float* %z702, align 4, !dbg !2052
  br label %for.inc703, !dbg !2053

for.inc703:                                       ; preds = %for.body657
  %467 = load i64, i64* %i, align 8, !dbg !2054
  %inc704 = add nsw i64 %467, 1, !dbg !2054
  store i64 %inc704, i64* %i, align 8, !dbg !2054
  br label %for.cond654, !dbg !2055, !llvm.loop !2056

for.end705:                                       ; preds = %for.cond654
  br label %sw.epilog872, !dbg !2058

sw.bb706:                                         ; preds = %if.end434
  %call707 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -100), !dbg !2059
  %call708 = call i32 @ScaleQuantumToMap(i16 zeroext %call707), !dbg !2061
  %conv709 = uitofp i32 %call708 to double, !dbg !2062
  %y710 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !2063
  store double %conv709, double* %y710, align 8, !dbg !2064
  %call711 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -119), !dbg !2065
  %call712 = call i32 @ScaleQuantumToMap(i16 zeroext %call711), !dbg !2066
  %conv713 = uitofp i32 %call712 to double, !dbg !2067
  %z714 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !2068
  store double %conv713, double* %z714, align 8, !dbg !2069
  store i64 0, i64* %i, align 8, !dbg !2070
  br label %for.cond715, !dbg !2072

for.cond715:                                      ; preds = %for.inc764, %sw.bb706
  %468 = load i64, i64* %i, align 8, !dbg !2073
  %cmp716 = icmp sle i64 %468, 1179, !dbg !2075
  br i1 %cmp716, label %for.body718, label %for.end766, !dbg !2076

for.body718:                                      ; preds = %for.cond715
  %469 = load i64, i64* %i, align 8, !dbg !2077
  %conv719 = sitofp i64 %469 to double, !dbg !2077
  %mul720 = fmul double 0x3F703A791220C84F, %conv719, !dbg !2079
  %conv721 = fptrunc double %mul720 to float, !dbg !2080
  %470 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2081
  %471 = load i64, i64* %i, align 8, !dbg !2082
  %arrayidx722 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %470, i64 %471, !dbg !2081
  %x723 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx722, i32 0, i32 0, !dbg !2083
  store float %conv721, float* %x723, align 4, !dbg !2084
  %472 = load i64, i64* %i, align 8, !dbg !2085
  %conv724 = sitofp i64 %472 to double, !dbg !2085
  %mul725 = fmul double 0x3F7FDC1B10C0C977, %conv724, !dbg !2086
  %conv726 = fptrunc double %mul725 to float, !dbg !2087
  %473 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2088
  %474 = load i64, i64* %i, align 8, !dbg !2089
  %arrayidx727 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %473, i64 %474, !dbg !2088
  %x728 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx727, i32 0, i32 0, !dbg !2090
  store float %conv726, float* %x728, align 4, !dbg !2091
  %475 = load i64, i64* %i, align 8, !dbg !2092
  %conv729 = sitofp i64 %475 to double, !dbg !2092
  %mul730 = fmul double 0x3F58BFEB287D572B, %conv729, !dbg !2093
  %conv731 = fptrunc double %mul730 to float, !dbg !2094
  %476 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2095
  %477 = load i64, i64* %i, align 8, !dbg !2096
  %arrayidx732 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %476, i64 %477, !dbg !2095
  %x733 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx732, i32 0, i32 0, !dbg !2097
  store float %conv731, float* %x733, align 4, !dbg !2098
  %478 = load i64, i64* %i, align 8, !dbg !2099
  %conv734 = sitofp i64 %478 to double, !dbg !2099
  %mul735 = fmul double 0xBF63E0FD926A0493, %conv734, !dbg !2100
  %conv736 = fptrunc double %mul735 to float, !dbg !2101
  %479 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2102
  %480 = load i64, i64* %i, align 8, !dbg !2103
  %arrayidx737 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %479, i64 %480, !dbg !2102
  %y738 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx737, i32 0, i32 1, !dbg !2104
  store float %conv736, float* %y738, align 4, !dbg !2105
  %481 = load i64, i64* %i, align 8, !dbg !2106
  %conv739 = sitofp i64 %481 to double, !dbg !2106
  %mul740 = fmul double 0xBF7383615CC71ABE, %conv739, !dbg !2107
  %conv741 = fptrunc double %mul740 to float, !dbg !2108
  %482 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2109
  %483 = load i64, i64* %i, align 8, !dbg !2110
  %arrayidx742 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %482, i64 %483, !dbg !2109
  %y743 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx742, i32 0, i32 1, !dbg !2111
  store float %conv741, float* %y743, align 4, !dbg !2112
  %484 = load i64, i64* %i, align 8, !dbg !2113
  %conv744 = sitofp i64 %484 to double, !dbg !2113
  %mul745 = fmul double 0x3F7D73E025FC1D07, %conv744, !dbg !2114
  %conv746 = fptrunc double %mul745 to float, !dbg !2115
  %485 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2116
  %486 = load i64, i64* %i, align 8, !dbg !2117
  %arrayidx747 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %485, i64 %486, !dbg !2116
  %y748 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx747, i32 0, i32 1, !dbg !2118
  store float %conv746, float* %y748, align 4, !dbg !2119
  %487 = load i64, i64* %i, align 8, !dbg !2120
  %conv749 = sitofp i64 %487 to double, !dbg !2120
  %mul750 = fmul double 0x3F7C5FC1981C824B, %conv749, !dbg !2121
  %conv751 = fptrunc double %mul750 to float, !dbg !2122
  %488 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2123
  %489 = load i64, i64* %i, align 8, !dbg !2124
  %arrayidx752 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %488, i64 %489, !dbg !2123
  %z753 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx752, i32 0, i32 2, !dbg !2125
  store float %conv751, float* %z753, align 4, !dbg !2126
  %490 = load i64, i64* %i, align 8, !dbg !2127
  %conv754 = sitofp i64 %490 to double, !dbg !2127
  %mul755 = fmul double 0xBF77C27D39FCD933, %conv754, !dbg !2128
  %conv756 = fptrunc double %mul755 to float, !dbg !2129
  %491 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2130
  %492 = load i64, i64* %i, align 8, !dbg !2131
  %arrayidx757 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %491, i64 %492, !dbg !2130
  %z758 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx757, i32 0, i32 2, !dbg !2132
  store float %conv756, float* %z758, align 4, !dbg !2133
  %493 = load i64, i64* %i, align 8, !dbg !2134
  %conv759 = sitofp i64 %493 to double, !dbg !2134
  %mul760 = fmul double 0xBF527511787EA45E, %conv759, !dbg !2135
  %conv761 = fptrunc double %mul760 to float, !dbg !2136
  %494 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2137
  %495 = load i64, i64* %i, align 8, !dbg !2138
  %arrayidx762 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %494, i64 %495, !dbg !2137
  %z763 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx762, i32 0, i32 2, !dbg !2139
  store float %conv761, float* %z763, align 4, !dbg !2140
  br label %for.inc764, !dbg !2141

for.inc764:                                       ; preds = %for.body718
  %496 = load i64, i64* %i, align 8, !dbg !2142
  %inc765 = add nsw i64 %496, 1, !dbg !2142
  store i64 %inc765, i64* %i, align 8, !dbg !2142
  br label %for.cond715, !dbg !2143, !llvm.loop !2144

for.end766:                                       ; preds = %for.cond715
  br label %for.cond767, !dbg !2146

for.cond767:                                      ; preds = %for.inc834, %for.end766
  %497 = load i64, i64* %i, align 8, !dbg !2147
  %cmp768 = icmp sle i64 %497, 65535, !dbg !2150
  br i1 %cmp768, label %for.body770, label %for.end836, !dbg !2151

for.body770:                                      ; preds = %for.cond767
  %498 = load i64, i64* %i, align 8, !dbg !2152
  %conv771 = sitofp i64 %498 to double, !dbg !2152
  %mul772 = fmul double 1.099000e+00, %conv771, !dbg !2154
  %sub773 = fsub double %mul772, 9.900000e-02, !dbg !2155
  %mul774 = fmul double 0x3FCC2CA06A2394A5, %sub773, !dbg !2156
  %conv775 = fptrunc double %mul774 to float, !dbg !2157
  %499 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2158
  %500 = load i64, i64* %i, align 8, !dbg !2159
  %arrayidx776 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %499, i64 %500, !dbg !2158
  %x777 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx776, i32 0, i32 0, !dbg !2160
  store float %conv775, float* %x777, align 4, !dbg !2161
  %501 = load i64, i64* %i, align 8, !dbg !2162
  %conv778 = sitofp i64 %501 to double, !dbg !2162
  %mul779 = fmul double 1.099000e+00, %conv778, !dbg !2163
  %sub780 = fsub double %mul779, 9.900000e-02, !dbg !2164
  %mul781 = fmul double 0x3FDBA7F3F0520438, %sub780, !dbg !2165
  %conv782 = fptrunc double %mul781 to float, !dbg !2166
  %502 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2167
  %503 = load i64, i64* %i, align 8, !dbg !2168
  %arrayidx783 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %502, i64 %503, !dbg !2167
  %x784 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx783, i32 0, i32 0, !dbg !2169
  store float %conv782, float* %x784, align 4, !dbg !2170
  %504 = load i64, i64* %i, align 8, !dbg !2171
  %conv785 = sitofp i64 %504 to double, !dbg !2171
  %mul786 = fmul double 1.099000e+00, %conv785, !dbg !2172
  %sub787 = fsub double %mul786, 9.900000e-02, !dbg !2173
  %mul788 = fmul double 0x3FB57BEDE87B0655, %sub787, !dbg !2174
  %conv789 = fptrunc double %mul788 to float, !dbg !2175
  %505 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2176
  %506 = load i64, i64* %i, align 8, !dbg !2177
  %arrayidx790 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %505, i64 %506, !dbg !2176
  %x791 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx790, i32 0, i32 0, !dbg !2178
  store float %conv789, float* %x791, align 4, !dbg !2179
  %507 = load i64, i64* %i, align 8, !dbg !2180
  %conv792 = sitofp i64 %507 to double, !dbg !2180
  %mul793 = fmul double 1.099000e+00, %conv792, !dbg !2181
  %sub794 = fsub double %mul793, 9.900000e-02, !dbg !2182
  %mul795 = fmul double 0xBFC14186C7FC0787, %sub794, !dbg !2183
  %conv796 = fptrunc double %mul795 to float, !dbg !2184
  %508 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2185
  %509 = load i64, i64* %i, align 8, !dbg !2186
  %arrayidx797 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %508, i64 %509, !dbg !2185
  %y798 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx797, i32 0, i32 1, !dbg !2187
  store float %conv796, float* %y798, align 4, !dbg !2188
  %510 = load i64, i64* %i, align 8, !dbg !2189
  %conv799 = sitofp i64 %510 to double, !dbg !2189
  %mul800 = fmul double 1.099000e+00, %conv799, !dbg !2190
  %sub801 = fsub double %mul800, 9.900000e-02, !dbg !2191
  %mul802 = fmul double 0xBFD0F0448417801C, %sub801, !dbg !2192
  %conv803 = fptrunc double %mul802 to float, !dbg !2193
  %511 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2194
  %512 = load i64, i64* %i, align 8, !dbg !2195
  %arrayidx804 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %511, i64 %512, !dbg !2194
  %y805 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx804, i32 0, i32 1, !dbg !2196
  store float %conv803, float* %y805, align 4, !dbg !2197
  %513 = load i64, i64* %i, align 8, !dbg !2198
  %conv806 = sitofp i64 %513 to double, !dbg !2198
  %mul807 = fmul double 1.099000e+00, %conv806, !dbg !2199
  %sub808 = fsub double %mul807, 9.900000e-02, !dbg !2200
  %mul809 = fmul double 0x3FD99107E81583DF, %sub808, !dbg !2201
  %conv810 = fptrunc double %mul809 to float, !dbg !2202
  %514 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2203
  %515 = load i64, i64* %i, align 8, !dbg !2204
  %arrayidx811 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %514, i64 %515, !dbg !2203
  %y812 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx811, i32 0, i32 1, !dbg !2205
  store float %conv810, float* %y812, align 4, !dbg !2206
  %516 = load i64, i64* %i, align 8, !dbg !2207
  %conv813 = sitofp i64 %516 to double, !dbg !2207
  %mul814 = fmul double 1.099000e+00, %conv813, !dbg !2208
  %sub815 = fsub double %mul814, 9.900000e-02, !dbg !2209
  %mul816 = fmul double 0x3FD8A1580CEE14A9, %sub815, !dbg !2210
  %conv817 = fptrunc double %mul816 to float, !dbg !2211
  %517 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2212
  %518 = load i64, i64* %i, align 8, !dbg !2213
  %arrayidx818 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %517, i64 %518, !dbg !2212
  %z819 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx818, i32 0, i32 2, !dbg !2214
  store float %conv817, float* %z819, align 4, !dbg !2215
  %519 = load i64, i64* %i, align 8, !dbg !2216
  %conv820 = sitofp i64 %519 to double, !dbg !2216
  %mul821 = fmul double 1.099000e+00, %conv820, !dbg !2217
  %sub822 = fsub double %mul821, 9.900000e-02, !dbg !2218
  %mul823 = fmul double 0xBFD49FF042562736, %sub822, !dbg !2219
  %conv824 = fptrunc double %mul823 to float, !dbg !2220
  %520 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2221
  %521 = load i64, i64* %i, align 8, !dbg !2222
  %arrayidx825 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %520, i64 %521, !dbg !2221
  %z826 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx825, i32 0, i32 2, !dbg !2223
  store float %conv824, float* %z826, align 4, !dbg !2224
  %522 = load i64, i64* %i, align 8, !dbg !2225
  %conv827 = sitofp i64 %522 to double, !dbg !2225
  %mul828 = fmul double 1.099000e+00, %conv827, !dbg !2226
  %sub829 = fsub double %mul828, 9.900000e-02, !dbg !2227
  %mul830 = fmul double 0xBFB0059F2A5FB5CB, %sub829, !dbg !2228
  %conv831 = fptrunc double %mul830 to float, !dbg !2229
  %523 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2230
  %524 = load i64, i64* %i, align 8, !dbg !2231
  %arrayidx832 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %523, i64 %524, !dbg !2230
  %z833 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx832, i32 0, i32 2, !dbg !2232
  store float %conv831, float* %z833, align 4, !dbg !2233
  br label %for.inc834, !dbg !2234

for.inc834:                                       ; preds = %for.body770
  %525 = load i64, i64* %i, align 8, !dbg !2235
  %inc835 = add nsw i64 %525, 1, !dbg !2235
  store i64 %inc835, i64* %i, align 8, !dbg !2235
  br label %for.cond767, !dbg !2236, !llvm.loop !2237

for.end836:                                       ; preds = %for.cond767
  br label %sw.epilog872, !dbg !2239

sw.default837:                                    ; preds = %if.end434
  store i64 0, i64* %i, align 8, !dbg !2240
  br label %for.cond838, !dbg !2243

for.cond838:                                      ; preds = %for.inc869, %sw.default837
  %526 = load i64, i64* %i, align 8, !dbg !2244
  %cmp839 = icmp sle i64 %526, 65535, !dbg !2246
  br i1 %cmp839, label %for.body841, label %for.end871, !dbg !2247

for.body841:                                      ; preds = %for.cond838
  %527 = load i64, i64* %i, align 8, !dbg !2248
  %conv842 = sitofp i64 %527 to double, !dbg !2250
  %mul843 = fmul double 1.000000e+00, %conv842, !dbg !2251
  %conv844 = fptrunc double %mul843 to float, !dbg !2252
  %528 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2253
  %529 = load i64, i64* %i, align 8, !dbg !2254
  %arrayidx845 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %528, i64 %529, !dbg !2253
  %x846 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx845, i32 0, i32 0, !dbg !2255
  store float %conv844, float* %x846, align 4, !dbg !2256
  %530 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2257
  %531 = load i64, i64* %i, align 8, !dbg !2258
  %arrayidx847 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %530, i64 %531, !dbg !2257
  %x848 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx847, i32 0, i32 0, !dbg !2259
  store float 0.000000e+00, float* %x848, align 4, !dbg !2260
  %532 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2261
  %533 = load i64, i64* %i, align 8, !dbg !2262
  %arrayidx849 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %532, i64 %533, !dbg !2261
  %x850 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx849, i32 0, i32 0, !dbg !2263
  store float 0.000000e+00, float* %x850, align 4, !dbg !2264
  %534 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2265
  %535 = load i64, i64* %i, align 8, !dbg !2266
  %arrayidx851 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %534, i64 %535, !dbg !2265
  %y852 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx851, i32 0, i32 1, !dbg !2267
  store float 0.000000e+00, float* %y852, align 4, !dbg !2268
  %536 = load i64, i64* %i, align 8, !dbg !2269
  %conv853 = sitofp i64 %536 to double, !dbg !2270
  %mul854 = fmul double 1.000000e+00, %conv853, !dbg !2271
  %conv855 = fptrunc double %mul854 to float, !dbg !2272
  %537 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2273
  %538 = load i64, i64* %i, align 8, !dbg !2274
  %arrayidx856 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %537, i64 %538, !dbg !2273
  %y857 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx856, i32 0, i32 1, !dbg !2275
  store float %conv855, float* %y857, align 4, !dbg !2276
  %539 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2277
  %540 = load i64, i64* %i, align 8, !dbg !2278
  %arrayidx858 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %539, i64 %540, !dbg !2277
  %y859 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx858, i32 0, i32 1, !dbg !2279
  store float 0.000000e+00, float* %y859, align 4, !dbg !2280
  %541 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2281
  %542 = load i64, i64* %i, align 8, !dbg !2282
  %arrayidx860 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %541, i64 %542, !dbg !2281
  %z861 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx860, i32 0, i32 2, !dbg !2283
  store float 0.000000e+00, float* %z861, align 4, !dbg !2284
  %543 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2285
  %544 = load i64, i64* %i, align 8, !dbg !2286
  %arrayidx862 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %543, i64 %544, !dbg !2285
  %z863 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx862, i32 0, i32 2, !dbg !2287
  store float 0.000000e+00, float* %z863, align 4, !dbg !2288
  %545 = load i64, i64* %i, align 8, !dbg !2289
  %conv864 = sitofp i64 %545 to double, !dbg !2290
  %mul865 = fmul double 1.000000e+00, %conv864, !dbg !2291
  %conv866 = fptrunc double %mul865 to float, !dbg !2292
  %546 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2293
  %547 = load i64, i64* %i, align 8, !dbg !2294
  %arrayidx867 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %546, i64 %547, !dbg !2293
  %z868 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx867, i32 0, i32 2, !dbg !2295
  store float %conv866, float* %z868, align 4, !dbg !2296
  br label %for.inc869, !dbg !2297

for.inc869:                                       ; preds = %for.body841
  %548 = load i64, i64* %i, align 8, !dbg !2298
  %inc870 = add nsw i64 %548, 1, !dbg !2298
  store i64 %inc870, i64* %i, align 8, !dbg !2298
  br label %for.cond838, !dbg !2299, !llvm.loop !2300

for.end871:                                       ; preds = %for.cond838
  br label %sw.epilog872, !dbg !2302

sw.epilog872:                                     ; preds = %for.end871, %for.end836, %for.end705, %for.end650, %for.end597, %for.end542, %for.end489
  %549 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2303
  %storage_class873 = getelementptr inbounds %struct._Image, %struct._Image* %549, i32 0, i32 0, !dbg !2304
  %550 = load i32, i32* %storage_class873, align 8, !dbg !2304
  switch i32 %550, label %sw.default875 [
    i32 1, label %sw.bb874
    i32 2, label %sw.bb988
  ], !dbg !2305

sw.bb874:                                         ; preds = %sw.epilog872
  br label %sw.default875, !dbg !2306

sw.default875:                                    ; preds = %sw.epilog872, %sw.bb874
  %551 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2307
  %552 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2310
  %call876 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %551, %struct._ExceptionInfo* %552), !dbg !2311
  store %struct._CacheView* %call876, %struct._CacheView** %image_view, align 8, !dbg !2312
  store i64 0, i64* %y, align 8, !dbg !2313
  br label %for.cond877, !dbg !2315

for.cond877:                                      ; preds = %for.inc984, %sw.default875
  %553 = load i64, i64* %y, align 8, !dbg !2316
  %554 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2318
  %rows878 = getelementptr inbounds %struct._Image, %struct._Image* %554, i32 0, i32 8, !dbg !2319
  %555 = load i64, i64* %rows878, align 8, !dbg !2319
  %cmp879 = icmp slt i64 %553, %555, !dbg !2320
  br i1 %cmp879, label %for.body881, label %for.end986, !dbg !2321

for.body881:                                      ; preds = %for.cond877
  call void @llvm.dbg.declare(metadata i32* %sync882, metadata !2322, metadata !DIExpression()), !dbg !2324
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel883, metadata !2325, metadata !DIExpression()), !dbg !2326
  call void @llvm.dbg.declare(metadata i64* %x884, metadata !2327, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q885, metadata !2329, metadata !DIExpression()), !dbg !2330
  call void @llvm.dbg.declare(metadata i64* %blue886, metadata !2331, metadata !DIExpression()), !dbg !2332
  call void @llvm.dbg.declare(metadata i64* %green887, metadata !2333, metadata !DIExpression()), !dbg !2334
  call void @llvm.dbg.declare(metadata i64* %red888, metadata !2335, metadata !DIExpression()), !dbg !2336
  %556 = load i32, i32* %status, align 4, !dbg !2337
  %cmp889 = icmp eq i32 %556, 0, !dbg !2339
  br i1 %cmp889, label %if.then891, label %if.end892, !dbg !2340

if.then891:                                       ; preds = %for.body881
  br label %for.inc984, !dbg !2341

if.end892:                                        ; preds = %for.body881
  %557 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2342
  %558 = load i64, i64* %y, align 8, !dbg !2343
  %559 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2344
  %columns893 = getelementptr inbounds %struct._Image, %struct._Image* %559, i32 0, i32 7, !dbg !2345
  %560 = load i64, i64* %columns893, align 8, !dbg !2345
  %561 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2346
  %call894 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %557, i64 0, i64 %558, i64 %560, i64 1, %struct._ExceptionInfo* %561), !dbg !2347
  store %struct._PixelPacket* %call894, %struct._PixelPacket** %q885, align 8, !dbg !2348
  %562 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2349
  %cmp895 = icmp eq %struct._PixelPacket* %562, null, !dbg !2351
  br i1 %cmp895, label %if.then897, label %if.end898, !dbg !2352

if.then897:                                       ; preds = %if.end892
  store i32 0, i32* %status, align 4, !dbg !2353
  br label %for.inc984, !dbg !2355

if.end898:                                        ; preds = %if.end892
  store i64 0, i64* %x884, align 8, !dbg !2356
  br label %for.cond899, !dbg !2358

for.cond899:                                      ; preds = %for.inc965, %if.end898
  %563 = load i64, i64* %x884, align 8, !dbg !2359
  %564 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2361
  %columns900 = getelementptr inbounds %struct._Image, %struct._Image* %564, i32 0, i32 7, !dbg !2362
  %565 = load i64, i64* %columns900, align 8, !dbg !2362
  %cmp901 = icmp slt i64 %563, %565, !dbg !2363
  br i1 %cmp901, label %for.body903, label %for.end967, !dbg !2364

for.body903:                                      ; preds = %for.cond899
  %566 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2365
  %red904 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %566, i32 0, i32 2, !dbg !2365
  %567 = load i16, i16* %red904, align 2, !dbg !2365
  %conv905 = uitofp i16 %567 to float, !dbg !2367
  %call906 = call zeroext i16 @ClampToQuantum(float %conv905), !dbg !2368
  %call907 = call i32 @ScaleQuantumToMap(i16 zeroext %call906), !dbg !2369
  %conv908 = zext i32 %call907 to i64, !dbg !2369
  store i64 %conv908, i64* %red888, align 8, !dbg !2370
  %568 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2371
  %green909 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %568, i32 0, i32 1, !dbg !2371
  %569 = load i16, i16* %green909, align 2, !dbg !2371
  %conv910 = uitofp i16 %569 to float, !dbg !2372
  %call911 = call zeroext i16 @ClampToQuantum(float %conv910), !dbg !2373
  %call912 = call i32 @ScaleQuantumToMap(i16 zeroext %call911), !dbg !2374
  %conv913 = zext i32 %call912 to i64, !dbg !2374
  store i64 %conv913, i64* %green887, align 8, !dbg !2375
  %570 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2376
  %blue914 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %570, i32 0, i32 0, !dbg !2376
  %571 = load i16, i16* %blue914, align 2, !dbg !2376
  %conv915 = uitofp i16 %571 to float, !dbg !2377
  %call916 = call zeroext i16 @ClampToQuantum(float %conv915), !dbg !2378
  %call917 = call i32 @ScaleQuantumToMap(i16 zeroext %call916), !dbg !2379
  %conv918 = zext i32 %call917 to i64, !dbg !2379
  store i64 %conv918, i64* %blue886, align 8, !dbg !2380
  %572 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2381
  %573 = load i64, i64* %red888, align 8, !dbg !2382
  %arrayidx919 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %572, i64 %573, !dbg !2381
  %x920 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx919, i32 0, i32 0, !dbg !2383
  %574 = load float, float* %x920, align 4, !dbg !2383
  %575 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2384
  %576 = load i64, i64* %green887, align 8, !dbg !2385
  %arrayidx921 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %575, i64 %576, !dbg !2384
  %x922 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx921, i32 0, i32 0, !dbg !2386
  %577 = load float, float* %x922, align 4, !dbg !2386
  %add923 = fadd float %574, %577, !dbg !2387
  %578 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2388
  %579 = load i64, i64* %blue886, align 8, !dbg !2389
  %arrayidx924 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %578, i64 %579, !dbg !2388
  %x925 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx924, i32 0, i32 0, !dbg !2390
  %580 = load float, float* %x925, align 4, !dbg !2390
  %add926 = fadd float %add923, %580, !dbg !2391
  %x927 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 0, !dbg !2392
  %581 = load double, double* %x927, align 8, !dbg !2392
  %conv928 = fptrunc double %581 to float, !dbg !2393
  %add929 = fadd float %add926, %conv928, !dbg !2394
  %red930 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 5, !dbg !2395
  store float %add929, float* %red930, align 8, !dbg !2396
  %582 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2397
  %583 = load i64, i64* %red888, align 8, !dbg !2398
  %arrayidx931 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %582, i64 %583, !dbg !2397
  %y932 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx931, i32 0, i32 1, !dbg !2399
  %584 = load float, float* %y932, align 4, !dbg !2399
  %585 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2400
  %586 = load i64, i64* %green887, align 8, !dbg !2401
  %arrayidx933 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %585, i64 %586, !dbg !2400
  %y934 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx933, i32 0, i32 1, !dbg !2402
  %587 = load float, float* %y934, align 4, !dbg !2402
  %add935 = fadd float %584, %587, !dbg !2403
  %588 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2404
  %589 = load i64, i64* %blue886, align 8, !dbg !2405
  %arrayidx936 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %588, i64 %589, !dbg !2404
  %y937 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx936, i32 0, i32 1, !dbg !2406
  %590 = load float, float* %y937, align 4, !dbg !2406
  %add938 = fadd float %add935, %590, !dbg !2407
  %y939 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !2408
  %591 = load double, double* %y939, align 8, !dbg !2408
  %conv940 = fptrunc double %591 to float, !dbg !2409
  %add941 = fadd float %add938, %conv940, !dbg !2410
  %green942 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 6, !dbg !2411
  store float %add941, float* %green942, align 4, !dbg !2412
  %592 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2413
  %593 = load i64, i64* %red888, align 8, !dbg !2414
  %arrayidx943 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %592, i64 %593, !dbg !2413
  %z944 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx943, i32 0, i32 2, !dbg !2415
  %594 = load float, float* %z944, align 4, !dbg !2415
  %595 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2416
  %596 = load i64, i64* %green887, align 8, !dbg !2417
  %arrayidx945 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %595, i64 %596, !dbg !2416
  %z946 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx945, i32 0, i32 2, !dbg !2418
  %597 = load float, float* %z946, align 4, !dbg !2418
  %add947 = fadd float %594, %597, !dbg !2419
  %598 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2420
  %599 = load i64, i64* %blue886, align 8, !dbg !2421
  %arrayidx948 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %598, i64 %599, !dbg !2420
  %z949 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx948, i32 0, i32 2, !dbg !2422
  %600 = load float, float* %z949, align 4, !dbg !2422
  %add950 = fadd float %add947, %600, !dbg !2423
  %z951 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !2424
  %601 = load double, double* %z951, align 8, !dbg !2424
  %conv952 = fptrunc double %601 to float, !dbg !2425
  %add953 = fadd float %add950, %conv952, !dbg !2426
  %blue954 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 7, !dbg !2427
  store float %add953, float* %blue954, align 8, !dbg !2428
  %red955 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 5, !dbg !2429
  %602 = load float, float* %red955, align 8, !dbg !2429
  %call956 = call zeroext i16 @ScaleMapToQuantum(float %602), !dbg !2429
  %603 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2429
  %red957 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %603, i32 0, i32 2, !dbg !2429
  store i16 %call956, i16* %red957, align 2, !dbg !2429
  %green958 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 6, !dbg !2430
  %604 = load float, float* %green958, align 4, !dbg !2430
  %call959 = call zeroext i16 @ScaleMapToQuantum(float %604), !dbg !2430
  %605 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2430
  %green960 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %605, i32 0, i32 1, !dbg !2430
  store i16 %call959, i16* %green960, align 2, !dbg !2430
  %blue961 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel883, i32 0, i32 7, !dbg !2431
  %606 = load float, float* %blue961, align 8, !dbg !2431
  %call962 = call zeroext i16 @ScaleMapToQuantum(float %606), !dbg !2431
  %607 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2431
  %blue963 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %607, i32 0, i32 0, !dbg !2431
  store i16 %call962, i16* %blue963, align 2, !dbg !2431
  %608 = load %struct._PixelPacket*, %struct._PixelPacket** %q885, align 8, !dbg !2432
  %incdec.ptr964 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %608, i32 1, !dbg !2432
  store %struct._PixelPacket* %incdec.ptr964, %struct._PixelPacket** %q885, align 8, !dbg !2432
  br label %for.inc965, !dbg !2433

for.inc965:                                       ; preds = %for.body903
  %609 = load i64, i64* %x884, align 8, !dbg !2434
  %inc966 = add nsw i64 %609, 1, !dbg !2434
  store i64 %inc966, i64* %x884, align 8, !dbg !2434
  br label %for.cond899, !dbg !2435, !llvm.loop !2436

for.end967:                                       ; preds = %for.cond899
  %610 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2438
  %611 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2439
  %call968 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %610, %struct._ExceptionInfo* %611), !dbg !2440
  store i32 %call968, i32* %sync882, align 4, !dbg !2441
  %612 = load i32, i32* %sync882, align 4, !dbg !2442
  %cmp969 = icmp eq i32 %612, 0, !dbg !2444
  br i1 %cmp969, label %if.then971, label %if.end972, !dbg !2445

if.then971:                                       ; preds = %for.end967
  store i32 0, i32* %status, align 4, !dbg !2446
  br label %if.end972, !dbg !2447

if.end972:                                        ; preds = %if.then971, %for.end967
  %613 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2448
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %613, i32 0, i32 47, !dbg !2450
  %614 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2450
  %cmp973 = icmp ne i32 (i8*, i64, i64, i8*)* %614, null, !dbg !2451
  br i1 %cmp973, label %if.then975, label %if.end983, !dbg !2452

if.then975:                                       ; preds = %if.end972
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2453, metadata !DIExpression()), !dbg !2455
  %615 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2456
  %616 = load i64, i64* %progress, align 8, !dbg !2457
  %inc976 = add nsw i64 %616, 1, !dbg !2457
  store i64 %inc976, i64* %progress, align 8, !dbg !2457
  %617 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2458
  %rows977 = getelementptr inbounds %struct._Image, %struct._Image* %617, i32 0, i32 8, !dbg !2459
  %618 = load i64, i64* %rows977, align 8, !dbg !2459
  %call978 = call i32 @SetImageProgress(%struct._Image* %615, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.9, i64 0, i64 0), i64 %616, i64 %618), !dbg !2460
  store i32 %call978, i32* %proceed, align 4, !dbg !2461
  %619 = load i32, i32* %proceed, align 4, !dbg !2462
  %cmp979 = icmp eq i32 %619, 0, !dbg !2464
  br i1 %cmp979, label %if.then981, label %if.end982, !dbg !2465

if.then981:                                       ; preds = %if.then975
  store i32 0, i32* %status, align 4, !dbg !2466
  br label %if.end982, !dbg !2467

if.end982:                                        ; preds = %if.then981, %if.then975
  br label %if.end983, !dbg !2468

if.end983:                                        ; preds = %if.end982, %if.end972
  br label %for.inc984, !dbg !2469

for.inc984:                                       ; preds = %if.end983, %if.then897, %if.then891
  %620 = load i64, i64* %y, align 8, !dbg !2470
  %inc985 = add nsw i64 %620, 1, !dbg !2470
  store i64 %inc985, i64* %y, align 8, !dbg !2470
  br label %for.cond877, !dbg !2471, !llvm.loop !2472

for.end986:                                       ; preds = %for.cond877
  %621 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2474
  %call987 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %621), !dbg !2475
  store %struct._CacheView* %call987, %struct._CacheView** %image_view, align 8, !dbg !2476
  br label %sw.epilog1075, !dbg !2477

sw.bb988:                                         ; preds = %sw.epilog872
  call void @llvm.dbg.declare(metadata i64* %blue989, metadata !2478, metadata !DIExpression()), !dbg !2480
  call void @llvm.dbg.declare(metadata i64* %green990, metadata !2481, metadata !DIExpression()), !dbg !2482
  call void @llvm.dbg.declare(metadata i64* %red991, metadata !2483, metadata !DIExpression()), !dbg !2484
  store i64 0, i64* %i, align 8, !dbg !2485
  br label %for.cond992, !dbg !2487

for.cond992:                                      ; preds = %for.inc1071, %sw.bb988
  %622 = load i64, i64* %i, align 8, !dbg !2488
  %623 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2490
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %623, i32 0, i32 10, !dbg !2491
  %624 = load i64, i64* %colors, align 8, !dbg !2491
  %cmp993 = icmp slt i64 %622, %624, !dbg !2492
  br i1 %cmp993, label %for.body995, label %for.end1073, !dbg !2493

for.body995:                                      ; preds = %for.cond992
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel996, metadata !2494, metadata !DIExpression()), !dbg !2496
  %625 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2497
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %625, i32 0, i32 11, !dbg !2498
  %626 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !2498
  %627 = load i64, i64* %i, align 8, !dbg !2499
  %arrayidx997 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %626, i64 %627, !dbg !2497
  %red998 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx997, i32 0, i32 2, !dbg !2500
  %628 = load i16, i16* %red998, align 2, !dbg !2500
  %conv999 = uitofp i16 %628 to float, !dbg !2501
  %call1000 = call zeroext i16 @ClampToQuantum(float %conv999), !dbg !2502
  %call1001 = call i32 @ScaleQuantumToMap(i16 zeroext %call1000), !dbg !2503
  %conv1002 = zext i32 %call1001 to i64, !dbg !2503
  store i64 %conv1002, i64* %red991, align 8, !dbg !2504
  %629 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2505
  %colormap1003 = getelementptr inbounds %struct._Image, %struct._Image* %629, i32 0, i32 11, !dbg !2506
  %630 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1003, align 8, !dbg !2506
  %631 = load i64, i64* %i, align 8, !dbg !2507
  %arrayidx1004 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %630, i64 %631, !dbg !2505
  %green1005 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1004, i32 0, i32 1, !dbg !2508
  %632 = load i16, i16* %green1005, align 2, !dbg !2508
  %conv1006 = uitofp i16 %632 to float, !dbg !2509
  %call1007 = call zeroext i16 @ClampToQuantum(float %conv1006), !dbg !2510
  %call1008 = call i32 @ScaleQuantumToMap(i16 zeroext %call1007), !dbg !2511
  %conv1009 = zext i32 %call1008 to i64, !dbg !2511
  store i64 %conv1009, i64* %green990, align 8, !dbg !2512
  %633 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2513
  %colormap1010 = getelementptr inbounds %struct._Image, %struct._Image* %633, i32 0, i32 11, !dbg !2514
  %634 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1010, align 8, !dbg !2514
  %635 = load i64, i64* %i, align 8, !dbg !2515
  %arrayidx1011 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %634, i64 %635, !dbg !2513
  %blue1012 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1011, i32 0, i32 0, !dbg !2516
  %636 = load i16, i16* %blue1012, align 2, !dbg !2516
  %conv1013 = uitofp i16 %636 to float, !dbg !2517
  %call1014 = call zeroext i16 @ClampToQuantum(float %conv1013), !dbg !2518
  %call1015 = call i32 @ScaleQuantumToMap(i16 zeroext %call1014), !dbg !2519
  %conv1016 = zext i32 %call1015 to i64, !dbg !2519
  store i64 %conv1016, i64* %blue989, align 8, !dbg !2520
  %637 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2521
  %638 = load i64, i64* %red991, align 8, !dbg !2522
  %arrayidx1017 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %637, i64 %638, !dbg !2521
  %x1018 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1017, i32 0, i32 0, !dbg !2523
  %639 = load float, float* %x1018, align 4, !dbg !2523
  %640 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2524
  %641 = load i64, i64* %green990, align 8, !dbg !2525
  %arrayidx1019 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %640, i64 %641, !dbg !2524
  %x1020 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1019, i32 0, i32 0, !dbg !2526
  %642 = load float, float* %x1020, align 4, !dbg !2526
  %add1021 = fadd float %639, %642, !dbg !2527
  %643 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2528
  %644 = load i64, i64* %blue989, align 8, !dbg !2529
  %arrayidx1022 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %643, i64 %644, !dbg !2528
  %x1023 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1022, i32 0, i32 0, !dbg !2530
  %645 = load float, float* %x1023, align 4, !dbg !2530
  %add1024 = fadd float %add1021, %645, !dbg !2531
  %conv1025 = fpext float %add1024 to double, !dbg !2521
  %x1026 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 0, !dbg !2532
  %646 = load double, double* %x1026, align 8, !dbg !2532
  %add1027 = fadd double %conv1025, %646, !dbg !2533
  %conv1028 = fptrunc double %add1027 to float, !dbg !2521
  %red1029 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 5, !dbg !2534
  store float %conv1028, float* %red1029, align 8, !dbg !2535
  %647 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2536
  %648 = load i64, i64* %red991, align 8, !dbg !2537
  %arrayidx1030 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %647, i64 %648, !dbg !2536
  %y1031 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1030, i32 0, i32 1, !dbg !2538
  %649 = load float, float* %y1031, align 4, !dbg !2538
  %650 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2539
  %651 = load i64, i64* %green990, align 8, !dbg !2540
  %arrayidx1032 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %650, i64 %651, !dbg !2539
  %y1033 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1032, i32 0, i32 1, !dbg !2541
  %652 = load float, float* %y1033, align 4, !dbg !2541
  %add1034 = fadd float %649, %652, !dbg !2542
  %653 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2543
  %654 = load i64, i64* %blue989, align 8, !dbg !2544
  %arrayidx1035 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %653, i64 %654, !dbg !2543
  %y1036 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1035, i32 0, i32 1, !dbg !2545
  %655 = load float, float* %y1036, align 4, !dbg !2545
  %add1037 = fadd float %add1034, %655, !dbg !2546
  %conv1038 = fpext float %add1037 to double, !dbg !2536
  %y1039 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 1, !dbg !2547
  %656 = load double, double* %y1039, align 8, !dbg !2547
  %add1040 = fadd double %conv1038, %656, !dbg !2548
  %conv1041 = fptrunc double %add1040 to float, !dbg !2536
  %green1042 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 6, !dbg !2549
  store float %conv1041, float* %green1042, align 4, !dbg !2550
  %657 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2551
  %658 = load i64, i64* %red991, align 8, !dbg !2552
  %arrayidx1043 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %657, i64 %658, !dbg !2551
  %z1044 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1043, i32 0, i32 2, !dbg !2553
  %659 = load float, float* %z1044, align 4, !dbg !2553
  %660 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2554
  %661 = load i64, i64* %green990, align 8, !dbg !2555
  %arrayidx1045 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %660, i64 %661, !dbg !2554
  %z1046 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1045, i32 0, i32 2, !dbg !2556
  %662 = load float, float* %z1046, align 4, !dbg !2556
  %add1047 = fadd float %659, %662, !dbg !2557
  %663 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2558
  %664 = load i64, i64* %blue989, align 8, !dbg !2559
  %arrayidx1048 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %663, i64 %664, !dbg !2558
  %z1049 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx1048, i32 0, i32 2, !dbg !2560
  %665 = load float, float* %z1049, align 4, !dbg !2560
  %add1050 = fadd float %add1047, %665, !dbg !2561
  %conv1051 = fpext float %add1050 to double, !dbg !2551
  %z1052 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %primary_info, i32 0, i32 2, !dbg !2562
  %666 = load double, double* %z1052, align 8, !dbg !2562
  %add1053 = fadd double %conv1051, %666, !dbg !2563
  %conv1054 = fptrunc double %add1053 to float, !dbg !2551
  %blue1055 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 7, !dbg !2564
  store float %conv1054, float* %blue1055, align 8, !dbg !2565
  %red1056 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 5, !dbg !2566
  %667 = load float, float* %red1056, align 8, !dbg !2566
  %call1057 = call zeroext i16 @ScaleMapToQuantum(float %667), !dbg !2567
  %668 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2568
  %colormap1058 = getelementptr inbounds %struct._Image, %struct._Image* %668, i32 0, i32 11, !dbg !2569
  %669 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1058, align 8, !dbg !2569
  %670 = load i64, i64* %i, align 8, !dbg !2570
  %arrayidx1059 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %669, i64 %670, !dbg !2568
  %red1060 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1059, i32 0, i32 2, !dbg !2571
  store i16 %call1057, i16* %red1060, align 2, !dbg !2572
  %green1061 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 6, !dbg !2573
  %671 = load float, float* %green1061, align 4, !dbg !2573
  %call1062 = call zeroext i16 @ScaleMapToQuantum(float %671), !dbg !2574
  %672 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2575
  %colormap1063 = getelementptr inbounds %struct._Image, %struct._Image* %672, i32 0, i32 11, !dbg !2576
  %673 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1063, align 8, !dbg !2576
  %674 = load i64, i64* %i, align 8, !dbg !2577
  %arrayidx1064 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %673, i64 %674, !dbg !2575
  %green1065 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1064, i32 0, i32 1, !dbg !2578
  store i16 %call1062, i16* %green1065, align 2, !dbg !2579
  %blue1066 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel996, i32 0, i32 7, !dbg !2580
  %675 = load float, float* %blue1066, align 8, !dbg !2580
  %call1067 = call zeroext i16 @ScaleMapToQuantum(float %675), !dbg !2581
  %676 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2582
  %colormap1068 = getelementptr inbounds %struct._Image, %struct._Image* %676, i32 0, i32 11, !dbg !2583
  %677 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1068, align 8, !dbg !2583
  %678 = load i64, i64* %i, align 8, !dbg !2584
  %arrayidx1069 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %677, i64 %678, !dbg !2582
  %blue1070 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1069, i32 0, i32 0, !dbg !2585
  store i16 %call1067, i16* %blue1070, align 2, !dbg !2586
  br label %for.inc1071, !dbg !2587

for.inc1071:                                      ; preds = %for.body995
  %679 = load i64, i64* %i, align 8, !dbg !2588
  %inc1072 = add nsw i64 %679, 1, !dbg !2588
  store i64 %inc1072, i64* %i, align 8, !dbg !2588
  br label %for.cond992, !dbg !2589, !llvm.loop !2590

for.end1073:                                      ; preds = %for.cond992
  %680 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2592
  %call1074 = call i32 @SyncImage(%struct._Image* %680), !dbg !2593
  br label %sw.epilog1075, !dbg !2594

sw.epilog1075:                                    ; preds = %for.end1073, %for.end986
  %681 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !2595
  %682 = bitcast %struct._TransformPacket* %681 to i8*, !dbg !2595
  %call1076 = call i8* @RelinquishMagickMemory(i8* %682), !dbg !2596
  %683 = bitcast i8* %call1076 to %struct._TransformPacket*, !dbg !2597
  store %struct._TransformPacket* %683, %struct._TransformPacket** %z_map, align 8, !dbg !2598
  %684 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !2599
  %685 = bitcast %struct._TransformPacket* %684 to i8*, !dbg !2599
  %call1077 = call i8* @RelinquishMagickMemory(i8* %685), !dbg !2600
  %686 = bitcast i8* %call1077 to %struct._TransformPacket*, !dbg !2601
  store %struct._TransformPacket* %686, %struct._TransformPacket** %y_map, align 8, !dbg !2602
  %687 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !2603
  %688 = bitcast %struct._TransformPacket* %687 to i8*, !dbg !2603
  %call1078 = call i8* @RelinquishMagickMemory(i8* %688), !dbg !2604
  %689 = bitcast i8* %call1078 to %struct._TransformPacket*, !dbg !2605
  store %struct._TransformPacket* %689, %struct._TransformPacket** %x_map, align 8, !dbg !2606
  %690 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2607
  %691 = load i32, i32* %colorspace.addr, align 4, !dbg !2609
  %call1079 = call i32 @SetImageColorspace(%struct._Image* %690, i32 %691), !dbg !2610
  %cmp1080 = icmp eq i32 %call1079, 0, !dbg !2611
  br i1 %cmp1080, label %if.then1082, label %if.end1083, !dbg !2612

if.then1082:                                      ; preds = %sw.epilog1075
  store i32 0, i32* %retval, align 4, !dbg !2613
  br label %return, !dbg !2613

if.end1083:                                       ; preds = %sw.epilog1075
  %692 = load i32, i32* %status, align 4, !dbg !2614
  store i32 %692, i32* %retval, align 4, !dbg !2615
  br label %return, !dbg !2615

return:                                           ; preds = %if.end1083, %if.then1082, %if.end433, %if.end412, %if.then411, %if.then350, %if.then345, %if.end336, %if.then335, %if.end241, %if.end203, %if.then202, %if.then113, %if.then109, %if.end101, %if.then100, %if.then58, %if.then54, %if.end47, %if.then46, %if.then15, %if.then10, %if.then6
  %693 = load i32, i32* %retval, align 4, !dbg !2616
  ret i32 %693, !dbg !2616
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local i32 @SyncImage(%struct._Image*) #2

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @SetImageColorspace(%struct._Image* %image, i32 %colorspace) #0 !dbg !2617 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %colorspace.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2618, metadata !DIExpression()), !dbg !2619
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !2620, metadata !DIExpression()), !dbg !2621
  call void @llvm.dbg.declare(metadata i32* %type, metadata !2622, metadata !DIExpression()), !dbg !2623
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2624, metadata !DIExpression()), !dbg !2625
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2626
  %colorspace1 = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 1, !dbg !2628
  %1 = load i32, i32* %colorspace1, align 4, !dbg !2628
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !2629
  %cmp = icmp eq i32 %1, %2, !dbg !2630
  br i1 %cmp, label %if.then, label %if.end, !dbg !2631

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2632
  br label %return, !dbg !2632

if.end:                                           ; preds = %entry
  %3 = load i32, i32* %colorspace.addr, align 4, !dbg !2633
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2634
  %colorspace2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 1, !dbg !2635
  store i32 %3, i32* %colorspace2, align 4, !dbg !2636
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2637
  %rendering_intent = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 17, !dbg !2638
  store i32 0, i32* %rendering_intent, align 8, !dbg !2639
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2640
  %gamma = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 15, !dbg !2641
  store double 0x3FDD1745D1745D17, double* %gamma, align 8, !dbg !2642
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2643
  %chromaticity = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 16, !dbg !2644
  %8 = bitcast %struct._ChromaticityInfo* %chromaticity to i8*, !dbg !2645
  %call = call i8* @ResetMagickMemory(i8* %8, i32 0, i64 96), !dbg !2646
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2647
  %type3 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 77, !dbg !2648
  %10 = load i32, i32* %type3, align 8, !dbg !2648
  store i32 %10, i32* %type, align 4, !dbg !2649
  %11 = load i32, i32* %colorspace.addr, align 4, !dbg !2650
  %call4 = call i32 @IsGrayColorspace(i32 %11), !dbg !2652
  %cmp5 = icmp ne i32 %call4, 0, !dbg !2653
  br i1 %cmp5, label %if.then6, label %if.else, !dbg !2654

if.then6:                                         ; preds = %if.end
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2655
  %intensity = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 83, !dbg !2658
  %13 = load i32, i32* %intensity, align 8, !dbg !2658
  %cmp7 = icmp eq i32 %13, 5, !dbg !2659
  br i1 %cmp7, label %if.then10, label %lor.lhs.false, !dbg !2660

lor.lhs.false:                                    ; preds = %if.then6
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2661
  %intensity8 = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 83, !dbg !2662
  %15 = load i32, i32* %intensity8, align 8, !dbg !2662
  %cmp9 = icmp eq i32 %15, 7, !dbg !2663
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !2664

if.then10:                                        ; preds = %lor.lhs.false, %if.then6
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2665
  %gamma11 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 15, !dbg !2666
  store double 1.000000e+00, double* %gamma11, align 8, !dbg !2667
  br label %if.end12, !dbg !2665

if.end12:                                         ; preds = %if.then10, %lor.lhs.false
  store i32 2, i32* %type, align 4, !dbg !2668
  br label %if.end51, !dbg !2669

if.else:                                          ; preds = %if.end
  %17 = load i32, i32* %colorspace.addr, align 4, !dbg !2670
  %call13 = call i32 @IsRGBColorspace(i32 %17), !dbg !2672
  %cmp14 = icmp ne i32 %call13, 0, !dbg !2673
  br i1 %cmp14, label %if.then17, label %lor.lhs.false15, !dbg !2674

lor.lhs.false15:                                  ; preds = %if.else
  %18 = load i32, i32* %colorspace.addr, align 4, !dbg !2675
  %cmp16 = icmp eq i32 %18, 6, !dbg !2676
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !2677

if.then17:                                        ; preds = %lor.lhs.false15, %if.else
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2678
  %gamma18 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 15, !dbg !2679
  store double 1.000000e+00, double* %gamma18, align 8, !dbg !2680
  br label %if.end50, !dbg !2678

if.else19:                                        ; preds = %lor.lhs.false15
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2681
  %rendering_intent20 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 17, !dbg !2683
  store i32 2, i32* %rendering_intent20, align 8, !dbg !2684
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2685
  %chromaticity21 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 16, !dbg !2686
  %red_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity21, i32 0, i32 0, !dbg !2687
  %x = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary, i32 0, i32 0, !dbg !2688
  store double 6.400000e-01, double* %x, align 8, !dbg !2689
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2690
  %chromaticity22 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 16, !dbg !2691
  %red_primary23 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity22, i32 0, i32 0, !dbg !2692
  %y = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary23, i32 0, i32 1, !dbg !2693
  store double 3.300000e-01, double* %y, align 8, !dbg !2694
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2695
  %chromaticity24 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 16, !dbg !2696
  %red_primary25 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity24, i32 0, i32 0, !dbg !2697
  %z = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %red_primary25, i32 0, i32 2, !dbg !2698
  store double 3.000000e-02, double* %z, align 8, !dbg !2699
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2700
  %chromaticity26 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 16, !dbg !2701
  %green_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity26, i32 0, i32 1, !dbg !2702
  %x27 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary, i32 0, i32 0, !dbg !2703
  store double 3.000000e-01, double* %x27, align 8, !dbg !2704
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2705
  %chromaticity28 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 16, !dbg !2706
  %green_primary29 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity28, i32 0, i32 1, !dbg !2707
  %y30 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary29, i32 0, i32 1, !dbg !2708
  store double 6.000000e-01, double* %y30, align 8, !dbg !2709
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2710
  %chromaticity31 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 16, !dbg !2711
  %green_primary32 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity31, i32 0, i32 1, !dbg !2712
  %z33 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %green_primary32, i32 0, i32 2, !dbg !2713
  store double 1.000000e-01, double* %z33, align 8, !dbg !2714
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2715
  %chromaticity34 = getelementptr inbounds %struct._Image, %struct._Image* %27, i32 0, i32 16, !dbg !2716
  %blue_primary = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity34, i32 0, i32 2, !dbg !2717
  %x35 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary, i32 0, i32 0, !dbg !2718
  store double 1.500000e-01, double* %x35, align 8, !dbg !2719
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2720
  %chromaticity36 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 16, !dbg !2721
  %blue_primary37 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity36, i32 0, i32 2, !dbg !2722
  %y38 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary37, i32 0, i32 1, !dbg !2723
  store double 6.000000e-02, double* %y38, align 8, !dbg !2724
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2725
  %chromaticity39 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 16, !dbg !2726
  %blue_primary40 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity39, i32 0, i32 2, !dbg !2727
  %z41 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %blue_primary40, i32 0, i32 2, !dbg !2728
  store double 7.900000e-01, double* %z41, align 8, !dbg !2729
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2730
  %chromaticity42 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 16, !dbg !2731
  %white_point = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity42, i32 0, i32 3, !dbg !2732
  %x43 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point, i32 0, i32 0, !dbg !2733
  store double 3.127000e-01, double* %x43, align 8, !dbg !2734
  %31 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2735
  %chromaticity44 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 16, !dbg !2736
  %white_point45 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity44, i32 0, i32 3, !dbg !2737
  %y46 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point45, i32 0, i32 1, !dbg !2738
  store double 3.290000e-01, double* %y46, align 8, !dbg !2739
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2740
  %chromaticity47 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 16, !dbg !2741
  %white_point48 = getelementptr inbounds %struct._ChromaticityInfo, %struct._ChromaticityInfo* %chromaticity47, i32 0, i32 3, !dbg !2742
  %z49 = getelementptr inbounds %struct._PrimaryInfo, %struct._PrimaryInfo* %white_point48, i32 0, i32 2, !dbg !2743
  store double 3.583000e-01, double* %z49, align 8, !dbg !2744
  br label %if.end50

if.end50:                                         ; preds = %if.else19, %if.then17
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end12
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2745
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2746
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 58, !dbg !2747
  %call52 = call i32 @SyncImagePixelCache(%struct._Image* %33, %struct._ExceptionInfo* %exception), !dbg !2748
  store i32 %call52, i32* %status, align 4, !dbg !2749
  %35 = load i32, i32* %type, align 4, !dbg !2750
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2751
  %type53 = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 77, !dbg !2752
  store i32 %35, i32* %type53, align 8, !dbg !2753
  %37 = load i32, i32* %status, align 4, !dbg !2754
  store i32 %37, i32* %retval, align 4, !dbg !2755
  br label %return, !dbg !2755

return:                                           ; preds = %if.end51, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !2756
  ret i32 %38, !dbg !2756
}

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !2757 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2766, metadata !DIExpression()), !dbg !2767
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !2768, metadata !DIExpression()), !dbg !2769
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !2770, metadata !DIExpression()), !dbg !2771
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2772, metadata !DIExpression()), !dbg !2773
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2774
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !2774
  %1 = load i16, i16* %red, align 2, !dbg !2774
  %conv = uitofp i16 %1 to float, !dbg !2775
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2776
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2777
  store float %conv, float* %red1, align 8, !dbg !2778
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2779
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !2779
  %4 = load i16, i16* %green, align 2, !dbg !2779
  %conv2 = uitofp i16 %4 to float, !dbg !2780
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2781
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !2782
  store float %conv2, float* %green3, align 4, !dbg !2783
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2784
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !2784
  %7 = load i16, i16* %blue, align 2, !dbg !2784
  %conv4 = uitofp i16 %7 to float, !dbg !2785
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2786
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !2787
  store float %conv4, float* %blue5, align 8, !dbg !2788
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2789
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !2789
  %10 = load i16, i16* %opacity, align 2, !dbg !2789
  %conv6 = uitofp i16 %10 to float, !dbg !2790
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2791
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !2792
  store float %conv6, float* %opacity7, align 4, !dbg !2793
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2794
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2796
  %13 = load i32, i32* %colorspace, align 4, !dbg !2796
  %cmp = icmp eq i32 %13, 12, !dbg !2797
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2798

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !2799
  %cmp9 = icmp ne i16* %14, null, !dbg !2800
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2801

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !2802
  %cmp11 = icmp eq i16* %15, null, !dbg !2802
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2802

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2802

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !2802
  %17 = load i16, i16* %16, align 2, !dbg !2802
  %conv13 = zext i16 %17 to i32, !dbg !2802
  br label %cond.end, !dbg !2802

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !2802
  %conv14 = sitofp i32 %cond to float, !dbg !2803
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2804
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !2805
  store float %conv14, float* %index15, align 8, !dbg !2806
  br label %if.end, !dbg !2804

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !2807
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToCMYK(%struct._MagickPixelPacket* %pixel) #0 !dbg !2808 {
entry:
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %black = alloca float, align 4
  %blue = alloca float, align 4
  %cyan = alloca float, align 4
  %green = alloca float, align 4
  %magenta = alloca float, align 4
  %red = alloca float, align 4
  %yellow = alloca float, align 4
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2812, metadata !DIExpression()), !dbg !2813
  call void @llvm.dbg.declare(metadata float* %black, metadata !2814, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata float* %blue, metadata !2816, metadata !DIExpression()), !dbg !2817
  call void @llvm.dbg.declare(metadata float* %cyan, metadata !2818, metadata !DIExpression()), !dbg !2819
  call void @llvm.dbg.declare(metadata float* %green, metadata !2820, metadata !DIExpression()), !dbg !2821
  call void @llvm.dbg.declare(metadata float* %magenta, metadata !2822, metadata !DIExpression()), !dbg !2823
  call void @llvm.dbg.declare(metadata float* %red, metadata !2824, metadata !DIExpression()), !dbg !2825
  call void @llvm.dbg.declare(metadata float* %yellow, metadata !2826, metadata !DIExpression()), !dbg !2827
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2828
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !2830
  %1 = load i32, i32* %colorspace, align 4, !dbg !2830
  %cmp = icmp ne i32 %1, 13, !dbg !2831
  br i1 %cmp, label %if.then, label %if.else, !dbg !2832

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2833
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2835
  %3 = load float, float* %red1, align 8, !dbg !2835
  %conv = fpext float %3 to double, !dbg !2833
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !2836
  %conv2 = fptrunc double %mul to float, !dbg !2837
  store float %conv2, float* %red, align 4, !dbg !2838
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2839
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 6, !dbg !2840
  %5 = load float, float* %green3, align 4, !dbg !2840
  %conv4 = fpext float %5 to double, !dbg !2839
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !2841
  %conv6 = fptrunc double %mul5 to float, !dbg !2842
  store float %conv6, float* %green, align 4, !dbg !2843
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2844
  %blue7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !2845
  %7 = load float, float* %blue7, align 8, !dbg !2845
  %conv8 = fpext float %7 to double, !dbg !2844
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !2846
  %conv10 = fptrunc double %mul9 to float, !dbg !2847
  store float %conv10, float* %blue, align 4, !dbg !2848
  br label %if.end, !dbg !2849

if.else:                                          ; preds = %entry
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2850
  %red11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 5, !dbg !2852
  %9 = load float, float* %red11, align 8, !dbg !2852
  %call = call float @DecodePixelGamma(float %9), !dbg !2853
  store float %call, float* %red, align 4, !dbg !2854
  %10 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2855
  %green12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %10, i32 0, i32 6, !dbg !2856
  %11 = load float, float* %green12, align 4, !dbg !2856
  %call13 = call float @DecodePixelGamma(float %11), !dbg !2857
  store float %call13, float* %green, align 4, !dbg !2858
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2859
  %blue14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 7, !dbg !2860
  %13 = load float, float* %blue14, align 8, !dbg !2860
  %call15 = call float @DecodePixelGamma(float %13), !dbg !2861
  store float %call15, float* %blue, align 4, !dbg !2862
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load float, float* %red, align 4, !dbg !2863
  %conv16 = fpext float %14 to double, !dbg !2863
  %15 = call double @llvm.fabs.f64(double %conv16), !dbg !2865
  %cmp17 = fcmp olt double %15, 1.000000e-15, !dbg !2866
  br i1 %cmp17, label %land.lhs.true, label %if.end27, !dbg !2867

land.lhs.true:                                    ; preds = %if.end
  %16 = load float, float* %green, align 4, !dbg !2868
  %conv19 = fpext float %16 to double, !dbg !2868
  %17 = call double @llvm.fabs.f64(double %conv19), !dbg !2869
  %cmp20 = fcmp olt double %17, 1.000000e-15, !dbg !2870
  br i1 %cmp20, label %land.lhs.true22, label %if.end27, !dbg !2871

land.lhs.true22:                                  ; preds = %land.lhs.true
  %18 = load float, float* %blue, align 4, !dbg !2872
  %conv23 = fpext float %18 to double, !dbg !2872
  %19 = call double @llvm.fabs.f64(double %conv23), !dbg !2873
  %cmp24 = fcmp olt double %19, 1.000000e-15, !dbg !2874
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !2875

if.then26:                                        ; preds = %land.lhs.true22
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2876
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 9, !dbg !2878
  store float 6.553500e+04, float* %index, align 8, !dbg !2879
  br label %return, !dbg !2880

if.end27:                                         ; preds = %land.lhs.true22, %land.lhs.true, %if.end
  %21 = load float, float* %red, align 4, !dbg !2881
  %conv28 = fpext float %21 to double, !dbg !2881
  %sub = fsub double 1.000000e+00, %conv28, !dbg !2882
  %conv29 = fptrunc double %sub to float, !dbg !2883
  store float %conv29, float* %cyan, align 4, !dbg !2884
  %22 = load float, float* %green, align 4, !dbg !2885
  %conv30 = fpext float %22 to double, !dbg !2885
  %sub31 = fsub double 1.000000e+00, %conv30, !dbg !2886
  %conv32 = fptrunc double %sub31 to float, !dbg !2887
  store float %conv32, float* %magenta, align 4, !dbg !2888
  %23 = load float, float* %blue, align 4, !dbg !2889
  %conv33 = fpext float %23 to double, !dbg !2889
  %sub34 = fsub double 1.000000e+00, %conv33, !dbg !2890
  %conv35 = fptrunc double %sub34 to float, !dbg !2891
  store float %conv35, float* %yellow, align 4, !dbg !2892
  %24 = load float, float* %cyan, align 4, !dbg !2893
  store float %24, float* %black, align 4, !dbg !2894
  %25 = load float, float* %magenta, align 4, !dbg !2895
  %26 = load float, float* %black, align 4, !dbg !2897
  %cmp36 = fcmp olt float %25, %26, !dbg !2898
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !2899

if.then38:                                        ; preds = %if.end27
  %27 = load float, float* %magenta, align 4, !dbg !2900
  store float %27, float* %black, align 4, !dbg !2901
  br label %if.end39, !dbg !2902

if.end39:                                         ; preds = %if.then38, %if.end27
  %28 = load float, float* %yellow, align 4, !dbg !2903
  %29 = load float, float* %black, align 4, !dbg !2905
  %cmp40 = fcmp olt float %28, %29, !dbg !2906
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !2907

if.then42:                                        ; preds = %if.end39
  %30 = load float, float* %yellow, align 4, !dbg !2908
  store float %30, float* %black, align 4, !dbg !2909
  br label %if.end43, !dbg !2910

if.end43:                                         ; preds = %if.then42, %if.end39
  %31 = load float, float* %cyan, align 4, !dbg !2911
  %32 = load float, float* %black, align 4, !dbg !2912
  %sub44 = fsub float %31, %32, !dbg !2913
  %conv45 = fpext float %sub44 to double, !dbg !2914
  %33 = load float, float* %black, align 4, !dbg !2915
  %conv46 = fpext float %33 to double, !dbg !2915
  %sub47 = fsub double 1.000000e+00, %conv46, !dbg !2916
  %div = fdiv double %conv45, %sub47, !dbg !2917
  %conv48 = fptrunc double %div to float, !dbg !2918
  store float %conv48, float* %cyan, align 4, !dbg !2919
  %34 = load float, float* %magenta, align 4, !dbg !2920
  %35 = load float, float* %black, align 4, !dbg !2921
  %sub49 = fsub float %34, %35, !dbg !2922
  %conv50 = fpext float %sub49 to double, !dbg !2923
  %36 = load float, float* %black, align 4, !dbg !2924
  %conv51 = fpext float %36 to double, !dbg !2924
  %sub52 = fsub double 1.000000e+00, %conv51, !dbg !2925
  %div53 = fdiv double %conv50, %sub52, !dbg !2926
  %conv54 = fptrunc double %div53 to float, !dbg !2927
  store float %conv54, float* %magenta, align 4, !dbg !2928
  %37 = load float, float* %yellow, align 4, !dbg !2929
  %38 = load float, float* %black, align 4, !dbg !2930
  %sub55 = fsub float %37, %38, !dbg !2931
  %conv56 = fpext float %sub55 to double, !dbg !2932
  %39 = load float, float* %black, align 4, !dbg !2933
  %conv57 = fpext float %39 to double, !dbg !2933
  %sub58 = fsub double 1.000000e+00, %conv57, !dbg !2934
  %div59 = fdiv double %conv56, %sub58, !dbg !2935
  %conv60 = fptrunc double %div59 to float, !dbg !2936
  store float %conv60, float* %yellow, align 4, !dbg !2937
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2938
  %colorspace61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 1, !dbg !2939
  store i32 12, i32* %colorspace61, align 4, !dbg !2940
  %41 = load float, float* %cyan, align 4, !dbg !2941
  %mul62 = fmul float 6.553500e+04, %41, !dbg !2942
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2943
  %red63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 5, !dbg !2944
  store float %mul62, float* %red63, align 8, !dbg !2945
  %43 = load float, float* %magenta, align 4, !dbg !2946
  %mul64 = fmul float 6.553500e+04, %43, !dbg !2947
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2948
  %green65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 6, !dbg !2949
  store float %mul64, float* %green65, align 4, !dbg !2950
  %45 = load float, float* %yellow, align 4, !dbg !2951
  %mul66 = fmul float 6.553500e+04, %45, !dbg !2952
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2953
  %blue67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 7, !dbg !2954
  store float %mul66, float* %blue67, align 8, !dbg !2955
  %47 = load float, float* %black, align 4, !dbg !2956
  %mul68 = fmul float 6.553500e+04, %47, !dbg !2957
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2958
  %index69 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 9, !dbg !2959
  store float %mul68, float* %index69, align 8, !dbg !2960
  br label %return, !dbg !2961

return:                                           ; preds = %if.end43, %if.then26
  ret void, !dbg !2961
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !2962 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2967, metadata !DIExpression()), !dbg !2968
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2969, metadata !DIExpression()), !dbg !2970
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !2971, metadata !DIExpression()), !dbg !2972
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !2973, metadata !DIExpression()), !dbg !2974
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2975
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !2975
  %1 = load float, float* %red, align 8, !dbg !2975
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !2975
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2975
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !2975
  store i16 %call, i16* %red1, align 2, !dbg !2975
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2976
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !2976
  %4 = load float, float* %green, align 4, !dbg !2976
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !2976
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2976
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !2976
  store i16 %call2, i16* %green3, align 2, !dbg !2976
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2977
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !2977
  %7 = load float, float* %blue, align 8, !dbg !2977
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !2977
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2977
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !2977
  store i16 %call4, i16* %blue5, align 2, !dbg !2977
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2978
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !2978
  %10 = load float, float* %opacity, align 4, !dbg !2978
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !2978
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2978
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !2978
  store i16 %call6, i16* %opacity7, align 2, !dbg !2978
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2979
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2981
  %13 = load i32, i32* %colorspace, align 4, !dbg !2981
  %cmp = icmp eq i32 %13, 12, !dbg !2982
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2983

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2984
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !2985
  %15 = load i32, i32* %storage_class, align 8, !dbg !2985
  %cmp8 = icmp eq i32 %15, 2, !dbg !2986
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !2987

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !2988
  %cmp9 = icmp ne i16* %16, null, !dbg !2988
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !2991

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2988
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !2988
  %18 = load float, float* %index11, align 8, !dbg !2988
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !2988
  %19 = load i16*, i16** %index.addr, align 8, !dbg !2988
  store i16 %call12, i16* %19, align 2, !dbg !2988
  br label %if.end, !dbg !2988

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !2991

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !2992
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !2993 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2997, metadata !DIExpression()), !dbg !2998
  %0 = load float, float* %value.addr, align 4, !dbg !2999
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !3001
  br i1 %cmp, label %if.then, label %if.end, !dbg !3002

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !3003
  br label %return, !dbg !3003

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !3004
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !3006
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !3007

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !3008
  br label %return, !dbg !3008

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !3009
  %add = fadd float %2, 5.000000e-01, !dbg !3010
  %conv = fptoui float %add to i16, !dbg !3011
  store i16 %conv, i16* %retval, align 2, !dbg !3012
  br label %return, !dbg !3012

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !3013
  ret i16 %3, !dbg !3013
}

declare dso_local float @GetPixelIntensity(%struct._Image*, %struct._PixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToCMY(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %cyan, double* %magenta, double* %yellow) #0 !dbg !3014 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %cyan.addr = alloca double*, align 8
  %magenta.addr = alloca double*, align 8
  %yellow.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3019, metadata !DIExpression()), !dbg !3020
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3021, metadata !DIExpression()), !dbg !3022
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3023, metadata !DIExpression()), !dbg !3024
  store double* %cyan, double** %cyan.addr, align 8
  call void @llvm.dbg.declare(metadata double** %cyan.addr, metadata !3025, metadata !DIExpression()), !dbg !3026
  store double* %magenta, double** %magenta.addr, align 8
  call void @llvm.dbg.declare(metadata double** %magenta.addr, metadata !3027, metadata !DIExpression()), !dbg !3028
  store double* %yellow, double** %yellow.addr, align 8
  call void @llvm.dbg.declare(metadata double** %yellow.addr, metadata !3029, metadata !DIExpression()), !dbg !3030
  %0 = load i16, i16* %red.addr, align 2, !dbg !3031
  %conv = zext i16 %0 to i32, !dbg !3031
  %sub = sub nsw i32 65535, %conv, !dbg !3032
  %conv1 = sitofp i32 %sub to double, !dbg !3033
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !3034
  %1 = load double*, double** %cyan.addr, align 8, !dbg !3035
  store double %mul, double* %1, align 8, !dbg !3036
  %2 = load i16, i16* %green.addr, align 2, !dbg !3037
  %conv2 = zext i16 %2 to i32, !dbg !3037
  %sub3 = sub nsw i32 65535, %conv2, !dbg !3038
  %conv4 = sitofp i32 %sub3 to double, !dbg !3039
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !3040
  %3 = load double*, double** %magenta.addr, align 8, !dbg !3041
  store double %mul5, double* %3, align 8, !dbg !3042
  %4 = load i16, i16* %blue.addr, align 2, !dbg !3043
  %conv6 = zext i16 %4 to i32, !dbg !3043
  %sub7 = sub nsw i32 65535, %conv6, !dbg !3044
  %conv8 = sitofp i32 %sub7 to double, !dbg !3045
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !3046
  %5 = load double*, double** %yellow.addr, align 8, !dbg !3047
  store double %mul9, double* %5, align 8, !dbg !3048
  ret void, !dbg !3049
}

declare dso_local void @ConvertRGBToHCL(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHCLp(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHSB(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHSI(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHSL(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHSV(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToHWB(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToLab(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %L, double* %a, double* %b) #0 !dbg !3050 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %L.addr = alloca double*, align 8
  %a.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3051, metadata !DIExpression()), !dbg !3052
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3053, metadata !DIExpression()), !dbg !3054
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3055, metadata !DIExpression()), !dbg !3056
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !3057, metadata !DIExpression()), !dbg !3058
  store double* %a, double** %a.addr, align 8
  call void @llvm.dbg.declare(metadata double** %a.addr, metadata !3059, metadata !DIExpression()), !dbg !3060
  store double* %b, double** %b.addr, align 8
  call void @llvm.dbg.declare(metadata double** %b.addr, metadata !3061, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata double* %X, metadata !3063, metadata !DIExpression()), !dbg !3064
  call void @llvm.dbg.declare(metadata double* %Y, metadata !3065, metadata !DIExpression()), !dbg !3066
  call void @llvm.dbg.declare(metadata double* %Z, metadata !3067, metadata !DIExpression()), !dbg !3068
  %0 = load i16, i16* %red.addr, align 2, !dbg !3069
  %1 = load i16, i16* %green.addr, align 2, !dbg !3070
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3071
  call void @ConvertRGBToXYZ(i16 zeroext %0, i16 zeroext %1, i16 zeroext %2, double* %X, double* %Y, double* %Z), !dbg !3072
  %3 = load double, double* %X, align 8, !dbg !3073
  %4 = load double, double* %Y, align 8, !dbg !3074
  %5 = load double, double* %Z, align 8, !dbg !3075
  %6 = load double*, double** %L.addr, align 8, !dbg !3076
  %7 = load double*, double** %a.addr, align 8, !dbg !3077
  %8 = load double*, double** %b.addr, align 8, !dbg !3078
  call void @ConvertXYZToLab(double %3, double %4, double %5, double* %6, double* %7, double* %8), !dbg !3079
  ret void, !dbg !3080
}

declare dso_local void @ConvertRGBToLCHab(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

declare dso_local void @ConvertRGBToLCHuv(i16 zeroext, i16 zeroext, i16 zeroext, double*, double*, double*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToLMS(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %L, double* %M, double* %S) #0 !dbg !3081 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %L.addr = alloca double*, align 8
  %M.addr = alloca double*, align 8
  %S.addr = alloca double*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3082, metadata !DIExpression()), !dbg !3083
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3084, metadata !DIExpression()), !dbg !3085
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3086, metadata !DIExpression()), !dbg !3087
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !3088, metadata !DIExpression()), !dbg !3089
  store double* %M, double** %M.addr, align 8
  call void @llvm.dbg.declare(metadata double** %M.addr, metadata !3090, metadata !DIExpression()), !dbg !3091
  store double* %S, double** %S.addr, align 8
  call void @llvm.dbg.declare(metadata double** %S.addr, metadata !3092, metadata !DIExpression()), !dbg !3093
  call void @llvm.dbg.declare(metadata double* %X, metadata !3094, metadata !DIExpression()), !dbg !3095
  call void @llvm.dbg.declare(metadata double* %Y, metadata !3096, metadata !DIExpression()), !dbg !3097
  call void @llvm.dbg.declare(metadata double* %Z, metadata !3098, metadata !DIExpression()), !dbg !3099
  %0 = load i16, i16* %red.addr, align 2, !dbg !3100
  %1 = load i16, i16* %green.addr, align 2, !dbg !3101
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3102
  call void @ConvertRGBToXYZ(i16 zeroext %0, i16 zeroext %1, i16 zeroext %2, double* %X, double* %Y, double* %Z), !dbg !3103
  %3 = load double, double* %X, align 8, !dbg !3104
  %4 = load double, double* %Y, align 8, !dbg !3105
  %5 = load double, double* %Z, align 8, !dbg !3106
  %6 = load double*, double** %L.addr, align 8, !dbg !3107
  %7 = load double*, double** %M.addr, align 8, !dbg !3108
  %8 = load double*, double** %S.addr, align 8, !dbg !3109
  call void @ConvertXYZToLMS(double %3, double %4, double %5, double* %6, double* %7, double* %8), !dbg !3110
  ret void, !dbg !3111
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToLuv(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %L, double* %u, double* %v) #0 !dbg !3112 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %L.addr = alloca double*, align 8
  %u.addr = alloca double*, align 8
  %v.addr = alloca double*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3113, metadata !DIExpression()), !dbg !3114
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3115, metadata !DIExpression()), !dbg !3116
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3117, metadata !DIExpression()), !dbg !3118
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !3119, metadata !DIExpression()), !dbg !3120
  store double* %u, double** %u.addr, align 8
  call void @llvm.dbg.declare(metadata double** %u.addr, metadata !3121, metadata !DIExpression()), !dbg !3122
  store double* %v, double** %v.addr, align 8
  call void @llvm.dbg.declare(metadata double** %v.addr, metadata !3123, metadata !DIExpression()), !dbg !3124
  call void @llvm.dbg.declare(metadata double* %X, metadata !3125, metadata !DIExpression()), !dbg !3126
  call void @llvm.dbg.declare(metadata double* %Y, metadata !3127, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata double* %Z, metadata !3129, metadata !DIExpression()), !dbg !3130
  %0 = load i16, i16* %red.addr, align 2, !dbg !3131
  %1 = load i16, i16* %green.addr, align 2, !dbg !3132
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3133
  call void @ConvertRGBToXYZ(i16 zeroext %0, i16 zeroext %1, i16 zeroext %2, double* %X, double* %Y, double* %Z), !dbg !3134
  %3 = load double, double* %X, align 8, !dbg !3135
  %4 = load double, double* %Y, align 8, !dbg !3136
  %5 = load double, double* %Z, align 8, !dbg !3137
  %6 = load double*, double** %L.addr, align 8, !dbg !3138
  %7 = load double*, double** %u.addr, align 8, !dbg !3139
  %8 = load double*, double** %v.addr, align 8, !dbg !3140
  call void @ConvertXYZToLuv(double %3, double %4, double %5, double* %6, double* %7, double* %8), !dbg !3141
  ret void, !dbg !3142
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToXYZ(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %X, double* %Y, double* %Z) #0 !dbg !3143 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %X.addr = alloca double*, align 8
  %Y.addr = alloca double*, align 8
  %Z.addr = alloca double*, align 8
  %b = alloca double, align 8
  %g = alloca double, align 8
  %r = alloca double, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3145, metadata !DIExpression()), !dbg !3146
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3147, metadata !DIExpression()), !dbg !3148
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3149, metadata !DIExpression()), !dbg !3150
  store double* %X, double** %X.addr, align 8
  call void @llvm.dbg.declare(metadata double** %X.addr, metadata !3151, metadata !DIExpression()), !dbg !3152
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3153, metadata !DIExpression()), !dbg !3154
  store double* %Z, double** %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Z.addr, metadata !3155, metadata !DIExpression()), !dbg !3156
  call void @llvm.dbg.declare(metadata double* %b, metadata !3157, metadata !DIExpression()), !dbg !3158
  call void @llvm.dbg.declare(metadata double* %g, metadata !3159, metadata !DIExpression()), !dbg !3160
  call void @llvm.dbg.declare(metadata double* %r, metadata !3161, metadata !DIExpression()), !dbg !3162
  %0 = load i16, i16* %red.addr, align 2, !dbg !3163
  %conv = uitofp i16 %0 to float, !dbg !3164
  %call = call float @DecodePixelGamma(float %conv), !dbg !3165
  %conv1 = fpext float %call to double, !dbg !3165
  %mul = fmul double 0x3EF0001000100010, %conv1, !dbg !3166
  store double %mul, double* %r, align 8, !dbg !3167
  %1 = load i16, i16* %green.addr, align 2, !dbg !3168
  %conv2 = uitofp i16 %1 to float, !dbg !3169
  %call3 = call float @DecodePixelGamma(float %conv2), !dbg !3170
  %conv4 = fpext float %call3 to double, !dbg !3170
  %mul5 = fmul double 0x3EF0001000100010, %conv4, !dbg !3171
  store double %mul5, double* %g, align 8, !dbg !3172
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3173
  %conv6 = uitofp i16 %2 to float, !dbg !3174
  %call7 = call float @DecodePixelGamma(float %conv6), !dbg !3175
  %conv8 = fpext float %call7 to double, !dbg !3175
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !3176
  store double %mul9, double* %b, align 8, !dbg !3177
  %3 = load double, double* %r, align 8, !dbg !3178
  %mul10 = fmul double 0x3FDA64B077E84D0C, %3, !dbg !3179
  %4 = load double, double* %g, align 8, !dbg !3180
  %mul11 = fmul double 0x3FD6E2A59D2E2F46, %4, !dbg !3181
  %add = fadd double %mul10, %mul11, !dbg !3182
  %5 = load double, double* %b, align 8, !dbg !3183
  %mul12 = fmul double 0x3FC71A6210D6208C, %5, !dbg !3184
  %add13 = fadd double %add, %mul12, !dbg !3185
  %6 = load double*, double** %X.addr, align 8, !dbg !3186
  store double %add13, double* %6, align 8, !dbg !3187
  %7 = load double, double* %r, align 8, !dbg !3188
  %mul14 = fmul double 0x3FCB36068E66EAD3, %7, !dbg !3189
  %8 = load double, double* %g, align 8, !dbg !3190
  %mul15 = fmul double 0x3FE6E2ACD52F3FCB, %8, !dbg !3191
  %add16 = fadd double %mul14, %mul15, !dbg !3192
  %9 = load double, double* %b, align 8, !dbg !3193
  %mul17 = fmul double 0x3FB27BBB5C6D92D1, %9, !dbg !3194
  %add18 = fadd double %add16, %mul17, !dbg !3195
  %10 = load double*, double** %Y.addr, align 8, !dbg !3196
  store double %add18, double* %10, align 8, !dbg !3197
  %11 = load double, double* %r, align 8, !dbg !3198
  %mul19 = fmul double 0x3F93C2A635C37FED, %11, !dbg !3199
  %12 = load double, double* %g, align 8, !dbg !3200
  %mul20 = fmul double 0x3FBE82D57095EC52, %12, !dbg !3201
  %add21 = fadd double %mul19, %mul20, !dbg !3202
  %13 = load double, double* %b, align 8, !dbg !3203
  %mul22 = fmul double 0x3FEE6A78F26C3A9D, %13, !dbg !3204
  %add23 = fadd double %add21, %mul22, !dbg !3205
  %14 = load double*, double** %Z.addr, align 8, !dbg !3206
  store double %add23, double* %14, align 8, !dbg !3207
  ret void, !dbg !3208
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToYCbCr(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %Y, double* %Cb, double* %Cr) #0 !dbg !3209 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %Y.addr = alloca double*, align 8
  %Cb.addr = alloca double*, align 8
  %Cr.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3210, metadata !DIExpression()), !dbg !3211
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3212, metadata !DIExpression()), !dbg !3213
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3214, metadata !DIExpression()), !dbg !3215
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3216, metadata !DIExpression()), !dbg !3217
  store double* %Cb, double** %Cb.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Cb.addr, metadata !3218, metadata !DIExpression()), !dbg !3219
  store double* %Cr, double** %Cr.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Cr.addr, metadata !3220, metadata !DIExpression()), !dbg !3221
  %0 = load i16, i16* %red.addr, align 2, !dbg !3222
  %1 = load i16, i16* %green.addr, align 2, !dbg !3223
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3224
  %3 = load double*, double** %Y.addr, align 8, !dbg !3225
  %4 = load double*, double** %Cb.addr, align 8, !dbg !3226
  %5 = load double*, double** %Cr.addr, align 8, !dbg !3227
  call void @ConvertRGBToYPbPr(i16 zeroext %0, i16 zeroext %1, i16 zeroext %2, double* %3, double* %4, double* %5), !dbg !3228
  ret void, !dbg !3229
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToYDbDr(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %Y, double* %Db, double* %Dr) #0 !dbg !3230 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %Y.addr = alloca double*, align 8
  %Db.addr = alloca double*, align 8
  %Dr.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3231, metadata !DIExpression()), !dbg !3232
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3233, metadata !DIExpression()), !dbg !3234
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3235, metadata !DIExpression()), !dbg !3236
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3237, metadata !DIExpression()), !dbg !3238
  store double* %Db, double** %Db.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Db.addr, metadata !3239, metadata !DIExpression()), !dbg !3240
  store double* %Dr, double** %Dr.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Dr.addr, metadata !3241, metadata !DIExpression()), !dbg !3242
  %0 = load i16, i16* %red.addr, align 2, !dbg !3243
  %conv = zext i16 %0 to i32, !dbg !3243
  %conv1 = sitofp i32 %conv to double, !dbg !3243
  %mul = fmul double 2.988390e-01, %conv1, !dbg !3244
  %1 = load i16, i16* %green.addr, align 2, !dbg !3245
  %conv2 = zext i16 %1 to i32, !dbg !3245
  %conv3 = sitofp i32 %conv2 to double, !dbg !3245
  %mul4 = fmul double 5.868110e-01, %conv3, !dbg !3246
  %add = fadd double %mul, %mul4, !dbg !3247
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3248
  %conv5 = zext i16 %2 to i32, !dbg !3248
  %conv6 = sitofp i32 %conv5 to double, !dbg !3248
  %mul7 = fmul double 1.143500e-01, %conv6, !dbg !3249
  %add8 = fadd double %add, %mul7, !dbg !3250
  %mul9 = fmul double 0x3EF0001000100010, %add8, !dbg !3251
  %3 = load double*, double** %Y.addr, align 8, !dbg !3252
  store double %mul9, double* %3, align 8, !dbg !3253
  %4 = load i16, i16* %red.addr, align 2, !dbg !3254
  %conv10 = zext i16 %4 to i32, !dbg !3254
  %conv11 = sitofp i32 %conv10 to double, !dbg !3254
  %mul12 = fmul double -4.500000e-01, %conv11, !dbg !3255
  %5 = load i16, i16* %green.addr, align 2, !dbg !3256
  %conv13 = zext i16 %5 to i32, !dbg !3256
  %conv14 = sitofp i32 %conv13 to double, !dbg !3256
  %mul15 = fmul double 8.830000e-01, %conv14, !dbg !3257
  %sub = fsub double %mul12, %mul15, !dbg !3258
  %6 = load i16, i16* %blue.addr, align 2, !dbg !3259
  %conv16 = zext i16 %6 to i32, !dbg !3259
  %conv17 = sitofp i32 %conv16 to double, !dbg !3259
  %mul18 = fmul double 1.333000e+00, %conv17, !dbg !3260
  %add19 = fadd double %sub, %mul18, !dbg !3261
  %mul20 = fmul double 0x3EF0001000100010, %add19, !dbg !3262
  %add21 = fadd double %mul20, 5.000000e-01, !dbg !3263
  %7 = load double*, double** %Db.addr, align 8, !dbg !3264
  store double %add21, double* %7, align 8, !dbg !3265
  %8 = load i16, i16* %red.addr, align 2, !dbg !3266
  %conv22 = zext i16 %8 to i32, !dbg !3266
  %conv23 = sitofp i32 %conv22 to double, !dbg !3266
  %mul24 = fmul double -1.333000e+00, %conv23, !dbg !3267
  %9 = load i16, i16* %green.addr, align 2, !dbg !3268
  %conv25 = zext i16 %9 to i32, !dbg !3268
  %conv26 = sitofp i32 %conv25 to double, !dbg !3268
  %mul27 = fmul double 1.116000e+00, %conv26, !dbg !3269
  %add28 = fadd double %mul24, %mul27, !dbg !3270
  %10 = load i16, i16* %blue.addr, align 2, !dbg !3271
  %conv29 = zext i16 %10 to i32, !dbg !3271
  %conv30 = sitofp i32 %conv29 to double, !dbg !3271
  %mul31 = fmul double 2.170000e-01, %conv30, !dbg !3272
  %add32 = fadd double %add28, %mul31, !dbg !3273
  %mul33 = fmul double 0x3EF0001000100010, %add32, !dbg !3274
  %add34 = fadd double %mul33, 5.000000e-01, !dbg !3275
  %11 = load double*, double** %Dr.addr, align 8, !dbg !3276
  store double %add34, double* %11, align 8, !dbg !3277
  ret void, !dbg !3278
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToYIQ(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %Y, double* %I, double* %Q) #0 !dbg !3279 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %Y.addr = alloca double*, align 8
  %I.addr = alloca double*, align 8
  %Q.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3280, metadata !DIExpression()), !dbg !3281
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3282, metadata !DIExpression()), !dbg !3283
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3284, metadata !DIExpression()), !dbg !3285
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3286, metadata !DIExpression()), !dbg !3287
  store double* %I, double** %I.addr, align 8
  call void @llvm.dbg.declare(metadata double** %I.addr, metadata !3288, metadata !DIExpression()), !dbg !3289
  store double* %Q, double** %Q.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Q.addr, metadata !3290, metadata !DIExpression()), !dbg !3291
  %0 = load i16, i16* %red.addr, align 2, !dbg !3292
  %conv = zext i16 %0 to i32, !dbg !3292
  %conv1 = sitofp i32 %conv to double, !dbg !3292
  %mul = fmul double 2.988390e-01, %conv1, !dbg !3293
  %1 = load i16, i16* %green.addr, align 2, !dbg !3294
  %conv2 = zext i16 %1 to i32, !dbg !3294
  %conv3 = sitofp i32 %conv2 to double, !dbg !3294
  %mul4 = fmul double 5.868110e-01, %conv3, !dbg !3295
  %add = fadd double %mul, %mul4, !dbg !3296
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3297
  %conv5 = zext i16 %2 to i32, !dbg !3297
  %conv6 = sitofp i32 %conv5 to double, !dbg !3297
  %mul7 = fmul double 1.143500e-01, %conv6, !dbg !3298
  %add8 = fadd double %add, %mul7, !dbg !3299
  %mul9 = fmul double 0x3EF0001000100010, %add8, !dbg !3300
  %3 = load double*, double** %Y.addr, align 8, !dbg !3301
  store double %mul9, double* %3, align 8, !dbg !3302
  %4 = load i16, i16* %red.addr, align 2, !dbg !3303
  %conv10 = zext i16 %4 to i32, !dbg !3303
  %conv11 = sitofp i32 %conv10 to double, !dbg !3303
  %mul12 = fmul double 5.957160e-01, %conv11, !dbg !3304
  %5 = load i16, i16* %green.addr, align 2, !dbg !3305
  %conv13 = zext i16 %5 to i32, !dbg !3305
  %conv14 = sitofp i32 %conv13 to double, !dbg !3305
  %mul15 = fmul double 2.744530e-01, %conv14, !dbg !3306
  %sub = fsub double %mul12, %mul15, !dbg !3307
  %6 = load i16, i16* %blue.addr, align 2, !dbg !3308
  %conv16 = zext i16 %6 to i32, !dbg !3308
  %conv17 = sitofp i32 %conv16 to double, !dbg !3308
  %mul18 = fmul double 3.212630e-01, %conv17, !dbg !3309
  %sub19 = fsub double %sub, %mul18, !dbg !3310
  %mul20 = fmul double 0x3EF0001000100010, %sub19, !dbg !3311
  %add21 = fadd double %mul20, 5.000000e-01, !dbg !3312
  %7 = load double*, double** %I.addr, align 8, !dbg !3313
  store double %add21, double* %7, align 8, !dbg !3314
  %8 = load i16, i16* %red.addr, align 2, !dbg !3315
  %conv22 = zext i16 %8 to i32, !dbg !3315
  %conv23 = sitofp i32 %conv22 to double, !dbg !3315
  %mul24 = fmul double 2.114560e-01, %conv23, !dbg !3316
  %9 = load i16, i16* %green.addr, align 2, !dbg !3317
  %conv25 = zext i16 %9 to i32, !dbg !3317
  %conv26 = sitofp i32 %conv25 to double, !dbg !3317
  %mul27 = fmul double 5.225910e-01, %conv26, !dbg !3318
  %sub28 = fsub double %mul24, %mul27, !dbg !3319
  %10 = load i16, i16* %blue.addr, align 2, !dbg !3320
  %conv29 = zext i16 %10 to i32, !dbg !3320
  %conv30 = sitofp i32 %conv29 to double, !dbg !3320
  %mul31 = fmul double 3.111350e-01, %conv30, !dbg !3321
  %add32 = fadd double %sub28, %mul31, !dbg !3322
  %mul33 = fmul double 0x3EF0001000100010, %add32, !dbg !3323
  %add34 = fadd double %mul33, 5.000000e-01, !dbg !3324
  %11 = load double*, double** %Q.addr, align 8, !dbg !3325
  store double %add34, double* %11, align 8, !dbg !3326
  ret void, !dbg !3327
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToYPbPr(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %Y, double* %Pb, double* %Pr) #0 !dbg !3328 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %Y.addr = alloca double*, align 8
  %Pb.addr = alloca double*, align 8
  %Pr.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3329, metadata !DIExpression()), !dbg !3330
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3331, metadata !DIExpression()), !dbg !3332
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3333, metadata !DIExpression()), !dbg !3334
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3335, metadata !DIExpression()), !dbg !3336
  store double* %Pb, double** %Pb.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Pb.addr, metadata !3337, metadata !DIExpression()), !dbg !3338
  store double* %Pr, double** %Pr.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Pr.addr, metadata !3339, metadata !DIExpression()), !dbg !3340
  %0 = load i16, i16* %red.addr, align 2, !dbg !3341
  %conv = zext i16 %0 to i32, !dbg !3341
  %conv1 = sitofp i32 %conv to double, !dbg !3341
  %mul = fmul double 2.988390e-01, %conv1, !dbg !3342
  %1 = load i16, i16* %green.addr, align 2, !dbg !3343
  %conv2 = zext i16 %1 to i32, !dbg !3343
  %conv3 = sitofp i32 %conv2 to double, !dbg !3343
  %mul4 = fmul double 5.868110e-01, %conv3, !dbg !3344
  %add = fadd double %mul, %mul4, !dbg !3345
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3346
  %conv5 = zext i16 %2 to i32, !dbg !3346
  %conv6 = sitofp i32 %conv5 to double, !dbg !3346
  %mul7 = fmul double 1.143500e-01, %conv6, !dbg !3347
  %add8 = fadd double %add, %mul7, !dbg !3348
  %mul9 = fmul double 0x3EF0001000100010, %add8, !dbg !3349
  %3 = load double*, double** %Y.addr, align 8, !dbg !3350
  store double %mul9, double* %3, align 8, !dbg !3351
  %4 = load i16, i16* %red.addr, align 2, !dbg !3352
  %conv10 = zext i16 %4 to i32, !dbg !3352
  %conv11 = sitofp i32 %conv10 to double, !dbg !3352
  %mul12 = fmul double 0xBFC5992A08114679, %conv11, !dbg !3353
  %5 = load i16, i16* %green.addr, align 2, !dbg !3354
  %conv13 = zext i16 %5 to i32, !dbg !3354
  %conv14 = sitofp i32 %conv13 to double, !dbg !3354
  %mul15 = fmul double 3.312640e-01, %conv14, !dbg !3355
  %sub = fsub double %mul12, %mul15, !dbg !3356
  %6 = load i16, i16* %blue.addr, align 2, !dbg !3357
  %conv16 = zext i16 %6 to i32, !dbg !3357
  %conv17 = sitofp i32 %conv16 to double, !dbg !3357
  %mul18 = fmul double 5.000000e-01, %conv17, !dbg !3358
  %add19 = fadd double %sub, %mul18, !dbg !3359
  %mul20 = fmul double 0x3EF0001000100010, %add19, !dbg !3360
  %add21 = fadd double %mul20, 5.000000e-01, !dbg !3361
  %7 = load double*, double** %Pb.addr, align 8, !dbg !3362
  store double %add21, double* %7, align 8, !dbg !3363
  %8 = load i16, i16* %red.addr, align 2, !dbg !3364
  %conv22 = zext i16 %8 to i32, !dbg !3364
  %conv23 = sitofp i32 %conv22 to double, !dbg !3364
  %mul24 = fmul double 5.000000e-01, %conv23, !dbg !3365
  %9 = load i16, i16* %green.addr, align 2, !dbg !3366
  %conv25 = zext i16 %9 to i32, !dbg !3366
  %conv26 = sitofp i32 %conv25 to double, !dbg !3366
  %mul27 = fmul double 4.186880e-01, %conv26, !dbg !3367
  %sub28 = fsub double %mul24, %mul27, !dbg !3368
  %10 = load i16, i16* %blue.addr, align 2, !dbg !3369
  %conv29 = zext i16 %10 to i32, !dbg !3369
  %conv30 = sitofp i32 %conv29 to double, !dbg !3369
  %mul31 = fmul double 8.131200e-02, %conv30, !dbg !3370
  %sub32 = fsub double %sub28, %mul31, !dbg !3371
  %mul33 = fmul double 0x3EF0001000100010, %sub32, !dbg !3372
  %add34 = fadd double %mul33, 5.000000e-01, !dbg !3373
  %11 = load double*, double** %Pr.addr, align 8, !dbg !3374
  store double %add34, double* %11, align 8, !dbg !3375
  ret void, !dbg !3376
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertRGBToYUV(i16 zeroext %red, i16 zeroext %green, i16 zeroext %blue, double* %Y, double* %U, double* %V) #0 !dbg !3377 {
entry:
  %red.addr = alloca i16, align 2
  %green.addr = alloca i16, align 2
  %blue.addr = alloca i16, align 2
  %Y.addr = alloca double*, align 8
  %U.addr = alloca double*, align 8
  %V.addr = alloca double*, align 8
  store i16 %red, i16* %red.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %red.addr, metadata !3378, metadata !DIExpression()), !dbg !3379
  store i16 %green, i16* %green.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %green.addr, metadata !3380, metadata !DIExpression()), !dbg !3381
  store i16 %blue, i16* %blue.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %blue.addr, metadata !3382, metadata !DIExpression()), !dbg !3383
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !3384, metadata !DIExpression()), !dbg !3385
  store double* %U, double** %U.addr, align 8
  call void @llvm.dbg.declare(metadata double** %U.addr, metadata !3386, metadata !DIExpression()), !dbg !3387
  store double* %V, double** %V.addr, align 8
  call void @llvm.dbg.declare(metadata double** %V.addr, metadata !3388, metadata !DIExpression()), !dbg !3389
  %0 = load i16, i16* %red.addr, align 2, !dbg !3390
  %conv = zext i16 %0 to i32, !dbg !3390
  %conv1 = sitofp i32 %conv to double, !dbg !3390
  %mul = fmul double 2.988390e-01, %conv1, !dbg !3391
  %1 = load i16, i16* %green.addr, align 2, !dbg !3392
  %conv2 = zext i16 %1 to i32, !dbg !3392
  %conv3 = sitofp i32 %conv2 to double, !dbg !3392
  %mul4 = fmul double 5.868110e-01, %conv3, !dbg !3393
  %add = fadd double %mul, %mul4, !dbg !3394
  %2 = load i16, i16* %blue.addr, align 2, !dbg !3395
  %conv5 = zext i16 %2 to i32, !dbg !3395
  %conv6 = sitofp i32 %conv5 to double, !dbg !3395
  %mul7 = fmul double 1.143500e-01, %conv6, !dbg !3396
  %add8 = fadd double %add, %mul7, !dbg !3397
  %mul9 = fmul double 0x3EF0001000100010, %add8, !dbg !3398
  %3 = load double*, double** %Y.addr, align 8, !dbg !3399
  store double %mul9, double* %3, align 8, !dbg !3400
  %4 = load i16, i16* %red.addr, align 2, !dbg !3401
  %conv10 = zext i16 %4 to i32, !dbg !3401
  %conv11 = sitofp i32 %conv10 to double, !dbg !3401
  %mul12 = fmul double -1.470000e-01, %conv11, !dbg !3402
  %5 = load i16, i16* %green.addr, align 2, !dbg !3403
  %conv13 = zext i16 %5 to i32, !dbg !3403
  %conv14 = sitofp i32 %conv13 to double, !dbg !3403
  %mul15 = fmul double 2.890000e-01, %conv14, !dbg !3404
  %sub = fsub double %mul12, %mul15, !dbg !3405
  %6 = load i16, i16* %blue.addr, align 2, !dbg !3406
  %conv16 = zext i16 %6 to i32, !dbg !3406
  %conv17 = sitofp i32 %conv16 to double, !dbg !3406
  %mul18 = fmul double 4.360000e-01, %conv17, !dbg !3407
  %add19 = fadd double %sub, %mul18, !dbg !3408
  %mul20 = fmul double 0x3EF0001000100010, %add19, !dbg !3409
  %add21 = fadd double %mul20, 5.000000e-01, !dbg !3410
  %7 = load double*, double** %U.addr, align 8, !dbg !3411
  store double %add21, double* %7, align 8, !dbg !3412
  %8 = load i16, i16* %red.addr, align 2, !dbg !3413
  %conv22 = zext i16 %8 to i32, !dbg !3413
  %conv23 = sitofp i32 %conv22 to double, !dbg !3413
  %mul24 = fmul double 0x3FE3AE147AE147AE, %conv23, !dbg !3414
  %9 = load i16, i16* %green.addr, align 2, !dbg !3415
  %conv25 = zext i16 %9 to i32, !dbg !3415
  %conv26 = sitofp i32 %conv25 to double, !dbg !3415
  %mul27 = fmul double 5.150000e-01, %conv26, !dbg !3416
  %sub28 = fsub double %mul24, %mul27, !dbg !3417
  %10 = load i16, i16* %blue.addr, align 2, !dbg !3418
  %conv29 = zext i16 %10 to i32, !dbg !3418
  %conv30 = sitofp i32 %conv29 to double, !dbg !3418
  %mul31 = fmul double 1.000000e-01, %conv30, !dbg !3419
  %sub32 = fsub double %sub28, %mul31, !dbg !3420
  %mul33 = fmul double 0x3EF0001000100010, %sub32, !dbg !3421
  %add34 = fadd double %mul33, 5.000000e-01, !dbg !3422
  %11 = load double*, double** %V.addr, align 8, !dbg !3423
  store double %add34, double* %11, align 8, !dbg !3424
  ret void, !dbg !3425
}

declare dso_local i8* @GetImageProperty(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !3426 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !3430, metadata !DIExpression()), !dbg !3431
  call void @llvm.dbg.declare(metadata double* %sign, metadata !3432, metadata !DIExpression()), !dbg !3433
  %0 = load double, double* %x.addr, align 8, !dbg !3434
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !3435
  %1 = zext i1 %cmp to i64, !dbg !3434
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !3434
  store double %cond, double* %sign, align 8, !dbg !3436
  %2 = load double, double* %sign, align 8, !dbg !3437
  %3 = load double, double* %x.addr, align 8, !dbg !3439
  %mul = fmul double %2, %3, !dbg !3440
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !3441
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3442

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !3443
  %div = fdiv double 1.000000e+00, %4, !dbg !3444
  store double %div, double* %retval, align 8, !dbg !3445
  br label %return, !dbg !3445

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !3446
  %div2 = fdiv double %5, 1.000000e-15, !dbg !3447
  store double %div2, double* %retval, align 8, !dbg !3448
  br label %return, !dbg !3448

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !3449
  ret double %6, !dbg !3449
}

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !3450 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !3456, metadata !DIExpression()), !dbg !3457
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !3458, metadata !DIExpression()), !dbg !3459
  %0 = load i8*, i8** %string.addr, align 8, !dbg !3460
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !3461
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !3462
  ret double %call, !dbg !3463
}

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleMapToQuantum(float %value) #0 !dbg !3464 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !3466, metadata !DIExpression()), !dbg !3467
  %0 = load float, float* %value.addr, align 4, !dbg !3468
  %conv = fpext float %0 to double, !dbg !3468
  %cmp = fcmp ole double %conv, 0.000000e+00, !dbg !3470
  br i1 %cmp, label %if.then, label %if.end, !dbg !3471

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !3472
  br label %return, !dbg !3472

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !3473
  %cmp2 = fcmp oge float %1, 6.553500e+04, !dbg !3475
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !3476

if.then4:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !3477
  br label %return, !dbg !3477

if.end5:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !3478
  %conv6 = fpext float %2 to double, !dbg !3478
  %add = fadd double %conv6, 5.000000e-01, !dbg !3479
  %conv7 = fptoui double %add to i16, !dbg !3480
  store i16 %conv7, i16* %retval, align 2, !dbg !3481
  br label %return, !dbg !3481

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !3482
  ret i16 %3, !dbg !3482
}

; Function Attrs: nounwind
declare dso_local double @log10(double) #5

declare dso_local float @DecodePixelGamma(float) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ScaleQuantumToMap(i16 zeroext %quantum) #0 !dbg !3483 {
entry:
  %retval = alloca i32, align 4
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !3486, metadata !DIExpression()), !dbg !3487
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !3488
  %conv = zext i16 %0 to i32, !dbg !3488
  %cmp = icmp sge i32 %conv, 65535, !dbg !3490
  br i1 %cmp, label %if.then, label %if.end, !dbg !3491

if.then:                                          ; preds = %entry
  store i32 65535, i32* %retval, align 4, !dbg !3492
  br label %return, !dbg !3492

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %quantum.addr, align 2, !dbg !3493
  %conv2 = zext i16 %1 to i32, !dbg !3494
  store i32 %conv2, i32* %retval, align 4, !dbg !3495
  br label %return, !dbg !3495

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !3496
  ret i32 %2, !dbg !3496
}

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleCharToQuantum(i8 zeroext %value) #0 !dbg !3497 {
entry:
  %value.addr = alloca i8, align 1
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !3501, metadata !DIExpression()), !dbg !3502
  %0 = load i8, i8* %value.addr, align 1, !dbg !3503
  %conv = zext i8 %0 to i32, !dbg !3503
  %mul = mul i32 257, %conv, !dbg !3504
  %conv1 = trunc i32 %mul to i16, !dbg !3505
  ret i16 %conv1, !dbg !3506
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !3507 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3511, metadata !DIExpression()), !dbg !3512
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !3513, metadata !DIExpression()), !dbg !3514
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !3515, metadata !DIExpression()), !dbg !3516
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !3517, metadata !DIExpression()), !dbg !3518
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !3519, metadata !DIExpression()), !dbg !3520
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3521
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !3523
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !3523
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !3524
  br i1 %cmp, label %if.then, label %if.end, !dbg !3525

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !3526
  br label %return, !dbg !3526

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !3527
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !3528
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3529
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !3530
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3529
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !3531
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3532
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !3533
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !3533
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !3534
  %6 = load i64, i64* %offset.addr, align 8, !dbg !3535
  %7 = load i64, i64* %extent.addr, align 8, !dbg !3536
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3537
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !3538
  %9 = load i8*, i8** %client_data, align 8, !dbg !3538
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !3532
  store i32 %call4, i32* %retval, align 4, !dbg !3539
  br label %return, !dbg !3539

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !3540
  ret i32 %10, !dbg !3540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !3541 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !3544, metadata !DIExpression()), !dbg !3545
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !3546
  %cmp = icmp eq i32 %0, 2, !dbg !3548
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3549

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !3550
  %cmp1 = icmp eq i32 %1, 17, !dbg !3551
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !3552

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !3553
  %cmp3 = icmp eq i32 %2, 19, !dbg !3554
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3555

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !3556
  br label %return, !dbg !3556

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !3557
  br label %return, !dbg !3557

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !3558
  ret i32 %3, !dbg !3558
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsRGBColorspace(i32 %colorspace) #0 !dbg !3559 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !3560, metadata !DIExpression()), !dbg !3561
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !3562
  %cmp = icmp eq i32 %0, 1, !dbg !3564
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3565

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !3566
  %cmp1 = icmp eq i32 %1, 29, !dbg !3567
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3568

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !3569
  br label %return, !dbg !3569

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !3570
  br label %return, !dbg !3570

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !3571
  ret i32 %2, !dbg !3571
}

declare hidden i32 @SyncImagePixelCache(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @TransformImageColorspace(%struct._Image* %image, i32 %colorspace) #0 !dbg !3572 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %colorspace.addr = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3573, metadata !DIExpression()), !dbg !3574
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3577, metadata !DIExpression()), !dbg !3578
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3579
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3581
  %1 = load i32, i32* %debug, align 8, !dbg !3581
  %cmp = icmp ne i32 %1, 0, !dbg !3582
  br i1 %cmp, label %if.then, label %if.end, !dbg !3583

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3584
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3585
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3584
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1191, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3586
  br label %if.end, !dbg !3587

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3588
  %colorspace1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 1, !dbg !3590
  %4 = load i32, i32* %colorspace1, align 4, !dbg !3590
  %5 = load i32, i32* %colorspace.addr, align 4, !dbg !3591
  %cmp2 = icmp eq i32 %4, %5, !dbg !3592
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3593

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !3594
  br label %return, !dbg !3594

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3595
  %colorspace5 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 1, !dbg !3597
  %7 = load i32, i32* %colorspace5, align 4, !dbg !3597
  %cmp6 = icmp eq i32 %7, 19, !dbg !3598
  br i1 %cmp6, label %land.lhs.true, label %if.end9, !dbg !3599

land.lhs.true:                                    ; preds = %if.end4
  %8 = load i32, i32* %colorspace.addr, align 4, !dbg !3600
  %cmp7 = icmp eq i32 %8, 13, !dbg !3601
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !3602

if.then8:                                         ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !3603
  br label %return, !dbg !3603

if.end9:                                          ; preds = %land.lhs.true, %if.end4
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3604
  %colorspace10 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 1, !dbg !3606
  %10 = load i32, i32* %colorspace10, align 4, !dbg !3606
  %cmp11 = icmp eq i32 %10, 2, !dbg !3607
  br i1 %cmp11, label %land.lhs.true12, label %if.end17, !dbg !3608

land.lhs.true12:                                  ; preds = %if.end9
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3609
  %gamma = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 15, !dbg !3610
  %12 = load double, double* %gamma, align 8, !dbg !3610
  %cmp13 = fcmp une double %12, 1.000000e+00, !dbg !3611
  br i1 %cmp13, label %land.lhs.true14, label %if.end17, !dbg !3612

land.lhs.true14:                                  ; preds = %land.lhs.true12
  %13 = load i32, i32* %colorspace.addr, align 4, !dbg !3613
  %cmp15 = icmp eq i32 %13, 13, !dbg !3614
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3615

if.then16:                                        ; preds = %land.lhs.true14
  store i32 1, i32* %retval, align 4, !dbg !3616
  br label %return, !dbg !3616

if.end17:                                         ; preds = %land.lhs.true14, %land.lhs.true12, %if.end9
  %14 = load i32, i32* %colorspace.addr, align 4, !dbg !3617
  %cmp18 = icmp eq i32 %14, 0, !dbg !3619
  br i1 %cmp18, label %if.then19, label %if.end21, !dbg !3620

if.then19:                                        ; preds = %if.end17
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3621
  %16 = load i32, i32* %colorspace.addr, align 4, !dbg !3622
  %call20 = call i32 @SetImageColorspace(%struct._Image* %15, i32 %16), !dbg !3623
  store i32 %call20, i32* %retval, align 4, !dbg !3624
  br label %return, !dbg !3624

if.end21:                                         ; preds = %if.end17
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3625
  %call22 = call i32 @DeleteImageProfile(%struct._Image* %17, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.10, i64 0, i64 0)), !dbg !3626
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3627
  %call23 = call i32 @DeleteImageProfile(%struct._Image* %18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.11, i64 0, i64 0)), !dbg !3628
  %19 = load i32, i32* %colorspace.addr, align 4, !dbg !3629
  %call24 = call i32 @IssRGBColorspace(i32 %19), !dbg !3631
  %cmp25 = icmp ne i32 %call24, 0, !dbg !3632
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !3633

if.then26:                                        ; preds = %if.end21
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3634
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3635
  %colorspace27 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 1, !dbg !3636
  %22 = load i32, i32* %colorspace27, align 4, !dbg !3636
  %call28 = call i32 @TransformRGBImage(%struct._Image* %20, i32 %22), !dbg !3637
  store i32 %call28, i32* %retval, align 4, !dbg !3638
  br label %return, !dbg !3638

if.end29:                                         ; preds = %if.end21
  store i32 1, i32* %status, align 4, !dbg !3639
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3640
  %colorspace30 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 1, !dbg !3642
  %24 = load i32, i32* %colorspace30, align 4, !dbg !3642
  %call31 = call i32 @IssRGBColorspace(i32 %24), !dbg !3643
  %cmp32 = icmp eq i32 %call31, 0, !dbg !3644
  br i1 %cmp32, label %if.then33, label %if.end36, !dbg !3645

if.then33:                                        ; preds = %if.end29
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3646
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3647
  %colorspace34 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 1, !dbg !3648
  %27 = load i32, i32* %colorspace34, align 4, !dbg !3648
  %call35 = call i32 @TransformRGBImage(%struct._Image* %25, i32 %27), !dbg !3649
  store i32 %call35, i32* %status, align 4, !dbg !3650
  br label %if.end36, !dbg !3651

if.end36:                                         ; preds = %if.then33, %if.end29
  %28 = load i32, i32* %status, align 4, !dbg !3652
  %cmp37 = icmp eq i32 %28, 0, !dbg !3654
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !3655

if.then38:                                        ; preds = %if.end36
  %29 = load i32, i32* %status, align 4, !dbg !3656
  store i32 %29, i32* %retval, align 4, !dbg !3657
  br label %return, !dbg !3657

if.end39:                                         ; preds = %if.end36
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3658
  %31 = load i32, i32* %colorspace.addr, align 4, !dbg !3660
  %call40 = call i32 @RGBTransformImage(%struct._Image* %30, i32 %31), !dbg !3661
  %cmp41 = icmp eq i32 %call40, 0, !dbg !3662
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !3663

if.then42:                                        ; preds = %if.end39
  store i32 0, i32* %status, align 4, !dbg !3664
  br label %if.end43, !dbg !3665

if.end43:                                         ; preds = %if.then42, %if.end39
  %32 = load i32, i32* %status, align 4, !dbg !3666
  store i32 %32, i32* %retval, align 4, !dbg !3667
  br label %return, !dbg !3667

return:                                           ; preds = %if.end43, %if.then38, %if.then26, %if.then19, %if.then16, %if.then8, %if.then3
  %33 = load i32, i32* %retval, align 4, !dbg !3668
  ret i32 %33, !dbg !3668
}

declare dso_local i32 @DeleteImageProfile(%struct._Image*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IssRGBColorspace(i32 %colorspace) #0 !dbg !3669 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !3670, metadata !DIExpression()), !dbg !3671
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !3672
  %cmp = icmp eq i32 %0, 13, !dbg !3674
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3675

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !3676
  %cmp1 = icmp eq i32 %1, 3, !dbg !3677
  br i1 %cmp1, label %if.then, label %if.end, !dbg !3678

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !3679
  br label %return, !dbg !3679

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %retval, align 4, !dbg !3680
  br label %return, !dbg !3680

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !3681
  ret i32 %2, !dbg !3681
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @TransformRGBImage(%struct._Image* %image, i32 %colorspace) #0 !dbg !2 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %colorspace.addr = alloca i32, align 4
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %i = alloca i64, align 8
  %y = alloca i64, align 8
  %y_map = alloca %struct._TransformPacket*, align 8
  %x_map = alloca %struct._TransformPacket*, align 8
  %z_map = alloca %struct._TransformPacket*, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %sync = alloca i32, align 4
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %sync62 = alloca i32, align 4
  %x63 = alloca i64, align 8
  %q64 = alloca %struct._PixelPacket*, align 8
  %gray = alloca float, align 4
  %sync128 = alloca i32, align 4
  %x129 = alloca i64, align 8
  %q130 = alloca %struct._PixelPacket*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  %blue146 = alloca i16, align 2
  %green147 = alloca i16, align 2
  %red148 = alloca i16, align 2
  %value = alloca i8*, align 8
  %black = alloca double, align 8
  %density = alloca double, align 8
  %film_gamma = alloca double, align 8
  %gamma = alloca double, align 8
  %reference_black = alloca double, align 8
  %reference_white = alloca double, align 8
  %logmap = alloca i16*, align 8
  %sync320 = alloca i32, align 4
  %x321 = alloca i64, align 8
  %q322 = alloca %struct._PixelPacket*, align 8
  %blue338 = alloca i16, align 2
  %green339 = alloca i16, align 2
  %red340 = alloca i16, align 2
  %sync405 = alloca i32, align 4
  %x406 = alloca i64, align 8
  %q407 = alloca %struct._PixelPacket*, align 8
  %blue423 = alloca i16, align 2
  %green424 = alloca i16, align 2
  %red425 = alloca i16, align 2
  %sync803 = alloca i32, align 4
  %pixel804 = alloca %struct._MagickPixelPacket, align 8
  %x805 = alloca i64, align 8
  %q806 = alloca %struct._PixelPacket*, align 8
  %blue822 = alloca i64, align 8
  %green823 = alloca i64, align 8
  %red824 = alloca i64, align 8
  %proceed = alloca i32, align 4
  %pixel941 = alloca %struct._MagickPixelPacket, align 8
  %blue942 = alloca i64, align 8
  %green943 = alloca i64, align 8
  %red944 = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3682, metadata !DIExpression()), !dbg !3683
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !3684, metadata !DIExpression()), !dbg !3685
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !3686, metadata !DIExpression()), !dbg !3687
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !3688, metadata !DIExpression()), !dbg !3689
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3690, metadata !DIExpression()), !dbg !3691
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !3692, metadata !DIExpression()), !dbg !3693
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3694, metadata !DIExpression()), !dbg !3695
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3696, metadata !DIExpression()), !dbg !3697
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %y_map, metadata !3698, metadata !DIExpression()), !dbg !3699
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %x_map, metadata !3700, metadata !DIExpression()), !dbg !3701
  call void @llvm.dbg.declare(metadata %struct._TransformPacket** %z_map, metadata !3702, metadata !DIExpression()), !dbg !3703
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3704
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3706
  %1 = load i32, i32* %debug, align 8, !dbg !3706
  %cmp = icmp ne i32 %1, 0, !dbg !3707
  br i1 %cmp, label %if.then, label %if.end, !dbg !3708

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3709
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3710
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3709
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1640, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3711
  br label %if.end, !dbg !3712

if.end:                                           ; preds = %if.then, %entry
  store i32 1, i32* %status, align 4, !dbg !3713
  store i64 0, i64* %progress, align 8, !dbg !3714
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3715
  %exception1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 58, !dbg !3716
  store %struct._ExceptionInfo* %exception1, %struct._ExceptionInfo** %exception, align 8, !dbg !3717
  %4 = load i32, i32* %colorspace.addr, align 4, !dbg !3718
  switch i32 %4, label %sw.default459 [
    i32 12, label %sw.bb
    i32 2, label %sw.bb40
    i32 17, label %sw.bb40
    i32 19, label %sw.bb40
    i32 22, label %sw.bb106
    i32 24, label %sw.bb106
    i32 32, label %sw.bb106
    i32 14, label %sw.bb106
    i32 30, label %sw.bb106
    i32 15, label %sw.bb106
    i32 31, label %sw.bb106
    i32 16, label %sw.bb106
    i32 5, label %sw.bb106
    i32 25, label %sw.bb106
    i32 27, label %sw.bb106
    i32 28, label %sw.bb106
    i32 26, label %sw.bb106
    i32 23, label %sw.bb106
    i32 6, label %sw.bb106
    i32 7, label %sw.bb106
    i32 33, label %sw.bb106
    i32 9, label %sw.bb106
    i32 10, label %sw.bb106
    i32 11, label %sw.bb106
    i32 21, label %sw.bb212
    i32 1, label %sw.bb383
    i32 29, label %sw.bb383
  ], !dbg !3719

sw.bb:                                            ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !3720, metadata !DIExpression()), !dbg !3723
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3724
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 0, !dbg !3726
  %6 = load i32, i32* %storage_class, align 8, !dbg !3726
  %cmp2 = icmp eq i32 %6, 2, !dbg !3727
  br i1 %cmp2, label %if.then3, label %if.end12, !dbg !3728

if.then3:                                         ; preds = %sw.bb
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3729
  %call4 = call i32 @SyncImage(%struct._Image* %7), !dbg !3732
  %cmp5 = icmp eq i32 %call4, 0, !dbg !3733
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3734

if.then6:                                         ; preds = %if.then3
  store i32 0, i32* %retval, align 4, !dbg !3735
  br label %return, !dbg !3735

if.end7:                                          ; preds = %if.then3
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3736
  %call8 = call i32 @SetImageStorageClass(%struct._Image* %8, i32 1), !dbg !3738
  %cmp9 = icmp eq i32 %call8, 0, !dbg !3739
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !3740

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !3741
  br label %return, !dbg !3741

if.end11:                                         ; preds = %if.end7
  br label %if.end12, !dbg !3742

if.end12:                                         ; preds = %if.end11, %sw.bb
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3743
  call void @GetMagickPixelPacket(%struct._Image* %9, %struct._MagickPixelPacket* %zero), !dbg !3744
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3745
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3746
  %call13 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %10, %struct._ExceptionInfo* %11), !dbg !3747
  store %struct._CacheView* %call13, %struct._CacheView** %image_view, align 8, !dbg !3748
  store i64 0, i64* %y, align 8, !dbg !3749
  br label %for.cond, !dbg !3751

for.cond:                                         ; preds = %for.inc32, %if.end12
  %12 = load i64, i64* %y, align 8, !dbg !3752
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3754
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 8, !dbg !3755
  %14 = load i64, i64* %rows, align 8, !dbg !3755
  %cmp14 = icmp slt i64 %12, %14, !dbg !3756
  br i1 %cmp14, label %for.body, label %for.end34, !dbg !3757

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !3758, metadata !DIExpression()), !dbg !3760
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !3761, metadata !DIExpression()), !dbg !3762
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3763, metadata !DIExpression()), !dbg !3764
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3765, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !3767, metadata !DIExpression()), !dbg !3768
  %15 = load i32, i32* %status, align 4, !dbg !3769
  %cmp15 = icmp eq i32 %15, 0, !dbg !3771
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !3772

if.then16:                                        ; preds = %for.body
  br label %for.inc32, !dbg !3773

if.end17:                                         ; preds = %for.body
  %16 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3774
  %17 = load i64, i64* %y, align 8, !dbg !3775
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3776
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 7, !dbg !3777
  %19 = load i64, i64* %columns, align 8, !dbg !3777
  %20 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3778
  %call18 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %16, i64 0, i64 %17, i64 %19, i64 1, %struct._ExceptionInfo* %20), !dbg !3779
  store %struct._PixelPacket* %call18, %struct._PixelPacket** %q, align 8, !dbg !3780
  %21 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3781
  %cmp19 = icmp eq %struct._PixelPacket* %21, null, !dbg !3783
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !3784

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %status, align 4, !dbg !3785
  br label %for.inc32, !dbg !3787

if.end21:                                         ; preds = %if.end17
  %22 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3788
  %call22 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %22), !dbg !3789
  store i16* %call22, i16** %indexes, align 8, !dbg !3790
  %23 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !3791
  %24 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !3791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 56, i1 false), !dbg !3791
  store i64 0, i64* %x, align 8, !dbg !3792
  br label %for.cond23, !dbg !3794

for.cond23:                                       ; preds = %for.inc, %if.end21
  %25 = load i64, i64* %x, align 8, !dbg !3795
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3797
  %columns24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 7, !dbg !3798
  %27 = load i64, i64* %columns24, align 8, !dbg !3798
  %cmp25 = icmp slt i64 %25, %27, !dbg !3799
  br i1 %cmp25, label %for.body26, label %for.end, !dbg !3800

for.body26:                                       ; preds = %for.cond23
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3801
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3803
  %30 = load i16*, i16** %indexes, align 8, !dbg !3804
  %31 = load i64, i64* %x, align 8, !dbg !3805
  %add.ptr = getelementptr inbounds i16, i16* %30, i64 %31, !dbg !3806
  call void @SetMagickPixelPacket(%struct._Image* %28, %struct._PixelPacket* %29, i16* %add.ptr, %struct._MagickPixelPacket* %pixel), !dbg !3807
  call void @ConvertCMYKToRGB(%struct._MagickPixelPacket* %pixel), !dbg !3808
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3809
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3810
  %34 = load i16*, i16** %indexes, align 8, !dbg !3811
  %35 = load i64, i64* %x, align 8, !dbg !3812
  %add.ptr27 = getelementptr inbounds i16, i16* %34, i64 %35, !dbg !3813
  call void @SetPixelPacket(%struct._Image* %32, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %33, i16* %add.ptr27), !dbg !3814
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !3815
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 1, !dbg !3815
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !3815
  br label %for.inc, !dbg !3816

for.inc:                                          ; preds = %for.body26
  %37 = load i64, i64* %x, align 8, !dbg !3817
  %inc = add nsw i64 %37, 1, !dbg !3817
  store i64 %inc, i64* %x, align 8, !dbg !3817
  br label %for.cond23, !dbg !3818, !llvm.loop !3819

for.end:                                          ; preds = %for.cond23
  %38 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3821
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3822
  %call28 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %38, %struct._ExceptionInfo* %39), !dbg !3823
  store i32 %call28, i32* %sync, align 4, !dbg !3824
  %40 = load i32, i32* %sync, align 4, !dbg !3825
  %cmp29 = icmp eq i32 %40, 0, !dbg !3827
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !3828

if.then30:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !3829
  br label %if.end31, !dbg !3830

if.end31:                                         ; preds = %if.then30, %for.end
  br label %for.inc32, !dbg !3831

for.inc32:                                        ; preds = %if.end31, %if.then20, %if.then16
  %41 = load i64, i64* %y, align 8, !dbg !3832
  %inc33 = add nsw i64 %41, 1, !dbg !3832
  store i64 %inc33, i64* %y, align 8, !dbg !3832
  br label %for.cond, !dbg !3833, !llvm.loop !3834

for.end34:                                        ; preds = %for.cond
  %42 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3836
  %call35 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %42), !dbg !3837
  store %struct._CacheView* %call35, %struct._CacheView** %image_view, align 8, !dbg !3838
  %43 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3839
  %call36 = call i32 @SetImageColorspace(%struct._Image* %43, i32 13), !dbg !3841
  %cmp37 = icmp eq i32 %call36, 0, !dbg !3842
  br i1 %cmp37, label %if.then38, label %if.end39, !dbg !3843

if.then38:                                        ; preds = %for.end34
  store i32 0, i32* %retval, align 4, !dbg !3844
  br label %return, !dbg !3844

if.end39:                                         ; preds = %for.end34
  %44 = load i32, i32* %status, align 4, !dbg !3845
  store i32 %44, i32* %retval, align 4, !dbg !3846
  br label %return, !dbg !3846

sw.bb40:                                          ; preds = %if.end, %if.end, %if.end
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3847
  %storage_class41 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 0, !dbg !3850
  %46 = load i32, i32* %storage_class41, align 8, !dbg !3850
  %cmp42 = icmp eq i32 %46, 2, !dbg !3851
  br i1 %cmp42, label %if.then43, label %if.end52, !dbg !3852

if.then43:                                        ; preds = %sw.bb40
  %47 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3853
  %call44 = call i32 @SyncImage(%struct._Image* %47), !dbg !3856
  %cmp45 = icmp eq i32 %call44, 0, !dbg !3857
  br i1 %cmp45, label %if.then46, label %if.end47, !dbg !3858

if.then46:                                        ; preds = %if.then43
  store i32 0, i32* %retval, align 4, !dbg !3859
  br label %return, !dbg !3859

if.end47:                                         ; preds = %if.then43
  %48 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3860
  %call48 = call i32 @SetImageStorageClass(%struct._Image* %48, i32 1), !dbg !3862
  %cmp49 = icmp eq i32 %call48, 0, !dbg !3863
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !3864

if.then50:                                        ; preds = %if.end47
  store i32 0, i32* %retval, align 4, !dbg !3865
  br label %return, !dbg !3865

if.end51:                                         ; preds = %if.end47
  br label %if.end52, !dbg !3866

if.end52:                                         ; preds = %if.end51, %sw.bb40
  %49 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3867
  %call53 = call i32 @SetImageColorspace(%struct._Image* %49, i32 13), !dbg !3869
  %cmp54 = icmp eq i32 %call53, 0, !dbg !3870
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !3871

if.then55:                                        ; preds = %if.end52
  store i32 0, i32* %retval, align 4, !dbg !3872
  br label %return, !dbg !3872

if.end56:                                         ; preds = %if.end52
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3873
  %51 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3874
  %call57 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %50, %struct._ExceptionInfo* %51), !dbg !3875
  store %struct._CacheView* %call57, %struct._CacheView** %image_view, align 8, !dbg !3876
  store i64 0, i64* %y, align 8, !dbg !3877
  br label %for.cond58, !dbg !3879

for.cond58:                                       ; preds = %for.inc97, %if.end56
  %52 = load i64, i64* %y, align 8, !dbg !3880
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3882
  %rows59 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 8, !dbg !3883
  %54 = load i64, i64* %rows59, align 8, !dbg !3883
  %cmp60 = icmp slt i64 %52, %54, !dbg !3884
  br i1 %cmp60, label %for.body61, label %for.end99, !dbg !3885

for.body61:                                       ; preds = %for.cond58
  call void @llvm.dbg.declare(metadata i32* %sync62, metadata !3886, metadata !DIExpression()), !dbg !3888
  call void @llvm.dbg.declare(metadata i64* %x63, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q64, metadata !3891, metadata !DIExpression()), !dbg !3892
  %55 = load i32, i32* %status, align 4, !dbg !3893
  %cmp65 = icmp eq i32 %55, 0, !dbg !3895
  br i1 %cmp65, label %if.then66, label %if.end67, !dbg !3896

if.then66:                                        ; preds = %for.body61
  br label %for.inc97, !dbg !3897

if.end67:                                         ; preds = %for.body61
  %56 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3898
  %57 = load i64, i64* %y, align 8, !dbg !3899
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3900
  %columns68 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !3901
  %59 = load i64, i64* %columns68, align 8, !dbg !3901
  %60 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3902
  %call69 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %56, i64 0, i64 %57, i64 %59, i64 1, %struct._ExceptionInfo* %60), !dbg !3903
  store %struct._PixelPacket* %call69, %struct._PixelPacket** %q64, align 8, !dbg !3904
  %61 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3905
  %cmp70 = icmp eq %struct._PixelPacket* %61, null, !dbg !3907
  br i1 %cmp70, label %if.then71, label %if.end72, !dbg !3908

if.then71:                                        ; preds = %if.end67
  store i32 0, i32* %status, align 4, !dbg !3909
  br label %for.inc97, !dbg !3911

if.end72:                                         ; preds = %if.end67
  %62 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3912
  %columns73 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 7, !dbg !3914
  %63 = load i64, i64* %columns73, align 8, !dbg !3914
  store i64 %63, i64* %x63, align 8, !dbg !3915
  br label %for.cond74, !dbg !3916

for.cond74:                                       ; preds = %for.inc90, %if.end72
  %64 = load i64, i64* %x63, align 8, !dbg !3917
  %cmp75 = icmp ne i64 %64, 0, !dbg !3919
  br i1 %cmp75, label %for.body76, label %for.end91, !dbg !3920

for.body76:                                       ; preds = %for.cond74
  call void @llvm.dbg.declare(metadata float* %gray, metadata !3921, metadata !DIExpression()), !dbg !3923
  %65 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3924
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %65, i32 0, i32 2, !dbg !3924
  %66 = load i16, i16* %red, align 2, !dbg !3924
  %conv = uitofp i16 %66 to float, !dbg !3925
  store float %conv, float* %gray, align 4, !dbg !3926
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3927
  %intensity = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 83, !dbg !3929
  %68 = load i32, i32* %intensity, align 8, !dbg !3929
  %cmp77 = icmp eq i32 %68, 5, !dbg !3930
  br i1 %cmp77, label %if.then82, label %lor.lhs.false, !dbg !3931

lor.lhs.false:                                    ; preds = %for.body76
  %69 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3932
  %intensity79 = getelementptr inbounds %struct._Image, %struct._Image* %69, i32 0, i32 83, !dbg !3933
  %70 = load i32, i32* %intensity79, align 8, !dbg !3933
  %cmp80 = icmp eq i32 %70, 7, !dbg !3934
  br i1 %cmp80, label %if.then82, label %if.end84, !dbg !3935

if.then82:                                        ; preds = %lor.lhs.false, %for.body76
  %71 = load float, float* %gray, align 4, !dbg !3936
  %call83 = call float @EncodePixelGamma(float %71), !dbg !3937
  store float %call83, float* %gray, align 4, !dbg !3938
  br label %if.end84, !dbg !3939

if.end84:                                         ; preds = %if.then82, %lor.lhs.false
  %72 = load float, float* %gray, align 4, !dbg !3940
  %call85 = call zeroext i16 @ClampToQuantum(float %72), !dbg !3940
  %73 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3940
  %red86 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %73, i32 0, i32 2, !dbg !3940
  store i16 %call85, i16* %red86, align 2, !dbg !3940
  %74 = load float, float* %gray, align 4, !dbg !3941
  %call87 = call zeroext i16 @ClampToQuantum(float %74), !dbg !3941
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3941
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 0, i32 1, !dbg !3941
  store i16 %call87, i16* %green, align 2, !dbg !3941
  %76 = load float, float* %gray, align 4, !dbg !3942
  %call88 = call zeroext i16 @ClampToQuantum(float %76), !dbg !3942
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3942
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i32 0, i32 0, !dbg !3942
  store i16 %call88, i16* %blue, align 2, !dbg !3942
  %78 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !3943
  %incdec.ptr89 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %78, i32 1, !dbg !3943
  store %struct._PixelPacket* %incdec.ptr89, %struct._PixelPacket** %q64, align 8, !dbg !3943
  br label %for.inc90, !dbg !3944

for.inc90:                                        ; preds = %if.end84
  %79 = load i64, i64* %x63, align 8, !dbg !3945
  %dec = add nsw i64 %79, -1, !dbg !3945
  store i64 %dec, i64* %x63, align 8, !dbg !3945
  br label %for.cond74, !dbg !3946, !llvm.loop !3947

for.end91:                                        ; preds = %for.cond74
  %80 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3949
  %81 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3950
  %call92 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %80, %struct._ExceptionInfo* %81), !dbg !3951
  store i32 %call92, i32* %sync62, align 4, !dbg !3952
  %82 = load i32, i32* %sync62, align 4, !dbg !3953
  %cmp93 = icmp eq i32 %82, 0, !dbg !3955
  br i1 %cmp93, label %if.then95, label %if.end96, !dbg !3956

if.then95:                                        ; preds = %for.end91
  store i32 0, i32* %status, align 4, !dbg !3957
  br label %if.end96, !dbg !3958

if.end96:                                         ; preds = %if.then95, %for.end91
  br label %for.inc97, !dbg !3959

for.inc97:                                        ; preds = %if.end96, %if.then71, %if.then66
  %83 = load i64, i64* %y, align 8, !dbg !3960
  %inc98 = add nsw i64 %83, 1, !dbg !3960
  store i64 %inc98, i64* %y, align 8, !dbg !3960
  br label %for.cond58, !dbg !3961, !llvm.loop !3962

for.end99:                                        ; preds = %for.cond58
  %84 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !3964
  %call100 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %84), !dbg !3965
  store %struct._CacheView* %call100, %struct._CacheView** %image_view, align 8, !dbg !3966
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3967
  %call101 = call i32 @SetImageColorspace(%struct._Image* %85, i32 13), !dbg !3969
  %cmp102 = icmp eq i32 %call101, 0, !dbg !3970
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !3971

if.then104:                                       ; preds = %for.end99
  store i32 0, i32* %retval, align 4, !dbg !3972
  br label %return, !dbg !3972

if.end105:                                        ; preds = %for.end99
  %86 = load i32, i32* %status, align 4, !dbg !3973
  store i32 %86, i32* %retval, align 4, !dbg !3974
  br label %return, !dbg !3974

sw.bb106:                                         ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  %87 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3975
  %storage_class107 = getelementptr inbounds %struct._Image, %struct._Image* %87, i32 0, i32 0, !dbg !3978
  %88 = load i32, i32* %storage_class107, align 8, !dbg !3978
  %cmp108 = icmp eq i32 %88, 2, !dbg !3979
  br i1 %cmp108, label %if.then110, label %if.end121, !dbg !3980

if.then110:                                       ; preds = %sw.bb106
  %89 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3981
  %call111 = call i32 @SyncImage(%struct._Image* %89), !dbg !3984
  %cmp112 = icmp eq i32 %call111, 0, !dbg !3985
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !3986

if.then114:                                       ; preds = %if.then110
  store i32 0, i32* %retval, align 4, !dbg !3987
  br label %return, !dbg !3987

if.end115:                                        ; preds = %if.then110
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3988
  %call116 = call i32 @SetImageStorageClass(%struct._Image* %90, i32 1), !dbg !3990
  %cmp117 = icmp eq i32 %call116, 0, !dbg !3991
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !3992

if.then119:                                       ; preds = %if.end115
  store i32 0, i32* %retval, align 4, !dbg !3993
  br label %return, !dbg !3993

if.end120:                                        ; preds = %if.end115
  br label %if.end121, !dbg !3994

if.end121:                                        ; preds = %if.end120, %sw.bb106
  %91 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3995
  %92 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !3996
  %call122 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %91, %struct._ExceptionInfo* %92), !dbg !3997
  store %struct._CacheView* %call122, %struct._CacheView** %image_view, align 8, !dbg !3998
  store i64 0, i64* %y, align 8, !dbg !3999
  br label %for.cond123, !dbg !4001

for.cond123:                                      ; preds = %for.inc203, %if.end121
  %93 = load i64, i64* %y, align 8, !dbg !4002
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4004
  %rows124 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 8, !dbg !4005
  %95 = load i64, i64* %rows124, align 8, !dbg !4005
  %cmp125 = icmp slt i64 %93, %95, !dbg !4006
  br i1 %cmp125, label %for.body127, label %for.end205, !dbg !4007

for.body127:                                      ; preds = %for.cond123
  call void @llvm.dbg.declare(metadata i32* %sync128, metadata !4008, metadata !DIExpression()), !dbg !4010
  call void @llvm.dbg.declare(metadata i64* %x129, metadata !4011, metadata !DIExpression()), !dbg !4012
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q130, metadata !4013, metadata !DIExpression()), !dbg !4014
  %96 = load i32, i32* %status, align 4, !dbg !4015
  %cmp131 = icmp eq i32 %96, 0, !dbg !4017
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !4018

if.then133:                                       ; preds = %for.body127
  br label %for.inc203, !dbg !4019

if.end134:                                        ; preds = %for.body127
  %97 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4020
  %98 = load i64, i64* %y, align 8, !dbg !4021
  %99 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4022
  %columns135 = getelementptr inbounds %struct._Image, %struct._Image* %99, i32 0, i32 7, !dbg !4023
  %100 = load i64, i64* %columns135, align 8, !dbg !4023
  %101 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4024
  %call136 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %97, i64 0, i64 %98, i64 %100, i64 1, %struct._ExceptionInfo* %101), !dbg !4025
  store %struct._PixelPacket* %call136, %struct._PixelPacket** %q130, align 8, !dbg !4026
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4027
  %cmp137 = icmp eq %struct._PixelPacket* %102, null, !dbg !4029
  br i1 %cmp137, label %if.then139, label %if.end140, !dbg !4030

if.then139:                                       ; preds = %if.end134
  store i32 0, i32* %status, align 4, !dbg !4031
  br label %for.inc203, !dbg !4033

if.end140:                                        ; preds = %if.end134
  store i64 0, i64* %x129, align 8, !dbg !4034
  br label %for.cond141, !dbg !4036

for.cond141:                                      ; preds = %for.inc195, %if.end140
  %103 = load i64, i64* %x129, align 8, !dbg !4037
  %104 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4039
  %columns142 = getelementptr inbounds %struct._Image, %struct._Image* %104, i32 0, i32 7, !dbg !4040
  %105 = load i64, i64* %columns142, align 8, !dbg !4040
  %cmp143 = icmp slt i64 %103, %105, !dbg !4041
  br i1 %cmp143, label %for.body145, label %for.end197, !dbg !4042

for.body145:                                      ; preds = %for.cond141
  call void @llvm.dbg.declare(metadata double* %X, metadata !4043, metadata !DIExpression()), !dbg !4045
  call void @llvm.dbg.declare(metadata double* %Y, metadata !4046, metadata !DIExpression()), !dbg !4047
  call void @llvm.dbg.declare(metadata double* %Z, metadata !4048, metadata !DIExpression()), !dbg !4049
  call void @llvm.dbg.declare(metadata i16* %blue146, metadata !4050, metadata !DIExpression()), !dbg !4051
  call void @llvm.dbg.declare(metadata i16* %green147, metadata !4052, metadata !DIExpression()), !dbg !4053
  call void @llvm.dbg.declare(metadata i16* %red148, metadata !4054, metadata !DIExpression()), !dbg !4055
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4056
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 2, !dbg !4056
  %107 = load i16, i16* %red149, align 2, !dbg !4056
  %conv150 = zext i16 %107 to i32, !dbg !4056
  %conv151 = sitofp i32 %conv150 to double, !dbg !4056
  %mul = fmul double 0x3EF0001000100010, %conv151, !dbg !4057
  store double %mul, double* %X, align 8, !dbg !4058
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4059
  %green152 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 1, !dbg !4059
  %109 = load i16, i16* %green152, align 2, !dbg !4059
  %conv153 = zext i16 %109 to i32, !dbg !4059
  %conv154 = sitofp i32 %conv153 to double, !dbg !4059
  %mul155 = fmul double 0x3EF0001000100010, %conv154, !dbg !4060
  store double %mul155, double* %Y, align 8, !dbg !4061
  %110 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4062
  %blue156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %110, i32 0, i32 0, !dbg !4062
  %111 = load i16, i16* %blue156, align 2, !dbg !4062
  %conv157 = zext i16 %111 to i32, !dbg !4062
  %conv158 = sitofp i32 %conv157 to double, !dbg !4062
  %mul159 = fmul double 0x3EF0001000100010, %conv158, !dbg !4063
  store double %mul159, double* %Z, align 8, !dbg !4064
  %112 = load i32, i32* %colorspace.addr, align 4, !dbg !4065
  switch i32 %112, label %sw.default [
    i32 22, label %sw.bb160
    i32 24, label %sw.bb161
    i32 32, label %sw.bb162
    i32 14, label %sw.bb163
    i32 30, label %sw.bb164
    i32 15, label %sw.bb165
    i32 31, label %sw.bb166
    i32 16, label %sw.bb167
    i32 5, label %sw.bb168
    i32 25, label %sw.bb169
    i32 27, label %sw.bb169
    i32 28, label %sw.bb170
    i32 26, label %sw.bb171
    i32 23, label %sw.bb172
    i32 6, label %sw.bb173
    i32 7, label %sw.bb174
    i32 33, label %sw.bb175
    i32 9, label %sw.bb176
    i32 10, label %sw.bb177
    i32 11, label %sw.bb178
  ], !dbg !4066

sw.bb160:                                         ; preds = %for.body145
  %113 = load double, double* %X, align 8, !dbg !4067
  %114 = load double, double* %Y, align 8, !dbg !4070
  %115 = load double, double* %Z, align 8, !dbg !4071
  call void @ConvertCMYToRGB(double %113, double %114, double %115, i16* %red148, i16* %green147, i16* %blue146), !dbg !4072
  br label %sw.epilog, !dbg !4073

sw.bb161:                                         ; preds = %for.body145
  %116 = load double, double* %X, align 8, !dbg !4074
  %117 = load double, double* %Y, align 8, !dbg !4076
  %118 = load double, double* %Z, align 8, !dbg !4077
  call void @ConvertHCLToRGB(double %116, double %117, double %118, i16* %red148, i16* %green147, i16* %blue146), !dbg !4078
  br label %sw.epilog, !dbg !4079

sw.bb162:                                         ; preds = %for.body145
  %119 = load double, double* %X, align 8, !dbg !4080
  %120 = load double, double* %Y, align 8, !dbg !4082
  %121 = load double, double* %Z, align 8, !dbg !4083
  call void @ConvertHCLpToRGB(double %119, double %120, double %121, i16* %red148, i16* %green147, i16* %blue146), !dbg !4084
  br label %sw.epilog, !dbg !4085

sw.bb163:                                         ; preds = %for.body145
  %122 = load double, double* %X, align 8, !dbg !4086
  %123 = load double, double* %Y, align 8, !dbg !4088
  %124 = load double, double* %Z, align 8, !dbg !4089
  call void @ConvertHSBToRGB(double %122, double %123, double %124, i16* %red148, i16* %green147, i16* %blue146), !dbg !4090
  br label %sw.epilog, !dbg !4091

sw.bb164:                                         ; preds = %for.body145
  %125 = load double, double* %X, align 8, !dbg !4092
  %126 = load double, double* %Y, align 8, !dbg !4094
  %127 = load double, double* %Z, align 8, !dbg !4095
  call void @ConvertHSIToRGB(double %125, double %126, double %127, i16* %red148, i16* %green147, i16* %blue146), !dbg !4096
  br label %sw.epilog, !dbg !4097

sw.bb165:                                         ; preds = %for.body145
  %128 = load double, double* %X, align 8, !dbg !4098
  %129 = load double, double* %Y, align 8, !dbg !4100
  %130 = load double, double* %Z, align 8, !dbg !4101
  call void @ConvertHSLToRGB(double %128, double %129, double %130, i16* %red148, i16* %green147, i16* %blue146), !dbg !4102
  br label %sw.epilog, !dbg !4103

sw.bb166:                                         ; preds = %for.body145
  %131 = load double, double* %X, align 8, !dbg !4104
  %132 = load double, double* %Y, align 8, !dbg !4106
  %133 = load double, double* %Z, align 8, !dbg !4107
  call void @ConvertHSVToRGB(double %131, double %132, double %133, i16* %red148, i16* %green147, i16* %blue146), !dbg !4108
  br label %sw.epilog, !dbg !4109

sw.bb167:                                         ; preds = %for.body145
  %134 = load double, double* %X, align 8, !dbg !4110
  %135 = load double, double* %Y, align 8, !dbg !4112
  %136 = load double, double* %Z, align 8, !dbg !4113
  call void @ConvertHWBToRGB(double %134, double %135, double %136, i16* %red148, i16* %green147, i16* %blue146), !dbg !4114
  br label %sw.epilog, !dbg !4115

sw.bb168:                                         ; preds = %for.body145
  %137 = load double, double* %X, align 8, !dbg !4116
  %138 = load double, double* %Y, align 8, !dbg !4118
  %139 = load double, double* %Z, align 8, !dbg !4119
  call void @ConvertLabToRGB(double %137, double %138, double %139, i16* %red148, i16* %green147, i16* %blue146), !dbg !4120
  br label %sw.epilog, !dbg !4121

sw.bb169:                                         ; preds = %for.body145, %for.body145
  %140 = load double, double* %X, align 8, !dbg !4122
  %141 = load double, double* %Y, align 8, !dbg !4124
  %142 = load double, double* %Z, align 8, !dbg !4125
  call void @ConvertLCHabToRGB(double %140, double %141, double %142, i16* %red148, i16* %green147, i16* %blue146), !dbg !4126
  br label %sw.epilog, !dbg !4127

sw.bb170:                                         ; preds = %for.body145
  %143 = load double, double* %X, align 8, !dbg !4128
  %144 = load double, double* %Y, align 8, !dbg !4130
  %145 = load double, double* %Z, align 8, !dbg !4131
  call void @ConvertLCHuvToRGB(double %143, double %144, double %145, i16* %red148, i16* %green147, i16* %blue146), !dbg !4132
  br label %sw.epilog, !dbg !4133

sw.bb171:                                         ; preds = %for.body145
  %146 = load double, double* %X, align 8, !dbg !4134
  %147 = load double, double* %Y, align 8, !dbg !4136
  %148 = load double, double* %Z, align 8, !dbg !4137
  call void @ConvertLMSToRGB(double %146, double %147, double %148, i16* %red148, i16* %green147, i16* %blue146), !dbg !4138
  br label %sw.epilog, !dbg !4139

sw.bb172:                                         ; preds = %for.body145
  %149 = load double, double* %X, align 8, !dbg !4140
  %150 = load double, double* %Y, align 8, !dbg !4142
  %151 = load double, double* %Z, align 8, !dbg !4143
  call void @ConvertLuvToRGB(double %149, double %150, double %151, i16* %red148, i16* %green147, i16* %blue146), !dbg !4144
  br label %sw.epilog, !dbg !4145

sw.bb173:                                         ; preds = %for.body145
  %152 = load double, double* %X, align 8, !dbg !4146
  %153 = load double, double* %Y, align 8, !dbg !4148
  %154 = load double, double* %Z, align 8, !dbg !4149
  call void @ConvertXYZToRGB(double %152, double %153, double %154, i16* %red148, i16* %green147, i16* %blue146), !dbg !4150
  br label %sw.epilog, !dbg !4151

sw.bb174:                                         ; preds = %for.body145
  %155 = load double, double* %X, align 8, !dbg !4152
  %156 = load double, double* %Y, align 8, !dbg !4154
  %157 = load double, double* %Z, align 8, !dbg !4155
  call void @ConvertYCbCrToRGB(double %155, double %156, double %157, i16* %red148, i16* %green147, i16* %blue146), !dbg !4156
  br label %sw.epilog, !dbg !4157

sw.bb175:                                         ; preds = %for.body145
  %158 = load double, double* %X, align 8, !dbg !4158
  %159 = load double, double* %Y, align 8, !dbg !4160
  %160 = load double, double* %Z, align 8, !dbg !4161
  call void @ConvertYDbDrToRGB(double %158, double %159, double %160, i16* %red148, i16* %green147, i16* %blue146), !dbg !4162
  br label %sw.epilog, !dbg !4163

sw.bb176:                                         ; preds = %for.body145
  %161 = load double, double* %X, align 8, !dbg !4164
  %162 = load double, double* %Y, align 8, !dbg !4166
  %163 = load double, double* %Z, align 8, !dbg !4167
  call void @ConvertYIQToRGB(double %161, double %162, double %163, i16* %red148, i16* %green147, i16* %blue146), !dbg !4168
  br label %sw.epilog, !dbg !4169

sw.bb177:                                         ; preds = %for.body145
  %164 = load double, double* %X, align 8, !dbg !4170
  %165 = load double, double* %Y, align 8, !dbg !4172
  %166 = load double, double* %Z, align 8, !dbg !4173
  call void @ConvertYPbPrToRGB(double %164, double %165, double %166, i16* %red148, i16* %green147, i16* %blue146), !dbg !4174
  br label %sw.epilog, !dbg !4175

sw.bb178:                                         ; preds = %for.body145
  %167 = load double, double* %X, align 8, !dbg !4176
  %168 = load double, double* %Y, align 8, !dbg !4178
  %169 = load double, double* %Z, align 8, !dbg !4179
  call void @ConvertYUVToRGB(double %167, double %168, double %169, i16* %red148, i16* %green147, i16* %blue146), !dbg !4180
  br label %sw.epilog, !dbg !4181

sw.default:                                       ; preds = %for.body145
  %170 = load double, double* %X, align 8, !dbg !4182
  %mul179 = fmul double 6.553500e+04, %170, !dbg !4184
  %conv180 = fptoui double %mul179 to i16, !dbg !4185
  store i16 %conv180, i16* %red148, align 2, !dbg !4186
  %171 = load double, double* %Y, align 8, !dbg !4187
  %mul181 = fmul double 6.553500e+04, %171, !dbg !4188
  %conv182 = fptoui double %mul181 to i16, !dbg !4189
  store i16 %conv182, i16* %green147, align 2, !dbg !4190
  %172 = load double, double* %Z, align 8, !dbg !4191
  %mul183 = fmul double 6.553500e+04, %172, !dbg !4192
  %conv184 = fptoui double %mul183 to i16, !dbg !4193
  store i16 %conv184, i16* %blue146, align 2, !dbg !4194
  br label %sw.epilog, !dbg !4195

sw.epilog:                                        ; preds = %sw.default, %sw.bb178, %sw.bb177, %sw.bb176, %sw.bb175, %sw.bb174, %sw.bb173, %sw.bb172, %sw.bb171, %sw.bb170, %sw.bb169, %sw.bb168, %sw.bb167, %sw.bb166, %sw.bb165, %sw.bb164, %sw.bb163, %sw.bb162, %sw.bb161, %sw.bb160
  %173 = load i16, i16* %red148, align 2, !dbg !4196
  %conv185 = uitofp i16 %173 to float, !dbg !4196
  %call186 = call zeroext i16 @ClampToQuantum(float %conv185), !dbg !4196
  %174 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4196
  %red187 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %174, i32 0, i32 2, !dbg !4196
  store i16 %call186, i16* %red187, align 2, !dbg !4196
  %175 = load i16, i16* %green147, align 2, !dbg !4197
  %conv188 = uitofp i16 %175 to float, !dbg !4197
  %call189 = call zeroext i16 @ClampToQuantum(float %conv188), !dbg !4197
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4197
  %green190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %176, i32 0, i32 1, !dbg !4197
  store i16 %call189, i16* %green190, align 2, !dbg !4197
  %177 = load i16, i16* %blue146, align 2, !dbg !4198
  %conv191 = uitofp i16 %177 to float, !dbg !4198
  %call192 = call zeroext i16 @ClampToQuantum(float %conv191), !dbg !4198
  %178 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4198
  %blue193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %178, i32 0, i32 0, !dbg !4198
  store i16 %call192, i16* %blue193, align 2, !dbg !4198
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %q130, align 8, !dbg !4199
  %incdec.ptr194 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 1, !dbg !4199
  store %struct._PixelPacket* %incdec.ptr194, %struct._PixelPacket** %q130, align 8, !dbg !4199
  br label %for.inc195, !dbg !4200

for.inc195:                                       ; preds = %sw.epilog
  %180 = load i64, i64* %x129, align 8, !dbg !4201
  %inc196 = add nsw i64 %180, 1, !dbg !4201
  store i64 %inc196, i64* %x129, align 8, !dbg !4201
  br label %for.cond141, !dbg !4202, !llvm.loop !4203

for.end197:                                       ; preds = %for.cond141
  %181 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4205
  %182 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4206
  %call198 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %181, %struct._ExceptionInfo* %182), !dbg !4207
  store i32 %call198, i32* %sync128, align 4, !dbg !4208
  %183 = load i32, i32* %sync128, align 4, !dbg !4209
  %cmp199 = icmp eq i32 %183, 0, !dbg !4211
  br i1 %cmp199, label %if.then201, label %if.end202, !dbg !4212

if.then201:                                       ; preds = %for.end197
  store i32 0, i32* %status, align 4, !dbg !4213
  br label %if.end202, !dbg !4214

if.end202:                                        ; preds = %if.then201, %for.end197
  br label %for.inc203, !dbg !4215

for.inc203:                                       ; preds = %if.end202, %if.then139, %if.then133
  %184 = load i64, i64* %y, align 8, !dbg !4216
  %inc204 = add nsw i64 %184, 1, !dbg !4216
  store i64 %inc204, i64* %y, align 8, !dbg !4216
  br label %for.cond123, !dbg !4217, !llvm.loop !4218

for.end205:                                       ; preds = %for.cond123
  %185 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4220
  %call206 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %185), !dbg !4221
  store %struct._CacheView* %call206, %struct._CacheView** %image_view, align 8, !dbg !4222
  %186 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4223
  %call207 = call i32 @SetImageColorspace(%struct._Image* %186, i32 13), !dbg !4225
  %cmp208 = icmp eq i32 %call207, 0, !dbg !4226
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !4227

if.then210:                                       ; preds = %for.end205
  store i32 0, i32* %retval, align 4, !dbg !4228
  br label %return, !dbg !4228

if.end211:                                        ; preds = %for.end205
  %187 = load i32, i32* %status, align 4, !dbg !4229
  store i32 %187, i32* %retval, align 4, !dbg !4230
  br label %return, !dbg !4230

sw.bb212:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %value, metadata !4231, metadata !DIExpression()), !dbg !4233
  call void @llvm.dbg.declare(metadata double* %black, metadata !4234, metadata !DIExpression()), !dbg !4235
  call void @llvm.dbg.declare(metadata double* %density, metadata !4236, metadata !DIExpression()), !dbg !4237
  call void @llvm.dbg.declare(metadata double* %film_gamma, metadata !4238, metadata !DIExpression()), !dbg !4239
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !4240, metadata !DIExpression()), !dbg !4241
  call void @llvm.dbg.declare(metadata double* %reference_black, metadata !4242, metadata !DIExpression()), !dbg !4243
  call void @llvm.dbg.declare(metadata double* %reference_white, metadata !4244, metadata !DIExpression()), !dbg !4245
  call void @llvm.dbg.declare(metadata i16** %logmap, metadata !4246, metadata !DIExpression()), !dbg !4247
  store double 0x3FE2D2D2D2D2D2D3, double* %density, align 8, !dbg !4248
  store double 0x3FE2D2D2D2D2D2D3, double* %gamma, align 8, !dbg !4249
  %188 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4250
  %call213 = call i8* @GetImageProperty(%struct._Image* %188, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)), !dbg !4251
  store i8* %call213, i8** %value, align 8, !dbg !4252
  %189 = load i8*, i8** %value, align 8, !dbg !4253
  %cmp214 = icmp ne i8* %189, null, !dbg !4255
  br i1 %cmp214, label %if.then216, label %if.end219, !dbg !4256

if.then216:                                       ; preds = %sw.bb212
  %190 = load i8*, i8** %value, align 8, !dbg !4257
  %call217 = call double @StringToDouble(i8* %190, i8** null), !dbg !4258
  %call218 = call double @PerceptibleReciprocal(double %call217), !dbg !4259
  store double %call218, double* %gamma, align 8, !dbg !4260
  br label %if.end219, !dbg !4261

if.end219:                                        ; preds = %if.then216, %sw.bb212
  store double 6.000000e-01, double* %film_gamma, align 8, !dbg !4262
  %191 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4263
  %call220 = call i8* @GetImageProperty(%struct._Image* %191, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0)), !dbg !4264
  store i8* %call220, i8** %value, align 8, !dbg !4265
  %192 = load i8*, i8** %value, align 8, !dbg !4266
  %cmp221 = icmp ne i8* %192, null, !dbg !4268
  br i1 %cmp221, label %if.then223, label %if.end225, !dbg !4269

if.then223:                                       ; preds = %if.end219
  %193 = load i8*, i8** %value, align 8, !dbg !4270
  %call224 = call double @StringToDouble(i8* %193, i8** null), !dbg !4271
  store double %call224, double* %film_gamma, align 8, !dbg !4272
  br label %if.end225, !dbg !4273

if.end225:                                        ; preds = %if.then223, %if.end219
  store double 9.500000e+01, double* %reference_black, align 8, !dbg !4274
  %194 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4275
  %call226 = call i8* @GetImageProperty(%struct._Image* %194, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)), !dbg !4276
  store i8* %call226, i8** %value, align 8, !dbg !4277
  %195 = load i8*, i8** %value, align 8, !dbg !4278
  %cmp227 = icmp ne i8* %195, null, !dbg !4280
  br i1 %cmp227, label %if.then229, label %if.end231, !dbg !4281

if.then229:                                       ; preds = %if.end225
  %196 = load i8*, i8** %value, align 8, !dbg !4282
  %call230 = call double @StringToDouble(i8* %196, i8** null), !dbg !4283
  store double %call230, double* %reference_black, align 8, !dbg !4284
  br label %if.end231, !dbg !4285

if.end231:                                        ; preds = %if.then229, %if.end225
  store double 6.850000e+02, double* %reference_white, align 8, !dbg !4286
  %197 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4287
  %call232 = call i8* @GetImageProperty(%struct._Image* %197, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0)), !dbg !4288
  store i8* %call232, i8** %value, align 8, !dbg !4289
  %198 = load i8*, i8** %value, align 8, !dbg !4290
  %cmp233 = icmp ne i8* %198, null, !dbg !4292
  br i1 %cmp233, label %if.then235, label %if.end237, !dbg !4293

if.then235:                                       ; preds = %if.end231
  %199 = load i8*, i8** %value, align 8, !dbg !4294
  %call236 = call double @StringToDouble(i8* %199, i8** null), !dbg !4295
  store double %call236, double* %reference_white, align 8, !dbg !4296
  br label %if.end237, !dbg !4297

if.end237:                                        ; preds = %if.then235, %if.end231
  %call238 = call i8* @AcquireQuantumMemory(i64 65536, i64 2) #6, !dbg !4298
  %200 = bitcast i8* %call238 to i16*, !dbg !4299
  store i16* %200, i16** %logmap, align 8, !dbg !4300
  %201 = load i16*, i16** %logmap, align 8, !dbg !4301
  %cmp239 = icmp eq i16* %201, null, !dbg !4303
  br i1 %cmp239, label %if.then241, label %if.end250, !dbg !4304

if.then241:                                       ; preds = %if.end237
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4305
  %cmp242 = icmp ne %struct._Image* %202, null, !dbg !4305
  br i1 %cmp242, label %if.then244, label %if.end249, !dbg !4308

if.then244:                                       ; preds = %if.then241
  %203 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4305
  %exception245 = getelementptr inbounds %struct._Image, %struct._Image* %203, i32 0, i32 58, !dbg !4305
  %204 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4305
  %filename246 = getelementptr inbounds %struct._Image, %struct._Image* %204, i32 0, i32 53, !dbg !4305
  %arraydecay247 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename246, i64 0, i64 0, !dbg !4305
  %call248 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception245, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2006, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay247), !dbg !4305
  br label %if.end249, !dbg !4305

if.end249:                                        ; preds = %if.then244, %if.then241
  store i32 0, i32* %retval, align 4, !dbg !4308
  br label %return, !dbg !4308

if.end250:                                        ; preds = %if.end237
  %205 = load double, double* %reference_black, align 8, !dbg !4309
  %206 = load double, double* %reference_white, align 8, !dbg !4310
  %sub = fsub double %205, %206, !dbg !4311
  %207 = load double, double* %gamma, align 8, !dbg !4312
  %208 = load double, double* %density, align 8, !dbg !4313
  %div = fdiv double %207, %208, !dbg !4314
  %mul251 = fmul double %sub, %div, !dbg !4315
  %mul252 = fmul double %mul251, 2.000000e-03, !dbg !4316
  %209 = load double, double* %film_gamma, align 8, !dbg !4317
  %div253 = fdiv double %mul252, %209, !dbg !4318
  %call254 = call double @pow(double 1.000000e+01, double %div253) #7, !dbg !4319
  store double %call254, double* %black, align 8, !dbg !4320
  store i64 0, i64* %i, align 8, !dbg !4321
  br label %for.cond255, !dbg !4323

for.cond255:                                      ; preds = %for.inc262, %if.end250
  %210 = load i64, i64* %i, align 8, !dbg !4324
  %211 = load double, double* %reference_black, align 8, !dbg !4326
  %mul256 = fmul double %211, 6.553500e+04, !dbg !4327
  %div257 = fdiv double %mul256, 1.024000e+03, !dbg !4328
  %conv258 = fptosi double %div257 to i64, !dbg !4329
  %cmp259 = icmp sle i64 %210, %conv258, !dbg !4330
  br i1 %cmp259, label %for.body261, label %for.end264, !dbg !4331

for.body261:                                      ; preds = %for.cond255
  %212 = load i16*, i16** %logmap, align 8, !dbg !4332
  %213 = load i64, i64* %i, align 8, !dbg !4333
  %arrayidx = getelementptr inbounds i16, i16* %212, i64 %213, !dbg !4332
  store i16 0, i16* %arrayidx, align 2, !dbg !4334
  br label %for.inc262, !dbg !4332

for.inc262:                                       ; preds = %for.body261
  %214 = load i64, i64* %i, align 8, !dbg !4335
  %inc263 = add nsw i64 %214, 1, !dbg !4335
  store i64 %inc263, i64* %i, align 8, !dbg !4335
  br label %for.cond255, !dbg !4336, !llvm.loop !4337

for.end264:                                       ; preds = %for.cond255
  br label %for.cond265, !dbg !4339

for.cond265:                                      ; preds = %for.inc288, %for.end264
  %215 = load i64, i64* %i, align 8, !dbg !4340
  %216 = load double, double* %reference_white, align 8, !dbg !4343
  %mul266 = fmul double %216, 6.553500e+04, !dbg !4344
  %div267 = fdiv double %mul266, 1.024000e+03, !dbg !4345
  %conv268 = fptosi double %div267 to i64, !dbg !4346
  %cmp269 = icmp slt i64 %215, %conv268, !dbg !4347
  br i1 %cmp269, label %for.body271, label %for.end290, !dbg !4348

for.body271:                                      ; preds = %for.cond265
  %217 = load double, double* %black, align 8, !dbg !4349
  %sub272 = fsub double 1.000000e+00, %217, !dbg !4350
  %div273 = fdiv double 6.553500e+04, %sub272, !dbg !4351
  %218 = load i64, i64* %i, align 8, !dbg !4352
  %conv274 = sitofp i64 %218 to double, !dbg !4352
  %mul275 = fmul double 1.024000e+03, %conv274, !dbg !4353
  %div276 = fdiv double %mul275, 6.553500e+04, !dbg !4354
  %219 = load double, double* %reference_white, align 8, !dbg !4355
  %sub277 = fsub double %div276, %219, !dbg !4356
  %220 = load double, double* %gamma, align 8, !dbg !4357
  %221 = load double, double* %density, align 8, !dbg !4358
  %div278 = fdiv double %220, %221, !dbg !4359
  %mul279 = fmul double %sub277, %div278, !dbg !4360
  %mul280 = fmul double %mul279, 2.000000e-03, !dbg !4361
  %222 = load double, double* %film_gamma, align 8, !dbg !4362
  %div281 = fdiv double %mul280, %222, !dbg !4363
  %call282 = call double @pow(double 1.000000e+01, double %div281) #7, !dbg !4364
  %223 = load double, double* %black, align 8, !dbg !4365
  %sub283 = fsub double %call282, %223, !dbg !4366
  %mul284 = fmul double %div273, %sub283, !dbg !4367
  %conv285 = fptrunc double %mul284 to float, !dbg !4368
  %call286 = call zeroext i16 @ClampToQuantum(float %conv285), !dbg !4369
  %224 = load i16*, i16** %logmap, align 8, !dbg !4370
  %225 = load i64, i64* %i, align 8, !dbg !4371
  %arrayidx287 = getelementptr inbounds i16, i16* %224, i64 %225, !dbg !4370
  store i16 %call286, i16* %arrayidx287, align 2, !dbg !4372
  br label %for.inc288, !dbg !4370

for.inc288:                                       ; preds = %for.body271
  %226 = load i64, i64* %i, align 8, !dbg !4373
  %inc289 = add nsw i64 %226, 1, !dbg !4373
  store i64 %inc289, i64* %i, align 8, !dbg !4373
  br label %for.cond265, !dbg !4374, !llvm.loop !4375

for.end290:                                       ; preds = %for.cond265
  br label %for.cond291, !dbg !4377

for.cond291:                                      ; preds = %for.inc296, %for.end290
  %227 = load i64, i64* %i, align 8, !dbg !4378
  %cmp292 = icmp sle i64 %227, 65535, !dbg !4381
  br i1 %cmp292, label %for.body294, label %for.end298, !dbg !4382

for.body294:                                      ; preds = %for.cond291
  %228 = load i16*, i16** %logmap, align 8, !dbg !4383
  %229 = load i64, i64* %i, align 8, !dbg !4384
  %arrayidx295 = getelementptr inbounds i16, i16* %228, i64 %229, !dbg !4383
  store i16 -1, i16* %arrayidx295, align 2, !dbg !4385
  br label %for.inc296, !dbg !4383

for.inc296:                                       ; preds = %for.body294
  %230 = load i64, i64* %i, align 8, !dbg !4386
  %inc297 = add nsw i64 %230, 1, !dbg !4386
  store i64 %inc297, i64* %i, align 8, !dbg !4386
  br label %for.cond291, !dbg !4387, !llvm.loop !4388

for.end298:                                       ; preds = %for.cond291
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4390
  %storage_class299 = getelementptr inbounds %struct._Image, %struct._Image* %231, i32 0, i32 0, !dbg !4392
  %232 = load i32, i32* %storage_class299, align 8, !dbg !4392
  %cmp300 = icmp eq i32 %232, 2, !dbg !4393
  br i1 %cmp300, label %if.then302, label %if.end313, !dbg !4394

if.then302:                                       ; preds = %for.end298
  %233 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4395
  %call303 = call i32 @SyncImage(%struct._Image* %233), !dbg !4398
  %cmp304 = icmp eq i32 %call303, 0, !dbg !4399
  br i1 %cmp304, label %if.then306, label %if.end307, !dbg !4400

if.then306:                                       ; preds = %if.then302
  store i32 0, i32* %retval, align 4, !dbg !4401
  br label %return, !dbg !4401

if.end307:                                        ; preds = %if.then302
  %234 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4402
  %call308 = call i32 @SetImageStorageClass(%struct._Image* %234, i32 1), !dbg !4404
  %cmp309 = icmp eq i32 %call308, 0, !dbg !4405
  br i1 %cmp309, label %if.then311, label %if.end312, !dbg !4406

if.then311:                                       ; preds = %if.end307
  store i32 0, i32* %retval, align 4, !dbg !4407
  br label %return, !dbg !4407

if.end312:                                        ; preds = %if.end307
  br label %if.end313, !dbg !4408

if.end313:                                        ; preds = %if.end312, %for.end298
  %235 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4409
  %236 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4410
  %call314 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %235, %struct._ExceptionInfo* %236), !dbg !4411
  store %struct._CacheView* %call314, %struct._CacheView** %image_view, align 8, !dbg !4412
  store i64 0, i64* %y, align 8, !dbg !4413
  br label %for.cond315, !dbg !4415

for.cond315:                                      ; preds = %for.inc373, %if.end313
  %237 = load i64, i64* %y, align 8, !dbg !4416
  %238 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4418
  %rows316 = getelementptr inbounds %struct._Image, %struct._Image* %238, i32 0, i32 8, !dbg !4419
  %239 = load i64, i64* %rows316, align 8, !dbg !4419
  %cmp317 = icmp slt i64 %237, %239, !dbg !4420
  br i1 %cmp317, label %for.body319, label %for.end375, !dbg !4421

for.body319:                                      ; preds = %for.cond315
  call void @llvm.dbg.declare(metadata i32* %sync320, metadata !4422, metadata !DIExpression()), !dbg !4424
  call void @llvm.dbg.declare(metadata i64* %x321, metadata !4425, metadata !DIExpression()), !dbg !4426
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q322, metadata !4427, metadata !DIExpression()), !dbg !4428
  %240 = load i32, i32* %status, align 4, !dbg !4429
  %cmp323 = icmp eq i32 %240, 0, !dbg !4431
  br i1 %cmp323, label %if.then325, label %if.end326, !dbg !4432

if.then325:                                       ; preds = %for.body319
  br label %for.inc373, !dbg !4433

if.end326:                                        ; preds = %for.body319
  %241 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4434
  %242 = load i64, i64* %y, align 8, !dbg !4435
  %243 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4436
  %columns327 = getelementptr inbounds %struct._Image, %struct._Image* %243, i32 0, i32 7, !dbg !4437
  %244 = load i64, i64* %columns327, align 8, !dbg !4437
  %245 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4438
  %call328 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %241, i64 0, i64 %242, i64 %244, i64 1, %struct._ExceptionInfo* %245), !dbg !4439
  store %struct._PixelPacket* %call328, %struct._PixelPacket** %q322, align 8, !dbg !4440
  %246 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4441
  %cmp329 = icmp eq %struct._PixelPacket* %246, null, !dbg !4443
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !4444

if.then331:                                       ; preds = %if.end326
  store i32 0, i32* %status, align 4, !dbg !4445
  br label %for.inc373, !dbg !4447

if.end332:                                        ; preds = %if.end326
  %247 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4448
  %columns333 = getelementptr inbounds %struct._Image, %struct._Image* %247, i32 0, i32 7, !dbg !4450
  %248 = load i64, i64* %columns333, align 8, !dbg !4450
  store i64 %248, i64* %x321, align 8, !dbg !4451
  br label %for.cond334, !dbg !4452

for.cond334:                                      ; preds = %for.inc365, %if.end332
  %249 = load i64, i64* %x321, align 8, !dbg !4453
  %cmp335 = icmp ne i64 %249, 0, !dbg !4455
  br i1 %cmp335, label %for.body337, label %for.end367, !dbg !4456

for.body337:                                      ; preds = %for.cond334
  call void @llvm.dbg.declare(metadata i16* %blue338, metadata !4457, metadata !DIExpression()), !dbg !4459
  call void @llvm.dbg.declare(metadata i16* %green339, metadata !4460, metadata !DIExpression()), !dbg !4461
  call void @llvm.dbg.declare(metadata i16* %red340, metadata !4462, metadata !DIExpression()), !dbg !4463
  %250 = load i16*, i16** %logmap, align 8, !dbg !4464
  %251 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4465
  %red341 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %251, i32 0, i32 2, !dbg !4465
  %252 = load i16, i16* %red341, align 2, !dbg !4465
  %call342 = call i32 @ScaleQuantumToMap(i16 zeroext %252), !dbg !4466
  %idxprom = zext i32 %call342 to i64, !dbg !4464
  %arrayidx343 = getelementptr inbounds i16, i16* %250, i64 %idxprom, !dbg !4464
  %253 = load i16, i16* %arrayidx343, align 2, !dbg !4464
  %conv344 = uitofp i16 %253 to float, !dbg !4467
  %call345 = call float @EncodePixelGamma(float %conv344), !dbg !4468
  %call346 = call zeroext i16 @ClampToQuantum(float %call345), !dbg !4469
  store i16 %call346, i16* %red340, align 2, !dbg !4470
  %254 = load i16*, i16** %logmap, align 8, !dbg !4471
  %255 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4472
  %green347 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %255, i32 0, i32 1, !dbg !4472
  %256 = load i16, i16* %green347, align 2, !dbg !4472
  %call348 = call i32 @ScaleQuantumToMap(i16 zeroext %256), !dbg !4473
  %idxprom349 = zext i32 %call348 to i64, !dbg !4471
  %arrayidx350 = getelementptr inbounds i16, i16* %254, i64 %idxprom349, !dbg !4471
  %257 = load i16, i16* %arrayidx350, align 2, !dbg !4471
  %conv351 = uitofp i16 %257 to float, !dbg !4474
  %call352 = call float @EncodePixelGamma(float %conv351), !dbg !4475
  %call353 = call zeroext i16 @ClampToQuantum(float %call352), !dbg !4476
  store i16 %call353, i16* %green339, align 2, !dbg !4477
  %258 = load i16*, i16** %logmap, align 8, !dbg !4478
  %259 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4479
  %blue354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %259, i32 0, i32 0, !dbg !4479
  %260 = load i16, i16* %blue354, align 2, !dbg !4479
  %call355 = call i32 @ScaleQuantumToMap(i16 zeroext %260), !dbg !4480
  %idxprom356 = zext i32 %call355 to i64, !dbg !4478
  %arrayidx357 = getelementptr inbounds i16, i16* %258, i64 %idxprom356, !dbg !4478
  %261 = load i16, i16* %arrayidx357, align 2, !dbg !4478
  %conv358 = uitofp i16 %261 to float, !dbg !4481
  %call359 = call float @EncodePixelGamma(float %conv358), !dbg !4482
  %call360 = call zeroext i16 @ClampToQuantum(float %call359), !dbg !4483
  store i16 %call360, i16* %blue338, align 2, !dbg !4484
  %262 = load i16, i16* %red340, align 2, !dbg !4485
  %263 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4485
  %red361 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %263, i32 0, i32 2, !dbg !4485
  store i16 %262, i16* %red361, align 2, !dbg !4485
  %264 = load i16, i16* %green339, align 2, !dbg !4486
  %265 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4486
  %green362 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %265, i32 0, i32 1, !dbg !4486
  store i16 %264, i16* %green362, align 2, !dbg !4486
  %266 = load i16, i16* %blue338, align 2, !dbg !4487
  %267 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4487
  %blue363 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %267, i32 0, i32 0, !dbg !4487
  store i16 %266, i16* %blue363, align 2, !dbg !4487
  %268 = load %struct._PixelPacket*, %struct._PixelPacket** %q322, align 8, !dbg !4488
  %incdec.ptr364 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %268, i32 1, !dbg !4488
  store %struct._PixelPacket* %incdec.ptr364, %struct._PixelPacket** %q322, align 8, !dbg !4488
  br label %for.inc365, !dbg !4489

for.inc365:                                       ; preds = %for.body337
  %269 = load i64, i64* %x321, align 8, !dbg !4490
  %dec366 = add nsw i64 %269, -1, !dbg !4490
  store i64 %dec366, i64* %x321, align 8, !dbg !4490
  br label %for.cond334, !dbg !4491, !llvm.loop !4492

for.end367:                                       ; preds = %for.cond334
  %270 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4494
  %271 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4495
  %call368 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %270, %struct._ExceptionInfo* %271), !dbg !4496
  store i32 %call368, i32* %sync320, align 4, !dbg !4497
  %272 = load i32, i32* %sync320, align 4, !dbg !4498
  %cmp369 = icmp eq i32 %272, 0, !dbg !4500
  br i1 %cmp369, label %if.then371, label %if.end372, !dbg !4501

if.then371:                                       ; preds = %for.end367
  store i32 0, i32* %status, align 4, !dbg !4502
  br label %if.end372, !dbg !4503

if.end372:                                        ; preds = %if.then371, %for.end367
  br label %for.inc373, !dbg !4504

for.inc373:                                       ; preds = %if.end372, %if.then331, %if.then325
  %273 = load i64, i64* %y, align 8, !dbg !4505
  %inc374 = add nsw i64 %273, 1, !dbg !4505
  store i64 %inc374, i64* %y, align 8, !dbg !4505
  br label %for.cond315, !dbg !4506, !llvm.loop !4507

for.end375:                                       ; preds = %for.cond315
  %274 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4509
  %call376 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %274), !dbg !4510
  store %struct._CacheView* %call376, %struct._CacheView** %image_view, align 8, !dbg !4511
  %275 = load i16*, i16** %logmap, align 8, !dbg !4512
  %276 = bitcast i16* %275 to i8*, !dbg !4512
  %call377 = call i8* @RelinquishMagickMemory(i8* %276), !dbg !4513
  %277 = bitcast i8* %call377 to i16*, !dbg !4514
  store i16* %277, i16** %logmap, align 8, !dbg !4515
  %278 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4516
  %call378 = call i32 @SetImageColorspace(%struct._Image* %278, i32 13), !dbg !4518
  %cmp379 = icmp eq i32 %call378, 0, !dbg !4519
  br i1 %cmp379, label %if.then381, label %if.end382, !dbg !4520

if.then381:                                       ; preds = %for.end375
  store i32 0, i32* %retval, align 4, !dbg !4521
  br label %return, !dbg !4521

if.end382:                                        ; preds = %for.end375
  %279 = load i32, i32* %status, align 4, !dbg !4522
  store i32 %279, i32* %retval, align 4, !dbg !4523
  br label %return, !dbg !4523

sw.bb383:                                         ; preds = %if.end, %if.end
  %280 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4524
  %storage_class384 = getelementptr inbounds %struct._Image, %struct._Image* %280, i32 0, i32 0, !dbg !4527
  %281 = load i32, i32* %storage_class384, align 8, !dbg !4527
  %cmp385 = icmp eq i32 %281, 2, !dbg !4528
  br i1 %cmp385, label %if.then387, label %if.end398, !dbg !4529

if.then387:                                       ; preds = %sw.bb383
  %282 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4530
  %call388 = call i32 @SyncImage(%struct._Image* %282), !dbg !4533
  %cmp389 = icmp eq i32 %call388, 0, !dbg !4534
  br i1 %cmp389, label %if.then391, label %if.end392, !dbg !4535

if.then391:                                       ; preds = %if.then387
  store i32 0, i32* %retval, align 4, !dbg !4536
  br label %return, !dbg !4536

if.end392:                                        ; preds = %if.then387
  %283 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4537
  %call393 = call i32 @SetImageStorageClass(%struct._Image* %283, i32 1), !dbg !4539
  %cmp394 = icmp eq i32 %call393, 0, !dbg !4540
  br i1 %cmp394, label %if.then396, label %if.end397, !dbg !4541

if.then396:                                       ; preds = %if.end392
  store i32 0, i32* %retval, align 4, !dbg !4542
  br label %return, !dbg !4542

if.end397:                                        ; preds = %if.end392
  br label %if.end398, !dbg !4543

if.end398:                                        ; preds = %if.end397, %sw.bb383
  %284 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4544
  %285 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4545
  %call399 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %284, %struct._ExceptionInfo* %285), !dbg !4546
  store %struct._CacheView* %call399, %struct._CacheView** %image_view, align 8, !dbg !4547
  store i64 0, i64* %y, align 8, !dbg !4548
  br label %for.cond400, !dbg !4550

for.cond400:                                      ; preds = %for.inc450, %if.end398
  %286 = load i64, i64* %y, align 8, !dbg !4551
  %287 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4553
  %rows401 = getelementptr inbounds %struct._Image, %struct._Image* %287, i32 0, i32 8, !dbg !4554
  %288 = load i64, i64* %rows401, align 8, !dbg !4554
  %cmp402 = icmp slt i64 %286, %288, !dbg !4555
  br i1 %cmp402, label %for.body404, label %for.end452, !dbg !4556

for.body404:                                      ; preds = %for.cond400
  call void @llvm.dbg.declare(metadata i32* %sync405, metadata !4557, metadata !DIExpression()), !dbg !4559
  call void @llvm.dbg.declare(metadata i64* %x406, metadata !4560, metadata !DIExpression()), !dbg !4561
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q407, metadata !4562, metadata !DIExpression()), !dbg !4563
  %289 = load i32, i32* %status, align 4, !dbg !4564
  %cmp408 = icmp eq i32 %289, 0, !dbg !4566
  br i1 %cmp408, label %if.then410, label %if.end411, !dbg !4567

if.then410:                                       ; preds = %for.body404
  br label %for.inc450, !dbg !4568

if.end411:                                        ; preds = %for.body404
  %290 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4569
  %291 = load i64, i64* %y, align 8, !dbg !4570
  %292 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4571
  %columns412 = getelementptr inbounds %struct._Image, %struct._Image* %292, i32 0, i32 7, !dbg !4572
  %293 = load i64, i64* %columns412, align 8, !dbg !4572
  %294 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4573
  %call413 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %290, i64 0, i64 %291, i64 %293, i64 1, %struct._ExceptionInfo* %294), !dbg !4574
  store %struct._PixelPacket* %call413, %struct._PixelPacket** %q407, align 8, !dbg !4575
  %295 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4576
  %cmp414 = icmp eq %struct._PixelPacket* %295, null, !dbg !4578
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !4579

if.then416:                                       ; preds = %if.end411
  store i32 0, i32* %status, align 4, !dbg !4580
  br label %for.inc450, !dbg !4582

if.end417:                                        ; preds = %if.end411
  %296 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4583
  %columns418 = getelementptr inbounds %struct._Image, %struct._Image* %296, i32 0, i32 7, !dbg !4585
  %297 = load i64, i64* %columns418, align 8, !dbg !4585
  store i64 %297, i64* %x406, align 8, !dbg !4586
  br label %for.cond419, !dbg !4587

for.cond419:                                      ; preds = %for.inc442, %if.end417
  %298 = load i64, i64* %x406, align 8, !dbg !4588
  %cmp420 = icmp ne i64 %298, 0, !dbg !4590
  br i1 %cmp420, label %for.body422, label %for.end444, !dbg !4591

for.body422:                                      ; preds = %for.cond419
  call void @llvm.dbg.declare(metadata i16* %blue423, metadata !4592, metadata !DIExpression()), !dbg !4594
  call void @llvm.dbg.declare(metadata i16* %green424, metadata !4595, metadata !DIExpression()), !dbg !4596
  call void @llvm.dbg.declare(metadata i16* %red425, metadata !4597, metadata !DIExpression()), !dbg !4598
  %299 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4599
  %red426 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %299, i32 0, i32 2, !dbg !4599
  %300 = load i16, i16* %red426, align 2, !dbg !4599
  %conv427 = uitofp i16 %300 to float, !dbg !4600
  %call428 = call float @EncodePixelGamma(float %conv427), !dbg !4601
  %call429 = call zeroext i16 @ClampToQuantum(float %call428), !dbg !4602
  store i16 %call429, i16* %red425, align 2, !dbg !4603
  %301 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4604
  %green430 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %301, i32 0, i32 1, !dbg !4604
  %302 = load i16, i16* %green430, align 2, !dbg !4604
  %conv431 = uitofp i16 %302 to float, !dbg !4605
  %call432 = call float @EncodePixelGamma(float %conv431), !dbg !4606
  %call433 = call zeroext i16 @ClampToQuantum(float %call432), !dbg !4607
  store i16 %call433, i16* %green424, align 2, !dbg !4608
  %303 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4609
  %blue434 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %303, i32 0, i32 0, !dbg !4609
  %304 = load i16, i16* %blue434, align 2, !dbg !4609
  %conv435 = uitofp i16 %304 to float, !dbg !4610
  %call436 = call float @EncodePixelGamma(float %conv435), !dbg !4611
  %call437 = call zeroext i16 @ClampToQuantum(float %call436), !dbg !4612
  store i16 %call437, i16* %blue423, align 2, !dbg !4613
  %305 = load i16, i16* %red425, align 2, !dbg !4614
  %306 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4614
  %red438 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %306, i32 0, i32 2, !dbg !4614
  store i16 %305, i16* %red438, align 2, !dbg !4614
  %307 = load i16, i16* %green424, align 2, !dbg !4615
  %308 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4615
  %green439 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %308, i32 0, i32 1, !dbg !4615
  store i16 %307, i16* %green439, align 2, !dbg !4615
  %309 = load i16, i16* %blue423, align 2, !dbg !4616
  %310 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4616
  %blue440 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %310, i32 0, i32 0, !dbg !4616
  store i16 %309, i16* %blue440, align 2, !dbg !4616
  %311 = load %struct._PixelPacket*, %struct._PixelPacket** %q407, align 8, !dbg !4617
  %incdec.ptr441 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %311, i32 1, !dbg !4617
  store %struct._PixelPacket* %incdec.ptr441, %struct._PixelPacket** %q407, align 8, !dbg !4617
  br label %for.inc442, !dbg !4618

for.inc442:                                       ; preds = %for.body422
  %312 = load i64, i64* %x406, align 8, !dbg !4619
  %dec443 = add nsw i64 %312, -1, !dbg !4619
  store i64 %dec443, i64* %x406, align 8, !dbg !4619
  br label %for.cond419, !dbg !4620, !llvm.loop !4621

for.end444:                                       ; preds = %for.cond419
  %313 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4623
  %314 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !4624
  %call445 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %313, %struct._ExceptionInfo* %314), !dbg !4625
  store i32 %call445, i32* %sync405, align 4, !dbg !4626
  %315 = load i32, i32* %sync405, align 4, !dbg !4627
  %cmp446 = icmp eq i32 %315, 0, !dbg !4629
  br i1 %cmp446, label %if.then448, label %if.end449, !dbg !4630

if.then448:                                       ; preds = %for.end444
  store i32 0, i32* %status, align 4, !dbg !4631
  br label %if.end449, !dbg !4632

if.end449:                                        ; preds = %if.then448, %for.end444
  br label %for.inc450, !dbg !4633

for.inc450:                                       ; preds = %if.end449, %if.then416, %if.then410
  %316 = load i64, i64* %y, align 8, !dbg !4634
  %inc451 = add nsw i64 %316, 1, !dbg !4634
  store i64 %inc451, i64* %y, align 8, !dbg !4634
  br label %for.cond400, !dbg !4635, !llvm.loop !4636

for.end452:                                       ; preds = %for.cond400
  %317 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !4638
  %call453 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %317), !dbg !4639
  store %struct._CacheView* %call453, %struct._CacheView** %image_view, align 8, !dbg !4640
  %318 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4641
  %call454 = call i32 @SetImageColorspace(%struct._Image* %318, i32 13), !dbg !4643
  %cmp455 = icmp eq i32 %call454, 0, !dbg !4644
  br i1 %cmp455, label %if.then457, label %if.end458, !dbg !4645

if.then457:                                       ; preds = %for.end452
  store i32 0, i32* %retval, align 4, !dbg !4646
  br label %return, !dbg !4646

if.end458:                                        ; preds = %for.end452
  %319 = load i32, i32* %status, align 4, !dbg !4647
  store i32 %319, i32* %retval, align 4, !dbg !4648
  br label %return, !dbg !4648

sw.default459:                                    ; preds = %if.end
  br label %sw.epilog460, !dbg !4649

sw.epilog460:                                     ; preds = %sw.default459
  %call461 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !4650
  %320 = bitcast i8* %call461 to %struct._TransformPacket*, !dbg !4651
  store %struct._TransformPacket* %320, %struct._TransformPacket** %x_map, align 8, !dbg !4652
  %call462 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !4653
  %321 = bitcast i8* %call462 to %struct._TransformPacket*, !dbg !4654
  store %struct._TransformPacket* %321, %struct._TransformPacket** %y_map, align 8, !dbg !4655
  %call463 = call i8* @AcquireQuantumMemory(i64 65536, i64 12) #6, !dbg !4656
  %322 = bitcast i8* %call463 to %struct._TransformPacket*, !dbg !4657
  store %struct._TransformPacket* %322, %struct._TransformPacket** %z_map, align 8, !dbg !4658
  %323 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4659
  %cmp464 = icmp eq %struct._TransformPacket* %323, null, !dbg !4661
  br i1 %cmp464, label %if.then472, label %lor.lhs.false466, !dbg !4662

lor.lhs.false466:                                 ; preds = %sw.epilog460
  %324 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4663
  %cmp467 = icmp eq %struct._TransformPacket* %324, null, !dbg !4664
  br i1 %cmp467, label %if.then472, label %lor.lhs.false469, !dbg !4665

lor.lhs.false469:                                 ; preds = %lor.lhs.false466
  %325 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4666
  %cmp470 = icmp eq %struct._TransformPacket* %325, null, !dbg !4667
  br i1 %cmp470, label %if.then472, label %if.end496, !dbg !4668

if.then472:                                       ; preds = %lor.lhs.false469, %lor.lhs.false466, %sw.epilog460
  %326 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4669
  %cmp473 = icmp ne %struct._TransformPacket* %326, null, !dbg !4672
  br i1 %cmp473, label %if.then475, label %if.end477, !dbg !4673

if.then475:                                       ; preds = %if.then472
  %327 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4674
  %328 = bitcast %struct._TransformPacket* %327 to i8*, !dbg !4674
  %call476 = call i8* @RelinquishMagickMemory(i8* %328), !dbg !4675
  %329 = bitcast i8* %call476 to %struct._TransformPacket*, !dbg !4676
  store %struct._TransformPacket* %329, %struct._TransformPacket** %z_map, align 8, !dbg !4677
  br label %if.end477, !dbg !4678

if.end477:                                        ; preds = %if.then475, %if.then472
  %330 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4679
  %cmp478 = icmp ne %struct._TransformPacket* %330, null, !dbg !4681
  br i1 %cmp478, label %if.then480, label %if.end482, !dbg !4682

if.then480:                                       ; preds = %if.end477
  %331 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4683
  %332 = bitcast %struct._TransformPacket* %331 to i8*, !dbg !4683
  %call481 = call i8* @RelinquishMagickMemory(i8* %332), !dbg !4684
  %333 = bitcast i8* %call481 to %struct._TransformPacket*, !dbg !4685
  store %struct._TransformPacket* %333, %struct._TransformPacket** %y_map, align 8, !dbg !4686
  br label %if.end482, !dbg !4687

if.end482:                                        ; preds = %if.then480, %if.end477
  %334 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4688
  %cmp483 = icmp ne %struct._TransformPacket* %334, null, !dbg !4690
  br i1 %cmp483, label %if.then485, label %if.end487, !dbg !4691

if.then485:                                       ; preds = %if.end482
  %335 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4692
  %336 = bitcast %struct._TransformPacket* %335 to i8*, !dbg !4692
  %call486 = call i8* @RelinquishMagickMemory(i8* %336), !dbg !4693
  %337 = bitcast i8* %call486 to %struct._TransformPacket*, !dbg !4694
  store %struct._TransformPacket* %337, %struct._TransformPacket** %x_map, align 8, !dbg !4695
  br label %if.end487, !dbg !4696

if.end487:                                        ; preds = %if.then485, %if.end482
  %338 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4697
  %cmp488 = icmp ne %struct._Image* %338, null, !dbg !4697
  br i1 %cmp488, label %if.then490, label %if.end495, !dbg !4700

if.then490:                                       ; preds = %if.end487
  %339 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4697
  %exception491 = getelementptr inbounds %struct._Image, %struct._Image* %339, i32 0, i32 58, !dbg !4697
  %340 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4697
  %filename492 = getelementptr inbounds %struct._Image, %struct._Image* %340, i32 0, i32 53, !dbg !4697
  %arraydecay493 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename492, i64 0, i64 0, !dbg !4697
  %call494 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception491, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2164, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i8* %arraydecay493), !dbg !4697
  br label %if.end495, !dbg !4697

if.end495:                                        ; preds = %if.then490, %if.end487
  store i32 0, i32* %retval, align 4, !dbg !4700
  br label %return, !dbg !4700

if.end496:                                        ; preds = %lor.lhs.false469
  %341 = load i32, i32* %colorspace.addr, align 4, !dbg !4701
  switch i32 %341, label %sw.default758 [
    i32 4, label %sw.bb497
    i32 18, label %sw.bb561
    i32 20, label %sw.bb626
    i32 8, label %sw.bb691
  ], !dbg !4702

sw.bb497:                                         ; preds = %if.end496
  store i64 0, i64* %i, align 8, !dbg !4703
  br label %for.cond498, !dbg !4707

for.cond498:                                      ; preds = %for.inc558, %sw.bb497
  %342 = load i64, i64* %i, align 8, !dbg !4708
  %cmp499 = icmp sle i64 %342, 65535, !dbg !4710
  br i1 %cmp499, label %for.body501, label %for.end560, !dbg !4711

for.body501:                                      ; preds = %for.cond498
  %343 = load i64, i64* %i, align 8, !dbg !4712
  %conv502 = sitofp i64 %343 to double, !dbg !4714
  %mul503 = fmul double 1.000000e+00, %conv502, !dbg !4715
  %conv504 = fptrunc double %mul503 to float, !dbg !4716
  %344 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4717
  %345 = load i64, i64* %i, align 8, !dbg !4718
  %arrayidx505 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %344, i64 %345, !dbg !4717
  %x506 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx505, i32 0, i32 0, !dbg !4719
  store float %conv504, float* %x506, align 4, !dbg !4720
  %346 = load i64, i64* %i, align 8, !dbg !4721
  %conv507 = sitofp i64 %346 to double, !dbg !4722
  %mul508 = fmul double 2.000000e+00, %conv507, !dbg !4723
  %sub509 = fsub double %mul508, 6.553500e+04, !dbg !4724
  %mul510 = fmul double 5.000000e-01, %sub509, !dbg !4725
  %conv511 = fptrunc double %mul510 to float, !dbg !4726
  %347 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4727
  %348 = load i64, i64* %i, align 8, !dbg !4728
  %arrayidx512 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %347, i64 %348, !dbg !4727
  %x513 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx512, i32 0, i32 0, !dbg !4729
  store float %conv511, float* %x513, align 4, !dbg !4730
  %349 = load i64, i64* %i, align 8, !dbg !4731
  %conv514 = sitofp i64 %349 to double, !dbg !4732
  %mul515 = fmul double 2.000000e+00, %conv514, !dbg !4733
  %sub516 = fsub double %mul515, 6.553500e+04, !dbg !4734
  %mul517 = fmul double -3.333400e-01, %sub516, !dbg !4735
  %conv518 = fptrunc double %mul517 to float, !dbg !4736
  %350 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4737
  %351 = load i64, i64* %i, align 8, !dbg !4738
  %arrayidx519 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %350, i64 %351, !dbg !4737
  %x520 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx519, i32 0, i32 0, !dbg !4739
  store float %conv518, float* %x520, align 4, !dbg !4740
  %352 = load i64, i64* %i, align 8, !dbg !4741
  %conv521 = sitofp i64 %352 to double, !dbg !4742
  %mul522 = fmul double 1.000000e+00, %conv521, !dbg !4743
  %conv523 = fptrunc double %mul522 to float, !dbg !4744
  %353 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4745
  %354 = load i64, i64* %i, align 8, !dbg !4746
  %arrayidx524 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %353, i64 %354, !dbg !4745
  %y525 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx524, i32 0, i32 1, !dbg !4747
  store float %conv523, float* %y525, align 4, !dbg !4748
  %355 = load i64, i64* %i, align 8, !dbg !4749
  %conv526 = sitofp i64 %355 to double, !dbg !4750
  %mul527 = fmul double 2.000000e+00, %conv526, !dbg !4751
  %sub528 = fsub double %mul527, 6.553500e+04, !dbg !4752
  %mul529 = fmul double 0.000000e+00, %sub528, !dbg !4753
  %conv530 = fptrunc double %mul529 to float, !dbg !4754
  %356 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4755
  %357 = load i64, i64* %i, align 8, !dbg !4756
  %arrayidx531 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %356, i64 %357, !dbg !4755
  %y532 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx531, i32 0, i32 1, !dbg !4757
  store float %conv530, float* %y532, align 4, !dbg !4758
  %358 = load i64, i64* %i, align 8, !dbg !4759
  %conv533 = sitofp i64 %358 to double, !dbg !4760
  %mul534 = fmul double 2.000000e+00, %conv533, !dbg !4761
  %sub535 = fsub double %mul534, 6.553500e+04, !dbg !4762
  %mul536 = fmul double 6.666650e-01, %sub535, !dbg !4763
  %conv537 = fptrunc double %mul536 to float, !dbg !4764
  %359 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4765
  %360 = load i64, i64* %i, align 8, !dbg !4766
  %arrayidx538 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %359, i64 %360, !dbg !4765
  %y539 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx538, i32 0, i32 1, !dbg !4767
  store float %conv537, float* %y539, align 4, !dbg !4768
  %361 = load i64, i64* %i, align 8, !dbg !4769
  %conv540 = sitofp i64 %361 to double, !dbg !4770
  %mul541 = fmul double 1.000000e+00, %conv540, !dbg !4771
  %conv542 = fptrunc double %mul541 to float, !dbg !4772
  %362 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4773
  %363 = load i64, i64* %i, align 8, !dbg !4774
  %arrayidx543 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %362, i64 %363, !dbg !4773
  %z = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx543, i32 0, i32 2, !dbg !4775
  store float %conv542, float* %z, align 4, !dbg !4776
  %364 = load i64, i64* %i, align 8, !dbg !4777
  %conv544 = sitofp i64 %364 to double, !dbg !4778
  %mul545 = fmul double 2.000000e+00, %conv544, !dbg !4779
  %sub546 = fsub double %mul545, 6.553500e+04, !dbg !4780
  %mul547 = fmul double -5.000000e-01, %sub546, !dbg !4781
  %conv548 = fptrunc double %mul547 to float, !dbg !4782
  %365 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4783
  %366 = load i64, i64* %i, align 8, !dbg !4784
  %arrayidx549 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %365, i64 %366, !dbg !4783
  %z550 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx549, i32 0, i32 2, !dbg !4785
  store float %conv548, float* %z550, align 4, !dbg !4786
  %367 = load i64, i64* %i, align 8, !dbg !4787
  %conv551 = sitofp i64 %367 to double, !dbg !4788
  %mul552 = fmul double 2.000000e+00, %conv551, !dbg !4789
  %sub553 = fsub double %mul552, 6.553500e+04, !dbg !4790
  %mul554 = fmul double -3.333400e-01, %sub553, !dbg !4791
  %conv555 = fptrunc double %mul554 to float, !dbg !4792
  %368 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4793
  %369 = load i64, i64* %i, align 8, !dbg !4794
  %arrayidx556 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %368, i64 %369, !dbg !4793
  %z557 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx556, i32 0, i32 2, !dbg !4795
  store float %conv555, float* %z557, align 4, !dbg !4796
  br label %for.inc558, !dbg !4797

for.inc558:                                       ; preds = %for.body501
  %370 = load i64, i64* %i, align 8, !dbg !4798
  %inc559 = add nsw i64 %370, 1, !dbg !4798
  store i64 %inc559, i64* %i, align 8, !dbg !4798
  br label %for.cond498, !dbg !4799, !llvm.loop !4800

for.end560:                                       ; preds = %for.cond498
  br label %sw.epilog793, !dbg !4802

sw.bb561:                                         ; preds = %if.end496
  store i64 0, i64* %i, align 8, !dbg !4803
  br label %for.cond562, !dbg !4806

for.cond562:                                      ; preds = %for.inc623, %sw.bb561
  %371 = load i64, i64* %i, align 8, !dbg !4807
  %cmp563 = icmp sle i64 %371, 65535, !dbg !4809
  br i1 %cmp563, label %for.body565, label %for.end625, !dbg !4810

for.body565:                                      ; preds = %for.cond562
  %372 = load i64, i64* %i, align 8, !dbg !4811
  %conv566 = sitofp i64 %372 to double, !dbg !4813
  %mul567 = fmul double 0x3FEFFFFFFFFFE1FB, %conv566, !dbg !4814
  %conv568 = fptrunc double %mul567 to float, !dbg !4815
  %373 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4816
  %374 = load i64, i64* %i, align 8, !dbg !4817
  %arrayidx569 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %373, i64 %374, !dbg !4816
  %x570 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx569, i32 0, i32 0, !dbg !4818
  store float %conv568, float* %x570, align 4, !dbg !4819
  %375 = load i64, i64* %i, align 8, !dbg !4820
  %conv571 = sitofp i64 %375 to double, !dbg !4821
  %mul572 = fmul double 2.000000e+00, %conv571, !dbg !4822
  %sub573 = fsub double %mul572, 6.553500e+04, !dbg !4823
  %mul574 = fmul double 0xBEA4731C556195D4, %sub573, !dbg !4824
  %conv575 = fptrunc double %mul574 to float, !dbg !4825
  %376 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4826
  %377 = load i64, i64* %i, align 8, !dbg !4827
  %arrayidx576 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %376, i64 %377, !dbg !4826
  %x577 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx576, i32 0, i32 0, !dbg !4828
  store float %conv575, float* %x577, align 4, !dbg !4829
  %378 = load i64, i64* %i, align 8, !dbg !4830
  %conv578 = sitofp i64 %378 to double, !dbg !4831
  %mul579 = fmul double 2.000000e+00, %conv578, !dbg !4832
  %sub580 = fsub double %mul579, 6.553500e+04, !dbg !4833
  %mul581 = fmul double 0x3FE66E971EE48997, %sub580, !dbg !4834
  %conv582 = fptrunc double %mul581 to float, !dbg !4835
  %379 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4836
  %380 = load i64, i64* %i, align 8, !dbg !4837
  %arrayidx583 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %379, i64 %380, !dbg !4836
  %x584 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx583, i32 0, i32 0, !dbg !4838
  store float %conv582, float* %x584, align 4, !dbg !4839
  %381 = load i64, i64* %i, align 8, !dbg !4840
  %conv585 = sitofp i64 %381 to double, !dbg !4841
  %mul586 = fmul double 0x3FEFFFFF7EABA592, %conv585, !dbg !4842
  %conv587 = fptrunc double %mul586 to float, !dbg !4843
  %382 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4844
  %383 = load i64, i64* %i, align 8, !dbg !4845
  %arrayidx588 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %382, i64 %383, !dbg !4844
  %y589 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx588, i32 0, i32 1, !dbg !4846
  store float %conv587, float* %y589, align 4, !dbg !4847
  %384 = load i64, i64* %i, align 8, !dbg !4848
  %conv590 = sitofp i64 %384 to double, !dbg !4849
  %mul591 = fmul double 2.000000e+00, %conv590, !dbg !4850
  %sub592 = fsub double %mul591, 6.553500e+04, !dbg !4851
  %mul593 = fmul double 0xBFC60651A6C6C2D3, %sub592, !dbg !4852
  %conv594 = fptrunc double %mul593 to float, !dbg !4853
  %385 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4854
  %386 = load i64, i64* %i, align 8, !dbg !4855
  %arrayidx595 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %385, i64 %386, !dbg !4854
  %y596 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx595, i32 0, i32 1, !dbg !4856
  store float %conv594, float* %y596, align 4, !dbg !4857
  %387 = load i64, i64* %i, align 8, !dbg !4858
  %conv597 = sitofp i64 %387 to double, !dbg !4859
  %mul598 = fmul double 2.000000e+00, %conv597, !dbg !4860
  %sub599 = fsub double %mul598, 6.553500e+04, !dbg !4861
  %mul600 = fmul double 0xBFD6DA34C675944B, %sub599, !dbg !4862
  %conv601 = fptrunc double %mul600 to float, !dbg !4863
  %388 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4864
  %389 = load i64, i64* %i, align 8, !dbg !4865
  %arrayidx602 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %388, i64 %389, !dbg !4864
  %y603 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx602, i32 0, i32 1, !dbg !4866
  store float %conv601, float* %y603, align 4, !dbg !4867
  %390 = load i64, i64* %i, align 8, !dbg !4868
  %conv604 = sitofp i64 %390 to double, !dbg !4869
  %mul605 = fmul double 0x3FF000014CF7A462, %conv604, !dbg !4870
  %conv606 = fptrunc double %mul605 to float, !dbg !4871
  %391 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4872
  %392 = load i64, i64* %i, align 8, !dbg !4873
  %arrayidx607 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %391, i64 %392, !dbg !4872
  %z608 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx607, i32 0, i32 2, !dbg !4874
  store float %conv606, float* %z608, align 4, !dbg !4875
  %393 = load i64, i64* %i, align 8, !dbg !4876
  %conv609 = sitofp i64 %393 to double, !dbg !4877
  %mul610 = fmul double 2.000000e+00, %conv609, !dbg !4878
  %sub611 = fsub double %mul610, 6.553500e+04, !dbg !4879
  %mul612 = fmul double 0x3FEC5A1CBDC4A56B, %sub611, !dbg !4880
  %conv613 = fptrunc double %mul612 to float, !dbg !4881
  %394 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4882
  %395 = load i64, i64* %i, align 8, !dbg !4883
  %arrayidx614 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %394, i64 %395, !dbg !4882
  %z615 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx614, i32 0, i32 2, !dbg !4884
  store float %conv613, float* %z615, align 4, !dbg !4885
  %396 = load i64, i64* %i, align 8, !dbg !4886
  %conv616 = sitofp i64 %396 to double, !dbg !4887
  %mul617 = fmul double 2.000000e+00, %conv616, !dbg !4888
  %sub618 = fsub double %mul617, 6.553500e+04, !dbg !4889
  %mul619 = fmul double 0x3EB1FF14448BA0A3, %sub618, !dbg !4890
  %conv620 = fptrunc double %mul619 to float, !dbg !4891
  %397 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4892
  %398 = load i64, i64* %i, align 8, !dbg !4893
  %arrayidx621 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %397, i64 %398, !dbg !4892
  %z622 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx621, i32 0, i32 2, !dbg !4894
  store float %conv620, float* %z622, align 4, !dbg !4895
  br label %for.inc623, !dbg !4896

for.inc623:                                       ; preds = %for.body565
  %399 = load i64, i64* %i, align 8, !dbg !4897
  %inc624 = add nsw i64 %399, 1, !dbg !4897
  store i64 %inc624, i64* %i, align 8, !dbg !4897
  br label %for.cond562, !dbg !4898, !llvm.loop !4899

for.end625:                                       ; preds = %for.cond562
  br label %sw.epilog793, !dbg !4901

sw.bb626:                                         ; preds = %if.end496
  store i64 0, i64* %i, align 8, !dbg !4902
  br label %for.cond627, !dbg !4905

for.cond627:                                      ; preds = %for.inc688, %sw.bb626
  %400 = load i64, i64* %i, align 8, !dbg !4906
  %cmp628 = icmp sle i64 %400, 65535, !dbg !4908
  br i1 %cmp628, label %for.body630, label %for.end690, !dbg !4909

for.body630:                                      ; preds = %for.cond627
  %401 = load i64, i64* %i, align 8, !dbg !4910
  %conv631 = sitofp i64 %401 to double, !dbg !4912
  %mul632 = fmul double 1.000000e+00, %conv631, !dbg !4913
  %conv633 = fptrunc double %mul632 to float, !dbg !4914
  %402 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4915
  %403 = load i64, i64* %i, align 8, !dbg !4916
  %arrayidx634 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %402, i64 %403, !dbg !4915
  %x635 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx634, i32 0, i32 0, !dbg !4917
  store float %conv633, float* %x635, align 4, !dbg !4918
  %404 = load i64, i64* %i, align 8, !dbg !4919
  %conv636 = sitofp i64 %404 to double, !dbg !4920
  %mul637 = fmul double 2.000000e+00, %conv636, !dbg !4921
  %sub638 = fsub double %mul637, 6.553500e+04, !dbg !4922
  %mul639 = fmul double 0.000000e+00, %sub638, !dbg !4923
  %conv640 = fptrunc double %mul639 to float, !dbg !4924
  %405 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4925
  %406 = load i64, i64* %i, align 8, !dbg !4926
  %arrayidx641 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %405, i64 %406, !dbg !4925
  %x642 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx641, i32 0, i32 0, !dbg !4927
  store float %conv640, float* %x642, align 4, !dbg !4928
  %407 = load i64, i64* %i, align 8, !dbg !4929
  %conv643 = sitofp i64 %407 to double, !dbg !4930
  %mul644 = fmul double 2.000000e+00, %conv643, !dbg !4931
  %sub645 = fsub double %mul644, 6.553500e+04, !dbg !4932
  %mul646 = fmul double 7.874000e-01, %sub645, !dbg !4933
  %conv647 = fptrunc double %mul646 to float, !dbg !4934
  %408 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4935
  %409 = load i64, i64* %i, align 8, !dbg !4936
  %arrayidx648 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %408, i64 %409, !dbg !4935
  %x649 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx648, i32 0, i32 0, !dbg !4937
  store float %conv647, float* %x649, align 4, !dbg !4938
  %410 = load i64, i64* %i, align 8, !dbg !4939
  %conv650 = sitofp i64 %410 to double, !dbg !4940
  %mul651 = fmul double 1.000000e+00, %conv650, !dbg !4941
  %conv652 = fptrunc double %mul651 to float, !dbg !4942
  %411 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4943
  %412 = load i64, i64* %i, align 8, !dbg !4944
  %arrayidx653 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %411, i64 %412, !dbg !4943
  %y654 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx653, i32 0, i32 1, !dbg !4945
  store float %conv652, float* %y654, align 4, !dbg !4946
  %413 = load i64, i64* %i, align 8, !dbg !4947
  %conv655 = sitofp i64 %413 to double, !dbg !4948
  %mul656 = fmul double 2.000000e+00, %conv655, !dbg !4949
  %sub657 = fsub double %mul656, 6.553500e+04, !dbg !4950
  %mul658 = fmul double 0xBFB7FA3B9AE0C176, %sub657, !dbg !4951
  %conv659 = fptrunc double %mul658 to float, !dbg !4952
  %414 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4953
  %415 = load i64, i64* %i, align 8, !dbg !4954
  %arrayidx660 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %414, i64 %415, !dbg !4953
  %y661 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx660, i32 0, i32 1, !dbg !4955
  store float %conv659, float* %y661, align 4, !dbg !4956
  %416 = load i64, i64* %i, align 8, !dbg !4957
  %conv662 = sitofp i64 %416 to double, !dbg !4958
  %mul663 = fmul double 2.000000e+00, %conv662, !dbg !4959
  %sub664 = fsub double %mul663, 6.553500e+04, !dbg !4960
  %mul665 = fmul double -2.340620e-01, %sub664, !dbg !4961
  %conv666 = fptrunc double %mul665 to float, !dbg !4962
  %417 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4963
  %418 = load i64, i64* %i, align 8, !dbg !4964
  %arrayidx667 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %417, i64 %418, !dbg !4963
  %y668 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx667, i32 0, i32 1, !dbg !4965
  store float %conv666, float* %y668, align 4, !dbg !4966
  %419 = load i64, i64* %i, align 8, !dbg !4967
  %conv669 = sitofp i64 %419 to double, !dbg !4968
  %mul670 = fmul double 1.000000e+00, %conv669, !dbg !4969
  %conv671 = fptrunc double %mul670 to float, !dbg !4970
  %420 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !4971
  %421 = load i64, i64* %i, align 8, !dbg !4972
  %arrayidx672 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %420, i64 %421, !dbg !4971
  %z673 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx672, i32 0, i32 2, !dbg !4973
  store float %conv671, float* %z673, align 4, !dbg !4974
  %422 = load i64, i64* %i, align 8, !dbg !4975
  %conv674 = sitofp i64 %422 to double, !dbg !4976
  %mul675 = fmul double 2.000000e+00, %conv674, !dbg !4977
  %sub676 = fsub double %mul675, 6.553500e+04, !dbg !4978
  %mul677 = fmul double 0x3FEDB089A0275254, %sub676, !dbg !4979
  %conv678 = fptrunc double %mul677 to float, !dbg !4980
  %423 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !4981
  %424 = load i64, i64* %i, align 8, !dbg !4982
  %arrayidx679 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %423, i64 %424, !dbg !4981
  %z680 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx679, i32 0, i32 2, !dbg !4983
  store float %conv678, float* %z680, align 4, !dbg !4984
  %425 = load i64, i64* %i, align 8, !dbg !4985
  %conv681 = sitofp i64 %425 to double, !dbg !4986
  %mul682 = fmul double 2.000000e+00, %conv681, !dbg !4987
  %sub683 = fsub double %mul682, 6.553500e+04, !dbg !4988
  %mul684 = fmul double 0.000000e+00, %sub683, !dbg !4989
  %conv685 = fptrunc double %mul684 to float, !dbg !4990
  %426 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !4991
  %427 = load i64, i64* %i, align 8, !dbg !4992
  %arrayidx686 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %426, i64 %427, !dbg !4991
  %z687 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx686, i32 0, i32 2, !dbg !4993
  store float %conv685, float* %z687, align 4, !dbg !4994
  br label %for.inc688, !dbg !4995

for.inc688:                                       ; preds = %for.body630
  %428 = load i64, i64* %i, align 8, !dbg !4996
  %inc689 = add nsw i64 %428, 1, !dbg !4996
  store i64 %inc689, i64* %i, align 8, !dbg !4996
  br label %for.cond627, !dbg !4997, !llvm.loop !4998

for.end690:                                       ; preds = %for.cond627
  br label %sw.epilog793, !dbg !5000

sw.bb691:                                         ; preds = %if.end496
  store i64 0, i64* %i, align 8, !dbg !5001
  br label %for.cond692, !dbg !5004

for.cond692:                                      ; preds = %for.inc755, %sw.bb691
  %429 = load i64, i64* %i, align 8, !dbg !5005
  %cmp693 = icmp sle i64 %429, 65535, !dbg !5007
  br i1 %cmp693, label %for.body695, label %for.end757, !dbg !5008

for.body695:                                      ; preds = %for.cond692
  %430 = load i64, i64* %i, align 8, !dbg !5009
  %conv696 = sitofp i64 %430 to double, !dbg !5011
  %mul697 = fmul double 1.358400e+00, %conv696, !dbg !5012
  %conv698 = fptrunc double %mul697 to float, !dbg !5013
  %431 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5014
  %432 = load i64, i64* %i, align 8, !dbg !5015
  %arrayidx699 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %431, i64 %432, !dbg !5014
  %x700 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx699, i32 0, i32 0, !dbg !5016
  store float %conv698, float* %x700, align 4, !dbg !5017
  %433 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5018
  %434 = load i64, i64* %i, align 8, !dbg !5019
  %arrayidx701 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %433, i64 %434, !dbg !5018
  %x702 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx701, i32 0, i32 0, !dbg !5020
  store float 0.000000e+00, float* %x702, align 4, !dbg !5021
  %435 = load i64, i64* %i, align 8, !dbg !5022
  %conv703 = sitofp i64 %435 to double, !dbg !5023
  %call704 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -119), !dbg !5024
  %call705 = call i32 @ScaleQuantumToMap(i16 zeroext %call704), !dbg !5025
  %conv706 = uitofp i32 %call705 to float, !dbg !5026
  %conv707 = fpext float %conv706 to double, !dbg !5026
  %sub708 = fsub double %conv703, %conv707, !dbg !5027
  %mul709 = fmul double 1.821500e+00, %sub708, !dbg !5028
  %conv710 = fptrunc double %mul709 to float, !dbg !5029
  %436 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5030
  %437 = load i64, i64* %i, align 8, !dbg !5031
  %arrayidx711 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %436, i64 %437, !dbg !5030
  %x712 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx711, i32 0, i32 0, !dbg !5032
  store float %conv710, float* %x712, align 4, !dbg !5033
  %438 = load i64, i64* %i, align 8, !dbg !5034
  %conv713 = sitofp i64 %438 to double, !dbg !5035
  %mul714 = fmul double 1.358400e+00, %conv713, !dbg !5036
  %conv715 = fptrunc double %mul714 to float, !dbg !5037
  %439 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5038
  %440 = load i64, i64* %i, align 8, !dbg !5039
  %arrayidx716 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %439, i64 %440, !dbg !5038
  %y717 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx716, i32 0, i32 1, !dbg !5040
  store float %conv715, float* %y717, align 4, !dbg !5041
  %441 = load i64, i64* %i, align 8, !dbg !5042
  %conv718 = sitofp i64 %441 to double, !dbg !5043
  %call719 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -100), !dbg !5044
  %call720 = call i32 @ScaleQuantumToMap(i16 zeroext %call719), !dbg !5045
  %conv721 = uitofp i32 %call720 to float, !dbg !5046
  %conv722 = fpext float %conv721 to double, !dbg !5046
  %sub723 = fsub double %conv718, %conv722, !dbg !5047
  %mul724 = fmul double 0xBFDB899616575A5A, %sub723, !dbg !5048
  %conv725 = fptrunc double %mul724 to float, !dbg !5049
  %442 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5050
  %443 = load i64, i64* %i, align 8, !dbg !5051
  %arrayidx726 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %442, i64 %443, !dbg !5050
  %y727 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx726, i32 0, i32 1, !dbg !5052
  store float %conv725, float* %y727, align 4, !dbg !5053
  %444 = load i64, i64* %i, align 8, !dbg !5054
  %conv728 = sitofp i64 %444 to double, !dbg !5055
  %call729 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -119), !dbg !5056
  %call730 = call i32 @ScaleQuantumToMap(i16 zeroext %call729), !dbg !5057
  %conv731 = uitofp i32 %call730 to float, !dbg !5058
  %conv732 = fpext float %conv731 to double, !dbg !5058
  %sub733 = fsub double %conv728, %conv732, !dbg !5059
  %mul734 = fmul double 0xBFEDAB28D8665E03, %sub733, !dbg !5060
  %conv735 = fptrunc double %mul734 to float, !dbg !5061
  %445 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5062
  %446 = load i64, i64* %i, align 8, !dbg !5063
  %arrayidx736 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %445, i64 %446, !dbg !5062
  %y737 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx736, i32 0, i32 1, !dbg !5064
  store float %conv735, float* %y737, align 4, !dbg !5065
  %447 = load i64, i64* %i, align 8, !dbg !5066
  %conv738 = sitofp i64 %447 to double, !dbg !5067
  %mul739 = fmul double 1.358400e+00, %conv738, !dbg !5068
  %conv740 = fptrunc double %mul739 to float, !dbg !5069
  %448 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5070
  %449 = load i64, i64* %i, align 8, !dbg !5071
  %arrayidx741 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %448, i64 %449, !dbg !5070
  %z742 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx741, i32 0, i32 2, !dbg !5072
  store float %conv740, float* %z742, align 4, !dbg !5073
  %450 = load i64, i64* %i, align 8, !dbg !5074
  %conv743 = sitofp i64 %450 to double, !dbg !5075
  %call744 = call zeroext i16 @ScaleCharToQuantum(i8 zeroext -100), !dbg !5076
  %call745 = call i32 @ScaleQuantumToMap(i16 zeroext %call744), !dbg !5077
  %conv746 = uitofp i32 %call745 to float, !dbg !5078
  %conv747 = fpext float %conv746 to double, !dbg !5078
  %sub748 = fsub double %conv743, %conv747, !dbg !5079
  %mul749 = fmul double 2.217900e+00, %sub748, !dbg !5080
  %conv750 = fptrunc double %mul749 to float, !dbg !5081
  %451 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5082
  %452 = load i64, i64* %i, align 8, !dbg !5083
  %arrayidx751 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %451, i64 %452, !dbg !5082
  %z752 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx751, i32 0, i32 2, !dbg !5084
  store float %conv750, float* %z752, align 4, !dbg !5085
  %453 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5086
  %454 = load i64, i64* %i, align 8, !dbg !5087
  %arrayidx753 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %453, i64 %454, !dbg !5086
  %z754 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx753, i32 0, i32 2, !dbg !5088
  store float 0.000000e+00, float* %z754, align 4, !dbg !5089
  br label %for.inc755, !dbg !5090

for.inc755:                                       ; preds = %for.body695
  %455 = load i64, i64* %i, align 8, !dbg !5091
  %inc756 = add nsw i64 %455, 1, !dbg !5091
  store i64 %inc756, i64* %i, align 8, !dbg !5091
  br label %for.cond692, !dbg !5092, !llvm.loop !5093

for.end757:                                       ; preds = %for.cond692
  br label %sw.epilog793, !dbg !5095

sw.default758:                                    ; preds = %if.end496
  store i64 0, i64* %i, align 8, !dbg !5096
  br label %for.cond759, !dbg !5099

for.cond759:                                      ; preds = %for.inc790, %sw.default758
  %456 = load i64, i64* %i, align 8, !dbg !5100
  %cmp760 = icmp sle i64 %456, 65535, !dbg !5102
  br i1 %cmp760, label %for.body762, label %for.end792, !dbg !5103

for.body762:                                      ; preds = %for.cond759
  %457 = load i64, i64* %i, align 8, !dbg !5104
  %conv763 = sitofp i64 %457 to double, !dbg !5106
  %mul764 = fmul double 1.000000e+00, %conv763, !dbg !5107
  %conv765 = fptrunc double %mul764 to float, !dbg !5108
  %458 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5109
  %459 = load i64, i64* %i, align 8, !dbg !5110
  %arrayidx766 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %458, i64 %459, !dbg !5109
  %x767 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx766, i32 0, i32 0, !dbg !5111
  store float %conv765, float* %x767, align 4, !dbg !5112
  %460 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5113
  %461 = load i64, i64* %i, align 8, !dbg !5114
  %arrayidx768 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %460, i64 %461, !dbg !5113
  %x769 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx768, i32 0, i32 0, !dbg !5115
  store float 0.000000e+00, float* %x769, align 4, !dbg !5116
  %462 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5117
  %463 = load i64, i64* %i, align 8, !dbg !5118
  %arrayidx770 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %462, i64 %463, !dbg !5117
  %x771 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx770, i32 0, i32 0, !dbg !5119
  store float 0.000000e+00, float* %x771, align 4, !dbg !5120
  %464 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5121
  %465 = load i64, i64* %i, align 8, !dbg !5122
  %arrayidx772 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %464, i64 %465, !dbg !5121
  %y773 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx772, i32 0, i32 1, !dbg !5123
  store float 0.000000e+00, float* %y773, align 4, !dbg !5124
  %466 = load i64, i64* %i, align 8, !dbg !5125
  %conv774 = sitofp i64 %466 to double, !dbg !5126
  %mul775 = fmul double 1.000000e+00, %conv774, !dbg !5127
  %conv776 = fptrunc double %mul775 to float, !dbg !5128
  %467 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5129
  %468 = load i64, i64* %i, align 8, !dbg !5130
  %arrayidx777 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %467, i64 %468, !dbg !5129
  %y778 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx777, i32 0, i32 1, !dbg !5131
  store float %conv776, float* %y778, align 4, !dbg !5132
  %469 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5133
  %470 = load i64, i64* %i, align 8, !dbg !5134
  %arrayidx779 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %469, i64 %470, !dbg !5133
  %y780 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx779, i32 0, i32 1, !dbg !5135
  store float 0.000000e+00, float* %y780, align 4, !dbg !5136
  %471 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5137
  %472 = load i64, i64* %i, align 8, !dbg !5138
  %arrayidx781 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %471, i64 %472, !dbg !5137
  %z782 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx781, i32 0, i32 2, !dbg !5139
  store float 0.000000e+00, float* %z782, align 4, !dbg !5140
  %473 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5141
  %474 = load i64, i64* %i, align 8, !dbg !5142
  %arrayidx783 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %473, i64 %474, !dbg !5141
  %z784 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx783, i32 0, i32 2, !dbg !5143
  store float 0.000000e+00, float* %z784, align 4, !dbg !5144
  %475 = load i64, i64* %i, align 8, !dbg !5145
  %conv785 = sitofp i64 %475 to double, !dbg !5146
  %mul786 = fmul double 1.000000e+00, %conv785, !dbg !5147
  %conv787 = fptrunc double %mul786 to float, !dbg !5148
  %476 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5149
  %477 = load i64, i64* %i, align 8, !dbg !5150
  %arrayidx788 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %476, i64 %477, !dbg !5149
  %z789 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx788, i32 0, i32 2, !dbg !5151
  store float %conv787, float* %z789, align 4, !dbg !5152
  br label %for.inc790, !dbg !5153

for.inc790:                                       ; preds = %for.body762
  %478 = load i64, i64* %i, align 8, !dbg !5154
  %inc791 = add nsw i64 %478, 1, !dbg !5154
  store i64 %inc791, i64* %i, align 8, !dbg !5154
  br label %for.cond759, !dbg !5155, !llvm.loop !5156

for.end792:                                       ; preds = %for.cond759
  br label %sw.epilog793, !dbg !5158

sw.epilog793:                                     ; preds = %for.end792, %for.end757, %for.end690, %for.end625, %for.end560
  %479 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5159
  %storage_class794 = getelementptr inbounds %struct._Image, %struct._Image* %479, i32 0, i32 0, !dbg !5160
  %480 = load i32, i32* %storage_class794, align 8, !dbg !5160
  switch i32 %480, label %sw.default796 [
    i32 1, label %sw.bb795
    i32 2, label %sw.bb936
  ], !dbg !5161

sw.bb795:                                         ; preds = %sw.epilog793
  br label %sw.default796, !dbg !5162

sw.default796:                                    ; preds = %sw.epilog793, %sw.bb795
  %481 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5163
  %482 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5166
  %call797 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %481, %struct._ExceptionInfo* %482), !dbg !5167
  store %struct._CacheView* %call797, %struct._CacheView** %image_view, align 8, !dbg !5168
  store i64 0, i64* %y, align 8, !dbg !5169
  br label %for.cond798, !dbg !5171

for.cond798:                                      ; preds = %for.inc932, %sw.default796
  %483 = load i64, i64* %y, align 8, !dbg !5172
  %484 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5174
  %rows799 = getelementptr inbounds %struct._Image, %struct._Image* %484, i32 0, i32 8, !dbg !5175
  %485 = load i64, i64* %rows799, align 8, !dbg !5175
  %cmp800 = icmp slt i64 %483, %485, !dbg !5176
  br i1 %cmp800, label %for.body802, label %for.end934, !dbg !5177

for.body802:                                      ; preds = %for.cond798
  call void @llvm.dbg.declare(metadata i32* %sync803, metadata !5178, metadata !DIExpression()), !dbg !5180
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel804, metadata !5181, metadata !DIExpression()), !dbg !5182
  call void @llvm.dbg.declare(metadata i64* %x805, metadata !5183, metadata !DIExpression()), !dbg !5184
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q806, metadata !5185, metadata !DIExpression()), !dbg !5186
  %486 = load i32, i32* %status, align 4, !dbg !5187
  %cmp807 = icmp eq i32 %486, 0, !dbg !5189
  br i1 %cmp807, label %if.then809, label %if.end810, !dbg !5190

if.then809:                                       ; preds = %for.body802
  br label %for.inc932, !dbg !5191

if.end810:                                        ; preds = %for.body802
  %487 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5192
  %488 = load i64, i64* %y, align 8, !dbg !5193
  %489 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5194
  %columns811 = getelementptr inbounds %struct._Image, %struct._Image* %489, i32 0, i32 7, !dbg !5195
  %490 = load i64, i64* %columns811, align 8, !dbg !5195
  %491 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5196
  %call812 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %487, i64 0, i64 %488, i64 %490, i64 1, %struct._ExceptionInfo* %491), !dbg !5197
  store %struct._PixelPacket* %call812, %struct._PixelPacket** %q806, align 8, !dbg !5198
  %492 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5199
  %cmp813 = icmp eq %struct._PixelPacket* %492, null, !dbg !5201
  br i1 %cmp813, label %if.then815, label %if.end816, !dbg !5202

if.then815:                                       ; preds = %if.end810
  store i32 0, i32* %status, align 4, !dbg !5203
  br label %for.inc932, !dbg !5205

if.end816:                                        ; preds = %if.end810
  store i64 0, i64* %x805, align 8, !dbg !5206
  br label %for.cond817, !dbg !5208

for.cond817:                                      ; preds = %for.inc913, %if.end816
  %493 = load i64, i64* %x805, align 8, !dbg !5209
  %494 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5211
  %columns818 = getelementptr inbounds %struct._Image, %struct._Image* %494, i32 0, i32 7, !dbg !5212
  %495 = load i64, i64* %columns818, align 8, !dbg !5212
  %cmp819 = icmp slt i64 %493, %495, !dbg !5213
  br i1 %cmp819, label %for.body821, label %for.end915, !dbg !5214

for.body821:                                      ; preds = %for.cond817
  call void @llvm.dbg.declare(metadata i64* %blue822, metadata !5215, metadata !DIExpression()), !dbg !5217
  call void @llvm.dbg.declare(metadata i64* %green823, metadata !5218, metadata !DIExpression()), !dbg !5219
  call void @llvm.dbg.declare(metadata i64* %red824, metadata !5220, metadata !DIExpression()), !dbg !5221
  %496 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5222
  %red825 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %496, i32 0, i32 2, !dbg !5222
  %497 = load i16, i16* %red825, align 2, !dbg !5222
  %call826 = call i32 @ScaleQuantumToMap(i16 zeroext %497), !dbg !5223
  %conv827 = zext i32 %call826 to i64, !dbg !5223
  store i64 %conv827, i64* %red824, align 8, !dbg !5224
  %498 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5225
  %green828 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %498, i32 0, i32 1, !dbg !5225
  %499 = load i16, i16* %green828, align 2, !dbg !5225
  %call829 = call i32 @ScaleQuantumToMap(i16 zeroext %499), !dbg !5226
  %conv830 = zext i32 %call829 to i64, !dbg !5226
  store i64 %conv830, i64* %green823, align 8, !dbg !5227
  %500 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5228
  %blue831 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %500, i32 0, i32 0, !dbg !5228
  %501 = load i16, i16* %blue831, align 2, !dbg !5228
  %call832 = call i32 @ScaleQuantumToMap(i16 zeroext %501), !dbg !5229
  %conv833 = zext i32 %call832 to i64, !dbg !5229
  store i64 %conv833, i64* %blue822, align 8, !dbg !5230
  %502 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5231
  %503 = load i64, i64* %red824, align 8, !dbg !5232
  %arrayidx834 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %502, i64 %503, !dbg !5231
  %x835 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx834, i32 0, i32 0, !dbg !5233
  %504 = load float, float* %x835, align 4, !dbg !5233
  %505 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5234
  %506 = load i64, i64* %green823, align 8, !dbg !5235
  %arrayidx836 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %505, i64 %506, !dbg !5234
  %x837 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx836, i32 0, i32 0, !dbg !5236
  %507 = load float, float* %x837, align 4, !dbg !5236
  %add = fadd float %504, %507, !dbg !5237
  %508 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5238
  %509 = load i64, i64* %blue822, align 8, !dbg !5239
  %arrayidx838 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %508, i64 %509, !dbg !5238
  %x839 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx838, i32 0, i32 0, !dbg !5240
  %510 = load float, float* %x839, align 4, !dbg !5240
  %add840 = fadd float %add, %510, !dbg !5241
  %red841 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5242
  store float %add840, float* %red841, align 8, !dbg !5243
  %511 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5244
  %512 = load i64, i64* %red824, align 8, !dbg !5245
  %arrayidx842 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %511, i64 %512, !dbg !5244
  %y843 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx842, i32 0, i32 1, !dbg !5246
  %513 = load float, float* %y843, align 4, !dbg !5246
  %514 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5247
  %515 = load i64, i64* %green823, align 8, !dbg !5248
  %arrayidx844 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %514, i64 %515, !dbg !5247
  %y845 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx844, i32 0, i32 1, !dbg !5249
  %516 = load float, float* %y845, align 4, !dbg !5249
  %add846 = fadd float %513, %516, !dbg !5250
  %517 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5251
  %518 = load i64, i64* %blue822, align 8, !dbg !5252
  %arrayidx847 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %517, i64 %518, !dbg !5251
  %y848 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx847, i32 0, i32 1, !dbg !5253
  %519 = load float, float* %y848, align 4, !dbg !5253
  %add849 = fadd float %add846, %519, !dbg !5254
  %green850 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5255
  store float %add849, float* %green850, align 4, !dbg !5256
  %520 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5257
  %521 = load i64, i64* %red824, align 8, !dbg !5258
  %arrayidx851 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %520, i64 %521, !dbg !5257
  %z852 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx851, i32 0, i32 2, !dbg !5259
  %522 = load float, float* %z852, align 4, !dbg !5259
  %523 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5260
  %524 = load i64, i64* %green823, align 8, !dbg !5261
  %arrayidx853 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %523, i64 %524, !dbg !5260
  %z854 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx853, i32 0, i32 2, !dbg !5262
  %525 = load float, float* %z854, align 4, !dbg !5262
  %add855 = fadd float %522, %525, !dbg !5263
  %526 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5264
  %527 = load i64, i64* %blue822, align 8, !dbg !5265
  %arrayidx856 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %526, i64 %527, !dbg !5264
  %z857 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx856, i32 0, i32 2, !dbg !5266
  %528 = load float, float* %z857, align 4, !dbg !5266
  %add858 = fadd float %add855, %528, !dbg !5267
  %blue859 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5268
  store float %add858, float* %blue859, align 8, !dbg !5269
  %529 = load i32, i32* %colorspace.addr, align 4, !dbg !5270
  %cmp860 = icmp eq i32 %529, 8, !dbg !5272
  br i1 %cmp860, label %if.then862, label %if.else, !dbg !5273

if.then862:                                       ; preds = %for.body821
  %red863 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5274
  %530 = load float, float* %red863, align 8, !dbg !5274
  %conv864 = fpext float %530 to double, !dbg !5276
  %mul865 = fmul double 1.024000e+03, %conv864, !dbg !5277
  %div866 = fdiv double %mul865, 6.553500e+04, !dbg !5278
  %conv867 = fptrunc double %div866 to float, !dbg !5279
  %call868 = call i64 @RoundToYCC(float %conv867), !dbg !5280
  %arrayidx869 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call868, !dbg !5281
  %531 = load float, float* %arrayidx869, align 4, !dbg !5281
  %mul870 = fmul float 6.553500e+04, %531, !dbg !5282
  %red871 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5283
  store float %mul870, float* %red871, align 8, !dbg !5284
  %green872 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5285
  %532 = load float, float* %green872, align 4, !dbg !5285
  %conv873 = fpext float %532 to double, !dbg !5286
  %mul874 = fmul double 1.024000e+03, %conv873, !dbg !5287
  %div875 = fdiv double %mul874, 6.553500e+04, !dbg !5288
  %conv876 = fptrunc double %div875 to float, !dbg !5289
  %call877 = call i64 @RoundToYCC(float %conv876), !dbg !5290
  %arrayidx878 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call877, !dbg !5291
  %533 = load float, float* %arrayidx878, align 4, !dbg !5291
  %mul879 = fmul float 6.553500e+04, %533, !dbg !5292
  %green880 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5293
  store float %mul879, float* %green880, align 4, !dbg !5294
  %blue881 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5295
  %534 = load float, float* %blue881, align 8, !dbg !5295
  %conv882 = fpext float %534 to double, !dbg !5296
  %mul883 = fmul double 1.024000e+03, %conv882, !dbg !5297
  %div884 = fdiv double %mul883, 6.553500e+04, !dbg !5298
  %conv885 = fptrunc double %div884 to float, !dbg !5299
  %call886 = call i64 @RoundToYCC(float %conv885), !dbg !5300
  %arrayidx887 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call886, !dbg !5301
  %535 = load float, float* %arrayidx887, align 4, !dbg !5301
  %mul888 = fmul float 6.553500e+04, %535, !dbg !5302
  %blue889 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5303
  store float %mul888, float* %blue889, align 8, !dbg !5304
  br label %if.end902, !dbg !5305

if.else:                                          ; preds = %for.body821
  %red890 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5306
  %536 = load float, float* %red890, align 8, !dbg !5306
  %call891 = call zeroext i16 @ScaleMapToQuantum(float %536), !dbg !5308
  %conv892 = uitofp i16 %call891 to float, !dbg !5309
  %red893 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5310
  store float %conv892, float* %red893, align 8, !dbg !5311
  %green894 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5312
  %537 = load float, float* %green894, align 4, !dbg !5312
  %call895 = call zeroext i16 @ScaleMapToQuantum(float %537), !dbg !5313
  %conv896 = uitofp i16 %call895 to float, !dbg !5314
  %green897 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5315
  store float %conv896, float* %green897, align 4, !dbg !5316
  %blue898 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5317
  %538 = load float, float* %blue898, align 8, !dbg !5317
  %call899 = call zeroext i16 @ScaleMapToQuantum(float %538), !dbg !5318
  %conv900 = uitofp i16 %call899 to float, !dbg !5319
  %blue901 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5320
  store float %conv900, float* %blue901, align 8, !dbg !5321
  br label %if.end902

if.end902:                                        ; preds = %if.else, %if.then862
  %red903 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 5, !dbg !5322
  %539 = load float, float* %red903, align 8, !dbg !5322
  %call904 = call zeroext i16 @ClampToQuantum(float %539), !dbg !5322
  %540 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5322
  %red905 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %540, i32 0, i32 2, !dbg !5322
  store i16 %call904, i16* %red905, align 2, !dbg !5322
  %green906 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 6, !dbg !5323
  %541 = load float, float* %green906, align 4, !dbg !5323
  %call907 = call zeroext i16 @ClampToQuantum(float %541), !dbg !5323
  %542 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5323
  %green908 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %542, i32 0, i32 1, !dbg !5323
  store i16 %call907, i16* %green908, align 2, !dbg !5323
  %blue909 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel804, i32 0, i32 7, !dbg !5324
  %543 = load float, float* %blue909, align 8, !dbg !5324
  %call910 = call zeroext i16 @ClampToQuantum(float %543), !dbg !5324
  %544 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5324
  %blue911 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %544, i32 0, i32 0, !dbg !5324
  store i16 %call910, i16* %blue911, align 2, !dbg !5324
  %545 = load %struct._PixelPacket*, %struct._PixelPacket** %q806, align 8, !dbg !5325
  %incdec.ptr912 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %545, i32 1, !dbg !5325
  store %struct._PixelPacket* %incdec.ptr912, %struct._PixelPacket** %q806, align 8, !dbg !5325
  br label %for.inc913, !dbg !5326

for.inc913:                                       ; preds = %if.end902
  %546 = load i64, i64* %x805, align 8, !dbg !5327
  %inc914 = add nsw i64 %546, 1, !dbg !5327
  store i64 %inc914, i64* %x805, align 8, !dbg !5327
  br label %for.cond817, !dbg !5328, !llvm.loop !5329

for.end915:                                       ; preds = %for.cond817
  %547 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5331
  %548 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !5332
  %call916 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %547, %struct._ExceptionInfo* %548), !dbg !5333
  store i32 %call916, i32* %sync803, align 4, !dbg !5334
  %549 = load i32, i32* %sync803, align 4, !dbg !5335
  %cmp917 = icmp eq i32 %549, 0, !dbg !5337
  br i1 %cmp917, label %if.then919, label %if.end920, !dbg !5338

if.then919:                                       ; preds = %for.end915
  store i32 0, i32* %status, align 4, !dbg !5339
  br label %if.end920, !dbg !5340

if.end920:                                        ; preds = %if.then919, %for.end915
  %550 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5341
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %550, i32 0, i32 47, !dbg !5343
  %551 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !5343
  %cmp921 = icmp ne i32 (i8*, i64, i64, i8*)* %551, null, !dbg !5344
  br i1 %cmp921, label %if.then923, label %if.end931, !dbg !5345

if.then923:                                       ; preds = %if.end920
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !5346, metadata !DIExpression()), !dbg !5348
  %552 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5349
  %553 = load i64, i64* %progress, align 8, !dbg !5350
  %inc924 = add nsw i64 %553, 1, !dbg !5350
  store i64 %inc924, i64* %progress, align 8, !dbg !5350
  %554 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5351
  %rows925 = getelementptr inbounds %struct._Image, %struct._Image* %554, i32 0, i32 8, !dbg !5352
  %555 = load i64, i64* %rows925, align 8, !dbg !5352
  %call926 = call i32 @SetImageProgress(%struct._Image* %552, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i64 0, i64 0), i64 %553, i64 %555), !dbg !5353
  store i32 %call926, i32* %proceed, align 4, !dbg !5354
  %556 = load i32, i32* %proceed, align 4, !dbg !5355
  %cmp927 = icmp eq i32 %556, 0, !dbg !5357
  br i1 %cmp927, label %if.then929, label %if.end930, !dbg !5358

if.then929:                                       ; preds = %if.then923
  store i32 0, i32* %status, align 4, !dbg !5359
  br label %if.end930, !dbg !5360

if.end930:                                        ; preds = %if.then929, %if.then923
  br label %if.end931, !dbg !5361

if.end931:                                        ; preds = %if.end930, %if.end920
  br label %for.inc932, !dbg !5362

for.inc932:                                       ; preds = %if.end931, %if.then815, %if.then809
  %557 = load i64, i64* %y, align 8, !dbg !5363
  %inc933 = add nsw i64 %557, 1, !dbg !5363
  store i64 %inc933, i64* %y, align 8, !dbg !5363
  br label %for.cond798, !dbg !5364, !llvm.loop !5365

for.end934:                                       ; preds = %for.cond798
  %558 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !5367
  %call935 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %558), !dbg !5368
  store %struct._CacheView* %call935, %struct._CacheView** %image_view, align 8, !dbg !5369
  br label %sw.epilog1049, !dbg !5370

sw.bb936:                                         ; preds = %sw.epilog793
  store i64 0, i64* %i, align 8, !dbg !5371
  br label %for.cond937, !dbg !5374

for.cond937:                                      ; preds = %for.inc1045, %sw.bb936
  %559 = load i64, i64* %i, align 8, !dbg !5375
  %560 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5377
  %colors = getelementptr inbounds %struct._Image, %struct._Image* %560, i32 0, i32 10, !dbg !5378
  %561 = load i64, i64* %colors, align 8, !dbg !5378
  %cmp938 = icmp slt i64 %559, %561, !dbg !5379
  br i1 %cmp938, label %for.body940, label %for.end1047, !dbg !5380

for.body940:                                      ; preds = %for.cond937
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel941, metadata !5381, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata i64* %blue942, metadata !5384, metadata !DIExpression()), !dbg !5385
  call void @llvm.dbg.declare(metadata i64* %green943, metadata !5386, metadata !DIExpression()), !dbg !5387
  call void @llvm.dbg.declare(metadata i64* %red944, metadata !5388, metadata !DIExpression()), !dbg !5389
  %562 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5390
  %colormap = getelementptr inbounds %struct._Image, %struct._Image* %562, i32 0, i32 11, !dbg !5391
  %563 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap, align 8, !dbg !5391
  %564 = load i64, i64* %i, align 8, !dbg !5392
  %arrayidx945 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %563, i64 %564, !dbg !5390
  %red946 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx945, i32 0, i32 2, !dbg !5393
  %565 = load i16, i16* %red946, align 2, !dbg !5393
  %call947 = call i32 @ScaleQuantumToMap(i16 zeroext %565), !dbg !5394
  %conv948 = zext i32 %call947 to i64, !dbg !5394
  store i64 %conv948, i64* %red944, align 8, !dbg !5395
  %566 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5396
  %colormap949 = getelementptr inbounds %struct._Image, %struct._Image* %566, i32 0, i32 11, !dbg !5397
  %567 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap949, align 8, !dbg !5397
  %568 = load i64, i64* %i, align 8, !dbg !5398
  %arrayidx950 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %567, i64 %568, !dbg !5396
  %green951 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx950, i32 0, i32 1, !dbg !5399
  %569 = load i16, i16* %green951, align 2, !dbg !5399
  %call952 = call i32 @ScaleQuantumToMap(i16 zeroext %569), !dbg !5400
  %conv953 = zext i32 %call952 to i64, !dbg !5400
  store i64 %conv953, i64* %green943, align 8, !dbg !5401
  %570 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5402
  %colormap954 = getelementptr inbounds %struct._Image, %struct._Image* %570, i32 0, i32 11, !dbg !5403
  %571 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap954, align 8, !dbg !5403
  %572 = load i64, i64* %i, align 8, !dbg !5404
  %arrayidx955 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %571, i64 %572, !dbg !5402
  %blue956 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx955, i32 0, i32 0, !dbg !5405
  %573 = load i16, i16* %blue956, align 2, !dbg !5405
  %call957 = call i32 @ScaleQuantumToMap(i16 zeroext %573), !dbg !5406
  %conv958 = zext i32 %call957 to i64, !dbg !5406
  store i64 %conv958, i64* %blue942, align 8, !dbg !5407
  %574 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5408
  %575 = load i64, i64* %red944, align 8, !dbg !5409
  %arrayidx959 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %574, i64 %575, !dbg !5408
  %x960 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx959, i32 0, i32 0, !dbg !5410
  %576 = load float, float* %x960, align 4, !dbg !5410
  %577 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5411
  %578 = load i64, i64* %green943, align 8, !dbg !5412
  %arrayidx961 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %577, i64 %578, !dbg !5411
  %x962 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx961, i32 0, i32 0, !dbg !5413
  %579 = load float, float* %x962, align 4, !dbg !5413
  %add963 = fadd float %576, %579, !dbg !5414
  %580 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5415
  %581 = load i64, i64* %blue942, align 8, !dbg !5416
  %arrayidx964 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %580, i64 %581, !dbg !5415
  %x965 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx964, i32 0, i32 0, !dbg !5417
  %582 = load float, float* %x965, align 4, !dbg !5417
  %add966 = fadd float %add963, %582, !dbg !5418
  %red967 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5419
  store float %add966, float* %red967, align 8, !dbg !5420
  %583 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5421
  %584 = load i64, i64* %red944, align 8, !dbg !5422
  %arrayidx968 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %583, i64 %584, !dbg !5421
  %y969 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx968, i32 0, i32 1, !dbg !5423
  %585 = load float, float* %y969, align 4, !dbg !5423
  %586 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5424
  %587 = load i64, i64* %green943, align 8, !dbg !5425
  %arrayidx970 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %586, i64 %587, !dbg !5424
  %y971 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx970, i32 0, i32 1, !dbg !5426
  %588 = load float, float* %y971, align 4, !dbg !5426
  %add972 = fadd float %585, %588, !dbg !5427
  %589 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5428
  %590 = load i64, i64* %blue942, align 8, !dbg !5429
  %arrayidx973 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %589, i64 %590, !dbg !5428
  %y974 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx973, i32 0, i32 1, !dbg !5430
  %591 = load float, float* %y974, align 4, !dbg !5430
  %add975 = fadd float %add972, %591, !dbg !5431
  %green976 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5432
  store float %add975, float* %green976, align 4, !dbg !5433
  %592 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5434
  %593 = load i64, i64* %red944, align 8, !dbg !5435
  %arrayidx977 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %592, i64 %593, !dbg !5434
  %z978 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx977, i32 0, i32 2, !dbg !5436
  %594 = load float, float* %z978, align 4, !dbg !5436
  %595 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5437
  %596 = load i64, i64* %green943, align 8, !dbg !5438
  %arrayidx979 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %595, i64 %596, !dbg !5437
  %z980 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx979, i32 0, i32 2, !dbg !5439
  %597 = load float, float* %z980, align 4, !dbg !5439
  %add981 = fadd float %594, %597, !dbg !5440
  %598 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5441
  %599 = load i64, i64* %blue942, align 8, !dbg !5442
  %arrayidx982 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %598, i64 %599, !dbg !5441
  %z983 = getelementptr inbounds %struct._TransformPacket, %struct._TransformPacket* %arrayidx982, i32 0, i32 2, !dbg !5443
  %600 = load float, float* %z983, align 4, !dbg !5443
  %add984 = fadd float %add981, %600, !dbg !5444
  %blue985 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5445
  store float %add984, float* %blue985, align 8, !dbg !5446
  %601 = load i32, i32* %colorspace.addr, align 4, !dbg !5447
  %cmp986 = icmp eq i32 %601, 8, !dbg !5449
  br i1 %cmp986, label %if.then988, label %if.else1016, !dbg !5450

if.then988:                                       ; preds = %for.body940
  %red989 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5451
  %602 = load float, float* %red989, align 8, !dbg !5451
  %conv990 = fpext float %602 to double, !dbg !5453
  %mul991 = fmul double 1.024000e+03, %conv990, !dbg !5454
  %div992 = fdiv double %mul991, 6.553500e+04, !dbg !5455
  %conv993 = fptrunc double %div992 to float, !dbg !5456
  %call994 = call i64 @RoundToYCC(float %conv993), !dbg !5457
  %arrayidx995 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call994, !dbg !5458
  %603 = load float, float* %arrayidx995, align 4, !dbg !5458
  %mul996 = fmul float 6.553500e+04, %603, !dbg !5459
  %red997 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5460
  store float %mul996, float* %red997, align 8, !dbg !5461
  %green998 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5462
  %604 = load float, float* %green998, align 4, !dbg !5462
  %conv999 = fpext float %604 to double, !dbg !5463
  %mul1000 = fmul double 1.024000e+03, %conv999, !dbg !5464
  %div1001 = fdiv double %mul1000, 6.553500e+04, !dbg !5465
  %conv1002 = fptrunc double %div1001 to float, !dbg !5466
  %call1003 = call i64 @RoundToYCC(float %conv1002), !dbg !5467
  %arrayidx1004 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call1003, !dbg !5468
  %605 = load float, float* %arrayidx1004, align 4, !dbg !5468
  %mul1005 = fmul float 6.553500e+04, %605, !dbg !5469
  %green1006 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5470
  store float %mul1005, float* %green1006, align 4, !dbg !5471
  %blue1007 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5472
  %606 = load float, float* %blue1007, align 8, !dbg !5472
  %conv1008 = fpext float %606 to double, !dbg !5473
  %mul1009 = fmul double 1.024000e+03, %conv1008, !dbg !5474
  %div1010 = fdiv double %mul1009, 6.553500e+04, !dbg !5475
  %conv1011 = fptrunc double %div1010 to float, !dbg !5476
  %call1012 = call i64 @RoundToYCC(float %conv1011), !dbg !5477
  %arrayidx1013 = getelementptr inbounds [1389 x float], [1389 x float]* @TransformRGBImage.YCCMap, i64 0, i64 %call1012, !dbg !5478
  %607 = load float, float* %arrayidx1013, align 4, !dbg !5478
  %mul1014 = fmul float 6.553500e+04, %607, !dbg !5479
  %blue1015 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5480
  store float %mul1014, float* %blue1015, align 8, !dbg !5481
  br label %if.end1029, !dbg !5482

if.else1016:                                      ; preds = %for.body940
  %red1017 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5483
  %608 = load float, float* %red1017, align 8, !dbg !5483
  %call1018 = call zeroext i16 @ScaleMapToQuantum(float %608), !dbg !5485
  %conv1019 = uitofp i16 %call1018 to float, !dbg !5486
  %red1020 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5487
  store float %conv1019, float* %red1020, align 8, !dbg !5488
  %green1021 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5489
  %609 = load float, float* %green1021, align 4, !dbg !5489
  %call1022 = call zeroext i16 @ScaleMapToQuantum(float %609), !dbg !5490
  %conv1023 = uitofp i16 %call1022 to float, !dbg !5491
  %green1024 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5492
  store float %conv1023, float* %green1024, align 4, !dbg !5493
  %blue1025 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5494
  %610 = load float, float* %blue1025, align 8, !dbg !5494
  %call1026 = call zeroext i16 @ScaleMapToQuantum(float %610), !dbg !5495
  %conv1027 = uitofp i16 %call1026 to float, !dbg !5496
  %blue1028 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5497
  store float %conv1027, float* %blue1028, align 8, !dbg !5498
  br label %if.end1029

if.end1029:                                       ; preds = %if.else1016, %if.then988
  %red1030 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 5, !dbg !5499
  %611 = load float, float* %red1030, align 8, !dbg !5499
  %call1031 = call zeroext i16 @ClampToQuantum(float %611), !dbg !5500
  %612 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5501
  %colormap1032 = getelementptr inbounds %struct._Image, %struct._Image* %612, i32 0, i32 11, !dbg !5502
  %613 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1032, align 8, !dbg !5502
  %614 = load i64, i64* %i, align 8, !dbg !5503
  %arrayidx1033 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %613, i64 %614, !dbg !5501
  %red1034 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1033, i32 0, i32 2, !dbg !5504
  store i16 %call1031, i16* %red1034, align 2, !dbg !5505
  %green1035 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 6, !dbg !5506
  %615 = load float, float* %green1035, align 4, !dbg !5506
  %call1036 = call zeroext i16 @ClampToQuantum(float %615), !dbg !5507
  %616 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5508
  %colormap1037 = getelementptr inbounds %struct._Image, %struct._Image* %616, i32 0, i32 11, !dbg !5509
  %617 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1037, align 8, !dbg !5509
  %618 = load i64, i64* %i, align 8, !dbg !5510
  %arrayidx1038 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %617, i64 %618, !dbg !5508
  %green1039 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1038, i32 0, i32 1, !dbg !5511
  store i16 %call1036, i16* %green1039, align 2, !dbg !5512
  %blue1040 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel941, i32 0, i32 7, !dbg !5513
  %619 = load float, float* %blue1040, align 8, !dbg !5513
  %call1041 = call zeroext i16 @ClampToQuantum(float %619), !dbg !5514
  %620 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5515
  %colormap1042 = getelementptr inbounds %struct._Image, %struct._Image* %620, i32 0, i32 11, !dbg !5516
  %621 = load %struct._PixelPacket*, %struct._PixelPacket** %colormap1042, align 8, !dbg !5516
  %622 = load i64, i64* %i, align 8, !dbg !5517
  %arrayidx1043 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %621, i64 %622, !dbg !5515
  %blue1044 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %arrayidx1043, i32 0, i32 0, !dbg !5518
  store i16 %call1041, i16* %blue1044, align 2, !dbg !5519
  br label %for.inc1045, !dbg !5520

for.inc1045:                                      ; preds = %if.end1029
  %623 = load i64, i64* %i, align 8, !dbg !5521
  %inc1046 = add nsw i64 %623, 1, !dbg !5521
  store i64 %inc1046, i64* %i, align 8, !dbg !5521
  br label %for.cond937, !dbg !5522, !llvm.loop !5523

for.end1047:                                      ; preds = %for.cond937
  %624 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5525
  %call1048 = call i32 @SyncImage(%struct._Image* %624), !dbg !5526
  br label %sw.epilog1049, !dbg !5527

sw.epilog1049:                                    ; preds = %for.end1047, %for.end934
  %625 = load %struct._TransformPacket*, %struct._TransformPacket** %z_map, align 8, !dbg !5528
  %626 = bitcast %struct._TransformPacket* %625 to i8*, !dbg !5528
  %call1050 = call i8* @RelinquishMagickMemory(i8* %626), !dbg !5529
  %627 = bitcast i8* %call1050 to %struct._TransformPacket*, !dbg !5530
  store %struct._TransformPacket* %627, %struct._TransformPacket** %z_map, align 8, !dbg !5531
  %628 = load %struct._TransformPacket*, %struct._TransformPacket** %y_map, align 8, !dbg !5532
  %629 = bitcast %struct._TransformPacket* %628 to i8*, !dbg !5532
  %call1051 = call i8* @RelinquishMagickMemory(i8* %629), !dbg !5533
  %630 = bitcast i8* %call1051 to %struct._TransformPacket*, !dbg !5534
  store %struct._TransformPacket* %630, %struct._TransformPacket** %y_map, align 8, !dbg !5535
  %631 = load %struct._TransformPacket*, %struct._TransformPacket** %x_map, align 8, !dbg !5536
  %632 = bitcast %struct._TransformPacket* %631 to i8*, !dbg !5536
  %call1052 = call i8* @RelinquishMagickMemory(i8* %632), !dbg !5537
  %633 = bitcast i8* %call1052 to %struct._TransformPacket*, !dbg !5538
  store %struct._TransformPacket* %633, %struct._TransformPacket** %x_map, align 8, !dbg !5539
  %634 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5540
  %call1053 = call i32 @SetImageColorspace(%struct._Image* %634, i32 13), !dbg !5542
  %cmp1054 = icmp eq i32 %call1053, 0, !dbg !5543
  br i1 %cmp1054, label %if.then1056, label %if.end1057, !dbg !5544

if.then1056:                                      ; preds = %sw.epilog1049
  store i32 0, i32* %retval, align 4, !dbg !5545
  br label %return, !dbg !5545

if.end1057:                                       ; preds = %sw.epilog1049
  store i32 1, i32* %retval, align 4, !dbg !5546
  br label %return, !dbg !5546

return:                                           ; preds = %if.end1057, %if.then1056, %if.end495, %if.end458, %if.then457, %if.then396, %if.then391, %if.end382, %if.then381, %if.then311, %if.then306, %if.end249, %if.end211, %if.then210, %if.then119, %if.then114, %if.end105, %if.then104, %if.then55, %if.then50, %if.then46, %if.end39, %if.then38, %if.then10, %if.then6
  %635 = load i32, i32* %retval, align 4, !dbg !5547
  ret i32 %635, !dbg !5547
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertCMYKToRGB(%struct._MagickPixelPacket* %pixel) #0 !dbg !5548 {
entry:
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5551
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !5552
  %1 = load float, float* %red, align 8, !dbg !5552
  %conv = fpext float %1 to double, !dbg !5551
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !5553
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5554
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 9, !dbg !5555
  %3 = load float, float* %index, align 8, !dbg !5555
  %sub = fsub float 6.553500e+04, %3, !dbg !5556
  %conv1 = fpext float %sub to double, !dbg !5557
  %mul2 = fmul double %mul, %conv1, !dbg !5558
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5559
  %index3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 9, !dbg !5560
  %5 = load float, float* %index3, align 8, !dbg !5560
  %conv4 = fpext float %5 to double, !dbg !5559
  %add = fadd double %mul2, %conv4, !dbg !5561
  %sub5 = fsub double 6.553500e+04, %add, !dbg !5562
  %conv6 = fptrunc double %sub5 to float, !dbg !5563
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5564
  %red7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 5, !dbg !5565
  store float %conv6, float* %red7, align 8, !dbg !5566
  %7 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5567
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %7, i32 0, i32 6, !dbg !5568
  %8 = load float, float* %green, align 4, !dbg !5568
  %conv8 = fpext float %8 to double, !dbg !5567
  %mul9 = fmul double 0x3EF0001000100010, %conv8, !dbg !5569
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5570
  %index10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 9, !dbg !5571
  %10 = load float, float* %index10, align 8, !dbg !5571
  %sub11 = fsub float 6.553500e+04, %10, !dbg !5572
  %conv12 = fpext float %sub11 to double, !dbg !5573
  %mul13 = fmul double %mul9, %conv12, !dbg !5574
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5575
  %index14 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 9, !dbg !5576
  %12 = load float, float* %index14, align 8, !dbg !5576
  %conv15 = fpext float %12 to double, !dbg !5575
  %add16 = fadd double %mul13, %conv15, !dbg !5577
  %sub17 = fsub double 6.553500e+04, %add16, !dbg !5578
  %conv18 = fptrunc double %sub17 to float, !dbg !5579
  %13 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5580
  %green19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %13, i32 0, i32 6, !dbg !5581
  store float %conv18, float* %green19, align 4, !dbg !5582
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5583
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 7, !dbg !5584
  %15 = load float, float* %blue, align 8, !dbg !5584
  %conv20 = fpext float %15 to double, !dbg !5583
  %mul21 = fmul double 0x3EF0001000100010, %conv20, !dbg !5585
  %16 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5586
  %index22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %16, i32 0, i32 9, !dbg !5587
  %17 = load float, float* %index22, align 8, !dbg !5587
  %sub23 = fsub float 6.553500e+04, %17, !dbg !5588
  %conv24 = fpext float %sub23 to double, !dbg !5589
  %mul25 = fmul double %mul21, %conv24, !dbg !5590
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5591
  %index26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !5592
  %19 = load float, float* %index26, align 8, !dbg !5592
  %conv27 = fpext float %19 to double, !dbg !5591
  %add28 = fadd double %mul25, %conv27, !dbg !5593
  %sub29 = fsub double 6.553500e+04, %add28, !dbg !5594
  %conv30 = fptrunc double %sub29 to float, !dbg !5595
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !5596
  %blue31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 7, !dbg !5597
  store float %conv30, float* %blue31, align 8, !dbg !5598
  ret void, !dbg !5599
}

declare dso_local float @EncodePixelGamma(float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertCMYToRGB(double %cyan, double %magenta, double %yellow, i16* %red, i16* %green, i16* %blue) #0 !dbg !5600 {
entry:
  %cyan.addr = alloca double, align 8
  %magenta.addr = alloca double, align 8
  %yellow.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %cyan, double* %cyan.addr, align 8
  call void @llvm.dbg.declare(metadata double* %cyan.addr, metadata !5603, metadata !DIExpression()), !dbg !5604
  store double %magenta, double* %magenta.addr, align 8
  call void @llvm.dbg.declare(metadata double* %magenta.addr, metadata !5605, metadata !DIExpression()), !dbg !5606
  store double %yellow, double* %yellow.addr, align 8
  call void @llvm.dbg.declare(metadata double* %yellow.addr, metadata !5607, metadata !DIExpression()), !dbg !5608
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  %0 = load double, double* %cyan.addr, align 8, !dbg !5615
  %sub = fsub double 1.000000e+00, %0, !dbg !5616
  %mul = fmul double 6.553500e+04, %sub, !dbg !5617
  %conv = fptrunc double %mul to float, !dbg !5618
  %call = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5619
  %1 = load i16*, i16** %red.addr, align 8, !dbg !5620
  store i16 %call, i16* %1, align 2, !dbg !5621
  %2 = load double, double* %magenta.addr, align 8, !dbg !5622
  %sub1 = fsub double 1.000000e+00, %2, !dbg !5623
  %mul2 = fmul double 6.553500e+04, %sub1, !dbg !5624
  %conv3 = fptrunc double %mul2 to float, !dbg !5625
  %call4 = call zeroext i16 @ClampToQuantum(float %conv3), !dbg !5626
  %3 = load i16*, i16** %green.addr, align 8, !dbg !5627
  store i16 %call4, i16* %3, align 2, !dbg !5628
  %4 = load double, double* %yellow.addr, align 8, !dbg !5629
  %sub5 = fsub double 1.000000e+00, %4, !dbg !5630
  %mul6 = fmul double 6.553500e+04, %sub5, !dbg !5631
  %conv7 = fptrunc double %mul6 to float, !dbg !5632
  %call8 = call zeroext i16 @ClampToQuantum(float %conv7), !dbg !5633
  %5 = load i16*, i16** %blue.addr, align 8, !dbg !5634
  store i16 %call8, i16* %5, align 2, !dbg !5635
  ret void, !dbg !5636
}

declare dso_local void @ConvertHCLToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHCLpToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHSBToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHSIToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHSLToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHSVToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertHWBToRGB(double, double, double, i16*, i16*, i16*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLabToRGB(double %L, double %a, double %b, i16* %red, i16* %green, i16* %blue) #0 !dbg !5637 {
entry:
  %L.addr = alloca double, align 8
  %a.addr = alloca double, align 8
  %b.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !5638, metadata !DIExpression()), !dbg !5639
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  store double %b, double* %b.addr, align 8
  call void @llvm.dbg.declare(metadata double* %b.addr, metadata !5642, metadata !DIExpression()), !dbg !5643
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata double* %X, metadata !5650, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata double* %Y, metadata !5652, metadata !DIExpression()), !dbg !5653
  call void @llvm.dbg.declare(metadata double* %Z, metadata !5654, metadata !DIExpression()), !dbg !5655
  %0 = load double, double* %L.addr, align 8, !dbg !5656
  %mul = fmul double 1.000000e+02, %0, !dbg !5657
  %1 = load double, double* %a.addr, align 8, !dbg !5658
  %sub = fsub double %1, 5.000000e-01, !dbg !5659
  %mul1 = fmul double 2.550000e+02, %sub, !dbg !5660
  %2 = load double, double* %b.addr, align 8, !dbg !5661
  %sub2 = fsub double %2, 5.000000e-01, !dbg !5662
  %mul3 = fmul double 2.550000e+02, %sub2, !dbg !5663
  call void @ConvertLabToXYZ(double %mul, double %mul1, double %mul3, double* %X, double* %Y, double* %Z), !dbg !5664
  %3 = load double, double* %X, align 8, !dbg !5665
  %4 = load double, double* %Y, align 8, !dbg !5666
  %5 = load double, double* %Z, align 8, !dbg !5667
  %6 = load i16*, i16** %red.addr, align 8, !dbg !5668
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5669
  %8 = load i16*, i16** %blue.addr, align 8, !dbg !5670
  call void @ConvertXYZToRGB(double %3, double %4, double %5, i16* %6, i16* %7, i16* %8), !dbg !5671
  ret void, !dbg !5672
}

declare dso_local void @ConvertLCHabToRGB(double, double, double, i16*, i16*, i16*) #2

declare dso_local void @ConvertLCHuvToRGB(double, double, double, i16*, i16*, i16*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLMSToRGB(double %L, double %M, double %S, i16* %red, i16* %green, i16* %blue) #0 !dbg !5673 {
entry:
  %L.addr = alloca double, align 8
  %M.addr = alloca double, align 8
  %S.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !5674, metadata !DIExpression()), !dbg !5675
  store double %M, double* %M.addr, align 8
  call void @llvm.dbg.declare(metadata double* %M.addr, metadata !5676, metadata !DIExpression()), !dbg !5677
  store double %S, double* %S.addr, align 8
  call void @llvm.dbg.declare(metadata double* %S.addr, metadata !5678, metadata !DIExpression()), !dbg !5679
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5680, metadata !DIExpression()), !dbg !5681
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5682, metadata !DIExpression()), !dbg !5683
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @llvm.dbg.declare(metadata double* %X, metadata !5686, metadata !DIExpression()), !dbg !5687
  call void @llvm.dbg.declare(metadata double* %Y, metadata !5688, metadata !DIExpression()), !dbg !5689
  call void @llvm.dbg.declare(metadata double* %Z, metadata !5690, metadata !DIExpression()), !dbg !5691
  %0 = load double, double* %L.addr, align 8, !dbg !5692
  %1 = load double, double* %M.addr, align 8, !dbg !5693
  %2 = load double, double* %S.addr, align 8, !dbg !5694
  call void @ConvertLMSToXYZ(double %0, double %1, double %2, double* %X, double* %Y, double* %Z), !dbg !5695
  %3 = load double, double* %X, align 8, !dbg !5696
  %4 = load double, double* %Y, align 8, !dbg !5697
  %5 = load double, double* %Z, align 8, !dbg !5698
  %6 = load i16*, i16** %red.addr, align 8, !dbg !5699
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5700
  %8 = load i16*, i16** %blue.addr, align 8, !dbg !5701
  call void @ConvertXYZToRGB(double %3, double %4, double %5, i16* %6, i16* %7, i16* %8), !dbg !5702
  ret void, !dbg !5703
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLuvToRGB(double %L, double %u, double %v, i16* %red, i16* %green, i16* %blue) #0 !dbg !5704 {
entry:
  %L.addr = alloca double, align 8
  %u.addr = alloca double, align 8
  %v.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %X = alloca double, align 8
  %Y = alloca double, align 8
  %Z = alloca double, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !5705, metadata !DIExpression()), !dbg !5706
  store double %u, double* %u.addr, align 8
  call void @llvm.dbg.declare(metadata double* %u.addr, metadata !5707, metadata !DIExpression()), !dbg !5708
  store double %v, double* %v.addr, align 8
  call void @llvm.dbg.declare(metadata double* %v.addr, metadata !5709, metadata !DIExpression()), !dbg !5710
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata double* %X, metadata !5717, metadata !DIExpression()), !dbg !5718
  call void @llvm.dbg.declare(metadata double* %Y, metadata !5719, metadata !DIExpression()), !dbg !5720
  call void @llvm.dbg.declare(metadata double* %Z, metadata !5721, metadata !DIExpression()), !dbg !5722
  %0 = load double, double* %L.addr, align 8, !dbg !5723
  %mul = fmul double 1.000000e+02, %0, !dbg !5724
  %1 = load double, double* %u.addr, align 8, !dbg !5725
  %mul1 = fmul double 3.540000e+02, %1, !dbg !5726
  %sub = fsub double %mul1, 1.340000e+02, !dbg !5727
  %2 = load double, double* %v.addr, align 8, !dbg !5728
  %mul2 = fmul double 2.620000e+02, %2, !dbg !5729
  %sub3 = fsub double %mul2, 1.400000e+02, !dbg !5730
  call void @ConvertLuvToXYZ(double %mul, double %sub, double %sub3, double* %X, double* %Y, double* %Z), !dbg !5731
  %3 = load double, double* %X, align 8, !dbg !5732
  %4 = load double, double* %Y, align 8, !dbg !5733
  %5 = load double, double* %Z, align 8, !dbg !5734
  %6 = load i16*, i16** %red.addr, align 8, !dbg !5735
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5736
  %8 = load i16*, i16** %blue.addr, align 8, !dbg !5737
  call void @ConvertXYZToRGB(double %3, double %4, double %5, i16* %6, i16* %7, i16* %8), !dbg !5738
  ret void, !dbg !5739
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertXYZToRGB(double %X, double %Y, double %Z, i16* %red, i16* %green, i16* %blue) #0 !dbg !5740 {
entry:
  %X.addr = alloca double, align 8
  %Y.addr = alloca double, align 8
  %Z.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %b = alloca double, align 8
  %g = alloca double, align 8
  %r = alloca double, align 8
  store double %X, double* %X.addr, align 8
  call void @llvm.dbg.declare(metadata double* %X.addr, metadata !5741, metadata !DIExpression()), !dbg !5742
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !5743, metadata !DIExpression()), !dbg !5744
  store double %Z, double* %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Z.addr, metadata !5745, metadata !DIExpression()), !dbg !5746
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5747, metadata !DIExpression()), !dbg !5748
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5749, metadata !DIExpression()), !dbg !5750
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5751, metadata !DIExpression()), !dbg !5752
  call void @llvm.dbg.declare(metadata double* %b, metadata !5753, metadata !DIExpression()), !dbg !5754
  call void @llvm.dbg.declare(metadata double* %g, metadata !5755, metadata !DIExpression()), !dbg !5756
  call void @llvm.dbg.declare(metadata double* %r, metadata !5757, metadata !DIExpression()), !dbg !5758
  %0 = load double, double* %X.addr, align 8, !dbg !5759
  %mul = fmul double 3.240600e+00, %0, !dbg !5760
  %1 = load double, double* %Y.addr, align 8, !dbg !5761
  %mul1 = fmul double 1.537200e+00, %1, !dbg !5762
  %sub = fsub double %mul, %mul1, !dbg !5763
  %2 = load double, double* %Z.addr, align 8, !dbg !5764
  %mul2 = fmul double 4.986000e-01, %2, !dbg !5765
  %sub3 = fsub double %sub, %mul2, !dbg !5766
  store double %sub3, double* %r, align 8, !dbg !5767
  %3 = load double, double* %X.addr, align 8, !dbg !5768
  %mul4 = fmul double 0xBFEF013A92A30553, %3, !dbg !5769
  %4 = load double, double* %Y.addr, align 8, !dbg !5770
  %mul5 = fmul double 1.875800e+00, %4, !dbg !5771
  %add = fadd double %mul4, %mul5, !dbg !5772
  %5 = load double, double* %Z.addr, align 8, !dbg !5773
  %mul6 = fmul double 4.150000e-02, %5, !dbg !5774
  %add7 = fadd double %add, %mul6, !dbg !5775
  store double %add7, double* %g, align 8, !dbg !5776
  %6 = load double, double* %X.addr, align 8, !dbg !5777
  %mul8 = fmul double 5.570000e-02, %6, !dbg !5778
  %7 = load double, double* %Y.addr, align 8, !dbg !5779
  %mul9 = fmul double 2.040000e-01, %7, !dbg !5780
  %sub10 = fsub double %mul8, %mul9, !dbg !5781
  %8 = load double, double* %Z.addr, align 8, !dbg !5782
  %mul11 = fmul double 1.057000e+00, %8, !dbg !5783
  %add12 = fadd double %sub10, %mul11, !dbg !5784
  store double %add12, double* %b, align 8, !dbg !5785
  %9 = load double, double* %r, align 8, !dbg !5786
  %mul13 = fmul double 6.553500e+04, %9, !dbg !5787
  %conv = fptrunc double %mul13 to float, !dbg !5788
  %call = call float @EncodePixelGamma(float %conv), !dbg !5789
  %call14 = call zeroext i16 @ClampToQuantum(float %call), !dbg !5790
  %10 = load i16*, i16** %red.addr, align 8, !dbg !5791
  store i16 %call14, i16* %10, align 2, !dbg !5792
  %11 = load double, double* %g, align 8, !dbg !5793
  %mul15 = fmul double 6.553500e+04, %11, !dbg !5794
  %conv16 = fptrunc double %mul15 to float, !dbg !5795
  %call17 = call float @EncodePixelGamma(float %conv16), !dbg !5796
  %call18 = call zeroext i16 @ClampToQuantum(float %call17), !dbg !5797
  %12 = load i16*, i16** %green.addr, align 8, !dbg !5798
  store i16 %call18, i16* %12, align 2, !dbg !5799
  %13 = load double, double* %b, align 8, !dbg !5800
  %mul19 = fmul double 6.553500e+04, %13, !dbg !5801
  %conv20 = fptrunc double %mul19 to float, !dbg !5802
  %call21 = call float @EncodePixelGamma(float %conv20), !dbg !5803
  %call22 = call zeroext i16 @ClampToQuantum(float %call21), !dbg !5804
  %14 = load i16*, i16** %blue.addr, align 8, !dbg !5805
  store i16 %call22, i16* %14, align 2, !dbg !5806
  ret void, !dbg !5807
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertYCbCrToRGB(double %Y, double %Cb, double %Cr, i16* %red, i16* %green, i16* %blue) #0 !dbg !5808 {
entry:
  %Y.addr = alloca double, align 8
  %Cb.addr = alloca double, align 8
  %Cr.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !5809, metadata !DIExpression()), !dbg !5810
  store double %Cb, double* %Cb.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Cb.addr, metadata !5811, metadata !DIExpression()), !dbg !5812
  store double %Cr, double* %Cr.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Cr.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  %0 = load double, double* %Y.addr, align 8, !dbg !5821
  %1 = load double, double* %Cb.addr, align 8, !dbg !5822
  %2 = load double, double* %Cr.addr, align 8, !dbg !5823
  %3 = load i16*, i16** %red.addr, align 8, !dbg !5824
  %4 = load i16*, i16** %green.addr, align 8, !dbg !5825
  %5 = load i16*, i16** %blue.addr, align 8, !dbg !5826
  call void @ConvertYPbPrToRGB(double %0, double %1, double %2, i16* %3, i16* %4, i16* %5), !dbg !5827
  ret void, !dbg !5828
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertYDbDrToRGB(double %Y, double %Db, double %Dr, i16* %red, i16* %green, i16* %blue) #0 !dbg !5829 {
entry:
  %Y.addr = alloca double, align 8
  %Db.addr = alloca double, align 8
  %Dr.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !5830, metadata !DIExpression()), !dbg !5831
  store double %Db, double* %Db.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Db.addr, metadata !5832, metadata !DIExpression()), !dbg !5833
  store double %Dr, double* %Dr.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Dr.addr, metadata !5834, metadata !DIExpression()), !dbg !5835
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5836, metadata !DIExpression()), !dbg !5837
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5838, metadata !DIExpression()), !dbg !5839
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5840, metadata !DIExpression()), !dbg !5841
  %0 = load double, double* %Y.addr, align 8, !dbg !5842
  %1 = load double, double* %Db.addr, align 8, !dbg !5843
  %sub = fsub double %1, 5.000000e-01, !dbg !5844
  %mul = fmul double 0x3F183265C4C3E002, %sub, !dbg !5845
  %add = fadd double %0, %mul, !dbg !5846
  %2 = load double, double* %Dr.addr, align 8, !dbg !5847
  %sub1 = fsub double %2, 5.000000e-01, !dbg !5848
  %mul2 = fmul double 0x3FE0D446B9A7DF8C, %sub1, !dbg !5849
  %sub3 = fsub double %add, %mul2, !dbg !5850
  %mul4 = fmul double 6.553500e+04, %sub3, !dbg !5851
  %conv = fptrunc double %mul4 to float, !dbg !5852
  %call = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5853
  %3 = load i16*, i16** %red.addr, align 8, !dbg !5854
  store i16 %call, i16* %3, align 2, !dbg !5855
  %4 = load double, double* %Y.addr, align 8, !dbg !5856
  %5 = load double, double* %Db.addr, align 8, !dbg !5857
  %sub5 = fsub double %5, 5.000000e-01, !dbg !5858
  %mul6 = fmul double 0x3FC0876D44C944CC, %sub5, !dbg !5859
  %sub7 = fsub double %4, %mul6, !dbg !5860
  %6 = load double, double* %Dr.addr, align 8, !dbg !5861
  %sub8 = fsub double %6, 5.000000e-01, !dbg !5862
  %mul9 = fmul double 0x3FD1254339516890, %sub8, !dbg !5863
  %add10 = fadd double %sub7, %mul9, !dbg !5864
  %mul11 = fmul double 6.553500e+04, %add10, !dbg !5865
  %conv12 = fptrunc double %mul11 to float, !dbg !5866
  %call13 = call zeroext i16 @ClampToQuantum(float %conv12), !dbg !5867
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5868
  store i16 %call13, i16* %7, align 2, !dbg !5869
  %8 = load double, double* %Y.addr, align 8, !dbg !5870
  %9 = load double, double* %Db.addr, align 8, !dbg !5871
  %sub14 = fsub double %9, 5.000000e-01, !dbg !5872
  %mul15 = fmul double 0x3FE5450D051E42A1, %sub14, !dbg !5873
  %add16 = fadd double %8, %mul15, !dbg !5874
  %10 = load double, double* %Dr.addr, align 8, !dbg !5875
  %sub17 = fsub double %10, 5.000000e-01, !dbg !5876
  %mul18 = fmul double 0x3F14C3315641A00B, %sub17, !dbg !5877
  %sub19 = fsub double %add16, %mul18, !dbg !5878
  %mul20 = fmul double 6.553500e+04, %sub19, !dbg !5879
  %conv21 = fptrunc double %mul20 to float, !dbg !5880
  %call22 = call zeroext i16 @ClampToQuantum(float %conv21), !dbg !5881
  %11 = load i16*, i16** %blue.addr, align 8, !dbg !5882
  store i16 %call22, i16* %11, align 2, !dbg !5883
  ret void, !dbg !5884
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertYIQToRGB(double %Y, double %I, double %Q, i16* %red, i16* %green, i16* %blue) #0 !dbg !5885 {
entry:
  %Y.addr = alloca double, align 8
  %I.addr = alloca double, align 8
  %Q.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !5886, metadata !DIExpression()), !dbg !5887
  store double %I, double* %I.addr, align 8
  call void @llvm.dbg.declare(metadata double* %I.addr, metadata !5888, metadata !DIExpression()), !dbg !5889
  store double %Q, double* %Q.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Q.addr, metadata !5890, metadata !DIExpression()), !dbg !5891
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5892, metadata !DIExpression()), !dbg !5893
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5896, metadata !DIExpression()), !dbg !5897
  %0 = load double, double* %Y.addr, align 8, !dbg !5898
  %1 = load double, double* %I.addr, align 8, !dbg !5899
  %sub = fsub double %1, 5.000000e-01, !dbg !5900
  %mul = fmul double 0x3FEE99F97B356C3F, %sub, !dbg !5901
  %add = fadd double %0, %mul, !dbg !5902
  %2 = load double, double* %Q.addr, align 8, !dbg !5903
  %sub1 = fsub double %2, 5.000000e-01, !dbg !5904
  %mul2 = fmul double 0x3FE3DF6E98D78B83, %sub1, !dbg !5905
  %add3 = fadd double %add, %mul2, !dbg !5906
  %mul4 = fmul double 6.553500e+04, %add3, !dbg !5907
  %conv = fptrunc double %mul4 to float, !dbg !5908
  %call = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5909
  %3 = load i16*, i16** %red.addr, align 8, !dbg !5910
  store i16 %call, i16* %3, align 2, !dbg !5911
  %4 = load double, double* %Y.addr, align 8, !dbg !5912
  %5 = load double, double* %I.addr, align 8, !dbg !5913
  %sub5 = fsub double %5, 5.000000e-01, !dbg !5914
  %mul6 = fmul double 0x3FD16A72CF45E123, %sub5, !dbg !5915
  %sub7 = fsub double %4, %mul6, !dbg !5916
  %6 = load double, double* %Q.addr, align 8, !dbg !5917
  %sub8 = fsub double %6, 5.000000e-01, !dbg !5918
  %mul9 = fmul double 0x3FE4B757836DCD63, %sub8, !dbg !5919
  %sub10 = fsub double %sub7, %mul9, !dbg !5920
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !5921
  %conv12 = fptrunc double %mul11 to float, !dbg !5922
  %call13 = call zeroext i16 @ClampToQuantum(float %conv12), !dbg !5923
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5924
  store i16 %call13, i16* %7, align 2, !dbg !5925
  %8 = load double, double* %Y.addr, align 8, !dbg !5926
  %9 = load double, double* %I.addr, align 8, !dbg !5927
  %sub14 = fsub double %9, 5.000000e-01, !dbg !5928
  %mul15 = fmul double 0x3FF1B63A1D7EA179, %sub14, !dbg !5929
  %sub16 = fsub double %8, %mul15, !dbg !5930
  %10 = load double, double* %Q.addr, align 8, !dbg !5931
  %sub17 = fsub double %10, 5.000000e-01, !dbg !5932
  %mul18 = fmul double 0x3FFB461A6063F4C4, %sub17, !dbg !5933
  %add19 = fadd double %sub16, %mul18, !dbg !5934
  %mul20 = fmul double 6.553500e+04, %add19, !dbg !5935
  %conv21 = fptrunc double %mul20 to float, !dbg !5936
  %call22 = call zeroext i16 @ClampToQuantum(float %conv21), !dbg !5937
  %11 = load i16*, i16** %blue.addr, align 8, !dbg !5938
  store i16 %call22, i16* %11, align 2, !dbg !5939
  ret void, !dbg !5940
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertYPbPrToRGB(double %Y, double %Pb, double %Pr, i16* %red, i16* %green, i16* %blue) #0 !dbg !5941 {
entry:
  %Y.addr = alloca double, align 8
  %Pb.addr = alloca double, align 8
  %Pr.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  store double %Pb, double* %Pb.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Pb.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  store double %Pr, double* %Pr.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Pr.addr, metadata !5946, metadata !DIExpression()), !dbg !5947
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !5948, metadata !DIExpression()), !dbg !5949
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !5950, metadata !DIExpression()), !dbg !5951
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !5952, metadata !DIExpression()), !dbg !5953
  %0 = load double, double* %Y.addr, align 8, !dbg !5954
  %mul = fmul double 0x3FEFFFFFFFFFE1FB, %0, !dbg !5955
  %1 = load double, double* %Pb.addr, align 8, !dbg !5956
  %sub = fsub double %1, 5.000000e-01, !dbg !5957
  %mul1 = fmul double 0x3EB4731C556195D4, %sub, !dbg !5958
  %sub2 = fsub double %mul, %mul1, !dbg !5959
  %2 = load double, double* %Pr.addr, align 8, !dbg !5960
  %sub3 = fsub double %2, 5.000000e-01, !dbg !5961
  %mul4 = fmul double 0x3FF66E971EE48997, %sub3, !dbg !5962
  %add = fadd double %sub2, %mul4, !dbg !5963
  %mul5 = fmul double 6.553500e+04, %add, !dbg !5964
  %conv = fptrunc double %mul5 to float, !dbg !5965
  %call = call zeroext i16 @ClampToQuantum(float %conv), !dbg !5966
  %3 = load i16*, i16** %red.addr, align 8, !dbg !5967
  store i16 %call, i16* %3, align 2, !dbg !5968
  %4 = load double, double* %Y.addr, align 8, !dbg !5969
  %mul6 = fmul double 0x3FEFFFFF7EABA592, %4, !dbg !5970
  %5 = load double, double* %Pb.addr, align 8, !dbg !5971
  %sub7 = fsub double %5, 5.000000e-01, !dbg !5972
  %mul8 = fmul double 0x3FD60651A6C6C2D3, %sub7, !dbg !5973
  %sub9 = fsub double %mul6, %mul8, !dbg !5974
  %6 = load double, double* %Pr.addr, align 8, !dbg !5975
  %sub10 = fsub double %6, 5.000000e-01, !dbg !5976
  %mul11 = fmul double 0x3FE6DA34C675944B, %sub10, !dbg !5977
  %sub12 = fsub double %sub9, %mul11, !dbg !5978
  %mul13 = fmul double 6.553500e+04, %sub12, !dbg !5979
  %conv14 = fptrunc double %mul13 to float, !dbg !5980
  %call15 = call zeroext i16 @ClampToQuantum(float %conv14), !dbg !5981
  %7 = load i16*, i16** %green.addr, align 8, !dbg !5982
  store i16 %call15, i16* %7, align 2, !dbg !5983
  %8 = load double, double* %Y.addr, align 8, !dbg !5984
  %mul16 = fmul double 0x3FF000014CF7A462, %8, !dbg !5985
  %9 = load double, double* %Pb.addr, align 8, !dbg !5986
  %sub17 = fsub double %9, 5.000000e-01, !dbg !5987
  %mul18 = fmul double 0x3FFC5A1CBDC4A56B, %sub17, !dbg !5988
  %add19 = fadd double %mul16, %mul18, !dbg !5989
  %10 = load double, double* %Pr.addr, align 8, !dbg !5990
  %sub20 = fsub double %10, 5.000000e-01, !dbg !5991
  %mul21 = fmul double 0x3EC1FF14448BA0A3, %sub20, !dbg !5992
  %add22 = fadd double %add19, %mul21, !dbg !5993
  %mul23 = fmul double 6.553500e+04, %add22, !dbg !5994
  %conv24 = fptrunc double %mul23 to float, !dbg !5995
  %call25 = call zeroext i16 @ClampToQuantum(float %conv24), !dbg !5996
  %11 = load i16*, i16** %blue.addr, align 8, !dbg !5997
  store i16 %call25, i16* %11, align 2, !dbg !5998
  ret void, !dbg !5999
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertYUVToRGB(double %Y, double %U, double %V, i16* %red, i16* %green, i16* %blue) #0 !dbg !6000 {
entry:
  %Y.addr = alloca double, align 8
  %U.addr = alloca double, align 8
  %V.addr = alloca double, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !6001, metadata !DIExpression()), !dbg !6002
  store double %U, double* %U.addr, align 8
  call void @llvm.dbg.declare(metadata double* %U.addr, metadata !6003, metadata !DIExpression()), !dbg !6004
  store double %V, double* %V.addr, align 8
  call void @llvm.dbg.declare(metadata double* %V.addr, metadata !6005, metadata !DIExpression()), !dbg !6006
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !6007, metadata !DIExpression()), !dbg !6008
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !6009, metadata !DIExpression()), !dbg !6010
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !6011, metadata !DIExpression()), !dbg !6012
  %0 = load double, double* %Y.addr, align 8, !dbg !6013
  %1 = load double, double* %U.addr, align 8, !dbg !6014
  %sub = fsub double %1, 5.000000e-01, !dbg !6015
  %mul = fmul double 0x3F04AFD6A052C652, %sub, !dbg !6016
  %sub1 = fsub double %0, %mul, !dbg !6017
  %2 = load double, double* %V.addr, align 8, !dbg !6018
  %sub2 = fsub double %2, 5.000000e-01, !dbg !6019
  %mul3 = fmul double 0x3FF23CBC40211957, %sub2, !dbg !6020
  %add = fadd double %sub1, %mul3, !dbg !6021
  %mul4 = fmul double 6.553500e+04, %add, !dbg !6022
  %conv = fptrunc double %mul4 to float, !dbg !6023
  %call = call zeroext i16 @ClampToQuantum(float %conv), !dbg !6024
  %3 = load i16*, i16** %red.addr, align 8, !dbg !6025
  store i16 %call, i16* %3, align 2, !dbg !6026
  %4 = load double, double* %Y.addr, align 8, !dbg !6027
  %5 = load double, double* %U.addr, align 8, !dbg !6028
  %sub5 = fsub double %5, 5.000000e-01, !dbg !6029
  %mul6 = fmul double 0x3FD9414AFD6A052C, %sub5, !dbg !6030
  %sub7 = fsub double %4, %mul6, !dbg !6031
  %6 = load double, double* %V.addr, align 8, !dbg !6032
  %sub8 = fsub double %6, 5.000000e-01, !dbg !6033
  %mul9 = fmul double 0x3FE2937565E20109, %sub8, !dbg !6034
  %sub10 = fsub double %sub7, %mul9, !dbg !6035
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !6036
  %conv12 = fptrunc double %mul11 to float, !dbg !6037
  %call13 = call zeroext i16 @ClampToQuantum(float %conv12), !dbg !6038
  %7 = load i16*, i16** %green.addr, align 8, !dbg !6039
  store i16 %call13, i16* %7, align 2, !dbg !6040
  %8 = load double, double* %Y.addr, align 8, !dbg !6041
  %9 = load double, double* %U.addr, align 8, !dbg !6042
  %sub14 = fsub double %9, 5.000000e-01, !dbg !6043
  %mul15 = fmul double 0x400041890CEDE624, %sub14, !dbg !6044
  %add16 = fadd double %8, %mul15, !dbg !6045
  %10 = load double, double* %V.addr, align 8, !dbg !6046
  %sub17 = fsub double %10, 5.000000e-01, !dbg !6047
  %mul18 = fmul double 0x3F3F8C274E17C966, %sub17, !dbg !6048
  %sub19 = fsub double %add16, %mul18, !dbg !6049
  %mul20 = fmul double 6.553500e+04, %sub19, !dbg !6050
  %conv21 = fptrunc double %mul20 to float, !dbg !6051
  %call22 = call zeroext i16 @ClampToQuantum(float %conv21), !dbg !6052
  %11 = load i16*, i16** %blue.addr, align 8, !dbg !6053
  store i16 %call22, i16* %11, align 2, !dbg !6054
  ret void, !dbg !6055
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @RoundToYCC(float %value) #0 !dbg !6056 {
entry:
  %retval = alloca i64, align 8
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !6059, metadata !DIExpression()), !dbg !6060
  %0 = load float, float* %value.addr, align 4, !dbg !6061
  %conv = fpext float %0 to double, !dbg !6061
  %cmp = fcmp ole double %conv, 0.000000e+00, !dbg !6063
  br i1 %cmp, label %if.then, label %if.end, !dbg !6064

if.then:                                          ; preds = %entry
  store i64 0, i64* %retval, align 8, !dbg !6065
  br label %return, !dbg !6065

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !6066
  %conv2 = fpext float %1 to double, !dbg !6066
  %cmp3 = fcmp oge double %conv2, 1.388000e+03, !dbg !6068
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !6069

if.then5:                                         ; preds = %if.end
  store i64 1388, i64* %retval, align 8, !dbg !6070
  br label %return, !dbg !6070

if.end6:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !6071
  %conv7 = fpext float %2 to double, !dbg !6071
  %add = fadd double %conv7, 5.000000e-01, !dbg !6072
  %conv8 = fptosi double %add to i64, !dbg !6073
  store i64 %conv8, i64* %retval, align 8, !dbg !6074
  br label %return, !dbg !6074

return:                                           ; preds = %if.end6, %if.then5, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !6075
  ret i64 %3, !dbg !6075
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertXYZToLab(double %X, double %Y, double %Z, double* %L, double* %a, double* %b) #0 !dbg !6076 {
entry:
  %X.addr = alloca double, align 8
  %Y.addr = alloca double, align 8
  %Z.addr = alloca double, align 8
  %L.addr = alloca double*, align 8
  %a.addr = alloca double*, align 8
  %b.addr = alloca double*, align 8
  %x = alloca double, align 8
  %y = alloca double, align 8
  %z = alloca double, align 8
  store double %X, double* %X.addr, align 8
  call void @llvm.dbg.declare(metadata double* %X.addr, metadata !6079, metadata !DIExpression()), !dbg !6080
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !6081, metadata !DIExpression()), !dbg !6082
  store double %Z, double* %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Z.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  store double* %a, double** %a.addr, align 8
  call void @llvm.dbg.declare(metadata double** %a.addr, metadata !6087, metadata !DIExpression()), !dbg !6088
  store double* %b, double** %b.addr, align 8
  call void @llvm.dbg.declare(metadata double** %b.addr, metadata !6089, metadata !DIExpression()), !dbg !6090
  call void @llvm.dbg.declare(metadata double* %x, metadata !6091, metadata !DIExpression()), !dbg !6092
  call void @llvm.dbg.declare(metadata double* %y, metadata !6093, metadata !DIExpression()), !dbg !6094
  call void @llvm.dbg.declare(metadata double* %z, metadata !6095, metadata !DIExpression()), !dbg !6096
  %0 = load double, double* %X.addr, align 8, !dbg !6097
  %div = fdiv double %0, 0x3FEE6A22B3892EE8, !dbg !6099
  %cmp = fcmp ogt double %div, 0x3F822354D28F7CD6, !dbg !6100
  br i1 %cmp, label %if.then, label %if.else, !dbg !6101

if.then:                                          ; preds = %entry
  %1 = load double, double* %X.addr, align 8, !dbg !6102
  %div1 = fdiv double %1, 0x3FEE6A22B3892EE8, !dbg !6103
  %call = call double @pow(double %div1, double 0x3FD5555555555555) #7, !dbg !6104
  store double %call, double* %x, align 8, !dbg !6105
  br label %if.end, !dbg !6106

if.else:                                          ; preds = %entry
  %2 = load double, double* %X.addr, align 8, !dbg !6107
  %mul = fmul double 0x408C3A5ED097B426, %2, !dbg !6108
  %div2 = fdiv double %mul, 0x3FEE6A22B3892EE8, !dbg !6109
  %add = fadd double %div2, 1.600000e+01, !dbg !6110
  %div3 = fdiv double %add, 1.160000e+02, !dbg !6111
  store double %div3, double* %x, align 8, !dbg !6112
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load double, double* %Y.addr, align 8, !dbg !6113
  %div4 = fdiv double %3, 1.000000e+00, !dbg !6115
  %cmp5 = fcmp ogt double %div4, 0x3F822354D28F7CD6, !dbg !6116
  br i1 %cmp5, label %if.then6, label %if.else9, !dbg !6117

if.then6:                                         ; preds = %if.end
  %4 = load double, double* %Y.addr, align 8, !dbg !6118
  %div7 = fdiv double %4, 1.000000e+00, !dbg !6119
  %call8 = call double @pow(double %div7, double 0x3FD5555555555555) #7, !dbg !6120
  store double %call8, double* %y, align 8, !dbg !6121
  br label %if.end14, !dbg !6122

if.else9:                                         ; preds = %if.end
  %5 = load double, double* %Y.addr, align 8, !dbg !6123
  %mul10 = fmul double 0x408C3A5ED097B426, %5, !dbg !6124
  %div11 = fdiv double %mul10, 1.000000e+00, !dbg !6125
  %add12 = fadd double %div11, 1.600000e+01, !dbg !6126
  %div13 = fdiv double %add12, 1.160000e+02, !dbg !6127
  store double %div13, double* %y, align 8, !dbg !6128
  br label %if.end14

if.end14:                                         ; preds = %if.else9, %if.then6
  %6 = load double, double* %Z.addr, align 8, !dbg !6129
  %div15 = fdiv double %6, 0x3FF16B8950763A19, !dbg !6131
  %cmp16 = fcmp ogt double %div15, 0x3F822354D28F7CD6, !dbg !6132
  br i1 %cmp16, label %if.then17, label %if.else20, !dbg !6133

if.then17:                                        ; preds = %if.end14
  %7 = load double, double* %Z.addr, align 8, !dbg !6134
  %div18 = fdiv double %7, 0x3FF16B8950763A19, !dbg !6135
  %call19 = call double @pow(double %div18, double 0x3FD5555555555555) #7, !dbg !6136
  store double %call19, double* %z, align 8, !dbg !6137
  br label %if.end25, !dbg !6138

if.else20:                                        ; preds = %if.end14
  %8 = load double, double* %Z.addr, align 8, !dbg !6139
  %mul21 = fmul double 0x408C3A5ED097B426, %8, !dbg !6140
  %div22 = fdiv double %mul21, 0x3FF16B8950763A19, !dbg !6141
  %add23 = fadd double %div22, 1.600000e+01, !dbg !6142
  %div24 = fdiv double %add23, 1.160000e+02, !dbg !6143
  store double %div24, double* %z, align 8, !dbg !6144
  br label %if.end25

if.end25:                                         ; preds = %if.else20, %if.then17
  %9 = load double, double* %y, align 8, !dbg !6145
  %mul26 = fmul double 1.160000e+02, %9, !dbg !6146
  %sub = fsub double %mul26, 1.600000e+01, !dbg !6147
  %div27 = fdiv double %sub, 1.000000e+02, !dbg !6148
  %10 = load double*, double** %L.addr, align 8, !dbg !6149
  store double %div27, double* %10, align 8, !dbg !6150
  %11 = load double, double* %x, align 8, !dbg !6151
  %12 = load double, double* %y, align 8, !dbg !6152
  %sub28 = fsub double %11, %12, !dbg !6153
  %mul29 = fmul double 5.000000e+02, %sub28, !dbg !6154
  %div30 = fdiv double %mul29, 2.550000e+02, !dbg !6155
  %add31 = fadd double %div30, 5.000000e-01, !dbg !6156
  %13 = load double*, double** %a.addr, align 8, !dbg !6157
  store double %add31, double* %13, align 8, !dbg !6158
  %14 = load double, double* %y, align 8, !dbg !6159
  %15 = load double, double* %z, align 8, !dbg !6160
  %sub32 = fsub double %14, %15, !dbg !6161
  %mul33 = fmul double 2.000000e+02, %sub32, !dbg !6162
  %div34 = fdiv double %mul33, 2.550000e+02, !dbg !6163
  %add35 = fadd double %div34, 5.000000e-01, !dbg !6164
  %16 = load double*, double** %b.addr, align 8, !dbg !6165
  store double %add35, double* %16, align 8, !dbg !6166
  ret void, !dbg !6167
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertXYZToLMS(double %x, double %y, double %z, double* %L, double* %M, double* %S) #0 !dbg !6168 {
entry:
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  %z.addr = alloca double, align 8
  %L.addr = alloca double*, align 8
  %M.addr = alloca double*, align 8
  %S.addr = alloca double*, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6169, metadata !DIExpression()), !dbg !6170
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6171, metadata !DIExpression()), !dbg !6172
  store double %z, double* %z.addr, align 8
  call void @llvm.dbg.declare(metadata double* %z.addr, metadata !6173, metadata !DIExpression()), !dbg !6174
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !6175, metadata !DIExpression()), !dbg !6176
  store double* %M, double** %M.addr, align 8
  call void @llvm.dbg.declare(metadata double** %M.addr, metadata !6177, metadata !DIExpression()), !dbg !6178
  store double* %S, double** %S.addr, align 8
  call void @llvm.dbg.declare(metadata double** %S.addr, metadata !6179, metadata !DIExpression()), !dbg !6180
  %0 = load double, double* %x.addr, align 8, !dbg !6181
  %mul = fmul double 7.328000e-01, %0, !dbg !6182
  %1 = load double, double* %y.addr, align 8, !dbg !6183
  %mul1 = fmul double 4.296000e-01, %1, !dbg !6184
  %add = fadd double %mul, %mul1, !dbg !6185
  %2 = load double, double* %z.addr, align 8, !dbg !6186
  %mul2 = fmul double 1.624000e-01, %2, !dbg !6187
  %sub = fsub double %add, %mul2, !dbg !6188
  %3 = load double*, double** %L.addr, align 8, !dbg !6189
  store double %sub, double* %3, align 8, !dbg !6190
  %4 = load double, double* %x.addr, align 8, !dbg !6191
  %mul3 = fmul double -7.036000e-01, %4, !dbg !6192
  %5 = load double, double* %y.addr, align 8, !dbg !6193
  %mul4 = fmul double 1.697500e+00, %5, !dbg !6194
  %add5 = fadd double %mul3, %mul4, !dbg !6195
  %6 = load double, double* %z.addr, align 8, !dbg !6196
  %mul6 = fmul double 6.100000e-03, %6, !dbg !6197
  %add7 = fadd double %add5, %mul6, !dbg !6198
  %7 = load double*, double** %M.addr, align 8, !dbg !6199
  store double %add7, double* %7, align 8, !dbg !6200
  %8 = load double, double* %x.addr, align 8, !dbg !6201
  %mul8 = fmul double 3.000000e-03, %8, !dbg !6202
  %9 = load double, double* %y.addr, align 8, !dbg !6203
  %mul9 = fmul double 1.360000e-02, %9, !dbg !6204
  %add10 = fadd double %mul8, %mul9, !dbg !6205
  %10 = load double, double* %z.addr, align 8, !dbg !6206
  %mul11 = fmul double 9.834000e-01, %10, !dbg !6207
  %add12 = fadd double %add10, %mul11, !dbg !6208
  %11 = load double*, double** %S.addr, align 8, !dbg !6209
  store double %add12, double* %11, align 8, !dbg !6210
  ret void, !dbg !6211
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertXYZToLuv(double %X, double %Y, double %Z, double* %L, double* %u, double* %v) #0 !dbg !6212 {
entry:
  %X.addr = alloca double, align 8
  %Y.addr = alloca double, align 8
  %Z.addr = alloca double, align 8
  %L.addr = alloca double*, align 8
  %u.addr = alloca double*, align 8
  %v.addr = alloca double*, align 8
  %alpha = alloca double, align 8
  store double %X, double* %X.addr, align 8
  call void @llvm.dbg.declare(metadata double* %X.addr, metadata !6213, metadata !DIExpression()), !dbg !6214
  store double %Y, double* %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Y.addr, metadata !6215, metadata !DIExpression()), !dbg !6216
  store double %Z, double* %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double* %Z.addr, metadata !6217, metadata !DIExpression()), !dbg !6218
  store double* %L, double** %L.addr, align 8
  call void @llvm.dbg.declare(metadata double** %L.addr, metadata !6219, metadata !DIExpression()), !dbg !6220
  store double* %u, double** %u.addr, align 8
  call void @llvm.dbg.declare(metadata double** %u.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  store double* %v, double** %v.addr, align 8
  call void @llvm.dbg.declare(metadata double** %v.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load double, double* %Y.addr, align 8, !dbg !6227
  %div = fdiv double %0, 1.000000e+00, !dbg !6229
  %cmp = fcmp ogt double %div, 0x3F822354D28F7CD6, !dbg !6230
  br i1 %cmp, label %if.then, label %if.else, !dbg !6231

if.then:                                          ; preds = %entry
  %1 = load double, double* %Y.addr, align 8, !dbg !6232
  %div1 = fdiv double %1, 1.000000e+00, !dbg !6233
  %call = call double @pow(double %div1, double 0x3FD5555555555555) #7, !dbg !6234
  %mul = fmul double 1.160000e+02, %call, !dbg !6235
  %sub = fsub double %mul, 1.600000e+01, !dbg !6236
  %2 = load double*, double** %L.addr, align 8, !dbg !6237
  store double %sub, double* %2, align 8, !dbg !6238
  br label %if.end, !dbg !6239

if.else:                                          ; preds = %entry
  %3 = load double, double* %Y.addr, align 8, !dbg !6240
  %div2 = fdiv double %3, 1.000000e+00, !dbg !6241
  %mul3 = fmul double 0x408C3A5ED097B426, %div2, !dbg !6242
  %4 = load double*, double** %L.addr, align 8, !dbg !6243
  store double %mul3, double* %4, align 8, !dbg !6244
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load double, double* %X.addr, align 8, !dbg !6245
  %6 = load double, double* %Y.addr, align 8, !dbg !6246
  %mul4 = fmul double 1.500000e+01, %6, !dbg !6247
  %add = fadd double %5, %mul4, !dbg !6248
  %7 = load double, double* %Z.addr, align 8, !dbg !6249
  %mul5 = fmul double 3.000000e+00, %7, !dbg !6250
  %add6 = fadd double %add, %mul5, !dbg !6251
  %call7 = call double @PerceptibleReciprocal(double %add6), !dbg !6252
  store double %call7, double* %alpha, align 8, !dbg !6253
  %8 = load double*, double** %L.addr, align 8, !dbg !6254
  %9 = load double, double* %8, align 8, !dbg !6255
  %mul8 = fmul double 1.300000e+01, %9, !dbg !6256
  %10 = load double, double* %alpha, align 8, !dbg !6257
  %mul9 = fmul double 4.000000e+00, %10, !dbg !6258
  %11 = load double, double* %X.addr, align 8, !dbg !6259
  %mul10 = fmul double %mul9, %11, !dbg !6260
  %sub11 = fsub double %mul10, 0x3FC952CD31007F87, !dbg !6261
  %mul12 = fmul double %mul8, %sub11, !dbg !6262
  %12 = load double*, double** %u.addr, align 8, !dbg !6263
  store double %mul12, double* %12, align 8, !dbg !6264
  %13 = load double*, double** %L.addr, align 8, !dbg !6265
  %14 = load double, double* %13, align 8, !dbg !6266
  %mul13 = fmul double 1.300000e+01, %14, !dbg !6267
  %15 = load double, double* %alpha, align 8, !dbg !6268
  %mul14 = fmul double 9.000000e+00, %15, !dbg !6269
  %16 = load double, double* %Y.addr, align 8, !dbg !6270
  %mul15 = fmul double %mul14, %16, !dbg !6271
  %sub16 = fsub double %mul15, 0x3FDDF95190ED8BC1, !dbg !6272
  %mul17 = fmul double %mul13, %sub16, !dbg !6273
  %17 = load double*, double** %v.addr, align 8, !dbg !6274
  store double %mul17, double* %17, align 8, !dbg !6275
  %18 = load double*, double** %L.addr, align 8, !dbg !6276
  %19 = load double, double* %18, align 8, !dbg !6277
  %div18 = fdiv double %19, 1.000000e+02, !dbg !6277
  store double %div18, double* %18, align 8, !dbg !6277
  %20 = load double*, double** %u.addr, align 8, !dbg !6278
  %21 = load double, double* %20, align 8, !dbg !6279
  %add19 = fadd double %21, 1.340000e+02, !dbg !6280
  %div20 = fdiv double %add19, 3.540000e+02, !dbg !6281
  %22 = load double*, double** %u.addr, align 8, !dbg !6282
  store double %div20, double* %22, align 8, !dbg !6283
  %23 = load double*, double** %v.addr, align 8, !dbg !6284
  %24 = load double, double* %23, align 8, !dbg !6285
  %add21 = fadd double %24, 1.400000e+02, !dbg !6286
  %div22 = fdiv double %add21, 2.620000e+02, !dbg !6287
  %25 = load double*, double** %v.addr, align 8, !dbg !6288
  store double %div22, double* %25, align 8, !dbg !6289
  ret void, !dbg !6290
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #2

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLabToXYZ(double %L, double %a, double %b, double* %X, double* %Y, double* %Z) #0 !dbg !6291 {
entry:
  %L.addr = alloca double, align 8
  %a.addr = alloca double, align 8
  %b.addr = alloca double, align 8
  %X.addr = alloca double*, align 8
  %Y.addr = alloca double*, align 8
  %Z.addr = alloca double*, align 8
  %x = alloca double, align 8
  %y = alloca double, align 8
  %z = alloca double, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store double %a, double* %a.addr, align 8
  call void @llvm.dbg.declare(metadata double* %a.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  store double %b, double* %b.addr, align 8
  call void @llvm.dbg.declare(metadata double* %b.addr, metadata !6296, metadata !DIExpression()), !dbg !6297
  store double* %X, double** %X.addr, align 8
  call void @llvm.dbg.declare(metadata double** %X.addr, metadata !6298, metadata !DIExpression()), !dbg !6299
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !6300, metadata !DIExpression()), !dbg !6301
  store double* %Z, double** %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Z.addr, metadata !6302, metadata !DIExpression()), !dbg !6303
  call void @llvm.dbg.declare(metadata double* %x, metadata !6304, metadata !DIExpression()), !dbg !6305
  call void @llvm.dbg.declare(metadata double* %y, metadata !6306, metadata !DIExpression()), !dbg !6307
  call void @llvm.dbg.declare(metadata double* %z, metadata !6308, metadata !DIExpression()), !dbg !6309
  %0 = load double, double* %L.addr, align 8, !dbg !6310
  %add = fadd double %0, 1.600000e+01, !dbg !6311
  %div = fdiv double %add, 1.160000e+02, !dbg !6312
  store double %div, double* %y, align 8, !dbg !6313
  %1 = load double, double* %y, align 8, !dbg !6314
  %2 = load double, double* %a.addr, align 8, !dbg !6315
  %div1 = fdiv double %2, 5.000000e+02, !dbg !6316
  %add2 = fadd double %1, %div1, !dbg !6317
  store double %add2, double* %x, align 8, !dbg !6318
  %3 = load double, double* %y, align 8, !dbg !6319
  %4 = load double, double* %b.addr, align 8, !dbg !6320
  %div3 = fdiv double %4, 2.000000e+02, !dbg !6321
  %sub = fsub double %3, %div3, !dbg !6322
  store double %sub, double* %z, align 8, !dbg !6323
  %5 = load double, double* %x, align 8, !dbg !6324
  %6 = load double, double* %x, align 8, !dbg !6326
  %mul = fmul double %5, %6, !dbg !6327
  %7 = load double, double* %x, align 8, !dbg !6328
  %mul4 = fmul double %mul, %7, !dbg !6329
  %cmp = fcmp ogt double %mul4, 0x3F822354D28F7CD6, !dbg !6330
  br i1 %cmp, label %if.then, label %if.else, !dbg !6331

if.then:                                          ; preds = %entry
  %8 = load double, double* %x, align 8, !dbg !6332
  %9 = load double, double* %x, align 8, !dbg !6333
  %mul5 = fmul double %8, %9, !dbg !6334
  %10 = load double, double* %x, align 8, !dbg !6335
  %mul6 = fmul double %mul5, %10, !dbg !6336
  store double %mul6, double* %x, align 8, !dbg !6337
  br label %if.end, !dbg !6338

if.else:                                          ; preds = %entry
  %11 = load double, double* %x, align 8, !dbg !6339
  %mul7 = fmul double 1.160000e+02, %11, !dbg !6340
  %sub8 = fsub double %mul7, 1.600000e+01, !dbg !6341
  %div9 = fdiv double %sub8, 0x408C3A5ED097B426, !dbg !6342
  store double %div9, double* %x, align 8, !dbg !6343
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load double, double* %y, align 8, !dbg !6344
  %13 = load double, double* %y, align 8, !dbg !6346
  %mul10 = fmul double %12, %13, !dbg !6347
  %14 = load double, double* %y, align 8, !dbg !6348
  %mul11 = fmul double %mul10, %14, !dbg !6349
  %cmp12 = fcmp ogt double %mul11, 0x3F822354D28F7CD6, !dbg !6350
  br i1 %cmp12, label %if.then13, label %if.else16, !dbg !6351

if.then13:                                        ; preds = %if.end
  %15 = load double, double* %y, align 8, !dbg !6352
  %16 = load double, double* %y, align 8, !dbg !6353
  %mul14 = fmul double %15, %16, !dbg !6354
  %17 = load double, double* %y, align 8, !dbg !6355
  %mul15 = fmul double %mul14, %17, !dbg !6356
  store double %mul15, double* %y, align 8, !dbg !6357
  br label %if.end18, !dbg !6358

if.else16:                                        ; preds = %if.end
  %18 = load double, double* %L.addr, align 8, !dbg !6359
  %div17 = fdiv double %18, 0x408C3A5ED097B426, !dbg !6360
  store double %div17, double* %y, align 8, !dbg !6361
  br label %if.end18

if.end18:                                         ; preds = %if.else16, %if.then13
  %19 = load double, double* %z, align 8, !dbg !6362
  %20 = load double, double* %z, align 8, !dbg !6364
  %mul19 = fmul double %19, %20, !dbg !6365
  %21 = load double, double* %z, align 8, !dbg !6366
  %mul20 = fmul double %mul19, %21, !dbg !6367
  %cmp21 = fcmp ogt double %mul20, 0x3F822354D28F7CD6, !dbg !6368
  br i1 %cmp21, label %if.then22, label %if.else25, !dbg !6369

if.then22:                                        ; preds = %if.end18
  %22 = load double, double* %z, align 8, !dbg !6370
  %23 = load double, double* %z, align 8, !dbg !6371
  %mul23 = fmul double %22, %23, !dbg !6372
  %24 = load double, double* %z, align 8, !dbg !6373
  %mul24 = fmul double %mul23, %24, !dbg !6374
  store double %mul24, double* %z, align 8, !dbg !6375
  br label %if.end29, !dbg !6376

if.else25:                                        ; preds = %if.end18
  %25 = load double, double* %z, align 8, !dbg !6377
  %mul26 = fmul double 1.160000e+02, %25, !dbg !6378
  %sub27 = fsub double %mul26, 1.600000e+01, !dbg !6379
  %div28 = fdiv double %sub27, 0x408C3A5ED097B426, !dbg !6380
  store double %div28, double* %z, align 8, !dbg !6381
  br label %if.end29

if.end29:                                         ; preds = %if.else25, %if.then22
  %26 = load double, double* %x, align 8, !dbg !6382
  %mul30 = fmul double 0x3FEE6A22B3892EE8, %26, !dbg !6383
  %27 = load double*, double** %X.addr, align 8, !dbg !6384
  store double %mul30, double* %27, align 8, !dbg !6385
  %28 = load double, double* %y, align 8, !dbg !6386
  %mul31 = fmul double 1.000000e+00, %28, !dbg !6387
  %29 = load double*, double** %Y.addr, align 8, !dbg !6388
  store double %mul31, double* %29, align 8, !dbg !6389
  %30 = load double, double* %z, align 8, !dbg !6390
  %mul32 = fmul double 0x3FF16B8950763A19, %30, !dbg !6391
  %31 = load double*, double** %Z.addr, align 8, !dbg !6392
  store double %mul32, double* %31, align 8, !dbg !6393
  ret void, !dbg !6394
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLMSToXYZ(double %L, double %M, double %S, double* %X, double* %Y, double* %Z) #0 !dbg !6395 {
entry:
  %L.addr = alloca double, align 8
  %M.addr = alloca double, align 8
  %S.addr = alloca double, align 8
  %X.addr = alloca double*, align 8
  %Y.addr = alloca double*, align 8
  %Z.addr = alloca double*, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !6396, metadata !DIExpression()), !dbg !6397
  store double %M, double* %M.addr, align 8
  call void @llvm.dbg.declare(metadata double* %M.addr, metadata !6398, metadata !DIExpression()), !dbg !6399
  store double %S, double* %S.addr, align 8
  call void @llvm.dbg.declare(metadata double* %S.addr, metadata !6400, metadata !DIExpression()), !dbg !6401
  store double* %X, double** %X.addr, align 8
  call void @llvm.dbg.declare(metadata double** %X.addr, metadata !6402, metadata !DIExpression()), !dbg !6403
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !6404, metadata !DIExpression()), !dbg !6405
  store double* %Z, double** %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Z.addr, metadata !6406, metadata !DIExpression()), !dbg !6407
  %0 = load double, double* %L.addr, align 8, !dbg !6408
  %mul = fmul double 0x3FF189B921ADAE79, %0, !dbg !6409
  %1 = load double, double* %M.addr, align 8, !dbg !6410
  %mul1 = fmul double 0x3FD1D8FD5CF39190, %1, !dbg !6411
  %sub = fsub double %mul, %mul1, !dbg !6412
  %2 = load double, double* %S.addr, align 8, !dbg !6413
  %mul2 = fmul double 0x3FC76431AC79AF57, %2, !dbg !6414
  %add = fadd double %sub, %mul2, !dbg !6415
  %3 = load double*, double** %X.addr, align 8, !dbg !6416
  store double %add, double* %3, align 8, !dbg !6417
  %4 = load double, double* %L.addr, align 8, !dbg !6418
  %mul3 = fmul double 0x3FDD1461E3E65650, %4, !dbg !6419
  %5 = load double, double* %M.addr, align 8, !dbg !6420
  %mul4 = fmul double 0x3FDE4E5E00D49C91, %5, !dbg !6421
  %add5 = fadd double %mul3, %mul4, !dbg !6422
  %6 = load double, double* %S.addr, align 8, !dbg !6423
  %mul6 = fmul double 0x3FB275006D14347B, %6, !dbg !6424
  %add7 = fadd double %add5, %mul6, !dbg !6425
  %7 = load double*, double** %Y.addr, align 8, !dbg !6426
  store double %add7, double* %7, align 8, !dbg !6427
  %8 = load double, double* %L.addr, align 8, !dbg !6428
  %mul8 = fmul double 0xBF83B7A3C55CA4E3, %8, !dbg !6429
  %9 = load double, double* %M.addr, align 8, !dbg !6430
  %mul9 = fmul double 0x3F7756D19B98BFF6, %9, !dbg !6431
  %sub10 = fsub double %mul8, %mul9, !dbg !6432
  %10 = load double, double* %S.addr, align 8, !dbg !6433
  %mul11 = fmul double 0x3FF03EC61926520E, %10, !dbg !6434
  %add12 = fadd double %sub10, %mul11, !dbg !6435
  %11 = load double*, double** %Z.addr, align 8, !dbg !6436
  store double %add12, double* %11, align 8, !dbg !6437
  ret void, !dbg !6438
}

; Function Attrs: noinline nounwind uwtable
define internal void @ConvertLuvToXYZ(double %L, double %u, double %v, double* %X, double* %Y, double* %Z) #0 !dbg !6439 {
entry:
  %L.addr = alloca double, align 8
  %u.addr = alloca double, align 8
  %v.addr = alloca double, align 8
  %X.addr = alloca double*, align 8
  %Y.addr = alloca double*, align 8
  %Z.addr = alloca double*, align 8
  store double %L, double* %L.addr, align 8
  call void @llvm.dbg.declare(metadata double* %L.addr, metadata !6440, metadata !DIExpression()), !dbg !6441
  store double %u, double* %u.addr, align 8
  call void @llvm.dbg.declare(metadata double* %u.addr, metadata !6442, metadata !DIExpression()), !dbg !6443
  store double %v, double* %v.addr, align 8
  call void @llvm.dbg.declare(metadata double* %v.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  store double* %X, double** %X.addr, align 8
  call void @llvm.dbg.declare(metadata double** %X.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  store double* %Y, double** %Y.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Y.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  store double* %Z, double** %Z.addr, align 8
  call void @llvm.dbg.declare(metadata double** %Z.addr, metadata !6450, metadata !DIExpression()), !dbg !6451
  %0 = load double, double* %L.addr, align 8, !dbg !6452
  %cmp = fcmp ogt double %0, 8.000000e+00, !dbg !6454
  br i1 %cmp, label %if.then, label %if.else, !dbg !6455

if.then:                                          ; preds = %entry
  %1 = load double, double* %L.addr, align 8, !dbg !6456
  %add = fadd double %1, 1.600000e+01, !dbg !6457
  %div = fdiv double %add, 1.160000e+02, !dbg !6458
  %call = call double @pow(double %div, double 3.000000e+00) #7, !dbg !6459
  %2 = load double*, double** %Y.addr, align 8, !dbg !6460
  store double %call, double* %2, align 8, !dbg !6461
  br label %if.end, !dbg !6462

if.else:                                          ; preds = %entry
  %3 = load double, double* %L.addr, align 8, !dbg !6463
  %div1 = fdiv double %3, 0x408C3A5ED097B426, !dbg !6464
  %4 = load double*, double** %Y.addr, align 8, !dbg !6465
  store double %div1, double* %4, align 8, !dbg !6466
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load double*, double** %Y.addr, align 8, !dbg !6467
  %6 = load double, double* %5, align 8, !dbg !6468
  %7 = load double, double* %L.addr, align 8, !dbg !6469
  %mul = fmul double 3.900000e+01, %7, !dbg !6470
  %8 = load double, double* %v.addr, align 8, !dbg !6471
  %9 = load double, double* %L.addr, align 8, !dbg !6472
  %mul2 = fmul double 1.300000e+01, %9, !dbg !6473
  %mul3 = fmul double %mul2, 0x3FDDF95190ED8BC1, !dbg !6474
  %add4 = fadd double %8, %mul3, !dbg !6475
  %div5 = fdiv double %mul, %add4, !dbg !6476
  %sub = fsub double %div5, 5.000000e+00, !dbg !6477
  %mul6 = fmul double %6, %sub, !dbg !6478
  %10 = load double*, double** %Y.addr, align 8, !dbg !6479
  %11 = load double, double* %10, align 8, !dbg !6480
  %mul7 = fmul double 5.000000e+00, %11, !dbg !6481
  %add8 = fadd double %mul6, %mul7, !dbg !6482
  %12 = load double, double* %L.addr, align 8, !dbg !6483
  %mul9 = fmul double 5.200000e+01, %12, !dbg !6484
  %13 = load double, double* %u.addr, align 8, !dbg !6485
  %14 = load double, double* %L.addr, align 8, !dbg !6486
  %mul10 = fmul double 1.300000e+01, %14, !dbg !6487
  %mul11 = fmul double %mul10, 0x3FC952CD31007F87, !dbg !6488
  %add12 = fadd double %13, %mul11, !dbg !6489
  %div13 = fdiv double %mul9, %add12, !dbg !6490
  %sub14 = fsub double %div13, 1.000000e+00, !dbg !6491
  %div15 = fdiv double %sub14, 3.000000e+00, !dbg !6492
  %sub16 = fsub double %div15, 0xBFD5555555555555, !dbg !6493
  %div17 = fdiv double %add8, %sub16, !dbg !6494
  %15 = load double*, double** %X.addr, align 8, !dbg !6495
  store double %div17, double* %15, align 8, !dbg !6496
  %16 = load double*, double** %X.addr, align 8, !dbg !6497
  %17 = load double, double* %16, align 8, !dbg !6498
  %18 = load double, double* %L.addr, align 8, !dbg !6499
  %mul18 = fmul double 5.200000e+01, %18, !dbg !6500
  %19 = load double, double* %u.addr, align 8, !dbg !6501
  %20 = load double, double* %L.addr, align 8, !dbg !6502
  %mul19 = fmul double 1.300000e+01, %20, !dbg !6503
  %mul20 = fmul double %mul19, 0x3FC952CD31007F87, !dbg !6504
  %add21 = fadd double %19, %mul20, !dbg !6505
  %div22 = fdiv double %mul18, %add21, !dbg !6506
  %sub23 = fsub double %div22, 1.000000e+00, !dbg !6507
  %div24 = fdiv double %sub23, 3.000000e+00, !dbg !6508
  %mul25 = fmul double %17, %div24, !dbg !6509
  %21 = load double*, double** %Y.addr, align 8, !dbg !6510
  %22 = load double, double* %21, align 8, !dbg !6511
  %mul26 = fmul double 5.000000e+00, %22, !dbg !6512
  %sub27 = fsub double %mul25, %mul26, !dbg !6513
  %23 = load double*, double** %Z.addr, align 8, !dbg !6514
  store double %sub27, double* %23, align 8, !dbg !6515
  ret void, !dbg !6516
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0,1) }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!594}
!llvm.module.flags = !{!643, !644, !645}
!llvm.ident = !{!646}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "YCCMap", scope: !2, file: !3, line: 1378, type: !639, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "TransformRGBImage", scope: !3, file: !3, line: 1372, type: !4, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3 = !DIFile(filename: "magick/colorspace.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !13, !593}
!6 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !7, line: 215, baseType: !8)
!7 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!8 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 211, baseType: !9, size: 32, elements: !10)
!9 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!10 = !{!11, !12}
!11 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!14 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !7, line: 221, baseType: !15)
!15 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !16, line: 150, size: 105920, elements: !17)
!16 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!17 = !{!18, !25, !64, !91, !95, !108, !109, !110, !111, !112, !113, !114, !126, !127, !128, !129, !131, !145, !155, !157, !164, !167, !168, !169, !175, !176, !177, !186, !187, !188, !189, !190, !191, !228, !240, !248, !264, !337, !347, !349, !350, !351, !352, !353, !354, !355, !363, !384, !398, !399, !400, !401, !405, !409, !413, !414, !415, !416, !417, !508, !509, !511, !512, !522, !523, !525, !526, !527, !528, !529, !530, !548, !549, !550, !551, !552, !553, !554, !570, !571, !572, !573, !574, !578, !592}
!18 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !15, file: !16, line: 153, baseType: !19, size: 32)
!19 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !7, line: 209, baseType: !20)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7, line: 204, baseType: !9, size: 32, elements: !21)
!21 = !{!22, !23, !24}
!22 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !15, file: !16, line: 156, baseType: !26, size: 32, offset: 32)
!26 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !27, line: 61, baseType: !28)
!27 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !27, line: 25, baseType: !9, size: 32, elements: !29)
!29 = !{!30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63}
!30 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!31 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!32 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!33 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!34 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!35 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!36 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!37 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!38 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!39 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!40 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!41 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!42 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!43 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!44 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!45 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!46 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!47 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!48 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!49 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!50 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!51 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!52 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!53 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!54 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!55 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!56 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!57 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!58 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!59 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!60 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!61 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!62 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!63 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !15, file: !16, line: 159, baseType: !65, size: 32, offset: 64)
!65 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !66, line: 49, baseType: !67)
!66 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!67 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !66, line: 25, baseType: !9, size: 32, elements: !68)
!68 = !{!69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90}
!69 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!72 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!73 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!74 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!75 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!76 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!77 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!78 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!79 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!80 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!81 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!82 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!83 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!84 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!85 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!86 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!87 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!88 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!89 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!90 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !15, file: !16, line: 162, baseType: !92, size: 64, offset: 128)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !93, line: 46, baseType: !94)
!93 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!94 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !15, file: !16, line: 165, baseType: !96, size: 32, offset: 192)
!96 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !16, line: 86, baseType: !97)
!97 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 75, baseType: !9, size: 32, elements: !98)
!98 = !{!99, !100, !101, !102, !103, !104, !105, !106, !107}
!99 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!100 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!101 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!102 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!103 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!104 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!105 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!106 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!107 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !15, file: !16, line: 168, baseType: !6, size: 32, offset: 224)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !15, file: !16, line: 169, baseType: !6, size: 32, offset: 256)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !15, file: !16, line: 172, baseType: !92, size: 64, offset: 320)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !15, file: !16, line: 173, baseType: !92, size: 64, offset: 384)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !15, file: !16, line: 174, baseType: !92, size: 64, offset: 448)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !15, file: !16, line: 175, baseType: !92, size: 64, offset: 512)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !15, file: !16, line: 178, baseType: !115, size: 64, offset: 576)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !117, line: 148, baseType: !118)
!117 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !117, line: 131, size: 64, elements: !119)
!119 = !{!120, !123, !124, !125}
!120 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !118, file: !117, line: 143, baseType: !121, size: 16)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !7, line: 93, baseType: !122)
!122 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !118, file: !117, line: 144, baseType: !121, size: 16, offset: 16)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !118, file: !117, line: 145, baseType: !121, size: 16, offset: 32)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !118, file: !117, line: 146, baseType: !121, size: 16, offset: 48)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !15, file: !16, line: 179, baseType: !116, size: 64, offset: 640)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !15, file: !16, line: 180, baseType: !116, size: 64, offset: 704)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !15, file: !16, line: 181, baseType: !116, size: 64, offset: 768)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !15, file: !16, line: 184, baseType: !130, size: 64, offset: 832)
!130 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !15, file: !16, line: 187, baseType: !132, size: 768, offset: 896)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !16, line: 128, baseType: !133)
!133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !16, line: 121, size: 768, elements: !134)
!134 = !{!135, !142, !143, !144}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !133, file: !16, line: 124, baseType: !136, size: 192)
!136 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !16, line: 101, baseType: !137)
!137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !16, line: 95, size: 192, elements: !138)
!138 = !{!139, !140, !141}
!139 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !137, file: !16, line: 98, baseType: !130, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !137, file: !16, line: 99, baseType: !130, size: 64, offset: 64)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !137, file: !16, line: 100, baseType: !130, size: 64, offset: 128)
!142 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !133, file: !16, line: 125, baseType: !136, size: 192, offset: 192)
!143 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !133, file: !16, line: 126, baseType: !136, size: 192, offset: 384)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !133, file: !16, line: 127, baseType: !136, size: 192, offset: 576)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !15, file: !16, line: 190, baseType: !146, size: 32, offset: 1664)
!146 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !147, line: 49, baseType: !148)
!147 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 42, baseType: !9, size: 32, elements: !149)
!149 = !{!150, !151, !152, !153, !154}
!150 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!151 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!152 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!153 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!154 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !15, file: !16, line: 193, baseType: !156, size: 64, offset: 1728)
!156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !15, file: !16, line: 196, baseType: !158, size: 32, offset: 1792)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !16, line: 93, baseType: !159)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 88, baseType: !9, size: 32, elements: !160)
!160 = !{!161, !162, !163}
!161 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!162 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!163 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !15, file: !16, line: 199, baseType: !165, size: 64, offset: 1856)
!165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !166, size: 64)
!166 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !15, file: !16, line: 200, baseType: !165, size: 64, offset: 1920)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !15, file: !16, line: 201, baseType: !165, size: 64, offset: 1984)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !15, file: !16, line: 204, baseType: !170, size: 64, offset: 2048)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !171, line: 77, baseType: !172)
!171 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!172 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !173, line: 193, baseType: !174)
!173 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!174 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !15, file: !16, line: 207, baseType: !130, size: 64, offset: 2112)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !15, file: !16, line: 208, baseType: !130, size: 64, offset: 2176)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !15, file: !16, line: 211, baseType: !178, size: 256, offset: 2240)
!178 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !179, line: 130, baseType: !180)
!179 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !179, line: 121, size: 256, elements: !181)
!181 = !{!182, !183, !184, !185}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !180, file: !179, line: 124, baseType: !92, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !180, file: !179, line: 125, baseType: !92, size: 64, offset: 64)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !180, file: !179, line: 128, baseType: !170, size: 64, offset: 128)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !180, file: !179, line: 129, baseType: !170, size: 64, offset: 192)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !15, file: !16, line: 212, baseType: !178, size: 256, offset: 2496)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !15, file: !16, line: 213, baseType: !178, size: 256, offset: 2752)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !15, file: !16, line: 216, baseType: !130, size: 64, offset: 3008)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !15, file: !16, line: 217, baseType: !130, size: 64, offset: 3072)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !15, file: !16, line: 218, baseType: !130, size: 64, offset: 3136)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !15, file: !16, line: 221, baseType: !192, size: 32, offset: 3200)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !193, line: 66, baseType: !194)
!193 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!194 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !193, line: 32, baseType: !9, size: 32, elements: !195)
!195 = !{!196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!196 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!197 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!198 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!199 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!200 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!201 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!202 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!203 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!204 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!205 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!206 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!207 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!208 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!209 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!210 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!211 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!212 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!213 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!214 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!215 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!216 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!217 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!218 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!219 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!220 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!221 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!222 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!223 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!224 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!225 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!226 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!227 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !15, file: !16, line: 224, baseType: !229, size: 32, offset: 3232)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !16, line: 73, baseType: !230)
!230 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 63, baseType: !9, size: 32, elements: !231)
!231 = !{!232, !233, !234, !235, !236, !237, !238, !239}
!232 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!233 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!234 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!235 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!236 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!237 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!238 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!239 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !15, file: !16, line: 227, baseType: !241, size: 32, offset: 3264)
!241 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !242, line: 35, baseType: !243)
!242 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !242, line: 30, baseType: !9, size: 32, elements: !244)
!244 = !{!245, !246, !247}
!245 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!246 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!247 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !15, file: !16, line: 230, baseType: !249, size: 32, offset: 3296)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !179, line: 91, baseType: !250)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !179, line: 77, baseType: !9, size: 32, elements: !251)
!251 = !{!252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263}
!252 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!253 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!255 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!256 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!257 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!258 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!259 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!260 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!261 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!262 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!263 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !15, file: !16, line: 233, baseType: !265, size: 32, offset: 3328)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !266, line: 99, baseType: !267)
!266 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!267 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !266, line: 25, baseType: !9, size: 32, elements: !268)
!268 = !{!269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336}
!269 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!270 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!271 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!272 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!273 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!274 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!275 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!276 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!277 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!278 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!279 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!280 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!281 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!282 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!283 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!284 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!285 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!286 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!287 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!288 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!289 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!290 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!291 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!292 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!293 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!294 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!295 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!296 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!297 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!298 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!299 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!300 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!301 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!302 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!303 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!304 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!305 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!306 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!307 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!308 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!309 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!310 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!311 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!312 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!313 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!314 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!315 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!316 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!317 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!318 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!319 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!320 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!321 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!322 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!323 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!324 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!325 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!326 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!327 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!328 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!329 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!330 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!331 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!332 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!333 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!334 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!335 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!336 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !15, file: !16, line: 236, baseType: !338, size: 32, offset: 3360)
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !339, line: 32, baseType: !340)
!339 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!340 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !339, line: 25, baseType: !9, size: 32, elements: !341)
!341 = !{!342, !343, !344, !345, !346}
!342 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!343 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!344 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!345 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!346 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !15, file: !16, line: 239, baseType: !348, size: 64, offset: 3392)
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15, size: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !15, file: !16, line: 242, baseType: !92, size: 64, offset: 3456)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !15, file: !16, line: 243, baseType: !92, size: 64, offset: 3520)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !15, file: !16, line: 246, baseType: !170, size: 64, offset: 3584)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !15, file: !16, line: 249, baseType: !92, size: 64, offset: 3648)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !15, file: !16, line: 250, baseType: !92, size: 64, offset: 3712)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !15, file: !16, line: 253, baseType: !170, size: 64, offset: 3776)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !15, file: !16, line: 256, baseType: !356, size: 192, offset: 3840)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !357, line: 68, baseType: !358)
!357 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !357, line: 62, size: 192, elements: !359)
!359 = !{!360, !361, !362}
!360 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !358, file: !357, line: 65, baseType: !130, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !358, file: !357, line: 66, baseType: !130, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !358, file: !357, line: 67, baseType: !130, size: 64, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !15, file: !16, line: 259, baseType: !364, size: 512, offset: 4032)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !365, line: 51, baseType: !366)
!365 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !365, line: 40, size: 512, elements: !367)
!367 = !{!368, !375, !376, !383}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !366, file: !365, line: 43, baseType: !369, size: 192)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !365, line: 38, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !365, line: 32, size: 192, elements: !371)
!371 = !{!372, !373, !374}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !370, file: !365, line: 35, baseType: !130, size: 64)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !370, file: !365, line: 36, baseType: !130, size: 64, offset: 64)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !370, file: !365, line: 37, baseType: !130, size: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !366, file: !365, line: 44, baseType: !369, size: 192, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !366, file: !365, line: 47, baseType: !377, size: 32, offset: 384)
!377 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !365, line: 30, baseType: !378)
!378 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !365, line: 25, baseType: !9, size: 32, elements: !379)
!379 = !{!380, !381, !382}
!380 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !366, file: !365, line: 50, baseType: !92, size: 64, offset: 448)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !15, file: !16, line: 262, baseType: !385, size: 64, offset: 4544)
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !386, line: 26, baseType: !387)
!386 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!6, !390, !392, !395, !156}
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !166)
!392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !393)
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !7, line: 150, baseType: !394)
!394 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !396)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !7, line: 151, baseType: !397)
!397 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !15, file: !16, line: 265, baseType: !156, size: 64, offset: 4608)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !15, file: !16, line: 266, baseType: !156, size: 64, offset: 4672)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !15, file: !16, line: 267, baseType: !156, size: 64, offset: 4736)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !15, file: !16, line: 270, baseType: !402, size: 64, offset: 4800)
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !403, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !66, line: 52, baseType: !404)
!404 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !66, line: 51, flags: DIFlagFwdDecl)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !15, file: !16, line: 273, baseType: !406, size: 64, offset: 4864)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !7, line: 217, baseType: !408)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !7, line: 217, flags: DIFlagFwdDecl)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !15, file: !16, line: 276, baseType: !410, size: 32768, offset: 4928)
!410 = !DICompositeType(tag: DW_TAG_array_type, baseType: !166, size: 32768, elements: !411)
!411 = !{!412}
!412 = !DISubrange(count: 4096)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !15, file: !16, line: 277, baseType: !410, size: 32768, offset: 37696)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !15, file: !16, line: 278, baseType: !410, size: 32768, offset: 70464)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !15, file: !16, line: 281, baseType: !92, size: 64, offset: 103232)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !15, file: !16, line: 282, baseType: !92, size: 64, offset: 103296)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !15, file: !16, line: 285, baseType: !418, size: 448, offset: 103360)
!418 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !7, line: 219, baseType: !419)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !420, line: 102, size: 448, elements: !421)
!420 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!421 = !{!422, !496, !498, !499, !500, !501, !502, !507}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !419, file: !420, line: 105, baseType: !423, size: 32)
!423 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !420, line: 100, baseType: !424)
!424 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !420, line: 28, baseType: !9, size: 32, elements: !425)
!425 = !{!426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495}
!426 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!427 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!428 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!429 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!430 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!431 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!432 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!433 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!434 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!435 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!436 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!437 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!438 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!439 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!440 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!441 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!442 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!443 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!444 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!445 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!446 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!447 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!448 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!449 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!450 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!451 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!452 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!453 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!454 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!455 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!456 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!457 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!458 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!459 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!460 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!461 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!462 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!463 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!464 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!465 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!466 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!467 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!468 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!469 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!470 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!471 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!472 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!473 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!474 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!475 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!476 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!477 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!478 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!479 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!480 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!481 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!482 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!483 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!484 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!485 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!486 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!487 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!488 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!489 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!490 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!491 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!492 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!493 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!494 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!495 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !419, file: !420, line: 108, baseType: !497, size: 32, offset: 32)
!497 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !419, file: !420, line: 111, baseType: !165, size: 64, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !419, file: !420, line: 112, baseType: !165, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !419, file: !420, line: 115, baseType: !156, size: 64, offset: 192)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !419, file: !420, line: 118, baseType: !6, size: 32, offset: 256)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !419, file: !420, line: 121, baseType: !503, size: 64, offset: 320)
!503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !505, line: 26, baseType: !506)
!505 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!506 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !505, line: 25, flags: DIFlagFwdDecl)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !419, file: !420, line: 124, baseType: !92, size: 64, offset: 384)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !15, file: !16, line: 288, baseType: !6, size: 32, offset: 103808)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !15, file: !16, line: 291, baseType: !510, size: 64, offset: 103872)
!510 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !170)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !15, file: !16, line: 294, baseType: !503, size: 64, offset: 103936)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !15, file: !16, line: 297, baseType: !513, size: 256, offset: 104000)
!513 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !147, line: 40, baseType: !514)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !147, line: 27, size: 256, elements: !515)
!515 = !{!516, !517, !518, !521}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !514, file: !147, line: 30, baseType: !165, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !514, file: !147, line: 33, baseType: !92, size: 64, offset: 64)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !514, file: !147, line: 36, baseType: !519, size: 64, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !520, size: 64)
!520 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !514, file: !147, line: 39, baseType: !92, size: 64, offset: 192)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !15, file: !16, line: 298, baseType: !513, size: 256, offset: 104256)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !15, file: !16, line: 299, baseType: !524, size: 64, offset: 104512)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !513, size: 64)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !15, file: !16, line: 302, baseType: !92, size: 64, offset: 104576)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !15, file: !16, line: 305, baseType: !92, size: 64, offset: 104640)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !15, file: !16, line: 308, baseType: !348, size: 64, offset: 104704)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !15, file: !16, line: 309, baseType: !348, size: 64, offset: 104768)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15, file: !16, line: 310, baseType: !348, size: 64, offset: 104832)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !15, file: !16, line: 313, baseType: !531, size: 32, offset: 104896)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !117, line: 47, baseType: !532)
!532 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !117, line: 31, baseType: !9, size: 32, elements: !533)
!533 = !{!534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547}
!534 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!535 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!536 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!537 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!538 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!539 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!540 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!541 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!542 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!543 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!544 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!545 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!546 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!547 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !15, file: !16, line: 316, baseType: !6, size: 32, offset: 104928)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !15, file: !16, line: 319, baseType: !116, size: 64, offset: 104960)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !15, file: !16, line: 322, baseType: !348, size: 64, offset: 105024)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !15, file: !16, line: 325, baseType: !178, size: 256, offset: 105088)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !15, file: !16, line: 328, baseType: !156, size: 64, offset: 105344)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !15, file: !16, line: 329, baseType: !156, size: 64, offset: 105408)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !15, file: !16, line: 332, baseType: !555, size: 32, offset: 105472)
!555 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !16, line: 61, baseType: !556)
!556 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !16, line: 47, baseType: !9, size: 32, elements: !557)
!557 = !{!558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569}
!558 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!560 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!561 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!562 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!563 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!564 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!565 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!566 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!567 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!568 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!569 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !15, file: !16, line: 335, baseType: !6, size: 32, offset: 105504)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !15, file: !16, line: 338, baseType: !396, size: 64, offset: 105536)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !15, file: !16, line: 341, baseType: !6, size: 32, offset: 105600)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !15, file: !16, line: 344, baseType: !92, size: 64, offset: 105664)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !15, file: !16, line: 347, baseType: !575, size: 64, offset: 105728)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !576, line: 7, baseType: !577)
!576 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !173, line: 160, baseType: !174)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !15, file: !16, line: 350, baseType: !579, size: 32, offset: 105792)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !117, line: 79, baseType: !580)
!580 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !117, line: 67, baseType: !9, size: 32, elements: !581)
!581 = !{!582, !583, !584, !585, !586, !587, !588, !589, !590, !591}
!582 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!583 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!584 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!585 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!586 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!587 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!588 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!589 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!590 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!591 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !15, file: !16, line: 353, baseType: !92, size: 64, offset: 105856)
!593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!594 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !595, retainedTypes: !621, globals: !637, splitDebugInlining: false, nameTableKind: None)
!595 = !{!8, !20, !28, !67, !97, !148, !159, !194, !230, !243, !250, !267, !340, !378, !424, !532, !556, !580, !596}
!596 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !597, line: 34, baseType: !9, size: 32, elements: !598)
!597 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!598 = !{!599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620}
!599 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!600 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!601 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!602 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!603 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!604 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!605 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!606 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!607 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!608 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!609 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!610 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!611 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!612 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!613 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!614 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!615 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!616 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!617 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!618 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!619 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!620 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!621 = !{!94, !170, !115, !156, !622, !121, !130, !390, !624, !625, !92, !13, !626, !385, !633, !636, !635, !9}
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !7, line: 78, baseType: !623)
!623 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_typedef, name: "TransformPacket", file: !3, line: 77, baseType: !628)
!628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TransformPacket", file: !3, line: 71, size: 96, elements: !629)
!629 = !{!630, !631, !632}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !628, file: !3, line: 74, baseType: !622, size: 32)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !628, file: !3, line: 75, baseType: !622, size: 32, offset: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !628, file: !3, line: 76, baseType: !622, size: 32, offset: 64)
!633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !635)
!635 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !117, line: 129, baseType: !121)
!636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!637 = !{!0}
!638 = !{}
!639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !640, size: 44448, elements: !641)
!640 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !623)
!641 = !{!642}
!642 = !DISubrange(count: 1389)
!643 = !{i32 7, !"Dwarf Version", i32 4}
!644 = !{i32 2, !"Debug Info Version", i32 3}
!645 = !{i32 1, !"wchar_size", i32 4}
!646 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!647 = distinct !DISubprogram(name: "RGBTransformImage", scope: !3, file: !3, line: 199, type: !4, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !594, retainedNodes: !638)
!648 = !DILocalVariable(name: "image", arg: 1, scope: !647, file: !3, line: 199, type: !13)
!649 = !DILocation(line: 199, column: 57, scope: !647)
!650 = !DILocalVariable(name: "colorspace", arg: 2, scope: !647, file: !3, line: 200, type: !593)
!651 = !DILocation(line: 200, column: 24, scope: !647)
!652 = !DILocalVariable(name: "image_view", scope: !647, file: !3, line: 205, type: !653)
!653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !655, line: 50, baseType: !656)
!655 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!656 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !117, line: 160, flags: DIFlagFwdDecl)
!657 = !DILocation(line: 205, column: 6, scope: !647)
!658 = !DILocalVariable(name: "exception", scope: !647, file: !3, line: 208, type: !659)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !418, size: 64)
!660 = !DILocation(line: 208, column: 6, scope: !647)
!661 = !DILocalVariable(name: "status", scope: !647, file: !3, line: 211, type: !6)
!662 = !DILocation(line: 211, column: 5, scope: !647)
!663 = !DILocalVariable(name: "progress", scope: !647, file: !3, line: 214, type: !393)
!664 = !DILocation(line: 214, column: 5, scope: !647)
!665 = !DILocalVariable(name: "primary_info", scope: !647, file: !3, line: 217, type: !136)
!666 = !DILocation(line: 217, column: 5, scope: !647)
!667 = !DILocalVariable(name: "i", scope: !647, file: !3, line: 220, type: !170)
!668 = !DILocation(line: 220, column: 5, scope: !647)
!669 = !DILocalVariable(name: "y", scope: !647, file: !3, line: 223, type: !170)
!670 = !DILocation(line: 223, column: 5, scope: !647)
!671 = !DILocalVariable(name: "x_map", scope: !647, file: !3, line: 226, type: !626)
!672 = !DILocation(line: 226, column: 6, scope: !647)
!673 = !DILocalVariable(name: "y_map", scope: !647, file: !3, line: 227, type: !626)
!674 = !DILocation(line: 227, column: 6, scope: !647)
!675 = !DILocalVariable(name: "z_map", scope: !647, file: !3, line: 228, type: !626)
!676 = !DILocation(line: 228, column: 6, scope: !647)
!677 = !DILocation(line: 232, column: 7, scope: !678)
!678 = distinct !DILexicalBlock(scope: !647, file: !3, line: 232, column: 7)
!679 = !DILocation(line: 232, column: 14, scope: !678)
!680 = !DILocation(line: 232, column: 20, scope: !678)
!681 = !DILocation(line: 232, column: 7, scope: !647)
!682 = !DILocation(line: 233, column: 61, scope: !678)
!683 = !DILocation(line: 233, column: 68, scope: !678)
!684 = !DILocation(line: 233, column: 12, scope: !678)
!685 = !DILocation(line: 233, column: 5, scope: !678)
!686 = !DILocation(line: 237, column: 9, scope: !647)
!687 = !DILocation(line: 238, column: 11, scope: !647)
!688 = !DILocation(line: 239, column: 15, scope: !647)
!689 = !DILocation(line: 239, column: 22, scope: !647)
!690 = !DILocation(line: 239, column: 12, scope: !647)
!691 = !DILocation(line: 240, column: 11, scope: !647)
!692 = !DILocation(line: 240, column: 3, scope: !647)
!693 = !DILocalVariable(name: "zero", scope: !694, file: !3, line: 245, type: !696)
!694 = distinct !DILexicalBlock(scope: !695, file: !3, line: 243, column: 5)
!695 = distinct !DILexicalBlock(scope: !647, file: !3, line: 241, column: 3)
!696 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !117, line: 127, baseType: !697)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !117, line: 104, size: 448, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !705, !706, !707, !708}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !697, file: !117, line: 107, baseType: !19, size: 32)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !697, file: !117, line: 110, baseType: !26, size: 32, offset: 32)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !697, file: !117, line: 113, baseType: !6, size: 32, offset: 64)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !697, file: !117, line: 116, baseType: !130, size: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !697, file: !117, line: 119, baseType: !92, size: 64, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !697, file: !117, line: 122, baseType: !622, size: 32, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !697, file: !117, line: 123, baseType: !622, size: 32, offset: 288)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !697, file: !117, line: 124, baseType: !622, size: 32, offset: 320)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !697, file: !117, line: 125, baseType: !622, size: 32, offset: 352)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !697, file: !117, line: 126, baseType: !622, size: 32, offset: 384)
!709 = !DILocation(line: 245, column: 9, scope: !694)
!710 = !DILocation(line: 250, column: 11, scope: !711)
!711 = distinct !DILexicalBlock(scope: !694, file: !3, line: 250, column: 11)
!712 = !DILocation(line: 250, column: 18, scope: !711)
!713 = !DILocation(line: 250, column: 32, scope: !711)
!714 = !DILocation(line: 250, column: 11, scope: !694)
!715 = !DILocation(line: 252, column: 25, scope: !716)
!716 = distinct !DILexicalBlock(scope: !717, file: !3, line: 252, column: 15)
!717 = distinct !DILexicalBlock(scope: !711, file: !3, line: 251, column: 9)
!718 = !DILocation(line: 252, column: 15, scope: !716)
!719 = !DILocation(line: 252, column: 32, scope: !716)
!720 = !DILocation(line: 252, column: 15, scope: !717)
!721 = !DILocation(line: 253, column: 13, scope: !716)
!722 = !DILocation(line: 254, column: 36, scope: !723)
!723 = distinct !DILexicalBlock(scope: !717, file: !3, line: 254, column: 15)
!724 = !DILocation(line: 254, column: 15, scope: !723)
!725 = !DILocation(line: 254, column: 55, scope: !723)
!726 = !DILocation(line: 254, column: 15, scope: !717)
!727 = !DILocation(line: 255, column: 13, scope: !723)
!728 = !DILocation(line: 256, column: 9, scope: !717)
!729 = !DILocation(line: 257, column: 30, scope: !730)
!730 = distinct !DILexicalBlock(scope: !694, file: !3, line: 257, column: 11)
!731 = !DILocation(line: 257, column: 36, scope: !730)
!732 = !DILocation(line: 257, column: 11, scope: !730)
!733 = !DILocation(line: 257, column: 48, scope: !730)
!734 = !DILocation(line: 257, column: 11, scope: !694)
!735 = !DILocation(line: 258, column: 9, scope: !730)
!736 = !DILocation(line: 259, column: 28, scope: !694)
!737 = !DILocation(line: 259, column: 7, scope: !694)
!738 = !DILocation(line: 260, column: 44, scope: !694)
!739 = !DILocation(line: 260, column: 50, scope: !694)
!740 = !DILocation(line: 260, column: 18, scope: !694)
!741 = !DILocation(line: 260, column: 17, scope: !694)
!742 = !DILocation(line: 265, column: 13, scope: !743)
!743 = distinct !DILexicalBlock(scope: !694, file: !3, line: 265, column: 7)
!744 = !DILocation(line: 265, column: 12, scope: !743)
!745 = !DILocation(line: 265, column: 17, scope: !746)
!746 = distinct !DILexicalBlock(scope: !743, file: !3, line: 265, column: 7)
!747 = !DILocation(line: 265, column: 31, scope: !746)
!748 = !DILocation(line: 265, column: 38, scope: !746)
!749 = !DILocation(line: 265, column: 19, scope: !746)
!750 = !DILocation(line: 265, column: 7, scope: !743)
!751 = !DILocalVariable(name: "sync", scope: !752, file: !3, line: 268, type: !6)
!752 = distinct !DILexicalBlock(scope: !746, file: !3, line: 266, column: 7)
!753 = !DILocation(line: 268, column: 11, scope: !752)
!754 = !DILocalVariable(name: "pixel", scope: !752, file: !3, line: 271, type: !696)
!755 = !DILocation(line: 271, column: 11, scope: !752)
!756 = !DILocalVariable(name: "indexes", scope: !752, file: !3, line: 274, type: !757)
!757 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !636)
!758 = !DILocation(line: 274, column: 21, scope: !752)
!759 = !DILocalVariable(name: "x", scope: !752, file: !3, line: 277, type: !170)
!760 = !DILocation(line: 277, column: 11, scope: !752)
!761 = !DILocalVariable(name: "q", scope: !752, file: !3, line: 280, type: !762)
!762 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !115)
!763 = !DILocation(line: 280, column: 21, scope: !752)
!764 = !DILocation(line: 282, column: 13, scope: !765)
!765 = distinct !DILexicalBlock(scope: !752, file: !3, line: 282, column: 13)
!766 = !DILocation(line: 282, column: 20, scope: !765)
!767 = !DILocation(line: 282, column: 13, scope: !752)
!768 = !DILocation(line: 283, column: 11, scope: !765)
!769 = !DILocation(line: 284, column: 39, scope: !752)
!770 = !DILocation(line: 284, column: 52, scope: !752)
!771 = !DILocation(line: 284, column: 54, scope: !752)
!772 = !DILocation(line: 284, column: 61, scope: !752)
!773 = !DILocation(line: 285, column: 11, scope: !752)
!774 = !DILocation(line: 284, column: 11, scope: !752)
!775 = !DILocation(line: 284, column: 10, scope: !752)
!776 = !DILocation(line: 286, column: 13, scope: !777)
!777 = distinct !DILexicalBlock(scope: !752, file: !3, line: 286, column: 13)
!778 = !DILocation(line: 286, column: 15, scope: !777)
!779 = !DILocation(line: 286, column: 13, scope: !752)
!780 = !DILocation(line: 288, column: 19, scope: !781)
!781 = distinct !DILexicalBlock(scope: !777, file: !3, line: 287, column: 11)
!782 = !DILocation(line: 289, column: 13, scope: !781)
!783 = !DILocation(line: 291, column: 49, scope: !752)
!784 = !DILocation(line: 291, column: 17, scope: !752)
!785 = !DILocation(line: 291, column: 16, scope: !752)
!786 = !DILocation(line: 292, column: 15, scope: !752)
!787 = !DILocation(line: 293, column: 15, scope: !788)
!788 = distinct !DILexicalBlock(scope: !752, file: !3, line: 293, column: 9)
!789 = !DILocation(line: 293, column: 14, scope: !788)
!790 = !DILocation(line: 293, column: 19, scope: !791)
!791 = distinct !DILexicalBlock(scope: !788, file: !3, line: 293, column: 9)
!792 = !DILocation(line: 293, column: 33, scope: !791)
!793 = !DILocation(line: 293, column: 40, scope: !791)
!794 = !DILocation(line: 293, column: 21, scope: !791)
!795 = !DILocation(line: 293, column: 9, scope: !788)
!796 = !DILocation(line: 295, column: 32, scope: !797)
!797 = distinct !DILexicalBlock(scope: !791, file: !3, line: 294, column: 9)
!798 = !DILocation(line: 295, column: 38, scope: !797)
!799 = !DILocation(line: 295, column: 40, scope: !797)
!800 = !DILocation(line: 295, column: 48, scope: !797)
!801 = !DILocation(line: 295, column: 47, scope: !797)
!802 = !DILocation(line: 295, column: 11, scope: !797)
!803 = !DILocation(line: 296, column: 44, scope: !797)
!804 = !DILocation(line: 296, column: 17, scope: !797)
!805 = !DILocation(line: 296, column: 20, scope: !797)
!806 = !DILocation(line: 297, column: 46, scope: !797)
!807 = !DILocation(line: 297, column: 17, scope: !797)
!808 = !DILocation(line: 297, column: 22, scope: !797)
!809 = !DILocation(line: 298, column: 45, scope: !797)
!810 = !DILocation(line: 298, column: 17, scope: !797)
!811 = !DILocation(line: 298, column: 21, scope: !797)
!812 = !DILocation(line: 299, column: 11, scope: !797)
!813 = !DILocation(line: 300, column: 26, scope: !797)
!814 = !DILocation(line: 300, column: 39, scope: !797)
!815 = !DILocation(line: 300, column: 41, scope: !797)
!816 = !DILocation(line: 300, column: 49, scope: !797)
!817 = !DILocation(line: 300, column: 48, scope: !797)
!818 = !DILocation(line: 300, column: 11, scope: !797)
!819 = !DILocation(line: 301, column: 12, scope: !797)
!820 = !DILocation(line: 302, column: 9, scope: !797)
!821 = !DILocation(line: 293, column: 50, scope: !791)
!822 = !DILocation(line: 293, column: 9, scope: !791)
!823 = distinct !{!823, !795, !824}
!824 = !DILocation(line: 302, column: 9, scope: !788)
!825 = !DILocation(line: 303, column: 43, scope: !752)
!826 = !DILocation(line: 303, column: 54, scope: !752)
!827 = !DILocation(line: 303, column: 14, scope: !752)
!828 = !DILocation(line: 303, column: 13, scope: !752)
!829 = !DILocation(line: 304, column: 13, scope: !830)
!830 = distinct !DILexicalBlock(scope: !752, file: !3, line: 304, column: 13)
!831 = !DILocation(line: 304, column: 18, scope: !830)
!832 = !DILocation(line: 304, column: 13, scope: !752)
!833 = !DILocation(line: 305, column: 17, scope: !830)
!834 = !DILocation(line: 305, column: 11, scope: !830)
!835 = !DILocation(line: 306, column: 7, scope: !752)
!836 = !DILocation(line: 265, column: 45, scope: !746)
!837 = !DILocation(line: 265, column: 7, scope: !746)
!838 = distinct !{!838, !750, !839}
!839 = !DILocation(line: 306, column: 7, scope: !743)
!840 = !DILocation(line: 307, column: 35, scope: !694)
!841 = !DILocation(line: 307, column: 18, scope: !694)
!842 = !DILocation(line: 307, column: 17, scope: !694)
!843 = !DILocation(line: 308, column: 19, scope: !694)
!844 = !DILocation(line: 308, column: 26, scope: !694)
!845 = !DILocation(line: 308, column: 32, scope: !694)
!846 = !DILocation(line: 308, column: 7, scope: !694)
!847 = !DILocation(line: 308, column: 14, scope: !694)
!848 = !DILocation(line: 308, column: 18, scope: !694)
!849 = !DILocation(line: 310, column: 30, scope: !850)
!850 = distinct !DILexicalBlock(scope: !694, file: !3, line: 310, column: 11)
!851 = !DILocation(line: 310, column: 36, scope: !850)
!852 = !DILocation(line: 310, column: 11, scope: !850)
!853 = !DILocation(line: 310, column: 48, scope: !850)
!854 = !DILocation(line: 310, column: 11, scope: !694)
!855 = !DILocation(line: 311, column: 9, scope: !850)
!856 = !DILocation(line: 312, column: 14, scope: !694)
!857 = !DILocation(line: 312, column: 7, scope: !694)
!858 = !DILocation(line: 319, column: 11, scope: !859)
!859 = distinct !DILexicalBlock(scope: !860, file: !3, line: 319, column: 11)
!860 = distinct !DILexicalBlock(scope: !695, file: !3, line: 315, column: 5)
!861 = !DILocation(line: 319, column: 18, scope: !859)
!862 = !DILocation(line: 319, column: 32, scope: !859)
!863 = !DILocation(line: 319, column: 11, scope: !860)
!864 = !DILocation(line: 321, column: 25, scope: !865)
!865 = distinct !DILexicalBlock(scope: !866, file: !3, line: 321, column: 15)
!866 = distinct !DILexicalBlock(scope: !859, file: !3, line: 320, column: 9)
!867 = !DILocation(line: 321, column: 15, scope: !865)
!868 = !DILocation(line: 321, column: 32, scope: !865)
!869 = !DILocation(line: 321, column: 15, scope: !866)
!870 = !DILocation(line: 322, column: 13, scope: !865)
!871 = !DILocation(line: 323, column: 36, scope: !872)
!872 = distinct !DILexicalBlock(scope: !866, file: !3, line: 323, column: 15)
!873 = !DILocation(line: 323, column: 15, scope: !872)
!874 = !DILocation(line: 323, column: 55, scope: !872)
!875 = !DILocation(line: 323, column: 15, scope: !866)
!876 = !DILocation(line: 324, column: 13, scope: !872)
!877 = !DILocation(line: 325, column: 9, scope: !866)
!878 = !DILocation(line: 326, column: 44, scope: !860)
!879 = !DILocation(line: 326, column: 50, scope: !860)
!880 = !DILocation(line: 326, column: 18, scope: !860)
!881 = !DILocation(line: 326, column: 17, scope: !860)
!882 = !DILocation(line: 331, column: 13, scope: !883)
!883 = distinct !DILexicalBlock(scope: !860, file: !3, line: 331, column: 7)
!884 = !DILocation(line: 331, column: 12, scope: !883)
!885 = !DILocation(line: 331, column: 17, scope: !886)
!886 = distinct !DILexicalBlock(scope: !883, file: !3, line: 331, column: 7)
!887 = !DILocation(line: 331, column: 31, scope: !886)
!888 = !DILocation(line: 331, column: 38, scope: !886)
!889 = !DILocation(line: 331, column: 19, scope: !886)
!890 = !DILocation(line: 331, column: 7, scope: !883)
!891 = !DILocalVariable(name: "sync", scope: !892, file: !3, line: 334, type: !6)
!892 = distinct !DILexicalBlock(scope: !886, file: !3, line: 332, column: 7)
!893 = !DILocation(line: 334, column: 11, scope: !892)
!894 = !DILocalVariable(name: "x", scope: !892, file: !3, line: 337, type: !170)
!895 = !DILocation(line: 337, column: 11, scope: !892)
!896 = !DILocalVariable(name: "q", scope: !892, file: !3, line: 340, type: !762)
!897 = !DILocation(line: 340, column: 21, scope: !892)
!898 = !DILocation(line: 342, column: 13, scope: !899)
!899 = distinct !DILexicalBlock(scope: !892, file: !3, line: 342, column: 13)
!900 = !DILocation(line: 342, column: 20, scope: !899)
!901 = !DILocation(line: 342, column: 13, scope: !892)
!902 = !DILocation(line: 343, column: 11, scope: !899)
!903 = !DILocation(line: 344, column: 39, scope: !892)
!904 = !DILocation(line: 344, column: 52, scope: !892)
!905 = !DILocation(line: 344, column: 54, scope: !892)
!906 = !DILocation(line: 344, column: 61, scope: !892)
!907 = !DILocation(line: 345, column: 11, scope: !892)
!908 = !DILocation(line: 344, column: 11, scope: !892)
!909 = !DILocation(line: 344, column: 10, scope: !892)
!910 = !DILocation(line: 346, column: 13, scope: !911)
!911 = distinct !DILexicalBlock(scope: !892, file: !3, line: 346, column: 13)
!912 = !DILocation(line: 346, column: 15, scope: !911)
!913 = !DILocation(line: 346, column: 13, scope: !892)
!914 = !DILocation(line: 348, column: 19, scope: !915)
!915 = distinct !DILexicalBlock(scope: !911, file: !3, line: 347, column: 11)
!916 = !DILocation(line: 349, column: 13, scope: !915)
!917 = !DILocation(line: 351, column: 15, scope: !918)
!918 = distinct !DILexicalBlock(scope: !892, file: !3, line: 351, column: 9)
!919 = !DILocation(line: 351, column: 14, scope: !918)
!920 = !DILocation(line: 351, column: 19, scope: !921)
!921 = distinct !DILexicalBlock(scope: !918, file: !3, line: 351, column: 9)
!922 = !DILocation(line: 351, column: 33, scope: !921)
!923 = !DILocation(line: 351, column: 40, scope: !921)
!924 = !DILocation(line: 351, column: 21, scope: !921)
!925 = !DILocation(line: 351, column: 9, scope: !918)
!926 = !DILocation(line: 353, column: 11, scope: !927)
!927 = distinct !DILexicalBlock(scope: !921, file: !3, line: 352, column: 9)
!928 = !DILocation(line: 354, column: 12, scope: !927)
!929 = !DILocation(line: 355, column: 9, scope: !927)
!930 = !DILocation(line: 351, column: 50, scope: !921)
!931 = !DILocation(line: 351, column: 9, scope: !921)
!932 = distinct !{!932, !925, !933}
!933 = !DILocation(line: 355, column: 9, scope: !918)
!934 = !DILocation(line: 356, column: 43, scope: !892)
!935 = !DILocation(line: 356, column: 54, scope: !892)
!936 = !DILocation(line: 356, column: 14, scope: !892)
!937 = !DILocation(line: 356, column: 13, scope: !892)
!938 = !DILocation(line: 357, column: 13, scope: !939)
!939 = distinct !DILexicalBlock(scope: !892, file: !3, line: 357, column: 13)
!940 = !DILocation(line: 357, column: 18, scope: !939)
!941 = !DILocation(line: 357, column: 13, scope: !892)
!942 = !DILocation(line: 358, column: 17, scope: !939)
!943 = !DILocation(line: 358, column: 11, scope: !939)
!944 = !DILocation(line: 359, column: 7, scope: !892)
!945 = !DILocation(line: 331, column: 45, scope: !886)
!946 = !DILocation(line: 331, column: 7, scope: !886)
!947 = distinct !{!947, !890, !948}
!948 = !DILocation(line: 359, column: 7, scope: !883)
!949 = !DILocation(line: 360, column: 35, scope: !860)
!950 = !DILocation(line: 360, column: 18, scope: !860)
!951 = !DILocation(line: 360, column: 17, scope: !860)
!952 = !DILocation(line: 361, column: 30, scope: !953)
!953 = distinct !DILexicalBlock(scope: !860, file: !3, line: 361, column: 11)
!954 = !DILocation(line: 361, column: 36, scope: !953)
!955 = !DILocation(line: 361, column: 11, scope: !953)
!956 = !DILocation(line: 361, column: 48, scope: !953)
!957 = !DILocation(line: 361, column: 11, scope: !860)
!958 = !DILocation(line: 362, column: 9, scope: !953)
!959 = !DILocation(line: 363, column: 7, scope: !860)
!960 = !DILocation(line: 363, column: 14, scope: !860)
!961 = !DILocation(line: 363, column: 18, scope: !860)
!962 = !DILocation(line: 364, column: 14, scope: !860)
!963 = !DILocation(line: 364, column: 7, scope: !860)
!964 = !DILocation(line: 390, column: 11, scope: !965)
!965 = distinct !DILexicalBlock(scope: !966, file: !3, line: 390, column: 11)
!966 = distinct !DILexicalBlock(scope: !695, file: !3, line: 386, column: 5)
!967 = !DILocation(line: 390, column: 18, scope: !965)
!968 = !DILocation(line: 390, column: 32, scope: !965)
!969 = !DILocation(line: 390, column: 11, scope: !966)
!970 = !DILocation(line: 392, column: 25, scope: !971)
!971 = distinct !DILexicalBlock(scope: !972, file: !3, line: 392, column: 15)
!972 = distinct !DILexicalBlock(scope: !965, file: !3, line: 391, column: 9)
!973 = !DILocation(line: 392, column: 15, scope: !971)
!974 = !DILocation(line: 392, column: 32, scope: !971)
!975 = !DILocation(line: 392, column: 15, scope: !972)
!976 = !DILocation(line: 393, column: 13, scope: !971)
!977 = !DILocation(line: 394, column: 36, scope: !978)
!978 = distinct !DILexicalBlock(scope: !972, file: !3, line: 394, column: 15)
!979 = !DILocation(line: 394, column: 15, scope: !978)
!980 = !DILocation(line: 394, column: 55, scope: !978)
!981 = !DILocation(line: 394, column: 15, scope: !972)
!982 = !DILocation(line: 395, column: 13, scope: !978)
!983 = !DILocation(line: 396, column: 9, scope: !972)
!984 = !DILocation(line: 397, column: 44, scope: !966)
!985 = !DILocation(line: 397, column: 50, scope: !966)
!986 = !DILocation(line: 397, column: 18, scope: !966)
!987 = !DILocation(line: 397, column: 17, scope: !966)
!988 = !DILocation(line: 402, column: 13, scope: !989)
!989 = distinct !DILexicalBlock(scope: !966, file: !3, line: 402, column: 7)
!990 = !DILocation(line: 402, column: 12, scope: !989)
!991 = !DILocation(line: 402, column: 17, scope: !992)
!992 = distinct !DILexicalBlock(scope: !989, file: !3, line: 402, column: 7)
!993 = !DILocation(line: 402, column: 31, scope: !992)
!994 = !DILocation(line: 402, column: 38, scope: !992)
!995 = !DILocation(line: 402, column: 19, scope: !992)
!996 = !DILocation(line: 402, column: 7, scope: !989)
!997 = !DILocalVariable(name: "sync", scope: !998, file: !3, line: 405, type: !6)
!998 = distinct !DILexicalBlock(scope: !992, file: !3, line: 403, column: 7)
!999 = !DILocation(line: 405, column: 11, scope: !998)
!1000 = !DILocalVariable(name: "x", scope: !998, file: !3, line: 408, type: !170)
!1001 = !DILocation(line: 408, column: 11, scope: !998)
!1002 = !DILocalVariable(name: "q", scope: !998, file: !3, line: 411, type: !762)
!1003 = !DILocation(line: 411, column: 21, scope: !998)
!1004 = !DILocation(line: 413, column: 13, scope: !1005)
!1005 = distinct !DILexicalBlock(scope: !998, file: !3, line: 413, column: 13)
!1006 = !DILocation(line: 413, column: 20, scope: !1005)
!1007 = !DILocation(line: 413, column: 13, scope: !998)
!1008 = !DILocation(line: 414, column: 11, scope: !1005)
!1009 = !DILocation(line: 415, column: 39, scope: !998)
!1010 = !DILocation(line: 415, column: 52, scope: !998)
!1011 = !DILocation(line: 415, column: 54, scope: !998)
!1012 = !DILocation(line: 415, column: 61, scope: !998)
!1013 = !DILocation(line: 416, column: 11, scope: !998)
!1014 = !DILocation(line: 415, column: 11, scope: !998)
!1015 = !DILocation(line: 415, column: 10, scope: !998)
!1016 = !DILocation(line: 417, column: 13, scope: !1017)
!1017 = distinct !DILexicalBlock(scope: !998, file: !3, line: 417, column: 13)
!1018 = !DILocation(line: 417, column: 15, scope: !1017)
!1019 = !DILocation(line: 417, column: 13, scope: !998)
!1020 = !DILocation(line: 419, column: 19, scope: !1021)
!1021 = distinct !DILexicalBlock(scope: !1017, file: !3, line: 418, column: 11)
!1022 = !DILocation(line: 420, column: 13, scope: !1021)
!1023 = !DILocation(line: 422, column: 15, scope: !1024)
!1024 = distinct !DILexicalBlock(scope: !998, file: !3, line: 422, column: 9)
!1025 = !DILocation(line: 422, column: 14, scope: !1024)
!1026 = !DILocation(line: 422, column: 19, scope: !1027)
!1027 = distinct !DILexicalBlock(scope: !1024, file: !3, line: 422, column: 9)
!1028 = !DILocation(line: 422, column: 33, scope: !1027)
!1029 = !DILocation(line: 422, column: 40, scope: !1027)
!1030 = !DILocation(line: 422, column: 21, scope: !1027)
!1031 = !DILocation(line: 422, column: 9, scope: !1024)
!1032 = !DILocalVariable(name: "X", scope: !1033, file: !3, line: 425, type: !130)
!1033 = distinct !DILexicalBlock(scope: !1027, file: !3, line: 423, column: 9)
!1034 = !DILocation(line: 425, column: 13, scope: !1033)
!1035 = !DILocalVariable(name: "Y", scope: !1033, file: !3, line: 426, type: !130)
!1036 = !DILocation(line: 426, column: 13, scope: !1033)
!1037 = !DILocalVariable(name: "Z", scope: !1033, file: !3, line: 427, type: !130)
!1038 = !DILocation(line: 427, column: 13, scope: !1033)
!1039 = !DILocalVariable(name: "blue", scope: !1033, file: !3, line: 430, type: !121)
!1040 = !DILocation(line: 430, column: 13, scope: !1033)
!1041 = !DILocalVariable(name: "green", scope: !1033, file: !3, line: 431, type: !121)
!1042 = !DILocation(line: 431, column: 13, scope: !1033)
!1043 = !DILocalVariable(name: "red", scope: !1033, file: !3, line: 432, type: !121)
!1044 = !DILocation(line: 432, column: 13, scope: !1033)
!1045 = !DILocation(line: 434, column: 47, scope: !1033)
!1046 = !DILocation(line: 434, column: 30, scope: !1033)
!1047 = !DILocation(line: 434, column: 15, scope: !1033)
!1048 = !DILocation(line: 434, column: 14, scope: !1033)
!1049 = !DILocation(line: 435, column: 49, scope: !1033)
!1050 = !DILocation(line: 435, column: 32, scope: !1033)
!1051 = !DILocation(line: 435, column: 17, scope: !1033)
!1052 = !DILocation(line: 435, column: 16, scope: !1033)
!1053 = !DILocation(line: 436, column: 48, scope: !1033)
!1054 = !DILocation(line: 436, column: 31, scope: !1033)
!1055 = !DILocation(line: 436, column: 16, scope: !1033)
!1056 = !DILocation(line: 436, column: 15, scope: !1033)
!1057 = !DILocation(line: 437, column: 19, scope: !1033)
!1058 = !DILocation(line: 437, column: 11, scope: !1033)
!1059 = !DILocation(line: 441, column: 31, scope: !1060)
!1060 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 440, column: 13)
!1061 = distinct !DILexicalBlock(scope: !1033, file: !3, line: 438, column: 11)
!1062 = !DILocation(line: 441, column: 35, scope: !1060)
!1063 = !DILocation(line: 441, column: 41, scope: !1060)
!1064 = !DILocation(line: 441, column: 15, scope: !1060)
!1065 = !DILocation(line: 442, column: 15, scope: !1060)
!1066 = !DILocation(line: 446, column: 31, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 445, column: 13)
!1068 = !DILocation(line: 446, column: 35, scope: !1067)
!1069 = !DILocation(line: 446, column: 41, scope: !1067)
!1070 = !DILocation(line: 446, column: 15, scope: !1067)
!1071 = !DILocation(line: 447, column: 15, scope: !1067)
!1072 = !DILocation(line: 451, column: 32, scope: !1073)
!1073 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 450, column: 13)
!1074 = !DILocation(line: 451, column: 36, scope: !1073)
!1075 = !DILocation(line: 451, column: 42, scope: !1073)
!1076 = !DILocation(line: 451, column: 15, scope: !1073)
!1077 = !DILocation(line: 452, column: 15, scope: !1073)
!1078 = !DILocation(line: 456, column: 31, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 455, column: 13)
!1080 = !DILocation(line: 456, column: 35, scope: !1079)
!1081 = !DILocation(line: 456, column: 41, scope: !1079)
!1082 = !DILocation(line: 456, column: 15, scope: !1079)
!1083 = !DILocation(line: 457, column: 15, scope: !1079)
!1084 = !DILocation(line: 461, column: 31, scope: !1085)
!1085 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 460, column: 13)
!1086 = !DILocation(line: 461, column: 35, scope: !1085)
!1087 = !DILocation(line: 461, column: 41, scope: !1085)
!1088 = !DILocation(line: 461, column: 15, scope: !1085)
!1089 = !DILocation(line: 462, column: 15, scope: !1085)
!1090 = !DILocation(line: 466, column: 31, scope: !1091)
!1091 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 465, column: 13)
!1092 = !DILocation(line: 466, column: 35, scope: !1091)
!1093 = !DILocation(line: 466, column: 41, scope: !1091)
!1094 = !DILocation(line: 466, column: 15, scope: !1091)
!1095 = !DILocation(line: 467, column: 15, scope: !1091)
!1096 = !DILocation(line: 471, column: 31, scope: !1097)
!1097 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 470, column: 13)
!1098 = !DILocation(line: 471, column: 35, scope: !1097)
!1099 = !DILocation(line: 471, column: 41, scope: !1097)
!1100 = !DILocation(line: 471, column: 15, scope: !1097)
!1101 = !DILocation(line: 472, column: 15, scope: !1097)
!1102 = !DILocation(line: 476, column: 31, scope: !1103)
!1103 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 475, column: 13)
!1104 = !DILocation(line: 476, column: 35, scope: !1103)
!1105 = !DILocation(line: 476, column: 41, scope: !1103)
!1106 = !DILocation(line: 476, column: 15, scope: !1103)
!1107 = !DILocation(line: 477, column: 15, scope: !1103)
!1108 = !DILocation(line: 481, column: 31, scope: !1109)
!1109 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 480, column: 13)
!1110 = !DILocation(line: 481, column: 35, scope: !1109)
!1111 = !DILocation(line: 481, column: 41, scope: !1109)
!1112 = !DILocation(line: 481, column: 15, scope: !1109)
!1113 = !DILocation(line: 482, column: 15, scope: !1109)
!1114 = !DILocation(line: 487, column: 33, scope: !1115)
!1115 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 486, column: 13)
!1116 = !DILocation(line: 487, column: 37, scope: !1115)
!1117 = !DILocation(line: 487, column: 43, scope: !1115)
!1118 = !DILocation(line: 487, column: 15, scope: !1115)
!1119 = !DILocation(line: 488, column: 15, scope: !1115)
!1120 = !DILocation(line: 492, column: 33, scope: !1121)
!1121 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 491, column: 13)
!1122 = !DILocation(line: 492, column: 37, scope: !1121)
!1123 = !DILocation(line: 492, column: 43, scope: !1121)
!1124 = !DILocation(line: 492, column: 15, scope: !1121)
!1125 = !DILocation(line: 493, column: 15, scope: !1121)
!1126 = !DILocation(line: 497, column: 31, scope: !1127)
!1127 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 496, column: 13)
!1128 = !DILocation(line: 497, column: 35, scope: !1127)
!1129 = !DILocation(line: 497, column: 41, scope: !1127)
!1130 = !DILocation(line: 497, column: 15, scope: !1127)
!1131 = !DILocation(line: 498, column: 15, scope: !1127)
!1132 = !DILocation(line: 502, column: 31, scope: !1133)
!1133 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 501, column: 13)
!1134 = !DILocation(line: 502, column: 35, scope: !1133)
!1135 = !DILocation(line: 502, column: 41, scope: !1133)
!1136 = !DILocation(line: 502, column: 15, scope: !1133)
!1137 = !DILocation(line: 503, column: 15, scope: !1133)
!1138 = !DILocation(line: 507, column: 31, scope: !1139)
!1139 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 506, column: 13)
!1140 = !DILocation(line: 507, column: 35, scope: !1139)
!1141 = !DILocation(line: 507, column: 41, scope: !1139)
!1142 = !DILocation(line: 507, column: 15, scope: !1139)
!1143 = !DILocation(line: 508, column: 15, scope: !1139)
!1144 = !DILocation(line: 512, column: 33, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 511, column: 13)
!1146 = !DILocation(line: 512, column: 37, scope: !1145)
!1147 = !DILocation(line: 512, column: 43, scope: !1145)
!1148 = !DILocation(line: 512, column: 15, scope: !1145)
!1149 = !DILocation(line: 513, column: 15, scope: !1145)
!1150 = !DILocation(line: 517, column: 33, scope: !1151)
!1151 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 516, column: 13)
!1152 = !DILocation(line: 517, column: 37, scope: !1151)
!1153 = !DILocation(line: 517, column: 43, scope: !1151)
!1154 = !DILocation(line: 517, column: 15, scope: !1151)
!1155 = !DILocation(line: 518, column: 15, scope: !1151)
!1156 = !DILocation(line: 522, column: 31, scope: !1157)
!1157 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 521, column: 13)
!1158 = !DILocation(line: 522, column: 35, scope: !1157)
!1159 = !DILocation(line: 522, column: 41, scope: !1157)
!1160 = !DILocation(line: 522, column: 15, scope: !1157)
!1161 = !DILocation(line: 523, column: 15, scope: !1157)
!1162 = !DILocation(line: 527, column: 33, scope: !1163)
!1163 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 526, column: 13)
!1164 = !DILocation(line: 527, column: 37, scope: !1163)
!1165 = !DILocation(line: 527, column: 43, scope: !1163)
!1166 = !DILocation(line: 527, column: 15, scope: !1163)
!1167 = !DILocation(line: 528, column: 15, scope: !1163)
!1168 = !DILocation(line: 532, column: 31, scope: !1169)
!1169 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 531, column: 13)
!1170 = !DILocation(line: 532, column: 35, scope: !1169)
!1171 = !DILocation(line: 532, column: 41, scope: !1169)
!1172 = !DILocation(line: 532, column: 15, scope: !1169)
!1173 = !DILocation(line: 533, column: 15, scope: !1169)
!1174 = !DILocation(line: 537, column: 30, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !1061, file: !3, line: 536, column: 13)
!1176 = !DILocation(line: 537, column: 29, scope: !1175)
!1177 = !DILocation(line: 537, column: 16, scope: !1175)
!1178 = !DILocation(line: 538, column: 30, scope: !1175)
!1179 = !DILocation(line: 538, column: 29, scope: !1175)
!1180 = !DILocation(line: 538, column: 16, scope: !1175)
!1181 = !DILocation(line: 539, column: 30, scope: !1175)
!1182 = !DILocation(line: 539, column: 29, scope: !1175)
!1183 = !DILocation(line: 539, column: 16, scope: !1175)
!1184 = !DILocation(line: 540, column: 15, scope: !1175)
!1185 = !DILocation(line: 543, column: 11, scope: !1033)
!1186 = !DILocation(line: 544, column: 11, scope: !1033)
!1187 = !DILocation(line: 545, column: 11, scope: !1033)
!1188 = !DILocation(line: 546, column: 12, scope: !1033)
!1189 = !DILocation(line: 547, column: 9, scope: !1033)
!1190 = !DILocation(line: 422, column: 50, scope: !1027)
!1191 = !DILocation(line: 422, column: 9, scope: !1027)
!1192 = distinct !{!1192, !1031, !1193}
!1193 = !DILocation(line: 547, column: 9, scope: !1024)
!1194 = !DILocation(line: 548, column: 43, scope: !998)
!1195 = !DILocation(line: 548, column: 54, scope: !998)
!1196 = !DILocation(line: 548, column: 14, scope: !998)
!1197 = !DILocation(line: 548, column: 13, scope: !998)
!1198 = !DILocation(line: 549, column: 13, scope: !1199)
!1199 = distinct !DILexicalBlock(scope: !998, file: !3, line: 549, column: 13)
!1200 = !DILocation(line: 549, column: 18, scope: !1199)
!1201 = !DILocation(line: 549, column: 13, scope: !998)
!1202 = !DILocation(line: 550, column: 17, scope: !1199)
!1203 = !DILocation(line: 550, column: 11, scope: !1199)
!1204 = !DILocation(line: 551, column: 7, scope: !998)
!1205 = !DILocation(line: 402, column: 45, scope: !992)
!1206 = !DILocation(line: 402, column: 7, scope: !992)
!1207 = distinct !{!1207, !996, !1208}
!1208 = !DILocation(line: 551, column: 7, scope: !989)
!1209 = !DILocation(line: 552, column: 35, scope: !966)
!1210 = !DILocation(line: 552, column: 18, scope: !966)
!1211 = !DILocation(line: 552, column: 17, scope: !966)
!1212 = !DILocation(line: 553, column: 30, scope: !1213)
!1213 = distinct !DILexicalBlock(scope: !966, file: !3, line: 553, column: 11)
!1214 = !DILocation(line: 553, column: 36, scope: !1213)
!1215 = !DILocation(line: 553, column: 11, scope: !1213)
!1216 = !DILocation(line: 553, column: 48, scope: !1213)
!1217 = !DILocation(line: 553, column: 11, scope: !966)
!1218 = !DILocation(line: 554, column: 9, scope: !1213)
!1219 = !DILocation(line: 555, column: 14, scope: !966)
!1220 = !DILocation(line: 555, column: 7, scope: !966)
!1221 = !DILocalVariable(name: "value", scope: !1222, file: !3, line: 565, type: !390)
!1222 = distinct !DILexicalBlock(scope: !695, file: !3, line: 558, column: 5)
!1223 = !DILocation(line: 565, column: 10, scope: !1222)
!1224 = !DILocalVariable(name: "black", scope: !1222, file: !3, line: 568, type: !130)
!1225 = !DILocation(line: 568, column: 9, scope: !1222)
!1226 = !DILocalVariable(name: "density", scope: !1222, file: !3, line: 569, type: !130)
!1227 = !DILocation(line: 569, column: 9, scope: !1222)
!1228 = !DILocalVariable(name: "film_gamma", scope: !1222, file: !3, line: 570, type: !130)
!1229 = !DILocation(line: 570, column: 9, scope: !1222)
!1230 = !DILocalVariable(name: "gamma", scope: !1222, file: !3, line: 571, type: !130)
!1231 = !DILocation(line: 571, column: 9, scope: !1222)
!1232 = !DILocalVariable(name: "reference_black", scope: !1222, file: !3, line: 572, type: !130)
!1233 = !DILocation(line: 572, column: 9, scope: !1222)
!1234 = !DILocalVariable(name: "reference_white", scope: !1222, file: !3, line: 573, type: !130)
!1235 = !DILocation(line: 573, column: 9, scope: !1222)
!1236 = !DILocalVariable(name: "logmap", scope: !1222, file: !3, line: 576, type: !625)
!1237 = !DILocation(line: 576, column: 10, scope: !1222)
!1238 = !DILocation(line: 581, column: 14, scope: !1222)
!1239 = !DILocation(line: 582, column: 12, scope: !1222)
!1240 = !DILocation(line: 583, column: 30, scope: !1222)
!1241 = !DILocation(line: 583, column: 13, scope: !1222)
!1242 = !DILocation(line: 583, column: 12, scope: !1222)
!1243 = !DILocation(line: 584, column: 11, scope: !1244)
!1244 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 584, column: 11)
!1245 = !DILocation(line: 584, column: 17, scope: !1244)
!1246 = !DILocation(line: 584, column: 11, scope: !1222)
!1247 = !DILocation(line: 585, column: 52, scope: !1244)
!1248 = !DILocation(line: 585, column: 37, scope: !1244)
!1249 = !DILocation(line: 585, column: 15, scope: !1244)
!1250 = !DILocation(line: 585, column: 14, scope: !1244)
!1251 = !DILocation(line: 585, column: 9, scope: !1244)
!1252 = !DILocation(line: 586, column: 17, scope: !1222)
!1253 = !DILocation(line: 587, column: 30, scope: !1222)
!1254 = !DILocation(line: 587, column: 13, scope: !1222)
!1255 = !DILocation(line: 587, column: 12, scope: !1222)
!1256 = !DILocation(line: 588, column: 11, scope: !1257)
!1257 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 588, column: 11)
!1258 = !DILocation(line: 588, column: 17, scope: !1257)
!1259 = !DILocation(line: 588, column: 11, scope: !1222)
!1260 = !DILocation(line: 589, column: 35, scope: !1257)
!1261 = !DILocation(line: 589, column: 20, scope: !1257)
!1262 = !DILocation(line: 589, column: 19, scope: !1257)
!1263 = !DILocation(line: 589, column: 9, scope: !1257)
!1264 = !DILocation(line: 590, column: 22, scope: !1222)
!1265 = !DILocation(line: 591, column: 30, scope: !1222)
!1266 = !DILocation(line: 591, column: 13, scope: !1222)
!1267 = !DILocation(line: 591, column: 12, scope: !1222)
!1268 = !DILocation(line: 592, column: 11, scope: !1269)
!1269 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 592, column: 11)
!1270 = !DILocation(line: 592, column: 17, scope: !1269)
!1271 = !DILocation(line: 592, column: 11, scope: !1222)
!1272 = !DILocation(line: 593, column: 40, scope: !1269)
!1273 = !DILocation(line: 593, column: 25, scope: !1269)
!1274 = !DILocation(line: 593, column: 24, scope: !1269)
!1275 = !DILocation(line: 593, column: 9, scope: !1269)
!1276 = !DILocation(line: 594, column: 22, scope: !1222)
!1277 = !DILocation(line: 595, column: 30, scope: !1222)
!1278 = !DILocation(line: 595, column: 13, scope: !1222)
!1279 = !DILocation(line: 595, column: 12, scope: !1222)
!1280 = !DILocation(line: 596, column: 11, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 596, column: 11)
!1282 = !DILocation(line: 596, column: 17, scope: !1281)
!1283 = !DILocation(line: 596, column: 11, scope: !1222)
!1284 = !DILocation(line: 597, column: 40, scope: !1281)
!1285 = !DILocation(line: 597, column: 25, scope: !1281)
!1286 = !DILocation(line: 597, column: 24, scope: !1281)
!1287 = !DILocation(line: 597, column: 9, scope: !1281)
!1288 = !DILocation(line: 598, column: 26, scope: !1222)
!1289 = !DILocation(line: 598, column: 14, scope: !1222)
!1290 = !DILocation(line: 598, column: 13, scope: !1222)
!1291 = !DILocation(line: 600, column: 11, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 600, column: 11)
!1293 = !DILocation(line: 600, column: 18, scope: !1292)
!1294 = !DILocation(line: 600, column: 11, scope: !1222)
!1295 = !DILocation(line: 601, column: 9, scope: !1296)
!1296 = distinct !DILexicalBlock(scope: !1297, file: !3, line: 601, column: 9)
!1297 = distinct !DILexicalBlock(scope: !1292, file: !3, line: 601, column: 9)
!1298 = !DILocation(line: 601, column: 9, scope: !1297)
!1299 = !DILocation(line: 603, column: 23, scope: !1222)
!1300 = !DILocation(line: 603, column: 39, scope: !1222)
!1301 = !DILocation(line: 603, column: 38, scope: !1222)
!1302 = !DILocation(line: 603, column: 57, scope: !1222)
!1303 = !DILocation(line: 603, column: 63, scope: !1222)
!1304 = !DILocation(line: 603, column: 62, scope: !1222)
!1305 = !DILocation(line: 603, column: 55, scope: !1222)
!1306 = !DILocation(line: 603, column: 71, scope: !1222)
!1307 = !DILocation(line: 604, column: 9, scope: !1222)
!1308 = !DILocation(line: 603, column: 77, scope: !1222)
!1309 = !DILocation(line: 603, column: 13, scope: !1222)
!1310 = !DILocation(line: 603, column: 12, scope: !1222)
!1311 = !DILocation(line: 609, column: 13, scope: !1312)
!1312 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 609, column: 7)
!1313 = !DILocation(line: 609, column: 12, scope: !1312)
!1314 = !DILocation(line: 609, column: 17, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1312, file: !3, line: 609, column: 7)
!1316 = !DILocation(line: 609, column: 19, scope: !1315)
!1317 = !DILocation(line: 609, column: 7, scope: !1312)
!1318 = !DILocation(line: 610, column: 63, scope: !1315)
!1319 = !DILocation(line: 611, column: 17, scope: !1315)
!1320 = !DILocation(line: 611, column: 28, scope: !1315)
!1321 = !DILocation(line: 611, column: 27, scope: !1315)
!1322 = !DILocation(line: 611, column: 29, scope: !1315)
!1323 = !DILocation(line: 611, column: 43, scope: !1315)
!1324 = !DILocation(line: 611, column: 42, scope: !1315)
!1325 = !DILocation(line: 611, column: 37, scope: !1315)
!1326 = !DILocation(line: 611, column: 22, scope: !1315)
!1327 = !DILocation(line: 611, column: 11, scope: !1315)
!1328 = !DILocation(line: 611, column: 53, scope: !1315)
!1329 = !DILocation(line: 611, column: 59, scope: !1315)
!1330 = !DILocation(line: 611, column: 58, scope: !1315)
!1331 = !DILocation(line: 611, column: 67, scope: !1315)
!1332 = !DILocation(line: 612, column: 11, scope: !1315)
!1333 = !DILocation(line: 611, column: 73, scope: !1315)
!1334 = !DILocation(line: 611, column: 50, scope: !1315)
!1335 = !DILocation(line: 610, column: 78, scope: !1315)
!1336 = !DILocation(line: 610, column: 61, scope: !1315)
!1337 = !DILocation(line: 612, column: 23, scope: !1315)
!1338 = !DILocation(line: 610, column: 37, scope: !1315)
!1339 = !DILocation(line: 610, column: 19, scope: !1315)
!1340 = !DILocation(line: 610, column: 9, scope: !1315)
!1341 = !DILocation(line: 610, column: 16, scope: !1315)
!1342 = !DILocation(line: 610, column: 18, scope: !1315)
!1343 = !DILocation(line: 609, column: 41, scope: !1315)
!1344 = !DILocation(line: 609, column: 7, scope: !1315)
!1345 = distinct !{!1345, !1317, !1346}
!1346 = !DILocation(line: 612, column: 31, scope: !1312)
!1347 = !DILocation(line: 613, column: 44, scope: !1222)
!1348 = !DILocation(line: 613, column: 50, scope: !1222)
!1349 = !DILocation(line: 613, column: 18, scope: !1222)
!1350 = !DILocation(line: 613, column: 17, scope: !1222)
!1351 = !DILocation(line: 618, column: 13, scope: !1352)
!1352 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 618, column: 7)
!1353 = !DILocation(line: 618, column: 12, scope: !1352)
!1354 = !DILocation(line: 618, column: 17, scope: !1355)
!1355 = distinct !DILexicalBlock(scope: !1352, file: !3, line: 618, column: 7)
!1356 = !DILocation(line: 618, column: 31, scope: !1355)
!1357 = !DILocation(line: 618, column: 38, scope: !1355)
!1358 = !DILocation(line: 618, column: 19, scope: !1355)
!1359 = !DILocation(line: 618, column: 7, scope: !1352)
!1360 = !DILocalVariable(name: "sync", scope: !1361, file: !3, line: 621, type: !6)
!1361 = distinct !DILexicalBlock(scope: !1355, file: !3, line: 619, column: 7)
!1362 = !DILocation(line: 621, column: 11, scope: !1361)
!1363 = !DILocalVariable(name: "x", scope: !1361, file: !3, line: 624, type: !170)
!1364 = !DILocation(line: 624, column: 11, scope: !1361)
!1365 = !DILocalVariable(name: "q", scope: !1361, file: !3, line: 627, type: !762)
!1366 = !DILocation(line: 627, column: 21, scope: !1361)
!1367 = !DILocation(line: 629, column: 13, scope: !1368)
!1368 = distinct !DILexicalBlock(scope: !1361, file: !3, line: 629, column: 13)
!1369 = !DILocation(line: 629, column: 20, scope: !1368)
!1370 = !DILocation(line: 629, column: 13, scope: !1361)
!1371 = !DILocation(line: 630, column: 11, scope: !1368)
!1372 = !DILocation(line: 631, column: 39, scope: !1361)
!1373 = !DILocation(line: 631, column: 52, scope: !1361)
!1374 = !DILocation(line: 631, column: 54, scope: !1361)
!1375 = !DILocation(line: 631, column: 61, scope: !1361)
!1376 = !DILocation(line: 632, column: 11, scope: !1361)
!1377 = !DILocation(line: 631, column: 11, scope: !1361)
!1378 = !DILocation(line: 631, column: 10, scope: !1361)
!1379 = !DILocation(line: 633, column: 13, scope: !1380)
!1380 = distinct !DILexicalBlock(scope: !1361, file: !3, line: 633, column: 13)
!1381 = !DILocation(line: 633, column: 15, scope: !1380)
!1382 = !DILocation(line: 633, column: 13, scope: !1361)
!1383 = !DILocation(line: 635, column: 19, scope: !1384)
!1384 = distinct !DILexicalBlock(scope: !1380, file: !3, line: 634, column: 11)
!1385 = !DILocation(line: 636, column: 13, scope: !1384)
!1386 = !DILocation(line: 638, column: 26, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1361, file: !3, line: 638, column: 9)
!1388 = !DILocation(line: 638, column: 33, scope: !1387)
!1389 = !DILocation(line: 638, column: 15, scope: !1387)
!1390 = !DILocation(line: 638, column: 14, scope: !1387)
!1391 = !DILocation(line: 638, column: 42, scope: !1392)
!1392 = distinct !DILexicalBlock(scope: !1387, file: !3, line: 638, column: 9)
!1393 = !DILocation(line: 638, column: 44, scope: !1392)
!1394 = !DILocation(line: 638, column: 9, scope: !1387)
!1395 = !DILocalVariable(name: "blue", scope: !1396, file: !3, line: 641, type: !121)
!1396 = distinct !DILexicalBlock(scope: !1392, file: !3, line: 639, column: 9)
!1397 = !DILocation(line: 641, column: 13, scope: !1396)
!1398 = !DILocalVariable(name: "green", scope: !1396, file: !3, line: 642, type: !121)
!1399 = !DILocation(line: 642, column: 13, scope: !1396)
!1400 = !DILocalVariable(name: "red", scope: !1396, file: !3, line: 643, type: !121)
!1401 = !DILocation(line: 643, column: 13, scope: !1396)
!1402 = !DILocation(line: 646, column: 13, scope: !1396)
!1403 = !DILocation(line: 645, column: 47, scope: !1396)
!1404 = !DILocation(line: 645, column: 30, scope: !1396)
!1405 = !DILocation(line: 645, column: 15, scope: !1396)
!1406 = !DILocation(line: 645, column: 14, scope: !1396)
!1407 = !DILocation(line: 648, column: 13, scope: !1396)
!1408 = !DILocation(line: 647, column: 49, scope: !1396)
!1409 = !DILocation(line: 647, column: 32, scope: !1396)
!1410 = !DILocation(line: 647, column: 17, scope: !1396)
!1411 = !DILocation(line: 647, column: 16, scope: !1396)
!1412 = !DILocation(line: 650, column: 13, scope: !1396)
!1413 = !DILocation(line: 649, column: 48, scope: !1396)
!1414 = !DILocation(line: 649, column: 31, scope: !1396)
!1415 = !DILocation(line: 649, column: 16, scope: !1396)
!1416 = !DILocation(line: 649, column: 15, scope: !1396)
!1417 = !DILocation(line: 651, column: 11, scope: !1396)
!1418 = !DILocation(line: 652, column: 11, scope: !1396)
!1419 = !DILocation(line: 653, column: 11, scope: !1396)
!1420 = !DILocation(line: 654, column: 12, scope: !1396)
!1421 = !DILocation(line: 655, column: 9, scope: !1396)
!1422 = !DILocation(line: 638, column: 51, scope: !1392)
!1423 = !DILocation(line: 638, column: 9, scope: !1392)
!1424 = distinct !{!1424, !1394, !1425}
!1425 = !DILocation(line: 655, column: 9, scope: !1387)
!1426 = !DILocation(line: 656, column: 43, scope: !1361)
!1427 = !DILocation(line: 656, column: 54, scope: !1361)
!1428 = !DILocation(line: 656, column: 14, scope: !1361)
!1429 = !DILocation(line: 656, column: 13, scope: !1361)
!1430 = !DILocation(line: 657, column: 13, scope: !1431)
!1431 = distinct !DILexicalBlock(scope: !1361, file: !3, line: 657, column: 13)
!1432 = !DILocation(line: 657, column: 18, scope: !1431)
!1433 = !DILocation(line: 657, column: 13, scope: !1361)
!1434 = !DILocation(line: 658, column: 17, scope: !1431)
!1435 = !DILocation(line: 658, column: 11, scope: !1431)
!1436 = !DILocation(line: 659, column: 7, scope: !1361)
!1437 = !DILocation(line: 618, column: 45, scope: !1355)
!1438 = !DILocation(line: 618, column: 7, scope: !1355)
!1439 = distinct !{!1439, !1359, !1440}
!1440 = !DILocation(line: 659, column: 7, scope: !1352)
!1441 = !DILocation(line: 660, column: 35, scope: !1222)
!1442 = !DILocation(line: 660, column: 18, scope: !1222)
!1443 = !DILocation(line: 660, column: 17, scope: !1222)
!1444 = !DILocation(line: 661, column: 49, scope: !1222)
!1445 = !DILocation(line: 661, column: 26, scope: !1222)
!1446 = !DILocation(line: 661, column: 14, scope: !1222)
!1447 = !DILocation(line: 661, column: 13, scope: !1222)
!1448 = !DILocation(line: 662, column: 30, scope: !1449)
!1449 = distinct !DILexicalBlock(scope: !1222, file: !3, line: 662, column: 11)
!1450 = !DILocation(line: 662, column: 36, scope: !1449)
!1451 = !DILocation(line: 662, column: 11, scope: !1449)
!1452 = !DILocation(line: 662, column: 48, scope: !1449)
!1453 = !DILocation(line: 662, column: 11, scope: !1222)
!1454 = !DILocation(line: 663, column: 9, scope: !1449)
!1455 = !DILocation(line: 664, column: 14, scope: !1222)
!1456 = !DILocation(line: 664, column: 7, scope: !1222)
!1457 = !DILocation(line: 672, column: 11, scope: !1458)
!1458 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 672, column: 11)
!1459 = distinct !DILexicalBlock(scope: !695, file: !3, line: 668, column: 5)
!1460 = !DILocation(line: 672, column: 18, scope: !1458)
!1461 = !DILocation(line: 672, column: 32, scope: !1458)
!1462 = !DILocation(line: 672, column: 11, scope: !1459)
!1463 = !DILocation(line: 674, column: 25, scope: !1464)
!1464 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 674, column: 15)
!1465 = distinct !DILexicalBlock(scope: !1458, file: !3, line: 673, column: 9)
!1466 = !DILocation(line: 674, column: 15, scope: !1464)
!1467 = !DILocation(line: 674, column: 32, scope: !1464)
!1468 = !DILocation(line: 674, column: 15, scope: !1465)
!1469 = !DILocation(line: 675, column: 13, scope: !1464)
!1470 = !DILocation(line: 676, column: 36, scope: !1471)
!1471 = distinct !DILexicalBlock(scope: !1465, file: !3, line: 676, column: 15)
!1472 = !DILocation(line: 676, column: 15, scope: !1471)
!1473 = !DILocation(line: 676, column: 55, scope: !1471)
!1474 = !DILocation(line: 676, column: 15, scope: !1465)
!1475 = !DILocation(line: 677, column: 13, scope: !1471)
!1476 = !DILocation(line: 678, column: 9, scope: !1465)
!1477 = !DILocation(line: 679, column: 44, scope: !1459)
!1478 = !DILocation(line: 679, column: 50, scope: !1459)
!1479 = !DILocation(line: 679, column: 18, scope: !1459)
!1480 = !DILocation(line: 679, column: 17, scope: !1459)
!1481 = !DILocation(line: 684, column: 13, scope: !1482)
!1482 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 684, column: 7)
!1483 = !DILocation(line: 684, column: 12, scope: !1482)
!1484 = !DILocation(line: 684, column: 17, scope: !1485)
!1485 = distinct !DILexicalBlock(scope: !1482, file: !3, line: 684, column: 7)
!1486 = !DILocation(line: 684, column: 31, scope: !1485)
!1487 = !DILocation(line: 684, column: 38, scope: !1485)
!1488 = !DILocation(line: 684, column: 19, scope: !1485)
!1489 = !DILocation(line: 684, column: 7, scope: !1482)
!1490 = !DILocalVariable(name: "sync", scope: !1491, file: !3, line: 687, type: !6)
!1491 = distinct !DILexicalBlock(scope: !1485, file: !3, line: 685, column: 7)
!1492 = !DILocation(line: 687, column: 11, scope: !1491)
!1493 = !DILocalVariable(name: "x", scope: !1491, file: !3, line: 690, type: !170)
!1494 = !DILocation(line: 690, column: 11, scope: !1491)
!1495 = !DILocalVariable(name: "q", scope: !1491, file: !3, line: 693, type: !762)
!1496 = !DILocation(line: 693, column: 21, scope: !1491)
!1497 = !DILocation(line: 695, column: 13, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 695, column: 13)
!1499 = !DILocation(line: 695, column: 20, scope: !1498)
!1500 = !DILocation(line: 695, column: 13, scope: !1491)
!1501 = !DILocation(line: 696, column: 11, scope: !1498)
!1502 = !DILocation(line: 697, column: 39, scope: !1491)
!1503 = !DILocation(line: 697, column: 52, scope: !1491)
!1504 = !DILocation(line: 697, column: 54, scope: !1491)
!1505 = !DILocation(line: 697, column: 61, scope: !1491)
!1506 = !DILocation(line: 698, column: 11, scope: !1491)
!1507 = !DILocation(line: 697, column: 11, scope: !1491)
!1508 = !DILocation(line: 697, column: 10, scope: !1491)
!1509 = !DILocation(line: 699, column: 13, scope: !1510)
!1510 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 699, column: 13)
!1511 = !DILocation(line: 699, column: 15, scope: !1510)
!1512 = !DILocation(line: 699, column: 13, scope: !1491)
!1513 = !DILocation(line: 701, column: 19, scope: !1514)
!1514 = distinct !DILexicalBlock(scope: !1510, file: !3, line: 700, column: 11)
!1515 = !DILocation(line: 702, column: 13, scope: !1514)
!1516 = !DILocation(line: 704, column: 15, scope: !1517)
!1517 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 704, column: 9)
!1518 = !DILocation(line: 704, column: 14, scope: !1517)
!1519 = !DILocation(line: 704, column: 19, scope: !1520)
!1520 = distinct !DILexicalBlock(scope: !1517, file: !3, line: 704, column: 9)
!1521 = !DILocation(line: 704, column: 33, scope: !1520)
!1522 = !DILocation(line: 704, column: 40, scope: !1520)
!1523 = !DILocation(line: 704, column: 21, scope: !1520)
!1524 = !DILocation(line: 704, column: 9, scope: !1517)
!1525 = !DILocalVariable(name: "blue", scope: !1526, file: !3, line: 707, type: !121)
!1526 = distinct !DILexicalBlock(scope: !1520, file: !3, line: 705, column: 9)
!1527 = !DILocation(line: 707, column: 13, scope: !1526)
!1528 = !DILocalVariable(name: "green", scope: !1526, file: !3, line: 708, type: !121)
!1529 = !DILocation(line: 708, column: 13, scope: !1526)
!1530 = !DILocalVariable(name: "red", scope: !1526, file: !3, line: 709, type: !121)
!1531 = !DILocation(line: 709, column: 13, scope: !1526)
!1532 = !DILocation(line: 712, column: 13, scope: !1526)
!1533 = !DILocation(line: 711, column: 47, scope: !1526)
!1534 = !DILocation(line: 711, column: 30, scope: !1526)
!1535 = !DILocation(line: 711, column: 15, scope: !1526)
!1536 = !DILocation(line: 711, column: 14, scope: !1526)
!1537 = !DILocation(line: 714, column: 13, scope: !1526)
!1538 = !DILocation(line: 713, column: 49, scope: !1526)
!1539 = !DILocation(line: 713, column: 32, scope: !1526)
!1540 = !DILocation(line: 713, column: 17, scope: !1526)
!1541 = !DILocation(line: 713, column: 16, scope: !1526)
!1542 = !DILocation(line: 716, column: 13, scope: !1526)
!1543 = !DILocation(line: 715, column: 48, scope: !1526)
!1544 = !DILocation(line: 715, column: 31, scope: !1526)
!1545 = !DILocation(line: 715, column: 16, scope: !1526)
!1546 = !DILocation(line: 715, column: 15, scope: !1526)
!1547 = !DILocation(line: 717, column: 11, scope: !1526)
!1548 = !DILocation(line: 718, column: 11, scope: !1526)
!1549 = !DILocation(line: 719, column: 11, scope: !1526)
!1550 = !DILocation(line: 720, column: 12, scope: !1526)
!1551 = !DILocation(line: 721, column: 9, scope: !1526)
!1552 = !DILocation(line: 704, column: 50, scope: !1520)
!1553 = !DILocation(line: 704, column: 9, scope: !1520)
!1554 = distinct !{!1554, !1524, !1555}
!1555 = !DILocation(line: 721, column: 9, scope: !1517)
!1556 = !DILocation(line: 722, column: 43, scope: !1491)
!1557 = !DILocation(line: 722, column: 54, scope: !1491)
!1558 = !DILocation(line: 722, column: 14, scope: !1491)
!1559 = !DILocation(line: 722, column: 13, scope: !1491)
!1560 = !DILocation(line: 723, column: 13, scope: !1561)
!1561 = distinct !DILexicalBlock(scope: !1491, file: !3, line: 723, column: 13)
!1562 = !DILocation(line: 723, column: 18, scope: !1561)
!1563 = !DILocation(line: 723, column: 13, scope: !1491)
!1564 = !DILocation(line: 724, column: 17, scope: !1561)
!1565 = !DILocation(line: 724, column: 11, scope: !1561)
!1566 = !DILocation(line: 725, column: 7, scope: !1491)
!1567 = !DILocation(line: 684, column: 45, scope: !1485)
!1568 = !DILocation(line: 684, column: 7, scope: !1485)
!1569 = distinct !{!1569, !1489, !1570}
!1570 = !DILocation(line: 725, column: 7, scope: !1482)
!1571 = !DILocation(line: 726, column: 35, scope: !1459)
!1572 = !DILocation(line: 726, column: 18, scope: !1459)
!1573 = !DILocation(line: 726, column: 17, scope: !1459)
!1574 = !DILocation(line: 727, column: 30, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1459, file: !3, line: 727, column: 11)
!1576 = !DILocation(line: 727, column: 36, scope: !1575)
!1577 = !DILocation(line: 727, column: 11, scope: !1575)
!1578 = !DILocation(line: 727, column: 48, scope: !1575)
!1579 = !DILocation(line: 727, column: 11, scope: !1459)
!1580 = !DILocation(line: 728, column: 9, scope: !1575)
!1581 = !DILocation(line: 729, column: 14, scope: !1459)
!1582 = !DILocation(line: 729, column: 7, scope: !1459)
!1583 = !DILocation(line: 732, column: 7, scope: !695)
!1584 = !DILocation(line: 737, column: 29, scope: !647)
!1585 = !DILocation(line: 737, column: 9, scope: !647)
!1586 = !DILocation(line: 737, column: 8, scope: !647)
!1587 = !DILocation(line: 739, column: 29, scope: !647)
!1588 = !DILocation(line: 739, column: 9, scope: !647)
!1589 = !DILocation(line: 739, column: 8, scope: !647)
!1590 = !DILocation(line: 741, column: 29, scope: !647)
!1591 = !DILocation(line: 741, column: 9, scope: !647)
!1592 = !DILocation(line: 741, column: 8, scope: !647)
!1593 = !DILocation(line: 743, column: 8, scope: !1594)
!1594 = distinct !DILexicalBlock(scope: !647, file: !3, line: 743, column: 7)
!1595 = !DILocation(line: 743, column: 14, scope: !1594)
!1596 = !DILocation(line: 743, column: 43, scope: !1594)
!1597 = !DILocation(line: 744, column: 8, scope: !1594)
!1598 = !DILocation(line: 744, column: 14, scope: !1594)
!1599 = !DILocation(line: 744, column: 43, scope: !1594)
!1600 = !DILocation(line: 745, column: 8, scope: !1594)
!1601 = !DILocation(line: 745, column: 14, scope: !1594)
!1602 = !DILocation(line: 743, column: 7, scope: !647)
!1603 = !DILocation(line: 746, column: 5, scope: !1604)
!1604 = distinct !DILexicalBlock(scope: !1605, file: !3, line: 746, column: 5)
!1605 = distinct !DILexicalBlock(scope: !1594, file: !3, line: 746, column: 5)
!1606 = !DILocation(line: 746, column: 5, scope: !1605)
!1607 = !DILocation(line: 748, column: 28, scope: !647)
!1608 = !DILocation(line: 748, column: 10, scope: !647)
!1609 = !DILocation(line: 749, column: 11, scope: !647)
!1610 = !DILocation(line: 749, column: 3, scope: !647)
!1611 = !DILocation(line: 763, column: 20, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 752, column: 5)
!1613 = distinct !DILexicalBlock(scope: !647, file: !3, line: 750, column: 3)
!1614 = !DILocation(line: 763, column: 21, scope: !1612)
!1615 = !DILocation(line: 764, column: 20, scope: !1612)
!1616 = !DILocation(line: 764, column: 21, scope: !1612)
!1617 = !DILocation(line: 769, column: 13, scope: !1618)
!1618 = distinct !DILexicalBlock(scope: !1612, file: !3, line: 769, column: 7)
!1619 = !DILocation(line: 769, column: 12, scope: !1618)
!1620 = !DILocation(line: 769, column: 17, scope: !1621)
!1621 = distinct !DILexicalBlock(scope: !1618, file: !3, line: 769, column: 7)
!1622 = !DILocation(line: 769, column: 19, scope: !1621)
!1623 = !DILocation(line: 769, column: 7, scope: !1618)
!1624 = !DILocation(line: 771, column: 55, scope: !1625)
!1625 = distinct !DILexicalBlock(scope: !1621, file: !3, line: 770, column: 7)
!1626 = !DILocation(line: 771, column: 46, scope: !1625)
!1627 = !DILocation(line: 771, column: 45, scope: !1625)
!1628 = !DILocation(line: 771, column: 20, scope: !1625)
!1629 = !DILocation(line: 771, column: 9, scope: !1625)
!1630 = !DILocation(line: 771, column: 15, scope: !1625)
!1631 = !DILocation(line: 771, column: 18, scope: !1625)
!1632 = !DILocation(line: 771, column: 19, scope: !1625)
!1633 = !DILocation(line: 772, column: 55, scope: !1625)
!1634 = !DILocation(line: 772, column: 46, scope: !1625)
!1635 = !DILocation(line: 772, column: 45, scope: !1625)
!1636 = !DILocation(line: 772, column: 20, scope: !1625)
!1637 = !DILocation(line: 772, column: 9, scope: !1625)
!1638 = !DILocation(line: 772, column: 15, scope: !1625)
!1639 = !DILocation(line: 772, column: 18, scope: !1625)
!1640 = !DILocation(line: 772, column: 19, scope: !1625)
!1641 = !DILocation(line: 773, column: 55, scope: !1625)
!1642 = !DILocation(line: 773, column: 46, scope: !1625)
!1643 = !DILocation(line: 773, column: 45, scope: !1625)
!1644 = !DILocation(line: 773, column: 20, scope: !1625)
!1645 = !DILocation(line: 773, column: 9, scope: !1625)
!1646 = !DILocation(line: 773, column: 15, scope: !1625)
!1647 = !DILocation(line: 773, column: 18, scope: !1625)
!1648 = !DILocation(line: 773, column: 19, scope: !1625)
!1649 = !DILocation(line: 774, column: 55, scope: !1625)
!1650 = !DILocation(line: 774, column: 46, scope: !1625)
!1651 = !DILocation(line: 774, column: 45, scope: !1625)
!1652 = !DILocation(line: 774, column: 20, scope: !1625)
!1653 = !DILocation(line: 774, column: 9, scope: !1625)
!1654 = !DILocation(line: 774, column: 15, scope: !1625)
!1655 = !DILocation(line: 774, column: 18, scope: !1625)
!1656 = !DILocation(line: 774, column: 19, scope: !1625)
!1657 = !DILocation(line: 775, column: 55, scope: !1625)
!1658 = !DILocation(line: 775, column: 46, scope: !1625)
!1659 = !DILocation(line: 775, column: 45, scope: !1625)
!1660 = !DILocation(line: 775, column: 20, scope: !1625)
!1661 = !DILocation(line: 775, column: 9, scope: !1625)
!1662 = !DILocation(line: 775, column: 15, scope: !1625)
!1663 = !DILocation(line: 775, column: 18, scope: !1625)
!1664 = !DILocation(line: 775, column: 19, scope: !1625)
!1665 = !DILocation(line: 776, column: 56, scope: !1625)
!1666 = !DILocation(line: 776, column: 47, scope: !1625)
!1667 = !DILocation(line: 776, column: 46, scope: !1625)
!1668 = !DILocation(line: 776, column: 20, scope: !1625)
!1669 = !DILocation(line: 776, column: 9, scope: !1625)
!1670 = !DILocation(line: 776, column: 15, scope: !1625)
!1671 = !DILocation(line: 776, column: 18, scope: !1625)
!1672 = !DILocation(line: 776, column: 19, scope: !1625)
!1673 = !DILocation(line: 777, column: 56, scope: !1625)
!1674 = !DILocation(line: 777, column: 47, scope: !1625)
!1675 = !DILocation(line: 777, column: 46, scope: !1625)
!1676 = !DILocation(line: 777, column: 20, scope: !1625)
!1677 = !DILocation(line: 777, column: 9, scope: !1625)
!1678 = !DILocation(line: 777, column: 15, scope: !1625)
!1679 = !DILocation(line: 777, column: 18, scope: !1625)
!1680 = !DILocation(line: 777, column: 19, scope: !1625)
!1681 = !DILocation(line: 778, column: 55, scope: !1625)
!1682 = !DILocation(line: 778, column: 46, scope: !1625)
!1683 = !DILocation(line: 778, column: 45, scope: !1625)
!1684 = !DILocation(line: 778, column: 20, scope: !1625)
!1685 = !DILocation(line: 778, column: 9, scope: !1625)
!1686 = !DILocation(line: 778, column: 15, scope: !1625)
!1687 = !DILocation(line: 778, column: 18, scope: !1625)
!1688 = !DILocation(line: 778, column: 19, scope: !1625)
!1689 = !DILocation(line: 779, column: 56, scope: !1625)
!1690 = !DILocation(line: 779, column: 47, scope: !1625)
!1691 = !DILocation(line: 779, column: 46, scope: !1625)
!1692 = !DILocation(line: 779, column: 20, scope: !1625)
!1693 = !DILocation(line: 779, column: 9, scope: !1625)
!1694 = !DILocation(line: 779, column: 15, scope: !1625)
!1695 = !DILocation(line: 779, column: 18, scope: !1625)
!1696 = !DILocation(line: 779, column: 19, scope: !1625)
!1697 = !DILocation(line: 780, column: 7, scope: !1625)
!1698 = !DILocation(line: 769, column: 41, scope: !1621)
!1699 = !DILocation(line: 769, column: 7, scope: !1621)
!1700 = distinct !{!1700, !1623, !1701}
!1701 = !DILocation(line: 780, column: 7, scope: !1618)
!1702 = !DILocation(line: 781, column: 7, scope: !1612)
!1703 = !DILocation(line: 793, column: 13, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1705, file: !3, line: 793, column: 7)
!1705 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 784, column: 5)
!1706 = !DILocation(line: 793, column: 12, scope: !1704)
!1707 = !DILocation(line: 793, column: 17, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1704, file: !3, line: 793, column: 7)
!1709 = !DILocation(line: 793, column: 19, scope: !1708)
!1710 = !DILocation(line: 793, column: 7, scope: !1704)
!1711 = !DILocation(line: 795, column: 56, scope: !1712)
!1712 = distinct !DILexicalBlock(scope: !1708, file: !3, line: 794, column: 7)
!1713 = !DILocation(line: 795, column: 47, scope: !1712)
!1714 = !DILocation(line: 795, column: 46, scope: !1712)
!1715 = !DILocation(line: 795, column: 20, scope: !1712)
!1716 = !DILocation(line: 795, column: 9, scope: !1712)
!1717 = !DILocation(line: 795, column: 15, scope: !1712)
!1718 = !DILocation(line: 795, column: 18, scope: !1712)
!1719 = !DILocation(line: 795, column: 19, scope: !1712)
!1720 = !DILocation(line: 796, column: 56, scope: !1712)
!1721 = !DILocation(line: 796, column: 47, scope: !1712)
!1722 = !DILocation(line: 796, column: 46, scope: !1712)
!1723 = !DILocation(line: 796, column: 20, scope: !1712)
!1724 = !DILocation(line: 796, column: 9, scope: !1712)
!1725 = !DILocation(line: 796, column: 15, scope: !1712)
!1726 = !DILocation(line: 796, column: 18, scope: !1712)
!1727 = !DILocation(line: 796, column: 19, scope: !1712)
!1728 = !DILocation(line: 797, column: 56, scope: !1712)
!1729 = !DILocation(line: 797, column: 47, scope: !1712)
!1730 = !DILocation(line: 797, column: 46, scope: !1712)
!1731 = !DILocation(line: 797, column: 20, scope: !1712)
!1732 = !DILocation(line: 797, column: 9, scope: !1712)
!1733 = !DILocation(line: 797, column: 15, scope: !1712)
!1734 = !DILocation(line: 797, column: 18, scope: !1712)
!1735 = !DILocation(line: 797, column: 19, scope: !1712)
!1736 = !DILocation(line: 798, column: 56, scope: !1712)
!1737 = !DILocation(line: 798, column: 47, scope: !1712)
!1738 = !DILocation(line: 798, column: 46, scope: !1712)
!1739 = !DILocation(line: 798, column: 20, scope: !1712)
!1740 = !DILocation(line: 798, column: 9, scope: !1712)
!1741 = !DILocation(line: 798, column: 15, scope: !1712)
!1742 = !DILocation(line: 798, column: 18, scope: !1712)
!1743 = !DILocation(line: 798, column: 19, scope: !1712)
!1744 = !DILocation(line: 799, column: 56, scope: !1712)
!1745 = !DILocation(line: 799, column: 47, scope: !1712)
!1746 = !DILocation(line: 799, column: 46, scope: !1712)
!1747 = !DILocation(line: 799, column: 20, scope: !1712)
!1748 = !DILocation(line: 799, column: 9, scope: !1712)
!1749 = !DILocation(line: 799, column: 15, scope: !1712)
!1750 = !DILocation(line: 799, column: 18, scope: !1712)
!1751 = !DILocation(line: 799, column: 19, scope: !1712)
!1752 = !DILocation(line: 800, column: 56, scope: !1712)
!1753 = !DILocation(line: 800, column: 47, scope: !1712)
!1754 = !DILocation(line: 800, column: 46, scope: !1712)
!1755 = !DILocation(line: 800, column: 20, scope: !1712)
!1756 = !DILocation(line: 800, column: 9, scope: !1712)
!1757 = !DILocation(line: 800, column: 15, scope: !1712)
!1758 = !DILocation(line: 800, column: 18, scope: !1712)
!1759 = !DILocation(line: 800, column: 19, scope: !1712)
!1760 = !DILocation(line: 801, column: 56, scope: !1712)
!1761 = !DILocation(line: 801, column: 47, scope: !1712)
!1762 = !DILocation(line: 801, column: 46, scope: !1712)
!1763 = !DILocation(line: 801, column: 20, scope: !1712)
!1764 = !DILocation(line: 801, column: 9, scope: !1712)
!1765 = !DILocation(line: 801, column: 15, scope: !1712)
!1766 = !DILocation(line: 801, column: 18, scope: !1712)
!1767 = !DILocation(line: 801, column: 19, scope: !1712)
!1768 = !DILocation(line: 802, column: 56, scope: !1712)
!1769 = !DILocation(line: 802, column: 47, scope: !1712)
!1770 = !DILocation(line: 802, column: 46, scope: !1712)
!1771 = !DILocation(line: 802, column: 20, scope: !1712)
!1772 = !DILocation(line: 802, column: 9, scope: !1712)
!1773 = !DILocation(line: 802, column: 15, scope: !1712)
!1774 = !DILocation(line: 802, column: 18, scope: !1712)
!1775 = !DILocation(line: 802, column: 19, scope: !1712)
!1776 = !DILocation(line: 803, column: 56, scope: !1712)
!1777 = !DILocation(line: 803, column: 47, scope: !1712)
!1778 = !DILocation(line: 803, column: 46, scope: !1712)
!1779 = !DILocation(line: 803, column: 20, scope: !1712)
!1780 = !DILocation(line: 803, column: 9, scope: !1712)
!1781 = !DILocation(line: 803, column: 15, scope: !1712)
!1782 = !DILocation(line: 803, column: 18, scope: !1712)
!1783 = !DILocation(line: 803, column: 19, scope: !1712)
!1784 = !DILocation(line: 804, column: 7, scope: !1712)
!1785 = !DILocation(line: 793, column: 41, scope: !1708)
!1786 = !DILocation(line: 793, column: 7, scope: !1708)
!1787 = distinct !{!1787, !1710, !1788}
!1788 = !DILocation(line: 804, column: 7, scope: !1704)
!1789 = !DILocation(line: 805, column: 7, scope: !1705)
!1790 = !DILocation(line: 819, column: 20, scope: !1791)
!1791 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 808, column: 5)
!1792 = !DILocation(line: 819, column: 21, scope: !1791)
!1793 = !DILocation(line: 820, column: 20, scope: !1791)
!1794 = !DILocation(line: 820, column: 21, scope: !1791)
!1795 = !DILocation(line: 825, column: 13, scope: !1796)
!1796 = distinct !DILexicalBlock(scope: !1791, file: !3, line: 825, column: 7)
!1797 = !DILocation(line: 825, column: 12, scope: !1796)
!1798 = !DILocation(line: 825, column: 17, scope: !1799)
!1799 = distinct !DILexicalBlock(scope: !1796, file: !3, line: 825, column: 7)
!1800 = !DILocation(line: 825, column: 19, scope: !1799)
!1801 = !DILocation(line: 825, column: 7, scope: !1796)
!1802 = !DILocation(line: 827, column: 56, scope: !1803)
!1803 = distinct !DILexicalBlock(scope: !1799, file: !3, line: 826, column: 7)
!1804 = !DILocation(line: 827, column: 47, scope: !1803)
!1805 = !DILocation(line: 827, column: 46, scope: !1803)
!1806 = !DILocation(line: 827, column: 20, scope: !1803)
!1807 = !DILocation(line: 827, column: 9, scope: !1803)
!1808 = !DILocation(line: 827, column: 15, scope: !1803)
!1809 = !DILocation(line: 827, column: 18, scope: !1803)
!1810 = !DILocation(line: 827, column: 19, scope: !1803)
!1811 = !DILocation(line: 828, column: 56, scope: !1803)
!1812 = !DILocation(line: 828, column: 47, scope: !1803)
!1813 = !DILocation(line: 828, column: 46, scope: !1803)
!1814 = !DILocation(line: 828, column: 20, scope: !1803)
!1815 = !DILocation(line: 828, column: 9, scope: !1803)
!1816 = !DILocation(line: 828, column: 15, scope: !1803)
!1817 = !DILocation(line: 828, column: 18, scope: !1803)
!1818 = !DILocation(line: 828, column: 19, scope: !1803)
!1819 = !DILocation(line: 829, column: 56, scope: !1803)
!1820 = !DILocation(line: 829, column: 47, scope: !1803)
!1821 = !DILocation(line: 829, column: 46, scope: !1803)
!1822 = !DILocation(line: 829, column: 20, scope: !1803)
!1823 = !DILocation(line: 829, column: 9, scope: !1803)
!1824 = !DILocation(line: 829, column: 15, scope: !1803)
!1825 = !DILocation(line: 829, column: 18, scope: !1803)
!1826 = !DILocation(line: 829, column: 19, scope: !1803)
!1827 = !DILocation(line: 830, column: 58, scope: !1803)
!1828 = !DILocation(line: 830, column: 49, scope: !1803)
!1829 = !DILocation(line: 830, column: 48, scope: !1803)
!1830 = !DILocation(line: 830, column: 20, scope: !1803)
!1831 = !DILocation(line: 830, column: 9, scope: !1803)
!1832 = !DILocation(line: 830, column: 15, scope: !1803)
!1833 = !DILocation(line: 830, column: 18, scope: !1803)
!1834 = !DILocation(line: 830, column: 19, scope: !1803)
!1835 = !DILocation(line: 831, column: 57, scope: !1803)
!1836 = !DILocation(line: 831, column: 48, scope: !1803)
!1837 = !DILocation(line: 831, column: 47, scope: !1803)
!1838 = !DILocation(line: 831, column: 20, scope: !1803)
!1839 = !DILocation(line: 831, column: 9, scope: !1803)
!1840 = !DILocation(line: 831, column: 15, scope: !1803)
!1841 = !DILocation(line: 831, column: 18, scope: !1803)
!1842 = !DILocation(line: 831, column: 19, scope: !1803)
!1843 = !DILocation(line: 832, column: 56, scope: !1803)
!1844 = !DILocation(line: 832, column: 47, scope: !1803)
!1845 = !DILocation(line: 832, column: 46, scope: !1803)
!1846 = !DILocation(line: 832, column: 20, scope: !1803)
!1847 = !DILocation(line: 832, column: 9, scope: !1803)
!1848 = !DILocation(line: 832, column: 15, scope: !1803)
!1849 = !DILocation(line: 832, column: 18, scope: !1803)
!1850 = !DILocation(line: 832, column: 19, scope: !1803)
!1851 = !DILocation(line: 833, column: 56, scope: !1803)
!1852 = !DILocation(line: 833, column: 47, scope: !1803)
!1853 = !DILocation(line: 833, column: 46, scope: !1803)
!1854 = !DILocation(line: 833, column: 20, scope: !1803)
!1855 = !DILocation(line: 833, column: 9, scope: !1803)
!1856 = !DILocation(line: 833, column: 15, scope: !1803)
!1857 = !DILocation(line: 833, column: 18, scope: !1803)
!1858 = !DILocation(line: 833, column: 19, scope: !1803)
!1859 = !DILocation(line: 834, column: 57, scope: !1803)
!1860 = !DILocation(line: 834, column: 48, scope: !1803)
!1861 = !DILocation(line: 834, column: 47, scope: !1803)
!1862 = !DILocation(line: 834, column: 20, scope: !1803)
!1863 = !DILocation(line: 834, column: 9, scope: !1803)
!1864 = !DILocation(line: 834, column: 15, scope: !1803)
!1865 = !DILocation(line: 834, column: 18, scope: !1803)
!1866 = !DILocation(line: 834, column: 19, scope: !1803)
!1867 = !DILocation(line: 835, column: 57, scope: !1803)
!1868 = !DILocation(line: 835, column: 48, scope: !1803)
!1869 = !DILocation(line: 835, column: 47, scope: !1803)
!1870 = !DILocation(line: 835, column: 20, scope: !1803)
!1871 = !DILocation(line: 835, column: 9, scope: !1803)
!1872 = !DILocation(line: 835, column: 15, scope: !1803)
!1873 = !DILocation(line: 835, column: 18, scope: !1803)
!1874 = !DILocation(line: 835, column: 19, scope: !1803)
!1875 = !DILocation(line: 836, column: 7, scope: !1803)
!1876 = !DILocation(line: 825, column: 41, scope: !1799)
!1877 = !DILocation(line: 825, column: 7, scope: !1799)
!1878 = distinct !{!1878, !1801, !1879}
!1879 = !DILocation(line: 836, column: 7, scope: !1796)
!1880 = !DILocation(line: 837, column: 7, scope: !1791)
!1881 = !DILocation(line: 849, column: 13, scope: !1882)
!1882 = distinct !DILexicalBlock(scope: !1883, file: !3, line: 849, column: 7)
!1883 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 840, column: 5)
!1884 = !DILocation(line: 849, column: 12, scope: !1882)
!1885 = !DILocation(line: 849, column: 17, scope: !1886)
!1886 = distinct !DILexicalBlock(scope: !1882, file: !3, line: 849, column: 7)
!1887 = !DILocation(line: 849, column: 19, scope: !1886)
!1888 = !DILocation(line: 849, column: 7, scope: !1882)
!1889 = !DILocation(line: 851, column: 56, scope: !1890)
!1890 = distinct !DILexicalBlock(scope: !1886, file: !3, line: 850, column: 7)
!1891 = !DILocation(line: 851, column: 47, scope: !1890)
!1892 = !DILocation(line: 851, column: 46, scope: !1890)
!1893 = !DILocation(line: 851, column: 20, scope: !1890)
!1894 = !DILocation(line: 851, column: 9, scope: !1890)
!1895 = !DILocation(line: 851, column: 15, scope: !1890)
!1896 = !DILocation(line: 851, column: 18, scope: !1890)
!1897 = !DILocation(line: 851, column: 19, scope: !1890)
!1898 = !DILocation(line: 852, column: 56, scope: !1890)
!1899 = !DILocation(line: 852, column: 47, scope: !1890)
!1900 = !DILocation(line: 852, column: 46, scope: !1890)
!1901 = !DILocation(line: 852, column: 20, scope: !1890)
!1902 = !DILocation(line: 852, column: 9, scope: !1890)
!1903 = !DILocation(line: 852, column: 15, scope: !1890)
!1904 = !DILocation(line: 852, column: 18, scope: !1890)
!1905 = !DILocation(line: 852, column: 19, scope: !1890)
!1906 = !DILocation(line: 853, column: 56, scope: !1890)
!1907 = !DILocation(line: 853, column: 47, scope: !1890)
!1908 = !DILocation(line: 853, column: 46, scope: !1890)
!1909 = !DILocation(line: 853, column: 20, scope: !1890)
!1910 = !DILocation(line: 853, column: 9, scope: !1890)
!1911 = !DILocation(line: 853, column: 15, scope: !1890)
!1912 = !DILocation(line: 853, column: 18, scope: !1890)
!1913 = !DILocation(line: 853, column: 19, scope: !1890)
!1914 = !DILocation(line: 854, column: 56, scope: !1890)
!1915 = !DILocation(line: 854, column: 47, scope: !1890)
!1916 = !DILocation(line: 854, column: 46, scope: !1890)
!1917 = !DILocation(line: 854, column: 20, scope: !1890)
!1918 = !DILocation(line: 854, column: 9, scope: !1890)
!1919 = !DILocation(line: 854, column: 15, scope: !1890)
!1920 = !DILocation(line: 854, column: 18, scope: !1890)
!1921 = !DILocation(line: 854, column: 19, scope: !1890)
!1922 = !DILocation(line: 855, column: 56, scope: !1890)
!1923 = !DILocation(line: 855, column: 47, scope: !1890)
!1924 = !DILocation(line: 855, column: 46, scope: !1890)
!1925 = !DILocation(line: 855, column: 20, scope: !1890)
!1926 = !DILocation(line: 855, column: 9, scope: !1890)
!1927 = !DILocation(line: 855, column: 15, scope: !1890)
!1928 = !DILocation(line: 855, column: 18, scope: !1890)
!1929 = !DILocation(line: 855, column: 19, scope: !1890)
!1930 = !DILocation(line: 856, column: 56, scope: !1890)
!1931 = !DILocation(line: 856, column: 47, scope: !1890)
!1932 = !DILocation(line: 856, column: 46, scope: !1890)
!1933 = !DILocation(line: 856, column: 20, scope: !1890)
!1934 = !DILocation(line: 856, column: 9, scope: !1890)
!1935 = !DILocation(line: 856, column: 15, scope: !1890)
!1936 = !DILocation(line: 856, column: 18, scope: !1890)
!1937 = !DILocation(line: 856, column: 19, scope: !1890)
!1938 = !DILocation(line: 857, column: 56, scope: !1890)
!1939 = !DILocation(line: 857, column: 47, scope: !1890)
!1940 = !DILocation(line: 857, column: 46, scope: !1890)
!1941 = !DILocation(line: 857, column: 20, scope: !1890)
!1942 = !DILocation(line: 857, column: 9, scope: !1890)
!1943 = !DILocation(line: 857, column: 15, scope: !1890)
!1944 = !DILocation(line: 857, column: 18, scope: !1890)
!1945 = !DILocation(line: 857, column: 19, scope: !1890)
!1946 = !DILocation(line: 858, column: 56, scope: !1890)
!1947 = !DILocation(line: 858, column: 47, scope: !1890)
!1948 = !DILocation(line: 858, column: 46, scope: !1890)
!1949 = !DILocation(line: 858, column: 20, scope: !1890)
!1950 = !DILocation(line: 858, column: 9, scope: !1890)
!1951 = !DILocation(line: 858, column: 15, scope: !1890)
!1952 = !DILocation(line: 858, column: 18, scope: !1890)
!1953 = !DILocation(line: 858, column: 19, scope: !1890)
!1954 = !DILocation(line: 859, column: 56, scope: !1890)
!1955 = !DILocation(line: 859, column: 47, scope: !1890)
!1956 = !DILocation(line: 859, column: 46, scope: !1890)
!1957 = !DILocation(line: 859, column: 20, scope: !1890)
!1958 = !DILocation(line: 859, column: 9, scope: !1890)
!1959 = !DILocation(line: 859, column: 15, scope: !1890)
!1960 = !DILocation(line: 859, column: 18, scope: !1890)
!1961 = !DILocation(line: 859, column: 19, scope: !1890)
!1962 = !DILocation(line: 860, column: 7, scope: !1890)
!1963 = !DILocation(line: 849, column: 41, scope: !1886)
!1964 = !DILocation(line: 849, column: 7, scope: !1886)
!1965 = distinct !{!1965, !1888, !1966}
!1966 = !DILocation(line: 860, column: 7, scope: !1882)
!1967 = !DILocation(line: 861, column: 7, scope: !1883)
!1968 = !DILocation(line: 875, column: 20, scope: !1969)
!1969 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 864, column: 5)
!1970 = !DILocation(line: 875, column: 21, scope: !1969)
!1971 = !DILocation(line: 876, column: 20, scope: !1969)
!1972 = !DILocation(line: 876, column: 21, scope: !1969)
!1973 = !DILocation(line: 881, column: 13, scope: !1974)
!1974 = distinct !DILexicalBlock(scope: !1969, file: !3, line: 881, column: 7)
!1975 = !DILocation(line: 881, column: 12, scope: !1974)
!1976 = !DILocation(line: 881, column: 17, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1974, file: !3, line: 881, column: 7)
!1978 = !DILocation(line: 881, column: 19, scope: !1977)
!1979 = !DILocation(line: 881, column: 7, scope: !1974)
!1980 = !DILocation(line: 883, column: 56, scope: !1981)
!1981 = distinct !DILexicalBlock(scope: !1977, file: !3, line: 882, column: 7)
!1982 = !DILocation(line: 883, column: 47, scope: !1981)
!1983 = !DILocation(line: 883, column: 46, scope: !1981)
!1984 = !DILocation(line: 883, column: 20, scope: !1981)
!1985 = !DILocation(line: 883, column: 9, scope: !1981)
!1986 = !DILocation(line: 883, column: 15, scope: !1981)
!1987 = !DILocation(line: 883, column: 18, scope: !1981)
!1988 = !DILocation(line: 883, column: 19, scope: !1981)
!1989 = !DILocation(line: 884, column: 56, scope: !1981)
!1990 = !DILocation(line: 884, column: 47, scope: !1981)
!1991 = !DILocation(line: 884, column: 46, scope: !1981)
!1992 = !DILocation(line: 884, column: 20, scope: !1981)
!1993 = !DILocation(line: 884, column: 9, scope: !1981)
!1994 = !DILocation(line: 884, column: 15, scope: !1981)
!1995 = !DILocation(line: 884, column: 18, scope: !1981)
!1996 = !DILocation(line: 884, column: 19, scope: !1981)
!1997 = !DILocation(line: 885, column: 56, scope: !1981)
!1998 = !DILocation(line: 885, column: 47, scope: !1981)
!1999 = !DILocation(line: 885, column: 46, scope: !1981)
!2000 = !DILocation(line: 885, column: 20, scope: !1981)
!2001 = !DILocation(line: 885, column: 9, scope: !1981)
!2002 = !DILocation(line: 885, column: 15, scope: !1981)
!2003 = !DILocation(line: 885, column: 18, scope: !1981)
!2004 = !DILocation(line: 885, column: 19, scope: !1981)
!2005 = !DILocation(line: 886, column: 57, scope: !1981)
!2006 = !DILocation(line: 886, column: 48, scope: !1981)
!2007 = !DILocation(line: 886, column: 47, scope: !1981)
!2008 = !DILocation(line: 886, column: 20, scope: !1981)
!2009 = !DILocation(line: 886, column: 9, scope: !1981)
!2010 = !DILocation(line: 886, column: 15, scope: !1981)
!2011 = !DILocation(line: 886, column: 18, scope: !1981)
!2012 = !DILocation(line: 886, column: 19, scope: !1981)
!2013 = !DILocation(line: 887, column: 57, scope: !1981)
!2014 = !DILocation(line: 887, column: 48, scope: !1981)
!2015 = !DILocation(line: 887, column: 47, scope: !1981)
!2016 = !DILocation(line: 887, column: 20, scope: !1981)
!2017 = !DILocation(line: 887, column: 9, scope: !1981)
!2018 = !DILocation(line: 887, column: 15, scope: !1981)
!2019 = !DILocation(line: 887, column: 18, scope: !1981)
!2020 = !DILocation(line: 887, column: 19, scope: !1981)
!2021 = !DILocation(line: 888, column: 56, scope: !1981)
!2022 = !DILocation(line: 888, column: 47, scope: !1981)
!2023 = !DILocation(line: 888, column: 46, scope: !1981)
!2024 = !DILocation(line: 888, column: 20, scope: !1981)
!2025 = !DILocation(line: 888, column: 9, scope: !1981)
!2026 = !DILocation(line: 888, column: 15, scope: !1981)
!2027 = !DILocation(line: 888, column: 18, scope: !1981)
!2028 = !DILocation(line: 888, column: 19, scope: !1981)
!2029 = !DILocation(line: 889, column: 56, scope: !1981)
!2030 = !DILocation(line: 889, column: 47, scope: !1981)
!2031 = !DILocation(line: 889, column: 46, scope: !1981)
!2032 = !DILocation(line: 889, column: 20, scope: !1981)
!2033 = !DILocation(line: 889, column: 9, scope: !1981)
!2034 = !DILocation(line: 889, column: 15, scope: !1981)
!2035 = !DILocation(line: 889, column: 18, scope: !1981)
!2036 = !DILocation(line: 889, column: 19, scope: !1981)
!2037 = !DILocation(line: 890, column: 57, scope: !1981)
!2038 = !DILocation(line: 890, column: 48, scope: !1981)
!2039 = !DILocation(line: 890, column: 47, scope: !1981)
!2040 = !DILocation(line: 890, column: 20, scope: !1981)
!2041 = !DILocation(line: 890, column: 9, scope: !1981)
!2042 = !DILocation(line: 890, column: 15, scope: !1981)
!2043 = !DILocation(line: 890, column: 18, scope: !1981)
!2044 = !DILocation(line: 890, column: 19, scope: !1981)
!2045 = !DILocation(line: 891, column: 57, scope: !1981)
!2046 = !DILocation(line: 891, column: 48, scope: !1981)
!2047 = !DILocation(line: 891, column: 47, scope: !1981)
!2048 = !DILocation(line: 891, column: 20, scope: !1981)
!2049 = !DILocation(line: 891, column: 9, scope: !1981)
!2050 = !DILocation(line: 891, column: 15, scope: !1981)
!2051 = !DILocation(line: 891, column: 18, scope: !1981)
!2052 = !DILocation(line: 891, column: 19, scope: !1981)
!2053 = !DILocation(line: 892, column: 7, scope: !1981)
!2054 = !DILocation(line: 881, column: 41, scope: !1977)
!2055 = !DILocation(line: 881, column: 7, scope: !1977)
!2056 = distinct !{!2056, !1979, !2057}
!2057 = !DILocation(line: 892, column: 7, scope: !1974)
!2058 = !DILocation(line: 893, column: 7, scope: !1969)
!2059 = !DILocation(line: 906, column: 49, scope: !2060)
!2060 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 896, column: 5)
!2061 = !DILocation(line: 906, column: 31, scope: !2060)
!2062 = !DILocation(line: 906, column: 22, scope: !2060)
!2063 = !DILocation(line: 906, column: 20, scope: !2060)
!2064 = !DILocation(line: 906, column: 21, scope: !2060)
!2065 = !DILocation(line: 907, column: 49, scope: !2060)
!2066 = !DILocation(line: 907, column: 31, scope: !2060)
!2067 = !DILocation(line: 907, column: 22, scope: !2060)
!2068 = !DILocation(line: 907, column: 20, scope: !2060)
!2069 = !DILocation(line: 907, column: 21, scope: !2060)
!2070 = !DILocation(line: 908, column: 13, scope: !2071)
!2071 = distinct !DILexicalBlock(scope: !2060, file: !3, line: 908, column: 7)
!2072 = !DILocation(line: 908, column: 12, scope: !2071)
!2073 = !DILocation(line: 908, column: 17, scope: !2074)
!2074 = distinct !DILexicalBlock(scope: !2071, file: !3, line: 908, column: 7)
!2075 = !DILocation(line: 908, column: 19, scope: !2074)
!2076 = !DILocation(line: 908, column: 7, scope: !2071)
!2077 = !DILocation(line: 910, column: 41, scope: !2078)
!2078 = distinct !DILexicalBlock(scope: !2074, file: !3, line: 909, column: 7)
!2079 = !DILocation(line: 910, column: 40, scope: !2078)
!2080 = !DILocation(line: 910, column: 20, scope: !2078)
!2081 = !DILocation(line: 910, column: 9, scope: !2078)
!2082 = !DILocation(line: 910, column: 15, scope: !2078)
!2083 = !DILocation(line: 910, column: 18, scope: !2078)
!2084 = !DILocation(line: 910, column: 19, scope: !2078)
!2085 = !DILocation(line: 911, column: 41, scope: !2078)
!2086 = !DILocation(line: 911, column: 40, scope: !2078)
!2087 = !DILocation(line: 911, column: 20, scope: !2078)
!2088 = !DILocation(line: 911, column: 9, scope: !2078)
!2089 = !DILocation(line: 911, column: 15, scope: !2078)
!2090 = !DILocation(line: 911, column: 18, scope: !2078)
!2091 = !DILocation(line: 911, column: 19, scope: !2078)
!2092 = !DILocation(line: 912, column: 41, scope: !2078)
!2093 = !DILocation(line: 912, column: 40, scope: !2078)
!2094 = !DILocation(line: 912, column: 20, scope: !2078)
!2095 = !DILocation(line: 912, column: 9, scope: !2078)
!2096 = !DILocation(line: 912, column: 15, scope: !2078)
!2097 = !DILocation(line: 912, column: 18, scope: !2078)
!2098 = !DILocation(line: 912, column: 19, scope: !2078)
!2099 = !DILocation(line: 913, column: 44, scope: !2078)
!2100 = !DILocation(line: 913, column: 43, scope: !2078)
!2101 = !DILocation(line: 913, column: 20, scope: !2078)
!2102 = !DILocation(line: 913, column: 9, scope: !2078)
!2103 = !DILocation(line: 913, column: 15, scope: !2078)
!2104 = !DILocation(line: 913, column: 18, scope: !2078)
!2105 = !DILocation(line: 913, column: 19, scope: !2078)
!2106 = !DILocation(line: 914, column: 44, scope: !2078)
!2107 = !DILocation(line: 914, column: 43, scope: !2078)
!2108 = !DILocation(line: 914, column: 20, scope: !2078)
!2109 = !DILocation(line: 914, column: 9, scope: !2078)
!2110 = !DILocation(line: 914, column: 15, scope: !2078)
!2111 = !DILocation(line: 914, column: 18, scope: !2078)
!2112 = !DILocation(line: 914, column: 19, scope: !2078)
!2113 = !DILocation(line: 915, column: 41, scope: !2078)
!2114 = !DILocation(line: 915, column: 40, scope: !2078)
!2115 = !DILocation(line: 915, column: 20, scope: !2078)
!2116 = !DILocation(line: 915, column: 9, scope: !2078)
!2117 = !DILocation(line: 915, column: 15, scope: !2078)
!2118 = !DILocation(line: 915, column: 18, scope: !2078)
!2119 = !DILocation(line: 915, column: 19, scope: !2078)
!2120 = !DILocation(line: 916, column: 41, scope: !2078)
!2121 = !DILocation(line: 916, column: 40, scope: !2078)
!2122 = !DILocation(line: 916, column: 20, scope: !2078)
!2123 = !DILocation(line: 916, column: 9, scope: !2078)
!2124 = !DILocation(line: 916, column: 15, scope: !2078)
!2125 = !DILocation(line: 916, column: 18, scope: !2078)
!2126 = !DILocation(line: 916, column: 19, scope: !2078)
!2127 = !DILocation(line: 917, column: 44, scope: !2078)
!2128 = !DILocation(line: 917, column: 43, scope: !2078)
!2129 = !DILocation(line: 917, column: 20, scope: !2078)
!2130 = !DILocation(line: 917, column: 9, scope: !2078)
!2131 = !DILocation(line: 917, column: 15, scope: !2078)
!2132 = !DILocation(line: 917, column: 18, scope: !2078)
!2133 = !DILocation(line: 917, column: 19, scope: !2078)
!2134 = !DILocation(line: 918, column: 42, scope: !2078)
!2135 = !DILocation(line: 918, column: 41, scope: !2078)
!2136 = !DILocation(line: 918, column: 20, scope: !2078)
!2137 = !DILocation(line: 918, column: 9, scope: !2078)
!2138 = !DILocation(line: 918, column: 15, scope: !2078)
!2139 = !DILocation(line: 918, column: 18, scope: !2078)
!2140 = !DILocation(line: 918, column: 19, scope: !2078)
!2141 = !DILocation(line: 919, column: 7, scope: !2078)
!2142 = !DILocation(line: 908, column: 49, scope: !2074)
!2143 = !DILocation(line: 908, column: 7, scope: !2074)
!2144 = distinct !{!2144, !2076, !2145}
!2145 = !DILocation(line: 919, column: 7, scope: !2071)
!2146 = !DILocation(line: 920, column: 7, scope: !2060)
!2147 = !DILocation(line: 920, column: 15, scope: !2148)
!2148 = distinct !DILexicalBlock(scope: !2149, file: !3, line: 920, column: 7)
!2149 = distinct !DILexicalBlock(scope: !2060, file: !3, line: 920, column: 7)
!2150 = !DILocation(line: 920, column: 17, scope: !2148)
!2151 = !DILocation(line: 920, column: 7, scope: !2149)
!2152 = !DILocation(line: 922, column: 46, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2148, file: !3, line: 921, column: 7)
!2154 = !DILocation(line: 922, column: 45, scope: !2153)
!2155 = !DILocation(line: 922, column: 47, scope: !2153)
!2156 = !DILocation(line: 922, column: 38, scope: !2153)
!2157 = !DILocation(line: 922, column: 20, scope: !2153)
!2158 = !DILocation(line: 922, column: 9, scope: !2153)
!2159 = !DILocation(line: 922, column: 15, scope: !2153)
!2160 = !DILocation(line: 922, column: 18, scope: !2153)
!2161 = !DILocation(line: 922, column: 19, scope: !2153)
!2162 = !DILocation(line: 923, column: 46, scope: !2153)
!2163 = !DILocation(line: 923, column: 45, scope: !2153)
!2164 = !DILocation(line: 923, column: 47, scope: !2153)
!2165 = !DILocation(line: 923, column: 38, scope: !2153)
!2166 = !DILocation(line: 923, column: 20, scope: !2153)
!2167 = !DILocation(line: 923, column: 9, scope: !2153)
!2168 = !DILocation(line: 923, column: 15, scope: !2153)
!2169 = !DILocation(line: 923, column: 18, scope: !2153)
!2170 = !DILocation(line: 923, column: 19, scope: !2153)
!2171 = !DILocation(line: 924, column: 47, scope: !2153)
!2172 = !DILocation(line: 924, column: 46, scope: !2153)
!2173 = !DILocation(line: 924, column: 48, scope: !2153)
!2174 = !DILocation(line: 924, column: 39, scope: !2153)
!2175 = !DILocation(line: 924, column: 20, scope: !2153)
!2176 = !DILocation(line: 924, column: 9, scope: !2153)
!2177 = !DILocation(line: 924, column: 15, scope: !2153)
!2178 = !DILocation(line: 924, column: 18, scope: !2153)
!2179 = !DILocation(line: 924, column: 19, scope: !2153)
!2180 = !DILocation(line: 925, column: 49, scope: !2153)
!2181 = !DILocation(line: 925, column: 48, scope: !2153)
!2182 = !DILocation(line: 925, column: 50, scope: !2153)
!2183 = !DILocation(line: 925, column: 41, scope: !2153)
!2184 = !DILocation(line: 925, column: 20, scope: !2153)
!2185 = !DILocation(line: 925, column: 9, scope: !2153)
!2186 = !DILocation(line: 925, column: 15, scope: !2153)
!2187 = !DILocation(line: 925, column: 18, scope: !2153)
!2188 = !DILocation(line: 925, column: 19, scope: !2153)
!2189 = !DILocation(line: 926, column: 49, scope: !2153)
!2190 = !DILocation(line: 926, column: 48, scope: !2153)
!2191 = !DILocation(line: 926, column: 50, scope: !2153)
!2192 = !DILocation(line: 926, column: 41, scope: !2153)
!2193 = !DILocation(line: 926, column: 20, scope: !2153)
!2194 = !DILocation(line: 926, column: 9, scope: !2153)
!2195 = !DILocation(line: 926, column: 15, scope: !2153)
!2196 = !DILocation(line: 926, column: 18, scope: !2153)
!2197 = !DILocation(line: 926, column: 19, scope: !2153)
!2198 = !DILocation(line: 927, column: 46, scope: !2153)
!2199 = !DILocation(line: 927, column: 45, scope: !2153)
!2200 = !DILocation(line: 927, column: 47, scope: !2153)
!2201 = !DILocation(line: 927, column: 38, scope: !2153)
!2202 = !DILocation(line: 927, column: 20, scope: !2153)
!2203 = !DILocation(line: 927, column: 9, scope: !2153)
!2204 = !DILocation(line: 927, column: 15, scope: !2153)
!2205 = !DILocation(line: 927, column: 18, scope: !2153)
!2206 = !DILocation(line: 927, column: 19, scope: !2153)
!2207 = !DILocation(line: 928, column: 46, scope: !2153)
!2208 = !DILocation(line: 928, column: 45, scope: !2153)
!2209 = !DILocation(line: 928, column: 47, scope: !2153)
!2210 = !DILocation(line: 928, column: 38, scope: !2153)
!2211 = !DILocation(line: 928, column: 20, scope: !2153)
!2212 = !DILocation(line: 928, column: 9, scope: !2153)
!2213 = !DILocation(line: 928, column: 15, scope: !2153)
!2214 = !DILocation(line: 928, column: 18, scope: !2153)
!2215 = !DILocation(line: 928, column: 19, scope: !2153)
!2216 = !DILocation(line: 929, column: 49, scope: !2153)
!2217 = !DILocation(line: 929, column: 48, scope: !2153)
!2218 = !DILocation(line: 929, column: 50, scope: !2153)
!2219 = !DILocation(line: 929, column: 41, scope: !2153)
!2220 = !DILocation(line: 929, column: 20, scope: !2153)
!2221 = !DILocation(line: 929, column: 9, scope: !2153)
!2222 = !DILocation(line: 929, column: 15, scope: !2153)
!2223 = !DILocation(line: 929, column: 18, scope: !2153)
!2224 = !DILocation(line: 929, column: 19, scope: !2153)
!2225 = !DILocation(line: 930, column: 50, scope: !2153)
!2226 = !DILocation(line: 930, column: 49, scope: !2153)
!2227 = !DILocation(line: 930, column: 51, scope: !2153)
!2228 = !DILocation(line: 930, column: 42, scope: !2153)
!2229 = !DILocation(line: 930, column: 20, scope: !2153)
!2230 = !DILocation(line: 930, column: 9, scope: !2153)
!2231 = !DILocation(line: 930, column: 15, scope: !2153)
!2232 = !DILocation(line: 930, column: 18, scope: !2153)
!2233 = !DILocation(line: 930, column: 19, scope: !2153)
!2234 = !DILocation(line: 931, column: 7, scope: !2153)
!2235 = !DILocation(line: 920, column: 39, scope: !2148)
!2236 = !DILocation(line: 920, column: 7, scope: !2148)
!2237 = distinct !{!2237, !2151, !2238}
!2238 = !DILocation(line: 931, column: 7, scope: !2149)
!2239 = !DILocation(line: 932, column: 7, scope: !2060)
!2240 = !DILocation(line: 943, column: 13, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2242, file: !3, line: 943, column: 7)
!2242 = distinct !DILexicalBlock(scope: !1613, file: !3, line: 935, column: 5)
!2243 = !DILocation(line: 943, column: 12, scope: !2241)
!2244 = !DILocation(line: 943, column: 17, scope: !2245)
!2245 = distinct !DILexicalBlock(scope: !2241, file: !3, line: 943, column: 7)
!2246 = !DILocation(line: 943, column: 19, scope: !2245)
!2247 = !DILocation(line: 943, column: 7, scope: !2241)
!2248 = !DILocation(line: 945, column: 51, scope: !2249)
!2249 = distinct !DILexicalBlock(scope: !2245, file: !3, line: 944, column: 7)
!2250 = !DILocation(line: 945, column: 42, scope: !2249)
!2251 = !DILocation(line: 945, column: 41, scope: !2249)
!2252 = !DILocation(line: 945, column: 20, scope: !2249)
!2253 = !DILocation(line: 945, column: 9, scope: !2249)
!2254 = !DILocation(line: 945, column: 15, scope: !2249)
!2255 = !DILocation(line: 945, column: 18, scope: !2249)
!2256 = !DILocation(line: 945, column: 19, scope: !2249)
!2257 = !DILocation(line: 946, column: 9, scope: !2249)
!2258 = !DILocation(line: 946, column: 15, scope: !2249)
!2259 = !DILocation(line: 946, column: 18, scope: !2249)
!2260 = !DILocation(line: 946, column: 19, scope: !2249)
!2261 = !DILocation(line: 947, column: 9, scope: !2249)
!2262 = !DILocation(line: 947, column: 15, scope: !2249)
!2263 = !DILocation(line: 947, column: 18, scope: !2249)
!2264 = !DILocation(line: 947, column: 19, scope: !2249)
!2265 = !DILocation(line: 948, column: 9, scope: !2249)
!2266 = !DILocation(line: 948, column: 15, scope: !2249)
!2267 = !DILocation(line: 948, column: 18, scope: !2249)
!2268 = !DILocation(line: 948, column: 19, scope: !2249)
!2269 = !DILocation(line: 949, column: 51, scope: !2249)
!2270 = !DILocation(line: 949, column: 42, scope: !2249)
!2271 = !DILocation(line: 949, column: 41, scope: !2249)
!2272 = !DILocation(line: 949, column: 20, scope: !2249)
!2273 = !DILocation(line: 949, column: 9, scope: !2249)
!2274 = !DILocation(line: 949, column: 15, scope: !2249)
!2275 = !DILocation(line: 949, column: 18, scope: !2249)
!2276 = !DILocation(line: 949, column: 19, scope: !2249)
!2277 = !DILocation(line: 950, column: 9, scope: !2249)
!2278 = !DILocation(line: 950, column: 15, scope: !2249)
!2279 = !DILocation(line: 950, column: 18, scope: !2249)
!2280 = !DILocation(line: 950, column: 19, scope: !2249)
!2281 = !DILocation(line: 951, column: 9, scope: !2249)
!2282 = !DILocation(line: 951, column: 15, scope: !2249)
!2283 = !DILocation(line: 951, column: 18, scope: !2249)
!2284 = !DILocation(line: 951, column: 19, scope: !2249)
!2285 = !DILocation(line: 952, column: 9, scope: !2249)
!2286 = !DILocation(line: 952, column: 15, scope: !2249)
!2287 = !DILocation(line: 952, column: 18, scope: !2249)
!2288 = !DILocation(line: 952, column: 19, scope: !2249)
!2289 = !DILocation(line: 953, column: 51, scope: !2249)
!2290 = !DILocation(line: 953, column: 42, scope: !2249)
!2291 = !DILocation(line: 953, column: 41, scope: !2249)
!2292 = !DILocation(line: 953, column: 20, scope: !2249)
!2293 = !DILocation(line: 953, column: 9, scope: !2249)
!2294 = !DILocation(line: 953, column: 15, scope: !2249)
!2295 = !DILocation(line: 953, column: 18, scope: !2249)
!2296 = !DILocation(line: 953, column: 19, scope: !2249)
!2297 = !DILocation(line: 954, column: 7, scope: !2249)
!2298 = !DILocation(line: 943, column: 41, scope: !2245)
!2299 = !DILocation(line: 943, column: 7, scope: !2245)
!2300 = distinct !{!2300, !2247, !2301}
!2301 = !DILocation(line: 954, column: 7, scope: !2241)
!2302 = !DILocation(line: 955, column: 7, scope: !2242)
!2303 = !DILocation(line: 961, column: 11, scope: !647)
!2304 = !DILocation(line: 961, column: 18, scope: !647)
!2305 = !DILocation(line: 961, column: 3, scope: !647)
!2306 = !DILocation(line: 962, column: 3, scope: !647)
!2307 = !DILocation(line: 969, column: 44, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2309, file: !3, line: 965, column: 5)
!2309 = distinct !DILexicalBlock(scope: !647, file: !3, line: 962, column: 3)
!2310 = !DILocation(line: 969, column: 50, scope: !2308)
!2311 = !DILocation(line: 969, column: 18, scope: !2308)
!2312 = !DILocation(line: 969, column: 17, scope: !2308)
!2313 = !DILocation(line: 974, column: 13, scope: !2314)
!2314 = distinct !DILexicalBlock(scope: !2308, file: !3, line: 974, column: 7)
!2315 = !DILocation(line: 974, column: 12, scope: !2314)
!2316 = !DILocation(line: 974, column: 17, scope: !2317)
!2317 = distinct !DILexicalBlock(scope: !2314, file: !3, line: 974, column: 7)
!2318 = !DILocation(line: 974, column: 31, scope: !2317)
!2319 = !DILocation(line: 974, column: 38, scope: !2317)
!2320 = !DILocation(line: 974, column: 19, scope: !2317)
!2321 = !DILocation(line: 974, column: 7, scope: !2314)
!2322 = !DILocalVariable(name: "sync", scope: !2323, file: !3, line: 977, type: !6)
!2323 = distinct !DILexicalBlock(scope: !2317, file: !3, line: 975, column: 7)
!2324 = !DILocation(line: 977, column: 11, scope: !2323)
!2325 = !DILocalVariable(name: "pixel", scope: !2323, file: !3, line: 980, type: !696)
!2326 = !DILocation(line: 980, column: 11, scope: !2323)
!2327 = !DILocalVariable(name: "x", scope: !2323, file: !3, line: 983, type: !170)
!2328 = !DILocation(line: 983, column: 11, scope: !2323)
!2329 = !DILocalVariable(name: "q", scope: !2323, file: !3, line: 986, type: !762)
!2330 = !DILocation(line: 986, column: 21, scope: !2323)
!2331 = !DILocalVariable(name: "blue", scope: !2323, file: !3, line: 989, type: !92)
!2332 = !DILocation(line: 989, column: 11, scope: !2323)
!2333 = !DILocalVariable(name: "green", scope: !2323, file: !3, line: 990, type: !92)
!2334 = !DILocation(line: 990, column: 11, scope: !2323)
!2335 = !DILocalVariable(name: "red", scope: !2323, file: !3, line: 991, type: !92)
!2336 = !DILocation(line: 991, column: 11, scope: !2323)
!2337 = !DILocation(line: 993, column: 13, scope: !2338)
!2338 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 993, column: 13)
!2339 = !DILocation(line: 993, column: 20, scope: !2338)
!2340 = !DILocation(line: 993, column: 13, scope: !2323)
!2341 = !DILocation(line: 994, column: 11, scope: !2338)
!2342 = !DILocation(line: 995, column: 39, scope: !2323)
!2343 = !DILocation(line: 995, column: 52, scope: !2323)
!2344 = !DILocation(line: 995, column: 54, scope: !2323)
!2345 = !DILocation(line: 995, column: 61, scope: !2323)
!2346 = !DILocation(line: 996, column: 11, scope: !2323)
!2347 = !DILocation(line: 995, column: 11, scope: !2323)
!2348 = !DILocation(line: 995, column: 10, scope: !2323)
!2349 = !DILocation(line: 997, column: 13, scope: !2350)
!2350 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 997, column: 13)
!2351 = !DILocation(line: 997, column: 15, scope: !2350)
!2352 = !DILocation(line: 997, column: 13, scope: !2323)
!2353 = !DILocation(line: 999, column: 19, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2350, file: !3, line: 998, column: 11)
!2355 = !DILocation(line: 1000, column: 13, scope: !2354)
!2356 = !DILocation(line: 1002, column: 15, scope: !2357)
!2357 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 1002, column: 9)
!2358 = !DILocation(line: 1002, column: 14, scope: !2357)
!2359 = !DILocation(line: 1002, column: 19, scope: !2360)
!2360 = distinct !DILexicalBlock(scope: !2357, file: !3, line: 1002, column: 9)
!2361 = !DILocation(line: 1002, column: 33, scope: !2360)
!2362 = !DILocation(line: 1002, column: 40, scope: !2360)
!2363 = !DILocation(line: 1002, column: 21, scope: !2360)
!2364 = !DILocation(line: 1002, column: 9, scope: !2357)
!2365 = !DILocation(line: 1005, column: 13, scope: !2366)
!2366 = distinct !DILexicalBlock(scope: !2360, file: !3, line: 1003, column: 9)
!2367 = !DILocation(line: 1004, column: 48, scope: !2366)
!2368 = !DILocation(line: 1004, column: 33, scope: !2366)
!2369 = !DILocation(line: 1004, column: 15, scope: !2366)
!2370 = !DILocation(line: 1004, column: 14, scope: !2366)
!2371 = !DILocation(line: 1007, column: 13, scope: !2366)
!2372 = !DILocation(line: 1006, column: 50, scope: !2366)
!2373 = !DILocation(line: 1006, column: 35, scope: !2366)
!2374 = !DILocation(line: 1006, column: 17, scope: !2366)
!2375 = !DILocation(line: 1006, column: 16, scope: !2366)
!2376 = !DILocation(line: 1009, column: 13, scope: !2366)
!2377 = !DILocation(line: 1008, column: 49, scope: !2366)
!2378 = !DILocation(line: 1008, column: 34, scope: !2366)
!2379 = !DILocation(line: 1008, column: 16, scope: !2366)
!2380 = !DILocation(line: 1008, column: 15, scope: !2366)
!2381 = !DILocation(line: 1010, column: 22, scope: !2366)
!2382 = !DILocation(line: 1010, column: 28, scope: !2366)
!2383 = !DILocation(line: 1010, column: 33, scope: !2366)
!2384 = !DILocation(line: 1010, column: 35, scope: !2366)
!2385 = !DILocation(line: 1010, column: 41, scope: !2366)
!2386 = !DILocation(line: 1010, column: 48, scope: !2366)
!2387 = !DILocation(line: 1010, column: 34, scope: !2366)
!2388 = !DILocation(line: 1010, column: 50, scope: !2366)
!2389 = !DILocation(line: 1010, column: 56, scope: !2366)
!2390 = !DILocation(line: 1010, column: 62, scope: !2366)
!2391 = !DILocation(line: 1010, column: 49, scope: !2366)
!2392 = !DILocation(line: 1011, column: 43, scope: !2366)
!2393 = !DILocation(line: 1011, column: 13, scope: !2366)
!2394 = !DILocation(line: 1010, column: 64, scope: !2366)
!2395 = !DILocation(line: 1010, column: 17, scope: !2366)
!2396 = !DILocation(line: 1010, column: 20, scope: !2366)
!2397 = !DILocation(line: 1012, column: 24, scope: !2366)
!2398 = !DILocation(line: 1012, column: 30, scope: !2366)
!2399 = !DILocation(line: 1012, column: 35, scope: !2366)
!2400 = !DILocation(line: 1012, column: 37, scope: !2366)
!2401 = !DILocation(line: 1012, column: 43, scope: !2366)
!2402 = !DILocation(line: 1012, column: 50, scope: !2366)
!2403 = !DILocation(line: 1012, column: 36, scope: !2366)
!2404 = !DILocation(line: 1012, column: 52, scope: !2366)
!2405 = !DILocation(line: 1012, column: 58, scope: !2366)
!2406 = !DILocation(line: 1012, column: 64, scope: !2366)
!2407 = !DILocation(line: 1012, column: 51, scope: !2366)
!2408 = !DILocation(line: 1013, column: 43, scope: !2366)
!2409 = !DILocation(line: 1013, column: 13, scope: !2366)
!2410 = !DILocation(line: 1012, column: 66, scope: !2366)
!2411 = !DILocation(line: 1012, column: 17, scope: !2366)
!2412 = !DILocation(line: 1012, column: 22, scope: !2366)
!2413 = !DILocation(line: 1014, column: 23, scope: !2366)
!2414 = !DILocation(line: 1014, column: 29, scope: !2366)
!2415 = !DILocation(line: 1014, column: 34, scope: !2366)
!2416 = !DILocation(line: 1014, column: 36, scope: !2366)
!2417 = !DILocation(line: 1014, column: 42, scope: !2366)
!2418 = !DILocation(line: 1014, column: 49, scope: !2366)
!2419 = !DILocation(line: 1014, column: 35, scope: !2366)
!2420 = !DILocation(line: 1014, column: 51, scope: !2366)
!2421 = !DILocation(line: 1014, column: 57, scope: !2366)
!2422 = !DILocation(line: 1014, column: 63, scope: !2366)
!2423 = !DILocation(line: 1014, column: 50, scope: !2366)
!2424 = !DILocation(line: 1015, column: 43, scope: !2366)
!2425 = !DILocation(line: 1015, column: 13, scope: !2366)
!2426 = !DILocation(line: 1014, column: 65, scope: !2366)
!2427 = !DILocation(line: 1014, column: 17, scope: !2366)
!2428 = !DILocation(line: 1014, column: 21, scope: !2366)
!2429 = !DILocation(line: 1016, column: 11, scope: !2366)
!2430 = !DILocation(line: 1017, column: 11, scope: !2366)
!2431 = !DILocation(line: 1018, column: 11, scope: !2366)
!2432 = !DILocation(line: 1019, column: 12, scope: !2366)
!2433 = !DILocation(line: 1020, column: 9, scope: !2366)
!2434 = !DILocation(line: 1002, column: 50, scope: !2360)
!2435 = !DILocation(line: 1002, column: 9, scope: !2360)
!2436 = distinct !{!2436, !2364, !2437}
!2437 = !DILocation(line: 1020, column: 9, scope: !2357)
!2438 = !DILocation(line: 1021, column: 43, scope: !2323)
!2439 = !DILocation(line: 1021, column: 54, scope: !2323)
!2440 = !DILocation(line: 1021, column: 14, scope: !2323)
!2441 = !DILocation(line: 1021, column: 13, scope: !2323)
!2442 = !DILocation(line: 1022, column: 13, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 1022, column: 13)
!2444 = !DILocation(line: 1022, column: 18, scope: !2443)
!2445 = !DILocation(line: 1022, column: 13, scope: !2323)
!2446 = !DILocation(line: 1023, column: 17, scope: !2443)
!2447 = !DILocation(line: 1023, column: 11, scope: !2443)
!2448 = !DILocation(line: 1024, column: 13, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2323, file: !3, line: 1024, column: 13)
!2450 = !DILocation(line: 1024, column: 20, scope: !2449)
!2451 = !DILocation(line: 1024, column: 37, scope: !2449)
!2452 = !DILocation(line: 1024, column: 13, scope: !2323)
!2453 = !DILocalVariable(name: "proceed", scope: !2454, file: !3, line: 1027, type: !6)
!2454 = distinct !DILexicalBlock(scope: !2449, file: !3, line: 1025, column: 11)
!2455 = !DILocation(line: 1027, column: 15, scope: !2454)
!2456 = !DILocation(line: 1032, column: 38, scope: !2454)
!2457 = !DILocation(line: 1032, column: 73, scope: !2454)
!2458 = !DILocation(line: 1033, column: 15, scope: !2454)
!2459 = !DILocation(line: 1033, column: 22, scope: !2454)
!2460 = !DILocation(line: 1032, column: 21, scope: !2454)
!2461 = !DILocation(line: 1032, column: 20, scope: !2454)
!2462 = !DILocation(line: 1034, column: 17, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2454, file: !3, line: 1034, column: 17)
!2464 = !DILocation(line: 1034, column: 25, scope: !2463)
!2465 = !DILocation(line: 1034, column: 17, scope: !2454)
!2466 = !DILocation(line: 1035, column: 21, scope: !2463)
!2467 = !DILocation(line: 1035, column: 15, scope: !2463)
!2468 = !DILocation(line: 1036, column: 11, scope: !2454)
!2469 = !DILocation(line: 1037, column: 7, scope: !2323)
!2470 = !DILocation(line: 974, column: 45, scope: !2317)
!2471 = !DILocation(line: 974, column: 7, scope: !2317)
!2472 = distinct !{!2472, !2321, !2473}
!2473 = !DILocation(line: 1037, column: 7, scope: !2314)
!2474 = !DILocation(line: 1038, column: 35, scope: !2308)
!2475 = !DILocation(line: 1038, column: 18, scope: !2308)
!2476 = !DILocation(line: 1038, column: 17, scope: !2308)
!2477 = !DILocation(line: 1039, column: 7, scope: !2308)
!2478 = !DILocalVariable(name: "blue", scope: !2479, file: !3, line: 1044, type: !92)
!2479 = distinct !DILexicalBlock(scope: !2309, file: !3, line: 1042, column: 5)
!2480 = !DILocation(line: 1044, column: 9, scope: !2479)
!2481 = !DILocalVariable(name: "green", scope: !2479, file: !3, line: 1045, type: !92)
!2482 = !DILocation(line: 1045, column: 9, scope: !2479)
!2483 = !DILocalVariable(name: "red", scope: !2479, file: !3, line: 1046, type: !92)
!2484 = !DILocation(line: 1046, column: 9, scope: !2479)
!2485 = !DILocation(line: 1051, column: 13, scope: !2486)
!2486 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 1051, column: 7)
!2487 = !DILocation(line: 1051, column: 12, scope: !2486)
!2488 = !DILocation(line: 1051, column: 17, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2486, file: !3, line: 1051, column: 7)
!2490 = !DILocation(line: 1051, column: 31, scope: !2489)
!2491 = !DILocation(line: 1051, column: 38, scope: !2489)
!2492 = !DILocation(line: 1051, column: 19, scope: !2489)
!2493 = !DILocation(line: 1051, column: 7, scope: !2486)
!2494 = !DILocalVariable(name: "pixel", scope: !2495, file: !3, line: 1054, type: !696)
!2495 = distinct !DILexicalBlock(scope: !2489, file: !3, line: 1052, column: 7)
!2496 = !DILocation(line: 1054, column: 11, scope: !2495)
!2497 = !DILocation(line: 1057, column: 11, scope: !2495)
!2498 = !DILocation(line: 1057, column: 18, scope: !2495)
!2499 = !DILocation(line: 1057, column: 27, scope: !2495)
!2500 = !DILocation(line: 1057, column: 30, scope: !2495)
!2501 = !DILocation(line: 1056, column: 46, scope: !2495)
!2502 = !DILocation(line: 1056, column: 31, scope: !2495)
!2503 = !DILocation(line: 1056, column: 13, scope: !2495)
!2504 = !DILocation(line: 1056, column: 12, scope: !2495)
!2505 = !DILocation(line: 1059, column: 11, scope: !2495)
!2506 = !DILocation(line: 1059, column: 18, scope: !2495)
!2507 = !DILocation(line: 1059, column: 27, scope: !2495)
!2508 = !DILocation(line: 1059, column: 30, scope: !2495)
!2509 = !DILocation(line: 1058, column: 48, scope: !2495)
!2510 = !DILocation(line: 1058, column: 33, scope: !2495)
!2511 = !DILocation(line: 1058, column: 15, scope: !2495)
!2512 = !DILocation(line: 1058, column: 14, scope: !2495)
!2513 = !DILocation(line: 1061, column: 11, scope: !2495)
!2514 = !DILocation(line: 1061, column: 18, scope: !2495)
!2515 = !DILocation(line: 1061, column: 27, scope: !2495)
!2516 = !DILocation(line: 1061, column: 30, scope: !2495)
!2517 = !DILocation(line: 1060, column: 47, scope: !2495)
!2518 = !DILocation(line: 1060, column: 32, scope: !2495)
!2519 = !DILocation(line: 1060, column: 14, scope: !2495)
!2520 = !DILocation(line: 1060, column: 13, scope: !2495)
!2521 = !DILocation(line: 1062, column: 19, scope: !2495)
!2522 = !DILocation(line: 1062, column: 25, scope: !2495)
!2523 = !DILocation(line: 1062, column: 30, scope: !2495)
!2524 = !DILocation(line: 1062, column: 32, scope: !2495)
!2525 = !DILocation(line: 1062, column: 38, scope: !2495)
!2526 = !DILocation(line: 1062, column: 45, scope: !2495)
!2527 = !DILocation(line: 1062, column: 31, scope: !2495)
!2528 = !DILocation(line: 1062, column: 47, scope: !2495)
!2529 = !DILocation(line: 1062, column: 53, scope: !2495)
!2530 = !DILocation(line: 1062, column: 59, scope: !2495)
!2531 = !DILocation(line: 1062, column: 46, scope: !2495)
!2532 = !DILocation(line: 1062, column: 74, scope: !2495)
!2533 = !DILocation(line: 1062, column: 60, scope: !2495)
!2534 = !DILocation(line: 1062, column: 15, scope: !2495)
!2535 = !DILocation(line: 1062, column: 18, scope: !2495)
!2536 = !DILocation(line: 1063, column: 21, scope: !2495)
!2537 = !DILocation(line: 1063, column: 27, scope: !2495)
!2538 = !DILocation(line: 1063, column: 32, scope: !2495)
!2539 = !DILocation(line: 1063, column: 34, scope: !2495)
!2540 = !DILocation(line: 1063, column: 40, scope: !2495)
!2541 = !DILocation(line: 1063, column: 47, scope: !2495)
!2542 = !DILocation(line: 1063, column: 33, scope: !2495)
!2543 = !DILocation(line: 1063, column: 49, scope: !2495)
!2544 = !DILocation(line: 1063, column: 55, scope: !2495)
!2545 = !DILocation(line: 1063, column: 61, scope: !2495)
!2546 = !DILocation(line: 1063, column: 48, scope: !2495)
!2547 = !DILocation(line: 1063, column: 76, scope: !2495)
!2548 = !DILocation(line: 1063, column: 62, scope: !2495)
!2549 = !DILocation(line: 1063, column: 15, scope: !2495)
!2550 = !DILocation(line: 1063, column: 20, scope: !2495)
!2551 = !DILocation(line: 1064, column: 20, scope: !2495)
!2552 = !DILocation(line: 1064, column: 26, scope: !2495)
!2553 = !DILocation(line: 1064, column: 31, scope: !2495)
!2554 = !DILocation(line: 1064, column: 33, scope: !2495)
!2555 = !DILocation(line: 1064, column: 39, scope: !2495)
!2556 = !DILocation(line: 1064, column: 46, scope: !2495)
!2557 = !DILocation(line: 1064, column: 32, scope: !2495)
!2558 = !DILocation(line: 1064, column: 48, scope: !2495)
!2559 = !DILocation(line: 1064, column: 54, scope: !2495)
!2560 = !DILocation(line: 1064, column: 60, scope: !2495)
!2561 = !DILocation(line: 1064, column: 47, scope: !2495)
!2562 = !DILocation(line: 1064, column: 75, scope: !2495)
!2563 = !DILocation(line: 1064, column: 61, scope: !2495)
!2564 = !DILocation(line: 1064, column: 15, scope: !2495)
!2565 = !DILocation(line: 1064, column: 19, scope: !2495)
!2566 = !DILocation(line: 1065, column: 56, scope: !2495)
!2567 = !DILocation(line: 1065, column: 32, scope: !2495)
!2568 = !DILocation(line: 1065, column: 9, scope: !2495)
!2569 = !DILocation(line: 1065, column: 16, scope: !2495)
!2570 = !DILocation(line: 1065, column: 25, scope: !2495)
!2571 = !DILocation(line: 1065, column: 28, scope: !2495)
!2572 = !DILocation(line: 1065, column: 31, scope: !2495)
!2573 = !DILocation(line: 1066, column: 58, scope: !2495)
!2574 = !DILocation(line: 1066, column: 34, scope: !2495)
!2575 = !DILocation(line: 1066, column: 9, scope: !2495)
!2576 = !DILocation(line: 1066, column: 16, scope: !2495)
!2577 = !DILocation(line: 1066, column: 25, scope: !2495)
!2578 = !DILocation(line: 1066, column: 28, scope: !2495)
!2579 = !DILocation(line: 1066, column: 33, scope: !2495)
!2580 = !DILocation(line: 1067, column: 57, scope: !2495)
!2581 = !DILocation(line: 1067, column: 33, scope: !2495)
!2582 = !DILocation(line: 1067, column: 9, scope: !2495)
!2583 = !DILocation(line: 1067, column: 16, scope: !2495)
!2584 = !DILocation(line: 1067, column: 25, scope: !2495)
!2585 = !DILocation(line: 1067, column: 28, scope: !2495)
!2586 = !DILocation(line: 1067, column: 32, scope: !2495)
!2587 = !DILocation(line: 1068, column: 7, scope: !2495)
!2588 = !DILocation(line: 1051, column: 47, scope: !2489)
!2589 = !DILocation(line: 1051, column: 7, scope: !2489)
!2590 = distinct !{!2590, !2493, !2591}
!2591 = !DILocation(line: 1068, column: 7, scope: !2486)
!2592 = !DILocation(line: 1069, column: 24, scope: !2479)
!2593 = !DILocation(line: 1069, column: 14, scope: !2479)
!2594 = !DILocation(line: 1070, column: 7, scope: !2479)
!2595 = !DILocation(line: 1076, column: 52, scope: !647)
!2596 = !DILocation(line: 1076, column: 29, scope: !647)
!2597 = !DILocation(line: 1076, column: 9, scope: !647)
!2598 = !DILocation(line: 1076, column: 8, scope: !647)
!2599 = !DILocation(line: 1077, column: 52, scope: !647)
!2600 = !DILocation(line: 1077, column: 29, scope: !647)
!2601 = !DILocation(line: 1077, column: 9, scope: !647)
!2602 = !DILocation(line: 1077, column: 8, scope: !647)
!2603 = !DILocation(line: 1078, column: 52, scope: !647)
!2604 = !DILocation(line: 1078, column: 29, scope: !647)
!2605 = !DILocation(line: 1078, column: 9, scope: !647)
!2606 = !DILocation(line: 1078, column: 8, scope: !647)
!2607 = !DILocation(line: 1079, column: 26, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !647, file: !3, line: 1079, column: 7)
!2609 = !DILocation(line: 1079, column: 32, scope: !2608)
!2610 = !DILocation(line: 1079, column: 7, scope: !2608)
!2611 = !DILocation(line: 1079, column: 44, scope: !2608)
!2612 = !DILocation(line: 1079, column: 7, scope: !647)
!2613 = !DILocation(line: 1080, column: 5, scope: !2608)
!2614 = !DILocation(line: 1081, column: 10, scope: !647)
!2615 = !DILocation(line: 1081, column: 3, scope: !647)
!2616 = !DILocation(line: 1082, column: 1, scope: !647)
!2617 = distinct !DISubprogram(name: "SetImageColorspace", scope: !3, file: !3, line: 1109, type: !4, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !594, retainedNodes: !638)
!2618 = !DILocalVariable(name: "image", arg: 1, scope: !2617, file: !3, line: 1109, type: !13)
!2619 = !DILocation(line: 1109, column: 58, scope: !2617)
!2620 = !DILocalVariable(name: "colorspace", arg: 2, scope: !2617, file: !3, line: 1110, type: !593)
!2621 = !DILocation(line: 1110, column: 24, scope: !2617)
!2622 = !DILocalVariable(name: "type", scope: !2617, file: !3, line: 1113, type: !555)
!2623 = !DILocation(line: 1113, column: 5, scope: !2617)
!2624 = !DILocalVariable(name: "status", scope: !2617, file: !3, line: 1116, type: !6)
!2625 = !DILocation(line: 1116, column: 5, scope: !2617)
!2626 = !DILocation(line: 1118, column: 7, scope: !2627)
!2627 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 1118, column: 7)
!2628 = !DILocation(line: 1118, column: 14, scope: !2627)
!2629 = !DILocation(line: 1118, column: 28, scope: !2627)
!2630 = !DILocation(line: 1118, column: 25, scope: !2627)
!2631 = !DILocation(line: 1118, column: 7, scope: !2617)
!2632 = !DILocation(line: 1119, column: 5, scope: !2627)
!2633 = !DILocation(line: 1120, column: 21, scope: !2617)
!2634 = !DILocation(line: 1120, column: 3, scope: !2617)
!2635 = !DILocation(line: 1120, column: 10, scope: !2617)
!2636 = !DILocation(line: 1120, column: 20, scope: !2617)
!2637 = !DILocation(line: 1121, column: 3, scope: !2617)
!2638 = !DILocation(line: 1121, column: 10, scope: !2617)
!2639 = !DILocation(line: 1121, column: 26, scope: !2617)
!2640 = !DILocation(line: 1122, column: 3, scope: !2617)
!2641 = !DILocation(line: 1122, column: 10, scope: !2617)
!2642 = !DILocation(line: 1122, column: 15, scope: !2617)
!2643 = !DILocation(line: 1123, column: 29, scope: !2617)
!2644 = !DILocation(line: 1123, column: 36, scope: !2617)
!2645 = !DILocation(line: 1123, column: 28, scope: !2617)
!2646 = !DILocation(line: 1123, column: 10, scope: !2617)
!2647 = !DILocation(line: 1124, column: 8, scope: !2617)
!2648 = !DILocation(line: 1124, column: 15, scope: !2617)
!2649 = !DILocation(line: 1124, column: 7, scope: !2617)
!2650 = !DILocation(line: 1125, column: 24, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2617, file: !3, line: 1125, column: 7)
!2652 = !DILocation(line: 1125, column: 7, scope: !2651)
!2653 = !DILocation(line: 1125, column: 36, scope: !2651)
!2654 = !DILocation(line: 1125, column: 7, scope: !2617)
!2655 = !DILocation(line: 1127, column: 12, scope: !2656)
!2656 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 1127, column: 11)
!2657 = distinct !DILexicalBlock(scope: !2651, file: !3, line: 1126, column: 5)
!2658 = !DILocation(line: 1127, column: 19, scope: !2656)
!2659 = !DILocation(line: 1127, column: 29, scope: !2656)
!2660 = !DILocation(line: 1127, column: 69, scope: !2656)
!2661 = !DILocation(line: 1128, column: 12, scope: !2656)
!2662 = !DILocation(line: 1128, column: 19, scope: !2656)
!2663 = !DILocation(line: 1128, column: 29, scope: !2656)
!2664 = !DILocation(line: 1127, column: 11, scope: !2657)
!2665 = !DILocation(line: 1129, column: 9, scope: !2656)
!2666 = !DILocation(line: 1129, column: 16, scope: !2656)
!2667 = !DILocation(line: 1129, column: 21, scope: !2656)
!2668 = !DILocation(line: 1130, column: 11, scope: !2657)
!2669 = !DILocation(line: 1131, column: 5, scope: !2657)
!2670 = !DILocation(line: 1133, column: 26, scope: !2671)
!2671 = distinct !DILexicalBlock(scope: !2651, file: !3, line: 1133, column: 9)
!2672 = !DILocation(line: 1133, column: 10, scope: !2671)
!2673 = !DILocation(line: 1133, column: 38, scope: !2671)
!2674 = !DILocation(line: 1133, column: 54, scope: !2671)
!2675 = !DILocation(line: 1134, column: 10, scope: !2671)
!2676 = !DILocation(line: 1134, column: 21, scope: !2671)
!2677 = !DILocation(line: 1133, column: 9, scope: !2651)
!2678 = !DILocation(line: 1135, column: 7, scope: !2671)
!2679 = !DILocation(line: 1135, column: 14, scope: !2671)
!2680 = !DILocation(line: 1135, column: 19, scope: !2671)
!2681 = !DILocation(line: 1138, column: 9, scope: !2682)
!2682 = distinct !DILexicalBlock(scope: !2671, file: !3, line: 1137, column: 7)
!2683 = !DILocation(line: 1138, column: 16, scope: !2682)
!2684 = !DILocation(line: 1138, column: 32, scope: !2682)
!2685 = !DILocation(line: 1139, column: 9, scope: !2682)
!2686 = !DILocation(line: 1139, column: 16, scope: !2682)
!2687 = !DILocation(line: 1139, column: 29, scope: !2682)
!2688 = !DILocation(line: 1139, column: 41, scope: !2682)
!2689 = !DILocation(line: 1139, column: 42, scope: !2682)
!2690 = !DILocation(line: 1140, column: 9, scope: !2682)
!2691 = !DILocation(line: 1140, column: 16, scope: !2682)
!2692 = !DILocation(line: 1140, column: 29, scope: !2682)
!2693 = !DILocation(line: 1140, column: 41, scope: !2682)
!2694 = !DILocation(line: 1140, column: 42, scope: !2682)
!2695 = !DILocation(line: 1141, column: 9, scope: !2682)
!2696 = !DILocation(line: 1141, column: 16, scope: !2682)
!2697 = !DILocation(line: 1141, column: 29, scope: !2682)
!2698 = !DILocation(line: 1141, column: 41, scope: !2682)
!2699 = !DILocation(line: 1141, column: 42, scope: !2682)
!2700 = !DILocation(line: 1142, column: 9, scope: !2682)
!2701 = !DILocation(line: 1142, column: 16, scope: !2682)
!2702 = !DILocation(line: 1142, column: 29, scope: !2682)
!2703 = !DILocation(line: 1142, column: 43, scope: !2682)
!2704 = !DILocation(line: 1142, column: 44, scope: !2682)
!2705 = !DILocation(line: 1143, column: 9, scope: !2682)
!2706 = !DILocation(line: 1143, column: 16, scope: !2682)
!2707 = !DILocation(line: 1143, column: 29, scope: !2682)
!2708 = !DILocation(line: 1143, column: 43, scope: !2682)
!2709 = !DILocation(line: 1143, column: 44, scope: !2682)
!2710 = !DILocation(line: 1144, column: 9, scope: !2682)
!2711 = !DILocation(line: 1144, column: 16, scope: !2682)
!2712 = !DILocation(line: 1144, column: 29, scope: !2682)
!2713 = !DILocation(line: 1144, column: 43, scope: !2682)
!2714 = !DILocation(line: 1144, column: 44, scope: !2682)
!2715 = !DILocation(line: 1145, column: 9, scope: !2682)
!2716 = !DILocation(line: 1145, column: 16, scope: !2682)
!2717 = !DILocation(line: 1145, column: 29, scope: !2682)
!2718 = !DILocation(line: 1145, column: 42, scope: !2682)
!2719 = !DILocation(line: 1145, column: 43, scope: !2682)
!2720 = !DILocation(line: 1146, column: 9, scope: !2682)
!2721 = !DILocation(line: 1146, column: 16, scope: !2682)
!2722 = !DILocation(line: 1146, column: 29, scope: !2682)
!2723 = !DILocation(line: 1146, column: 42, scope: !2682)
!2724 = !DILocation(line: 1146, column: 43, scope: !2682)
!2725 = !DILocation(line: 1147, column: 9, scope: !2682)
!2726 = !DILocation(line: 1147, column: 16, scope: !2682)
!2727 = !DILocation(line: 1147, column: 29, scope: !2682)
!2728 = !DILocation(line: 1147, column: 42, scope: !2682)
!2729 = !DILocation(line: 1147, column: 43, scope: !2682)
!2730 = !DILocation(line: 1148, column: 9, scope: !2682)
!2731 = !DILocation(line: 1148, column: 16, scope: !2682)
!2732 = !DILocation(line: 1148, column: 29, scope: !2682)
!2733 = !DILocation(line: 1148, column: 41, scope: !2682)
!2734 = !DILocation(line: 1148, column: 42, scope: !2682)
!2735 = !DILocation(line: 1149, column: 9, scope: !2682)
!2736 = !DILocation(line: 1149, column: 16, scope: !2682)
!2737 = !DILocation(line: 1149, column: 29, scope: !2682)
!2738 = !DILocation(line: 1149, column: 41, scope: !2682)
!2739 = !DILocation(line: 1149, column: 42, scope: !2682)
!2740 = !DILocation(line: 1150, column: 9, scope: !2682)
!2741 = !DILocation(line: 1150, column: 16, scope: !2682)
!2742 = !DILocation(line: 1150, column: 29, scope: !2682)
!2743 = !DILocation(line: 1150, column: 41, scope: !2682)
!2744 = !DILocation(line: 1150, column: 42, scope: !2682)
!2745 = !DILocation(line: 1152, column: 30, scope: !2617)
!2746 = !DILocation(line: 1152, column: 37, scope: !2617)
!2747 = !DILocation(line: 1152, column: 44, scope: !2617)
!2748 = !DILocation(line: 1152, column: 10, scope: !2617)
!2749 = !DILocation(line: 1152, column: 9, scope: !2617)
!2750 = !DILocation(line: 1153, column: 15, scope: !2617)
!2751 = !DILocation(line: 1153, column: 3, scope: !2617)
!2752 = !DILocation(line: 1153, column: 10, scope: !2617)
!2753 = !DILocation(line: 1153, column: 14, scope: !2617)
!2754 = !DILocation(line: 1154, column: 10, scope: !2617)
!2755 = !DILocation(line: 1154, column: 3, scope: !2617)
!2756 = !DILocation(line: 1155, column: 1, scope: !2617)
!2757 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !2758, file: !2758, line: 92, type: !2759, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!2758 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2759 = !DISubroutineType(types: !2760)
!2760 = !{null, !2761, !2763, !633, !2765}
!2761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2762, size: 64)
!2762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !116)
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!2766 = !DILocalVariable(name: "image", arg: 1, scope: !2757, file: !2758, line: 92, type: !2761)
!2767 = !DILocation(line: 92, column: 54, scope: !2757)
!2768 = !DILocalVariable(name: "color", arg: 2, scope: !2757, file: !2758, line: 93, type: !2763)
!2769 = !DILocation(line: 93, column: 22, scope: !2757)
!2770 = !DILocalVariable(name: "index", arg: 3, scope: !2757, file: !2758, line: 93, type: !633)
!2771 = !DILocation(line: 93, column: 47, scope: !2757)
!2772 = !DILocalVariable(name: "pixel", arg: 4, scope: !2757, file: !2758, line: 93, type: !2765)
!2773 = !DILocation(line: 93, column: 72, scope: !2757)
!2774 = !DILocation(line: 95, column: 31, scope: !2757)
!2775 = !DILocation(line: 95, column: 14, scope: !2757)
!2776 = !DILocation(line: 95, column: 3, scope: !2757)
!2777 = !DILocation(line: 95, column: 10, scope: !2757)
!2778 = !DILocation(line: 95, column: 13, scope: !2757)
!2779 = !DILocation(line: 96, column: 33, scope: !2757)
!2780 = !DILocation(line: 96, column: 16, scope: !2757)
!2781 = !DILocation(line: 96, column: 3, scope: !2757)
!2782 = !DILocation(line: 96, column: 10, scope: !2757)
!2783 = !DILocation(line: 96, column: 15, scope: !2757)
!2784 = !DILocation(line: 97, column: 32, scope: !2757)
!2785 = !DILocation(line: 97, column: 15, scope: !2757)
!2786 = !DILocation(line: 97, column: 3, scope: !2757)
!2787 = !DILocation(line: 97, column: 10, scope: !2757)
!2788 = !DILocation(line: 97, column: 14, scope: !2757)
!2789 = !DILocation(line: 98, column: 35, scope: !2757)
!2790 = !DILocation(line: 98, column: 18, scope: !2757)
!2791 = !DILocation(line: 98, column: 3, scope: !2757)
!2792 = !DILocation(line: 98, column: 10, scope: !2757)
!2793 = !DILocation(line: 98, column: 17, scope: !2757)
!2794 = !DILocation(line: 99, column: 8, scope: !2795)
!2795 = distinct !DILexicalBlock(scope: !2757, file: !2758, line: 99, column: 7)
!2796 = !DILocation(line: 99, column: 15, scope: !2795)
!2797 = !DILocation(line: 99, column: 26, scope: !2795)
!2798 = !DILocation(line: 99, column: 45, scope: !2795)
!2799 = !DILocation(line: 100, column: 8, scope: !2795)
!2800 = !DILocation(line: 100, column: 14, scope: !2795)
!2801 = !DILocation(line: 99, column: 7, scope: !2757)
!2802 = !DILocation(line: 101, column: 35, scope: !2795)
!2803 = !DILocation(line: 101, column: 18, scope: !2795)
!2804 = !DILocation(line: 101, column: 5, scope: !2795)
!2805 = !DILocation(line: 101, column: 12, scope: !2795)
!2806 = !DILocation(line: 101, column: 17, scope: !2795)
!2807 = !DILocation(line: 102, column: 1, scope: !2757)
!2808 = distinct !DISubprogram(name: "ConvertRGBToCMYK", scope: !2809, file: !2809, line: 30, type: !2810, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!2809 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2810 = !DISubroutineType(types: !2811)
!2811 = !{null, !2765}
!2812 = !DILocalVariable(name: "pixel", arg: 1, scope: !2808, file: !2809, line: 30, type: !2765)
!2813 = !DILocation(line: 30, column: 56, scope: !2808)
!2814 = !DILocalVariable(name: "black", scope: !2808, file: !2809, line: 33, type: !622)
!2815 = !DILocation(line: 33, column: 5, scope: !2808)
!2816 = !DILocalVariable(name: "blue", scope: !2808, file: !2809, line: 34, type: !622)
!2817 = !DILocation(line: 34, column: 5, scope: !2808)
!2818 = !DILocalVariable(name: "cyan", scope: !2808, file: !2809, line: 35, type: !622)
!2819 = !DILocation(line: 35, column: 5, scope: !2808)
!2820 = !DILocalVariable(name: "green", scope: !2808, file: !2809, line: 36, type: !622)
!2821 = !DILocation(line: 36, column: 5, scope: !2808)
!2822 = !DILocalVariable(name: "magenta", scope: !2808, file: !2809, line: 37, type: !622)
!2823 = !DILocation(line: 37, column: 5, scope: !2808)
!2824 = !DILocalVariable(name: "red", scope: !2808, file: !2809, line: 38, type: !622)
!2825 = !DILocation(line: 38, column: 5, scope: !2808)
!2826 = !DILocalVariable(name: "yellow", scope: !2808, file: !2809, line: 39, type: !622)
!2827 = !DILocation(line: 39, column: 5, scope: !2808)
!2828 = !DILocation(line: 41, column: 7, scope: !2829)
!2829 = distinct !DILexicalBlock(scope: !2808, file: !2809, line: 41, column: 7)
!2830 = !DILocation(line: 41, column: 14, scope: !2829)
!2831 = !DILocation(line: 41, column: 25, scope: !2829)
!2832 = !DILocation(line: 41, column: 7, scope: !2808)
!2833 = !DILocation(line: 43, column: 24, scope: !2834)
!2834 = distinct !DILexicalBlock(scope: !2829, file: !2809, line: 42, column: 5)
!2835 = !DILocation(line: 43, column: 31, scope: !2834)
!2836 = !DILocation(line: 43, column: 23, scope: !2834)
!2837 = !DILocation(line: 43, column: 11, scope: !2834)
!2838 = !DILocation(line: 43, column: 10, scope: !2834)
!2839 = !DILocation(line: 44, column: 26, scope: !2834)
!2840 = !DILocation(line: 44, column: 33, scope: !2834)
!2841 = !DILocation(line: 44, column: 25, scope: !2834)
!2842 = !DILocation(line: 44, column: 13, scope: !2834)
!2843 = !DILocation(line: 44, column: 12, scope: !2834)
!2844 = !DILocation(line: 45, column: 25, scope: !2834)
!2845 = !DILocation(line: 45, column: 32, scope: !2834)
!2846 = !DILocation(line: 45, column: 24, scope: !2834)
!2847 = !DILocation(line: 45, column: 12, scope: !2834)
!2848 = !DILocation(line: 45, column: 11, scope: !2834)
!2849 = !DILocation(line: 46, column: 5, scope: !2834)
!2850 = !DILocation(line: 49, column: 28, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2829, file: !2809, line: 48, column: 5)
!2852 = !DILocation(line: 49, column: 35, scope: !2851)
!2853 = !DILocation(line: 49, column: 11, scope: !2851)
!2854 = !DILocation(line: 49, column: 10, scope: !2851)
!2855 = !DILocation(line: 50, column: 30, scope: !2851)
!2856 = !DILocation(line: 50, column: 37, scope: !2851)
!2857 = !DILocation(line: 50, column: 13, scope: !2851)
!2858 = !DILocation(line: 50, column: 12, scope: !2851)
!2859 = !DILocation(line: 51, column: 29, scope: !2851)
!2860 = !DILocation(line: 51, column: 36, scope: !2851)
!2861 = !DILocation(line: 51, column: 12, scope: !2851)
!2862 = !DILocation(line: 51, column: 11, scope: !2851)
!2863 = !DILocation(line: 53, column: 13, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2808, file: !2809, line: 53, column: 7)
!2865 = !DILocation(line: 53, column: 8, scope: !2864)
!2866 = !DILocation(line: 53, column: 18, scope: !2864)
!2867 = !DILocation(line: 53, column: 35, scope: !2864)
!2868 = !DILocation(line: 53, column: 44, scope: !2864)
!2869 = !DILocation(line: 53, column: 39, scope: !2864)
!2870 = !DILocation(line: 53, column: 51, scope: !2864)
!2871 = !DILocation(line: 53, column: 68, scope: !2864)
!2872 = !DILocation(line: 54, column: 13, scope: !2864)
!2873 = !DILocation(line: 54, column: 8, scope: !2864)
!2874 = !DILocation(line: 54, column: 19, scope: !2864)
!2875 = !DILocation(line: 53, column: 7, scope: !2808)
!2876 = !DILocation(line: 56, column: 7, scope: !2877)
!2877 = distinct !DILexicalBlock(scope: !2864, file: !2809, line: 55, column: 5)
!2878 = !DILocation(line: 56, column: 14, scope: !2877)
!2879 = !DILocation(line: 56, column: 19, scope: !2877)
!2880 = !DILocation(line: 57, column: 7, scope: !2877)
!2881 = !DILocation(line: 59, column: 30, scope: !2808)
!2882 = !DILocation(line: 59, column: 29, scope: !2808)
!2883 = !DILocation(line: 59, column: 8, scope: !2808)
!2884 = !DILocation(line: 59, column: 7, scope: !2808)
!2885 = !DILocation(line: 60, column: 33, scope: !2808)
!2886 = !DILocation(line: 60, column: 32, scope: !2808)
!2887 = !DILocation(line: 60, column: 11, scope: !2808)
!2888 = !DILocation(line: 60, column: 10, scope: !2808)
!2889 = !DILocation(line: 61, column: 32, scope: !2808)
!2890 = !DILocation(line: 61, column: 31, scope: !2808)
!2891 = !DILocation(line: 61, column: 10, scope: !2808)
!2892 = !DILocation(line: 61, column: 9, scope: !2808)
!2893 = !DILocation(line: 62, column: 9, scope: !2808)
!2894 = !DILocation(line: 62, column: 8, scope: !2808)
!2895 = !DILocation(line: 63, column: 7, scope: !2896)
!2896 = distinct !DILexicalBlock(scope: !2808, file: !2809, line: 63, column: 7)
!2897 = !DILocation(line: 63, column: 17, scope: !2896)
!2898 = !DILocation(line: 63, column: 15, scope: !2896)
!2899 = !DILocation(line: 63, column: 7, scope: !2808)
!2900 = !DILocation(line: 64, column: 11, scope: !2896)
!2901 = !DILocation(line: 64, column: 10, scope: !2896)
!2902 = !DILocation(line: 64, column: 5, scope: !2896)
!2903 = !DILocation(line: 65, column: 7, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2808, file: !2809, line: 65, column: 7)
!2905 = !DILocation(line: 65, column: 16, scope: !2904)
!2906 = !DILocation(line: 65, column: 14, scope: !2904)
!2907 = !DILocation(line: 65, column: 7, scope: !2808)
!2908 = !DILocation(line: 66, column: 11, scope: !2904)
!2909 = !DILocation(line: 66, column: 10, scope: !2904)
!2910 = !DILocation(line: 66, column: 5, scope: !2904)
!2911 = !DILocation(line: 67, column: 27, scope: !2808)
!2912 = !DILocation(line: 67, column: 32, scope: !2808)
!2913 = !DILocation(line: 67, column: 31, scope: !2808)
!2914 = !DILocation(line: 67, column: 26, scope: !2808)
!2915 = !DILocation(line: 67, column: 44, scope: !2808)
!2916 = !DILocation(line: 67, column: 43, scope: !2808)
!2917 = !DILocation(line: 67, column: 38, scope: !2808)
!2918 = !DILocation(line: 67, column: 8, scope: !2808)
!2919 = !DILocation(line: 67, column: 7, scope: !2808)
!2920 = !DILocation(line: 68, column: 30, scope: !2808)
!2921 = !DILocation(line: 68, column: 38, scope: !2808)
!2922 = !DILocation(line: 68, column: 37, scope: !2808)
!2923 = !DILocation(line: 68, column: 29, scope: !2808)
!2924 = !DILocation(line: 68, column: 50, scope: !2808)
!2925 = !DILocation(line: 68, column: 49, scope: !2808)
!2926 = !DILocation(line: 68, column: 44, scope: !2808)
!2927 = !DILocation(line: 68, column: 11, scope: !2808)
!2928 = !DILocation(line: 68, column: 10, scope: !2808)
!2929 = !DILocation(line: 69, column: 29, scope: !2808)
!2930 = !DILocation(line: 69, column: 36, scope: !2808)
!2931 = !DILocation(line: 69, column: 35, scope: !2808)
!2932 = !DILocation(line: 69, column: 28, scope: !2808)
!2933 = !DILocation(line: 69, column: 48, scope: !2808)
!2934 = !DILocation(line: 69, column: 47, scope: !2808)
!2935 = !DILocation(line: 69, column: 42, scope: !2808)
!2936 = !DILocation(line: 69, column: 10, scope: !2808)
!2937 = !DILocation(line: 69, column: 9, scope: !2808)
!2938 = !DILocation(line: 70, column: 3, scope: !2808)
!2939 = !DILocation(line: 70, column: 10, scope: !2808)
!2940 = !DILocation(line: 70, column: 20, scope: !2808)
!2941 = !DILocation(line: 71, column: 27, scope: !2808)
!2942 = !DILocation(line: 71, column: 26, scope: !2808)
!2943 = !DILocation(line: 71, column: 3, scope: !2808)
!2944 = !DILocation(line: 71, column: 10, scope: !2808)
!2945 = !DILocation(line: 71, column: 13, scope: !2808)
!2946 = !DILocation(line: 72, column: 29, scope: !2808)
!2947 = !DILocation(line: 72, column: 28, scope: !2808)
!2948 = !DILocation(line: 72, column: 3, scope: !2808)
!2949 = !DILocation(line: 72, column: 10, scope: !2808)
!2950 = !DILocation(line: 72, column: 15, scope: !2808)
!2951 = !DILocation(line: 73, column: 28, scope: !2808)
!2952 = !DILocation(line: 73, column: 27, scope: !2808)
!2953 = !DILocation(line: 73, column: 3, scope: !2808)
!2954 = !DILocation(line: 73, column: 10, scope: !2808)
!2955 = !DILocation(line: 73, column: 14, scope: !2808)
!2956 = !DILocation(line: 74, column: 29, scope: !2808)
!2957 = !DILocation(line: 74, column: 28, scope: !2808)
!2958 = !DILocation(line: 74, column: 3, scope: !2808)
!2959 = !DILocation(line: 74, column: 10, scope: !2808)
!2960 = !DILocation(line: 74, column: 15, scope: !2808)
!2961 = !DILocation(line: 75, column: 1, scope: !2808)
!2962 = distinct !DISubprogram(name: "SetPixelPacket", scope: !2758, file: !2758, line: 117, type: !2963, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!2963 = !DISubroutineType(types: !2964)
!2964 = !{null, !2761, !2965, !115, !636}
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !696)
!2967 = !DILocalVariable(name: "image", arg: 1, scope: !2962, file: !2758, line: 117, type: !2761)
!2968 = !DILocation(line: 117, column: 48, scope: !2962)
!2969 = !DILocalVariable(name: "pixel", arg: 2, scope: !2962, file: !2758, line: 118, type: !2965)
!2970 = !DILocation(line: 118, column: 28, scope: !2962)
!2971 = !DILocalVariable(name: "color", arg: 3, scope: !2962, file: !2758, line: 118, type: !115)
!2972 = !DILocation(line: 118, column: 47, scope: !2962)
!2973 = !DILocalVariable(name: "index", arg: 4, scope: !2962, file: !2758, line: 118, type: !636)
!2974 = !DILocation(line: 118, column: 66, scope: !2962)
!2975 = !DILocation(line: 120, column: 3, scope: !2962)
!2976 = !DILocation(line: 121, column: 3, scope: !2962)
!2977 = !DILocation(line: 122, column: 3, scope: !2962)
!2978 = !DILocation(line: 123, column: 3, scope: !2962)
!2979 = !DILocation(line: 124, column: 8, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2962, file: !2758, line: 124, column: 7)
!2981 = !DILocation(line: 124, column: 15, scope: !2980)
!2982 = !DILocation(line: 124, column: 26, scope: !2980)
!2983 = !DILocation(line: 124, column: 45, scope: !2980)
!2984 = !DILocation(line: 125, column: 8, scope: !2980)
!2985 = !DILocation(line: 125, column: 15, scope: !2980)
!2986 = !DILocation(line: 125, column: 29, scope: !2980)
!2987 = !DILocation(line: 124, column: 7, scope: !2962)
!2988 = !DILocation(line: 126, column: 5, scope: !2989)
!2989 = distinct !DILexicalBlock(scope: !2990, file: !2758, line: 126, column: 5)
!2990 = distinct !DILexicalBlock(scope: !2980, file: !2758, line: 126, column: 5)
!2991 = !DILocation(line: 126, column: 5, scope: !2990)
!2992 = !DILocation(line: 127, column: 1, scope: !2962)
!2993 = distinct !DISubprogram(name: "ClampToQuantum", scope: !242, file: !242, line: 87, type: !2994, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!121, !2996}
!2996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !622)
!2997 = !DILocalVariable(name: "value", arg: 1, scope: !2993, file: !242, line: 87, type: !2996)
!2998 = !DILocation(line: 87, column: 59, scope: !2993)
!2999 = !DILocation(line: 92, column: 7, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2993, file: !242, line: 92, column: 7)
!3001 = !DILocation(line: 92, column: 13, scope: !3000)
!3002 = !DILocation(line: 92, column: 7, scope: !2993)
!3003 = !DILocation(line: 93, column: 5, scope: !3000)
!3004 = !DILocation(line: 94, column: 7, scope: !3005)
!3005 = distinct !DILexicalBlock(scope: !2993, file: !242, line: 94, column: 7)
!3006 = !DILocation(line: 94, column: 13, scope: !3005)
!3007 = !DILocation(line: 94, column: 7, scope: !2993)
!3008 = !DILocation(line: 95, column: 5, scope: !3005)
!3009 = !DILocation(line: 96, column: 21, scope: !2993)
!3010 = !DILocation(line: 96, column: 26, scope: !2993)
!3011 = !DILocation(line: 96, column: 10, scope: !2993)
!3012 = !DILocation(line: 96, column: 3, scope: !2993)
!3013 = !DILocation(line: 98, column: 1, scope: !2993)
!3014 = distinct !DISubprogram(name: "ConvertRGBToCMY", scope: !3, file: !3, line: 108, type: !3015, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{null, !3017, !3017, !3017, !3018, !3018, !3018}
!3017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !121)
!3018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!3019 = !DILocalVariable(name: "red", arg: 1, scope: !3014, file: !3, line: 108, type: !3017)
!3020 = !DILocation(line: 108, column: 50, scope: !3014)
!3021 = !DILocalVariable(name: "green", arg: 2, scope: !3014, file: !3, line: 108, type: !3017)
!3022 = !DILocation(line: 108, column: 68, scope: !3014)
!3023 = !DILocalVariable(name: "blue", arg: 3, scope: !3014, file: !3, line: 109, type: !3017)
!3024 = !DILocation(line: 109, column: 17, scope: !3014)
!3025 = !DILocalVariable(name: "cyan", arg: 4, scope: !3014, file: !3, line: 109, type: !3018)
!3026 = !DILocation(line: 109, column: 30, scope: !3014)
!3027 = !DILocalVariable(name: "magenta", arg: 5, scope: !3014, file: !3, line: 109, type: !3018)
!3028 = !DILocation(line: 109, column: 43, scope: !3014)
!3029 = !DILocalVariable(name: "yellow", arg: 6, scope: !3014, file: !3, line: 109, type: !3018)
!3030 = !DILocation(line: 109, column: 59, scope: !3014)
!3031 = !DILocation(line: 111, column: 36, scope: !3014)
!3032 = !DILocation(line: 111, column: 35, scope: !3014)
!3033 = !DILocation(line: 111, column: 22, scope: !3014)
!3034 = !DILocation(line: 111, column: 21, scope: !3014)
!3035 = !DILocation(line: 111, column: 4, scope: !3014)
!3036 = !DILocation(line: 111, column: 8, scope: !3014)
!3037 = !DILocation(line: 112, column: 39, scope: !3014)
!3038 = !DILocation(line: 112, column: 38, scope: !3014)
!3039 = !DILocation(line: 112, column: 25, scope: !3014)
!3040 = !DILocation(line: 112, column: 24, scope: !3014)
!3041 = !DILocation(line: 112, column: 4, scope: !3014)
!3042 = !DILocation(line: 112, column: 11, scope: !3014)
!3043 = !DILocation(line: 113, column: 38, scope: !3014)
!3044 = !DILocation(line: 113, column: 37, scope: !3014)
!3045 = !DILocation(line: 113, column: 24, scope: !3014)
!3046 = !DILocation(line: 113, column: 23, scope: !3014)
!3047 = !DILocation(line: 113, column: 4, scope: !3014)
!3048 = !DILocation(line: 113, column: 10, scope: !3014)
!3049 = !DILocation(line: 114, column: 1, scope: !3014)
!3050 = distinct !DISubprogram(name: "ConvertRGBToLab", scope: !3, file: !3, line: 116, type: !3015, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3051 = !DILocalVariable(name: "red", arg: 1, scope: !3050, file: !3, line: 116, type: !3017)
!3052 = !DILocation(line: 116, column: 43, scope: !3050)
!3053 = !DILocalVariable(name: "green", arg: 2, scope: !3050, file: !3, line: 116, type: !3017)
!3054 = !DILocation(line: 116, column: 61, scope: !3050)
!3055 = !DILocalVariable(name: "blue", arg: 3, scope: !3050, file: !3, line: 117, type: !3017)
!3056 = !DILocation(line: 117, column: 17, scope: !3050)
!3057 = !DILocalVariable(name: "L", arg: 4, scope: !3050, file: !3, line: 117, type: !3018)
!3058 = !DILocation(line: 117, column: 30, scope: !3050)
!3059 = !DILocalVariable(name: "a", arg: 5, scope: !3050, file: !3, line: 117, type: !3018)
!3060 = !DILocation(line: 117, column: 40, scope: !3050)
!3061 = !DILocalVariable(name: "b", arg: 6, scope: !3050, file: !3, line: 117, type: !3018)
!3062 = !DILocation(line: 117, column: 50, scope: !3050)
!3063 = !DILocalVariable(name: "X", scope: !3050, file: !3, line: 120, type: !130)
!3064 = !DILocation(line: 120, column: 5, scope: !3050)
!3065 = !DILocalVariable(name: "Y", scope: !3050, file: !3, line: 121, type: !130)
!3066 = !DILocation(line: 121, column: 5, scope: !3050)
!3067 = !DILocalVariable(name: "Z", scope: !3050, file: !3, line: 122, type: !130)
!3068 = !DILocation(line: 122, column: 5, scope: !3050)
!3069 = !DILocation(line: 124, column: 19, scope: !3050)
!3070 = !DILocation(line: 124, column: 23, scope: !3050)
!3071 = !DILocation(line: 124, column: 29, scope: !3050)
!3072 = !DILocation(line: 124, column: 3, scope: !3050)
!3073 = !DILocation(line: 125, column: 19, scope: !3050)
!3074 = !DILocation(line: 125, column: 21, scope: !3050)
!3075 = !DILocation(line: 125, column: 23, scope: !3050)
!3076 = !DILocation(line: 125, column: 25, scope: !3050)
!3077 = !DILocation(line: 125, column: 27, scope: !3050)
!3078 = !DILocation(line: 125, column: 29, scope: !3050)
!3079 = !DILocation(line: 125, column: 3, scope: !3050)
!3080 = !DILocation(line: 126, column: 1, scope: !3050)
!3081 = distinct !DISubprogram(name: "ConvertRGBToLMS", scope: !3, file: !3, line: 136, type: !3015, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3082 = !DILocalVariable(name: "red", arg: 1, scope: !3081, file: !3, line: 136, type: !3017)
!3083 = !DILocation(line: 136, column: 43, scope: !3081)
!3084 = !DILocalVariable(name: "green", arg: 2, scope: !3081, file: !3, line: 136, type: !3017)
!3085 = !DILocation(line: 136, column: 61, scope: !3081)
!3086 = !DILocalVariable(name: "blue", arg: 3, scope: !3081, file: !3, line: 137, type: !3017)
!3087 = !DILocation(line: 137, column: 17, scope: !3081)
!3088 = !DILocalVariable(name: "L", arg: 4, scope: !3081, file: !3, line: 137, type: !3018)
!3089 = !DILocation(line: 137, column: 30, scope: !3081)
!3090 = !DILocalVariable(name: "M", arg: 5, scope: !3081, file: !3, line: 137, type: !3018)
!3091 = !DILocation(line: 137, column: 40, scope: !3081)
!3092 = !DILocalVariable(name: "S", arg: 6, scope: !3081, file: !3, line: 137, type: !3018)
!3093 = !DILocation(line: 137, column: 50, scope: !3081)
!3094 = !DILocalVariable(name: "X", scope: !3081, file: !3, line: 140, type: !130)
!3095 = !DILocation(line: 140, column: 5, scope: !3081)
!3096 = !DILocalVariable(name: "Y", scope: !3081, file: !3, line: 141, type: !130)
!3097 = !DILocation(line: 141, column: 5, scope: !3081)
!3098 = !DILocalVariable(name: "Z", scope: !3081, file: !3, line: 142, type: !130)
!3099 = !DILocation(line: 142, column: 5, scope: !3081)
!3100 = !DILocation(line: 144, column: 19, scope: !3081)
!3101 = !DILocation(line: 144, column: 23, scope: !3081)
!3102 = !DILocation(line: 144, column: 29, scope: !3081)
!3103 = !DILocation(line: 144, column: 3, scope: !3081)
!3104 = !DILocation(line: 145, column: 19, scope: !3081)
!3105 = !DILocation(line: 145, column: 21, scope: !3081)
!3106 = !DILocation(line: 145, column: 23, scope: !3081)
!3107 = !DILocation(line: 145, column: 25, scope: !3081)
!3108 = !DILocation(line: 145, column: 27, scope: !3081)
!3109 = !DILocation(line: 145, column: 29, scope: !3081)
!3110 = !DILocation(line: 145, column: 3, scope: !3081)
!3111 = !DILocation(line: 146, column: 1, scope: !3081)
!3112 = distinct !DISubprogram(name: "ConvertRGBToLuv", scope: !3, file: !3, line: 148, type: !3015, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3113 = !DILocalVariable(name: "red", arg: 1, scope: !3112, file: !3, line: 148, type: !3017)
!3114 = !DILocation(line: 148, column: 43, scope: !3112)
!3115 = !DILocalVariable(name: "green", arg: 2, scope: !3112, file: !3, line: 148, type: !3017)
!3116 = !DILocation(line: 148, column: 61, scope: !3112)
!3117 = !DILocalVariable(name: "blue", arg: 3, scope: !3112, file: !3, line: 149, type: !3017)
!3118 = !DILocation(line: 149, column: 17, scope: !3112)
!3119 = !DILocalVariable(name: "L", arg: 4, scope: !3112, file: !3, line: 149, type: !3018)
!3120 = !DILocation(line: 149, column: 30, scope: !3112)
!3121 = !DILocalVariable(name: "u", arg: 5, scope: !3112, file: !3, line: 149, type: !3018)
!3122 = !DILocation(line: 149, column: 40, scope: !3112)
!3123 = !DILocalVariable(name: "v", arg: 6, scope: !3112, file: !3, line: 149, type: !3018)
!3124 = !DILocation(line: 149, column: 50, scope: !3112)
!3125 = !DILocalVariable(name: "X", scope: !3112, file: !3, line: 152, type: !130)
!3126 = !DILocation(line: 152, column: 5, scope: !3112)
!3127 = !DILocalVariable(name: "Y", scope: !3112, file: !3, line: 153, type: !130)
!3128 = !DILocation(line: 153, column: 5, scope: !3112)
!3129 = !DILocalVariable(name: "Z", scope: !3112, file: !3, line: 154, type: !130)
!3130 = !DILocation(line: 154, column: 5, scope: !3112)
!3131 = !DILocation(line: 156, column: 19, scope: !3112)
!3132 = !DILocation(line: 156, column: 23, scope: !3112)
!3133 = !DILocation(line: 156, column: 29, scope: !3112)
!3134 = !DILocation(line: 156, column: 3, scope: !3112)
!3135 = !DILocation(line: 157, column: 19, scope: !3112)
!3136 = !DILocation(line: 157, column: 21, scope: !3112)
!3137 = !DILocation(line: 157, column: 23, scope: !3112)
!3138 = !DILocation(line: 157, column: 25, scope: !3112)
!3139 = !DILocation(line: 157, column: 27, scope: !3112)
!3140 = !DILocation(line: 157, column: 29, scope: !3112)
!3141 = !DILocation(line: 157, column: 3, scope: !3112)
!3142 = !DILocation(line: 158, column: 1, scope: !3112)
!3143 = distinct !DISubprogram(name: "ConvertRGBToXYZ", scope: !3144, file: !3144, line: 85, type: !3015, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3144 = !DIFile(filename: "./magick/gem-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3145 = !DILocalVariable(name: "red", arg: 1, scope: !3143, file: !3144, line: 85, type: !3017)
!3146 = !DILocation(line: 85, column: 50, scope: !3143)
!3147 = !DILocalVariable(name: "green", arg: 2, scope: !3143, file: !3144, line: 85, type: !3017)
!3148 = !DILocation(line: 85, column: 68, scope: !3143)
!3149 = !DILocalVariable(name: "blue", arg: 3, scope: !3143, file: !3144, line: 86, type: !3017)
!3150 = !DILocation(line: 86, column: 17, scope: !3143)
!3151 = !DILocalVariable(name: "X", arg: 4, scope: !3143, file: !3144, line: 86, type: !3018)
!3152 = !DILocation(line: 86, column: 30, scope: !3143)
!3153 = !DILocalVariable(name: "Y", arg: 5, scope: !3143, file: !3144, line: 86, type: !3018)
!3154 = !DILocation(line: 86, column: 40, scope: !3143)
!3155 = !DILocalVariable(name: "Z", arg: 6, scope: !3143, file: !3144, line: 86, type: !3018)
!3156 = !DILocation(line: 86, column: 50, scope: !3143)
!3157 = !DILocalVariable(name: "b", scope: !3143, file: !3144, line: 89, type: !130)
!3158 = !DILocation(line: 89, column: 5, scope: !3143)
!3159 = !DILocalVariable(name: "g", scope: !3143, file: !3144, line: 90, type: !130)
!3160 = !DILocation(line: 90, column: 5, scope: !3143)
!3161 = !DILocalVariable(name: "r", scope: !3143, file: !3144, line: 91, type: !130)
!3162 = !DILocation(line: 91, column: 5, scope: !3143)
!3163 = !DILocation(line: 96, column: 52, scope: !3143)
!3164 = !DILocation(line: 96, column: 35, scope: !3143)
!3165 = !DILocation(line: 96, column: 18, scope: !3143)
!3166 = !DILocation(line: 96, column: 17, scope: !3143)
!3167 = !DILocation(line: 96, column: 4, scope: !3143)
!3168 = !DILocation(line: 97, column: 52, scope: !3143)
!3169 = !DILocation(line: 97, column: 35, scope: !3143)
!3170 = !DILocation(line: 97, column: 18, scope: !3143)
!3171 = !DILocation(line: 97, column: 17, scope: !3143)
!3172 = !DILocation(line: 97, column: 4, scope: !3143)
!3173 = !DILocation(line: 98, column: 52, scope: !3143)
!3174 = !DILocation(line: 98, column: 35, scope: !3143)
!3175 = !DILocation(line: 98, column: 18, scope: !3143)
!3176 = !DILocation(line: 98, column: 17, scope: !3143)
!3177 = !DILocation(line: 98, column: 4, scope: !3143)
!3178 = !DILocation(line: 99, column: 29, scope: !3143)
!3179 = !DILocation(line: 99, column: 28, scope: !3143)
!3180 = !DILocation(line: 99, column: 54, scope: !3143)
!3181 = !DILocation(line: 99, column: 53, scope: !3143)
!3182 = !DILocation(line: 99, column: 30, scope: !3143)
!3183 = !DILocation(line: 99, column: 79, scope: !3143)
!3184 = !DILocation(line: 99, column: 78, scope: !3143)
!3185 = !DILocation(line: 99, column: 55, scope: !3143)
!3186 = !DILocation(line: 99, column: 4, scope: !3143)
!3187 = !DILocation(line: 99, column: 5, scope: !3143)
!3188 = !DILocation(line: 100, column: 29, scope: !3143)
!3189 = !DILocation(line: 100, column: 28, scope: !3143)
!3190 = !DILocation(line: 100, column: 54, scope: !3143)
!3191 = !DILocation(line: 100, column: 53, scope: !3143)
!3192 = !DILocation(line: 100, column: 30, scope: !3143)
!3193 = !DILocation(line: 100, column: 79, scope: !3143)
!3194 = !DILocation(line: 100, column: 78, scope: !3143)
!3195 = !DILocation(line: 100, column: 55, scope: !3143)
!3196 = !DILocation(line: 100, column: 4, scope: !3143)
!3197 = !DILocation(line: 100, column: 5, scope: !3143)
!3198 = !DILocation(line: 101, column: 29, scope: !3143)
!3199 = !DILocation(line: 101, column: 28, scope: !3143)
!3200 = !DILocation(line: 101, column: 54, scope: !3143)
!3201 = !DILocation(line: 101, column: 53, scope: !3143)
!3202 = !DILocation(line: 101, column: 30, scope: !3143)
!3203 = !DILocation(line: 101, column: 79, scope: !3143)
!3204 = !DILocation(line: 101, column: 78, scope: !3143)
!3205 = !DILocation(line: 101, column: 55, scope: !3143)
!3206 = !DILocation(line: 101, column: 4, scope: !3143)
!3207 = !DILocation(line: 101, column: 5, scope: !3143)
!3208 = !DILocation(line: 102, column: 1, scope: !3143)
!3209 = distinct !DISubprogram(name: "ConvertRGBToYCbCr", scope: !3, file: !3, line: 168, type: !3015, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3210 = !DILocalVariable(name: "red", arg: 1, scope: !3209, file: !3, line: 168, type: !3017)
!3211 = !DILocation(line: 168, column: 45, scope: !3209)
!3212 = !DILocalVariable(name: "green", arg: 2, scope: !3209, file: !3, line: 168, type: !3017)
!3213 = !DILocation(line: 168, column: 63, scope: !3209)
!3214 = !DILocalVariable(name: "blue", arg: 3, scope: !3209, file: !3, line: 169, type: !3017)
!3215 = !DILocation(line: 169, column: 17, scope: !3209)
!3216 = !DILocalVariable(name: "Y", arg: 4, scope: !3209, file: !3, line: 169, type: !3018)
!3217 = !DILocation(line: 169, column: 30, scope: !3209)
!3218 = !DILocalVariable(name: "Cb", arg: 5, scope: !3209, file: !3, line: 169, type: !3018)
!3219 = !DILocation(line: 169, column: 40, scope: !3209)
!3220 = !DILocalVariable(name: "Cr", arg: 6, scope: !3209, file: !3, line: 169, type: !3018)
!3221 = !DILocation(line: 169, column: 51, scope: !3209)
!3222 = !DILocation(line: 171, column: 21, scope: !3209)
!3223 = !DILocation(line: 171, column: 25, scope: !3209)
!3224 = !DILocation(line: 171, column: 31, scope: !3209)
!3225 = !DILocation(line: 171, column: 36, scope: !3209)
!3226 = !DILocation(line: 171, column: 38, scope: !3209)
!3227 = !DILocation(line: 171, column: 41, scope: !3209)
!3228 = !DILocation(line: 171, column: 3, scope: !3209)
!3229 = !DILocation(line: 172, column: 1, scope: !3209)
!3230 = distinct !DISubprogram(name: "ConvertRGBToYDbDr", scope: !3, file: !3, line: 182, type: !3015, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3231 = !DILocalVariable(name: "red", arg: 1, scope: !3230, file: !3, line: 182, type: !3017)
!3232 = !DILocation(line: 182, column: 45, scope: !3230)
!3233 = !DILocalVariable(name: "green", arg: 2, scope: !3230, file: !3, line: 182, type: !3017)
!3234 = !DILocation(line: 182, column: 63, scope: !3230)
!3235 = !DILocalVariable(name: "blue", arg: 3, scope: !3230, file: !3, line: 183, type: !3017)
!3236 = !DILocation(line: 183, column: 17, scope: !3230)
!3237 = !DILocalVariable(name: "Y", arg: 4, scope: !3230, file: !3, line: 183, type: !3018)
!3238 = !DILocation(line: 183, column: 30, scope: !3230)
!3239 = !DILocalVariable(name: "Db", arg: 5, scope: !3230, file: !3, line: 183, type: !3018)
!3240 = !DILocation(line: 183, column: 40, scope: !3230)
!3241 = !DILocalVariable(name: "Dr", arg: 6, scope: !3230, file: !3, line: 183, type: !3018)
!3242 = !DILocation(line: 183, column: 51, scope: !3230)
!3243 = !DILocation(line: 185, column: 29, scope: !3230)
!3244 = !DILocation(line: 185, column: 28, scope: !3230)
!3245 = !DILocation(line: 185, column: 42, scope: !3230)
!3246 = !DILocation(line: 185, column: 41, scope: !3230)
!3247 = !DILocation(line: 185, column: 32, scope: !3230)
!3248 = !DILocation(line: 185, column: 57, scope: !3230)
!3249 = !DILocation(line: 185, column: 56, scope: !3230)
!3250 = !DILocation(line: 185, column: 47, scope: !3230)
!3251 = !DILocation(line: 185, column: 18, scope: !3230)
!3252 = !DILocation(line: 185, column: 4, scope: !3230)
!3253 = !DILocation(line: 185, column: 5, scope: !3230)
!3254 = !DILocation(line: 186, column: 28, scope: !3230)
!3255 = !DILocation(line: 186, column: 27, scope: !3230)
!3256 = !DILocation(line: 186, column: 38, scope: !3230)
!3257 = !DILocation(line: 186, column: 37, scope: !3230)
!3258 = !DILocation(line: 186, column: 31, scope: !3230)
!3259 = !DILocation(line: 186, column: 50, scope: !3230)
!3260 = !DILocation(line: 186, column: 49, scope: !3230)
!3261 = !DILocation(line: 186, column: 43, scope: !3230)
!3262 = !DILocation(line: 186, column: 19, scope: !3230)
!3263 = !DILocation(line: 186, column: 55, scope: !3230)
!3264 = !DILocation(line: 186, column: 4, scope: !3230)
!3265 = !DILocation(line: 186, column: 6, scope: !3230)
!3266 = !DILocation(line: 187, column: 28, scope: !3230)
!3267 = !DILocation(line: 187, column: 27, scope: !3230)
!3268 = !DILocation(line: 187, column: 38, scope: !3230)
!3269 = !DILocation(line: 187, column: 37, scope: !3230)
!3270 = !DILocation(line: 187, column: 31, scope: !3230)
!3271 = !DILocation(line: 187, column: 50, scope: !3230)
!3272 = !DILocation(line: 187, column: 49, scope: !3230)
!3273 = !DILocation(line: 187, column: 43, scope: !3230)
!3274 = !DILocation(line: 187, column: 19, scope: !3230)
!3275 = !DILocation(line: 187, column: 55, scope: !3230)
!3276 = !DILocation(line: 187, column: 4, scope: !3230)
!3277 = !DILocation(line: 187, column: 6, scope: !3230)
!3278 = !DILocation(line: 188, column: 1, scope: !3230)
!3279 = distinct !DISubprogram(name: "ConvertRGBToYIQ", scope: !3, file: !3, line: 190, type: !3015, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3280 = !DILocalVariable(name: "red", arg: 1, scope: !3279, file: !3, line: 190, type: !3017)
!3281 = !DILocation(line: 190, column: 43, scope: !3279)
!3282 = !DILocalVariable(name: "green", arg: 2, scope: !3279, file: !3, line: 190, type: !3017)
!3283 = !DILocation(line: 190, column: 61, scope: !3279)
!3284 = !DILocalVariable(name: "blue", arg: 3, scope: !3279, file: !3, line: 191, type: !3017)
!3285 = !DILocation(line: 191, column: 17, scope: !3279)
!3286 = !DILocalVariable(name: "Y", arg: 4, scope: !3279, file: !3, line: 191, type: !3018)
!3287 = !DILocation(line: 191, column: 30, scope: !3279)
!3288 = !DILocalVariable(name: "I", arg: 5, scope: !3279, file: !3, line: 191, type: !3018)
!3289 = !DILocation(line: 191, column: 40, scope: !3279)
!3290 = !DILocalVariable(name: "Q", arg: 6, scope: !3279, file: !3, line: 191, type: !3018)
!3291 = !DILocation(line: 191, column: 50, scope: !3279)
!3292 = !DILocation(line: 193, column: 29, scope: !3279)
!3293 = !DILocation(line: 193, column: 28, scope: !3279)
!3294 = !DILocation(line: 193, column: 42, scope: !3279)
!3295 = !DILocation(line: 193, column: 41, scope: !3279)
!3296 = !DILocation(line: 193, column: 32, scope: !3279)
!3297 = !DILocation(line: 193, column: 57, scope: !3279)
!3298 = !DILocation(line: 193, column: 56, scope: !3279)
!3299 = !DILocation(line: 193, column: 47, scope: !3279)
!3300 = !DILocation(line: 193, column: 18, scope: !3279)
!3301 = !DILocation(line: 193, column: 4, scope: !3279)
!3302 = !DILocation(line: 193, column: 5, scope: !3279)
!3303 = !DILocation(line: 194, column: 29, scope: !3279)
!3304 = !DILocation(line: 194, column: 28, scope: !3279)
!3305 = !DILocation(line: 194, column: 42, scope: !3279)
!3306 = !DILocation(line: 194, column: 41, scope: !3279)
!3307 = !DILocation(line: 194, column: 32, scope: !3279)
!3308 = !DILocation(line: 194, column: 57, scope: !3279)
!3309 = !DILocation(line: 194, column: 56, scope: !3279)
!3310 = !DILocation(line: 194, column: 47, scope: !3279)
!3311 = !DILocation(line: 194, column: 18, scope: !3279)
!3312 = !DILocation(line: 194, column: 62, scope: !3279)
!3313 = !DILocation(line: 194, column: 4, scope: !3279)
!3314 = !DILocation(line: 194, column: 5, scope: !3279)
!3315 = !DILocation(line: 195, column: 29, scope: !3279)
!3316 = !DILocation(line: 195, column: 28, scope: !3279)
!3317 = !DILocation(line: 195, column: 42, scope: !3279)
!3318 = !DILocation(line: 195, column: 41, scope: !3279)
!3319 = !DILocation(line: 195, column: 32, scope: !3279)
!3320 = !DILocation(line: 195, column: 57, scope: !3279)
!3321 = !DILocation(line: 195, column: 56, scope: !3279)
!3322 = !DILocation(line: 195, column: 47, scope: !3279)
!3323 = !DILocation(line: 195, column: 18, scope: !3279)
!3324 = !DILocation(line: 195, column: 62, scope: !3279)
!3325 = !DILocation(line: 195, column: 4, scope: !3279)
!3326 = !DILocation(line: 195, column: 5, scope: !3279)
!3327 = !DILocation(line: 196, column: 1, scope: !3279)
!3328 = distinct !DISubprogram(name: "ConvertRGBToYPbPr", scope: !3, file: !3, line: 160, type: !3015, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3329 = !DILocalVariable(name: "red", arg: 1, scope: !3328, file: !3, line: 160, type: !3017)
!3330 = !DILocation(line: 160, column: 45, scope: !3328)
!3331 = !DILocalVariable(name: "green", arg: 2, scope: !3328, file: !3, line: 160, type: !3017)
!3332 = !DILocation(line: 160, column: 63, scope: !3328)
!3333 = !DILocalVariable(name: "blue", arg: 3, scope: !3328, file: !3, line: 161, type: !3017)
!3334 = !DILocation(line: 161, column: 17, scope: !3328)
!3335 = !DILocalVariable(name: "Y", arg: 4, scope: !3328, file: !3, line: 161, type: !3018)
!3336 = !DILocation(line: 161, column: 30, scope: !3328)
!3337 = !DILocalVariable(name: "Pb", arg: 5, scope: !3328, file: !3, line: 161, type: !3018)
!3338 = !DILocation(line: 161, column: 40, scope: !3328)
!3339 = !DILocalVariable(name: "Pr", arg: 6, scope: !3328, file: !3, line: 161, type: !3018)
!3340 = !DILocation(line: 161, column: 51, scope: !3328)
!3341 = !DILocation(line: 163, column: 29, scope: !3328)
!3342 = !DILocation(line: 163, column: 28, scope: !3328)
!3343 = !DILocation(line: 163, column: 42, scope: !3328)
!3344 = !DILocation(line: 163, column: 41, scope: !3328)
!3345 = !DILocation(line: 163, column: 32, scope: !3328)
!3346 = !DILocation(line: 163, column: 57, scope: !3328)
!3347 = !DILocation(line: 163, column: 56, scope: !3328)
!3348 = !DILocation(line: 163, column: 47, scope: !3328)
!3349 = !DILocation(line: 163, column: 18, scope: !3328)
!3350 = !DILocation(line: 163, column: 4, scope: !3328)
!3351 = !DILocation(line: 163, column: 5, scope: !3328)
!3352 = !DILocation(line: 164, column: 34, scope: !3328)
!3353 = !DILocation(line: 164, column: 33, scope: !3328)
!3354 = !DILocation(line: 164, column: 47, scope: !3328)
!3355 = !DILocation(line: 164, column: 46, scope: !3328)
!3356 = !DILocation(line: 164, column: 37, scope: !3328)
!3357 = !DILocation(line: 164, column: 57, scope: !3328)
!3358 = !DILocation(line: 164, column: 56, scope: !3328)
!3359 = !DILocation(line: 164, column: 52, scope: !3328)
!3360 = !DILocation(line: 164, column: 19, scope: !3328)
!3361 = !DILocation(line: 164, column: 62, scope: !3328)
!3362 = !DILocation(line: 164, column: 4, scope: !3328)
!3363 = !DILocation(line: 164, column: 6, scope: !3328)
!3364 = !DILocation(line: 165, column: 25, scope: !3328)
!3365 = !DILocation(line: 165, column: 24, scope: !3328)
!3366 = !DILocation(line: 165, column: 38, scope: !3328)
!3367 = !DILocation(line: 165, column: 37, scope: !3328)
!3368 = !DILocation(line: 165, column: 28, scope: !3328)
!3369 = !DILocation(line: 165, column: 53, scope: !3328)
!3370 = !DILocation(line: 165, column: 52, scope: !3328)
!3371 = !DILocation(line: 165, column: 43, scope: !3328)
!3372 = !DILocation(line: 165, column: 19, scope: !3328)
!3373 = !DILocation(line: 165, column: 58, scope: !3328)
!3374 = !DILocation(line: 165, column: 4, scope: !3328)
!3375 = !DILocation(line: 165, column: 6, scope: !3328)
!3376 = !DILocation(line: 166, column: 1, scope: !3328)
!3377 = distinct !DISubprogram(name: "ConvertRGBToYUV", scope: !3, file: !3, line: 174, type: !3015, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3378 = !DILocalVariable(name: "red", arg: 1, scope: !3377, file: !3, line: 174, type: !3017)
!3379 = !DILocation(line: 174, column: 43, scope: !3377)
!3380 = !DILocalVariable(name: "green", arg: 2, scope: !3377, file: !3, line: 174, type: !3017)
!3381 = !DILocation(line: 174, column: 61, scope: !3377)
!3382 = !DILocalVariable(name: "blue", arg: 3, scope: !3377, file: !3, line: 175, type: !3017)
!3383 = !DILocation(line: 175, column: 17, scope: !3377)
!3384 = !DILocalVariable(name: "Y", arg: 4, scope: !3377, file: !3, line: 175, type: !3018)
!3385 = !DILocation(line: 175, column: 30, scope: !3377)
!3386 = !DILocalVariable(name: "U", arg: 5, scope: !3377, file: !3, line: 175, type: !3018)
!3387 = !DILocation(line: 175, column: 40, scope: !3377)
!3388 = !DILocalVariable(name: "V", arg: 6, scope: !3377, file: !3, line: 175, type: !3018)
!3389 = !DILocation(line: 175, column: 50, scope: !3377)
!3390 = !DILocation(line: 177, column: 29, scope: !3377)
!3391 = !DILocation(line: 177, column: 28, scope: !3377)
!3392 = !DILocation(line: 177, column: 42, scope: !3377)
!3393 = !DILocation(line: 177, column: 41, scope: !3377)
!3394 = !DILocation(line: 177, column: 32, scope: !3377)
!3395 = !DILocation(line: 177, column: 57, scope: !3377)
!3396 = !DILocation(line: 177, column: 56, scope: !3377)
!3397 = !DILocation(line: 177, column: 47, scope: !3377)
!3398 = !DILocation(line: 177, column: 18, scope: !3377)
!3399 = !DILocation(line: 177, column: 4, scope: !3377)
!3400 = !DILocation(line: 177, column: 5, scope: !3377)
!3401 = !DILocation(line: 178, column: 29, scope: !3377)
!3402 = !DILocation(line: 178, column: 28, scope: !3377)
!3403 = !DILocation(line: 178, column: 39, scope: !3377)
!3404 = !DILocation(line: 178, column: 38, scope: !3377)
!3405 = !DILocation(line: 178, column: 32, scope: !3377)
!3406 = !DILocation(line: 178, column: 51, scope: !3377)
!3407 = !DILocation(line: 178, column: 50, scope: !3377)
!3408 = !DILocation(line: 178, column: 44, scope: !3377)
!3409 = !DILocation(line: 178, column: 18, scope: !3377)
!3410 = !DILocation(line: 178, column: 56, scope: !3377)
!3411 = !DILocation(line: 178, column: 4, scope: !3377)
!3412 = !DILocation(line: 178, column: 5, scope: !3377)
!3413 = !DILocation(line: 179, column: 26, scope: !3377)
!3414 = !DILocation(line: 179, column: 25, scope: !3377)
!3415 = !DILocation(line: 179, column: 36, scope: !3377)
!3416 = !DILocation(line: 179, column: 35, scope: !3377)
!3417 = !DILocation(line: 179, column: 29, scope: !3377)
!3418 = !DILocation(line: 179, column: 48, scope: !3377)
!3419 = !DILocation(line: 179, column: 47, scope: !3377)
!3420 = !DILocation(line: 179, column: 41, scope: !3377)
!3421 = !DILocation(line: 179, column: 18, scope: !3377)
!3422 = !DILocation(line: 179, column: 53, scope: !3377)
!3423 = !DILocation(line: 179, column: 4, scope: !3377)
!3424 = !DILocation(line: 179, column: 5, scope: !3377)
!3425 = !DILocation(line: 180, column: 1, scope: !3377)
!3426 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !2758, file: !2758, line: 78, type: !3427, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3427 = !DISubroutineType(types: !3428)
!3428 = !{!130, !3429}
!3429 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !130)
!3430 = !DILocalVariable(name: "x", arg: 1, scope: !3426, file: !2758, line: 78, type: !3429)
!3431 = !DILocation(line: 78, column: 57, scope: !3426)
!3432 = !DILocalVariable(name: "sign", scope: !3426, file: !2758, line: 81, type: !130)
!3433 = !DILocation(line: 81, column: 5, scope: !3426)
!3434 = !DILocation(line: 86, column: 8, scope: !3426)
!3435 = !DILocation(line: 86, column: 10, scope: !3426)
!3436 = !DILocation(line: 86, column: 7, scope: !3426)
!3437 = !DILocation(line: 87, column: 8, scope: !3438)
!3438 = distinct !DILexicalBlock(scope: !3426, file: !2758, line: 87, column: 7)
!3439 = !DILocation(line: 87, column: 13, scope: !3438)
!3440 = !DILocation(line: 87, column: 12, scope: !3438)
!3441 = !DILocation(line: 87, column: 16, scope: !3438)
!3442 = !DILocation(line: 87, column: 7, scope: !3426)
!3443 = !DILocation(line: 88, column: 16, scope: !3438)
!3444 = !DILocation(line: 88, column: 15, scope: !3438)
!3445 = !DILocation(line: 88, column: 5, scope: !3438)
!3446 = !DILocation(line: 89, column: 10, scope: !3426)
!3447 = !DILocation(line: 89, column: 14, scope: !3426)
!3448 = !DILocation(line: 89, column: 3, scope: !3426)
!3449 = !DILocation(line: 90, column: 1, scope: !3426)
!3450 = distinct !DISubprogram(name: "StringToDouble", scope: !3451, file: !3451, line: 42, type: !3452, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3451 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!130, !3454, !3455}
!3454 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !390)
!3455 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !624)
!3456 = !DILocalVariable(name: "string", arg: 1, scope: !3450, file: !3451, line: 42, type: !3454)
!3457 = !DILocation(line: 42, column: 58, scope: !3450)
!3458 = !DILocalVariable(name: "sentinal", arg: 2, scope: !3450, file: !3451, line: 43, type: !3455)
!3459 = !DILocation(line: 43, column: 19, scope: !3450)
!3460 = !DILocation(line: 45, column: 31, scope: !3450)
!3461 = !DILocation(line: 45, column: 38, scope: !3450)
!3462 = !DILocation(line: 45, column: 10, scope: !3450)
!3463 = !DILocation(line: 45, column: 3, scope: !3450)
!3464 = distinct !DISubprogram(name: "ScaleMapToQuantum", scope: !3465, file: !3465, line: 382, type: !2994, scopeLine: 383, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3465 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3466 = !DILocalVariable(name: "value", arg: 1, scope: !3464, file: !3465, line: 382, type: !2996)
!3467 = !DILocation(line: 382, column: 62, scope: !3464)
!3468 = !DILocation(line: 384, column: 7, scope: !3469)
!3469 = distinct !DILexicalBlock(scope: !3464, file: !3465, line: 384, column: 7)
!3470 = !DILocation(line: 384, column: 13, scope: !3469)
!3471 = !DILocation(line: 384, column: 7, scope: !3464)
!3472 = !DILocation(line: 385, column: 5, scope: !3469)
!3473 = !DILocation(line: 386, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3464, file: !3465, line: 386, column: 7)
!3475 = !DILocation(line: 386, column: 13, scope: !3474)
!3476 = !DILocation(line: 386, column: 7, scope: !3464)
!3477 = !DILocation(line: 387, column: 5, scope: !3474)
!3478 = !DILocation(line: 389, column: 21, scope: !3464)
!3479 = !DILocation(line: 389, column: 26, scope: !3464)
!3480 = !DILocation(line: 389, column: 10, scope: !3464)
!3481 = !DILocation(line: 389, column: 3, scope: !3464)
!3482 = !DILocation(line: 393, column: 1, scope: !3464)
!3483 = distinct !DISubprogram(name: "ScaleQuantumToMap", scope: !3465, file: !3465, line: 408, type: !3484, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3484 = !DISubroutineType(types: !3485)
!3485 = !{!9, !3017}
!3486 = !DILocalVariable(name: "quantum", arg: 1, scope: !3483, file: !3465, line: 408, type: !3017)
!3487 = !DILocation(line: 408, column: 60, scope: !3483)
!3488 = !DILocation(line: 410, column: 7, scope: !3489)
!3489 = distinct !DILexicalBlock(scope: !3483, file: !3465, line: 410, column: 7)
!3490 = !DILocation(line: 410, column: 15, scope: !3489)
!3491 = !DILocation(line: 410, column: 7, scope: !3483)
!3492 = !DILocation(line: 411, column: 5, scope: !3489)
!3493 = !DILocation(line: 413, column: 25, scope: !3483)
!3494 = !DILocation(line: 413, column: 10, scope: !3483)
!3495 = !DILocation(line: 413, column: 3, scope: !3483)
!3496 = !DILocation(line: 419, column: 1, scope: !3483)
!3497 = distinct !DISubprogram(name: "ScaleCharToQuantum", scope: !3465, file: !3465, line: 363, type: !3498, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!121, !3500}
!3500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !520)
!3501 = !DILocalVariable(name: "value", arg: 1, scope: !3497, file: !3465, line: 363, type: !3500)
!3502 = !DILocation(line: 363, column: 62, scope: !3497)
!3503 = !DILocation(line: 366, column: 26, scope: !3497)
!3504 = !DILocation(line: 366, column: 25, scope: !3497)
!3505 = !DILocation(line: 366, column: 10, scope: !3497)
!3506 = !DILocation(line: 366, column: 3, scope: !3497)
!3507 = distinct !DISubprogram(name: "SetImageProgress", scope: !3508, file: !3508, line: 27, type: !3509, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3508 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!3509 = !DISubroutineType(types: !3510)
!3510 = !{!6, !2761, !390, !392, !395}
!3511 = !DILocalVariable(name: "image", arg: 1, scope: !3507, file: !3508, line: 27, type: !2761)
!3512 = !DILocation(line: 27, column: 63, scope: !3507)
!3513 = !DILocalVariable(name: "tag", arg: 2, scope: !3507, file: !3508, line: 28, type: !390)
!3514 = !DILocation(line: 28, column: 15, scope: !3507)
!3515 = !DILocalVariable(name: "offset", arg: 3, scope: !3507, file: !3508, line: 28, type: !392)
!3516 = !DILocation(line: 28, column: 42, scope: !3507)
!3517 = !DILocalVariable(name: "extent", arg: 4, scope: !3507, file: !3508, line: 28, type: !395)
!3518 = !DILocation(line: 28, column: 70, scope: !3507)
!3519 = !DILocalVariable(name: "message", scope: !3507, file: !3508, line: 31, type: !410)
!3520 = !DILocation(line: 31, column: 5, scope: !3507)
!3521 = !DILocation(line: 33, column: 7, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3507, file: !3508, line: 33, column: 7)
!3523 = !DILocation(line: 33, column: 14, scope: !3522)
!3524 = !DILocation(line: 33, column: 31, scope: !3522)
!3525 = !DILocation(line: 33, column: 7, scope: !3507)
!3526 = !DILocation(line: 34, column: 5, scope: !3522)
!3527 = !DILocation(line: 35, column: 29, scope: !3507)
!3528 = !DILocation(line: 35, column: 59, scope: !3507)
!3529 = !DILocation(line: 35, column: 63, scope: !3507)
!3530 = !DILocation(line: 35, column: 70, scope: !3507)
!3531 = !DILocation(line: 35, column: 10, scope: !3507)
!3532 = !DILocation(line: 36, column: 10, scope: !3507)
!3533 = !DILocation(line: 36, column: 17, scope: !3507)
!3534 = !DILocation(line: 36, column: 34, scope: !3507)
!3535 = !DILocation(line: 36, column: 42, scope: !3507)
!3536 = !DILocation(line: 36, column: 49, scope: !3507)
!3537 = !DILocation(line: 36, column: 56, scope: !3507)
!3538 = !DILocation(line: 36, column: 63, scope: !3507)
!3539 = !DILocation(line: 36, column: 3, scope: !3507)
!3540 = !DILocation(line: 37, column: 1, scope: !3507)
!3541 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !2809, file: !2809, line: 85, type: !3542, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3542 = !DISubroutineType(types: !3543)
!3543 = !{!6, !593}
!3544 = !DILocalVariable(name: "colorspace", arg: 1, scope: !3541, file: !2809, line: 86, type: !593)
!3545 = !DILocation(line: 86, column: 24, scope: !3541)
!3546 = !DILocation(line: 88, column: 8, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3541, file: !2809, line: 88, column: 7)
!3548 = !DILocation(line: 88, column: 19, scope: !3547)
!3549 = !DILocation(line: 88, column: 38, scope: !3547)
!3550 = !DILocation(line: 88, column: 42, scope: !3547)
!3551 = !DILocation(line: 88, column: 53, scope: !3547)
!3552 = !DILocation(line: 88, column: 78, scope: !3547)
!3553 = !DILocation(line: 89, column: 8, scope: !3547)
!3554 = !DILocation(line: 89, column: 19, scope: !3547)
!3555 = !DILocation(line: 88, column: 7, scope: !3541)
!3556 = !DILocation(line: 90, column: 5, scope: !3547)
!3557 = !DILocation(line: 91, column: 3, scope: !3541)
!3558 = !DILocation(line: 92, column: 1, scope: !3541)
!3559 = distinct !DISubprogram(name: "IsRGBColorspace", scope: !2809, file: !2809, line: 94, type: !3542, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3560 = !DILocalVariable(name: "colorspace", arg: 1, scope: !3559, file: !2809, line: 94, type: !593)
!3561 = !DILocation(line: 94, column: 70, scope: !3559)
!3562 = !DILocation(line: 96, column: 8, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !2809, line: 96, column: 7)
!3564 = !DILocation(line: 96, column: 19, scope: !3563)
!3565 = !DILocation(line: 96, column: 37, scope: !3563)
!3566 = !DILocation(line: 96, column: 41, scope: !3563)
!3567 = !DILocation(line: 96, column: 52, scope: !3563)
!3568 = !DILocation(line: 96, column: 7, scope: !3559)
!3569 = !DILocation(line: 97, column: 5, scope: !3563)
!3570 = !DILocation(line: 98, column: 3, scope: !3559)
!3571 = !DILocation(line: 99, column: 1, scope: !3559)
!3572 = distinct !DISubprogram(name: "TransformImageColorspace", scope: !3, file: !3, line: 1182, type: !4, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3573 = !DILocalVariable(name: "image", arg: 1, scope: !3572, file: !3, line: 1182, type: !13)
!3574 = !DILocation(line: 1182, column: 64, scope: !3572)
!3575 = !DILocalVariable(name: "colorspace", arg: 2, scope: !3572, file: !3, line: 1183, type: !593)
!3576 = !DILocation(line: 1183, column: 24, scope: !3572)
!3577 = !DILocalVariable(name: "status", scope: !3572, file: !3, line: 1186, type: !6)
!3578 = !DILocation(line: 1186, column: 5, scope: !3572)
!3579 = !DILocation(line: 1190, column: 7, scope: !3580)
!3580 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1190, column: 7)
!3581 = !DILocation(line: 1190, column: 14, scope: !3580)
!3582 = !DILocation(line: 1190, column: 20, scope: !3580)
!3583 = !DILocation(line: 1190, column: 7, scope: !3572)
!3584 = !DILocation(line: 1191, column: 61, scope: !3580)
!3585 = !DILocation(line: 1191, column: 68, scope: !3580)
!3586 = !DILocation(line: 1191, column: 12, scope: !3580)
!3587 = !DILocation(line: 1191, column: 5, scope: !3580)
!3588 = !DILocation(line: 1192, column: 7, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1192, column: 7)
!3590 = !DILocation(line: 1192, column: 14, scope: !3589)
!3591 = !DILocation(line: 1192, column: 28, scope: !3589)
!3592 = !DILocation(line: 1192, column: 25, scope: !3589)
!3593 = !DILocation(line: 1192, column: 7, scope: !3572)
!3594 = !DILocation(line: 1193, column: 5, scope: !3589)
!3595 = !DILocation(line: 1194, column: 8, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1194, column: 7)
!3597 = !DILocation(line: 1194, column: 15, scope: !3596)
!3598 = !DILocation(line: 1194, column: 26, scope: !3596)
!3599 = !DILocation(line: 1194, column: 51, scope: !3596)
!3600 = !DILocation(line: 1195, column: 8, scope: !3596)
!3601 = !DILocation(line: 1195, column: 19, scope: !3596)
!3602 = !DILocation(line: 1194, column: 7, scope: !3572)
!3603 = !DILocation(line: 1196, column: 5, scope: !3596)
!3604 = !DILocation(line: 1197, column: 8, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1197, column: 7)
!3606 = !DILocation(line: 1197, column: 15, scope: !3605)
!3607 = !DILocation(line: 1197, column: 26, scope: !3605)
!3608 = !DILocation(line: 1197, column: 45, scope: !3605)
!3609 = !DILocation(line: 1197, column: 49, scope: !3605)
!3610 = !DILocation(line: 1197, column: 56, scope: !3605)
!3611 = !DILocation(line: 1197, column: 62, scope: !3605)
!3612 = !DILocation(line: 1197, column: 70, scope: !3605)
!3613 = !DILocation(line: 1198, column: 8, scope: !3605)
!3614 = !DILocation(line: 1198, column: 19, scope: !3605)
!3615 = !DILocation(line: 1197, column: 7, scope: !3572)
!3616 = !DILocation(line: 1199, column: 5, scope: !3605)
!3617 = !DILocation(line: 1200, column: 7, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1200, column: 7)
!3619 = !DILocation(line: 1200, column: 18, scope: !3618)
!3620 = !DILocation(line: 1200, column: 7, scope: !3572)
!3621 = !DILocation(line: 1201, column: 31, scope: !3618)
!3622 = !DILocation(line: 1201, column: 37, scope: !3618)
!3623 = !DILocation(line: 1201, column: 12, scope: !3618)
!3624 = !DILocation(line: 1201, column: 5, scope: !3618)
!3625 = !DILocation(line: 1205, column: 29, scope: !3572)
!3626 = !DILocation(line: 1205, column: 10, scope: !3572)
!3627 = !DILocation(line: 1206, column: 29, scope: !3572)
!3628 = !DILocation(line: 1206, column: 10, scope: !3572)
!3629 = !DILocation(line: 1207, column: 24, scope: !3630)
!3630 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1207, column: 7)
!3631 = !DILocation(line: 1207, column: 7, scope: !3630)
!3632 = !DILocation(line: 1207, column: 36, scope: !3630)
!3633 = !DILocation(line: 1207, column: 7, scope: !3572)
!3634 = !DILocation(line: 1208, column: 30, scope: !3630)
!3635 = !DILocation(line: 1208, column: 36, scope: !3630)
!3636 = !DILocation(line: 1208, column: 43, scope: !3630)
!3637 = !DILocation(line: 1208, column: 12, scope: !3630)
!3638 = !DILocation(line: 1208, column: 5, scope: !3630)
!3639 = !DILocation(line: 1209, column: 9, scope: !3572)
!3640 = !DILocation(line: 1210, column: 24, scope: !3641)
!3641 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1210, column: 7)
!3642 = !DILocation(line: 1210, column: 31, scope: !3641)
!3643 = !DILocation(line: 1210, column: 7, scope: !3641)
!3644 = !DILocation(line: 1210, column: 43, scope: !3641)
!3645 = !DILocation(line: 1210, column: 7, scope: !3572)
!3646 = !DILocation(line: 1211, column: 30, scope: !3641)
!3647 = !DILocation(line: 1211, column: 36, scope: !3641)
!3648 = !DILocation(line: 1211, column: 43, scope: !3641)
!3649 = !DILocation(line: 1211, column: 12, scope: !3641)
!3650 = !DILocation(line: 1211, column: 11, scope: !3641)
!3651 = !DILocation(line: 1211, column: 5, scope: !3641)
!3652 = !DILocation(line: 1212, column: 7, scope: !3653)
!3653 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1212, column: 7)
!3654 = !DILocation(line: 1212, column: 14, scope: !3653)
!3655 = !DILocation(line: 1212, column: 7, scope: !3572)
!3656 = !DILocation(line: 1213, column: 12, scope: !3653)
!3657 = !DILocation(line: 1213, column: 5, scope: !3653)
!3658 = !DILocation(line: 1217, column: 25, scope: !3659)
!3659 = distinct !DILexicalBlock(scope: !3572, file: !3, line: 1217, column: 7)
!3660 = !DILocation(line: 1217, column: 31, scope: !3659)
!3661 = !DILocation(line: 1217, column: 7, scope: !3659)
!3662 = !DILocation(line: 1217, column: 43, scope: !3659)
!3663 = !DILocation(line: 1217, column: 7, scope: !3572)
!3664 = !DILocation(line: 1218, column: 11, scope: !3659)
!3665 = !DILocation(line: 1218, column: 5, scope: !3659)
!3666 = !DILocation(line: 1219, column: 10, scope: !3572)
!3667 = !DILocation(line: 1219, column: 3, scope: !3572)
!3668 = !DILocation(line: 1220, column: 1, scope: !3572)
!3669 = distinct !DISubprogram(name: "IssRGBColorspace", scope: !2809, file: !2809, line: 101, type: !3542, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!3670 = !DILocalVariable(name: "colorspace", arg: 1, scope: !3669, file: !2809, line: 102, type: !593)
!3671 = !DILocation(line: 102, column: 24, scope: !3669)
!3672 = !DILocation(line: 104, column: 8, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3669, file: !2809, line: 104, column: 7)
!3674 = !DILocation(line: 104, column: 19, scope: !3673)
!3675 = !DILocation(line: 104, column: 38, scope: !3673)
!3676 = !DILocation(line: 104, column: 42, scope: !3673)
!3677 = !DILocation(line: 104, column: 53, scope: !3673)
!3678 = !DILocation(line: 104, column: 7, scope: !3669)
!3679 = !DILocation(line: 105, column: 5, scope: !3673)
!3680 = !DILocation(line: 106, column: 3, scope: !3669)
!3681 = !DILocation(line: 107, column: 1, scope: !3669)
!3682 = !DILocalVariable(name: "image", arg: 1, scope: !2, file: !3, line: 1372, type: !13)
!3683 = !DILocation(line: 1372, column: 57, scope: !2)
!3684 = !DILocalVariable(name: "colorspace", arg: 2, scope: !2, file: !3, line: 1373, type: !593)
!3685 = !DILocation(line: 1373, column: 24, scope: !2)
!3686 = !DILocalVariable(name: "image_view", scope: !2, file: !3, line: 1615, type: !653)
!3687 = !DILocation(line: 1615, column: 6, scope: !2)
!3688 = !DILocalVariable(name: "exception", scope: !2, file: !3, line: 1618, type: !659)
!3689 = !DILocation(line: 1618, column: 6, scope: !2)
!3690 = !DILocalVariable(name: "status", scope: !2, file: !3, line: 1621, type: !6)
!3691 = !DILocation(line: 1621, column: 5, scope: !2)
!3692 = !DILocalVariable(name: "progress", scope: !2, file: !3, line: 1624, type: !393)
!3693 = !DILocation(line: 1624, column: 5, scope: !2)
!3694 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 1627, type: !170)
!3695 = !DILocation(line: 1627, column: 5, scope: !2)
!3696 = !DILocalVariable(name: "y", scope: !2, file: !3, line: 1630, type: !170)
!3697 = !DILocation(line: 1630, column: 5, scope: !2)
!3698 = !DILocalVariable(name: "y_map", scope: !2, file: !3, line: 1633, type: !626)
!3699 = !DILocation(line: 1633, column: 6, scope: !2)
!3700 = !DILocalVariable(name: "x_map", scope: !2, file: !3, line: 1634, type: !626)
!3701 = !DILocation(line: 1634, column: 6, scope: !2)
!3702 = !DILocalVariable(name: "z_map", scope: !2, file: !3, line: 1635, type: !626)
!3703 = !DILocation(line: 1635, column: 6, scope: !2)
!3704 = !DILocation(line: 1639, column: 7, scope: !3705)
!3705 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1639, column: 7)
!3706 = !DILocation(line: 1639, column: 14, scope: !3705)
!3707 = !DILocation(line: 1639, column: 20, scope: !3705)
!3708 = !DILocation(line: 1639, column: 7, scope: !2)
!3709 = !DILocation(line: 1640, column: 61, scope: !3705)
!3710 = !DILocation(line: 1640, column: 68, scope: !3705)
!3711 = !DILocation(line: 1640, column: 12, scope: !3705)
!3712 = !DILocation(line: 1640, column: 5, scope: !3705)
!3713 = !DILocation(line: 1641, column: 9, scope: !2)
!3714 = !DILocation(line: 1642, column: 11, scope: !2)
!3715 = !DILocation(line: 1643, column: 15, scope: !2)
!3716 = !DILocation(line: 1643, column: 22, scope: !2)
!3717 = !DILocation(line: 1643, column: 12, scope: !2)
!3718 = !DILocation(line: 1644, column: 11, scope: !2)
!3719 = !DILocation(line: 1644, column: 3, scope: !2)
!3720 = !DILocalVariable(name: "zero", scope: !3721, file: !3, line: 1649, type: !696)
!3721 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1647, column: 5)
!3722 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1645, column: 3)
!3723 = !DILocation(line: 1649, column: 9, scope: !3721)
!3724 = !DILocation(line: 1654, column: 11, scope: !3725)
!3725 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1654, column: 11)
!3726 = !DILocation(line: 1654, column: 18, scope: !3725)
!3727 = !DILocation(line: 1654, column: 32, scope: !3725)
!3728 = !DILocation(line: 1654, column: 11, scope: !3721)
!3729 = !DILocation(line: 1656, column: 25, scope: !3730)
!3730 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1656, column: 15)
!3731 = distinct !DILexicalBlock(scope: !3725, file: !3, line: 1655, column: 9)
!3732 = !DILocation(line: 1656, column: 15, scope: !3730)
!3733 = !DILocation(line: 1656, column: 32, scope: !3730)
!3734 = !DILocation(line: 1656, column: 15, scope: !3731)
!3735 = !DILocation(line: 1657, column: 13, scope: !3730)
!3736 = !DILocation(line: 1658, column: 36, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 1658, column: 15)
!3738 = !DILocation(line: 1658, column: 15, scope: !3737)
!3739 = !DILocation(line: 1658, column: 55, scope: !3737)
!3740 = !DILocation(line: 1658, column: 15, scope: !3731)
!3741 = !DILocation(line: 1659, column: 13, scope: !3737)
!3742 = !DILocation(line: 1660, column: 9, scope: !3731)
!3743 = !DILocation(line: 1661, column: 28, scope: !3721)
!3744 = !DILocation(line: 1661, column: 7, scope: !3721)
!3745 = !DILocation(line: 1662, column: 44, scope: !3721)
!3746 = !DILocation(line: 1662, column: 50, scope: !3721)
!3747 = !DILocation(line: 1662, column: 18, scope: !3721)
!3748 = !DILocation(line: 1662, column: 17, scope: !3721)
!3749 = !DILocation(line: 1667, column: 13, scope: !3750)
!3750 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1667, column: 7)
!3751 = !DILocation(line: 1667, column: 12, scope: !3750)
!3752 = !DILocation(line: 1667, column: 17, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3750, file: !3, line: 1667, column: 7)
!3754 = !DILocation(line: 1667, column: 31, scope: !3753)
!3755 = !DILocation(line: 1667, column: 38, scope: !3753)
!3756 = !DILocation(line: 1667, column: 19, scope: !3753)
!3757 = !DILocation(line: 1667, column: 7, scope: !3750)
!3758 = !DILocalVariable(name: "sync", scope: !3759, file: !3, line: 1670, type: !6)
!3759 = distinct !DILexicalBlock(scope: !3753, file: !3, line: 1668, column: 7)
!3760 = !DILocation(line: 1670, column: 11, scope: !3759)
!3761 = !DILocalVariable(name: "pixel", scope: !3759, file: !3, line: 1673, type: !696)
!3762 = !DILocation(line: 1673, column: 11, scope: !3759)
!3763 = !DILocalVariable(name: "indexes", scope: !3759, file: !3, line: 1676, type: !757)
!3764 = !DILocation(line: 1676, column: 21, scope: !3759)
!3765 = !DILocalVariable(name: "x", scope: !3759, file: !3, line: 1679, type: !170)
!3766 = !DILocation(line: 1679, column: 11, scope: !3759)
!3767 = !DILocalVariable(name: "q", scope: !3759, file: !3, line: 1682, type: !762)
!3768 = !DILocation(line: 1682, column: 21, scope: !3759)
!3769 = !DILocation(line: 1684, column: 13, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1684, column: 13)
!3771 = !DILocation(line: 1684, column: 20, scope: !3770)
!3772 = !DILocation(line: 1684, column: 13, scope: !3759)
!3773 = !DILocation(line: 1685, column: 11, scope: !3770)
!3774 = !DILocation(line: 1686, column: 39, scope: !3759)
!3775 = !DILocation(line: 1686, column: 52, scope: !3759)
!3776 = !DILocation(line: 1686, column: 54, scope: !3759)
!3777 = !DILocation(line: 1686, column: 61, scope: !3759)
!3778 = !DILocation(line: 1687, column: 11, scope: !3759)
!3779 = !DILocation(line: 1686, column: 11, scope: !3759)
!3780 = !DILocation(line: 1686, column: 10, scope: !3759)
!3781 = !DILocation(line: 1688, column: 13, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1688, column: 13)
!3783 = !DILocation(line: 1688, column: 15, scope: !3782)
!3784 = !DILocation(line: 1688, column: 13, scope: !3759)
!3785 = !DILocation(line: 1690, column: 19, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3782, file: !3, line: 1689, column: 11)
!3787 = !DILocation(line: 1691, column: 13, scope: !3786)
!3788 = !DILocation(line: 1693, column: 49, scope: !3759)
!3789 = !DILocation(line: 1693, column: 17, scope: !3759)
!3790 = !DILocation(line: 1693, column: 16, scope: !3759)
!3791 = !DILocation(line: 1694, column: 15, scope: !3759)
!3792 = !DILocation(line: 1695, column: 15, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1695, column: 9)
!3794 = !DILocation(line: 1695, column: 14, scope: !3793)
!3795 = !DILocation(line: 1695, column: 19, scope: !3796)
!3796 = distinct !DILexicalBlock(scope: !3793, file: !3, line: 1695, column: 9)
!3797 = !DILocation(line: 1695, column: 33, scope: !3796)
!3798 = !DILocation(line: 1695, column: 40, scope: !3796)
!3799 = !DILocation(line: 1695, column: 21, scope: !3796)
!3800 = !DILocation(line: 1695, column: 9, scope: !3793)
!3801 = !DILocation(line: 1697, column: 32, scope: !3802)
!3802 = distinct !DILexicalBlock(scope: !3796, file: !3, line: 1696, column: 9)
!3803 = !DILocation(line: 1697, column: 38, scope: !3802)
!3804 = !DILocation(line: 1697, column: 40, scope: !3802)
!3805 = !DILocation(line: 1697, column: 48, scope: !3802)
!3806 = !DILocation(line: 1697, column: 47, scope: !3802)
!3807 = !DILocation(line: 1697, column: 11, scope: !3802)
!3808 = !DILocation(line: 1698, column: 11, scope: !3802)
!3809 = !DILocation(line: 1699, column: 26, scope: !3802)
!3810 = !DILocation(line: 1699, column: 39, scope: !3802)
!3811 = !DILocation(line: 1699, column: 41, scope: !3802)
!3812 = !DILocation(line: 1699, column: 49, scope: !3802)
!3813 = !DILocation(line: 1699, column: 48, scope: !3802)
!3814 = !DILocation(line: 1699, column: 11, scope: !3802)
!3815 = !DILocation(line: 1700, column: 12, scope: !3802)
!3816 = !DILocation(line: 1701, column: 9, scope: !3802)
!3817 = !DILocation(line: 1695, column: 50, scope: !3796)
!3818 = !DILocation(line: 1695, column: 9, scope: !3796)
!3819 = distinct !{!3819, !3800, !3820}
!3820 = !DILocation(line: 1701, column: 9, scope: !3793)
!3821 = !DILocation(line: 1702, column: 43, scope: !3759)
!3822 = !DILocation(line: 1702, column: 54, scope: !3759)
!3823 = !DILocation(line: 1702, column: 14, scope: !3759)
!3824 = !DILocation(line: 1702, column: 13, scope: !3759)
!3825 = !DILocation(line: 1703, column: 13, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3759, file: !3, line: 1703, column: 13)
!3827 = !DILocation(line: 1703, column: 18, scope: !3826)
!3828 = !DILocation(line: 1703, column: 13, scope: !3759)
!3829 = !DILocation(line: 1704, column: 17, scope: !3826)
!3830 = !DILocation(line: 1704, column: 11, scope: !3826)
!3831 = !DILocation(line: 1705, column: 7, scope: !3759)
!3832 = !DILocation(line: 1667, column: 45, scope: !3753)
!3833 = !DILocation(line: 1667, column: 7, scope: !3753)
!3834 = distinct !{!3834, !3757, !3835}
!3835 = !DILocation(line: 1705, column: 7, scope: !3750)
!3836 = !DILocation(line: 1706, column: 35, scope: !3721)
!3837 = !DILocation(line: 1706, column: 18, scope: !3721)
!3838 = !DILocation(line: 1706, column: 17, scope: !3721)
!3839 = !DILocation(line: 1707, column: 30, scope: !3840)
!3840 = distinct !DILexicalBlock(scope: !3721, file: !3, line: 1707, column: 11)
!3841 = !DILocation(line: 1707, column: 11, scope: !3840)
!3842 = !DILocation(line: 1707, column: 52, scope: !3840)
!3843 = !DILocation(line: 1707, column: 11, scope: !3721)
!3844 = !DILocation(line: 1708, column: 9, scope: !3840)
!3845 = !DILocation(line: 1709, column: 14, scope: !3721)
!3846 = !DILocation(line: 1709, column: 7, scope: !3721)
!3847 = !DILocation(line: 1718, column: 11, scope: !3848)
!3848 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1718, column: 11)
!3849 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1714, column: 5)
!3850 = !DILocation(line: 1718, column: 18, scope: !3848)
!3851 = !DILocation(line: 1718, column: 32, scope: !3848)
!3852 = !DILocation(line: 1718, column: 11, scope: !3849)
!3853 = !DILocation(line: 1720, column: 25, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1720, column: 15)
!3855 = distinct !DILexicalBlock(scope: !3848, file: !3, line: 1719, column: 9)
!3856 = !DILocation(line: 1720, column: 15, scope: !3854)
!3857 = !DILocation(line: 1720, column: 32, scope: !3854)
!3858 = !DILocation(line: 1720, column: 15, scope: !3855)
!3859 = !DILocation(line: 1721, column: 13, scope: !3854)
!3860 = !DILocation(line: 1722, column: 36, scope: !3861)
!3861 = distinct !DILexicalBlock(scope: !3855, file: !3, line: 1722, column: 15)
!3862 = !DILocation(line: 1722, column: 15, scope: !3861)
!3863 = !DILocation(line: 1722, column: 55, scope: !3861)
!3864 = !DILocation(line: 1722, column: 15, scope: !3855)
!3865 = !DILocation(line: 1723, column: 13, scope: !3861)
!3866 = !DILocation(line: 1724, column: 9, scope: !3855)
!3867 = !DILocation(line: 1725, column: 30, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1725, column: 11)
!3869 = !DILocation(line: 1725, column: 11, scope: !3868)
!3870 = !DILocation(line: 1725, column: 52, scope: !3868)
!3871 = !DILocation(line: 1725, column: 11, scope: !3849)
!3872 = !DILocation(line: 1726, column: 9, scope: !3868)
!3873 = !DILocation(line: 1727, column: 44, scope: !3849)
!3874 = !DILocation(line: 1727, column: 50, scope: !3849)
!3875 = !DILocation(line: 1727, column: 18, scope: !3849)
!3876 = !DILocation(line: 1727, column: 17, scope: !3849)
!3877 = !DILocation(line: 1732, column: 13, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1732, column: 7)
!3879 = !DILocation(line: 1732, column: 12, scope: !3878)
!3880 = !DILocation(line: 1732, column: 17, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3878, file: !3, line: 1732, column: 7)
!3882 = !DILocation(line: 1732, column: 31, scope: !3881)
!3883 = !DILocation(line: 1732, column: 38, scope: !3881)
!3884 = !DILocation(line: 1732, column: 19, scope: !3881)
!3885 = !DILocation(line: 1732, column: 7, scope: !3878)
!3886 = !DILocalVariable(name: "sync", scope: !3887, file: !3, line: 1735, type: !6)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !3, line: 1733, column: 7)
!3888 = !DILocation(line: 1735, column: 11, scope: !3887)
!3889 = !DILocalVariable(name: "x", scope: !3887, file: !3, line: 1738, type: !170)
!3890 = !DILocation(line: 1738, column: 11, scope: !3887)
!3891 = !DILocalVariable(name: "q", scope: !3887, file: !3, line: 1741, type: !762)
!3892 = !DILocation(line: 1741, column: 21, scope: !3887)
!3893 = !DILocation(line: 1743, column: 13, scope: !3894)
!3894 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1743, column: 13)
!3895 = !DILocation(line: 1743, column: 20, scope: !3894)
!3896 = !DILocation(line: 1743, column: 13, scope: !3887)
!3897 = !DILocation(line: 1744, column: 11, scope: !3894)
!3898 = !DILocation(line: 1745, column: 39, scope: !3887)
!3899 = !DILocation(line: 1745, column: 52, scope: !3887)
!3900 = !DILocation(line: 1745, column: 54, scope: !3887)
!3901 = !DILocation(line: 1745, column: 61, scope: !3887)
!3902 = !DILocation(line: 1746, column: 11, scope: !3887)
!3903 = !DILocation(line: 1745, column: 11, scope: !3887)
!3904 = !DILocation(line: 1745, column: 10, scope: !3887)
!3905 = !DILocation(line: 1747, column: 13, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1747, column: 13)
!3907 = !DILocation(line: 1747, column: 15, scope: !3906)
!3908 = !DILocation(line: 1747, column: 13, scope: !3887)
!3909 = !DILocation(line: 1749, column: 19, scope: !3910)
!3910 = distinct !DILexicalBlock(scope: !3906, file: !3, line: 1748, column: 11)
!3911 = !DILocation(line: 1750, column: 13, scope: !3910)
!3912 = !DILocation(line: 1752, column: 26, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1752, column: 9)
!3914 = !DILocation(line: 1752, column: 33, scope: !3913)
!3915 = !DILocation(line: 1752, column: 15, scope: !3913)
!3916 = !DILocation(line: 1752, column: 14, scope: !3913)
!3917 = !DILocation(line: 1752, column: 42, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3913, file: !3, line: 1752, column: 9)
!3919 = !DILocation(line: 1752, column: 44, scope: !3918)
!3920 = !DILocation(line: 1752, column: 9, scope: !3913)
!3921 = !DILocalVariable(name: "gray", scope: !3922, file: !3, line: 1755, type: !622)
!3922 = distinct !DILexicalBlock(scope: !3918, file: !3, line: 1753, column: 9)
!3923 = !DILocation(line: 1755, column: 13, scope: !3922)
!3924 = !DILocation(line: 1757, column: 33, scope: !3922)
!3925 = !DILocation(line: 1757, column: 16, scope: !3922)
!3926 = !DILocation(line: 1757, column: 15, scope: !3922)
!3927 = !DILocation(line: 1758, column: 16, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 1758, column: 15)
!3929 = !DILocation(line: 1758, column: 23, scope: !3928)
!3930 = !DILocation(line: 1758, column: 33, scope: !3928)
!3931 = !DILocation(line: 1758, column: 73, scope: !3928)
!3932 = !DILocation(line: 1759, column: 16, scope: !3928)
!3933 = !DILocation(line: 1759, column: 23, scope: !3928)
!3934 = !DILocation(line: 1759, column: 33, scope: !3928)
!3935 = !DILocation(line: 1758, column: 15, scope: !3922)
!3936 = !DILocation(line: 1760, column: 35, scope: !3928)
!3937 = !DILocation(line: 1760, column: 18, scope: !3928)
!3938 = !DILocation(line: 1760, column: 17, scope: !3928)
!3939 = !DILocation(line: 1760, column: 13, scope: !3928)
!3940 = !DILocation(line: 1761, column: 11, scope: !3922)
!3941 = !DILocation(line: 1762, column: 11, scope: !3922)
!3942 = !DILocation(line: 1763, column: 11, scope: !3922)
!3943 = !DILocation(line: 1764, column: 12, scope: !3922)
!3944 = !DILocation(line: 1765, column: 9, scope: !3922)
!3945 = !DILocation(line: 1752, column: 51, scope: !3918)
!3946 = !DILocation(line: 1752, column: 9, scope: !3918)
!3947 = distinct !{!3947, !3920, !3948}
!3948 = !DILocation(line: 1765, column: 9, scope: !3913)
!3949 = !DILocation(line: 1766, column: 43, scope: !3887)
!3950 = !DILocation(line: 1766, column: 54, scope: !3887)
!3951 = !DILocation(line: 1766, column: 14, scope: !3887)
!3952 = !DILocation(line: 1766, column: 13, scope: !3887)
!3953 = !DILocation(line: 1767, column: 13, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3887, file: !3, line: 1767, column: 13)
!3955 = !DILocation(line: 1767, column: 18, scope: !3954)
!3956 = !DILocation(line: 1767, column: 13, scope: !3887)
!3957 = !DILocation(line: 1768, column: 17, scope: !3954)
!3958 = !DILocation(line: 1768, column: 11, scope: !3954)
!3959 = !DILocation(line: 1769, column: 7, scope: !3887)
!3960 = !DILocation(line: 1732, column: 45, scope: !3881)
!3961 = !DILocation(line: 1732, column: 7, scope: !3881)
!3962 = distinct !{!3962, !3885, !3963}
!3963 = !DILocation(line: 1769, column: 7, scope: !3878)
!3964 = !DILocation(line: 1770, column: 35, scope: !3849)
!3965 = !DILocation(line: 1770, column: 18, scope: !3849)
!3966 = !DILocation(line: 1770, column: 17, scope: !3849)
!3967 = !DILocation(line: 1771, column: 30, scope: !3968)
!3968 = distinct !DILexicalBlock(scope: !3849, file: !3, line: 1771, column: 11)
!3969 = !DILocation(line: 1771, column: 11, scope: !3968)
!3970 = !DILocation(line: 1771, column: 52, scope: !3968)
!3971 = !DILocation(line: 1771, column: 11, scope: !3849)
!3972 = !DILocation(line: 1772, column: 9, scope: !3968)
!3973 = !DILocation(line: 1773, column: 14, scope: !3849)
!3974 = !DILocation(line: 1773, column: 7, scope: !3849)
!3975 = !DILocation(line: 1799, column: 11, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1799, column: 11)
!3977 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1795, column: 5)
!3978 = !DILocation(line: 1799, column: 18, scope: !3976)
!3979 = !DILocation(line: 1799, column: 32, scope: !3976)
!3980 = !DILocation(line: 1799, column: 11, scope: !3977)
!3981 = !DILocation(line: 1801, column: 25, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1801, column: 15)
!3983 = distinct !DILexicalBlock(scope: !3976, file: !3, line: 1800, column: 9)
!3984 = !DILocation(line: 1801, column: 15, scope: !3982)
!3985 = !DILocation(line: 1801, column: 32, scope: !3982)
!3986 = !DILocation(line: 1801, column: 15, scope: !3983)
!3987 = !DILocation(line: 1802, column: 13, scope: !3982)
!3988 = !DILocation(line: 1803, column: 36, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 1803, column: 15)
!3990 = !DILocation(line: 1803, column: 15, scope: !3989)
!3991 = !DILocation(line: 1803, column: 55, scope: !3989)
!3992 = !DILocation(line: 1803, column: 15, scope: !3983)
!3993 = !DILocation(line: 1804, column: 13, scope: !3989)
!3994 = !DILocation(line: 1805, column: 9, scope: !3983)
!3995 = !DILocation(line: 1806, column: 44, scope: !3977)
!3996 = !DILocation(line: 1806, column: 50, scope: !3977)
!3997 = !DILocation(line: 1806, column: 18, scope: !3977)
!3998 = !DILocation(line: 1806, column: 17, scope: !3977)
!3999 = !DILocation(line: 1811, column: 13, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1811, column: 7)
!4001 = !DILocation(line: 1811, column: 12, scope: !4000)
!4002 = !DILocation(line: 1811, column: 17, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4000, file: !3, line: 1811, column: 7)
!4004 = !DILocation(line: 1811, column: 31, scope: !4003)
!4005 = !DILocation(line: 1811, column: 38, scope: !4003)
!4006 = !DILocation(line: 1811, column: 19, scope: !4003)
!4007 = !DILocation(line: 1811, column: 7, scope: !4000)
!4008 = !DILocalVariable(name: "sync", scope: !4009, file: !3, line: 1814, type: !6)
!4009 = distinct !DILexicalBlock(scope: !4003, file: !3, line: 1812, column: 7)
!4010 = !DILocation(line: 1814, column: 11, scope: !4009)
!4011 = !DILocalVariable(name: "x", scope: !4009, file: !3, line: 1817, type: !170)
!4012 = !DILocation(line: 1817, column: 11, scope: !4009)
!4013 = !DILocalVariable(name: "q", scope: !4009, file: !3, line: 1820, type: !762)
!4014 = !DILocation(line: 1820, column: 21, scope: !4009)
!4015 = !DILocation(line: 1822, column: 13, scope: !4016)
!4016 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1822, column: 13)
!4017 = !DILocation(line: 1822, column: 20, scope: !4016)
!4018 = !DILocation(line: 1822, column: 13, scope: !4009)
!4019 = !DILocation(line: 1823, column: 11, scope: !4016)
!4020 = !DILocation(line: 1824, column: 39, scope: !4009)
!4021 = !DILocation(line: 1824, column: 52, scope: !4009)
!4022 = !DILocation(line: 1824, column: 54, scope: !4009)
!4023 = !DILocation(line: 1824, column: 61, scope: !4009)
!4024 = !DILocation(line: 1825, column: 11, scope: !4009)
!4025 = !DILocation(line: 1824, column: 11, scope: !4009)
!4026 = !DILocation(line: 1824, column: 10, scope: !4009)
!4027 = !DILocation(line: 1826, column: 13, scope: !4028)
!4028 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1826, column: 13)
!4029 = !DILocation(line: 1826, column: 15, scope: !4028)
!4030 = !DILocation(line: 1826, column: 13, scope: !4009)
!4031 = !DILocation(line: 1828, column: 19, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4028, file: !3, line: 1827, column: 11)
!4033 = !DILocation(line: 1829, column: 13, scope: !4032)
!4034 = !DILocation(line: 1831, column: 15, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1831, column: 9)
!4036 = !DILocation(line: 1831, column: 14, scope: !4035)
!4037 = !DILocation(line: 1831, column: 19, scope: !4038)
!4038 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 1831, column: 9)
!4039 = !DILocation(line: 1831, column: 33, scope: !4038)
!4040 = !DILocation(line: 1831, column: 40, scope: !4038)
!4041 = !DILocation(line: 1831, column: 21, scope: !4038)
!4042 = !DILocation(line: 1831, column: 9, scope: !4035)
!4043 = !DILocalVariable(name: "X", scope: !4044, file: !3, line: 1834, type: !130)
!4044 = distinct !DILexicalBlock(scope: !4038, file: !3, line: 1832, column: 9)
!4045 = !DILocation(line: 1834, column: 13, scope: !4044)
!4046 = !DILocalVariable(name: "Y", scope: !4044, file: !3, line: 1835, type: !130)
!4047 = !DILocation(line: 1835, column: 13, scope: !4044)
!4048 = !DILocalVariable(name: "Z", scope: !4044, file: !3, line: 1836, type: !130)
!4049 = !DILocation(line: 1836, column: 13, scope: !4044)
!4050 = !DILocalVariable(name: "blue", scope: !4044, file: !3, line: 1839, type: !121)
!4051 = !DILocation(line: 1839, column: 13, scope: !4044)
!4052 = !DILocalVariable(name: "green", scope: !4044, file: !3, line: 1840, type: !121)
!4053 = !DILocation(line: 1840, column: 13, scope: !4044)
!4054 = !DILocalVariable(name: "red", scope: !4044, file: !3, line: 1841, type: !121)
!4055 = !DILocation(line: 1841, column: 13, scope: !4044)
!4056 = !DILocation(line: 1843, column: 26, scope: !4044)
!4057 = !DILocation(line: 1843, column: 25, scope: !4044)
!4058 = !DILocation(line: 1843, column: 12, scope: !4044)
!4059 = !DILocation(line: 1844, column: 26, scope: !4044)
!4060 = !DILocation(line: 1844, column: 25, scope: !4044)
!4061 = !DILocation(line: 1844, column: 12, scope: !4044)
!4062 = !DILocation(line: 1845, column: 26, scope: !4044)
!4063 = !DILocation(line: 1845, column: 25, scope: !4044)
!4064 = !DILocation(line: 1845, column: 12, scope: !4044)
!4065 = !DILocation(line: 1846, column: 19, scope: !4044)
!4066 = !DILocation(line: 1846, column: 11, scope: !4044)
!4067 = !DILocation(line: 1850, column: 31, scope: !4068)
!4068 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1849, column: 13)
!4069 = distinct !DILexicalBlock(scope: !4044, file: !3, line: 1847, column: 11)
!4070 = !DILocation(line: 1850, column: 33, scope: !4068)
!4071 = !DILocation(line: 1850, column: 35, scope: !4068)
!4072 = !DILocation(line: 1850, column: 15, scope: !4068)
!4073 = !DILocation(line: 1851, column: 15, scope: !4068)
!4074 = !DILocation(line: 1855, column: 31, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1854, column: 13)
!4076 = !DILocation(line: 1855, column: 33, scope: !4075)
!4077 = !DILocation(line: 1855, column: 35, scope: !4075)
!4078 = !DILocation(line: 1855, column: 15, scope: !4075)
!4079 = !DILocation(line: 1856, column: 15, scope: !4075)
!4080 = !DILocation(line: 1860, column: 32, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1859, column: 13)
!4082 = !DILocation(line: 1860, column: 34, scope: !4081)
!4083 = !DILocation(line: 1860, column: 36, scope: !4081)
!4084 = !DILocation(line: 1860, column: 15, scope: !4081)
!4085 = !DILocation(line: 1861, column: 15, scope: !4081)
!4086 = !DILocation(line: 1865, column: 31, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1864, column: 13)
!4088 = !DILocation(line: 1865, column: 33, scope: !4087)
!4089 = !DILocation(line: 1865, column: 35, scope: !4087)
!4090 = !DILocation(line: 1865, column: 15, scope: !4087)
!4091 = !DILocation(line: 1866, column: 15, scope: !4087)
!4092 = !DILocation(line: 1870, column: 31, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1869, column: 13)
!4094 = !DILocation(line: 1870, column: 33, scope: !4093)
!4095 = !DILocation(line: 1870, column: 35, scope: !4093)
!4096 = !DILocation(line: 1870, column: 15, scope: !4093)
!4097 = !DILocation(line: 1871, column: 15, scope: !4093)
!4098 = !DILocation(line: 1875, column: 31, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1874, column: 13)
!4100 = !DILocation(line: 1875, column: 33, scope: !4099)
!4101 = !DILocation(line: 1875, column: 35, scope: !4099)
!4102 = !DILocation(line: 1875, column: 15, scope: !4099)
!4103 = !DILocation(line: 1876, column: 15, scope: !4099)
!4104 = !DILocation(line: 1880, column: 31, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1879, column: 13)
!4106 = !DILocation(line: 1880, column: 33, scope: !4105)
!4107 = !DILocation(line: 1880, column: 35, scope: !4105)
!4108 = !DILocation(line: 1880, column: 15, scope: !4105)
!4109 = !DILocation(line: 1881, column: 15, scope: !4105)
!4110 = !DILocation(line: 1885, column: 31, scope: !4111)
!4111 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1884, column: 13)
!4112 = !DILocation(line: 1885, column: 33, scope: !4111)
!4113 = !DILocation(line: 1885, column: 35, scope: !4111)
!4114 = !DILocation(line: 1885, column: 15, scope: !4111)
!4115 = !DILocation(line: 1886, column: 15, scope: !4111)
!4116 = !DILocation(line: 1890, column: 31, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1889, column: 13)
!4118 = !DILocation(line: 1890, column: 33, scope: !4117)
!4119 = !DILocation(line: 1890, column: 35, scope: !4117)
!4120 = !DILocation(line: 1890, column: 15, scope: !4117)
!4121 = !DILocation(line: 1891, column: 15, scope: !4117)
!4122 = !DILocation(line: 1896, column: 33, scope: !4123)
!4123 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1895, column: 13)
!4124 = !DILocation(line: 1896, column: 35, scope: !4123)
!4125 = !DILocation(line: 1896, column: 37, scope: !4123)
!4126 = !DILocation(line: 1896, column: 15, scope: !4123)
!4127 = !DILocation(line: 1897, column: 15, scope: !4123)
!4128 = !DILocation(line: 1901, column: 33, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1900, column: 13)
!4130 = !DILocation(line: 1901, column: 35, scope: !4129)
!4131 = !DILocation(line: 1901, column: 37, scope: !4129)
!4132 = !DILocation(line: 1901, column: 15, scope: !4129)
!4133 = !DILocation(line: 1902, column: 15, scope: !4129)
!4134 = !DILocation(line: 1906, column: 31, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1905, column: 13)
!4136 = !DILocation(line: 1906, column: 33, scope: !4135)
!4137 = !DILocation(line: 1906, column: 35, scope: !4135)
!4138 = !DILocation(line: 1906, column: 15, scope: !4135)
!4139 = !DILocation(line: 1907, column: 15, scope: !4135)
!4140 = !DILocation(line: 1911, column: 31, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1910, column: 13)
!4142 = !DILocation(line: 1911, column: 33, scope: !4141)
!4143 = !DILocation(line: 1911, column: 35, scope: !4141)
!4144 = !DILocation(line: 1911, column: 15, scope: !4141)
!4145 = !DILocation(line: 1912, column: 15, scope: !4141)
!4146 = !DILocation(line: 1916, column: 31, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1915, column: 13)
!4148 = !DILocation(line: 1916, column: 33, scope: !4147)
!4149 = !DILocation(line: 1916, column: 35, scope: !4147)
!4150 = !DILocation(line: 1916, column: 15, scope: !4147)
!4151 = !DILocation(line: 1917, column: 15, scope: !4147)
!4152 = !DILocation(line: 1921, column: 33, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1920, column: 13)
!4154 = !DILocation(line: 1921, column: 35, scope: !4153)
!4155 = !DILocation(line: 1921, column: 37, scope: !4153)
!4156 = !DILocation(line: 1921, column: 15, scope: !4153)
!4157 = !DILocation(line: 1922, column: 15, scope: !4153)
!4158 = !DILocation(line: 1926, column: 33, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1925, column: 13)
!4160 = !DILocation(line: 1926, column: 35, scope: !4159)
!4161 = !DILocation(line: 1926, column: 37, scope: !4159)
!4162 = !DILocation(line: 1926, column: 15, scope: !4159)
!4163 = !DILocation(line: 1927, column: 15, scope: !4159)
!4164 = !DILocation(line: 1931, column: 31, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1930, column: 13)
!4166 = !DILocation(line: 1931, column: 33, scope: !4165)
!4167 = !DILocation(line: 1931, column: 35, scope: !4165)
!4168 = !DILocation(line: 1931, column: 15, scope: !4165)
!4169 = !DILocation(line: 1932, column: 15, scope: !4165)
!4170 = !DILocation(line: 1936, column: 33, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1935, column: 13)
!4172 = !DILocation(line: 1936, column: 35, scope: !4171)
!4173 = !DILocation(line: 1936, column: 37, scope: !4171)
!4174 = !DILocation(line: 1936, column: 15, scope: !4171)
!4175 = !DILocation(line: 1937, column: 15, scope: !4171)
!4176 = !DILocation(line: 1941, column: 31, scope: !4177)
!4177 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1940, column: 13)
!4178 = !DILocation(line: 1941, column: 33, scope: !4177)
!4179 = !DILocation(line: 1941, column: 35, scope: !4177)
!4180 = !DILocation(line: 1941, column: 15, scope: !4177)
!4181 = !DILocation(line: 1942, column: 15, scope: !4177)
!4182 = !DILocation(line: 1946, column: 32, scope: !4183)
!4183 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 1945, column: 13)
!4184 = !DILocation(line: 1946, column: 31, scope: !4183)
!4185 = !DILocation(line: 1946, column: 19, scope: !4183)
!4186 = !DILocation(line: 1946, column: 18, scope: !4183)
!4187 = !DILocation(line: 1947, column: 34, scope: !4183)
!4188 = !DILocation(line: 1947, column: 33, scope: !4183)
!4189 = !DILocation(line: 1947, column: 21, scope: !4183)
!4190 = !DILocation(line: 1947, column: 20, scope: !4183)
!4191 = !DILocation(line: 1948, column: 33, scope: !4183)
!4192 = !DILocation(line: 1948, column: 32, scope: !4183)
!4193 = !DILocation(line: 1948, column: 20, scope: !4183)
!4194 = !DILocation(line: 1948, column: 19, scope: !4183)
!4195 = !DILocation(line: 1949, column: 15, scope: !4183)
!4196 = !DILocation(line: 1952, column: 11, scope: !4044)
!4197 = !DILocation(line: 1953, column: 11, scope: !4044)
!4198 = !DILocation(line: 1954, column: 11, scope: !4044)
!4199 = !DILocation(line: 1955, column: 12, scope: !4044)
!4200 = !DILocation(line: 1956, column: 9, scope: !4044)
!4201 = !DILocation(line: 1831, column: 50, scope: !4038)
!4202 = !DILocation(line: 1831, column: 9, scope: !4038)
!4203 = distinct !{!4203, !4042, !4204}
!4204 = !DILocation(line: 1956, column: 9, scope: !4035)
!4205 = !DILocation(line: 1957, column: 43, scope: !4009)
!4206 = !DILocation(line: 1957, column: 54, scope: !4009)
!4207 = !DILocation(line: 1957, column: 14, scope: !4009)
!4208 = !DILocation(line: 1957, column: 13, scope: !4009)
!4209 = !DILocation(line: 1958, column: 13, scope: !4210)
!4210 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 1958, column: 13)
!4211 = !DILocation(line: 1958, column: 18, scope: !4210)
!4212 = !DILocation(line: 1958, column: 13, scope: !4009)
!4213 = !DILocation(line: 1959, column: 17, scope: !4210)
!4214 = !DILocation(line: 1959, column: 11, scope: !4210)
!4215 = !DILocation(line: 1960, column: 7, scope: !4009)
!4216 = !DILocation(line: 1811, column: 45, scope: !4003)
!4217 = !DILocation(line: 1811, column: 7, scope: !4003)
!4218 = distinct !{!4218, !4007, !4219}
!4219 = !DILocation(line: 1960, column: 7, scope: !4000)
!4220 = !DILocation(line: 1961, column: 35, scope: !3977)
!4221 = !DILocation(line: 1961, column: 18, scope: !3977)
!4222 = !DILocation(line: 1961, column: 17, scope: !3977)
!4223 = !DILocation(line: 1962, column: 30, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !3977, file: !3, line: 1962, column: 11)
!4225 = !DILocation(line: 1962, column: 11, scope: !4224)
!4226 = !DILocation(line: 1962, column: 52, scope: !4224)
!4227 = !DILocation(line: 1962, column: 11, scope: !3977)
!4228 = !DILocation(line: 1963, column: 9, scope: !4224)
!4229 = !DILocation(line: 1964, column: 14, scope: !3977)
!4230 = !DILocation(line: 1964, column: 7, scope: !3977)
!4231 = !DILocalVariable(name: "value", scope: !4232, file: !3, line: 1969, type: !390)
!4232 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 1967, column: 5)
!4233 = !DILocation(line: 1969, column: 10, scope: !4232)
!4234 = !DILocalVariable(name: "black", scope: !4232, file: !3, line: 1972, type: !130)
!4235 = !DILocation(line: 1972, column: 9, scope: !4232)
!4236 = !DILocalVariable(name: "density", scope: !4232, file: !3, line: 1973, type: !130)
!4237 = !DILocation(line: 1973, column: 9, scope: !4232)
!4238 = !DILocalVariable(name: "film_gamma", scope: !4232, file: !3, line: 1974, type: !130)
!4239 = !DILocation(line: 1974, column: 9, scope: !4232)
!4240 = !DILocalVariable(name: "gamma", scope: !4232, file: !3, line: 1975, type: !130)
!4241 = !DILocation(line: 1975, column: 9, scope: !4232)
!4242 = !DILocalVariable(name: "reference_black", scope: !4232, file: !3, line: 1976, type: !130)
!4243 = !DILocation(line: 1976, column: 9, scope: !4232)
!4244 = !DILocalVariable(name: "reference_white", scope: !4232, file: !3, line: 1977, type: !130)
!4245 = !DILocation(line: 1977, column: 9, scope: !4232)
!4246 = !DILocalVariable(name: "logmap", scope: !4232, file: !3, line: 1980, type: !625)
!4247 = !DILocation(line: 1980, column: 10, scope: !4232)
!4248 = !DILocation(line: 1985, column: 14, scope: !4232)
!4249 = !DILocation(line: 1986, column: 12, scope: !4232)
!4250 = !DILocation(line: 1987, column: 30, scope: !4232)
!4251 = !DILocation(line: 1987, column: 13, scope: !4232)
!4252 = !DILocation(line: 1987, column: 12, scope: !4232)
!4253 = !DILocation(line: 1988, column: 11, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 1988, column: 11)
!4255 = !DILocation(line: 1988, column: 17, scope: !4254)
!4256 = !DILocation(line: 1988, column: 11, scope: !4232)
!4257 = !DILocation(line: 1989, column: 52, scope: !4254)
!4258 = !DILocation(line: 1989, column: 37, scope: !4254)
!4259 = !DILocation(line: 1989, column: 15, scope: !4254)
!4260 = !DILocation(line: 1989, column: 14, scope: !4254)
!4261 = !DILocation(line: 1989, column: 9, scope: !4254)
!4262 = !DILocation(line: 1990, column: 17, scope: !4232)
!4263 = !DILocation(line: 1991, column: 30, scope: !4232)
!4264 = !DILocation(line: 1991, column: 13, scope: !4232)
!4265 = !DILocation(line: 1991, column: 12, scope: !4232)
!4266 = !DILocation(line: 1992, column: 11, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 1992, column: 11)
!4268 = !DILocation(line: 1992, column: 17, scope: !4267)
!4269 = !DILocation(line: 1992, column: 11, scope: !4232)
!4270 = !DILocation(line: 1993, column: 35, scope: !4267)
!4271 = !DILocation(line: 1993, column: 20, scope: !4267)
!4272 = !DILocation(line: 1993, column: 19, scope: !4267)
!4273 = !DILocation(line: 1993, column: 9, scope: !4267)
!4274 = !DILocation(line: 1994, column: 22, scope: !4232)
!4275 = !DILocation(line: 1995, column: 30, scope: !4232)
!4276 = !DILocation(line: 1995, column: 13, scope: !4232)
!4277 = !DILocation(line: 1995, column: 12, scope: !4232)
!4278 = !DILocation(line: 1996, column: 11, scope: !4279)
!4279 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 1996, column: 11)
!4280 = !DILocation(line: 1996, column: 17, scope: !4279)
!4281 = !DILocation(line: 1996, column: 11, scope: !4232)
!4282 = !DILocation(line: 1997, column: 40, scope: !4279)
!4283 = !DILocation(line: 1997, column: 25, scope: !4279)
!4284 = !DILocation(line: 1997, column: 24, scope: !4279)
!4285 = !DILocation(line: 1997, column: 9, scope: !4279)
!4286 = !DILocation(line: 1998, column: 22, scope: !4232)
!4287 = !DILocation(line: 1999, column: 30, scope: !4232)
!4288 = !DILocation(line: 1999, column: 13, scope: !4232)
!4289 = !DILocation(line: 1999, column: 12, scope: !4232)
!4290 = !DILocation(line: 2000, column: 11, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2000, column: 11)
!4292 = !DILocation(line: 2000, column: 17, scope: !4291)
!4293 = !DILocation(line: 2000, column: 11, scope: !4232)
!4294 = !DILocation(line: 2001, column: 40, scope: !4291)
!4295 = !DILocation(line: 2001, column: 25, scope: !4291)
!4296 = !DILocation(line: 2001, column: 24, scope: !4291)
!4297 = !DILocation(line: 2001, column: 9, scope: !4291)
!4298 = !DILocation(line: 2002, column: 26, scope: !4232)
!4299 = !DILocation(line: 2002, column: 14, scope: !4232)
!4300 = !DILocation(line: 2002, column: 13, scope: !4232)
!4301 = !DILocation(line: 2004, column: 11, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2004, column: 11)
!4303 = !DILocation(line: 2004, column: 18, scope: !4302)
!4304 = !DILocation(line: 2004, column: 11, scope: !4232)
!4305 = !DILocation(line: 2005, column: 9, scope: !4306)
!4306 = distinct !DILexicalBlock(scope: !4307, file: !3, line: 2005, column: 9)
!4307 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 2005, column: 9)
!4308 = !DILocation(line: 2005, column: 9, scope: !4307)
!4309 = !DILocation(line: 2007, column: 23, scope: !4232)
!4310 = !DILocation(line: 2007, column: 39, scope: !4232)
!4311 = !DILocation(line: 2007, column: 38, scope: !4232)
!4312 = !DILocation(line: 2007, column: 57, scope: !4232)
!4313 = !DILocation(line: 2007, column: 63, scope: !4232)
!4314 = !DILocation(line: 2007, column: 62, scope: !4232)
!4315 = !DILocation(line: 2007, column: 55, scope: !4232)
!4316 = !DILocation(line: 2007, column: 71, scope: !4232)
!4317 = !DILocation(line: 2008, column: 9, scope: !4232)
!4318 = !DILocation(line: 2007, column: 77, scope: !4232)
!4319 = !DILocation(line: 2007, column: 13, scope: !4232)
!4320 = !DILocation(line: 2007, column: 12, scope: !4232)
!4321 = !DILocation(line: 2009, column: 13, scope: !4322)
!4322 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2009, column: 7)
!4323 = !DILocation(line: 2009, column: 12, scope: !4322)
!4324 = !DILocation(line: 2009, column: 17, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4322, file: !3, line: 2009, column: 7)
!4326 = !DILocation(line: 2009, column: 33, scope: !4325)
!4327 = !DILocation(line: 2009, column: 48, scope: !4325)
!4328 = !DILocation(line: 2009, column: 55, scope: !4325)
!4329 = !DILocation(line: 2009, column: 22, scope: !4325)
!4330 = !DILocation(line: 2009, column: 19, scope: !4325)
!4331 = !DILocation(line: 2009, column: 7, scope: !4322)
!4332 = !DILocation(line: 2010, column: 9, scope: !4325)
!4333 = !DILocation(line: 2010, column: 16, scope: !4325)
!4334 = !DILocation(line: 2010, column: 18, scope: !4325)
!4335 = !DILocation(line: 2009, column: 66, scope: !4325)
!4336 = !DILocation(line: 2009, column: 7, scope: !4325)
!4337 = distinct !{!4337, !4331, !4338}
!4338 = !DILocation(line: 2010, column: 29, scope: !4322)
!4339 = !DILocation(line: 2011, column: 7, scope: !4232)
!4340 = !DILocation(line: 2011, column: 15, scope: !4341)
!4341 = distinct !DILexicalBlock(scope: !4342, file: !3, line: 2011, column: 7)
!4342 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2011, column: 7)
!4343 = !DILocation(line: 2011, column: 30, scope: !4341)
!4344 = !DILocation(line: 2011, column: 45, scope: !4341)
!4345 = !DILocation(line: 2011, column: 52, scope: !4341)
!4346 = !DILocation(line: 2011, column: 19, scope: !4341)
!4347 = !DILocation(line: 2011, column: 17, scope: !4341)
!4348 = !DILocation(line: 2011, column: 7, scope: !4342)
!4349 = !DILocation(line: 2012, column: 69, scope: !4341)
!4350 = !DILocation(line: 2012, column: 68, scope: !4341)
!4351 = !DILocation(line: 2012, column: 63, scope: !4341)
!4352 = !DILocation(line: 2013, column: 29, scope: !4341)
!4353 = !DILocation(line: 2013, column: 28, scope: !4341)
!4354 = !DILocation(line: 2013, column: 30, scope: !4341)
!4355 = !DILocation(line: 2013, column: 38, scope: !4341)
!4356 = !DILocation(line: 2013, column: 37, scope: !4341)
!4357 = !DILocation(line: 2013, column: 56, scope: !4341)
!4358 = !DILocation(line: 2013, column: 62, scope: !4341)
!4359 = !DILocation(line: 2013, column: 61, scope: !4341)
!4360 = !DILocation(line: 2013, column: 54, scope: !4341)
!4361 = !DILocation(line: 2013, column: 70, scope: !4341)
!4362 = !DILocation(line: 2014, column: 11, scope: !4341)
!4363 = !DILocation(line: 2013, column: 76, scope: !4341)
!4364 = !DILocation(line: 2013, column: 12, scope: !4341)
!4365 = !DILocation(line: 2014, column: 23, scope: !4341)
!4366 = !DILocation(line: 2014, column: 22, scope: !4341)
!4367 = !DILocation(line: 2012, column: 75, scope: !4341)
!4368 = !DILocation(line: 2012, column: 34, scope: !4341)
!4369 = !DILocation(line: 2012, column: 19, scope: !4341)
!4370 = !DILocation(line: 2012, column: 9, scope: !4341)
!4371 = !DILocation(line: 2012, column: 16, scope: !4341)
!4372 = !DILocation(line: 2012, column: 18, scope: !4341)
!4373 = !DILocation(line: 2011, column: 63, scope: !4341)
!4374 = !DILocation(line: 2011, column: 7, scope: !4341)
!4375 = distinct !{!4375, !4348, !4376}
!4376 = !DILocation(line: 2014, column: 29, scope: !4342)
!4377 = !DILocation(line: 2015, column: 7, scope: !4232)
!4378 = !DILocation(line: 2015, column: 15, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 2015, column: 7)
!4380 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2015, column: 7)
!4381 = !DILocation(line: 2015, column: 17, scope: !4379)
!4382 = !DILocation(line: 2015, column: 7, scope: !4380)
!4383 = !DILocation(line: 2016, column: 9, scope: !4379)
!4384 = !DILocation(line: 2016, column: 16, scope: !4379)
!4385 = !DILocation(line: 2016, column: 18, scope: !4379)
!4386 = !DILocation(line: 2015, column: 39, scope: !4379)
!4387 = !DILocation(line: 2015, column: 7, scope: !4379)
!4388 = distinct !{!4388, !4382, !4389}
!4389 = !DILocation(line: 2016, column: 19, scope: !4380)
!4390 = !DILocation(line: 2017, column: 11, scope: !4391)
!4391 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2017, column: 11)
!4392 = !DILocation(line: 2017, column: 18, scope: !4391)
!4393 = !DILocation(line: 2017, column: 32, scope: !4391)
!4394 = !DILocation(line: 2017, column: 11, scope: !4232)
!4395 = !DILocation(line: 2019, column: 25, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 2019, column: 15)
!4397 = distinct !DILexicalBlock(scope: !4391, file: !3, line: 2018, column: 9)
!4398 = !DILocation(line: 2019, column: 15, scope: !4396)
!4399 = !DILocation(line: 2019, column: 32, scope: !4396)
!4400 = !DILocation(line: 2019, column: 15, scope: !4397)
!4401 = !DILocation(line: 2020, column: 13, scope: !4396)
!4402 = !DILocation(line: 2021, column: 36, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4397, file: !3, line: 2021, column: 15)
!4404 = !DILocation(line: 2021, column: 15, scope: !4403)
!4405 = !DILocation(line: 2021, column: 55, scope: !4403)
!4406 = !DILocation(line: 2021, column: 15, scope: !4397)
!4407 = !DILocation(line: 2022, column: 13, scope: !4403)
!4408 = !DILocation(line: 2023, column: 9, scope: !4397)
!4409 = !DILocation(line: 2024, column: 44, scope: !4232)
!4410 = !DILocation(line: 2024, column: 50, scope: !4232)
!4411 = !DILocation(line: 2024, column: 18, scope: !4232)
!4412 = !DILocation(line: 2024, column: 17, scope: !4232)
!4413 = !DILocation(line: 2029, column: 13, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2029, column: 7)
!4415 = !DILocation(line: 2029, column: 12, scope: !4414)
!4416 = !DILocation(line: 2029, column: 17, scope: !4417)
!4417 = distinct !DILexicalBlock(scope: !4414, file: !3, line: 2029, column: 7)
!4418 = !DILocation(line: 2029, column: 31, scope: !4417)
!4419 = !DILocation(line: 2029, column: 38, scope: !4417)
!4420 = !DILocation(line: 2029, column: 19, scope: !4417)
!4421 = !DILocation(line: 2029, column: 7, scope: !4414)
!4422 = !DILocalVariable(name: "sync", scope: !4423, file: !3, line: 2032, type: !6)
!4423 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 2030, column: 7)
!4424 = !DILocation(line: 2032, column: 11, scope: !4423)
!4425 = !DILocalVariable(name: "x", scope: !4423, file: !3, line: 2035, type: !170)
!4426 = !DILocation(line: 2035, column: 11, scope: !4423)
!4427 = !DILocalVariable(name: "q", scope: !4423, file: !3, line: 2038, type: !762)
!4428 = !DILocation(line: 2038, column: 21, scope: !4423)
!4429 = !DILocation(line: 2040, column: 13, scope: !4430)
!4430 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2040, column: 13)
!4431 = !DILocation(line: 2040, column: 20, scope: !4430)
!4432 = !DILocation(line: 2040, column: 13, scope: !4423)
!4433 = !DILocation(line: 2041, column: 11, scope: !4430)
!4434 = !DILocation(line: 2042, column: 39, scope: !4423)
!4435 = !DILocation(line: 2042, column: 52, scope: !4423)
!4436 = !DILocation(line: 2042, column: 54, scope: !4423)
!4437 = !DILocation(line: 2042, column: 61, scope: !4423)
!4438 = !DILocation(line: 2043, column: 11, scope: !4423)
!4439 = !DILocation(line: 2042, column: 11, scope: !4423)
!4440 = !DILocation(line: 2042, column: 10, scope: !4423)
!4441 = !DILocation(line: 2044, column: 13, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2044, column: 13)
!4443 = !DILocation(line: 2044, column: 15, scope: !4442)
!4444 = !DILocation(line: 2044, column: 13, scope: !4423)
!4445 = !DILocation(line: 2046, column: 19, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4442, file: !3, line: 2045, column: 11)
!4447 = !DILocation(line: 2047, column: 13, scope: !4446)
!4448 = !DILocation(line: 2049, column: 26, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2049, column: 9)
!4450 = !DILocation(line: 2049, column: 33, scope: !4449)
!4451 = !DILocation(line: 2049, column: 15, scope: !4449)
!4452 = !DILocation(line: 2049, column: 14, scope: !4449)
!4453 = !DILocation(line: 2049, column: 42, scope: !4454)
!4454 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 2049, column: 9)
!4455 = !DILocation(line: 2049, column: 44, scope: !4454)
!4456 = !DILocation(line: 2049, column: 9, scope: !4449)
!4457 = !DILocalVariable(name: "blue", scope: !4458, file: !3, line: 2052, type: !121)
!4458 = distinct !DILexicalBlock(scope: !4454, file: !3, line: 2050, column: 9)
!4459 = !DILocation(line: 2052, column: 13, scope: !4458)
!4460 = !DILocalVariable(name: "green", scope: !4458, file: !3, line: 2053, type: !121)
!4461 = !DILocation(line: 2053, column: 13, scope: !4458)
!4462 = !DILocalVariable(name: "red", scope: !4458, file: !3, line: 2054, type: !121)
!4463 = !DILocation(line: 2054, column: 13, scope: !4458)
!4464 = !DILocation(line: 2057, column: 13, scope: !4458)
!4465 = !DILocation(line: 2057, column: 38, scope: !4458)
!4466 = !DILocation(line: 2057, column: 20, scope: !4458)
!4467 = !DILocation(line: 2056, column: 47, scope: !4458)
!4468 = !DILocation(line: 2056, column: 30, scope: !4458)
!4469 = !DILocation(line: 2056, column: 15, scope: !4458)
!4470 = !DILocation(line: 2056, column: 14, scope: !4458)
!4471 = !DILocation(line: 2059, column: 13, scope: !4458)
!4472 = !DILocation(line: 2059, column: 38, scope: !4458)
!4473 = !DILocation(line: 2059, column: 20, scope: !4458)
!4474 = !DILocation(line: 2058, column: 49, scope: !4458)
!4475 = !DILocation(line: 2058, column: 32, scope: !4458)
!4476 = !DILocation(line: 2058, column: 17, scope: !4458)
!4477 = !DILocation(line: 2058, column: 16, scope: !4458)
!4478 = !DILocation(line: 2061, column: 13, scope: !4458)
!4479 = !DILocation(line: 2061, column: 38, scope: !4458)
!4480 = !DILocation(line: 2061, column: 20, scope: !4458)
!4481 = !DILocation(line: 2060, column: 48, scope: !4458)
!4482 = !DILocation(line: 2060, column: 31, scope: !4458)
!4483 = !DILocation(line: 2060, column: 16, scope: !4458)
!4484 = !DILocation(line: 2060, column: 15, scope: !4458)
!4485 = !DILocation(line: 2062, column: 11, scope: !4458)
!4486 = !DILocation(line: 2063, column: 11, scope: !4458)
!4487 = !DILocation(line: 2064, column: 11, scope: !4458)
!4488 = !DILocation(line: 2065, column: 12, scope: !4458)
!4489 = !DILocation(line: 2066, column: 9, scope: !4458)
!4490 = !DILocation(line: 2049, column: 51, scope: !4454)
!4491 = !DILocation(line: 2049, column: 9, scope: !4454)
!4492 = distinct !{!4492, !4456, !4493}
!4493 = !DILocation(line: 2066, column: 9, scope: !4449)
!4494 = !DILocation(line: 2067, column: 43, scope: !4423)
!4495 = !DILocation(line: 2067, column: 54, scope: !4423)
!4496 = !DILocation(line: 2067, column: 14, scope: !4423)
!4497 = !DILocation(line: 2067, column: 13, scope: !4423)
!4498 = !DILocation(line: 2068, column: 13, scope: !4499)
!4499 = distinct !DILexicalBlock(scope: !4423, file: !3, line: 2068, column: 13)
!4500 = !DILocation(line: 2068, column: 18, scope: !4499)
!4501 = !DILocation(line: 2068, column: 13, scope: !4423)
!4502 = !DILocation(line: 2069, column: 17, scope: !4499)
!4503 = !DILocation(line: 2069, column: 11, scope: !4499)
!4504 = !DILocation(line: 2070, column: 7, scope: !4423)
!4505 = !DILocation(line: 2029, column: 45, scope: !4417)
!4506 = !DILocation(line: 2029, column: 7, scope: !4417)
!4507 = distinct !{!4507, !4421, !4508}
!4508 = !DILocation(line: 2070, column: 7, scope: !4414)
!4509 = !DILocation(line: 2071, column: 35, scope: !4232)
!4510 = !DILocation(line: 2071, column: 18, scope: !4232)
!4511 = !DILocation(line: 2071, column: 17, scope: !4232)
!4512 = !DILocation(line: 2072, column: 49, scope: !4232)
!4513 = !DILocation(line: 2072, column: 26, scope: !4232)
!4514 = !DILocation(line: 2072, column: 14, scope: !4232)
!4515 = !DILocation(line: 2072, column: 13, scope: !4232)
!4516 = !DILocation(line: 2073, column: 30, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4232, file: !3, line: 2073, column: 11)
!4518 = !DILocation(line: 2073, column: 11, scope: !4517)
!4519 = !DILocation(line: 2073, column: 52, scope: !4517)
!4520 = !DILocation(line: 2073, column: 11, scope: !4232)
!4521 = !DILocation(line: 2074, column: 9, scope: !4517)
!4522 = !DILocation(line: 2075, column: 14, scope: !4232)
!4523 = !DILocation(line: 2075, column: 7, scope: !4232)
!4524 = !DILocation(line: 2083, column: 11, scope: !4525)
!4525 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2083, column: 11)
!4526 = distinct !DILexicalBlock(scope: !3722, file: !3, line: 2079, column: 5)
!4527 = !DILocation(line: 2083, column: 18, scope: !4525)
!4528 = !DILocation(line: 2083, column: 32, scope: !4525)
!4529 = !DILocation(line: 2083, column: 11, scope: !4526)
!4530 = !DILocation(line: 2085, column: 25, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 2085, column: 15)
!4532 = distinct !DILexicalBlock(scope: !4525, file: !3, line: 2084, column: 9)
!4533 = !DILocation(line: 2085, column: 15, scope: !4531)
!4534 = !DILocation(line: 2085, column: 32, scope: !4531)
!4535 = !DILocation(line: 2085, column: 15, scope: !4532)
!4536 = !DILocation(line: 2086, column: 13, scope: !4531)
!4537 = !DILocation(line: 2087, column: 36, scope: !4538)
!4538 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 2087, column: 15)
!4539 = !DILocation(line: 2087, column: 15, scope: !4538)
!4540 = !DILocation(line: 2087, column: 55, scope: !4538)
!4541 = !DILocation(line: 2087, column: 15, scope: !4532)
!4542 = !DILocation(line: 2088, column: 13, scope: !4538)
!4543 = !DILocation(line: 2089, column: 9, scope: !4532)
!4544 = !DILocation(line: 2090, column: 44, scope: !4526)
!4545 = !DILocation(line: 2090, column: 50, scope: !4526)
!4546 = !DILocation(line: 2090, column: 18, scope: !4526)
!4547 = !DILocation(line: 2090, column: 17, scope: !4526)
!4548 = !DILocation(line: 2095, column: 13, scope: !4549)
!4549 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2095, column: 7)
!4550 = !DILocation(line: 2095, column: 12, scope: !4549)
!4551 = !DILocation(line: 2095, column: 17, scope: !4552)
!4552 = distinct !DILexicalBlock(scope: !4549, file: !3, line: 2095, column: 7)
!4553 = !DILocation(line: 2095, column: 31, scope: !4552)
!4554 = !DILocation(line: 2095, column: 38, scope: !4552)
!4555 = !DILocation(line: 2095, column: 19, scope: !4552)
!4556 = !DILocation(line: 2095, column: 7, scope: !4549)
!4557 = !DILocalVariable(name: "sync", scope: !4558, file: !3, line: 2098, type: !6)
!4558 = distinct !DILexicalBlock(scope: !4552, file: !3, line: 2096, column: 7)
!4559 = !DILocation(line: 2098, column: 11, scope: !4558)
!4560 = !DILocalVariable(name: "x", scope: !4558, file: !3, line: 2101, type: !170)
!4561 = !DILocation(line: 2101, column: 11, scope: !4558)
!4562 = !DILocalVariable(name: "q", scope: !4558, file: !3, line: 2104, type: !762)
!4563 = !DILocation(line: 2104, column: 21, scope: !4558)
!4564 = !DILocation(line: 2106, column: 13, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 2106, column: 13)
!4566 = !DILocation(line: 2106, column: 20, scope: !4565)
!4567 = !DILocation(line: 2106, column: 13, scope: !4558)
!4568 = !DILocation(line: 2107, column: 11, scope: !4565)
!4569 = !DILocation(line: 2108, column: 39, scope: !4558)
!4570 = !DILocation(line: 2108, column: 52, scope: !4558)
!4571 = !DILocation(line: 2108, column: 54, scope: !4558)
!4572 = !DILocation(line: 2108, column: 61, scope: !4558)
!4573 = !DILocation(line: 2109, column: 11, scope: !4558)
!4574 = !DILocation(line: 2108, column: 11, scope: !4558)
!4575 = !DILocation(line: 2108, column: 10, scope: !4558)
!4576 = !DILocation(line: 2110, column: 13, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 2110, column: 13)
!4578 = !DILocation(line: 2110, column: 15, scope: !4577)
!4579 = !DILocation(line: 2110, column: 13, scope: !4558)
!4580 = !DILocation(line: 2112, column: 19, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 2111, column: 11)
!4582 = !DILocation(line: 2113, column: 13, scope: !4581)
!4583 = !DILocation(line: 2115, column: 26, scope: !4584)
!4584 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 2115, column: 9)
!4585 = !DILocation(line: 2115, column: 33, scope: !4584)
!4586 = !DILocation(line: 2115, column: 15, scope: !4584)
!4587 = !DILocation(line: 2115, column: 14, scope: !4584)
!4588 = !DILocation(line: 2115, column: 42, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4584, file: !3, line: 2115, column: 9)
!4590 = !DILocation(line: 2115, column: 44, scope: !4589)
!4591 = !DILocation(line: 2115, column: 9, scope: !4584)
!4592 = !DILocalVariable(name: "blue", scope: !4593, file: !3, line: 2118, type: !121)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !3, line: 2116, column: 9)
!4594 = !DILocation(line: 2118, column: 13, scope: !4593)
!4595 = !DILocalVariable(name: "green", scope: !4593, file: !3, line: 2119, type: !121)
!4596 = !DILocation(line: 2119, column: 13, scope: !4593)
!4597 = !DILocalVariable(name: "red", scope: !4593, file: !3, line: 2120, type: !121)
!4598 = !DILocation(line: 2120, column: 13, scope: !4593)
!4599 = !DILocation(line: 2122, column: 64, scope: !4593)
!4600 = !DILocation(line: 2122, column: 47, scope: !4593)
!4601 = !DILocation(line: 2122, column: 30, scope: !4593)
!4602 = !DILocation(line: 2122, column: 15, scope: !4593)
!4603 = !DILocation(line: 2122, column: 14, scope: !4593)
!4604 = !DILocation(line: 2124, column: 13, scope: !4593)
!4605 = !DILocation(line: 2123, column: 49, scope: !4593)
!4606 = !DILocation(line: 2123, column: 32, scope: !4593)
!4607 = !DILocation(line: 2123, column: 17, scope: !4593)
!4608 = !DILocation(line: 2123, column: 16, scope: !4593)
!4609 = !DILocation(line: 2126, column: 13, scope: !4593)
!4610 = !DILocation(line: 2125, column: 48, scope: !4593)
!4611 = !DILocation(line: 2125, column: 31, scope: !4593)
!4612 = !DILocation(line: 2125, column: 16, scope: !4593)
!4613 = !DILocation(line: 2125, column: 15, scope: !4593)
!4614 = !DILocation(line: 2127, column: 11, scope: !4593)
!4615 = !DILocation(line: 2128, column: 11, scope: !4593)
!4616 = !DILocation(line: 2129, column: 11, scope: !4593)
!4617 = !DILocation(line: 2130, column: 12, scope: !4593)
!4618 = !DILocation(line: 2131, column: 9, scope: !4593)
!4619 = !DILocation(line: 2115, column: 51, scope: !4589)
!4620 = !DILocation(line: 2115, column: 9, scope: !4589)
!4621 = distinct !{!4621, !4591, !4622}
!4622 = !DILocation(line: 2131, column: 9, scope: !4584)
!4623 = !DILocation(line: 2132, column: 43, scope: !4558)
!4624 = !DILocation(line: 2132, column: 54, scope: !4558)
!4625 = !DILocation(line: 2132, column: 14, scope: !4558)
!4626 = !DILocation(line: 2132, column: 13, scope: !4558)
!4627 = !DILocation(line: 2133, column: 13, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 2133, column: 13)
!4629 = !DILocation(line: 2133, column: 18, scope: !4628)
!4630 = !DILocation(line: 2133, column: 13, scope: !4558)
!4631 = !DILocation(line: 2134, column: 17, scope: !4628)
!4632 = !DILocation(line: 2134, column: 11, scope: !4628)
!4633 = !DILocation(line: 2135, column: 7, scope: !4558)
!4634 = !DILocation(line: 2095, column: 45, scope: !4552)
!4635 = !DILocation(line: 2095, column: 7, scope: !4552)
!4636 = distinct !{!4636, !4556, !4637}
!4637 = !DILocation(line: 2135, column: 7, scope: !4549)
!4638 = !DILocation(line: 2136, column: 35, scope: !4526)
!4639 = !DILocation(line: 2136, column: 18, scope: !4526)
!4640 = !DILocation(line: 2136, column: 17, scope: !4526)
!4641 = !DILocation(line: 2137, column: 30, scope: !4642)
!4642 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 2137, column: 11)
!4643 = !DILocation(line: 2137, column: 11, scope: !4642)
!4644 = !DILocation(line: 2137, column: 52, scope: !4642)
!4645 = !DILocation(line: 2137, column: 11, scope: !4526)
!4646 = !DILocation(line: 2138, column: 9, scope: !4642)
!4647 = !DILocation(line: 2139, column: 14, scope: !4526)
!4648 = !DILocation(line: 2139, column: 7, scope: !4526)
!4649 = !DILocation(line: 2142, column: 7, scope: !3722)
!4650 = !DILocation(line: 2147, column: 29, scope: !2)
!4651 = !DILocation(line: 2147, column: 9, scope: !2)
!4652 = !DILocation(line: 2147, column: 8, scope: !2)
!4653 = !DILocation(line: 2149, column: 29, scope: !2)
!4654 = !DILocation(line: 2149, column: 9, scope: !2)
!4655 = !DILocation(line: 2149, column: 8, scope: !2)
!4656 = !DILocation(line: 2151, column: 29, scope: !2)
!4657 = !DILocation(line: 2151, column: 9, scope: !2)
!4658 = !DILocation(line: 2151, column: 8, scope: !2)
!4659 = !DILocation(line: 2153, column: 8, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2153, column: 7)
!4661 = !DILocation(line: 2153, column: 14, scope: !4660)
!4662 = !DILocation(line: 2153, column: 43, scope: !4660)
!4663 = !DILocation(line: 2154, column: 8, scope: !4660)
!4664 = !DILocation(line: 2154, column: 14, scope: !4660)
!4665 = !DILocation(line: 2154, column: 43, scope: !4660)
!4666 = !DILocation(line: 2155, column: 8, scope: !4660)
!4667 = !DILocation(line: 2155, column: 14, scope: !4660)
!4668 = !DILocation(line: 2153, column: 7, scope: !2)
!4669 = !DILocation(line: 2157, column: 11, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2157, column: 11)
!4671 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 2156, column: 5)
!4672 = !DILocation(line: 2157, column: 17, scope: !4670)
!4673 = !DILocation(line: 2157, column: 11, scope: !4671)
!4674 = !DILocation(line: 2158, column: 58, scope: !4670)
!4675 = !DILocation(line: 2158, column: 35, scope: !4670)
!4676 = !DILocation(line: 2158, column: 15, scope: !4670)
!4677 = !DILocation(line: 2158, column: 14, scope: !4670)
!4678 = !DILocation(line: 2158, column: 9, scope: !4670)
!4679 = !DILocation(line: 2159, column: 11, scope: !4680)
!4680 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2159, column: 11)
!4681 = !DILocation(line: 2159, column: 17, scope: !4680)
!4682 = !DILocation(line: 2159, column: 11, scope: !4671)
!4683 = !DILocation(line: 2160, column: 58, scope: !4680)
!4684 = !DILocation(line: 2160, column: 35, scope: !4680)
!4685 = !DILocation(line: 2160, column: 15, scope: !4680)
!4686 = !DILocation(line: 2160, column: 14, scope: !4680)
!4687 = !DILocation(line: 2160, column: 9, scope: !4680)
!4688 = !DILocation(line: 2161, column: 11, scope: !4689)
!4689 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2161, column: 11)
!4690 = !DILocation(line: 2161, column: 17, scope: !4689)
!4691 = !DILocation(line: 2161, column: 11, scope: !4671)
!4692 = !DILocation(line: 2162, column: 58, scope: !4689)
!4693 = !DILocation(line: 2162, column: 35, scope: !4689)
!4694 = !DILocation(line: 2162, column: 15, scope: !4689)
!4695 = !DILocation(line: 2162, column: 14, scope: !4689)
!4696 = !DILocation(line: 2162, column: 9, scope: !4689)
!4697 = !DILocation(line: 2163, column: 7, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 2163, column: 7)
!4699 = distinct !DILexicalBlock(scope: !4671, file: !3, line: 2163, column: 7)
!4700 = !DILocation(line: 2163, column: 7, scope: !4699)
!4701 = !DILocation(line: 2166, column: 11, scope: !2)
!4702 = !DILocation(line: 2166, column: 3, scope: !2)
!4703 = !DILocation(line: 2184, column: 13, scope: !4704)
!4704 = distinct !DILexicalBlock(scope: !4705, file: !3, line: 2184, column: 7)
!4705 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2169, column: 5)
!4706 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2167, column: 3)
!4707 = !DILocation(line: 2184, column: 12, scope: !4704)
!4708 = !DILocation(line: 2184, column: 17, scope: !4709)
!4709 = distinct !DILexicalBlock(scope: !4704, file: !3, line: 2184, column: 7)
!4710 = !DILocation(line: 2184, column: 19, scope: !4709)
!4711 = !DILocation(line: 2184, column: 7, scope: !4704)
!4712 = !DILocation(line: 2186, column: 34, scope: !4713)
!4713 = distinct !DILexicalBlock(scope: !4709, file: !3, line: 2185, column: 7)
!4714 = !DILocation(line: 2186, column: 25, scope: !4713)
!4715 = !DILocation(line: 2186, column: 24, scope: !4713)
!4716 = !DILocation(line: 2186, column: 20, scope: !4713)
!4717 = !DILocation(line: 2186, column: 9, scope: !4713)
!4718 = !DILocation(line: 2186, column: 15, scope: !4713)
!4719 = !DILocation(line: 2186, column: 18, scope: !4713)
!4720 = !DILocation(line: 2186, column: 19, scope: !4713)
!4721 = !DILocation(line: 2187, column: 47, scope: !4713)
!4722 = !DILocation(line: 2187, column: 38, scope: !4713)
!4723 = !DILocation(line: 2187, column: 37, scope: !4713)
!4724 = !DILocation(line: 2187, column: 48, scope: !4713)
!4725 = !DILocation(line: 2187, column: 32, scope: !4713)
!4726 = !DILocation(line: 2187, column: 20, scope: !4713)
!4727 = !DILocation(line: 2187, column: 9, scope: !4713)
!4728 = !DILocation(line: 2187, column: 15, scope: !4713)
!4729 = !DILocation(line: 2187, column: 18, scope: !4713)
!4730 = !DILocation(line: 2187, column: 19, scope: !4713)
!4731 = !DILocation(line: 2188, column: 48, scope: !4713)
!4732 = !DILocation(line: 2188, column: 39, scope: !4713)
!4733 = !DILocation(line: 2188, column: 38, scope: !4713)
!4734 = !DILocation(line: 2188, column: 49, scope: !4713)
!4735 = !DILocation(line: 2188, column: 33, scope: !4713)
!4736 = !DILocation(line: 2188, column: 20, scope: !4713)
!4737 = !DILocation(line: 2188, column: 9, scope: !4713)
!4738 = !DILocation(line: 2188, column: 15, scope: !4713)
!4739 = !DILocation(line: 2188, column: 18, scope: !4713)
!4740 = !DILocation(line: 2188, column: 19, scope: !4713)
!4741 = !DILocation(line: 2189, column: 34, scope: !4713)
!4742 = !DILocation(line: 2189, column: 25, scope: !4713)
!4743 = !DILocation(line: 2189, column: 24, scope: !4713)
!4744 = !DILocation(line: 2189, column: 20, scope: !4713)
!4745 = !DILocation(line: 2189, column: 9, scope: !4713)
!4746 = !DILocation(line: 2189, column: 15, scope: !4713)
!4747 = !DILocation(line: 2189, column: 18, scope: !4713)
!4748 = !DILocation(line: 2189, column: 19, scope: !4713)
!4749 = !DILocation(line: 2190, column: 47, scope: !4713)
!4750 = !DILocation(line: 2190, column: 38, scope: !4713)
!4751 = !DILocation(line: 2190, column: 37, scope: !4713)
!4752 = !DILocation(line: 2190, column: 48, scope: !4713)
!4753 = !DILocation(line: 2190, column: 32, scope: !4713)
!4754 = !DILocation(line: 2190, column: 20, scope: !4713)
!4755 = !DILocation(line: 2190, column: 9, scope: !4713)
!4756 = !DILocation(line: 2190, column: 15, scope: !4713)
!4757 = !DILocation(line: 2190, column: 18, scope: !4713)
!4758 = !DILocation(line: 2190, column: 19, scope: !4713)
!4759 = !DILocation(line: 2191, column: 47, scope: !4713)
!4760 = !DILocation(line: 2191, column: 38, scope: !4713)
!4761 = !DILocation(line: 2191, column: 37, scope: !4713)
!4762 = !DILocation(line: 2191, column: 48, scope: !4713)
!4763 = !DILocation(line: 2191, column: 32, scope: !4713)
!4764 = !DILocation(line: 2191, column: 20, scope: !4713)
!4765 = !DILocation(line: 2191, column: 9, scope: !4713)
!4766 = !DILocation(line: 2191, column: 15, scope: !4713)
!4767 = !DILocation(line: 2191, column: 18, scope: !4713)
!4768 = !DILocation(line: 2191, column: 19, scope: !4713)
!4769 = !DILocation(line: 2192, column: 34, scope: !4713)
!4770 = !DILocation(line: 2192, column: 25, scope: !4713)
!4771 = !DILocation(line: 2192, column: 24, scope: !4713)
!4772 = !DILocation(line: 2192, column: 20, scope: !4713)
!4773 = !DILocation(line: 2192, column: 9, scope: !4713)
!4774 = !DILocation(line: 2192, column: 15, scope: !4713)
!4775 = !DILocation(line: 2192, column: 18, scope: !4713)
!4776 = !DILocation(line: 2192, column: 19, scope: !4713)
!4777 = !DILocation(line: 2193, column: 48, scope: !4713)
!4778 = !DILocation(line: 2193, column: 39, scope: !4713)
!4779 = !DILocation(line: 2193, column: 38, scope: !4713)
!4780 = !DILocation(line: 2193, column: 49, scope: !4713)
!4781 = !DILocation(line: 2193, column: 33, scope: !4713)
!4782 = !DILocation(line: 2193, column: 20, scope: !4713)
!4783 = !DILocation(line: 2193, column: 9, scope: !4713)
!4784 = !DILocation(line: 2193, column: 15, scope: !4713)
!4785 = !DILocation(line: 2193, column: 18, scope: !4713)
!4786 = !DILocation(line: 2193, column: 19, scope: !4713)
!4787 = !DILocation(line: 2194, column: 48, scope: !4713)
!4788 = !DILocation(line: 2194, column: 39, scope: !4713)
!4789 = !DILocation(line: 2194, column: 38, scope: !4713)
!4790 = !DILocation(line: 2194, column: 49, scope: !4713)
!4791 = !DILocation(line: 2194, column: 33, scope: !4713)
!4792 = !DILocation(line: 2194, column: 20, scope: !4713)
!4793 = !DILocation(line: 2194, column: 9, scope: !4713)
!4794 = !DILocation(line: 2194, column: 15, scope: !4713)
!4795 = !DILocation(line: 2194, column: 18, scope: !4713)
!4796 = !DILocation(line: 2194, column: 19, scope: !4713)
!4797 = !DILocation(line: 2195, column: 7, scope: !4713)
!4798 = !DILocation(line: 2184, column: 41, scope: !4709)
!4799 = !DILocation(line: 2184, column: 7, scope: !4709)
!4800 = distinct !{!4800, !4711, !4801}
!4801 = !DILocation(line: 2195, column: 7, scope: !4704)
!4802 = !DILocation(line: 2196, column: 7, scope: !4705)
!4803 = !DILocation(line: 2214, column: 13, scope: !4804)
!4804 = distinct !DILexicalBlock(scope: !4805, file: !3, line: 2214, column: 7)
!4805 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2199, column: 5)
!4806 = !DILocation(line: 2214, column: 12, scope: !4804)
!4807 = !DILocation(line: 2214, column: 17, scope: !4808)
!4808 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2214, column: 7)
!4809 = !DILocation(line: 2214, column: 19, scope: !4808)
!4810 = !DILocation(line: 2214, column: 7, scope: !4804)
!4811 = !DILocation(line: 2216, column: 52, scope: !4812)
!4812 = distinct !DILexicalBlock(scope: !4808, file: !3, line: 2215, column: 7)
!4813 = !DILocation(line: 2216, column: 43, scope: !4812)
!4814 = !DILocation(line: 2216, column: 42, scope: !4812)
!4815 = !DILocation(line: 2216, column: 20, scope: !4812)
!4816 = !DILocation(line: 2216, column: 9, scope: !4812)
!4817 = !DILocation(line: 2216, column: 15, scope: !4812)
!4818 = !DILocation(line: 2216, column: 18, scope: !4812)
!4819 = !DILocation(line: 2216, column: 19, scope: !4812)
!4820 = !DILocation(line: 2217, column: 65, scope: !4812)
!4821 = !DILocation(line: 2217, column: 56, scope: !4812)
!4822 = !DILocation(line: 2217, column: 55, scope: !4812)
!4823 = !DILocation(line: 2217, column: 66, scope: !4812)
!4824 = !DILocation(line: 2217, column: 49, scope: !4812)
!4825 = !DILocation(line: 2217, column: 20, scope: !4812)
!4826 = !DILocation(line: 2217, column: 9, scope: !4812)
!4827 = !DILocation(line: 2217, column: 15, scope: !4812)
!4828 = !DILocation(line: 2217, column: 18, scope: !4812)
!4829 = !DILocation(line: 2217, column: 19, scope: !4812)
!4830 = !DILocation(line: 2218, column: 61, scope: !4812)
!4831 = !DILocation(line: 2218, column: 52, scope: !4812)
!4832 = !DILocation(line: 2218, column: 51, scope: !4812)
!4833 = !DILocation(line: 2218, column: 62, scope: !4812)
!4834 = !DILocation(line: 2218, column: 45, scope: !4812)
!4835 = !DILocation(line: 2218, column: 20, scope: !4812)
!4836 = !DILocation(line: 2218, column: 9, scope: !4812)
!4837 = !DILocation(line: 2218, column: 15, scope: !4812)
!4838 = !DILocation(line: 2218, column: 18, scope: !4812)
!4839 = !DILocation(line: 2218, column: 19, scope: !4812)
!4840 = !DILocation(line: 2219, column: 52, scope: !4812)
!4841 = !DILocation(line: 2219, column: 43, scope: !4812)
!4842 = !DILocation(line: 2219, column: 42, scope: !4812)
!4843 = !DILocation(line: 2219, column: 20, scope: !4812)
!4844 = !DILocation(line: 2219, column: 9, scope: !4812)
!4845 = !DILocation(line: 2219, column: 15, scope: !4812)
!4846 = !DILocation(line: 2219, column: 18, scope: !4812)
!4847 = !DILocation(line: 2219, column: 19, scope: !4812)
!4848 = !DILocation(line: 2220, column: 65, scope: !4812)
!4849 = !DILocation(line: 2220, column: 56, scope: !4812)
!4850 = !DILocation(line: 2220, column: 55, scope: !4812)
!4851 = !DILocation(line: 2220, column: 66, scope: !4812)
!4852 = !DILocation(line: 2220, column: 49, scope: !4812)
!4853 = !DILocation(line: 2220, column: 20, scope: !4812)
!4854 = !DILocation(line: 2220, column: 9, scope: !4812)
!4855 = !DILocation(line: 2220, column: 15, scope: !4812)
!4856 = !DILocation(line: 2220, column: 18, scope: !4812)
!4857 = !DILocation(line: 2220, column: 19, scope: !4812)
!4858 = !DILocation(line: 2221, column: 65, scope: !4812)
!4859 = !DILocation(line: 2221, column: 56, scope: !4812)
!4860 = !DILocation(line: 2221, column: 55, scope: !4812)
!4861 = !DILocation(line: 2221, column: 66, scope: !4812)
!4862 = !DILocation(line: 2221, column: 49, scope: !4812)
!4863 = !DILocation(line: 2221, column: 20, scope: !4812)
!4864 = !DILocation(line: 2221, column: 9, scope: !4812)
!4865 = !DILocation(line: 2221, column: 15, scope: !4812)
!4866 = !DILocation(line: 2221, column: 18, scope: !4812)
!4867 = !DILocation(line: 2221, column: 19, scope: !4812)
!4868 = !DILocation(line: 2222, column: 52, scope: !4812)
!4869 = !DILocation(line: 2222, column: 43, scope: !4812)
!4870 = !DILocation(line: 2222, column: 42, scope: !4812)
!4871 = !DILocation(line: 2222, column: 20, scope: !4812)
!4872 = !DILocation(line: 2222, column: 9, scope: !4812)
!4873 = !DILocation(line: 2222, column: 15, scope: !4812)
!4874 = !DILocation(line: 2222, column: 18, scope: !4812)
!4875 = !DILocation(line: 2222, column: 19, scope: !4812)
!4876 = !DILocation(line: 2223, column: 62, scope: !4812)
!4877 = !DILocation(line: 2223, column: 53, scope: !4812)
!4878 = !DILocation(line: 2223, column: 52, scope: !4812)
!4879 = !DILocation(line: 2223, column: 63, scope: !4812)
!4880 = !DILocation(line: 2223, column: 46, scope: !4812)
!4881 = !DILocation(line: 2223, column: 20, scope: !4812)
!4882 = !DILocation(line: 2223, column: 9, scope: !4812)
!4883 = !DILocation(line: 2223, column: 15, scope: !4812)
!4884 = !DILocation(line: 2223, column: 18, scope: !4812)
!4885 = !DILocation(line: 2223, column: 19, scope: !4812)
!4886 = !DILocation(line: 2224, column: 62, scope: !4812)
!4887 = !DILocation(line: 2224, column: 53, scope: !4812)
!4888 = !DILocation(line: 2224, column: 52, scope: !4812)
!4889 = !DILocation(line: 2224, column: 63, scope: !4812)
!4890 = !DILocation(line: 2224, column: 46, scope: !4812)
!4891 = !DILocation(line: 2224, column: 20, scope: !4812)
!4892 = !DILocation(line: 2224, column: 9, scope: !4812)
!4893 = !DILocation(line: 2224, column: 15, scope: !4812)
!4894 = !DILocation(line: 2224, column: 18, scope: !4812)
!4895 = !DILocation(line: 2224, column: 19, scope: !4812)
!4896 = !DILocation(line: 2225, column: 7, scope: !4812)
!4897 = !DILocation(line: 2214, column: 41, scope: !4808)
!4898 = !DILocation(line: 2214, column: 7, scope: !4808)
!4899 = distinct !{!4899, !4810, !4900}
!4900 = !DILocation(line: 2225, column: 7, scope: !4804)
!4901 = !DILocation(line: 2226, column: 7, scope: !4805)
!4902 = !DILocation(line: 2244, column: 13, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 2244, column: 7)
!4904 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2229, column: 5)
!4905 = !DILocation(line: 2244, column: 12, scope: !4903)
!4906 = !DILocation(line: 2244, column: 17, scope: !4907)
!4907 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 2244, column: 7)
!4908 = !DILocation(line: 2244, column: 19, scope: !4907)
!4909 = !DILocation(line: 2244, column: 7, scope: !4903)
!4910 = !DILocation(line: 2246, column: 51, scope: !4911)
!4911 = distinct !DILexicalBlock(scope: !4907, file: !3, line: 2245, column: 7)
!4912 = !DILocation(line: 2246, column: 42, scope: !4911)
!4913 = !DILocation(line: 2246, column: 41, scope: !4911)
!4914 = !DILocation(line: 2246, column: 20, scope: !4911)
!4915 = !DILocation(line: 2246, column: 9, scope: !4911)
!4916 = !DILocation(line: 2246, column: 15, scope: !4911)
!4917 = !DILocation(line: 2246, column: 18, scope: !4911)
!4918 = !DILocation(line: 2246, column: 19, scope: !4911)
!4919 = !DILocation(line: 2247, column: 65, scope: !4911)
!4920 = !DILocation(line: 2247, column: 56, scope: !4911)
!4921 = !DILocation(line: 2247, column: 55, scope: !4911)
!4922 = !DILocation(line: 2247, column: 66, scope: !4911)
!4923 = !DILocation(line: 2247, column: 50, scope: !4911)
!4924 = !DILocation(line: 2247, column: 20, scope: !4911)
!4925 = !DILocation(line: 2247, column: 9, scope: !4911)
!4926 = !DILocation(line: 2247, column: 15, scope: !4911)
!4927 = !DILocation(line: 2247, column: 18, scope: !4911)
!4928 = !DILocation(line: 2247, column: 19, scope: !4911)
!4929 = !DILocation(line: 2248, column: 65, scope: !4911)
!4930 = !DILocation(line: 2248, column: 56, scope: !4911)
!4931 = !DILocation(line: 2248, column: 55, scope: !4911)
!4932 = !DILocation(line: 2248, column: 66, scope: !4911)
!4933 = !DILocation(line: 2248, column: 50, scope: !4911)
!4934 = !DILocation(line: 2248, column: 20, scope: !4911)
!4935 = !DILocation(line: 2248, column: 9, scope: !4911)
!4936 = !DILocation(line: 2248, column: 15, scope: !4911)
!4937 = !DILocation(line: 2248, column: 18, scope: !4911)
!4938 = !DILocation(line: 2248, column: 19, scope: !4911)
!4939 = !DILocation(line: 2249, column: 51, scope: !4911)
!4940 = !DILocation(line: 2249, column: 42, scope: !4911)
!4941 = !DILocation(line: 2249, column: 41, scope: !4911)
!4942 = !DILocation(line: 2249, column: 20, scope: !4911)
!4943 = !DILocation(line: 2249, column: 9, scope: !4911)
!4944 = !DILocation(line: 2249, column: 15, scope: !4911)
!4945 = !DILocation(line: 2249, column: 18, scope: !4911)
!4946 = !DILocation(line: 2249, column: 19, scope: !4911)
!4947 = !DILocation(line: 2250, column: 68, scope: !4911)
!4948 = !DILocation(line: 2250, column: 59, scope: !4911)
!4949 = !DILocation(line: 2250, column: 58, scope: !4911)
!4950 = !DILocation(line: 2250, column: 69, scope: !4911)
!4951 = !DILocation(line: 2250, column: 53, scope: !4911)
!4952 = !DILocation(line: 2250, column: 20, scope: !4911)
!4953 = !DILocation(line: 2250, column: 9, scope: !4911)
!4954 = !DILocation(line: 2250, column: 15, scope: !4911)
!4955 = !DILocation(line: 2250, column: 18, scope: !4911)
!4956 = !DILocation(line: 2250, column: 19, scope: !4911)
!4957 = !DILocation(line: 2251, column: 68, scope: !4911)
!4958 = !DILocation(line: 2251, column: 59, scope: !4911)
!4959 = !DILocation(line: 2251, column: 58, scope: !4911)
!4960 = !DILocation(line: 2251, column: 69, scope: !4911)
!4961 = !DILocation(line: 2251, column: 53, scope: !4911)
!4962 = !DILocation(line: 2251, column: 20, scope: !4911)
!4963 = !DILocation(line: 2251, column: 9, scope: !4911)
!4964 = !DILocation(line: 2251, column: 15, scope: !4911)
!4965 = !DILocation(line: 2251, column: 18, scope: !4911)
!4966 = !DILocation(line: 2251, column: 19, scope: !4911)
!4967 = !DILocation(line: 2252, column: 51, scope: !4911)
!4968 = !DILocation(line: 2252, column: 42, scope: !4911)
!4969 = !DILocation(line: 2252, column: 41, scope: !4911)
!4970 = !DILocation(line: 2252, column: 20, scope: !4911)
!4971 = !DILocation(line: 2252, column: 9, scope: !4911)
!4972 = !DILocation(line: 2252, column: 15, scope: !4911)
!4973 = !DILocation(line: 2252, column: 18, scope: !4911)
!4974 = !DILocation(line: 2252, column: 19, scope: !4911)
!4975 = !DILocation(line: 2253, column: 65, scope: !4911)
!4976 = !DILocation(line: 2253, column: 56, scope: !4911)
!4977 = !DILocation(line: 2253, column: 55, scope: !4911)
!4978 = !DILocation(line: 2253, column: 66, scope: !4911)
!4979 = !DILocation(line: 2253, column: 50, scope: !4911)
!4980 = !DILocation(line: 2253, column: 20, scope: !4911)
!4981 = !DILocation(line: 2253, column: 9, scope: !4911)
!4982 = !DILocation(line: 2253, column: 15, scope: !4911)
!4983 = !DILocation(line: 2253, column: 18, scope: !4911)
!4984 = !DILocation(line: 2253, column: 19, scope: !4911)
!4985 = !DILocation(line: 2254, column: 65, scope: !4911)
!4986 = !DILocation(line: 2254, column: 56, scope: !4911)
!4987 = !DILocation(line: 2254, column: 55, scope: !4911)
!4988 = !DILocation(line: 2254, column: 66, scope: !4911)
!4989 = !DILocation(line: 2254, column: 50, scope: !4911)
!4990 = !DILocation(line: 2254, column: 20, scope: !4911)
!4991 = !DILocation(line: 2254, column: 9, scope: !4911)
!4992 = !DILocation(line: 2254, column: 15, scope: !4911)
!4993 = !DILocation(line: 2254, column: 18, scope: !4911)
!4994 = !DILocation(line: 2254, column: 19, scope: !4911)
!4995 = !DILocation(line: 2255, column: 7, scope: !4911)
!4996 = !DILocation(line: 2244, column: 41, scope: !4907)
!4997 = !DILocation(line: 2244, column: 7, scope: !4907)
!4998 = distinct !{!4998, !4909, !4999}
!4999 = !DILocation(line: 2255, column: 7, scope: !4903)
!5000 = !DILocation(line: 2256, column: 7, scope: !4904)
!5001 = !DILocation(line: 2273, column: 13, scope: !5002)
!5002 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2273, column: 7)
!5003 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2259, column: 5)
!5004 = !DILocation(line: 2273, column: 12, scope: !5002)
!5005 = !DILocation(line: 2273, column: 17, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5002, file: !3, line: 2273, column: 7)
!5007 = !DILocation(line: 2273, column: 19, scope: !5006)
!5008 = !DILocation(line: 2273, column: 7, scope: !5002)
!5009 = !DILocation(line: 2275, column: 57, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !5006, file: !3, line: 2274, column: 7)
!5011 = !DILocation(line: 2275, column: 48, scope: !5010)
!5012 = !DILocation(line: 2275, column: 47, scope: !5010)
!5013 = !DILocation(line: 2275, column: 20, scope: !5010)
!5014 = !DILocation(line: 2275, column: 9, scope: !5010)
!5015 = !DILocation(line: 2275, column: 15, scope: !5010)
!5016 = !DILocation(line: 2275, column: 18, scope: !5010)
!5017 = !DILocation(line: 2275, column: 19, scope: !5010)
!5018 = !DILocation(line: 2276, column: 9, scope: !5010)
!5019 = !DILocation(line: 2276, column: 15, scope: !5010)
!5020 = !DILocation(line: 2276, column: 18, scope: !5010)
!5021 = !DILocation(line: 2276, column: 19, scope: !5010)
!5022 = !DILocation(line: 2277, column: 58, scope: !5010)
!5023 = !DILocation(line: 2277, column: 49, scope: !5010)
!5024 = !DILocation(line: 2278, column: 29, scope: !5010)
!5025 = !DILocation(line: 2278, column: 11, scope: !5010)
!5026 = !DILocation(line: 2277, column: 60, scope: !5010)
!5027 = !DILocation(line: 2277, column: 59, scope: !5010)
!5028 = !DILocation(line: 2277, column: 47, scope: !5010)
!5029 = !DILocation(line: 2277, column: 20, scope: !5010)
!5030 = !DILocation(line: 2277, column: 9, scope: !5010)
!5031 = !DILocation(line: 2277, column: 15, scope: !5010)
!5032 = !DILocation(line: 2277, column: 18, scope: !5010)
!5033 = !DILocation(line: 2277, column: 19, scope: !5010)
!5034 = !DILocation(line: 2279, column: 57, scope: !5010)
!5035 = !DILocation(line: 2279, column: 48, scope: !5010)
!5036 = !DILocation(line: 2279, column: 47, scope: !5010)
!5037 = !DILocation(line: 2279, column: 20, scope: !5010)
!5038 = !DILocation(line: 2279, column: 9, scope: !5010)
!5039 = !DILocation(line: 2279, column: 15, scope: !5010)
!5040 = !DILocation(line: 2279, column: 18, scope: !5010)
!5041 = !DILocation(line: 2279, column: 19, scope: !5010)
!5042 = !DILocation(line: 2280, column: 61, scope: !5010)
!5043 = !DILocation(line: 2280, column: 52, scope: !5010)
!5044 = !DILocation(line: 2281, column: 29, scope: !5010)
!5045 = !DILocation(line: 2281, column: 11, scope: !5010)
!5046 = !DILocation(line: 2280, column: 63, scope: !5010)
!5047 = !DILocation(line: 2280, column: 62, scope: !5010)
!5048 = !DILocation(line: 2280, column: 50, scope: !5010)
!5049 = !DILocation(line: 2280, column: 20, scope: !5010)
!5050 = !DILocation(line: 2280, column: 9, scope: !5010)
!5051 = !DILocation(line: 2280, column: 15, scope: !5010)
!5052 = !DILocation(line: 2280, column: 18, scope: !5010)
!5053 = !DILocation(line: 2280, column: 19, scope: !5010)
!5054 = !DILocation(line: 2282, column: 61, scope: !5010)
!5055 = !DILocation(line: 2282, column: 52, scope: !5010)
!5056 = !DILocation(line: 2283, column: 29, scope: !5010)
!5057 = !DILocation(line: 2283, column: 11, scope: !5010)
!5058 = !DILocation(line: 2282, column: 63, scope: !5010)
!5059 = !DILocation(line: 2282, column: 62, scope: !5010)
!5060 = !DILocation(line: 2282, column: 50, scope: !5010)
!5061 = !DILocation(line: 2282, column: 20, scope: !5010)
!5062 = !DILocation(line: 2282, column: 9, scope: !5010)
!5063 = !DILocation(line: 2282, column: 15, scope: !5010)
!5064 = !DILocation(line: 2282, column: 18, scope: !5010)
!5065 = !DILocation(line: 2282, column: 19, scope: !5010)
!5066 = !DILocation(line: 2284, column: 57, scope: !5010)
!5067 = !DILocation(line: 2284, column: 48, scope: !5010)
!5068 = !DILocation(line: 2284, column: 47, scope: !5010)
!5069 = !DILocation(line: 2284, column: 20, scope: !5010)
!5070 = !DILocation(line: 2284, column: 9, scope: !5010)
!5071 = !DILocation(line: 2284, column: 15, scope: !5010)
!5072 = !DILocation(line: 2284, column: 18, scope: !5010)
!5073 = !DILocation(line: 2284, column: 19, scope: !5010)
!5074 = !DILocation(line: 2285, column: 58, scope: !5010)
!5075 = !DILocation(line: 2285, column: 49, scope: !5010)
!5076 = !DILocation(line: 2286, column: 29, scope: !5010)
!5077 = !DILocation(line: 2286, column: 11, scope: !5010)
!5078 = !DILocation(line: 2285, column: 60, scope: !5010)
!5079 = !DILocation(line: 2285, column: 59, scope: !5010)
!5080 = !DILocation(line: 2285, column: 47, scope: !5010)
!5081 = !DILocation(line: 2285, column: 20, scope: !5010)
!5082 = !DILocation(line: 2285, column: 9, scope: !5010)
!5083 = !DILocation(line: 2285, column: 15, scope: !5010)
!5084 = !DILocation(line: 2285, column: 18, scope: !5010)
!5085 = !DILocation(line: 2285, column: 19, scope: !5010)
!5086 = !DILocation(line: 2287, column: 9, scope: !5010)
!5087 = !DILocation(line: 2287, column: 15, scope: !5010)
!5088 = !DILocation(line: 2287, column: 18, scope: !5010)
!5089 = !DILocation(line: 2287, column: 19, scope: !5010)
!5090 = !DILocation(line: 2288, column: 7, scope: !5010)
!5091 = !DILocation(line: 2273, column: 41, scope: !5006)
!5092 = !DILocation(line: 2273, column: 7, scope: !5006)
!5093 = distinct !{!5093, !5008, !5094}
!5094 = !DILocation(line: 2288, column: 7, scope: !5002)
!5095 = !DILocation(line: 2289, column: 7, scope: !5003)
!5096 = !DILocation(line: 2300, column: 13, scope: !5097)
!5097 = distinct !DILexicalBlock(scope: !5098, file: !3, line: 2300, column: 7)
!5098 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 2292, column: 5)
!5099 = !DILocation(line: 2300, column: 12, scope: !5097)
!5100 = !DILocation(line: 2300, column: 17, scope: !5101)
!5101 = distinct !DILexicalBlock(scope: !5097, file: !3, line: 2300, column: 7)
!5102 = !DILocation(line: 2300, column: 19, scope: !5101)
!5103 = !DILocation(line: 2300, column: 7, scope: !5097)
!5104 = !DILocation(line: 2302, column: 51, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5101, file: !3, line: 2301, column: 7)
!5106 = !DILocation(line: 2302, column: 42, scope: !5105)
!5107 = !DILocation(line: 2302, column: 41, scope: !5105)
!5108 = !DILocation(line: 2302, column: 20, scope: !5105)
!5109 = !DILocation(line: 2302, column: 9, scope: !5105)
!5110 = !DILocation(line: 2302, column: 15, scope: !5105)
!5111 = !DILocation(line: 2302, column: 18, scope: !5105)
!5112 = !DILocation(line: 2302, column: 19, scope: !5105)
!5113 = !DILocation(line: 2303, column: 9, scope: !5105)
!5114 = !DILocation(line: 2303, column: 15, scope: !5105)
!5115 = !DILocation(line: 2303, column: 18, scope: !5105)
!5116 = !DILocation(line: 2303, column: 19, scope: !5105)
!5117 = !DILocation(line: 2304, column: 9, scope: !5105)
!5118 = !DILocation(line: 2304, column: 15, scope: !5105)
!5119 = !DILocation(line: 2304, column: 18, scope: !5105)
!5120 = !DILocation(line: 2304, column: 19, scope: !5105)
!5121 = !DILocation(line: 2305, column: 9, scope: !5105)
!5122 = !DILocation(line: 2305, column: 15, scope: !5105)
!5123 = !DILocation(line: 2305, column: 18, scope: !5105)
!5124 = !DILocation(line: 2305, column: 19, scope: !5105)
!5125 = !DILocation(line: 2306, column: 51, scope: !5105)
!5126 = !DILocation(line: 2306, column: 42, scope: !5105)
!5127 = !DILocation(line: 2306, column: 41, scope: !5105)
!5128 = !DILocation(line: 2306, column: 20, scope: !5105)
!5129 = !DILocation(line: 2306, column: 9, scope: !5105)
!5130 = !DILocation(line: 2306, column: 15, scope: !5105)
!5131 = !DILocation(line: 2306, column: 18, scope: !5105)
!5132 = !DILocation(line: 2306, column: 19, scope: !5105)
!5133 = !DILocation(line: 2307, column: 9, scope: !5105)
!5134 = !DILocation(line: 2307, column: 15, scope: !5105)
!5135 = !DILocation(line: 2307, column: 18, scope: !5105)
!5136 = !DILocation(line: 2307, column: 19, scope: !5105)
!5137 = !DILocation(line: 2308, column: 9, scope: !5105)
!5138 = !DILocation(line: 2308, column: 15, scope: !5105)
!5139 = !DILocation(line: 2308, column: 18, scope: !5105)
!5140 = !DILocation(line: 2308, column: 19, scope: !5105)
!5141 = !DILocation(line: 2309, column: 9, scope: !5105)
!5142 = !DILocation(line: 2309, column: 15, scope: !5105)
!5143 = !DILocation(line: 2309, column: 18, scope: !5105)
!5144 = !DILocation(line: 2309, column: 19, scope: !5105)
!5145 = !DILocation(line: 2310, column: 51, scope: !5105)
!5146 = !DILocation(line: 2310, column: 42, scope: !5105)
!5147 = !DILocation(line: 2310, column: 41, scope: !5105)
!5148 = !DILocation(line: 2310, column: 20, scope: !5105)
!5149 = !DILocation(line: 2310, column: 9, scope: !5105)
!5150 = !DILocation(line: 2310, column: 15, scope: !5105)
!5151 = !DILocation(line: 2310, column: 18, scope: !5105)
!5152 = !DILocation(line: 2310, column: 19, scope: !5105)
!5153 = !DILocation(line: 2311, column: 7, scope: !5105)
!5154 = !DILocation(line: 2300, column: 41, scope: !5101)
!5155 = !DILocation(line: 2300, column: 7, scope: !5101)
!5156 = distinct !{!5156, !5103, !5157}
!5157 = !DILocation(line: 2311, column: 7, scope: !5097)
!5158 = !DILocation(line: 2312, column: 7, scope: !5098)
!5159 = !DILocation(line: 2318, column: 11, scope: !2)
!5160 = !DILocation(line: 2318, column: 18, scope: !2)
!5161 = !DILocation(line: 2318, column: 3, scope: !2)
!5162 = !DILocation(line: 2319, column: 3, scope: !2)
!5163 = !DILocation(line: 2326, column: 44, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2322, column: 5)
!5165 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2319, column: 3)
!5166 = !DILocation(line: 2326, column: 50, scope: !5164)
!5167 = !DILocation(line: 2326, column: 18, scope: !5164)
!5168 = !DILocation(line: 2326, column: 17, scope: !5164)
!5169 = !DILocation(line: 2331, column: 13, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5164, file: !3, line: 2331, column: 7)
!5171 = !DILocation(line: 2331, column: 12, scope: !5170)
!5172 = !DILocation(line: 2331, column: 17, scope: !5173)
!5173 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 2331, column: 7)
!5174 = !DILocation(line: 2331, column: 31, scope: !5173)
!5175 = !DILocation(line: 2331, column: 38, scope: !5173)
!5176 = !DILocation(line: 2331, column: 19, scope: !5173)
!5177 = !DILocation(line: 2331, column: 7, scope: !5170)
!5178 = !DILocalVariable(name: "sync", scope: !5179, file: !3, line: 2334, type: !6)
!5179 = distinct !DILexicalBlock(scope: !5173, file: !3, line: 2332, column: 7)
!5180 = !DILocation(line: 2334, column: 11, scope: !5179)
!5181 = !DILocalVariable(name: "pixel", scope: !5179, file: !3, line: 2337, type: !696)
!5182 = !DILocation(line: 2337, column: 11, scope: !5179)
!5183 = !DILocalVariable(name: "x", scope: !5179, file: !3, line: 2340, type: !170)
!5184 = !DILocation(line: 2340, column: 11, scope: !5179)
!5185 = !DILocalVariable(name: "q", scope: !5179, file: !3, line: 2343, type: !762)
!5186 = !DILocation(line: 2343, column: 21, scope: !5179)
!5187 = !DILocation(line: 2345, column: 13, scope: !5188)
!5188 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2345, column: 13)
!5189 = !DILocation(line: 2345, column: 20, scope: !5188)
!5190 = !DILocation(line: 2345, column: 13, scope: !5179)
!5191 = !DILocation(line: 2346, column: 11, scope: !5188)
!5192 = !DILocation(line: 2347, column: 39, scope: !5179)
!5193 = !DILocation(line: 2347, column: 52, scope: !5179)
!5194 = !DILocation(line: 2347, column: 54, scope: !5179)
!5195 = !DILocation(line: 2347, column: 61, scope: !5179)
!5196 = !DILocation(line: 2348, column: 11, scope: !5179)
!5197 = !DILocation(line: 2347, column: 11, scope: !5179)
!5198 = !DILocation(line: 2347, column: 10, scope: !5179)
!5199 = !DILocation(line: 2349, column: 13, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2349, column: 13)
!5201 = !DILocation(line: 2349, column: 15, scope: !5200)
!5202 = !DILocation(line: 2349, column: 13, scope: !5179)
!5203 = !DILocation(line: 2351, column: 19, scope: !5204)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 2350, column: 11)
!5205 = !DILocation(line: 2352, column: 13, scope: !5204)
!5206 = !DILocation(line: 2354, column: 15, scope: !5207)
!5207 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2354, column: 9)
!5208 = !DILocation(line: 2354, column: 14, scope: !5207)
!5209 = !DILocation(line: 2354, column: 19, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 2354, column: 9)
!5211 = !DILocation(line: 2354, column: 33, scope: !5210)
!5212 = !DILocation(line: 2354, column: 40, scope: !5210)
!5213 = !DILocation(line: 2354, column: 21, scope: !5210)
!5214 = !DILocation(line: 2354, column: 9, scope: !5207)
!5215 = !DILocalVariable(name: "blue", scope: !5216, file: !3, line: 2357, type: !92)
!5216 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2355, column: 9)
!5217 = !DILocation(line: 2357, column: 13, scope: !5216)
!5218 = !DILocalVariable(name: "green", scope: !5216, file: !3, line: 2358, type: !92)
!5219 = !DILocation(line: 2358, column: 13, scope: !5216)
!5220 = !DILocalVariable(name: "red", scope: !5216, file: !3, line: 2359, type: !92)
!5221 = !DILocation(line: 2359, column: 13, scope: !5216)
!5222 = !DILocation(line: 2361, column: 33, scope: !5216)
!5223 = !DILocation(line: 2361, column: 15, scope: !5216)
!5224 = !DILocation(line: 2361, column: 14, scope: !5216)
!5225 = !DILocation(line: 2362, column: 35, scope: !5216)
!5226 = !DILocation(line: 2362, column: 17, scope: !5216)
!5227 = !DILocation(line: 2362, column: 16, scope: !5216)
!5228 = !DILocation(line: 2363, column: 34, scope: !5216)
!5229 = !DILocation(line: 2363, column: 16, scope: !5216)
!5230 = !DILocation(line: 2363, column: 15, scope: !5216)
!5231 = !DILocation(line: 2364, column: 21, scope: !5216)
!5232 = !DILocation(line: 2364, column: 27, scope: !5216)
!5233 = !DILocation(line: 2364, column: 32, scope: !5216)
!5234 = !DILocation(line: 2364, column: 34, scope: !5216)
!5235 = !DILocation(line: 2364, column: 40, scope: !5216)
!5236 = !DILocation(line: 2364, column: 47, scope: !5216)
!5237 = !DILocation(line: 2364, column: 33, scope: !5216)
!5238 = !DILocation(line: 2364, column: 49, scope: !5216)
!5239 = !DILocation(line: 2364, column: 55, scope: !5216)
!5240 = !DILocation(line: 2364, column: 61, scope: !5216)
!5241 = !DILocation(line: 2364, column: 48, scope: !5216)
!5242 = !DILocation(line: 2364, column: 17, scope: !5216)
!5243 = !DILocation(line: 2364, column: 20, scope: !5216)
!5244 = !DILocation(line: 2365, column: 23, scope: !5216)
!5245 = !DILocation(line: 2365, column: 29, scope: !5216)
!5246 = !DILocation(line: 2365, column: 34, scope: !5216)
!5247 = !DILocation(line: 2365, column: 36, scope: !5216)
!5248 = !DILocation(line: 2365, column: 42, scope: !5216)
!5249 = !DILocation(line: 2365, column: 49, scope: !5216)
!5250 = !DILocation(line: 2365, column: 35, scope: !5216)
!5251 = !DILocation(line: 2365, column: 51, scope: !5216)
!5252 = !DILocation(line: 2365, column: 57, scope: !5216)
!5253 = !DILocation(line: 2365, column: 63, scope: !5216)
!5254 = !DILocation(line: 2365, column: 50, scope: !5216)
!5255 = !DILocation(line: 2365, column: 17, scope: !5216)
!5256 = !DILocation(line: 2365, column: 22, scope: !5216)
!5257 = !DILocation(line: 2366, column: 22, scope: !5216)
!5258 = !DILocation(line: 2366, column: 28, scope: !5216)
!5259 = !DILocation(line: 2366, column: 33, scope: !5216)
!5260 = !DILocation(line: 2366, column: 35, scope: !5216)
!5261 = !DILocation(line: 2366, column: 41, scope: !5216)
!5262 = !DILocation(line: 2366, column: 48, scope: !5216)
!5263 = !DILocation(line: 2366, column: 34, scope: !5216)
!5264 = !DILocation(line: 2366, column: 50, scope: !5216)
!5265 = !DILocation(line: 2366, column: 56, scope: !5216)
!5266 = !DILocation(line: 2366, column: 62, scope: !5216)
!5267 = !DILocation(line: 2366, column: 49, scope: !5216)
!5268 = !DILocation(line: 2366, column: 17, scope: !5216)
!5269 = !DILocation(line: 2366, column: 21, scope: !5216)
!5270 = !DILocation(line: 2367, column: 15, scope: !5271)
!5271 = distinct !DILexicalBlock(scope: !5216, file: !3, line: 2367, column: 15)
!5272 = !DILocation(line: 2367, column: 26, scope: !5271)
!5273 = !DILocation(line: 2367, column: 15, scope: !5216)
!5274 = !DILocation(line: 2369, column: 69, scope: !5275)
!5275 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2368, column: 13)
!5276 = !DILocation(line: 2369, column: 63, scope: !5275)
!5277 = !DILocation(line: 2369, column: 62, scope: !5275)
!5278 = !DILocation(line: 2369, column: 72, scope: !5275)
!5279 = !DILocation(line: 2369, column: 56, scope: !5275)
!5280 = !DILocation(line: 2369, column: 45, scope: !5275)
!5281 = !DILocation(line: 2369, column: 38, scope: !5275)
!5282 = !DILocation(line: 2369, column: 37, scope: !5275)
!5283 = !DILocation(line: 2369, column: 21, scope: !5275)
!5284 = !DILocation(line: 2369, column: 24, scope: !5275)
!5285 = !DILocation(line: 2371, column: 71, scope: !5275)
!5286 = !DILocation(line: 2371, column: 65, scope: !5275)
!5287 = !DILocation(line: 2371, column: 64, scope: !5275)
!5288 = !DILocation(line: 2371, column: 76, scope: !5275)
!5289 = !DILocation(line: 2371, column: 58, scope: !5275)
!5290 = !DILocation(line: 2371, column: 47, scope: !5275)
!5291 = !DILocation(line: 2371, column: 40, scope: !5275)
!5292 = !DILocation(line: 2371, column: 39, scope: !5275)
!5293 = !DILocation(line: 2371, column: 21, scope: !5275)
!5294 = !DILocation(line: 2371, column: 26, scope: !5275)
!5295 = !DILocation(line: 2373, column: 70, scope: !5275)
!5296 = !DILocation(line: 2373, column: 64, scope: !5275)
!5297 = !DILocation(line: 2373, column: 63, scope: !5275)
!5298 = !DILocation(line: 2373, column: 74, scope: !5275)
!5299 = !DILocation(line: 2373, column: 57, scope: !5275)
!5300 = !DILocation(line: 2373, column: 46, scope: !5275)
!5301 = !DILocation(line: 2373, column: 39, scope: !5275)
!5302 = !DILocation(line: 2373, column: 38, scope: !5275)
!5303 = !DILocation(line: 2373, column: 21, scope: !5275)
!5304 = !DILocation(line: 2373, column: 25, scope: !5275)
!5305 = !DILocation(line: 2375, column: 13, scope: !5275)
!5306 = !DILocation(line: 2378, column: 66, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5271, file: !3, line: 2377, column: 13)
!5308 = !DILocation(line: 2378, column: 42, scope: !5307)
!5309 = !DILocation(line: 2378, column: 25, scope: !5307)
!5310 = !DILocation(line: 2378, column: 21, scope: !5307)
!5311 = !DILocation(line: 2378, column: 24, scope: !5307)
!5312 = !DILocation(line: 2379, column: 68, scope: !5307)
!5313 = !DILocation(line: 2379, column: 44, scope: !5307)
!5314 = !DILocation(line: 2379, column: 27, scope: !5307)
!5315 = !DILocation(line: 2379, column: 21, scope: !5307)
!5316 = !DILocation(line: 2379, column: 26, scope: !5307)
!5317 = !DILocation(line: 2380, column: 67, scope: !5307)
!5318 = !DILocation(line: 2380, column: 43, scope: !5307)
!5319 = !DILocation(line: 2380, column: 26, scope: !5307)
!5320 = !DILocation(line: 2380, column: 21, scope: !5307)
!5321 = !DILocation(line: 2380, column: 25, scope: !5307)
!5322 = !DILocation(line: 2382, column: 11, scope: !5216)
!5323 = !DILocation(line: 2383, column: 11, scope: !5216)
!5324 = !DILocation(line: 2384, column: 11, scope: !5216)
!5325 = !DILocation(line: 2385, column: 12, scope: !5216)
!5326 = !DILocation(line: 2386, column: 9, scope: !5216)
!5327 = !DILocation(line: 2354, column: 50, scope: !5210)
!5328 = !DILocation(line: 2354, column: 9, scope: !5210)
!5329 = distinct !{!5329, !5214, !5330}
!5330 = !DILocation(line: 2386, column: 9, scope: !5207)
!5331 = !DILocation(line: 2387, column: 43, scope: !5179)
!5332 = !DILocation(line: 2387, column: 54, scope: !5179)
!5333 = !DILocation(line: 2387, column: 14, scope: !5179)
!5334 = !DILocation(line: 2387, column: 13, scope: !5179)
!5335 = !DILocation(line: 2388, column: 13, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2388, column: 13)
!5337 = !DILocation(line: 2388, column: 18, scope: !5336)
!5338 = !DILocation(line: 2388, column: 13, scope: !5179)
!5339 = !DILocation(line: 2389, column: 17, scope: !5336)
!5340 = !DILocation(line: 2389, column: 11, scope: !5336)
!5341 = !DILocation(line: 2390, column: 13, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 2390, column: 13)
!5343 = !DILocation(line: 2390, column: 20, scope: !5342)
!5344 = !DILocation(line: 2390, column: 37, scope: !5342)
!5345 = !DILocation(line: 2390, column: 13, scope: !5179)
!5346 = !DILocalVariable(name: "proceed", scope: !5347, file: !3, line: 2393, type: !6)
!5347 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 2391, column: 11)
!5348 = !DILocation(line: 2393, column: 15, scope: !5347)
!5349 = !DILocation(line: 2398, column: 38, scope: !5347)
!5350 = !DILocation(line: 2398, column: 73, scope: !5347)
!5351 = !DILocation(line: 2399, column: 15, scope: !5347)
!5352 = !DILocation(line: 2399, column: 22, scope: !5347)
!5353 = !DILocation(line: 2398, column: 21, scope: !5347)
!5354 = !DILocation(line: 2398, column: 20, scope: !5347)
!5355 = !DILocation(line: 2400, column: 17, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2400, column: 17)
!5357 = !DILocation(line: 2400, column: 25, scope: !5356)
!5358 = !DILocation(line: 2400, column: 17, scope: !5347)
!5359 = !DILocation(line: 2401, column: 21, scope: !5356)
!5360 = !DILocation(line: 2401, column: 15, scope: !5356)
!5361 = !DILocation(line: 2402, column: 11, scope: !5347)
!5362 = !DILocation(line: 2403, column: 7, scope: !5179)
!5363 = !DILocation(line: 2331, column: 45, scope: !5173)
!5364 = !DILocation(line: 2331, column: 7, scope: !5173)
!5365 = distinct !{!5365, !5177, !5366}
!5366 = !DILocation(line: 2403, column: 7, scope: !5170)
!5367 = !DILocation(line: 2404, column: 35, scope: !5164)
!5368 = !DILocation(line: 2404, column: 18, scope: !5164)
!5369 = !DILocation(line: 2404, column: 17, scope: !5164)
!5370 = !DILocation(line: 2405, column: 7, scope: !5164)
!5371 = !DILocation(line: 2416, column: 13, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5373, file: !3, line: 2416, column: 7)
!5373 = distinct !DILexicalBlock(scope: !5165, file: !3, line: 2408, column: 5)
!5374 = !DILocation(line: 2416, column: 12, scope: !5372)
!5375 = !DILocation(line: 2416, column: 17, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5372, file: !3, line: 2416, column: 7)
!5377 = !DILocation(line: 2416, column: 31, scope: !5376)
!5378 = !DILocation(line: 2416, column: 38, scope: !5376)
!5379 = !DILocation(line: 2416, column: 19, scope: !5376)
!5380 = !DILocation(line: 2416, column: 7, scope: !5372)
!5381 = !DILocalVariable(name: "pixel", scope: !5382, file: !3, line: 2419, type: !696)
!5382 = distinct !DILexicalBlock(scope: !5376, file: !3, line: 2417, column: 7)
!5383 = !DILocation(line: 2419, column: 11, scope: !5382)
!5384 = !DILocalVariable(name: "blue", scope: !5382, file: !3, line: 2422, type: !92)
!5385 = !DILocation(line: 2422, column: 11, scope: !5382)
!5386 = !DILocalVariable(name: "green", scope: !5382, file: !3, line: 2423, type: !92)
!5387 = !DILocation(line: 2423, column: 11, scope: !5382)
!5388 = !DILocalVariable(name: "red", scope: !5382, file: !3, line: 2424, type: !92)
!5389 = !DILocation(line: 2424, column: 11, scope: !5382)
!5390 = !DILocation(line: 2426, column: 31, scope: !5382)
!5391 = !DILocation(line: 2426, column: 38, scope: !5382)
!5392 = !DILocation(line: 2426, column: 47, scope: !5382)
!5393 = !DILocation(line: 2426, column: 50, scope: !5382)
!5394 = !DILocation(line: 2426, column: 13, scope: !5382)
!5395 = !DILocation(line: 2426, column: 12, scope: !5382)
!5396 = !DILocation(line: 2427, column: 33, scope: !5382)
!5397 = !DILocation(line: 2427, column: 40, scope: !5382)
!5398 = !DILocation(line: 2427, column: 49, scope: !5382)
!5399 = !DILocation(line: 2427, column: 52, scope: !5382)
!5400 = !DILocation(line: 2427, column: 15, scope: !5382)
!5401 = !DILocation(line: 2427, column: 14, scope: !5382)
!5402 = !DILocation(line: 2428, column: 32, scope: !5382)
!5403 = !DILocation(line: 2428, column: 39, scope: !5382)
!5404 = !DILocation(line: 2428, column: 48, scope: !5382)
!5405 = !DILocation(line: 2428, column: 51, scope: !5382)
!5406 = !DILocation(line: 2428, column: 14, scope: !5382)
!5407 = !DILocation(line: 2428, column: 13, scope: !5382)
!5408 = !DILocation(line: 2429, column: 19, scope: !5382)
!5409 = !DILocation(line: 2429, column: 25, scope: !5382)
!5410 = !DILocation(line: 2429, column: 30, scope: !5382)
!5411 = !DILocation(line: 2429, column: 32, scope: !5382)
!5412 = !DILocation(line: 2429, column: 38, scope: !5382)
!5413 = !DILocation(line: 2429, column: 45, scope: !5382)
!5414 = !DILocation(line: 2429, column: 31, scope: !5382)
!5415 = !DILocation(line: 2429, column: 47, scope: !5382)
!5416 = !DILocation(line: 2429, column: 53, scope: !5382)
!5417 = !DILocation(line: 2429, column: 59, scope: !5382)
!5418 = !DILocation(line: 2429, column: 46, scope: !5382)
!5419 = !DILocation(line: 2429, column: 15, scope: !5382)
!5420 = !DILocation(line: 2429, column: 18, scope: !5382)
!5421 = !DILocation(line: 2430, column: 21, scope: !5382)
!5422 = !DILocation(line: 2430, column: 27, scope: !5382)
!5423 = !DILocation(line: 2430, column: 32, scope: !5382)
!5424 = !DILocation(line: 2430, column: 34, scope: !5382)
!5425 = !DILocation(line: 2430, column: 40, scope: !5382)
!5426 = !DILocation(line: 2430, column: 47, scope: !5382)
!5427 = !DILocation(line: 2430, column: 33, scope: !5382)
!5428 = !DILocation(line: 2430, column: 49, scope: !5382)
!5429 = !DILocation(line: 2430, column: 55, scope: !5382)
!5430 = !DILocation(line: 2430, column: 61, scope: !5382)
!5431 = !DILocation(line: 2430, column: 48, scope: !5382)
!5432 = !DILocation(line: 2430, column: 15, scope: !5382)
!5433 = !DILocation(line: 2430, column: 20, scope: !5382)
!5434 = !DILocation(line: 2431, column: 20, scope: !5382)
!5435 = !DILocation(line: 2431, column: 26, scope: !5382)
!5436 = !DILocation(line: 2431, column: 31, scope: !5382)
!5437 = !DILocation(line: 2431, column: 33, scope: !5382)
!5438 = !DILocation(line: 2431, column: 39, scope: !5382)
!5439 = !DILocation(line: 2431, column: 46, scope: !5382)
!5440 = !DILocation(line: 2431, column: 32, scope: !5382)
!5441 = !DILocation(line: 2431, column: 48, scope: !5382)
!5442 = !DILocation(line: 2431, column: 54, scope: !5382)
!5443 = !DILocation(line: 2431, column: 60, scope: !5382)
!5444 = !DILocation(line: 2431, column: 47, scope: !5382)
!5445 = !DILocation(line: 2431, column: 15, scope: !5382)
!5446 = !DILocation(line: 2431, column: 19, scope: !5382)
!5447 = !DILocation(line: 2432, column: 13, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5382, file: !3, line: 2432, column: 13)
!5449 = !DILocation(line: 2432, column: 24, scope: !5448)
!5450 = !DILocation(line: 2432, column: 13, scope: !5382)
!5451 = !DILocation(line: 2434, column: 67, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 2433, column: 11)
!5453 = !DILocation(line: 2434, column: 61, scope: !5452)
!5454 = !DILocation(line: 2434, column: 60, scope: !5452)
!5455 = !DILocation(line: 2434, column: 70, scope: !5452)
!5456 = !DILocation(line: 2434, column: 54, scope: !5452)
!5457 = !DILocation(line: 2434, column: 43, scope: !5452)
!5458 = !DILocation(line: 2434, column: 36, scope: !5452)
!5459 = !DILocation(line: 2434, column: 35, scope: !5452)
!5460 = !DILocation(line: 2434, column: 19, scope: !5452)
!5461 = !DILocation(line: 2434, column: 22, scope: !5452)
!5462 = !DILocation(line: 2436, column: 69, scope: !5452)
!5463 = !DILocation(line: 2436, column: 63, scope: !5452)
!5464 = !DILocation(line: 2436, column: 62, scope: !5452)
!5465 = !DILocation(line: 2436, column: 74, scope: !5452)
!5466 = !DILocation(line: 2436, column: 56, scope: !5452)
!5467 = !DILocation(line: 2436, column: 45, scope: !5452)
!5468 = !DILocation(line: 2436, column: 38, scope: !5452)
!5469 = !DILocation(line: 2436, column: 37, scope: !5452)
!5470 = !DILocation(line: 2436, column: 19, scope: !5452)
!5471 = !DILocation(line: 2436, column: 24, scope: !5452)
!5472 = !DILocation(line: 2438, column: 68, scope: !5452)
!5473 = !DILocation(line: 2438, column: 62, scope: !5452)
!5474 = !DILocation(line: 2438, column: 61, scope: !5452)
!5475 = !DILocation(line: 2438, column: 72, scope: !5452)
!5476 = !DILocation(line: 2438, column: 55, scope: !5452)
!5477 = !DILocation(line: 2438, column: 44, scope: !5452)
!5478 = !DILocation(line: 2438, column: 37, scope: !5452)
!5479 = !DILocation(line: 2438, column: 36, scope: !5452)
!5480 = !DILocation(line: 2438, column: 19, scope: !5452)
!5481 = !DILocation(line: 2438, column: 23, scope: !5452)
!5482 = !DILocation(line: 2440, column: 11, scope: !5452)
!5483 = !DILocation(line: 2443, column: 64, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5448, file: !3, line: 2442, column: 11)
!5485 = !DILocation(line: 2443, column: 40, scope: !5484)
!5486 = !DILocation(line: 2443, column: 23, scope: !5484)
!5487 = !DILocation(line: 2443, column: 19, scope: !5484)
!5488 = !DILocation(line: 2443, column: 22, scope: !5484)
!5489 = !DILocation(line: 2444, column: 66, scope: !5484)
!5490 = !DILocation(line: 2444, column: 42, scope: !5484)
!5491 = !DILocation(line: 2444, column: 25, scope: !5484)
!5492 = !DILocation(line: 2444, column: 19, scope: !5484)
!5493 = !DILocation(line: 2444, column: 24, scope: !5484)
!5494 = !DILocation(line: 2445, column: 65, scope: !5484)
!5495 = !DILocation(line: 2445, column: 41, scope: !5484)
!5496 = !DILocation(line: 2445, column: 24, scope: !5484)
!5497 = !DILocation(line: 2445, column: 19, scope: !5484)
!5498 = !DILocation(line: 2445, column: 23, scope: !5484)
!5499 = !DILocation(line: 2447, column: 53, scope: !5382)
!5500 = !DILocation(line: 2447, column: 32, scope: !5382)
!5501 = !DILocation(line: 2447, column: 9, scope: !5382)
!5502 = !DILocation(line: 2447, column: 16, scope: !5382)
!5503 = !DILocation(line: 2447, column: 25, scope: !5382)
!5504 = !DILocation(line: 2447, column: 28, scope: !5382)
!5505 = !DILocation(line: 2447, column: 31, scope: !5382)
!5506 = !DILocation(line: 2448, column: 55, scope: !5382)
!5507 = !DILocation(line: 2448, column: 34, scope: !5382)
!5508 = !DILocation(line: 2448, column: 9, scope: !5382)
!5509 = !DILocation(line: 2448, column: 16, scope: !5382)
!5510 = !DILocation(line: 2448, column: 25, scope: !5382)
!5511 = !DILocation(line: 2448, column: 28, scope: !5382)
!5512 = !DILocation(line: 2448, column: 33, scope: !5382)
!5513 = !DILocation(line: 2449, column: 54, scope: !5382)
!5514 = !DILocation(line: 2449, column: 33, scope: !5382)
!5515 = !DILocation(line: 2449, column: 9, scope: !5382)
!5516 = !DILocation(line: 2449, column: 16, scope: !5382)
!5517 = !DILocation(line: 2449, column: 25, scope: !5382)
!5518 = !DILocation(line: 2449, column: 28, scope: !5382)
!5519 = !DILocation(line: 2449, column: 32, scope: !5382)
!5520 = !DILocation(line: 2450, column: 7, scope: !5382)
!5521 = !DILocation(line: 2416, column: 47, scope: !5376)
!5522 = !DILocation(line: 2416, column: 7, scope: !5376)
!5523 = distinct !{!5523, !5380, !5524}
!5524 = !DILocation(line: 2450, column: 7, scope: !5372)
!5525 = !DILocation(line: 2451, column: 24, scope: !5373)
!5526 = !DILocation(line: 2451, column: 14, scope: !5373)
!5527 = !DILocation(line: 2452, column: 7, scope: !5373)
!5528 = !DILocation(line: 2458, column: 52, scope: !2)
!5529 = !DILocation(line: 2458, column: 29, scope: !2)
!5530 = !DILocation(line: 2458, column: 9, scope: !2)
!5531 = !DILocation(line: 2458, column: 8, scope: !2)
!5532 = !DILocation(line: 2459, column: 52, scope: !2)
!5533 = !DILocation(line: 2459, column: 29, scope: !2)
!5534 = !DILocation(line: 2459, column: 9, scope: !2)
!5535 = !DILocation(line: 2459, column: 8, scope: !2)
!5536 = !DILocation(line: 2460, column: 52, scope: !2)
!5537 = !DILocation(line: 2460, column: 29, scope: !2)
!5538 = !DILocation(line: 2460, column: 9, scope: !2)
!5539 = !DILocation(line: 2460, column: 8, scope: !2)
!5540 = !DILocation(line: 2461, column: 26, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2461, column: 7)
!5542 = !DILocation(line: 2461, column: 7, scope: !5541)
!5543 = !DILocation(line: 2461, column: 48, scope: !5541)
!5544 = !DILocation(line: 2461, column: 7, scope: !2)
!5545 = !DILocation(line: 2462, column: 5, scope: !5541)
!5546 = !DILocation(line: 2463, column: 3, scope: !2)
!5547 = !DILocation(line: 2464, column: 1, scope: !2)
!5548 = distinct !DISubprogram(name: "ConvertCMYKToRGB", scope: !3, file: !3, line: 1300, type: !2810, scopeLine: 1301, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5549 = !DILocalVariable(name: "pixel", arg: 1, scope: !5548, file: !3, line: 1300, type: !2765)
!5550 = !DILocation(line: 1300, column: 56, scope: !5548)
!5551 = !DILocation(line: 1302, column: 43, scope: !5548)
!5552 = !DILocation(line: 1302, column: 50, scope: !5548)
!5553 = !DILocation(line: 1302, column: 42, scope: !5548)
!5554 = !DILocation(line: 1303, column: 19, scope: !5548)
!5555 = !DILocation(line: 1303, column: 26, scope: !5548)
!5556 = !DILocation(line: 1303, column: 18, scope: !5548)
!5557 = !DILocation(line: 1303, column: 5, scope: !5548)
!5558 = !DILocation(line: 1302, column: 53, scope: !5548)
!5559 = !DILocation(line: 1303, column: 33, scope: !5548)
!5560 = !DILocation(line: 1303, column: 40, scope: !5548)
!5561 = !DILocation(line: 1303, column: 32, scope: !5548)
!5562 = !DILocation(line: 1302, column: 28, scope: !5548)
!5563 = !DILocation(line: 1302, column: 14, scope: !5548)
!5564 = !DILocation(line: 1302, column: 3, scope: !5548)
!5565 = !DILocation(line: 1302, column: 10, scope: !5548)
!5566 = !DILocation(line: 1302, column: 13, scope: !5548)
!5567 = !DILocation(line: 1304, column: 45, scope: !5548)
!5568 = !DILocation(line: 1304, column: 52, scope: !5548)
!5569 = !DILocation(line: 1304, column: 44, scope: !5548)
!5570 = !DILocation(line: 1305, column: 19, scope: !5548)
!5571 = !DILocation(line: 1305, column: 26, scope: !5548)
!5572 = !DILocation(line: 1305, column: 18, scope: !5548)
!5573 = !DILocation(line: 1305, column: 5, scope: !5548)
!5574 = !DILocation(line: 1304, column: 57, scope: !5548)
!5575 = !DILocation(line: 1305, column: 33, scope: !5548)
!5576 = !DILocation(line: 1305, column: 40, scope: !5548)
!5577 = !DILocation(line: 1305, column: 32, scope: !5548)
!5578 = !DILocation(line: 1304, column: 30, scope: !5548)
!5579 = !DILocation(line: 1304, column: 16, scope: !5548)
!5580 = !DILocation(line: 1304, column: 3, scope: !5548)
!5581 = !DILocation(line: 1304, column: 10, scope: !5548)
!5582 = !DILocation(line: 1304, column: 15, scope: !5548)
!5583 = !DILocation(line: 1306, column: 44, scope: !5548)
!5584 = !DILocation(line: 1306, column: 51, scope: !5548)
!5585 = !DILocation(line: 1306, column: 43, scope: !5548)
!5586 = !DILocation(line: 1307, column: 19, scope: !5548)
!5587 = !DILocation(line: 1307, column: 26, scope: !5548)
!5588 = !DILocation(line: 1307, column: 18, scope: !5548)
!5589 = !DILocation(line: 1307, column: 5, scope: !5548)
!5590 = !DILocation(line: 1306, column: 55, scope: !5548)
!5591 = !DILocation(line: 1307, column: 33, scope: !5548)
!5592 = !DILocation(line: 1307, column: 40, scope: !5548)
!5593 = !DILocation(line: 1307, column: 32, scope: !5548)
!5594 = !DILocation(line: 1306, column: 29, scope: !5548)
!5595 = !DILocation(line: 1306, column: 15, scope: !5548)
!5596 = !DILocation(line: 1306, column: 3, scope: !5548)
!5597 = !DILocation(line: 1306, column: 10, scope: !5548)
!5598 = !DILocation(line: 1306, column: 14, scope: !5548)
!5599 = !DILocation(line: 1308, column: 1, scope: !5548)
!5600 = distinct !DISubprogram(name: "ConvertCMYToRGB", scope: !3, file: !3, line: 1251, type: !5601, scopeLine: 1253, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5601 = !DISubroutineType(types: !5602)
!5602 = !{null, !3429, !3429, !3429, !625, !625, !625}
!5603 = !DILocalVariable(name: "cyan", arg: 1, scope: !5600, file: !3, line: 1251, type: !3429)
!5604 = !DILocation(line: 1251, column: 49, scope: !5600)
!5605 = !DILocalVariable(name: "magenta", arg: 2, scope: !5600, file: !3, line: 1251, type: !3429)
!5606 = !DILocation(line: 1251, column: 67, scope: !5600)
!5607 = !DILocalVariable(name: "yellow", arg: 3, scope: !5600, file: !3, line: 1252, type: !3429)
!5608 = !DILocation(line: 1252, column: 16, scope: !5600)
!5609 = !DILocalVariable(name: "red", arg: 4, scope: !5600, file: !3, line: 1252, type: !625)
!5610 = !DILocation(line: 1252, column: 32, scope: !5600)
!5611 = !DILocalVariable(name: "green", arg: 5, scope: !5600, file: !3, line: 1252, type: !625)
!5612 = !DILocation(line: 1252, column: 45, scope: !5600)
!5613 = !DILocalVariable(name: "blue", arg: 6, scope: !5600, file: !3, line: 1252, type: !625)
!5614 = !DILocation(line: 1252, column: 60, scope: !5600)
!5615 = !DILocation(line: 1254, column: 41, scope: !5600)
!5616 = !DILocation(line: 1254, column: 40, scope: !5600)
!5617 = !DILocation(line: 1254, column: 35, scope: !5600)
!5618 = !DILocation(line: 1254, column: 23, scope: !5600)
!5619 = !DILocation(line: 1254, column: 8, scope: !5600)
!5620 = !DILocation(line: 1254, column: 4, scope: !5600)
!5621 = !DILocation(line: 1254, column: 7, scope: !5600)
!5622 = !DILocation(line: 1255, column: 43, scope: !5600)
!5623 = !DILocation(line: 1255, column: 42, scope: !5600)
!5624 = !DILocation(line: 1255, column: 37, scope: !5600)
!5625 = !DILocation(line: 1255, column: 25, scope: !5600)
!5626 = !DILocation(line: 1255, column: 10, scope: !5600)
!5627 = !DILocation(line: 1255, column: 4, scope: !5600)
!5628 = !DILocation(line: 1255, column: 9, scope: !5600)
!5629 = !DILocation(line: 1256, column: 42, scope: !5600)
!5630 = !DILocation(line: 1256, column: 41, scope: !5600)
!5631 = !DILocation(line: 1256, column: 36, scope: !5600)
!5632 = !DILocation(line: 1256, column: 24, scope: !5600)
!5633 = !DILocation(line: 1256, column: 9, scope: !5600)
!5634 = !DILocation(line: 1256, column: 4, scope: !5600)
!5635 = !DILocation(line: 1256, column: 8, scope: !5600)
!5636 = !DILocation(line: 1257, column: 1, scope: !5600)
!5637 = distinct !DISubprogram(name: "ConvertLabToRGB", scope: !3, file: !3, line: 1310, type: !5601, scopeLine: 1312, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5638 = !DILocalVariable(name: "L", arg: 1, scope: !5637, file: !3, line: 1310, type: !3429)
!5639 = !DILocation(line: 1310, column: 49, scope: !5637)
!5640 = !DILocalVariable(name: "a", arg: 2, scope: !5637, file: !3, line: 1310, type: !3429)
!5641 = !DILocation(line: 1310, column: 64, scope: !5637)
!5642 = !DILocalVariable(name: "b", arg: 3, scope: !5637, file: !3, line: 1311, type: !3429)
!5643 = !DILocation(line: 1311, column: 16, scope: !5637)
!5644 = !DILocalVariable(name: "red", arg: 4, scope: !5637, file: !3, line: 1311, type: !625)
!5645 = !DILocation(line: 1311, column: 27, scope: !5637)
!5646 = !DILocalVariable(name: "green", arg: 5, scope: !5637, file: !3, line: 1311, type: !625)
!5647 = !DILocation(line: 1311, column: 40, scope: !5637)
!5648 = !DILocalVariable(name: "blue", arg: 6, scope: !5637, file: !3, line: 1311, type: !625)
!5649 = !DILocation(line: 1311, column: 55, scope: !5637)
!5650 = !DILocalVariable(name: "X", scope: !5637, file: !3, line: 1314, type: !130)
!5651 = !DILocation(line: 1314, column: 5, scope: !5637)
!5652 = !DILocalVariable(name: "Y", scope: !5637, file: !3, line: 1315, type: !130)
!5653 = !DILocation(line: 1315, column: 5, scope: !5637)
!5654 = !DILocalVariable(name: "Z", scope: !5637, file: !3, line: 1316, type: !130)
!5655 = !DILocation(line: 1316, column: 5, scope: !5637)
!5656 = !DILocation(line: 1318, column: 25, scope: !5637)
!5657 = !DILocation(line: 1318, column: 24, scope: !5637)
!5658 = !DILocation(line: 1318, column: 34, scope: !5637)
!5659 = !DILocation(line: 1318, column: 35, scope: !5637)
!5660 = !DILocation(line: 1318, column: 32, scope: !5637)
!5661 = !DILocation(line: 1318, column: 48, scope: !5637)
!5662 = !DILocation(line: 1318, column: 49, scope: !5637)
!5663 = !DILocation(line: 1318, column: 46, scope: !5637)
!5664 = !DILocation(line: 1318, column: 3, scope: !5637)
!5665 = !DILocation(line: 1319, column: 19, scope: !5637)
!5666 = !DILocation(line: 1319, column: 21, scope: !5637)
!5667 = !DILocation(line: 1319, column: 23, scope: !5637)
!5668 = !DILocation(line: 1319, column: 25, scope: !5637)
!5669 = !DILocation(line: 1319, column: 29, scope: !5637)
!5670 = !DILocation(line: 1319, column: 35, scope: !5637)
!5671 = !DILocation(line: 1319, column: 3, scope: !5637)
!5672 = !DILocation(line: 1320, column: 1, scope: !5637)
!5673 = distinct !DISubprogram(name: "ConvertLMSToRGB", scope: !3, file: !3, line: 1267, type: !5601, scopeLine: 1269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5674 = !DILocalVariable(name: "L", arg: 1, scope: !5673, file: !3, line: 1267, type: !3429)
!5675 = !DILocation(line: 1267, column: 49, scope: !5673)
!5676 = !DILocalVariable(name: "M", arg: 2, scope: !5673, file: !3, line: 1267, type: !3429)
!5677 = !DILocation(line: 1267, column: 64, scope: !5673)
!5678 = !DILocalVariable(name: "S", arg: 3, scope: !5673, file: !3, line: 1268, type: !3429)
!5679 = !DILocation(line: 1268, column: 16, scope: !5673)
!5680 = !DILocalVariable(name: "red", arg: 4, scope: !5673, file: !3, line: 1268, type: !625)
!5681 = !DILocation(line: 1268, column: 27, scope: !5673)
!5682 = !DILocalVariable(name: "green", arg: 5, scope: !5673, file: !3, line: 1268, type: !625)
!5683 = !DILocation(line: 1268, column: 40, scope: !5673)
!5684 = !DILocalVariable(name: "blue", arg: 6, scope: !5673, file: !3, line: 1268, type: !625)
!5685 = !DILocation(line: 1268, column: 55, scope: !5673)
!5686 = !DILocalVariable(name: "X", scope: !5673, file: !3, line: 1271, type: !130)
!5687 = !DILocation(line: 1271, column: 5, scope: !5673)
!5688 = !DILocalVariable(name: "Y", scope: !5673, file: !3, line: 1272, type: !130)
!5689 = !DILocation(line: 1272, column: 5, scope: !5673)
!5690 = !DILocalVariable(name: "Z", scope: !5673, file: !3, line: 1273, type: !130)
!5691 = !DILocation(line: 1273, column: 5, scope: !5673)
!5692 = !DILocation(line: 1275, column: 19, scope: !5673)
!5693 = !DILocation(line: 1275, column: 21, scope: !5673)
!5694 = !DILocation(line: 1275, column: 23, scope: !5673)
!5695 = !DILocation(line: 1275, column: 3, scope: !5673)
!5696 = !DILocation(line: 1276, column: 19, scope: !5673)
!5697 = !DILocation(line: 1276, column: 21, scope: !5673)
!5698 = !DILocation(line: 1276, column: 23, scope: !5673)
!5699 = !DILocation(line: 1276, column: 25, scope: !5673)
!5700 = !DILocation(line: 1276, column: 29, scope: !5673)
!5701 = !DILocation(line: 1276, column: 35, scope: !5673)
!5702 = !DILocation(line: 1276, column: 3, scope: !5673)
!5703 = !DILocation(line: 1277, column: 1, scope: !5673)
!5704 = distinct !DISubprogram(name: "ConvertLuvToRGB", scope: !3, file: !3, line: 1279, type: !5601, scopeLine: 1281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5705 = !DILocalVariable(name: "L", arg: 1, scope: !5704, file: !3, line: 1279, type: !3429)
!5706 = !DILocation(line: 1279, column: 49, scope: !5704)
!5707 = !DILocalVariable(name: "u", arg: 2, scope: !5704, file: !3, line: 1279, type: !3429)
!5708 = !DILocation(line: 1279, column: 64, scope: !5704)
!5709 = !DILocalVariable(name: "v", arg: 3, scope: !5704, file: !3, line: 1280, type: !3429)
!5710 = !DILocation(line: 1280, column: 16, scope: !5704)
!5711 = !DILocalVariable(name: "red", arg: 4, scope: !5704, file: !3, line: 1280, type: !625)
!5712 = !DILocation(line: 1280, column: 27, scope: !5704)
!5713 = !DILocalVariable(name: "green", arg: 5, scope: !5704, file: !3, line: 1280, type: !625)
!5714 = !DILocation(line: 1280, column: 40, scope: !5704)
!5715 = !DILocalVariable(name: "blue", arg: 6, scope: !5704, file: !3, line: 1280, type: !625)
!5716 = !DILocation(line: 1280, column: 55, scope: !5704)
!5717 = !DILocalVariable(name: "X", scope: !5704, file: !3, line: 1283, type: !130)
!5718 = !DILocation(line: 1283, column: 5, scope: !5704)
!5719 = !DILocalVariable(name: "Y", scope: !5704, file: !3, line: 1284, type: !130)
!5720 = !DILocation(line: 1284, column: 5, scope: !5704)
!5721 = !DILocalVariable(name: "Z", scope: !5704, file: !3, line: 1285, type: !130)
!5722 = !DILocation(line: 1285, column: 5, scope: !5704)
!5723 = !DILocation(line: 1287, column: 25, scope: !5704)
!5724 = !DILocation(line: 1287, column: 24, scope: !5704)
!5725 = !DILocation(line: 1287, column: 33, scope: !5704)
!5726 = !DILocation(line: 1287, column: 32, scope: !5704)
!5727 = !DILocation(line: 1287, column: 34, scope: !5704)
!5728 = !DILocation(line: 1287, column: 47, scope: !5704)
!5729 = !DILocation(line: 1287, column: 46, scope: !5704)
!5730 = !DILocation(line: 1287, column: 48, scope: !5704)
!5731 = !DILocation(line: 1287, column: 3, scope: !5704)
!5732 = !DILocation(line: 1288, column: 19, scope: !5704)
!5733 = !DILocation(line: 1288, column: 21, scope: !5704)
!5734 = !DILocation(line: 1288, column: 23, scope: !5704)
!5735 = !DILocation(line: 1288, column: 25, scope: !5704)
!5736 = !DILocation(line: 1288, column: 29, scope: !5704)
!5737 = !DILocation(line: 1288, column: 35, scope: !5704)
!5738 = !DILocation(line: 1288, column: 3, scope: !5704)
!5739 = !DILocation(line: 1289, column: 1, scope: !5704)
!5740 = distinct !DISubprogram(name: "ConvertXYZToRGB", scope: !3144, file: !3144, line: 149, type: !5601, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5741 = !DILocalVariable(name: "X", arg: 1, scope: !5740, file: !3144, line: 149, type: !3429)
!5742 = !DILocation(line: 149, column: 49, scope: !5740)
!5743 = !DILocalVariable(name: "Y", arg: 2, scope: !5740, file: !3144, line: 149, type: !3429)
!5744 = !DILocation(line: 149, column: 64, scope: !5740)
!5745 = !DILocalVariable(name: "Z", arg: 3, scope: !5740, file: !3144, line: 149, type: !3429)
!5746 = !DILocation(line: 149, column: 79, scope: !5740)
!5747 = !DILocalVariable(name: "red", arg: 4, scope: !5740, file: !3144, line: 150, type: !625)
!5748 = !DILocation(line: 150, column: 12, scope: !5740)
!5749 = !DILocalVariable(name: "green", arg: 5, scope: !5740, file: !3144, line: 150, type: !625)
!5750 = !DILocation(line: 150, column: 25, scope: !5740)
!5751 = !DILocalVariable(name: "blue", arg: 6, scope: !5740, file: !3144, line: 150, type: !625)
!5752 = !DILocation(line: 150, column: 40, scope: !5740)
!5753 = !DILocalVariable(name: "b", scope: !5740, file: !3144, line: 153, type: !130)
!5754 = !DILocation(line: 153, column: 5, scope: !5740)
!5755 = !DILocalVariable(name: "g", scope: !5740, file: !3144, line: 154, type: !130)
!5756 = !DILocation(line: 154, column: 5, scope: !5740)
!5757 = !DILocalVariable(name: "r", scope: !5740, file: !3144, line: 155, type: !130)
!5758 = !DILocation(line: 155, column: 5, scope: !5740)
!5759 = !DILocation(line: 160, column: 12, scope: !5740)
!5760 = !DILocation(line: 160, column: 11, scope: !5740)
!5761 = !DILocation(line: 160, column: 21, scope: !5740)
!5762 = !DILocation(line: 160, column: 20, scope: !5740)
!5763 = !DILocation(line: 160, column: 13, scope: !5740)
!5764 = !DILocation(line: 160, column: 30, scope: !5740)
!5765 = !DILocation(line: 160, column: 29, scope: !5740)
!5766 = !DILocation(line: 160, column: 22, scope: !5740)
!5767 = !DILocation(line: 160, column: 4, scope: !5740)
!5768 = !DILocation(line: 161, column: 15, scope: !5740)
!5769 = !DILocation(line: 161, column: 14, scope: !5740)
!5770 = !DILocation(line: 161, column: 24, scope: !5740)
!5771 = !DILocation(line: 161, column: 23, scope: !5740)
!5772 = !DILocation(line: 161, column: 16, scope: !5740)
!5773 = !DILocation(line: 161, column: 33, scope: !5740)
!5774 = !DILocation(line: 161, column: 32, scope: !5740)
!5775 = !DILocation(line: 161, column: 25, scope: !5740)
!5776 = !DILocation(line: 161, column: 4, scope: !5740)
!5777 = !DILocation(line: 162, column: 12, scope: !5740)
!5778 = !DILocation(line: 162, column: 11, scope: !5740)
!5779 = !DILocation(line: 162, column: 21, scope: !5740)
!5780 = !DILocation(line: 162, column: 20, scope: !5740)
!5781 = !DILocation(line: 162, column: 13, scope: !5740)
!5782 = !DILocation(line: 162, column: 30, scope: !5740)
!5783 = !DILocation(line: 162, column: 29, scope: !5740)
!5784 = !DILocation(line: 162, column: 22, scope: !5740)
!5785 = !DILocation(line: 162, column: 4, scope: !5740)
!5786 = !DILocation(line: 163, column: 70, scope: !5740)
!5787 = !DILocation(line: 163, column: 69, scope: !5740)
!5788 = !DILocation(line: 163, column: 57, scope: !5740)
!5789 = !DILocation(line: 163, column: 40, scope: !5740)
!5790 = !DILocation(line: 163, column: 8, scope: !5740)
!5791 = !DILocation(line: 163, column: 4, scope: !5740)
!5792 = !DILocation(line: 163, column: 7, scope: !5740)
!5793 = !DILocation(line: 164, column: 72, scope: !5740)
!5794 = !DILocation(line: 164, column: 71, scope: !5740)
!5795 = !DILocation(line: 164, column: 59, scope: !5740)
!5796 = !DILocation(line: 164, column: 42, scope: !5740)
!5797 = !DILocation(line: 164, column: 10, scope: !5740)
!5798 = !DILocation(line: 164, column: 4, scope: !5740)
!5799 = !DILocation(line: 164, column: 9, scope: !5740)
!5800 = !DILocation(line: 165, column: 71, scope: !5740)
!5801 = !DILocation(line: 165, column: 70, scope: !5740)
!5802 = !DILocation(line: 165, column: 58, scope: !5740)
!5803 = !DILocation(line: 165, column: 41, scope: !5740)
!5804 = !DILocation(line: 165, column: 9, scope: !5740)
!5805 = !DILocation(line: 165, column: 4, scope: !5740)
!5806 = !DILocation(line: 165, column: 8, scope: !5740)
!5807 = !DILocation(line: 166, column: 1, scope: !5740)
!5808 = distinct !DISubprogram(name: "ConvertYCbCrToRGB", scope: !3, file: !3, line: 1333, type: !5601, scopeLine: 1335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5809 = !DILocalVariable(name: "Y", arg: 1, scope: !5808, file: !3, line: 1333, type: !3429)
!5810 = !DILocation(line: 1333, column: 44, scope: !5808)
!5811 = !DILocalVariable(name: "Cb", arg: 2, scope: !5808, file: !3, line: 1333, type: !3429)
!5812 = !DILocation(line: 1333, column: 59, scope: !5808)
!5813 = !DILocalVariable(name: "Cr", arg: 3, scope: !5808, file: !3, line: 1334, type: !3429)
!5814 = !DILocation(line: 1334, column: 16, scope: !5808)
!5815 = !DILocalVariable(name: "red", arg: 4, scope: !5808, file: !3, line: 1334, type: !625)
!5816 = !DILocation(line: 1334, column: 28, scope: !5808)
!5817 = !DILocalVariable(name: "green", arg: 5, scope: !5808, file: !3, line: 1334, type: !625)
!5818 = !DILocation(line: 1334, column: 41, scope: !5808)
!5819 = !DILocalVariable(name: "blue", arg: 6, scope: !5808, file: !3, line: 1334, type: !625)
!5820 = !DILocation(line: 1334, column: 56, scope: !5808)
!5821 = !DILocation(line: 1336, column: 21, scope: !5808)
!5822 = !DILocation(line: 1336, column: 23, scope: !5808)
!5823 = !DILocation(line: 1336, column: 26, scope: !5808)
!5824 = !DILocation(line: 1336, column: 29, scope: !5808)
!5825 = !DILocation(line: 1336, column: 33, scope: !5808)
!5826 = !DILocation(line: 1336, column: 39, scope: !5808)
!5827 = !DILocation(line: 1336, column: 3, scope: !5808)
!5828 = !DILocation(line: 1337, column: 1, scope: !5808)
!5829 = distinct !DISubprogram(name: "ConvertYDbDrToRGB", scope: !3, file: !3, line: 1339, type: !5601, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5830 = !DILocalVariable(name: "Y", arg: 1, scope: !5829, file: !3, line: 1339, type: !3429)
!5831 = !DILocation(line: 1339, column: 44, scope: !5829)
!5832 = !DILocalVariable(name: "Db", arg: 2, scope: !5829, file: !3, line: 1339, type: !3429)
!5833 = !DILocation(line: 1339, column: 59, scope: !5829)
!5834 = !DILocalVariable(name: "Dr", arg: 3, scope: !5829, file: !3, line: 1339, type: !3429)
!5835 = !DILocation(line: 1339, column: 75, scope: !5829)
!5836 = !DILocalVariable(name: "red", arg: 4, scope: !5829, file: !3, line: 1340, type: !625)
!5837 = !DILocation(line: 1340, column: 12, scope: !5829)
!5838 = !DILocalVariable(name: "green", arg: 5, scope: !5829, file: !3, line: 1340, type: !625)
!5839 = !DILocation(line: 1340, column: 25, scope: !5829)
!5840 = !DILocalVariable(name: "blue", arg: 6, scope: !5829, file: !3, line: 1340, type: !625)
!5841 = !DILocation(line: 1340, column: 40, scope: !5829)
!5842 = !DILocation(line: 1342, column: 37, scope: !5829)
!5843 = !DILocation(line: 1342, column: 60, scope: !5829)
!5844 = !DILocation(line: 1342, column: 62, scope: !5829)
!5845 = !DILocation(line: 1342, column: 58, scope: !5829)
!5846 = !DILocation(line: 1342, column: 38, scope: !5829)
!5847 = !DILocation(line: 1343, column: 26, scope: !5829)
!5848 = !DILocation(line: 1343, column: 28, scope: !5829)
!5849 = !DILocation(line: 1343, column: 24, scope: !5829)
!5850 = !DILocation(line: 1342, column: 67, scope: !5829)
!5851 = !DILocation(line: 1342, column: 35, scope: !5829)
!5852 = !DILocation(line: 1342, column: 23, scope: !5829)
!5853 = !DILocation(line: 1342, column: 8, scope: !5829)
!5854 = !DILocation(line: 1342, column: 4, scope: !5829)
!5855 = !DILocation(line: 1342, column: 7, scope: !5829)
!5856 = !DILocation(line: 1344, column: 39, scope: !5829)
!5857 = !DILocation(line: 1344, column: 62, scope: !5829)
!5858 = !DILocation(line: 1344, column: 64, scope: !5829)
!5859 = !DILocation(line: 1344, column: 60, scope: !5829)
!5860 = !DILocation(line: 1344, column: 40, scope: !5829)
!5861 = !DILocation(line: 1345, column: 26, scope: !5829)
!5862 = !DILocation(line: 1345, column: 28, scope: !5829)
!5863 = !DILocation(line: 1345, column: 24, scope: !5829)
!5864 = !DILocation(line: 1344, column: 69, scope: !5829)
!5865 = !DILocation(line: 1344, column: 37, scope: !5829)
!5866 = !DILocation(line: 1344, column: 25, scope: !5829)
!5867 = !DILocation(line: 1344, column: 10, scope: !5829)
!5868 = !DILocation(line: 1344, column: 4, scope: !5829)
!5869 = !DILocation(line: 1344, column: 9, scope: !5829)
!5870 = !DILocation(line: 1346, column: 38, scope: !5829)
!5871 = !DILocation(line: 1346, column: 61, scope: !5829)
!5872 = !DILocation(line: 1346, column: 63, scope: !5829)
!5873 = !DILocation(line: 1346, column: 59, scope: !5829)
!5874 = !DILocation(line: 1346, column: 39, scope: !5829)
!5875 = !DILocation(line: 1347, column: 26, scope: !5829)
!5876 = !DILocation(line: 1347, column: 28, scope: !5829)
!5877 = !DILocation(line: 1347, column: 24, scope: !5829)
!5878 = !DILocation(line: 1346, column: 68, scope: !5829)
!5879 = !DILocation(line: 1346, column: 36, scope: !5829)
!5880 = !DILocation(line: 1346, column: 24, scope: !5829)
!5881 = !DILocation(line: 1346, column: 9, scope: !5829)
!5882 = !DILocation(line: 1346, column: 4, scope: !5829)
!5883 = !DILocation(line: 1346, column: 8, scope: !5829)
!5884 = !DILocation(line: 1348, column: 1, scope: !5829)
!5885 = distinct !DISubprogram(name: "ConvertYIQToRGB", scope: !3, file: !3, line: 1350, type: !5601, scopeLine: 1352, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5886 = !DILocalVariable(name: "Y", arg: 1, scope: !5885, file: !3, line: 1350, type: !3429)
!5887 = !DILocation(line: 1350, column: 42, scope: !5885)
!5888 = !DILocalVariable(name: "I", arg: 2, scope: !5885, file: !3, line: 1350, type: !3429)
!5889 = !DILocation(line: 1350, column: 57, scope: !5885)
!5890 = !DILocalVariable(name: "Q", arg: 3, scope: !5885, file: !3, line: 1350, type: !3429)
!5891 = !DILocation(line: 1350, column: 72, scope: !5885)
!5892 = !DILocalVariable(name: "red", arg: 4, scope: !5885, file: !3, line: 1351, type: !625)
!5893 = !DILocation(line: 1351, column: 12, scope: !5885)
!5894 = !DILocalVariable(name: "green", arg: 5, scope: !5885, file: !3, line: 1351, type: !625)
!5895 = !DILocation(line: 1351, column: 25, scope: !5885)
!5896 = !DILocalVariable(name: "blue", arg: 6, scope: !5885, file: !3, line: 1351, type: !625)
!5897 = !DILocation(line: 1351, column: 40, scope: !5885)
!5898 = !DILocation(line: 1353, column: 37, scope: !5885)
!5899 = !DILocation(line: 1353, column: 62, scope: !5885)
!5900 = !DILocation(line: 1353, column: 63, scope: !5885)
!5901 = !DILocation(line: 1353, column: 60, scope: !5885)
!5902 = !DILocation(line: 1353, column: 38, scope: !5885)
!5903 = !DILocation(line: 1354, column: 28, scope: !5885)
!5904 = !DILocation(line: 1354, column: 29, scope: !5885)
!5905 = !DILocation(line: 1354, column: 26, scope: !5885)
!5906 = !DILocation(line: 1353, column: 68, scope: !5885)
!5907 = !DILocation(line: 1353, column: 35, scope: !5885)
!5908 = !DILocation(line: 1353, column: 23, scope: !5885)
!5909 = !DILocation(line: 1353, column: 8, scope: !5885)
!5910 = !DILocation(line: 1353, column: 4, scope: !5885)
!5911 = !DILocation(line: 1353, column: 7, scope: !5885)
!5912 = !DILocation(line: 1355, column: 39, scope: !5885)
!5913 = !DILocation(line: 1355, column: 64, scope: !5885)
!5914 = !DILocation(line: 1355, column: 65, scope: !5885)
!5915 = !DILocation(line: 1355, column: 62, scope: !5885)
!5916 = !DILocation(line: 1355, column: 40, scope: !5885)
!5917 = !DILocation(line: 1356, column: 28, scope: !5885)
!5918 = !DILocation(line: 1356, column: 29, scope: !5885)
!5919 = !DILocation(line: 1356, column: 26, scope: !5885)
!5920 = !DILocation(line: 1355, column: 70, scope: !5885)
!5921 = !DILocation(line: 1355, column: 37, scope: !5885)
!5922 = !DILocation(line: 1355, column: 25, scope: !5885)
!5923 = !DILocation(line: 1355, column: 10, scope: !5885)
!5924 = !DILocation(line: 1355, column: 4, scope: !5885)
!5925 = !DILocation(line: 1355, column: 9, scope: !5885)
!5926 = !DILocation(line: 1357, column: 38, scope: !5885)
!5927 = !DILocation(line: 1357, column: 63, scope: !5885)
!5928 = !DILocation(line: 1357, column: 64, scope: !5885)
!5929 = !DILocation(line: 1357, column: 61, scope: !5885)
!5930 = !DILocation(line: 1357, column: 39, scope: !5885)
!5931 = !DILocation(line: 1358, column: 28, scope: !5885)
!5932 = !DILocation(line: 1358, column: 29, scope: !5885)
!5933 = !DILocation(line: 1358, column: 26, scope: !5885)
!5934 = !DILocation(line: 1357, column: 69, scope: !5885)
!5935 = !DILocation(line: 1357, column: 36, scope: !5885)
!5936 = !DILocation(line: 1357, column: 24, scope: !5885)
!5937 = !DILocation(line: 1357, column: 9, scope: !5885)
!5938 = !DILocation(line: 1357, column: 4, scope: !5885)
!5939 = !DILocation(line: 1357, column: 8, scope: !5885)
!5940 = !DILocation(line: 1359, column: 1, scope: !5885)
!5941 = distinct !DISubprogram(name: "ConvertYPbPrToRGB", scope: !3, file: !3, line: 1322, type: !5601, scopeLine: 1324, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!5942 = !DILocalVariable(name: "Y", arg: 1, scope: !5941, file: !3, line: 1322, type: !3429)
!5943 = !DILocation(line: 1322, column: 44, scope: !5941)
!5944 = !DILocalVariable(name: "Pb", arg: 2, scope: !5941, file: !3, line: 1322, type: !3429)
!5945 = !DILocation(line: 1322, column: 59, scope: !5941)
!5946 = !DILocalVariable(name: "Pr", arg: 3, scope: !5941, file: !3, line: 1322, type: !3429)
!5947 = !DILocation(line: 1322, column: 75, scope: !5941)
!5948 = !DILocalVariable(name: "red", arg: 4, scope: !5941, file: !3, line: 1323, type: !625)
!5949 = !DILocation(line: 1323, column: 12, scope: !5941)
!5950 = !DILocalVariable(name: "green", arg: 5, scope: !5941, file: !3, line: 1323, type: !625)
!5951 = !DILocation(line: 1323, column: 25, scope: !5941)
!5952 = !DILocalVariable(name: "blue", arg: 6, scope: !5941, file: !3, line: 1323, type: !625)
!5953 = !DILocation(line: 1323, column: 40, scope: !5941)
!5954 = !DILocation(line: 1325, column: 60, scope: !5941)
!5955 = !DILocation(line: 1325, column: 59, scope: !5941)
!5956 = !DILocation(line: 1326, column: 29, scope: !5941)
!5957 = !DILocation(line: 1326, column: 31, scope: !5941)
!5958 = !DILocation(line: 1326, column: 27, scope: !5941)
!5959 = !DILocation(line: 1325, column: 61, scope: !5941)
!5960 = !DILocation(line: 1326, column: 60, scope: !5941)
!5961 = !DILocation(line: 1326, column: 62, scope: !5941)
!5962 = !DILocation(line: 1326, column: 58, scope: !5941)
!5963 = !DILocation(line: 1326, column: 36, scope: !5941)
!5964 = !DILocation(line: 1325, column: 35, scope: !5941)
!5965 = !DILocation(line: 1325, column: 23, scope: !5941)
!5966 = !DILocation(line: 1325, column: 8, scope: !5941)
!5967 = !DILocation(line: 1325, column: 4, scope: !5941)
!5968 = !DILocation(line: 1325, column: 7, scope: !5941)
!5969 = !DILocation(line: 1327, column: 62, scope: !5941)
!5970 = !DILocation(line: 1327, column: 61, scope: !5941)
!5971 = !DILocation(line: 1328, column: 29, scope: !5941)
!5972 = !DILocation(line: 1328, column: 31, scope: !5941)
!5973 = !DILocation(line: 1328, column: 27, scope: !5941)
!5974 = !DILocation(line: 1327, column: 63, scope: !5941)
!5975 = !DILocation(line: 1328, column: 61, scope: !5941)
!5976 = !DILocation(line: 1328, column: 63, scope: !5941)
!5977 = !DILocation(line: 1328, column: 59, scope: !5941)
!5978 = !DILocation(line: 1328, column: 36, scope: !5941)
!5979 = !DILocation(line: 1327, column: 37, scope: !5941)
!5980 = !DILocation(line: 1327, column: 25, scope: !5941)
!5981 = !DILocation(line: 1327, column: 10, scope: !5941)
!5982 = !DILocation(line: 1327, column: 4, scope: !5941)
!5983 = !DILocation(line: 1327, column: 9, scope: !5941)
!5984 = !DILocation(line: 1329, column: 61, scope: !5941)
!5985 = !DILocation(line: 1329, column: 60, scope: !5941)
!5986 = !DILocation(line: 1330, column: 29, scope: !5941)
!5987 = !DILocation(line: 1330, column: 31, scope: !5941)
!5988 = !DILocation(line: 1330, column: 27, scope: !5941)
!5989 = !DILocation(line: 1329, column: 62, scope: !5941)
!5990 = !DILocation(line: 1330, column: 61, scope: !5941)
!5991 = !DILocation(line: 1330, column: 63, scope: !5941)
!5992 = !DILocation(line: 1330, column: 59, scope: !5941)
!5993 = !DILocation(line: 1330, column: 36, scope: !5941)
!5994 = !DILocation(line: 1329, column: 36, scope: !5941)
!5995 = !DILocation(line: 1329, column: 24, scope: !5941)
!5996 = !DILocation(line: 1329, column: 9, scope: !5941)
!5997 = !DILocation(line: 1329, column: 4, scope: !5941)
!5998 = !DILocation(line: 1329, column: 8, scope: !5941)
!5999 = !DILocation(line: 1331, column: 1, scope: !5941)
!6000 = distinct !DISubprogram(name: "ConvertYUVToRGB", scope: !3, file: !3, line: 1361, type: !5601, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6001 = !DILocalVariable(name: "Y", arg: 1, scope: !6000, file: !3, line: 1361, type: !3429)
!6002 = !DILocation(line: 1361, column: 42, scope: !6000)
!6003 = !DILocalVariable(name: "U", arg: 2, scope: !6000, file: !3, line: 1361, type: !3429)
!6004 = !DILocation(line: 1361, column: 57, scope: !6000)
!6005 = !DILocalVariable(name: "V", arg: 3, scope: !6000, file: !3, line: 1361, type: !3429)
!6006 = !DILocation(line: 1361, column: 72, scope: !6000)
!6007 = !DILocalVariable(name: "red", arg: 4, scope: !6000, file: !3, line: 1362, type: !625)
!6008 = !DILocation(line: 1362, column: 12, scope: !6000)
!6009 = !DILocalVariable(name: "green", arg: 5, scope: !6000, file: !3, line: 1362, type: !625)
!6010 = !DILocation(line: 1362, column: 25, scope: !6000)
!6011 = !DILocalVariable(name: "blue", arg: 6, scope: !6000, file: !3, line: 1362, type: !625)
!6012 = !DILocation(line: 1362, column: 40, scope: !6000)
!6013 = !DILocation(line: 1364, column: 37, scope: !6000)
!6014 = !DILocation(line: 1364, column: 62, scope: !6000)
!6015 = !DILocation(line: 1364, column: 63, scope: !6000)
!6016 = !DILocation(line: 1364, column: 60, scope: !6000)
!6017 = !DILocation(line: 1364, column: 38, scope: !6000)
!6018 = !DILocation(line: 1365, column: 28, scope: !6000)
!6019 = !DILocation(line: 1365, column: 29, scope: !6000)
!6020 = !DILocation(line: 1365, column: 26, scope: !6000)
!6021 = !DILocation(line: 1364, column: 68, scope: !6000)
!6022 = !DILocation(line: 1364, column: 35, scope: !6000)
!6023 = !DILocation(line: 1364, column: 23, scope: !6000)
!6024 = !DILocation(line: 1364, column: 8, scope: !6000)
!6025 = !DILocation(line: 1364, column: 4, scope: !6000)
!6026 = !DILocation(line: 1364, column: 7, scope: !6000)
!6027 = !DILocation(line: 1366, column: 39, scope: !6000)
!6028 = !DILocation(line: 1366, column: 64, scope: !6000)
!6029 = !DILocation(line: 1366, column: 65, scope: !6000)
!6030 = !DILocation(line: 1366, column: 62, scope: !6000)
!6031 = !DILocation(line: 1366, column: 40, scope: !6000)
!6032 = !DILocation(line: 1367, column: 28, scope: !6000)
!6033 = !DILocation(line: 1367, column: 29, scope: !6000)
!6034 = !DILocation(line: 1367, column: 26, scope: !6000)
!6035 = !DILocation(line: 1366, column: 70, scope: !6000)
!6036 = !DILocation(line: 1366, column: 37, scope: !6000)
!6037 = !DILocation(line: 1366, column: 25, scope: !6000)
!6038 = !DILocation(line: 1366, column: 10, scope: !6000)
!6039 = !DILocation(line: 1366, column: 4, scope: !6000)
!6040 = !DILocation(line: 1366, column: 9, scope: !6000)
!6041 = !DILocation(line: 1368, column: 38, scope: !6000)
!6042 = !DILocation(line: 1368, column: 63, scope: !6000)
!6043 = !DILocation(line: 1368, column: 64, scope: !6000)
!6044 = !DILocation(line: 1368, column: 61, scope: !6000)
!6045 = !DILocation(line: 1368, column: 39, scope: !6000)
!6046 = !DILocation(line: 1369, column: 28, scope: !6000)
!6047 = !DILocation(line: 1369, column: 29, scope: !6000)
!6048 = !DILocation(line: 1369, column: 26, scope: !6000)
!6049 = !DILocation(line: 1368, column: 69, scope: !6000)
!6050 = !DILocation(line: 1368, column: 36, scope: !6000)
!6051 = !DILocation(line: 1368, column: 24, scope: !6000)
!6052 = !DILocation(line: 1368, column: 9, scope: !6000)
!6053 = !DILocation(line: 1368, column: 4, scope: !6000)
!6054 = !DILocation(line: 1368, column: 8, scope: !6000)
!6055 = !DILocation(line: 1370, column: 1, scope: !6000)
!6056 = distinct !DISubprogram(name: "RoundToYCC", scope: !3, file: !3, line: 1291, type: !6057, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6057 = !DISubroutineType(types: !6058)
!6058 = !{!170, !2996}
!6059 = !DILocalVariable(name: "value", arg: 1, scope: !6056, file: !3, line: 1291, type: !2996)
!6060 = !DILocation(line: 1291, column: 55, scope: !6056)
!6061 = !DILocation(line: 1293, column: 7, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1293, column: 7)
!6063 = !DILocation(line: 1293, column: 13, scope: !6062)
!6064 = !DILocation(line: 1293, column: 7, scope: !6056)
!6065 = !DILocation(line: 1294, column: 5, scope: !6062)
!6066 = !DILocation(line: 1295, column: 7, scope: !6067)
!6067 = distinct !DILexicalBlock(scope: !6056, file: !3, line: 1295, column: 7)
!6068 = !DILocation(line: 1295, column: 13, scope: !6067)
!6069 = !DILocation(line: 1295, column: 7, scope: !6056)
!6070 = !DILocation(line: 1296, column: 5, scope: !6067)
!6071 = !DILocation(line: 1297, column: 21, scope: !6056)
!6072 = !DILocation(line: 1297, column: 26, scope: !6056)
!6073 = !DILocation(line: 1297, column: 10, scope: !6056)
!6074 = !DILocation(line: 1297, column: 3, scope: !6056)
!6075 = !DILocation(line: 1298, column: 1, scope: !6056)
!6076 = distinct !DISubprogram(name: "ConvertXYZToLab", scope: !3144, file: !3144, line: 104, type: !6077, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6077 = !DISubroutineType(types: !6078)
!6078 = !{null, !3429, !3429, !3429, !3018, !3018, !3018}
!6079 = !DILocalVariable(name: "X", arg: 1, scope: !6076, file: !3144, line: 104, type: !3429)
!6080 = !DILocation(line: 104, column: 49, scope: !6076)
!6081 = !DILocalVariable(name: "Y", arg: 2, scope: !6076, file: !3144, line: 104, type: !3429)
!6082 = !DILocation(line: 104, column: 64, scope: !6076)
!6083 = !DILocalVariable(name: "Z", arg: 3, scope: !6076, file: !3144, line: 104, type: !3429)
!6084 = !DILocation(line: 104, column: 79, scope: !6076)
!6085 = !DILocalVariable(name: "L", arg: 4, scope: !6076, file: !3144, line: 105, type: !3018)
!6086 = !DILocation(line: 105, column: 11, scope: !6076)
!6087 = !DILocalVariable(name: "a", arg: 5, scope: !6076, file: !3144, line: 105, type: !3018)
!6088 = !DILocation(line: 105, column: 21, scope: !6076)
!6089 = !DILocalVariable(name: "b", arg: 6, scope: !6076, file: !3144, line: 105, type: !3018)
!6090 = !DILocation(line: 105, column: 31, scope: !6076)
!6091 = !DILocalVariable(name: "x", scope: !6076, file: !3144, line: 108, type: !130)
!6092 = !DILocation(line: 108, column: 5, scope: !6076)
!6093 = !DILocalVariable(name: "y", scope: !6076, file: !3144, line: 109, type: !130)
!6094 = !DILocation(line: 109, column: 5, scope: !6076)
!6095 = !DILocalVariable(name: "z", scope: !6076, file: !3144, line: 110, type: !130)
!6096 = !DILocation(line: 110, column: 5, scope: !6076)
!6097 = !DILocation(line: 115, column: 8, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6076, file: !3144, line: 115, column: 7)
!6099 = !DILocation(line: 115, column: 9, scope: !6098)
!6100 = !DILocation(line: 115, column: 16, scope: !6098)
!6101 = !DILocation(line: 115, column: 7, scope: !6076)
!6102 = !DILocation(line: 116, column: 11, scope: !6098)
!6103 = !DILocation(line: 116, column: 12, scope: !6098)
!6104 = !DILocation(line: 116, column: 7, scope: !6098)
!6105 = !DILocation(line: 116, column: 6, scope: !6098)
!6106 = !DILocation(line: 116, column: 5, scope: !6098)
!6107 = !DILocation(line: 118, column: 13, scope: !6098)
!6108 = !DILocation(line: 118, column: 12, scope: !6098)
!6109 = !DILocation(line: 118, column: 14, scope: !6098)
!6110 = !DILocation(line: 118, column: 19, scope: !6098)
!6111 = !DILocation(line: 118, column: 25, scope: !6098)
!6112 = !DILocation(line: 118, column: 6, scope: !6098)
!6113 = !DILocation(line: 119, column: 8, scope: !6114)
!6114 = distinct !DILexicalBlock(scope: !6076, file: !3144, line: 119, column: 7)
!6115 = !DILocation(line: 119, column: 9, scope: !6114)
!6116 = !DILocation(line: 119, column: 16, scope: !6114)
!6117 = !DILocation(line: 119, column: 7, scope: !6076)
!6118 = !DILocation(line: 120, column: 11, scope: !6114)
!6119 = !DILocation(line: 120, column: 12, scope: !6114)
!6120 = !DILocation(line: 120, column: 7, scope: !6114)
!6121 = !DILocation(line: 120, column: 6, scope: !6114)
!6122 = !DILocation(line: 120, column: 5, scope: !6114)
!6123 = !DILocation(line: 122, column: 13, scope: !6114)
!6124 = !DILocation(line: 122, column: 12, scope: !6114)
!6125 = !DILocation(line: 122, column: 14, scope: !6114)
!6126 = !DILocation(line: 122, column: 19, scope: !6114)
!6127 = !DILocation(line: 122, column: 25, scope: !6114)
!6128 = !DILocation(line: 122, column: 6, scope: !6114)
!6129 = !DILocation(line: 123, column: 8, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !6076, file: !3144, line: 123, column: 7)
!6131 = !DILocation(line: 123, column: 9, scope: !6130)
!6132 = !DILocation(line: 123, column: 16, scope: !6130)
!6133 = !DILocation(line: 123, column: 7, scope: !6076)
!6134 = !DILocation(line: 124, column: 11, scope: !6130)
!6135 = !DILocation(line: 124, column: 12, scope: !6130)
!6136 = !DILocation(line: 124, column: 7, scope: !6130)
!6137 = !DILocation(line: 124, column: 6, scope: !6130)
!6138 = !DILocation(line: 124, column: 5, scope: !6130)
!6139 = !DILocation(line: 126, column: 13, scope: !6130)
!6140 = !DILocation(line: 126, column: 12, scope: !6130)
!6141 = !DILocation(line: 126, column: 14, scope: !6130)
!6142 = !DILocation(line: 126, column: 19, scope: !6130)
!6143 = !DILocation(line: 126, column: 25, scope: !6130)
!6144 = !DILocation(line: 126, column: 6, scope: !6130)
!6145 = !DILocation(line: 127, column: 14, scope: !6076)
!6146 = !DILocation(line: 127, column: 13, scope: !6076)
!6147 = !DILocation(line: 127, column: 16, scope: !6076)
!6148 = !DILocation(line: 127, column: 22, scope: !6076)
!6149 = !DILocation(line: 127, column: 4, scope: !6076)
!6150 = !DILocation(line: 127, column: 5, scope: !6076)
!6151 = !DILocation(line: 128, column: 14, scope: !6076)
!6152 = !DILocation(line: 128, column: 16, scope: !6076)
!6153 = !DILocation(line: 128, column: 15, scope: !6076)
!6154 = !DILocation(line: 128, column: 12, scope: !6076)
!6155 = !DILocation(line: 128, column: 19, scope: !6076)
!6156 = !DILocation(line: 128, column: 25, scope: !6076)
!6157 = !DILocation(line: 128, column: 4, scope: !6076)
!6158 = !DILocation(line: 128, column: 5, scope: !6076)
!6159 = !DILocation(line: 129, column: 14, scope: !6076)
!6160 = !DILocation(line: 129, column: 16, scope: !6076)
!6161 = !DILocation(line: 129, column: 15, scope: !6076)
!6162 = !DILocation(line: 129, column: 12, scope: !6076)
!6163 = !DILocation(line: 129, column: 19, scope: !6076)
!6164 = !DILocation(line: 129, column: 25, scope: !6076)
!6165 = !DILocation(line: 129, column: 4, scope: !6076)
!6166 = !DILocation(line: 129, column: 5, scope: !6076)
!6167 = !DILocation(line: 130, column: 1, scope: !6076)
!6168 = distinct !DISubprogram(name: "ConvertXYZToLMS", scope: !3, file: !3, line: 128, type: !6077, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6169 = !DILocalVariable(name: "x", arg: 1, scope: !6168, file: !3, line: 128, type: !3429)
!6170 = !DILocation(line: 128, column: 49, scope: !6168)
!6171 = !DILocalVariable(name: "y", arg: 2, scope: !6168, file: !3, line: 128, type: !3429)
!6172 = !DILocation(line: 128, column: 64, scope: !6168)
!6173 = !DILocalVariable(name: "z", arg: 3, scope: !6168, file: !3, line: 129, type: !3429)
!6174 = !DILocation(line: 129, column: 16, scope: !6168)
!6175 = !DILocalVariable(name: "L", arg: 4, scope: !6168, file: !3, line: 129, type: !3018)
!6176 = !DILocation(line: 129, column: 26, scope: !6168)
!6177 = !DILocalVariable(name: "M", arg: 5, scope: !6168, file: !3, line: 129, type: !3018)
!6178 = !DILocation(line: 129, column: 36, scope: !6168)
!6179 = !DILocalVariable(name: "S", arg: 6, scope: !6168, file: !3, line: 129, type: !3018)
!6180 = !DILocation(line: 129, column: 46, scope: !6168)
!6181 = !DILocation(line: 131, column: 13, scope: !6168)
!6182 = !DILocation(line: 131, column: 12, scope: !6168)
!6183 = !DILocation(line: 131, column: 22, scope: !6168)
!6184 = !DILocation(line: 131, column: 21, scope: !6168)
!6185 = !DILocation(line: 131, column: 14, scope: !6168)
!6186 = !DILocation(line: 131, column: 31, scope: !6168)
!6187 = !DILocation(line: 131, column: 30, scope: !6168)
!6188 = !DILocation(line: 131, column: 23, scope: !6168)
!6189 = !DILocation(line: 131, column: 4, scope: !6168)
!6190 = !DILocation(line: 131, column: 5, scope: !6168)
!6191 = !DILocation(line: 132, column: 15, scope: !6168)
!6192 = !DILocation(line: 132, column: 14, scope: !6168)
!6193 = !DILocation(line: 132, column: 24, scope: !6168)
!6194 = !DILocation(line: 132, column: 23, scope: !6168)
!6195 = !DILocation(line: 132, column: 16, scope: !6168)
!6196 = !DILocation(line: 132, column: 33, scope: !6168)
!6197 = !DILocation(line: 132, column: 32, scope: !6168)
!6198 = !DILocation(line: 132, column: 25, scope: !6168)
!6199 = !DILocation(line: 132, column: 4, scope: !6168)
!6200 = !DILocation(line: 132, column: 5, scope: !6168)
!6201 = !DILocation(line: 133, column: 13, scope: !6168)
!6202 = !DILocation(line: 133, column: 12, scope: !6168)
!6203 = !DILocation(line: 133, column: 22, scope: !6168)
!6204 = !DILocation(line: 133, column: 21, scope: !6168)
!6205 = !DILocation(line: 133, column: 14, scope: !6168)
!6206 = !DILocation(line: 133, column: 31, scope: !6168)
!6207 = !DILocation(line: 133, column: 30, scope: !6168)
!6208 = !DILocation(line: 133, column: 23, scope: !6168)
!6209 = !DILocation(line: 133, column: 4, scope: !6168)
!6210 = !DILocation(line: 133, column: 5, scope: !6168)
!6211 = !DILocation(line: 134, column: 1, scope: !6168)
!6212 = distinct !DISubprogram(name: "ConvertXYZToLuv", scope: !3144, file: !3144, line: 64, type: !6077, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6213 = !DILocalVariable(name: "X", arg: 1, scope: !6212, file: !3144, line: 64, type: !3429)
!6214 = !DILocation(line: 64, column: 49, scope: !6212)
!6215 = !DILocalVariable(name: "Y", arg: 2, scope: !6212, file: !3144, line: 64, type: !3429)
!6216 = !DILocation(line: 64, column: 64, scope: !6212)
!6217 = !DILocalVariable(name: "Z", arg: 3, scope: !6212, file: !3144, line: 64, type: !3429)
!6218 = !DILocation(line: 64, column: 79, scope: !6212)
!6219 = !DILocalVariable(name: "L", arg: 4, scope: !6212, file: !3144, line: 65, type: !3018)
!6220 = !DILocation(line: 65, column: 11, scope: !6212)
!6221 = !DILocalVariable(name: "u", arg: 5, scope: !6212, file: !3144, line: 65, type: !3018)
!6222 = !DILocation(line: 65, column: 21, scope: !6212)
!6223 = !DILocalVariable(name: "v", arg: 6, scope: !6212, file: !3144, line: 65, type: !3018)
!6224 = !DILocation(line: 65, column: 31, scope: !6212)
!6225 = !DILocalVariable(name: "alpha", scope: !6212, file: !3144, line: 68, type: !130)
!6226 = !DILocation(line: 68, column: 5, scope: !6212)
!6227 = !DILocation(line: 73, column: 8, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6212, file: !3144, line: 73, column: 7)
!6229 = !DILocation(line: 73, column: 9, scope: !6228)
!6230 = !DILocation(line: 73, column: 16, scope: !6228)
!6231 = !DILocation(line: 73, column: 7, scope: !6212)
!6232 = !DILocation(line: 74, column: 28, scope: !6228)
!6233 = !DILocation(line: 74, column: 29, scope: !6228)
!6234 = !DILocation(line: 74, column: 24, scope: !6228)
!6235 = !DILocation(line: 74, column: 23, scope: !6228)
!6236 = !DILocation(line: 74, column: 43, scope: !6228)
!6237 = !DILocation(line: 74, column: 6, scope: !6228)
!6238 = !DILocation(line: 74, column: 7, scope: !6228)
!6239 = !DILocation(line: 74, column: 5, scope: !6228)
!6240 = !DILocation(line: 76, column: 14, scope: !6228)
!6241 = !DILocation(line: 76, column: 15, scope: !6228)
!6242 = !DILocation(line: 76, column: 12, scope: !6228)
!6243 = !DILocation(line: 76, column: 6, scope: !6228)
!6244 = !DILocation(line: 76, column: 7, scope: !6228)
!6245 = !DILocation(line: 77, column: 31, scope: !6212)
!6246 = !DILocation(line: 77, column: 38, scope: !6212)
!6247 = !DILocation(line: 77, column: 37, scope: !6212)
!6248 = !DILocation(line: 77, column: 32, scope: !6212)
!6249 = !DILocation(line: 77, column: 44, scope: !6212)
!6250 = !DILocation(line: 77, column: 43, scope: !6212)
!6251 = !DILocation(line: 77, column: 39, scope: !6212)
!6252 = !DILocation(line: 77, column: 9, scope: !6212)
!6253 = !DILocation(line: 77, column: 8, scope: !6212)
!6254 = !DILocation(line: 78, column: 13, scope: !6212)
!6255 = !DILocation(line: 78, column: 12, scope: !6212)
!6256 = !DILocation(line: 78, column: 10, scope: !6212)
!6257 = !DILocation(line: 78, column: 22, scope: !6212)
!6258 = !DILocation(line: 78, column: 21, scope: !6212)
!6259 = !DILocation(line: 78, column: 28, scope: !6212)
!6260 = !DILocation(line: 78, column: 27, scope: !6212)
!6261 = !DILocation(line: 78, column: 30, scope: !6212)
!6262 = !DILocation(line: 78, column: 15, scope: !6212)
!6263 = !DILocation(line: 78, column: 4, scope: !6212)
!6264 = !DILocation(line: 78, column: 5, scope: !6212)
!6265 = !DILocation(line: 79, column: 13, scope: !6212)
!6266 = !DILocation(line: 79, column: 12, scope: !6212)
!6267 = !DILocation(line: 79, column: 10, scope: !6212)
!6268 = !DILocation(line: 79, column: 22, scope: !6212)
!6269 = !DILocation(line: 79, column: 21, scope: !6212)
!6270 = !DILocation(line: 79, column: 28, scope: !6212)
!6271 = !DILocation(line: 79, column: 27, scope: !6212)
!6272 = !DILocation(line: 79, column: 30, scope: !6212)
!6273 = !DILocation(line: 79, column: 15, scope: !6212)
!6274 = !DILocation(line: 79, column: 4, scope: !6212)
!6275 = !DILocation(line: 79, column: 5, scope: !6212)
!6276 = !DILocation(line: 80, column: 4, scope: !6212)
!6277 = !DILocation(line: 80, column: 5, scope: !6212)
!6278 = !DILocation(line: 81, column: 8, scope: !6212)
!6279 = !DILocation(line: 81, column: 7, scope: !6212)
!6280 = !DILocation(line: 81, column: 9, scope: !6212)
!6281 = !DILocation(line: 81, column: 16, scope: !6212)
!6282 = !DILocation(line: 81, column: 4, scope: !6212)
!6283 = !DILocation(line: 81, column: 5, scope: !6212)
!6284 = !DILocation(line: 82, column: 8, scope: !6212)
!6285 = !DILocation(line: 82, column: 7, scope: !6212)
!6286 = !DILocation(line: 82, column: 9, scope: !6212)
!6287 = !DILocation(line: 82, column: 16, scope: !6212)
!6288 = !DILocation(line: 82, column: 4, scope: !6212)
!6289 = !DILocation(line: 82, column: 5, scope: !6212)
!6290 = !DILocation(line: 83, column: 1, scope: !6212)
!6291 = distinct !DISubprogram(name: "ConvertLabToXYZ", scope: !3144, file: !3144, line: 33, type: !6077, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6292 = !DILocalVariable(name: "L", arg: 1, scope: !6291, file: !3144, line: 33, type: !3429)
!6293 = !DILocation(line: 33, column: 49, scope: !6291)
!6294 = !DILocalVariable(name: "a", arg: 2, scope: !6291, file: !3144, line: 33, type: !3429)
!6295 = !DILocation(line: 33, column: 64, scope: !6291)
!6296 = !DILocalVariable(name: "b", arg: 3, scope: !6291, file: !3144, line: 33, type: !3429)
!6297 = !DILocation(line: 33, column: 79, scope: !6291)
!6298 = !DILocalVariable(name: "X", arg: 4, scope: !6291, file: !3144, line: 34, type: !3018)
!6299 = !DILocation(line: 34, column: 11, scope: !6291)
!6300 = !DILocalVariable(name: "Y", arg: 5, scope: !6291, file: !3144, line: 34, type: !3018)
!6301 = !DILocation(line: 34, column: 21, scope: !6291)
!6302 = !DILocalVariable(name: "Z", arg: 6, scope: !6291, file: !3144, line: 34, type: !3018)
!6303 = !DILocation(line: 34, column: 31, scope: !6291)
!6304 = !DILocalVariable(name: "x", scope: !6291, file: !3144, line: 37, type: !130)
!6305 = !DILocation(line: 37, column: 5, scope: !6291)
!6306 = !DILocalVariable(name: "y", scope: !6291, file: !3144, line: 38, type: !130)
!6307 = !DILocation(line: 38, column: 5, scope: !6291)
!6308 = !DILocalVariable(name: "z", scope: !6291, file: !3144, line: 39, type: !130)
!6309 = !DILocation(line: 39, column: 5, scope: !6291)
!6310 = !DILocation(line: 44, column: 6, scope: !6291)
!6311 = !DILocation(line: 44, column: 7, scope: !6291)
!6312 = !DILocation(line: 44, column: 13, scope: !6291)
!6313 = !DILocation(line: 44, column: 4, scope: !6291)
!6314 = !DILocation(line: 45, column: 5, scope: !6291)
!6315 = !DILocation(line: 45, column: 7, scope: !6291)
!6316 = !DILocation(line: 45, column: 8, scope: !6291)
!6317 = !DILocation(line: 45, column: 6, scope: !6291)
!6318 = !DILocation(line: 45, column: 4, scope: !6291)
!6319 = !DILocation(line: 46, column: 5, scope: !6291)
!6320 = !DILocation(line: 46, column: 7, scope: !6291)
!6321 = !DILocation(line: 46, column: 8, scope: !6291)
!6322 = !DILocation(line: 46, column: 6, scope: !6291)
!6323 = !DILocation(line: 46, column: 4, scope: !6291)
!6324 = !DILocation(line: 47, column: 8, scope: !6325)
!6325 = distinct !DILexicalBlock(scope: !6291, file: !3144, line: 47, column: 7)
!6326 = !DILocation(line: 47, column: 10, scope: !6325)
!6327 = !DILocation(line: 47, column: 9, scope: !6325)
!6328 = !DILocation(line: 47, column: 12, scope: !6325)
!6329 = !DILocation(line: 47, column: 11, scope: !6325)
!6330 = !DILocation(line: 47, column: 15, scope: !6325)
!6331 = !DILocation(line: 47, column: 7, scope: !6291)
!6332 = !DILocation(line: 48, column: 8, scope: !6325)
!6333 = !DILocation(line: 48, column: 10, scope: !6325)
!6334 = !DILocation(line: 48, column: 9, scope: !6325)
!6335 = !DILocation(line: 48, column: 12, scope: !6325)
!6336 = !DILocation(line: 48, column: 11, scope: !6325)
!6337 = !DILocation(line: 48, column: 6, scope: !6325)
!6338 = !DILocation(line: 48, column: 5, scope: !6325)
!6339 = !DILocation(line: 50, column: 14, scope: !6325)
!6340 = !DILocation(line: 50, column: 13, scope: !6325)
!6341 = !DILocation(line: 50, column: 15, scope: !6325)
!6342 = !DILocation(line: 50, column: 21, scope: !6325)
!6343 = !DILocation(line: 50, column: 6, scope: !6325)
!6344 = !DILocation(line: 51, column: 8, scope: !6345)
!6345 = distinct !DILexicalBlock(scope: !6291, file: !3144, line: 51, column: 7)
!6346 = !DILocation(line: 51, column: 10, scope: !6345)
!6347 = !DILocation(line: 51, column: 9, scope: !6345)
!6348 = !DILocation(line: 51, column: 12, scope: !6345)
!6349 = !DILocation(line: 51, column: 11, scope: !6345)
!6350 = !DILocation(line: 51, column: 15, scope: !6345)
!6351 = !DILocation(line: 51, column: 7, scope: !6291)
!6352 = !DILocation(line: 52, column: 8, scope: !6345)
!6353 = !DILocation(line: 52, column: 10, scope: !6345)
!6354 = !DILocation(line: 52, column: 9, scope: !6345)
!6355 = !DILocation(line: 52, column: 12, scope: !6345)
!6356 = !DILocation(line: 52, column: 11, scope: !6345)
!6357 = !DILocation(line: 52, column: 6, scope: !6345)
!6358 = !DILocation(line: 52, column: 5, scope: !6345)
!6359 = !DILocation(line: 54, column: 7, scope: !6345)
!6360 = !DILocation(line: 54, column: 8, scope: !6345)
!6361 = !DILocation(line: 54, column: 6, scope: !6345)
!6362 = !DILocation(line: 55, column: 8, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6291, file: !3144, line: 55, column: 7)
!6364 = !DILocation(line: 55, column: 10, scope: !6363)
!6365 = !DILocation(line: 55, column: 9, scope: !6363)
!6366 = !DILocation(line: 55, column: 12, scope: !6363)
!6367 = !DILocation(line: 55, column: 11, scope: !6363)
!6368 = !DILocation(line: 55, column: 15, scope: !6363)
!6369 = !DILocation(line: 55, column: 7, scope: !6291)
!6370 = !DILocation(line: 56, column: 8, scope: !6363)
!6371 = !DILocation(line: 56, column: 10, scope: !6363)
!6372 = !DILocation(line: 56, column: 9, scope: !6363)
!6373 = !DILocation(line: 56, column: 12, scope: !6363)
!6374 = !DILocation(line: 56, column: 11, scope: !6363)
!6375 = !DILocation(line: 56, column: 6, scope: !6363)
!6376 = !DILocation(line: 56, column: 5, scope: !6363)
!6377 = !DILocation(line: 58, column: 14, scope: !6363)
!6378 = !DILocation(line: 58, column: 13, scope: !6363)
!6379 = !DILocation(line: 58, column: 15, scope: !6363)
!6380 = !DILocation(line: 58, column: 21, scope: !6363)
!6381 = !DILocation(line: 58, column: 6, scope: !6363)
!6382 = !DILocation(line: 59, column: 11, scope: !6291)
!6383 = !DILocation(line: 59, column: 10, scope: !6291)
!6384 = !DILocation(line: 59, column: 4, scope: !6291)
!6385 = !DILocation(line: 59, column: 5, scope: !6291)
!6386 = !DILocation(line: 60, column: 11, scope: !6291)
!6387 = !DILocation(line: 60, column: 10, scope: !6291)
!6388 = !DILocation(line: 60, column: 4, scope: !6291)
!6389 = !DILocation(line: 60, column: 5, scope: !6291)
!6390 = !DILocation(line: 61, column: 11, scope: !6291)
!6391 = !DILocation(line: 61, column: 10, scope: !6291)
!6392 = !DILocation(line: 61, column: 4, scope: !6291)
!6393 = !DILocation(line: 61, column: 5, scope: !6291)
!6394 = !DILocation(line: 62, column: 1, scope: !6291)
!6395 = distinct !DISubprogram(name: "ConvertLMSToXYZ", scope: !3, file: !3, line: 1259, type: !6077, scopeLine: 1261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6396 = !DILocalVariable(name: "L", arg: 1, scope: !6395, file: !3, line: 1259, type: !3429)
!6397 = !DILocation(line: 1259, column: 49, scope: !6395)
!6398 = !DILocalVariable(name: "M", arg: 2, scope: !6395, file: !3, line: 1259, type: !3429)
!6399 = !DILocation(line: 1259, column: 64, scope: !6395)
!6400 = !DILocalVariable(name: "S", arg: 3, scope: !6395, file: !3, line: 1259, type: !3429)
!6401 = !DILocation(line: 1259, column: 79, scope: !6395)
!6402 = !DILocalVariable(name: "X", arg: 4, scope: !6395, file: !3, line: 1260, type: !3018)
!6403 = !DILocation(line: 1260, column: 11, scope: !6395)
!6404 = !DILocalVariable(name: "Y", arg: 5, scope: !6395, file: !3, line: 1260, type: !3018)
!6405 = !DILocation(line: 1260, column: 21, scope: !6395)
!6406 = !DILocalVariable(name: "Z", arg: 6, scope: !6395, file: !3, line: 1260, type: !3018)
!6407 = !DILocation(line: 1260, column: 31, scope: !6395)
!6408 = !DILocation(line: 1262, column: 24, scope: !6395)
!6409 = !DILocation(line: 1262, column: 23, scope: !6395)
!6410 = !DILocation(line: 1262, column: 44, scope: !6395)
!6411 = !DILocation(line: 1262, column: 43, scope: !6395)
!6412 = !DILocation(line: 1262, column: 25, scope: !6395)
!6413 = !DILocation(line: 1262, column: 64, scope: !6395)
!6414 = !DILocation(line: 1262, column: 63, scope: !6395)
!6415 = !DILocation(line: 1262, column: 45, scope: !6395)
!6416 = !DILocation(line: 1262, column: 4, scope: !6395)
!6417 = !DILocation(line: 1262, column: 5, scope: !6395)
!6418 = !DILocation(line: 1263, column: 24, scope: !6395)
!6419 = !DILocation(line: 1263, column: 23, scope: !6395)
!6420 = !DILocation(line: 1263, column: 44, scope: !6395)
!6421 = !DILocation(line: 1263, column: 43, scope: !6395)
!6422 = !DILocation(line: 1263, column: 25, scope: !6395)
!6423 = !DILocation(line: 1263, column: 64, scope: !6395)
!6424 = !DILocation(line: 1263, column: 63, scope: !6395)
!6425 = !DILocation(line: 1263, column: 45, scope: !6395)
!6426 = !DILocation(line: 1263, column: 4, scope: !6395)
!6427 = !DILocation(line: 1263, column: 5, scope: !6395)
!6428 = !DILocation(line: 1264, column: 27, scope: !6395)
!6429 = !DILocation(line: 1264, column: 26, scope: !6395)
!6430 = !DILocation(line: 1264, column: 47, scope: !6395)
!6431 = !DILocation(line: 1264, column: 46, scope: !6395)
!6432 = !DILocation(line: 1264, column: 28, scope: !6395)
!6433 = !DILocation(line: 1264, column: 67, scope: !6395)
!6434 = !DILocation(line: 1264, column: 66, scope: !6395)
!6435 = !DILocation(line: 1264, column: 48, scope: !6395)
!6436 = !DILocation(line: 1264, column: 4, scope: !6395)
!6437 = !DILocation(line: 1264, column: 5, scope: !6395)
!6438 = !DILocation(line: 1265, column: 1, scope: !6395)
!6439 = distinct !DISubprogram(name: "ConvertLuvToXYZ", scope: !3144, file: !3144, line: 132, type: !6077, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !594, retainedNodes: !638)
!6440 = !DILocalVariable(name: "L", arg: 1, scope: !6439, file: !3144, line: 132, type: !3429)
!6441 = !DILocation(line: 132, column: 49, scope: !6439)
!6442 = !DILocalVariable(name: "u", arg: 2, scope: !6439, file: !3144, line: 132, type: !3429)
!6443 = !DILocation(line: 132, column: 64, scope: !6439)
!6444 = !DILocalVariable(name: "v", arg: 3, scope: !6439, file: !3144, line: 132, type: !3429)
!6445 = !DILocation(line: 132, column: 79, scope: !6439)
!6446 = !DILocalVariable(name: "X", arg: 4, scope: !6439, file: !3144, line: 133, type: !3018)
!6447 = !DILocation(line: 133, column: 11, scope: !6439)
!6448 = !DILocalVariable(name: "Y", arg: 5, scope: !6439, file: !3144, line: 133, type: !3018)
!6449 = !DILocation(line: 133, column: 21, scope: !6439)
!6450 = !DILocalVariable(name: "Z", arg: 6, scope: !6439, file: !3144, line: 133, type: !3018)
!6451 = !DILocation(line: 133, column: 31, scope: !6439)
!6452 = !DILocation(line: 138, column: 7, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6439, file: !3144, line: 138, column: 7)
!6454 = !DILocation(line: 138, column: 9, scope: !6453)
!6455 = !DILocation(line: 138, column: 7, scope: !6439)
!6456 = !DILocation(line: 139, column: 22, scope: !6453)
!6457 = !DILocation(line: 139, column: 23, scope: !6453)
!6458 = !DILocation(line: 139, column: 29, scope: !6453)
!6459 = !DILocation(line: 139, column: 17, scope: !6453)
!6460 = !DILocation(line: 139, column: 6, scope: !6453)
!6461 = !DILocation(line: 139, column: 7, scope: !6453)
!6462 = !DILocation(line: 139, column: 5, scope: !6453)
!6463 = !DILocation(line: 141, column: 8, scope: !6453)
!6464 = !DILocation(line: 141, column: 9, scope: !6453)
!6465 = !DILocation(line: 141, column: 6, scope: !6453)
!6466 = !DILocation(line: 141, column: 7, scope: !6453)
!6467 = !DILocation(line: 142, column: 9, scope: !6439)
!6468 = !DILocation(line: 142, column: 8, scope: !6439)
!6469 = !DILocation(line: 142, column: 18, scope: !6439)
!6470 = !DILocation(line: 142, column: 17, scope: !6439)
!6471 = !DILocation(line: 142, column: 21, scope: !6439)
!6472 = !DILocation(line: 142, column: 28, scope: !6439)
!6473 = !DILocation(line: 142, column: 27, scope: !6439)
!6474 = !DILocation(line: 142, column: 29, scope: !6439)
!6475 = !DILocation(line: 142, column: 22, scope: !6439)
!6476 = !DILocation(line: 142, column: 19, scope: !6439)
!6477 = !DILocation(line: 142, column: 68, scope: !6439)
!6478 = !DILocation(line: 142, column: 10, scope: !6439)
!6479 = !DILocation(line: 143, column: 11, scope: !6439)
!6480 = !DILocation(line: 143, column: 10, scope: !6439)
!6481 = !DILocation(line: 143, column: 8, scope: !6439)
!6482 = !DILocation(line: 142, column: 74, scope: !6439)
!6483 = !DILocation(line: 143, column: 25, scope: !6439)
!6484 = !DILocation(line: 143, column: 24, scope: !6439)
!6485 = !DILocation(line: 143, column: 28, scope: !6439)
!6486 = !DILocation(line: 143, column: 35, scope: !6439)
!6487 = !DILocation(line: 143, column: 34, scope: !6439)
!6488 = !DILocation(line: 143, column: 36, scope: !6439)
!6489 = !DILocation(line: 143, column: 29, scope: !6439)
!6490 = !DILocation(line: 143, column: 26, scope: !6439)
!6491 = !DILocation(line: 143, column: 75, scope: !6439)
!6492 = !DILocation(line: 143, column: 80, scope: !6439)
!6493 = !DILocation(line: 144, column: 9, scope: !6439)
!6494 = !DILocation(line: 143, column: 14, scope: !6439)
!6495 = !DILocation(line: 142, column: 4, scope: !6439)
!6496 = !DILocation(line: 142, column: 5, scope: !6439)
!6497 = !DILocation(line: 145, column: 8, scope: !6439)
!6498 = !DILocation(line: 145, column: 7, scope: !6439)
!6499 = !DILocation(line: 145, column: 19, scope: !6439)
!6500 = !DILocation(line: 145, column: 18, scope: !6439)
!6501 = !DILocation(line: 145, column: 22, scope: !6439)
!6502 = !DILocation(line: 145, column: 29, scope: !6439)
!6503 = !DILocation(line: 145, column: 28, scope: !6439)
!6504 = !DILocation(line: 145, column: 30, scope: !6439)
!6505 = !DILocation(line: 145, column: 23, scope: !6439)
!6506 = !DILocation(line: 145, column: 20, scope: !6439)
!6507 = !DILocation(line: 145, column: 69, scope: !6439)
!6508 = !DILocation(line: 145, column: 74, scope: !6439)
!6509 = !DILocation(line: 145, column: 9, scope: !6439)
!6510 = !DILocation(line: 146, column: 11, scope: !6439)
!6511 = !DILocation(line: 146, column: 10, scope: !6439)
!6512 = !DILocation(line: 146, column: 8, scope: !6439)
!6513 = !DILocation(line: 145, column: 80, scope: !6439)
!6514 = !DILocation(line: 145, column: 4, scope: !6439)
!6515 = !DILocation(line: 145, column: 5, scope: !6439)
!6516 = !DILocation(line: 147, column: 1, scope: !6439)
