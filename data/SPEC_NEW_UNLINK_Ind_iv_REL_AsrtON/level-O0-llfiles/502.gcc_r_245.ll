; ModuleID = 'simplify-rtx.c'
source_filename = "simplify-rtx.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.real_format = type { void (%struct.real_format*, i64*, %struct.real_value*)*, void (%struct.real_format*, %struct.real_value*, i64*)*, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.real_value = type { i32, [3 x i64] }
%struct.rtl_hooks = type { %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i64, i64*)*, %struct.rtx_def* (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (i32, %struct.rtx_def*)* }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.fixed_value = type { %struct.double_int, i32 }
%struct.simplify_plus_minus_op_data = type { %struct.rtx_def*, i16 }

@mode_class = external dso_local constant [87 x i8], align 16
@mode_size = external dso_local global [87 x i8], align 16
@rtx_class = external dso_local constant [139 x i32], align 16
@targetm = external dso_local global %struct.gcc_target, align 8
@tree_contains_struct = external dso_local global [191 x [64 x i8]], align 16
@rtx_format = external dso_local constant [139 x i8*], align 16
@.str = private unnamed_addr constant [15 x i8] c"simplify-rtx.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@mode_inner = external dso_local constant [87 x i8], align 16
@mode_mask_array = external dso_local constant [87 x i64], align 16
@flag_signaling_nans = external dso_local global i32, align 4
@real_format_for_mode = external dso_local global [7 x %struct.real_format*], align 16
@flag_finite_math_only = external dso_local global i32, align 4
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@mode_nunits = external dso_local constant [87 x i8], align 16
@dconst0 = external dso_local global %struct.real_value, align 8
@flag_trapping_math = external dso_local global i32, align 4
@flag_rounding_math = external dso_local global i32, align 4
@flag_unsafe_math_optimizations = external dso_local global i32, align 4
@const_tiny_rtx = external dso_local global [3 x [87 x %struct.rtx_def*]], align 16
@const_true_rtx = external dso_local global %struct.rtx_def*, align 8
@flag_wrapv = external dso_local global i32, align 4
@flag_trapv = external dso_local global i32, align 4
@flag_strict_overflow = external dso_local global i32, align 4
@warn_strict_overflow = external dso_local global i32, align 4
@.str.2 = private unnamed_addr constant [75 x i8] c"assuming signed overflow does not occur when assuming abs (x) < 0 is false\00", align 1
@.str.3 = private unnamed_addr constant [75 x i8] c"assuming signed overflow does not occur when assuming abs (x) >= 0 is true\00", align 1
@flag_signed_zeros = external dso_local global i32, align 4
@rtl_hooks = external dso_local global %struct.rtl_hooks, align 8
@cfun = external dso_local global %struct.function*, align 8
@flag_associative_math = external dso_local global i32, align 4
@dconst2 = external dso_local global %struct.real_value, align 8
@dconstm1 = external dso_local global %struct.real_value, align 8
@flag_reciprocal_math = external dso_local global i32, align 4
@dconst1 = external dso_local global %struct.real_value, align 8

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @mode_signbit_p(i32 %mode, %struct.rtx_def* %x) #0 !dbg !2585 {
entry:
  %retval = alloca i8, align 1
  %mode.addr = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %val = alloca i64, align 8
  %width = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2591, metadata !DIExpression()), !dbg !2592
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2593, metadata !DIExpression()), !dbg !2594
  call void @llvm.dbg.declare(metadata i64* %val, metadata !2595, metadata !DIExpression()), !dbg !2596
  call void @llvm.dbg.declare(metadata i32* %width, metadata !2597, metadata !DIExpression()), !dbg !2598
  %0 = load i32, i32* %mode.addr, align 4, !dbg !2599
  %idxprom = zext i32 %0 to i64, !dbg !2599
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !2599
  %1 = load i8, i8* %arrayidx, align 1, !dbg !2599
  %conv = zext i8 %1 to i32, !dbg !2599
  %cmp = icmp ne i32 %conv, 2, !dbg !2601
  br i1 %cmp, label %if.then, label %if.end, !dbg !2602

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !2603
  br label %return, !dbg !2603

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !2604
  %idxprom2 = zext i32 %2 to i64, !dbg !2604
  %arrayidx3 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2, !dbg !2604
  %3 = load i8, i8* %arrayidx3, align 1, !dbg !2604
  %conv4 = zext i8 %3 to i16, !dbg !2604
  %conv5 = zext i16 %conv4 to i32, !dbg !2604
  %mul = mul nsw i32 %conv5, 8, !dbg !2604
  %conv6 = trunc i32 %mul to i16, !dbg !2604
  %conv7 = zext i16 %conv6 to i32, !dbg !2604
  store i32 %conv7, i32* %width, align 4, !dbg !2605
  %4 = load i32, i32* %width, align 4, !dbg !2606
  %cmp8 = icmp eq i32 %4, 0, !dbg !2608
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !2609

if.then10:                                        ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !2610
  br label %return, !dbg !2610

if.end11:                                         ; preds = %if.end
  %5 = load i32, i32* %width, align 4, !dbg !2611
  %cmp12 = icmp ule i32 %5, 64, !dbg !2613
  br i1 %cmp12, label %land.lhs.true, label %if.else, !dbg !2614

land.lhs.true:                                    ; preds = %if.end11
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2615
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !2615
  %bf.load = load i32, i32* %7, align 8, !dbg !2615
  %bf.clear = and i32 %bf.load, 65535, !dbg !2615
  %cmp14 = icmp eq i32 %bf.clear, 30, !dbg !2615
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !2616

if.then16:                                        ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2617
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !2617
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !2617
  %arrayidx17 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2617
  %9 = load i64, i64* %arrayidx17, align 8, !dbg !2617
  store i64 %9, i64* %val, align 8, !dbg !2618
  br label %if.end37, !dbg !2619

if.else:                                          ; preds = %land.lhs.true, %if.end11
  %10 = load i32, i32* %width, align 4, !dbg !2620
  %cmp18 = icmp ule i32 %10, 128, !dbg !2622
  br i1 %cmp18, label %land.lhs.true20, label %if.else35, !dbg !2623

land.lhs.true20:                                  ; preds = %if.else
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2624
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !2624
  %bf.load21 = load i32, i32* %12, align 8, !dbg !2624
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !2624
  %cmp23 = icmp eq i32 %bf.clear22, 32, !dbg !2625
  br i1 %cmp23, label %land.lhs.true25, label %if.else35, !dbg !2626

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2627
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2627
  %hwint27 = bitcast %union.u* %u26 to [1 x i64]*, !dbg !2627
  %arrayidx28 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint27, i64 0, i64 0, !dbg !2627
  %14 = load i64, i64* %arrayidx28, align 8, !dbg !2627
  %cmp29 = icmp eq i64 %14, 0, !dbg !2628
  br i1 %cmp29, label %if.then31, label %if.else35, !dbg !2629

if.then31:                                        ; preds = %land.lhs.true25
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2630
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !2630
  %hwint33 = bitcast %union.u* %u32 to [1 x i64]*, !dbg !2630
  %arrayidx34 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint33, i64 0, i64 1, !dbg !2630
  %16 = load i64, i64* %arrayidx34, align 8, !dbg !2630
  store i64 %16, i64* %val, align 8, !dbg !2632
  %17 = load i32, i32* %width, align 4, !dbg !2633
  %sub = sub i32 %17, 64, !dbg !2633
  store i32 %sub, i32* %width, align 4, !dbg !2633
  br label %if.end36, !dbg !2634

if.else35:                                        ; preds = %land.lhs.true25, %land.lhs.true20, %if.else
  store i8 0, i8* %retval, align 1, !dbg !2635
  br label %return, !dbg !2635

if.end36:                                         ; preds = %if.then31
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then16
  %18 = load i32, i32* %width, align 4, !dbg !2636
  %cmp38 = icmp ult i32 %18, 64, !dbg !2638
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !2639

if.then40:                                        ; preds = %if.end37
  %19 = load i32, i32* %width, align 4, !dbg !2640
  %sh_prom = zext i32 %19 to i64, !dbg !2641
  %shl = shl i64 1, %sh_prom, !dbg !2641
  %sub41 = sub i64 %shl, 1, !dbg !2642
  %20 = load i64, i64* %val, align 8, !dbg !2643
  %and = and i64 %20, %sub41, !dbg !2643
  store i64 %and, i64* %val, align 8, !dbg !2643
  br label %if.end42, !dbg !2644

if.end42:                                         ; preds = %if.then40, %if.end37
  %21 = load i64, i64* %val, align 8, !dbg !2645
  %22 = load i32, i32* %width, align 4, !dbg !2646
  %sub43 = sub i32 %22, 1, !dbg !2647
  %sh_prom44 = zext i32 %sub43 to i64, !dbg !2648
  %shl45 = shl i64 1, %sh_prom44, !dbg !2648
  %cmp46 = icmp eq i64 %21, %shl45, !dbg !2649
  %conv47 = zext i1 %cmp46 to i32, !dbg !2649
  %conv48 = trunc i32 %conv47 to i8, !dbg !2645
  store i8 %conv48, i8* %retval, align 1, !dbg !2650
  br label %return, !dbg !2650

return:                                           ; preds = %if.end42, %if.else35, %if.then10, %if.then
  %23 = load i8, i8* %retval, align 1, !dbg !2651
  ret i8 %23, !dbg !2651
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_gen_binary(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !2652 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !2655, metadata !DIExpression()), !dbg !2656
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2657, metadata !DIExpression()), !dbg !2658
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !2659, metadata !DIExpression()), !dbg !2660
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !2661, metadata !DIExpression()), !dbg !2662
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !2663, metadata !DIExpression()), !dbg !2664
  %0 = load i32, i32* %code.addr, align 4, !dbg !2665
  %1 = load i32, i32* %mode.addr, align 4, !dbg !2666
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2667
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2668
  %call = call %struct.rtx_def* @simplify_binary_operation(i32 %0, i32 %1, %struct.rtx_def* %2, %struct.rtx_def* %3), !dbg !2669
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !2670
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2671
  %tobool = icmp ne %struct.rtx_def* %4, null, !dbg !2671
  br i1 %tobool, label %if.then, label %if.end, !dbg !2673

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2674
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !2675
  br label %return, !dbg !2675

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %code.addr, align 4, !dbg !2676
  %idxprom = sext i32 %6 to i64, !dbg !2676
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2676
  %7 = load i32, i32* %arrayidx, align 4, !dbg !2676
  %cmp = icmp eq i32 %7, 3, !dbg !2678
  br i1 %cmp, label %land.lhs.true, label %if.end4, !dbg !2679

land.lhs.true:                                    ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2680
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2681
  %call1 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !2682
  %conv = zext i8 %call1 to i32, !dbg !2682
  %tobool2 = icmp ne i32 %conv, 0, !dbg !2682
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2683

if.then3:                                         ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2684
  store %struct.rtx_def* %10, %struct.rtx_def** %tem, align 8, !dbg !2685
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2686
  store %struct.rtx_def* %11, %struct.rtx_def** %op0.addr, align 8, !dbg !2687
  %12 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2688
  store %struct.rtx_def* %12, %struct.rtx_def** %op1.addr, align 8, !dbg !2689
  br label %if.end4, !dbg !2690

if.end4:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %13 = load i32, i32* %code.addr, align 4, !dbg !2691
  %14 = load i32, i32* %mode.addr, align 4, !dbg !2691
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2691
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2691
  %call5 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %13, i32 %14, %struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !2691
  store %struct.rtx_def* %call5, %struct.rtx_def** %retval, align 8, !dbg !2692
  br label %return, !dbg !2692

return:                                           ; preds = %if.end4, %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !2693
  ret %struct.rtx_def* %17, !dbg !2693
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_binary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !2694 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %trueop0 = alloca %struct.rtx_def*, align 8
  %trueop1 = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !2695, metadata !DIExpression()), !dbg !2696
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !2697, metadata !DIExpression()), !dbg !2698
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !2699, metadata !DIExpression()), !dbg !2700
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !2701, metadata !DIExpression()), !dbg !2702
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop0, metadata !2703, metadata !DIExpression()), !dbg !2704
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop1, metadata !2705, metadata !DIExpression()), !dbg !2706
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !2707, metadata !DIExpression()), !dbg !2708
  %0 = load i32, i32* %code.addr, align 4, !dbg !2709
  %idxprom = sext i32 %0 to i64, !dbg !2709
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2709
  %1 = load i32, i32* %arrayidx, align 4, !dbg !2709
  %cmp = icmp ne i32 %1, 0, !dbg !2709
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !2709

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1690, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2709
  br label %cond.end, !dbg !2709

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2709

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2709
  %2 = load i32, i32* %code.addr, align 4, !dbg !2710
  %idxprom1 = sext i32 %2 to i64, !dbg !2710
  %arrayidx2 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1, !dbg !2710
  %3 = load i32, i32* %arrayidx2, align 4, !dbg !2710
  %cmp3 = icmp ne i32 %3, 1, !dbg !2710
  br i1 %cmp3, label %cond.false5, label %cond.true4, !dbg !2710

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1691, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2710
  br label %cond.end6, !dbg !2710

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !2710

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !2710
  %4 = load i32, i32* %code.addr, align 4, !dbg !2711
  %idxprom8 = sext i32 %4 to i64, !dbg !2711
  %arrayidx9 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom8, !dbg !2711
  %5 = load i32, i32* %arrayidx9, align 4, !dbg !2711
  %cmp10 = icmp eq i32 %5, 3, !dbg !2713
  br i1 %cmp10, label %land.lhs.true, label %if.end, !dbg !2714

land.lhs.true:                                    ; preds = %cond.end6
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2715
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2716
  %call = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %6, %struct.rtx_def* %7), !dbg !2717
  %conv = zext i8 %call to i32, !dbg !2717
  %tobool = icmp ne i32 %conv, 0, !dbg !2717
  br i1 %tobool, label %if.then, label %if.end, !dbg !2718

if.then:                                          ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2719
  store %struct.rtx_def* %8, %struct.rtx_def** %tem, align 8, !dbg !2721
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2722
  store %struct.rtx_def* %9, %struct.rtx_def** %op0.addr, align 8, !dbg !2723
  %10 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2724
  store %struct.rtx_def* %10, %struct.rtx_def** %op1.addr, align 8, !dbg !2725
  br label %if.end, !dbg !2726

if.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end6
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2727
  %call11 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %11), !dbg !2728
  store %struct.rtx_def* %call11, %struct.rtx_def** %trueop0, align 8, !dbg !2729
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2730
  %call12 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %12), !dbg !2731
  store %struct.rtx_def* %call12, %struct.rtx_def** %trueop1, align 8, !dbg !2732
  %13 = load i32, i32* %code.addr, align 4, !dbg !2733
  %14 = load i32, i32* %mode.addr, align 4, !dbg !2734
  %15 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !2735
  %16 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !2736
  %call13 = call %struct.rtx_def* @simplify_const_binary_operation(i32 %13, i32 %14, %struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !2737
  store %struct.rtx_def* %call13, %struct.rtx_def** %tem, align 8, !dbg !2738
  %17 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2739
  %tobool14 = icmp ne %struct.rtx_def* %17, null, !dbg !2739
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !2741

if.then15:                                        ; preds = %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2742
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !2743
  br label %return, !dbg !2743

if.end16:                                         ; preds = %if.end
  %19 = load i32, i32* %code.addr, align 4, !dbg !2744
  %20 = load i32, i32* %mode.addr, align 4, !dbg !2745
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !2746
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !2747
  %23 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !2748
  %24 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !2749
  %call17 = call %struct.rtx_def* @simplify_binary_operation_1(i32 %19, i32 %20, %struct.rtx_def* %21, %struct.rtx_def* %22, %struct.rtx_def* %23, %struct.rtx_def* %24), !dbg !2750
  store %struct.rtx_def* %call17, %struct.rtx_def** %retval, align 8, !dbg !2751
  br label %return, !dbg !2751

return:                                           ; preds = %if.end16, %if.then15
  %25 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !2752
  ret %struct.rtx_def* %25, !dbg !2752
}

declare dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %x) #0 !dbg !2753 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %c = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %cmode = alloca i32, align 4
  %offset = alloca i64, align 8
  %d = alloca %struct.real_value, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %c, metadata !2758, metadata !DIExpression()), !dbg !2759
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !2760, metadata !DIExpression()), !dbg !2761
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !2762, metadata !DIExpression()), !dbg !2763
  call void @llvm.dbg.declare(metadata i32* %cmode, metadata !2764, metadata !DIExpression()), !dbg !2765
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !2766, metadata !DIExpression()), !dbg !2767
  store i64 0, i64* %offset, align 8, !dbg !2767
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2768
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !2768
  %bf.load = load i32, i32* %1, align 8, !dbg !2768
  %bf.clear = and i32 %bf.load, 65535, !dbg !2768
  switch i32 %bf.clear, label %sw.default [
    i32 43, label %sw.bb
    i32 101, label %sw.bb1
  ], !dbg !2769

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !2770

sw.bb1:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2772
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !2772
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2772
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2772
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2772
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2772
  store %struct.rtx_def* %3, %struct.rtx_def** %tmp, align 8, !dbg !2773
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !2774
  %call = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %4), !dbg !2775
  store %struct.rtx_def* %call, %struct.rtx_def** %c, align 8, !dbg !2776
  %5 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !2777
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !2779
  %cmp = icmp ne %struct.rtx_def* %5, %6, !dbg !2780
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2781

land.lhs.true:                                    ; preds = %sw.bb1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !2782
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2782
  %bf.load2 = load i32, i32* %8, align 8, !dbg !2782
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !2782
  %cmp4 = icmp eq i32 %bf.clear3, 32, !dbg !2783
  br i1 %cmp4, label %if.then, label %if.end, !dbg !2784

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.real_value* %d, metadata !2785, metadata !DIExpression()), !dbg !2787
  %9 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !2788
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !2788
  %rv = bitcast %union.u* %u5 to %struct.real_value*, !dbg !2788
  %10 = bitcast %struct.real_value* %d to i8*, !dbg !2788
  %11 = bitcast %struct.real_value* %rv to i8*, !dbg !2788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 32, i1 false), !dbg !2788
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2789
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !2789
  %bf.load6 = load i32, i32* %13, align 8, !dbg !2789
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !2789
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !2789
  %call8 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %d, i32 %bf.clear7), !dbg !2789
  store %struct.rtx_def* %call8, %struct.rtx_def** %retval, align 8, !dbg !2790
  br label %return, !dbg !2790

if.end:                                           ; preds = %land.lhs.true, %sw.bb1
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2791
  store %struct.rtx_def* %14, %struct.rtx_def** %retval, align 8, !dbg !2792
  br label %return, !dbg !2792

sw.default:                                       ; preds = %entry
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2793
  store %struct.rtx_def* %15, %struct.rtx_def** %retval, align 8, !dbg !2794
  br label %return, !dbg !2794

sw.epilog:                                        ; preds = %sw.bb
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2795
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !2795
  %bf.load9 = load i32, i32* %17, align 8, !dbg !2795
  %bf.lshr10 = lshr i32 %bf.load9, 16, !dbg !2795
  %bf.clear11 = and i32 %bf.lshr10, 255, !dbg !2795
  %cmp12 = icmp eq i32 %bf.clear11, 1, !dbg !2797
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2798

if.then13:                                        ; preds = %sw.epilog
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2799
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !2800
  br label %return, !dbg !2800

if.end14:                                         ; preds = %sw.epilog
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2801
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2801
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !2801
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !2801
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !2801
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !2801
  store %struct.rtx_def* %20, %struct.rtx_def** %addr, align 8, !dbg !2802
  %21 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 40), align 8, !dbg !2803
  %22 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2804
  %call19 = call %struct.rtx_def* %21(%struct.rtx_def* %22), !dbg !2805
  store %struct.rtx_def* %call19, %struct.rtx_def** %addr, align 8, !dbg !2806
  %23 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2807
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !2807
  %bf.load20 = load i32, i32* %24, align 8, !dbg !2807
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !2807
  %cmp22 = icmp eq i32 %bf.clear21, 35, !dbg !2809
  br i1 %cmp22, label %land.lhs.true23, label %if.end62, !dbg !2810

land.lhs.true23:                                  ; preds = %if.end14
  %25 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2811
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !2811
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !2811
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !2811
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !2811
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !2811
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !2811
  %bf.load28 = load i32, i32* %27, align 8, !dbg !2811
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !2811
  %cmp30 = icmp eq i32 %bf.clear29, 49, !dbg !2812
  br i1 %cmp30, label %land.lhs.true31, label %if.end62, !dbg !2813

land.lhs.true31:                                  ; preds = %land.lhs.true23
  %28 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2814
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !2814
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !2814
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 0, !dbg !2814
  %rt_rtx35 = bitcast %union.rtunion_def* %arrayidx34 to %struct.rtx_def**, !dbg !2814
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx35, align 8, !dbg !2814
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !2814
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !2814
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 1, !dbg !2814
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !2814
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !2814
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !2814
  %bf.load40 = load i32, i32* %31, align 8, !dbg !2814
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !2814
  %cmp42 = icmp eq i32 %bf.clear41, 30, !dbg !2814
  br i1 %cmp42, label %if.then43, label %if.end62, !dbg !2815

if.then43:                                        ; preds = %land.lhs.true31
  %32 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2816
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !2816
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !2816
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !2816
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !2816
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !2816
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !2816
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !2816
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 1, !dbg !2816
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !2816
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !2816
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !2816
  %hwint = bitcast %union.u* %u52 to [1 x i64]*, !dbg !2816
  %arrayidx53 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2816
  %35 = load i64, i64* %arrayidx53, align 8, !dbg !2816
  store i64 %35, i64* %offset, align 8, !dbg !2818
  %36 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2819
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !2819
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !2819
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 0, !dbg !2819
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !2819
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !2819
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !2819
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !2819
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !2819
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !2819
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !2819
  store %struct.rtx_def* %38, %struct.rtx_def** %addr, align 8, !dbg !2820
  br label %if.end62, !dbg !2821

if.end62:                                         ; preds = %if.then43, %land.lhs.true31, %land.lhs.true23, %if.end14
  %39 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2822
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !2822
  %bf.load63 = load i32, i32* %40, align 8, !dbg !2822
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !2822
  %cmp65 = icmp eq i32 %bf.clear64, 122, !dbg !2824
  br i1 %cmp65, label %if.then66, label %if.end71, !dbg !2825

if.then66:                                        ; preds = %if.end62
  %41 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2826
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !2826
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !2826
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 1, !dbg !2826
  %rt_rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !2826
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !2826
  store %struct.rtx_def* %42, %struct.rtx_def** %addr, align 8, !dbg !2827
  br label %if.end71, !dbg !2828

if.end71:                                         ; preds = %if.then66, %if.end62
  %43 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2829
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !2829
  %bf.load72 = load i32, i32* %44, align 8, !dbg !2829
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !2829
  %cmp74 = icmp eq i32 %bf.clear73, 45, !dbg !2831
  br i1 %cmp74, label %land.lhs.true75, label %if.end102, !dbg !2832

land.lhs.true75:                                  ; preds = %if.end71
  %45 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2833
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !2833
  %bf.load76 = load i32, i32* %46, align 8, !dbg !2833
  %bf.lshr77 = lshr i32 %bf.load76, 26, !dbg !2833
  %bf.clear78 = and i32 %bf.lshr77, 1, !dbg !2833
  %tobool = icmp ne i32 %bf.clear78, 0, !dbg !2833
  br i1 %tobool, label %if.then79, label %if.end102, !dbg !2834

if.then79:                                        ; preds = %land.lhs.true75
  %47 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2835
  %call80 = call %struct.rtx_def* @get_pool_constant(%struct.rtx_def* %47), !dbg !2837
  store %struct.rtx_def* %call80, %struct.rtx_def** %c, align 8, !dbg !2838
  %48 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !2839
  %call81 = call i32 @get_pool_mode(%struct.rtx_def* %48), !dbg !2840
  store i32 %call81, i32* %cmode, align 4, !dbg !2841
  %49 = load i64, i64* %offset, align 8, !dbg !2842
  %cmp82 = icmp ne i64 %49, 0, !dbg !2844
  br i1 %cmp82, label %if.then87, label %lor.lhs.false, !dbg !2845

lor.lhs.false:                                    ; preds = %if.then79
  %50 = load i32, i32* %cmode, align 4, !dbg !2846
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2847
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !2847
  %bf.load83 = load i32, i32* %52, align 8, !dbg !2847
  %bf.lshr84 = lshr i32 %bf.load83, 16, !dbg !2847
  %bf.clear85 = and i32 %bf.lshr84, 255, !dbg !2847
  %cmp86 = icmp ne i32 %50, %bf.clear85, !dbg !2848
  br i1 %cmp86, label %if.then87, label %if.else, !dbg !2849

if.then87:                                        ; preds = %lor.lhs.false, %if.then79
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !2850, metadata !DIExpression()), !dbg !2852
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2853
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !2853
  %bf.load88 = load i32, i32* %54, align 8, !dbg !2853
  %bf.lshr89 = lshr i32 %bf.load88, 16, !dbg !2853
  %bf.clear90 = and i32 %bf.lshr89, 255, !dbg !2853
  %55 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !2854
  %56 = load i32, i32* %cmode, align 4, !dbg !2855
  %57 = load i64, i64* %offset, align 8, !dbg !2856
  %conv = trunc i64 %57 to i32, !dbg !2856
  %call91 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear90, %struct.rtx_def* %55, i32 %56, i32 %conv), !dbg !2857
  store %struct.rtx_def* %call91, %struct.rtx_def** %tem, align 8, !dbg !2852
  %58 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2858
  %tobool92 = icmp ne %struct.rtx_def* %58, null, !dbg !2858
  br i1 %tobool92, label %land.lhs.true93, label %if.end100, !dbg !2860

land.lhs.true93:                                  ; preds = %if.then87
  %59 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2861
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !2861
  %bf.load94 = load i32, i32* %60, align 8, !dbg !2861
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !2861
  %idxprom = sext i32 %bf.clear95 to i64, !dbg !2861
  %arrayidx96 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !2861
  %61 = load i32, i32* %arrayidx96, align 4, !dbg !2861
  %cmp97 = icmp eq i32 %61, 9, !dbg !2861
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !2862

if.then99:                                        ; preds = %land.lhs.true93
  %62 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !2863
  store %struct.rtx_def* %62, %struct.rtx_def** %retval, align 8, !dbg !2864
  br label %return, !dbg !2864

if.end100:                                        ; preds = %land.lhs.true93, %if.then87
  br label %if.end101, !dbg !2865

if.else:                                          ; preds = %lor.lhs.false
  %63 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !2866
  store %struct.rtx_def* %63, %struct.rtx_def** %retval, align 8, !dbg !2867
  br label %return, !dbg !2867

if.end101:                                        ; preds = %if.end100
  br label %if.end102, !dbg !2868

if.end102:                                        ; preds = %if.end101, %land.lhs.true75, %if.end71
  %64 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2869
  store %struct.rtx_def* %64, %struct.rtx_def** %retval, align 8, !dbg !2870
  br label %return, !dbg !2870

return:                                           ; preds = %if.end102, %if.else, %if.then99, %if.then13, %sw.default, %if.end, %if.then
  %65 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !2871
  ret %struct.rtx_def* %65, !dbg !2871
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8, i32) #2

declare dso_local %struct.rtx_def* @get_pool_constant(%struct.rtx_def*) #2

declare dso_local i32 @get_pool_mode(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte) #0 !dbg !2872 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %outermode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %innermode.addr = alloca i32, align 4
  %byte.addr = alloca i32, align 4
  %innermostmode = alloca i32, align 4
  %final_offset = alloca i32, align 4
  %newx = alloca %struct.rtx_def*, align 8
  %difference = alloca i32, align 4
  %difference136 = alloca i32, align 4
  %offset = alloca i32, align 4
  %difference177 = alloca i32, align 4
  %_rtx = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %final_regno = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %final_offset349 = alloca i32, align 4
  %difference364 = alloca i32, align 4
  %part_size = alloca i32, align 4
  %final_offset433 = alloca i32, align 4
  %part = alloca %struct.rtx_def*, align 8
  %res = alloca %struct.rtx_def*, align 8
  %bitpos = alloca i32, align 4
  %origmode = alloca i32, align 4
  %shifted_bytes = alloca i32, align 4
  store i32 %outermode, i32* %outermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outermode.addr, metadata !2873, metadata !DIExpression()), !dbg !2874
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !2875, metadata !DIExpression()), !dbg !2876
  store i32 %innermode, i32* %innermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %innermode.addr, metadata !2877, metadata !DIExpression()), !dbg !2878
  store i32 %byte, i32* %byte.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte.addr, metadata !2879, metadata !DIExpression()), !dbg !2880
  %0 = load i32, i32* %innermode.addr, align 4, !dbg !2881
  %cmp = icmp ne i32 %0, 0, !dbg !2881
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !2881

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5137, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2881
  br label %cond.end, !dbg !2881

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !2881

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2881
  %1 = load i32, i32* %outermode.addr, align 4, !dbg !2882
  %cmp1 = icmp ne i32 %1, 0, !dbg !2882
  br i1 %cmp1, label %cond.false3, label %cond.true2, !dbg !2882

cond.true2:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5138, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2882
  br label %cond.end4, !dbg !2882

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !2882

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !2882
  %2 = load i32, i32* %innermode.addr, align 4, !dbg !2883
  %cmp6 = icmp ne i32 %2, 1, !dbg !2883
  br i1 %cmp6, label %cond.false8, label %cond.true7, !dbg !2883

cond.true7:                                       ; preds = %cond.end4
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5139, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2883
  br label %cond.end9, !dbg !2883

cond.false8:                                      ; preds = %cond.end4
  br label %cond.end9, !dbg !2883

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ 0, %cond.true7 ], [ 0, %cond.false8 ], !dbg !2883
  %3 = load i32, i32* %outermode.addr, align 4, !dbg !2884
  %cmp11 = icmp ne i32 %3, 1, !dbg !2884
  br i1 %cmp11, label %cond.false13, label %cond.true12, !dbg !2884

cond.true12:                                      ; preds = %cond.end9
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5140, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2884
  br label %cond.end14, !dbg !2884

cond.false13:                                     ; preds = %cond.end9
  br label %cond.end14, !dbg !2884

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 0, %cond.true12 ], [ 0, %cond.false13 ], !dbg !2884
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2885
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !2885
  %bf.load = load i32, i32* %5, align 8, !dbg !2885
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2885
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2885
  %6 = load i32, i32* %innermode.addr, align 4, !dbg !2885
  %cmp16 = icmp eq i32 %bf.clear, %6, !dbg !2885
  br i1 %cmp16, label %cond.false22, label %lor.lhs.false, !dbg !2885

lor.lhs.false:                                    ; preds = %cond.end14
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2885
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !2885
  %bf.load17 = load i32, i32* %8, align 8, !dbg !2885
  %bf.lshr18 = lshr i32 %bf.load17, 16, !dbg !2885
  %bf.clear19 = and i32 %bf.lshr18, 255, !dbg !2885
  %cmp20 = icmp eq i32 %bf.clear19, 0, !dbg !2885
  br i1 %cmp20, label %cond.false22, label %cond.true21, !dbg !2885

cond.true21:                                      ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2885
  br label %cond.end23, !dbg !2885

cond.false22:                                     ; preds = %lor.lhs.false, %cond.end14
  br label %cond.end23, !dbg !2885

cond.end23:                                       ; preds = %cond.false22, %cond.true21
  %cond24 = phi i32 [ 0, %cond.true21 ], [ 0, %cond.false22 ], !dbg !2885
  %9 = load i32, i32* %byte.addr, align 4, !dbg !2886
  %10 = load i32, i32* %outermode.addr, align 4, !dbg !2886
  %idxprom = zext i32 %10 to i64, !dbg !2886
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !2886
  %11 = load i8, i8* %arrayidx, align 1, !dbg !2886
  %conv = zext i8 %11 to i16, !dbg !2886
  %conv25 = zext i16 %conv to i32, !dbg !2886
  %rem = urem i32 %9, %conv25, !dbg !2886
  %cmp26 = icmp eq i32 %rem, 0, !dbg !2886
  br i1 %cmp26, label %cond.false29, label %cond.true28, !dbg !2886

cond.true28:                                      ; preds = %cond.end23
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5145, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2886
  br label %cond.end30, !dbg !2886

cond.false29:                                     ; preds = %cond.end23
  br label %cond.end30, !dbg !2886

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !2886
  %12 = load i32, i32* %byte.addr, align 4, !dbg !2887
  %13 = load i32, i32* %innermode.addr, align 4, !dbg !2887
  %idxprom32 = zext i32 %13 to i64, !dbg !2887
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom32, !dbg !2887
  %14 = load i8, i8* %arrayidx33, align 1, !dbg !2887
  %conv34 = zext i8 %14 to i16, !dbg !2887
  %conv35 = zext i16 %conv34 to i32, !dbg !2887
  %cmp36 = icmp ult i32 %12, %conv35, !dbg !2887
  br i1 %cmp36, label %cond.false39, label %cond.true38, !dbg !2887

cond.true38:                                      ; preds = %cond.end30
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5146, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2887
  br label %cond.end40, !dbg !2887

cond.false39:                                     ; preds = %cond.end30
  br label %cond.end40, !dbg !2887

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi i32 [ 0, %cond.true38 ], [ 0, %cond.false39 ], !dbg !2887
  %15 = load i32, i32* %outermode.addr, align 4, !dbg !2888
  %16 = load i32, i32* %innermode.addr, align 4, !dbg !2890
  %cmp42 = icmp eq i32 %15, %16, !dbg !2891
  br i1 %cmp42, label %land.lhs.true, label %if.end, !dbg !2892

land.lhs.true:                                    ; preds = %cond.end40
  %17 = load i32, i32* %byte.addr, align 4, !dbg !2893
  %tobool = icmp ne i32 %17, 0, !dbg !2893
  br i1 %tobool, label %if.end, label %if.then, !dbg !2894

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2895
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !2896
  br label %return, !dbg !2896

if.end:                                           ; preds = %land.lhs.true, %cond.end40
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2897
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !2897
  %bf.load44 = load i32, i32* %20, align 8, !dbg !2897
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !2897
  %cmp46 = icmp eq i32 %bf.clear45, 30, !dbg !2897
  br i1 %cmp46, label %if.then63, label %lor.lhs.false48, !dbg !2899

lor.lhs.false48:                                  ; preds = %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2900
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !2900
  %bf.load49 = load i32, i32* %22, align 8, !dbg !2900
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !2900
  %cmp51 = icmp eq i32 %bf.clear50, 32, !dbg !2901
  br i1 %cmp51, label %if.then63, label %lor.lhs.false53, !dbg !2902

lor.lhs.false53:                                  ; preds = %lor.lhs.false48
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2903
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !2903
  %bf.load54 = load i32, i32* %24, align 8, !dbg !2903
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !2903
  %cmp56 = icmp eq i32 %bf.clear55, 31, !dbg !2904
  br i1 %cmp56, label %if.then63, label %lor.lhs.false58, !dbg !2905

lor.lhs.false58:                                  ; preds = %lor.lhs.false53
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2906
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !2906
  %bf.load59 = load i32, i32* %26, align 8, !dbg !2906
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !2906
  %cmp61 = icmp eq i32 %bf.clear60, 33, !dbg !2907
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !2908

if.then63:                                        ; preds = %lor.lhs.false58, %lor.lhs.false53, %lor.lhs.false48, %if.end
  %27 = load i32, i32* %outermode.addr, align 4, !dbg !2909
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2910
  %29 = load i32, i32* %innermode.addr, align 4, !dbg !2911
  %30 = load i32, i32* %byte.addr, align 4, !dbg !2912
  %call = call %struct.rtx_def* @simplify_immed_subreg(i32 %27, %struct.rtx_def* %28, i32 %29, i32 %30), !dbg !2913
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !2914
  br label %return, !dbg !2914

if.end64:                                         ; preds = %lor.lhs.false58
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2915
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !2915
  %bf.load65 = load i32, i32* %32, align 8, !dbg !2915
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !2915
  %cmp67 = icmp eq i32 %bf.clear66, 39, !dbg !2917
  br i1 %cmp67, label %if.then69, label %if.end301, !dbg !2918

if.then69:                                        ; preds = %if.end64
  call void @llvm.dbg.declare(metadata i32* %innermostmode, metadata !2919, metadata !DIExpression()), !dbg !2921
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2922
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !2922
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2922
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2922
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !2922
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2922
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !2922
  %bf.load71 = load i32, i32* %35, align 8, !dbg !2922
  %bf.lshr72 = lshr i32 %bf.load71, 16, !dbg !2922
  %bf.clear73 = and i32 %bf.lshr72, 255, !dbg !2922
  store i32 %bf.clear73, i32* %innermostmode, align 4, !dbg !2921
  call void @llvm.dbg.declare(metadata i32* %final_offset, metadata !2923, metadata !DIExpression()), !dbg !2924
  %36 = load i32, i32* %byte.addr, align 4, !dbg !2925
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2926
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !2926
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !2926
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 1, !dbg !2926
  %rt_uint = bitcast %union.rtunion_def* %arrayidx76 to i32*, !dbg !2926
  %38 = load i32, i32* %rt_uint, align 8, !dbg !2926
  %add = add i32 %36, %38, !dbg !2927
  store i32 %add, i32* %final_offset, align 4, !dbg !2924
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newx, metadata !2928, metadata !DIExpression()), !dbg !2929
  %39 = load i32, i32* %outermode.addr, align 4, !dbg !2930
  %40 = load i32, i32* %innermostmode, align 4, !dbg !2932
  %cmp77 = icmp eq i32 %39, %40, !dbg !2933
  br i1 %cmp77, label %land.lhs.true79, label %if.end94, !dbg !2934

land.lhs.true79:                                  ; preds = %if.then69
  %41 = load i32, i32* %byte.addr, align 4, !dbg !2935
  %cmp80 = icmp eq i32 %41, 0, !dbg !2936
  br i1 %cmp80, label %land.lhs.true82, label %if.end94, !dbg !2937

land.lhs.true82:                                  ; preds = %land.lhs.true79
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2938
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !2938
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !2938
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 1, !dbg !2938
  %rt_uint86 = bitcast %union.rtunion_def* %arrayidx85 to i32*, !dbg !2938
  %43 = load i32, i32* %rt_uint86, align 8, !dbg !2938
  %cmp87 = icmp eq i32 %43, 0, !dbg !2939
  br i1 %cmp87, label %if.then89, label %if.end94, !dbg !2940

if.then89:                                        ; preds = %land.lhs.true82
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2941
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !2941
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !2941
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !2941
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !2941
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !2941
  store %struct.rtx_def* %45, %struct.rtx_def** %retval, align 8, !dbg !2942
  br label %return, !dbg !2942

if.end94:                                         ; preds = %land.lhs.true82, %land.lhs.true79, %if.then69
  %46 = load i32, i32* %byte.addr, align 4, !dbg !2943
  %cmp95 = icmp eq i32 %46, 0, !dbg !2945
  br i1 %cmp95, label %land.lhs.true97, label %if.end117, !dbg !2946

land.lhs.true97:                                  ; preds = %if.end94
  %47 = load i32, i32* %innermode.addr, align 4, !dbg !2947
  %idxprom98 = zext i32 %47 to i64, !dbg !2947
  %arrayidx99 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom98, !dbg !2947
  %48 = load i8, i8* %arrayidx99, align 1, !dbg !2947
  %conv100 = zext i8 %48 to i16, !dbg !2947
  %conv101 = zext i16 %conv100 to i32, !dbg !2947
  %49 = load i32, i32* %outermode.addr, align 4, !dbg !2948
  %idxprom102 = zext i32 %49 to i64, !dbg !2948
  %arrayidx103 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom102, !dbg !2948
  %50 = load i8, i8* %arrayidx103, align 1, !dbg !2948
  %conv104 = zext i8 %50 to i16, !dbg !2948
  %conv105 = zext i16 %conv104 to i32, !dbg !2948
  %cmp106 = icmp slt i32 %conv101, %conv105, !dbg !2949
  br i1 %cmp106, label %if.then108, label %if.end117, !dbg !2950

if.then108:                                       ; preds = %land.lhs.true97
  call void @llvm.dbg.declare(metadata i32* %difference, metadata !2951, metadata !DIExpression()), !dbg !2953
  %51 = load i32, i32* %innermode.addr, align 4, !dbg !2954
  %idxprom109 = zext i32 %51 to i64, !dbg !2954
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom109, !dbg !2954
  %52 = load i8, i8* %arrayidx110, align 1, !dbg !2954
  %conv111 = zext i8 %52 to i16, !dbg !2954
  %conv112 = zext i16 %conv111 to i32, !dbg !2954
  %53 = load i32, i32* %outermode.addr, align 4, !dbg !2955
  %idxprom113 = zext i32 %53 to i64, !dbg !2955
  %arrayidx114 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom113, !dbg !2955
  %54 = load i8, i8* %arrayidx114, align 1, !dbg !2955
  %conv115 = zext i8 %54 to i16, !dbg !2955
  %conv116 = zext i16 %conv115 to i32, !dbg !2955
  %sub = sub nsw i32 %conv112, %conv116, !dbg !2956
  store i32 %sub, i32* %difference, align 4, !dbg !2953
  br label %if.end117, !dbg !2957

if.end117:                                        ; preds = %if.then108, %land.lhs.true97, %if.end94
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !2958
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !2958
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !2958
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 1, !dbg !2958
  %rt_uint121 = bitcast %union.rtunion_def* %arrayidx120 to i32*, !dbg !2958
  %56 = load i32, i32* %rt_uint121, align 8, !dbg !2958
  %cmp122 = icmp eq i32 %56, 0, !dbg !2960
  br i1 %cmp122, label %land.lhs.true124, label %if.end146, !dbg !2961

land.lhs.true124:                                 ; preds = %if.end117
  %57 = load i32, i32* %innermostmode, align 4, !dbg !2962
  %idxprom125 = zext i32 %57 to i64, !dbg !2962
  %arrayidx126 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom125, !dbg !2962
  %58 = load i8, i8* %arrayidx126, align 1, !dbg !2962
  %conv127 = zext i8 %58 to i16, !dbg !2962
  %conv128 = zext i16 %conv127 to i32, !dbg !2962
  %59 = load i32, i32* %innermode.addr, align 4, !dbg !2963
  %idxprom129 = zext i32 %59 to i64, !dbg !2963
  %arrayidx130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom129, !dbg !2963
  %60 = load i8, i8* %arrayidx130, align 1, !dbg !2963
  %conv131 = zext i8 %60 to i16, !dbg !2963
  %conv132 = zext i16 %conv131 to i32, !dbg !2963
  %cmp133 = icmp slt i32 %conv128, %conv132, !dbg !2964
  br i1 %cmp133, label %if.then135, label %if.end146, !dbg !2965

if.then135:                                       ; preds = %land.lhs.true124
  call void @llvm.dbg.declare(metadata i32* %difference136, metadata !2966, metadata !DIExpression()), !dbg !2968
  %61 = load i32, i32* %innermostmode, align 4, !dbg !2969
  %idxprom137 = zext i32 %61 to i64, !dbg !2969
  %arrayidx138 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom137, !dbg !2969
  %62 = load i8, i8* %arrayidx138, align 1, !dbg !2969
  %conv139 = zext i8 %62 to i16, !dbg !2969
  %conv140 = zext i16 %conv139 to i32, !dbg !2969
  %63 = load i32, i32* %innermode.addr, align 4, !dbg !2970
  %idxprom141 = zext i32 %63 to i64, !dbg !2970
  %arrayidx142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom141, !dbg !2970
  %64 = load i8, i8* %arrayidx142, align 1, !dbg !2970
  %conv143 = zext i8 %64 to i16, !dbg !2970
  %conv144 = zext i16 %conv143 to i32, !dbg !2970
  %sub145 = sub nsw i32 %conv140, %conv144, !dbg !2971
  store i32 %sub145, i32* %difference136, align 4, !dbg !2968
  br label %if.end146, !dbg !2972

if.end146:                                        ; preds = %if.then135, %land.lhs.true124, %if.end117
  %65 = load i32, i32* %innermostmode, align 4, !dbg !2973
  %idxprom147 = zext i32 %65 to i64, !dbg !2973
  %arrayidx148 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom147, !dbg !2973
  %66 = load i8, i8* %arrayidx148, align 1, !dbg !2973
  %conv149 = zext i8 %66 to i16, !dbg !2973
  %conv150 = zext i16 %conv149 to i32, !dbg !2973
  %67 = load i32, i32* %outermode.addr, align 4, !dbg !2975
  %idxprom151 = zext i32 %67 to i64, !dbg !2975
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom151, !dbg !2975
  %68 = load i8, i8* %arrayidx152, align 1, !dbg !2975
  %conv153 = zext i8 %68 to i16, !dbg !2975
  %conv154 = zext i16 %conv153 to i32, !dbg !2975
  %cmp155 = icmp sgt i32 %conv150, %conv154, !dbg !2976
  br i1 %cmp155, label %if.then157, label %if.else, !dbg !2977

if.then157:                                       ; preds = %if.end146
  %69 = load i32, i32* %final_offset, align 4, !dbg !2978
  %cmp158 = icmp slt i32 %69, 0, !dbg !2981
  br i1 %cmp158, label %if.then160, label %if.end161, !dbg !2982

if.then160:                                       ; preds = %if.then157
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2983
  br label %return, !dbg !2983

if.end161:                                        ; preds = %if.then157
  %70 = load i32, i32* %final_offset, align 4, !dbg !2984
  %71 = load i32, i32* %outermode.addr, align 4, !dbg !2986
  %idxprom162 = zext i32 %71 to i64, !dbg !2986
  %arrayidx163 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom162, !dbg !2986
  %72 = load i8, i8* %arrayidx163, align 1, !dbg !2986
  %conv164 = zext i8 %72 to i16, !dbg !2986
  %conv165 = zext i16 %conv164 to i32, !dbg !2986
  %rem166 = srem i32 %70, %conv165, !dbg !2987
  %tobool167 = icmp ne i32 %rem166, 0, !dbg !2987
  br i1 %tobool167, label %if.then175, label %lor.lhs.false168, !dbg !2988

lor.lhs.false168:                                 ; preds = %if.end161
  %73 = load i32, i32* %final_offset, align 4, !dbg !2989
  %74 = load i32, i32* %innermostmode, align 4, !dbg !2990
  %idxprom169 = zext i32 %74 to i64, !dbg !2990
  %arrayidx170 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom169, !dbg !2990
  %75 = load i8, i8* %arrayidx170, align 1, !dbg !2990
  %conv171 = zext i8 %75 to i16, !dbg !2990
  %conv172 = zext i16 %conv171 to i32, !dbg !2990
  %cmp173 = icmp uge i32 %73, %conv172, !dbg !2991
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !2992

if.then175:                                       ; preds = %lor.lhs.false168, %if.end161
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !2993
  br label %return, !dbg !2993

if.end176:                                        ; preds = %lor.lhs.false168
  br label %if.end192, !dbg !2994

if.else:                                          ; preds = %if.end146
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2995, metadata !DIExpression()), !dbg !2997
  store i32 0, i32* %offset, align 4, !dbg !2997
  call void @llvm.dbg.declare(metadata i32* %difference177, metadata !2998, metadata !DIExpression()), !dbg !2999
  %76 = load i32, i32* %innermostmode, align 4, !dbg !3000
  %idxprom178 = zext i32 %76 to i64, !dbg !3000
  %arrayidx179 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom178, !dbg !3000
  %77 = load i8, i8* %arrayidx179, align 1, !dbg !3000
  %conv180 = zext i8 %77 to i16, !dbg !3000
  %conv181 = zext i16 %conv180 to i32, !dbg !3000
  %78 = load i32, i32* %outermode.addr, align 4, !dbg !3001
  %idxprom182 = zext i32 %78 to i64, !dbg !3001
  %arrayidx183 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom182, !dbg !3001
  %79 = load i8, i8* %arrayidx183, align 1, !dbg !3001
  %conv184 = zext i8 %79 to i16, !dbg !3001
  %conv185 = zext i16 %conv184 to i32, !dbg !3001
  %sub186 = sub nsw i32 %conv181, %conv185, !dbg !3002
  store i32 %sub186, i32* %difference177, align 4, !dbg !2999
  %80 = load i32, i32* %offset, align 4, !dbg !3003
  %81 = load i32, i32* %final_offset, align 4, !dbg !3005
  %cmp187 = icmp eq i32 %80, %81, !dbg !3006
  br i1 %cmp187, label %if.then189, label %if.else190, !dbg !3007

if.then189:                                       ; preds = %if.else
  store i32 0, i32* %final_offset, align 4, !dbg !3008
  br label %if.end191, !dbg !3009

if.else190:                                       ; preds = %if.else
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3010
  br label %return, !dbg !3010

if.end191:                                        ; preds = %if.then189
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.end176
  %82 = load i32, i32* %outermode.addr, align 4, !dbg !3011
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3012
  %u193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !3012
  %fld194 = bitcast %union.u* %u193 to [1 x %union.rtunion_def]*, !dbg !3012
  %arrayidx195 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld194, i64 0, i64 0, !dbg !3012
  %rt_rtx196 = bitcast %union.rtunion_def* %arrayidx195 to %struct.rtx_def**, !dbg !3012
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx196, align 8, !dbg !3012
  %85 = load i32, i32* %innermostmode, align 4, !dbg !3013
  %86 = load i32, i32* %final_offset, align 4, !dbg !3014
  %call197 = call %struct.rtx_def* @simplify_subreg(i32 %82, %struct.rtx_def* %84, i32 %85, i32 %86), !dbg !3015
  store %struct.rtx_def* %call197, %struct.rtx_def** %newx, align 8, !dbg !3016
  %87 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3017
  %tobool198 = icmp ne %struct.rtx_def* %87, null, !dbg !3017
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !3019

if.then199:                                       ; preds = %if.end192
  %88 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3020
  store %struct.rtx_def* %88, %struct.rtx_def** %retval, align 8, !dbg !3021
  br label %return, !dbg !3021

if.end200:                                        ; preds = %if.end192
  %89 = load i32, i32* %outermode.addr, align 4, !dbg !3022
  %90 = load i32, i32* %innermostmode, align 4, !dbg !3024
  %91 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3025
  %u201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !3025
  %fld202 = bitcast %union.u* %u201 to [1 x %union.rtunion_def]*, !dbg !3025
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i64 0, i64 0, !dbg !3025
  %rt_rtx204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**, !dbg !3025
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx204, align 8, !dbg !3025
  %93 = load i32, i32* %final_offset, align 4, !dbg !3026
  %call205 = call zeroext i8 @validate_subreg(i32 %89, i32 %90, %struct.rtx_def* %92, i32 %93), !dbg !3027
  %tobool206 = icmp ne i8 %call205, 0, !dbg !3027
  br i1 %tobool206, label %if.then207, label %if.end300, !dbg !3028

if.then207:                                       ; preds = %if.end200
  %94 = load i32, i32* %outermode.addr, align 4, !dbg !3029
  %95 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3031
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !3031
  %fld209 = bitcast %union.u* %u208 to [1 x %union.rtunion_def]*, !dbg !3031
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i64 0, i64 0, !dbg !3031
  %rt_rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**, !dbg !3031
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx211, align 8, !dbg !3031
  %97 = load i32, i32* %final_offset, align 4, !dbg !3032
  %call212 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %94, %struct.rtx_def* %96, i32 %97), !dbg !3033
  store %struct.rtx_def* %call212, %struct.rtx_def** %newx, align 8, !dbg !3034
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3035
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !3035
  %bf.load213 = load i32, i32* %99, align 8, !dbg !3035
  %bf.lshr214 = lshr i32 %bf.load213, 28, !dbg !3035
  %bf.clear215 = and i32 %bf.lshr214, 1, !dbg !3035
  %tobool216 = icmp ne i32 %bf.clear215, 0, !dbg !3035
  br i1 %tobool216, label %land.lhs.true217, label %if.end299, !dbg !3037

land.lhs.true217:                                 ; preds = %if.then207
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3038
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !3038
  %bf.load218 = load i32, i32* %101, align 8, !dbg !3038
  %bf.lshr219 = lshr i32 %bf.load218, 27, !dbg !3038
  %bf.clear220 = and i32 %bf.lshr219, 1, !dbg !3038
  %tobool221 = icmp ne i32 %bf.clear220, 0, !dbg !3038
  br i1 %tobool221, label %cond.true222, label %cond.false223, !dbg !3038

cond.true222:                                     ; preds = %land.lhs.true217
  br label %cond.end227, !dbg !3038

cond.false223:                                    ; preds = %land.lhs.true217
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3038
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !3038
  %bf.load224 = load i32, i32* %103, align 8, !dbg !3038
  %bf.lshr225 = lshr i32 %bf.load224, 26, !dbg !3038
  %bf.clear226 = and i32 %bf.lshr225, 1, !dbg !3038
  br label %cond.end227, !dbg !3038

cond.end227:                                      ; preds = %cond.false223, %cond.true222
  %cond228 = phi i32 [ -1, %cond.true222 ], [ %bf.clear226, %cond.false223 ], !dbg !3038
  %cmp229 = icmp sge i32 %cond228, 0, !dbg !3039
  br i1 %cmp229, label %land.lhs.true231, label %if.end299, !dbg !3040

land.lhs.true231:                                 ; preds = %cond.end227
  %104 = load i32, i32* %outermode.addr, align 4, !dbg !3041
  %idxprom232 = zext i32 %104 to i64, !dbg !3041
  %arrayidx233 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom232, !dbg !3041
  %105 = load i8, i8* %arrayidx233, align 1, !dbg !3041
  %conv234 = zext i8 %105 to i32, !dbg !3041
  %cmp235 = icmp eq i32 %conv234, 2, !dbg !3042
  br i1 %cmp235, label %land.lhs.true237, label %if.end299, !dbg !3043

land.lhs.true237:                                 ; preds = %land.lhs.true231
  %106 = load i32, i32* %outermode.addr, align 4, !dbg !3044
  %idxprom238 = zext i32 %106 to i64, !dbg !3044
  %arrayidx239 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom238, !dbg !3044
  %107 = load i8, i8* %arrayidx239, align 1, !dbg !3044
  %conv240 = zext i8 %107 to i16, !dbg !3044
  %conv241 = zext i16 %conv240 to i64, !dbg !3044
  %108 = load i32, i32* %innermode.addr, align 4, !dbg !3044
  %idxprom242 = zext i32 %108 to i64, !dbg !3044
  %arrayidx243 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom242, !dbg !3044
  %109 = load i8, i8* %arrayidx243, align 1, !dbg !3044
  %conv244 = zext i8 %109 to i16, !dbg !3044
  %conv245 = zext i16 %conv244 to i64, !dbg !3044
  %sub246 = sub i64 %conv241, %conv245, !dbg !3044
  %110 = load i32, i32* %innermostmode, align 4, !dbg !3044
  %idxprom247 = zext i32 %110 to i64, !dbg !3044
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom247, !dbg !3044
  %111 = load i8, i8* %arrayidx248, align 1, !dbg !3044
  %conv249 = zext i8 %111 to i16, !dbg !3044
  %conv250 = zext i16 %conv249 to i64, !dbg !3044
  %112 = load i32, i32* %innermode.addr, align 4, !dbg !3044
  %idxprom251 = zext i32 %112 to i64, !dbg !3044
  %arrayidx252 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom251, !dbg !3044
  %113 = load i8, i8* %arrayidx252, align 1, !dbg !3044
  %conv253 = zext i8 %113 to i16, !dbg !3044
  %conv254 = zext i16 %conv253 to i64, !dbg !3044
  %sub255 = sub i64 %conv250, %conv254, !dbg !3044
  %cmp256 = icmp ule i64 %sub246, %sub255, !dbg !3044
  br i1 %cmp256, label %land.lhs.true258, label %if.end299, !dbg !3045

land.lhs.true258:                                 ; preds = %land.lhs.true237
  %114 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3046
  %call259 = call i32 @subreg_lowpart_p(%struct.rtx_def* %114), !dbg !3047
  %tobool260 = icmp ne i32 %call259, 0, !dbg !3047
  br i1 %tobool260, label %if.then261, label %if.end299, !dbg !3048

if.then261:                                       ; preds = %land.lhs.true258
  %115 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3049
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !3049
  %bf.load262 = load i32, i32* %116, align 8, !dbg !3051
  %bf.clear263 = and i32 %bf.load262, -268435457, !dbg !3051
  %bf.set = or i32 %bf.clear263, 268435456, !dbg !3051
  store i32 %bf.set, i32* %116, align 8, !dbg !3051
  br label %do.body, !dbg !3052

do.body:                                          ; preds = %if.then261
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %_rtx, metadata !3053, metadata !DIExpression()), !dbg !3056
  %117 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3056
  store %struct.rtx_def* %117, %struct.rtx_def** %_rtx, align 8, !dbg !3056
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3057
  %119 = bitcast %struct.rtx_def* %118 to i32*, !dbg !3057
  %bf.load264 = load i32, i32* %119, align 8, !dbg !3057
  %bf.lshr265 = lshr i32 %bf.load264, 27, !dbg !3057
  %bf.clear266 = and i32 %bf.lshr265, 1, !dbg !3057
  %tobool267 = icmp ne i32 %bf.clear266, 0, !dbg !3057
  br i1 %tobool267, label %cond.true268, label %cond.false269, !dbg !3057

cond.true268:                                     ; preds = %do.body
  br label %cond.end273, !dbg !3057

cond.false269:                                    ; preds = %do.body
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3057
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !3057
  %bf.load270 = load i32, i32* %121, align 8, !dbg !3057
  %bf.lshr271 = lshr i32 %bf.load270, 26, !dbg !3057
  %bf.clear272 = and i32 %bf.lshr271, 1, !dbg !3057
  br label %cond.end273, !dbg !3057

cond.end273:                                      ; preds = %cond.false269, %cond.true268
  %cond274 = phi i32 [ -1, %cond.true268 ], [ %bf.clear272, %cond.false269 ], !dbg !3057
  %cmp275 = icmp slt i32 %cond274, 0, !dbg !3057
  br i1 %cmp275, label %if.then277, label %if.else281, !dbg !3056

if.then277:                                       ; preds = %cond.end273
  %122 = load %struct.rtx_def*, %struct.rtx_def** %_rtx, align 8, !dbg !3057
  %123 = bitcast %struct.rtx_def* %122 to i32*, !dbg !3057
  %bf.load278 = load i32, i32* %123, align 8, !dbg !3057
  %bf.clear279 = and i32 %bf.load278, -134217729, !dbg !3057
  %bf.set280 = or i32 %bf.clear279, 134217728, !dbg !3057
  store i32 %bf.set280, i32* %123, align 8, !dbg !3057
  br label %if.end298, !dbg !3057

if.else281:                                       ; preds = %cond.end273
  %124 = load %struct.rtx_def*, %struct.rtx_def** %_rtx, align 8, !dbg !3059
  %125 = bitcast %struct.rtx_def* %124 to i32*, !dbg !3059
  %bf.load282 = load i32, i32* %125, align 8, !dbg !3059
  %bf.clear283 = and i32 %bf.load282, -134217729, !dbg !3059
  store i32 %bf.clear283, i32* %125, align 8, !dbg !3059
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3059
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !3059
  %bf.load284 = load i32, i32* %127, align 8, !dbg !3059
  %bf.lshr285 = lshr i32 %bf.load284, 27, !dbg !3059
  %bf.clear286 = and i32 %bf.lshr285, 1, !dbg !3059
  %tobool287 = icmp ne i32 %bf.clear286, 0, !dbg !3059
  br i1 %tobool287, label %cond.true288, label %cond.false289, !dbg !3059

cond.true288:                                     ; preds = %if.else281
  br label %cond.end293, !dbg !3059

cond.false289:                                    ; preds = %if.else281
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3059
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !3059
  %bf.load290 = load i32, i32* %129, align 8, !dbg !3059
  %bf.lshr291 = lshr i32 %bf.load290, 26, !dbg !3059
  %bf.clear292 = and i32 %bf.lshr291, 1, !dbg !3059
  br label %cond.end293, !dbg !3059

cond.end293:                                      ; preds = %cond.false289, %cond.true288
  %cond294 = phi i32 [ -1, %cond.true288 ], [ %bf.clear292, %cond.false289 ], !dbg !3059
  %130 = load %struct.rtx_def*, %struct.rtx_def** %_rtx, align 8, !dbg !3059
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !3059
  %bf.load295 = load i32, i32* %131, align 8, !dbg !3059
  %bf.value = and i32 %cond294, 1, !dbg !3059
  %bf.shl = shl i32 %bf.value, 26, !dbg !3059
  %bf.clear296 = and i32 %bf.load295, -67108865, !dbg !3059
  %bf.set297 = or i32 %bf.clear296, %bf.shl, !dbg !3059
  store i32 %bf.set297, i32* %131, align 8, !dbg !3059
  br label %if.end298

if.end298:                                        ; preds = %cond.end293, %if.then277
  br label %do.end, !dbg !3056

do.end:                                           ; preds = %if.end298
  br label %if.end299, !dbg !3061

if.end299:                                        ; preds = %do.end, %land.lhs.true258, %land.lhs.true237, %land.lhs.true231, %cond.end227, %if.then207
  %132 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3062
  store %struct.rtx_def* %132, %struct.rtx_def** %retval, align 8, !dbg !3063
  br label %return, !dbg !3063

if.end300:                                        ; preds = %if.end200
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3064
  br label %return, !dbg !3064

if.end301:                                        ; preds = %if.end64
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3065
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !3065
  %bf.load302 = load i32, i32* %134, align 8, !dbg !3065
  %bf.clear303 = and i32 %bf.load302, 65535, !dbg !3065
  %cmp304 = icmp eq i32 %bf.clear303, 100, !dbg !3067
  br i1 %cmp304, label %land.lhs.true306, label %if.end334, !dbg !3068

land.lhs.true306:                                 ; preds = %if.end301
  %135 = load i32, i32* %outermode.addr, align 4, !dbg !3069
  %idxprom307 = zext i32 %135 to i64, !dbg !3069
  %arrayidx308 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom307, !dbg !3069
  %136 = load i8, i8* %arrayidx308, align 1, !dbg !3069
  %conv309 = zext i8 %136 to i16, !dbg !3069
  %conv310 = zext i16 %conv309 to i32, !dbg !3069
  %137 = load i32, i32* %innermode.addr, align 4, !dbg !3070
  %idxprom311 = zext i32 %137 to i64, !dbg !3070
  %arrayidx312 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom311, !dbg !3070
  %138 = load i8, i8* %arrayidx312, align 1, !dbg !3070
  %conv313 = zext i8 %138 to i16, !dbg !3070
  %conv314 = zext i16 %conv313 to i32, !dbg !3070
  %cmp315 = icmp slt i32 %conv310, %conv314, !dbg !3071
  br i1 %cmp315, label %land.lhs.true317, label %if.end334, !dbg !3072

land.lhs.true317:                                 ; preds = %land.lhs.true306
  %139 = load i32, i32* %outermode.addr, align 4, !dbg !3073
  %140 = load i32, i32* %innermode.addr, align 4, !dbg !3074
  %call318 = call i32 @subreg_lowpart_offset(i32 %139, i32 %140), !dbg !3075
  %141 = load i32, i32* %byte.addr, align 4, !dbg !3076
  %cmp319 = icmp eq i32 %call318, %141, !dbg !3077
  br i1 %cmp319, label %if.then321, label %if.end334, !dbg !3078

if.then321:                                       ; preds = %land.lhs.true317
  %142 = load i32, i32* %outermode.addr, align 4, !dbg !3079
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3080
  %u322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !3080
  %fld323 = bitcast %union.u* %u322 to [1 x %union.rtunion_def]*, !dbg !3080
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld323, i64 0, i64 0, !dbg !3080
  %rt_rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**, !dbg !3080
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx325, align 8, !dbg !3080
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3081
  %u326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1, !dbg !3081
  %fld327 = bitcast %union.u* %u326 to [1 x %union.rtunion_def]*, !dbg !3081
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i64 0, i64 0, !dbg !3081
  %rt_rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**, !dbg !3081
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx329, align 8, !dbg !3081
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !3081
  %bf.load330 = load i32, i32* %147, align 8, !dbg !3081
  %bf.lshr331 = lshr i32 %bf.load330, 16, !dbg !3081
  %bf.clear332 = and i32 %bf.lshr331, 255, !dbg !3081
  %call333 = call %struct.rtx_def* @simplify_gen_unary(i32 100, i32 %142, %struct.rtx_def* %144, i32 %bf.clear332), !dbg !3082
  store %struct.rtx_def* %call333, %struct.rtx_def** %retval, align 8, !dbg !3083
  br label %return, !dbg !3083

if.end334:                                        ; preds = %land.lhs.true317, %land.lhs.true306, %if.end301
  %148 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3084
  %149 = bitcast %struct.rtx_def* %148 to i32*, !dbg !3084
  %bf.load335 = load i32, i32* %149, align 8, !dbg !3084
  %bf.clear336 = and i32 %bf.load335, 65535, !dbg !3084
  %cmp337 = icmp eq i32 %bf.clear336, 37, !dbg !3084
  br i1 %cmp337, label %land.lhs.true339, label %if.end390, !dbg !3086

land.lhs.true339:                                 ; preds = %if.end334
  %150 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3087
  %call340 = call i32 @rhs_regno(%struct.rtx_def* %150), !dbg !3087
  %cmp341 = icmp ult i32 %call340, 53, !dbg !3087
  br i1 %cmp341, label %if.then343, label %if.end390, !dbg !3088

if.then343:                                       ; preds = %land.lhs.true339
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !3089, metadata !DIExpression()), !dbg !3091
  call void @llvm.dbg.declare(metadata i32* %final_regno, metadata !3092, metadata !DIExpression()), !dbg !3093
  %151 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3094
  %call344 = call i32 @rhs_regno(%struct.rtx_def* %151), !dbg !3094
  store i32 %call344, i32* %regno, align 4, !dbg !3095
  %152 = load i32, i32* %regno, align 4, !dbg !3096
  %153 = load i32, i32* %innermode.addr, align 4, !dbg !3097
  %154 = load i32, i32* %byte.addr, align 4, !dbg !3098
  %155 = load i32, i32* %outermode.addr, align 4, !dbg !3099
  %call345 = call i32 @simplify_subreg_regno(i32 %152, i32 %153, i32 %154, i32 %155), !dbg !3100
  store i32 %call345, i32* %final_regno, align 4, !dbg !3101
  %156 = load i32, i32* %final_regno, align 4, !dbg !3102
  %cmp346 = icmp ult i32 %156, 53, !dbg !3102
  br i1 %cmp346, label %if.then348, label %if.end389, !dbg !3104

if.then348:                                       ; preds = %if.then343
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !3105, metadata !DIExpression()), !dbg !3107
  call void @llvm.dbg.declare(metadata i32* %final_offset349, metadata !3108, metadata !DIExpression()), !dbg !3109
  %157 = load i32, i32* %byte.addr, align 4, !dbg !3110
  store i32 %157, i32* %final_offset349, align 4, !dbg !3109
  %158 = load i32, i32* %byte.addr, align 4, !dbg !3111
  %cmp350 = icmp eq i32 %158, 0, !dbg !3113
  br i1 %cmp350, label %land.lhs.true352, label %if.end374, !dbg !3114

land.lhs.true352:                                 ; preds = %if.then348
  %159 = load i32, i32* %innermode.addr, align 4, !dbg !3115
  %idxprom353 = zext i32 %159 to i64, !dbg !3115
  %arrayidx354 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom353, !dbg !3115
  %160 = load i8, i8* %arrayidx354, align 1, !dbg !3115
  %conv355 = zext i8 %160 to i16, !dbg !3115
  %conv356 = zext i16 %conv355 to i32, !dbg !3115
  %161 = load i32, i32* %outermode.addr, align 4, !dbg !3116
  %idxprom357 = zext i32 %161 to i64, !dbg !3116
  %arrayidx358 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom357, !dbg !3116
  %162 = load i8, i8* %arrayidx358, align 1, !dbg !3116
  %conv359 = zext i8 %162 to i16, !dbg !3116
  %conv360 = zext i16 %conv359 to i32, !dbg !3116
  %cmp361 = icmp slt i32 %conv356, %conv360, !dbg !3117
  br i1 %cmp361, label %if.then363, label %if.end374, !dbg !3118

if.then363:                                       ; preds = %land.lhs.true352
  call void @llvm.dbg.declare(metadata i32* %difference364, metadata !3119, metadata !DIExpression()), !dbg !3121
  %163 = load i32, i32* %innermode.addr, align 4, !dbg !3122
  %idxprom365 = zext i32 %163 to i64, !dbg !3122
  %arrayidx366 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom365, !dbg !3122
  %164 = load i8, i8* %arrayidx366, align 1, !dbg !3122
  %conv367 = zext i8 %164 to i16, !dbg !3122
  %conv368 = zext i16 %conv367 to i32, !dbg !3122
  %165 = load i32, i32* %outermode.addr, align 4, !dbg !3123
  %idxprom369 = zext i32 %165 to i64, !dbg !3123
  %arrayidx370 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom369, !dbg !3123
  %166 = load i8, i8* %arrayidx370, align 1, !dbg !3123
  %conv371 = zext i8 %166 to i16, !dbg !3123
  %conv372 = zext i16 %conv371 to i32, !dbg !3123
  %sub373 = sub nsw i32 %conv368, %conv372, !dbg !3124
  store i32 %sub373, i32* %difference364, align 4, !dbg !3121
  br label %if.end374, !dbg !3125

if.end374:                                        ; preds = %if.then363, %land.lhs.true352, %if.then348
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3126
  %168 = load i32, i32* %outermode.addr, align 4, !dbg !3127
  %169 = load i32, i32* %final_regno, align 4, !dbg !3128
  %170 = load i32, i32* %final_offset349, align 4, !dbg !3129
  %call375 = call %struct.rtx_def* @gen_rtx_REG_offset(%struct.rtx_def* %167, i32 %168, i32 %169, i32 %170), !dbg !3130
  store %struct.rtx_def* %call375, %struct.rtx_def** %x, align 8, !dbg !3131
  %171 = load i32, i32* %outermode.addr, align 4, !dbg !3132
  %172 = load i32, i32* %innermode.addr, align 4, !dbg !3134
  %call376 = call i32 @subreg_lowpart_offset(i32 %171, i32 %172), !dbg !3135
  %173 = load i32, i32* %byte.addr, align 4, !dbg !3136
  %cmp377 = icmp eq i32 %call376, %173, !dbg !3137
  br i1 %cmp377, label %if.then379, label %if.end388, !dbg !3138

if.then379:                                       ; preds = %if.end374
  %174 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3139
  %u380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !3139
  %fld381 = bitcast %union.u* %u380 to [1 x %union.rtunion_def]*, !dbg !3139
  %arrayidx382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld381, i64 0, i64 1, !dbg !3139
  %rt_uint383 = bitcast %union.rtunion_def* %arrayidx382 to i32*, !dbg !3139
  %175 = load i32, i32* %rt_uint383, align 8, !dbg !3139
  %176 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !3140
  %u384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %176, i32 0, i32 1, !dbg !3140
  %fld385 = bitcast %union.u* %u384 to [1 x %union.rtunion_def]*, !dbg !3140
  %arrayidx386 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld385, i64 0, i64 1, !dbg !3140
  %rt_uint387 = bitcast %union.rtunion_def* %arrayidx386 to i32*, !dbg !3140
  store i32 %175, i32* %rt_uint387, align 8, !dbg !3141
  br label %if.end388, !dbg !3140

if.end388:                                        ; preds = %if.then379, %if.end374
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !3142
  store %struct.rtx_def* %177, %struct.rtx_def** %retval, align 8, !dbg !3143
  br label %return, !dbg !3143

if.end389:                                        ; preds = %if.then343
  br label %if.end390, !dbg !3144

if.end390:                                        ; preds = %if.end389, %land.lhs.true339, %if.end334
  %178 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3145
  %179 = bitcast %struct.rtx_def* %178 to i32*, !dbg !3145
  %bf.load391 = load i32, i32* %179, align 8, !dbg !3145
  %bf.clear392 = and i32 %bf.load391, 65535, !dbg !3145
  %cmp393 = icmp eq i32 %bf.clear392, 43, !dbg !3145
  br i1 %cmp393, label %land.lhs.true395, label %if.end427, !dbg !3147

land.lhs.true395:                                 ; preds = %if.end390
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3148
  %u396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1, !dbg !3148
  %fld397 = bitcast %union.u* %u396 to [1 x %union.rtunion_def]*, !dbg !3148
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i64 0, i64 0, !dbg !3148
  %rt_rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**, !dbg !3148
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx399, align 8, !dbg !3148
  %call400 = call i32 @mode_dependent_address_p(%struct.rtx_def* %181), !dbg !3149
  %tobool401 = icmp ne i32 %call400, 0, !dbg !3149
  br i1 %tobool401, label %if.end427, label %land.lhs.true402, !dbg !3150

land.lhs.true402:                                 ; preds = %land.lhs.true395
  %182 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3151
  %183 = bitcast %struct.rtx_def* %182 to i32*, !dbg !3151
  %bf.load403 = load i32, i32* %183, align 8, !dbg !3151
  %bf.lshr404 = lshr i32 %bf.load403, 27, !dbg !3151
  %bf.clear405 = and i32 %bf.lshr404, 1, !dbg !3151
  %tobool406 = icmp ne i32 %bf.clear405, 0, !dbg !3151
  br i1 %tobool406, label %lor.lhs.false407, label %land.lhs.true410, !dbg !3152

lor.lhs.false407:                                 ; preds = %land.lhs.true402
  %184 = load i32, i32* %innermode.addr, align 4, !dbg !3153
  %call408 = call i32 @have_insn_for(i32 23, i32 %184), !dbg !3154
  %tobool409 = icmp ne i32 %call408, 0, !dbg !3154
  br i1 %tobool409, label %if.end427, label %land.lhs.true410, !dbg !3155

land.lhs.true410:                                 ; preds = %lor.lhs.false407, %land.lhs.true402
  %185 = load i32, i32* %outermode.addr, align 4, !dbg !3156
  %idxprom411 = zext i32 %185 to i64, !dbg !3156
  %arrayidx412 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom411, !dbg !3156
  %186 = load i8, i8* %arrayidx412, align 1, !dbg !3156
  %conv413 = zext i8 %186 to i16, !dbg !3156
  %conv414 = zext i16 %conv413 to i32, !dbg !3156
  %187 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3157
  %188 = bitcast %struct.rtx_def* %187 to i32*, !dbg !3157
  %bf.load415 = load i32, i32* %188, align 8, !dbg !3157
  %bf.lshr416 = lshr i32 %bf.load415, 16, !dbg !3157
  %bf.clear417 = and i32 %bf.lshr416, 255, !dbg !3157
  %idxprom418 = zext i32 %bf.clear417 to i64, !dbg !3157
  %arrayidx419 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom418, !dbg !3157
  %189 = load i8, i8* %arrayidx419, align 1, !dbg !3157
  %conv420 = zext i8 %189 to i16, !dbg !3157
  %conv421 = zext i16 %conv420 to i32, !dbg !3157
  %cmp422 = icmp sle i32 %conv414, %conv421, !dbg !3158
  br i1 %cmp422, label %if.then424, label %if.end427, !dbg !3159

if.then424:                                       ; preds = %land.lhs.true410
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3160
  %191 = load i32, i32* %outermode.addr, align 4, !dbg !3160
  %192 = load i32, i32* %byte.addr, align 4, !dbg !3160
  %conv425 = zext i32 %192 to i64, !dbg !3160
  %call426 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %190, i32 %191, i64 %conv425, i32 0, i32 1), !dbg !3160
  store %struct.rtx_def* %call426, %struct.rtx_def** %retval, align 8, !dbg !3161
  br label %return, !dbg !3161

if.end427:                                        ; preds = %land.lhs.true410, %lor.lhs.false407, %land.lhs.true395, %if.end390
  %193 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3162
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !3162
  %bf.load428 = load i32, i32* %194, align 8, !dbg !3162
  %bf.clear429 = and i32 %bf.load428, 65535, !dbg !3162
  %cmp430 = icmp eq i32 %bf.clear429, 41, !dbg !3164
  br i1 %cmp430, label %if.then432, label %if.end513, !dbg !3165

if.then432:                                       ; preds = %if.end427
  call void @llvm.dbg.declare(metadata i32* %part_size, metadata !3166, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata i32* %final_offset433, metadata !3169, metadata !DIExpression()), !dbg !3170
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %part, metadata !3171, metadata !DIExpression()), !dbg !3172
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %res, metadata !3173, metadata !DIExpression()), !dbg !3174
  %195 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3175
  %u434 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !3175
  %fld435 = bitcast %union.u* %u434 to [1 x %union.rtunion_def]*, !dbg !3175
  %arrayidx436 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld435, i64 0, i64 0, !dbg !3175
  %rt_rtx437 = bitcast %union.rtunion_def* %arrayidx436 to %struct.rtx_def**, !dbg !3175
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx437, align 8, !dbg !3175
  %197 = bitcast %struct.rtx_def* %196 to i32*, !dbg !3175
  %bf.load438 = load i32, i32* %197, align 8, !dbg !3175
  %bf.lshr439 = lshr i32 %bf.load438, 16, !dbg !3175
  %bf.clear440 = and i32 %bf.lshr439, 255, !dbg !3175
  %idxprom441 = zext i32 %bf.clear440 to i64, !dbg !3175
  %arrayidx442 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom441, !dbg !3175
  %198 = load i8, i8* %arrayidx442, align 1, !dbg !3175
  %conv443 = zext i8 %198 to i32, !dbg !3175
  %cmp444 = icmp eq i32 %conv443, 0, !dbg !3175
  br i1 %cmp444, label %cond.true446, label %cond.false458, !dbg !3175

cond.true446:                                     ; preds = %if.then432
  %199 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3175
  %u447 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1, !dbg !3175
  %fld448 = bitcast %union.u* %u447 to [1 x %union.rtunion_def]*, !dbg !3175
  %arrayidx449 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld448, i64 0, i64 0, !dbg !3175
  %rt_rtx450 = bitcast %union.rtunion_def* %arrayidx449 to %struct.rtx_def**, !dbg !3175
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx450, align 8, !dbg !3175
  %201 = bitcast %struct.rtx_def* %200 to i32*, !dbg !3175
  %bf.load451 = load i32, i32* %201, align 8, !dbg !3175
  %bf.lshr452 = lshr i32 %bf.load451, 16, !dbg !3175
  %bf.clear453 = and i32 %bf.lshr452, 255, !dbg !3175
  %idxprom454 = zext i32 %bf.clear453 to i64, !dbg !3175
  %arrayidx455 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom454, !dbg !3175
  %202 = load i8, i8* %arrayidx455, align 1, !dbg !3175
  %conv456 = zext i8 %202 to i16, !dbg !3175
  %conv457 = zext i16 %conv456 to i32, !dbg !3175
  br label %cond.end473, !dbg !3175

cond.false458:                                    ; preds = %if.then432
  %203 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3175
  %u459 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !3175
  %fld460 = bitcast %union.u* %u459 to [1 x %union.rtunion_def]*, !dbg !3175
  %arrayidx461 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld460, i64 0, i64 0, !dbg !3175
  %rt_rtx462 = bitcast %union.rtunion_def* %arrayidx461 to %struct.rtx_def**, !dbg !3175
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx462, align 8, !dbg !3175
  %205 = bitcast %struct.rtx_def* %204 to i32*, !dbg !3175
  %bf.load463 = load i32, i32* %205, align 8, !dbg !3175
  %bf.lshr464 = lshr i32 %bf.load463, 16, !dbg !3175
  %bf.clear465 = and i32 %bf.lshr464, 255, !dbg !3175
  %idxprom466 = zext i32 %bf.clear465 to i64, !dbg !3175
  %arrayidx467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom466, !dbg !3175
  %206 = load i8, i8* %arrayidx467, align 1, !dbg !3175
  %conv468 = zext i8 %206 to i32, !dbg !3175
  %idxprom469 = zext i32 %conv468 to i64, !dbg !3175
  %arrayidx470 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom469, !dbg !3175
  %207 = load i8, i8* %arrayidx470, align 1, !dbg !3175
  %conv471 = zext i8 %207 to i16, !dbg !3175
  %conv472 = zext i16 %conv471 to i32, !dbg !3175
  br label %cond.end473, !dbg !3175

cond.end473:                                      ; preds = %cond.false458, %cond.true446
  %cond474 = phi i32 [ %conv457, %cond.true446 ], [ %conv472, %cond.false458 ], !dbg !3175
  store i32 %cond474, i32* %part_size, align 4, !dbg !3176
  %208 = load i32, i32* %byte.addr, align 4, !dbg !3177
  %209 = load i32, i32* %part_size, align 4, !dbg !3179
  %cmp475 = icmp ult i32 %208, %209, !dbg !3180
  br i1 %cmp475, label %if.then477, label %if.else482, !dbg !3181

if.then477:                                       ; preds = %cond.end473
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3182
  %u478 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1, !dbg !3182
  %fld479 = bitcast %union.u* %u478 to [1 x %union.rtunion_def]*, !dbg !3182
  %arrayidx480 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld479, i64 0, i64 0, !dbg !3182
  %rt_rtx481 = bitcast %union.rtunion_def* %arrayidx480 to %struct.rtx_def**, !dbg !3182
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx481, align 8, !dbg !3182
  store %struct.rtx_def* %211, %struct.rtx_def** %part, align 8, !dbg !3184
  %212 = load i32, i32* %byte.addr, align 4, !dbg !3185
  store i32 %212, i32* %final_offset433, align 4, !dbg !3186
  br label %if.end488, !dbg !3187

if.else482:                                       ; preds = %cond.end473
  %213 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3188
  %u483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1, !dbg !3188
  %fld484 = bitcast %union.u* %u483 to [1 x %union.rtunion_def]*, !dbg !3188
  %arrayidx485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld484, i64 0, i64 1, !dbg !3188
  %rt_rtx486 = bitcast %union.rtunion_def* %arrayidx485 to %struct.rtx_def**, !dbg !3188
  %214 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx486, align 8, !dbg !3188
  store %struct.rtx_def* %214, %struct.rtx_def** %part, align 8, !dbg !3190
  %215 = load i32, i32* %byte.addr, align 4, !dbg !3191
  %216 = load i32, i32* %part_size, align 4, !dbg !3192
  %sub487 = sub i32 %215, %216, !dbg !3193
  store i32 %sub487, i32* %final_offset433, align 4, !dbg !3194
  br label %if.end488

if.end488:                                        ; preds = %if.else482, %if.then477
  %217 = load i32, i32* %final_offset433, align 4, !dbg !3195
  %218 = load i32, i32* %outermode.addr, align 4, !dbg !3197
  %idxprom489 = zext i32 %218 to i64, !dbg !3197
  %arrayidx490 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom489, !dbg !3197
  %219 = load i8, i8* %arrayidx490, align 1, !dbg !3197
  %conv491 = zext i8 %219 to i16, !dbg !3197
  %conv492 = zext i16 %conv491 to i32, !dbg !3197
  %add493 = add i32 %217, %conv492, !dbg !3198
  %220 = load i32, i32* %part_size, align 4, !dbg !3199
  %cmp494 = icmp ugt i32 %add493, %220, !dbg !3200
  br i1 %cmp494, label %if.then496, label %if.end497, !dbg !3201

if.then496:                                       ; preds = %if.end488
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3202
  br label %return, !dbg !3202

if.end497:                                        ; preds = %if.end488
  %221 = load i32, i32* %outermode.addr, align 4, !dbg !3203
  %222 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8, !dbg !3204
  %223 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8, !dbg !3205
  %224 = bitcast %struct.rtx_def* %223 to i32*, !dbg !3205
  %bf.load498 = load i32, i32* %224, align 8, !dbg !3205
  %bf.lshr499 = lshr i32 %bf.load498, 16, !dbg !3205
  %bf.clear500 = and i32 %bf.lshr499, 255, !dbg !3205
  %225 = load i32, i32* %final_offset433, align 4, !dbg !3206
  %call501 = call %struct.rtx_def* @simplify_subreg(i32 %221, %struct.rtx_def* %222, i32 %bf.clear500, i32 %225), !dbg !3207
  store %struct.rtx_def* %call501, %struct.rtx_def** %res, align 8, !dbg !3208
  %226 = load %struct.rtx_def*, %struct.rtx_def** %res, align 8, !dbg !3209
  %tobool502 = icmp ne %struct.rtx_def* %226, null, !dbg !3209
  br i1 %tobool502, label %if.then503, label %if.end504, !dbg !3211

if.then503:                                       ; preds = %if.end497
  %227 = load %struct.rtx_def*, %struct.rtx_def** %res, align 8, !dbg !3212
  store %struct.rtx_def* %227, %struct.rtx_def** %retval, align 8, !dbg !3213
  br label %return, !dbg !3213

if.end504:                                        ; preds = %if.end497
  %228 = load i32, i32* %outermode.addr, align 4, !dbg !3214
  %229 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8, !dbg !3216
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !3216
  %bf.load505 = load i32, i32* %230, align 8, !dbg !3216
  %bf.lshr506 = lshr i32 %bf.load505, 16, !dbg !3216
  %bf.clear507 = and i32 %bf.lshr506, 255, !dbg !3216
  %231 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8, !dbg !3217
  %232 = load i32, i32* %final_offset433, align 4, !dbg !3218
  %call508 = call zeroext i8 @validate_subreg(i32 %228, i32 %bf.clear507, %struct.rtx_def* %231, i32 %232), !dbg !3219
  %tobool509 = icmp ne i8 %call508, 0, !dbg !3219
  br i1 %tobool509, label %if.then510, label %if.end512, !dbg !3220

if.then510:                                       ; preds = %if.end504
  %233 = load i32, i32* %outermode.addr, align 4, !dbg !3221
  %234 = load %struct.rtx_def*, %struct.rtx_def** %part, align 8, !dbg !3222
  %235 = load i32, i32* %final_offset433, align 4, !dbg !3223
  %call511 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %233, %struct.rtx_def* %234, i32 %235), !dbg !3224
  store %struct.rtx_def* %call511, %struct.rtx_def** %retval, align 8, !dbg !3225
  br label %return, !dbg !3225

if.end512:                                        ; preds = %if.end504
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3226
  br label %return, !dbg !3226

if.end513:                                        ; preds = %if.end427
  %236 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3227
  %237 = bitcast %struct.rtx_def* %236 to i32*, !dbg !3227
  %bf.load514 = load i32, i32* %237, align 8, !dbg !3227
  %bf.clear515 = and i32 %bf.load514, 65535, !dbg !3227
  %cmp516 = icmp eq i32 %bf.clear515, 99, !dbg !3229
  br i1 %cmp516, label %land.lhs.true523, label %lor.lhs.false518, !dbg !3230

lor.lhs.false518:                                 ; preds = %if.end513
  %238 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3231
  %239 = bitcast %struct.rtx_def* %238 to i32*, !dbg !3231
  %bf.load519 = load i32, i32* %239, align 8, !dbg !3231
  %bf.clear520 = and i32 %bf.load519, 65535, !dbg !3231
  %cmp521 = icmp eq i32 %bf.clear520, 98, !dbg !3232
  br i1 %cmp521, label %land.lhs.true523, label %if.end629, !dbg !3233

land.lhs.true523:                                 ; preds = %lor.lhs.false518, %if.end513
  %240 = load i32, i32* %outermode.addr, align 4, !dbg !3234
  %idxprom524 = zext i32 %240 to i64, !dbg !3234
  %arrayidx525 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom524, !dbg !3234
  %241 = load i8, i8* %arrayidx525, align 1, !dbg !3234
  %conv526 = zext i8 %241 to i16, !dbg !3234
  %conv527 = zext i16 %conv526 to i32, !dbg !3234
  %mul = mul nsw i32 %conv527, 8, !dbg !3234
  %conv528 = trunc i32 %mul to i16, !dbg !3234
  %conv529 = zext i16 %conv528 to i32, !dbg !3234
  %242 = load i32, i32* %innermode.addr, align 4, !dbg !3235
  %idxprom530 = zext i32 %242 to i64, !dbg !3235
  %arrayidx531 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom530, !dbg !3235
  %243 = load i8, i8* %arrayidx531, align 1, !dbg !3235
  %conv532 = zext i8 %243 to i16, !dbg !3235
  %conv533 = zext i16 %conv532 to i32, !dbg !3235
  %mul534 = mul nsw i32 %conv533, 8, !dbg !3235
  %conv535 = trunc i32 %mul534 to i16, !dbg !3235
  %conv536 = zext i16 %conv535 to i32, !dbg !3235
  %cmp537 = icmp slt i32 %conv529, %conv536, !dbg !3236
  br i1 %cmp537, label %if.then539, label %if.end629, !dbg !3237

if.then539:                                       ; preds = %land.lhs.true523
  call void @llvm.dbg.declare(metadata i32* %bitpos, metadata !3238, metadata !DIExpression()), !dbg !3240
  %244 = load i32, i32* %outermode.addr, align 4, !dbg !3241
  %245 = load i32, i32* %innermode.addr, align 4, !dbg !3242
  %246 = load i32, i32* %byte.addr, align 4, !dbg !3243
  %call540 = call i32 @subreg_lsb_1(i32 %244, i32 %245, i32 %246), !dbg !3244
  store i32 %call540, i32* %bitpos, align 4, !dbg !3240
  %247 = load i32, i32* %bitpos, align 4, !dbg !3245
  %cmp541 = icmp eq i32 %247, 0, !dbg !3247
  br i1 %cmp541, label %if.then543, label %if.end603, !dbg !3248

if.then543:                                       ; preds = %if.then539
  call void @llvm.dbg.declare(metadata i32* %origmode, metadata !3249, metadata !DIExpression()), !dbg !3251
  %248 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3252
  %u544 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1, !dbg !3252
  %fld545 = bitcast %union.u* %u544 to [1 x %union.rtunion_def]*, !dbg !3252
  %arrayidx546 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld545, i64 0, i64 0, !dbg !3252
  %rt_rtx547 = bitcast %union.rtunion_def* %arrayidx546 to %struct.rtx_def**, !dbg !3252
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx547, align 8, !dbg !3252
  %250 = bitcast %struct.rtx_def* %249 to i32*, !dbg !3252
  %bf.load548 = load i32, i32* %250, align 8, !dbg !3252
  %bf.lshr549 = lshr i32 %bf.load548, 16, !dbg !3252
  %bf.clear550 = and i32 %bf.lshr549, 255, !dbg !3252
  store i32 %bf.clear550, i32* %origmode, align 4, !dbg !3251
  %251 = load i32, i32* %outermode.addr, align 4, !dbg !3253
  %252 = load i32, i32* %origmode, align 4, !dbg !3255
  %cmp551 = icmp eq i32 %251, %252, !dbg !3256
  br i1 %cmp551, label %if.then553, label %if.end558, !dbg !3257

if.then553:                                       ; preds = %if.then543
  %253 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3258
  %u554 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1, !dbg !3258
  %fld555 = bitcast %union.u* %u554 to [1 x %union.rtunion_def]*, !dbg !3258
  %arrayidx556 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld555, i64 0, i64 0, !dbg !3258
  %rt_rtx557 = bitcast %union.rtunion_def* %arrayidx556 to %struct.rtx_def**, !dbg !3258
  %254 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx557, align 8, !dbg !3258
  store %struct.rtx_def* %254, %struct.rtx_def** %retval, align 8, !dbg !3259
  br label %return, !dbg !3259

if.end558:                                        ; preds = %if.then543
  %255 = load i32, i32* %outermode.addr, align 4, !dbg !3260
  %idxprom559 = zext i32 %255 to i64, !dbg !3260
  %arrayidx560 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom559, !dbg !3260
  %256 = load i8, i8* %arrayidx560, align 1, !dbg !3260
  %conv561 = zext i8 %256 to i16, !dbg !3260
  %conv562 = zext i16 %conv561 to i32, !dbg !3260
  %mul563 = mul nsw i32 %conv562, 8, !dbg !3260
  %conv564 = trunc i32 %mul563 to i16, !dbg !3260
  %conv565 = zext i16 %conv564 to i32, !dbg !3260
  %257 = load i32, i32* %origmode, align 4, !dbg !3262
  %idxprom566 = zext i32 %257 to i64, !dbg !3262
  %arrayidx567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom566, !dbg !3262
  %258 = load i8, i8* %arrayidx567, align 1, !dbg !3262
  %conv568 = zext i8 %258 to i16, !dbg !3262
  %conv569 = zext i16 %conv568 to i32, !dbg !3262
  %mul570 = mul nsw i32 %conv569, 8, !dbg !3262
  %conv571 = trunc i32 %mul570 to i16, !dbg !3262
  %conv572 = zext i16 %conv571 to i32, !dbg !3262
  %cmp573 = icmp sle i32 %conv565, %conv572, !dbg !3263
  br i1 %cmp573, label %if.then575, label %if.end582, !dbg !3264

if.then575:                                       ; preds = %if.end558
  %259 = load i32, i32* %outermode.addr, align 4, !dbg !3265
  %260 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3266
  %u576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1, !dbg !3266
  %fld577 = bitcast %union.u* %u576 to [1 x %union.rtunion_def]*, !dbg !3266
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i64 0, i64 0, !dbg !3266
  %rt_rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**, !dbg !3266
  %261 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx579, align 8, !dbg !3266
  %262 = load i32, i32* %origmode, align 4, !dbg !3267
  %263 = load i32, i32* %outermode.addr, align 4, !dbg !3268
  %264 = load i32, i32* %origmode, align 4, !dbg !3269
  %call580 = call i32 @subreg_lowpart_offset(i32 %263, i32 %264), !dbg !3270
  %call581 = call %struct.rtx_def* @simplify_gen_subreg(i32 %259, %struct.rtx_def* %261, i32 %262, i32 %call580), !dbg !3271
  store %struct.rtx_def* %call581, %struct.rtx_def** %retval, align 8, !dbg !3272
  br label %return, !dbg !3272

if.end582:                                        ; preds = %if.end558
  %265 = load i32, i32* %outermode.addr, align 4, !dbg !3273
  %idxprom583 = zext i32 %265 to i64, !dbg !3273
  %arrayidx584 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom583, !dbg !3273
  %266 = load i8, i8* %arrayidx584, align 1, !dbg !3273
  %conv585 = zext i8 %266 to i32, !dbg !3273
  %cmp586 = icmp eq i32 %conv585, 2, !dbg !3273
  br i1 %cmp586, label %if.then594, label %lor.lhs.false588, !dbg !3273

lor.lhs.false588:                                 ; preds = %if.end582
  %267 = load i32, i32* %outermode.addr, align 4, !dbg !3273
  %idxprom589 = zext i32 %267 to i64, !dbg !3273
  %arrayidx590 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom589, !dbg !3273
  %268 = load i8, i8* %arrayidx590, align 1, !dbg !3273
  %conv591 = zext i8 %268 to i32, !dbg !3273
  %cmp592 = icmp eq i32 %conv591, 3, !dbg !3273
  br i1 %cmp592, label %if.then594, label %if.end602, !dbg !3275

if.then594:                                       ; preds = %lor.lhs.false588, %if.end582
  %269 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3276
  %270 = bitcast %struct.rtx_def* %269 to i32*, !dbg !3276
  %bf.load595 = load i32, i32* %270, align 8, !dbg !3276
  %bf.clear596 = and i32 %bf.load595, 65535, !dbg !3276
  %271 = load i32, i32* %outermode.addr, align 4, !dbg !3277
  %272 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3278
  %u597 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %272, i32 0, i32 1, !dbg !3278
  %fld598 = bitcast %union.u* %u597 to [1 x %union.rtunion_def]*, !dbg !3278
  %arrayidx599 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld598, i64 0, i64 0, !dbg !3278
  %rt_rtx600 = bitcast %union.rtunion_def* %arrayidx599 to %struct.rtx_def**, !dbg !3278
  %273 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx600, align 8, !dbg !3278
  %274 = load i32, i32* %origmode, align 4, !dbg !3279
  %call601 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear596, i32 %271, %struct.rtx_def* %273, i32 %274), !dbg !3280
  store %struct.rtx_def* %call601, %struct.rtx_def** %retval, align 8, !dbg !3281
  br label %return, !dbg !3281

if.end602:                                        ; preds = %lor.lhs.false588
  br label %if.end603, !dbg !3282

if.end603:                                        ; preds = %if.end602, %if.then539
  %275 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3283
  %276 = bitcast %struct.rtx_def* %275 to i32*, !dbg !3283
  %bf.load604 = load i32, i32* %276, align 8, !dbg !3283
  %bf.clear605 = and i32 %bf.load604, 65535, !dbg !3283
  %cmp606 = icmp eq i32 %bf.clear605, 99, !dbg !3285
  br i1 %cmp606, label %land.lhs.true608, label %if.end628, !dbg !3286

land.lhs.true608:                                 ; preds = %if.end603
  %277 = load i32, i32* %bitpos, align 4, !dbg !3287
  %278 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3288
  %u609 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1, !dbg !3288
  %fld610 = bitcast %union.u* %u609 to [1 x %union.rtunion_def]*, !dbg !3288
  %arrayidx611 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld610, i64 0, i64 0, !dbg !3288
  %rt_rtx612 = bitcast %union.rtunion_def* %arrayidx611 to %struct.rtx_def**, !dbg !3288
  %279 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx612, align 8, !dbg !3288
  %280 = bitcast %struct.rtx_def* %279 to i32*, !dbg !3288
  %bf.load613 = load i32, i32* %280, align 8, !dbg !3288
  %bf.lshr614 = lshr i32 %bf.load613, 16, !dbg !3288
  %bf.clear615 = and i32 %bf.lshr614, 255, !dbg !3288
  %idxprom616 = zext i32 %bf.clear615 to i64, !dbg !3288
  %arrayidx617 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom616, !dbg !3288
  %281 = load i8, i8* %arrayidx617, align 1, !dbg !3288
  %conv618 = zext i8 %281 to i16, !dbg !3288
  %conv619 = zext i16 %conv618 to i32, !dbg !3288
  %mul620 = mul nsw i32 %conv619, 8, !dbg !3288
  %conv621 = trunc i32 %mul620 to i16, !dbg !3288
  %conv622 = zext i16 %conv621 to i32, !dbg !3288
  %cmp623 = icmp uge i32 %277, %conv622, !dbg !3289
  br i1 %cmp623, label %if.then625, label %if.end628, !dbg !3290

if.then625:                                       ; preds = %land.lhs.true608
  %282 = load i32, i32* %outermode.addr, align 4, !dbg !3291
  %idxprom626 = sext i32 %282 to i64, !dbg !3291
  %arrayidx627 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom626, !dbg !3291
  %283 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx627, align 8, !dbg !3291
  store %struct.rtx_def* %283, %struct.rtx_def** %retval, align 8, !dbg !3292
  br label %return, !dbg !3292

if.end628:                                        ; preds = %land.lhs.true608, %if.end603
  br label %if.end629, !dbg !3293

if.end629:                                        ; preds = %if.end628, %land.lhs.true523, %lor.lhs.false518
  %284 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3294
  %285 = bitcast %struct.rtx_def* %284 to i32*, !dbg !3294
  %bf.load630 = load i32, i32* %285, align 8, !dbg !3294
  %bf.clear631 = and i32 %bf.load630, 65535, !dbg !3294
  %cmp632 = icmp eq i32 %bf.clear631, 68, !dbg !3296
  br i1 %cmp632, label %land.lhs.true639, label %lor.lhs.false634, !dbg !3297

lor.lhs.false634:                                 ; preds = %if.end629
  %286 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3298
  %287 = bitcast %struct.rtx_def* %286 to i32*, !dbg !3298
  %bf.load635 = load i32, i32* %287, align 8, !dbg !3298
  %bf.clear636 = and i32 %bf.load635, 65535, !dbg !3298
  %cmp637 = icmp eq i32 %bf.clear636, 67, !dbg !3299
  br i1 %cmp637, label %land.lhs.true639, label %if.end735, !dbg !3300

land.lhs.true639:                                 ; preds = %lor.lhs.false634, %if.end629
  %288 = load i32, i32* %outermode.addr, align 4, !dbg !3301
  %idxprom640 = zext i32 %288 to i64, !dbg !3301
  %arrayidx641 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom640, !dbg !3301
  %289 = load i8, i8* %arrayidx641, align 1, !dbg !3301
  %conv642 = zext i8 %289 to i32, !dbg !3301
  %cmp643 = icmp eq i32 %conv642, 2, !dbg !3301
  br i1 %cmp643, label %land.lhs.true651, label %lor.lhs.false645, !dbg !3301

lor.lhs.false645:                                 ; preds = %land.lhs.true639
  %290 = load i32, i32* %outermode.addr, align 4, !dbg !3301
  %idxprom646 = zext i32 %290 to i64, !dbg !3301
  %arrayidx647 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom646, !dbg !3301
  %291 = load i8, i8* %arrayidx647, align 1, !dbg !3301
  %conv648 = zext i8 %291 to i32, !dbg !3301
  %cmp649 = icmp eq i32 %conv648, 3, !dbg !3301
  br i1 %cmp649, label %land.lhs.true651, label %if.end735, !dbg !3302

land.lhs.true651:                                 ; preds = %lor.lhs.false645, %land.lhs.true639
  %292 = load i32, i32* %outermode.addr, align 4, !dbg !3303
  %idxprom652 = zext i32 %292 to i64, !dbg !3303
  %arrayidx653 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom652, !dbg !3303
  %293 = load i8, i8* %arrayidx653, align 1, !dbg !3303
  %conv654 = zext i8 %293 to i16, !dbg !3303
  %conv655 = zext i16 %conv654 to i32, !dbg !3303
  %mul656 = mul nsw i32 %conv655, 8, !dbg !3303
  %conv657 = trunc i32 %mul656 to i16, !dbg !3303
  %conv658 = zext i16 %conv657 to i32, !dbg !3303
  %mul659 = mul nsw i32 2, %conv658, !dbg !3304
  %294 = load i32, i32* %innermode.addr, align 4, !dbg !3305
  %idxprom660 = zext i32 %294 to i64, !dbg !3305
  %arrayidx661 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom660, !dbg !3305
  %295 = load i8, i8* %arrayidx661, align 1, !dbg !3305
  %conv662 = zext i8 %295 to i16, !dbg !3305
  %conv663 = zext i16 %conv662 to i32, !dbg !3305
  %mul664 = mul nsw i32 %conv663, 8, !dbg !3305
  %conv665 = trunc i32 %mul664 to i16, !dbg !3305
  %conv666 = zext i16 %conv665 to i32, !dbg !3305
  %cmp667 = icmp sle i32 %mul659, %conv666, !dbg !3306
  br i1 %cmp667, label %land.lhs.true669, label %if.end735, !dbg !3307

land.lhs.true669:                                 ; preds = %land.lhs.true651
  %296 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3308
  %u670 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %296, i32 0, i32 1, !dbg !3308
  %fld671 = bitcast %union.u* %u670 to [1 x %union.rtunion_def]*, !dbg !3308
  %arrayidx672 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld671, i64 0, i64 1, !dbg !3308
  %rt_rtx673 = bitcast %union.rtunion_def* %arrayidx672 to %struct.rtx_def**, !dbg !3308
  %297 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx673, align 8, !dbg !3308
  %298 = bitcast %struct.rtx_def* %297 to i32*, !dbg !3308
  %bf.load674 = load i32, i32* %298, align 8, !dbg !3308
  %bf.clear675 = and i32 %bf.load674, 65535, !dbg !3308
  %cmp676 = icmp eq i32 %bf.clear675, 30, !dbg !3308
  br i1 %cmp676, label %land.lhs.true678, label %if.end735, !dbg !3309

land.lhs.true678:                                 ; preds = %land.lhs.true669
  %299 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3310
  %u679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %299, i32 0, i32 1, !dbg !3310
  %fld680 = bitcast %union.u* %u679 to [1 x %union.rtunion_def]*, !dbg !3310
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i64 0, i64 0, !dbg !3310
  %rt_rtx682 = bitcast %union.rtunion_def* %arrayidx681 to %struct.rtx_def**, !dbg !3310
  %300 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx682, align 8, !dbg !3310
  %301 = bitcast %struct.rtx_def* %300 to i32*, !dbg !3310
  %bf.load683 = load i32, i32* %301, align 8, !dbg !3310
  %bf.clear684 = and i32 %bf.load683, 65535, !dbg !3310
  %cmp685 = icmp eq i32 %bf.clear684, 98, !dbg !3311
  br i1 %cmp685, label %land.lhs.true687, label %if.end735, !dbg !3312

land.lhs.true687:                                 ; preds = %land.lhs.true678
  %302 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3313
  %u688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1, !dbg !3313
  %fld689 = bitcast %union.u* %u688 to [1 x %union.rtunion_def]*, !dbg !3313
  %arrayidx690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld689, i64 0, i64 0, !dbg !3313
  %rt_rtx691 = bitcast %union.rtunion_def* %arrayidx690 to %struct.rtx_def**, !dbg !3313
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx691, align 8, !dbg !3313
  %u692 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %303, i32 0, i32 1, !dbg !3313
  %fld693 = bitcast %union.u* %u692 to [1 x %union.rtunion_def]*, !dbg !3313
  %arrayidx694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld693, i64 0, i64 0, !dbg !3313
  %rt_rtx695 = bitcast %union.rtunion_def* %arrayidx694 to %struct.rtx_def**, !dbg !3313
  %304 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx695, align 8, !dbg !3313
  %305 = bitcast %struct.rtx_def* %304 to i32*, !dbg !3313
  %bf.load696 = load i32, i32* %305, align 8, !dbg !3313
  %bf.lshr697 = lshr i32 %bf.load696, 16, !dbg !3313
  %bf.clear698 = and i32 %bf.lshr697, 255, !dbg !3313
  %306 = load i32, i32* %outermode.addr, align 4, !dbg !3314
  %cmp699 = icmp eq i32 %bf.clear698, %306, !dbg !3315
  br i1 %cmp699, label %land.lhs.true701, label %if.end735, !dbg !3316

land.lhs.true701:                                 ; preds = %land.lhs.true687
  %307 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3317
  %u702 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1, !dbg !3317
  %fld703 = bitcast %union.u* %u702 to [1 x %union.rtunion_def]*, !dbg !3317
  %arrayidx704 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld703, i64 0, i64 1, !dbg !3317
  %rt_rtx705 = bitcast %union.rtunion_def* %arrayidx704 to %struct.rtx_def**, !dbg !3317
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx705, align 8, !dbg !3317
  %u706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1, !dbg !3317
  %hwint = bitcast %union.u* %u706 to [1 x i64]*, !dbg !3317
  %arrayidx707 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !3317
  %309 = load i64, i64* %arrayidx707, align 8, !dbg !3317
  %310 = load i32, i32* %outermode.addr, align 4, !dbg !3318
  %idxprom708 = zext i32 %310 to i64, !dbg !3318
  %arrayidx709 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom708, !dbg !3318
  %311 = load i8, i8* %arrayidx709, align 1, !dbg !3318
  %conv710 = zext i8 %311 to i16, !dbg !3318
  %conv711 = zext i16 %conv710 to i32, !dbg !3318
  %mul712 = mul nsw i32 %conv711, 8, !dbg !3318
  %conv713 = trunc i32 %mul712 to i16, !dbg !3318
  %conv714 = zext i16 %conv713 to i64, !dbg !3318
  %cmp715 = icmp slt i64 %309, %conv714, !dbg !3319
  br i1 %cmp715, label %land.lhs.true717, label %if.end735, !dbg !3320

land.lhs.true717:                                 ; preds = %land.lhs.true701
  %312 = load i32, i32* %outermode.addr, align 4, !dbg !3321
  %313 = load i32, i32* %innermode.addr, align 4, !dbg !3322
  %314 = load i32, i32* %byte.addr, align 4, !dbg !3323
  %call718 = call i32 @subreg_lsb_1(i32 %312, i32 %313, i32 %314), !dbg !3324
  %cmp719 = icmp eq i32 %call718, 0, !dbg !3325
  br i1 %cmp719, label %if.then721, label %if.end735, !dbg !3326

if.then721:                                       ; preds = %land.lhs.true717
  %315 = load i32, i32* %outermode.addr, align 4, !dbg !3327
  %316 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3328
  %u722 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %316, i32 0, i32 1, !dbg !3328
  %fld723 = bitcast %union.u* %u722 to [1 x %union.rtunion_def]*, !dbg !3328
  %arrayidx724 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld723, i64 0, i64 0, !dbg !3328
  %rt_rtx725 = bitcast %union.rtunion_def* %arrayidx724 to %struct.rtx_def**, !dbg !3328
  %317 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx725, align 8, !dbg !3328
  %u726 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %317, i32 0, i32 1, !dbg !3328
  %fld727 = bitcast %union.u* %u726 to [1 x %union.rtunion_def]*, !dbg !3328
  %arrayidx728 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld727, i64 0, i64 0, !dbg !3328
  %rt_rtx729 = bitcast %union.rtunion_def* %arrayidx728 to %struct.rtx_def**, !dbg !3328
  %318 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx729, align 8, !dbg !3328
  %319 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3329
  %u730 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %319, i32 0, i32 1, !dbg !3329
  %fld731 = bitcast %union.u* %u730 to [1 x %union.rtunion_def]*, !dbg !3329
  %arrayidx732 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld731, i64 0, i64 1, !dbg !3329
  %rt_rtx733 = bitcast %union.rtunion_def* %arrayidx732 to %struct.rtx_def**, !dbg !3329
  %320 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx733, align 8, !dbg !3329
  %call734 = call %struct.rtx_def* @simplify_gen_binary(i32 67, i32 %315, %struct.rtx_def* %318, %struct.rtx_def* %320), !dbg !3330
  store %struct.rtx_def* %call734, %struct.rtx_def** %retval, align 8, !dbg !3331
  br label %return, !dbg !3331

if.end735:                                        ; preds = %land.lhs.true717, %land.lhs.true701, %land.lhs.true687, %land.lhs.true678, %land.lhs.true669, %land.lhs.true651, %lor.lhs.false645, %lor.lhs.false634
  %321 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3332
  %322 = bitcast %struct.rtx_def* %321 to i32*, !dbg !3332
  %bf.load736 = load i32, i32* %322, align 8, !dbg !3332
  %bf.clear737 = and i32 %bf.load736, 65535, !dbg !3332
  %cmp738 = icmp eq i32 %bf.clear737, 68, !dbg !3334
  br i1 %cmp738, label %land.lhs.true745, label %lor.lhs.false740, !dbg !3335

lor.lhs.false740:                                 ; preds = %if.end735
  %323 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3336
  %324 = bitcast %struct.rtx_def* %323 to i32*, !dbg !3336
  %bf.load741 = load i32, i32* %324, align 8, !dbg !3336
  %bf.clear742 = and i32 %bf.load741, 65535, !dbg !3336
  %cmp743 = icmp eq i32 %bf.clear742, 67, !dbg !3337
  br i1 %cmp743, label %land.lhs.true745, label %if.end841, !dbg !3338

land.lhs.true745:                                 ; preds = %lor.lhs.false740, %if.end735
  %325 = load i32, i32* %outermode.addr, align 4, !dbg !3339
  %idxprom746 = zext i32 %325 to i64, !dbg !3339
  %arrayidx747 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom746, !dbg !3339
  %326 = load i8, i8* %arrayidx747, align 1, !dbg !3339
  %conv748 = zext i8 %326 to i32, !dbg !3339
  %cmp749 = icmp eq i32 %conv748, 2, !dbg !3339
  br i1 %cmp749, label %land.lhs.true757, label %lor.lhs.false751, !dbg !3339

lor.lhs.false751:                                 ; preds = %land.lhs.true745
  %327 = load i32, i32* %outermode.addr, align 4, !dbg !3339
  %idxprom752 = zext i32 %327 to i64, !dbg !3339
  %arrayidx753 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom752, !dbg !3339
  %328 = load i8, i8* %arrayidx753, align 1, !dbg !3339
  %conv754 = zext i8 %328 to i32, !dbg !3339
  %cmp755 = icmp eq i32 %conv754, 3, !dbg !3339
  br i1 %cmp755, label %land.lhs.true757, label %if.end841, !dbg !3340

land.lhs.true757:                                 ; preds = %lor.lhs.false751, %land.lhs.true745
  %329 = load i32, i32* %outermode.addr, align 4, !dbg !3341
  %idxprom758 = zext i32 %329 to i64, !dbg !3341
  %arrayidx759 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom758, !dbg !3341
  %330 = load i8, i8* %arrayidx759, align 1, !dbg !3341
  %conv760 = zext i8 %330 to i16, !dbg !3341
  %conv761 = zext i16 %conv760 to i32, !dbg !3341
  %mul762 = mul nsw i32 %conv761, 8, !dbg !3341
  %conv763 = trunc i32 %mul762 to i16, !dbg !3341
  %conv764 = zext i16 %conv763 to i32, !dbg !3341
  %331 = load i32, i32* %innermode.addr, align 4, !dbg !3342
  %idxprom765 = zext i32 %331 to i64, !dbg !3342
  %arrayidx766 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom765, !dbg !3342
  %332 = load i8, i8* %arrayidx766, align 1, !dbg !3342
  %conv767 = zext i8 %332 to i16, !dbg !3342
  %conv768 = zext i16 %conv767 to i32, !dbg !3342
  %mul769 = mul nsw i32 %conv768, 8, !dbg !3342
  %conv770 = trunc i32 %mul769 to i16, !dbg !3342
  %conv771 = zext i16 %conv770 to i32, !dbg !3342
  %cmp772 = icmp slt i32 %conv764, %conv771, !dbg !3343
  br i1 %cmp772, label %land.lhs.true774, label %if.end841, !dbg !3344

land.lhs.true774:                                 ; preds = %land.lhs.true757
  %333 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3345
  %u775 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %333, i32 0, i32 1, !dbg !3345
  %fld776 = bitcast %union.u* %u775 to [1 x %union.rtunion_def]*, !dbg !3345
  %arrayidx777 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld776, i64 0, i64 1, !dbg !3345
  %rt_rtx778 = bitcast %union.rtunion_def* %arrayidx777 to %struct.rtx_def**, !dbg !3345
  %334 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx778, align 8, !dbg !3345
  %335 = bitcast %struct.rtx_def* %334 to i32*, !dbg !3345
  %bf.load779 = load i32, i32* %335, align 8, !dbg !3345
  %bf.clear780 = and i32 %bf.load779, 65535, !dbg !3345
  %cmp781 = icmp eq i32 %bf.clear780, 30, !dbg !3345
  br i1 %cmp781, label %land.lhs.true783, label %if.end841, !dbg !3346

land.lhs.true783:                                 ; preds = %land.lhs.true774
  %336 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3347
  %u784 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %336, i32 0, i32 1, !dbg !3347
  %fld785 = bitcast %union.u* %u784 to [1 x %union.rtunion_def]*, !dbg !3347
  %arrayidx786 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld785, i64 0, i64 0, !dbg !3347
  %rt_rtx787 = bitcast %union.rtunion_def* %arrayidx786 to %struct.rtx_def**, !dbg !3347
  %337 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx787, align 8, !dbg !3347
  %338 = bitcast %struct.rtx_def* %337 to i32*, !dbg !3347
  %bf.load788 = load i32, i32* %338, align 8, !dbg !3347
  %bf.clear789 = and i32 %bf.load788, 65535, !dbg !3347
  %cmp790 = icmp eq i32 %bf.clear789, 99, !dbg !3348
  br i1 %cmp790, label %land.lhs.true792, label %if.end841, !dbg !3349

land.lhs.true792:                                 ; preds = %land.lhs.true783
  %339 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3350
  %u793 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %339, i32 0, i32 1, !dbg !3350
  %fld794 = bitcast %union.u* %u793 to [1 x %union.rtunion_def]*, !dbg !3350
  %arrayidx795 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld794, i64 0, i64 0, !dbg !3350
  %rt_rtx796 = bitcast %union.rtunion_def* %arrayidx795 to %struct.rtx_def**, !dbg !3350
  %340 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx796, align 8, !dbg !3350
  %u797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %340, i32 0, i32 1, !dbg !3350
  %fld798 = bitcast %union.u* %u797 to [1 x %union.rtunion_def]*, !dbg !3350
  %arrayidx799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld798, i64 0, i64 0, !dbg !3350
  %rt_rtx800 = bitcast %union.rtunion_def* %arrayidx799 to %struct.rtx_def**, !dbg !3350
  %341 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx800, align 8, !dbg !3350
  %342 = bitcast %struct.rtx_def* %341 to i32*, !dbg !3350
  %bf.load801 = load i32, i32* %342, align 8, !dbg !3350
  %bf.lshr802 = lshr i32 %bf.load801, 16, !dbg !3350
  %bf.clear803 = and i32 %bf.lshr802, 255, !dbg !3350
  %343 = load i32, i32* %outermode.addr, align 4, !dbg !3351
  %cmp804 = icmp eq i32 %bf.clear803, %343, !dbg !3352
  br i1 %cmp804, label %land.lhs.true806, label %if.end841, !dbg !3353

land.lhs.true806:                                 ; preds = %land.lhs.true792
  %344 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3354
  %u807 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %344, i32 0, i32 1, !dbg !3354
  %fld808 = bitcast %union.u* %u807 to [1 x %union.rtunion_def]*, !dbg !3354
  %arrayidx809 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld808, i64 0, i64 1, !dbg !3354
  %rt_rtx810 = bitcast %union.rtunion_def* %arrayidx809 to %struct.rtx_def**, !dbg !3354
  %345 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx810, align 8, !dbg !3354
  %u811 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %345, i32 0, i32 1, !dbg !3354
  %hwint812 = bitcast %union.u* %u811 to [1 x i64]*, !dbg !3354
  %arrayidx813 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint812, i64 0, i64 0, !dbg !3354
  %346 = load i64, i64* %arrayidx813, align 8, !dbg !3354
  %347 = load i32, i32* %outermode.addr, align 4, !dbg !3355
  %idxprom814 = zext i32 %347 to i64, !dbg !3355
  %arrayidx815 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom814, !dbg !3355
  %348 = load i8, i8* %arrayidx815, align 1, !dbg !3355
  %conv816 = zext i8 %348 to i16, !dbg !3355
  %conv817 = zext i16 %conv816 to i32, !dbg !3355
  %mul818 = mul nsw i32 %conv817, 8, !dbg !3355
  %conv819 = trunc i32 %mul818 to i16, !dbg !3355
  %conv820 = zext i16 %conv819 to i64, !dbg !3355
  %cmp821 = icmp slt i64 %346, %conv820, !dbg !3356
  br i1 %cmp821, label %land.lhs.true823, label %if.end841, !dbg !3357

land.lhs.true823:                                 ; preds = %land.lhs.true806
  %349 = load i32, i32* %outermode.addr, align 4, !dbg !3358
  %350 = load i32, i32* %innermode.addr, align 4, !dbg !3359
  %351 = load i32, i32* %byte.addr, align 4, !dbg !3360
  %call824 = call i32 @subreg_lsb_1(i32 %349, i32 %350, i32 %351), !dbg !3361
  %cmp825 = icmp eq i32 %call824, 0, !dbg !3362
  br i1 %cmp825, label %if.then827, label %if.end841, !dbg !3363

if.then827:                                       ; preds = %land.lhs.true823
  %352 = load i32, i32* %outermode.addr, align 4, !dbg !3364
  %353 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3365
  %u828 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %353, i32 0, i32 1, !dbg !3365
  %fld829 = bitcast %union.u* %u828 to [1 x %union.rtunion_def]*, !dbg !3365
  %arrayidx830 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld829, i64 0, i64 0, !dbg !3365
  %rt_rtx831 = bitcast %union.rtunion_def* %arrayidx830 to %struct.rtx_def**, !dbg !3365
  %354 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx831, align 8, !dbg !3365
  %u832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %354, i32 0, i32 1, !dbg !3365
  %fld833 = bitcast %union.u* %u832 to [1 x %union.rtunion_def]*, !dbg !3365
  %arrayidx834 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld833, i64 0, i64 0, !dbg !3365
  %rt_rtx835 = bitcast %union.rtunion_def* %arrayidx834 to %struct.rtx_def**, !dbg !3365
  %355 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx835, align 8, !dbg !3365
  %356 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3366
  %u836 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %356, i32 0, i32 1, !dbg !3366
  %fld837 = bitcast %union.u* %u836 to [1 x %union.rtunion_def]*, !dbg !3366
  %arrayidx838 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld837, i64 0, i64 1, !dbg !3366
  %rt_rtx839 = bitcast %union.rtunion_def* %arrayidx838 to %struct.rtx_def**, !dbg !3366
  %357 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx839, align 8, !dbg !3366
  %call840 = call %struct.rtx_def* @simplify_gen_binary(i32 68, i32 %352, %struct.rtx_def* %355, %struct.rtx_def* %357), !dbg !3367
  store %struct.rtx_def* %call840, %struct.rtx_def** %retval, align 8, !dbg !3368
  br label %return, !dbg !3368

if.end841:                                        ; preds = %land.lhs.true823, %land.lhs.true806, %land.lhs.true792, %land.lhs.true783, %land.lhs.true774, %land.lhs.true757, %lor.lhs.false751, %lor.lhs.false740
  %358 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3369
  %359 = bitcast %struct.rtx_def* %358 to i32*, !dbg !3369
  %bf.load842 = load i32, i32* %359, align 8, !dbg !3369
  %bf.clear843 = and i32 %bf.load842, 65535, !dbg !3369
  %cmp844 = icmp eq i32 %bf.clear843, 65, !dbg !3371
  br i1 %cmp844, label %land.lhs.true846, label %if.end951, !dbg !3372

land.lhs.true846:                                 ; preds = %if.end841
  %360 = load i32, i32* %outermode.addr, align 4, !dbg !3373
  %idxprom847 = zext i32 %360 to i64, !dbg !3373
  %arrayidx848 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom847, !dbg !3373
  %361 = load i8, i8* %arrayidx848, align 1, !dbg !3373
  %conv849 = zext i8 %361 to i32, !dbg !3373
  %cmp850 = icmp eq i32 %conv849, 2, !dbg !3373
  br i1 %cmp850, label %land.lhs.true858, label %lor.lhs.false852, !dbg !3373

lor.lhs.false852:                                 ; preds = %land.lhs.true846
  %362 = load i32, i32* %outermode.addr, align 4, !dbg !3373
  %idxprom853 = zext i32 %362 to i64, !dbg !3373
  %arrayidx854 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom853, !dbg !3373
  %363 = load i8, i8* %arrayidx854, align 1, !dbg !3373
  %conv855 = zext i8 %363 to i32, !dbg !3373
  %cmp856 = icmp eq i32 %conv855, 3, !dbg !3373
  br i1 %cmp856, label %land.lhs.true858, label %if.end951, !dbg !3374

land.lhs.true858:                                 ; preds = %lor.lhs.false852, %land.lhs.true846
  %364 = load i32, i32* %outermode.addr, align 4, !dbg !3375
  %idxprom859 = zext i32 %364 to i64, !dbg !3375
  %arrayidx860 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom859, !dbg !3375
  %365 = load i8, i8* %arrayidx860, align 1, !dbg !3375
  %conv861 = zext i8 %365 to i16, !dbg !3375
  %conv862 = zext i16 %conv861 to i32, !dbg !3375
  %mul863 = mul nsw i32 %conv862, 8, !dbg !3375
  %conv864 = trunc i32 %mul863 to i16, !dbg !3375
  %conv865 = zext i16 %conv864 to i32, !dbg !3375
  %366 = load i32, i32* %innermode.addr, align 4, !dbg !3376
  %idxprom866 = zext i32 %366 to i64, !dbg !3376
  %arrayidx867 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom866, !dbg !3376
  %367 = load i8, i8* %arrayidx867, align 1, !dbg !3376
  %conv868 = zext i8 %367 to i16, !dbg !3376
  %conv869 = zext i16 %conv868 to i32, !dbg !3376
  %mul870 = mul nsw i32 %conv869, 8, !dbg !3376
  %conv871 = trunc i32 %mul870 to i16, !dbg !3376
  %conv872 = zext i16 %conv871 to i32, !dbg !3376
  %cmp873 = icmp slt i32 %conv865, %conv872, !dbg !3377
  br i1 %cmp873, label %land.lhs.true875, label %if.end951, !dbg !3378

land.lhs.true875:                                 ; preds = %land.lhs.true858
  %368 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3379
  %u876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %368, i32 0, i32 1, !dbg !3379
  %fld877 = bitcast %union.u* %u876 to [1 x %union.rtunion_def]*, !dbg !3379
  %arrayidx878 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld877, i64 0, i64 1, !dbg !3379
  %rt_rtx879 = bitcast %union.rtunion_def* %arrayidx878 to %struct.rtx_def**, !dbg !3379
  %369 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx879, align 8, !dbg !3379
  %370 = bitcast %struct.rtx_def* %369 to i32*, !dbg !3379
  %bf.load880 = load i32, i32* %370, align 8, !dbg !3379
  %bf.clear881 = and i32 %bf.load880, 65535, !dbg !3379
  %cmp882 = icmp eq i32 %bf.clear881, 30, !dbg !3379
  br i1 %cmp882, label %land.lhs.true884, label %if.end951, !dbg !3380

land.lhs.true884:                                 ; preds = %land.lhs.true875
  %371 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3381
  %u885 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %371, i32 0, i32 1, !dbg !3381
  %fld886 = bitcast %union.u* %u885 to [1 x %union.rtunion_def]*, !dbg !3381
  %arrayidx887 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld886, i64 0, i64 0, !dbg !3381
  %rt_rtx888 = bitcast %union.rtunion_def* %arrayidx887 to %struct.rtx_def**, !dbg !3381
  %372 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx888, align 8, !dbg !3381
  %373 = bitcast %struct.rtx_def* %372 to i32*, !dbg !3381
  %bf.load889 = load i32, i32* %373, align 8, !dbg !3381
  %bf.clear890 = and i32 %bf.load889, 65535, !dbg !3381
  %cmp891 = icmp eq i32 %bf.clear890, 99, !dbg !3382
  br i1 %cmp891, label %land.lhs.true902, label %lor.lhs.false893, !dbg !3383

lor.lhs.false893:                                 ; preds = %land.lhs.true884
  %374 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3384
  %u894 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !3384
  %fld895 = bitcast %union.u* %u894 to [1 x %union.rtunion_def]*, !dbg !3384
  %arrayidx896 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld895, i64 0, i64 0, !dbg !3384
  %rt_rtx897 = bitcast %union.rtunion_def* %arrayidx896 to %struct.rtx_def**, !dbg !3384
  %375 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx897, align 8, !dbg !3384
  %376 = bitcast %struct.rtx_def* %375 to i32*, !dbg !3384
  %bf.load898 = load i32, i32* %376, align 8, !dbg !3384
  %bf.clear899 = and i32 %bf.load898, 65535, !dbg !3384
  %cmp900 = icmp eq i32 %bf.clear899, 98, !dbg !3385
  br i1 %cmp900, label %land.lhs.true902, label %if.end951, !dbg !3386

land.lhs.true902:                                 ; preds = %lor.lhs.false893, %land.lhs.true884
  %377 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3387
  %u903 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %377, i32 0, i32 1, !dbg !3387
  %fld904 = bitcast %union.u* %u903 to [1 x %union.rtunion_def]*, !dbg !3387
  %arrayidx905 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld904, i64 0, i64 0, !dbg !3387
  %rt_rtx906 = bitcast %union.rtunion_def* %arrayidx905 to %struct.rtx_def**, !dbg !3387
  %378 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx906, align 8, !dbg !3387
  %u907 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %378, i32 0, i32 1, !dbg !3387
  %fld908 = bitcast %union.u* %u907 to [1 x %union.rtunion_def]*, !dbg !3387
  %arrayidx909 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld908, i64 0, i64 0, !dbg !3387
  %rt_rtx910 = bitcast %union.rtunion_def* %arrayidx909 to %struct.rtx_def**, !dbg !3387
  %379 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx910, align 8, !dbg !3387
  %380 = bitcast %struct.rtx_def* %379 to i32*, !dbg !3387
  %bf.load911 = load i32, i32* %380, align 8, !dbg !3387
  %bf.lshr912 = lshr i32 %bf.load911, 16, !dbg !3387
  %bf.clear913 = and i32 %bf.lshr912, 255, !dbg !3387
  %381 = load i32, i32* %outermode.addr, align 4, !dbg !3388
  %cmp914 = icmp eq i32 %bf.clear913, %381, !dbg !3389
  br i1 %cmp914, label %land.lhs.true916, label %if.end951, !dbg !3390

land.lhs.true916:                                 ; preds = %land.lhs.true902
  %382 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3391
  %u917 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %382, i32 0, i32 1, !dbg !3391
  %fld918 = bitcast %union.u* %u917 to [1 x %union.rtunion_def]*, !dbg !3391
  %arrayidx919 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld918, i64 0, i64 1, !dbg !3391
  %rt_rtx920 = bitcast %union.rtunion_def* %arrayidx919 to %struct.rtx_def**, !dbg !3391
  %383 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx920, align 8, !dbg !3391
  %u921 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %383, i32 0, i32 1, !dbg !3391
  %hwint922 = bitcast %union.u* %u921 to [1 x i64]*, !dbg !3391
  %arrayidx923 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint922, i64 0, i64 0, !dbg !3391
  %384 = load i64, i64* %arrayidx923, align 8, !dbg !3391
  %385 = load i32, i32* %outermode.addr, align 4, !dbg !3392
  %idxprom924 = zext i32 %385 to i64, !dbg !3392
  %arrayidx925 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom924, !dbg !3392
  %386 = load i8, i8* %arrayidx925, align 1, !dbg !3392
  %conv926 = zext i8 %386 to i16, !dbg !3392
  %conv927 = zext i16 %conv926 to i32, !dbg !3392
  %mul928 = mul nsw i32 %conv927, 8, !dbg !3392
  %conv929 = trunc i32 %mul928 to i16, !dbg !3392
  %conv930 = zext i16 %conv929 to i64, !dbg !3392
  %cmp931 = icmp slt i64 %384, %conv930, !dbg !3393
  br i1 %cmp931, label %land.lhs.true933, label %if.end951, !dbg !3394

land.lhs.true933:                                 ; preds = %land.lhs.true916
  %387 = load i32, i32* %outermode.addr, align 4, !dbg !3395
  %388 = load i32, i32* %innermode.addr, align 4, !dbg !3396
  %389 = load i32, i32* %byte.addr, align 4, !dbg !3397
  %call934 = call i32 @subreg_lsb_1(i32 %387, i32 %388, i32 %389), !dbg !3398
  %cmp935 = icmp eq i32 %call934, 0, !dbg !3399
  br i1 %cmp935, label %if.then937, label %if.end951, !dbg !3400

if.then937:                                       ; preds = %land.lhs.true933
  %390 = load i32, i32* %outermode.addr, align 4, !dbg !3401
  %391 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3402
  %u938 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %391, i32 0, i32 1, !dbg !3402
  %fld939 = bitcast %union.u* %u938 to [1 x %union.rtunion_def]*, !dbg !3402
  %arrayidx940 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld939, i64 0, i64 0, !dbg !3402
  %rt_rtx941 = bitcast %union.rtunion_def* %arrayidx940 to %struct.rtx_def**, !dbg !3402
  %392 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx941, align 8, !dbg !3402
  %u942 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %392, i32 0, i32 1, !dbg !3402
  %fld943 = bitcast %union.u* %u942 to [1 x %union.rtunion_def]*, !dbg !3402
  %arrayidx944 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld943, i64 0, i64 0, !dbg !3402
  %rt_rtx945 = bitcast %union.rtunion_def* %arrayidx944 to %struct.rtx_def**, !dbg !3402
  %393 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx945, align 8, !dbg !3402
  %394 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3403
  %u946 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1, !dbg !3403
  %fld947 = bitcast %union.u* %u946 to [1 x %union.rtunion_def]*, !dbg !3403
  %arrayidx948 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld947, i64 0, i64 1, !dbg !3403
  %rt_rtx949 = bitcast %union.rtunion_def* %arrayidx948 to %struct.rtx_def**, !dbg !3403
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx949, align 8, !dbg !3403
  %call950 = call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %390, %struct.rtx_def* %393, %struct.rtx_def* %395), !dbg !3404
  store %struct.rtx_def* %call950, %struct.rtx_def** %retval, align 8, !dbg !3405
  br label %return, !dbg !3405

if.end951:                                        ; preds = %land.lhs.true933, %land.lhs.true916, %land.lhs.true902, %lor.lhs.false893, %land.lhs.true875, %land.lhs.true858, %lor.lhs.false852, %if.end841
  %396 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3406
  %397 = bitcast %struct.rtx_def* %396 to i32*, !dbg !3406
  %bf.load952 = load i32, i32* %397, align 8, !dbg !3406
  %bf.clear953 = and i32 %bf.load952, 65535, !dbg !3406
  %cmp954 = icmp eq i32 %bf.clear953, 68, !dbg !3408
  br i1 %cmp954, label %land.lhs.true961, label %lor.lhs.false956, !dbg !3409

lor.lhs.false956:                                 ; preds = %if.end951
  %398 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3410
  %399 = bitcast %struct.rtx_def* %398 to i32*, !dbg !3410
  %bf.load957 = load i32, i32* %399, align 8, !dbg !3410
  %bf.clear958 = and i32 %bf.load957, 65535, !dbg !3410
  %cmp959 = icmp eq i32 %bf.clear958, 67, !dbg !3411
  br i1 %cmp959, label %land.lhs.true961, label %if.end1075, !dbg !3412

land.lhs.true961:                                 ; preds = %lor.lhs.false956, %if.end951
  %400 = load i32, i32* %outermode.addr, align 4, !dbg !3413
  %idxprom962 = zext i32 %400 to i64, !dbg !3413
  %arrayidx963 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom962, !dbg !3413
  %401 = load i8, i8* %arrayidx963, align 1, !dbg !3413
  %conv964 = zext i8 %401 to i32, !dbg !3413
  %cmp965 = icmp eq i32 %conv964, 2, !dbg !3413
  br i1 %cmp965, label %land.lhs.true973, label %lor.lhs.false967, !dbg !3413

lor.lhs.false967:                                 ; preds = %land.lhs.true961
  %402 = load i32, i32* %outermode.addr, align 4, !dbg !3413
  %idxprom968 = zext i32 %402 to i64, !dbg !3413
  %arrayidx969 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom968, !dbg !3413
  %403 = load i8, i8* %arrayidx969, align 1, !dbg !3413
  %conv970 = zext i8 %403 to i32, !dbg !3413
  %cmp971 = icmp eq i32 %conv970, 3, !dbg !3413
  br i1 %cmp971, label %land.lhs.true973, label %if.end1075, !dbg !3414

land.lhs.true973:                                 ; preds = %lor.lhs.false967, %land.lhs.true961
  %404 = load i32, i32* %outermode.addr, align 4, !dbg !3415
  %idxprom974 = zext i32 %404 to i64, !dbg !3415
  %arrayidx975 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom974, !dbg !3415
  %405 = load i8, i8* %arrayidx975, align 1, !dbg !3415
  %conv976 = zext i8 %405 to i16, !dbg !3415
  %conv977 = zext i16 %conv976 to i32, !dbg !3415
  %mul978 = mul nsw i32 %conv977, 8, !dbg !3415
  %conv979 = trunc i32 %mul978 to i16, !dbg !3415
  %conv980 = zext i16 %conv979 to i32, !dbg !3415
  %cmp981 = icmp sge i32 %conv980, 32, !dbg !3416
  br i1 %cmp981, label %land.lhs.true983, label %if.end1075, !dbg !3417

land.lhs.true983:                                 ; preds = %land.lhs.true973
  %406 = load i32, i32* %innermode.addr, align 4, !dbg !3418
  %idxprom984 = zext i32 %406 to i64, !dbg !3418
  %arrayidx985 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom984, !dbg !3418
  %407 = load i8, i8* %arrayidx985, align 1, !dbg !3418
  %conv986 = zext i8 %407 to i16, !dbg !3418
  %conv987 = zext i16 %conv986 to i32, !dbg !3418
  %mul988 = mul nsw i32 %conv987, 8, !dbg !3418
  %conv989 = trunc i32 %mul988 to i16, !dbg !3418
  %conv990 = zext i16 %conv989 to i32, !dbg !3418
  %408 = load i32, i32* %outermode.addr, align 4, !dbg !3419
  %idxprom991 = zext i32 %408 to i64, !dbg !3419
  %arrayidx992 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom991, !dbg !3419
  %409 = load i8, i8* %arrayidx992, align 1, !dbg !3419
  %conv993 = zext i8 %409 to i16, !dbg !3419
  %conv994 = zext i16 %conv993 to i32, !dbg !3419
  %mul995 = mul nsw i32 %conv994, 8, !dbg !3419
  %conv996 = trunc i32 %mul995 to i16, !dbg !3419
  %conv997 = zext i16 %conv996 to i32, !dbg !3419
  %mul998 = mul nsw i32 2, %conv997, !dbg !3420
  %cmp999 = icmp sge i32 %conv990, %mul998, !dbg !3421
  br i1 %cmp999, label %land.lhs.true1001, label %if.end1075, !dbg !3422

land.lhs.true1001:                                ; preds = %land.lhs.true983
  %410 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3423
  %u1002 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %410, i32 0, i32 1, !dbg !3423
  %fld1003 = bitcast %union.u* %u1002 to [1 x %union.rtunion_def]*, !dbg !3423
  %arrayidx1004 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1003, i64 0, i64 1, !dbg !3423
  %rt_rtx1005 = bitcast %union.rtunion_def* %arrayidx1004 to %struct.rtx_def**, !dbg !3423
  %411 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1005, align 8, !dbg !3423
  %412 = bitcast %struct.rtx_def* %411 to i32*, !dbg !3423
  %bf.load1006 = load i32, i32* %412, align 8, !dbg !3423
  %bf.clear1007 = and i32 %bf.load1006, 65535, !dbg !3423
  %cmp1008 = icmp eq i32 %bf.clear1007, 30, !dbg !3423
  br i1 %cmp1008, label %land.lhs.true1010, label %if.end1075, !dbg !3424

land.lhs.true1010:                                ; preds = %land.lhs.true1001
  %413 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3425
  %u1011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1, !dbg !3425
  %fld1012 = bitcast %union.u* %u1011 to [1 x %union.rtunion_def]*, !dbg !3425
  %arrayidx1013 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1012, i64 0, i64 1, !dbg !3425
  %rt_rtx1014 = bitcast %union.rtunion_def* %arrayidx1013 to %struct.rtx_def**, !dbg !3425
  %414 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1014, align 8, !dbg !3425
  %u1015 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %414, i32 0, i32 1, !dbg !3425
  %hwint1016 = bitcast %union.u* %u1015 to [1 x i64]*, !dbg !3425
  %arrayidx1017 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1016, i64 0, i64 0, !dbg !3425
  %415 = load i64, i64* %arrayidx1017, align 8, !dbg !3425
  %416 = load i32, i32* %outermode.addr, align 4, !dbg !3426
  %idxprom1018 = zext i32 %416 to i64, !dbg !3426
  %arrayidx1019 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1018, !dbg !3426
  %417 = load i8, i8* %arrayidx1019, align 1, !dbg !3426
  %conv1020 = zext i8 %417 to i16, !dbg !3426
  %conv1021 = zext i16 %conv1020 to i32, !dbg !3426
  %mul1022 = mul nsw i32 %conv1021, 8, !dbg !3426
  %conv1023 = trunc i32 %mul1022 to i16, !dbg !3426
  %conv1024 = zext i16 %conv1023 to i32, !dbg !3426
  %sub1025 = sub nsw i32 %conv1024, 1, !dbg !3427
  %conv1026 = sext i32 %sub1025 to i64, !dbg !3428
  %and = and i64 %415, %conv1026, !dbg !3429
  %cmp1027 = icmp eq i64 %and, 0, !dbg !3430
  br i1 %cmp1027, label %land.lhs.true1029, label %if.end1075, !dbg !3431

land.lhs.true1029:                                ; preds = %land.lhs.true1010
  %418 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3432
  %u1030 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %418, i32 0, i32 1, !dbg !3432
  %fld1031 = bitcast %union.u* %u1030 to [1 x %union.rtunion_def]*, !dbg !3432
  %arrayidx1032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1031, i64 0, i64 1, !dbg !3432
  %rt_rtx1033 = bitcast %union.rtunion_def* %arrayidx1032 to %struct.rtx_def**, !dbg !3432
  %419 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1033, align 8, !dbg !3432
  %u1034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %419, i32 0, i32 1, !dbg !3432
  %hwint1035 = bitcast %union.u* %u1034 to [1 x i64]*, !dbg !3432
  %arrayidx1036 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1035, i64 0, i64 0, !dbg !3432
  %420 = load i64, i64* %arrayidx1036, align 8, !dbg !3432
  %cmp1037 = icmp sge i64 %420, 0, !dbg !3433
  br i1 %cmp1037, label %land.lhs.true1039, label %if.end1075, !dbg !3434

land.lhs.true1039:                                ; preds = %land.lhs.true1029
  %421 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3435
  %u1040 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1, !dbg !3435
  %fld1041 = bitcast %union.u* %u1040 to [1 x %union.rtunion_def]*, !dbg !3435
  %arrayidx1042 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1041, i64 0, i64 1, !dbg !3435
  %rt_rtx1043 = bitcast %union.rtunion_def* %arrayidx1042 to %struct.rtx_def**, !dbg !3435
  %422 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1043, align 8, !dbg !3435
  %u1044 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %422, i32 0, i32 1, !dbg !3435
  %hwint1045 = bitcast %union.u* %u1044 to [1 x i64]*, !dbg !3435
  %arrayidx1046 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1045, i64 0, i64 0, !dbg !3435
  %423 = load i64, i64* %arrayidx1046, align 8, !dbg !3435
  %424 = load i32, i32* %innermode.addr, align 4, !dbg !3436
  %idxprom1047 = zext i32 %424 to i64, !dbg !3436
  %arrayidx1048 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1047, !dbg !3436
  %425 = load i8, i8* %arrayidx1048, align 1, !dbg !3436
  %conv1049 = zext i8 %425 to i16, !dbg !3436
  %conv1050 = zext i16 %conv1049 to i32, !dbg !3436
  %mul1051 = mul nsw i32 %conv1050, 8, !dbg !3436
  %conv1052 = trunc i32 %mul1051 to i16, !dbg !3436
  %conv1053 = zext i16 %conv1052 to i64, !dbg !3436
  %cmp1054 = icmp slt i64 %423, %conv1053, !dbg !3437
  br i1 %cmp1054, label %land.lhs.true1056, label %if.end1075, !dbg !3438

land.lhs.true1056:                                ; preds = %land.lhs.true1039
  %426 = load i32, i32* %byte.addr, align 4, !dbg !3439
  %427 = load i32, i32* %outermode.addr, align 4, !dbg !3440
  %428 = load i32, i32* %innermode.addr, align 4, !dbg !3441
  %call1057 = call i32 @subreg_lowpart_offset(i32 %427, i32 %428), !dbg !3442
  %cmp1058 = icmp eq i32 %426, %call1057, !dbg !3443
  br i1 %cmp1058, label %if.then1060, label %if.end1075, !dbg !3444

if.then1060:                                      ; preds = %land.lhs.true1056
  call void @llvm.dbg.declare(metadata i32* %shifted_bytes, metadata !3445, metadata !DIExpression()), !dbg !3447
  %429 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3448
  %u1061 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %429, i32 0, i32 1, !dbg !3448
  %fld1062 = bitcast %union.u* %u1061 to [1 x %union.rtunion_def]*, !dbg !3448
  %arrayidx1063 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1062, i64 0, i64 1, !dbg !3448
  %rt_rtx1064 = bitcast %union.rtunion_def* %arrayidx1063 to %struct.rtx_def**, !dbg !3448
  %430 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1064, align 8, !dbg !3448
  %u1065 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %430, i32 0, i32 1, !dbg !3448
  %hwint1066 = bitcast %union.u* %u1065 to [1 x i64]*, !dbg !3448
  %arrayidx1067 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1066, i64 0, i64 0, !dbg !3448
  %431 = load i64, i64* %arrayidx1067, align 8, !dbg !3448
  %div = sdiv i64 %431, 8, !dbg !3449
  %conv1068 = trunc i64 %div to i32, !dbg !3448
  store i32 %conv1068, i32* %shifted_bytes, align 4, !dbg !3447
  %432 = load i32, i32* %outermode.addr, align 4, !dbg !3450
  %433 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3451
  %u1069 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %433, i32 0, i32 1, !dbg !3451
  %fld1070 = bitcast %union.u* %u1069 to [1 x %union.rtunion_def]*, !dbg !3451
  %arrayidx1071 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1070, i64 0, i64 0, !dbg !3451
  %rt_rtx1072 = bitcast %union.rtunion_def* %arrayidx1071 to %struct.rtx_def**, !dbg !3451
  %434 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1072, align 8, !dbg !3451
  %435 = load i32, i32* %innermode.addr, align 4, !dbg !3452
  %436 = load i32, i32* %byte.addr, align 4, !dbg !3453
  %437 = load i32, i32* %shifted_bytes, align 4, !dbg !3454
  %add1073 = add i32 %436, %437, !dbg !3455
  %call1074 = call %struct.rtx_def* @simplify_gen_subreg(i32 %432, %struct.rtx_def* %434, i32 %435, i32 %add1073), !dbg !3456
  store %struct.rtx_def* %call1074, %struct.rtx_def** %retval, align 8, !dbg !3457
  br label %return, !dbg !3457

if.end1075:                                       ; preds = %land.lhs.true1056, %land.lhs.true1039, %land.lhs.true1029, %land.lhs.true1010, %land.lhs.true1001, %land.lhs.true983, %land.lhs.true973, %lor.lhs.false967, %lor.lhs.false956
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !3458
  br label %return, !dbg !3458

return:                                           ; preds = %if.end1075, %if.then1060, %if.then937, %if.then827, %if.then721, %if.then625, %if.then594, %if.then575, %if.then553, %if.end512, %if.then510, %if.then503, %if.then496, %if.then424, %if.end388, %if.then321, %if.end300, %if.end299, %if.then199, %if.else190, %if.then175, %if.then160, %if.then89, %if.then63, %if.then
  %438 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3459
  ret %struct.rtx_def* %438, !dbg !3459
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @delegitimize_mem_from_attrs(%struct.rtx_def* %x) #0 !dbg !3460 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %mode = alloca i32, align 4
  %offset50 = alloca i64, align 8
  %bitsize = alloca i64, align 8
  %bitpos = alloca i64, align 8
  %toffset = alloca %union.tree_node*, align 8
  %unsignedp = alloca i32, align 4
  %volatilep = alloca i32, align 4
  %newx = alloca %struct.rtx_def*, align 8
  %n = alloca %struct.rtx_def*, align 8
  %o = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3461, metadata !DIExpression()), !dbg !3462
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3463
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3463
  %bf.load = load i32, i32* %1, align 8, !dbg !3463
  %bf.clear = and i32 %bf.load, 65535, !dbg !3463
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !3463
  br i1 %cmp, label %land.lhs.true, label %if.end279, !dbg !3465

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3466
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !3466
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3466
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3466
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !3466
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !3466
  %cmp1 = icmp eq %struct.mem_attrs* %3, null, !dbg !3466
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !3467

cond.true:                                        ; preds = %land.lhs.true
  br i1 false, label %land.lhs.true6, label %if.end279, !dbg !3466

cond.false:                                       ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3466
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !3466
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !3466
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !3466
  %rt_mem5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.mem_attrs**, !dbg !3466
  %5 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem5, align 8, !dbg !3466
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %5, i32 0, i32 0, !dbg !3466
  %6 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !3466
  %tobool = icmp ne %union.tree_node* %6, null, !dbg !3466
  br i1 %tobool, label %land.lhs.true6, label %if.end279, !dbg !3467

land.lhs.true6:                                   ; preds = %cond.false, %cond.true
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3468
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !3468
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !3468
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !3468
  %rt_mem10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.mem_attrs**, !dbg !3468
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem10, align 8, !dbg !3468
  %cmp11 = icmp eq %struct.mem_attrs* %8, null, !dbg !3468
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !3469

cond.true12:                                      ; preds = %land.lhs.true6
  br i1 false, label %lor.lhs.false, label %if.then, !dbg !3468

cond.false13:                                     ; preds = %land.lhs.true6
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3468
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !3468
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !3468
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 1, !dbg !3468
  %rt_mem17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.mem_attrs**, !dbg !3468
  %10 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem17, align 8, !dbg !3468
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %10, i32 0, i32 1, !dbg !3468
  %11 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !3468
  %tobool18 = icmp ne %struct.rtx_def* %11, null, !dbg !3468
  br i1 %tobool18, label %lor.lhs.false, label %if.then, !dbg !3469

lor.lhs.false:                                    ; preds = %cond.false13, %cond.true12
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3470
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !3470
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !3470
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 1, !dbg !3470
  %rt_mem22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.mem_attrs**, !dbg !3470
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !3470
  %cmp23 = icmp eq %struct.mem_attrs* %13, null, !dbg !3470
  br i1 %cmp23, label %cond.true24, label %cond.false25, !dbg !3470

cond.true24:                                      ; preds = %lor.lhs.false
  br label %cond.end, !dbg !3470

cond.false25:                                     ; preds = %lor.lhs.false
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3470
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3470
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !3470
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !3470
  %rt_mem29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.mem_attrs**, !dbg !3470
  %15 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem29, align 8, !dbg !3470
  %offset30 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i32 0, i32 1, !dbg !3470
  %16 = load %struct.rtx_def*, %struct.rtx_def** %offset30, align 8, !dbg !3470
  br label %cond.end, !dbg !3470

cond.end:                                         ; preds = %cond.false25, %cond.true24
  %cond = phi %struct.rtx_def* [ null, %cond.true24 ], [ %16, %cond.false25 ], !dbg !3470
  %17 = bitcast %struct.rtx_def* %cond to i32*, !dbg !3470
  %bf.load31 = load i32, i32* %17, align 8, !dbg !3470
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !3470
  %cmp33 = icmp eq i32 %bf.clear32, 30, !dbg !3471
  br i1 %cmp33, label %if.then, label %if.end279, !dbg !3472

if.then:                                          ; preds = %cond.end, %cond.false13, %cond.true12
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !3473, metadata !DIExpression()), !dbg !3475
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3476
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3476
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !3476
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 1, !dbg !3476
  %rt_mem37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.mem_attrs**, !dbg !3476
  %19 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem37, align 8, !dbg !3476
  %cmp38 = icmp eq %struct.mem_attrs* %19, null, !dbg !3476
  br i1 %cmp38, label %cond.true39, label %cond.false40, !dbg !3476

cond.true39:                                      ; preds = %if.then
  br label %cond.end46, !dbg !3476

cond.false40:                                     ; preds = %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3476
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !3476
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !3476
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 1, !dbg !3476
  %rt_mem44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.mem_attrs**, !dbg !3476
  %21 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem44, align 8, !dbg !3476
  %expr45 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %21, i32 0, i32 0, !dbg !3476
  %22 = load %union.tree_node*, %union.tree_node** %expr45, align 8, !dbg !3476
  br label %cond.end46, !dbg !3476

cond.end46:                                       ; preds = %cond.false40, %cond.true39
  %cond47 = phi %union.tree_node* [ null, %cond.true39 ], [ %22, %cond.false40 ], !dbg !3476
  store %union.tree_node* %cond47, %union.tree_node** %decl, align 8, !dbg !3475
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !3477, metadata !DIExpression()), !dbg !3478
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3479
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !3479
  %bf.load48 = load i32, i32* %24, align 8, !dbg !3479
  %bf.lshr = lshr i32 %bf.load48, 16, !dbg !3479
  %bf.clear49 = and i32 %bf.lshr, 255, !dbg !3479
  store i32 %bf.clear49, i32* %mode, align 4, !dbg !3478
  call void @llvm.dbg.declare(metadata i64* %offset50, metadata !3480, metadata !DIExpression()), !dbg !3481
  store i64 0, i64* %offset50, align 8, !dbg !3481
  %25 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3482
  %base = bitcast %union.tree_node* %25 to %struct.tree_base*, !dbg !3482
  %26 = bitcast %struct.tree_base* %base to i64*, !dbg !3482
  %bf.load51 = load i64, i64* %26, align 8, !dbg !3482
  %bf.clear52 = and i64 %bf.load51, 65535, !dbg !3482
  %bf.cast = trunc i64 %bf.clear52 to i32, !dbg !3482
  switch i32 %bf.cast, label %sw.default [
    i32 32, label %sw.bb
    i32 45, label %sw.bb53
    i32 46, label %sw.bb53
    i32 41, label %sw.bb53
    i32 42, label %sw.bb53
    i32 43, label %sw.bb53
    i32 44, label %sw.bb53
    i32 118, label %sw.bb53
  ], !dbg !3483

sw.default:                                       ; preds = %cond.end46
  store %union.tree_node* null, %union.tree_node** %decl, align 8, !dbg !3484
  br label %sw.epilog, !dbg !3486

sw.bb:                                            ; preds = %cond.end46
  br label %sw.epilog, !dbg !3487

sw.bb53:                                          ; preds = %cond.end46, %cond.end46, %cond.end46, %cond.end46, %cond.end46, %cond.end46, %cond.end46
  call void @llvm.dbg.declare(metadata i64* %bitsize, metadata !3488, metadata !DIExpression()), !dbg !3490
  call void @llvm.dbg.declare(metadata i64* %bitpos, metadata !3491, metadata !DIExpression()), !dbg !3492
  call void @llvm.dbg.declare(metadata %union.tree_node** %toffset, metadata !3493, metadata !DIExpression()), !dbg !3494
  call void @llvm.dbg.declare(metadata i32* %unsignedp, metadata !3495, metadata !DIExpression()), !dbg !3496
  store i32 0, i32* %unsignedp, align 4, !dbg !3496
  call void @llvm.dbg.declare(metadata i32* %volatilep, metadata !3497, metadata !DIExpression()), !dbg !3498
  store i32 0, i32* %volatilep, align 4, !dbg !3498
  %27 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3499
  %call = call %union.tree_node* @get_inner_reference(%union.tree_node* %27, i64* %bitsize, i64* %bitpos, %union.tree_node** %toffset, i32* %mode, i32* %unsignedp, i32* %volatilep, i8 zeroext 0), !dbg !3500
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !3501
  %28 = load i64, i64* %bitsize, align 8, !dbg !3502
  %29 = load i32, i32* %mode, align 4, !dbg !3504
  %idxprom = zext i32 %29 to i64, !dbg !3504
  %arrayidx54 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3504
  %30 = load i8, i8* %arrayidx54, align 1, !dbg !3504
  %conv = zext i8 %30 to i16, !dbg !3504
  %conv55 = zext i16 %conv to i32, !dbg !3504
  %mul = mul nsw i32 %conv55, 8, !dbg !3504
  %conv56 = trunc i32 %mul to i16, !dbg !3504
  %conv57 = zext i16 %conv56 to i64, !dbg !3504
  %cmp58 = icmp ne i64 %28, %conv57, !dbg !3505
  br i1 %cmp58, label %if.then67, label %lor.lhs.false60, !dbg !3506

lor.lhs.false60:                                  ; preds = %sw.bb53
  %31 = load i64, i64* %bitpos, align 8, !dbg !3507
  %rem = srem i64 %31, 8, !dbg !3508
  %tobool61 = icmp ne i64 %rem, 0, !dbg !3508
  br i1 %tobool61, label %if.then67, label %lor.lhs.false62, !dbg !3509

lor.lhs.false62:                                  ; preds = %lor.lhs.false60
  %32 = load %union.tree_node*, %union.tree_node** %toffset, align 8, !dbg !3510
  %tobool63 = icmp ne %union.tree_node* %32, null, !dbg !3510
  br i1 %tobool63, label %land.lhs.true64, label %if.else, !dbg !3511

land.lhs.true64:                                  ; preds = %lor.lhs.false62
  %33 = load %union.tree_node*, %union.tree_node** %toffset, align 8, !dbg !3512
  %call65 = call i32 @host_integerp(%union.tree_node* %33, i32 0), !dbg !3513
  %tobool66 = icmp ne i32 %call65, 0, !dbg !3513
  br i1 %tobool66, label %if.else, label %if.then67, !dbg !3514

if.then67:                                        ; preds = %land.lhs.true64, %lor.lhs.false60, %sw.bb53
  store %union.tree_node* null, %union.tree_node** %decl, align 8, !dbg !3515
  br label %if.end72, !dbg !3516

if.else:                                          ; preds = %land.lhs.true64, %lor.lhs.false62
  %34 = load i64, i64* %bitpos, align 8, !dbg !3517
  %div = sdiv i64 %34, 8, !dbg !3519
  %35 = load i64, i64* %offset50, align 8, !dbg !3520
  %add = add nsw i64 %35, %div, !dbg !3520
  store i64 %add, i64* %offset50, align 8, !dbg !3520
  %36 = load %union.tree_node*, %union.tree_node** %toffset, align 8, !dbg !3521
  %tobool68 = icmp ne %union.tree_node* %36, null, !dbg !3521
  br i1 %tobool68, label %if.then69, label %if.end, !dbg !3523

if.then69:                                        ; preds = %if.else
  %37 = load %union.tree_node*, %union.tree_node** %toffset, align 8, !dbg !3524
  %int_cst = bitcast %union.tree_node* %37 to %struct.tree_int_cst*, !dbg !3524
  %int_cst70 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 1, !dbg !3524
  %low = getelementptr inbounds %struct.double_int, %struct.double_int* %int_cst70, i32 0, i32 0, !dbg !3524
  %38 = load i64, i64* %low, align 8, !dbg !3524
  %39 = load i64, i64* %offset50, align 8, !dbg !3525
  %add71 = add i64 %39, %38, !dbg !3525
  store i64 %add71, i64* %offset50, align 8, !dbg !3525
  br label %if.end, !dbg !3526

if.end:                                           ; preds = %if.then69, %if.else
  br label %if.end72

if.end72:                                         ; preds = %if.end, %if.then67
  br label %sw.epilog, !dbg !3527

sw.epilog:                                        ; preds = %if.end72, %sw.bb, %sw.default
  %40 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3528
  %tobool73 = icmp ne %union.tree_node* %40, null, !dbg !3528
  br i1 %tobool73, label %land.lhs.true74, label %if.end278, !dbg !3530

land.lhs.true74:                                  ; preds = %sw.epilog
  %41 = load i32, i32* %mode, align 4, !dbg !3531
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3532
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !3532
  %bf.load75 = load i32, i32* %43, align 8, !dbg !3532
  %bf.lshr76 = lshr i32 %bf.load75, 16, !dbg !3532
  %bf.clear77 = and i32 %bf.lshr76, 255, !dbg !3532
  %cmp78 = icmp eq i32 %41, %bf.clear77, !dbg !3533
  br i1 %cmp78, label %land.lhs.true80, label %if.end278, !dbg !3534

land.lhs.true80:                                  ; preds = %land.lhs.true74
  %44 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3535
  %base81 = bitcast %union.tree_node* %44 to %struct.tree_base*, !dbg !3535
  %45 = bitcast %struct.tree_base* %base81 to i64*, !dbg !3535
  %bf.load82 = load i64, i64* %45, align 8, !dbg !3535
  %bf.clear83 = and i64 %bf.load82, 65535, !dbg !3535
  %bf.cast84 = trunc i64 %bf.clear83 to i32, !dbg !3535
  %cmp85 = icmp eq i32 %bf.cast84, 32, !dbg !3536
  br i1 %cmp85, label %land.lhs.true87, label %if.end278, !dbg !3537

land.lhs.true87:                                  ; preds = %land.lhs.true80
  %46 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3538
  %base88 = bitcast %union.tree_node* %46 to %struct.tree_base*, !dbg !3538
  %47 = bitcast %struct.tree_base* %base88 to i64*, !dbg !3538
  %bf.load89 = load i64, i64* %47, align 8, !dbg !3538
  %bf.lshr90 = lshr i64 %bf.load89, 26, !dbg !3538
  %bf.clear91 = and i64 %bf.lshr90, 1, !dbg !3538
  %bf.cast92 = trunc i64 %bf.clear91 to i32, !dbg !3538
  %tobool93 = icmp ne i32 %bf.cast92, 0, !dbg !3538
  br i1 %tobool93, label %land.lhs.true100, label %lor.lhs.false94, !dbg !3539

lor.lhs.false94:                                  ; preds = %land.lhs.true87
  %48 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3540
  %decl_with_vis = bitcast %union.tree_node* %48 to %struct.tree_decl_with_vis*, !dbg !3540
  %tls_model = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %decl_with_vis, i32 0, i32 4, !dbg !3540
  %49 = bitcast i24* %tls_model to i32*, !dbg !3540
  %bf.load95 = load i32, i32* %49, align 8, !dbg !3540
  %bf.lshr96 = lshr i32 %bf.load95, 13, !dbg !3540
  %bf.clear97 = and i32 %bf.lshr96, 7, !dbg !3540
  %cmp98 = icmp sge i32 %bf.clear97, 2, !dbg !3540
  br i1 %cmp98, label %land.lhs.true100, label %if.end278, !dbg !3541

land.lhs.true100:                                 ; preds = %lor.lhs.false94, %land.lhs.true87
  %50 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3542
  %base101 = bitcast %union.tree_node* %50 to %struct.tree_base*, !dbg !3542
  %51 = bitcast %struct.tree_base* %base101 to i64*, !dbg !3542
  %bf.load102 = load i64, i64* %51, align 8, !dbg !3542
  %bf.clear103 = and i64 %bf.load102, 65535, !dbg !3542
  %bf.cast104 = trunc i64 %bf.clear103 to i32, !dbg !3542
  %idxprom105 = zext i32 %bf.cast104 to i64, !dbg !3542
  %arrayidx106 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom105, !dbg !3542
  %arrayidx107 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx106, i64 0, i64 11, !dbg !3542
  %52 = load i8, i8* %arrayidx107, align 1, !dbg !3542
  %conv108 = zext i8 %52 to i32, !dbg !3542
  %tobool109 = icmp ne i32 %conv108, 0, !dbg !3542
  br i1 %tobool109, label %land.lhs.true110, label %if.end278, !dbg !3542

land.lhs.true110:                                 ; preds = %land.lhs.true100
  %53 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3542
  %decl_with_rtl = bitcast %union.tree_node* %53 to %struct.tree_decl_with_rtl*, !dbg !3542
  %rtl = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl, i32 0, i32 1, !dbg !3542
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !3542
  %cmp111 = icmp ne %struct.rtx_def* %54, null, !dbg !3542
  br i1 %cmp111, label %land.lhs.true113, label %if.end278, !dbg !3543

land.lhs.true113:                                 ; preds = %land.lhs.true110
  %55 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3544
  %decl_with_rtl114 = bitcast %union.tree_node* %55 to %struct.tree_decl_with_rtl*, !dbg !3544
  %rtl115 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl114, i32 0, i32 1, !dbg !3544
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rtl115, align 8, !dbg !3544
  %tobool116 = icmp ne %struct.rtx_def* %56, null, !dbg !3544
  br i1 %tobool116, label %cond.true117, label %cond.false120, !dbg !3544

cond.true117:                                     ; preds = %land.lhs.true113
  %57 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3544
  %decl_with_rtl118 = bitcast %union.tree_node* %57 to %struct.tree_decl_with_rtl*, !dbg !3544
  %rtl119 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl118, i32 0, i32 1, !dbg !3544
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rtl119, align 8, !dbg !3544
  br label %cond.end123, !dbg !3544

cond.false120:                                    ; preds = %land.lhs.true113
  %59 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3544
  call void @make_decl_rtl(%union.tree_node* %59), !dbg !3544
  %60 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3544
  %decl_with_rtl121 = bitcast %union.tree_node* %60 to %struct.tree_decl_with_rtl*, !dbg !3544
  %rtl122 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl121, i32 0, i32 1, !dbg !3544
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rtl122, align 8, !dbg !3544
  br label %cond.end123, !dbg !3544

cond.end123:                                      ; preds = %cond.false120, %cond.true117
  %cond124 = phi %struct.rtx_def* [ %58, %cond.true117 ], [ %61, %cond.false120 ], !dbg !3544
  %62 = bitcast %struct.rtx_def* %cond124 to i32*, !dbg !3544
  %bf.load125 = load i32, i32* %62, align 8, !dbg !3544
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !3544
  %cmp127 = icmp eq i32 %bf.clear126, 43, !dbg !3544
  br i1 %cmp127, label %if.then129, label %if.end278, !dbg !3545

if.then129:                                       ; preds = %cond.end123
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newx, metadata !3546, metadata !DIExpression()), !dbg !3548
  %63 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3549
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !3549
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !3549
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 1, !dbg !3549
  %rt_mem133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.mem_attrs**, !dbg !3549
  %64 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem133, align 8, !dbg !3549
  %cmp134 = icmp eq %struct.mem_attrs* %64, null, !dbg !3549
  br i1 %cmp134, label %cond.true136, label %cond.false137, !dbg !3551

cond.true136:                                     ; preds = %if.then129
  br i1 false, label %if.then144, label %if.end163, !dbg !3549

cond.false137:                                    ; preds = %if.then129
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3549
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !3549
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !3549
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 1, !dbg !3549
  %rt_mem141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.mem_attrs**, !dbg !3549
  %66 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem141, align 8, !dbg !3549
  %offset142 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %66, i32 0, i32 1, !dbg !3549
  %67 = load %struct.rtx_def*, %struct.rtx_def** %offset142, align 8, !dbg !3549
  %tobool143 = icmp ne %struct.rtx_def* %67, null, !dbg !3549
  br i1 %tobool143, label %if.then144, label %if.end163, !dbg !3551

if.then144:                                       ; preds = %cond.false137, %cond.true136
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3552
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !3552
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !3552
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 1, !dbg !3552
  %rt_mem148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.mem_attrs**, !dbg !3552
  %69 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem148, align 8, !dbg !3552
  %cmp149 = icmp eq %struct.mem_attrs* %69, null, !dbg !3552
  br i1 %cmp149, label %cond.true151, label %cond.false152, !dbg !3552

cond.true151:                                     ; preds = %if.then144
  br label %cond.end158, !dbg !3552

cond.false152:                                    ; preds = %if.then144
  %70 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3552
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !3552
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !3552
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 1, !dbg !3552
  %rt_mem156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.mem_attrs**, !dbg !3552
  %71 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem156, align 8, !dbg !3552
  %offset157 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %71, i32 0, i32 1, !dbg !3552
  %72 = load %struct.rtx_def*, %struct.rtx_def** %offset157, align 8, !dbg !3552
  br label %cond.end158, !dbg !3552

cond.end158:                                      ; preds = %cond.false152, %cond.true151
  %cond159 = phi %struct.rtx_def* [ null, %cond.true151 ], [ %72, %cond.false152 ], !dbg !3552
  %u160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond159, i32 0, i32 1, !dbg !3552
  %hwint = bitcast %union.u* %u160 to [1 x i64]*, !dbg !3552
  %arrayidx161 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !3552
  %73 = load i64, i64* %arrayidx161, align 8, !dbg !3552
  %74 = load i64, i64* %offset50, align 8, !dbg !3553
  %add162 = add nsw i64 %74, %73, !dbg !3553
  store i64 %add162, i64* %offset50, align 8, !dbg !3553
  br label %if.end163, !dbg !3554

if.end163:                                        ; preds = %cond.end158, %cond.false137, %cond.true136
  %75 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3555
  %decl_with_rtl164 = bitcast %union.tree_node* %75 to %struct.tree_decl_with_rtl*, !dbg !3555
  %rtl165 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl164, i32 0, i32 1, !dbg !3555
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rtl165, align 8, !dbg !3555
  %tobool166 = icmp ne %struct.rtx_def* %76, null, !dbg !3555
  br i1 %tobool166, label %cond.true167, label %cond.false170, !dbg !3555

cond.true167:                                     ; preds = %if.end163
  %77 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3555
  %decl_with_rtl168 = bitcast %union.tree_node* %77 to %struct.tree_decl_with_rtl*, !dbg !3555
  %rtl169 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl168, i32 0, i32 1, !dbg !3555
  %78 = load %struct.rtx_def*, %struct.rtx_def** %rtl169, align 8, !dbg !3555
  br label %cond.end173, !dbg !3555

cond.false170:                                    ; preds = %if.end163
  %79 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3555
  call void @make_decl_rtl(%union.tree_node* %79), !dbg !3555
  %80 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3555
  %decl_with_rtl171 = bitcast %union.tree_node* %80 to %struct.tree_decl_with_rtl*, !dbg !3555
  %rtl172 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl171, i32 0, i32 1, !dbg !3555
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rtl172, align 8, !dbg !3555
  br label %cond.end173, !dbg !3555

cond.end173:                                      ; preds = %cond.false170, %cond.true167
  %cond174 = phi %struct.rtx_def* [ %78, %cond.true167 ], [ %81, %cond.false170 ], !dbg !3555
  store %struct.rtx_def* %cond174, %struct.rtx_def** %newx, align 8, !dbg !3556
  %82 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3557
  %83 = bitcast %struct.rtx_def* %82 to i32*, !dbg !3557
  %bf.load175 = load i32, i32* %83, align 8, !dbg !3557
  %bf.clear176 = and i32 %bf.load175, 65535, !dbg !3557
  %cmp177 = icmp eq i32 %bf.clear176, 43, !dbg !3557
  br i1 %cmp177, label %if.then179, label %if.else263, !dbg !3559

if.then179:                                       ; preds = %cond.end173
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %n, metadata !3560, metadata !DIExpression()), !dbg !3562
  %84 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3563
  %u180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !3563
  %fld181 = bitcast %union.u* %u180 to [1 x %union.rtunion_def]*, !dbg !3563
  %arrayidx182 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i64 0, i64 0, !dbg !3563
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx182 to %struct.rtx_def**, !dbg !3563
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3563
  store %struct.rtx_def* %85, %struct.rtx_def** %n, align 8, !dbg !3562
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %o, metadata !3564, metadata !DIExpression()), !dbg !3565
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3566
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !3566
  %fld184 = bitcast %union.u* %u183 to [1 x %union.rtunion_def]*, !dbg !3566
  %arrayidx185 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i64 0, i64 0, !dbg !3566
  %rt_rtx186 = bitcast %union.rtunion_def* %arrayidx185 to %struct.rtx_def**, !dbg !3566
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx186, align 8, !dbg !3566
  store %struct.rtx_def* %87, %struct.rtx_def** %o, align 8, !dbg !3565
  %88 = load i64, i64* %offset50, align 8, !dbg !3567
  %cmp187 = icmp eq i64 %88, 0, !dbg !3569
  br i1 %cmp187, label %land.lhs.true257, label %lor.lhs.false189, !dbg !3570

lor.lhs.false189:                                 ; preds = %if.then179
  %89 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3571
  %90 = bitcast %struct.rtx_def* %89 to i32*, !dbg !3571
  %bf.load190 = load i32, i32* %90, align 8, !dbg !3571
  %bf.clear191 = and i32 %bf.load190, 65535, !dbg !3571
  %cmp192 = icmp eq i32 %bf.clear191, 49, !dbg !3572
  br i1 %cmp192, label %land.lhs.true194, label %if.then260, !dbg !3573

land.lhs.true194:                                 ; preds = %lor.lhs.false189
  %91 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3574
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !3574
  %fld196 = bitcast %union.u* %u195 to [1 x %union.rtunion_def]*, !dbg !3574
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i64 0, i64 1, !dbg !3574
  %rt_rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**, !dbg !3574
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !3574
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !3574
  %bf.load199 = load i32, i32* %93, align 8, !dbg !3574
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !3574
  %cmp201 = icmp eq i32 %bf.clear200, 30, !dbg !3575
  br i1 %cmp201, label %land.lhs.true203, label %if.then260, !dbg !3576

land.lhs.true203:                                 ; preds = %land.lhs.true194
  %94 = load i64, i64* %offset50, align 8, !dbg !3577
  %95 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3578
  %u204 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !3578
  %fld205 = bitcast %union.u* %u204 to [1 x %union.rtunion_def]*, !dbg !3578
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld205, i64 0, i64 1, !dbg !3578
  %rt_rtx207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtx_def**, !dbg !3578
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx207, align 8, !dbg !3578
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !3578
  %hwint209 = bitcast %union.u* %u208 to [1 x i64]*, !dbg !3578
  %arrayidx210 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint209, i64 0, i64 0, !dbg !3578
  %97 = load i64, i64* %arrayidx210, align 8, !dbg !3578
  %cmp211 = icmp eq i64 %94, %97, !dbg !3579
  br i1 %cmp211, label %land.lhs.true251, label %lor.lhs.false213, !dbg !3580

lor.lhs.false213:                                 ; preds = %land.lhs.true203
  %98 = load %struct.rtx_def*, %struct.rtx_def** %n, align 8, !dbg !3581
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !3581
  %bf.load214 = load i32, i32* %99, align 8, !dbg !3581
  %bf.clear215 = and i32 %bf.load214, 65535, !dbg !3581
  %cmp216 = icmp eq i32 %bf.clear215, 49, !dbg !3582
  br i1 %cmp216, label %land.lhs.true218, label %if.then260, !dbg !3583

land.lhs.true218:                                 ; preds = %lor.lhs.false213
  %100 = load %struct.rtx_def*, %struct.rtx_def** %n, align 8, !dbg !3584
  %u219 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !3584
  %fld220 = bitcast %union.u* %u219 to [1 x %union.rtunion_def]*, !dbg !3584
  %arrayidx221 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld220, i64 0, i64 1, !dbg !3584
  %rt_rtx222 = bitcast %union.rtunion_def* %arrayidx221 to %struct.rtx_def**, !dbg !3584
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx222, align 8, !dbg !3584
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !3584
  %bf.load223 = load i32, i32* %102, align 8, !dbg !3584
  %bf.clear224 = and i32 %bf.load223, 65535, !dbg !3584
  %cmp225 = icmp eq i32 %bf.clear224, 30, !dbg !3585
  br i1 %cmp225, label %land.lhs.true227, label %if.then260, !dbg !3586

land.lhs.true227:                                 ; preds = %land.lhs.true218
  %103 = load %struct.rtx_def*, %struct.rtx_def** %n, align 8, !dbg !3587
  %u228 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !3587
  %fld229 = bitcast %union.u* %u228 to [1 x %union.rtunion_def]*, !dbg !3587
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld229, i64 0, i64 1, !dbg !3587
  %rt_rtx231 = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtx_def**, !dbg !3587
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx231, align 8, !dbg !3587
  %u232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !3587
  %hwint233 = bitcast %union.u* %u232 to [1 x i64]*, !dbg !3587
  %arrayidx234 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint233, i64 0, i64 0, !dbg !3587
  %105 = load i64, i64* %arrayidx234, align 8, !dbg !3587
  %106 = load i64, i64* %offset50, align 8, !dbg !3588
  %add235 = add nsw i64 %105, %106, !dbg !3589
  %107 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3590
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !3590
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !3590
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 1, !dbg !3590
  %rt_rtx239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtx_def**, !dbg !3590
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx239, align 8, !dbg !3590
  %u240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !3590
  %hwint241 = bitcast %union.u* %u240 to [1 x i64]*, !dbg !3590
  %arrayidx242 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint241, i64 0, i64 0, !dbg !3590
  %109 = load i64, i64* %arrayidx242, align 8, !dbg !3590
  %cmp243 = icmp eq i64 %add235, %109, !dbg !3591
  br i1 %cmp243, label %land.lhs.true245, label %if.then260, !dbg !3592

land.lhs.true245:                                 ; preds = %land.lhs.true227
  %110 = load %struct.rtx_def*, %struct.rtx_def** %n, align 8, !dbg !3593
  %u246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !3593
  %fld247 = bitcast %union.u* %u246 to [1 x %union.rtunion_def]*, !dbg !3593
  %arrayidx248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld247, i64 0, i64 0, !dbg !3593
  %rt_rtx249 = bitcast %union.rtunion_def* %arrayidx248 to %struct.rtx_def**, !dbg !3593
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx249, align 8, !dbg !3593
  store %struct.rtx_def* %111, %struct.rtx_def** %n, align 8, !dbg !3594
  %tobool250 = icmp ne %struct.rtx_def* %111, null, !dbg !3594
  br i1 %tobool250, label %land.lhs.true251, label %if.then260, !dbg !3595

land.lhs.true251:                                 ; preds = %land.lhs.true245, %land.lhs.true203
  %112 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3596
  %u252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !3596
  %fld253 = bitcast %union.u* %u252 to [1 x %union.rtunion_def]*, !dbg !3596
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i64 0, i64 0, !dbg !3596
  %rt_rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**, !dbg !3596
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx255, align 8, !dbg !3596
  store %struct.rtx_def* %113, %struct.rtx_def** %o, align 8, !dbg !3597
  %tobool256 = icmp ne %struct.rtx_def* %113, null, !dbg !3597
  br i1 %tobool256, label %land.lhs.true257, label %if.then260, !dbg !3598

land.lhs.true257:                                 ; preds = %land.lhs.true251, %if.then179
  %114 = load %struct.rtx_def*, %struct.rtx_def** %o, align 8, !dbg !3599
  %115 = load %struct.rtx_def*, %struct.rtx_def** %n, align 8, !dbg !3600
  %call258 = call i32 @rtx_equal_p(%struct.rtx_def* %114, %struct.rtx_def* %115), !dbg !3601
  %tobool259 = icmp ne i32 %call258, 0, !dbg !3601
  br i1 %tobool259, label %if.end262, label %if.then260, !dbg !3602

if.then260:                                       ; preds = %land.lhs.true257, %land.lhs.true251, %land.lhs.true245, %land.lhs.true227, %land.lhs.true218, %lor.lhs.false213, %land.lhs.true194, %lor.lhs.false189
  %116 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3603
  %117 = load i32, i32* %mode, align 4, !dbg !3603
  %118 = load i64, i64* %offset50, align 8, !dbg !3603
  %call261 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %116, i32 %117, i64 %118, i32 0, i32 1), !dbg !3603
  store %struct.rtx_def* %call261, %struct.rtx_def** %x.addr, align 8, !dbg !3604
  br label %if.end262, !dbg !3605

if.end262:                                        ; preds = %if.then260, %land.lhs.true257
  br label %if.end277, !dbg !3606

if.else263:                                       ; preds = %cond.end173
  %119 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3607
  %120 = bitcast %struct.rtx_def* %119 to i32*, !dbg !3607
  %bf.load264 = load i32, i32* %120, align 8, !dbg !3607
  %bf.lshr265 = lshr i32 %bf.load264, 16, !dbg !3607
  %bf.clear266 = and i32 %bf.lshr265, 255, !dbg !3607
  %121 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3609
  %122 = bitcast %struct.rtx_def* %121 to i32*, !dbg !3609
  %bf.load267 = load i32, i32* %122, align 8, !dbg !3609
  %bf.lshr268 = lshr i32 %bf.load267, 16, !dbg !3609
  %bf.clear269 = and i32 %bf.lshr268, 255, !dbg !3609
  %cmp270 = icmp eq i32 %bf.clear266, %bf.clear269, !dbg !3610
  br i1 %cmp270, label %land.lhs.true272, label %if.end276, !dbg !3611

land.lhs.true272:                                 ; preds = %if.else263
  %123 = load i64, i64* %offset50, align 8, !dbg !3612
  %cmp273 = icmp eq i64 %123, 0, !dbg !3613
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !3614

if.then275:                                       ; preds = %land.lhs.true272
  %124 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !3615
  store %struct.rtx_def* %124, %struct.rtx_def** %x.addr, align 8, !dbg !3616
  br label %if.end276, !dbg !3617

if.end276:                                        ; preds = %if.then275, %land.lhs.true272, %if.else263
  br label %if.end277

if.end277:                                        ; preds = %if.end276, %if.end262
  br label %if.end278, !dbg !3618

if.end278:                                        ; preds = %if.end277, %cond.end123, %land.lhs.true110, %land.lhs.true100, %lor.lhs.false94, %land.lhs.true80, %land.lhs.true74, %sw.epilog
  br label %if.end279, !dbg !3619

if.end279:                                        ; preds = %if.end278, %cond.end, %cond.false, %cond.true, %entry
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3620
  ret %struct.rtx_def* %125, !dbg !3621
}

declare dso_local %union.tree_node* @get_inner_reference(%union.tree_node*, i64*, i64*, %union.tree_node**, i32*, i32*, i32*, i8 zeroext) #2

declare dso_local i32 @host_integerp(%union.tree_node*, i32) #2

declare dso_local void @make_decl_rtl(%union.tree_node*) #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_gen_unary(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 !dbg !3622 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %op_mode.addr = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3627, metadata !DIExpression()), !dbg !3628
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !3629, metadata !DIExpression()), !dbg !3630
  store i32 %op_mode, i32* %op_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op_mode.addr, metadata !3631, metadata !DIExpression()), !dbg !3632
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !3633, metadata !DIExpression()), !dbg !3634
  %0 = load i32, i32* %code.addr, align 4, !dbg !3635
  %1 = load i32, i32* %mode.addr, align 4, !dbg !3637
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3638
  %3 = load i32, i32* %op_mode.addr, align 4, !dbg !3639
  %call = call %struct.rtx_def* @simplify_unary_operation(i32 %0, i32 %1, %struct.rtx_def* %2, i32 %3), !dbg !3640
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !3641
  %cmp = icmp ne %struct.rtx_def* %call, null, !dbg !3642
  br i1 %cmp, label %if.then, label %if.end, !dbg !3643

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3644
  store %struct.rtx_def* %4, %struct.rtx_def** %retval, align 8, !dbg !3645
  br label %return, !dbg !3645

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %code.addr, align 4, !dbg !3646
  %6 = load i32, i32* %mode.addr, align 4, !dbg !3646
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3646
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %5, i32 %6, %struct.rtx_def* %7), !dbg !3646
  store %struct.rtx_def* %call1, %struct.rtx_def** %retval, align 8, !dbg !3647
  br label %return, !dbg !3647

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3648
  ret %struct.rtx_def* %8, !dbg !3648
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_unary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 !dbg !3649 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %op_mode.addr = alloca i32, align 4
  %trueop = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3650, metadata !DIExpression()), !dbg !3651
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3652, metadata !DIExpression()), !dbg !3653
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !3654, metadata !DIExpression()), !dbg !3655
  store i32 %op_mode, i32* %op_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op_mode.addr, metadata !3656, metadata !DIExpression()), !dbg !3657
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop, metadata !3658, metadata !DIExpression()), !dbg !3659
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !3660, metadata !DIExpression()), !dbg !3661
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3662
  %call = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %0), !dbg !3663
  store %struct.rtx_def* %call, %struct.rtx_def** %trueop, align 8, !dbg !3664
  %1 = load i32, i32* %code.addr, align 4, !dbg !3665
  %2 = load i32, i32* %mode.addr, align 4, !dbg !3666
  %3 = load %struct.rtx_def*, %struct.rtx_def** %trueop, align 8, !dbg !3667
  %4 = load i32, i32* %op_mode.addr, align 4, !dbg !3668
  %call1 = call %struct.rtx_def* @simplify_const_unary_operation(i32 %1, i32 %2, %struct.rtx_def* %3, i32 %4), !dbg !3669
  store %struct.rtx_def* %call1, %struct.rtx_def** %tem, align 8, !dbg !3670
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3671
  %tobool = icmp ne %struct.rtx_def* %5, null, !dbg !3671
  br i1 %tobool, label %if.then, label %if.end, !dbg !3673

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3674
  store %struct.rtx_def* %6, %struct.rtx_def** %retval, align 8, !dbg !3675
  br label %return, !dbg !3675

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %code.addr, align 4, !dbg !3676
  %8 = load i32, i32* %mode.addr, align 4, !dbg !3677
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3678
  %call2 = call %struct.rtx_def* @simplify_unary_operation_1(i32 %7, i32 %8, %struct.rtx_def* %9), !dbg !3679
  store %struct.rtx_def* %call2, %struct.rtx_def** %retval, align 8, !dbg !3680
  br label %return, !dbg !3680

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3681
  ret %struct.rtx_def* %10, !dbg !3681
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_gen_ternary(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #0 !dbg !3682 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0_mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %op2.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3685, metadata !DIExpression()), !dbg !3686
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3687, metadata !DIExpression()), !dbg !3688
  store i32 %op0_mode, i32* %op0_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op0_mode.addr, metadata !3689, metadata !DIExpression()), !dbg !3690
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !3691, metadata !DIExpression()), !dbg !3692
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !3693, metadata !DIExpression()), !dbg !3694
  store %struct.rtx_def* %op2, %struct.rtx_def** %op2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op2.addr, metadata !3695, metadata !DIExpression()), !dbg !3696
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !3697, metadata !DIExpression()), !dbg !3698
  %0 = load i32, i32* %code.addr, align 4, !dbg !3699
  %1 = load i32, i32* %mode.addr, align 4, !dbg !3701
  %2 = load i32, i32* %op0_mode.addr, align 4, !dbg !3702
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3703
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3704
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3705
  %call = call %struct.rtx_def* @simplify_ternary_operation(i32 %0, i32 %1, i32 %2, %struct.rtx_def* %3, %struct.rtx_def* %4, %struct.rtx_def* %5), !dbg !3706
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !3707
  %cmp = icmp ne %struct.rtx_def* null, %call, !dbg !3708
  br i1 %cmp, label %if.then, label %if.end, !dbg !3709

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3710
  store %struct.rtx_def* %6, %struct.rtx_def** %retval, align 8, !dbg !3711
  br label %return, !dbg !3711

if.end:                                           ; preds = %entry
  %7 = load i32, i32* %code.addr, align 4, !dbg !3712
  %8 = load i32, i32* %mode.addr, align 4, !dbg !3712
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3712
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3712
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3712
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 %7, i32 %8, %struct.rtx_def* %9, %struct.rtx_def* %10, %struct.rtx_def* %11), !dbg !3712
  store %struct.rtx_def* %call1, %struct.rtx_def** %retval, align 8, !dbg !3713
  br label %return, !dbg !3713

return:                                           ; preds = %if.end, %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !3714
  ret %struct.rtx_def* %12, !dbg !3714
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_ternary_operation(i32 %code, i32 %mode, i32 %op0_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %op2) #0 !dbg !3715 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0_mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %op2.addr = alloca %struct.rtx_def*, align 8
  %width = alloca i32, align 4
  %val = alloca i64, align 8
  %cmp_mode = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %t = alloca i64, align 8
  %f = alloca i64, align 8
  %tmp = alloca i32, align 4
  %elt_size = alloca i32, align 4
  %n_elts = alloca i32, align 4
  %mask = alloca i32, align 4
  %v = alloca %struct.rtvec_def*, align 8
  %i = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !3716, metadata !DIExpression()), !dbg !3717
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  store i32 %op0_mode, i32* %op0_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op0_mode.addr, metadata !3720, metadata !DIExpression()), !dbg !3721
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !3724, metadata !DIExpression()), !dbg !3725
  store %struct.rtx_def* %op2, %struct.rtx_def** %op2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op2.addr, metadata !3726, metadata !DIExpression()), !dbg !3727
  call void @llvm.dbg.declare(metadata i32* %width, metadata !3728, metadata !DIExpression()), !dbg !3729
  %0 = load i32, i32* %mode.addr, align 4, !dbg !3730
  %idxprom = zext i32 %0 to i64, !dbg !3730
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !3730
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3730
  %conv = zext i8 %1 to i16, !dbg !3730
  %conv1 = zext i16 %conv to i32, !dbg !3730
  %mul = mul nsw i32 %conv1, 8, !dbg !3730
  %conv2 = trunc i32 %mul to i16, !dbg !3730
  %conv3 = zext i16 %conv2 to i32, !dbg !3730
  store i32 %conv3, i32* %width, align 4, !dbg !3729
  %2 = load i32, i32* %width, align 4, !dbg !3731
  %cmp = icmp eq i32 %2, 0, !dbg !3733
  br i1 %cmp, label %if.then, label %if.end, !dbg !3734

if.then:                                          ; preds = %entry
  store i32 64, i32* %width, align 4, !dbg !3735
  br label %if.end, !dbg !3736

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %code.addr, align 4, !dbg !3737
  switch i32 %3, label %sw.default [
    i32 119, label %sw.bb
    i32 120, label %sw.bb
    i32 47, label %sw.bb79
    i32 123, label %sw.bb677
  ], !dbg !3738

sw.bb:                                            ; preds = %if.end, %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3739
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3739
  %bf.load = load i32, i32* %5, align 8, !dbg !3739
  %bf.clear = and i32 %bf.load, 65535, !dbg !3739
  %cmp5 = icmp eq i32 %bf.clear, 30, !dbg !3739
  br i1 %cmp5, label %land.lhs.true, label %if.end78, !dbg !3742

land.lhs.true:                                    ; preds = %sw.bb
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3743
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !3743
  %bf.load7 = load i32, i32* %7, align 8, !dbg !3743
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !3743
  %cmp9 = icmp eq i32 %bf.clear8, 30, !dbg !3743
  br i1 %cmp9, label %land.lhs.true11, label %if.end78, !dbg !3744

land.lhs.true11:                                  ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3745
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3745
  %bf.load12 = load i32, i32* %9, align 8, !dbg !3745
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !3745
  %cmp14 = icmp eq i32 %bf.clear13, 30, !dbg !3745
  br i1 %cmp14, label %land.lhs.true16, label %if.end78, !dbg !3746

land.lhs.true16:                                  ; preds = %land.lhs.true11
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3747
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3747
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !3747
  %arrayidx17 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !3747
  %11 = load i64, i64* %arrayidx17, align 8, !dbg !3747
  %conv18 = trunc i64 %11 to i32, !dbg !3748
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3749
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !3749
  %hwint20 = bitcast %union.u* %u19 to [1 x i64]*, !dbg !3749
  %arrayidx21 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint20, i64 0, i64 0, !dbg !3749
  %13 = load i64, i64* %arrayidx21, align 8, !dbg !3749
  %conv22 = trunc i64 %13 to i32, !dbg !3750
  %add = add i32 %conv18, %conv22, !dbg !3751
  %14 = load i32, i32* %width, align 4, !dbg !3752
  %cmp23 = icmp ule i32 %add, %14, !dbg !3753
  br i1 %cmp23, label %land.lhs.true25, label %if.end78, !dbg !3754

land.lhs.true25:                                  ; preds = %land.lhs.true16
  %15 = load i32, i32* %width, align 4, !dbg !3755
  %cmp26 = icmp ule i32 %15, 64, !dbg !3756
  br i1 %cmp26, label %if.then28, label %if.end78, !dbg !3757

if.then28:                                        ; preds = %land.lhs.true25
  call void @llvm.dbg.declare(metadata i64* %val, metadata !3758, metadata !DIExpression()), !dbg !3760
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3761
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !3761
  %hwint30 = bitcast %union.u* %u29 to [1 x i64]*, !dbg !3761
  %arrayidx31 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint30, i64 0, i64 0, !dbg !3761
  %17 = load i64, i64* %arrayidx31, align 8, !dbg !3761
  store i64 %17, i64* %val, align 8, !dbg !3760
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3762
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !3762
  %hwint33 = bitcast %union.u* %u32 to [1 x i64]*, !dbg !3762
  %arrayidx34 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint33, i64 0, i64 0, !dbg !3762
  %19 = load i64, i64* %arrayidx34, align 8, !dbg !3762
  %20 = load i64, i64* %val, align 8, !dbg !3764
  %shr = ashr i64 %20, %19, !dbg !3764
  store i64 %shr, i64* %val, align 8, !dbg !3764
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3765
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !3765
  %hwint36 = bitcast %union.u* %u35 to [1 x i64]*, !dbg !3765
  %arrayidx37 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint36, i64 0, i64 0, !dbg !3765
  %22 = load i64, i64* %arrayidx37, align 8, !dbg !3765
  %cmp38 = icmp ne i64 64, %22, !dbg !3767
  br i1 %cmp38, label %if.then40, label %if.end60, !dbg !3768

if.then40:                                        ; preds = %if.then28
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3769
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !3769
  %hwint42 = bitcast %union.u* %u41 to [1 x i64]*, !dbg !3769
  %arrayidx43 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint42, i64 0, i64 0, !dbg !3769
  %24 = load i64, i64* %arrayidx43, align 8, !dbg !3769
  %shl = shl i64 1, %24, !dbg !3771
  %sub = sub nsw i64 %shl, 1, !dbg !3772
  %25 = load i64, i64* %val, align 8, !dbg !3773
  %and = and i64 %25, %sub, !dbg !3773
  store i64 %and, i64* %val, align 8, !dbg !3773
  %26 = load i32, i32* %code.addr, align 4, !dbg !3774
  %cmp44 = icmp eq i32 %26, 119, !dbg !3776
  br i1 %cmp44, label %land.lhs.true46, label %if.end59, !dbg !3777

land.lhs.true46:                                  ; preds = %if.then40
  %27 = load i64, i64* %val, align 8, !dbg !3778
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3779
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !3779
  %hwint48 = bitcast %union.u* %u47 to [1 x i64]*, !dbg !3779
  %arrayidx49 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint48, i64 0, i64 0, !dbg !3779
  %29 = load i64, i64* %arrayidx49, align 8, !dbg !3779
  %sub50 = sub nsw i64 %29, 1, !dbg !3780
  %shl51 = shl i64 1, %sub50, !dbg !3781
  %and52 = and i64 %27, %shl51, !dbg !3782
  %tobool = icmp ne i64 %and52, 0, !dbg !3782
  br i1 %tobool, label %if.then53, label %if.end59, !dbg !3783

if.then53:                                        ; preds = %land.lhs.true46
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3784
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !3784
  %hwint55 = bitcast %union.u* %u54 to [1 x i64]*, !dbg !3784
  %arrayidx56 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint55, i64 0, i64 0, !dbg !3784
  %31 = load i64, i64* %arrayidx56, align 8, !dbg !3784
  %shl57 = shl i64 1, %31, !dbg !3785
  %sub58 = sub nsw i64 %shl57, 1, !dbg !3786
  %neg = xor i64 %sub58, -1, !dbg !3787
  %32 = load i64, i64* %val, align 8, !dbg !3788
  %or = or i64 %32, %neg, !dbg !3788
  store i64 %or, i64* %val, align 8, !dbg !3788
  br label %if.end59, !dbg !3789

if.end59:                                         ; preds = %if.then53, %land.lhs.true46, %if.then40
  br label %if.end60, !dbg !3790

if.end60:                                         ; preds = %if.end59, %if.then28
  %33 = load i32, i32* %width, align 4, !dbg !3791
  %cmp61 = icmp ult i32 %33, 64, !dbg !3793
  br i1 %cmp61, label %land.lhs.true63, label %if.end77, !dbg !3794

land.lhs.true63:                                  ; preds = %if.end60
  %34 = load i64, i64* %val, align 8, !dbg !3795
  %35 = load i32, i32* %width, align 4, !dbg !3796
  %sub64 = sub i32 %35, 1, !dbg !3797
  %sh_prom = zext i32 %sub64 to i64, !dbg !3798
  %shl65 = shl i64 -1, %sh_prom, !dbg !3798
  %and66 = and i64 %34, %shl65, !dbg !3799
  %36 = load i32, i32* %width, align 4, !dbg !3800
  %sub67 = sub i32 %36, 1, !dbg !3801
  %sh_prom68 = zext i32 %sub67 to i64, !dbg !3802
  %shl69 = shl i64 -1, %sh_prom68, !dbg !3802
  %cmp70 = icmp ne i64 %and66, %shl69, !dbg !3803
  br i1 %cmp70, label %if.then72, label %if.end77, !dbg !3804

if.then72:                                        ; preds = %land.lhs.true63
  %37 = load i32, i32* %width, align 4, !dbg !3805
  %sh_prom73 = zext i32 %37 to i64, !dbg !3806
  %shl74 = shl i64 1, %sh_prom73, !dbg !3806
  %sub75 = sub nsw i64 %shl74, 1, !dbg !3807
  %38 = load i64, i64* %val, align 8, !dbg !3808
  %and76 = and i64 %38, %sub75, !dbg !3808
  store i64 %and76, i64* %val, align 8, !dbg !3808
  br label %if.end77, !dbg !3809

if.end77:                                         ; preds = %if.then72, %land.lhs.true63, %if.end60
  %39 = load i64, i64* %val, align 8, !dbg !3810
  %40 = load i32, i32* %mode.addr, align 4, !dbg !3811
  %call = call %struct.rtx_def* @gen_int_mode(i64 %39, i32 %40), !dbg !3812
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !3813
  br label %return, !dbg !3813

if.end78:                                         ; preds = %land.lhs.true25, %land.lhs.true16, %land.lhs.true11, %land.lhs.true, %sw.bb
  br label %sw.epilog, !dbg !3814

sw.bb79:                                          ; preds = %if.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3815
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !3815
  %bf.load80 = load i32, i32* %42, align 8, !dbg !3815
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !3815
  %cmp82 = icmp eq i32 %bf.clear81, 30, !dbg !3815
  br i1 %cmp82, label %if.then84, label %if.end87, !dbg !3817

if.then84:                                        ; preds = %sw.bb79
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3818
  %44 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3819
  %cmp85 = icmp ne %struct.rtx_def* %43, %44, !dbg !3820
  br i1 %cmp85, label %cond.true, label %cond.false, !dbg !3818

cond.true:                                        ; preds = %if.then84
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3821
  br label %cond.end, !dbg !3818

cond.false:                                       ; preds = %if.then84
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3822
  br label %cond.end, !dbg !3818

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %45, %cond.true ], [ %46, %cond.false ], !dbg !3818
  store %struct.rtx_def* %cond, %struct.rtx_def** %retval, align 8, !dbg !3823
  br label %return, !dbg !3823

if.end87:                                         ; preds = %sw.bb79
  %47 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3824
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3826
  %call88 = call i32 @rtx_equal_p(%struct.rtx_def* %47, %struct.rtx_def* %48), !dbg !3827
  %tobool89 = icmp ne i32 %call88, 0, !dbg !3827
  br i1 %tobool89, label %land.lhs.true90, label %if.end94, !dbg !3828

land.lhs.true90:                                  ; preds = %if.end87
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3829
  %call91 = call i32 @side_effects_p(%struct.rtx_def* %49), !dbg !3830
  %tobool92 = icmp ne i32 %call91, 0, !dbg !3830
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !3831

if.then93:                                        ; preds = %land.lhs.true90
  %50 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3832
  store %struct.rtx_def* %50, %struct.rtx_def** %retval, align 8, !dbg !3833
  br label %return, !dbg !3833

if.end94:                                         ; preds = %land.lhs.true90, %if.end87
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3834
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !3834
  %bf.load95 = load i32, i32* %52, align 8, !dbg !3834
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !3834
  %cmp97 = icmp eq i32 %bf.clear96, 80, !dbg !3836
  br i1 %cmp97, label %land.lhs.true99, label %if.end322, !dbg !3837

land.lhs.true99:                                  ; preds = %if.end94
  %53 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3838
  %call100 = call i32 @side_effects_p(%struct.rtx_def* %53), !dbg !3839
  %tobool101 = icmp ne i32 %call100, 0, !dbg !3839
  br i1 %tobool101, label %if.end322, label %land.lhs.true102, !dbg !3840

land.lhs.true102:                                 ; preds = %land.lhs.true99
  %54 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom103 = zext i32 %54 to i64, !dbg !3841
  %arrayidx104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom103, !dbg !3841
  %55 = load i8, i8* %arrayidx104, align 1, !dbg !3841
  %conv105 = zext i8 %55 to i32, !dbg !3841
  %cmp106 = icmp eq i32 %conv105, 8, !dbg !3841
  br i1 %cmp106, label %land.lhs.true125, label %lor.lhs.false, !dbg !3841

lor.lhs.false:                                    ; preds = %land.lhs.true102
  %56 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom108 = zext i32 %56 to i64, !dbg !3841
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom108, !dbg !3841
  %57 = load i8, i8* %arrayidx109, align 1, !dbg !3841
  %conv110 = zext i8 %57 to i32, !dbg !3841
  %cmp111 = icmp eq i32 %conv110, 9, !dbg !3841
  br i1 %cmp111, label %land.lhs.true125, label %lor.lhs.false113, !dbg !3841

lor.lhs.false113:                                 ; preds = %lor.lhs.false
  %58 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom114 = zext i32 %58 to i64, !dbg !3841
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom114, !dbg !3841
  %59 = load i8, i8* %arrayidx115, align 1, !dbg !3841
  %conv116 = zext i8 %59 to i32, !dbg !3841
  %cmp117 = icmp eq i32 %conv116, 11, !dbg !3841
  br i1 %cmp117, label %land.lhs.true125, label %lor.lhs.false119, !dbg !3841

lor.lhs.false119:                                 ; preds = %lor.lhs.false113
  %60 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom120 = zext i32 %60 to i64, !dbg !3841
  %arrayidx121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom120, !dbg !3841
  %61 = load i8, i8* %arrayidx121, align 1, !dbg !3841
  %conv122 = zext i8 %61 to i32, !dbg !3841
  %cmp123 = icmp eq i32 %conv122, 17, !dbg !3841
  br i1 %cmp123, label %land.lhs.true125, label %land.lhs.true198, !dbg !3841

land.lhs.true125:                                 ; preds = %lor.lhs.false119, %lor.lhs.false113, %lor.lhs.false, %land.lhs.true102
  %62 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom126 = zext i32 %62 to i64, !dbg !3841
  %arrayidx127 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom126, !dbg !3841
  %63 = load i8, i8* %arrayidx127, align 1, !dbg !3841
  %conv128 = zext i8 %63 to i32, !dbg !3841
  %cmp129 = icmp eq i32 %conv128, 8, !dbg !3841
  br i1 %cmp129, label %cond.true137, label %lor.lhs.false131, !dbg !3841

lor.lhs.false131:                                 ; preds = %land.lhs.true125
  %64 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom132 = zext i32 %64 to i64, !dbg !3841
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom132, !dbg !3841
  %65 = load i8, i8* %arrayidx133, align 1, !dbg !3841
  %conv134 = zext i8 %65 to i32, !dbg !3841
  %cmp135 = icmp eq i32 %conv134, 9, !dbg !3841
  br i1 %cmp135, label %cond.true137, label %cond.false138, !dbg !3841

cond.true137:                                     ; preds = %lor.lhs.false131, %land.lhs.true125
  %66 = load i32, i32* %mode.addr, align 4, !dbg !3841
  br label %cond.end142, !dbg !3841

cond.false138:                                    ; preds = %lor.lhs.false131
  %67 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom139 = zext i32 %67 to i64, !dbg !3841
  %arrayidx140 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom139, !dbg !3841
  %68 = load i8, i8* %arrayidx140, align 1, !dbg !3841
  %conv141 = zext i8 %68 to i32, !dbg !3841
  br label %cond.end142, !dbg !3841

cond.end142:                                      ; preds = %cond.false138, %cond.true137
  %cond143 = phi i32 [ %66, %cond.true137 ], [ %conv141, %cond.false138 ], !dbg !3841
  %idxprom144 = zext i32 %cond143 to i64, !dbg !3841
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom144, !dbg !3841
  %69 = load i8, i8* %arrayidx145, align 1, !dbg !3841
  %conv146 = zext i8 %69 to i32, !dbg !3841
  %cmp147 = icmp eq i32 %conv146, 9, !dbg !3841
  br i1 %cmp147, label %cond.true149, label %cond.false170, !dbg !3841

cond.true149:                                     ; preds = %cond.end142
  %70 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom150 = zext i32 %70 to i64, !dbg !3841
  %arrayidx151 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom150, !dbg !3841
  %71 = load i8, i8* %arrayidx151, align 1, !dbg !3841
  %conv152 = zext i8 %71 to i32, !dbg !3841
  %cmp153 = icmp eq i32 %conv152, 8, !dbg !3841
  br i1 %cmp153, label %cond.true161, label %lor.lhs.false155, !dbg !3841

lor.lhs.false155:                                 ; preds = %cond.true149
  %72 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom156 = zext i32 %72 to i64, !dbg !3841
  %arrayidx157 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom156, !dbg !3841
  %73 = load i8, i8* %arrayidx157, align 1, !dbg !3841
  %conv158 = zext i8 %73 to i32, !dbg !3841
  %cmp159 = icmp eq i32 %conv158, 9, !dbg !3841
  br i1 %cmp159, label %cond.true161, label %cond.false162, !dbg !3841

cond.true161:                                     ; preds = %lor.lhs.false155, %cond.true149
  %74 = load i32, i32* %mode.addr, align 4, !dbg !3841
  br label %cond.end166, !dbg !3841

cond.false162:                                    ; preds = %lor.lhs.false155
  %75 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom163 = zext i32 %75 to i64, !dbg !3841
  %arrayidx164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom163, !dbg !3841
  %76 = load i8, i8* %arrayidx164, align 1, !dbg !3841
  %conv165 = zext i8 %76 to i32, !dbg !3841
  br label %cond.end166, !dbg !3841

cond.end166:                                      ; preds = %cond.false162, %cond.true161
  %cond167 = phi i32 [ %74, %cond.true161 ], [ %conv165, %cond.false162 ], !dbg !3841
  %sub168 = sub i32 %cond167, 42, !dbg !3841
  %add169 = add i32 %sub168, 4, !dbg !3841
  br label %cond.end190, !dbg !3841

cond.false170:                                    ; preds = %cond.end142
  %77 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom171 = zext i32 %77 to i64, !dbg !3841
  %arrayidx172 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom171, !dbg !3841
  %78 = load i8, i8* %arrayidx172, align 1, !dbg !3841
  %conv173 = zext i8 %78 to i32, !dbg !3841
  %cmp174 = icmp eq i32 %conv173, 8, !dbg !3841
  br i1 %cmp174, label %cond.true182, label %lor.lhs.false176, !dbg !3841

lor.lhs.false176:                                 ; preds = %cond.false170
  %79 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom177 = zext i32 %79 to i64, !dbg !3841
  %arrayidx178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom177, !dbg !3841
  %80 = load i8, i8* %arrayidx178, align 1, !dbg !3841
  %conv179 = zext i8 %80 to i32, !dbg !3841
  %cmp180 = icmp eq i32 %conv179, 9, !dbg !3841
  br i1 %cmp180, label %cond.true182, label %cond.false183, !dbg !3841

cond.true182:                                     ; preds = %lor.lhs.false176, %cond.false170
  %81 = load i32, i32* %mode.addr, align 4, !dbg !3841
  br label %cond.end187, !dbg !3841

cond.false183:                                    ; preds = %lor.lhs.false176
  %82 = load i32, i32* %mode.addr, align 4, !dbg !3841
  %idxprom184 = zext i32 %82 to i64, !dbg !3841
  %arrayidx185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom184, !dbg !3841
  %83 = load i8, i8* %arrayidx185, align 1, !dbg !3841
  %conv186 = zext i8 %83 to i32, !dbg !3841
  br label %cond.end187, !dbg !3841

cond.end187:                                      ; preds = %cond.false183, %cond.true182
  %cond188 = phi i32 [ %81, %cond.true182 ], [ %conv186, %cond.false183 ], !dbg !3841
  %sub189 = sub i32 %cond188, 38, !dbg !3841
  br label %cond.end190, !dbg !3841

cond.end190:                                      ; preds = %cond.end187, %cond.end166
  %cond191 = phi i32 [ %add169, %cond.end166 ], [ %sub189, %cond.end187 ], !dbg !3841
  %idxprom192 = zext i32 %cond191 to i64, !dbg !3841
  %arrayidx193 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom192, !dbg !3841
  %84 = load %struct.real_format*, %struct.real_format** %arrayidx193, align 8, !dbg !3841
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %84, i32 0, i32 11, !dbg !3841
  %85 = load i8, i8* %has_nans, align 2, !dbg !3841
  %conv194 = zext i8 %85 to i32, !dbg !3841
  %tobool195 = icmp ne i32 %conv194, 0, !dbg !3841
  br i1 %tobool195, label %land.lhs.true196, label %land.lhs.true198, !dbg !3841

land.lhs.true196:                                 ; preds = %cond.end190
  %86 = load i32, i32* @flag_finite_math_only, align 4, !dbg !3841
  %tobool197 = icmp ne i32 %86, 0, !dbg !3841
  br i1 %tobool197, label %land.lhs.true198, label %if.end322, !dbg !3842

land.lhs.true198:                                 ; preds = %land.lhs.true196, %cond.end190, %lor.lhs.false119
  %87 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom199 = zext i32 %87 to i64, !dbg !3843
  %arrayidx200 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom199, !dbg !3843
  %88 = load i8, i8* %arrayidx200, align 1, !dbg !3843
  %conv201 = zext i8 %88 to i32, !dbg !3843
  %cmp202 = icmp eq i32 %conv201, 8, !dbg !3843
  br i1 %cmp202, label %land.lhs.true222, label %lor.lhs.false204, !dbg !3843

lor.lhs.false204:                                 ; preds = %land.lhs.true198
  %89 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom205 = zext i32 %89 to i64, !dbg !3843
  %arrayidx206 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom205, !dbg !3843
  %90 = load i8, i8* %arrayidx206, align 1, !dbg !3843
  %conv207 = zext i8 %90 to i32, !dbg !3843
  %cmp208 = icmp eq i32 %conv207, 9, !dbg !3843
  br i1 %cmp208, label %land.lhs.true222, label %lor.lhs.false210, !dbg !3843

lor.lhs.false210:                                 ; preds = %lor.lhs.false204
  %91 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom211 = zext i32 %91 to i64, !dbg !3843
  %arrayidx212 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom211, !dbg !3843
  %92 = load i8, i8* %arrayidx212, align 1, !dbg !3843
  %conv213 = zext i8 %92 to i32, !dbg !3843
  %cmp214 = icmp eq i32 %conv213, 11, !dbg !3843
  br i1 %cmp214, label %land.lhs.true222, label %lor.lhs.false216, !dbg !3843

lor.lhs.false216:                                 ; preds = %lor.lhs.false210
  %93 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom217 = zext i32 %93 to i64, !dbg !3843
  %arrayidx218 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom217, !dbg !3843
  %94 = load i8, i8* %arrayidx218, align 1, !dbg !3843
  %conv219 = zext i8 %94 to i32, !dbg !3843
  %cmp220 = icmp eq i32 %conv219, 17, !dbg !3843
  br i1 %cmp220, label %land.lhs.true222, label %land.lhs.true295, !dbg !3843

land.lhs.true222:                                 ; preds = %lor.lhs.false216, %lor.lhs.false210, %lor.lhs.false204, %land.lhs.true198
  %95 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom223 = zext i32 %95 to i64, !dbg !3843
  %arrayidx224 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom223, !dbg !3843
  %96 = load i8, i8* %arrayidx224, align 1, !dbg !3843
  %conv225 = zext i8 %96 to i32, !dbg !3843
  %cmp226 = icmp eq i32 %conv225, 8, !dbg !3843
  br i1 %cmp226, label %cond.true234, label %lor.lhs.false228, !dbg !3843

lor.lhs.false228:                                 ; preds = %land.lhs.true222
  %97 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom229 = zext i32 %97 to i64, !dbg !3843
  %arrayidx230 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom229, !dbg !3843
  %98 = load i8, i8* %arrayidx230, align 1, !dbg !3843
  %conv231 = zext i8 %98 to i32, !dbg !3843
  %cmp232 = icmp eq i32 %conv231, 9, !dbg !3843
  br i1 %cmp232, label %cond.true234, label %cond.false235, !dbg !3843

cond.true234:                                     ; preds = %lor.lhs.false228, %land.lhs.true222
  %99 = load i32, i32* %mode.addr, align 4, !dbg !3843
  br label %cond.end239, !dbg !3843

cond.false235:                                    ; preds = %lor.lhs.false228
  %100 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom236 = zext i32 %100 to i64, !dbg !3843
  %arrayidx237 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom236, !dbg !3843
  %101 = load i8, i8* %arrayidx237, align 1, !dbg !3843
  %conv238 = zext i8 %101 to i32, !dbg !3843
  br label %cond.end239, !dbg !3843

cond.end239:                                      ; preds = %cond.false235, %cond.true234
  %cond240 = phi i32 [ %99, %cond.true234 ], [ %conv238, %cond.false235 ], !dbg !3843
  %idxprom241 = zext i32 %cond240 to i64, !dbg !3843
  %arrayidx242 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom241, !dbg !3843
  %102 = load i8, i8* %arrayidx242, align 1, !dbg !3843
  %conv243 = zext i8 %102 to i32, !dbg !3843
  %cmp244 = icmp eq i32 %conv243, 9, !dbg !3843
  br i1 %cmp244, label %cond.true246, label %cond.false267, !dbg !3843

cond.true246:                                     ; preds = %cond.end239
  %103 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom247 = zext i32 %103 to i64, !dbg !3843
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom247, !dbg !3843
  %104 = load i8, i8* %arrayidx248, align 1, !dbg !3843
  %conv249 = zext i8 %104 to i32, !dbg !3843
  %cmp250 = icmp eq i32 %conv249, 8, !dbg !3843
  br i1 %cmp250, label %cond.true258, label %lor.lhs.false252, !dbg !3843

lor.lhs.false252:                                 ; preds = %cond.true246
  %105 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom253 = zext i32 %105 to i64, !dbg !3843
  %arrayidx254 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom253, !dbg !3843
  %106 = load i8, i8* %arrayidx254, align 1, !dbg !3843
  %conv255 = zext i8 %106 to i32, !dbg !3843
  %cmp256 = icmp eq i32 %conv255, 9, !dbg !3843
  br i1 %cmp256, label %cond.true258, label %cond.false259, !dbg !3843

cond.true258:                                     ; preds = %lor.lhs.false252, %cond.true246
  %107 = load i32, i32* %mode.addr, align 4, !dbg !3843
  br label %cond.end263, !dbg !3843

cond.false259:                                    ; preds = %lor.lhs.false252
  %108 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom260 = zext i32 %108 to i64, !dbg !3843
  %arrayidx261 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom260, !dbg !3843
  %109 = load i8, i8* %arrayidx261, align 1, !dbg !3843
  %conv262 = zext i8 %109 to i32, !dbg !3843
  br label %cond.end263, !dbg !3843

cond.end263:                                      ; preds = %cond.false259, %cond.true258
  %cond264 = phi i32 [ %107, %cond.true258 ], [ %conv262, %cond.false259 ], !dbg !3843
  %sub265 = sub i32 %cond264, 42, !dbg !3843
  %add266 = add i32 %sub265, 4, !dbg !3843
  br label %cond.end287, !dbg !3843

cond.false267:                                    ; preds = %cond.end239
  %110 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom268 = zext i32 %110 to i64, !dbg !3843
  %arrayidx269 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom268, !dbg !3843
  %111 = load i8, i8* %arrayidx269, align 1, !dbg !3843
  %conv270 = zext i8 %111 to i32, !dbg !3843
  %cmp271 = icmp eq i32 %conv270, 8, !dbg !3843
  br i1 %cmp271, label %cond.true279, label %lor.lhs.false273, !dbg !3843

lor.lhs.false273:                                 ; preds = %cond.false267
  %112 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom274 = zext i32 %112 to i64, !dbg !3843
  %arrayidx275 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom274, !dbg !3843
  %113 = load i8, i8* %arrayidx275, align 1, !dbg !3843
  %conv276 = zext i8 %113 to i32, !dbg !3843
  %cmp277 = icmp eq i32 %conv276, 9, !dbg !3843
  br i1 %cmp277, label %cond.true279, label %cond.false280, !dbg !3843

cond.true279:                                     ; preds = %lor.lhs.false273, %cond.false267
  %114 = load i32, i32* %mode.addr, align 4, !dbg !3843
  br label %cond.end284, !dbg !3843

cond.false280:                                    ; preds = %lor.lhs.false273
  %115 = load i32, i32* %mode.addr, align 4, !dbg !3843
  %idxprom281 = zext i32 %115 to i64, !dbg !3843
  %arrayidx282 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom281, !dbg !3843
  %116 = load i8, i8* %arrayidx282, align 1, !dbg !3843
  %conv283 = zext i8 %116 to i32, !dbg !3843
  br label %cond.end284, !dbg !3843

cond.end284:                                      ; preds = %cond.false280, %cond.true279
  %cond285 = phi i32 [ %114, %cond.true279 ], [ %conv283, %cond.false280 ], !dbg !3843
  %sub286 = sub i32 %cond285, 38, !dbg !3843
  br label %cond.end287, !dbg !3843

cond.end287:                                      ; preds = %cond.end284, %cond.end263
  %cond288 = phi i32 [ %add266, %cond.end263 ], [ %sub286, %cond.end284 ], !dbg !3843
  %idxprom289 = zext i32 %cond288 to i64, !dbg !3843
  %arrayidx290 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom289, !dbg !3843
  %117 = load %struct.real_format*, %struct.real_format** %arrayidx290, align 8, !dbg !3843
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %117, i32 0, i32 14, !dbg !3843
  %118 = load i8, i8* %has_signed_zero, align 1, !dbg !3843
  %conv291 = zext i8 %118 to i32, !dbg !3843
  %tobool292 = icmp ne i32 %conv291, 0, !dbg !3843
  br i1 %tobool292, label %land.lhs.true293, label %land.lhs.true295, !dbg !3843

land.lhs.true293:                                 ; preds = %cond.end287
  %119 = load i32, i32* @flag_signed_zeros, align 4, !dbg !3843
  %tobool294 = icmp ne i32 %119, 0, !dbg !3843
  br i1 %tobool294, label %if.end322, label %land.lhs.true295, !dbg !3844

land.lhs.true295:                                 ; preds = %land.lhs.true293, %cond.end287, %lor.lhs.false216
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3845
  %u296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !3845
  %fld = bitcast %union.u* %u296 to [1 x %union.rtunion_def]*, !dbg !3845
  %arrayidx297 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3845
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx297 to %struct.rtx_def**, !dbg !3845
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3845
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3846
  %call298 = call i32 @rtx_equal_p(%struct.rtx_def* %121, %struct.rtx_def* %122), !dbg !3847
  %tobool299 = icmp ne i32 %call298, 0, !dbg !3847
  br i1 %tobool299, label %land.lhs.true300, label %lor.lhs.false307, !dbg !3848

land.lhs.true300:                                 ; preds = %land.lhs.true295
  %123 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3849
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !3849
  %fld302 = bitcast %union.u* %u301 to [1 x %union.rtunion_def]*, !dbg !3849
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i64 0, i64 1, !dbg !3849
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !3849
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !3849
  %125 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3850
  %call305 = call i32 @rtx_equal_p(%struct.rtx_def* %124, %struct.rtx_def* %125), !dbg !3851
  %tobool306 = icmp ne i32 %call305, 0, !dbg !3851
  br i1 %tobool306, label %if.then321, label %lor.lhs.false307, !dbg !3852

lor.lhs.false307:                                 ; preds = %land.lhs.true300, %land.lhs.true295
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3853
  %u308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !3853
  %fld309 = bitcast %union.u* %u308 to [1 x %union.rtunion_def]*, !dbg !3853
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i64 0, i64 0, !dbg !3853
  %rt_rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**, !dbg !3853
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx311, align 8, !dbg !3853
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3854
  %call312 = call i32 @rtx_equal_p(%struct.rtx_def* %127, %struct.rtx_def* %128), !dbg !3855
  %tobool313 = icmp ne i32 %call312, 0, !dbg !3855
  br i1 %tobool313, label %land.lhs.true314, label %if.end322, !dbg !3856

land.lhs.true314:                                 ; preds = %lor.lhs.false307
  %129 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3857
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1, !dbg !3857
  %fld316 = bitcast %union.u* %u315 to [1 x %union.rtunion_def]*, !dbg !3857
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i64 0, i64 1, !dbg !3857
  %rt_rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**, !dbg !3857
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx318, align 8, !dbg !3857
  %131 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3858
  %call319 = call i32 @rtx_equal_p(%struct.rtx_def* %130, %struct.rtx_def* %131), !dbg !3859
  %tobool320 = icmp ne i32 %call319, 0, !dbg !3859
  br i1 %tobool320, label %if.then321, label %if.end322, !dbg !3860

if.then321:                                       ; preds = %land.lhs.true314, %land.lhs.true300
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3861
  store %struct.rtx_def* %132, %struct.rtx_def** %retval, align 8, !dbg !3862
  br label %return, !dbg !3862

if.end322:                                        ; preds = %land.lhs.true314, %lor.lhs.false307, %land.lhs.true293, %land.lhs.true196, %land.lhs.true99, %if.end94
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3863
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !3863
  %bf.load323 = load i32, i32* %134, align 8, !dbg !3863
  %bf.clear324 = and i32 %bf.load323, 65535, !dbg !3863
  %cmp325 = icmp eq i32 %bf.clear324, 81, !dbg !3865
  br i1 %cmp325, label %land.lhs.true327, label %if.end555, !dbg !3866

land.lhs.true327:                                 ; preds = %if.end322
  %135 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3867
  %call328 = call i32 @side_effects_p(%struct.rtx_def* %135), !dbg !3868
  %tobool329 = icmp ne i32 %call328, 0, !dbg !3868
  br i1 %tobool329, label %if.end555, label %land.lhs.true330, !dbg !3869

land.lhs.true330:                                 ; preds = %land.lhs.true327
  %136 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom331 = zext i32 %136 to i64, !dbg !3870
  %arrayidx332 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom331, !dbg !3870
  %137 = load i8, i8* %arrayidx332, align 1, !dbg !3870
  %conv333 = zext i8 %137 to i32, !dbg !3870
  %cmp334 = icmp eq i32 %conv333, 8, !dbg !3870
  br i1 %cmp334, label %land.lhs.true354, label %lor.lhs.false336, !dbg !3870

lor.lhs.false336:                                 ; preds = %land.lhs.true330
  %138 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom337 = zext i32 %138 to i64, !dbg !3870
  %arrayidx338 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom337, !dbg !3870
  %139 = load i8, i8* %arrayidx338, align 1, !dbg !3870
  %conv339 = zext i8 %139 to i32, !dbg !3870
  %cmp340 = icmp eq i32 %conv339, 9, !dbg !3870
  br i1 %cmp340, label %land.lhs.true354, label %lor.lhs.false342, !dbg !3870

lor.lhs.false342:                                 ; preds = %lor.lhs.false336
  %140 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom343 = zext i32 %140 to i64, !dbg !3870
  %arrayidx344 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom343, !dbg !3870
  %141 = load i8, i8* %arrayidx344, align 1, !dbg !3870
  %conv345 = zext i8 %141 to i32, !dbg !3870
  %cmp346 = icmp eq i32 %conv345, 11, !dbg !3870
  br i1 %cmp346, label %land.lhs.true354, label %lor.lhs.false348, !dbg !3870

lor.lhs.false348:                                 ; preds = %lor.lhs.false342
  %142 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom349 = zext i32 %142 to i64, !dbg !3870
  %arrayidx350 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom349, !dbg !3870
  %143 = load i8, i8* %arrayidx350, align 1, !dbg !3870
  %conv351 = zext i8 %143 to i32, !dbg !3870
  %cmp352 = icmp eq i32 %conv351, 17, !dbg !3870
  br i1 %cmp352, label %land.lhs.true354, label %land.lhs.true428, !dbg !3870

land.lhs.true354:                                 ; preds = %lor.lhs.false348, %lor.lhs.false342, %lor.lhs.false336, %land.lhs.true330
  %144 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom355 = zext i32 %144 to i64, !dbg !3870
  %arrayidx356 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom355, !dbg !3870
  %145 = load i8, i8* %arrayidx356, align 1, !dbg !3870
  %conv357 = zext i8 %145 to i32, !dbg !3870
  %cmp358 = icmp eq i32 %conv357, 8, !dbg !3870
  br i1 %cmp358, label %cond.true366, label %lor.lhs.false360, !dbg !3870

lor.lhs.false360:                                 ; preds = %land.lhs.true354
  %146 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom361 = zext i32 %146 to i64, !dbg !3870
  %arrayidx362 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom361, !dbg !3870
  %147 = load i8, i8* %arrayidx362, align 1, !dbg !3870
  %conv363 = zext i8 %147 to i32, !dbg !3870
  %cmp364 = icmp eq i32 %conv363, 9, !dbg !3870
  br i1 %cmp364, label %cond.true366, label %cond.false367, !dbg !3870

cond.true366:                                     ; preds = %lor.lhs.false360, %land.lhs.true354
  %148 = load i32, i32* %mode.addr, align 4, !dbg !3870
  br label %cond.end371, !dbg !3870

cond.false367:                                    ; preds = %lor.lhs.false360
  %149 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom368 = zext i32 %149 to i64, !dbg !3870
  %arrayidx369 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom368, !dbg !3870
  %150 = load i8, i8* %arrayidx369, align 1, !dbg !3870
  %conv370 = zext i8 %150 to i32, !dbg !3870
  br label %cond.end371, !dbg !3870

cond.end371:                                      ; preds = %cond.false367, %cond.true366
  %cond372 = phi i32 [ %148, %cond.true366 ], [ %conv370, %cond.false367 ], !dbg !3870
  %idxprom373 = zext i32 %cond372 to i64, !dbg !3870
  %arrayidx374 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom373, !dbg !3870
  %151 = load i8, i8* %arrayidx374, align 1, !dbg !3870
  %conv375 = zext i8 %151 to i32, !dbg !3870
  %cmp376 = icmp eq i32 %conv375, 9, !dbg !3870
  br i1 %cmp376, label %cond.true378, label %cond.false399, !dbg !3870

cond.true378:                                     ; preds = %cond.end371
  %152 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom379 = zext i32 %152 to i64, !dbg !3870
  %arrayidx380 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom379, !dbg !3870
  %153 = load i8, i8* %arrayidx380, align 1, !dbg !3870
  %conv381 = zext i8 %153 to i32, !dbg !3870
  %cmp382 = icmp eq i32 %conv381, 8, !dbg !3870
  br i1 %cmp382, label %cond.true390, label %lor.lhs.false384, !dbg !3870

lor.lhs.false384:                                 ; preds = %cond.true378
  %154 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom385 = zext i32 %154 to i64, !dbg !3870
  %arrayidx386 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom385, !dbg !3870
  %155 = load i8, i8* %arrayidx386, align 1, !dbg !3870
  %conv387 = zext i8 %155 to i32, !dbg !3870
  %cmp388 = icmp eq i32 %conv387, 9, !dbg !3870
  br i1 %cmp388, label %cond.true390, label %cond.false391, !dbg !3870

cond.true390:                                     ; preds = %lor.lhs.false384, %cond.true378
  %156 = load i32, i32* %mode.addr, align 4, !dbg !3870
  br label %cond.end395, !dbg !3870

cond.false391:                                    ; preds = %lor.lhs.false384
  %157 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom392 = zext i32 %157 to i64, !dbg !3870
  %arrayidx393 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom392, !dbg !3870
  %158 = load i8, i8* %arrayidx393, align 1, !dbg !3870
  %conv394 = zext i8 %158 to i32, !dbg !3870
  br label %cond.end395, !dbg !3870

cond.end395:                                      ; preds = %cond.false391, %cond.true390
  %cond396 = phi i32 [ %156, %cond.true390 ], [ %conv394, %cond.false391 ], !dbg !3870
  %sub397 = sub i32 %cond396, 42, !dbg !3870
  %add398 = add i32 %sub397, 4, !dbg !3870
  br label %cond.end419, !dbg !3870

cond.false399:                                    ; preds = %cond.end371
  %159 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom400 = zext i32 %159 to i64, !dbg !3870
  %arrayidx401 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom400, !dbg !3870
  %160 = load i8, i8* %arrayidx401, align 1, !dbg !3870
  %conv402 = zext i8 %160 to i32, !dbg !3870
  %cmp403 = icmp eq i32 %conv402, 8, !dbg !3870
  br i1 %cmp403, label %cond.true411, label %lor.lhs.false405, !dbg !3870

lor.lhs.false405:                                 ; preds = %cond.false399
  %161 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom406 = zext i32 %161 to i64, !dbg !3870
  %arrayidx407 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom406, !dbg !3870
  %162 = load i8, i8* %arrayidx407, align 1, !dbg !3870
  %conv408 = zext i8 %162 to i32, !dbg !3870
  %cmp409 = icmp eq i32 %conv408, 9, !dbg !3870
  br i1 %cmp409, label %cond.true411, label %cond.false412, !dbg !3870

cond.true411:                                     ; preds = %lor.lhs.false405, %cond.false399
  %163 = load i32, i32* %mode.addr, align 4, !dbg !3870
  br label %cond.end416, !dbg !3870

cond.false412:                                    ; preds = %lor.lhs.false405
  %164 = load i32, i32* %mode.addr, align 4, !dbg !3870
  %idxprom413 = zext i32 %164 to i64, !dbg !3870
  %arrayidx414 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom413, !dbg !3870
  %165 = load i8, i8* %arrayidx414, align 1, !dbg !3870
  %conv415 = zext i8 %165 to i32, !dbg !3870
  br label %cond.end416, !dbg !3870

cond.end416:                                      ; preds = %cond.false412, %cond.true411
  %cond417 = phi i32 [ %163, %cond.true411 ], [ %conv415, %cond.false412 ], !dbg !3870
  %sub418 = sub i32 %cond417, 38, !dbg !3870
  br label %cond.end419, !dbg !3870

cond.end419:                                      ; preds = %cond.end416, %cond.end395
  %cond420 = phi i32 [ %add398, %cond.end395 ], [ %sub418, %cond.end416 ], !dbg !3870
  %idxprom421 = zext i32 %cond420 to i64, !dbg !3870
  %arrayidx422 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom421, !dbg !3870
  %166 = load %struct.real_format*, %struct.real_format** %arrayidx422, align 8, !dbg !3870
  %has_nans423 = getelementptr inbounds %struct.real_format, %struct.real_format* %166, i32 0, i32 11, !dbg !3870
  %167 = load i8, i8* %has_nans423, align 2, !dbg !3870
  %conv424 = zext i8 %167 to i32, !dbg !3870
  %tobool425 = icmp ne i32 %conv424, 0, !dbg !3870
  br i1 %tobool425, label %land.lhs.true426, label %land.lhs.true428, !dbg !3870

land.lhs.true426:                                 ; preds = %cond.end419
  %168 = load i32, i32* @flag_finite_math_only, align 4, !dbg !3870
  %tobool427 = icmp ne i32 %168, 0, !dbg !3870
  br i1 %tobool427, label %land.lhs.true428, label %if.end555, !dbg !3871

land.lhs.true428:                                 ; preds = %land.lhs.true426, %cond.end419, %lor.lhs.false348
  %169 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom429 = zext i32 %169 to i64, !dbg !3872
  %arrayidx430 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom429, !dbg !3872
  %170 = load i8, i8* %arrayidx430, align 1, !dbg !3872
  %conv431 = zext i8 %170 to i32, !dbg !3872
  %cmp432 = icmp eq i32 %conv431, 8, !dbg !3872
  br i1 %cmp432, label %land.lhs.true452, label %lor.lhs.false434, !dbg !3872

lor.lhs.false434:                                 ; preds = %land.lhs.true428
  %171 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom435 = zext i32 %171 to i64, !dbg !3872
  %arrayidx436 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom435, !dbg !3872
  %172 = load i8, i8* %arrayidx436, align 1, !dbg !3872
  %conv437 = zext i8 %172 to i32, !dbg !3872
  %cmp438 = icmp eq i32 %conv437, 9, !dbg !3872
  br i1 %cmp438, label %land.lhs.true452, label %lor.lhs.false440, !dbg !3872

lor.lhs.false440:                                 ; preds = %lor.lhs.false434
  %173 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom441 = zext i32 %173 to i64, !dbg !3872
  %arrayidx442 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom441, !dbg !3872
  %174 = load i8, i8* %arrayidx442, align 1, !dbg !3872
  %conv443 = zext i8 %174 to i32, !dbg !3872
  %cmp444 = icmp eq i32 %conv443, 11, !dbg !3872
  br i1 %cmp444, label %land.lhs.true452, label %lor.lhs.false446, !dbg !3872

lor.lhs.false446:                                 ; preds = %lor.lhs.false440
  %175 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom447 = zext i32 %175 to i64, !dbg !3872
  %arrayidx448 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom447, !dbg !3872
  %176 = load i8, i8* %arrayidx448, align 1, !dbg !3872
  %conv449 = zext i8 %176 to i32, !dbg !3872
  %cmp450 = icmp eq i32 %conv449, 17, !dbg !3872
  br i1 %cmp450, label %land.lhs.true452, label %land.lhs.true526, !dbg !3872

land.lhs.true452:                                 ; preds = %lor.lhs.false446, %lor.lhs.false440, %lor.lhs.false434, %land.lhs.true428
  %177 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom453 = zext i32 %177 to i64, !dbg !3872
  %arrayidx454 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom453, !dbg !3872
  %178 = load i8, i8* %arrayidx454, align 1, !dbg !3872
  %conv455 = zext i8 %178 to i32, !dbg !3872
  %cmp456 = icmp eq i32 %conv455, 8, !dbg !3872
  br i1 %cmp456, label %cond.true464, label %lor.lhs.false458, !dbg !3872

lor.lhs.false458:                                 ; preds = %land.lhs.true452
  %179 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom459 = zext i32 %179 to i64, !dbg !3872
  %arrayidx460 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom459, !dbg !3872
  %180 = load i8, i8* %arrayidx460, align 1, !dbg !3872
  %conv461 = zext i8 %180 to i32, !dbg !3872
  %cmp462 = icmp eq i32 %conv461, 9, !dbg !3872
  br i1 %cmp462, label %cond.true464, label %cond.false465, !dbg !3872

cond.true464:                                     ; preds = %lor.lhs.false458, %land.lhs.true452
  %181 = load i32, i32* %mode.addr, align 4, !dbg !3872
  br label %cond.end469, !dbg !3872

cond.false465:                                    ; preds = %lor.lhs.false458
  %182 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom466 = zext i32 %182 to i64, !dbg !3872
  %arrayidx467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom466, !dbg !3872
  %183 = load i8, i8* %arrayidx467, align 1, !dbg !3872
  %conv468 = zext i8 %183 to i32, !dbg !3872
  br label %cond.end469, !dbg !3872

cond.end469:                                      ; preds = %cond.false465, %cond.true464
  %cond470 = phi i32 [ %181, %cond.true464 ], [ %conv468, %cond.false465 ], !dbg !3872
  %idxprom471 = zext i32 %cond470 to i64, !dbg !3872
  %arrayidx472 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom471, !dbg !3872
  %184 = load i8, i8* %arrayidx472, align 1, !dbg !3872
  %conv473 = zext i8 %184 to i32, !dbg !3872
  %cmp474 = icmp eq i32 %conv473, 9, !dbg !3872
  br i1 %cmp474, label %cond.true476, label %cond.false497, !dbg !3872

cond.true476:                                     ; preds = %cond.end469
  %185 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom477 = zext i32 %185 to i64, !dbg !3872
  %arrayidx478 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom477, !dbg !3872
  %186 = load i8, i8* %arrayidx478, align 1, !dbg !3872
  %conv479 = zext i8 %186 to i32, !dbg !3872
  %cmp480 = icmp eq i32 %conv479, 8, !dbg !3872
  br i1 %cmp480, label %cond.true488, label %lor.lhs.false482, !dbg !3872

lor.lhs.false482:                                 ; preds = %cond.true476
  %187 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom483 = zext i32 %187 to i64, !dbg !3872
  %arrayidx484 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom483, !dbg !3872
  %188 = load i8, i8* %arrayidx484, align 1, !dbg !3872
  %conv485 = zext i8 %188 to i32, !dbg !3872
  %cmp486 = icmp eq i32 %conv485, 9, !dbg !3872
  br i1 %cmp486, label %cond.true488, label %cond.false489, !dbg !3872

cond.true488:                                     ; preds = %lor.lhs.false482, %cond.true476
  %189 = load i32, i32* %mode.addr, align 4, !dbg !3872
  br label %cond.end493, !dbg !3872

cond.false489:                                    ; preds = %lor.lhs.false482
  %190 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom490 = zext i32 %190 to i64, !dbg !3872
  %arrayidx491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom490, !dbg !3872
  %191 = load i8, i8* %arrayidx491, align 1, !dbg !3872
  %conv492 = zext i8 %191 to i32, !dbg !3872
  br label %cond.end493, !dbg !3872

cond.end493:                                      ; preds = %cond.false489, %cond.true488
  %cond494 = phi i32 [ %189, %cond.true488 ], [ %conv492, %cond.false489 ], !dbg !3872
  %sub495 = sub i32 %cond494, 42, !dbg !3872
  %add496 = add i32 %sub495, 4, !dbg !3872
  br label %cond.end517, !dbg !3872

cond.false497:                                    ; preds = %cond.end469
  %192 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom498 = zext i32 %192 to i64, !dbg !3872
  %arrayidx499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom498, !dbg !3872
  %193 = load i8, i8* %arrayidx499, align 1, !dbg !3872
  %conv500 = zext i8 %193 to i32, !dbg !3872
  %cmp501 = icmp eq i32 %conv500, 8, !dbg !3872
  br i1 %cmp501, label %cond.true509, label %lor.lhs.false503, !dbg !3872

lor.lhs.false503:                                 ; preds = %cond.false497
  %194 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom504 = zext i32 %194 to i64, !dbg !3872
  %arrayidx505 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom504, !dbg !3872
  %195 = load i8, i8* %arrayidx505, align 1, !dbg !3872
  %conv506 = zext i8 %195 to i32, !dbg !3872
  %cmp507 = icmp eq i32 %conv506, 9, !dbg !3872
  br i1 %cmp507, label %cond.true509, label %cond.false510, !dbg !3872

cond.true509:                                     ; preds = %lor.lhs.false503, %cond.false497
  %196 = load i32, i32* %mode.addr, align 4, !dbg !3872
  br label %cond.end514, !dbg !3872

cond.false510:                                    ; preds = %lor.lhs.false503
  %197 = load i32, i32* %mode.addr, align 4, !dbg !3872
  %idxprom511 = zext i32 %197 to i64, !dbg !3872
  %arrayidx512 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom511, !dbg !3872
  %198 = load i8, i8* %arrayidx512, align 1, !dbg !3872
  %conv513 = zext i8 %198 to i32, !dbg !3872
  br label %cond.end514, !dbg !3872

cond.end514:                                      ; preds = %cond.false510, %cond.true509
  %cond515 = phi i32 [ %196, %cond.true509 ], [ %conv513, %cond.false510 ], !dbg !3872
  %sub516 = sub i32 %cond515, 38, !dbg !3872
  br label %cond.end517, !dbg !3872

cond.end517:                                      ; preds = %cond.end514, %cond.end493
  %cond518 = phi i32 [ %add496, %cond.end493 ], [ %sub516, %cond.end514 ], !dbg !3872
  %idxprom519 = zext i32 %cond518 to i64, !dbg !3872
  %arrayidx520 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom519, !dbg !3872
  %199 = load %struct.real_format*, %struct.real_format** %arrayidx520, align 8, !dbg !3872
  %has_signed_zero521 = getelementptr inbounds %struct.real_format, %struct.real_format* %199, i32 0, i32 14, !dbg !3872
  %200 = load i8, i8* %has_signed_zero521, align 1, !dbg !3872
  %conv522 = zext i8 %200 to i32, !dbg !3872
  %tobool523 = icmp ne i32 %conv522, 0, !dbg !3872
  br i1 %tobool523, label %land.lhs.true524, label %land.lhs.true526, !dbg !3872

land.lhs.true524:                                 ; preds = %cond.end517
  %201 = load i32, i32* @flag_signed_zeros, align 4, !dbg !3872
  %tobool525 = icmp ne i32 %201, 0, !dbg !3872
  br i1 %tobool525, label %if.end555, label %land.lhs.true526, !dbg !3873

land.lhs.true526:                                 ; preds = %land.lhs.true524, %cond.end517, %lor.lhs.false446
  %202 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3874
  %u527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1, !dbg !3874
  %fld528 = bitcast %union.u* %u527 to [1 x %union.rtunion_def]*, !dbg !3874
  %arrayidx529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld528, i64 0, i64 0, !dbg !3874
  %rt_rtx530 = bitcast %union.rtunion_def* %arrayidx529 to %struct.rtx_def**, !dbg !3874
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx530, align 8, !dbg !3874
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3875
  %call531 = call i32 @rtx_equal_p(%struct.rtx_def* %203, %struct.rtx_def* %204), !dbg !3876
  %tobool532 = icmp ne i32 %call531, 0, !dbg !3876
  br i1 %tobool532, label %land.lhs.true533, label %lor.lhs.false540, !dbg !3877

land.lhs.true533:                                 ; preds = %land.lhs.true526
  %205 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3878
  %u534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !3878
  %fld535 = bitcast %union.u* %u534 to [1 x %union.rtunion_def]*, !dbg !3878
  %arrayidx536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld535, i64 0, i64 1, !dbg !3878
  %rt_rtx537 = bitcast %union.rtunion_def* %arrayidx536 to %struct.rtx_def**, !dbg !3878
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx537, align 8, !dbg !3878
  %207 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3879
  %call538 = call i32 @rtx_equal_p(%struct.rtx_def* %206, %struct.rtx_def* %207), !dbg !3880
  %tobool539 = icmp ne i32 %call538, 0, !dbg !3880
  br i1 %tobool539, label %if.then554, label %lor.lhs.false540, !dbg !3881

lor.lhs.false540:                                 ; preds = %land.lhs.true533, %land.lhs.true526
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3882
  %u541 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1, !dbg !3882
  %fld542 = bitcast %union.u* %u541 to [1 x %union.rtunion_def]*, !dbg !3882
  %arrayidx543 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld542, i64 0, i64 0, !dbg !3882
  %rt_rtx544 = bitcast %union.rtunion_def* %arrayidx543 to %struct.rtx_def**, !dbg !3882
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx544, align 8, !dbg !3882
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3883
  %call545 = call i32 @rtx_equal_p(%struct.rtx_def* %209, %struct.rtx_def* %210), !dbg !3884
  %tobool546 = icmp ne i32 %call545, 0, !dbg !3884
  br i1 %tobool546, label %land.lhs.true547, label %if.end555, !dbg !3885

land.lhs.true547:                                 ; preds = %lor.lhs.false540
  %211 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3886
  %u548 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !3886
  %fld549 = bitcast %union.u* %u548 to [1 x %union.rtunion_def]*, !dbg !3886
  %arrayidx550 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld549, i64 0, i64 1, !dbg !3886
  %rt_rtx551 = bitcast %union.rtunion_def* %arrayidx550 to %struct.rtx_def**, !dbg !3886
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx551, align 8, !dbg !3886
  %213 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3887
  %call552 = call i32 @rtx_equal_p(%struct.rtx_def* %212, %struct.rtx_def* %213), !dbg !3888
  %tobool553 = icmp ne i32 %call552, 0, !dbg !3888
  br i1 %tobool553, label %if.then554, label %if.end555, !dbg !3889

if.then554:                                       ; preds = %land.lhs.true547, %land.lhs.true533
  %214 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3890
  store %struct.rtx_def* %214, %struct.rtx_def** %retval, align 8, !dbg !3891
  br label %return, !dbg !3891

if.end555:                                        ; preds = %land.lhs.true547, %lor.lhs.false540, %land.lhs.true524, %land.lhs.true426, %land.lhs.true327, %if.end322
  %215 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3892
  %216 = bitcast %struct.rtx_def* %215 to i32*, !dbg !3892
  %bf.load556 = load i32, i32* %216, align 8, !dbg !3892
  %bf.clear557 = and i32 %bf.load556, 65535, !dbg !3892
  %idxprom558 = sext i32 %bf.clear557 to i64, !dbg !3892
  %arrayidx559 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom558, !dbg !3892
  %217 = load i32, i32* %arrayidx559, align 4, !dbg !3892
  %and560 = and i32 %217, -2, !dbg !3892
  %cmp561 = icmp eq i32 %and560, 0, !dbg !3892
  br i1 %cmp561, label %land.lhs.true563, label %if.end676, !dbg !3894

land.lhs.true563:                                 ; preds = %if.end555
  %218 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3895
  %call564 = call i32 @side_effects_p(%struct.rtx_def* %218), !dbg !3896
  %tobool565 = icmp ne i32 %call564, 0, !dbg !3896
  br i1 %tobool565, label %if.end676, label %if.then566, !dbg !3897

if.then566:                                       ; preds = %land.lhs.true563
  call void @llvm.dbg.declare(metadata i32* %cmp_mode, metadata !3898, metadata !DIExpression()), !dbg !3900
  %219 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3901
  %u567 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1, !dbg !3901
  %fld568 = bitcast %union.u* %u567 to [1 x %union.rtunion_def]*, !dbg !3901
  %arrayidx569 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld568, i64 0, i64 0, !dbg !3901
  %rt_rtx570 = bitcast %union.rtunion_def* %arrayidx569 to %struct.rtx_def**, !dbg !3901
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx570, align 8, !dbg !3901
  %221 = bitcast %struct.rtx_def* %220 to i32*, !dbg !3901
  %bf.load571 = load i32, i32* %221, align 8, !dbg !3901
  %bf.lshr = lshr i32 %bf.load571, 16, !dbg !3901
  %bf.clear572 = and i32 %bf.lshr, 255, !dbg !3901
  %cmp573 = icmp eq i32 %bf.clear572, 0, !dbg !3902
  br i1 %cmp573, label %cond.true575, label %cond.false583, !dbg !3901

cond.true575:                                     ; preds = %if.then566
  %222 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3903
  %u576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1, !dbg !3903
  %fld577 = bitcast %union.u* %u576 to [1 x %union.rtunion_def]*, !dbg !3903
  %arrayidx578 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld577, i64 0, i64 1, !dbg !3903
  %rt_rtx579 = bitcast %union.rtunion_def* %arrayidx578 to %struct.rtx_def**, !dbg !3903
  %223 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx579, align 8, !dbg !3903
  %224 = bitcast %struct.rtx_def* %223 to i32*, !dbg !3903
  %bf.load580 = load i32, i32* %224, align 8, !dbg !3903
  %bf.lshr581 = lshr i32 %bf.load580, 16, !dbg !3903
  %bf.clear582 = and i32 %bf.lshr581, 255, !dbg !3903
  br label %cond.end591, !dbg !3901

cond.false583:                                    ; preds = %if.then566
  %225 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3904
  %u584 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1, !dbg !3904
  %fld585 = bitcast %union.u* %u584 to [1 x %union.rtunion_def]*, !dbg !3904
  %arrayidx586 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld585, i64 0, i64 0, !dbg !3904
  %rt_rtx587 = bitcast %union.rtunion_def* %arrayidx586 to %struct.rtx_def**, !dbg !3904
  %226 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx587, align 8, !dbg !3904
  %227 = bitcast %struct.rtx_def* %226 to i32*, !dbg !3904
  %bf.load588 = load i32, i32* %227, align 8, !dbg !3904
  %bf.lshr589 = lshr i32 %bf.load588, 16, !dbg !3904
  %bf.clear590 = and i32 %bf.lshr589, 255, !dbg !3904
  br label %cond.end591, !dbg !3901

cond.end591:                                      ; preds = %cond.false583, %cond.true575
  %cond592 = phi i32 [ %bf.clear582, %cond.true575 ], [ %bf.clear590, %cond.false583 ], !dbg !3901
  store i32 %cond592, i32* %cmp_mode, align 4, !dbg !3900
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !3905, metadata !DIExpression()), !dbg !3906
  %228 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3907
  %229 = bitcast %struct.rtx_def* %228 to i32*, !dbg !3907
  %bf.load593 = load i32, i32* %229, align 8, !dbg !3907
  %bf.clear594 = and i32 %bf.load593, 65535, !dbg !3907
  %cmp595 = icmp eq i32 %bf.clear594, 30, !dbg !3907
  br i1 %cmp595, label %land.lhs.true597, label %if.end640, !dbg !3909

land.lhs.true597:                                 ; preds = %cond.end591
  %230 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3910
  %231 = bitcast %struct.rtx_def* %230 to i32*, !dbg !3910
  %bf.load598 = load i32, i32* %231, align 8, !dbg !3910
  %bf.clear599 = and i32 %bf.load598, 65535, !dbg !3910
  %cmp600 = icmp eq i32 %bf.clear599, 30, !dbg !3910
  br i1 %cmp600, label %if.then602, label %if.end640, !dbg !3911

if.then602:                                       ; preds = %land.lhs.true597
  call void @llvm.dbg.declare(metadata i64* %t, metadata !3912, metadata !DIExpression()), !dbg !3914
  %232 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3915
  %u603 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !3915
  %hwint604 = bitcast %union.u* %u603 to [1 x i64]*, !dbg !3915
  %arrayidx605 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint604, i64 0, i64 0, !dbg !3915
  %233 = load i64, i64* %arrayidx605, align 8, !dbg !3915
  store i64 %233, i64* %t, align 8, !dbg !3914
  call void @llvm.dbg.declare(metadata i64* %f, metadata !3916, metadata !DIExpression()), !dbg !3917
  %234 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3918
  %u606 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %234, i32 0, i32 1, !dbg !3918
  %hwint607 = bitcast %union.u* %u606 to [1 x i64]*, !dbg !3918
  %arrayidx608 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint607, i64 0, i64 0, !dbg !3918
  %235 = load i64, i64* %arrayidx608, align 8, !dbg !3918
  store i64 %235, i64* %f, align 8, !dbg !3917
  %236 = load i64, i64* %t, align 8, !dbg !3919
  %cmp609 = icmp eq i64 %236, 1, !dbg !3921
  br i1 %cmp609, label %land.lhs.true611, label %if.else, !dbg !3922

land.lhs.true611:                                 ; preds = %if.then602
  %237 = load i64, i64* %f, align 8, !dbg !3923
  %cmp612 = icmp eq i64 %237, 0, !dbg !3924
  br i1 %cmp612, label %if.then614, label %if.else, !dbg !3925

if.then614:                                       ; preds = %land.lhs.true611
  %238 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3926
  %239 = bitcast %struct.rtx_def* %238 to i32*, !dbg !3926
  %bf.load615 = load i32, i32* %239, align 8, !dbg !3926
  %bf.clear616 = and i32 %bf.load615, 65535, !dbg !3926
  store i32 %bf.clear616, i32* %code.addr, align 4, !dbg !3927
  br label %if.end630, !dbg !3928

if.else:                                          ; preds = %land.lhs.true611, %if.then602
  %240 = load i64, i64* %t, align 8, !dbg !3929
  %cmp617 = icmp eq i64 %240, 0, !dbg !3931
  br i1 %cmp617, label %land.lhs.true619, label %if.else628, !dbg !3932

land.lhs.true619:                                 ; preds = %if.else
  %241 = load i64, i64* %f, align 8, !dbg !3933
  %cmp620 = icmp eq i64 %241, 1, !dbg !3934
  br i1 %cmp620, label %if.then622, label %if.else628, !dbg !3935

if.then622:                                       ; preds = %land.lhs.true619
  call void @llvm.dbg.declare(metadata i32* %tmp, metadata !3936, metadata !DIExpression()), !dbg !3938
  %242 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3939
  %call623 = call i32 @reversed_comparison_code(%struct.rtx_def* %242, %struct.rtx_def* null), !dbg !3940
  store i32 %call623, i32* %tmp, align 4, !dbg !3941
  %243 = load i32, i32* %tmp, align 4, !dbg !3942
  %cmp624 = icmp eq i32 %243, 0, !dbg !3944
  br i1 %cmp624, label %if.then626, label %if.end627, !dbg !3945

if.then626:                                       ; preds = %if.then622
  br label %sw.epilog, !dbg !3946

if.end627:                                        ; preds = %if.then622
  %244 = load i32, i32* %tmp, align 4, !dbg !3947
  store i32 %244, i32* %code.addr, align 4, !dbg !3948
  br label %if.end629, !dbg !3949

if.else628:                                       ; preds = %land.lhs.true619, %if.else
  br label %sw.epilog, !dbg !3950

if.end629:                                        ; preds = %if.end627
  br label %if.end630

if.end630:                                        ; preds = %if.end629, %if.then614
  %245 = load i32, i32* %code.addr, align 4, !dbg !3951
  %246 = load i32, i32* %mode.addr, align 4, !dbg !3952
  %247 = load i32, i32* %cmp_mode, align 4, !dbg !3953
  %248 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3954
  %u631 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %248, i32 0, i32 1, !dbg !3954
  %fld632 = bitcast %union.u* %u631 to [1 x %union.rtunion_def]*, !dbg !3954
  %arrayidx633 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld632, i64 0, i64 0, !dbg !3954
  %rt_rtx634 = bitcast %union.rtunion_def* %arrayidx633 to %struct.rtx_def**, !dbg !3954
  %249 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx634, align 8, !dbg !3954
  %250 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3955
  %u635 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1, !dbg !3955
  %fld636 = bitcast %union.u* %u635 to [1 x %union.rtunion_def]*, !dbg !3955
  %arrayidx637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld636, i64 0, i64 1, !dbg !3955
  %rt_rtx638 = bitcast %union.rtunion_def* %arrayidx637 to %struct.rtx_def**, !dbg !3955
  %251 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx638, align 8, !dbg !3955
  %call639 = call %struct.rtx_def* @simplify_gen_relational(i32 %245, i32 %246, i32 %247, %struct.rtx_def* %249, %struct.rtx_def* %251), !dbg !3956
  store %struct.rtx_def* %call639, %struct.rtx_def** %retval, align 8, !dbg !3957
  br label %return, !dbg !3957

if.end640:                                        ; preds = %land.lhs.true597, %cond.end591
  %252 = load i32, i32* %cmp_mode, align 4, !dbg !3958
  %cmp641 = icmp eq i32 %252, 0, !dbg !3960
  br i1 %cmp641, label %if.then643, label %if.end644, !dbg !3961

if.then643:                                       ; preds = %if.end640
  %253 = load i32, i32* %op0_mode.addr, align 4, !dbg !3962
  store i32 %253, i32* %cmp_mode, align 4, !dbg !3963
  br label %if.end644, !dbg !3964

if.end644:                                        ; preds = %if.then643, %if.end640
  %254 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3965
  %255 = bitcast %struct.rtx_def* %254 to i32*, !dbg !3965
  %bf.load645 = load i32, i32* %255, align 8, !dbg !3965
  %bf.clear646 = and i32 %bf.load645, 65535, !dbg !3965
  %256 = load i32, i32* %op0_mode.addr, align 4, !dbg !3966
  %257 = load i32, i32* %cmp_mode, align 4, !dbg !3967
  %258 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3968
  %u647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %258, i32 0, i32 1, !dbg !3968
  %fld648 = bitcast %union.u* %u647 to [1 x %union.rtunion_def]*, !dbg !3968
  %arrayidx649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld648, i64 0, i64 0, !dbg !3968
  %rt_rtx650 = bitcast %union.rtunion_def* %arrayidx649 to %struct.rtx_def**, !dbg !3968
  %259 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx650, align 8, !dbg !3968
  %260 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3969
  %u651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %260, i32 0, i32 1, !dbg !3969
  %fld652 = bitcast %union.u* %u651 to [1 x %union.rtunion_def]*, !dbg !3969
  %arrayidx653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld652, i64 0, i64 1, !dbg !3969
  %rt_rtx654 = bitcast %union.rtunion_def* %arrayidx653 to %struct.rtx_def**, !dbg !3969
  %261 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx654, align 8, !dbg !3969
  %call655 = call %struct.rtx_def* @simplify_relational_operation(i32 %bf.clear646, i32 %256, i32 %257, %struct.rtx_def* %259, %struct.rtx_def* %261), !dbg !3970
  store %struct.rtx_def* %call655, %struct.rtx_def** %temp, align 8, !dbg !3971
  %262 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !3972
  %tobool656 = icmp ne %struct.rtx_def* %262, null, !dbg !3972
  br i1 %tobool656, label %if.then657, label %if.end675, !dbg !3974

if.then657:                                       ; preds = %if.end644
  %263 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !3975
  %264 = bitcast %struct.rtx_def* %263 to i32*, !dbg !3975
  %bf.load658 = load i32, i32* %264, align 8, !dbg !3975
  %bf.clear659 = and i32 %bf.load658, 65535, !dbg !3975
  %cmp660 = icmp eq i32 %bf.clear659, 30, !dbg !3975
  br i1 %cmp660, label %if.then662, label %if.else669, !dbg !3978

if.then662:                                       ; preds = %if.then657
  %265 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !3979
  %266 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !3980
  %cmp663 = icmp eq %struct.rtx_def* %265, %266, !dbg !3981
  br i1 %cmp663, label %cond.true665, label %cond.false666, !dbg !3979

cond.true665:                                     ; preds = %if.then662
  %267 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3982
  br label %cond.end667, !dbg !3979

cond.false666:                                    ; preds = %if.then662
  %268 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3983
  br label %cond.end667, !dbg !3979

cond.end667:                                      ; preds = %cond.false666, %cond.true665
  %cond668 = phi %struct.rtx_def* [ %267, %cond.true665 ], [ %268, %cond.false666 ], !dbg !3979
  store %struct.rtx_def* %cond668, %struct.rtx_def** %retval, align 8, !dbg !3984
  br label %return, !dbg !3984

if.else669:                                       ; preds = %if.then657
  %269 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !3985
  %tobool670 = icmp ne %struct.rtx_def* %269, null, !dbg !3985
  br i1 %tobool670, label %if.then671, label %if.end673, !dbg !3987

if.then671:                                       ; preds = %if.else669
  %270 = load i32, i32* %mode.addr, align 4, !dbg !3988
  %271 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !3988
  %272 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3988
  %273 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3988
  %call672 = call %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32 47, i32 %270, %struct.rtx_def* %271, %struct.rtx_def* %272, %struct.rtx_def* %273), !dbg !3988
  store %struct.rtx_def* %call672, %struct.rtx_def** %retval, align 8, !dbg !3989
  br label %return, !dbg !3989

if.end673:                                        ; preds = %if.else669
  br label %if.end674

if.end674:                                        ; preds = %if.end673
  br label %if.end675, !dbg !3990

if.end675:                                        ; preds = %if.end674, %if.end644
  br label %if.end676, !dbg !3991

if.end676:                                        ; preds = %if.end675, %land.lhs.true563, %if.end555
  br label %sw.epilog, !dbg !3992

sw.bb677:                                         ; preds = %if.end
  %274 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !3993
  %275 = bitcast %struct.rtx_def* %274 to i32*, !dbg !3993
  %bf.load678 = load i32, i32* %275, align 8, !dbg !3993
  %bf.lshr679 = lshr i32 %bf.load678, 16, !dbg !3993
  %bf.clear680 = and i32 %bf.lshr679, 255, !dbg !3993
  %276 = load i32, i32* %mode.addr, align 4, !dbg !3993
  %cmp681 = icmp eq i32 %bf.clear680, %276, !dbg !3993
  br i1 %cmp681, label %cond.false684, label %cond.true683, !dbg !3993

cond.true683:                                     ; preds = %sw.bb677
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4781, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3993
  br label %cond.end685, !dbg !3993

cond.false684:                                    ; preds = %sw.bb677
  br label %cond.end685, !dbg !3993

cond.end685:                                      ; preds = %cond.false684, %cond.true683
  %cond686 = phi i32 [ 0, %cond.true683 ], [ 0, %cond.false684 ], !dbg !3993
  %277 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !3994
  %278 = bitcast %struct.rtx_def* %277 to i32*, !dbg !3994
  %bf.load687 = load i32, i32* %278, align 8, !dbg !3994
  %bf.lshr688 = lshr i32 %bf.load687, 16, !dbg !3994
  %bf.clear689 = and i32 %bf.lshr688, 255, !dbg !3994
  %279 = load i32, i32* %mode.addr, align 4, !dbg !3994
  %cmp690 = icmp eq i32 %bf.clear689, %279, !dbg !3994
  br i1 %cmp690, label %cond.false693, label %cond.true692, !dbg !3994

cond.true692:                                     ; preds = %cond.end685
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4782, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3994
  br label %cond.end694, !dbg !3994

cond.false693:                                    ; preds = %cond.end685
  br label %cond.end694, !dbg !3994

cond.end694:                                      ; preds = %cond.false693, %cond.true692
  %cond695 = phi i32 [ 0, %cond.true692 ], [ 0, %cond.false693 ], !dbg !3994
  %280 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom696 = zext i32 %280 to i64, !dbg !3995
  %arrayidx697 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom696, !dbg !3995
  %281 = load i8, i8* %arrayidx697, align 1, !dbg !3995
  %conv698 = zext i8 %281 to i32, !dbg !3995
  %cmp699 = icmp eq i32 %conv698, 12, !dbg !3995
  br i1 %cmp699, label %cond.false732, label %lor.lhs.false701, !dbg !3995

lor.lhs.false701:                                 ; preds = %cond.end694
  %282 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom702 = zext i32 %282 to i64, !dbg !3995
  %arrayidx703 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom702, !dbg !3995
  %283 = load i8, i8* %arrayidx703, align 1, !dbg !3995
  %conv704 = zext i8 %283 to i32, !dbg !3995
  %cmp705 = icmp eq i32 %conv704, 17, !dbg !3995
  br i1 %cmp705, label %cond.false732, label %lor.lhs.false707, !dbg !3995

lor.lhs.false707:                                 ; preds = %lor.lhs.false701
  %284 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom708 = zext i32 %284 to i64, !dbg !3995
  %arrayidx709 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom708, !dbg !3995
  %285 = load i8, i8* %arrayidx709, align 1, !dbg !3995
  %conv710 = zext i8 %285 to i32, !dbg !3995
  %cmp711 = icmp eq i32 %conv710, 13, !dbg !3995
  br i1 %cmp711, label %cond.false732, label %lor.lhs.false713, !dbg !3995

lor.lhs.false713:                                 ; preds = %lor.lhs.false707
  %286 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom714 = zext i32 %286 to i64, !dbg !3995
  %arrayidx715 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom714, !dbg !3995
  %287 = load i8, i8* %arrayidx715, align 1, !dbg !3995
  %conv716 = zext i8 %287 to i32, !dbg !3995
  %cmp717 = icmp eq i32 %conv716, 14, !dbg !3995
  br i1 %cmp717, label %cond.false732, label %lor.lhs.false719, !dbg !3995

lor.lhs.false719:                                 ; preds = %lor.lhs.false713
  %288 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom720 = zext i32 %288 to i64, !dbg !3995
  %arrayidx721 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom720, !dbg !3995
  %289 = load i8, i8* %arrayidx721, align 1, !dbg !3995
  %conv722 = zext i8 %289 to i32, !dbg !3995
  %cmp723 = icmp eq i32 %conv722, 15, !dbg !3995
  br i1 %cmp723, label %cond.false732, label %lor.lhs.false725, !dbg !3995

lor.lhs.false725:                                 ; preds = %lor.lhs.false719
  %290 = load i32, i32* %mode.addr, align 4, !dbg !3995
  %idxprom726 = zext i32 %290 to i64, !dbg !3995
  %arrayidx727 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom726, !dbg !3995
  %291 = load i8, i8* %arrayidx727, align 1, !dbg !3995
  %conv728 = zext i8 %291 to i32, !dbg !3995
  %cmp729 = icmp eq i32 %conv728, 16, !dbg !3995
  br i1 %cmp729, label %cond.false732, label %cond.true731, !dbg !3995

cond.true731:                                     ; preds = %lor.lhs.false725
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4783, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3995
  br label %cond.end733, !dbg !3995

cond.false732:                                    ; preds = %lor.lhs.false725, %lor.lhs.false719, %lor.lhs.false713, %lor.lhs.false707, %lor.lhs.false701, %cond.end694
  br label %cond.end733, !dbg !3995

cond.end733:                                      ; preds = %cond.false732, %cond.true731
  %cond734 = phi i32 [ 0, %cond.true731 ], [ 0, %cond.false732 ], !dbg !3995
  %292 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3996
  %call735 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %292), !dbg !3997
  store %struct.rtx_def* %call735, %struct.rtx_def** %op2.addr, align 8, !dbg !3998
  %293 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !3999
  %294 = bitcast %struct.rtx_def* %293 to i32*, !dbg !3999
  %bf.load736 = load i32, i32* %294, align 8, !dbg !3999
  %bf.clear737 = and i32 %bf.load736, 65535, !dbg !3999
  %cmp738 = icmp eq i32 %bf.clear737, 30, !dbg !3999
  br i1 %cmp738, label %if.then740, label %if.end815, !dbg !4001

if.then740:                                       ; preds = %cond.end733
  call void @llvm.dbg.declare(metadata i32* %elt_size, metadata !4002, metadata !DIExpression()), !dbg !4004
  %295 = load i32, i32* %mode.addr, align 4, !dbg !4005
  %idxprom741 = zext i32 %295 to i64, !dbg !4005
  %arrayidx742 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom741, !dbg !4005
  %296 = load i8, i8* %arrayidx742, align 1, !dbg !4005
  %conv743 = zext i8 %296 to i32, !dbg !4005
  %idxprom744 = zext i32 %conv743 to i64, !dbg !4005
  %arrayidx745 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom744, !dbg !4005
  %297 = load i8, i8* %arrayidx745, align 1, !dbg !4005
  %conv746 = zext i8 %297 to i16, !dbg !4005
  %conv747 = zext i16 %conv746 to i32, !dbg !4005
  store i32 %conv747, i32* %elt_size, align 4, !dbg !4004
  call void @llvm.dbg.declare(metadata i32* %n_elts, metadata !4006, metadata !DIExpression()), !dbg !4007
  %298 = load i32, i32* %mode.addr, align 4, !dbg !4008
  %idxprom748 = zext i32 %298 to i64, !dbg !4008
  %arrayidx749 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom748, !dbg !4008
  %299 = load i8, i8* %arrayidx749, align 1, !dbg !4008
  %conv750 = zext i8 %299 to i16, !dbg !4008
  %conv751 = zext i16 %conv750 to i32, !dbg !4008
  %300 = load i32, i32* %elt_size, align 4, !dbg !4009
  %div = sdiv i32 %conv751, %300, !dbg !4010
  store i32 %div, i32* %n_elts, align 4, !dbg !4007
  call void @llvm.dbg.declare(metadata i32* %mask, metadata !4011, metadata !DIExpression()), !dbg !4012
  %301 = load i32, i32* %n_elts, align 4, !dbg !4013
  %shl752 = shl i32 1, %301, !dbg !4014
  %sub753 = sub nsw i32 %shl752, 1, !dbg !4015
  store i32 %sub753, i32* %mask, align 4, !dbg !4012
  %302 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !4016
  %u754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1, !dbg !4016
  %hwint755 = bitcast %union.u* %u754 to [1 x i64]*, !dbg !4016
  %arrayidx756 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint755, i64 0, i64 0, !dbg !4016
  %303 = load i64, i64* %arrayidx756, align 8, !dbg !4016
  %304 = load i32, i32* %mask, align 4, !dbg !4018
  %conv757 = sext i32 %304 to i64, !dbg !4018
  %and758 = and i64 %303, %conv757, !dbg !4019
  %tobool759 = icmp ne i64 %and758, 0, !dbg !4019
  br i1 %tobool759, label %if.end761, label %if.then760, !dbg !4020

if.then760:                                       ; preds = %if.then740
  %305 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4021
  store %struct.rtx_def* %305, %struct.rtx_def** %retval, align 8, !dbg !4022
  br label %return, !dbg !4022

if.end761:                                        ; preds = %if.then740
  %306 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !4023
  %u762 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %306, i32 0, i32 1, !dbg !4023
  %hwint763 = bitcast %union.u* %u762 to [1 x i64]*, !dbg !4023
  %arrayidx764 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint763, i64 0, i64 0, !dbg !4023
  %307 = load i64, i64* %arrayidx764, align 8, !dbg !4023
  %308 = load i32, i32* %mask, align 4, !dbg !4025
  %conv765 = sext i32 %308 to i64, !dbg !4025
  %and766 = and i64 %307, %conv765, !dbg !4026
  %309 = load i32, i32* %mask, align 4, !dbg !4027
  %conv767 = sext i32 %309 to i64, !dbg !4027
  %cmp768 = icmp eq i64 %and766, %conv767, !dbg !4028
  br i1 %cmp768, label %if.then770, label %if.end771, !dbg !4029

if.then770:                                       ; preds = %if.end761
  %310 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4030
  store %struct.rtx_def* %310, %struct.rtx_def** %retval, align 8, !dbg !4031
  br label %return, !dbg !4031

if.end771:                                        ; preds = %if.end761
  %311 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4032
  %call772 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %311), !dbg !4033
  store %struct.rtx_def* %call772, %struct.rtx_def** %op0.addr, align 8, !dbg !4034
  %312 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4035
  %call773 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %312), !dbg !4036
  store %struct.rtx_def* %call773, %struct.rtx_def** %op1.addr, align 8, !dbg !4037
  %313 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4038
  %314 = bitcast %struct.rtx_def* %313 to i32*, !dbg !4038
  %bf.load774 = load i32, i32* %314, align 8, !dbg !4038
  %bf.clear775 = and i32 %bf.load774, 65535, !dbg !4038
  %cmp776 = icmp eq i32 %bf.clear775, 33, !dbg !4040
  br i1 %cmp776, label %land.lhs.true778, label %if.end814, !dbg !4041

land.lhs.true778:                                 ; preds = %if.end771
  %315 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4042
  %316 = bitcast %struct.rtx_def* %315 to i32*, !dbg !4042
  %bf.load779 = load i32, i32* %316, align 8, !dbg !4042
  %bf.clear780 = and i32 %bf.load779, 65535, !dbg !4042
  %cmp781 = icmp eq i32 %bf.clear780, 33, !dbg !4043
  br i1 %cmp781, label %if.then783, label %if.end814, !dbg !4044

if.then783:                                       ; preds = %land.lhs.true778
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v, metadata !4045, metadata !DIExpression()), !dbg !4047
  %317 = load i32, i32* %n_elts, align 4, !dbg !4048
  %call784 = call %struct.rtvec_def* @rtvec_alloc(i32 %317), !dbg !4049
  store %struct.rtvec_def* %call784, %struct.rtvec_def** %v, align 8, !dbg !4047
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4050, metadata !DIExpression()), !dbg !4051
  store i32 0, i32* %i, align 4, !dbg !4052
  br label %for.cond, !dbg !4054

for.cond:                                         ; preds = %for.inc, %if.then783
  %318 = load i32, i32* %i, align 4, !dbg !4055
  %319 = load i32, i32* %n_elts, align 4, !dbg !4057
  %cmp785 = icmp ult i32 %318, %319, !dbg !4058
  br i1 %cmp785, label %for.body, label %for.end, !dbg !4059

for.body:                                         ; preds = %for.cond
  %320 = load %struct.rtx_def*, %struct.rtx_def** %op2.addr, align 8, !dbg !4060
  %u787 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %320, i32 0, i32 1, !dbg !4060
  %hwint788 = bitcast %union.u* %u787 to [1 x i64]*, !dbg !4060
  %arrayidx789 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint788, i64 0, i64 0, !dbg !4060
  %321 = load i64, i64* %arrayidx789, align 8, !dbg !4060
  %322 = load i32, i32* %i, align 4, !dbg !4061
  %shl790 = shl i32 1, %322, !dbg !4062
  %conv791 = sext i32 %shl790 to i64, !dbg !4063
  %and792 = and i64 %321, %conv791, !dbg !4064
  %tobool793 = icmp ne i64 %and792, 0, !dbg !4064
  br i1 %tobool793, label %cond.true794, label %cond.false800, !dbg !4060

cond.true794:                                     ; preds = %for.body
  %323 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4065
  %u795 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %323, i32 0, i32 1, !dbg !4065
  %fld796 = bitcast %union.u* %u795 to [1 x %union.rtunion_def]*, !dbg !4065
  %arrayidx797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld796, i64 0, i64 0, !dbg !4065
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx797 to %struct.rtvec_def**, !dbg !4065
  %324 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4065
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %324, i32 0, i32 1, !dbg !4065
  %325 = load i32, i32* %i, align 4, !dbg !4065
  %idxprom798 = zext i32 %325 to i64, !dbg !4065
  %arrayidx799 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom798, !dbg !4065
  %326 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx799, align 8, !dbg !4065
  br label %cond.end808, !dbg !4060

cond.false800:                                    ; preds = %for.body
  %327 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4066
  %u801 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %327, i32 0, i32 1, !dbg !4066
  %fld802 = bitcast %union.u* %u801 to [1 x %union.rtunion_def]*, !dbg !4066
  %arrayidx803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld802, i64 0, i64 0, !dbg !4066
  %rt_rtvec804 = bitcast %union.rtunion_def* %arrayidx803 to %struct.rtvec_def**, !dbg !4066
  %328 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec804, align 8, !dbg !4066
  %elem805 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %328, i32 0, i32 1, !dbg !4066
  %329 = load i32, i32* %i, align 4, !dbg !4066
  %idxprom806 = zext i32 %329 to i64, !dbg !4066
  %arrayidx807 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem805, i64 0, i64 %idxprom806, !dbg !4066
  %330 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx807, align 8, !dbg !4066
  br label %cond.end808, !dbg !4060

cond.end808:                                      ; preds = %cond.false800, %cond.true794
  %cond809 = phi %struct.rtx_def* [ %326, %cond.true794 ], [ %330, %cond.false800 ], !dbg !4060
  %331 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !4067
  %elem810 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %331, i32 0, i32 1, !dbg !4067
  %332 = load i32, i32* %i, align 4, !dbg !4067
  %idxprom811 = zext i32 %332 to i64, !dbg !4067
  %arrayidx812 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem810, i64 0, i64 %idxprom811, !dbg !4067
  store %struct.rtx_def* %cond809, %struct.rtx_def** %arrayidx812, align 8, !dbg !4068
  br label %for.inc, !dbg !4067

for.inc:                                          ; preds = %cond.end808
  %333 = load i32, i32* %i, align 4, !dbg !4069
  %inc = add i32 %333, 1, !dbg !4069
  store i32 %inc, i32* %i, align 4, !dbg !4069
  br label %for.cond, !dbg !4070, !llvm.loop !4071

for.end:                                          ; preds = %for.cond
  %334 = load i32, i32* %mode.addr, align 4, !dbg !4073
  %335 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !4074
  %call813 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %334, %struct.rtvec_def* %335), !dbg !4075
  store %struct.rtx_def* %call813, %struct.rtx_def** %retval, align 8, !dbg !4076
  br label %return, !dbg !4076

if.end814:                                        ; preds = %land.lhs.true778, %if.end771
  br label %if.end815, !dbg !4077

if.end815:                                        ; preds = %if.end814, %cond.end733
  br label %sw.epilog, !dbg !4078

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4814, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4079
  br label %sw.epilog, !dbg !4080

sw.epilog:                                        ; preds = %sw.default, %if.end815, %if.end676, %if.else628, %if.then626, %if.end78
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4081
  br label %return, !dbg !4081

return:                                           ; preds = %sw.epilog, %for.end, %if.then770, %if.then760, %if.then671, %cond.end667, %if.end630, %if.then554, %if.then321, %if.then93, %cond.end, %if.end77
  %336 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4082
  ret %struct.rtx_def* %336, !dbg !4082
}

declare dso_local %struct.rtx_def* @gen_rtx_fmt_eee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_gen_relational(i32 %code, i32 %mode, i32 %cmp_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !4083 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %cmp_mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4086, metadata !DIExpression()), !dbg !4087
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4088, metadata !DIExpression()), !dbg !4089
  store i32 %cmp_mode, i32* %cmp_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmp_mode.addr, metadata !4090, metadata !DIExpression()), !dbg !4091
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !4092, metadata !DIExpression()), !dbg !4093
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !4094, metadata !DIExpression()), !dbg !4095
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !4096, metadata !DIExpression()), !dbg !4097
  %0 = load i32, i32* %code.addr, align 4, !dbg !4098
  %1 = load i32, i32* %mode.addr, align 4, !dbg !4100
  %2 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4101
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4102
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4103
  %call = call %struct.rtx_def* @simplify_relational_operation(i32 %0, i32 %1, i32 %2, %struct.rtx_def* %3, %struct.rtx_def* %4), !dbg !4104
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !4105
  %cmp = icmp ne %struct.rtx_def* null, %call, !dbg !4106
  br i1 %cmp, label %if.then, label %if.end, !dbg !4107

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4108
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !4109
  br label %return, !dbg !4109

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %code.addr, align 4, !dbg !4110
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4110
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4110
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4110
  %call1 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %6, i32 %7, %struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !4110
  store %struct.rtx_def* %call1, %struct.rtx_def** %retval, align 8, !dbg !4111
  br label %return, !dbg !4111

return:                                           ; preds = %if.end, %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4112
  ret %struct.rtx_def* %10, !dbg !4112
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_relational_operation(i32 %code, i32 %mode, i32 %cmp_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !4113 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %cmp_mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %trueop0 = alloca %struct.rtx_def*, align 8
  %trueop1 = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4114, metadata !DIExpression()), !dbg !4115
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4116, metadata !DIExpression()), !dbg !4117
  store i32 %cmp_mode, i32* %cmp_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmp_mode.addr, metadata !4118, metadata !DIExpression()), !dbg !4119
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !4120, metadata !DIExpression()), !dbg !4121
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !4122, metadata !DIExpression()), !dbg !4123
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !4124, metadata !DIExpression()), !dbg !4125
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop0, metadata !4126, metadata !DIExpression()), !dbg !4127
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop1, metadata !4128, metadata !DIExpression()), !dbg !4129
  %0 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4130
  %cmp = icmp eq i32 %0, 0, !dbg !4132
  br i1 %cmp, label %if.then, label %if.end, !dbg !4133

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4134
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !4134
  %bf.load = load i32, i32* %2, align 8, !dbg !4134
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4134
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4134
  store i32 %bf.clear, i32* %cmp_mode.addr, align 4, !dbg !4135
  br label %if.end, !dbg !4136

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4137
  %cmp1 = icmp eq i32 %3, 0, !dbg !4139
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !4140

if.then2:                                         ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4141
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4141
  %bf.load3 = load i32, i32* %5, align 8, !dbg !4141
  %bf.lshr4 = lshr i32 %bf.load3, 16, !dbg !4141
  %bf.clear5 = and i32 %bf.lshr4, 255, !dbg !4141
  store i32 %bf.clear5, i32* %cmp_mode.addr, align 4, !dbg !4142
  br label %if.end6, !dbg !4143

if.end6:                                          ; preds = %if.then2, %if.end
  %6 = load i32, i32* %code.addr, align 4, !dbg !4144
  %7 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4145
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4146
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4147
  %call = call %struct.rtx_def* @simplify_const_relational_operation(i32 %6, i32 %7, %struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !4148
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !4149
  %10 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4150
  %tobool = icmp ne %struct.rtx_def* %10, null, !dbg !4150
  br i1 %tobool, label %if.then7, label %if.end66, !dbg !4152

if.then7:                                         ; preds = %if.end6
  %11 = load i32, i32* %mode.addr, align 4, !dbg !4153
  %idxprom = zext i32 %11 to i64, !dbg !4153
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4153
  %12 = load i8, i8* %arrayidx, align 1, !dbg !4153
  %conv = zext i8 %12 to i32, !dbg !4153
  %cmp8 = icmp eq i32 %conv, 8, !dbg !4153
  br i1 %cmp8, label %if.then15, label %lor.lhs.false, !dbg !4153

lor.lhs.false:                                    ; preds = %if.then7
  %13 = load i32, i32* %mode.addr, align 4, !dbg !4153
  %idxprom10 = zext i32 %13 to i64, !dbg !4153
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom10, !dbg !4153
  %14 = load i8, i8* %arrayidx11, align 1, !dbg !4153
  %conv12 = zext i8 %14 to i32, !dbg !4153
  %cmp13 = icmp eq i32 %conv12, 9, !dbg !4153
  br i1 %cmp13, label %if.then15, label %if.end22, !dbg !4156

if.then15:                                        ; preds = %lor.lhs.false, %if.then7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4157
  %16 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4160
  %cmp16 = icmp eq %struct.rtx_def* %15, %16, !dbg !4161
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !4162

if.then18:                                        ; preds = %if.then15
  %17 = load i32, i32* %mode.addr, align 4, !dbg !4163
  %idxprom19 = sext i32 %17 to i64, !dbg !4163
  %arrayidx20 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom19, !dbg !4163
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx20, align 8, !dbg !4163
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !4164
  br label %return, !dbg !4164

if.end21:                                         ; preds = %if.then15
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4165
  br label %return, !dbg !4165

if.end22:                                         ; preds = %lor.lhs.false
  %19 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom23 = zext i32 %19 to i64, !dbg !4166
  %arrayidx24 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom23, !dbg !4166
  %20 = load i8, i8* %arrayidx24, align 1, !dbg !4166
  %conv25 = zext i8 %20 to i32, !dbg !4166
  %cmp26 = icmp eq i32 %conv25, 12, !dbg !4166
  br i1 %cmp26, label %if.then58, label %lor.lhs.false28, !dbg !4166

lor.lhs.false28:                                  ; preds = %if.end22
  %21 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom29 = zext i32 %21 to i64, !dbg !4166
  %arrayidx30 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom29, !dbg !4166
  %22 = load i8, i8* %arrayidx30, align 1, !dbg !4166
  %conv31 = zext i8 %22 to i32, !dbg !4166
  %cmp32 = icmp eq i32 %conv31, 17, !dbg !4166
  br i1 %cmp32, label %if.then58, label %lor.lhs.false34, !dbg !4166

lor.lhs.false34:                                  ; preds = %lor.lhs.false28
  %23 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom35 = zext i32 %23 to i64, !dbg !4166
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom35, !dbg !4166
  %24 = load i8, i8* %arrayidx36, align 1, !dbg !4166
  %conv37 = zext i8 %24 to i32, !dbg !4166
  %cmp38 = icmp eq i32 %conv37, 13, !dbg !4166
  br i1 %cmp38, label %if.then58, label %lor.lhs.false40, !dbg !4166

lor.lhs.false40:                                  ; preds = %lor.lhs.false34
  %25 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom41 = zext i32 %25 to i64, !dbg !4166
  %arrayidx42 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom41, !dbg !4166
  %26 = load i8, i8* %arrayidx42, align 1, !dbg !4166
  %conv43 = zext i8 %26 to i32, !dbg !4166
  %cmp44 = icmp eq i32 %conv43, 14, !dbg !4166
  br i1 %cmp44, label %if.then58, label %lor.lhs.false46, !dbg !4166

lor.lhs.false46:                                  ; preds = %lor.lhs.false40
  %27 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom47 = zext i32 %27 to i64, !dbg !4166
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom47, !dbg !4166
  %28 = load i8, i8* %arrayidx48, align 1, !dbg !4166
  %conv49 = zext i8 %28 to i32, !dbg !4166
  %cmp50 = icmp eq i32 %conv49, 15, !dbg !4166
  br i1 %cmp50, label %if.then58, label %lor.lhs.false52, !dbg !4166

lor.lhs.false52:                                  ; preds = %lor.lhs.false46
  %29 = load i32, i32* %mode.addr, align 4, !dbg !4166
  %idxprom53 = zext i32 %29 to i64, !dbg !4166
  %arrayidx54 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom53, !dbg !4166
  %30 = load i8, i8* %arrayidx54, align 1, !dbg !4166
  %conv55 = zext i8 %30 to i32, !dbg !4166
  %cmp56 = icmp eq i32 %conv55, 16, !dbg !4166
  br i1 %cmp56, label %if.then58, label %if.end65, !dbg !4168

if.then58:                                        ; preds = %lor.lhs.false52, %lor.lhs.false46, %lor.lhs.false40, %lor.lhs.false34, %lor.lhs.false28, %if.end22
  %31 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4169
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4172
  %cmp59 = icmp eq %struct.rtx_def* %31, %32, !dbg !4173
  br i1 %cmp59, label %if.then61, label %if.end64, !dbg !4174

if.then61:                                        ; preds = %if.then58
  %33 = load i32, i32* %mode.addr, align 4, !dbg !4175
  %idxprom62 = sext i32 %33 to i64, !dbg !4175
  %arrayidx63 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom62, !dbg !4175
  %34 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx63, align 8, !dbg !4175
  store %struct.rtx_def* %34, %struct.rtx_def** %retval, align 8, !dbg !4176
  br label %return, !dbg !4176

if.end64:                                         ; preds = %if.then58
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4177
  br label %return, !dbg !4177

if.end65:                                         ; preds = %lor.lhs.false52
  %35 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4178
  store %struct.rtx_def* %35, %struct.rtx_def** %retval, align 8, !dbg !4179
  br label %return, !dbg !4179

if.end66:                                         ; preds = %if.end6
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4180
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4182
  %call67 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !4183
  %conv68 = zext i8 %call67 to i32, !dbg !4183
  %tobool69 = icmp ne i32 %conv68, 0, !dbg !4183
  br i1 %tobool69, label %if.then75, label %lor.lhs.false70, !dbg !4184

lor.lhs.false70:                                  ; preds = %if.end66
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4185
  %39 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4186
  %cmp71 = icmp eq %struct.rtx_def* %38, %39, !dbg !4187
  br i1 %cmp71, label %land.lhs.true, label %if.end77, !dbg !4188

land.lhs.true:                                    ; preds = %lor.lhs.false70
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4189
  %41 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4190
  %cmp73 = icmp ne %struct.rtx_def* %40, %41, !dbg !4191
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !4192

if.then75:                                        ; preds = %land.lhs.true, %if.end66
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4193
  store %struct.rtx_def* %42, %struct.rtx_def** %tem, align 8, !dbg !4194
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4195
  store %struct.rtx_def* %43, %struct.rtx_def** %op0.addr, align 8, !dbg !4196
  %44 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !4197
  store %struct.rtx_def* %44, %struct.rtx_def** %op1.addr, align 8, !dbg !4198
  %45 = load i32, i32* %code.addr, align 4, !dbg !4199
  %call76 = call i32 @swap_condition(i32 %45), !dbg !4200
  store i32 %call76, i32* %code.addr, align 4, !dbg !4201
  br label %if.end77, !dbg !4202

if.end77:                                         ; preds = %if.then75, %land.lhs.true, %lor.lhs.false70
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4203
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !4203
  %bf.load78 = load i32, i32* %47, align 8, !dbg !4203
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4203
  %cmp80 = icmp eq i32 %bf.clear79, 48, !dbg !4205
  br i1 %cmp80, label %land.lhs.true82, label %if.end92, !dbg !4206

land.lhs.true82:                                  ; preds = %if.end77
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4207
  %49 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !4208
  %cmp83 = icmp eq %struct.rtx_def* %48, %49, !dbg !4209
  br i1 %cmp83, label %if.then85, label %if.end92, !dbg !4210

if.then85:                                        ; preds = %land.lhs.true82
  %50 = load i32, i32* %code.addr, align 4, !dbg !4211
  %51 = load i32, i32* %mode.addr, align 4, !dbg !4212
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4213
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !4213
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4213
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4213
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !4213
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4213
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4214
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !4214
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !4214
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 1, !dbg !4214
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !4214
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !4214
  %call91 = call %struct.rtx_def* @simplify_gen_relational(i32 %50, i32 %51, i32 0, %struct.rtx_def* %53, %struct.rtx_def* %55), !dbg !4215
  store %struct.rtx_def* %call91, %struct.rtx_def** %retval, align 8, !dbg !4216
  br label %return, !dbg !4216

if.end92:                                         ; preds = %land.lhs.true82, %if.end77
  %56 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4217
  %idxprom93 = zext i32 %56 to i64, !dbg !4217
  %arrayidx94 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom93, !dbg !4217
  %57 = load i8, i8* %arrayidx94, align 1, !dbg !4217
  %conv95 = zext i8 %57 to i32, !dbg !4217
  %cmp96 = icmp eq i32 %conv95, 1, !dbg !4219
  br i1 %cmp96, label %if.then100, label %lor.lhs.false98, !dbg !4220

lor.lhs.false98:                                  ; preds = %if.end92
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4221
  %tobool99 = icmp ne %struct.rtx_def* %58, null, !dbg !4221
  br i1 %tobool99, label %cond.true, label %cond.false, !dbg !4222

cond.true:                                        ; preds = %lor.lhs.false98
  br i1 false, label %if.then100, label %if.end101, !dbg !4221

cond.false:                                       ; preds = %lor.lhs.false98
  br i1 false, label %if.then100, label %if.end101, !dbg !4222

if.then100:                                       ; preds = %cond.false, %cond.true, %if.end92
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4223
  br label %return, !dbg !4223

if.end101:                                        ; preds = %cond.false, %cond.true
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !4224
  %call102 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %59), !dbg !4225
  store %struct.rtx_def* %call102, %struct.rtx_def** %trueop0, align 8, !dbg !4226
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !4227
  %call103 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %60), !dbg !4228
  store %struct.rtx_def* %call103, %struct.rtx_def** %trueop1, align 8, !dbg !4229
  %61 = load i32, i32* %code.addr, align 4, !dbg !4230
  %62 = load i32, i32* %mode.addr, align 4, !dbg !4231
  %63 = load i32, i32* %cmp_mode.addr, align 4, !dbg !4232
  %64 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !4233
  %65 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !4234
  %call104 = call %struct.rtx_def* @simplify_relational_operation_1(i32 %61, i32 %62, i32 %63, %struct.rtx_def* %64, %struct.rtx_def* %65), !dbg !4235
  store %struct.rtx_def* %call104, %struct.rtx_def** %retval, align 8, !dbg !4236
  br label %return, !dbg !4236

return:                                           ; preds = %if.end101, %if.then100, %if.then85, %if.end65, %if.end64, %if.then61, %if.end21, %if.then18
  %66 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4237
  ret %struct.rtx_def* %66, !dbg !4237
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %x, %struct.rtx_def* %old_rtx, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fn, i8* %data) #0 !dbg !4238 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %old_rtx.addr = alloca %struct.rtx_def*, align 8
  %fn.addr = alloca %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, align 8
  %data.addr = alloca i8*, align 8
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  %op_mode = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  %op2 = alloca %struct.rtx_def*, align 8
  %newx = alloca %struct.rtx_def*, align 8
  %op = alloca %struct.rtx_def*, align 8
  %vec = alloca %struct.rtvec_def*, align 8
  %newvec = alloca %struct.rtvec_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4244, metadata !DIExpression()), !dbg !4245
  store %struct.rtx_def* %old_rtx, %struct.rtx_def** %old_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_rtx.addr, metadata !4246, metadata !DIExpression()), !dbg !4247
  store %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %fn, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, metadata !4248, metadata !DIExpression()), !dbg !4249
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4250, metadata !DIExpression()), !dbg !4251
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4252, metadata !DIExpression()), !dbg !4253
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4254
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4254
  %bf.load = load i32, i32* %1, align 8, !dbg !4254
  %bf.clear = and i32 %bf.load, 65535, !dbg !4254
  store i32 %bf.clear, i32* %code, align 4, !dbg !4253
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !4255, metadata !DIExpression()), !dbg !4256
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4257
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4257
  %bf.load1 = load i32, i32* %3, align 8, !dbg !4257
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !4257
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !4257
  store i32 %bf.clear2, i32* %mode, align 4, !dbg !4256
  call void @llvm.dbg.declare(metadata i32* %op_mode, metadata !4258, metadata !DIExpression()), !dbg !4259
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4260, metadata !DIExpression()), !dbg !4261
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !4262, metadata !DIExpression()), !dbg !4263
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !4264, metadata !DIExpression()), !dbg !4265
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op2, metadata !4266, metadata !DIExpression()), !dbg !4267
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newx, metadata !4268, metadata !DIExpression()), !dbg !4269
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op, metadata !4270, metadata !DIExpression()), !dbg !4271
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %vec, metadata !4272, metadata !DIExpression()), !dbg !4273
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %newvec, metadata !4274, metadata !DIExpression()), !dbg !4275
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4276, metadata !DIExpression()), !dbg !4277
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4278, metadata !DIExpression()), !dbg !4279
  %4 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4280
  %cmp = icmp ne %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %4, null, !dbg !4280
  br i1 %cmp, label %if.then, label %if.else, !dbg !4282

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4283
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4285
  %7 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4286
  %8 = load i8*, i8** %data.addr, align 8, !dbg !4287
  %call = call %struct.rtx_def* %5(%struct.rtx_def* %6, %struct.rtx_def* %7, i8* %8), !dbg !4283
  store %struct.rtx_def* %call, %struct.rtx_def** %newx, align 8, !dbg !4288
  %9 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4289
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !4289
  br i1 %tobool, label %if.then3, label %if.end, !dbg !4291

if.then3:                                         ; preds = %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4292
  store %struct.rtx_def* %10, %struct.rtx_def** %retval, align 8, !dbg !4293
  br label %return, !dbg !4293

if.end:                                           ; preds = %if.then
  br label %if.end9, !dbg !4294

if.else:                                          ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4295
  %12 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4297
  %call4 = call i32 @rtx_equal_p(%struct.rtx_def* %11, %struct.rtx_def* %12), !dbg !4298
  %tobool5 = icmp ne i32 %call4, 0, !dbg !4298
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !4299

if.then6:                                         ; preds = %if.else
  %13 = load i8*, i8** %data.addr, align 8, !dbg !4300
  %14 = bitcast i8* %13 to %struct.rtx_def*, !dbg !4301
  %call7 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %14), !dbg !4302
  store %struct.rtx_def* %call7, %struct.rtx_def** %retval, align 8, !dbg !4303
  br label %return, !dbg !4303

if.end8:                                          ; preds = %if.else
  br label %if.end9

if.end9:                                          ; preds = %if.end8, %if.end
  %15 = load i32, i32* %code, align 4, !dbg !4304
  %idxprom = sext i32 %15 to i64, !dbg !4304
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4304
  %16 = load i32, i32* %arrayidx, align 4, !dbg !4304
  switch i32 %16, label %sw.default [
    i32 4, label %sw.bb
    i32 2, label %sw.bb23
    i32 3, label %sw.bb23
    i32 0, label %sw.bb47
    i32 1, label %sw.bb47
    i32 10, label %sw.bb82
    i32 11, label %sw.bb82
    i32 5, label %sw.bb127
    i32 8, label %sw.bb162
  ], !dbg !4305

sw.bb:                                            ; preds = %if.end9
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4306
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4306
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4306
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4306
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !4306
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4306
  store %struct.rtx_def* %18, %struct.rtx_def** %op0, align 8, !dbg !4308
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4309
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !4309
  %bf.load11 = load i32, i32* %20, align 8, !dbg !4309
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !4309
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !4309
  store i32 %bf.clear13, i32* %op_mode, align 4, !dbg !4310
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4311
  %22 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4312
  %23 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4313
  %24 = load i8*, i8** %data.addr, align 8, !dbg !4314
  %call14 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %21, %struct.rtx_def* %22, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %23, i8* %24), !dbg !4315
  store %struct.rtx_def* %call14, %struct.rtx_def** %op0, align 8, !dbg !4316
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4317
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4319
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !4319
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !4319
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !4319
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !4319
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !4319
  %cmp19 = icmp eq %struct.rtx_def* %25, %27, !dbg !4320
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !4321

if.then20:                                        ; preds = %sw.bb
  %28 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4322
  store %struct.rtx_def* %28, %struct.rtx_def** %retval, align 8, !dbg !4323
  br label %return, !dbg !4323

if.end21:                                         ; preds = %sw.bb
  %29 = load i32, i32* %code, align 4, !dbg !4324
  %30 = load i32, i32* %mode, align 4, !dbg !4325
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4326
  %32 = load i32, i32* %op_mode, align 4, !dbg !4327
  %call22 = call %struct.rtx_def* @simplify_gen_unary(i32 %29, i32 %30, %struct.rtx_def* %31, i32 %32), !dbg !4328
  store %struct.rtx_def* %call22, %struct.rtx_def** %retval, align 8, !dbg !4329
  br label %return, !dbg !4329

sw.bb23:                                          ; preds = %if.end9, %if.end9
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4330
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !4330
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !4330
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !4330
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !4330
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4330
  %35 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4331
  %36 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4332
  %37 = load i8*, i8** %data.addr, align 8, !dbg !4333
  %call28 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %34, %struct.rtx_def* %35, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %36, i8* %37), !dbg !4334
  store %struct.rtx_def* %call28, %struct.rtx_def** %op0, align 8, !dbg !4335
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4336
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !4336
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !4336
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !4336
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !4336
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !4336
  %40 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4337
  %41 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4338
  %42 = load i8*, i8** %data.addr, align 8, !dbg !4339
  %call33 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %39, %struct.rtx_def* %40, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %41, i8* %42), !dbg !4340
  store %struct.rtx_def* %call33, %struct.rtx_def** %op1, align 8, !dbg !4341
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4342
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4344
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !4344
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !4344
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 0, !dbg !4344
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !4344
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !4344
  %cmp38 = icmp eq %struct.rtx_def* %43, %45, !dbg !4345
  br i1 %cmp38, label %land.lhs.true, label %if.end45, !dbg !4346

land.lhs.true:                                    ; preds = %sw.bb23
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4347
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4348
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !4348
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !4348
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 1, !dbg !4348
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !4348
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !4348
  %cmp43 = icmp eq %struct.rtx_def* %46, %48, !dbg !4349
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !4350

if.then44:                                        ; preds = %land.lhs.true
  %49 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4351
  store %struct.rtx_def* %49, %struct.rtx_def** %retval, align 8, !dbg !4352
  br label %return, !dbg !4352

if.end45:                                         ; preds = %land.lhs.true, %sw.bb23
  %50 = load i32, i32* %code, align 4, !dbg !4353
  %51 = load i32, i32* %mode, align 4, !dbg !4354
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4355
  %53 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4356
  %call46 = call %struct.rtx_def* @simplify_gen_binary(i32 %50, i32 %51, %struct.rtx_def* %52, %struct.rtx_def* %53), !dbg !4357
  store %struct.rtx_def* %call46, %struct.rtx_def** %retval, align 8, !dbg !4358
  br label %return, !dbg !4358

sw.bb47:                                          ; preds = %if.end9, %if.end9
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4359
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !4359
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !4359
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !4359
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !4359
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !4359
  store %struct.rtx_def* %55, %struct.rtx_def** %op0, align 8, !dbg !4360
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4361
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !4361
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !4361
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !4361
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !4361
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !4361
  store %struct.rtx_def* %57, %struct.rtx_def** %op1, align 8, !dbg !4362
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4363
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !4363
  %bf.load56 = load i32, i32* %59, align 8, !dbg !4363
  %bf.lshr57 = lshr i32 %bf.load56, 16, !dbg !4363
  %bf.clear58 = and i32 %bf.lshr57, 255, !dbg !4363
  %cmp59 = icmp ne i32 %bf.clear58, 0, !dbg !4364
  br i1 %cmp59, label %cond.true, label %cond.false, !dbg !4363

cond.true:                                        ; preds = %sw.bb47
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4365
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !4365
  %bf.load60 = load i32, i32* %61, align 8, !dbg !4365
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !4365
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !4365
  br label %cond.end, !dbg !4363

cond.false:                                       ; preds = %sw.bb47
  %62 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4366
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !4366
  %bf.load63 = load i32, i32* %63, align 8, !dbg !4366
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !4366
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !4366
  br label %cond.end, !dbg !4363

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear62, %cond.true ], [ %bf.clear65, %cond.false ], !dbg !4363
  store i32 %cond, i32* %op_mode, align 4, !dbg !4367
  %64 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4368
  %65 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4369
  %66 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4370
  %67 = load i8*, i8** %data.addr, align 8, !dbg !4371
  %call66 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %64, %struct.rtx_def* %65, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %66, i8* %67), !dbg !4372
  store %struct.rtx_def* %call66, %struct.rtx_def** %op0, align 8, !dbg !4373
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4374
  %69 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4375
  %70 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4376
  %71 = load i8*, i8** %data.addr, align 8, !dbg !4377
  %call67 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %68, %struct.rtx_def* %69, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %70, i8* %71), !dbg !4378
  store %struct.rtx_def* %call67, %struct.rtx_def** %op1, align 8, !dbg !4379
  %72 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4380
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4382
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !4382
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !4382
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !4382
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !4382
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !4382
  %cmp72 = icmp eq %struct.rtx_def* %72, %74, !dbg !4383
  br i1 %cmp72, label %land.lhs.true73, label %if.end80, !dbg !4384

land.lhs.true73:                                  ; preds = %cond.end
  %75 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4385
  %76 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4386
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !4386
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !4386
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 1, !dbg !4386
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !4386
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !4386
  %cmp78 = icmp eq %struct.rtx_def* %75, %77, !dbg !4387
  br i1 %cmp78, label %if.then79, label %if.end80, !dbg !4388

if.then79:                                        ; preds = %land.lhs.true73
  %78 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4389
  store %struct.rtx_def* %78, %struct.rtx_def** %retval, align 8, !dbg !4390
  br label %return, !dbg !4390

if.end80:                                         ; preds = %land.lhs.true73, %cond.end
  %79 = load i32, i32* %code, align 4, !dbg !4391
  %80 = load i32, i32* %mode, align 4, !dbg !4392
  %81 = load i32, i32* %op_mode, align 4, !dbg !4393
  %82 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4394
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4395
  %call81 = call %struct.rtx_def* @simplify_gen_relational(i32 %79, i32 %80, i32 %81, %struct.rtx_def* %82, %struct.rtx_def* %83), !dbg !4396
  store %struct.rtx_def* %call81, %struct.rtx_def** %retval, align 8, !dbg !4397
  br label %return, !dbg !4397

sw.bb82:                                          ; preds = %if.end9, %if.end9
  %84 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4398
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !4398
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !4398
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !4398
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !4398
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !4398
  store %struct.rtx_def* %85, %struct.rtx_def** %op0, align 8, !dbg !4399
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4400
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !4400
  %bf.load87 = load i32, i32* %87, align 8, !dbg !4400
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !4400
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !4400
  store i32 %bf.clear89, i32* %op_mode, align 4, !dbg !4401
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4402
  %89 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4403
  %90 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4404
  %91 = load i8*, i8** %data.addr, align 8, !dbg !4405
  %call90 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %88, %struct.rtx_def* %89, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %90, i8* %91), !dbg !4406
  store %struct.rtx_def* %call90, %struct.rtx_def** %op0, align 8, !dbg !4407
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4408
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !4408
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !4408
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 1, !dbg !4408
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !4408
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !4408
  %94 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4409
  %95 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4410
  %96 = load i8*, i8** %data.addr, align 8, !dbg !4411
  %call95 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %93, %struct.rtx_def* %94, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %95, i8* %96), !dbg !4412
  store %struct.rtx_def* %call95, %struct.rtx_def** %op1, align 8, !dbg !4413
  %97 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4414
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !4414
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !4414
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 2, !dbg !4414
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !4414
  %98 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !4414
  %99 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4415
  %100 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4416
  %101 = load i8*, i8** %data.addr, align 8, !dbg !4417
  %call100 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %98, %struct.rtx_def* %99, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %100, i8* %101), !dbg !4418
  store %struct.rtx_def* %call100, %struct.rtx_def** %op2, align 8, !dbg !4419
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4420
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4422
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !4422
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !4422
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !4422
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !4422
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !4422
  %cmp105 = icmp eq %struct.rtx_def* %102, %104, !dbg !4423
  br i1 %cmp105, label %land.lhs.true106, label %if.end119, !dbg !4424

land.lhs.true106:                                 ; preds = %sw.bb82
  %105 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4425
  %106 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4426
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !4426
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !4426
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 1, !dbg !4426
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !4426
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !4426
  %cmp111 = icmp eq %struct.rtx_def* %105, %107, !dbg !4427
  br i1 %cmp111, label %land.lhs.true112, label %if.end119, !dbg !4428

land.lhs.true112:                                 ; preds = %land.lhs.true106
  %108 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8, !dbg !4429
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4430
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !4430
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !4430
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 2, !dbg !4430
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !4430
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx116, align 8, !dbg !4430
  %cmp117 = icmp eq %struct.rtx_def* %108, %110, !dbg !4431
  br i1 %cmp117, label %if.then118, label %if.end119, !dbg !4432

if.then118:                                       ; preds = %land.lhs.true112
  %111 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4433
  store %struct.rtx_def* %111, %struct.rtx_def** %retval, align 8, !dbg !4434
  br label %return, !dbg !4434

if.end119:                                        ; preds = %land.lhs.true112, %land.lhs.true106, %sw.bb82
  %112 = load i32, i32* %op_mode, align 4, !dbg !4435
  %cmp120 = icmp eq i32 %112, 0, !dbg !4437
  br i1 %cmp120, label %if.then121, label %if.end125, !dbg !4438

if.then121:                                       ; preds = %if.end119
  %113 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4439
  %114 = bitcast %struct.rtx_def* %113 to i32*, !dbg !4439
  %bf.load122 = load i32, i32* %114, align 8, !dbg !4439
  %bf.lshr123 = lshr i32 %bf.load122, 16, !dbg !4439
  %bf.clear124 = and i32 %bf.lshr123, 255, !dbg !4439
  store i32 %bf.clear124, i32* %op_mode, align 4, !dbg !4440
  br label %if.end125, !dbg !4441

if.end125:                                        ; preds = %if.then121, %if.end119
  %115 = load i32, i32* %code, align 4, !dbg !4442
  %116 = load i32, i32* %mode, align 4, !dbg !4443
  %117 = load i32, i32* %op_mode, align 4, !dbg !4444
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4445
  %119 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4446
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8, !dbg !4447
  %call126 = call %struct.rtx_def* @simplify_gen_ternary(i32 %115, i32 %116, i32 %117, %struct.rtx_def* %118, %struct.rtx_def* %119, %struct.rtx_def* %120), !dbg !4448
  store %struct.rtx_def* %call126, %struct.rtx_def** %retval, align 8, !dbg !4449
  br label %return, !dbg !4449

sw.bb127:                                         ; preds = %if.end9
  %121 = load i32, i32* %code, align 4, !dbg !4450
  %cmp128 = icmp eq i32 %121, 39, !dbg !4452
  br i1 %cmp128, label %if.then129, label %if.end161, !dbg !4453

if.then129:                                       ; preds = %sw.bb127
  %122 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4454
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !4454
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !4454
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !4454
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !4454
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !4454
  %124 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4456
  %125 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4457
  %126 = load i8*, i8** %data.addr, align 8, !dbg !4458
  %call134 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %123, %struct.rtx_def* %124, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %125, i8* %126), !dbg !4459
  store %struct.rtx_def* %call134, %struct.rtx_def** %op0, align 8, !dbg !4460
  %127 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4461
  %128 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4463
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !4463
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !4463
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 0, !dbg !4463
  %rt_rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**, !dbg !4463
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx138, align 8, !dbg !4463
  %cmp139 = icmp eq %struct.rtx_def* %127, %129, !dbg !4464
  br i1 %cmp139, label %if.then140, label %if.end141, !dbg !4465

if.then140:                                       ; preds = %if.then129
  %130 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4466
  store %struct.rtx_def* %130, %struct.rtx_def** %retval, align 8, !dbg !4467
  br label %return, !dbg !4467

if.end141:                                        ; preds = %if.then129
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4468
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !4468
  %bf.load142 = load i32, i32* %132, align 8, !dbg !4468
  %bf.lshr143 = lshr i32 %bf.load142, 16, !dbg !4468
  %bf.clear144 = and i32 %bf.lshr143, 255, !dbg !4468
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4469
  %134 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4470
  %u145 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1, !dbg !4470
  %fld146 = bitcast %union.u* %u145 to [1 x %union.rtunion_def]*, !dbg !4470
  %arrayidx147 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld146, i64 0, i64 0, !dbg !4470
  %rt_rtx148 = bitcast %union.rtunion_def* %arrayidx147 to %struct.rtx_def**, !dbg !4470
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx148, align 8, !dbg !4470
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !4470
  %bf.load149 = load i32, i32* %136, align 8, !dbg !4470
  %bf.lshr150 = lshr i32 %bf.load149, 16, !dbg !4470
  %bf.clear151 = and i32 %bf.lshr150, 255, !dbg !4470
  %137 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4471
  %u152 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !4471
  %fld153 = bitcast %union.u* %u152 to [1 x %union.rtunion_def]*, !dbg !4471
  %arrayidx154 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld153, i64 0, i64 1, !dbg !4471
  %rt_uint = bitcast %union.rtunion_def* %arrayidx154 to i32*, !dbg !4471
  %138 = load i32, i32* %rt_uint, align 8, !dbg !4471
  %call155 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear144, %struct.rtx_def* %133, i32 %bf.clear151, i32 %138), !dbg !4472
  store %struct.rtx_def* %call155, %struct.rtx_def** %op0, align 8, !dbg !4473
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4474
  %tobool156 = icmp ne %struct.rtx_def* %139, null, !dbg !4474
  br i1 %tobool156, label %cond.true157, label %cond.false158, !dbg !4474

cond.true157:                                     ; preds = %if.end141
  %140 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4475
  br label %cond.end159, !dbg !4474

cond.false158:                                    ; preds = %if.end141
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4476
  br label %cond.end159, !dbg !4474

cond.end159:                                      ; preds = %cond.false158, %cond.true157
  %cond160 = phi %struct.rtx_def* [ %140, %cond.true157 ], [ %141, %cond.false158 ], !dbg !4474
  store %struct.rtx_def* %cond160, %struct.rtx_def** %retval, align 8, !dbg !4477
  br label %return, !dbg !4477

if.end161:                                        ; preds = %sw.bb127
  br label %sw.epilog, !dbg !4478

sw.bb162:                                         ; preds = %if.end9
  %142 = load i32, i32* %code, align 4, !dbg !4479
  %cmp163 = icmp eq i32 %142, 43, !dbg !4481
  br i1 %cmp163, label %if.then164, label %if.else178, !dbg !4482

if.then164:                                       ; preds = %sw.bb162
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4483
  %u165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !4483
  %fld166 = bitcast %union.u* %u165 to [1 x %union.rtunion_def]*, !dbg !4483
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i64 0, i64 0, !dbg !4483
  %rt_rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**, !dbg !4483
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx168, align 8, !dbg !4483
  %145 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4485
  %146 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4486
  %147 = load i8*, i8** %data.addr, align 8, !dbg !4487
  %call169 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %144, %struct.rtx_def* %145, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %146, i8* %147), !dbg !4488
  store %struct.rtx_def* %call169, %struct.rtx_def** %op0, align 8, !dbg !4489
  %148 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4490
  %149 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4492
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %149, i32 0, i32 1, !dbg !4492
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !4492
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 0, !dbg !4492
  %rt_rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !4492
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !4492
  %cmp174 = icmp eq %struct.rtx_def* %148, %150, !dbg !4493
  br i1 %cmp174, label %if.then175, label %if.end176, !dbg !4494

if.then175:                                       ; preds = %if.then164
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4495
  store %struct.rtx_def* %151, %struct.rtx_def** %retval, align 8, !dbg !4496
  br label %return, !dbg !4496

if.end176:                                        ; preds = %if.then164
  %152 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4497
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4498
  %call177 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %152, %struct.rtx_def* %153), !dbg !4499
  store %struct.rtx_def* %call177, %struct.rtx_def** %retval, align 8, !dbg !4500
  br label %return, !dbg !4500

if.else178:                                       ; preds = %sw.bb162
  %154 = load i32, i32* %code, align 4, !dbg !4501
  %cmp179 = icmp eq i32 %154, 122, !dbg !4503
  br i1 %cmp179, label %if.then180, label %if.end217, !dbg !4504

if.then180:                                       ; preds = %if.else178
  %155 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4505
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1, !dbg !4505
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !4505
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 0, !dbg !4505
  %rt_rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**, !dbg !4505
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !4505
  %157 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4507
  %158 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4508
  %159 = load i8*, i8** %data.addr, align 8, !dbg !4509
  %call185 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %156, %struct.rtx_def* %157, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %158, i8* %159), !dbg !4510
  store %struct.rtx_def* %call185, %struct.rtx_def** %op0, align 8, !dbg !4511
  %160 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4512
  %u186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !4512
  %fld187 = bitcast %union.u* %u186 to [1 x %union.rtunion_def]*, !dbg !4512
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i64 0, i64 1, !dbg !4512
  %rt_rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**, !dbg !4512
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !4512
  %162 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4513
  %163 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4514
  %164 = load i8*, i8** %data.addr, align 8, !dbg !4515
  %call190 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %161, %struct.rtx_def* %162, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %163, i8* %164), !dbg !4516
  store %struct.rtx_def* %call190, %struct.rtx_def** %op1, align 8, !dbg !4517
  %165 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4518
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !4518
  %bf.load191 = load i32, i32* %166, align 8, !dbg !4518
  %bf.clear192 = and i32 %bf.load191, 65535, !dbg !4518
  %cmp193 = icmp eq i32 %bf.clear192, 121, !dbg !4520
  br i1 %cmp193, label %land.lhs.true194, label %if.end202, !dbg !4521

land.lhs.true194:                                 ; preds = %if.then180
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4522
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !4522
  %fld196 = bitcast %union.u* %u195 to [1 x %union.rtunion_def]*, !dbg !4522
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i64 0, i64 0, !dbg !4522
  %rt_rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**, !dbg !4522
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !4522
  %169 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4523
  %call199 = call i32 @rtx_equal_p(%struct.rtx_def* %168, %struct.rtx_def* %169), !dbg !4524
  %tobool200 = icmp ne i32 %call199, 0, !dbg !4524
  br i1 %tobool200, label %if.then201, label %if.end202, !dbg !4525

if.then201:                                       ; preds = %land.lhs.true194
  %170 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4526
  store %struct.rtx_def* %170, %struct.rtx_def** %retval, align 8, !dbg !4527
  br label %return, !dbg !4527

if.end202:                                        ; preds = %land.lhs.true194, %if.then180
  %171 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4528
  %172 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4530
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !4530
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !4530
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 0, !dbg !4530
  %rt_rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**, !dbg !4530
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !4530
  %cmp207 = icmp eq %struct.rtx_def* %171, %173, !dbg !4531
  br i1 %cmp207, label %land.lhs.true208, label %if.end215, !dbg !4532

land.lhs.true208:                                 ; preds = %if.end202
  %174 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4533
  %175 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4534
  %u209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !4534
  %fld210 = bitcast %union.u* %u209 to [1 x %union.rtunion_def]*, !dbg !4534
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i64 0, i64 1, !dbg !4534
  %rt_rtx212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtx_def**, !dbg !4534
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx212, align 8, !dbg !4534
  %cmp213 = icmp eq %struct.rtx_def* %174, %176, !dbg !4535
  br i1 %cmp213, label %if.then214, label %if.end215, !dbg !4536

if.then214:                                       ; preds = %land.lhs.true208
  %177 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4537
  store %struct.rtx_def* %177, %struct.rtx_def** %retval, align 8, !dbg !4538
  br label %return, !dbg !4538

if.end215:                                        ; preds = %land.lhs.true208, %if.end202
  %178 = load i32, i32* %mode, align 4, !dbg !4539
  %179 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !4539
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !4539
  %call216 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 122, i32 %178, %struct.rtx_def* %179, %struct.rtx_def* %180), !dbg !4539
  store %struct.rtx_def* %call216, %struct.rtx_def** %retval, align 8, !dbg !4540
  br label %return, !dbg !4540

if.end217:                                        ; preds = %if.else178
  br label %if.end218

if.end218:                                        ; preds = %if.end217
  br label %sw.epilog, !dbg !4541

sw.default:                                       ; preds = %if.end9
  br label %sw.epilog, !dbg !4542

sw.epilog:                                        ; preds = %sw.default, %if.end218, %if.end161
  %181 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4543
  store %struct.rtx_def* %181, %struct.rtx_def** %newx, align 8, !dbg !4544
  %182 = load i32, i32* %code, align 4, !dbg !4545
  %idxprom219 = sext i32 %182 to i64, !dbg !4545
  %arrayidx220 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom219, !dbg !4545
  %183 = load i8*, i8** %arrayidx220, align 8, !dbg !4545
  store i8* %183, i8** %fmt, align 8, !dbg !4546
  store i32 0, i32* %i, align 4, !dbg !4547
  br label %for.cond, !dbg !4549

for.cond:                                         ; preds = %for.inc303, %sw.epilog
  %184 = load i8*, i8** %fmt, align 8, !dbg !4550
  %185 = load i32, i32* %i, align 4, !dbg !4552
  %idxprom221 = sext i32 %185 to i64, !dbg !4550
  %arrayidx222 = getelementptr inbounds i8, i8* %184, i64 %idxprom221, !dbg !4550
  %186 = load i8, i8* %arrayidx222, align 1, !dbg !4550
  %tobool223 = icmp ne i8 %186, 0, !dbg !4553
  br i1 %tobool223, label %for.body, label %for.end305, !dbg !4553

for.body:                                         ; preds = %for.cond
  %187 = load i8*, i8** %fmt, align 8, !dbg !4554
  %188 = load i32, i32* %i, align 4, !dbg !4555
  %idxprom224 = sext i32 %188 to i64, !dbg !4554
  %arrayidx225 = getelementptr inbounds i8, i8* %187, i64 %idxprom224, !dbg !4554
  %189 = load i8, i8* %arrayidx225, align 1, !dbg !4554
  %conv = sext i8 %189 to i32, !dbg !4554
  switch i32 %conv, label %sw.epilog302 [
    i32 69, label %sw.bb226
    i32 101, label %sw.bb268
  ], !dbg !4556

sw.bb226:                                         ; preds = %for.body
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4557
  %u227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1, !dbg !4557
  %fld228 = bitcast %union.u* %u227 to [1 x %union.rtunion_def]*, !dbg !4557
  %191 = load i32, i32* %i, align 4, !dbg !4557
  %idxprom229 = sext i32 %191 to i64, !dbg !4557
  %arrayidx230 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld228, i64 0, i64 %idxprom229, !dbg !4557
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx230 to %struct.rtvec_def**, !dbg !4557
  %192 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4557
  store %struct.rtvec_def* %192, %struct.rtvec_def** %vec, align 8, !dbg !4559
  %193 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4560
  %u231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1, !dbg !4560
  %fld232 = bitcast %union.u* %u231 to [1 x %union.rtunion_def]*, !dbg !4560
  %194 = load i32, i32* %i, align 4, !dbg !4560
  %idxprom233 = sext i32 %194 to i64, !dbg !4560
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i64 0, i64 %idxprom233, !dbg !4560
  %rt_rtvec235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtvec_def**, !dbg !4560
  %195 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec235, align 8, !dbg !4560
  store %struct.rtvec_def* %195, %struct.rtvec_def** %newvec, align 8, !dbg !4561
  store i32 0, i32* %j, align 4, !dbg !4562
  br label %for.cond236, !dbg !4564

for.cond236:                                      ; preds = %for.inc, %sw.bb226
  %196 = load i32, i32* %j, align 4, !dbg !4565
  %197 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !4567
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %197, i32 0, i32 0, !dbg !4567
  %198 = load i32, i32* %num_elem, align 8, !dbg !4567
  %cmp237 = icmp slt i32 %196, %198, !dbg !4568
  br i1 %cmp237, label %for.body239, label %for.end, !dbg !4569

for.body239:                                      ; preds = %for.cond236
  %199 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !4570
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %199, i32 0, i32 1, !dbg !4570
  %200 = load i32, i32* %j, align 4, !dbg !4570
  %idxprom240 = sext i32 %200 to i64, !dbg !4570
  %arrayidx241 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom240, !dbg !4570
  %201 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx241, align 8, !dbg !4570
  %202 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4572
  %203 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4573
  %204 = load i8*, i8** %data.addr, align 8, !dbg !4574
  %call242 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %201, %struct.rtx_def* %202, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %203, i8* %204), !dbg !4575
  store %struct.rtx_def* %call242, %struct.rtx_def** %op, align 8, !dbg !4576
  %205 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !4577
  %206 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !4579
  %elem243 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %206, i32 0, i32 1, !dbg !4579
  %207 = load i32, i32* %j, align 4, !dbg !4579
  %idxprom244 = sext i32 %207 to i64, !dbg !4579
  %arrayidx245 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem243, i64 0, i64 %idxprom244, !dbg !4579
  %208 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx245, align 8, !dbg !4579
  %cmp246 = icmp ne %struct.rtx_def* %205, %208, !dbg !4580
  br i1 %cmp246, label %if.then248, label %if.end267, !dbg !4581

if.then248:                                       ; preds = %for.body239
  %209 = load %struct.rtvec_def*, %struct.rtvec_def** %newvec, align 8, !dbg !4582
  %210 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !4585
  %cmp249 = icmp eq %struct.rtvec_def* %209, %210, !dbg !4586
  br i1 %cmp249, label %if.then251, label %if.end263, !dbg !4587

if.then251:                                       ; preds = %if.then248
  %211 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !4588
  %call252 = call %struct.rtvec_def* @shallow_copy_rtvec(%struct.rtvec_def* %211), !dbg !4590
  store %struct.rtvec_def* %call252, %struct.rtvec_def** %newvec, align 8, !dbg !4591
  %212 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4592
  %213 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4594
  %cmp253 = icmp eq %struct.rtx_def* %212, %213, !dbg !4595
  br i1 %cmp253, label %if.then255, label %if.end257, !dbg !4596

if.then255:                                       ; preds = %if.then251
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4597
  %call256 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %214), !dbg !4597
  store %struct.rtx_def* %call256, %struct.rtx_def** %newx, align 8, !dbg !4598
  br label %if.end257, !dbg !4599

if.end257:                                        ; preds = %if.then255, %if.then251
  %215 = load %struct.rtvec_def*, %struct.rtvec_def** %newvec, align 8, !dbg !4600
  %216 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4601
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !4601
  %fld259 = bitcast %union.u* %u258 to [1 x %union.rtunion_def]*, !dbg !4601
  %217 = load i32, i32* %i, align 4, !dbg !4601
  %idxprom260 = sext i32 %217 to i64, !dbg !4601
  %arrayidx261 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i64 0, i64 %idxprom260, !dbg !4601
  %rt_rtvec262 = bitcast %union.rtunion_def* %arrayidx261 to %struct.rtvec_def**, !dbg !4601
  store %struct.rtvec_def* %215, %struct.rtvec_def** %rt_rtvec262, align 8, !dbg !4602
  br label %if.end263, !dbg !4603

if.end263:                                        ; preds = %if.end257, %if.then248
  %218 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !4604
  %219 = load %struct.rtvec_def*, %struct.rtvec_def** %newvec, align 8, !dbg !4605
  %elem264 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %219, i32 0, i32 1, !dbg !4605
  %220 = load i32, i32* %j, align 4, !dbg !4605
  %idxprom265 = sext i32 %220 to i64, !dbg !4605
  %arrayidx266 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem264, i64 0, i64 %idxprom265, !dbg !4605
  store %struct.rtx_def* %218, %struct.rtx_def** %arrayidx266, align 8, !dbg !4606
  br label %if.end267, !dbg !4607

if.end267:                                        ; preds = %if.end263, %for.body239
  br label %for.inc, !dbg !4608

for.inc:                                          ; preds = %if.end267
  %221 = load i32, i32* %j, align 4, !dbg !4609
  %inc = add nsw i32 %221, 1, !dbg !4609
  store i32 %inc, i32* %j, align 4, !dbg !4609
  br label %for.cond236, !dbg !4610, !llvm.loop !4611

for.end:                                          ; preds = %for.cond236
  br label %sw.epilog302, !dbg !4613

sw.bb268:                                         ; preds = %for.body
  %222 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4614
  %u269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %222, i32 0, i32 1, !dbg !4614
  %fld270 = bitcast %union.u* %u269 to [1 x %union.rtunion_def]*, !dbg !4614
  %223 = load i32, i32* %i, align 4, !dbg !4614
  %idxprom271 = sext i32 %223 to i64, !dbg !4614
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i64 0, i64 %idxprom271, !dbg !4614
  %rt_rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**, !dbg !4614
  %224 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx273, align 8, !dbg !4614
  %tobool274 = icmp ne %struct.rtx_def* %224, null, !dbg !4614
  br i1 %tobool274, label %if.then275, label %if.end301, !dbg !4616

if.then275:                                       ; preds = %sw.bb268
  %225 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4617
  %u276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %225, i32 0, i32 1, !dbg !4617
  %fld277 = bitcast %union.u* %u276 to [1 x %union.rtunion_def]*, !dbg !4617
  %226 = load i32, i32* %i, align 4, !dbg !4617
  %idxprom278 = sext i32 %226 to i64, !dbg !4617
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld277, i64 0, i64 %idxprom278, !dbg !4617
  %rt_rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**, !dbg !4617
  %227 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx280, align 8, !dbg !4617
  %228 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4619
  %229 = load %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)** %fn.addr, align 8, !dbg !4620
  %230 = load i8*, i8** %data.addr, align 8, !dbg !4621
  %call281 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %227, %struct.rtx_def* %228, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* %229, i8* %230), !dbg !4622
  store %struct.rtx_def* %call281, %struct.rtx_def** %op, align 8, !dbg !4623
  %231 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !4624
  %232 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4626
  %u282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !4626
  %fld283 = bitcast %union.u* %u282 to [1 x %union.rtunion_def]*, !dbg !4626
  %233 = load i32, i32* %i, align 4, !dbg !4626
  %idxprom284 = sext i32 %233 to i64, !dbg !4626
  %arrayidx285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 %idxprom284, !dbg !4626
  %rt_rtx286 = bitcast %union.rtunion_def* %arrayidx285 to %struct.rtx_def**, !dbg !4626
  %234 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx286, align 8, !dbg !4626
  %cmp287 = icmp ne %struct.rtx_def* %231, %234, !dbg !4627
  br i1 %cmp287, label %if.then289, label %if.end300, !dbg !4628

if.then289:                                       ; preds = %if.then275
  %235 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4629
  %236 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4632
  %cmp290 = icmp eq %struct.rtx_def* %235, %236, !dbg !4633
  br i1 %cmp290, label %if.then292, label %if.end294, !dbg !4634

if.then292:                                       ; preds = %if.then289
  %237 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4635
  %call293 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %237), !dbg !4635
  store %struct.rtx_def* %call293, %struct.rtx_def** %newx, align 8, !dbg !4636
  br label %if.end294, !dbg !4637

if.end294:                                        ; preds = %if.then292, %if.then289
  %238 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !4638
  %239 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4639
  %u295 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1, !dbg !4639
  %fld296 = bitcast %union.u* %u295 to [1 x %union.rtunion_def]*, !dbg !4639
  %240 = load i32, i32* %i, align 4, !dbg !4639
  %idxprom297 = sext i32 %240 to i64, !dbg !4639
  %arrayidx298 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld296, i64 0, i64 %idxprom297, !dbg !4639
  %rt_rtx299 = bitcast %union.rtunion_def* %arrayidx298 to %struct.rtx_def**, !dbg !4639
  store %struct.rtx_def* %238, %struct.rtx_def** %rt_rtx299, align 8, !dbg !4640
  br label %if.end300, !dbg !4641

if.end300:                                        ; preds = %if.end294, %if.then275
  br label %if.end301, !dbg !4642

if.end301:                                        ; preds = %if.end300, %sw.bb268
  br label %sw.epilog302, !dbg !4643

sw.epilog302:                                     ; preds = %for.body, %if.end301, %for.end
  br label %for.inc303, !dbg !4644

for.inc303:                                       ; preds = %sw.epilog302
  %241 = load i32, i32* %i, align 4, !dbg !4645
  %inc304 = add nsw i32 %241, 1, !dbg !4645
  store i32 %inc304, i32* %i, align 4, !dbg !4645
  br label %for.cond, !dbg !4646, !llvm.loop !4647

for.end305:                                       ; preds = %for.cond
  %242 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4649
  store %struct.rtx_def* %242, %struct.rtx_def** %retval, align 8, !dbg !4650
  br label %return, !dbg !4650

return:                                           ; preds = %for.end305, %if.end215, %if.then214, %if.then201, %if.end176, %if.then175, %cond.end159, %if.then140, %if.end125, %if.then118, %if.end80, %if.then79, %if.end45, %if.then44, %if.end21, %if.then20, %if.then6, %if.then3
  %243 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4651
  ret %struct.rtx_def* %243, !dbg !4651
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_gen_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte) #0 !dbg !4652 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %outermode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %innermode.addr = alloca i32, align 4
  %byte.addr = alloca i32, align 4
  %newx = alloca %struct.rtx_def*, align 8
  store i32 %outermode, i32* %outermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outermode.addr, metadata !4653, metadata !DIExpression()), !dbg !4654
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4655, metadata !DIExpression()), !dbg !4656
  store i32 %innermode, i32* %innermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %innermode.addr, metadata !4657, metadata !DIExpression()), !dbg !4658
  store i32 %byte, i32* %byte.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte.addr, metadata !4659, metadata !DIExpression()), !dbg !4660
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newx, metadata !4661, metadata !DIExpression()), !dbg !4662
  %0 = load i32, i32* %outermode.addr, align 4, !dbg !4663
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4664
  %2 = load i32, i32* %innermode.addr, align 4, !dbg !4665
  %3 = load i32, i32* %byte.addr, align 4, !dbg !4666
  %call = call %struct.rtx_def* @simplify_subreg(i32 %0, %struct.rtx_def* %1, i32 %2, i32 %3), !dbg !4667
  store %struct.rtx_def* %call, %struct.rtx_def** %newx, align 8, !dbg !4668
  %4 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4669
  %tobool = icmp ne %struct.rtx_def* %4, null, !dbg !4669
  br i1 %tobool, label %if.then, label %if.end, !dbg !4671

if.then:                                          ; preds = %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %newx, align 8, !dbg !4672
  store %struct.rtx_def* %5, %struct.rtx_def** %retval, align 8, !dbg !4673
  br label %return, !dbg !4673

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4674
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !4674
  %bf.load = load i32, i32* %7, align 8, !dbg !4674
  %bf.clear = and i32 %bf.load, 65535, !dbg !4674
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !4676
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !4677

lor.lhs.false:                                    ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4678
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4678
  %bf.load1 = load i32, i32* %9, align 8, !dbg !4678
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !4678
  %cmp3 = icmp eq i32 %bf.clear2, 41, !dbg !4679
  br i1 %cmp3, label %if.then8, label %lor.lhs.false4, !dbg !4680

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4681
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !4681
  %bf.load5 = load i32, i32* %11, align 8, !dbg !4681
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4681
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4681
  %cmp7 = icmp eq i32 %bf.clear6, 0, !dbg !4682
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !4683

if.then8:                                         ; preds = %lor.lhs.false4, %lor.lhs.false, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4684
  br label %return, !dbg !4684

if.end9:                                          ; preds = %lor.lhs.false4
  %12 = load i32, i32* %outermode.addr, align 4, !dbg !4685
  %13 = load i32, i32* %innermode.addr, align 4, !dbg !4687
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4688
  %15 = load i32, i32* %byte.addr, align 4, !dbg !4689
  %call10 = call zeroext i8 @validate_subreg(i32 %12, i32 %13, %struct.rtx_def* %14, i32 %15), !dbg !4690
  %tobool11 = icmp ne i8 %call10, 0, !dbg !4690
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !4691

if.then12:                                        ; preds = %if.end9
  %16 = load i32, i32* %outermode.addr, align 4, !dbg !4692
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4693
  %18 = load i32, i32* %byte.addr, align 4, !dbg !4694
  %call13 = call %struct.rtx_def* @gen_rtx_SUBREG(i32 %16, %struct.rtx_def* %17, i32 %18), !dbg !4695
  store %struct.rtx_def* %call13, %struct.rtx_def** %retval, align 8, !dbg !4696
  br label %return, !dbg !4696

if.end14:                                         ; preds = %if.end9
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4697
  br label %return, !dbg !4697

return:                                           ; preds = %if.end14, %if.then12, %if.then8, %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !4698
  ret %struct.rtx_def* %19, !dbg !4698
}

declare dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtvec_def* @shallow_copy_rtvec(%struct.rtvec_def*) #2

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_replace_rtx(%struct.rtx_def* %x, %struct.rtx_def* %old_rtx, %struct.rtx_def* %new_rtx) #0 !dbg !4699 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %old_rtx.addr = alloca %struct.rtx_def*, align 8
  %new_rtx.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4702, metadata !DIExpression()), !dbg !4703
  store %struct.rtx_def* %old_rtx, %struct.rtx_def** %old_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_rtx.addr, metadata !4704, metadata !DIExpression()), !dbg !4705
  store %struct.rtx_def* %new_rtx, %struct.rtx_def** %new_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx.addr, metadata !4706, metadata !DIExpression()), !dbg !4707
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4708
  %1 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !4709
  %2 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !4710
  %3 = bitcast %struct.rtx_def* %2 to i8*, !dbg !4710
  %call = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %0, %struct.rtx_def* %1, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* null, i8* %3), !dbg !4711
  ret %struct.rtx_def* %call, !dbg !4712
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_const_unary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op, i32 %op_mode) #0 !dbg !4713 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %op_mode.addr = alloca i32, align 4
  %width = alloca i32, align 4
  %elt_size = alloca i32, align 4
  %n_elts = alloca i32, align 4
  %v = alloca %struct.rtvec_def*, align 8
  %i = alloca i32, align 4
  %inmode = alloca i32, align 4
  %in_elt_size = alloca i32, align 4
  %in_n_elts = alloca i32, align 4
  %elt_size246 = alloca i32, align 4
  %n_elts254 = alloca i32, align 4
  %opmode = alloca i32, align 4
  %op_elt_size = alloca i32, align 4
  %op_n_elts = alloca i32, align 4
  %v275 = alloca %struct.rtvec_def*, align 8
  %i277 = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %hv = alloca i64, align 8
  %lv = alloca i64, align 8
  %d = alloca %struct.real_value, align 8
  %tmp = alloca %struct.real_value, align 8
  %hv370 = alloca i64, align 8
  %lv371 = alloca i64, align 8
  %d372 = alloca %struct.real_value, align 8
  %tmp415 = alloca %struct.real_value, align 8
  %arg0 = alloca i64, align 8
  %val = alloca i64, align 8
  %s = alloca i32, align 4
  %d516 = alloca i32, align 4
  %byte = alloca i64, align 8
  %l1 = alloca i64, align 8
  %lv679 = alloca i64, align 8
  %h1 = alloca i64, align 8
  %hv680 = alloca i64, align 8
  %s834 = alloca i32, align 4
  %d839 = alloca i32, align 4
  %byte842 = alloca i64, align 8
  %d971 = alloca %struct.real_value, align 8
  %t = alloca %struct.real_value, align 8
  %tmp1080 = alloca %struct.real_value, align 8
  %tmp1082 = alloca %struct.real_value, align 8
  %tmp1084 = alloca %struct.real_value, align 8
  %tmp1089 = alloca [4 x i64], align 16
  %i1090 = alloca i32, align 4
  %xh = alloca i64, align 8
  %xl = alloca i64, align 8
  %th = alloca i64, align 8
  %tl = alloca i64, align 8
  %x1147 = alloca %struct.real_value, align 8
  %t1148 = alloca %struct.real_value, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !4714, metadata !DIExpression()), !dbg !4715
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4716, metadata !DIExpression()), !dbg !4717
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4718, metadata !DIExpression()), !dbg !4719
  store i32 %op_mode, i32* %op_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op_mode.addr, metadata !4720, metadata !DIExpression()), !dbg !4721
  call void @llvm.dbg.declare(metadata i32* %width, metadata !4722, metadata !DIExpression()), !dbg !4723
  %0 = load i32, i32* %mode.addr, align 4, !dbg !4724
  %idxprom = zext i32 %0 to i64, !dbg !4724
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !4724
  %1 = load i8, i8* %arrayidx, align 1, !dbg !4724
  %conv = zext i8 %1 to i16, !dbg !4724
  %conv1 = zext i16 %conv to i32, !dbg !4724
  %mul = mul nsw i32 %conv1, 8, !dbg !4724
  %conv2 = trunc i32 %mul to i16, !dbg !4724
  %conv3 = zext i16 %conv2 to i32, !dbg !4724
  store i32 %conv3, i32* %width, align 4, !dbg !4723
  %2 = load i32, i32* %code.addr, align 4, !dbg !4725
  %cmp = icmp eq i32 %2, 126, !dbg !4727
  br i1 %cmp, label %if.then, label %if.end205, !dbg !4728

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom5 = zext i32 %3 to i64, !dbg !4729
  %arrayidx6 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5, !dbg !4729
  %4 = load i8, i8* %arrayidx6, align 1, !dbg !4729
  %conv7 = zext i8 %4 to i32, !dbg !4729
  %cmp8 = icmp eq i32 %conv7, 12, !dbg !4729
  br i1 %cmp8, label %cond.false, label %lor.lhs.false, !dbg !4729

lor.lhs.false:                                    ; preds = %if.then
  %5 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom10 = zext i32 %5 to i64, !dbg !4729
  %arrayidx11 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom10, !dbg !4729
  %6 = load i8, i8* %arrayidx11, align 1, !dbg !4729
  %conv12 = zext i8 %6 to i32, !dbg !4729
  %cmp13 = icmp eq i32 %conv12, 17, !dbg !4729
  br i1 %cmp13, label %cond.false, label %lor.lhs.false15, !dbg !4729

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom16 = zext i32 %7 to i64, !dbg !4729
  %arrayidx17 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom16, !dbg !4729
  %8 = load i8, i8* %arrayidx17, align 1, !dbg !4729
  %conv18 = zext i8 %8 to i32, !dbg !4729
  %cmp19 = icmp eq i32 %conv18, 13, !dbg !4729
  br i1 %cmp19, label %cond.false, label %lor.lhs.false21, !dbg !4729

lor.lhs.false21:                                  ; preds = %lor.lhs.false15
  %9 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom22 = zext i32 %9 to i64, !dbg !4729
  %arrayidx23 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom22, !dbg !4729
  %10 = load i8, i8* %arrayidx23, align 1, !dbg !4729
  %conv24 = zext i8 %10 to i32, !dbg !4729
  %cmp25 = icmp eq i32 %conv24, 14, !dbg !4729
  br i1 %cmp25, label %cond.false, label %lor.lhs.false27, !dbg !4729

lor.lhs.false27:                                  ; preds = %lor.lhs.false21
  %11 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom28 = zext i32 %11 to i64, !dbg !4729
  %arrayidx29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom28, !dbg !4729
  %12 = load i8, i8* %arrayidx29, align 1, !dbg !4729
  %conv30 = zext i8 %12 to i32, !dbg !4729
  %cmp31 = icmp eq i32 %conv30, 15, !dbg !4729
  br i1 %cmp31, label %cond.false, label %lor.lhs.false33, !dbg !4729

lor.lhs.false33:                                  ; preds = %lor.lhs.false27
  %13 = load i32, i32* %mode.addr, align 4, !dbg !4729
  %idxprom34 = zext i32 %13 to i64, !dbg !4729
  %arrayidx35 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom34, !dbg !4729
  %14 = load i8, i8* %arrayidx35, align 1, !dbg !4729
  %conv36 = zext i8 %14 to i32, !dbg !4729
  %cmp37 = icmp eq i32 %conv36, 16, !dbg !4729
  br i1 %cmp37, label %cond.false, label %cond.true, !dbg !4729

cond.true:                                        ; preds = %lor.lhs.false33
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1073, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4729
  br label %cond.end, !dbg !4729

cond.false:                                       ; preds = %lor.lhs.false33, %lor.lhs.false27, %lor.lhs.false21, %lor.lhs.false15, %lor.lhs.false, %if.then
  br label %cond.end, !dbg !4729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4729
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4731
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4731
  %bf.load = load i32, i32* %16, align 8, !dbg !4731
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4731
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4731
  %cmp39 = icmp ne i32 %bf.clear, 0, !dbg !4733
  br i1 %cmp39, label %if.then41, label %if.end123, !dbg !4734

if.then41:                                        ; preds = %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4735
  %bf.load42 = load i32, i32* %18, align 8, !dbg !4735
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !4735
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !4735
  %idxprom45 = zext i32 %bf.clear44 to i64, !dbg !4735
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom45, !dbg !4735
  %19 = load i8, i8* %arrayidx46, align 1, !dbg !4735
  %conv47 = zext i8 %19 to i32, !dbg !4735
  %cmp48 = icmp eq i32 %conv47, 12, !dbg !4735
  br i1 %cmp48, label %if.else, label %lor.lhs.false50, !dbg !4735

lor.lhs.false50:                                  ; preds = %if.then41
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4735
  %bf.load51 = load i32, i32* %21, align 8, !dbg !4735
  %bf.lshr52 = lshr i32 %bf.load51, 16, !dbg !4735
  %bf.clear53 = and i32 %bf.lshr52, 255, !dbg !4735
  %idxprom54 = zext i32 %bf.clear53 to i64, !dbg !4735
  %arrayidx55 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom54, !dbg !4735
  %22 = load i8, i8* %arrayidx55, align 1, !dbg !4735
  %conv56 = zext i8 %22 to i32, !dbg !4735
  %cmp57 = icmp eq i32 %conv56, 17, !dbg !4735
  br i1 %cmp57, label %if.else, label %lor.lhs.false59, !dbg !4735

lor.lhs.false59:                                  ; preds = %lor.lhs.false50
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4735
  %bf.load60 = load i32, i32* %24, align 8, !dbg !4735
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !4735
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !4735
  %idxprom63 = zext i32 %bf.clear62 to i64, !dbg !4735
  %arrayidx64 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom63, !dbg !4735
  %25 = load i8, i8* %arrayidx64, align 1, !dbg !4735
  %conv65 = zext i8 %25 to i32, !dbg !4735
  %cmp66 = icmp eq i32 %conv65, 13, !dbg !4735
  br i1 %cmp66, label %if.else, label %lor.lhs.false68, !dbg !4735

lor.lhs.false68:                                  ; preds = %lor.lhs.false59
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !4735
  %bf.load69 = load i32, i32* %27, align 8, !dbg !4735
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !4735
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !4735
  %idxprom72 = zext i32 %bf.clear71 to i64, !dbg !4735
  %arrayidx73 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom72, !dbg !4735
  %28 = load i8, i8* %arrayidx73, align 1, !dbg !4735
  %conv74 = zext i8 %28 to i32, !dbg !4735
  %cmp75 = icmp eq i32 %conv74, 14, !dbg !4735
  br i1 %cmp75, label %if.else, label %lor.lhs.false77, !dbg !4735

lor.lhs.false77:                                  ; preds = %lor.lhs.false68
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !4735
  %bf.load78 = load i32, i32* %30, align 8, !dbg !4735
  %bf.lshr79 = lshr i32 %bf.load78, 16, !dbg !4735
  %bf.clear80 = and i32 %bf.lshr79, 255, !dbg !4735
  %idxprom81 = zext i32 %bf.clear80 to i64, !dbg !4735
  %arrayidx82 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom81, !dbg !4735
  %31 = load i8, i8* %arrayidx82, align 1, !dbg !4735
  %conv83 = zext i8 %31 to i32, !dbg !4735
  %cmp84 = icmp eq i32 %conv83, 15, !dbg !4735
  br i1 %cmp84, label %if.else, label %lor.lhs.false86, !dbg !4735

lor.lhs.false86:                                  ; preds = %lor.lhs.false77
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4735
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !4735
  %bf.load87 = load i32, i32* %33, align 8, !dbg !4735
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !4735
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !4735
  %idxprom90 = zext i32 %bf.clear89 to i64, !dbg !4735
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom90, !dbg !4735
  %34 = load i8, i8* %arrayidx91, align 1, !dbg !4735
  %conv92 = zext i8 %34 to i32, !dbg !4735
  %cmp93 = icmp eq i32 %conv92, 16, !dbg !4735
  br i1 %cmp93, label %if.else, label %if.then95, !dbg !4738

if.then95:                                        ; preds = %lor.lhs.false86
  %35 = load i32, i32* %mode.addr, align 4, !dbg !4739
  %idxprom96 = zext i32 %35 to i64, !dbg !4739
  %arrayidx97 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom96, !dbg !4739
  %36 = load i8, i8* %arrayidx97, align 1, !dbg !4739
  %conv98 = zext i8 %36 to i32, !dbg !4739
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4739
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !4739
  %bf.load99 = load i32, i32* %38, align 8, !dbg !4739
  %bf.lshr100 = lshr i32 %bf.load99, 16, !dbg !4739
  %bf.clear101 = and i32 %bf.lshr100, 255, !dbg !4739
  %cmp102 = icmp eq i32 %conv98, %bf.clear101, !dbg !4739
  br i1 %cmp102, label %cond.false105, label %cond.true104, !dbg !4739

cond.true104:                                     ; preds = %if.then95
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1077, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4739
  br label %cond.end106, !dbg !4739

cond.false105:                                    ; preds = %if.then95
  br label %cond.end106, !dbg !4739

cond.end106:                                      ; preds = %cond.false105, %cond.true104
  %cond107 = phi i32 [ 0, %cond.true104 ], [ 0, %cond.false105 ], !dbg !4739
  br label %if.end, !dbg !4739

if.else:                                          ; preds = %lor.lhs.false86, %lor.lhs.false77, %lor.lhs.false68, %lor.lhs.false59, %lor.lhs.false50, %if.then41
  %39 = load i32, i32* %mode.addr, align 4, !dbg !4740
  %idxprom108 = zext i32 %39 to i64, !dbg !4740
  %arrayidx109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom108, !dbg !4740
  %40 = load i8, i8* %arrayidx109, align 1, !dbg !4740
  %conv110 = zext i8 %40 to i32, !dbg !4740
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4740
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !4740
  %bf.load111 = load i32, i32* %42, align 8, !dbg !4740
  %bf.lshr112 = lshr i32 %bf.load111, 16, !dbg !4740
  %bf.clear113 = and i32 %bf.lshr112, 255, !dbg !4740
  %idxprom114 = zext i32 %bf.clear113 to i64, !dbg !4740
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom114, !dbg !4740
  %43 = load i8, i8* %arrayidx115, align 1, !dbg !4740
  %conv116 = zext i8 %43 to i32, !dbg !4740
  %cmp117 = icmp eq i32 %conv110, %conv116, !dbg !4740
  br i1 %cmp117, label %cond.false120, label %cond.true119, !dbg !4740

cond.true119:                                     ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1080, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4740
  br label %cond.end121, !dbg !4740

cond.false120:                                    ; preds = %if.else
  br label %cond.end121, !dbg !4740

cond.end121:                                      ; preds = %cond.false120, %cond.true119
  %cond122 = phi i32 [ 0, %cond.true119 ], [ 0, %cond.false120 ], !dbg !4740
  br label %if.end

if.end:                                           ; preds = %cond.end121, %cond.end106
  br label %if.end123, !dbg !4741

if.end123:                                        ; preds = %if.end, %cond.end
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4742
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !4742
  %bf.load124 = load i32, i32* %45, align 8, !dbg !4742
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !4742
  %cmp126 = icmp eq i32 %bf.clear125, 30, !dbg !4742
  br i1 %cmp126, label %if.then138, label %lor.lhs.false128, !dbg !4744

lor.lhs.false128:                                 ; preds = %if.end123
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4745
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !4745
  %bf.load129 = load i32, i32* %47, align 8, !dbg !4745
  %bf.clear130 = and i32 %bf.load129, 65535, !dbg !4745
  %cmp131 = icmp eq i32 %bf.clear130, 32, !dbg !4746
  br i1 %cmp131, label %if.then138, label %lor.lhs.false133, !dbg !4747

lor.lhs.false133:                                 ; preds = %lor.lhs.false128
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4748
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !4748
  %bf.load134 = load i32, i32* %49, align 8, !dbg !4748
  %bf.clear135 = and i32 %bf.load134, 65535, !dbg !4748
  %cmp136 = icmp eq i32 %bf.clear135, 33, !dbg !4749
  br i1 %cmp136, label %if.then138, label %if.end204, !dbg !4750

if.then138:                                       ; preds = %lor.lhs.false133, %lor.lhs.false128, %if.end123
  call void @llvm.dbg.declare(metadata i32* %elt_size, metadata !4751, metadata !DIExpression()), !dbg !4753
  %50 = load i32, i32* %mode.addr, align 4, !dbg !4754
  %idxprom139 = zext i32 %50 to i64, !dbg !4754
  %arrayidx140 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom139, !dbg !4754
  %51 = load i8, i8* %arrayidx140, align 1, !dbg !4754
  %conv141 = zext i8 %51 to i32, !dbg !4754
  %idxprom142 = zext i32 %conv141 to i64, !dbg !4754
  %arrayidx143 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom142, !dbg !4754
  %52 = load i8, i8* %arrayidx143, align 1, !dbg !4754
  %conv144 = zext i8 %52 to i16, !dbg !4754
  %conv145 = zext i16 %conv144 to i32, !dbg !4754
  store i32 %conv145, i32* %elt_size, align 4, !dbg !4753
  call void @llvm.dbg.declare(metadata i32* %n_elts, metadata !4755, metadata !DIExpression()), !dbg !4756
  %53 = load i32, i32* %mode.addr, align 4, !dbg !4757
  %idxprom146 = zext i32 %53 to i64, !dbg !4757
  %arrayidx147 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom146, !dbg !4757
  %54 = load i8, i8* %arrayidx147, align 1, !dbg !4757
  %conv148 = zext i8 %54 to i16, !dbg !4757
  %conv149 = zext i16 %conv148 to i32, !dbg !4757
  %55 = load i32, i32* %elt_size, align 4, !dbg !4758
  %div = sdiv i32 %conv149, %55, !dbg !4759
  store i32 %div, i32* %n_elts, align 4, !dbg !4756
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v, metadata !4760, metadata !DIExpression()), !dbg !4761
  %56 = load i32, i32* %n_elts, align 4, !dbg !4762
  %call = call %struct.rtvec_def* @rtvec_alloc(i32 %56), !dbg !4763
  store %struct.rtvec_def* %call, %struct.rtvec_def** %v, align 8, !dbg !4761
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4764, metadata !DIExpression()), !dbg !4765
  %57 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4766
  %58 = bitcast %struct.rtx_def* %57 to i32*, !dbg !4766
  %bf.load150 = load i32, i32* %58, align 8, !dbg !4766
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !4766
  %cmp152 = icmp ne i32 %bf.clear151, 33, !dbg !4768
  br i1 %cmp152, label %if.then154, label %if.else159, !dbg !4769

if.then154:                                       ; preds = %if.then138
  store i32 0, i32* %i, align 4, !dbg !4770
  br label %for.cond, !dbg !4772

for.cond:                                         ; preds = %for.inc, %if.then154
  %59 = load i32, i32* %i, align 4, !dbg !4773
  %60 = load i32, i32* %n_elts, align 4, !dbg !4775
  %cmp155 = icmp ult i32 %59, %60, !dbg !4776
  br i1 %cmp155, label %for.body, label %for.end, !dbg !4777

for.body:                                         ; preds = %for.cond
  %61 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4778
  %62 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !4779
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i32 0, i32 1, !dbg !4779
  %63 = load i32, i32* %i, align 4, !dbg !4779
  %idxprom157 = zext i32 %63 to i64, !dbg !4779
  %arrayidx158 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom157, !dbg !4779
  store %struct.rtx_def* %61, %struct.rtx_def** %arrayidx158, align 8, !dbg !4780
  br label %for.inc, !dbg !4779

for.inc:                                          ; preds = %for.body
  %64 = load i32, i32* %i, align 4, !dbg !4781
  %inc = add i32 %64, 1, !dbg !4781
  store i32 %inc, i32* %i, align 4, !dbg !4781
  br label %for.cond, !dbg !4782, !llvm.loop !4783

for.end:                                          ; preds = %for.cond
  br label %if.end202, !dbg !4784

if.else159:                                       ; preds = %if.then138
  call void @llvm.dbg.declare(metadata i32* %inmode, metadata !4785, metadata !DIExpression()), !dbg !4787
  %65 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4788
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !4788
  %bf.load160 = load i32, i32* %66, align 8, !dbg !4788
  %bf.lshr161 = lshr i32 %bf.load160, 16, !dbg !4788
  %bf.clear162 = and i32 %bf.lshr161, 255, !dbg !4788
  store i32 %bf.clear162, i32* %inmode, align 4, !dbg !4787
  call void @llvm.dbg.declare(metadata i32* %in_elt_size, metadata !4789, metadata !DIExpression()), !dbg !4790
  %67 = load i32, i32* %inmode, align 4, !dbg !4791
  %idxprom163 = zext i32 %67 to i64, !dbg !4791
  %arrayidx164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom163, !dbg !4791
  %68 = load i8, i8* %arrayidx164, align 1, !dbg !4791
  %conv165 = zext i8 %68 to i32, !dbg !4791
  %idxprom166 = zext i32 %conv165 to i64, !dbg !4791
  %arrayidx167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom166, !dbg !4791
  %69 = load i8, i8* %arrayidx167, align 1, !dbg !4791
  %conv168 = zext i8 %69 to i16, !dbg !4791
  %conv169 = zext i16 %conv168 to i32, !dbg !4791
  store i32 %conv169, i32* %in_elt_size, align 4, !dbg !4790
  call void @llvm.dbg.declare(metadata i32* %in_n_elts, metadata !4792, metadata !DIExpression()), !dbg !4793
  %70 = load i32, i32* %inmode, align 4, !dbg !4794
  %idxprom170 = zext i32 %70 to i64, !dbg !4794
  %arrayidx171 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom170, !dbg !4794
  %71 = load i8, i8* %arrayidx171, align 1, !dbg !4794
  %conv172 = zext i8 %71 to i16, !dbg !4794
  %conv173 = zext i16 %conv172 to i32, !dbg !4794
  %72 = load i32, i32* %in_elt_size, align 4, !dbg !4795
  %div174 = sdiv i32 %conv173, %72, !dbg !4796
  store i32 %div174, i32* %in_n_elts, align 4, !dbg !4793
  %73 = load i32, i32* %in_n_elts, align 4, !dbg !4797
  %74 = load i32, i32* %n_elts, align 4, !dbg !4797
  %cmp175 = icmp ult i32 %73, %74, !dbg !4797
  br i1 %cmp175, label %cond.false178, label %cond.true177, !dbg !4797

cond.true177:                                     ; preds = %if.else159
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1099, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4797
  br label %cond.end179, !dbg !4797

cond.false178:                                    ; preds = %if.else159
  br label %cond.end179, !dbg !4797

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi i32 [ 0, %cond.true177 ], [ 0, %cond.false178 ], !dbg !4797
  %75 = load i32, i32* %n_elts, align 4, !dbg !4798
  %76 = load i32, i32* %in_n_elts, align 4, !dbg !4798
  %rem = urem i32 %75, %76, !dbg !4798
  %cmp181 = icmp eq i32 %rem, 0, !dbg !4798
  br i1 %cmp181, label %cond.false184, label %cond.true183, !dbg !4798

cond.true183:                                     ; preds = %cond.end179
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4798
  br label %cond.end185, !dbg !4798

cond.false184:                                    ; preds = %cond.end179
  br label %cond.end185, !dbg !4798

cond.end185:                                      ; preds = %cond.false184, %cond.true183
  %cond186 = phi i32 [ 0, %cond.true183 ], [ 0, %cond.false184 ], !dbg !4798
  store i32 0, i32* %i, align 4, !dbg !4799
  br label %for.cond187, !dbg !4801

for.cond187:                                      ; preds = %for.inc199, %cond.end185
  %77 = load i32, i32* %i, align 4, !dbg !4802
  %78 = load i32, i32* %n_elts, align 4, !dbg !4804
  %cmp188 = icmp ult i32 %77, %78, !dbg !4805
  br i1 %cmp188, label %for.body190, label %for.end201, !dbg !4806

for.body190:                                      ; preds = %for.cond187
  %79 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4807
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !4807
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4807
  %arrayidx191 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4807
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx191 to %struct.rtvec_def**, !dbg !4807
  %80 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4807
  %elem192 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %80, i32 0, i32 1, !dbg !4807
  %81 = load i32, i32* %i, align 4, !dbg !4807
  %82 = load i32, i32* %in_n_elts, align 4, !dbg !4807
  %rem193 = urem i32 %81, %82, !dbg !4807
  %idxprom194 = zext i32 %rem193 to i64, !dbg !4807
  %arrayidx195 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem192, i64 0, i64 %idxprom194, !dbg !4807
  %83 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx195, align 8, !dbg !4807
  %84 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !4808
  %elem196 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %84, i32 0, i32 1, !dbg !4808
  %85 = load i32, i32* %i, align 4, !dbg !4808
  %idxprom197 = zext i32 %85 to i64, !dbg !4808
  %arrayidx198 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem196, i64 0, i64 %idxprom197, !dbg !4808
  store %struct.rtx_def* %83, %struct.rtx_def** %arrayidx198, align 8, !dbg !4809
  br label %for.inc199, !dbg !4808

for.inc199:                                       ; preds = %for.body190
  %86 = load i32, i32* %i, align 4, !dbg !4810
  %inc200 = add i32 %86, 1, !dbg !4810
  store i32 %inc200, i32* %i, align 4, !dbg !4810
  br label %for.cond187, !dbg !4811, !llvm.loop !4812

for.end201:                                       ; preds = %for.cond187
  br label %if.end202

if.end202:                                        ; preds = %for.end201, %for.end
  %87 = load i32, i32* %mode.addr, align 4, !dbg !4814
  %88 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !4815
  %call203 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %87, %struct.rtvec_def* %88), !dbg !4816
  store %struct.rtx_def* %call203, %struct.rtx_def** %retval, align 8, !dbg !4817
  br label %return, !dbg !4817

if.end204:                                        ; preds = %lor.lhs.false133
  br label %if.end205, !dbg !4818

if.end205:                                        ; preds = %if.end204, %entry
  %89 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom206 = zext i32 %89 to i64, !dbg !4819
  %arrayidx207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom206, !dbg !4819
  %90 = load i8, i8* %arrayidx207, align 1, !dbg !4819
  %conv208 = zext i8 %90 to i32, !dbg !4819
  %cmp209 = icmp eq i32 %conv208, 12, !dbg !4819
  br i1 %cmp209, label %land.lhs.true, label %lor.lhs.false211, !dbg !4819

lor.lhs.false211:                                 ; preds = %if.end205
  %91 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom212 = zext i32 %91 to i64, !dbg !4819
  %arrayidx213 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom212, !dbg !4819
  %92 = load i8, i8* %arrayidx213, align 1, !dbg !4819
  %conv214 = zext i8 %92 to i32, !dbg !4819
  %cmp215 = icmp eq i32 %conv214, 17, !dbg !4819
  br i1 %cmp215, label %land.lhs.true, label %lor.lhs.false217, !dbg !4819

lor.lhs.false217:                                 ; preds = %lor.lhs.false211
  %93 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom218 = zext i32 %93 to i64, !dbg !4819
  %arrayidx219 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom218, !dbg !4819
  %94 = load i8, i8* %arrayidx219, align 1, !dbg !4819
  %conv220 = zext i8 %94 to i32, !dbg !4819
  %cmp221 = icmp eq i32 %conv220, 13, !dbg !4819
  br i1 %cmp221, label %land.lhs.true, label %lor.lhs.false223, !dbg !4819

lor.lhs.false223:                                 ; preds = %lor.lhs.false217
  %95 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom224 = zext i32 %95 to i64, !dbg !4819
  %arrayidx225 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom224, !dbg !4819
  %96 = load i8, i8* %arrayidx225, align 1, !dbg !4819
  %conv226 = zext i8 %96 to i32, !dbg !4819
  %cmp227 = icmp eq i32 %conv226, 14, !dbg !4819
  br i1 %cmp227, label %land.lhs.true, label %lor.lhs.false229, !dbg !4819

lor.lhs.false229:                                 ; preds = %lor.lhs.false223
  %97 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom230 = zext i32 %97 to i64, !dbg !4819
  %arrayidx231 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom230, !dbg !4819
  %98 = load i8, i8* %arrayidx231, align 1, !dbg !4819
  %conv232 = zext i8 %98 to i32, !dbg !4819
  %cmp233 = icmp eq i32 %conv232, 15, !dbg !4819
  br i1 %cmp233, label %land.lhs.true, label %lor.lhs.false235, !dbg !4819

lor.lhs.false235:                                 ; preds = %lor.lhs.false229
  %99 = load i32, i32* %mode.addr, align 4, !dbg !4819
  %idxprom236 = zext i32 %99 to i64, !dbg !4819
  %arrayidx237 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom236, !dbg !4819
  %100 = load i8, i8* %arrayidx237, align 1, !dbg !4819
  %conv238 = zext i8 %100 to i32, !dbg !4819
  %cmp239 = icmp eq i32 %conv238, 16, !dbg !4819
  br i1 %cmp239, label %land.lhs.true, label %if.end311, !dbg !4821

land.lhs.true:                                    ; preds = %lor.lhs.false235, %lor.lhs.false229, %lor.lhs.false223, %lor.lhs.false217, %lor.lhs.false211, %if.end205
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4822
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !4822
  %bf.load241 = load i32, i32* %102, align 8, !dbg !4822
  %bf.clear242 = and i32 %bf.load241, 65535, !dbg !4822
  %cmp243 = icmp eq i32 %bf.clear242, 33, !dbg !4823
  br i1 %cmp243, label %if.then245, label %if.end311, !dbg !4824

if.then245:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %elt_size246, metadata !4825, metadata !DIExpression()), !dbg !4827
  %103 = load i32, i32* %mode.addr, align 4, !dbg !4828
  %idxprom247 = zext i32 %103 to i64, !dbg !4828
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom247, !dbg !4828
  %104 = load i8, i8* %arrayidx248, align 1, !dbg !4828
  %conv249 = zext i8 %104 to i32, !dbg !4828
  %idxprom250 = zext i32 %conv249 to i64, !dbg !4828
  %arrayidx251 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom250, !dbg !4828
  %105 = load i8, i8* %arrayidx251, align 1, !dbg !4828
  %conv252 = zext i8 %105 to i16, !dbg !4828
  %conv253 = zext i16 %conv252 to i32, !dbg !4828
  store i32 %conv253, i32* %elt_size246, align 4, !dbg !4827
  call void @llvm.dbg.declare(metadata i32* %n_elts254, metadata !4829, metadata !DIExpression()), !dbg !4830
  %106 = load i32, i32* %mode.addr, align 4, !dbg !4831
  %idxprom255 = zext i32 %106 to i64, !dbg !4831
  %arrayidx256 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom255, !dbg !4831
  %107 = load i8, i8* %arrayidx256, align 1, !dbg !4831
  %conv257 = zext i8 %107 to i16, !dbg !4831
  %conv258 = zext i16 %conv257 to i32, !dbg !4831
  %108 = load i32, i32* %elt_size246, align 4, !dbg !4832
  %div259 = sdiv i32 %conv258, %108, !dbg !4833
  store i32 %div259, i32* %n_elts254, align 4, !dbg !4830
  call void @llvm.dbg.declare(metadata i32* %opmode, metadata !4834, metadata !DIExpression()), !dbg !4835
  %109 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4836
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !4836
  %bf.load260 = load i32, i32* %110, align 8, !dbg !4836
  %bf.lshr261 = lshr i32 %bf.load260, 16, !dbg !4836
  %bf.clear262 = and i32 %bf.lshr261, 255, !dbg !4836
  store i32 %bf.clear262, i32* %opmode, align 4, !dbg !4835
  call void @llvm.dbg.declare(metadata i32* %op_elt_size, metadata !4837, metadata !DIExpression()), !dbg !4838
  %111 = load i32, i32* %opmode, align 4, !dbg !4839
  %idxprom263 = zext i32 %111 to i64, !dbg !4839
  %arrayidx264 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom263, !dbg !4839
  %112 = load i8, i8* %arrayidx264, align 1, !dbg !4839
  %conv265 = zext i8 %112 to i32, !dbg !4839
  %idxprom266 = zext i32 %conv265 to i64, !dbg !4839
  %arrayidx267 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom266, !dbg !4839
  %113 = load i8, i8* %arrayidx267, align 1, !dbg !4839
  %conv268 = zext i8 %113 to i16, !dbg !4839
  %conv269 = zext i16 %conv268 to i32, !dbg !4839
  store i32 %conv269, i32* %op_elt_size, align 4, !dbg !4838
  call void @llvm.dbg.declare(metadata i32* %op_n_elts, metadata !4840, metadata !DIExpression()), !dbg !4841
  %114 = load i32, i32* %opmode, align 4, !dbg !4842
  %idxprom270 = zext i32 %114 to i64, !dbg !4842
  %arrayidx271 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom270, !dbg !4842
  %115 = load i8, i8* %arrayidx271, align 1, !dbg !4842
  %conv272 = zext i8 %115 to i16, !dbg !4842
  %conv273 = zext i16 %conv272 to i32, !dbg !4842
  %116 = load i32, i32* %op_elt_size, align 4, !dbg !4843
  %div274 = sdiv i32 %conv273, %116, !dbg !4844
  store i32 %div274, i32* %op_n_elts, align 4, !dbg !4841
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v275, metadata !4845, metadata !DIExpression()), !dbg !4846
  %117 = load i32, i32* %n_elts254, align 4, !dbg !4847
  %call276 = call %struct.rtvec_def* @rtvec_alloc(i32 %117), !dbg !4848
  store %struct.rtvec_def* %call276, %struct.rtvec_def** %v275, align 8, !dbg !4846
  call void @llvm.dbg.declare(metadata i32* %i277, metadata !4849, metadata !DIExpression()), !dbg !4850
  %118 = load i32, i32* %op_n_elts, align 4, !dbg !4851
  %119 = load i32, i32* %n_elts254, align 4, !dbg !4851
  %cmp278 = icmp eq i32 %118, %119, !dbg !4851
  br i1 %cmp278, label %cond.false281, label %cond.true280, !dbg !4851

cond.true280:                                     ; preds = %if.then245
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1118, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4851
  br label %cond.end282, !dbg !4851

cond.false281:                                    ; preds = %if.then245
  br label %cond.end282, !dbg !4851

cond.end282:                                      ; preds = %cond.false281, %cond.true280
  %cond283 = phi i32 [ 0, %cond.true280 ], [ 0, %cond.false281 ], !dbg !4851
  store i32 0, i32* %i277, align 4, !dbg !4852
  br label %for.cond284, !dbg !4854

for.cond284:                                      ; preds = %for.inc307, %cond.end282
  %120 = load i32, i32* %i277, align 4, !dbg !4855
  %121 = load i32, i32* %n_elts254, align 4, !dbg !4857
  %cmp285 = icmp ult i32 %120, %121, !dbg !4858
  br i1 %cmp285, label %for.body287, label %for.end309, !dbg !4859

for.body287:                                      ; preds = %for.cond284
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !4860, metadata !DIExpression()), !dbg !4862
  %122 = load i32, i32* %code.addr, align 4, !dbg !4863
  %123 = load i32, i32* %mode.addr, align 4, !dbg !4864
  %idxprom288 = zext i32 %123 to i64, !dbg !4864
  %arrayidx289 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom288, !dbg !4864
  %124 = load i8, i8* %arrayidx289, align 1, !dbg !4864
  %conv290 = zext i8 %124 to i32, !dbg !4864
  %125 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4865
  %u291 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1, !dbg !4865
  %fld292 = bitcast %union.u* %u291 to [1 x %union.rtunion_def]*, !dbg !4865
  %arrayidx293 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld292, i64 0, i64 0, !dbg !4865
  %rt_rtvec294 = bitcast %union.rtunion_def* %arrayidx293 to %struct.rtvec_def**, !dbg !4865
  %126 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec294, align 8, !dbg !4865
  %elem295 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %126, i32 0, i32 1, !dbg !4865
  %127 = load i32, i32* %i277, align 4, !dbg !4865
  %idxprom296 = zext i32 %127 to i64, !dbg !4865
  %arrayidx297 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem295, i64 0, i64 %idxprom296, !dbg !4865
  %128 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx297, align 8, !dbg !4865
  %129 = load i32, i32* %opmode, align 4, !dbg !4866
  %idxprom298 = zext i32 %129 to i64, !dbg !4866
  %arrayidx299 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom298, !dbg !4866
  %130 = load i8, i8* %arrayidx299, align 1, !dbg !4866
  %conv300 = zext i8 %130 to i32, !dbg !4866
  %call301 = call %struct.rtx_def* @simplify_unary_operation(i32 %122, i32 %conv290, %struct.rtx_def* %128, i32 %conv300), !dbg !4867
  store %struct.rtx_def* %call301, %struct.rtx_def** %x, align 8, !dbg !4862
  %131 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4868
  %tobool = icmp ne %struct.rtx_def* %131, null, !dbg !4868
  br i1 %tobool, label %if.end303, label %if.then302, !dbg !4870

if.then302:                                       ; preds = %for.body287
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4871
  br label %return, !dbg !4871

if.end303:                                        ; preds = %for.body287
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4872
  %133 = load %struct.rtvec_def*, %struct.rtvec_def** %v275, align 8, !dbg !4873
  %elem304 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %133, i32 0, i32 1, !dbg !4873
  %134 = load i32, i32* %i277, align 4, !dbg !4873
  %idxprom305 = zext i32 %134 to i64, !dbg !4873
  %arrayidx306 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem304, i64 0, i64 %idxprom305, !dbg !4873
  store %struct.rtx_def* %132, %struct.rtx_def** %arrayidx306, align 8, !dbg !4874
  br label %for.inc307, !dbg !4875

for.inc307:                                       ; preds = %if.end303
  %135 = load i32, i32* %i277, align 4, !dbg !4876
  %inc308 = add i32 %135, 1, !dbg !4876
  store i32 %inc308, i32* %i277, align 4, !dbg !4876
  br label %for.cond284, !dbg !4877, !llvm.loop !4878

for.end309:                                       ; preds = %for.cond284
  %136 = load i32, i32* %mode.addr, align 4, !dbg !4880
  %137 = load %struct.rtvec_def*, %struct.rtvec_def** %v275, align 8, !dbg !4881
  %call310 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %136, %struct.rtvec_def* %137), !dbg !4882
  store %struct.rtx_def* %call310, %struct.rtx_def** %retval, align 8, !dbg !4883
  br label %return, !dbg !4883

if.end311:                                        ; preds = %land.lhs.true, %lor.lhs.false235
  %138 = load i32, i32* %code.addr, align 4, !dbg !4884
  %cmp312 = icmp eq i32 %138, 103, !dbg !4886
  br i1 %cmp312, label %land.lhs.true314, label %if.else350, !dbg !4887

land.lhs.true314:                                 ; preds = %if.end311
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4888
  %140 = bitcast %struct.rtx_def* %139 to i32*, !dbg !4888
  %bf.load315 = load i32, i32* %140, align 8, !dbg !4888
  %bf.lshr316 = lshr i32 %bf.load315, 16, !dbg !4888
  %bf.clear317 = and i32 %bf.lshr316, 255, !dbg !4888
  %cmp318 = icmp eq i32 %bf.clear317, 0, !dbg !4889
  br i1 %cmp318, label %land.lhs.true320, label %if.else350, !dbg !4890

land.lhs.true320:                                 ; preds = %land.lhs.true314
  %141 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4891
  %142 = bitcast %struct.rtx_def* %141 to i32*, !dbg !4891
  %bf.load321 = load i32, i32* %142, align 8, !dbg !4891
  %bf.clear322 = and i32 %bf.load321, 65535, !dbg !4891
  %cmp323 = icmp eq i32 %bf.clear322, 32, !dbg !4892
  br i1 %cmp323, label %if.then330, label %lor.lhs.false325, !dbg !4893

lor.lhs.false325:                                 ; preds = %land.lhs.true320
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4894
  %144 = bitcast %struct.rtx_def* %143 to i32*, !dbg !4894
  %bf.load326 = load i32, i32* %144, align 8, !dbg !4894
  %bf.clear327 = and i32 %bf.load326, 65535, !dbg !4894
  %cmp328 = icmp eq i32 %bf.clear327, 30, !dbg !4894
  br i1 %cmp328, label %if.then330, label %if.else350, !dbg !4895

if.then330:                                       ; preds = %lor.lhs.false325, %land.lhs.true320
  call void @llvm.dbg.declare(metadata i64* %hv, metadata !4896, metadata !DIExpression()), !dbg !4898
  call void @llvm.dbg.declare(metadata i64* %lv, metadata !4899, metadata !DIExpression()), !dbg !4900
  call void @llvm.dbg.declare(metadata %struct.real_value* %d, metadata !4901, metadata !DIExpression()), !dbg !4902
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4903
  %146 = bitcast %struct.rtx_def* %145 to i32*, !dbg !4903
  %bf.load331 = load i32, i32* %146, align 8, !dbg !4903
  %bf.clear332 = and i32 %bf.load331, 65535, !dbg !4903
  %cmp333 = icmp eq i32 %bf.clear332, 30, !dbg !4903
  br i1 %cmp333, label %if.then335, label %if.else341, !dbg !4905

if.then335:                                       ; preds = %if.then330
  %147 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4906
  %u336 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !4906
  %hwint = bitcast %union.u* %u336 to [1 x i64]*, !dbg !4906
  %arrayidx337 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !4906
  %148 = load i64, i64* %arrayidx337, align 8, !dbg !4906
  store i64 %148, i64* %lv, align 8, !dbg !4907
  %149 = load i64, i64* %lv, align 8, !dbg !4908
  %cmp338 = icmp slt i64 %149, 0, !dbg !4908
  %150 = zext i1 %cmp338 to i64, !dbg !4908
  %cond340 = select i1 %cmp338, i64 -1, i64 0, !dbg !4908
  store i64 %cond340, i64* %hv, align 8, !dbg !4909
  br label %if.end348, !dbg !4910

if.else341:                                       ; preds = %if.then330
  %151 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4911
  %u342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %151, i32 0, i32 1, !dbg !4911
  %hwint343 = bitcast %union.u* %u342 to [1 x i64]*, !dbg !4911
  %arrayidx344 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint343, i64 0, i64 0, !dbg !4911
  %152 = load i64, i64* %arrayidx344, align 8, !dbg !4911
  store i64 %152, i64* %lv, align 8, !dbg !4912
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4913
  %u345 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !4913
  %hwint346 = bitcast %union.u* %u345 to [1 x i64]*, !dbg !4913
  %arrayidx347 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint346, i64 0, i64 1, !dbg !4913
  %154 = load i64, i64* %arrayidx347, align 8, !dbg !4913
  store i64 %154, i64* %hv, align 8, !dbg !4914
  br label %if.end348

if.end348:                                        ; preds = %if.else341, %if.then335
  %155 = load i32, i32* %mode.addr, align 4, !dbg !4915
  %156 = load i64, i64* %lv, align 8, !dbg !4915
  %157 = load i64, i64* %hv, align 8, !dbg !4915
  call void @real_from_integer(%struct.real_value* %d, i32 %155, i64 %156, i64 %157, i32 0), !dbg !4915
  %158 = load i32, i32* %mode.addr, align 4, !dbg !4916
  call void @real_value_truncate(%struct.real_value* sret %tmp, i32 %158, %struct.real_value* byval(%struct.real_value) align 8 %d), !dbg !4917
  %159 = bitcast %struct.real_value* %d to i8*, !dbg !4917
  %160 = bitcast %struct.real_value* %tmp to i8*, !dbg !4917
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %160, i64 32, i1 false), !dbg !4917
  %161 = load i32, i32* %mode.addr, align 4, !dbg !4918
  %call349 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %d, i32 %161), !dbg !4918
  store %struct.rtx_def* %call349, %struct.rtx_def** %retval, align 8, !dbg !4919
  br label %return, !dbg !4919

if.else350:                                       ; preds = %lor.lhs.false325, %land.lhs.true314, %if.end311
  %162 = load i32, i32* %code.addr, align 4, !dbg !4920
  %cmp351 = icmp eq i32 %162, 105, !dbg !4922
  br i1 %cmp351, label %land.lhs.true353, label %if.end417, !dbg !4923

land.lhs.true353:                                 ; preds = %if.else350
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4924
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !4924
  %bf.load354 = load i32, i32* %164, align 8, !dbg !4924
  %bf.lshr355 = lshr i32 %bf.load354, 16, !dbg !4924
  %bf.clear356 = and i32 %bf.lshr355, 255, !dbg !4924
  %cmp357 = icmp eq i32 %bf.clear356, 0, !dbg !4925
  br i1 %cmp357, label %land.lhs.true359, label %if.end417, !dbg !4926

land.lhs.true359:                                 ; preds = %land.lhs.true353
  %165 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4927
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !4927
  %bf.load360 = load i32, i32* %166, align 8, !dbg !4927
  %bf.clear361 = and i32 %bf.load360, 65535, !dbg !4927
  %cmp362 = icmp eq i32 %bf.clear361, 32, !dbg !4928
  br i1 %cmp362, label %if.then369, label %lor.lhs.false364, !dbg !4929

lor.lhs.false364:                                 ; preds = %land.lhs.true359
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4930
  %168 = bitcast %struct.rtx_def* %167 to i32*, !dbg !4930
  %bf.load365 = load i32, i32* %168, align 8, !dbg !4930
  %bf.clear366 = and i32 %bf.load365, 65535, !dbg !4930
  %cmp367 = icmp eq i32 %bf.clear366, 30, !dbg !4930
  br i1 %cmp367, label %if.then369, label %if.end417, !dbg !4931

if.then369:                                       ; preds = %lor.lhs.false364, %land.lhs.true359
  call void @llvm.dbg.declare(metadata i64* %hv370, metadata !4932, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata i64* %lv371, metadata !4935, metadata !DIExpression()), !dbg !4936
  call void @llvm.dbg.declare(metadata %struct.real_value* %d372, metadata !4937, metadata !DIExpression()), !dbg !4938
  %169 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4939
  %170 = bitcast %struct.rtx_def* %169 to i32*, !dbg !4939
  %bf.load373 = load i32, i32* %170, align 8, !dbg !4939
  %bf.clear374 = and i32 %bf.load373, 65535, !dbg !4939
  %cmp375 = icmp eq i32 %bf.clear374, 30, !dbg !4939
  br i1 %cmp375, label %if.then377, label %if.else384, !dbg !4941

if.then377:                                       ; preds = %if.then369
  %171 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4942
  %u378 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1, !dbg !4942
  %hwint379 = bitcast %union.u* %u378 to [1 x i64]*, !dbg !4942
  %arrayidx380 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint379, i64 0, i64 0, !dbg !4942
  %172 = load i64, i64* %arrayidx380, align 8, !dbg !4942
  store i64 %172, i64* %lv371, align 8, !dbg !4943
  %173 = load i64, i64* %lv371, align 8, !dbg !4944
  %cmp381 = icmp slt i64 %173, 0, !dbg !4944
  %174 = zext i1 %cmp381 to i64, !dbg !4944
  %cond383 = select i1 %cmp381, i64 -1, i64 0, !dbg !4944
  store i64 %cond383, i64* %hv370, align 8, !dbg !4945
  br label %if.end391, !dbg !4946

if.else384:                                       ; preds = %if.then369
  %175 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4947
  %u385 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !4947
  %hwint386 = bitcast %union.u* %u385 to [1 x i64]*, !dbg !4947
  %arrayidx387 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint386, i64 0, i64 0, !dbg !4947
  %176 = load i64, i64* %arrayidx387, align 8, !dbg !4947
  store i64 %176, i64* %lv371, align 8, !dbg !4948
  %177 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4949
  %u388 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %177, i32 0, i32 1, !dbg !4949
  %hwint389 = bitcast %union.u* %u388 to [1 x i64]*, !dbg !4949
  %arrayidx390 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint389, i64 0, i64 1, !dbg !4949
  %178 = load i64, i64* %arrayidx390, align 8, !dbg !4949
  store i64 %178, i64* %hv370, align 8, !dbg !4950
  br label %if.end391

if.end391:                                        ; preds = %if.else384, %if.then377
  %179 = load i32, i32* %op_mode.addr, align 4, !dbg !4951
  %cmp392 = icmp eq i32 %179, 0, !dbg !4953
  br i1 %cmp392, label %if.then394, label %if.else399, !dbg !4954

if.then394:                                       ; preds = %if.end391
  %180 = load i64, i64* %hv370, align 8, !dbg !4955
  %cmp395 = icmp slt i64 %180, 0, !dbg !4958
  br i1 %cmp395, label %if.then397, label %if.end398, !dbg !4959

if.then397:                                       ; preds = %if.then394
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !4960
  br label %return, !dbg !4960

if.end398:                                        ; preds = %if.then394
  br label %if.end414, !dbg !4961

if.else399:                                       ; preds = %if.end391
  %181 = load i32, i32* %op_mode.addr, align 4, !dbg !4962
  %idxprom400 = zext i32 %181 to i64, !dbg !4962
  %arrayidx401 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom400, !dbg !4962
  %182 = load i8, i8* %arrayidx401, align 1, !dbg !4962
  %conv402 = zext i8 %182 to i16, !dbg !4962
  %conv403 = zext i16 %conv402 to i32, !dbg !4962
  %mul404 = mul nsw i32 %conv403, 8, !dbg !4962
  %conv405 = trunc i32 %mul404 to i16, !dbg !4962
  %conv406 = zext i16 %conv405 to i32, !dbg !4962
  %cmp407 = icmp sge i32 %conv406, 128, !dbg !4964
  br i1 %cmp407, label %if.then409, label %if.else410, !dbg !4965

if.then409:                                       ; preds = %if.else399
  br label %if.end413, !dbg !4965

if.else410:                                       ; preds = %if.else399
  store i64 0, i64* %hv370, align 8, !dbg !4966
  %183 = load i32, i32* %op_mode.addr, align 4, !dbg !4967
  %idxprom411 = zext i32 %183 to i64, !dbg !4967
  %arrayidx412 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom411, !dbg !4967
  %184 = load i64, i64* %arrayidx412, align 8, !dbg !4967
  %185 = load i64, i64* %lv371, align 8, !dbg !4968
  %and = and i64 %185, %184, !dbg !4968
  store i64 %and, i64* %lv371, align 8, !dbg !4968
  br label %if.end413

if.end413:                                        ; preds = %if.else410, %if.then409
  br label %if.end414

if.end414:                                        ; preds = %if.end413, %if.end398
  %186 = load i32, i32* %mode.addr, align 4, !dbg !4969
  %187 = load i64, i64* %lv371, align 8, !dbg !4969
  %188 = load i64, i64* %hv370, align 8, !dbg !4969
  call void @real_from_integer(%struct.real_value* %d372, i32 %186, i64 %187, i64 %188, i32 1), !dbg !4969
  %189 = load i32, i32* %mode.addr, align 4, !dbg !4970
  call void @real_value_truncate(%struct.real_value* sret %tmp415, i32 %189, %struct.real_value* byval(%struct.real_value) align 8 %d372), !dbg !4971
  %190 = bitcast %struct.real_value* %d372 to i8*, !dbg !4971
  %191 = bitcast %struct.real_value* %tmp415 to i8*, !dbg !4971
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 32, i1 false), !dbg !4971
  %192 = load i32, i32* %mode.addr, align 4, !dbg !4972
  %call416 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %d372, i32 %192), !dbg !4972
  store %struct.rtx_def* %call416, %struct.rtx_def** %retval, align 8, !dbg !4973
  br label %return, !dbg !4973

if.end417:                                        ; preds = %lor.lhs.false364, %land.lhs.true353, %if.else350
  br label %if.end418

if.end418:                                        ; preds = %if.end417
  %193 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4974
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !4974
  %bf.load419 = load i32, i32* %194, align 8, !dbg !4974
  %bf.clear420 = and i32 %bf.load419, 65535, !dbg !4974
  %cmp421 = icmp eq i32 %bf.clear420, 30, !dbg !4974
  br i1 %cmp421, label %land.lhs.true423, label %if.else659, !dbg !4976

land.lhs.true423:                                 ; preds = %if.end418
  %195 = load i32, i32* %width, align 4, !dbg !4977
  %cmp424 = icmp ule i32 %195, 64, !dbg !4978
  br i1 %cmp424, label %land.lhs.true426, label %if.else659, !dbg !4979

land.lhs.true426:                                 ; preds = %land.lhs.true423
  %196 = load i32, i32* %width, align 4, !dbg !4980
  %cmp427 = icmp ugt i32 %196, 0, !dbg !4981
  br i1 %cmp427, label %if.then429, label %if.else659, !dbg !4982

if.then429:                                       ; preds = %land.lhs.true426
  call void @llvm.dbg.declare(metadata i64* %arg0, metadata !4983, metadata !DIExpression()), !dbg !4985
  %197 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4986
  %u430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1, !dbg !4986
  %hwint431 = bitcast %union.u* %u430 to [1 x i64]*, !dbg !4986
  %arrayidx432 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint431, i64 0, i64 0, !dbg !4986
  %198 = load i64, i64* %arrayidx432, align 8, !dbg !4986
  store i64 %198, i64* %arg0, align 8, !dbg !4985
  call void @llvm.dbg.declare(metadata i64* %val, metadata !4987, metadata !DIExpression()), !dbg !4988
  %199 = load i32, i32* %code.addr, align 4, !dbg !4989
  switch i32 %199, label %sw.default [
    i32 64, label %sw.bb
    i32 51, label %sw.bb433
    i32 111, label %sw.bb434
    i32 114, label %sw.bb442
    i32 115, label %sw.bb450
    i32 116, label %sw.bb471
    i32 117, label %sw.bb491
    i32 118, label %sw.bb499
    i32 113, label %sw.bb511
    i32 100, label %sw.bb524
    i32 99, label %sw.bb525
    i32 98, label %sw.bb580
    i32 112, label %sw.bb657
    i32 101, label %sw.bb657
    i32 102, label %sw.bb657
    i32 136, label %sw.bb657
    i32 137, label %sw.bb657
    i32 130, label %sw.bb657
    i32 131, label %sw.bb657
    i32 132, label %sw.bb657
  ], !dbg !4990

sw.bb:                                            ; preds = %if.then429
  %200 = load i64, i64* %arg0, align 8, !dbg !4991
  %neg = xor i64 %200, -1, !dbg !4993
  store i64 %neg, i64* %val, align 8, !dbg !4994
  br label %sw.epilog, !dbg !4995

sw.bb433:                                         ; preds = %if.then429
  %201 = load i64, i64* %arg0, align 8, !dbg !4996
  %sub = sub nsw i64 0, %201, !dbg !4997
  store i64 %sub, i64* %val, align 8, !dbg !4998
  br label %sw.epilog, !dbg !4999

sw.bb434:                                         ; preds = %if.then429
  %202 = load i64, i64* %arg0, align 8, !dbg !5000
  %cmp435 = icmp sge i64 %202, 0, !dbg !5001
  br i1 %cmp435, label %cond.true437, label %cond.false438, !dbg !5000

cond.true437:                                     ; preds = %sw.bb434
  %203 = load i64, i64* %arg0, align 8, !dbg !5002
  br label %cond.end440, !dbg !5000

cond.false438:                                    ; preds = %sw.bb434
  %204 = load i64, i64* %arg0, align 8, !dbg !5003
  %sub439 = sub nsw i64 0, %204, !dbg !5004
  br label %cond.end440, !dbg !5000

cond.end440:                                      ; preds = %cond.false438, %cond.true437
  %cond441 = phi i64 [ %203, %cond.true437 ], [ %sub439, %cond.false438 ], !dbg !5000
  store i64 %cond441, i64* %val, align 8, !dbg !5005
  br label %sw.epilog, !dbg !5006

sw.bb442:                                         ; preds = %if.then429
  %205 = load i32, i32* %mode.addr, align 4, !dbg !5007
  %idxprom443 = zext i32 %205 to i64, !dbg !5007
  %arrayidx444 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom443, !dbg !5007
  %206 = load i64, i64* %arrayidx444, align 8, !dbg !5007
  %207 = load i64, i64* %arg0, align 8, !dbg !5008
  %and445 = and i64 %207, %206, !dbg !5008
  store i64 %and445, i64* %arg0, align 8, !dbg !5008
  %208 = load i64, i64* %arg0, align 8, !dbg !5009
  %209 = load i64, i64* %arg0, align 8, !dbg !5010
  %sub446 = sub nsw i64 0, %209, !dbg !5011
  %and447 = and i64 %208, %sub446, !dbg !5012
  %call448 = call i32 @exact_log2(i64 %and447), !dbg !5013
  %add = add nsw i32 %call448, 1, !dbg !5014
  %conv449 = sext i32 %add to i64, !dbg !5013
  store i64 %conv449, i64* %val, align 8, !dbg !5015
  br label %sw.epilog, !dbg !5016

sw.bb450:                                         ; preds = %if.then429
  %210 = load i32, i32* %mode.addr, align 4, !dbg !5017
  %idxprom451 = zext i32 %210 to i64, !dbg !5017
  %arrayidx452 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom451, !dbg !5017
  %211 = load i64, i64* %arrayidx452, align 8, !dbg !5017
  %212 = load i64, i64* %arg0, align 8, !dbg !5018
  %and453 = and i64 %212, %211, !dbg !5018
  store i64 %and453, i64* %arg0, align 8, !dbg !5018
  %213 = load i64, i64* %arg0, align 8, !dbg !5019
  %cmp454 = icmp eq i64 %213, 0, !dbg !5021
  br i1 %cmp454, label %land.lhs.true456, label %if.else458, !dbg !5022

land.lhs.true456:                                 ; preds = %sw.bb450
  br i1 false, label %if.then457, label %if.else458, !dbg !5023

if.then457:                                       ; preds = %land.lhs.true456
  br label %if.end470, !dbg !5023

if.else458:                                       ; preds = %land.lhs.true456, %sw.bb450
  %214 = load i32, i32* %mode.addr, align 4, !dbg !5024
  %idxprom459 = zext i32 %214 to i64, !dbg !5024
  %arrayidx460 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom459, !dbg !5024
  %215 = load i8, i8* %arrayidx460, align 1, !dbg !5024
  %conv461 = zext i8 %215 to i16, !dbg !5024
  %conv462 = zext i16 %conv461 to i32, !dbg !5024
  %mul463 = mul nsw i32 %conv462, 8, !dbg !5024
  %conv464 = trunc i32 %mul463 to i16, !dbg !5024
  %conv465 = zext i16 %conv464 to i32, !dbg !5024
  %216 = load i64, i64* %arg0, align 8, !dbg !5025
  %call466 = call i32 @floor_log2(i64 %216), !dbg !5026
  %sub467 = sub nsw i32 %conv465, %call466, !dbg !5027
  %sub468 = sub nsw i32 %sub467, 1, !dbg !5028
  %conv469 = sext i32 %sub468 to i64, !dbg !5024
  store i64 %conv469, i64* %val, align 8, !dbg !5029
  br label %if.end470

if.end470:                                        ; preds = %if.else458, %if.then457
  br label %sw.epilog, !dbg !5030

sw.bb471:                                         ; preds = %if.then429
  %217 = load i32, i32* %mode.addr, align 4, !dbg !5031
  %idxprom472 = zext i32 %217 to i64, !dbg !5031
  %arrayidx473 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom472, !dbg !5031
  %218 = load i64, i64* %arrayidx473, align 8, !dbg !5031
  %219 = load i64, i64* %arg0, align 8, !dbg !5032
  %and474 = and i64 %219, %218, !dbg !5032
  store i64 %and474, i64* %arg0, align 8, !dbg !5032
  %220 = load i64, i64* %arg0, align 8, !dbg !5033
  %cmp475 = icmp eq i64 %220, 0, !dbg !5035
  br i1 %cmp475, label %if.then477, label %if.else485, !dbg !5036

if.then477:                                       ; preds = %sw.bb471
  %221 = load i32, i32* %mode.addr, align 4, !dbg !5037
  %idxprom478 = zext i32 %221 to i64, !dbg !5037
  %arrayidx479 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom478, !dbg !5037
  %222 = load i8, i8* %arrayidx479, align 1, !dbg !5037
  %conv480 = zext i8 %222 to i16, !dbg !5037
  %conv481 = zext i16 %conv480 to i32, !dbg !5037
  %mul482 = mul nsw i32 %conv481, 8, !dbg !5037
  %conv483 = trunc i32 %mul482 to i16, !dbg !5037
  %conv484 = zext i16 %conv483 to i64, !dbg !5037
  store i64 %conv484, i64* %val, align 8, !dbg !5040
  br label %if.end490, !dbg !5041

if.else485:                                       ; preds = %sw.bb471
  %223 = load i64, i64* %arg0, align 8, !dbg !5042
  %224 = load i64, i64* %arg0, align 8, !dbg !5043
  %sub486 = sub nsw i64 0, %224, !dbg !5044
  %and487 = and i64 %223, %sub486, !dbg !5045
  %call488 = call i32 @exact_log2(i64 %and487), !dbg !5046
  %conv489 = sext i32 %call488 to i64, !dbg !5046
  store i64 %conv489, i64* %val, align 8, !dbg !5047
  br label %if.end490

if.end490:                                        ; preds = %if.else485, %if.then477
  br label %sw.epilog, !dbg !5048

sw.bb491:                                         ; preds = %if.then429
  %225 = load i32, i32* %mode.addr, align 4, !dbg !5049
  %idxprom492 = zext i32 %225 to i64, !dbg !5049
  %arrayidx493 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom492, !dbg !5049
  %226 = load i64, i64* %arrayidx493, align 8, !dbg !5049
  %227 = load i64, i64* %arg0, align 8, !dbg !5050
  %and494 = and i64 %227, %226, !dbg !5050
  store i64 %and494, i64* %arg0, align 8, !dbg !5050
  store i64 0, i64* %val, align 8, !dbg !5051
  br label %while.cond, !dbg !5052

while.cond:                                       ; preds = %while.body, %sw.bb491
  %228 = load i64, i64* %arg0, align 8, !dbg !5053
  %tobool495 = icmp ne i64 %228, 0, !dbg !5052
  br i1 %tobool495, label %while.body, label %while.end, !dbg !5052

while.body:                                       ; preds = %while.cond
  %229 = load i64, i64* %val, align 8, !dbg !5054
  %inc496 = add nsw i64 %229, 1, !dbg !5054
  store i64 %inc496, i64* %val, align 8, !dbg !5054
  %230 = load i64, i64* %arg0, align 8, !dbg !5055
  %sub497 = sub nsw i64 %230, 1, !dbg !5056
  %231 = load i64, i64* %arg0, align 8, !dbg !5057
  %and498 = and i64 %231, %sub497, !dbg !5057
  store i64 %and498, i64* %arg0, align 8, !dbg !5057
  br label %while.cond, !dbg !5052, !llvm.loop !5058

while.end:                                        ; preds = %while.cond
  br label %sw.epilog, !dbg !5060

sw.bb499:                                         ; preds = %if.then429
  %232 = load i32, i32* %mode.addr, align 4, !dbg !5061
  %idxprom500 = zext i32 %232 to i64, !dbg !5061
  %arrayidx501 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom500, !dbg !5061
  %233 = load i64, i64* %arrayidx501, align 8, !dbg !5061
  %234 = load i64, i64* %arg0, align 8, !dbg !5062
  %and502 = and i64 %234, %233, !dbg !5062
  store i64 %and502, i64* %arg0, align 8, !dbg !5062
  store i64 0, i64* %val, align 8, !dbg !5063
  br label %while.cond503, !dbg !5064

while.cond503:                                    ; preds = %while.body505, %sw.bb499
  %235 = load i64, i64* %arg0, align 8, !dbg !5065
  %tobool504 = icmp ne i64 %235, 0, !dbg !5064
  br i1 %tobool504, label %while.body505, label %while.end509, !dbg !5064

while.body505:                                    ; preds = %while.cond503
  %236 = load i64, i64* %val, align 8, !dbg !5066
  %inc506 = add nsw i64 %236, 1, !dbg !5066
  store i64 %inc506, i64* %val, align 8, !dbg !5066
  %237 = load i64, i64* %arg0, align 8, !dbg !5067
  %sub507 = sub nsw i64 %237, 1, !dbg !5068
  %238 = load i64, i64* %arg0, align 8, !dbg !5069
  %and508 = and i64 %238, %sub507, !dbg !5069
  store i64 %and508, i64* %arg0, align 8, !dbg !5069
  br label %while.cond503, !dbg !5064, !llvm.loop !5070

while.end509:                                     ; preds = %while.cond503
  %239 = load i64, i64* %val, align 8, !dbg !5072
  %and510 = and i64 %239, 1, !dbg !5072
  store i64 %and510, i64* %val, align 8, !dbg !5072
  br label %sw.epilog, !dbg !5073

sw.bb511:                                         ; preds = %if.then429
  call void @llvm.dbg.declare(metadata i32* %s, metadata !5074, metadata !DIExpression()), !dbg !5076
  store i64 0, i64* %val, align 8, !dbg !5077
  store i32 0, i32* %s, align 4, !dbg !5078
  br label %for.cond512, !dbg !5080

for.cond512:                                      ; preds = %for.inc521, %sw.bb511
  %240 = load i32, i32* %s, align 4, !dbg !5081
  %241 = load i32, i32* %width, align 4, !dbg !5083
  %cmp513 = icmp ult i32 %240, %241, !dbg !5084
  br i1 %cmp513, label %for.body515, label %for.end523, !dbg !5085

for.body515:                                      ; preds = %for.cond512
  call void @llvm.dbg.declare(metadata i32* %d516, metadata !5086, metadata !DIExpression()), !dbg !5088
  %242 = load i32, i32* %width, align 4, !dbg !5089
  %243 = load i32, i32* %s, align 4, !dbg !5090
  %sub517 = sub i32 %242, %243, !dbg !5091
  %sub518 = sub i32 %sub517, 8, !dbg !5092
  store i32 %sub518, i32* %d516, align 4, !dbg !5088
  call void @llvm.dbg.declare(metadata i64* %byte, metadata !5093, metadata !DIExpression()), !dbg !5094
  %244 = load i64, i64* %arg0, align 8, !dbg !5095
  %245 = load i32, i32* %s, align 4, !dbg !5096
  %sh_prom = zext i32 %245 to i64, !dbg !5097
  %shr = ashr i64 %244, %sh_prom, !dbg !5097
  %and519 = and i64 %shr, 255, !dbg !5098
  store i64 %and519, i64* %byte, align 8, !dbg !5099
  %246 = load i64, i64* %byte, align 8, !dbg !5100
  %247 = load i32, i32* %d516, align 4, !dbg !5101
  %sh_prom520 = zext i32 %247 to i64, !dbg !5102
  %shl = shl i64 %246, %sh_prom520, !dbg !5102
  %248 = load i64, i64* %val, align 8, !dbg !5103
  %or = or i64 %248, %shl, !dbg !5103
  store i64 %or, i64* %val, align 8, !dbg !5103
  br label %for.inc521, !dbg !5104

for.inc521:                                       ; preds = %for.body515
  %249 = load i32, i32* %s, align 4, !dbg !5105
  %add522 = add i32 %249, 8, !dbg !5105
  store i32 %add522, i32* %s, align 4, !dbg !5105
  br label %for.cond512, !dbg !5106, !llvm.loop !5107

for.end523:                                       ; preds = %for.cond512
  br label %sw.epilog, !dbg !5109

sw.bb524:                                         ; preds = %if.then429
  %250 = load i64, i64* %arg0, align 8, !dbg !5110
  store i64 %250, i64* %val, align 8, !dbg !5111
  br label %sw.epilog, !dbg !5112

sw.bb525:                                         ; preds = %if.then429
  %251 = load i32, i32* %op_mode.addr, align 4, !dbg !5113
  %cmp526 = icmp ne i32 %251, 0, !dbg !5113
  br i1 %cmp526, label %cond.false529, label %cond.true528, !dbg !5113

cond.true528:                                     ; preds = %sw.bb525
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1264, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5113
  br label %cond.end530, !dbg !5113

cond.false529:                                    ; preds = %sw.bb525
  br label %cond.end530, !dbg !5113

cond.end530:                                      ; preds = %cond.false529, %cond.true528
  %cond531 = phi i32 [ 0, %cond.true528 ], [ 0, %cond.false529 ], !dbg !5113
  %252 = load i32, i32* %op_mode.addr, align 4, !dbg !5114
  %idxprom532 = zext i32 %252 to i64, !dbg !5114
  %arrayidx533 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom532, !dbg !5114
  %253 = load i8, i8* %arrayidx533, align 1, !dbg !5114
  %conv534 = zext i8 %253 to i16, !dbg !5114
  %conv535 = zext i16 %conv534 to i32, !dbg !5114
  %mul536 = mul nsw i32 %conv535, 8, !dbg !5114
  %conv537 = trunc i32 %mul536 to i16, !dbg !5114
  %conv538 = zext i16 %conv537 to i32, !dbg !5114
  %cmp539 = icmp eq i32 %conv538, 64, !dbg !5116
  br i1 %cmp539, label %if.then541, label %if.else555, !dbg !5117

if.then541:                                       ; preds = %cond.end530
  %254 = load i32, i32* %width, align 4, !dbg !5118
  %255 = load i32, i32* %op_mode.addr, align 4, !dbg !5118
  %idxprom542 = zext i32 %255 to i64, !dbg !5118
  %arrayidx543 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom542, !dbg !5118
  %256 = load i8, i8* %arrayidx543, align 1, !dbg !5118
  %conv544 = zext i8 %256 to i16, !dbg !5118
  %conv545 = zext i16 %conv544 to i32, !dbg !5118
  %mul546 = mul nsw i32 %conv545, 8, !dbg !5118
  %conv547 = trunc i32 %mul546 to i16, !dbg !5118
  %conv548 = zext i16 %conv547 to i32, !dbg !5118
  %cmp549 = icmp eq i32 %254, %conv548, !dbg !5118
  br i1 %cmp549, label %cond.false552, label %cond.true551, !dbg !5118

cond.true551:                                     ; preds = %if.then541
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1270, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5118
  br label %cond.end553, !dbg !5118

cond.false552:                                    ; preds = %if.then541
  br label %cond.end553, !dbg !5118

cond.end553:                                      ; preds = %cond.false552, %cond.true551
  %cond554 = phi i32 [ 0, %cond.true551 ], [ 0, %cond.false552 ], !dbg !5118
  %257 = load i64, i64* %arg0, align 8, !dbg !5120
  store i64 %257, i64* %val, align 8, !dbg !5121
  br label %if.end579, !dbg !5122

if.else555:                                       ; preds = %cond.end530
  %258 = load i32, i32* %op_mode.addr, align 4, !dbg !5123
  %idxprom556 = zext i32 %258 to i64, !dbg !5123
  %arrayidx557 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom556, !dbg !5123
  %259 = load i8, i8* %arrayidx557, align 1, !dbg !5123
  %conv558 = zext i8 %259 to i16, !dbg !5123
  %conv559 = zext i16 %conv558 to i32, !dbg !5123
  %mul560 = mul nsw i32 %conv559, 8, !dbg !5123
  %conv561 = trunc i32 %mul560 to i16, !dbg !5123
  %conv562 = zext i16 %conv561 to i32, !dbg !5123
  %cmp563 = icmp slt i32 %conv562, 64, !dbg !5125
  br i1 %cmp563, label %if.then565, label %if.else577, !dbg !5126

if.then565:                                       ; preds = %if.else555
  %260 = load i64, i64* %arg0, align 8, !dbg !5127
  %261 = load i32, i32* %op_mode.addr, align 4, !dbg !5128
  %idxprom566 = zext i32 %261 to i64, !dbg !5128
  %arrayidx567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom566, !dbg !5128
  %262 = load i8, i8* %arrayidx567, align 1, !dbg !5128
  %conv568 = zext i8 %262 to i16, !dbg !5128
  %conv569 = zext i16 %conv568 to i32, !dbg !5128
  %mul570 = mul nsw i32 %conv569, 8, !dbg !5128
  %conv571 = trunc i32 %mul570 to i16, !dbg !5128
  %conv572 = zext i16 %conv571 to i32, !dbg !5128
  %sh_prom573 = zext i32 %conv572 to i64, !dbg !5129
  %shl574 = shl i64 -1, %sh_prom573, !dbg !5129
  %neg575 = xor i64 %shl574, -1, !dbg !5130
  %and576 = and i64 %260, %neg575, !dbg !5131
  store i64 %and576, i64* %val, align 8, !dbg !5132
  br label %if.end578, !dbg !5133

if.else577:                                       ; preds = %if.else555
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5134
  br label %return, !dbg !5134

if.end578:                                        ; preds = %if.then565
  br label %if.end579

if.end579:                                        ; preds = %if.end578, %cond.end553
  br label %sw.epilog, !dbg !5135

sw.bb580:                                         ; preds = %if.then429
  %263 = load i32, i32* %op_mode.addr, align 4, !dbg !5136
  %cmp581 = icmp eq i32 %263, 0, !dbg !5138
  br i1 %cmp581, label %if.then583, label %if.end584, !dbg !5139

if.then583:                                       ; preds = %sw.bb580
  %264 = load i32, i32* %mode.addr, align 4, !dbg !5140
  store i32 %264, i32* %op_mode.addr, align 4, !dbg !5141
  br label %if.end584, !dbg !5142

if.end584:                                        ; preds = %if.then583, %sw.bb580
  %265 = load i32, i32* %op_mode.addr, align 4, !dbg !5143
  %idxprom585 = zext i32 %265 to i64, !dbg !5143
  %arrayidx586 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom585, !dbg !5143
  %266 = load i8, i8* %arrayidx586, align 1, !dbg !5143
  %conv587 = zext i8 %266 to i16, !dbg !5143
  %conv588 = zext i16 %conv587 to i32, !dbg !5143
  %mul589 = mul nsw i32 %conv588, 8, !dbg !5143
  %conv590 = trunc i32 %mul589 to i16, !dbg !5143
  %conv591 = zext i16 %conv590 to i32, !dbg !5143
  %cmp592 = icmp eq i32 %conv591, 64, !dbg !5145
  br i1 %cmp592, label %if.then594, label %if.else608, !dbg !5146

if.then594:                                       ; preds = %if.end584
  %267 = load i32, i32* %width, align 4, !dbg !5147
  %268 = load i32, i32* %op_mode.addr, align 4, !dbg !5147
  %idxprom595 = zext i32 %268 to i64, !dbg !5147
  %arrayidx596 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom595, !dbg !5147
  %269 = load i8, i8* %arrayidx596, align 1, !dbg !5147
  %conv597 = zext i8 %269 to i16, !dbg !5147
  %conv598 = zext i16 %conv597 to i32, !dbg !5147
  %mul599 = mul nsw i32 %conv598, 8, !dbg !5147
  %conv600 = trunc i32 %mul599 to i16, !dbg !5147
  %conv601 = zext i16 %conv600 to i32, !dbg !5147
  %cmp602 = icmp eq i32 %267, %conv601, !dbg !5147
  br i1 %cmp602, label %cond.false605, label %cond.true604, !dbg !5147

cond.true604:                                     ; preds = %if.then594
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1287, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5147
  br label %cond.end606, !dbg !5147

cond.false605:                                    ; preds = %if.then594
  br label %cond.end606, !dbg !5147

cond.end606:                                      ; preds = %cond.false605, %cond.true604
  %cond607 = phi i32 [ 0, %cond.true604 ], [ 0, %cond.false605 ], !dbg !5147
  %270 = load i64, i64* %arg0, align 8, !dbg !5149
  store i64 %270, i64* %val, align 8, !dbg !5150
  br label %if.end656, !dbg !5151

if.else608:                                       ; preds = %if.end584
  %271 = load i32, i32* %op_mode.addr, align 4, !dbg !5152
  %idxprom609 = zext i32 %271 to i64, !dbg !5152
  %arrayidx610 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom609, !dbg !5152
  %272 = load i8, i8* %arrayidx610, align 1, !dbg !5152
  %conv611 = zext i8 %272 to i16, !dbg !5152
  %conv612 = zext i16 %conv611 to i32, !dbg !5152
  %mul613 = mul nsw i32 %conv612, 8, !dbg !5152
  %conv614 = trunc i32 %mul613 to i16, !dbg !5152
  %conv615 = zext i16 %conv614 to i32, !dbg !5152
  %cmp616 = icmp slt i32 %conv615, 64, !dbg !5154
  br i1 %cmp616, label %if.then618, label %if.else654, !dbg !5155

if.then618:                                       ; preds = %if.else608
  %273 = load i64, i64* %arg0, align 8, !dbg !5156
  %274 = load i32, i32* %op_mode.addr, align 4, !dbg !5158
  %idxprom619 = zext i32 %274 to i64, !dbg !5158
  %arrayidx620 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom619, !dbg !5158
  %275 = load i8, i8* %arrayidx620, align 1, !dbg !5158
  %conv621 = zext i8 %275 to i16, !dbg !5158
  %conv622 = zext i16 %conv621 to i32, !dbg !5158
  %mul623 = mul nsw i32 %conv622, 8, !dbg !5158
  %conv624 = trunc i32 %mul623 to i16, !dbg !5158
  %conv625 = zext i16 %conv624 to i32, !dbg !5158
  %sh_prom626 = zext i32 %conv625 to i64, !dbg !5159
  %shl627 = shl i64 -1, %sh_prom626, !dbg !5159
  %neg628 = xor i64 %shl627, -1, !dbg !5160
  %and629 = and i64 %273, %neg628, !dbg !5161
  store i64 %and629, i64* %val, align 8, !dbg !5162
  %276 = load i64, i64* %val, align 8, !dbg !5163
  %277 = load i32, i32* %op_mode.addr, align 4, !dbg !5165
  %idxprom630 = zext i32 %277 to i64, !dbg !5165
  %arrayidx631 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom630, !dbg !5165
  %278 = load i8, i8* %arrayidx631, align 1, !dbg !5165
  %conv632 = zext i8 %278 to i16, !dbg !5165
  %conv633 = zext i16 %conv632 to i32, !dbg !5165
  %mul634 = mul nsw i32 %conv633, 8, !dbg !5165
  %conv635 = trunc i32 %mul634 to i16, !dbg !5165
  %conv636 = zext i16 %conv635 to i32, !dbg !5165
  %sub637 = sub nsw i32 %conv636, 1, !dbg !5166
  %sh_prom638 = zext i32 %sub637 to i64, !dbg !5167
  %shl639 = shl i64 1, %sh_prom638, !dbg !5167
  %and640 = and i64 %276, %shl639, !dbg !5168
  %tobool641 = icmp ne i64 %and640, 0, !dbg !5168
  br i1 %tobool641, label %if.then642, label %if.end653, !dbg !5169

if.then642:                                       ; preds = %if.then618
  %279 = load i32, i32* %op_mode.addr, align 4, !dbg !5170
  %idxprom643 = zext i32 %279 to i64, !dbg !5170
  %arrayidx644 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom643, !dbg !5170
  %280 = load i8, i8* %arrayidx644, align 1, !dbg !5170
  %conv645 = zext i8 %280 to i16, !dbg !5170
  %conv646 = zext i16 %conv645 to i32, !dbg !5170
  %mul647 = mul nsw i32 %conv646, 8, !dbg !5170
  %conv648 = trunc i32 %mul647 to i16, !dbg !5170
  %conv649 = zext i16 %conv648 to i32, !dbg !5170
  %sh_prom650 = zext i32 %conv649 to i64, !dbg !5171
  %shl651 = shl i64 1, %sh_prom650, !dbg !5171
  %281 = load i64, i64* %val, align 8, !dbg !5172
  %sub652 = sub nsw i64 %281, %shl651, !dbg !5172
  store i64 %sub652, i64* %val, align 8, !dbg !5172
  br label %if.end653, !dbg !5173

if.end653:                                        ; preds = %if.then642, %if.then618
  br label %if.end655, !dbg !5174

if.else654:                                       ; preds = %if.else608
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5175
  br label %return, !dbg !5175

if.end655:                                        ; preds = %if.end653
  br label %if.end656

if.end656:                                        ; preds = %if.end655, %cond.end606
  br label %sw.epilog, !dbg !5176

sw.bb657:                                         ; preds = %if.then429, %if.then429, %if.then429, %if.then429, %if.then429, %if.then429, %if.then429, %if.then429
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5177
  br label %return, !dbg !5177

sw.default:                                       ; preds = %if.then429
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1313, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5178
  br label %sw.epilog, !dbg !5179

sw.epilog:                                        ; preds = %sw.default, %if.end656, %if.end579, %sw.bb524, %for.end523, %while.end509, %while.end, %if.end490, %if.end470, %sw.bb442, %cond.end440, %sw.bb433, %sw.bb
  %282 = load i64, i64* %val, align 8, !dbg !5180
  %283 = load i32, i32* %mode.addr, align 4, !dbg !5181
  %call658 = call %struct.rtx_def* @gen_int_mode(i64 %282, i32 %283), !dbg !5182
  store %struct.rtx_def* %call658, %struct.rtx_def** %retval, align 8, !dbg !5183
  br label %return, !dbg !5183

if.else659:                                       ; preds = %land.lhs.true426, %land.lhs.true423, %if.end418
  %284 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5184
  %285 = bitcast %struct.rtx_def* %284 to i32*, !dbg !5184
  %bf.load660 = load i32, i32* %285, align 8, !dbg !5184
  %bf.lshr661 = lshr i32 %bf.load660, 16, !dbg !5184
  %bf.clear662 = and i32 %bf.lshr661, 255, !dbg !5184
  %cmp663 = icmp eq i32 %bf.clear662, 0, !dbg !5186
  br i1 %cmp663, label %land.lhs.true665, label %if.else953, !dbg !5187

land.lhs.true665:                                 ; preds = %if.else659
  %286 = load i32, i32* %width, align 4, !dbg !5188
  %cmp666 = icmp ule i32 %286, 128, !dbg !5189
  br i1 %cmp666, label %land.lhs.true668, label %if.else953, !dbg !5190

land.lhs.true668:                                 ; preds = %land.lhs.true665
  %287 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5191
  %288 = bitcast %struct.rtx_def* %287 to i32*, !dbg !5191
  %bf.load669 = load i32, i32* %288, align 8, !dbg !5191
  %bf.clear670 = and i32 %bf.load669, 65535, !dbg !5191
  %cmp671 = icmp eq i32 %bf.clear670, 32, !dbg !5192
  br i1 %cmp671, label %if.then678, label %lor.lhs.false673, !dbg !5193

lor.lhs.false673:                                 ; preds = %land.lhs.true668
  %289 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5194
  %290 = bitcast %struct.rtx_def* %289 to i32*, !dbg !5194
  %bf.load674 = load i32, i32* %290, align 8, !dbg !5194
  %bf.clear675 = and i32 %bf.load674, 65535, !dbg !5194
  %cmp676 = icmp eq i32 %bf.clear675, 30, !dbg !5194
  br i1 %cmp676, label %if.then678, label %if.else953, !dbg !5195

if.then678:                                       ; preds = %lor.lhs.false673, %land.lhs.true668
  call void @llvm.dbg.declare(metadata i64* %l1, metadata !5196, metadata !DIExpression()), !dbg !5198
  call void @llvm.dbg.declare(metadata i64* %lv679, metadata !5199, metadata !DIExpression()), !dbg !5200
  call void @llvm.dbg.declare(metadata i64* %h1, metadata !5201, metadata !DIExpression()), !dbg !5202
  call void @llvm.dbg.declare(metadata i64* %hv680, metadata !5203, metadata !DIExpression()), !dbg !5204
  %291 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5205
  %292 = bitcast %struct.rtx_def* %291 to i32*, !dbg !5205
  %bf.load681 = load i32, i32* %292, align 8, !dbg !5205
  %bf.clear682 = and i32 %bf.load681, 65535, !dbg !5205
  %cmp683 = icmp eq i32 %bf.clear682, 32, !dbg !5207
  br i1 %cmp683, label %if.then685, label %if.else692, !dbg !5208

if.then685:                                       ; preds = %if.then678
  %293 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5209
  %u686 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %293, i32 0, i32 1, !dbg !5209
  %hwint687 = bitcast %union.u* %u686 to [1 x i64]*, !dbg !5209
  %arrayidx688 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint687, i64 0, i64 0, !dbg !5209
  %294 = load i64, i64* %arrayidx688, align 8, !dbg !5209
  store i64 %294, i64* %l1, align 8, !dbg !5210
  %295 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5211
  %u689 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %295, i32 0, i32 1, !dbg !5211
  %hwint690 = bitcast %union.u* %u689 to [1 x i64]*, !dbg !5211
  %arrayidx691 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint690, i64 0, i64 1, !dbg !5211
  %296 = load i64, i64* %arrayidx691, align 8, !dbg !5211
  store i64 %296, i64* %h1, align 8, !dbg !5212
  br label %if.end699, !dbg !5213

if.else692:                                       ; preds = %if.then678
  %297 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5214
  %u693 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %297, i32 0, i32 1, !dbg !5214
  %hwint694 = bitcast %union.u* %u693 to [1 x i64]*, !dbg !5214
  %arrayidx695 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint694, i64 0, i64 0, !dbg !5214
  %298 = load i64, i64* %arrayidx695, align 8, !dbg !5214
  store i64 %298, i64* %l1, align 8, !dbg !5215
  %299 = load i64, i64* %l1, align 8, !dbg !5216
  %cmp696 = icmp slt i64 %299, 0, !dbg !5216
  %300 = zext i1 %cmp696 to i64, !dbg !5216
  %cond698 = select i1 %cmp696, i64 -1, i64 0, !dbg !5216
  store i64 %cond698, i64* %h1, align 8, !dbg !5217
  br label %if.end699

if.end699:                                        ; preds = %if.else692, %if.then685
  %301 = load i32, i32* %code.addr, align 4, !dbg !5218
  switch i32 %301, label %sw.default950 [
    i32 64, label %sw.bb700
    i32 51, label %sw.bb703
    i32 111, label %sw.bb705
    i32 114, label %sw.bb712
    i32 115, label %sw.bb734
    i32 116, label %sw.bb775
    i32 117, label %sw.bb802
    i32 118, label %sw.bb817
    i32 113, label %sw.bb833
    i32 100, label %sw.bb870
    i32 99, label %sw.bb871
    i32 98, label %sw.bb892
    i32 112, label %sw.bb949
  ], !dbg !5219

sw.bb700:                                         ; preds = %if.end699
  %302 = load i64, i64* %l1, align 8, !dbg !5220
  %neg701 = xor i64 %302, -1, !dbg !5222
  store i64 %neg701, i64* %lv679, align 8, !dbg !5223
  %303 = load i64, i64* %h1, align 8, !dbg !5224
  %neg702 = xor i64 %303, -1, !dbg !5225
  store i64 %neg702, i64* %hv680, align 8, !dbg !5226
  br label %sw.epilog951, !dbg !5227

sw.bb703:                                         ; preds = %if.end699
  %304 = load i64, i64* %l1, align 8, !dbg !5228
  %305 = load i64, i64* %h1, align 8, !dbg !5229
  %call704 = call i32 @neg_double(i64 %304, i64 %305, i64* %lv679, i64* %hv680), !dbg !5230
  br label %sw.epilog951, !dbg !5231

sw.bb705:                                         ; preds = %if.end699
  %306 = load i64, i64* %h1, align 8, !dbg !5232
  %cmp706 = icmp slt i64 %306, 0, !dbg !5234
  br i1 %cmp706, label %if.then708, label %if.else710, !dbg !5235

if.then708:                                       ; preds = %sw.bb705
  %307 = load i64, i64* %l1, align 8, !dbg !5236
  %308 = load i64, i64* %h1, align 8, !dbg !5237
  %call709 = call i32 @neg_double(i64 %307, i64 %308, i64* %lv679, i64* %hv680), !dbg !5238
  br label %if.end711, !dbg !5238

if.else710:                                       ; preds = %sw.bb705
  %309 = load i64, i64* %l1, align 8, !dbg !5239
  store i64 %309, i64* %lv679, align 8, !dbg !5240
  %310 = load i64, i64* %h1, align 8, !dbg !5241
  store i64 %310, i64* %hv680, align 8, !dbg !5242
  br label %if.end711

if.end711:                                        ; preds = %if.else710, %if.then708
  br label %sw.epilog951, !dbg !5243

sw.bb712:                                         ; preds = %if.end699
  store i64 0, i64* %hv680, align 8, !dbg !5244
  %311 = load i64, i64* %l1, align 8, !dbg !5245
  %cmp713 = icmp eq i64 %311, 0, !dbg !5247
  br i1 %cmp713, label %if.then715, label %if.else727, !dbg !5248

if.then715:                                       ; preds = %sw.bb712
  %312 = load i64, i64* %h1, align 8, !dbg !5249
  %cmp716 = icmp eq i64 %312, 0, !dbg !5252
  br i1 %cmp716, label %if.then718, label %if.else719, !dbg !5253

if.then718:                                       ; preds = %if.then715
  store i64 0, i64* %lv679, align 8, !dbg !5254
  br label %if.end726, !dbg !5255

if.else719:                                       ; preds = %if.then715
  %313 = load i64, i64* %h1, align 8, !dbg !5256
  %314 = load i64, i64* %h1, align 8, !dbg !5257
  %sub720 = sub nsw i64 0, %314, !dbg !5258
  %and721 = and i64 %313, %sub720, !dbg !5259
  %call722 = call i32 @exact_log2(i64 %and721), !dbg !5260
  %add723 = add nsw i32 64, %call722, !dbg !5261
  %add724 = add nsw i32 %add723, 1, !dbg !5262
  %conv725 = sext i32 %add724 to i64, !dbg !5263
  store i64 %conv725, i64* %lv679, align 8, !dbg !5264
  br label %if.end726

if.end726:                                        ; preds = %if.else719, %if.then718
  br label %if.end733, !dbg !5265

if.else727:                                       ; preds = %sw.bb712
  %315 = load i64, i64* %l1, align 8, !dbg !5266
  %316 = load i64, i64* %l1, align 8, !dbg !5267
  %sub728 = sub i64 0, %316, !dbg !5268
  %and729 = and i64 %315, %sub728, !dbg !5269
  %call730 = call i32 @exact_log2(i64 %and729), !dbg !5270
  %add731 = add nsw i32 %call730, 1, !dbg !5271
  %conv732 = sext i32 %add731 to i64, !dbg !5270
  store i64 %conv732, i64* %lv679, align 8, !dbg !5272
  br label %if.end733

if.end733:                                        ; preds = %if.else727, %if.end726
  br label %sw.epilog951, !dbg !5273

sw.bb734:                                         ; preds = %if.end699
  store i64 0, i64* %hv680, align 8, !dbg !5274
  %317 = load i64, i64* %h1, align 8, !dbg !5275
  %cmp735 = icmp ne i64 %317, 0, !dbg !5277
  br i1 %cmp735, label %if.then737, label %if.else750, !dbg !5278

if.then737:                                       ; preds = %sw.bb734
  %318 = load i32, i32* %mode.addr, align 4, !dbg !5279
  %idxprom738 = zext i32 %318 to i64, !dbg !5279
  %arrayidx739 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom738, !dbg !5279
  %319 = load i8, i8* %arrayidx739, align 1, !dbg !5279
  %conv740 = zext i8 %319 to i16, !dbg !5279
  %conv741 = zext i16 %conv740 to i32, !dbg !5279
  %mul742 = mul nsw i32 %conv741, 8, !dbg !5279
  %conv743 = trunc i32 %mul742 to i16, !dbg !5279
  %conv744 = zext i16 %conv743 to i32, !dbg !5279
  %320 = load i64, i64* %h1, align 8, !dbg !5280
  %call745 = call i32 @floor_log2(i64 %320), !dbg !5281
  %sub746 = sub nsw i32 %conv744, %call745, !dbg !5282
  %sub747 = sub nsw i32 %sub746, 1, !dbg !5283
  %sub748 = sub nsw i32 %sub747, 64, !dbg !5284
  %conv749 = sext i32 %sub748 to i64, !dbg !5279
  store i64 %conv749, i64* %lv679, align 8, !dbg !5285
  br label %if.end774, !dbg !5286

if.else750:                                       ; preds = %sw.bb734
  %321 = load i64, i64* %l1, align 8, !dbg !5287
  %cmp751 = icmp ne i64 %321, 0, !dbg !5289
  br i1 %cmp751, label %if.then753, label %if.else765, !dbg !5290

if.then753:                                       ; preds = %if.else750
  %322 = load i32, i32* %mode.addr, align 4, !dbg !5291
  %idxprom754 = zext i32 %322 to i64, !dbg !5291
  %arrayidx755 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom754, !dbg !5291
  %323 = load i8, i8* %arrayidx755, align 1, !dbg !5291
  %conv756 = zext i8 %323 to i16, !dbg !5291
  %conv757 = zext i16 %conv756 to i32, !dbg !5291
  %mul758 = mul nsw i32 %conv757, 8, !dbg !5291
  %conv759 = trunc i32 %mul758 to i16, !dbg !5291
  %conv760 = zext i16 %conv759 to i32, !dbg !5291
  %324 = load i64, i64* %l1, align 8, !dbg !5292
  %call761 = call i32 @floor_log2(i64 %324), !dbg !5293
  %sub762 = sub nsw i32 %conv760, %call761, !dbg !5294
  %sub763 = sub nsw i32 %sub762, 1, !dbg !5295
  %conv764 = sext i32 %sub763 to i64, !dbg !5291
  store i64 %conv764, i64* %lv679, align 8, !dbg !5296
  br label %if.end773, !dbg !5297

if.else765:                                       ; preds = %if.else750
  %325 = load i32, i32* %mode.addr, align 4, !dbg !5298
  %idxprom766 = zext i32 %325 to i64, !dbg !5298
  %arrayidx767 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom766, !dbg !5298
  %326 = load i8, i8* %arrayidx767, align 1, !dbg !5298
  %conv768 = zext i8 %326 to i16, !dbg !5298
  %conv769 = zext i16 %conv768 to i32, !dbg !5298
  %mul770 = mul nsw i32 %conv769, 8, !dbg !5298
  %conv771 = trunc i32 %mul770 to i16, !dbg !5298
  %conv772 = zext i16 %conv771 to i64, !dbg !5298
  store i64 %conv772, i64* %lv679, align 8, !dbg !5300
  br label %if.end773

if.end773:                                        ; preds = %if.else765, %if.then753
  br label %if.end774

if.end774:                                        ; preds = %if.end773, %if.then737
  br label %sw.epilog951, !dbg !5301

sw.bb775:                                         ; preds = %if.end699
  store i64 0, i64* %hv680, align 8, !dbg !5302
  %327 = load i64, i64* %l1, align 8, !dbg !5303
  %cmp776 = icmp ne i64 %327, 0, !dbg !5305
  br i1 %cmp776, label %if.then778, label %if.else783, !dbg !5306

if.then778:                                       ; preds = %sw.bb775
  %328 = load i64, i64* %l1, align 8, !dbg !5307
  %329 = load i64, i64* %l1, align 8, !dbg !5308
  %sub779 = sub i64 0, %329, !dbg !5309
  %and780 = and i64 %328, %sub779, !dbg !5310
  %call781 = call i32 @exact_log2(i64 %and780), !dbg !5311
  %conv782 = sext i32 %call781 to i64, !dbg !5311
  store i64 %conv782, i64* %lv679, align 8, !dbg !5312
  br label %if.end801, !dbg !5313

if.else783:                                       ; preds = %sw.bb775
  %330 = load i64, i64* %h1, align 8, !dbg !5314
  %cmp784 = icmp ne i64 %330, 0, !dbg !5316
  br i1 %cmp784, label %if.then786, label %if.else792, !dbg !5317

if.then786:                                       ; preds = %if.else783
  %331 = load i64, i64* %h1, align 8, !dbg !5318
  %332 = load i64, i64* %h1, align 8, !dbg !5319
  %sub787 = sub nsw i64 0, %332, !dbg !5320
  %and788 = and i64 %331, %sub787, !dbg !5321
  %call789 = call i32 @exact_log2(i64 %and788), !dbg !5322
  %add790 = add nsw i32 64, %call789, !dbg !5323
  %conv791 = sext i32 %add790 to i64, !dbg !5324
  store i64 %conv791, i64* %lv679, align 8, !dbg !5325
  br label %if.end800, !dbg !5326

if.else792:                                       ; preds = %if.else783
  %333 = load i32, i32* %mode.addr, align 4, !dbg !5327
  %idxprom793 = zext i32 %333 to i64, !dbg !5327
  %arrayidx794 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom793, !dbg !5327
  %334 = load i8, i8* %arrayidx794, align 1, !dbg !5327
  %conv795 = zext i8 %334 to i16, !dbg !5327
  %conv796 = zext i16 %conv795 to i32, !dbg !5327
  %mul797 = mul nsw i32 %conv796, 8, !dbg !5327
  %conv798 = trunc i32 %mul797 to i16, !dbg !5327
  %conv799 = zext i16 %conv798 to i64, !dbg !5327
  store i64 %conv799, i64* %lv679, align 8, !dbg !5329
  br label %if.end800

if.end800:                                        ; preds = %if.else792, %if.then786
  br label %if.end801

if.end801:                                        ; preds = %if.end800, %if.then778
  br label %sw.epilog951, !dbg !5330

sw.bb802:                                         ; preds = %if.end699
  store i64 0, i64* %hv680, align 8, !dbg !5331
  store i64 0, i64* %lv679, align 8, !dbg !5332
  br label %while.cond803, !dbg !5333

while.cond803:                                    ; preds = %while.body805, %sw.bb802
  %335 = load i64, i64* %l1, align 8, !dbg !5334
  %tobool804 = icmp ne i64 %335, 0, !dbg !5333
  br i1 %tobool804, label %while.body805, label %while.end809, !dbg !5333

while.body805:                                    ; preds = %while.cond803
  %336 = load i64, i64* %lv679, align 8, !dbg !5335
  %inc806 = add i64 %336, 1, !dbg !5335
  store i64 %inc806, i64* %lv679, align 8, !dbg !5335
  %337 = load i64, i64* %l1, align 8, !dbg !5336
  %sub807 = sub i64 %337, 1, !dbg !5337
  %338 = load i64, i64* %l1, align 8, !dbg !5338
  %and808 = and i64 %338, %sub807, !dbg !5338
  store i64 %and808, i64* %l1, align 8, !dbg !5338
  br label %while.cond803, !dbg !5333, !llvm.loop !5339

while.end809:                                     ; preds = %while.cond803
  br label %while.cond810, !dbg !5341

while.cond810:                                    ; preds = %while.body812, %while.end809
  %339 = load i64, i64* %h1, align 8, !dbg !5342
  %tobool811 = icmp ne i64 %339, 0, !dbg !5341
  br i1 %tobool811, label %while.body812, label %while.end816, !dbg !5341

while.body812:                                    ; preds = %while.cond810
  %340 = load i64, i64* %lv679, align 8, !dbg !5343
  %inc813 = add i64 %340, 1, !dbg !5343
  store i64 %inc813, i64* %lv679, align 8, !dbg !5343
  %341 = load i64, i64* %h1, align 8, !dbg !5344
  %sub814 = sub nsw i64 %341, 1, !dbg !5345
  %342 = load i64, i64* %h1, align 8, !dbg !5346
  %and815 = and i64 %342, %sub814, !dbg !5346
  store i64 %and815, i64* %h1, align 8, !dbg !5346
  br label %while.cond810, !dbg !5341, !llvm.loop !5347

while.end816:                                     ; preds = %while.cond810
  br label %sw.epilog951, !dbg !5349

sw.bb817:                                         ; preds = %if.end699
  store i64 0, i64* %hv680, align 8, !dbg !5350
  store i64 0, i64* %lv679, align 8, !dbg !5351
  br label %while.cond818, !dbg !5352

while.cond818:                                    ; preds = %while.body820, %sw.bb817
  %343 = load i64, i64* %l1, align 8, !dbg !5353
  %tobool819 = icmp ne i64 %343, 0, !dbg !5352
  br i1 %tobool819, label %while.body820, label %while.end824, !dbg !5352

while.body820:                                    ; preds = %while.cond818
  %344 = load i64, i64* %lv679, align 8, !dbg !5354
  %inc821 = add i64 %344, 1, !dbg !5354
  store i64 %inc821, i64* %lv679, align 8, !dbg !5354
  %345 = load i64, i64* %l1, align 8, !dbg !5355
  %sub822 = sub i64 %345, 1, !dbg !5356
  %346 = load i64, i64* %l1, align 8, !dbg !5357
  %and823 = and i64 %346, %sub822, !dbg !5357
  store i64 %and823, i64* %l1, align 8, !dbg !5357
  br label %while.cond818, !dbg !5352, !llvm.loop !5358

while.end824:                                     ; preds = %while.cond818
  br label %while.cond825, !dbg !5360

while.cond825:                                    ; preds = %while.body827, %while.end824
  %347 = load i64, i64* %h1, align 8, !dbg !5361
  %tobool826 = icmp ne i64 %347, 0, !dbg !5360
  br i1 %tobool826, label %while.body827, label %while.end831, !dbg !5360

while.body827:                                    ; preds = %while.cond825
  %348 = load i64, i64* %lv679, align 8, !dbg !5362
  %inc828 = add i64 %348, 1, !dbg !5362
  store i64 %inc828, i64* %lv679, align 8, !dbg !5362
  %349 = load i64, i64* %h1, align 8, !dbg !5363
  %sub829 = sub nsw i64 %349, 1, !dbg !5364
  %350 = load i64, i64* %h1, align 8, !dbg !5365
  %and830 = and i64 %350, %sub829, !dbg !5365
  store i64 %and830, i64* %h1, align 8, !dbg !5365
  br label %while.cond825, !dbg !5360, !llvm.loop !5366

while.end831:                                     ; preds = %while.cond825
  %351 = load i64, i64* %lv679, align 8, !dbg !5368
  %and832 = and i64 %351, 1, !dbg !5368
  store i64 %and832, i64* %lv679, align 8, !dbg !5368
  br label %sw.epilog951, !dbg !5369

sw.bb833:                                         ; preds = %if.end699
  call void @llvm.dbg.declare(metadata i32* %s834, metadata !5370, metadata !DIExpression()), !dbg !5372
  store i64 0, i64* %hv680, align 8, !dbg !5373
  store i64 0, i64* %lv679, align 8, !dbg !5374
  store i32 0, i32* %s834, align 4, !dbg !5375
  br label %for.cond835, !dbg !5377

for.cond835:                                      ; preds = %for.inc867, %sw.bb833
  %352 = load i32, i32* %s834, align 4, !dbg !5378
  %353 = load i32, i32* %width, align 4, !dbg !5380
  %cmp836 = icmp ult i32 %352, %353, !dbg !5381
  br i1 %cmp836, label %for.body838, label %for.end869, !dbg !5382

for.body838:                                      ; preds = %for.cond835
  call void @llvm.dbg.declare(metadata i32* %d839, metadata !5383, metadata !DIExpression()), !dbg !5385
  %354 = load i32, i32* %width, align 4, !dbg !5386
  %355 = load i32, i32* %s834, align 4, !dbg !5387
  %sub840 = sub i32 %354, %355, !dbg !5388
  %sub841 = sub i32 %sub840, 8, !dbg !5389
  store i32 %sub841, i32* %d839, align 4, !dbg !5385
  call void @llvm.dbg.declare(metadata i64* %byte842, metadata !5390, metadata !DIExpression()), !dbg !5391
  %356 = load i32, i32* %s834, align 4, !dbg !5392
  %cmp843 = icmp ult i32 %356, 64, !dbg !5394
  br i1 %cmp843, label %if.then845, label %if.else849, !dbg !5395

if.then845:                                       ; preds = %for.body838
  %357 = load i64, i64* %l1, align 8, !dbg !5396
  %358 = load i32, i32* %s834, align 4, !dbg !5397
  %sh_prom846 = zext i32 %358 to i64, !dbg !5398
  %shr847 = lshr i64 %357, %sh_prom846, !dbg !5398
  %and848 = and i64 %shr847, 255, !dbg !5399
  store i64 %and848, i64* %byte842, align 8, !dbg !5400
  br label %if.end854, !dbg !5401

if.else849:                                       ; preds = %for.body838
  %359 = load i64, i64* %h1, align 8, !dbg !5402
  %360 = load i32, i32* %s834, align 4, !dbg !5403
  %sub850 = sub i32 %360, 64, !dbg !5404
  %sh_prom851 = zext i32 %sub850 to i64, !dbg !5405
  %shr852 = ashr i64 %359, %sh_prom851, !dbg !5405
  %and853 = and i64 %shr852, 255, !dbg !5406
  store i64 %and853, i64* %byte842, align 8, !dbg !5407
  br label %if.end854

if.end854:                                        ; preds = %if.else849, %if.then845
  %361 = load i32, i32* %d839, align 4, !dbg !5408
  %cmp855 = icmp ult i32 %361, 64, !dbg !5410
  br i1 %cmp855, label %if.then857, label %if.else861, !dbg !5411

if.then857:                                       ; preds = %if.end854
  %362 = load i64, i64* %byte842, align 8, !dbg !5412
  %363 = load i32, i32* %d839, align 4, !dbg !5413
  %sh_prom858 = zext i32 %363 to i64, !dbg !5414
  %shl859 = shl i64 %362, %sh_prom858, !dbg !5414
  %364 = load i64, i64* %lv679, align 8, !dbg !5415
  %or860 = or i64 %364, %shl859, !dbg !5415
  store i64 %or860, i64* %lv679, align 8, !dbg !5415
  br label %if.end866, !dbg !5416

if.else861:                                       ; preds = %if.end854
  %365 = load i64, i64* %byte842, align 8, !dbg !5417
  %366 = load i32, i32* %d839, align 4, !dbg !5418
  %sub862 = sub i32 %366, 64, !dbg !5419
  %sh_prom863 = zext i32 %sub862 to i64, !dbg !5420
  %shl864 = shl i64 %365, %sh_prom863, !dbg !5420
  %367 = load i64, i64* %hv680, align 8, !dbg !5421
  %or865 = or i64 %367, %shl864, !dbg !5421
  store i64 %or865, i64* %hv680, align 8, !dbg !5421
  br label %if.end866

if.end866:                                        ; preds = %if.else861, %if.then857
  br label %for.inc867, !dbg !5422

for.inc867:                                       ; preds = %if.end866
  %368 = load i32, i32* %s834, align 4, !dbg !5423
  %add868 = add i32 %368, 8, !dbg !5423
  store i32 %add868, i32* %s834, align 4, !dbg !5423
  br label %for.cond835, !dbg !5424, !llvm.loop !5425

for.end869:                                       ; preds = %for.cond835
  br label %sw.epilog951, !dbg !5427

sw.bb870:                                         ; preds = %if.end699
  %369 = load i64, i64* %l1, align 8, !dbg !5428
  store i64 %369, i64* %lv679, align 8, !dbg !5429
  %370 = load i64, i64* %h1, align 8, !dbg !5430
  store i64 %370, i64* %hv680, align 8, !dbg !5431
  br label %sw.epilog951, !dbg !5432

sw.bb871:                                         ; preds = %if.end699
  %371 = load i32, i32* %op_mode.addr, align 4, !dbg !5433
  %cmp872 = icmp ne i32 %371, 0, !dbg !5433
  br i1 %cmp872, label %cond.false875, label %cond.true874, !dbg !5433

cond.true874:                                     ; preds = %sw.bb871
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1435, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5433
  br label %cond.end876, !dbg !5433

cond.false875:                                    ; preds = %sw.bb871
  br label %cond.end876, !dbg !5433

cond.end876:                                      ; preds = %cond.false875, %cond.true874
  %cond877 = phi i32 [ 0, %cond.true874 ], [ 0, %cond.false875 ], !dbg !5433
  %372 = load i32, i32* %op_mode.addr, align 4, !dbg !5434
  %idxprom878 = zext i32 %372 to i64, !dbg !5434
  %arrayidx879 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom878, !dbg !5434
  %373 = load i8, i8* %arrayidx879, align 1, !dbg !5434
  %conv880 = zext i8 %373 to i16, !dbg !5434
  %conv881 = zext i16 %conv880 to i32, !dbg !5434
  %mul882 = mul nsw i32 %conv881, 8, !dbg !5434
  %conv883 = trunc i32 %mul882 to i16, !dbg !5434
  %conv884 = zext i16 %conv883 to i32, !dbg !5434
  %cmp885 = icmp sgt i32 %conv884, 64, !dbg !5436
  br i1 %cmp885, label %if.then887, label %if.end888, !dbg !5437

if.then887:                                       ; preds = %cond.end876
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5438
  br label %return, !dbg !5438

if.end888:                                        ; preds = %cond.end876
  store i64 0, i64* %hv680, align 8, !dbg !5439
  %374 = load i64, i64* %l1, align 8, !dbg !5440
  %375 = load i32, i32* %op_mode.addr, align 4, !dbg !5441
  %idxprom889 = zext i32 %375 to i64, !dbg !5441
  %arrayidx890 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom889, !dbg !5441
  %376 = load i64, i64* %arrayidx890, align 8, !dbg !5441
  %and891 = and i64 %374, %376, !dbg !5442
  store i64 %and891, i64* %lv679, align 8, !dbg !5443
  br label %sw.epilog951, !dbg !5444

sw.bb892:                                         ; preds = %if.end699
  %377 = load i32, i32* %op_mode.addr, align 4, !dbg !5445
  %cmp893 = icmp eq i32 %377, 0, !dbg !5447
  br i1 %cmp893, label %if.then905, label %lor.lhs.false895, !dbg !5448

lor.lhs.false895:                                 ; preds = %sw.bb892
  %378 = load i32, i32* %op_mode.addr, align 4, !dbg !5449
  %idxprom896 = zext i32 %378 to i64, !dbg !5449
  %arrayidx897 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom896, !dbg !5449
  %379 = load i8, i8* %arrayidx897, align 1, !dbg !5449
  %conv898 = zext i8 %379 to i16, !dbg !5449
  %conv899 = zext i16 %conv898 to i32, !dbg !5449
  %mul900 = mul nsw i32 %conv899, 8, !dbg !5449
  %conv901 = trunc i32 %mul900 to i16, !dbg !5449
  %conv902 = zext i16 %conv901 to i32, !dbg !5449
  %cmp903 = icmp sgt i32 %conv902, 64, !dbg !5450
  br i1 %cmp903, label %if.then905, label %if.else906, !dbg !5451

if.then905:                                       ; preds = %lor.lhs.false895, %sw.bb892
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5452
  br label %return, !dbg !5452

if.else906:                                       ; preds = %lor.lhs.false895
  %380 = load i64, i64* %l1, align 8, !dbg !5453
  %381 = load i32, i32* %op_mode.addr, align 4, !dbg !5455
  %idxprom907 = zext i32 %381 to i64, !dbg !5455
  %arrayidx908 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom907, !dbg !5455
  %382 = load i64, i64* %arrayidx908, align 8, !dbg !5455
  %and909 = and i64 %380, %382, !dbg !5456
  store i64 %and909, i64* %lv679, align 8, !dbg !5457
  %383 = load i32, i32* %op_mode.addr, align 4, !dbg !5458
  %idxprom910 = zext i32 %383 to i64, !dbg !5458
  %arrayidx911 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom910, !dbg !5458
  %384 = load i8, i8* %arrayidx911, align 1, !dbg !5458
  %conv912 = zext i8 %384 to i16, !dbg !5458
  %conv913 = zext i16 %conv912 to i32, !dbg !5458
  %mul914 = mul nsw i32 %conv913, 8, !dbg !5458
  %conv915 = trunc i32 %mul914 to i16, !dbg !5458
  %conv916 = zext i16 %conv915 to i32, !dbg !5458
  %cmp917 = icmp slt i32 %conv916, 64, !dbg !5460
  br i1 %cmp917, label %land.lhs.true919, label %if.end944, !dbg !5461

land.lhs.true919:                                 ; preds = %if.else906
  %385 = load i64, i64* %lv679, align 8, !dbg !5462
  %386 = load i32, i32* %op_mode.addr, align 4, !dbg !5463
  %idxprom920 = zext i32 %386 to i64, !dbg !5463
  %arrayidx921 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom920, !dbg !5463
  %387 = load i8, i8* %arrayidx921, align 1, !dbg !5463
  %conv922 = zext i8 %387 to i16, !dbg !5463
  %conv923 = zext i16 %conv922 to i32, !dbg !5463
  %mul924 = mul nsw i32 %conv923, 8, !dbg !5463
  %conv925 = trunc i32 %mul924 to i16, !dbg !5463
  %conv926 = zext i16 %conv925 to i32, !dbg !5463
  %sub927 = sub nsw i32 %conv926, 1, !dbg !5464
  %sh_prom928 = zext i32 %sub927 to i64, !dbg !5465
  %shl929 = shl i64 1, %sh_prom928, !dbg !5465
  %and930 = and i64 %385, %shl929, !dbg !5466
  %cmp931 = icmp ne i64 %and930, 0, !dbg !5467
  br i1 %cmp931, label %if.then933, label %if.end944, !dbg !5468

if.then933:                                       ; preds = %land.lhs.true919
  %388 = load i32, i32* %op_mode.addr, align 4, !dbg !5469
  %idxprom934 = zext i32 %388 to i64, !dbg !5469
  %arrayidx935 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom934, !dbg !5469
  %389 = load i8, i8* %arrayidx935, align 1, !dbg !5469
  %conv936 = zext i8 %389 to i16, !dbg !5469
  %conv937 = zext i16 %conv936 to i32, !dbg !5469
  %mul938 = mul nsw i32 %conv937, 8, !dbg !5469
  %conv939 = trunc i32 %mul938 to i16, !dbg !5469
  %conv940 = zext i16 %conv939 to i32, !dbg !5469
  %sh_prom941 = zext i32 %conv940 to i64, !dbg !5470
  %shl942 = shl i64 1, %sh_prom941, !dbg !5470
  %390 = load i64, i64* %lv679, align 8, !dbg !5471
  %sub943 = sub i64 %390, %shl942, !dbg !5471
  store i64 %sub943, i64* %lv679, align 8, !dbg !5471
  br label %if.end944, !dbg !5472

if.end944:                                        ; preds = %if.then933, %land.lhs.true919, %if.else906
  %391 = load i64, i64* %lv679, align 8, !dbg !5473
  %cmp945 = icmp slt i64 %391, 0, !dbg !5473
  %392 = zext i1 %cmp945 to i64, !dbg !5473
  %cond947 = select i1 %cmp945, i64 -1, i64 0, !dbg !5473
  store i64 %cond947, i64* %hv680, align 8, !dbg !5474
  br label %if.end948

if.end948:                                        ; preds = %if.end944
  br label %sw.epilog951, !dbg !5475

sw.bb949:                                         ; preds = %if.end699
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5476
  br label %return, !dbg !5476

sw.default950:                                    ; preds = %if.end699
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5477
  br label %return, !dbg !5477

sw.epilog951:                                     ; preds = %if.end948, %if.end888, %sw.bb870, %for.end869, %while.end831, %while.end816, %if.end801, %if.end774, %if.end733, %if.end711, %sw.bb703, %sw.bb700
  %393 = load i64, i64* %lv679, align 8, !dbg !5478
  %394 = load i64, i64* %hv680, align 8, !dbg !5479
  %395 = load i32, i32* %mode.addr, align 4, !dbg !5480
  %call952 = call %struct.rtx_def* @immed_double_const(i64 %393, i64 %394, i32 %395), !dbg !5481
  store %struct.rtx_def* %call952, %struct.rtx_def** %retval, align 8, !dbg !5482
  br label %return, !dbg !5482

if.else953:                                       ; preds = %lor.lhs.false673, %land.lhs.true665, %if.else659
  %396 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5483
  %397 = bitcast %struct.rtx_def* %396 to i32*, !dbg !5483
  %bf.load954 = load i32, i32* %397, align 8, !dbg !5483
  %bf.clear955 = and i32 %bf.load954, 65535, !dbg !5483
  %cmp956 = icmp eq i32 %bf.clear955, 32, !dbg !5485
  br i1 %cmp956, label %land.lhs.true958, label %if.else1111, !dbg !5486

land.lhs.true958:                                 ; preds = %if.else953
  %398 = load i32, i32* %mode.addr, align 4, !dbg !5487
  %idxprom959 = zext i32 %398 to i64, !dbg !5487
  %arrayidx960 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom959, !dbg !5487
  %399 = load i8, i8* %arrayidx960, align 1, !dbg !5487
  %conv961 = zext i8 %399 to i32, !dbg !5487
  %cmp962 = icmp eq i32 %conv961, 8, !dbg !5487
  br i1 %cmp962, label %if.then970, label %lor.lhs.false964, !dbg !5487

lor.lhs.false964:                                 ; preds = %land.lhs.true958
  %400 = load i32, i32* %mode.addr, align 4, !dbg !5487
  %idxprom965 = zext i32 %400 to i64, !dbg !5487
  %arrayidx966 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom965, !dbg !5487
  %401 = load i8, i8* %arrayidx966, align 1, !dbg !5487
  %conv967 = zext i8 %401 to i32, !dbg !5487
  %cmp968 = icmp eq i32 %conv967, 9, !dbg !5487
  br i1 %cmp968, label %if.then970, label %if.else1111, !dbg !5488

if.then970:                                       ; preds = %lor.lhs.false964, %land.lhs.true958
  call void @llvm.dbg.declare(metadata %struct.real_value* %d971, metadata !5489, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.declare(metadata %struct.real_value* %t, metadata !5492, metadata !DIExpression()), !dbg !5493
  %402 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5494
  %u972 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %402, i32 0, i32 1, !dbg !5494
  %rv = bitcast %union.u* %u972 to %struct.real_value*, !dbg !5494
  %403 = bitcast %struct.real_value* %d971 to i8*, !dbg !5494
  %404 = bitcast %struct.real_value* %rv to i8*, !dbg !5494
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %403, i8* align 8 %404, i64 32, i1 false), !dbg !5494
  %405 = load i32, i32* %code.addr, align 4, !dbg !5495
  switch i32 %405, label %sw.default1108 [
    i32 112, label %sw.bb973
    i32 111, label %sw.bb1079
    i32 51, label %sw.bb1081
    i32 102, label %sw.bb1083
    i32 101, label %sw.bb1085
    i32 104, label %sw.bb1086
    i32 64, label %sw.bb1088
  ], !dbg !5496

sw.bb973:                                         ; preds = %if.then970
  %406 = load i32, i32* @flag_signaling_nans, align 4, !dbg !5497
  %tobool974 = icmp ne i32 %406, 0, !dbg !5497
  br i1 %tobool974, label %land.lhs.true975, label %if.end1077, !dbg !5497

land.lhs.true975:                                 ; preds = %sw.bb973
  %407 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom976 = zext i32 %407 to i64, !dbg !5497
  %arrayidx977 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom976, !dbg !5497
  %408 = load i8, i8* %arrayidx977, align 1, !dbg !5497
  %conv978 = zext i8 %408 to i32, !dbg !5497
  %cmp979 = icmp eq i32 %conv978, 8, !dbg !5497
  br i1 %cmp979, label %land.lhs.true999, label %lor.lhs.false981, !dbg !5497

lor.lhs.false981:                                 ; preds = %land.lhs.true975
  %409 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom982 = zext i32 %409 to i64, !dbg !5497
  %arrayidx983 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom982, !dbg !5497
  %410 = load i8, i8* %arrayidx983, align 1, !dbg !5497
  %conv984 = zext i8 %410 to i32, !dbg !5497
  %cmp985 = icmp eq i32 %conv984, 9, !dbg !5497
  br i1 %cmp985, label %land.lhs.true999, label %lor.lhs.false987, !dbg !5497

lor.lhs.false987:                                 ; preds = %lor.lhs.false981
  %411 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom988 = zext i32 %411 to i64, !dbg !5497
  %arrayidx989 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom988, !dbg !5497
  %412 = load i8, i8* %arrayidx989, align 1, !dbg !5497
  %conv990 = zext i8 %412 to i32, !dbg !5497
  %cmp991 = icmp eq i32 %conv990, 11, !dbg !5497
  br i1 %cmp991, label %land.lhs.true999, label %lor.lhs.false993, !dbg !5497

lor.lhs.false993:                                 ; preds = %lor.lhs.false987
  %413 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom994 = zext i32 %413 to i64, !dbg !5497
  %arrayidx995 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom994, !dbg !5497
  %414 = load i8, i8* %arrayidx995, align 1, !dbg !5497
  %conv996 = zext i8 %414 to i32, !dbg !5497
  %cmp997 = icmp eq i32 %conv996, 17, !dbg !5497
  br i1 %cmp997, label %land.lhs.true999, label %if.end1077, !dbg !5497

land.lhs.true999:                                 ; preds = %lor.lhs.false993, %lor.lhs.false987, %lor.lhs.false981, %land.lhs.true975
  %415 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1000 = zext i32 %415 to i64, !dbg !5497
  %arrayidx1001 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1000, !dbg !5497
  %416 = load i8, i8* %arrayidx1001, align 1, !dbg !5497
  %conv1002 = zext i8 %416 to i32, !dbg !5497
  %cmp1003 = icmp eq i32 %conv1002, 8, !dbg !5497
  br i1 %cmp1003, label %cond.true1011, label %lor.lhs.false1005, !dbg !5497

lor.lhs.false1005:                                ; preds = %land.lhs.true999
  %417 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1006 = zext i32 %417 to i64, !dbg !5497
  %arrayidx1007 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1006, !dbg !5497
  %418 = load i8, i8* %arrayidx1007, align 1, !dbg !5497
  %conv1008 = zext i8 %418 to i32, !dbg !5497
  %cmp1009 = icmp eq i32 %conv1008, 9, !dbg !5497
  br i1 %cmp1009, label %cond.true1011, label %cond.false1012, !dbg !5497

cond.true1011:                                    ; preds = %lor.lhs.false1005, %land.lhs.true999
  %419 = load i32, i32* %mode.addr, align 4, !dbg !5497
  br label %cond.end1016, !dbg !5497

cond.false1012:                                   ; preds = %lor.lhs.false1005
  %420 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1013 = zext i32 %420 to i64, !dbg !5497
  %arrayidx1014 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1013, !dbg !5497
  %421 = load i8, i8* %arrayidx1014, align 1, !dbg !5497
  %conv1015 = zext i8 %421 to i32, !dbg !5497
  br label %cond.end1016, !dbg !5497

cond.end1016:                                     ; preds = %cond.false1012, %cond.true1011
  %cond1017 = phi i32 [ %419, %cond.true1011 ], [ %conv1015, %cond.false1012 ], !dbg !5497
  %idxprom1018 = zext i32 %cond1017 to i64, !dbg !5497
  %arrayidx1019 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1018, !dbg !5497
  %422 = load i8, i8* %arrayidx1019, align 1, !dbg !5497
  %conv1020 = zext i8 %422 to i32, !dbg !5497
  %cmp1021 = icmp eq i32 %conv1020, 9, !dbg !5497
  br i1 %cmp1021, label %cond.true1023, label %cond.false1044, !dbg !5497

cond.true1023:                                    ; preds = %cond.end1016
  %423 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1024 = zext i32 %423 to i64, !dbg !5497
  %arrayidx1025 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1024, !dbg !5497
  %424 = load i8, i8* %arrayidx1025, align 1, !dbg !5497
  %conv1026 = zext i8 %424 to i32, !dbg !5497
  %cmp1027 = icmp eq i32 %conv1026, 8, !dbg !5497
  br i1 %cmp1027, label %cond.true1035, label %lor.lhs.false1029, !dbg !5497

lor.lhs.false1029:                                ; preds = %cond.true1023
  %425 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1030 = zext i32 %425 to i64, !dbg !5497
  %arrayidx1031 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1030, !dbg !5497
  %426 = load i8, i8* %arrayidx1031, align 1, !dbg !5497
  %conv1032 = zext i8 %426 to i32, !dbg !5497
  %cmp1033 = icmp eq i32 %conv1032, 9, !dbg !5497
  br i1 %cmp1033, label %cond.true1035, label %cond.false1036, !dbg !5497

cond.true1035:                                    ; preds = %lor.lhs.false1029, %cond.true1023
  %427 = load i32, i32* %mode.addr, align 4, !dbg !5497
  br label %cond.end1040, !dbg !5497

cond.false1036:                                   ; preds = %lor.lhs.false1029
  %428 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1037 = zext i32 %428 to i64, !dbg !5497
  %arrayidx1038 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1037, !dbg !5497
  %429 = load i8, i8* %arrayidx1038, align 1, !dbg !5497
  %conv1039 = zext i8 %429 to i32, !dbg !5497
  br label %cond.end1040, !dbg !5497

cond.end1040:                                     ; preds = %cond.false1036, %cond.true1035
  %cond1041 = phi i32 [ %427, %cond.true1035 ], [ %conv1039, %cond.false1036 ], !dbg !5497
  %sub1042 = sub i32 %cond1041, 42, !dbg !5497
  %add1043 = add i32 %sub1042, 4, !dbg !5497
  br label %cond.end1064, !dbg !5497

cond.false1044:                                   ; preds = %cond.end1016
  %430 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1045 = zext i32 %430 to i64, !dbg !5497
  %arrayidx1046 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1045, !dbg !5497
  %431 = load i8, i8* %arrayidx1046, align 1, !dbg !5497
  %conv1047 = zext i8 %431 to i32, !dbg !5497
  %cmp1048 = icmp eq i32 %conv1047, 8, !dbg !5497
  br i1 %cmp1048, label %cond.true1056, label %lor.lhs.false1050, !dbg !5497

lor.lhs.false1050:                                ; preds = %cond.false1044
  %432 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1051 = zext i32 %432 to i64, !dbg !5497
  %arrayidx1052 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1051, !dbg !5497
  %433 = load i8, i8* %arrayidx1052, align 1, !dbg !5497
  %conv1053 = zext i8 %433 to i32, !dbg !5497
  %cmp1054 = icmp eq i32 %conv1053, 9, !dbg !5497
  br i1 %cmp1054, label %cond.true1056, label %cond.false1057, !dbg !5497

cond.true1056:                                    ; preds = %lor.lhs.false1050, %cond.false1044
  %434 = load i32, i32* %mode.addr, align 4, !dbg !5497
  br label %cond.end1061, !dbg !5497

cond.false1057:                                   ; preds = %lor.lhs.false1050
  %435 = load i32, i32* %mode.addr, align 4, !dbg !5497
  %idxprom1058 = zext i32 %435 to i64, !dbg !5497
  %arrayidx1059 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1058, !dbg !5497
  %436 = load i8, i8* %arrayidx1059, align 1, !dbg !5497
  %conv1060 = zext i8 %436 to i32, !dbg !5497
  br label %cond.end1061, !dbg !5497

cond.end1061:                                     ; preds = %cond.false1057, %cond.true1056
  %cond1062 = phi i32 [ %434, %cond.true1056 ], [ %conv1060, %cond.false1057 ], !dbg !5497
  %sub1063 = sub i32 %cond1062, 38, !dbg !5497
  br label %cond.end1064, !dbg !5497

cond.end1064:                                     ; preds = %cond.end1061, %cond.end1040
  %cond1065 = phi i32 [ %add1043, %cond.end1040 ], [ %sub1063, %cond.end1061 ], !dbg !5497
  %idxprom1066 = zext i32 %cond1065 to i64, !dbg !5497
  %arrayidx1067 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1066, !dbg !5497
  %437 = load %struct.real_format*, %struct.real_format** %arrayidx1067, align 8, !dbg !5497
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %437, i32 0, i32 11, !dbg !5497
  %438 = load i8, i8* %has_nans, align 2, !dbg !5497
  %conv1068 = zext i8 %438 to i32, !dbg !5497
  %tobool1069 = icmp ne i32 %conv1068, 0, !dbg !5497
  br i1 %tobool1069, label %land.lhs.true1070, label %if.end1077, !dbg !5497

land.lhs.true1070:                                ; preds = %cond.end1064
  %439 = load i32, i32* @flag_finite_math_only, align 4, !dbg !5497
  %tobool1071 = icmp ne i32 %439, 0, !dbg !5497
  br i1 %tobool1071, label %if.end1077, label %land.lhs.true1072, !dbg !5500

land.lhs.true1072:                                ; preds = %land.lhs.true1070
  %call1073 = call zeroext i8 @real_isnan(%struct.real_value* %d971), !dbg !5501
  %conv1074 = zext i8 %call1073 to i32, !dbg !5501
  %tobool1075 = icmp ne i32 %conv1074, 0, !dbg !5501
  br i1 %tobool1075, label %if.then1076, label %if.end1077, !dbg !5502

if.then1076:                                      ; preds = %land.lhs.true1072
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5503
  br label %return, !dbg !5503

if.end1077:                                       ; preds = %land.lhs.true1072, %land.lhs.true1070, %cond.end1064, %lor.lhs.false993, %sw.bb973
  %440 = load i32, i32* %mode.addr, align 4, !dbg !5504
  %call1078 = call zeroext i8 @real_sqrt(%struct.real_value* %t, i32 %440, %struct.real_value* %d971), !dbg !5505
  %441 = bitcast %struct.real_value* %d971 to i8*, !dbg !5506
  %442 = bitcast %struct.real_value* %t to i8*, !dbg !5506
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %441, i8* align 8 %442, i64 32, i1 false), !dbg !5506
  br label %sw.epilog1109, !dbg !5507

sw.bb1079:                                        ; preds = %if.then970
  call void @real_arithmetic2(%struct.real_value* sret %tmp1080, i32 82, %struct.real_value* %d971, %struct.real_value* null), !dbg !5508
  %443 = bitcast %struct.real_value* %d971 to i8*, !dbg !5508
  %444 = bitcast %struct.real_value* %tmp1080 to i8*, !dbg !5508
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %443, i8* align 8 %444, i64 32, i1 false), !dbg !5508
  br label %sw.epilog1109, !dbg !5509

sw.bb1081:                                        ; preds = %if.then970
  call void @real_arithmetic2(%struct.real_value* sret %tmp1082, i32 79, %struct.real_value* %d971, %struct.real_value* null), !dbg !5510
  %445 = bitcast %struct.real_value* %d971 to i8*, !dbg !5510
  %446 = bitcast %struct.real_value* %tmp1082 to i8*, !dbg !5510
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %445, i8* align 8 %446, i64 32, i1 false), !dbg !5510
  br label %sw.epilog1109, !dbg !5511

sw.bb1083:                                        ; preds = %if.then970
  %447 = load i32, i32* %mode.addr, align 4, !dbg !5512
  call void @real_value_truncate(%struct.real_value* sret %tmp1084, i32 %447, %struct.real_value* byval(%struct.real_value) align 8 %d971), !dbg !5513
  %448 = bitcast %struct.real_value* %d971 to i8*, !dbg !5513
  %449 = bitcast %struct.real_value* %tmp1084 to i8*, !dbg !5513
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %448, i8* align 8 %449, i64 32, i1 false), !dbg !5513
  br label %sw.epilog1109, !dbg !5514

sw.bb1085:                                        ; preds = %if.then970
  br label %sw.epilog1109, !dbg !5515

sw.bb1086:                                        ; preds = %if.then970
  %call1087 = call zeroext i8 @real_arithmetic(%struct.real_value* %d971, i32 77, %struct.real_value* %d971, %struct.real_value* null), !dbg !5516
  br label %sw.epilog1109, !dbg !5517

sw.bb1088:                                        ; preds = %if.then970
  call void @llvm.dbg.declare(metadata [4 x i64]* %tmp1089, metadata !5518, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %i1090, metadata !5522, metadata !DIExpression()), !dbg !5523
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1089, i64 0, i64 0, !dbg !5524
  %450 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5525
  %451 = bitcast %struct.rtx_def* %450 to i32*, !dbg !5525
  %bf.load1091 = load i32, i32* %451, align 8, !dbg !5525
  %bf.lshr1092 = lshr i32 %bf.load1091, 16, !dbg !5525
  %bf.clear1093 = and i32 %bf.lshr1092, 255, !dbg !5525
  %call1094 = call i64 @real_to_target(i64* %arraydecay, %struct.real_value* %d971, i32 %bf.clear1093), !dbg !5526
  store i32 0, i32* %i1090, align 4, !dbg !5527
  br label %for.cond1095, !dbg !5529

for.cond1095:                                     ; preds = %for.inc1104, %sw.bb1088
  %452 = load i32, i32* %i1090, align 4, !dbg !5530
  %cmp1096 = icmp slt i32 %452, 4, !dbg !5532
  br i1 %cmp1096, label %for.body1098, label %for.end1106, !dbg !5533

for.body1098:                                     ; preds = %for.cond1095
  %453 = load i32, i32* %i1090, align 4, !dbg !5534
  %idxprom1099 = sext i32 %453 to i64, !dbg !5535
  %arrayidx1100 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1089, i64 0, i64 %idxprom1099, !dbg !5535
  %454 = load i64, i64* %arrayidx1100, align 8, !dbg !5535
  %neg1101 = xor i64 %454, -1, !dbg !5536
  %455 = load i32, i32* %i1090, align 4, !dbg !5537
  %idxprom1102 = sext i32 %455 to i64, !dbg !5538
  %arrayidx1103 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1089, i64 0, i64 %idxprom1102, !dbg !5538
  store i64 %neg1101, i64* %arrayidx1103, align 8, !dbg !5539
  br label %for.inc1104, !dbg !5538

for.inc1104:                                      ; preds = %for.body1098
  %456 = load i32, i32* %i1090, align 4, !dbg !5540
  %inc1105 = add nsw i32 %456, 1, !dbg !5540
  store i32 %inc1105, i32* %i1090, align 4, !dbg !5540
  br label %for.cond1095, !dbg !5541, !llvm.loop !5542

for.end1106:                                      ; preds = %for.cond1095
  %arraydecay1107 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1089, i64 0, i64 0, !dbg !5544
  %457 = load i32, i32* %mode.addr, align 4, !dbg !5545
  call void @real_from_target(%struct.real_value* %d971, i64* %arraydecay1107, i32 %457), !dbg !5546
  br label %sw.epilog1109, !dbg !5547

sw.default1108:                                   ; preds = %if.then970
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1511, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5548
  br label %sw.epilog1109, !dbg !5549

sw.epilog1109:                                    ; preds = %sw.default1108, %for.end1106, %sw.bb1086, %sw.bb1085, %sw.bb1083, %sw.bb1081, %sw.bb1079, %if.end1077
  %458 = load i32, i32* %mode.addr, align 4, !dbg !5550
  %call1110 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %d971, i32 %458), !dbg !5550
  store %struct.rtx_def* %call1110, %struct.rtx_def** %retval, align 8, !dbg !5551
  br label %return, !dbg !5551

if.else1111:                                      ; preds = %lor.lhs.false964, %if.else953
  %459 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5552
  %460 = bitcast %struct.rtx_def* %459 to i32*, !dbg !5552
  %bf.load1112 = load i32, i32* %460, align 8, !dbg !5552
  %bf.clear1113 = and i32 %bf.load1112, 65535, !dbg !5552
  %cmp1114 = icmp eq i32 %bf.clear1113, 32, !dbg !5554
  br i1 %cmp1114, label %land.lhs.true1116, label %if.end1224, !dbg !5555

land.lhs.true1116:                                ; preds = %if.else1111
  %461 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5556
  %462 = bitcast %struct.rtx_def* %461 to i32*, !dbg !5556
  %bf.load1117 = load i32, i32* %462, align 8, !dbg !5556
  %bf.lshr1118 = lshr i32 %bf.load1117, 16, !dbg !5556
  %bf.clear1119 = and i32 %bf.lshr1118, 255, !dbg !5556
  %idxprom1120 = zext i32 %bf.clear1119 to i64, !dbg !5556
  %arrayidx1121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1120, !dbg !5556
  %463 = load i8, i8* %arrayidx1121, align 1, !dbg !5556
  %conv1122 = zext i8 %463 to i32, !dbg !5556
  %cmp1123 = icmp eq i32 %conv1122, 8, !dbg !5556
  br i1 %cmp1123, label %land.lhs.true1134, label %lor.lhs.false1125, !dbg !5556

lor.lhs.false1125:                                ; preds = %land.lhs.true1116
  %464 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5556
  %465 = bitcast %struct.rtx_def* %464 to i32*, !dbg !5556
  %bf.load1126 = load i32, i32* %465, align 8, !dbg !5556
  %bf.lshr1127 = lshr i32 %bf.load1126, 16, !dbg !5556
  %bf.clear1128 = and i32 %bf.lshr1127, 255, !dbg !5556
  %idxprom1129 = zext i32 %bf.clear1128 to i64, !dbg !5556
  %arrayidx1130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1129, !dbg !5556
  %466 = load i8, i8* %arrayidx1130, align 1, !dbg !5556
  %conv1131 = zext i8 %466 to i32, !dbg !5556
  %cmp1132 = icmp eq i32 %conv1131, 9, !dbg !5556
  br i1 %cmp1132, label %land.lhs.true1134, label %if.end1224, !dbg !5557

land.lhs.true1134:                                ; preds = %lor.lhs.false1125, %land.lhs.true1116
  %467 = load i32, i32* %mode.addr, align 4, !dbg !5558
  %idxprom1135 = zext i32 %467 to i64, !dbg !5558
  %arrayidx1136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1135, !dbg !5558
  %468 = load i8, i8* %arrayidx1136, align 1, !dbg !5558
  %conv1137 = zext i8 %468 to i32, !dbg !5558
  %cmp1138 = icmp eq i32 %conv1137, 2, !dbg !5559
  br i1 %cmp1138, label %land.lhs.true1140, label %if.end1224, !dbg !5560

land.lhs.true1140:                                ; preds = %land.lhs.true1134
  %469 = load i32, i32* %width, align 4, !dbg !5561
  %cmp1141 = icmp ule i32 %469, 128, !dbg !5562
  br i1 %cmp1141, label %land.lhs.true1143, label %if.end1224, !dbg !5563

land.lhs.true1143:                                ; preds = %land.lhs.true1140
  %470 = load i32, i32* %width, align 4, !dbg !5564
  %cmp1144 = icmp ugt i32 %470, 0, !dbg !5565
  br i1 %cmp1144, label %if.then1146, label %if.end1224, !dbg !5566

if.then1146:                                      ; preds = %land.lhs.true1143
  call void @llvm.dbg.declare(metadata i64* %xh, metadata !5567, metadata !DIExpression()), !dbg !5569
  call void @llvm.dbg.declare(metadata i64* %xl, metadata !5570, metadata !DIExpression()), !dbg !5571
  call void @llvm.dbg.declare(metadata i64* %th, metadata !5572, metadata !DIExpression()), !dbg !5573
  call void @llvm.dbg.declare(metadata i64* %tl, metadata !5574, metadata !DIExpression()), !dbg !5575
  call void @llvm.dbg.declare(metadata %struct.real_value* %x1147, metadata !5576, metadata !DIExpression()), !dbg !5577
  call void @llvm.dbg.declare(metadata %struct.real_value* %t1148, metadata !5578, metadata !DIExpression()), !dbg !5579
  %471 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5580
  %u1149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1, !dbg !5580
  %rv1150 = bitcast %union.u* %u1149 to %struct.real_value*, !dbg !5580
  %472 = bitcast %struct.real_value* %x1147 to i8*, !dbg !5580
  %473 = bitcast %struct.real_value* %rv1150 to i8*, !dbg !5580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %472, i8* align 8 %473, i64 32, i1 false), !dbg !5580
  %474 = load i32, i32* %code.addr, align 4, !dbg !5581
  switch i32 %474, label %sw.default1221 [
    i32 104, label %sw.bb1151
    i32 106, label %sw.bb1190
  ], !dbg !5582

sw.bb1151:                                        ; preds = %if.then1146
  %call1152 = call zeroext i8 @real_isnan(%struct.real_value* %x1147), !dbg !5583
  %tobool1153 = icmp ne i8 %call1152, 0, !dbg !5583
  br i1 %tobool1153, label %if.then1154, label %if.end1155, !dbg !5586

if.then1154:                                      ; preds = %sw.bb1151
  %475 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5587
  store %struct.rtx_def* %475, %struct.rtx_def** %retval, align 8, !dbg !5588
  br label %return, !dbg !5588

if.end1155:                                       ; preds = %sw.bb1151
  %476 = load i32, i32* %width, align 4, !dbg !5589
  %cmp1156 = icmp ugt i32 %476, 64, !dbg !5591
  br i1 %cmp1156, label %if.then1158, label %if.else1164, !dbg !5592

if.then1158:                                      ; preds = %if.end1155
  %477 = load i32, i32* %width, align 4, !dbg !5593
  %sub1159 = sub i32 %477, 64, !dbg !5595
  %sub1160 = sub i32 %sub1159, 1, !dbg !5596
  %sh_prom1161 = zext i32 %sub1160 to i64, !dbg !5597
  %shl1162 = shl i64 1, %sh_prom1161, !dbg !5597
  %sub1163 = sub i64 %shl1162, 1, !dbg !5598
  store i64 %sub1163, i64* %th, align 8, !dbg !5599
  store i64 -1, i64* %tl, align 8, !dbg !5600
  br label %if.end1169, !dbg !5601

if.else1164:                                      ; preds = %if.end1155
  store i64 0, i64* %th, align 8, !dbg !5602
  %478 = load i32, i32* %width, align 4, !dbg !5604
  %sub1165 = sub i32 %478, 1, !dbg !5605
  %sh_prom1166 = zext i32 %sub1165 to i64, !dbg !5606
  %shl1167 = shl i64 1, %sh_prom1166, !dbg !5606
  %sub1168 = sub i64 %shl1167, 1, !dbg !5607
  store i64 %sub1168, i64* %tl, align 8, !dbg !5608
  br label %if.end1169

if.end1169:                                       ; preds = %if.else1164, %if.then1158
  %479 = load i64, i64* %tl, align 8, !dbg !5609
  %480 = load i64, i64* %th, align 8, !dbg !5610
  call void @real_from_integer(%struct.real_value* %t1148, i32 0, i64 %479, i64 %480, i32 0), !dbg !5611
  %call1170 = call zeroext i8 @real_compare(i32 97, %struct.real_value* %t1148, %struct.real_value* %x1147), !dbg !5612
  %tobool1171 = icmp ne i8 %call1170, 0, !dbg !5612
  br i1 %tobool1171, label %if.then1172, label %if.end1173, !dbg !5614

if.then1172:                                      ; preds = %if.end1169
  %481 = load i64, i64* %th, align 8, !dbg !5615
  store i64 %481, i64* %xh, align 8, !dbg !5617
  %482 = load i64, i64* %tl, align 8, !dbg !5618
  store i64 %482, i64* %xl, align 8, !dbg !5619
  br label %sw.epilog1222, !dbg !5620

if.end1173:                                       ; preds = %if.end1169
  %483 = load i32, i32* %width, align 4, !dbg !5621
  %cmp1174 = icmp ugt i32 %483, 64, !dbg !5623
  br i1 %cmp1174, label %if.then1176, label %if.else1181, !dbg !5624

if.then1176:                                      ; preds = %if.end1173
  %484 = load i32, i32* %width, align 4, !dbg !5625
  %sub1177 = sub i32 %484, 64, !dbg !5627
  %sub1178 = sub i32 %sub1177, 1, !dbg !5628
  %sh_prom1179 = zext i32 %sub1178 to i64, !dbg !5629
  %shl1180 = shl i64 -1, %sh_prom1179, !dbg !5629
  store i64 %shl1180, i64* %th, align 8, !dbg !5630
  store i64 0, i64* %tl, align 8, !dbg !5631
  br label %if.end1185, !dbg !5632

if.else1181:                                      ; preds = %if.end1173
  store i64 -1, i64* %th, align 8, !dbg !5633
  %485 = load i32, i32* %width, align 4, !dbg !5635
  %sub1182 = sub i32 %485, 1, !dbg !5636
  %sh_prom1183 = zext i32 %sub1182 to i64, !dbg !5637
  %shl1184 = shl i64 -1, %sh_prom1183, !dbg !5637
  store i64 %shl1184, i64* %tl, align 8, !dbg !5638
  br label %if.end1185

if.end1185:                                       ; preds = %if.else1181, %if.then1176
  %486 = load i64, i64* %tl, align 8, !dbg !5639
  %487 = load i64, i64* %th, align 8, !dbg !5640
  call void @real_from_integer(%struct.real_value* %t1148, i32 0, i64 %486, i64 %487, i32 0), !dbg !5641
  %call1186 = call zeroext i8 @real_compare(i32 97, %struct.real_value* %x1147, %struct.real_value* %t1148), !dbg !5642
  %tobool1187 = icmp ne i8 %call1186, 0, !dbg !5642
  br i1 %tobool1187, label %if.then1188, label %if.end1189, !dbg !5644

if.then1188:                                      ; preds = %if.end1185
  %488 = load i64, i64* %th, align 8, !dbg !5645
  store i64 %488, i64* %xh, align 8, !dbg !5647
  %489 = load i64, i64* %tl, align 8, !dbg !5648
  store i64 %489, i64* %xl, align 8, !dbg !5649
  br label %sw.epilog1222, !dbg !5650

if.end1189:                                       ; preds = %if.end1185
  call void @real_to_integer2(i64* %xl, i64* %xh, %struct.real_value* %x1147), !dbg !5651
  br label %sw.epilog1222, !dbg !5652

sw.bb1190:                                        ; preds = %if.then1146
  %call1191 = call zeroext i8 @real_isnan(%struct.real_value* %x1147), !dbg !5653
  %conv1192 = zext i8 %call1191 to i32, !dbg !5653
  %tobool1193 = icmp ne i32 %conv1192, 0, !dbg !5653
  br i1 %tobool1193, label %if.then1198, label %lor.lhs.false1194, !dbg !5655

lor.lhs.false1194:                                ; preds = %sw.bb1190
  %call1195 = call zeroext i8 @real_isneg(%struct.real_value* %x1147), !dbg !5656
  %conv1196 = zext i8 %call1195 to i32, !dbg !5656
  %tobool1197 = icmp ne i32 %conv1196, 0, !dbg !5656
  br i1 %tobool1197, label %if.then1198, label %if.end1199, !dbg !5657

if.then1198:                                      ; preds = %lor.lhs.false1194, %sw.bb1190
  %490 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !5658
  store %struct.rtx_def* %490, %struct.rtx_def** %retval, align 8, !dbg !5659
  br label %return, !dbg !5659

if.end1199:                                       ; preds = %lor.lhs.false1194
  %491 = load i32, i32* %width, align 4, !dbg !5660
  %cmp1200 = icmp eq i32 %491, 128, !dbg !5662
  br i1 %cmp1200, label %if.then1202, label %if.else1203, !dbg !5663

if.then1202:                                      ; preds = %if.end1199
  store i64 -1, i64* %th, align 8, !dbg !5664
  store i64 -1, i64* %tl, align 8, !dbg !5666
  br label %if.end1216, !dbg !5667

if.else1203:                                      ; preds = %if.end1199
  %492 = load i32, i32* %width, align 4, !dbg !5668
  %cmp1204 = icmp uge i32 %492, 64, !dbg !5670
  br i1 %cmp1204, label %if.then1206, label %if.else1211, !dbg !5671

if.then1206:                                      ; preds = %if.else1203
  %493 = load i32, i32* %width, align 4, !dbg !5672
  %sub1207 = sub i32 %493, 64, !dbg !5674
  %sh_prom1208 = zext i32 %sub1207 to i64, !dbg !5675
  %shl1209 = shl i64 1, %sh_prom1208, !dbg !5675
  %sub1210 = sub i64 %shl1209, 1, !dbg !5676
  store i64 %sub1210, i64* %th, align 8, !dbg !5677
  store i64 -1, i64* %tl, align 8, !dbg !5678
  br label %if.end1215, !dbg !5679

if.else1211:                                      ; preds = %if.else1203
  store i64 0, i64* %th, align 8, !dbg !5680
  %494 = load i32, i32* %width, align 4, !dbg !5682
  %sh_prom1212 = zext i32 %494 to i64, !dbg !5683
  %shl1213 = shl i64 1, %sh_prom1212, !dbg !5683
  %sub1214 = sub i64 %shl1213, 1, !dbg !5684
  store i64 %sub1214, i64* %tl, align 8, !dbg !5685
  br label %if.end1215

if.end1215:                                       ; preds = %if.else1211, %if.then1206
  br label %if.end1216

if.end1216:                                       ; preds = %if.end1215, %if.then1202
  %495 = load i64, i64* %tl, align 8, !dbg !5686
  %496 = load i64, i64* %th, align 8, !dbg !5687
  call void @real_from_integer(%struct.real_value* %t1148, i32 0, i64 %495, i64 %496, i32 1), !dbg !5688
  %call1217 = call zeroext i8 @real_compare(i32 97, %struct.real_value* %t1148, %struct.real_value* %x1147), !dbg !5689
  %tobool1218 = icmp ne i8 %call1217, 0, !dbg !5689
  br i1 %tobool1218, label %if.then1219, label %if.end1220, !dbg !5691

if.then1219:                                      ; preds = %if.end1216
  %497 = load i64, i64* %th, align 8, !dbg !5692
  store i64 %497, i64* %xh, align 8, !dbg !5694
  %498 = load i64, i64* %tl, align 8, !dbg !5695
  store i64 %498, i64* %xl, align 8, !dbg !5696
  br label %sw.epilog1222, !dbg !5697

if.end1220:                                       ; preds = %if.end1216
  call void @real_to_integer2(i64* %xl, i64* %xh, %struct.real_value* %x1147), !dbg !5698
  br label %sw.epilog1222, !dbg !5699

sw.default1221:                                   ; preds = %if.then1146
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 1611, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5700
  br label %sw.epilog1222, !dbg !5701

sw.epilog1222:                                    ; preds = %sw.default1221, %if.end1220, %if.then1219, %if.end1189, %if.then1188, %if.then1172
  %499 = load i64, i64* %xl, align 8, !dbg !5702
  %500 = load i64, i64* %xh, align 8, !dbg !5703
  %501 = load i32, i32* %mode.addr, align 4, !dbg !5704
  %call1223 = call %struct.rtx_def* @immed_double_const(i64 %499, i64 %500, i32 %501), !dbg !5705
  store %struct.rtx_def* %call1223, %struct.rtx_def** %retval, align 8, !dbg !5706
  br label %return, !dbg !5706

if.end1224:                                       ; preds = %land.lhs.true1143, %land.lhs.true1140, %land.lhs.true1134, %lor.lhs.false1125, %if.else1111
  br label %if.end1225

if.end1225:                                       ; preds = %if.end1224
  br label %if.end1226

if.end1226:                                       ; preds = %if.end1225
  br label %if.end1227

if.end1227:                                       ; preds = %if.end1226
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5707
  br label %return, !dbg !5707

return:                                           ; preds = %if.end1227, %sw.epilog1222, %if.then1198, %if.then1154, %sw.epilog1109, %if.then1076, %sw.epilog951, %sw.default950, %sw.bb949, %if.then905, %if.then887, %sw.epilog, %sw.bb657, %if.else654, %if.else577, %if.end414, %if.then397, %if.end348, %for.end309, %if.then302, %if.end202
  %502 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !5708
  ret %struct.rtx_def* %502, !dbg !5708
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_unary_operation_1(i32 %code, i32 %mode, %struct.rtx_def* %op) #0 !dbg !5709 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %reversed = alloca i32, align 4
  %temp = alloca %struct.rtx_def*, align 8
  %inner_mode = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %in1 = alloca %struct.rtx_def*, align 8
  %in2 = alloca %struct.rtx_def*, align 8
  %op_mode = alloca i32, align 4
  %tem = alloca %struct.rtx_def*, align 8
  %inner = alloca i32, align 4
  %isize = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !5712, metadata !DIExpression()), !dbg !5713
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5714, metadata !DIExpression()), !dbg !5715
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5716, metadata !DIExpression()), !dbg !5717
  call void @llvm.dbg.declare(metadata i32* %reversed, metadata !5718, metadata !DIExpression()), !dbg !5719
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %temp, metadata !5720, metadata !DIExpression()), !dbg !5721
  %0 = load i32, i32* %code.addr, align 4, !dbg !5722
  switch i32 %0, label %sw.default1882 [
    i32 64, label %sw.bb
    i32 51, label %sw.bb234
    i32 100, label %sw.bb1043
    i32 102, label %sw.bb1240
    i32 101, label %sw.bb1443
    i32 111, label %sw.bb1528
    i32 114, label %sw.bb1610
    i32 117, label %sw.bb1634
    i32 118, label %sw.bb1671
    i32 113, label %sw.bb1710
    i32 103, label %sw.bb1721
    i32 98, label %sw.bb1740
    i32 99, label %sw.bb1837
  ], !dbg !5723

sw.bb:                                            ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5724
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5724
  %bf.load = load i32, i32* %2, align 8, !dbg !5724
  %bf.clear = and i32 %bf.load, 65535, !dbg !5724
  %cmp = icmp eq i32 %bf.clear, 64, !dbg !5727
  br i1 %cmp, label %if.then, label %if.end, !dbg !5728

if.then:                                          ; preds = %sw.bb
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5729
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5729
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5729
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5729
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5729
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5729
  store %struct.rtx_def* %4, %struct.rtx_def** %retval, align 8, !dbg !5730
  br label %return, !dbg !5730

if.end:                                           ; preds = %sw.bb
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5731
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5731
  %bf.load1 = load i32, i32* %6, align 8, !dbg !5731
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5731
  %idxprom = sext i32 %bf.clear2 to i64, !dbg !5731
  %arrayidx3 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5731
  %7 = load i32, i32* %arrayidx3, align 4, !dbg !5731
  %and = and i32 %7, -2, !dbg !5731
  %cmp4 = icmp eq i32 %and, 0, !dbg !5731
  br i1 %cmp4, label %land.lhs.true, label %if.end18, !dbg !5733

land.lhs.true:                                    ; preds = %if.end
  %8 = load i32, i32* %mode.addr, align 4, !dbg !5734
  %cmp5 = icmp eq i32 %8, 13, !dbg !5735
  br i1 %cmp5, label %land.lhs.true6, label %if.end18, !dbg !5736

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5737
  %call = call i32 @reversed_comparison_code(%struct.rtx_def* %9, %struct.rtx_def* null), !dbg !5738
  store i32 %call, i32* %reversed, align 4, !dbg !5739
  %cmp7 = icmp ne i32 %call, 0, !dbg !5740
  br i1 %cmp7, label %if.then8, label %if.end18, !dbg !5741

if.then8:                                         ; preds = %land.lhs.true6
  %10 = load i32, i32* %reversed, align 4, !dbg !5742
  %11 = load i32, i32* %mode.addr, align 4, !dbg !5743
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5744
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5744
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !5744
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !5744
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5744
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx12, align 8, !dbg !5744
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5745
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !5745
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !5745
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 1, !dbg !5745
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !5745
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !5745
  %call17 = call %struct.rtx_def* @simplify_gen_relational(i32 %10, i32 %11, i32 0, %struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !5746
  store %struct.rtx_def* %call17, %struct.rtx_def** %retval, align 8, !dbg !5747
  br label %return, !dbg !5747

if.end18:                                         ; preds = %land.lhs.true6, %land.lhs.true, %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5748
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !5748
  %bf.load19 = load i32, i32* %17, align 8, !dbg !5748
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !5748
  %cmp21 = icmp eq i32 %bf.clear20, 49, !dbg !5750
  br i1 %cmp21, label %land.lhs.true22, label %if.end34, !dbg !5751

land.lhs.true22:                                  ; preds = %if.end18
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5752
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !5752
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !5752
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 1, !dbg !5752
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !5752
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !5752
  %20 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !5753
  %cmp27 = icmp eq %struct.rtx_def* %19, %20, !dbg !5754
  br i1 %cmp27, label %if.then28, label %if.end34, !dbg !5755

if.then28:                                        ; preds = %land.lhs.true22
  %21 = load i32, i32* %mode.addr, align 4, !dbg !5756
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5757
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5757
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !5757
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !5757
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5757
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5757
  %24 = load i32, i32* %mode.addr, align 4, !dbg !5758
  %call33 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %21, %struct.rtx_def* %23, i32 %24), !dbg !5759
  store %struct.rtx_def* %call33, %struct.rtx_def** %retval, align 8, !dbg !5760
  br label %return, !dbg !5760

if.end34:                                         ; preds = %land.lhs.true22, %if.end18
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5761
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !5761
  %bf.load35 = load i32, i32* %26, align 8, !dbg !5761
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !5761
  %cmp37 = icmp eq i32 %bf.clear36, 51, !dbg !5763
  br i1 %cmp37, label %if.then38, label %if.end44, !dbg !5764

if.then38:                                        ; preds = %if.end34
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5765
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5765
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !5765
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !5765
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !5765
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !5765
  %call43 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %28, i64 -1), !dbg !5766
  store %struct.rtx_def* %call43, %struct.rtx_def** %retval, align 8, !dbg !5767
  br label %return, !dbg !5767

if.end44:                                         ; preds = %if.end34
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5768
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !5768
  %bf.load45 = load i32, i32* %30, align 8, !dbg !5768
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !5768
  %cmp47 = icmp eq i32 %bf.clear46, 63, !dbg !5770
  br i1 %cmp47, label %land.lhs.true48, label %if.end69, !dbg !5771

land.lhs.true48:                                  ; preds = %if.end44
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5772
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5772
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !5772
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 1, !dbg !5772
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5772
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5772
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !5772
  %bf.load53 = load i32, i32* %33, align 8, !dbg !5772
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !5772
  %cmp55 = icmp eq i32 %bf.clear54, 30, !dbg !5772
  br i1 %cmp55, label %land.lhs.true56, label %if.end69, !dbg !5773

land.lhs.true56:                                  ; preds = %land.lhs.true48
  %34 = load i32, i32* %mode.addr, align 4, !dbg !5774
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5775
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5775
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !5775
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 1, !dbg !5775
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !5775
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !5775
  %37 = load i32, i32* %mode.addr, align 4, !dbg !5776
  %call61 = call %struct.rtx_def* @simplify_unary_operation(i32 64, i32 %34, %struct.rtx_def* %36, i32 %37), !dbg !5777
  store %struct.rtx_def* %call61, %struct.rtx_def** %temp, align 8, !dbg !5778
  %cmp62 = icmp ne %struct.rtx_def* %call61, null, !dbg !5779
  br i1 %cmp62, label %if.then63, label %if.end69, !dbg !5780

if.then63:                                        ; preds = %land.lhs.true56
  %38 = load i32, i32* %mode.addr, align 4, !dbg !5781
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5782
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !5782
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !5782
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 0, !dbg !5782
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !5782
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !5782
  %41 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5783
  %call68 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %38, %struct.rtx_def* %40, %struct.rtx_def* %41), !dbg !5784
  store %struct.rtx_def* %call68, %struct.rtx_def** %retval, align 8, !dbg !5785
  br label %return, !dbg !5785

if.end69:                                         ; preds = %land.lhs.true56, %land.lhs.true48, %if.end44
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5786
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !5786
  %bf.load70 = load i32, i32* %43, align 8, !dbg !5786
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !5786
  %cmp72 = icmp eq i32 %bf.clear71, 49, !dbg !5788
  br i1 %cmp72, label %land.lhs.true73, label %if.end101, !dbg !5789

land.lhs.true73:                                  ; preds = %if.end69
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5790
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !5790
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !5790
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 1, !dbg !5790
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !5790
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !5790
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !5790
  %bf.load78 = load i32, i32* %46, align 8, !dbg !5790
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !5790
  %cmp80 = icmp eq i32 %bf.clear79, 30, !dbg !5790
  br i1 %cmp80, label %land.lhs.true81, label %if.end101, !dbg !5791

land.lhs.true81:                                  ; preds = %land.lhs.true73
  %47 = load i32, i32* %mode.addr, align 4, !dbg !5792
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5793
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !5793
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !5793
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 1, !dbg !5793
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !5793
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !5793
  %call86 = call zeroext i8 @mode_signbit_p(i32 %47, %struct.rtx_def* %49), !dbg !5794
  %conv = zext i8 %call86 to i32, !dbg !5794
  %tobool = icmp ne i32 %conv, 0, !dbg !5794
  br i1 %tobool, label %land.lhs.true87, label %if.end101, !dbg !5795

land.lhs.true87:                                  ; preds = %land.lhs.true81
  %50 = load i32, i32* %mode.addr, align 4, !dbg !5796
  %51 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5797
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !5797
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !5797
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 1, !dbg !5797
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !5797
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !5797
  %53 = load i32, i32* %mode.addr, align 4, !dbg !5798
  %call92 = call %struct.rtx_def* @simplify_unary_operation(i32 64, i32 %50, %struct.rtx_def* %52, i32 %53), !dbg !5799
  store %struct.rtx_def* %call92, %struct.rtx_def** %temp, align 8, !dbg !5800
  %cmp93 = icmp ne %struct.rtx_def* %call92, null, !dbg !5801
  br i1 %cmp93, label %if.then95, label %if.end101, !dbg !5802

if.then95:                                        ; preds = %land.lhs.true87
  %54 = load i32, i32* %mode.addr, align 4, !dbg !5803
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5804
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !5804
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !5804
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 0, !dbg !5804
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !5804
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !5804
  %57 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5805
  %call100 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %54, %struct.rtx_def* %56, %struct.rtx_def* %57), !dbg !5806
  store %struct.rtx_def* %call100, %struct.rtx_def** %retval, align 8, !dbg !5807
  br label %return, !dbg !5807

if.end101:                                        ; preds = %land.lhs.true87, %land.lhs.true81, %land.lhs.true73, %if.end69
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5808
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !5808
  %bf.load102 = load i32, i32* %59, align 8, !dbg !5808
  %bf.clear103 = and i32 %bf.load102, 65535, !dbg !5808
  %cmp104 = icmp eq i32 %bf.clear103, 65, !dbg !5810
  br i1 %cmp104, label %land.lhs.true106, label %if.end120, !dbg !5811

land.lhs.true106:                                 ; preds = %if.end101
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5812
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !5812
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !5812
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 0, !dbg !5812
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !5812
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !5812
  %62 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5813
  %cmp111 = icmp eq %struct.rtx_def* %61, %62, !dbg !5814
  br i1 %cmp111, label %if.then113, label %if.end120, !dbg !5815

if.then113:                                       ; preds = %land.lhs.true106
  %63 = load i32, i32* %mode.addr, align 4, !dbg !5816
  %64 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5818
  %65 = load i32, i32* %mode.addr, align 4, !dbg !5819
  %call114 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %63, %struct.rtx_def* %64, i32 %65), !dbg !5820
  store %struct.rtx_def* %call114, %struct.rtx_def** %temp, align 8, !dbg !5821
  %66 = load i32, i32* %mode.addr, align 4, !dbg !5822
  %67 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5823
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5824
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !5824
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !5824
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 1, !dbg !5824
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !5824
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !5824
  %call119 = call %struct.rtx_def* @simplify_gen_binary(i32 66, i32 %66, %struct.rtx_def* %67, %struct.rtx_def* %69), !dbg !5825
  store %struct.rtx_def* %call119, %struct.rtx_def** %retval, align 8, !dbg !5826
  br label %return, !dbg !5826

if.end120:                                        ; preds = %land.lhs.true106, %if.end101
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5827
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !5827
  %bf.load121 = load i32, i32* %71, align 8, !dbg !5827
  %bf.clear122 = and i32 %bf.load121, 65535, !dbg !5827
  %cmp123 = icmp eq i32 %bf.clear122, 39, !dbg !5829
  br i1 %cmp123, label %land.lhs.true125, label %if.end187, !dbg !5830

land.lhs.true125:                                 ; preds = %if.end120
  %72 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5831
  %call126 = call i32 @subreg_lowpart_p(%struct.rtx_def* %72), !dbg !5832
  %tobool127 = icmp ne i32 %call126, 0, !dbg !5832
  br i1 %tobool127, label %land.lhs.true128, label %if.end187, !dbg !5833

land.lhs.true128:                                 ; preds = %land.lhs.true125
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5834
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !5834
  %bf.load129 = load i32, i32* %74, align 8, !dbg !5834
  %bf.lshr = lshr i32 %bf.load129, 16, !dbg !5834
  %bf.clear130 = and i32 %bf.lshr, 255, !dbg !5834
  %idxprom131 = zext i32 %bf.clear130 to i64, !dbg !5834
  %arrayidx132 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom131, !dbg !5834
  %75 = load i8, i8* %arrayidx132, align 1, !dbg !5834
  %conv133 = zext i8 %75 to i16, !dbg !5834
  %conv134 = zext i16 %conv133 to i32, !dbg !5834
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5835
  %u135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !5835
  %fld136 = bitcast %union.u* %u135 to [1 x %union.rtunion_def]*, !dbg !5835
  %arrayidx137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld136, i64 0, i64 0, !dbg !5835
  %rt_rtx138 = bitcast %union.rtunion_def* %arrayidx137 to %struct.rtx_def**, !dbg !5835
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx138, align 8, !dbg !5835
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !5835
  %bf.load139 = load i32, i32* %78, align 8, !dbg !5835
  %bf.lshr140 = lshr i32 %bf.load139, 16, !dbg !5835
  %bf.clear141 = and i32 %bf.lshr140, 255, !dbg !5835
  %idxprom142 = zext i32 %bf.clear141 to i64, !dbg !5835
  %arrayidx143 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom142, !dbg !5835
  %79 = load i8, i8* %arrayidx143, align 1, !dbg !5835
  %conv144 = zext i8 %79 to i16, !dbg !5835
  %conv145 = zext i16 %conv144 to i32, !dbg !5835
  %cmp146 = icmp slt i32 %conv134, %conv145, !dbg !5836
  br i1 %cmp146, label %land.lhs.true148, label %if.end187, !dbg !5837

land.lhs.true148:                                 ; preds = %land.lhs.true128
  %80 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5838
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !5838
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !5838
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 0, !dbg !5838
  %rt_rtx152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.rtx_def**, !dbg !5838
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx152, align 8, !dbg !5838
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !5838
  %bf.load153 = load i32, i32* %82, align 8, !dbg !5838
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !5838
  %cmp155 = icmp eq i32 %bf.clear154, 65, !dbg !5839
  br i1 %cmp155, label %land.lhs.true157, label %if.end187, !dbg !5840

land.lhs.true157:                                 ; preds = %land.lhs.true148
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5841
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !5841
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !5841
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 0, !dbg !5841
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !5841
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !5841
  %u162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !5841
  %fld163 = bitcast %union.u* %u162 to [1 x %union.rtunion_def]*, !dbg !5841
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i64 0, i64 0, !dbg !5841
  %rt_rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !5841
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !5841
  %86 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5842
  %cmp166 = icmp eq %struct.rtx_def* %85, %86, !dbg !5843
  br i1 %cmp166, label %if.then168, label %if.end187, !dbg !5844

if.then168:                                       ; preds = %land.lhs.true157
  call void @llvm.dbg.declare(metadata i32* %inner_mode, metadata !5845, metadata !DIExpression()), !dbg !5847
  %87 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5848
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !5848
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !5848
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 0, !dbg !5848
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !5848
  %88 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !5848
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !5848
  %bf.load173 = load i32, i32* %89, align 8, !dbg !5848
  %bf.lshr174 = lshr i32 %bf.load173, 16, !dbg !5848
  %bf.clear175 = and i32 %bf.lshr174, 255, !dbg !5848
  store i32 %bf.clear175, i32* %inner_mode, align 4, !dbg !5847
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !5849, metadata !DIExpression()), !dbg !5850
  %90 = load i32, i32* %inner_mode, align 4, !dbg !5851
  %91 = load i32, i32* %inner_mode, align 4, !dbg !5851
  %92 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5851
  %93 = load i32, i32* %inner_mode, align 4, !dbg !5851
  %call176 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %91, %struct.rtx_def* %92, i32 %93), !dbg !5851
  %94 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5851
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !5851
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !5851
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !5851
  %rt_rtx180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtx_def**, !dbg !5851
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx180, align 8, !dbg !5851
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !5851
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !5851
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 1, !dbg !5851
  %rt_rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**, !dbg !5851
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !5851
  %call185 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 66, i32 %90, %struct.rtx_def* %call176, %struct.rtx_def* %96), !dbg !5851
  store %struct.rtx_def* %call185, %struct.rtx_def** %x, align 8, !dbg !5852
  %97 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !5853
  %98 = load i32, i32* %mode.addr, align 4, !dbg !5854
  %99 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !5855
  %call186 = call %struct.rtx_def* %97(i32 %98, %struct.rtx_def* %99), !dbg !5856
  store %struct.rtx_def* %call186, %struct.rtx_def** %retval, align 8, !dbg !5857
  br label %return, !dbg !5857

if.end187:                                        ; preds = %land.lhs.true157, %land.lhs.true148, %land.lhs.true128, %land.lhs.true125, %if.end120
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5858
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !5858
  %bf.load188 = load i32, i32* %101, align 8, !dbg !5858
  %bf.clear189 = and i32 %bf.load188, 65535, !dbg !5858
  %cmp190 = icmp eq i32 %bf.clear189, 62, !dbg !5860
  br i1 %cmp190, label %if.then196, label %lor.lhs.false, !dbg !5861

lor.lhs.false:                                    ; preds = %if.end187
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5862
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !5862
  %bf.load192 = load i32, i32* %103, align 8, !dbg !5862
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !5862
  %cmp194 = icmp eq i32 %bf.clear193, 61, !dbg !5863
  br i1 %cmp194, label %if.then196, label %if.end233, !dbg !5864

if.then196:                                       ; preds = %lor.lhs.false, %if.end187
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in1, metadata !5865, metadata !DIExpression()), !dbg !5867
  %104 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5868
  %u197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !5868
  %fld198 = bitcast %union.u* %u197 to [1 x %union.rtunion_def]*, !dbg !5868
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i64 0, i64 0, !dbg !5868
  %rt_rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**, !dbg !5868
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx200, align 8, !dbg !5868
  store %struct.rtx_def* %105, %struct.rtx_def** %in1, align 8, !dbg !5867
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in2, metadata !5869, metadata !DIExpression()), !dbg !5870
  %106 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5871
  %u201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !5871
  %fld202 = bitcast %union.u* %u201 to [1 x %union.rtunion_def]*, !dbg !5871
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i64 0, i64 1, !dbg !5871
  %rt_rtx204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**, !dbg !5871
  %107 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx204, align 8, !dbg !5871
  store %struct.rtx_def* %107, %struct.rtx_def** %in2, align 8, !dbg !5870
  call void @llvm.dbg.declare(metadata i32* %op_mode, metadata !5872, metadata !DIExpression()), !dbg !5873
  %108 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !5874
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !5874
  %bf.load205 = load i32, i32* %109, align 8, !dbg !5874
  %bf.lshr206 = lshr i32 %bf.load205, 16, !dbg !5874
  %bf.clear207 = and i32 %bf.lshr206, 255, !dbg !5874
  store i32 %bf.clear207, i32* %op_mode, align 4, !dbg !5875
  %110 = load i32, i32* %op_mode, align 4, !dbg !5876
  %111 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !5877
  %112 = load i32, i32* %op_mode, align 4, !dbg !5878
  %call208 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %110, %struct.rtx_def* %111, i32 %112), !dbg !5879
  store %struct.rtx_def* %call208, %struct.rtx_def** %in1, align 8, !dbg !5880
  %113 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !5881
  %114 = bitcast %struct.rtx_def* %113 to i32*, !dbg !5881
  %bf.load209 = load i32, i32* %114, align 8, !dbg !5881
  %bf.lshr210 = lshr i32 %bf.load209, 16, !dbg !5881
  %bf.clear211 = and i32 %bf.lshr210, 255, !dbg !5881
  store i32 %bf.clear211, i32* %op_mode, align 4, !dbg !5882
  %115 = load i32, i32* %op_mode, align 4, !dbg !5883
  %cmp212 = icmp eq i32 %115, 0, !dbg !5885
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !5886

if.then214:                                       ; preds = %if.then196
  %116 = load i32, i32* %mode.addr, align 4, !dbg !5887
  store i32 %116, i32* %op_mode, align 4, !dbg !5888
  br label %if.end215, !dbg !5889

if.end215:                                        ; preds = %if.then214, %if.then196
  %117 = load i32, i32* %op_mode, align 4, !dbg !5890
  %118 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !5891
  %119 = load i32, i32* %op_mode, align 4, !dbg !5892
  %call216 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %117, %struct.rtx_def* %118, i32 %119), !dbg !5893
  store %struct.rtx_def* %call216, %struct.rtx_def** %in2, align 8, !dbg !5894
  %120 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !5895
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !5895
  %bf.load217 = load i32, i32* %121, align 8, !dbg !5895
  %bf.clear218 = and i32 %bf.load217, 65535, !dbg !5895
  %cmp219 = icmp eq i32 %bf.clear218, 64, !dbg !5897
  br i1 %cmp219, label %land.lhs.true221, label %if.end227, !dbg !5898

land.lhs.true221:                                 ; preds = %if.end215
  %122 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !5899
  %123 = bitcast %struct.rtx_def* %122 to i32*, !dbg !5899
  %bf.load222 = load i32, i32* %123, align 8, !dbg !5899
  %bf.clear223 = and i32 %bf.load222, 65535, !dbg !5899
  %cmp224 = icmp ne i32 %bf.clear223, 64, !dbg !5900
  br i1 %cmp224, label %if.then226, label %if.end227, !dbg !5901

if.then226:                                       ; preds = %land.lhs.true221
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !5902, metadata !DIExpression()), !dbg !5904
  %124 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !5905
  store %struct.rtx_def* %124, %struct.rtx_def** %tem, align 8, !dbg !5904
  %125 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !5906
  store %struct.rtx_def* %125, %struct.rtx_def** %in2, align 8, !dbg !5907
  %126 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !5908
  store %struct.rtx_def* %126, %struct.rtx_def** %in1, align 8, !dbg !5909
  br label %if.end227, !dbg !5910

if.end227:                                        ; preds = %if.then226, %land.lhs.true221, %if.end215
  %127 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5911
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !5911
  %bf.load228 = load i32, i32* %128, align 8, !dbg !5911
  %bf.clear229 = and i32 %bf.load228, 65535, !dbg !5911
  %cmp230 = icmp eq i32 %bf.clear229, 62, !dbg !5911
  %129 = zext i1 %cmp230 to i64, !dbg !5911
  %cond = select i1 %cmp230, i32 61, i32 62, !dbg !5911
  %130 = load i32, i32* %mode.addr, align 4, !dbg !5911
  %131 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !5911
  %132 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !5911
  %call232 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %cond, i32 %130, %struct.rtx_def* %131, %struct.rtx_def* %132), !dbg !5911
  store %struct.rtx_def* %call232, %struct.rtx_def** %retval, align 8, !dbg !5912
  br label %return, !dbg !5912

if.end233:                                        ; preds = %lor.lhs.false
  br label %sw.epilog1883, !dbg !5913

sw.bb234:                                         ; preds = %entry
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5914
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !5914
  %bf.load235 = load i32, i32* %134, align 8, !dbg !5914
  %bf.clear236 = and i32 %bf.load235, 65535, !dbg !5914
  %cmp237 = icmp eq i32 %bf.clear236, 51, !dbg !5916
  br i1 %cmp237, label %if.then239, label %if.end244, !dbg !5917

if.then239:                                       ; preds = %sw.bb234
  %135 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5918
  %u240 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !5918
  %fld241 = bitcast %union.u* %u240 to [1 x %union.rtunion_def]*, !dbg !5918
  %arrayidx242 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld241, i64 0, i64 0, !dbg !5918
  %rt_rtx243 = bitcast %union.rtunion_def* %arrayidx242 to %struct.rtx_def**, !dbg !5918
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx243, align 8, !dbg !5918
  store %struct.rtx_def* %136, %struct.rtx_def** %retval, align 8, !dbg !5919
  br label %return, !dbg !5919

if.end244:                                        ; preds = %sw.bb234
  %137 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5920
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !5920
  %bf.load245 = load i32, i32* %138, align 8, !dbg !5920
  %bf.clear246 = and i32 %bf.load245, 65535, !dbg !5920
  %cmp247 = icmp eq i32 %bf.clear246, 49, !dbg !5922
  br i1 %cmp247, label %land.lhs.true249, label %if.end262, !dbg !5923

land.lhs.true249:                                 ; preds = %if.end244
  %139 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5924
  %u250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !5924
  %fld251 = bitcast %union.u* %u250 to [1 x %union.rtunion_def]*, !dbg !5924
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld251, i64 0, i64 1, !dbg !5924
  %rt_rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**, !dbg !5924
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx253, align 8, !dbg !5924
  %141 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !5925
  %cmp254 = icmp eq %struct.rtx_def* %140, %141, !dbg !5926
  br i1 %cmp254, label %if.then256, label %if.end262, !dbg !5927

if.then256:                                       ; preds = %land.lhs.true249
  %142 = load i32, i32* %mode.addr, align 4, !dbg !5928
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5929
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !5929
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !5929
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 0, !dbg !5929
  %rt_rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**, !dbg !5929
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx260, align 8, !dbg !5929
  %145 = load i32, i32* %mode.addr, align 4, !dbg !5930
  %call261 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %142, %struct.rtx_def* %144, i32 %145), !dbg !5931
  store %struct.rtx_def* %call261, %struct.rtx_def** %retval, align 8, !dbg !5932
  br label %return, !dbg !5932

if.end262:                                        ; preds = %land.lhs.true249, %if.end244
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5933
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !5933
  %bf.load263 = load i32, i32* %147, align 8, !dbg !5933
  %bf.clear264 = and i32 %bf.load263, 65535, !dbg !5933
  %cmp265 = icmp eq i32 %bf.clear264, 64, !dbg !5935
  br i1 %cmp265, label %if.then267, label %if.end273, !dbg !5936

if.then267:                                       ; preds = %if.end262
  %148 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5937
  %u268 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !5937
  %fld269 = bitcast %union.u* %u268 to [1 x %union.rtunion_def]*, !dbg !5937
  %arrayidx270 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld269, i64 0, i64 0, !dbg !5937
  %rt_rtx271 = bitcast %union.rtunion_def* %arrayidx270 to %struct.rtx_def**, !dbg !5937
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx271, align 8, !dbg !5937
  %call272 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %149, i64 1), !dbg !5938
  store %struct.rtx_def* %call272, %struct.rtx_def** %retval, align 8, !dbg !5939
  br label %return, !dbg !5939

if.end273:                                        ; preds = %if.end262
  %150 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5940
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !5940
  %bf.load274 = load i32, i32* %151, align 8, !dbg !5940
  %bf.clear275 = and i32 %bf.load274, 65535, !dbg !5940
  %cmp276 = icmp eq i32 %bf.clear275, 50, !dbg !5942
  br i1 %cmp276, label %land.lhs.true278, label %if.end477, !dbg !5943

land.lhs.true278:                                 ; preds = %if.end273
  %152 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom279 = zext i32 %152 to i64, !dbg !5944
  %arrayidx280 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom279, !dbg !5944
  %153 = load i8, i8* %arrayidx280, align 1, !dbg !5944
  %conv281 = zext i8 %153 to i32, !dbg !5944
  %cmp282 = icmp eq i32 %conv281, 8, !dbg !5944
  br i1 %cmp282, label %land.lhs.true302, label %lor.lhs.false284, !dbg !5944

lor.lhs.false284:                                 ; preds = %land.lhs.true278
  %154 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom285 = zext i32 %154 to i64, !dbg !5944
  %arrayidx286 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom285, !dbg !5944
  %155 = load i8, i8* %arrayidx286, align 1, !dbg !5944
  %conv287 = zext i8 %155 to i32, !dbg !5944
  %cmp288 = icmp eq i32 %conv287, 9, !dbg !5944
  br i1 %cmp288, label %land.lhs.true302, label %lor.lhs.false290, !dbg !5944

lor.lhs.false290:                                 ; preds = %lor.lhs.false284
  %156 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom291 = zext i32 %156 to i64, !dbg !5944
  %arrayidx292 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom291, !dbg !5944
  %157 = load i8, i8* %arrayidx292, align 1, !dbg !5944
  %conv293 = zext i8 %157 to i32, !dbg !5944
  %cmp294 = icmp eq i32 %conv293, 11, !dbg !5944
  br i1 %cmp294, label %land.lhs.true302, label %lor.lhs.false296, !dbg !5944

lor.lhs.false296:                                 ; preds = %lor.lhs.false290
  %158 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom297 = zext i32 %158 to i64, !dbg !5944
  %arrayidx298 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom297, !dbg !5944
  %159 = load i8, i8* %arrayidx298, align 1, !dbg !5944
  %conv299 = zext i8 %159 to i32, !dbg !5944
  %cmp300 = icmp eq i32 %conv299, 17, !dbg !5944
  br i1 %cmp300, label %land.lhs.true302, label %land.lhs.true370, !dbg !5944

land.lhs.true302:                                 ; preds = %lor.lhs.false296, %lor.lhs.false290, %lor.lhs.false284, %land.lhs.true278
  %160 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom303 = zext i32 %160 to i64, !dbg !5944
  %arrayidx304 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom303, !dbg !5944
  %161 = load i8, i8* %arrayidx304, align 1, !dbg !5944
  %conv305 = zext i8 %161 to i32, !dbg !5944
  %cmp306 = icmp eq i32 %conv305, 8, !dbg !5944
  br i1 %cmp306, label %cond.true, label %lor.lhs.false308, !dbg !5944

lor.lhs.false308:                                 ; preds = %land.lhs.true302
  %162 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom309 = zext i32 %162 to i64, !dbg !5944
  %arrayidx310 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom309, !dbg !5944
  %163 = load i8, i8* %arrayidx310, align 1, !dbg !5944
  %conv311 = zext i8 %163 to i32, !dbg !5944
  %cmp312 = icmp eq i32 %conv311, 9, !dbg !5944
  br i1 %cmp312, label %cond.true, label %cond.false, !dbg !5944

cond.true:                                        ; preds = %lor.lhs.false308, %land.lhs.true302
  %164 = load i32, i32* %mode.addr, align 4, !dbg !5944
  br label %cond.end, !dbg !5944

cond.false:                                       ; preds = %lor.lhs.false308
  %165 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom314 = zext i32 %165 to i64, !dbg !5944
  %arrayidx315 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom314, !dbg !5944
  %166 = load i8, i8* %arrayidx315, align 1, !dbg !5944
  %conv316 = zext i8 %166 to i32, !dbg !5944
  br label %cond.end, !dbg !5944

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond317 = phi i32 [ %164, %cond.true ], [ %conv316, %cond.false ], !dbg !5944
  %idxprom318 = zext i32 %cond317 to i64, !dbg !5944
  %arrayidx319 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom318, !dbg !5944
  %167 = load i8, i8* %arrayidx319, align 1, !dbg !5944
  %conv320 = zext i8 %167 to i32, !dbg !5944
  %cmp321 = icmp eq i32 %conv320, 9, !dbg !5944
  br i1 %cmp321, label %cond.true323, label %cond.false342, !dbg !5944

cond.true323:                                     ; preds = %cond.end
  %168 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom324 = zext i32 %168 to i64, !dbg !5944
  %arrayidx325 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom324, !dbg !5944
  %169 = load i8, i8* %arrayidx325, align 1, !dbg !5944
  %conv326 = zext i8 %169 to i32, !dbg !5944
  %cmp327 = icmp eq i32 %conv326, 8, !dbg !5944
  br i1 %cmp327, label %cond.true335, label %lor.lhs.false329, !dbg !5944

lor.lhs.false329:                                 ; preds = %cond.true323
  %170 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom330 = zext i32 %170 to i64, !dbg !5944
  %arrayidx331 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom330, !dbg !5944
  %171 = load i8, i8* %arrayidx331, align 1, !dbg !5944
  %conv332 = zext i8 %171 to i32, !dbg !5944
  %cmp333 = icmp eq i32 %conv332, 9, !dbg !5944
  br i1 %cmp333, label %cond.true335, label %cond.false336, !dbg !5944

cond.true335:                                     ; preds = %lor.lhs.false329, %cond.true323
  %172 = load i32, i32* %mode.addr, align 4, !dbg !5944
  br label %cond.end340, !dbg !5944

cond.false336:                                    ; preds = %lor.lhs.false329
  %173 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom337 = zext i32 %173 to i64, !dbg !5944
  %arrayidx338 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom337, !dbg !5944
  %174 = load i8, i8* %arrayidx338, align 1, !dbg !5944
  %conv339 = zext i8 %174 to i32, !dbg !5944
  br label %cond.end340, !dbg !5944

cond.end340:                                      ; preds = %cond.false336, %cond.true335
  %cond341 = phi i32 [ %172, %cond.true335 ], [ %conv339, %cond.false336 ], !dbg !5944
  %sub = sub i32 %cond341, 42, !dbg !5944
  %add = add i32 %sub, 4, !dbg !5944
  br label %cond.end362, !dbg !5944

cond.false342:                                    ; preds = %cond.end
  %175 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom343 = zext i32 %175 to i64, !dbg !5944
  %arrayidx344 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom343, !dbg !5944
  %176 = load i8, i8* %arrayidx344, align 1, !dbg !5944
  %conv345 = zext i8 %176 to i32, !dbg !5944
  %cmp346 = icmp eq i32 %conv345, 8, !dbg !5944
  br i1 %cmp346, label %cond.true354, label %lor.lhs.false348, !dbg !5944

lor.lhs.false348:                                 ; preds = %cond.false342
  %177 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom349 = zext i32 %177 to i64, !dbg !5944
  %arrayidx350 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom349, !dbg !5944
  %178 = load i8, i8* %arrayidx350, align 1, !dbg !5944
  %conv351 = zext i8 %178 to i32, !dbg !5944
  %cmp352 = icmp eq i32 %conv351, 9, !dbg !5944
  br i1 %cmp352, label %cond.true354, label %cond.false355, !dbg !5944

cond.true354:                                     ; preds = %lor.lhs.false348, %cond.false342
  %179 = load i32, i32* %mode.addr, align 4, !dbg !5944
  br label %cond.end359, !dbg !5944

cond.false355:                                    ; preds = %lor.lhs.false348
  %180 = load i32, i32* %mode.addr, align 4, !dbg !5944
  %idxprom356 = zext i32 %180 to i64, !dbg !5944
  %arrayidx357 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom356, !dbg !5944
  %181 = load i8, i8* %arrayidx357, align 1, !dbg !5944
  %conv358 = zext i8 %181 to i32, !dbg !5944
  br label %cond.end359, !dbg !5944

cond.end359:                                      ; preds = %cond.false355, %cond.true354
  %cond360 = phi i32 [ %179, %cond.true354 ], [ %conv358, %cond.false355 ], !dbg !5944
  %sub361 = sub i32 %cond360, 38, !dbg !5944
  br label %cond.end362, !dbg !5944

cond.end362:                                      ; preds = %cond.end359, %cond.end340
  %cond363 = phi i32 [ %add, %cond.end340 ], [ %sub361, %cond.end359 ], !dbg !5944
  %idxprom364 = zext i32 %cond363 to i64, !dbg !5944
  %arrayidx365 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom364, !dbg !5944
  %182 = load %struct.real_format*, %struct.real_format** %arrayidx365, align 8, !dbg !5944
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %182, i32 0, i32 14, !dbg !5944
  %183 = load i8, i8* %has_signed_zero, align 1, !dbg !5944
  %conv366 = zext i8 %183 to i32, !dbg !5944
  %tobool367 = icmp ne i32 %conv366, 0, !dbg !5944
  br i1 %tobool367, label %land.lhs.true368, label %land.lhs.true370, !dbg !5944

land.lhs.true368:                                 ; preds = %cond.end362
  %184 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5944
  %tobool369 = icmp ne i32 %184, 0, !dbg !5944
  br i1 %tobool369, label %if.end477, label %land.lhs.true370, !dbg !5945

land.lhs.true370:                                 ; preds = %land.lhs.true368, %cond.end362, %lor.lhs.false296
  %185 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom371 = zext i32 %185 to i64, !dbg !5946
  %arrayidx372 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom371, !dbg !5946
  %186 = load i8, i8* %arrayidx372, align 1, !dbg !5946
  %conv373 = zext i8 %186 to i32, !dbg !5946
  %cmp374 = icmp eq i32 %conv373, 8, !dbg !5946
  br i1 %cmp374, label %land.lhs.true394, label %lor.lhs.false376, !dbg !5946

lor.lhs.false376:                                 ; preds = %land.lhs.true370
  %187 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom377 = zext i32 %187 to i64, !dbg !5946
  %arrayidx378 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom377, !dbg !5946
  %188 = load i8, i8* %arrayidx378, align 1, !dbg !5946
  %conv379 = zext i8 %188 to i32, !dbg !5946
  %cmp380 = icmp eq i32 %conv379, 9, !dbg !5946
  br i1 %cmp380, label %land.lhs.true394, label %lor.lhs.false382, !dbg !5946

lor.lhs.false382:                                 ; preds = %lor.lhs.false376
  %189 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom383 = zext i32 %189 to i64, !dbg !5946
  %arrayidx384 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom383, !dbg !5946
  %190 = load i8, i8* %arrayidx384, align 1, !dbg !5946
  %conv385 = zext i8 %190 to i32, !dbg !5946
  %cmp386 = icmp eq i32 %conv385, 11, !dbg !5946
  br i1 %cmp386, label %land.lhs.true394, label %lor.lhs.false388, !dbg !5946

lor.lhs.false388:                                 ; preds = %lor.lhs.false382
  %191 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom389 = zext i32 %191 to i64, !dbg !5946
  %arrayidx390 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom389, !dbg !5946
  %192 = load i8, i8* %arrayidx390, align 1, !dbg !5946
  %conv391 = zext i8 %192 to i32, !dbg !5946
  %cmp392 = icmp eq i32 %conv391, 17, !dbg !5946
  br i1 %cmp392, label %land.lhs.true394, label %if.then467, !dbg !5946

land.lhs.true394:                                 ; preds = %lor.lhs.false388, %lor.lhs.false382, %lor.lhs.false376, %land.lhs.true370
  %193 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom395 = zext i32 %193 to i64, !dbg !5946
  %arrayidx396 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom395, !dbg !5946
  %194 = load i8, i8* %arrayidx396, align 1, !dbg !5946
  %conv397 = zext i8 %194 to i32, !dbg !5946
  %cmp398 = icmp eq i32 %conv397, 8, !dbg !5946
  br i1 %cmp398, label %cond.true406, label %lor.lhs.false400, !dbg !5946

lor.lhs.false400:                                 ; preds = %land.lhs.true394
  %195 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom401 = zext i32 %195 to i64, !dbg !5946
  %arrayidx402 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom401, !dbg !5946
  %196 = load i8, i8* %arrayidx402, align 1, !dbg !5946
  %conv403 = zext i8 %196 to i32, !dbg !5946
  %cmp404 = icmp eq i32 %conv403, 9, !dbg !5946
  br i1 %cmp404, label %cond.true406, label %cond.false407, !dbg !5946

cond.true406:                                     ; preds = %lor.lhs.false400, %land.lhs.true394
  %197 = load i32, i32* %mode.addr, align 4, !dbg !5946
  br label %cond.end411, !dbg !5946

cond.false407:                                    ; preds = %lor.lhs.false400
  %198 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom408 = zext i32 %198 to i64, !dbg !5946
  %arrayidx409 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom408, !dbg !5946
  %199 = load i8, i8* %arrayidx409, align 1, !dbg !5946
  %conv410 = zext i8 %199 to i32, !dbg !5946
  br label %cond.end411, !dbg !5946

cond.end411:                                      ; preds = %cond.false407, %cond.true406
  %cond412 = phi i32 [ %197, %cond.true406 ], [ %conv410, %cond.false407 ], !dbg !5946
  %idxprom413 = zext i32 %cond412 to i64, !dbg !5946
  %arrayidx414 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom413, !dbg !5946
  %200 = load i8, i8* %arrayidx414, align 1, !dbg !5946
  %conv415 = zext i8 %200 to i32, !dbg !5946
  %cmp416 = icmp eq i32 %conv415, 9, !dbg !5946
  br i1 %cmp416, label %cond.true418, label %cond.false439, !dbg !5946

cond.true418:                                     ; preds = %cond.end411
  %201 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom419 = zext i32 %201 to i64, !dbg !5946
  %arrayidx420 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom419, !dbg !5946
  %202 = load i8, i8* %arrayidx420, align 1, !dbg !5946
  %conv421 = zext i8 %202 to i32, !dbg !5946
  %cmp422 = icmp eq i32 %conv421, 8, !dbg !5946
  br i1 %cmp422, label %cond.true430, label %lor.lhs.false424, !dbg !5946

lor.lhs.false424:                                 ; preds = %cond.true418
  %203 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom425 = zext i32 %203 to i64, !dbg !5946
  %arrayidx426 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom425, !dbg !5946
  %204 = load i8, i8* %arrayidx426, align 1, !dbg !5946
  %conv427 = zext i8 %204 to i32, !dbg !5946
  %cmp428 = icmp eq i32 %conv427, 9, !dbg !5946
  br i1 %cmp428, label %cond.true430, label %cond.false431, !dbg !5946

cond.true430:                                     ; preds = %lor.lhs.false424, %cond.true418
  %205 = load i32, i32* %mode.addr, align 4, !dbg !5946
  br label %cond.end435, !dbg !5946

cond.false431:                                    ; preds = %lor.lhs.false424
  %206 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom432 = zext i32 %206 to i64, !dbg !5946
  %arrayidx433 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom432, !dbg !5946
  %207 = load i8, i8* %arrayidx433, align 1, !dbg !5946
  %conv434 = zext i8 %207 to i32, !dbg !5946
  br label %cond.end435, !dbg !5946

cond.end435:                                      ; preds = %cond.false431, %cond.true430
  %cond436 = phi i32 [ %205, %cond.true430 ], [ %conv434, %cond.false431 ], !dbg !5946
  %sub437 = sub i32 %cond436, 42, !dbg !5946
  %add438 = add i32 %sub437, 4, !dbg !5946
  br label %cond.end459, !dbg !5946

cond.false439:                                    ; preds = %cond.end411
  %208 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom440 = zext i32 %208 to i64, !dbg !5946
  %arrayidx441 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom440, !dbg !5946
  %209 = load i8, i8* %arrayidx441, align 1, !dbg !5946
  %conv442 = zext i8 %209 to i32, !dbg !5946
  %cmp443 = icmp eq i32 %conv442, 8, !dbg !5946
  br i1 %cmp443, label %cond.true451, label %lor.lhs.false445, !dbg !5946

lor.lhs.false445:                                 ; preds = %cond.false439
  %210 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom446 = zext i32 %210 to i64, !dbg !5946
  %arrayidx447 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom446, !dbg !5946
  %211 = load i8, i8* %arrayidx447, align 1, !dbg !5946
  %conv448 = zext i8 %211 to i32, !dbg !5946
  %cmp449 = icmp eq i32 %conv448, 9, !dbg !5946
  br i1 %cmp449, label %cond.true451, label %cond.false452, !dbg !5946

cond.true451:                                     ; preds = %lor.lhs.false445, %cond.false439
  %212 = load i32, i32* %mode.addr, align 4, !dbg !5946
  br label %cond.end456, !dbg !5946

cond.false452:                                    ; preds = %lor.lhs.false445
  %213 = load i32, i32* %mode.addr, align 4, !dbg !5946
  %idxprom453 = zext i32 %213 to i64, !dbg !5946
  %arrayidx454 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom453, !dbg !5946
  %214 = load i8, i8* %arrayidx454, align 1, !dbg !5946
  %conv455 = zext i8 %214 to i32, !dbg !5946
  br label %cond.end456, !dbg !5946

cond.end456:                                      ; preds = %cond.false452, %cond.true451
  %cond457 = phi i32 [ %212, %cond.true451 ], [ %conv455, %cond.false452 ], !dbg !5946
  %sub458 = sub i32 %cond457, 38, !dbg !5946
  br label %cond.end459, !dbg !5946

cond.end459:                                      ; preds = %cond.end456, %cond.end435
  %cond460 = phi i32 [ %add438, %cond.end435 ], [ %sub458, %cond.end456 ], !dbg !5946
  %idxprom461 = zext i32 %cond460 to i64, !dbg !5946
  %arrayidx462 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom461, !dbg !5946
  %215 = load %struct.real_format*, %struct.real_format** %arrayidx462, align 8, !dbg !5946
  %has_sign_dependent_rounding = getelementptr inbounds %struct.real_format, %struct.real_format* %215, i32 0, i32 10, !dbg !5946
  %216 = load i8, i8* %has_sign_dependent_rounding, align 1, !dbg !5946
  %conv463 = zext i8 %216 to i32, !dbg !5946
  %tobool464 = icmp ne i32 %conv463, 0, !dbg !5946
  br i1 %tobool464, label %land.lhs.true465, label %if.then467, !dbg !5946

land.lhs.true465:                                 ; preds = %cond.end459
  %217 = load i32, i32* @flag_rounding_math, align 4, !dbg !5946
  %tobool466 = icmp ne i32 %217, 0, !dbg !5946
  br i1 %tobool466, label %if.end477, label %if.then467, !dbg !5947

if.then467:                                       ; preds = %land.lhs.true465, %cond.end459, %lor.lhs.false388
  %218 = load i32, i32* %mode.addr, align 4, !dbg !5948
  %219 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5949
  %u468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1, !dbg !5949
  %fld469 = bitcast %union.u* %u468 to [1 x %union.rtunion_def]*, !dbg !5949
  %arrayidx470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld469, i64 0, i64 1, !dbg !5949
  %rt_rtx471 = bitcast %union.rtunion_def* %arrayidx470 to %struct.rtx_def**, !dbg !5949
  %220 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx471, align 8, !dbg !5949
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5950
  %u472 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1, !dbg !5950
  %fld473 = bitcast %union.u* %u472 to [1 x %union.rtunion_def]*, !dbg !5950
  %arrayidx474 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld473, i64 0, i64 0, !dbg !5950
  %rt_rtx475 = bitcast %union.rtunion_def* %arrayidx474 to %struct.rtx_def**, !dbg !5950
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx475, align 8, !dbg !5950
  %call476 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %218, %struct.rtx_def* %220, %struct.rtx_def* %222), !dbg !5951
  store %struct.rtx_def* %call476, %struct.rtx_def** %retval, align 8, !dbg !5952
  br label %return, !dbg !5952

if.end477:                                        ; preds = %land.lhs.true465, %land.lhs.true368, %if.end273
  %223 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5953
  %224 = bitcast %struct.rtx_def* %223 to i32*, !dbg !5953
  %bf.load478 = load i32, i32* %224, align 8, !dbg !5953
  %bf.clear479 = and i32 %bf.load478, 65535, !dbg !5953
  %cmp480 = icmp eq i32 %bf.clear479, 49, !dbg !5955
  br i1 %cmp480, label %land.lhs.true482, label %if.end721, !dbg !5956

land.lhs.true482:                                 ; preds = %if.end477
  %225 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom483 = zext i32 %225 to i64, !dbg !5957
  %arrayidx484 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom483, !dbg !5957
  %226 = load i8, i8* %arrayidx484, align 1, !dbg !5957
  %conv485 = zext i8 %226 to i32, !dbg !5957
  %cmp486 = icmp eq i32 %conv485, 8, !dbg !5957
  br i1 %cmp486, label %land.lhs.true506, label %lor.lhs.false488, !dbg !5957

lor.lhs.false488:                                 ; preds = %land.lhs.true482
  %227 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom489 = zext i32 %227 to i64, !dbg !5957
  %arrayidx490 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom489, !dbg !5957
  %228 = load i8, i8* %arrayidx490, align 1, !dbg !5957
  %conv491 = zext i8 %228 to i32, !dbg !5957
  %cmp492 = icmp eq i32 %conv491, 9, !dbg !5957
  br i1 %cmp492, label %land.lhs.true506, label %lor.lhs.false494, !dbg !5957

lor.lhs.false494:                                 ; preds = %lor.lhs.false488
  %229 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom495 = zext i32 %229 to i64, !dbg !5957
  %arrayidx496 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom495, !dbg !5957
  %230 = load i8, i8* %arrayidx496, align 1, !dbg !5957
  %conv497 = zext i8 %230 to i32, !dbg !5957
  %cmp498 = icmp eq i32 %conv497, 11, !dbg !5957
  br i1 %cmp498, label %land.lhs.true506, label %lor.lhs.false500, !dbg !5957

lor.lhs.false500:                                 ; preds = %lor.lhs.false494
  %231 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom501 = zext i32 %231 to i64, !dbg !5957
  %arrayidx502 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom501, !dbg !5957
  %232 = load i8, i8* %arrayidx502, align 1, !dbg !5957
  %conv503 = zext i8 %232 to i32, !dbg !5957
  %cmp504 = icmp eq i32 %conv503, 17, !dbg !5957
  br i1 %cmp504, label %land.lhs.true506, label %land.lhs.true580, !dbg !5957

land.lhs.true506:                                 ; preds = %lor.lhs.false500, %lor.lhs.false494, %lor.lhs.false488, %land.lhs.true482
  %233 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom507 = zext i32 %233 to i64, !dbg !5957
  %arrayidx508 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom507, !dbg !5957
  %234 = load i8, i8* %arrayidx508, align 1, !dbg !5957
  %conv509 = zext i8 %234 to i32, !dbg !5957
  %cmp510 = icmp eq i32 %conv509, 8, !dbg !5957
  br i1 %cmp510, label %cond.true518, label %lor.lhs.false512, !dbg !5957

lor.lhs.false512:                                 ; preds = %land.lhs.true506
  %235 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom513 = zext i32 %235 to i64, !dbg !5957
  %arrayidx514 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom513, !dbg !5957
  %236 = load i8, i8* %arrayidx514, align 1, !dbg !5957
  %conv515 = zext i8 %236 to i32, !dbg !5957
  %cmp516 = icmp eq i32 %conv515, 9, !dbg !5957
  br i1 %cmp516, label %cond.true518, label %cond.false519, !dbg !5957

cond.true518:                                     ; preds = %lor.lhs.false512, %land.lhs.true506
  %237 = load i32, i32* %mode.addr, align 4, !dbg !5957
  br label %cond.end523, !dbg !5957

cond.false519:                                    ; preds = %lor.lhs.false512
  %238 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom520 = zext i32 %238 to i64, !dbg !5957
  %arrayidx521 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom520, !dbg !5957
  %239 = load i8, i8* %arrayidx521, align 1, !dbg !5957
  %conv522 = zext i8 %239 to i32, !dbg !5957
  br label %cond.end523, !dbg !5957

cond.end523:                                      ; preds = %cond.false519, %cond.true518
  %cond524 = phi i32 [ %237, %cond.true518 ], [ %conv522, %cond.false519 ], !dbg !5957
  %idxprom525 = zext i32 %cond524 to i64, !dbg !5957
  %arrayidx526 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom525, !dbg !5957
  %240 = load i8, i8* %arrayidx526, align 1, !dbg !5957
  %conv527 = zext i8 %240 to i32, !dbg !5957
  %cmp528 = icmp eq i32 %conv527, 9, !dbg !5957
  br i1 %cmp528, label %cond.true530, label %cond.false551, !dbg !5957

cond.true530:                                     ; preds = %cond.end523
  %241 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom531 = zext i32 %241 to i64, !dbg !5957
  %arrayidx532 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom531, !dbg !5957
  %242 = load i8, i8* %arrayidx532, align 1, !dbg !5957
  %conv533 = zext i8 %242 to i32, !dbg !5957
  %cmp534 = icmp eq i32 %conv533, 8, !dbg !5957
  br i1 %cmp534, label %cond.true542, label %lor.lhs.false536, !dbg !5957

lor.lhs.false536:                                 ; preds = %cond.true530
  %243 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom537 = zext i32 %243 to i64, !dbg !5957
  %arrayidx538 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom537, !dbg !5957
  %244 = load i8, i8* %arrayidx538, align 1, !dbg !5957
  %conv539 = zext i8 %244 to i32, !dbg !5957
  %cmp540 = icmp eq i32 %conv539, 9, !dbg !5957
  br i1 %cmp540, label %cond.true542, label %cond.false543, !dbg !5957

cond.true542:                                     ; preds = %lor.lhs.false536, %cond.true530
  %245 = load i32, i32* %mode.addr, align 4, !dbg !5957
  br label %cond.end547, !dbg !5957

cond.false543:                                    ; preds = %lor.lhs.false536
  %246 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom544 = zext i32 %246 to i64, !dbg !5957
  %arrayidx545 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom544, !dbg !5957
  %247 = load i8, i8* %arrayidx545, align 1, !dbg !5957
  %conv546 = zext i8 %247 to i32, !dbg !5957
  br label %cond.end547, !dbg !5957

cond.end547:                                      ; preds = %cond.false543, %cond.true542
  %cond548 = phi i32 [ %245, %cond.true542 ], [ %conv546, %cond.false543 ], !dbg !5957
  %sub549 = sub i32 %cond548, 42, !dbg !5957
  %add550 = add i32 %sub549, 4, !dbg !5957
  br label %cond.end571, !dbg !5957

cond.false551:                                    ; preds = %cond.end523
  %248 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom552 = zext i32 %248 to i64, !dbg !5957
  %arrayidx553 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom552, !dbg !5957
  %249 = load i8, i8* %arrayidx553, align 1, !dbg !5957
  %conv554 = zext i8 %249 to i32, !dbg !5957
  %cmp555 = icmp eq i32 %conv554, 8, !dbg !5957
  br i1 %cmp555, label %cond.true563, label %lor.lhs.false557, !dbg !5957

lor.lhs.false557:                                 ; preds = %cond.false551
  %250 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom558 = zext i32 %250 to i64, !dbg !5957
  %arrayidx559 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom558, !dbg !5957
  %251 = load i8, i8* %arrayidx559, align 1, !dbg !5957
  %conv560 = zext i8 %251 to i32, !dbg !5957
  %cmp561 = icmp eq i32 %conv560, 9, !dbg !5957
  br i1 %cmp561, label %cond.true563, label %cond.false564, !dbg !5957

cond.true563:                                     ; preds = %lor.lhs.false557, %cond.false551
  %252 = load i32, i32* %mode.addr, align 4, !dbg !5957
  br label %cond.end568, !dbg !5957

cond.false564:                                    ; preds = %lor.lhs.false557
  %253 = load i32, i32* %mode.addr, align 4, !dbg !5957
  %idxprom565 = zext i32 %253 to i64, !dbg !5957
  %arrayidx566 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom565, !dbg !5957
  %254 = load i8, i8* %arrayidx566, align 1, !dbg !5957
  %conv567 = zext i8 %254 to i32, !dbg !5957
  br label %cond.end568, !dbg !5957

cond.end568:                                      ; preds = %cond.false564, %cond.true563
  %cond569 = phi i32 [ %252, %cond.true563 ], [ %conv567, %cond.false564 ], !dbg !5957
  %sub570 = sub i32 %cond569, 38, !dbg !5957
  br label %cond.end571, !dbg !5957

cond.end571:                                      ; preds = %cond.end568, %cond.end547
  %cond572 = phi i32 [ %add550, %cond.end547 ], [ %sub570, %cond.end568 ], !dbg !5957
  %idxprom573 = zext i32 %cond572 to i64, !dbg !5957
  %arrayidx574 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom573, !dbg !5957
  %255 = load %struct.real_format*, %struct.real_format** %arrayidx574, align 8, !dbg !5957
  %has_signed_zero575 = getelementptr inbounds %struct.real_format, %struct.real_format* %255, i32 0, i32 14, !dbg !5957
  %256 = load i8, i8* %has_signed_zero575, align 1, !dbg !5957
  %conv576 = zext i8 %256 to i32, !dbg !5957
  %tobool577 = icmp ne i32 %conv576, 0, !dbg !5957
  br i1 %tobool577, label %land.lhs.true578, label %land.lhs.true580, !dbg !5957

land.lhs.true578:                                 ; preds = %cond.end571
  %257 = load i32, i32* @flag_signed_zeros, align 4, !dbg !5957
  %tobool579 = icmp ne i32 %257, 0, !dbg !5957
  br i1 %tobool579, label %if.end721, label %land.lhs.true580, !dbg !5958

land.lhs.true580:                                 ; preds = %land.lhs.true578, %cond.end571, %lor.lhs.false500
  %258 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom581 = zext i32 %258 to i64, !dbg !5959
  %arrayidx582 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom581, !dbg !5959
  %259 = load i8, i8* %arrayidx582, align 1, !dbg !5959
  %conv583 = zext i8 %259 to i32, !dbg !5959
  %cmp584 = icmp eq i32 %conv583, 8, !dbg !5959
  br i1 %cmp584, label %land.lhs.true604, label %lor.lhs.false586, !dbg !5959

lor.lhs.false586:                                 ; preds = %land.lhs.true580
  %260 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom587 = zext i32 %260 to i64, !dbg !5959
  %arrayidx588 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom587, !dbg !5959
  %261 = load i8, i8* %arrayidx588, align 1, !dbg !5959
  %conv589 = zext i8 %261 to i32, !dbg !5959
  %cmp590 = icmp eq i32 %conv589, 9, !dbg !5959
  br i1 %cmp590, label %land.lhs.true604, label %lor.lhs.false592, !dbg !5959

lor.lhs.false592:                                 ; preds = %lor.lhs.false586
  %262 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom593 = zext i32 %262 to i64, !dbg !5959
  %arrayidx594 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom593, !dbg !5959
  %263 = load i8, i8* %arrayidx594, align 1, !dbg !5959
  %conv595 = zext i8 %263 to i32, !dbg !5959
  %cmp596 = icmp eq i32 %conv595, 11, !dbg !5959
  br i1 %cmp596, label %land.lhs.true604, label %lor.lhs.false598, !dbg !5959

lor.lhs.false598:                                 ; preds = %lor.lhs.false592
  %264 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom599 = zext i32 %264 to i64, !dbg !5959
  %arrayidx600 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom599, !dbg !5959
  %265 = load i8, i8* %arrayidx600, align 1, !dbg !5959
  %conv601 = zext i8 %265 to i32, !dbg !5959
  %cmp602 = icmp eq i32 %conv601, 17, !dbg !5959
  br i1 %cmp602, label %land.lhs.true604, label %if.then678, !dbg !5959

land.lhs.true604:                                 ; preds = %lor.lhs.false598, %lor.lhs.false592, %lor.lhs.false586, %land.lhs.true580
  %266 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom605 = zext i32 %266 to i64, !dbg !5959
  %arrayidx606 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom605, !dbg !5959
  %267 = load i8, i8* %arrayidx606, align 1, !dbg !5959
  %conv607 = zext i8 %267 to i32, !dbg !5959
  %cmp608 = icmp eq i32 %conv607, 8, !dbg !5959
  br i1 %cmp608, label %cond.true616, label %lor.lhs.false610, !dbg !5959

lor.lhs.false610:                                 ; preds = %land.lhs.true604
  %268 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom611 = zext i32 %268 to i64, !dbg !5959
  %arrayidx612 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom611, !dbg !5959
  %269 = load i8, i8* %arrayidx612, align 1, !dbg !5959
  %conv613 = zext i8 %269 to i32, !dbg !5959
  %cmp614 = icmp eq i32 %conv613, 9, !dbg !5959
  br i1 %cmp614, label %cond.true616, label %cond.false617, !dbg !5959

cond.true616:                                     ; preds = %lor.lhs.false610, %land.lhs.true604
  %270 = load i32, i32* %mode.addr, align 4, !dbg !5959
  br label %cond.end621, !dbg !5959

cond.false617:                                    ; preds = %lor.lhs.false610
  %271 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom618 = zext i32 %271 to i64, !dbg !5959
  %arrayidx619 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom618, !dbg !5959
  %272 = load i8, i8* %arrayidx619, align 1, !dbg !5959
  %conv620 = zext i8 %272 to i32, !dbg !5959
  br label %cond.end621, !dbg !5959

cond.end621:                                      ; preds = %cond.false617, %cond.true616
  %cond622 = phi i32 [ %270, %cond.true616 ], [ %conv620, %cond.false617 ], !dbg !5959
  %idxprom623 = zext i32 %cond622 to i64, !dbg !5959
  %arrayidx624 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom623, !dbg !5959
  %273 = load i8, i8* %arrayidx624, align 1, !dbg !5959
  %conv625 = zext i8 %273 to i32, !dbg !5959
  %cmp626 = icmp eq i32 %conv625, 9, !dbg !5959
  br i1 %cmp626, label %cond.true628, label %cond.false649, !dbg !5959

cond.true628:                                     ; preds = %cond.end621
  %274 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom629 = zext i32 %274 to i64, !dbg !5959
  %arrayidx630 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom629, !dbg !5959
  %275 = load i8, i8* %arrayidx630, align 1, !dbg !5959
  %conv631 = zext i8 %275 to i32, !dbg !5959
  %cmp632 = icmp eq i32 %conv631, 8, !dbg !5959
  br i1 %cmp632, label %cond.true640, label %lor.lhs.false634, !dbg !5959

lor.lhs.false634:                                 ; preds = %cond.true628
  %276 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom635 = zext i32 %276 to i64, !dbg !5959
  %arrayidx636 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom635, !dbg !5959
  %277 = load i8, i8* %arrayidx636, align 1, !dbg !5959
  %conv637 = zext i8 %277 to i32, !dbg !5959
  %cmp638 = icmp eq i32 %conv637, 9, !dbg !5959
  br i1 %cmp638, label %cond.true640, label %cond.false641, !dbg !5959

cond.true640:                                     ; preds = %lor.lhs.false634, %cond.true628
  %278 = load i32, i32* %mode.addr, align 4, !dbg !5959
  br label %cond.end645, !dbg !5959

cond.false641:                                    ; preds = %lor.lhs.false634
  %279 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom642 = zext i32 %279 to i64, !dbg !5959
  %arrayidx643 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom642, !dbg !5959
  %280 = load i8, i8* %arrayidx643, align 1, !dbg !5959
  %conv644 = zext i8 %280 to i32, !dbg !5959
  br label %cond.end645, !dbg !5959

cond.end645:                                      ; preds = %cond.false641, %cond.true640
  %cond646 = phi i32 [ %278, %cond.true640 ], [ %conv644, %cond.false641 ], !dbg !5959
  %sub647 = sub i32 %cond646, 42, !dbg !5959
  %add648 = add i32 %sub647, 4, !dbg !5959
  br label %cond.end669, !dbg !5959

cond.false649:                                    ; preds = %cond.end621
  %281 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom650 = zext i32 %281 to i64, !dbg !5959
  %arrayidx651 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom650, !dbg !5959
  %282 = load i8, i8* %arrayidx651, align 1, !dbg !5959
  %conv652 = zext i8 %282 to i32, !dbg !5959
  %cmp653 = icmp eq i32 %conv652, 8, !dbg !5959
  br i1 %cmp653, label %cond.true661, label %lor.lhs.false655, !dbg !5959

lor.lhs.false655:                                 ; preds = %cond.false649
  %283 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom656 = zext i32 %283 to i64, !dbg !5959
  %arrayidx657 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom656, !dbg !5959
  %284 = load i8, i8* %arrayidx657, align 1, !dbg !5959
  %conv658 = zext i8 %284 to i32, !dbg !5959
  %cmp659 = icmp eq i32 %conv658, 9, !dbg !5959
  br i1 %cmp659, label %cond.true661, label %cond.false662, !dbg !5959

cond.true661:                                     ; preds = %lor.lhs.false655, %cond.false649
  %285 = load i32, i32* %mode.addr, align 4, !dbg !5959
  br label %cond.end666, !dbg !5959

cond.false662:                                    ; preds = %lor.lhs.false655
  %286 = load i32, i32* %mode.addr, align 4, !dbg !5959
  %idxprom663 = zext i32 %286 to i64, !dbg !5959
  %arrayidx664 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom663, !dbg !5959
  %287 = load i8, i8* %arrayidx664, align 1, !dbg !5959
  %conv665 = zext i8 %287 to i32, !dbg !5959
  br label %cond.end666, !dbg !5959

cond.end666:                                      ; preds = %cond.false662, %cond.true661
  %cond667 = phi i32 [ %285, %cond.true661 ], [ %conv665, %cond.false662 ], !dbg !5959
  %sub668 = sub i32 %cond667, 38, !dbg !5959
  br label %cond.end669, !dbg !5959

cond.end669:                                      ; preds = %cond.end666, %cond.end645
  %cond670 = phi i32 [ %add648, %cond.end645 ], [ %sub668, %cond.end666 ], !dbg !5959
  %idxprom671 = zext i32 %cond670 to i64, !dbg !5959
  %arrayidx672 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom671, !dbg !5959
  %288 = load %struct.real_format*, %struct.real_format** %arrayidx672, align 8, !dbg !5959
  %has_sign_dependent_rounding673 = getelementptr inbounds %struct.real_format, %struct.real_format* %288, i32 0, i32 10, !dbg !5959
  %289 = load i8, i8* %has_sign_dependent_rounding673, align 1, !dbg !5959
  %conv674 = zext i8 %289 to i32, !dbg !5959
  %tobool675 = icmp ne i32 %conv674, 0, !dbg !5959
  br i1 %tobool675, label %land.lhs.true676, label %if.then678, !dbg !5959

land.lhs.true676:                                 ; preds = %cond.end669
  %290 = load i32, i32* @flag_rounding_math, align 4, !dbg !5959
  %tobool677 = icmp ne i32 %290, 0, !dbg !5959
  br i1 %tobool677, label %if.end721, label %if.then678, !dbg !5960

if.then678:                                       ; preds = %land.lhs.true676, %cond.end669, %lor.lhs.false598
  %291 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5961
  %u679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %291, i32 0, i32 1, !dbg !5961
  %fld680 = bitcast %union.u* %u679 to [1 x %union.rtunion_def]*, !dbg !5961
  %arrayidx681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld680, i64 0, i64 1, !dbg !5961
  %rt_rtx682 = bitcast %union.rtunion_def* %arrayidx681 to %struct.rtx_def**, !dbg !5961
  %292 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx682, align 8, !dbg !5961
  %293 = bitcast %struct.rtx_def* %292 to i32*, !dbg !5961
  %bf.load683 = load i32, i32* %293, align 8, !dbg !5961
  %bf.clear684 = and i32 %bf.load683, 65535, !dbg !5961
  %cmp685 = icmp eq i32 %bf.clear684, 30, !dbg !5961
  br i1 %cmp685, label %if.then696, label %lor.lhs.false687, !dbg !5964

lor.lhs.false687:                                 ; preds = %if.then678
  %294 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5965
  %u688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %294, i32 0, i32 1, !dbg !5965
  %fld689 = bitcast %union.u* %u688 to [1 x %union.rtunion_def]*, !dbg !5965
  %arrayidx690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld689, i64 0, i64 1, !dbg !5965
  %rt_rtx691 = bitcast %union.rtunion_def* %arrayidx690 to %struct.rtx_def**, !dbg !5965
  %295 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx691, align 8, !dbg !5965
  %296 = bitcast %struct.rtx_def* %295 to i32*, !dbg !5965
  %bf.load692 = load i32, i32* %296, align 8, !dbg !5965
  %bf.clear693 = and i32 %bf.load692, 65535, !dbg !5965
  %cmp694 = icmp eq i32 %bf.clear693, 32, !dbg !5966
  br i1 %cmp694, label %if.then696, label %if.end710, !dbg !5967

if.then696:                                       ; preds = %lor.lhs.false687, %if.then678
  %297 = load i32, i32* %mode.addr, align 4, !dbg !5968
  %298 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5970
  %u697 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %298, i32 0, i32 1, !dbg !5970
  %fld698 = bitcast %union.u* %u697 to [1 x %union.rtunion_def]*, !dbg !5970
  %arrayidx699 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld698, i64 0, i64 1, !dbg !5970
  %rt_rtx700 = bitcast %union.rtunion_def* %arrayidx699 to %struct.rtx_def**, !dbg !5970
  %299 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx700, align 8, !dbg !5970
  %300 = load i32, i32* %mode.addr, align 4, !dbg !5971
  %call701 = call %struct.rtx_def* @simplify_unary_operation(i32 51, i32 %297, %struct.rtx_def* %299, i32 %300), !dbg !5972
  store %struct.rtx_def* %call701, %struct.rtx_def** %temp, align 8, !dbg !5973
  %301 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5974
  %tobool702 = icmp ne %struct.rtx_def* %301, null, !dbg !5974
  br i1 %tobool702, label %if.then703, label %if.end709, !dbg !5976

if.then703:                                       ; preds = %if.then696
  %302 = load i32, i32* %mode.addr, align 4, !dbg !5977
  %303 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5978
  %304 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5979
  %u704 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %304, i32 0, i32 1, !dbg !5979
  %fld705 = bitcast %union.u* %u704 to [1 x %union.rtunion_def]*, !dbg !5979
  %arrayidx706 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld705, i64 0, i64 0, !dbg !5979
  %rt_rtx707 = bitcast %union.rtunion_def* %arrayidx706 to %struct.rtx_def**, !dbg !5979
  %305 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx707, align 8, !dbg !5979
  %call708 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %302, %struct.rtx_def* %303, %struct.rtx_def* %305), !dbg !5980
  store %struct.rtx_def* %call708, %struct.rtx_def** %retval, align 8, !dbg !5981
  br label %return, !dbg !5981

if.end709:                                        ; preds = %if.then696
  br label %if.end710, !dbg !5982

if.end710:                                        ; preds = %if.end709, %lor.lhs.false687
  %306 = load i32, i32* %mode.addr, align 4, !dbg !5983
  %307 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5984
  %u711 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %307, i32 0, i32 1, !dbg !5984
  %fld712 = bitcast %union.u* %u711 to [1 x %union.rtunion_def]*, !dbg !5984
  %arrayidx713 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld712, i64 0, i64 0, !dbg !5984
  %rt_rtx714 = bitcast %union.rtunion_def* %arrayidx713 to %struct.rtx_def**, !dbg !5984
  %308 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx714, align 8, !dbg !5984
  %309 = load i32, i32* %mode.addr, align 4, !dbg !5985
  %call715 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %306, %struct.rtx_def* %308, i32 %309), !dbg !5986
  store %struct.rtx_def* %call715, %struct.rtx_def** %temp, align 8, !dbg !5987
  %310 = load i32, i32* %mode.addr, align 4, !dbg !5988
  %311 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !5989
  %312 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5990
  %u716 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %312, i32 0, i32 1, !dbg !5990
  %fld717 = bitcast %union.u* %u716 to [1 x %union.rtunion_def]*, !dbg !5990
  %arrayidx718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld717, i64 0, i64 1, !dbg !5990
  %rt_rtx719 = bitcast %union.rtunion_def* %arrayidx718 to %struct.rtx_def**, !dbg !5990
  %313 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx719, align 8, !dbg !5990
  %call720 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %310, %struct.rtx_def* %311, %struct.rtx_def* %313), !dbg !5991
  store %struct.rtx_def* %call720, %struct.rtx_def** %retval, align 8, !dbg !5992
  br label %return, !dbg !5992

if.end721:                                        ; preds = %land.lhs.true676, %land.lhs.true578, %if.end477
  %314 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5993
  %315 = bitcast %struct.rtx_def* %314 to i32*, !dbg !5993
  %bf.load722 = load i32, i32* %315, align 8, !dbg !5993
  %bf.clear723 = and i32 %bf.load722, 65535, !dbg !5993
  %cmp724 = icmp eq i32 %bf.clear723, 52, !dbg !5995
  br i1 %cmp724, label %land.lhs.true726, label %if.end835, !dbg !5996

land.lhs.true726:                                 ; preds = %if.end721
  %316 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom727 = zext i32 %316 to i64, !dbg !5997
  %arrayidx728 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom727, !dbg !5997
  %317 = load i8, i8* %arrayidx728, align 1, !dbg !5997
  %conv729 = zext i8 %317 to i32, !dbg !5997
  %cmp730 = icmp eq i32 %conv729, 8, !dbg !5997
  br i1 %cmp730, label %land.lhs.true750, label %lor.lhs.false732, !dbg !5997

lor.lhs.false732:                                 ; preds = %land.lhs.true726
  %318 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom733 = zext i32 %318 to i64, !dbg !5997
  %arrayidx734 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom733, !dbg !5997
  %319 = load i8, i8* %arrayidx734, align 1, !dbg !5997
  %conv735 = zext i8 %319 to i32, !dbg !5997
  %cmp736 = icmp eq i32 %conv735, 9, !dbg !5997
  br i1 %cmp736, label %land.lhs.true750, label %lor.lhs.false738, !dbg !5997

lor.lhs.false738:                                 ; preds = %lor.lhs.false732
  %320 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom739 = zext i32 %320 to i64, !dbg !5997
  %arrayidx740 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom739, !dbg !5997
  %321 = load i8, i8* %arrayidx740, align 1, !dbg !5997
  %conv741 = zext i8 %321 to i32, !dbg !5997
  %cmp742 = icmp eq i32 %conv741, 11, !dbg !5997
  br i1 %cmp742, label %land.lhs.true750, label %lor.lhs.false744, !dbg !5997

lor.lhs.false744:                                 ; preds = %lor.lhs.false738
  %322 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom745 = zext i32 %322 to i64, !dbg !5997
  %arrayidx746 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom745, !dbg !5997
  %323 = load i8, i8* %arrayidx746, align 1, !dbg !5997
  %conv747 = zext i8 %323 to i32, !dbg !5997
  %cmp748 = icmp eq i32 %conv747, 17, !dbg !5997
  br i1 %cmp748, label %land.lhs.true750, label %if.then824, !dbg !5997

land.lhs.true750:                                 ; preds = %lor.lhs.false744, %lor.lhs.false738, %lor.lhs.false732, %land.lhs.true726
  %324 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom751 = zext i32 %324 to i64, !dbg !5997
  %arrayidx752 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom751, !dbg !5997
  %325 = load i8, i8* %arrayidx752, align 1, !dbg !5997
  %conv753 = zext i8 %325 to i32, !dbg !5997
  %cmp754 = icmp eq i32 %conv753, 8, !dbg !5997
  br i1 %cmp754, label %cond.true762, label %lor.lhs.false756, !dbg !5997

lor.lhs.false756:                                 ; preds = %land.lhs.true750
  %326 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom757 = zext i32 %326 to i64, !dbg !5997
  %arrayidx758 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom757, !dbg !5997
  %327 = load i8, i8* %arrayidx758, align 1, !dbg !5997
  %conv759 = zext i8 %327 to i32, !dbg !5997
  %cmp760 = icmp eq i32 %conv759, 9, !dbg !5997
  br i1 %cmp760, label %cond.true762, label %cond.false763, !dbg !5997

cond.true762:                                     ; preds = %lor.lhs.false756, %land.lhs.true750
  %328 = load i32, i32* %mode.addr, align 4, !dbg !5997
  br label %cond.end767, !dbg !5997

cond.false763:                                    ; preds = %lor.lhs.false756
  %329 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom764 = zext i32 %329 to i64, !dbg !5997
  %arrayidx765 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom764, !dbg !5997
  %330 = load i8, i8* %arrayidx765, align 1, !dbg !5997
  %conv766 = zext i8 %330 to i32, !dbg !5997
  br label %cond.end767, !dbg !5997

cond.end767:                                      ; preds = %cond.false763, %cond.true762
  %cond768 = phi i32 [ %328, %cond.true762 ], [ %conv766, %cond.false763 ], !dbg !5997
  %idxprom769 = zext i32 %cond768 to i64, !dbg !5997
  %arrayidx770 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom769, !dbg !5997
  %331 = load i8, i8* %arrayidx770, align 1, !dbg !5997
  %conv771 = zext i8 %331 to i32, !dbg !5997
  %cmp772 = icmp eq i32 %conv771, 9, !dbg !5997
  br i1 %cmp772, label %cond.true774, label %cond.false795, !dbg !5997

cond.true774:                                     ; preds = %cond.end767
  %332 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom775 = zext i32 %332 to i64, !dbg !5997
  %arrayidx776 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom775, !dbg !5997
  %333 = load i8, i8* %arrayidx776, align 1, !dbg !5997
  %conv777 = zext i8 %333 to i32, !dbg !5997
  %cmp778 = icmp eq i32 %conv777, 8, !dbg !5997
  br i1 %cmp778, label %cond.true786, label %lor.lhs.false780, !dbg !5997

lor.lhs.false780:                                 ; preds = %cond.true774
  %334 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom781 = zext i32 %334 to i64, !dbg !5997
  %arrayidx782 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom781, !dbg !5997
  %335 = load i8, i8* %arrayidx782, align 1, !dbg !5997
  %conv783 = zext i8 %335 to i32, !dbg !5997
  %cmp784 = icmp eq i32 %conv783, 9, !dbg !5997
  br i1 %cmp784, label %cond.true786, label %cond.false787, !dbg !5997

cond.true786:                                     ; preds = %lor.lhs.false780, %cond.true774
  %336 = load i32, i32* %mode.addr, align 4, !dbg !5997
  br label %cond.end791, !dbg !5997

cond.false787:                                    ; preds = %lor.lhs.false780
  %337 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom788 = zext i32 %337 to i64, !dbg !5997
  %arrayidx789 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom788, !dbg !5997
  %338 = load i8, i8* %arrayidx789, align 1, !dbg !5997
  %conv790 = zext i8 %338 to i32, !dbg !5997
  br label %cond.end791, !dbg !5997

cond.end791:                                      ; preds = %cond.false787, %cond.true786
  %cond792 = phi i32 [ %336, %cond.true786 ], [ %conv790, %cond.false787 ], !dbg !5997
  %sub793 = sub i32 %cond792, 42, !dbg !5997
  %add794 = add i32 %sub793, 4, !dbg !5997
  br label %cond.end815, !dbg !5997

cond.false795:                                    ; preds = %cond.end767
  %339 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom796 = zext i32 %339 to i64, !dbg !5997
  %arrayidx797 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom796, !dbg !5997
  %340 = load i8, i8* %arrayidx797, align 1, !dbg !5997
  %conv798 = zext i8 %340 to i32, !dbg !5997
  %cmp799 = icmp eq i32 %conv798, 8, !dbg !5997
  br i1 %cmp799, label %cond.true807, label %lor.lhs.false801, !dbg !5997

lor.lhs.false801:                                 ; preds = %cond.false795
  %341 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom802 = zext i32 %341 to i64, !dbg !5997
  %arrayidx803 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom802, !dbg !5997
  %342 = load i8, i8* %arrayidx803, align 1, !dbg !5997
  %conv804 = zext i8 %342 to i32, !dbg !5997
  %cmp805 = icmp eq i32 %conv804, 9, !dbg !5997
  br i1 %cmp805, label %cond.true807, label %cond.false808, !dbg !5997

cond.true807:                                     ; preds = %lor.lhs.false801, %cond.false795
  %343 = load i32, i32* %mode.addr, align 4, !dbg !5997
  br label %cond.end812, !dbg !5997

cond.false808:                                    ; preds = %lor.lhs.false801
  %344 = load i32, i32* %mode.addr, align 4, !dbg !5997
  %idxprom809 = zext i32 %344 to i64, !dbg !5997
  %arrayidx810 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom809, !dbg !5997
  %345 = load i8, i8* %arrayidx810, align 1, !dbg !5997
  %conv811 = zext i8 %345 to i32, !dbg !5997
  br label %cond.end812, !dbg !5997

cond.end812:                                      ; preds = %cond.false808, %cond.true807
  %cond813 = phi i32 [ %343, %cond.true807 ], [ %conv811, %cond.false808 ], !dbg !5997
  %sub814 = sub i32 %cond813, 38, !dbg !5997
  br label %cond.end815, !dbg !5997

cond.end815:                                      ; preds = %cond.end812, %cond.end791
  %cond816 = phi i32 [ %add794, %cond.end791 ], [ %sub814, %cond.end812 ], !dbg !5997
  %idxprom817 = zext i32 %cond816 to i64, !dbg !5997
  %arrayidx818 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom817, !dbg !5997
  %346 = load %struct.real_format*, %struct.real_format** %arrayidx818, align 8, !dbg !5997
  %has_sign_dependent_rounding819 = getelementptr inbounds %struct.real_format, %struct.real_format* %346, i32 0, i32 10, !dbg !5997
  %347 = load i8, i8* %has_sign_dependent_rounding819, align 1, !dbg !5997
  %conv820 = zext i8 %347 to i32, !dbg !5997
  %tobool821 = icmp ne i32 %conv820, 0, !dbg !5997
  br i1 %tobool821, label %land.lhs.true822, label %if.then824, !dbg !5997

land.lhs.true822:                                 ; preds = %cond.end815
  %348 = load i32, i32* @flag_rounding_math, align 4, !dbg !5997
  %tobool823 = icmp ne i32 %348, 0, !dbg !5997
  br i1 %tobool823, label %if.end835, label %if.then824, !dbg !5998

if.then824:                                       ; preds = %land.lhs.true822, %cond.end815, %lor.lhs.false744
  %349 = load i32, i32* %mode.addr, align 4, !dbg !5999
  %350 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6001
  %u825 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1, !dbg !6001
  %fld826 = bitcast %union.u* %u825 to [1 x %union.rtunion_def]*, !dbg !6001
  %arrayidx827 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld826, i64 0, i64 0, !dbg !6001
  %rt_rtx828 = bitcast %union.rtunion_def* %arrayidx827 to %struct.rtx_def**, !dbg !6001
  %351 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx828, align 8, !dbg !6001
  %352 = load i32, i32* %mode.addr, align 4, !dbg !6002
  %call829 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %349, %struct.rtx_def* %351, i32 %352), !dbg !6003
  store %struct.rtx_def* %call829, %struct.rtx_def** %temp, align 8, !dbg !6004
  %353 = load i32, i32* %mode.addr, align 4, !dbg !6005
  %354 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6006
  %355 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6007
  %u830 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %355, i32 0, i32 1, !dbg !6007
  %fld831 = bitcast %union.u* %u830 to [1 x %union.rtunion_def]*, !dbg !6007
  %arrayidx832 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld831, i64 0, i64 1, !dbg !6007
  %rt_rtx833 = bitcast %union.rtunion_def* %arrayidx832 to %struct.rtx_def**, !dbg !6007
  %356 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx833, align 8, !dbg !6007
  %call834 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %353, %struct.rtx_def* %354, %struct.rtx_def* %356), !dbg !6008
  store %struct.rtx_def* %call834, %struct.rtx_def** %retval, align 8, !dbg !6009
  br label %return, !dbg !6009

if.end835:                                        ; preds = %land.lhs.true822, %if.end721
  %357 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6010
  %358 = bitcast %struct.rtx_def* %357 to i32*, !dbg !6010
  %bf.load836 = load i32, i32* %358, align 8, !dbg !6010
  %bf.clear837 = and i32 %bf.load836, 65535, !dbg !6010
  %cmp838 = icmp eq i32 %bf.clear837, 65, !dbg !6012
  br i1 %cmp838, label %if.then840, label %if.end854, !dbg !6013

if.then840:                                       ; preds = %if.end835
  %359 = load i32, i32* %mode.addr, align 4, !dbg !6014
  %360 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6016
  %u841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %360, i32 0, i32 1, !dbg !6016
  %fld842 = bitcast %union.u* %u841 to [1 x %union.rtunion_def]*, !dbg !6016
  %arrayidx843 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld842, i64 0, i64 0, !dbg !6016
  %rt_rtx844 = bitcast %union.rtunion_def* %arrayidx843 to %struct.rtx_def**, !dbg !6016
  %361 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx844, align 8, !dbg !6016
  %362 = load i32, i32* %mode.addr, align 4, !dbg !6017
  %call845 = call %struct.rtx_def* @simplify_unary_operation(i32 51, i32 %359, %struct.rtx_def* %361, i32 %362), !dbg !6018
  store %struct.rtx_def* %call845, %struct.rtx_def** %temp, align 8, !dbg !6019
  %363 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6020
  %tobool846 = icmp ne %struct.rtx_def* %363, null, !dbg !6020
  br i1 %tobool846, label %if.then847, label %if.end853, !dbg !6022

if.then847:                                       ; preds = %if.then840
  %364 = load i32, i32* %mode.addr, align 4, !dbg !6023
  %365 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6024
  %366 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6025
  %u848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %366, i32 0, i32 1, !dbg !6025
  %fld849 = bitcast %union.u* %u848 to [1 x %union.rtunion_def]*, !dbg !6025
  %arrayidx850 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld849, i64 0, i64 1, !dbg !6025
  %rt_rtx851 = bitcast %union.rtunion_def* %arrayidx850 to %struct.rtx_def**, !dbg !6025
  %367 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx851, align 8, !dbg !6025
  %call852 = call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %364, %struct.rtx_def* %365, %struct.rtx_def* %367), !dbg !6026
  store %struct.rtx_def* %call852, %struct.rtx_def** %retval, align 8, !dbg !6027
  br label %return, !dbg !6027

if.end853:                                        ; preds = %if.then840
  br label %if.end854, !dbg !6028

if.end854:                                        ; preds = %if.end853, %if.end835
  %368 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6029
  %369 = bitcast %struct.rtx_def* %368 to i32*, !dbg !6029
  %bf.load855 = load i32, i32* %369, align 8, !dbg !6029
  %bf.clear856 = and i32 %bf.load855, 65535, !dbg !6029
  %cmp857 = icmp eq i32 %bf.clear856, 67, !dbg !6031
  br i1 %cmp857, label %land.lhs.true859, label %if.end895, !dbg !6032

land.lhs.true859:                                 ; preds = %if.end854
  %370 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6033
  %u860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %370, i32 0, i32 1, !dbg !6033
  %fld861 = bitcast %union.u* %u860 to [1 x %union.rtunion_def]*, !dbg !6033
  %arrayidx862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld861, i64 0, i64 1, !dbg !6033
  %rt_rtx863 = bitcast %union.rtunion_def* %arrayidx862 to %struct.rtx_def**, !dbg !6033
  %371 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx863, align 8, !dbg !6033
  %372 = bitcast %struct.rtx_def* %371 to i32*, !dbg !6033
  %bf.load864 = load i32, i32* %372, align 8, !dbg !6033
  %bf.clear865 = and i32 %bf.load864, 65535, !dbg !6033
  %cmp866 = icmp eq i32 %bf.clear865, 30, !dbg !6033
  br i1 %cmp866, label %land.lhs.true868, label %if.end895, !dbg !6034

land.lhs.true868:                                 ; preds = %land.lhs.true859
  %373 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6035
  %u869 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %373, i32 0, i32 1, !dbg !6035
  %fld870 = bitcast %union.u* %u869 to [1 x %union.rtunion_def]*, !dbg !6035
  %arrayidx871 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld870, i64 0, i64 1, !dbg !6035
  %rt_rtx872 = bitcast %union.rtunion_def* %arrayidx871 to %struct.rtx_def**, !dbg !6035
  %374 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx872, align 8, !dbg !6035
  %u873 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %374, i32 0, i32 1, !dbg !6035
  %hwint = bitcast %union.u* %u873 to [1 x i64]*, !dbg !6035
  %arrayidx874 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !6035
  %375 = load i64, i64* %arrayidx874, align 8, !dbg !6035
  %376 = load i32, i32* %mode.addr, align 4, !dbg !6036
  %idxprom875 = zext i32 %376 to i64, !dbg !6036
  %arrayidx876 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom875, !dbg !6036
  %377 = load i8, i8* %arrayidx876, align 1, !dbg !6036
  %conv877 = zext i8 %377 to i16, !dbg !6036
  %conv878 = zext i16 %conv877 to i32, !dbg !6036
  %mul = mul nsw i32 %conv878, 8, !dbg !6036
  %conv879 = trunc i32 %mul to i16, !dbg !6036
  %conv880 = zext i16 %conv879 to i32, !dbg !6036
  %sub881 = sub nsw i32 %conv880, 1, !dbg !6037
  %conv882 = sext i32 %sub881 to i64, !dbg !6036
  %cmp883 = icmp eq i64 %375, %conv882, !dbg !6038
  br i1 %cmp883, label %if.then885, label %if.end895, !dbg !6039

if.then885:                                       ; preds = %land.lhs.true868
  %378 = load i32, i32* %mode.addr, align 4, !dbg !6040
  %379 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6041
  %u886 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %379, i32 0, i32 1, !dbg !6041
  %fld887 = bitcast %union.u* %u886 to [1 x %union.rtunion_def]*, !dbg !6041
  %arrayidx888 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld887, i64 0, i64 0, !dbg !6041
  %rt_rtx889 = bitcast %union.rtunion_def* %arrayidx888 to %struct.rtx_def**, !dbg !6041
  %380 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx889, align 8, !dbg !6041
  %381 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6042
  %u890 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %381, i32 0, i32 1, !dbg !6042
  %fld891 = bitcast %union.u* %u890 to [1 x %union.rtunion_def]*, !dbg !6042
  %arrayidx892 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld891, i64 0, i64 1, !dbg !6042
  %rt_rtx893 = bitcast %union.rtunion_def* %arrayidx892 to %struct.rtx_def**, !dbg !6042
  %382 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx893, align 8, !dbg !6042
  %call894 = call %struct.rtx_def* @simplify_gen_binary(i32 68, i32 %378, %struct.rtx_def* %380, %struct.rtx_def* %382), !dbg !6043
  store %struct.rtx_def* %call894, %struct.rtx_def** %retval, align 8, !dbg !6044
  br label %return, !dbg !6044

if.end895:                                        ; preds = %land.lhs.true868, %land.lhs.true859, %if.end854
  %383 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6045
  %384 = bitcast %struct.rtx_def* %383 to i32*, !dbg !6045
  %bf.load896 = load i32, i32* %384, align 8, !dbg !6045
  %bf.clear897 = and i32 %bf.load896, 65535, !dbg !6045
  %cmp898 = icmp eq i32 %bf.clear897, 68, !dbg !6047
  br i1 %cmp898, label %land.lhs.true900, label %if.end938, !dbg !6048

land.lhs.true900:                                 ; preds = %if.end895
  %385 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6049
  %u901 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %385, i32 0, i32 1, !dbg !6049
  %fld902 = bitcast %union.u* %u901 to [1 x %union.rtunion_def]*, !dbg !6049
  %arrayidx903 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld902, i64 0, i64 1, !dbg !6049
  %rt_rtx904 = bitcast %union.rtunion_def* %arrayidx903 to %struct.rtx_def**, !dbg !6049
  %386 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx904, align 8, !dbg !6049
  %387 = bitcast %struct.rtx_def* %386 to i32*, !dbg !6049
  %bf.load905 = load i32, i32* %387, align 8, !dbg !6049
  %bf.clear906 = and i32 %bf.load905, 65535, !dbg !6049
  %cmp907 = icmp eq i32 %bf.clear906, 30, !dbg !6049
  br i1 %cmp907, label %land.lhs.true909, label %if.end938, !dbg !6050

land.lhs.true909:                                 ; preds = %land.lhs.true900
  %388 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6051
  %u910 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %388, i32 0, i32 1, !dbg !6051
  %fld911 = bitcast %union.u* %u910 to [1 x %union.rtunion_def]*, !dbg !6051
  %arrayidx912 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld911, i64 0, i64 1, !dbg !6051
  %rt_rtx913 = bitcast %union.rtunion_def* %arrayidx912 to %struct.rtx_def**, !dbg !6051
  %389 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx913, align 8, !dbg !6051
  %u914 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %389, i32 0, i32 1, !dbg !6051
  %hwint915 = bitcast %union.u* %u914 to [1 x i64]*, !dbg !6051
  %arrayidx916 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint915, i64 0, i64 0, !dbg !6051
  %390 = load i64, i64* %arrayidx916, align 8, !dbg !6051
  %391 = load i32, i32* %mode.addr, align 4, !dbg !6052
  %idxprom917 = zext i32 %391 to i64, !dbg !6052
  %arrayidx918 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom917, !dbg !6052
  %392 = load i8, i8* %arrayidx918, align 1, !dbg !6052
  %conv919 = zext i8 %392 to i16, !dbg !6052
  %conv920 = zext i16 %conv919 to i32, !dbg !6052
  %mul921 = mul nsw i32 %conv920, 8, !dbg !6052
  %conv922 = trunc i32 %mul921 to i16, !dbg !6052
  %conv923 = zext i16 %conv922 to i32, !dbg !6052
  %sub924 = sub nsw i32 %conv923, 1, !dbg !6053
  %conv925 = sext i32 %sub924 to i64, !dbg !6052
  %cmp926 = icmp eq i64 %390, %conv925, !dbg !6054
  br i1 %cmp926, label %if.then928, label %if.end938, !dbg !6055

if.then928:                                       ; preds = %land.lhs.true909
  %393 = load i32, i32* %mode.addr, align 4, !dbg !6056
  %394 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6057
  %u929 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %394, i32 0, i32 1, !dbg !6057
  %fld930 = bitcast %union.u* %u929 to [1 x %union.rtunion_def]*, !dbg !6057
  %arrayidx931 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld930, i64 0, i64 0, !dbg !6057
  %rt_rtx932 = bitcast %union.rtunion_def* %arrayidx931 to %struct.rtx_def**, !dbg !6057
  %395 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx932, align 8, !dbg !6057
  %396 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6058
  %u933 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %396, i32 0, i32 1, !dbg !6058
  %fld934 = bitcast %union.u* %u933 to [1 x %union.rtunion_def]*, !dbg !6058
  %arrayidx935 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld934, i64 0, i64 1, !dbg !6058
  %rt_rtx936 = bitcast %union.rtunion_def* %arrayidx935 to %struct.rtx_def**, !dbg !6058
  %397 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx936, align 8, !dbg !6058
  %call937 = call %struct.rtx_def* @simplify_gen_binary(i32 67, i32 %393, %struct.rtx_def* %395, %struct.rtx_def* %397), !dbg !6059
  store %struct.rtx_def* %call937, %struct.rtx_def** %retval, align 8, !dbg !6060
  br label %return, !dbg !6060

if.end938:                                        ; preds = %land.lhs.true909, %land.lhs.true900, %if.end895
  %398 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6061
  %399 = bitcast %struct.rtx_def* %398 to i32*, !dbg !6061
  %bf.load939 = load i32, i32* %399, align 8, !dbg !6061
  %bf.clear940 = and i32 %bf.load939, 65535, !dbg !6061
  %cmp941 = icmp eq i32 %bf.clear940, 63, !dbg !6063
  br i1 %cmp941, label %land.lhs.true943, label %if.end964, !dbg !6064

land.lhs.true943:                                 ; preds = %if.end938
  %400 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6065
  %u944 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %400, i32 0, i32 1, !dbg !6065
  %fld945 = bitcast %union.u* %u944 to [1 x %union.rtunion_def]*, !dbg !6065
  %arrayidx946 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld945, i64 0, i64 1, !dbg !6065
  %rt_rtx947 = bitcast %union.rtunion_def* %arrayidx946 to %struct.rtx_def**, !dbg !6065
  %401 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx947, align 8, !dbg !6065
  %402 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !6066
  %cmp948 = icmp eq %struct.rtx_def* %401, %402, !dbg !6067
  br i1 %cmp948, label %land.lhs.true950, label %if.end964, !dbg !6068

land.lhs.true950:                                 ; preds = %land.lhs.true943
  %403 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6069
  %u951 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %403, i32 0, i32 1, !dbg !6069
  %fld952 = bitcast %union.u* %u951 to [1 x %union.rtunion_def]*, !dbg !6069
  %arrayidx953 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld952, i64 0, i64 0, !dbg !6069
  %rt_rtx954 = bitcast %union.rtunion_def* %arrayidx953 to %struct.rtx_def**, !dbg !6069
  %404 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx954, align 8, !dbg !6069
  %405 = load i32, i32* %mode.addr, align 4, !dbg !6070
  %call955 = call i64 @nonzero_bits(%struct.rtx_def* %404, i32 %405), !dbg !6071
  %cmp956 = icmp eq i64 %call955, 1, !dbg !6072
  br i1 %cmp956, label %if.then958, label %if.end964, !dbg !6073

if.then958:                                       ; preds = %land.lhs.true950
  %406 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6074
  %u959 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %406, i32 0, i32 1, !dbg !6074
  %fld960 = bitcast %union.u* %u959 to [1 x %union.rtunion_def]*, !dbg !6074
  %arrayidx961 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld960, i64 0, i64 0, !dbg !6074
  %rt_rtx962 = bitcast %union.rtunion_def* %arrayidx961 to %struct.rtx_def**, !dbg !6074
  %407 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx962, align 8, !dbg !6074
  %call963 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %407, i64 -1), !dbg !6075
  store %struct.rtx_def* %call963, %struct.rtx_def** %retval, align 8, !dbg !6076
  br label %return, !dbg !6076

if.end964:                                        ; preds = %land.lhs.true950, %land.lhs.true943, %if.end938
  %408 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6077
  %409 = bitcast %struct.rtx_def* %408 to i32*, !dbg !6077
  %bf.load965 = load i32, i32* %409, align 8, !dbg !6077
  %bf.clear966 = and i32 %bf.load965, 65535, !dbg !6077
  %cmp967 = icmp eq i32 %bf.clear966, 85, !dbg !6079
  br i1 %cmp967, label %land.lhs.true969, label %if.end1042, !dbg !6080

land.lhs.true969:                                 ; preds = %if.end964
  %410 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6081
  %u970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %410, i32 0, i32 1, !dbg !6081
  %fld971 = bitcast %union.u* %u970 to [1 x %union.rtunion_def]*, !dbg !6081
  %arrayidx972 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld971, i64 0, i64 1, !dbg !6081
  %rt_rtx973 = bitcast %union.rtunion_def* %arrayidx972 to %struct.rtx_def**, !dbg !6081
  %411 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx973, align 8, !dbg !6081
  %412 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !6082
  %cmp974 = icmp eq %struct.rtx_def* %411, %412, !dbg !6083
  br i1 %cmp974, label %land.lhs.true976, label %if.end1042, !dbg !6084

land.lhs.true976:                                 ; preds = %land.lhs.true969
  %413 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6085
  %u977 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %413, i32 0, i32 1, !dbg !6085
  %fld978 = bitcast %union.u* %u977 to [1 x %union.rtunion_def]*, !dbg !6085
  %arrayidx979 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld978, i64 0, i64 0, !dbg !6085
  %rt_rtx980 = bitcast %union.rtunion_def* %arrayidx979 to %struct.rtx_def**, !dbg !6085
  %414 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx980, align 8, !dbg !6085
  %415 = bitcast %struct.rtx_def* %414 to i32*, !dbg !6085
  %bf.load981 = load i32, i32* %415, align 8, !dbg !6085
  %bf.lshr982 = lshr i32 %bf.load981, 16, !dbg !6085
  %bf.clear983 = and i32 %bf.lshr982, 255, !dbg !6085
  %idxprom984 = zext i32 %bf.clear983 to i64, !dbg !6085
  %arrayidx985 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom984, !dbg !6085
  %416 = load i8, i8* %arrayidx985, align 1, !dbg !6085
  %conv986 = zext i8 %416 to i32, !dbg !6085
  %cmp987 = icmp eq i32 %conv986, 2, !dbg !6085
  br i1 %cmp987, label %if.then1002, label %lor.lhs.false989, !dbg !6085

lor.lhs.false989:                                 ; preds = %land.lhs.true976
  %417 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6085
  %u990 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %417, i32 0, i32 1, !dbg !6085
  %fld991 = bitcast %union.u* %u990 to [1 x %union.rtunion_def]*, !dbg !6085
  %arrayidx992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld991, i64 0, i64 0, !dbg !6085
  %rt_rtx993 = bitcast %union.rtunion_def* %arrayidx992 to %struct.rtx_def**, !dbg !6085
  %418 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx993, align 8, !dbg !6085
  %419 = bitcast %struct.rtx_def* %418 to i32*, !dbg !6085
  %bf.load994 = load i32, i32* %419, align 8, !dbg !6085
  %bf.lshr995 = lshr i32 %bf.load994, 16, !dbg !6085
  %bf.clear996 = and i32 %bf.lshr995, 255, !dbg !6085
  %idxprom997 = zext i32 %bf.clear996 to i64, !dbg !6085
  %arrayidx998 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom997, !dbg !6085
  %420 = load i8, i8* %arrayidx998, align 1, !dbg !6085
  %conv999 = zext i8 %420 to i32, !dbg !6085
  %cmp1000 = icmp eq i32 %conv999, 3, !dbg !6085
  br i1 %cmp1000, label %if.then1002, label %if.end1042, !dbg !6086

if.then1002:                                      ; preds = %lor.lhs.false989, %land.lhs.true976
  call void @llvm.dbg.declare(metadata i32* %inner, metadata !6087, metadata !DIExpression()), !dbg !6089
  %421 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6090
  %u1003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %421, i32 0, i32 1, !dbg !6090
  %fld1004 = bitcast %union.u* %u1003 to [1 x %union.rtunion_def]*, !dbg !6090
  %arrayidx1005 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1004, i64 0, i64 0, !dbg !6090
  %rt_rtx1006 = bitcast %union.rtunion_def* %arrayidx1005 to %struct.rtx_def**, !dbg !6090
  %422 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1006, align 8, !dbg !6090
  %423 = bitcast %struct.rtx_def* %422 to i32*, !dbg !6090
  %bf.load1007 = load i32, i32* %423, align 8, !dbg !6090
  %bf.lshr1008 = lshr i32 %bf.load1007, 16, !dbg !6090
  %bf.clear1009 = and i32 %bf.lshr1008, 255, !dbg !6090
  store i32 %bf.clear1009, i32* %inner, align 4, !dbg !6089
  call void @llvm.dbg.declare(metadata i32* %isize, metadata !6091, metadata !DIExpression()), !dbg !6092
  %424 = load i32, i32* %inner, align 4, !dbg !6093
  %idxprom1010 = zext i32 %424 to i64, !dbg !6093
  %arrayidx1011 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1010, !dbg !6093
  %425 = load i8, i8* %arrayidx1011, align 1, !dbg !6093
  %conv1012 = zext i8 %425 to i16, !dbg !6093
  %conv1013 = zext i16 %conv1012 to i32, !dbg !6093
  %mul1014 = mul nsw i32 %conv1013, 8, !dbg !6093
  %conv1015 = trunc i32 %mul1014 to i16, !dbg !6093
  %conv1016 = zext i16 %conv1015 to i32, !dbg !6093
  store i32 %conv1016, i32* %isize, align 4, !dbg !6092
  %426 = load i32, i32* %inner, align 4, !dbg !6094
  %427 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6097
  %u1017 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %427, i32 0, i32 1, !dbg !6097
  %fld1018 = bitcast %union.u* %u1017 to [1 x %union.rtunion_def]*, !dbg !6097
  %arrayidx1019 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1018, i64 0, i64 0, !dbg !6097
  %rt_rtx1020 = bitcast %union.rtunion_def* %arrayidx1019 to %struct.rtx_def**, !dbg !6097
  %428 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1020, align 8, !dbg !6097
  %429 = load i32, i32* %isize, align 4, !dbg !6098
  %sub1021 = sub nsw i32 %429, 1, !dbg !6098
  %conv1022 = sext i32 %sub1021 to i64, !dbg !6098
  %call1023 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv1022), !dbg !6098
  %call1024 = call %struct.rtx_def* @simplify_gen_binary(i32 67, i32 %426, %struct.rtx_def* %428, %struct.rtx_def* %call1023), !dbg !6099
  store %struct.rtx_def* %call1024, %struct.rtx_def** %temp, align 8, !dbg !6100
  %430 = load i32, i32* %mode.addr, align 4, !dbg !6101
  %431 = load i32, i32* %inner, align 4, !dbg !6103
  %cmp1025 = icmp eq i32 %430, %431, !dbg !6104
  br i1 %cmp1025, label %if.then1027, label %if.end1028, !dbg !6105

if.then1027:                                      ; preds = %if.then1002
  %432 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6106
  store %struct.rtx_def* %432, %struct.rtx_def** %retval, align 8, !dbg !6107
  br label %return, !dbg !6107

if.end1028:                                       ; preds = %if.then1002
  %433 = load i32, i32* %mode.addr, align 4, !dbg !6108
  %idxprom1029 = zext i32 %433 to i64, !dbg !6108
  %arrayidx1030 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1029, !dbg !6108
  %434 = load i8, i8* %arrayidx1030, align 1, !dbg !6108
  %conv1031 = zext i8 %434 to i16, !dbg !6108
  %conv1032 = zext i16 %conv1031 to i32, !dbg !6108
  %mul1033 = mul nsw i32 %conv1032, 8, !dbg !6108
  %conv1034 = trunc i32 %mul1033 to i16, !dbg !6108
  %conv1035 = zext i16 %conv1034 to i32, !dbg !6108
  %435 = load i32, i32* %isize, align 4, !dbg !6110
  %cmp1036 = icmp sgt i32 %conv1035, %435, !dbg !6111
  br i1 %cmp1036, label %if.then1038, label %if.end1040, !dbg !6112

if.then1038:                                      ; preds = %if.end1028
  %436 = load i32, i32* %mode.addr, align 4, !dbg !6113
  %437 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6114
  %438 = load i32, i32* %inner, align 4, !dbg !6115
  %call1039 = call %struct.rtx_def* @simplify_gen_unary(i32 98, i32 %436, %struct.rtx_def* %437, i32 %438), !dbg !6116
  store %struct.rtx_def* %call1039, %struct.rtx_def** %retval, align 8, !dbg !6117
  br label %return, !dbg !6117

if.end1040:                                       ; preds = %if.end1028
  %439 = load i32, i32* %mode.addr, align 4, !dbg !6118
  %440 = load %struct.rtx_def*, %struct.rtx_def** %temp, align 8, !dbg !6119
  %441 = load i32, i32* %inner, align 4, !dbg !6120
  %call1041 = call %struct.rtx_def* @simplify_gen_unary(i32 100, i32 %439, %struct.rtx_def* %440, i32 %441), !dbg !6121
  store %struct.rtx_def* %call1041, %struct.rtx_def** %retval, align 8, !dbg !6122
  br label %return, !dbg !6122

if.end1042:                                       ; preds = %lor.lhs.false989, %land.lhs.true969, %if.end964
  br label %sw.epilog1883, !dbg !6123

sw.bb1043:                                        ; preds = %entry
  %442 = load i32, i32* %mode.addr, align 4, !dbg !6124
  %idxprom1044 = zext i32 %442 to i64, !dbg !6124
  %arrayidx1045 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1044, !dbg !6124
  %443 = load i8, i8* %arrayidx1045, align 1, !dbg !6124
  %conv1046 = zext i8 %443 to i32, !dbg !6124
  %cmp1047 = icmp eq i32 %conv1046, 3, !dbg !6126
  br i1 %cmp1047, label %if.then1049, label %if.end1050, !dbg !6127

if.then1049:                                      ; preds = %sw.bb1043
  br label %sw.epilog1883, !dbg !6128

if.end1050:                                       ; preds = %sw.bb1043
  %444 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6129
  %445 = bitcast %struct.rtx_def* %444 to i32*, !dbg !6129
  %bf.load1051 = load i32, i32* %445, align 8, !dbg !6129
  %bf.clear1052 = and i32 %bf.load1051, 65535, !dbg !6129
  %cmp1053 = icmp eq i32 %bf.clear1052, 98, !dbg !6131
  br i1 %cmp1053, label %land.lhs.true1060, label %lor.lhs.false1055, !dbg !6132

lor.lhs.false1055:                                ; preds = %if.end1050
  %446 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6133
  %447 = bitcast %struct.rtx_def* %446 to i32*, !dbg !6133
  %bf.load1056 = load i32, i32* %447, align 8, !dbg !6133
  %bf.clear1057 = and i32 %bf.load1056, 65535, !dbg !6133
  %cmp1058 = icmp eq i32 %bf.clear1057, 99, !dbg !6134
  br i1 %cmp1058, label %land.lhs.true1060, label %if.end1075, !dbg !6135

land.lhs.true1060:                                ; preds = %lor.lhs.false1055, %if.end1050
  %448 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6136
  %u1061 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %448, i32 0, i32 1, !dbg !6136
  %fld1062 = bitcast %union.u* %u1061 to [1 x %union.rtunion_def]*, !dbg !6136
  %arrayidx1063 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1062, i64 0, i64 0, !dbg !6136
  %rt_rtx1064 = bitcast %union.rtunion_def* %arrayidx1063 to %struct.rtx_def**, !dbg !6136
  %449 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1064, align 8, !dbg !6136
  %450 = bitcast %struct.rtx_def* %449 to i32*, !dbg !6136
  %bf.load1065 = load i32, i32* %450, align 8, !dbg !6136
  %bf.lshr1066 = lshr i32 %bf.load1065, 16, !dbg !6136
  %bf.clear1067 = and i32 %bf.lshr1066, 255, !dbg !6136
  %451 = load i32, i32* %mode.addr, align 4, !dbg !6137
  %cmp1068 = icmp eq i32 %bf.clear1067, %451, !dbg !6138
  br i1 %cmp1068, label %if.then1070, label %if.end1075, !dbg !6139

if.then1070:                                      ; preds = %land.lhs.true1060
  %452 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6140
  %u1071 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %452, i32 0, i32 1, !dbg !6140
  %fld1072 = bitcast %union.u* %u1071 to [1 x %union.rtunion_def]*, !dbg !6140
  %arrayidx1073 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1072, i64 0, i64 0, !dbg !6140
  %rt_rtx1074 = bitcast %union.rtunion_def* %arrayidx1073 to %struct.rtx_def**, !dbg !6140
  %453 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1074, align 8, !dbg !6140
  store %struct.rtx_def* %453, %struct.rtx_def** %retval, align 8, !dbg !6141
  br label %return, !dbg !6141

if.end1075:                                       ; preds = %land.lhs.true1060, %lor.lhs.false1055
  %454 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6142
  %455 = bitcast %struct.rtx_def* %454 to i32*, !dbg !6142
  %bf.load1076 = load i32, i32* %455, align 8, !dbg !6142
  %bf.clear1077 = and i32 %bf.load1076, 65535, !dbg !6142
  %cmp1078 = icmp eq i32 %bf.clear1077, 111, !dbg !6144
  br i1 %cmp1078, label %land.lhs.true1085, label %lor.lhs.false1080, !dbg !6145

lor.lhs.false1080:                                ; preds = %if.end1075
  %456 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6146
  %457 = bitcast %struct.rtx_def* %456 to i32*, !dbg !6146
  %bf.load1081 = load i32, i32* %457, align 8, !dbg !6146
  %bf.clear1082 = and i32 %bf.load1081, 65535, !dbg !6146
  %cmp1083 = icmp eq i32 %bf.clear1082, 51, !dbg !6147
  br i1 %cmp1083, label %land.lhs.true1085, label %if.end1129, !dbg !6148

land.lhs.true1085:                                ; preds = %lor.lhs.false1080, %if.end1075
  %458 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6149
  %u1086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %458, i32 0, i32 1, !dbg !6149
  %fld1087 = bitcast %union.u* %u1086 to [1 x %union.rtunion_def]*, !dbg !6149
  %arrayidx1088 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1087, i64 0, i64 0, !dbg !6149
  %rt_rtx1089 = bitcast %union.rtunion_def* %arrayidx1088 to %struct.rtx_def**, !dbg !6149
  %459 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1089, align 8, !dbg !6149
  %460 = bitcast %struct.rtx_def* %459 to i32*, !dbg !6149
  %bf.load1090 = load i32, i32* %460, align 8, !dbg !6149
  %bf.clear1091 = and i32 %bf.load1090, 65535, !dbg !6149
  %cmp1092 = icmp eq i32 %bf.clear1091, 98, !dbg !6150
  br i1 %cmp1092, label %land.lhs.true1103, label %lor.lhs.false1094, !dbg !6151

lor.lhs.false1094:                                ; preds = %land.lhs.true1085
  %461 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6152
  %u1095 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %461, i32 0, i32 1, !dbg !6152
  %fld1096 = bitcast %union.u* %u1095 to [1 x %union.rtunion_def]*, !dbg !6152
  %arrayidx1097 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1096, i64 0, i64 0, !dbg !6152
  %rt_rtx1098 = bitcast %union.rtunion_def* %arrayidx1097 to %struct.rtx_def**, !dbg !6152
  %462 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1098, align 8, !dbg !6152
  %463 = bitcast %struct.rtx_def* %462 to i32*, !dbg !6152
  %bf.load1099 = load i32, i32* %463, align 8, !dbg !6152
  %bf.clear1100 = and i32 %bf.load1099, 65535, !dbg !6152
  %cmp1101 = icmp eq i32 %bf.clear1100, 99, !dbg !6153
  br i1 %cmp1101, label %land.lhs.true1103, label %if.end1129, !dbg !6154

land.lhs.true1103:                                ; preds = %lor.lhs.false1094, %land.lhs.true1085
  %464 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6155
  %u1104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %464, i32 0, i32 1, !dbg !6155
  %fld1105 = bitcast %union.u* %u1104 to [1 x %union.rtunion_def]*, !dbg !6155
  %arrayidx1106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1105, i64 0, i64 0, !dbg !6155
  %rt_rtx1107 = bitcast %union.rtunion_def* %arrayidx1106 to %struct.rtx_def**, !dbg !6155
  %465 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1107, align 8, !dbg !6155
  %u1108 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %465, i32 0, i32 1, !dbg !6155
  %fld1109 = bitcast %union.u* %u1108 to [1 x %union.rtunion_def]*, !dbg !6155
  %arrayidx1110 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1109, i64 0, i64 0, !dbg !6155
  %rt_rtx1111 = bitcast %union.rtunion_def* %arrayidx1110 to %struct.rtx_def**, !dbg !6155
  %466 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1111, align 8, !dbg !6155
  %467 = bitcast %struct.rtx_def* %466 to i32*, !dbg !6155
  %bf.load1112 = load i32, i32* %467, align 8, !dbg !6155
  %bf.lshr1113 = lshr i32 %bf.load1112, 16, !dbg !6155
  %bf.clear1114 = and i32 %bf.lshr1113, 255, !dbg !6155
  %468 = load i32, i32* %mode.addr, align 4, !dbg !6156
  %cmp1115 = icmp eq i32 %bf.clear1114, %468, !dbg !6157
  br i1 %cmp1115, label %if.then1117, label %if.end1129, !dbg !6158

if.then1117:                                      ; preds = %land.lhs.true1103
  %469 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6159
  %470 = bitcast %struct.rtx_def* %469 to i32*, !dbg !6159
  %bf.load1118 = load i32, i32* %470, align 8, !dbg !6159
  %bf.clear1119 = and i32 %bf.load1118, 65535, !dbg !6159
  %471 = load i32, i32* %mode.addr, align 4, !dbg !6160
  %472 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6161
  %u1120 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %472, i32 0, i32 1, !dbg !6161
  %fld1121 = bitcast %union.u* %u1120 to [1 x %union.rtunion_def]*, !dbg !6161
  %arrayidx1122 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1121, i64 0, i64 0, !dbg !6161
  %rt_rtx1123 = bitcast %union.rtunion_def* %arrayidx1122 to %struct.rtx_def**, !dbg !6161
  %473 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1123, align 8, !dbg !6161
  %u1124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %473, i32 0, i32 1, !dbg !6161
  %fld1125 = bitcast %union.u* %u1124 to [1 x %union.rtunion_def]*, !dbg !6161
  %arrayidx1126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1125, i64 0, i64 0, !dbg !6161
  %rt_rtx1127 = bitcast %union.rtunion_def* %arrayidx1126 to %struct.rtx_def**, !dbg !6161
  %474 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1127, align 8, !dbg !6161
  %475 = load i32, i32* %mode.addr, align 4, !dbg !6162
  %call1128 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear1119, i32 %471, %struct.rtx_def* %474, i32 %475), !dbg !6163
  store %struct.rtx_def* %call1128, %struct.rtx_def** %retval, align 8, !dbg !6164
  br label %return, !dbg !6164

if.end1129:                                       ; preds = %land.lhs.true1103, %lor.lhs.false1094, %lor.lhs.false1080
  %476 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6165
  %477 = bitcast %struct.rtx_def* %476 to i32*, !dbg !6165
  %bf.load1130 = load i32, i32* %477, align 8, !dbg !6165
  %bf.clear1131 = and i32 %bf.load1130, 65535, !dbg !6165
  %cmp1132 = icmp eq i32 %bf.clear1131, 39, !dbg !6167
  br i1 %cmp1132, label %land.lhs.true1134, label %if.end1167, !dbg !6168

land.lhs.true1134:                                ; preds = %if.end1129
  %478 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6169
  %u1135 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %478, i32 0, i32 1, !dbg !6169
  %fld1136 = bitcast %union.u* %u1135 to [1 x %union.rtunion_def]*, !dbg !6169
  %arrayidx1137 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1136, i64 0, i64 0, !dbg !6169
  %rt_rtx1138 = bitcast %union.rtunion_def* %arrayidx1137 to %struct.rtx_def**, !dbg !6169
  %479 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1138, align 8, !dbg !6169
  %480 = bitcast %struct.rtx_def* %479 to i32*, !dbg !6169
  %bf.load1139 = load i32, i32* %480, align 8, !dbg !6169
  %bf.clear1140 = and i32 %bf.load1139, 65535, !dbg !6169
  %cmp1141 = icmp eq i32 %bf.clear1140, 100, !dbg !6170
  br i1 %cmp1141, label %land.lhs.true1143, label %if.end1167, !dbg !6171

land.lhs.true1143:                                ; preds = %land.lhs.true1134
  %481 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6172
  %call1144 = call i32 @subreg_lowpart_p(%struct.rtx_def* %481), !dbg !6173
  %tobool1145 = icmp ne i32 %call1144, 0, !dbg !6173
  br i1 %tobool1145, label %if.then1146, label %if.end1167, !dbg !6174

if.then1146:                                      ; preds = %land.lhs.true1143
  %482 = load i32, i32* %mode.addr, align 4, !dbg !6175
  %483 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6176
  %u1147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %483, i32 0, i32 1, !dbg !6176
  %fld1148 = bitcast %union.u* %u1147 to [1 x %union.rtunion_def]*, !dbg !6176
  %arrayidx1149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1148, i64 0, i64 0, !dbg !6176
  %rt_rtx1150 = bitcast %union.rtunion_def* %arrayidx1149 to %struct.rtx_def**, !dbg !6176
  %484 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1150, align 8, !dbg !6176
  %u1151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %484, i32 0, i32 1, !dbg !6176
  %fld1152 = bitcast %union.u* %u1151 to [1 x %union.rtunion_def]*, !dbg !6176
  %arrayidx1153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1152, i64 0, i64 0, !dbg !6176
  %rt_rtx1154 = bitcast %union.rtunion_def* %arrayidx1153 to %struct.rtx_def**, !dbg !6176
  %485 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1154, align 8, !dbg !6176
  %486 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6177
  %u1155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %486, i32 0, i32 1, !dbg !6177
  %fld1156 = bitcast %union.u* %u1155 to [1 x %union.rtunion_def]*, !dbg !6177
  %arrayidx1157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1156, i64 0, i64 0, !dbg !6177
  %rt_rtx1158 = bitcast %union.rtunion_def* %arrayidx1157 to %struct.rtx_def**, !dbg !6177
  %487 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1158, align 8, !dbg !6177
  %u1159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %487, i32 0, i32 1, !dbg !6177
  %fld1160 = bitcast %union.u* %u1159 to [1 x %union.rtunion_def]*, !dbg !6177
  %arrayidx1161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1160, i64 0, i64 0, !dbg !6177
  %rt_rtx1162 = bitcast %union.rtunion_def* %arrayidx1161 to %struct.rtx_def**, !dbg !6177
  %488 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1162, align 8, !dbg !6177
  %489 = bitcast %struct.rtx_def* %488 to i32*, !dbg !6177
  %bf.load1163 = load i32, i32* %489, align 8, !dbg !6177
  %bf.lshr1164 = lshr i32 %bf.load1163, 16, !dbg !6177
  %bf.clear1165 = and i32 %bf.lshr1164, 255, !dbg !6177
  %call1166 = call %struct.rtx_def* @simplify_gen_unary(i32 100, i32 %482, %struct.rtx_def* %485, i32 %bf.clear1165), !dbg !6178
  store %struct.rtx_def* %call1166, %struct.rtx_def** %retval, align 8, !dbg !6179
  br label %return, !dbg !6179

if.end1167:                                       ; preds = %land.lhs.true1143, %land.lhs.true1134, %if.end1129
  br i1 true, label %cond.true1168, label %cond.false1193, !dbg !6180

cond.true1168:                                    ; preds = %if.end1167
  %490 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6182
  %491 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6183
  %492 = bitcast %struct.rtx_def* %491 to i32*, !dbg !6183
  %bf.load1169 = load i32, i32* %492, align 8, !dbg !6183
  %bf.lshr1170 = lshr i32 %bf.load1169, 16, !dbg !6183
  %bf.clear1171 = and i32 %bf.lshr1170, 255, !dbg !6183
  %call1172 = call i32 @num_sign_bit_copies(%struct.rtx_def* %490, i32 %bf.clear1171), !dbg !6184
  %493 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6185
  %494 = bitcast %struct.rtx_def* %493 to i32*, !dbg !6185
  %bf.load1173 = load i32, i32* %494, align 8, !dbg !6185
  %bf.lshr1174 = lshr i32 %bf.load1173, 16, !dbg !6185
  %bf.clear1175 = and i32 %bf.lshr1174, 255, !dbg !6185
  %idxprom1176 = zext i32 %bf.clear1175 to i64, !dbg !6185
  %arrayidx1177 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1176, !dbg !6185
  %495 = load i8, i8* %arrayidx1177, align 1, !dbg !6185
  %conv1178 = zext i8 %495 to i16, !dbg !6185
  %conv1179 = zext i16 %conv1178 to i32, !dbg !6185
  %mul1180 = mul nsw i32 %conv1179, 8, !dbg !6185
  %conv1181 = trunc i32 %mul1180 to i16, !dbg !6185
  %conv1182 = zext i16 %conv1181 to i32, !dbg !6185
  %496 = load i32, i32* %mode.addr, align 4, !dbg !6186
  %idxprom1183 = zext i32 %496 to i64, !dbg !6186
  %arrayidx1184 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1183, !dbg !6186
  %497 = load i8, i8* %arrayidx1184, align 1, !dbg !6186
  %conv1185 = zext i8 %497 to i16, !dbg !6186
  %conv1186 = zext i16 %conv1185 to i32, !dbg !6186
  %mul1187 = mul nsw i32 %conv1186, 8, !dbg !6186
  %conv1188 = trunc i32 %mul1187 to i16, !dbg !6186
  %conv1189 = zext i16 %conv1188 to i32, !dbg !6186
  %sub1190 = sub nsw i32 %conv1182, %conv1189, !dbg !6187
  %cmp1191 = icmp ugt i32 %call1172, %sub1190, !dbg !6188
  br i1 %cmp1191, label %land.lhs.true1197, label %if.end1213, !dbg !6189

cond.false1193:                                   ; preds = %if.end1167
  %498 = load i32, i32* %mode.addr, align 4, !dbg !6190
  %499 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6191
  %call1194 = call zeroext i8 @truncated_to_mode(i32 %498, %struct.rtx_def* %499), !dbg !6192
  %conv1195 = zext i8 %call1194 to i32, !dbg !6192
  %tobool1196 = icmp ne i32 %conv1195, 0, !dbg !6192
  br i1 %tobool1196, label %land.lhs.true1197, label %if.end1213, !dbg !6180

land.lhs.true1197:                                ; preds = %cond.false1193, %cond.true1168
  %500 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6193
  %501 = bitcast %struct.rtx_def* %500 to i32*, !dbg !6193
  %bf.load1198 = load i32, i32* %501, align 8, !dbg !6193
  %bf.clear1199 = and i32 %bf.load1198, 65535, !dbg !6193
  %cmp1200 = icmp eq i32 %bf.clear1199, 68, !dbg !6194
  br i1 %cmp1200, label %land.lhs.true1202, label %if.then1211, !dbg !6195

land.lhs.true1202:                                ; preds = %land.lhs.true1197
  %502 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6196
  %u1203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1, !dbg !6196
  %fld1204 = bitcast %union.u* %u1203 to [1 x %union.rtunion_def]*, !dbg !6196
  %arrayidx1205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1204, i64 0, i64 0, !dbg !6196
  %rt_rtx1206 = bitcast %union.rtunion_def* %arrayidx1205 to %struct.rtx_def**, !dbg !6196
  %503 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1206, align 8, !dbg !6196
  %504 = bitcast %struct.rtx_def* %503 to i32*, !dbg !6196
  %bf.load1207 = load i32, i32* %504, align 8, !dbg !6196
  %bf.clear1208 = and i32 %bf.load1207, 65535, !dbg !6196
  %cmp1209 = icmp eq i32 %bf.clear1208, 52, !dbg !6197
  br i1 %cmp1209, label %if.end1213, label %if.then1211, !dbg !6198

if.then1211:                                      ; preds = %land.lhs.true1202, %land.lhs.true1197
  %505 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !6199
  %506 = load i32, i32* %mode.addr, align 4, !dbg !6200
  %507 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6201
  %call1212 = call %struct.rtx_def* %505(i32 %506, %struct.rtx_def* %507), !dbg !6202
  store %struct.rtx_def* %call1212, %struct.rtx_def** %retval, align 8, !dbg !6203
  br label %return, !dbg !6203

if.end1213:                                       ; preds = %land.lhs.true1202, %cond.false1193, %cond.true1168
  %508 = load i32, i32* %mode.addr, align 4, !dbg !6204
  %idxprom1214 = zext i32 %508 to i64, !dbg !6204
  %arrayidx1215 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1214, !dbg !6204
  %509 = load i8, i8* %arrayidx1215, align 1, !dbg !6204
  %conv1216 = zext i8 %509 to i16, !dbg !6204
  %conv1217 = zext i16 %conv1216 to i32, !dbg !6204
  %mul1218 = mul nsw i32 %conv1217, 8, !dbg !6204
  %conv1219 = trunc i32 %mul1218 to i16, !dbg !6204
  %conv1220 = zext i16 %conv1219 to i32, !dbg !6204
  %cmp1221 = icmp sle i32 %conv1220, 64, !dbg !6206
  br i1 %cmp1221, label %land.lhs.true1223, label %if.end1239, !dbg !6207

land.lhs.true1223:                                ; preds = %if.end1213
  %510 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6208
  %511 = bitcast %struct.rtx_def* %510 to i32*, !dbg !6208
  %bf.load1224 = load i32, i32* %511, align 8, !dbg !6208
  %bf.clear1225 = and i32 %bf.load1224, 65535, !dbg !6208
  %idxprom1226 = sext i32 %bf.clear1225 to i64, !dbg !6208
  %arrayidx1227 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1226, !dbg !6208
  %512 = load i32, i32* %arrayidx1227, align 4, !dbg !6208
  %and1228 = and i32 %512, -2, !dbg !6208
  %cmp1229 = icmp eq i32 %and1228, 0, !dbg !6208
  br i1 %cmp1229, label %land.lhs.true1231, label %if.end1239, !dbg !6209

land.lhs.true1231:                                ; preds = %land.lhs.true1223
  %513 = load i32, i32* %mode.addr, align 4, !dbg !6210
  %idxprom1232 = zext i32 %513 to i64, !dbg !6210
  %arrayidx1233 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom1232, !dbg !6210
  %514 = load i64, i64* %arrayidx1233, align 8, !dbg !6210
  %neg = xor i64 %514, -1, !dbg !6211
  %and1234 = and i64 1, %neg, !dbg !6212
  %cmp1235 = icmp eq i64 %and1234, 0, !dbg !6213
  br i1 %cmp1235, label %if.then1237, label %if.end1239, !dbg !6214

if.then1237:                                      ; preds = %land.lhs.true1231
  %515 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !6215
  %516 = load i32, i32* %mode.addr, align 4, !dbg !6216
  %517 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6217
  %call1238 = call %struct.rtx_def* %515(i32 %516, %struct.rtx_def* %517), !dbg !6218
  store %struct.rtx_def* %call1238, %struct.rtx_def** %retval, align 8, !dbg !6219
  br label %return, !dbg !6219

if.end1239:                                       ; preds = %land.lhs.true1231, %land.lhs.true1223, %if.end1213
  br label %sw.epilog1883, !dbg !6220

sw.bb1240:                                        ; preds = %entry
  %518 = load i32, i32* %mode.addr, align 4, !dbg !6221
  %idxprom1241 = zext i32 %518 to i64, !dbg !6221
  %arrayidx1242 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1241, !dbg !6221
  %519 = load i8, i8* %arrayidx1242, align 1, !dbg !6221
  %conv1243 = zext i8 %519 to i32, !dbg !6221
  %cmp1244 = icmp eq i32 %conv1243, 9, !dbg !6221
  br i1 %cmp1244, label %if.then1246, label %if.end1247, !dbg !6223

if.then1246:                                      ; preds = %sw.bb1240
  br label %sw.epilog1883, !dbg !6224

if.end1247:                                       ; preds = %sw.bb1240
  %520 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6225
  %521 = bitcast %struct.rtx_def* %520 to i32*, !dbg !6225
  %bf.load1248 = load i32, i32* %521, align 8, !dbg !6225
  %bf.clear1249 = and i32 %bf.load1248, 65535, !dbg !6225
  %cmp1250 = icmp eq i32 %bf.clear1249, 101, !dbg !6227
  br i1 %cmp1250, label %land.lhs.true1252, label %if.end1267, !dbg !6228

land.lhs.true1252:                                ; preds = %if.end1247
  %522 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6229
  %u1253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1, !dbg !6229
  %fld1254 = bitcast %union.u* %u1253 to [1 x %union.rtunion_def]*, !dbg !6229
  %arrayidx1255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1254, i64 0, i64 0, !dbg !6229
  %rt_rtx1256 = bitcast %union.rtunion_def* %arrayidx1255 to %struct.rtx_def**, !dbg !6229
  %523 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1256, align 8, !dbg !6229
  %524 = bitcast %struct.rtx_def* %523 to i32*, !dbg !6229
  %bf.load1257 = load i32, i32* %524, align 8, !dbg !6229
  %bf.lshr1258 = lshr i32 %bf.load1257, 16, !dbg !6229
  %bf.clear1259 = and i32 %bf.lshr1258, 255, !dbg !6229
  %525 = load i32, i32* %mode.addr, align 4, !dbg !6230
  %cmp1260 = icmp eq i32 %bf.clear1259, %525, !dbg !6231
  br i1 %cmp1260, label %if.then1262, label %if.end1267, !dbg !6232

if.then1262:                                      ; preds = %land.lhs.true1252
  %526 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6233
  %u1263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %526, i32 0, i32 1, !dbg !6233
  %fld1264 = bitcast %union.u* %u1263 to [1 x %union.rtunion_def]*, !dbg !6233
  %arrayidx1265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1264, i64 0, i64 0, !dbg !6233
  %rt_rtx1266 = bitcast %union.rtunion_def* %arrayidx1265 to %struct.rtx_def**, !dbg !6233
  %527 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1266, align 8, !dbg !6233
  store %struct.rtx_def* %527, %struct.rtx_def** %retval, align 8, !dbg !6234
  br label %return, !dbg !6234

if.end1267:                                       ; preds = %land.lhs.true1252, %if.end1247
  %528 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6235
  %529 = bitcast %struct.rtx_def* %528 to i32*, !dbg !6235
  %bf.load1268 = load i32, i32* %529, align 8, !dbg !6235
  %bf.clear1269 = and i32 %bf.load1268, 65535, !dbg !6235
  %cmp1270 = icmp eq i32 %bf.clear1269, 102, !dbg !6237
  br i1 %cmp1270, label %land.lhs.true1272, label %lor.lhs.false1274, !dbg !6238

land.lhs.true1272:                                ; preds = %if.end1267
  %530 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !6239
  %tobool1273 = icmp ne i32 %530, 0, !dbg !6239
  br i1 %tobool1273, label %if.then1279, label %lor.lhs.false1274, !dbg !6240

lor.lhs.false1274:                                ; preds = %land.lhs.true1272, %if.end1267
  %531 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6241
  %532 = bitcast %struct.rtx_def* %531 to i32*, !dbg !6241
  %bf.load1275 = load i32, i32* %532, align 8, !dbg !6241
  %bf.clear1276 = and i32 %bf.load1275, 65535, !dbg !6241
  %cmp1277 = icmp eq i32 %bf.clear1276, 101, !dbg !6242
  br i1 %cmp1277, label %if.then1279, label %if.end1303, !dbg !6243

if.then1279:                                      ; preds = %lor.lhs.false1274, %land.lhs.true1272
  %533 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6244
  %u1280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %533, i32 0, i32 1, !dbg !6244
  %fld1281 = bitcast %union.u* %u1280 to [1 x %union.rtunion_def]*, !dbg !6244
  %arrayidx1282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1281, i64 0, i64 0, !dbg !6244
  %rt_rtx1283 = bitcast %union.rtunion_def* %arrayidx1282 to %struct.rtx_def**, !dbg !6244
  %534 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1283, align 8, !dbg !6244
  %535 = bitcast %struct.rtx_def* %534 to i32*, !dbg !6244
  %bf.load1284 = load i32, i32* %535, align 8, !dbg !6244
  %bf.lshr1285 = lshr i32 %bf.load1284, 16, !dbg !6244
  %bf.clear1286 = and i32 %bf.lshr1285, 255, !dbg !6244
  %idxprom1287 = zext i32 %bf.clear1286 to i64, !dbg !6244
  %arrayidx1288 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1287, !dbg !6244
  %536 = load i8, i8* %arrayidx1288, align 1, !dbg !6244
  %conv1289 = zext i8 %536 to i16, !dbg !6244
  %conv1290 = zext i16 %conv1289 to i32, !dbg !6244
  %537 = load i32, i32* %mode.addr, align 4, !dbg !6245
  %idxprom1291 = zext i32 %537 to i64, !dbg !6245
  %arrayidx1292 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1291, !dbg !6245
  %538 = load i8, i8* %arrayidx1292, align 1, !dbg !6245
  %conv1293 = zext i8 %538 to i16, !dbg !6245
  %conv1294 = zext i16 %conv1293 to i32, !dbg !6245
  %cmp1295 = icmp sgt i32 %conv1290, %conv1294, !dbg !6246
  %539 = zext i1 %cmp1295 to i64, !dbg !6244
  %cond1297 = select i1 %cmp1295, i32 102, i32 101, !dbg !6244
  %540 = load i32, i32* %mode.addr, align 4, !dbg !6247
  %541 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6248
  %u1298 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1, !dbg !6248
  %fld1299 = bitcast %union.u* %u1298 to [1 x %union.rtunion_def]*, !dbg !6248
  %arrayidx1300 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1299, i64 0, i64 0, !dbg !6248
  %rt_rtx1301 = bitcast %union.rtunion_def* %arrayidx1300 to %struct.rtx_def**, !dbg !6248
  %542 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1301, align 8, !dbg !6248
  %543 = load i32, i32* %mode.addr, align 4, !dbg !6249
  %call1302 = call %struct.rtx_def* @simplify_gen_unary(i32 %cond1297, i32 %540, %struct.rtx_def* %542, i32 %543), !dbg !6250
  store %struct.rtx_def* %call1302, %struct.rtx_def** %retval, align 8, !dbg !6251
  br label %return, !dbg !6251

if.end1303:                                       ; preds = %lor.lhs.false1274
  %544 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6252
  %545 = bitcast %struct.rtx_def* %544 to i32*, !dbg !6252
  %bf.load1304 = load i32, i32* %545, align 8, !dbg !6252
  %bf.clear1305 = and i32 %bf.load1304, 65535, !dbg !6252
  %cmp1306 = icmp eq i32 %bf.clear1305, 103, !dbg !6254
  br i1 %cmp1306, label %land.lhs.true1308, label %if.end1375, !dbg !6255

land.lhs.true1308:                                ; preds = %if.end1303
  %546 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !6256
  %tobool1309 = icmp ne i32 %546, 0, !dbg !6256
  br i1 %tobool1309, label %if.then1362, label %lor.lhs.false1310, !dbg !6257

lor.lhs.false1310:                                ; preds = %land.lhs.true1308
  %547 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6258
  %548 = bitcast %struct.rtx_def* %547 to i32*, !dbg !6258
  %bf.load1311 = load i32, i32* %548, align 8, !dbg !6258
  %bf.lshr1312 = lshr i32 %bf.load1311, 16, !dbg !6258
  %bf.clear1313 = and i32 %bf.lshr1312, 255, !dbg !6258
  %idxprom1314 = zext i32 %bf.clear1313 to i64, !dbg !6258
  %arrayidx1315 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1314, !dbg !6258
  %549 = load i8, i8* %arrayidx1315, align 1, !dbg !6258
  %conv1316 = zext i8 %549 to i32, !dbg !6258
  %cmp1317 = icmp eq i32 %conv1316, 8, !dbg !6258
  br i1 %cmp1317, label %land.lhs.true1328, label %lor.lhs.false1319, !dbg !6258

lor.lhs.false1319:                                ; preds = %lor.lhs.false1310
  %550 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6258
  %551 = bitcast %struct.rtx_def* %550 to i32*, !dbg !6258
  %bf.load1320 = load i32, i32* %551, align 8, !dbg !6258
  %bf.lshr1321 = lshr i32 %bf.load1320, 16, !dbg !6258
  %bf.clear1322 = and i32 %bf.lshr1321, 255, !dbg !6258
  %idxprom1323 = zext i32 %bf.clear1322 to i64, !dbg !6258
  %arrayidx1324 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1323, !dbg !6258
  %552 = load i8, i8* %arrayidx1324, align 1, !dbg !6258
  %conv1325 = zext i8 %552 to i32, !dbg !6258
  %cmp1326 = icmp eq i32 %conv1325, 9, !dbg !6258
  br i1 %cmp1326, label %land.lhs.true1328, label %if.end1375, !dbg !6259

land.lhs.true1328:                                ; preds = %lor.lhs.false1319, %lor.lhs.false1310
  %553 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6260
  %554 = bitcast %struct.rtx_def* %553 to i32*, !dbg !6260
  %bf.load1329 = load i32, i32* %554, align 8, !dbg !6260
  %bf.lshr1330 = lshr i32 %bf.load1329, 16, !dbg !6260
  %bf.clear1331 = and i32 %bf.lshr1330, 255, !dbg !6260
  %call1332 = call i32 @significand_size(i32 %bf.clear1331), !dbg !6261
  %555 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6262
  %u1333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %555, i32 0, i32 1, !dbg !6262
  %fld1334 = bitcast %union.u* %u1333 to [1 x %union.rtunion_def]*, !dbg !6262
  %arrayidx1335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1334, i64 0, i64 0, !dbg !6262
  %rt_rtx1336 = bitcast %union.rtunion_def* %arrayidx1335 to %struct.rtx_def**, !dbg !6262
  %556 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1336, align 8, !dbg !6262
  %557 = bitcast %struct.rtx_def* %556 to i32*, !dbg !6262
  %bf.load1337 = load i32, i32* %557, align 8, !dbg !6262
  %bf.lshr1338 = lshr i32 %bf.load1337, 16, !dbg !6262
  %bf.clear1339 = and i32 %bf.lshr1338, 255, !dbg !6262
  %idxprom1340 = zext i32 %bf.clear1339 to i64, !dbg !6262
  %arrayidx1341 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1340, !dbg !6262
  %558 = load i8, i8* %arrayidx1341, align 1, !dbg !6262
  %conv1342 = zext i8 %558 to i16, !dbg !6262
  %conv1343 = zext i16 %conv1342 to i32, !dbg !6262
  %mul1344 = mul nsw i32 %conv1343, 8, !dbg !6262
  %conv1345 = trunc i32 %mul1344 to i16, !dbg !6262
  %conv1346 = zext i16 %conv1345 to i32, !dbg !6262
  %559 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6263
  %u1347 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %559, i32 0, i32 1, !dbg !6263
  %fld1348 = bitcast %union.u* %u1347 to [1 x %union.rtunion_def]*, !dbg !6263
  %arrayidx1349 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1348, i64 0, i64 0, !dbg !6263
  %rt_rtx1350 = bitcast %union.rtunion_def* %arrayidx1349 to %struct.rtx_def**, !dbg !6263
  %560 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1350, align 8, !dbg !6263
  %561 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6264
  %u1351 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %561, i32 0, i32 1, !dbg !6264
  %fld1352 = bitcast %union.u* %u1351 to [1 x %union.rtunion_def]*, !dbg !6264
  %arrayidx1353 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1352, i64 0, i64 0, !dbg !6264
  %rt_rtx1354 = bitcast %union.rtunion_def* %arrayidx1353 to %struct.rtx_def**, !dbg !6264
  %562 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1354, align 8, !dbg !6264
  %563 = bitcast %struct.rtx_def* %562 to i32*, !dbg !6264
  %bf.load1355 = load i32, i32* %563, align 8, !dbg !6264
  %bf.lshr1356 = lshr i32 %bf.load1355, 16, !dbg !6264
  %bf.clear1357 = and i32 %bf.lshr1356, 255, !dbg !6264
  %call1358 = call i32 @num_sign_bit_copies(%struct.rtx_def* %560, i32 %bf.clear1357), !dbg !6265
  %sub1359 = sub i32 %conv1346, %call1358, !dbg !6266
  %cmp1360 = icmp uge i32 %call1332, %sub1359, !dbg !6267
  br i1 %cmp1360, label %if.then1362, label %if.end1375, !dbg !6268

if.then1362:                                      ; preds = %land.lhs.true1328, %land.lhs.true1308
  %564 = load i32, i32* %mode.addr, align 4, !dbg !6269
  %565 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6270
  %u1363 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %565, i32 0, i32 1, !dbg !6270
  %fld1364 = bitcast %union.u* %u1363 to [1 x %union.rtunion_def]*, !dbg !6270
  %arrayidx1365 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1364, i64 0, i64 0, !dbg !6270
  %rt_rtx1366 = bitcast %union.rtunion_def* %arrayidx1365 to %struct.rtx_def**, !dbg !6270
  %566 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1366, align 8, !dbg !6270
  %567 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6271
  %u1367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %567, i32 0, i32 1, !dbg !6271
  %fld1368 = bitcast %union.u* %u1367 to [1 x %union.rtunion_def]*, !dbg !6271
  %arrayidx1369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1368, i64 0, i64 0, !dbg !6271
  %rt_rtx1370 = bitcast %union.rtunion_def* %arrayidx1369 to %struct.rtx_def**, !dbg !6271
  %568 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1370, align 8, !dbg !6271
  %569 = bitcast %struct.rtx_def* %568 to i32*, !dbg !6271
  %bf.load1371 = load i32, i32* %569, align 8, !dbg !6271
  %bf.lshr1372 = lshr i32 %bf.load1371, 16, !dbg !6271
  %bf.clear1373 = and i32 %bf.lshr1372, 255, !dbg !6271
  %call1374 = call %struct.rtx_def* @simplify_gen_unary(i32 103, i32 %564, %struct.rtx_def* %566, i32 %bf.clear1373), !dbg !6272
  store %struct.rtx_def* %call1374, %struct.rtx_def** %retval, align 8, !dbg !6273
  br label %return, !dbg !6273

if.end1375:                                       ; preds = %land.lhs.true1328, %lor.lhs.false1319, %if.end1303
  %570 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6274
  %571 = bitcast %struct.rtx_def* %570 to i32*, !dbg !6274
  %bf.load1376 = load i32, i32* %571, align 8, !dbg !6274
  %bf.clear1377 = and i32 %bf.load1376, 65535, !dbg !6274
  %cmp1378 = icmp eq i32 %bf.clear1377, 111, !dbg !6276
  br i1 %cmp1378, label %land.lhs.true1385, label %lor.lhs.false1380, !dbg !6277

lor.lhs.false1380:                                ; preds = %if.end1375
  %572 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6278
  %573 = bitcast %struct.rtx_def* %572 to i32*, !dbg !6278
  %bf.load1381 = load i32, i32* %573, align 8, !dbg !6278
  %bf.clear1382 = and i32 %bf.load1381, 65535, !dbg !6278
  %cmp1383 = icmp eq i32 %bf.clear1382, 51, !dbg !6279
  br i1 %cmp1383, label %land.lhs.true1385, label %if.end1420, !dbg !6280

land.lhs.true1385:                                ; preds = %lor.lhs.false1380, %if.end1375
  %574 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6281
  %u1386 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %574, i32 0, i32 1, !dbg !6281
  %fld1387 = bitcast %union.u* %u1386 to [1 x %union.rtunion_def]*, !dbg !6281
  %arrayidx1388 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1387, i64 0, i64 0, !dbg !6281
  %rt_rtx1389 = bitcast %union.rtunion_def* %arrayidx1388 to %struct.rtx_def**, !dbg !6281
  %575 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1389, align 8, !dbg !6281
  %576 = bitcast %struct.rtx_def* %575 to i32*, !dbg !6281
  %bf.load1390 = load i32, i32* %576, align 8, !dbg !6281
  %bf.clear1391 = and i32 %bf.load1390, 65535, !dbg !6281
  %cmp1392 = icmp eq i32 %bf.clear1391, 101, !dbg !6282
  br i1 %cmp1392, label %land.lhs.true1394, label %if.end1420, !dbg !6283

land.lhs.true1394:                                ; preds = %land.lhs.true1385
  %577 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6284
  %u1395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %577, i32 0, i32 1, !dbg !6284
  %fld1396 = bitcast %union.u* %u1395 to [1 x %union.rtunion_def]*, !dbg !6284
  %arrayidx1397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1396, i64 0, i64 0, !dbg !6284
  %rt_rtx1398 = bitcast %union.rtunion_def* %arrayidx1397 to %struct.rtx_def**, !dbg !6284
  %578 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1398, align 8, !dbg !6284
  %u1399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %578, i32 0, i32 1, !dbg !6284
  %fld1400 = bitcast %union.u* %u1399 to [1 x %union.rtunion_def]*, !dbg !6284
  %arrayidx1401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1400, i64 0, i64 0, !dbg !6284
  %rt_rtx1402 = bitcast %union.rtunion_def* %arrayidx1401 to %struct.rtx_def**, !dbg !6284
  %579 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1402, align 8, !dbg !6284
  %580 = bitcast %struct.rtx_def* %579 to i32*, !dbg !6284
  %bf.load1403 = load i32, i32* %580, align 8, !dbg !6284
  %bf.lshr1404 = lshr i32 %bf.load1403, 16, !dbg !6284
  %bf.clear1405 = and i32 %bf.lshr1404, 255, !dbg !6284
  %581 = load i32, i32* %mode.addr, align 4, !dbg !6285
  %cmp1406 = icmp eq i32 %bf.clear1405, %581, !dbg !6286
  br i1 %cmp1406, label %if.then1408, label %if.end1420, !dbg !6287

if.then1408:                                      ; preds = %land.lhs.true1394
  %582 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6288
  %583 = bitcast %struct.rtx_def* %582 to i32*, !dbg !6288
  %bf.load1409 = load i32, i32* %583, align 8, !dbg !6288
  %bf.clear1410 = and i32 %bf.load1409, 65535, !dbg !6288
  %584 = load i32, i32* %mode.addr, align 4, !dbg !6289
  %585 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6290
  %u1411 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %585, i32 0, i32 1, !dbg !6290
  %fld1412 = bitcast %union.u* %u1411 to [1 x %union.rtunion_def]*, !dbg !6290
  %arrayidx1413 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1412, i64 0, i64 0, !dbg !6290
  %rt_rtx1414 = bitcast %union.rtunion_def* %arrayidx1413 to %struct.rtx_def**, !dbg !6290
  %586 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1414, align 8, !dbg !6290
  %u1415 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %586, i32 0, i32 1, !dbg !6290
  %fld1416 = bitcast %union.u* %u1415 to [1 x %union.rtunion_def]*, !dbg !6290
  %arrayidx1417 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1416, i64 0, i64 0, !dbg !6290
  %rt_rtx1418 = bitcast %union.rtunion_def* %arrayidx1417 to %struct.rtx_def**, !dbg !6290
  %587 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1418, align 8, !dbg !6290
  %588 = load i32, i32* %mode.addr, align 4, !dbg !6291
  %call1419 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear1410, i32 %584, %struct.rtx_def* %587, i32 %588), !dbg !6292
  store %struct.rtx_def* %call1419, %struct.rtx_def** %retval, align 8, !dbg !6293
  br label %return, !dbg !6293

if.end1420:                                       ; preds = %land.lhs.true1394, %land.lhs.true1385, %lor.lhs.false1380
  %589 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6294
  %590 = bitcast %struct.rtx_def* %589 to i32*, !dbg !6294
  %bf.load1421 = load i32, i32* %590, align 8, !dbg !6294
  %bf.clear1422 = and i32 %bf.load1421, 65535, !dbg !6294
  %cmp1423 = icmp eq i32 %bf.clear1422, 39, !dbg !6296
  br i1 %cmp1423, label %land.lhs.true1425, label %if.end1442, !dbg !6297

land.lhs.true1425:                                ; preds = %if.end1420
  %591 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6298
  %call1426 = call i32 @subreg_lowpart_p(%struct.rtx_def* %591), !dbg !6299
  %tobool1427 = icmp ne i32 %call1426, 0, !dbg !6299
  br i1 %tobool1427, label %land.lhs.true1428, label %if.end1442, !dbg !6300

land.lhs.true1428:                                ; preds = %land.lhs.true1425
  %592 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6301
  %u1429 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %592, i32 0, i32 1, !dbg !6301
  %fld1430 = bitcast %union.u* %u1429 to [1 x %union.rtunion_def]*, !dbg !6301
  %arrayidx1431 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1430, i64 0, i64 0, !dbg !6301
  %rt_rtx1432 = bitcast %union.rtunion_def* %arrayidx1431 to %struct.rtx_def**, !dbg !6301
  %593 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1432, align 8, !dbg !6301
  %594 = bitcast %struct.rtx_def* %593 to i32*, !dbg !6301
  %bf.load1433 = load i32, i32* %594, align 8, !dbg !6301
  %bf.clear1434 = and i32 %bf.load1433, 65535, !dbg !6301
  %cmp1435 = icmp eq i32 %bf.clear1434, 102, !dbg !6302
  br i1 %cmp1435, label %if.then1437, label %if.end1442, !dbg !6303

if.then1437:                                      ; preds = %land.lhs.true1428
  %595 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6304
  %u1438 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %595, i32 0, i32 1, !dbg !6304
  %fld1439 = bitcast %union.u* %u1438 to [1 x %union.rtunion_def]*, !dbg !6304
  %arrayidx1440 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1439, i64 0, i64 0, !dbg !6304
  %rt_rtx1441 = bitcast %union.rtunion_def* %arrayidx1440 to %struct.rtx_def**, !dbg !6304
  %596 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1441, align 8, !dbg !6304
  store %struct.rtx_def* %596, %struct.rtx_def** %retval, align 8, !dbg !6305
  br label %return, !dbg !6305

if.end1442:                                       ; preds = %land.lhs.true1428, %land.lhs.true1425, %if.end1420
  br label %sw.epilog1883, !dbg !6306

sw.bb1443:                                        ; preds = %entry
  %597 = load i32, i32* %mode.addr, align 4, !dbg !6307
  %idxprom1444 = zext i32 %597 to i64, !dbg !6307
  %arrayidx1445 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1444, !dbg !6307
  %598 = load i8, i8* %arrayidx1445, align 1, !dbg !6307
  %conv1446 = zext i8 %598 to i32, !dbg !6307
  %cmp1447 = icmp eq i32 %conv1446, 9, !dbg !6307
  br i1 %cmp1447, label %if.then1449, label %if.end1450, !dbg !6309

if.then1449:                                      ; preds = %sw.bb1443
  br label %sw.epilog1883, !dbg !6310

if.end1450:                                       ; preds = %sw.bb1443
  %599 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6311
  %600 = bitcast %struct.rtx_def* %599 to i32*, !dbg !6311
  %bf.load1451 = load i32, i32* %600, align 8, !dbg !6311
  %bf.clear1452 = and i32 %bf.load1451, 65535, !dbg !6311
  %cmp1453 = icmp eq i32 %bf.clear1452, 101, !dbg !6313
  br i1 %cmp1453, label %if.then1512, label %lor.lhs.false1455, !dbg !6314

lor.lhs.false1455:                                ; preds = %if.end1450
  %601 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6315
  %602 = bitcast %struct.rtx_def* %601 to i32*, !dbg !6315
  %bf.load1456 = load i32, i32* %602, align 8, !dbg !6315
  %bf.clear1457 = and i32 %bf.load1456, 65535, !dbg !6315
  %cmp1458 = icmp eq i32 %bf.clear1457, 103, !dbg !6316
  br i1 %cmp1458, label %land.lhs.true1460, label %if.end1527, !dbg !6317

land.lhs.true1460:                                ; preds = %lor.lhs.false1455
  %603 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6318
  %604 = bitcast %struct.rtx_def* %603 to i32*, !dbg !6318
  %bf.load1461 = load i32, i32* %604, align 8, !dbg !6318
  %bf.lshr1462 = lshr i32 %bf.load1461, 16, !dbg !6318
  %bf.clear1463 = and i32 %bf.lshr1462, 255, !dbg !6318
  %idxprom1464 = zext i32 %bf.clear1463 to i64, !dbg !6318
  %arrayidx1465 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1464, !dbg !6318
  %605 = load i8, i8* %arrayidx1465, align 1, !dbg !6318
  %conv1466 = zext i8 %605 to i32, !dbg !6318
  %cmp1467 = icmp eq i32 %conv1466, 8, !dbg !6318
  br i1 %cmp1467, label %land.lhs.true1478, label %lor.lhs.false1469, !dbg !6318

lor.lhs.false1469:                                ; preds = %land.lhs.true1460
  %606 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6318
  %607 = bitcast %struct.rtx_def* %606 to i32*, !dbg !6318
  %bf.load1470 = load i32, i32* %607, align 8, !dbg !6318
  %bf.lshr1471 = lshr i32 %bf.load1470, 16, !dbg !6318
  %bf.clear1472 = and i32 %bf.lshr1471, 255, !dbg !6318
  %idxprom1473 = zext i32 %bf.clear1472 to i64, !dbg !6318
  %arrayidx1474 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1473, !dbg !6318
  %608 = load i8, i8* %arrayidx1474, align 1, !dbg !6318
  %conv1475 = zext i8 %608 to i32, !dbg !6318
  %cmp1476 = icmp eq i32 %conv1475, 9, !dbg !6318
  br i1 %cmp1476, label %land.lhs.true1478, label %if.end1527, !dbg !6319

land.lhs.true1478:                                ; preds = %lor.lhs.false1469, %land.lhs.true1460
  %609 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6320
  %610 = bitcast %struct.rtx_def* %609 to i32*, !dbg !6320
  %bf.load1479 = load i32, i32* %610, align 8, !dbg !6320
  %bf.lshr1480 = lshr i32 %bf.load1479, 16, !dbg !6320
  %bf.clear1481 = and i32 %bf.lshr1480, 255, !dbg !6320
  %call1482 = call i32 @significand_size(i32 %bf.clear1481), !dbg !6321
  %611 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6322
  %u1483 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %611, i32 0, i32 1, !dbg !6322
  %fld1484 = bitcast %union.u* %u1483 to [1 x %union.rtunion_def]*, !dbg !6322
  %arrayidx1485 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1484, i64 0, i64 0, !dbg !6322
  %rt_rtx1486 = bitcast %union.rtunion_def* %arrayidx1485 to %struct.rtx_def**, !dbg !6322
  %612 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1486, align 8, !dbg !6322
  %613 = bitcast %struct.rtx_def* %612 to i32*, !dbg !6322
  %bf.load1487 = load i32, i32* %613, align 8, !dbg !6322
  %bf.lshr1488 = lshr i32 %bf.load1487, 16, !dbg !6322
  %bf.clear1489 = and i32 %bf.lshr1488, 255, !dbg !6322
  %idxprom1490 = zext i32 %bf.clear1489 to i64, !dbg !6322
  %arrayidx1491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1490, !dbg !6322
  %614 = load i8, i8* %arrayidx1491, align 1, !dbg !6322
  %conv1492 = zext i8 %614 to i16, !dbg !6322
  %conv1493 = zext i16 %conv1492 to i32, !dbg !6322
  %mul1494 = mul nsw i32 %conv1493, 8, !dbg !6322
  %conv1495 = trunc i32 %mul1494 to i16, !dbg !6322
  %conv1496 = zext i16 %conv1495 to i32, !dbg !6322
  %615 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6323
  %u1497 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %615, i32 0, i32 1, !dbg !6323
  %fld1498 = bitcast %union.u* %u1497 to [1 x %union.rtunion_def]*, !dbg !6323
  %arrayidx1499 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1498, i64 0, i64 0, !dbg !6323
  %rt_rtx1500 = bitcast %union.rtunion_def* %arrayidx1499 to %struct.rtx_def**, !dbg !6323
  %616 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1500, align 8, !dbg !6323
  %617 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6324
  %u1501 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %617, i32 0, i32 1, !dbg !6324
  %fld1502 = bitcast %union.u* %u1501 to [1 x %union.rtunion_def]*, !dbg !6324
  %arrayidx1503 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1502, i64 0, i64 0, !dbg !6324
  %rt_rtx1504 = bitcast %union.rtunion_def* %arrayidx1503 to %struct.rtx_def**, !dbg !6324
  %618 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1504, align 8, !dbg !6324
  %619 = bitcast %struct.rtx_def* %618 to i32*, !dbg !6324
  %bf.load1505 = load i32, i32* %619, align 8, !dbg !6324
  %bf.lshr1506 = lshr i32 %bf.load1505, 16, !dbg !6324
  %bf.clear1507 = and i32 %bf.lshr1506, 255, !dbg !6324
  %call1508 = call i32 @num_sign_bit_copies(%struct.rtx_def* %616, i32 %bf.clear1507), !dbg !6325
  %sub1509 = sub i32 %conv1496, %call1508, !dbg !6326
  %cmp1510 = icmp uge i32 %call1482, %sub1509, !dbg !6327
  br i1 %cmp1510, label %if.then1512, label %if.end1527, !dbg !6328

if.then1512:                                      ; preds = %land.lhs.true1478, %if.end1450
  %620 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6329
  %621 = bitcast %struct.rtx_def* %620 to i32*, !dbg !6329
  %bf.load1513 = load i32, i32* %621, align 8, !dbg !6329
  %bf.clear1514 = and i32 %bf.load1513, 65535, !dbg !6329
  %622 = load i32, i32* %mode.addr, align 4, !dbg !6330
  %623 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6331
  %u1515 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %623, i32 0, i32 1, !dbg !6331
  %fld1516 = bitcast %union.u* %u1515 to [1 x %union.rtunion_def]*, !dbg !6331
  %arrayidx1517 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1516, i64 0, i64 0, !dbg !6331
  %rt_rtx1518 = bitcast %union.rtunion_def* %arrayidx1517 to %struct.rtx_def**, !dbg !6331
  %624 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1518, align 8, !dbg !6331
  %625 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6332
  %u1519 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %625, i32 0, i32 1, !dbg !6332
  %fld1520 = bitcast %union.u* %u1519 to [1 x %union.rtunion_def]*, !dbg !6332
  %arrayidx1521 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1520, i64 0, i64 0, !dbg !6332
  %rt_rtx1522 = bitcast %union.rtunion_def* %arrayidx1521 to %struct.rtx_def**, !dbg !6332
  %626 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1522, align 8, !dbg !6332
  %627 = bitcast %struct.rtx_def* %626 to i32*, !dbg !6332
  %bf.load1523 = load i32, i32* %627, align 8, !dbg !6332
  %bf.lshr1524 = lshr i32 %bf.load1523, 16, !dbg !6332
  %bf.clear1525 = and i32 %bf.lshr1524, 255, !dbg !6332
  %call1526 = call %struct.rtx_def* @simplify_gen_unary(i32 %bf.clear1514, i32 %622, %struct.rtx_def* %624, i32 %bf.clear1525), !dbg !6333
  store %struct.rtx_def* %call1526, %struct.rtx_def** %retval, align 8, !dbg !6334
  br label %return, !dbg !6334

if.end1527:                                       ; preds = %land.lhs.true1478, %lor.lhs.false1469, %lor.lhs.false1455
  br label %sw.epilog1883, !dbg !6335

sw.bb1528:                                        ; preds = %entry
  %628 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6336
  %629 = bitcast %struct.rtx_def* %628 to i32*, !dbg !6336
  %bf.load1529 = load i32, i32* %629, align 8, !dbg !6336
  %bf.clear1530 = and i32 %bf.load1529, 65535, !dbg !6336
  %cmp1531 = icmp eq i32 %bf.clear1530, 51, !dbg !6338
  br i1 %cmp1531, label %if.then1533, label %if.end1546, !dbg !6339

if.then1533:                                      ; preds = %sw.bb1528
  %630 = load i32, i32* %mode.addr, align 4, !dbg !6340
  %631 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6341
  %u1534 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %631, i32 0, i32 1, !dbg !6341
  %fld1535 = bitcast %union.u* %u1534 to [1 x %union.rtunion_def]*, !dbg !6341
  %arrayidx1536 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1535, i64 0, i64 0, !dbg !6341
  %rt_rtx1537 = bitcast %union.rtunion_def* %arrayidx1536 to %struct.rtx_def**, !dbg !6341
  %632 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1537, align 8, !dbg !6341
  %633 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6342
  %u1538 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %633, i32 0, i32 1, !dbg !6342
  %fld1539 = bitcast %union.u* %u1538 to [1 x %union.rtunion_def]*, !dbg !6342
  %arrayidx1540 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1539, i64 0, i64 0, !dbg !6342
  %rt_rtx1541 = bitcast %union.rtunion_def* %arrayidx1540 to %struct.rtx_def**, !dbg !6342
  %634 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1541, align 8, !dbg !6342
  %635 = bitcast %struct.rtx_def* %634 to i32*, !dbg !6342
  %bf.load1542 = load i32, i32* %635, align 8, !dbg !6342
  %bf.lshr1543 = lshr i32 %bf.load1542, 16, !dbg !6342
  %bf.clear1544 = and i32 %bf.lshr1543, 255, !dbg !6342
  %call1545 = call %struct.rtx_def* @simplify_gen_unary(i32 111, i32 %630, %struct.rtx_def* %632, i32 %bf.clear1544), !dbg !6343
  store %struct.rtx_def* %call1545, %struct.rtx_def** %retval, align 8, !dbg !6344
  br label %return, !dbg !6344

if.end1546:                                       ; preds = %sw.bb1528
  %636 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6345
  %637 = bitcast %struct.rtx_def* %636 to i32*, !dbg !6345
  %bf.load1547 = load i32, i32* %637, align 8, !dbg !6345
  %bf.lshr1548 = lshr i32 %bf.load1547, 16, !dbg !6345
  %bf.clear1549 = and i32 %bf.lshr1548, 255, !dbg !6345
  %cmp1550 = icmp eq i32 %bf.clear1549, 0, !dbg !6347
  br i1 %cmp1550, label %if.then1552, label %if.end1553, !dbg !6348

if.then1552:                                      ; preds = %if.end1546
  br label %sw.epilog1883, !dbg !6349

if.end1553:                                       ; preds = %if.end1546
  %638 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6350
  %639 = bitcast %struct.rtx_def* %638 to i32*, !dbg !6350
  %bf.load1554 = load i32, i32* %639, align 8, !dbg !6350
  %bf.clear1555 = and i32 %bf.load1554, 65535, !dbg !6350
  %cmp1556 = icmp eq i32 %bf.clear1555, 114, !dbg !6352
  br i1 %cmp1556, label %if.then1595, label %lor.lhs.false1558, !dbg !6353

lor.lhs.false1558:                                ; preds = %if.end1553
  %640 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6354
  %641 = bitcast %struct.rtx_def* %640 to i32*, !dbg !6354
  %bf.load1559 = load i32, i32* %641, align 8, !dbg !6354
  %bf.clear1560 = and i32 %bf.load1559, 65535, !dbg !6354
  %cmp1561 = icmp eq i32 %bf.clear1560, 111, !dbg !6355
  br i1 %cmp1561, label %if.then1595, label %lor.lhs.false1563, !dbg !6356

lor.lhs.false1563:                                ; preds = %lor.lhs.false1558
  %642 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6357
  %643 = bitcast %struct.rtx_def* %642 to i32*, !dbg !6357
  %bf.load1564 = load i32, i32* %643, align 8, !dbg !6357
  %bf.lshr1565 = lshr i32 %bf.load1564, 16, !dbg !6357
  %bf.clear1566 = and i32 %bf.lshr1565, 255, !dbg !6357
  %idxprom1567 = zext i32 %bf.clear1566 to i64, !dbg !6357
  %arrayidx1568 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1567, !dbg !6357
  %644 = load i8, i8* %arrayidx1568, align 1, !dbg !6357
  %conv1569 = zext i8 %644 to i16, !dbg !6357
  %conv1570 = zext i16 %conv1569 to i32, !dbg !6357
  %mul1571 = mul nsw i32 %conv1570, 8, !dbg !6357
  %conv1572 = trunc i32 %mul1571 to i16, !dbg !6357
  %conv1573 = zext i16 %conv1572 to i32, !dbg !6357
  %cmp1574 = icmp sle i32 %conv1573, 64, !dbg !6358
  br i1 %cmp1574, label %land.lhs.true1576, label %if.end1596, !dbg !6359

land.lhs.true1576:                                ; preds = %lor.lhs.false1563
  %645 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6360
  %646 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6361
  %647 = bitcast %struct.rtx_def* %646 to i32*, !dbg !6361
  %bf.load1577 = load i32, i32* %647, align 8, !dbg !6361
  %bf.lshr1578 = lshr i32 %bf.load1577, 16, !dbg !6361
  %bf.clear1579 = and i32 %bf.lshr1578, 255, !dbg !6361
  %call1580 = call i64 @nonzero_bits(%struct.rtx_def* %645, i32 %bf.clear1579), !dbg !6362
  %648 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6363
  %649 = bitcast %struct.rtx_def* %648 to i32*, !dbg !6363
  %bf.load1581 = load i32, i32* %649, align 8, !dbg !6363
  %bf.lshr1582 = lshr i32 %bf.load1581, 16, !dbg !6363
  %bf.clear1583 = and i32 %bf.lshr1582, 255, !dbg !6363
  %idxprom1584 = zext i32 %bf.clear1583 to i64, !dbg !6363
  %arrayidx1585 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1584, !dbg !6363
  %650 = load i8, i8* %arrayidx1585, align 1, !dbg !6363
  %conv1586 = zext i8 %650 to i16, !dbg !6363
  %conv1587 = zext i16 %conv1586 to i32, !dbg !6363
  %mul1588 = mul nsw i32 %conv1587, 8, !dbg !6363
  %conv1589 = trunc i32 %mul1588 to i16, !dbg !6363
  %conv1590 = zext i16 %conv1589 to i32, !dbg !6363
  %sub1591 = sub nsw i32 %conv1590, 1, !dbg !6364
  %sh_prom = zext i32 %sub1591 to i64, !dbg !6365
  %shl = shl i64 1, %sh_prom, !dbg !6365
  %and1592 = and i64 %call1580, %shl, !dbg !6366
  %cmp1593 = icmp eq i64 %and1592, 0, !dbg !6367
  br i1 %cmp1593, label %if.then1595, label %if.end1596, !dbg !6368

if.then1595:                                      ; preds = %land.lhs.true1576, %lor.lhs.false1558, %if.end1553
  %651 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6369
  store %struct.rtx_def* %651, %struct.rtx_def** %retval, align 8, !dbg !6370
  br label %return, !dbg !6370

if.end1596:                                       ; preds = %land.lhs.true1576, %lor.lhs.false1563
  %652 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6371
  %653 = load i32, i32* %mode.addr, align 4, !dbg !6373
  %call1597 = call i32 @num_sign_bit_copies(%struct.rtx_def* %652, i32 %653), !dbg !6374
  %654 = load i32, i32* %mode.addr, align 4, !dbg !6375
  %idxprom1598 = zext i32 %654 to i64, !dbg !6375
  %arrayidx1599 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1598, !dbg !6375
  %655 = load i8, i8* %arrayidx1599, align 1, !dbg !6375
  %conv1600 = zext i8 %655 to i16, !dbg !6375
  %conv1601 = zext i16 %conv1600 to i32, !dbg !6375
  %mul1602 = mul nsw i32 %conv1601, 8, !dbg !6375
  %conv1603 = trunc i32 %mul1602 to i16, !dbg !6375
  %conv1604 = zext i16 %conv1603 to i32, !dbg !6375
  %cmp1605 = icmp eq i32 %call1597, %conv1604, !dbg !6376
  br i1 %cmp1605, label %if.then1607, label %if.end1609, !dbg !6377

if.then1607:                                      ; preds = %if.end1596
  %656 = load i32, i32* %mode.addr, align 4, !dbg !6378
  %657 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6378
  %call1608 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %656, %struct.rtx_def* %657), !dbg !6378
  store %struct.rtx_def* %call1608, %struct.rtx_def** %retval, align 8, !dbg !6379
  br label %return, !dbg !6379

if.end1609:                                       ; preds = %if.end1596
  br label %sw.epilog1883, !dbg !6380

sw.bb1610:                                        ; preds = %entry
  %658 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6381
  %659 = bitcast %struct.rtx_def* %658 to i32*, !dbg !6381
  %bf.load1611 = load i32, i32* %659, align 8, !dbg !6381
  %bf.clear1612 = and i32 %bf.load1611, 65535, !dbg !6381
  %cmp1613 = icmp eq i32 %bf.clear1612, 98, !dbg !6383
  br i1 %cmp1613, label %if.then1620, label %lor.lhs.false1615, !dbg !6384

lor.lhs.false1615:                                ; preds = %sw.bb1610
  %660 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6385
  %661 = bitcast %struct.rtx_def* %660 to i32*, !dbg !6385
  %bf.load1616 = load i32, i32* %661, align 8, !dbg !6385
  %bf.clear1617 = and i32 %bf.load1616, 65535, !dbg !6385
  %cmp1618 = icmp eq i32 %bf.clear1617, 99, !dbg !6386
  br i1 %cmp1618, label %if.then1620, label %if.end1633, !dbg !6387

if.then1620:                                      ; preds = %lor.lhs.false1615, %sw.bb1610
  %662 = load i32, i32* %mode.addr, align 4, !dbg !6388
  %663 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6389
  %u1621 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %663, i32 0, i32 1, !dbg !6389
  %fld1622 = bitcast %union.u* %u1621 to [1 x %union.rtunion_def]*, !dbg !6389
  %arrayidx1623 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1622, i64 0, i64 0, !dbg !6389
  %rt_rtx1624 = bitcast %union.rtunion_def* %arrayidx1623 to %struct.rtx_def**, !dbg !6389
  %664 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1624, align 8, !dbg !6389
  %665 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6390
  %u1625 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %665, i32 0, i32 1, !dbg !6390
  %fld1626 = bitcast %union.u* %u1625 to [1 x %union.rtunion_def]*, !dbg !6390
  %arrayidx1627 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1626, i64 0, i64 0, !dbg !6390
  %rt_rtx1628 = bitcast %union.rtunion_def* %arrayidx1627 to %struct.rtx_def**, !dbg !6390
  %666 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1628, align 8, !dbg !6390
  %667 = bitcast %struct.rtx_def* %666 to i32*, !dbg !6390
  %bf.load1629 = load i32, i32* %667, align 8, !dbg !6390
  %bf.lshr1630 = lshr i32 %bf.load1629, 16, !dbg !6390
  %bf.clear1631 = and i32 %bf.lshr1630, 255, !dbg !6390
  %call1632 = call %struct.rtx_def* @simplify_gen_unary(i32 114, i32 %662, %struct.rtx_def* %664, i32 %bf.clear1631), !dbg !6391
  store %struct.rtx_def* %call1632, %struct.rtx_def** %retval, align 8, !dbg !6392
  br label %return, !dbg !6392

if.end1633:                                       ; preds = %lor.lhs.false1615
  br label %sw.epilog1883, !dbg !6393

sw.bb1634:                                        ; preds = %entry
  %668 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6394
  %669 = bitcast %struct.rtx_def* %668 to i32*, !dbg !6394
  %bf.load1635 = load i32, i32* %669, align 8, !dbg !6394
  %bf.clear1636 = and i32 %bf.load1635, 65535, !dbg !6394
  switch i32 %bf.clear1636, label %sw.default [
    i32 113, label %sw.bb1637
    i32 99, label %sw.bb1637
    i32 66, label %sw.bb1650
    i32 69, label %sw.bb1650
  ], !dbg !6395

sw.bb1637:                                        ; preds = %sw.bb1634, %sw.bb1634
  %670 = load i32, i32* %mode.addr, align 4, !dbg !6396
  %671 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6398
  %u1638 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %671, i32 0, i32 1, !dbg !6398
  %fld1639 = bitcast %union.u* %u1638 to [1 x %union.rtunion_def]*, !dbg !6398
  %arrayidx1640 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1639, i64 0, i64 0, !dbg !6398
  %rt_rtx1641 = bitcast %union.rtunion_def* %arrayidx1640 to %struct.rtx_def**, !dbg !6398
  %672 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1641, align 8, !dbg !6398
  %673 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6399
  %u1642 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %673, i32 0, i32 1, !dbg !6399
  %fld1643 = bitcast %union.u* %u1642 to [1 x %union.rtunion_def]*, !dbg !6399
  %arrayidx1644 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1643, i64 0, i64 0, !dbg !6399
  %rt_rtx1645 = bitcast %union.rtunion_def* %arrayidx1644 to %struct.rtx_def**, !dbg !6399
  %674 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1645, align 8, !dbg !6399
  %675 = bitcast %struct.rtx_def* %674 to i32*, !dbg !6399
  %bf.load1646 = load i32, i32* %675, align 8, !dbg !6399
  %bf.lshr1647 = lshr i32 %bf.load1646, 16, !dbg !6399
  %bf.clear1648 = and i32 %bf.lshr1647, 255, !dbg !6399
  %call1649 = call %struct.rtx_def* @simplify_gen_unary(i32 117, i32 %670, %struct.rtx_def* %672, i32 %bf.clear1648), !dbg !6400
  store %struct.rtx_def* %call1649, %struct.rtx_def** %retval, align 8, !dbg !6401
  br label %return, !dbg !6401

sw.bb1650:                                        ; preds = %sw.bb1634, %sw.bb1634
  %676 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6402
  %u1651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %676, i32 0, i32 1, !dbg !6402
  %fld1652 = bitcast %union.u* %u1651 to [1 x %union.rtunion_def]*, !dbg !6402
  %arrayidx1653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1652, i64 0, i64 1, !dbg !6402
  %rt_rtx1654 = bitcast %union.rtunion_def* %arrayidx1653 to %struct.rtx_def**, !dbg !6402
  %677 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1654, align 8, !dbg !6402
  %call1655 = call i32 @side_effects_p(%struct.rtx_def* %677), !dbg !6404
  %tobool1656 = icmp ne i32 %call1655, 0, !dbg !6404
  br i1 %tobool1656, label %if.end1670, label %if.then1657, !dbg !6405

if.then1657:                                      ; preds = %sw.bb1650
  %678 = load i32, i32* %mode.addr, align 4, !dbg !6406
  %679 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6407
  %u1658 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %679, i32 0, i32 1, !dbg !6407
  %fld1659 = bitcast %union.u* %u1658 to [1 x %union.rtunion_def]*, !dbg !6407
  %arrayidx1660 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1659, i64 0, i64 0, !dbg !6407
  %rt_rtx1661 = bitcast %union.rtunion_def* %arrayidx1660 to %struct.rtx_def**, !dbg !6407
  %680 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1661, align 8, !dbg !6407
  %681 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6408
  %u1662 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %681, i32 0, i32 1, !dbg !6408
  %fld1663 = bitcast %union.u* %u1662 to [1 x %union.rtunion_def]*, !dbg !6408
  %arrayidx1664 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1663, i64 0, i64 0, !dbg !6408
  %rt_rtx1665 = bitcast %union.rtunion_def* %arrayidx1664 to %struct.rtx_def**, !dbg !6408
  %682 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1665, align 8, !dbg !6408
  %683 = bitcast %struct.rtx_def* %682 to i32*, !dbg !6408
  %bf.load1666 = load i32, i32* %683, align 8, !dbg !6408
  %bf.lshr1667 = lshr i32 %bf.load1666, 16, !dbg !6408
  %bf.clear1668 = and i32 %bf.lshr1667, 255, !dbg !6408
  %call1669 = call %struct.rtx_def* @simplify_gen_unary(i32 117, i32 %678, %struct.rtx_def* %680, i32 %bf.clear1668), !dbg !6409
  store %struct.rtx_def* %call1669, %struct.rtx_def** %retval, align 8, !dbg !6410
  br label %return, !dbg !6410

if.end1670:                                       ; preds = %sw.bb1650
  br label %sw.epilog, !dbg !6411

sw.default:                                       ; preds = %sw.bb1634
  br label %sw.epilog, !dbg !6412

sw.epilog:                                        ; preds = %sw.default, %if.end1670
  br label %sw.epilog1883, !dbg !6413

sw.bb1671:                                        ; preds = %entry
  %684 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6414
  %685 = bitcast %struct.rtx_def* %684 to i32*, !dbg !6414
  %bf.load1672 = load i32, i32* %685, align 8, !dbg !6414
  %bf.clear1673 = and i32 %bf.load1672, 65535, !dbg !6414
  switch i32 %bf.clear1673, label %sw.default1708 [
    i32 64, label %sw.bb1674
    i32 113, label %sw.bb1674
    i32 99, label %sw.bb1674
    i32 98, label %sw.bb1674
    i32 66, label %sw.bb1687
    i32 69, label %sw.bb1687
  ], !dbg !6415

sw.bb1674:                                        ; preds = %sw.bb1671, %sw.bb1671, %sw.bb1671, %sw.bb1671
  %686 = load i32, i32* %mode.addr, align 4, !dbg !6416
  %687 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6418
  %u1675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %687, i32 0, i32 1, !dbg !6418
  %fld1676 = bitcast %union.u* %u1675 to [1 x %union.rtunion_def]*, !dbg !6418
  %arrayidx1677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1676, i64 0, i64 0, !dbg !6418
  %rt_rtx1678 = bitcast %union.rtunion_def* %arrayidx1677 to %struct.rtx_def**, !dbg !6418
  %688 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1678, align 8, !dbg !6418
  %689 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6419
  %u1679 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %689, i32 0, i32 1, !dbg !6419
  %fld1680 = bitcast %union.u* %u1679 to [1 x %union.rtunion_def]*, !dbg !6419
  %arrayidx1681 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1680, i64 0, i64 0, !dbg !6419
  %rt_rtx1682 = bitcast %union.rtunion_def* %arrayidx1681 to %struct.rtx_def**, !dbg !6419
  %690 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1682, align 8, !dbg !6419
  %691 = bitcast %struct.rtx_def* %690 to i32*, !dbg !6419
  %bf.load1683 = load i32, i32* %691, align 8, !dbg !6419
  %bf.lshr1684 = lshr i32 %bf.load1683, 16, !dbg !6419
  %bf.clear1685 = and i32 %bf.lshr1684, 255, !dbg !6419
  %call1686 = call %struct.rtx_def* @simplify_gen_unary(i32 118, i32 %686, %struct.rtx_def* %688, i32 %bf.clear1685), !dbg !6420
  store %struct.rtx_def* %call1686, %struct.rtx_def** %retval, align 8, !dbg !6421
  br label %return, !dbg !6421

sw.bb1687:                                        ; preds = %sw.bb1671, %sw.bb1671
  %692 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6422
  %u1688 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %692, i32 0, i32 1, !dbg !6422
  %fld1689 = bitcast %union.u* %u1688 to [1 x %union.rtunion_def]*, !dbg !6422
  %arrayidx1690 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1689, i64 0, i64 1, !dbg !6422
  %rt_rtx1691 = bitcast %union.rtunion_def* %arrayidx1690 to %struct.rtx_def**, !dbg !6422
  %693 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1691, align 8, !dbg !6422
  %call1692 = call i32 @side_effects_p(%struct.rtx_def* %693), !dbg !6424
  %tobool1693 = icmp ne i32 %call1692, 0, !dbg !6424
  br i1 %tobool1693, label %if.end1707, label %if.then1694, !dbg !6425

if.then1694:                                      ; preds = %sw.bb1687
  %694 = load i32, i32* %mode.addr, align 4, !dbg !6426
  %695 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6427
  %u1695 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %695, i32 0, i32 1, !dbg !6427
  %fld1696 = bitcast %union.u* %u1695 to [1 x %union.rtunion_def]*, !dbg !6427
  %arrayidx1697 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1696, i64 0, i64 0, !dbg !6427
  %rt_rtx1698 = bitcast %union.rtunion_def* %arrayidx1697 to %struct.rtx_def**, !dbg !6427
  %696 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1698, align 8, !dbg !6427
  %697 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6428
  %u1699 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %697, i32 0, i32 1, !dbg !6428
  %fld1700 = bitcast %union.u* %u1699 to [1 x %union.rtunion_def]*, !dbg !6428
  %arrayidx1701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1700, i64 0, i64 0, !dbg !6428
  %rt_rtx1702 = bitcast %union.rtunion_def* %arrayidx1701 to %struct.rtx_def**, !dbg !6428
  %698 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1702, align 8, !dbg !6428
  %699 = bitcast %struct.rtx_def* %698 to i32*, !dbg !6428
  %bf.load1703 = load i32, i32* %699, align 8, !dbg !6428
  %bf.lshr1704 = lshr i32 %bf.load1703, 16, !dbg !6428
  %bf.clear1705 = and i32 %bf.lshr1704, 255, !dbg !6428
  %call1706 = call %struct.rtx_def* @simplify_gen_unary(i32 118, i32 %694, %struct.rtx_def* %696, i32 %bf.clear1705), !dbg !6429
  store %struct.rtx_def* %call1706, %struct.rtx_def** %retval, align 8, !dbg !6430
  br label %return, !dbg !6430

if.end1707:                                       ; preds = %sw.bb1687
  br label %sw.epilog1709, !dbg !6431

sw.default1708:                                   ; preds = %sw.bb1671
  br label %sw.epilog1709, !dbg !6432

sw.epilog1709:                                    ; preds = %sw.default1708, %if.end1707
  br label %sw.epilog1883, !dbg !6433

sw.bb1710:                                        ; preds = %entry
  %700 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6434
  %701 = bitcast %struct.rtx_def* %700 to i32*, !dbg !6434
  %bf.load1711 = load i32, i32* %701, align 8, !dbg !6434
  %bf.clear1712 = and i32 %bf.load1711, 65535, !dbg !6434
  %cmp1713 = icmp eq i32 %bf.clear1712, 113, !dbg !6436
  br i1 %cmp1713, label %if.then1715, label %if.end1720, !dbg !6437

if.then1715:                                      ; preds = %sw.bb1710
  %702 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6438
  %u1716 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %702, i32 0, i32 1, !dbg !6438
  %fld1717 = bitcast %union.u* %u1716 to [1 x %union.rtunion_def]*, !dbg !6438
  %arrayidx1718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1717, i64 0, i64 0, !dbg !6438
  %rt_rtx1719 = bitcast %union.rtunion_def* %arrayidx1718 to %struct.rtx_def**, !dbg !6438
  %703 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1719, align 8, !dbg !6438
  store %struct.rtx_def* %703, %struct.rtx_def** %retval, align 8, !dbg !6439
  br label %return, !dbg !6439

if.end1720:                                       ; preds = %sw.bb1710
  br label %sw.epilog1883, !dbg !6440

sw.bb1721:                                        ; preds = %entry
  %704 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6441
  %705 = bitcast %struct.rtx_def* %704 to i32*, !dbg !6441
  %bf.load1722 = load i32, i32* %705, align 8, !dbg !6441
  %bf.clear1723 = and i32 %bf.load1722, 65535, !dbg !6441
  %cmp1724 = icmp eq i32 %bf.clear1723, 98, !dbg !6443
  br i1 %cmp1724, label %if.then1726, label %if.end1739, !dbg !6444

if.then1726:                                      ; preds = %sw.bb1721
  %706 = load i32, i32* %mode.addr, align 4, !dbg !6445
  %707 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6446
  %u1727 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %707, i32 0, i32 1, !dbg !6446
  %fld1728 = bitcast %union.u* %u1727 to [1 x %union.rtunion_def]*, !dbg !6446
  %arrayidx1729 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1728, i64 0, i64 0, !dbg !6446
  %rt_rtx1730 = bitcast %union.rtunion_def* %arrayidx1729 to %struct.rtx_def**, !dbg !6446
  %708 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1730, align 8, !dbg !6446
  %709 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6447
  %u1731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %709, i32 0, i32 1, !dbg !6447
  %fld1732 = bitcast %union.u* %u1731 to [1 x %union.rtunion_def]*, !dbg !6447
  %arrayidx1733 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1732, i64 0, i64 0, !dbg !6447
  %rt_rtx1734 = bitcast %union.rtunion_def* %arrayidx1733 to %struct.rtx_def**, !dbg !6447
  %710 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1734, align 8, !dbg !6447
  %711 = bitcast %struct.rtx_def* %710 to i32*, !dbg !6447
  %bf.load1735 = load i32, i32* %711, align 8, !dbg !6447
  %bf.lshr1736 = lshr i32 %bf.load1735, 16, !dbg !6447
  %bf.clear1737 = and i32 %bf.lshr1736, 255, !dbg !6447
  %call1738 = call %struct.rtx_def* @simplify_gen_unary(i32 103, i32 %706, %struct.rtx_def* %708, i32 %bf.clear1737), !dbg !6448
  store %struct.rtx_def* %call1738, %struct.rtx_def** %retval, align 8, !dbg !6449
  br label %return, !dbg !6449

if.end1739:                                       ; preds = %sw.bb1721
  br label %sw.epilog1883, !dbg !6450

sw.bb1740:                                        ; preds = %entry
  %712 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6451
  %713 = bitcast %struct.rtx_def* %712 to i32*, !dbg !6451
  %bf.load1741 = load i32, i32* %713, align 8, !dbg !6451
  %bf.clear1742 = and i32 %bf.load1741, 65535, !dbg !6451
  %cmp1743 = icmp eq i32 %bf.clear1742, 100, !dbg !6453
  br i1 %cmp1743, label %land.lhs.true1745, label %if.end1795, !dbg !6454

land.lhs.true1745:                                ; preds = %sw.bb1740
  %714 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6455
  %u1746 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %714, i32 0, i32 1, !dbg !6455
  %fld1747 = bitcast %union.u* %u1746 to [1 x %union.rtunion_def]*, !dbg !6455
  %arrayidx1748 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1747, i64 0, i64 0, !dbg !6455
  %rt_rtx1749 = bitcast %union.rtunion_def* %arrayidx1748 to %struct.rtx_def**, !dbg !6455
  %715 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1749, align 8, !dbg !6455
  %716 = bitcast %struct.rtx_def* %715 to i32*, !dbg !6455
  %bf.load1750 = load i32, i32* %716, align 8, !dbg !6455
  %bf.lshr1751 = lshr i32 %bf.load1750, 16, !dbg !6455
  %bf.clear1752 = and i32 %bf.lshr1751, 255, !dbg !6455
  %717 = load i32, i32* %mode.addr, align 4, !dbg !6456
  %cmp1753 = icmp eq i32 %bf.clear1752, %717, !dbg !6457
  br i1 %cmp1753, label %land.lhs.true1755, label %if.end1795, !dbg !6458

land.lhs.true1755:                                ; preds = %land.lhs.true1745
  %718 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6459
  %u1756 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %718, i32 0, i32 1, !dbg !6459
  %fld1757 = bitcast %union.u* %u1756 to [1 x %union.rtunion_def]*, !dbg !6459
  %arrayidx1758 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1757, i64 0, i64 0, !dbg !6459
  %rt_rtx1759 = bitcast %union.rtunion_def* %arrayidx1758 to %struct.rtx_def**, !dbg !6459
  %719 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1759, align 8, !dbg !6459
  %720 = bitcast %struct.rtx_def* %719 to i32*, !dbg !6459
  %bf.load1760 = load i32, i32* %720, align 8, !dbg !6459
  %bf.clear1761 = and i32 %bf.load1760, 65535, !dbg !6459
  %cmp1762 = icmp eq i32 %bf.clear1761, 50, !dbg !6460
  br i1 %cmp1762, label %land.lhs.true1764, label %if.end1795, !dbg !6461

land.lhs.true1764:                                ; preds = %land.lhs.true1755
  %721 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6462
  %u1765 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %721, i32 0, i32 1, !dbg !6462
  %fld1766 = bitcast %union.u* %u1765 to [1 x %union.rtunion_def]*, !dbg !6462
  %arrayidx1767 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1766, i64 0, i64 0, !dbg !6462
  %rt_rtx1768 = bitcast %union.rtunion_def* %arrayidx1767 to %struct.rtx_def**, !dbg !6462
  %722 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1768, align 8, !dbg !6462
  %u1769 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %722, i32 0, i32 1, !dbg !6462
  %fld1770 = bitcast %union.u* %u1769 to [1 x %union.rtunion_def]*, !dbg !6462
  %arrayidx1771 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1770, i64 0, i64 0, !dbg !6462
  %rt_rtx1772 = bitcast %union.rtunion_def* %arrayidx1771 to %struct.rtx_def**, !dbg !6462
  %723 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1772, align 8, !dbg !6462
  %724 = bitcast %struct.rtx_def* %723 to i32*, !dbg !6462
  %bf.load1773 = load i32, i32* %724, align 8, !dbg !6462
  %bf.clear1774 = and i32 %bf.load1773, 65535, !dbg !6462
  %cmp1775 = icmp eq i32 %bf.clear1774, 44, !dbg !6463
  br i1 %cmp1775, label %land.lhs.true1777, label %if.end1795, !dbg !6464

land.lhs.true1777:                                ; preds = %land.lhs.true1764
  %725 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6465
  %u1778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %725, i32 0, i32 1, !dbg !6465
  %fld1779 = bitcast %union.u* %u1778 to [1 x %union.rtunion_def]*, !dbg !6465
  %arrayidx1780 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1779, i64 0, i64 0, !dbg !6465
  %rt_rtx1781 = bitcast %union.rtunion_def* %arrayidx1780 to %struct.rtx_def**, !dbg !6465
  %726 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1781, align 8, !dbg !6465
  %u1782 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %726, i32 0, i32 1, !dbg !6465
  %fld1783 = bitcast %union.u* %u1782 to [1 x %union.rtunion_def]*, !dbg !6465
  %arrayidx1784 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1783, i64 0, i64 1, !dbg !6465
  %rt_rtx1785 = bitcast %union.rtunion_def* %arrayidx1784 to %struct.rtx_def**, !dbg !6465
  %727 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1785, align 8, !dbg !6465
  %728 = bitcast %struct.rtx_def* %727 to i32*, !dbg !6465
  %bf.load1786 = load i32, i32* %728, align 8, !dbg !6465
  %bf.clear1787 = and i32 %bf.load1786, 65535, !dbg !6465
  %cmp1788 = icmp eq i32 %bf.clear1787, 44, !dbg !6466
  br i1 %cmp1788, label %if.then1790, label %if.end1795, !dbg !6467

if.then1790:                                      ; preds = %land.lhs.true1777
  %729 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6468
  %u1791 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %729, i32 0, i32 1, !dbg !6468
  %fld1792 = bitcast %union.u* %u1791 to [1 x %union.rtunion_def]*, !dbg !6468
  %arrayidx1793 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1792, i64 0, i64 0, !dbg !6468
  %rt_rtx1794 = bitcast %union.rtunion_def* %arrayidx1793 to %struct.rtx_def**, !dbg !6468
  %730 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1794, align 8, !dbg !6468
  store %struct.rtx_def* %730, %struct.rtx_def** %retval, align 8, !dbg !6469
  br label %return, !dbg !6469

if.end1795:                                       ; preds = %land.lhs.true1777, %land.lhs.true1764, %land.lhs.true1755, %land.lhs.true1745, %sw.bb1740
  %731 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6470
  %732 = bitcast %struct.rtx_def* %731 to i32*, !dbg !6470
  %bf.load1796 = load i32, i32* %732, align 8, !dbg !6470
  %bf.clear1797 = and i32 %bf.load1796, 65535, !dbg !6470
  %cmp1798 = icmp eq i32 %bf.clear1797, 39, !dbg !6472
  br i1 %cmp1798, label %land.lhs.true1800, label %if.end1836, !dbg !6473

land.lhs.true1800:                                ; preds = %if.end1795
  %733 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6474
  %734 = bitcast %struct.rtx_def* %733 to i32*, !dbg !6474
  %bf.load1801 = load i32, i32* %734, align 8, !dbg !6474
  %bf.lshr1802 = lshr i32 %bf.load1801, 28, !dbg !6474
  %bf.clear1803 = and i32 %bf.lshr1802, 1, !dbg !6474
  %tobool1804 = icmp ne i32 %bf.clear1803, 0, !dbg !6474
  br i1 %tobool1804, label %land.lhs.true1805, label %if.end1836, !dbg !6475

land.lhs.true1805:                                ; preds = %land.lhs.true1800
  %735 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6476
  %736 = bitcast %struct.rtx_def* %735 to i32*, !dbg !6476
  %bf.load1806 = load i32, i32* %736, align 8, !dbg !6476
  %bf.lshr1807 = lshr i32 %bf.load1806, 27, !dbg !6476
  %bf.clear1808 = and i32 %bf.lshr1807, 1, !dbg !6476
  %tobool1809 = icmp ne i32 %bf.clear1808, 0, !dbg !6476
  br i1 %tobool1809, label %cond.true1810, label %cond.false1811, !dbg !6477

cond.true1810:                                    ; preds = %land.lhs.true1805
  br i1 true, label %if.end1836, label %land.lhs.true1816, !dbg !6476

cond.false1811:                                   ; preds = %land.lhs.true1805
  %737 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6476
  %738 = bitcast %struct.rtx_def* %737 to i32*, !dbg !6476
  %bf.load1812 = load i32, i32* %738, align 8, !dbg !6476
  %bf.lshr1813 = lshr i32 %bf.load1812, 26, !dbg !6476
  %bf.clear1814 = and i32 %bf.lshr1813, 1, !dbg !6476
  %tobool1815 = icmp ne i32 %bf.clear1814, 0, !dbg !6476
  br i1 %tobool1815, label %if.end1836, label %land.lhs.true1816, !dbg !6477

land.lhs.true1816:                                ; preds = %cond.false1811, %cond.true1810
  %739 = load i32, i32* %mode.addr, align 4, !dbg !6478
  %idxprom1817 = zext i32 %739 to i64, !dbg !6478
  %arrayidx1818 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1817, !dbg !6478
  %740 = load i8, i8* %arrayidx1818, align 1, !dbg !6478
  %conv1819 = zext i8 %740 to i16, !dbg !6478
  %conv1820 = zext i16 %conv1819 to i32, !dbg !6478
  %741 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6479
  %u1821 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %741, i32 0, i32 1, !dbg !6479
  %fld1822 = bitcast %union.u* %u1821 to [1 x %union.rtunion_def]*, !dbg !6479
  %arrayidx1823 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1822, i64 0, i64 0, !dbg !6479
  %rt_rtx1824 = bitcast %union.rtunion_def* %arrayidx1823 to %struct.rtx_def**, !dbg !6479
  %742 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1824, align 8, !dbg !6479
  %743 = bitcast %struct.rtx_def* %742 to i32*, !dbg !6479
  %bf.load1825 = load i32, i32* %743, align 8, !dbg !6479
  %bf.lshr1826 = lshr i32 %bf.load1825, 16, !dbg !6479
  %bf.clear1827 = and i32 %bf.lshr1826, 255, !dbg !6479
  %idxprom1828 = zext i32 %bf.clear1827 to i64, !dbg !6479
  %arrayidx1829 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1828, !dbg !6479
  %744 = load i8, i8* %arrayidx1829, align 1, !dbg !6479
  %conv1830 = zext i8 %744 to i16, !dbg !6479
  %conv1831 = zext i16 %conv1830 to i32, !dbg !6479
  %cmp1832 = icmp sle i32 %conv1820, %conv1831, !dbg !6480
  br i1 %cmp1832, label %if.then1834, label %if.end1836, !dbg !6481

if.then1834:                                      ; preds = %land.lhs.true1816
  %745 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !6482
  %746 = load i32, i32* %mode.addr, align 4, !dbg !6483
  %747 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6484
  %call1835 = call %struct.rtx_def* %745(i32 %746, %struct.rtx_def* %747), !dbg !6485
  store %struct.rtx_def* %call1835, %struct.rtx_def** %retval, align 8, !dbg !6486
  br label %return, !dbg !6486

if.end1836:                                       ; preds = %land.lhs.true1816, %cond.false1811, %cond.true1810, %land.lhs.true1800, %if.end1795
  br label %sw.epilog1883, !dbg !6487

sw.bb1837:                                        ; preds = %entry
  %748 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6488
  %749 = bitcast %struct.rtx_def* %748 to i32*, !dbg !6488
  %bf.load1838 = load i32, i32* %749, align 8, !dbg !6488
  %bf.clear1839 = and i32 %bf.load1838, 65535, !dbg !6488
  %cmp1840 = icmp eq i32 %bf.clear1839, 39, !dbg !6490
  br i1 %cmp1840, label %land.lhs.true1842, label %if.end1881, !dbg !6491

land.lhs.true1842:                                ; preds = %sw.bb1837
  %750 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6492
  %751 = bitcast %struct.rtx_def* %750 to i32*, !dbg !6492
  %bf.load1843 = load i32, i32* %751, align 8, !dbg !6492
  %bf.lshr1844 = lshr i32 %bf.load1843, 28, !dbg !6492
  %bf.clear1845 = and i32 %bf.lshr1844, 1, !dbg !6492
  %tobool1846 = icmp ne i32 %bf.clear1845, 0, !dbg !6492
  br i1 %tobool1846, label %land.lhs.true1847, label %if.end1881, !dbg !6493

land.lhs.true1847:                                ; preds = %land.lhs.true1842
  %752 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6494
  %753 = bitcast %struct.rtx_def* %752 to i32*, !dbg !6494
  %bf.load1848 = load i32, i32* %753, align 8, !dbg !6494
  %bf.lshr1849 = lshr i32 %bf.load1848, 27, !dbg !6494
  %bf.clear1850 = and i32 %bf.lshr1849, 1, !dbg !6494
  %tobool1851 = icmp ne i32 %bf.clear1850, 0, !dbg !6494
  br i1 %tobool1851, label %cond.true1852, label %cond.false1853, !dbg !6494

cond.true1852:                                    ; preds = %land.lhs.true1847
  br label %cond.end1857, !dbg !6494

cond.false1853:                                   ; preds = %land.lhs.true1847
  %754 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6494
  %755 = bitcast %struct.rtx_def* %754 to i32*, !dbg !6494
  %bf.load1854 = load i32, i32* %755, align 8, !dbg !6494
  %bf.lshr1855 = lshr i32 %bf.load1854, 26, !dbg !6494
  %bf.clear1856 = and i32 %bf.lshr1855, 1, !dbg !6494
  br label %cond.end1857, !dbg !6494

cond.end1857:                                     ; preds = %cond.false1853, %cond.true1852
  %cond1858 = phi i32 [ -1, %cond.true1852 ], [ %bf.clear1856, %cond.false1853 ], !dbg !6494
  %cmp1859 = icmp sgt i32 %cond1858, 0, !dbg !6495
  br i1 %cmp1859, label %land.lhs.true1861, label %if.end1881, !dbg !6496

land.lhs.true1861:                                ; preds = %cond.end1857
  %756 = load i32, i32* %mode.addr, align 4, !dbg !6497
  %idxprom1862 = zext i32 %756 to i64, !dbg !6497
  %arrayidx1863 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1862, !dbg !6497
  %757 = load i8, i8* %arrayidx1863, align 1, !dbg !6497
  %conv1864 = zext i8 %757 to i16, !dbg !6497
  %conv1865 = zext i16 %conv1864 to i32, !dbg !6497
  %758 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6498
  %u1866 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %758, i32 0, i32 1, !dbg !6498
  %fld1867 = bitcast %union.u* %u1866 to [1 x %union.rtunion_def]*, !dbg !6498
  %arrayidx1868 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1867, i64 0, i64 0, !dbg !6498
  %rt_rtx1869 = bitcast %union.rtunion_def* %arrayidx1868 to %struct.rtx_def**, !dbg !6498
  %759 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1869, align 8, !dbg !6498
  %760 = bitcast %struct.rtx_def* %759 to i32*, !dbg !6498
  %bf.load1870 = load i32, i32* %760, align 8, !dbg !6498
  %bf.lshr1871 = lshr i32 %bf.load1870, 16, !dbg !6498
  %bf.clear1872 = and i32 %bf.lshr1871, 255, !dbg !6498
  %idxprom1873 = zext i32 %bf.clear1872 to i64, !dbg !6498
  %arrayidx1874 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1873, !dbg !6498
  %761 = load i8, i8* %arrayidx1874, align 1, !dbg !6498
  %conv1875 = zext i8 %761 to i16, !dbg !6498
  %conv1876 = zext i16 %conv1875 to i32, !dbg !6498
  %cmp1877 = icmp sle i32 %conv1865, %conv1876, !dbg !6499
  br i1 %cmp1877, label %if.then1879, label %if.end1881, !dbg !6500

if.then1879:                                      ; preds = %land.lhs.true1861
  %762 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !6501
  %763 = load i32, i32* %mode.addr, align 4, !dbg !6502
  %764 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !6503
  %call1880 = call %struct.rtx_def* %762(i32 %763, %struct.rtx_def* %764), !dbg !6504
  store %struct.rtx_def* %call1880, %struct.rtx_def** %retval, align 8, !dbg !6505
  br label %return, !dbg !6505

if.end1881:                                       ; preds = %land.lhs.true1861, %cond.end1857, %land.lhs.true1842, %sw.bb1837
  br label %sw.epilog1883, !dbg !6506

sw.default1882:                                   ; preds = %entry
  br label %sw.epilog1883, !dbg !6507

sw.epilog1883:                                    ; preds = %sw.default1882, %if.end1881, %if.end1836, %if.end1739, %if.end1720, %sw.epilog1709, %sw.epilog, %if.end1633, %if.end1609, %if.then1552, %if.end1527, %if.then1449, %if.end1442, %if.then1246, %if.end1239, %if.then1049, %if.end1042, %if.end233
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6508
  br label %return, !dbg !6508

return:                                           ; preds = %sw.epilog1883, %if.then1879, %if.then1834, %if.then1790, %if.then1726, %if.then1715, %if.then1694, %sw.bb1674, %if.then1657, %sw.bb1637, %if.then1620, %if.then1607, %if.then1595, %if.then1533, %if.then1512, %if.then1437, %if.then1408, %if.then1362, %if.then1279, %if.then1262, %if.then1237, %if.then1211, %if.then1146, %if.then1117, %if.then1070, %if.end1040, %if.then1038, %if.then1027, %if.then958, %if.then928, %if.then885, %if.then847, %if.then824, %if.end710, %if.then703, %if.then467, %if.then267, %if.then256, %if.then239, %if.end227, %if.then168, %if.then113, %if.then95, %if.then63, %if.then38, %if.then28, %if.then8, %if.then
  %765 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !6509
  ret %struct.rtx_def* %765, !dbg !6509
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32, %struct.rtvec_def*) #2

declare dso_local void @real_from_integer(%struct.real_value*, i32, i64, i64, i32) #2

declare dso_local void @real_value_truncate(%struct.real_value* sret, i32, %struct.real_value* byval(%struct.real_value) align 8) #2

declare dso_local i32 @exact_log2(i64) #2

declare dso_local i32 @floor_log2(i64) #2

declare dso_local %struct.rtx_def* @gen_int_mode(i64, i32) #2

declare dso_local i32 @neg_double(i64, i64, i64*, i64*) #2

declare dso_local %struct.rtx_def* @immed_double_const(i64, i64, i32) #2

declare dso_local zeroext i8 @real_isnan(%struct.real_value*) #2

declare dso_local zeroext i8 @real_sqrt(%struct.real_value*, i32, %struct.real_value*) #2

declare dso_local void @real_arithmetic2(%struct.real_value* sret, i32, %struct.real_value*, %struct.real_value*) #2

declare dso_local zeroext i8 @real_arithmetic(%struct.real_value*, i32, %struct.real_value*, %struct.real_value*) #2

declare dso_local i64 @real_to_target(i64*, %struct.real_value*, i32) #2

declare dso_local void @real_from_target(%struct.real_value*, i64*, i32) #2

declare dso_local zeroext i8 @real_compare(i32, %struct.real_value*, %struct.real_value*) #2

declare dso_local void @real_to_integer2(i64*, i64*, %struct.real_value*) #2

declare dso_local zeroext i8 @real_isneg(%struct.real_value*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_const_binary_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !6510 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %arg0 = alloca i64, align 8
  %arg1 = alloca i64, align 8
  %arg0s = alloca i64, align 8
  %arg1s = alloca i64, align 8
  %val = alloca i64, align 8
  %width = alloca i32, align 4
  %n_elts = alloca i32, align 4
  %op0mode = alloca i32, align 4
  %op0_n_elts = alloca i32, align 4
  %op1mode = alloca i32, align 4
  %op1_n_elts = alloca i32, align 4
  %v = alloca %struct.rtvec_def*, align 8
  %i = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %n_elts160 = alloca i32, align 4
  %v164 = alloca %struct.rtvec_def*, align 8
  %op0_n_elts195 = alloca i32, align 4
  %op1_n_elts202 = alloca i32, align 4
  %i209 = alloca i32, align 4
  %tmp0 = alloca [4 x i64], align 16
  %tmp1 = alloca [4 x i64], align 16
  %r = alloca %struct.real_value, align 8
  %i313 = alloca i32, align 4
  %f0 = alloca %struct.real_value, align 8
  %f1 = alloca %struct.real_value, align 8
  %value = alloca %struct.real_value, align 8
  %result = alloca %struct.real_value, align 8
  %inexact = alloca i8, align 1
  %s0 = alloca i32, align 4
  %s1 = alloca i32, align 4
  %l1 = alloca i64, align 8
  %l2 = alloca i64, align 8
  %lv = alloca i64, align 8
  %lt = alloca i64, align 8
  %h1 = alloca i64, align 8
  %h2 = alloca i64, align 8
  %hv = alloca i64, align 8
  %ht = alloca i64, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !6511, metadata !DIExpression()), !dbg !6512
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6513, metadata !DIExpression()), !dbg !6514
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !6515, metadata !DIExpression()), !dbg !6516
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !6517, metadata !DIExpression()), !dbg !6518
  call void @llvm.dbg.declare(metadata i64* %arg0, metadata !6519, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata i64* %arg1, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i64* %arg0s, metadata !6523, metadata !DIExpression()), !dbg !6524
  call void @llvm.dbg.declare(metadata i64* %arg1s, metadata !6525, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.declare(metadata i64* %val, metadata !6527, metadata !DIExpression()), !dbg !6528
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6529, metadata !DIExpression()), !dbg !6530
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6531
  %idxprom = zext i32 %0 to i64, !dbg !6531
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !6531
  %1 = load i8, i8* %arrayidx, align 1, !dbg !6531
  %conv = zext i8 %1 to i16, !dbg !6531
  %conv1 = zext i16 %conv to i32, !dbg !6531
  %mul = mul nsw i32 %conv1, 8, !dbg !6531
  %conv2 = trunc i32 %mul to i16, !dbg !6531
  %conv3 = zext i16 %conv2 to i32, !dbg !6531
  store i32 %conv3, i32* %width, align 4, !dbg !6530
  %2 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom4 = zext i32 %2 to i64, !dbg !6532
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4, !dbg !6532
  %3 = load i8, i8* %arrayidx5, align 1, !dbg !6532
  %conv6 = zext i8 %3 to i32, !dbg !6532
  %cmp = icmp eq i32 %conv6, 12, !dbg !6532
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !6532

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom8 = zext i32 %4 to i64, !dbg !6532
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom8, !dbg !6532
  %5 = load i8, i8* %arrayidx9, align 1, !dbg !6532
  %conv10 = zext i8 %5 to i32, !dbg !6532
  %cmp11 = icmp eq i32 %conv10, 17, !dbg !6532
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false13, !dbg !6532

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %6 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom14 = zext i32 %6 to i64, !dbg !6532
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom14, !dbg !6532
  %7 = load i8, i8* %arrayidx15, align 1, !dbg !6532
  %conv16 = zext i8 %7 to i32, !dbg !6532
  %cmp17 = icmp eq i32 %conv16, 13, !dbg !6532
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false19, !dbg !6532

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %8 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom20 = zext i32 %8 to i64, !dbg !6532
  %arrayidx21 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom20, !dbg !6532
  %9 = load i8, i8* %arrayidx21, align 1, !dbg !6532
  %conv22 = zext i8 %9 to i32, !dbg !6532
  %cmp23 = icmp eq i32 %conv22, 14, !dbg !6532
  br i1 %cmp23, label %land.lhs.true, label %lor.lhs.false25, !dbg !6532

lor.lhs.false25:                                  ; preds = %lor.lhs.false19
  %10 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom26 = zext i32 %10 to i64, !dbg !6532
  %arrayidx27 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom26, !dbg !6532
  %11 = load i8, i8* %arrayidx27, align 1, !dbg !6532
  %conv28 = zext i8 %11 to i32, !dbg !6532
  %cmp29 = icmp eq i32 %conv28, 15, !dbg !6532
  br i1 %cmp29, label %land.lhs.true, label %lor.lhs.false31, !dbg !6532

lor.lhs.false31:                                  ; preds = %lor.lhs.false25
  %12 = load i32, i32* %mode.addr, align 4, !dbg !6532
  %idxprom32 = zext i32 %12 to i64, !dbg !6532
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom32, !dbg !6532
  %13 = load i8, i8* %arrayidx33, align 1, !dbg !6532
  %conv34 = zext i8 %13 to i32, !dbg !6532
  %cmp35 = icmp eq i32 %conv34, 16, !dbg !6532
  br i1 %cmp35, label %land.lhs.true, label %if.end90, !dbg !6534

land.lhs.true:                                    ; preds = %lor.lhs.false31, %lor.lhs.false25, %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false, %entry
  %14 = load i32, i32* %code.addr, align 4, !dbg !6535
  %cmp37 = icmp ne i32 %14, 125, !dbg !6536
  br i1 %cmp37, label %land.lhs.true39, label %if.end90, !dbg !6537

land.lhs.true39:                                  ; preds = %land.lhs.true
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6538
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !6538
  %bf.load = load i32, i32* %16, align 8, !dbg !6538
  %bf.clear = and i32 %bf.load, 65535, !dbg !6538
  %cmp40 = icmp eq i32 %bf.clear, 33, !dbg !6539
  br i1 %cmp40, label %land.lhs.true42, label %if.end90, !dbg !6540

land.lhs.true42:                                  ; preds = %land.lhs.true39
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6541
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !6541
  %bf.load43 = load i32, i32* %18, align 8, !dbg !6541
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !6541
  %cmp45 = icmp eq i32 %bf.clear44, 33, !dbg !6542
  br i1 %cmp45, label %if.then, label %if.end90, !dbg !6543

if.then:                                          ; preds = %land.lhs.true42
  call void @llvm.dbg.declare(metadata i32* %n_elts, metadata !6544, metadata !DIExpression()), !dbg !6546
  %19 = load i32, i32* %mode.addr, align 4, !dbg !6547
  %idxprom47 = zext i32 %19 to i64, !dbg !6547
  %arrayidx48 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom47, !dbg !6547
  %20 = load i8, i8* %arrayidx48, align 1, !dbg !6547
  %conv49 = zext i8 %20 to i32, !dbg !6547
  store i32 %conv49, i32* %n_elts, align 4, !dbg !6546
  call void @llvm.dbg.declare(metadata i32* %op0mode, metadata !6548, metadata !DIExpression()), !dbg !6549
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6550
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !6550
  %bf.load50 = load i32, i32* %22, align 8, !dbg !6550
  %bf.lshr = lshr i32 %bf.load50, 16, !dbg !6550
  %bf.clear51 = and i32 %bf.lshr, 255, !dbg !6550
  store i32 %bf.clear51, i32* %op0mode, align 4, !dbg !6549
  call void @llvm.dbg.declare(metadata i32* %op0_n_elts, metadata !6551, metadata !DIExpression()), !dbg !6552
  %23 = load i32, i32* %op0mode, align 4, !dbg !6553
  %idxprom52 = zext i32 %23 to i64, !dbg !6553
  %arrayidx53 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom52, !dbg !6553
  %24 = load i8, i8* %arrayidx53, align 1, !dbg !6553
  %conv54 = zext i8 %24 to i32, !dbg !6553
  store i32 %conv54, i32* %op0_n_elts, align 4, !dbg !6552
  call void @llvm.dbg.declare(metadata i32* %op1mode, metadata !6554, metadata !DIExpression()), !dbg !6555
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6556
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !6556
  %bf.load55 = load i32, i32* %26, align 8, !dbg !6556
  %bf.lshr56 = lshr i32 %bf.load55, 16, !dbg !6556
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !6556
  store i32 %bf.clear57, i32* %op1mode, align 4, !dbg !6555
  call void @llvm.dbg.declare(metadata i32* %op1_n_elts, metadata !6557, metadata !DIExpression()), !dbg !6558
  %27 = load i32, i32* %op1mode, align 4, !dbg !6559
  %idxprom58 = zext i32 %27 to i64, !dbg !6559
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom58, !dbg !6559
  %28 = load i8, i8* %arrayidx59, align 1, !dbg !6559
  %conv60 = zext i8 %28 to i32, !dbg !6559
  store i32 %conv60, i32* %op1_n_elts, align 4, !dbg !6558
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v, metadata !6560, metadata !DIExpression()), !dbg !6561
  %29 = load i32, i32* %n_elts, align 4, !dbg !6562
  %call = call %struct.rtvec_def* @rtvec_alloc(i32 %29), !dbg !6563
  store %struct.rtvec_def* %call, %struct.rtvec_def** %v, align 8, !dbg !6561
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6564, metadata !DIExpression()), !dbg !6565
  %30 = load i32, i32* %op0_n_elts, align 4, !dbg !6566
  %31 = load i32, i32* %n_elts, align 4, !dbg !6566
  %cmp61 = icmp eq i32 %30, %31, !dbg !6566
  br i1 %cmp61, label %cond.false, label %cond.true, !dbg !6566

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3099, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6566
  br label %cond.end, !dbg !6566

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !6566

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6566
  %32 = load i32, i32* %op1_n_elts, align 4, !dbg !6567
  %33 = load i32, i32* %n_elts, align 4, !dbg !6567
  %cmp63 = icmp eq i32 %32, %33, !dbg !6567
  br i1 %cmp63, label %cond.false66, label %cond.true65, !dbg !6567

cond.true65:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3100, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6567
  br label %cond.end67, !dbg !6567

cond.false66:                                     ; preds = %cond.end
  br label %cond.end67, !dbg !6567

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 0, %cond.true65 ], [ 0, %cond.false66 ], !dbg !6567
  store i32 0, i32* %i, align 4, !dbg !6568
  br label %for.cond, !dbg !6570

for.cond:                                         ; preds = %for.inc, %cond.end67
  %34 = load i32, i32* %i, align 4, !dbg !6571
  %35 = load i32, i32* %n_elts, align 4, !dbg !6573
  %cmp69 = icmp ult i32 %34, %35, !dbg !6574
  br i1 %cmp69, label %for.body, label %for.end, !dbg !6575

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !6576, metadata !DIExpression()), !dbg !6578
  %36 = load i32, i32* %code.addr, align 4, !dbg !6579
  %37 = load i32, i32* %mode.addr, align 4, !dbg !6580
  %idxprom71 = zext i32 %37 to i64, !dbg !6580
  %arrayidx72 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom71, !dbg !6580
  %38 = load i8, i8* %arrayidx72, align 1, !dbg !6580
  %conv73 = zext i8 %38 to i32, !dbg !6580
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6581
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !6581
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6581
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6581
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtvec_def**, !dbg !6581
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6581
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !6581
  %41 = load i32, i32* %i, align 4, !dbg !6581
  %idxprom75 = zext i32 %41 to i64, !dbg !6581
  %arrayidx76 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom75, !dbg !6581
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx76, align 8, !dbg !6581
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6582
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !6582
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !6582
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 0, !dbg !6582
  %rt_rtvec80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtvec_def**, !dbg !6582
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec80, align 8, !dbg !6582
  %elem81 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 1, !dbg !6582
  %45 = load i32, i32* %i, align 4, !dbg !6582
  %idxprom82 = zext i32 %45 to i64, !dbg !6582
  %arrayidx83 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem81, i64 0, i64 %idxprom82, !dbg !6582
  %46 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx83, align 8, !dbg !6582
  %call84 = call %struct.rtx_def* @simplify_binary_operation(i32 %36, i32 %conv73, %struct.rtx_def* %42, %struct.rtx_def* %46), !dbg !6583
  store %struct.rtx_def* %call84, %struct.rtx_def** %x, align 8, !dbg !6578
  %47 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6584
  %tobool = icmp ne %struct.rtx_def* %47, null, !dbg !6584
  br i1 %tobool, label %if.end, label %if.then85, !dbg !6586

if.then85:                                        ; preds = %for.body
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6587
  br label %return, !dbg !6587

if.end:                                           ; preds = %for.body
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !6588
  %49 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !6589
  %elem86 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %49, i32 0, i32 1, !dbg !6589
  %50 = load i32, i32* %i, align 4, !dbg !6589
  %idxprom87 = zext i32 %50 to i64, !dbg !6589
  %arrayidx88 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem86, i64 0, i64 %idxprom87, !dbg !6589
  store %struct.rtx_def* %48, %struct.rtx_def** %arrayidx88, align 8, !dbg !6590
  br label %for.inc, !dbg !6591

for.inc:                                          ; preds = %if.end
  %51 = load i32, i32* %i, align 4, !dbg !6592
  %inc = add i32 %51, 1, !dbg !6592
  store i32 %inc, i32* %i, align 4, !dbg !6592
  br label %for.cond, !dbg !6593, !llvm.loop !6594

for.end:                                          ; preds = %for.cond
  %52 = load i32, i32* %mode.addr, align 4, !dbg !6596
  %53 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !6597
  %call89 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %52, %struct.rtvec_def* %53), !dbg !6598
  store %struct.rtx_def* %call89, %struct.rtx_def** %retval, align 8, !dbg !6599
  br label %return, !dbg !6599

if.end90:                                         ; preds = %land.lhs.true42, %land.lhs.true39, %land.lhs.true, %lor.lhs.false31
  %54 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom91 = zext i32 %54 to i64, !dbg !6600
  %arrayidx92 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom91, !dbg !6600
  %55 = load i8, i8* %arrayidx92, align 1, !dbg !6600
  %conv93 = zext i8 %55 to i32, !dbg !6600
  %cmp94 = icmp eq i32 %conv93, 12, !dbg !6600
  br i1 %cmp94, label %land.lhs.true126, label %lor.lhs.false96, !dbg !6600

lor.lhs.false96:                                  ; preds = %if.end90
  %56 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom97 = zext i32 %56 to i64, !dbg !6600
  %arrayidx98 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom97, !dbg !6600
  %57 = load i8, i8* %arrayidx98, align 1, !dbg !6600
  %conv99 = zext i8 %57 to i32, !dbg !6600
  %cmp100 = icmp eq i32 %conv99, 17, !dbg !6600
  br i1 %cmp100, label %land.lhs.true126, label %lor.lhs.false102, !dbg !6600

lor.lhs.false102:                                 ; preds = %lor.lhs.false96
  %58 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom103 = zext i32 %58 to i64, !dbg !6600
  %arrayidx104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom103, !dbg !6600
  %59 = load i8, i8* %arrayidx104, align 1, !dbg !6600
  %conv105 = zext i8 %59 to i32, !dbg !6600
  %cmp106 = icmp eq i32 %conv105, 13, !dbg !6600
  br i1 %cmp106, label %land.lhs.true126, label %lor.lhs.false108, !dbg !6600

lor.lhs.false108:                                 ; preds = %lor.lhs.false102
  %60 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom109 = zext i32 %60 to i64, !dbg !6600
  %arrayidx110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom109, !dbg !6600
  %61 = load i8, i8* %arrayidx110, align 1, !dbg !6600
  %conv111 = zext i8 %61 to i32, !dbg !6600
  %cmp112 = icmp eq i32 %conv111, 14, !dbg !6600
  br i1 %cmp112, label %land.lhs.true126, label %lor.lhs.false114, !dbg !6600

lor.lhs.false114:                                 ; preds = %lor.lhs.false108
  %62 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom115 = zext i32 %62 to i64, !dbg !6600
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom115, !dbg !6600
  %63 = load i8, i8* %arrayidx116, align 1, !dbg !6600
  %conv117 = zext i8 %63 to i32, !dbg !6600
  %cmp118 = icmp eq i32 %conv117, 15, !dbg !6600
  br i1 %cmp118, label %land.lhs.true126, label %lor.lhs.false120, !dbg !6600

lor.lhs.false120:                                 ; preds = %lor.lhs.false114
  %64 = load i32, i32* %mode.addr, align 4, !dbg !6600
  %idxprom121 = zext i32 %64 to i64, !dbg !6600
  %arrayidx122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom121, !dbg !6600
  %65 = load i8, i8* %arrayidx122, align 1, !dbg !6600
  %conv123 = zext i8 %65 to i32, !dbg !6600
  %cmp124 = icmp eq i32 %conv123, 16, !dbg !6600
  br i1 %cmp124, label %land.lhs.true126, label %if.end269, !dbg !6602

land.lhs.true126:                                 ; preds = %lor.lhs.false120, %lor.lhs.false114, %lor.lhs.false108, %lor.lhs.false102, %lor.lhs.false96, %if.end90
  %66 = load i32, i32* %code.addr, align 4, !dbg !6603
  %cmp127 = icmp eq i32 %66, 125, !dbg !6604
  br i1 %cmp127, label %land.lhs.true129, label %if.end269, !dbg !6605

land.lhs.true129:                                 ; preds = %land.lhs.true126
  %67 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6606
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !6606
  %bf.load130 = load i32, i32* %68, align 8, !dbg !6606
  %bf.clear131 = and i32 %bf.load130, 65535, !dbg !6606
  %cmp132 = icmp eq i32 %bf.clear131, 30, !dbg !6606
  br i1 %cmp132, label %land.lhs.true144, label %lor.lhs.false134, !dbg !6607

lor.lhs.false134:                                 ; preds = %land.lhs.true129
  %69 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6608
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !6608
  %bf.load135 = load i32, i32* %70, align 8, !dbg !6608
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !6608
  %cmp137 = icmp eq i32 %bf.clear136, 32, !dbg !6609
  br i1 %cmp137, label %land.lhs.true144, label %lor.lhs.false139, !dbg !6610

lor.lhs.false139:                                 ; preds = %lor.lhs.false134
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6611
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !6611
  %bf.load140 = load i32, i32* %72, align 8, !dbg !6611
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !6611
  %cmp142 = icmp eq i32 %bf.clear141, 31, !dbg !6612
  br i1 %cmp142, label %land.lhs.true144, label %if.end269, !dbg !6613

land.lhs.true144:                                 ; preds = %lor.lhs.false139, %lor.lhs.false134, %land.lhs.true129
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6614
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !6614
  %bf.load145 = load i32, i32* %74, align 8, !dbg !6614
  %bf.clear146 = and i32 %bf.load145, 65535, !dbg !6614
  %cmp147 = icmp eq i32 %bf.clear146, 30, !dbg !6614
  br i1 %cmp147, label %if.then159, label %lor.lhs.false149, !dbg !6615

lor.lhs.false149:                                 ; preds = %land.lhs.true144
  %75 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6616
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !6616
  %bf.load150 = load i32, i32* %76, align 8, !dbg !6616
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !6616
  %cmp152 = icmp eq i32 %bf.clear151, 32, !dbg !6617
  br i1 %cmp152, label %if.then159, label %lor.lhs.false154, !dbg !6618

lor.lhs.false154:                                 ; preds = %lor.lhs.false149
  %77 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6619
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !6619
  %bf.load155 = load i32, i32* %78, align 8, !dbg !6619
  %bf.clear156 = and i32 %bf.load155, 65535, !dbg !6619
  %cmp157 = icmp eq i32 %bf.clear156, 31, !dbg !6620
  br i1 %cmp157, label %if.then159, label %if.end269, !dbg !6621

if.then159:                                       ; preds = %lor.lhs.false154, %lor.lhs.false149, %land.lhs.true144
  call void @llvm.dbg.declare(metadata i32* %n_elts160, metadata !6622, metadata !DIExpression()), !dbg !6624
  %79 = load i32, i32* %mode.addr, align 4, !dbg !6625
  %idxprom161 = zext i32 %79 to i64, !dbg !6625
  %arrayidx162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom161, !dbg !6625
  %80 = load i8, i8* %arrayidx162, align 1, !dbg !6625
  %conv163 = zext i8 %80 to i32, !dbg !6625
  store i32 %conv163, i32* %n_elts160, align 4, !dbg !6624
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v164, metadata !6626, metadata !DIExpression()), !dbg !6627
  %81 = load i32, i32* %n_elts160, align 4, !dbg !6628
  %call165 = call %struct.rtvec_def* @rtvec_alloc(i32 %81), !dbg !6629
  store %struct.rtvec_def* %call165, %struct.rtvec_def** %v164, align 8, !dbg !6627
  %82 = load i32, i32* %n_elts160, align 4, !dbg !6630
  %cmp166 = icmp uge i32 %82, 2, !dbg !6630
  br i1 %cmp166, label %cond.false169, label %cond.true168, !dbg !6630

cond.true168:                                     ; preds = %if.then159
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6630
  br label %cond.end170, !dbg !6630

cond.false169:                                    ; preds = %if.then159
  br label %cond.end170, !dbg !6630

cond.end170:                                      ; preds = %cond.false169, %cond.true168
  %cond171 = phi i32 [ 0, %cond.true168 ], [ 0, %cond.false169 ], !dbg !6630
  %83 = load i32, i32* %n_elts160, align 4, !dbg !6631
  %cmp172 = icmp eq i32 %83, 2, !dbg !6633
  br i1 %cmp172, label %if.then174, label %if.else, !dbg !6634

if.then174:                                       ; preds = %cond.end170
  %84 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6635
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !6635
  %bf.load175 = load i32, i32* %85, align 8, !dbg !6635
  %bf.clear176 = and i32 %bf.load175, 65535, !dbg !6635
  %cmp177 = icmp ne i32 %bf.clear176, 33, !dbg !6635
  br i1 %cmp177, label %cond.false180, label %cond.true179, !dbg !6635

cond.true179:                                     ; preds = %if.then174
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3129, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6635
  br label %cond.end181, !dbg !6635

cond.false180:                                    ; preds = %if.then174
  br label %cond.end181, !dbg !6635

cond.end181:                                      ; preds = %cond.false180, %cond.true179
  %cond182 = phi i32 [ 0, %cond.true179 ], [ 0, %cond.false180 ], !dbg !6635
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6637
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !6637
  %bf.load183 = load i32, i32* %87, align 8, !dbg !6637
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !6637
  %cmp185 = icmp ne i32 %bf.clear184, 33, !dbg !6637
  br i1 %cmp185, label %cond.false188, label %cond.true187, !dbg !6637

cond.true187:                                     ; preds = %cond.end181
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3130, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6637
  br label %cond.end189, !dbg !6637

cond.false188:                                    ; preds = %cond.end181
  br label %cond.end189, !dbg !6637

cond.end189:                                      ; preds = %cond.false188, %cond.true187
  %cond190 = phi i32 [ 0, %cond.true187 ], [ 0, %cond.false188 ], !dbg !6637
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6638
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %v164, align 8, !dbg !6639
  %elem191 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i32 0, i32 1, !dbg !6639
  %arrayidx192 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem191, i64 0, i64 0, !dbg !6639
  store %struct.rtx_def* %88, %struct.rtx_def** %arrayidx192, align 8, !dbg !6640
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6641
  %91 = load %struct.rtvec_def*, %struct.rtvec_def** %v164, align 8, !dbg !6642
  %elem193 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %91, i32 0, i32 1, !dbg !6642
  %arrayidx194 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem193, i64 0, i64 1, !dbg !6642
  store %struct.rtx_def* %90, %struct.rtx_def** %arrayidx194, align 8, !dbg !6643
  br label %if.end267, !dbg !6644

if.else:                                          ; preds = %cond.end170
  call void @llvm.dbg.declare(metadata i32* %op0_n_elts195, metadata !6645, metadata !DIExpression()), !dbg !6647
  %92 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6648
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !6648
  %bf.load196 = load i32, i32* %93, align 8, !dbg !6648
  %bf.lshr197 = lshr i32 %bf.load196, 16, !dbg !6648
  %bf.clear198 = and i32 %bf.lshr197, 255, !dbg !6648
  %idxprom199 = zext i32 %bf.clear198 to i64, !dbg !6648
  %arrayidx200 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom199, !dbg !6648
  %94 = load i8, i8* %arrayidx200, align 1, !dbg !6648
  %conv201 = zext i8 %94 to i32, !dbg !6648
  store i32 %conv201, i32* %op0_n_elts195, align 4, !dbg !6647
  call void @llvm.dbg.declare(metadata i32* %op1_n_elts202, metadata !6649, metadata !DIExpression()), !dbg !6650
  %95 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6651
  %96 = bitcast %struct.rtx_def* %95 to i32*, !dbg !6651
  %bf.load203 = load i32, i32* %96, align 8, !dbg !6651
  %bf.lshr204 = lshr i32 %bf.load203, 16, !dbg !6651
  %bf.clear205 = and i32 %bf.lshr204, 255, !dbg !6651
  %idxprom206 = zext i32 %bf.clear205 to i64, !dbg !6651
  %arrayidx207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom206, !dbg !6651
  %97 = load i8, i8* %arrayidx207, align 1, !dbg !6651
  %conv208 = zext i8 %97 to i32, !dbg !6651
  store i32 %conv208, i32* %op1_n_elts202, align 4, !dbg !6650
  call void @llvm.dbg.declare(metadata i32* %i209, metadata !6652, metadata !DIExpression()), !dbg !6653
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6654
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !6654
  %bf.load210 = load i32, i32* %99, align 8, !dbg !6654
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !6654
  %cmp212 = icmp eq i32 %bf.clear211, 33, !dbg !6654
  br i1 %cmp212, label %cond.false215, label %cond.true214, !dbg !6654

cond.true214:                                     ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3141, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6654
  br label %cond.end216, !dbg !6654

cond.false215:                                    ; preds = %if.else
  br label %cond.end216, !dbg !6654

cond.end216:                                      ; preds = %cond.false215, %cond.true214
  %cond217 = phi i32 [ 0, %cond.true214 ], [ 0, %cond.false215 ], !dbg !6654
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6655
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !6655
  %bf.load218 = load i32, i32* %101, align 8, !dbg !6655
  %bf.clear219 = and i32 %bf.load218, 65535, !dbg !6655
  %cmp220 = icmp eq i32 %bf.clear219, 33, !dbg !6655
  br i1 %cmp220, label %cond.false223, label %cond.true222, !dbg !6655

cond.true222:                                     ; preds = %cond.end216
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3142, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6655
  br label %cond.end224, !dbg !6655

cond.false223:                                    ; preds = %cond.end216
  br label %cond.end224, !dbg !6655

cond.end224:                                      ; preds = %cond.false223, %cond.true222
  %cond225 = phi i32 [ 0, %cond.true222 ], [ 0, %cond.false223 ], !dbg !6655
  %102 = load i32, i32* %op0_n_elts195, align 4, !dbg !6656
  %103 = load i32, i32* %op1_n_elts202, align 4, !dbg !6656
  %add = add i32 %102, %103, !dbg !6656
  %104 = load i32, i32* %n_elts160, align 4, !dbg !6656
  %cmp226 = icmp eq i32 %add, %104, !dbg !6656
  br i1 %cmp226, label %cond.false229, label %cond.true228, !dbg !6656

cond.true228:                                     ; preds = %cond.end224
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3143, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6656
  br label %cond.end230, !dbg !6656

cond.false229:                                    ; preds = %cond.end224
  br label %cond.end230, !dbg !6656

cond.end230:                                      ; preds = %cond.false229, %cond.true228
  %cond231 = phi i32 [ 0, %cond.true228 ], [ 0, %cond.false229 ], !dbg !6656
  store i32 0, i32* %i209, align 4, !dbg !6657
  br label %for.cond232, !dbg !6659

for.cond232:                                      ; preds = %for.inc246, %cond.end230
  %105 = load i32, i32* %i209, align 4, !dbg !6660
  %106 = load i32, i32* %op0_n_elts195, align 4, !dbg !6662
  %cmp233 = icmp ult i32 %105, %106, !dbg !6663
  br i1 %cmp233, label %for.body235, label %for.end248, !dbg !6664

for.body235:                                      ; preds = %for.cond232
  %107 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6665
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !6665
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !6665
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 0, !dbg !6665
  %rt_rtvec239 = bitcast %union.rtunion_def* %arrayidx238 to %struct.rtvec_def**, !dbg !6665
  %108 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec239, align 8, !dbg !6665
  %elem240 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %108, i32 0, i32 1, !dbg !6665
  %109 = load i32, i32* %i209, align 4, !dbg !6665
  %idxprom241 = zext i32 %109 to i64, !dbg !6665
  %arrayidx242 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem240, i64 0, i64 %idxprom241, !dbg !6665
  %110 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx242, align 8, !dbg !6665
  %111 = load %struct.rtvec_def*, %struct.rtvec_def** %v164, align 8, !dbg !6666
  %elem243 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %111, i32 0, i32 1, !dbg !6666
  %112 = load i32, i32* %i209, align 4, !dbg !6666
  %idxprom244 = zext i32 %112 to i64, !dbg !6666
  %arrayidx245 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem243, i64 0, i64 %idxprom244, !dbg !6666
  store %struct.rtx_def* %110, %struct.rtx_def** %arrayidx245, align 8, !dbg !6667
  br label %for.inc246, !dbg !6666

for.inc246:                                       ; preds = %for.body235
  %113 = load i32, i32* %i209, align 4, !dbg !6668
  %inc247 = add i32 %113, 1, !dbg !6668
  store i32 %inc247, i32* %i209, align 4, !dbg !6668
  br label %for.cond232, !dbg !6669, !llvm.loop !6670

for.end248:                                       ; preds = %for.cond232
  store i32 0, i32* %i209, align 4, !dbg !6672
  br label %for.cond249, !dbg !6674

for.cond249:                                      ; preds = %for.inc264, %for.end248
  %114 = load i32, i32* %i209, align 4, !dbg !6675
  %115 = load i32, i32* %op1_n_elts202, align 4, !dbg !6677
  %cmp250 = icmp ult i32 %114, %115, !dbg !6678
  br i1 %cmp250, label %for.body252, label %for.end266, !dbg !6679

for.body252:                                      ; preds = %for.cond249
  %116 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6680
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !6680
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !6680
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !6680
  %rt_rtvec256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtvec_def**, !dbg !6680
  %117 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec256, align 8, !dbg !6680
  %elem257 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %117, i32 0, i32 1, !dbg !6680
  %118 = load i32, i32* %i209, align 4, !dbg !6680
  %idxprom258 = zext i32 %118 to i64, !dbg !6680
  %arrayidx259 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem257, i64 0, i64 %idxprom258, !dbg !6680
  %119 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx259, align 8, !dbg !6680
  %120 = load %struct.rtvec_def*, %struct.rtvec_def** %v164, align 8, !dbg !6681
  %elem260 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %120, i32 0, i32 1, !dbg !6681
  %121 = load i32, i32* %op0_n_elts195, align 4, !dbg !6681
  %122 = load i32, i32* %i209, align 4, !dbg !6681
  %add261 = add i32 %121, %122, !dbg !6681
  %idxprom262 = zext i32 %add261 to i64, !dbg !6681
  %arrayidx263 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem260, i64 0, i64 %idxprom262, !dbg !6681
  store %struct.rtx_def* %119, %struct.rtx_def** %arrayidx263, align 8, !dbg !6682
  br label %for.inc264, !dbg !6681

for.inc264:                                       ; preds = %for.body252
  %123 = load i32, i32* %i209, align 4, !dbg !6683
  %inc265 = add i32 %123, 1, !dbg !6683
  store i32 %inc265, i32* %i209, align 4, !dbg !6683
  br label %for.cond249, !dbg !6684, !llvm.loop !6685

for.end266:                                       ; preds = %for.cond249
  br label %if.end267

if.end267:                                        ; preds = %for.end266, %cond.end189
  %124 = load i32, i32* %mode.addr, align 4, !dbg !6687
  %125 = load %struct.rtvec_def*, %struct.rtvec_def** %v164, align 8, !dbg !6688
  %call268 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %124, %struct.rtvec_def* %125), !dbg !6689
  store %struct.rtx_def* %call268, %struct.rtx_def** %retval, align 8, !dbg !6690
  br label %return, !dbg !6690

if.end269:                                        ; preds = %lor.lhs.false154, %lor.lhs.false139, %land.lhs.true126, %lor.lhs.false120
  %126 = load i32, i32* %mode.addr, align 4, !dbg !6691
  %idxprom270 = zext i32 %126 to i64, !dbg !6691
  %arrayidx271 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom270, !dbg !6691
  %127 = load i8, i8* %arrayidx271, align 1, !dbg !6691
  %conv272 = zext i8 %127 to i32, !dbg !6691
  %cmp273 = icmp eq i32 %conv272, 8, !dbg !6691
  br i1 %cmp273, label %land.lhs.true281, label %lor.lhs.false275, !dbg !6691

lor.lhs.false275:                                 ; preds = %if.end269
  %128 = load i32, i32* %mode.addr, align 4, !dbg !6691
  %idxprom276 = zext i32 %128 to i64, !dbg !6691
  %arrayidx277 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom276, !dbg !6691
  %129 = load i8, i8* %arrayidx277, align 1, !dbg !6691
  %conv278 = zext i8 %129 to i32, !dbg !6691
  %cmp279 = icmp eq i32 %conv278, 9, !dbg !6691
  br i1 %cmp279, label %land.lhs.true281, label %if.end1290, !dbg !6693

land.lhs.true281:                                 ; preds = %lor.lhs.false275, %if.end269
  %130 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6694
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !6694
  %bf.load282 = load i32, i32* %131, align 8, !dbg !6694
  %bf.clear283 = and i32 %bf.load282, 65535, !dbg !6694
  %cmp284 = icmp eq i32 %bf.clear283, 32, !dbg !6695
  br i1 %cmp284, label %land.lhs.true286, label %if.end1290, !dbg !6696

land.lhs.true286:                                 ; preds = %land.lhs.true281
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6697
  %133 = bitcast %struct.rtx_def* %132 to i32*, !dbg !6697
  %bf.load287 = load i32, i32* %133, align 8, !dbg !6697
  %bf.clear288 = and i32 %bf.load287, 65535, !dbg !6697
  %cmp289 = icmp eq i32 %bf.clear288, 32, !dbg !6698
  br i1 %cmp289, label %land.lhs.true291, label %if.end1290, !dbg !6699

land.lhs.true291:                                 ; preds = %land.lhs.true286
  %134 = load i32, i32* %mode.addr, align 4, !dbg !6700
  %135 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6701
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !6701
  %bf.load292 = load i32, i32* %136, align 8, !dbg !6701
  %bf.lshr293 = lshr i32 %bf.load292, 16, !dbg !6701
  %bf.clear294 = and i32 %bf.lshr293, 255, !dbg !6701
  %cmp295 = icmp eq i32 %134, %bf.clear294, !dbg !6702
  br i1 %cmp295, label %land.lhs.true297, label %if.end1290, !dbg !6703

land.lhs.true297:                                 ; preds = %land.lhs.true291
  %137 = load i32, i32* %mode.addr, align 4, !dbg !6704
  %138 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6705
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !6705
  %bf.load298 = load i32, i32* %139, align 8, !dbg !6705
  %bf.lshr299 = lshr i32 %bf.load298, 16, !dbg !6705
  %bf.clear300 = and i32 %bf.lshr299, 255, !dbg !6705
  %cmp301 = icmp eq i32 %137, %bf.clear300, !dbg !6706
  br i1 %cmp301, label %if.then303, label %if.end1290, !dbg !6707

if.then303:                                       ; preds = %land.lhs.true297
  %140 = load i32, i32* %code.addr, align 4, !dbg !6708
  %cmp304 = icmp eq i32 %140, 61, !dbg !6711
  br i1 %cmp304, label %if.then312, label %lor.lhs.false306, !dbg !6712

lor.lhs.false306:                                 ; preds = %if.then303
  %141 = load i32, i32* %code.addr, align 4, !dbg !6713
  %cmp307 = icmp eq i32 %141, 62, !dbg !6714
  br i1 %cmp307, label %if.then312, label %lor.lhs.false309, !dbg !6715

lor.lhs.false309:                                 ; preds = %lor.lhs.false306
  %142 = load i32, i32* %code.addr, align 4, !dbg !6716
  %cmp310 = icmp eq i32 %142, 63, !dbg !6717
  br i1 %cmp310, label %if.then312, label %if.else349, !dbg !6718

if.then312:                                       ; preds = %lor.lhs.false309, %lor.lhs.false306, %if.then303
  call void @llvm.dbg.declare(metadata [4 x i64]* %tmp0, metadata !6719, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata [4 x i64]* %tmp1, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata %struct.real_value* %r, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %i313, metadata !6726, metadata !DIExpression()), !dbg !6727
  %arraydecay = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 0, !dbg !6728
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6729
  %u314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !6729
  %rv = bitcast %union.u* %u314 to %struct.real_value*, !dbg !6729
  %144 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6730
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !6730
  %bf.load315 = load i32, i32* %145, align 8, !dbg !6730
  %bf.lshr316 = lshr i32 %bf.load315, 16, !dbg !6730
  %bf.clear317 = and i32 %bf.lshr316, 255, !dbg !6730
  %call318 = call i64 @real_to_target(i64* %arraydecay, %struct.real_value* %rv, i32 %bf.clear317), !dbg !6731
  %arraydecay319 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1, i64 0, i64 0, !dbg !6732
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6733
  %u320 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !6733
  %rv321 = bitcast %union.u* %u320 to %struct.real_value*, !dbg !6733
  %147 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6734
  %148 = bitcast %struct.rtx_def* %147 to i32*, !dbg !6734
  %bf.load322 = load i32, i32* %148, align 8, !dbg !6734
  %bf.lshr323 = lshr i32 %bf.load322, 16, !dbg !6734
  %bf.clear324 = and i32 %bf.lshr323, 255, !dbg !6734
  %call325 = call i64 @real_to_target(i64* %arraydecay319, %struct.real_value* %rv321, i32 %bf.clear324), !dbg !6735
  store i32 0, i32* %i313, align 4, !dbg !6736
  br label %for.cond326, !dbg !6738

for.cond326:                                      ; preds = %for.inc344, %if.then312
  %149 = load i32, i32* %i313, align 4, !dbg !6739
  %cmp327 = icmp slt i32 %149, 4, !dbg !6741
  br i1 %cmp327, label %for.body329, label %for.end346, !dbg !6742

for.body329:                                      ; preds = %for.cond326
  %150 = load i32, i32* %code.addr, align 4, !dbg !6743
  switch i32 %150, label %sw.default [
    i32 61, label %sw.bb
    i32 62, label %sw.bb334
    i32 63, label %sw.bb339
  ], !dbg !6745

sw.bb:                                            ; preds = %for.body329
  %151 = load i32, i32* %i313, align 4, !dbg !6746
  %idxprom330 = sext i32 %151 to i64, !dbg !6748
  %arrayidx331 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1, i64 0, i64 %idxprom330, !dbg !6748
  %152 = load i64, i64* %arrayidx331, align 8, !dbg !6748
  %153 = load i32, i32* %i313, align 4, !dbg !6749
  %idxprom332 = sext i32 %153 to i64, !dbg !6750
  %arrayidx333 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 %idxprom332, !dbg !6750
  %154 = load i64, i64* %arrayidx333, align 8, !dbg !6751
  %and = and i64 %154, %152, !dbg !6751
  store i64 %and, i64* %arrayidx333, align 8, !dbg !6751
  br label %sw.epilog, !dbg !6752

sw.bb334:                                         ; preds = %for.body329
  %155 = load i32, i32* %i313, align 4, !dbg !6753
  %idxprom335 = sext i32 %155 to i64, !dbg !6754
  %arrayidx336 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1, i64 0, i64 %idxprom335, !dbg !6754
  %156 = load i64, i64* %arrayidx336, align 8, !dbg !6754
  %157 = load i32, i32* %i313, align 4, !dbg !6755
  %idxprom337 = sext i32 %157 to i64, !dbg !6756
  %arrayidx338 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 %idxprom337, !dbg !6756
  %158 = load i64, i64* %arrayidx338, align 8, !dbg !6757
  %or = or i64 %158, %156, !dbg !6757
  store i64 %or, i64* %arrayidx338, align 8, !dbg !6757
  br label %sw.epilog, !dbg !6758

sw.bb339:                                         ; preds = %for.body329
  %159 = load i32, i32* %i313, align 4, !dbg !6759
  %idxprom340 = sext i32 %159 to i64, !dbg !6760
  %arrayidx341 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp1, i64 0, i64 %idxprom340, !dbg !6760
  %160 = load i64, i64* %arrayidx341, align 8, !dbg !6760
  %161 = load i32, i32* %i313, align 4, !dbg !6761
  %idxprom342 = sext i32 %161 to i64, !dbg !6762
  %arrayidx343 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 %idxprom342, !dbg !6762
  %162 = load i64, i64* %arrayidx343, align 8, !dbg !6763
  %xor = xor i64 %162, %160, !dbg !6763
  store i64 %xor, i64* %arrayidx343, align 8, !dbg !6763
  br label %sw.epilog, !dbg !6764

sw.default:                                       ; preds = %for.body329
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3186, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6765
  br label %sw.epilog, !dbg !6766

sw.epilog:                                        ; preds = %sw.default, %sw.bb339, %sw.bb334, %sw.bb
  br label %for.inc344, !dbg !6767

for.inc344:                                       ; preds = %sw.epilog
  %163 = load i32, i32* %i313, align 4, !dbg !6768
  %inc345 = add nsw i32 %163, 1, !dbg !6768
  store i32 %inc345, i32* %i313, align 4, !dbg !6768
  br label %for.cond326, !dbg !6769, !llvm.loop !6770

for.end346:                                       ; preds = %for.cond326
  %arraydecay347 = getelementptr inbounds [4 x i64], [4 x i64]* %tmp0, i64 0, i64 0, !dbg !6772
  %164 = load i32, i32* %mode.addr, align 4, !dbg !6773
  call void @real_from_target(%struct.real_value* %r, i64* %arraydecay347, i32 %164), !dbg !6774
  %165 = load i32, i32* %mode.addr, align 4, !dbg !6775
  %call348 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %r, i32 %165), !dbg !6775
  store %struct.rtx_def* %call348, %struct.rtx_def** %retval, align 8, !dbg !6776
  br label %return, !dbg !6776

if.else349:                                       ; preds = %lor.lhs.false309
  call void @llvm.dbg.declare(metadata %struct.real_value* %f0, metadata !6777, metadata !DIExpression()), !dbg !6779
  call void @llvm.dbg.declare(metadata %struct.real_value* %f1, metadata !6780, metadata !DIExpression()), !dbg !6781
  call void @llvm.dbg.declare(metadata %struct.real_value* %value, metadata !6782, metadata !DIExpression()), !dbg !6783
  call void @llvm.dbg.declare(metadata %struct.real_value* %result, metadata !6784, metadata !DIExpression()), !dbg !6785
  call void @llvm.dbg.declare(metadata i8* %inexact, metadata !6786, metadata !DIExpression()), !dbg !6787
  %166 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6788
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !6788
  %rv351 = bitcast %union.u* %u350 to %struct.real_value*, !dbg !6788
  %167 = bitcast %struct.real_value* %f0 to i8*, !dbg !6788
  %168 = bitcast %struct.real_value* %rv351 to i8*, !dbg !6788
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 32, i1 false), !dbg !6788
  %169 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6789
  %u352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !6789
  %rv353 = bitcast %union.u* %u352 to %struct.real_value*, !dbg !6789
  %170 = bitcast %struct.real_value* %f1 to i8*, !dbg !6789
  %171 = bitcast %struct.real_value* %rv353 to i8*, !dbg !6789
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* align 8 %171, i64 32, i1 false), !dbg !6789
  %172 = load i32, i32* %mode.addr, align 4, !dbg !6790
  call void @real_convert(%struct.real_value* %f0, i32 %172, %struct.real_value* %f0), !dbg !6791
  %173 = load i32, i32* %mode.addr, align 4, !dbg !6792
  call void @real_convert(%struct.real_value* %f1, i32 %173, %struct.real_value* %f1), !dbg !6793
  %174 = load i32, i32* @flag_signaling_nans, align 4, !dbg !6794
  %tobool354 = icmp ne i32 %174, 0, !dbg !6794
  br i1 %tobool354, label %land.lhs.true355, label %if.end460, !dbg !6794

land.lhs.true355:                                 ; preds = %if.else349
  %175 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom356 = zext i32 %175 to i64, !dbg !6794
  %arrayidx357 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom356, !dbg !6794
  %176 = load i8, i8* %arrayidx357, align 1, !dbg !6794
  %conv358 = zext i8 %176 to i32, !dbg !6794
  %cmp359 = icmp eq i32 %conv358, 8, !dbg !6794
  br i1 %cmp359, label %land.lhs.true379, label %lor.lhs.false361, !dbg !6794

lor.lhs.false361:                                 ; preds = %land.lhs.true355
  %177 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom362 = zext i32 %177 to i64, !dbg !6794
  %arrayidx363 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom362, !dbg !6794
  %178 = load i8, i8* %arrayidx363, align 1, !dbg !6794
  %conv364 = zext i8 %178 to i32, !dbg !6794
  %cmp365 = icmp eq i32 %conv364, 9, !dbg !6794
  br i1 %cmp365, label %land.lhs.true379, label %lor.lhs.false367, !dbg !6794

lor.lhs.false367:                                 ; preds = %lor.lhs.false361
  %179 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom368 = zext i32 %179 to i64, !dbg !6794
  %arrayidx369 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom368, !dbg !6794
  %180 = load i8, i8* %arrayidx369, align 1, !dbg !6794
  %conv370 = zext i8 %180 to i32, !dbg !6794
  %cmp371 = icmp eq i32 %conv370, 11, !dbg !6794
  br i1 %cmp371, label %land.lhs.true379, label %lor.lhs.false373, !dbg !6794

lor.lhs.false373:                                 ; preds = %lor.lhs.false367
  %181 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom374 = zext i32 %181 to i64, !dbg !6794
  %arrayidx375 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom374, !dbg !6794
  %182 = load i8, i8* %arrayidx375, align 1, !dbg !6794
  %conv376 = zext i8 %182 to i32, !dbg !6794
  %cmp377 = icmp eq i32 %conv376, 17, !dbg !6794
  br i1 %cmp377, label %land.lhs.true379, label %if.end460, !dbg !6794

land.lhs.true379:                                 ; preds = %lor.lhs.false373, %lor.lhs.false367, %lor.lhs.false361, %land.lhs.true355
  %183 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom380 = zext i32 %183 to i64, !dbg !6794
  %arrayidx381 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom380, !dbg !6794
  %184 = load i8, i8* %arrayidx381, align 1, !dbg !6794
  %conv382 = zext i8 %184 to i32, !dbg !6794
  %cmp383 = icmp eq i32 %conv382, 8, !dbg !6794
  br i1 %cmp383, label %cond.true391, label %lor.lhs.false385, !dbg !6794

lor.lhs.false385:                                 ; preds = %land.lhs.true379
  %185 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom386 = zext i32 %185 to i64, !dbg !6794
  %arrayidx387 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom386, !dbg !6794
  %186 = load i8, i8* %arrayidx387, align 1, !dbg !6794
  %conv388 = zext i8 %186 to i32, !dbg !6794
  %cmp389 = icmp eq i32 %conv388, 9, !dbg !6794
  br i1 %cmp389, label %cond.true391, label %cond.false392, !dbg !6794

cond.true391:                                     ; preds = %lor.lhs.false385, %land.lhs.true379
  %187 = load i32, i32* %mode.addr, align 4, !dbg !6794
  br label %cond.end396, !dbg !6794

cond.false392:                                    ; preds = %lor.lhs.false385
  %188 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom393 = zext i32 %188 to i64, !dbg !6794
  %arrayidx394 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom393, !dbg !6794
  %189 = load i8, i8* %arrayidx394, align 1, !dbg !6794
  %conv395 = zext i8 %189 to i32, !dbg !6794
  br label %cond.end396, !dbg !6794

cond.end396:                                      ; preds = %cond.false392, %cond.true391
  %cond397 = phi i32 [ %187, %cond.true391 ], [ %conv395, %cond.false392 ], !dbg !6794
  %idxprom398 = zext i32 %cond397 to i64, !dbg !6794
  %arrayidx399 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom398, !dbg !6794
  %190 = load i8, i8* %arrayidx399, align 1, !dbg !6794
  %conv400 = zext i8 %190 to i32, !dbg !6794
  %cmp401 = icmp eq i32 %conv400, 9, !dbg !6794
  br i1 %cmp401, label %cond.true403, label %cond.false423, !dbg !6794

cond.true403:                                     ; preds = %cond.end396
  %191 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom404 = zext i32 %191 to i64, !dbg !6794
  %arrayidx405 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom404, !dbg !6794
  %192 = load i8, i8* %arrayidx405, align 1, !dbg !6794
  %conv406 = zext i8 %192 to i32, !dbg !6794
  %cmp407 = icmp eq i32 %conv406, 8, !dbg !6794
  br i1 %cmp407, label %cond.true415, label %lor.lhs.false409, !dbg !6794

lor.lhs.false409:                                 ; preds = %cond.true403
  %193 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom410 = zext i32 %193 to i64, !dbg !6794
  %arrayidx411 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom410, !dbg !6794
  %194 = load i8, i8* %arrayidx411, align 1, !dbg !6794
  %conv412 = zext i8 %194 to i32, !dbg !6794
  %cmp413 = icmp eq i32 %conv412, 9, !dbg !6794
  br i1 %cmp413, label %cond.true415, label %cond.false416, !dbg !6794

cond.true415:                                     ; preds = %lor.lhs.false409, %cond.true403
  %195 = load i32, i32* %mode.addr, align 4, !dbg !6794
  br label %cond.end420, !dbg !6794

cond.false416:                                    ; preds = %lor.lhs.false409
  %196 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom417 = zext i32 %196 to i64, !dbg !6794
  %arrayidx418 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom417, !dbg !6794
  %197 = load i8, i8* %arrayidx418, align 1, !dbg !6794
  %conv419 = zext i8 %197 to i32, !dbg !6794
  br label %cond.end420, !dbg !6794

cond.end420:                                      ; preds = %cond.false416, %cond.true415
  %cond421 = phi i32 [ %195, %cond.true415 ], [ %conv419, %cond.false416 ], !dbg !6794
  %sub = sub i32 %cond421, 42, !dbg !6794
  %add422 = add i32 %sub, 4, !dbg !6794
  br label %cond.end443, !dbg !6794

cond.false423:                                    ; preds = %cond.end396
  %198 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom424 = zext i32 %198 to i64, !dbg !6794
  %arrayidx425 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom424, !dbg !6794
  %199 = load i8, i8* %arrayidx425, align 1, !dbg !6794
  %conv426 = zext i8 %199 to i32, !dbg !6794
  %cmp427 = icmp eq i32 %conv426, 8, !dbg !6794
  br i1 %cmp427, label %cond.true435, label %lor.lhs.false429, !dbg !6794

lor.lhs.false429:                                 ; preds = %cond.false423
  %200 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom430 = zext i32 %200 to i64, !dbg !6794
  %arrayidx431 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom430, !dbg !6794
  %201 = load i8, i8* %arrayidx431, align 1, !dbg !6794
  %conv432 = zext i8 %201 to i32, !dbg !6794
  %cmp433 = icmp eq i32 %conv432, 9, !dbg !6794
  br i1 %cmp433, label %cond.true435, label %cond.false436, !dbg !6794

cond.true435:                                     ; preds = %lor.lhs.false429, %cond.false423
  %202 = load i32, i32* %mode.addr, align 4, !dbg !6794
  br label %cond.end440, !dbg !6794

cond.false436:                                    ; preds = %lor.lhs.false429
  %203 = load i32, i32* %mode.addr, align 4, !dbg !6794
  %idxprom437 = zext i32 %203 to i64, !dbg !6794
  %arrayidx438 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom437, !dbg !6794
  %204 = load i8, i8* %arrayidx438, align 1, !dbg !6794
  %conv439 = zext i8 %204 to i32, !dbg !6794
  br label %cond.end440, !dbg !6794

cond.end440:                                      ; preds = %cond.false436, %cond.true435
  %cond441 = phi i32 [ %202, %cond.true435 ], [ %conv439, %cond.false436 ], !dbg !6794
  %sub442 = sub i32 %cond441, 38, !dbg !6794
  br label %cond.end443, !dbg !6794

cond.end443:                                      ; preds = %cond.end440, %cond.end420
  %cond444 = phi i32 [ %add422, %cond.end420 ], [ %sub442, %cond.end440 ], !dbg !6794
  %idxprom445 = zext i32 %cond444 to i64, !dbg !6794
  %arrayidx446 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom445, !dbg !6794
  %205 = load %struct.real_format*, %struct.real_format** %arrayidx446, align 8, !dbg !6794
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %205, i32 0, i32 11, !dbg !6794
  %206 = load i8, i8* %has_nans, align 2, !dbg !6794
  %conv447 = zext i8 %206 to i32, !dbg !6794
  %tobool448 = icmp ne i32 %conv447, 0, !dbg !6794
  br i1 %tobool448, label %land.lhs.true449, label %if.end460, !dbg !6794

land.lhs.true449:                                 ; preds = %cond.end443
  %207 = load i32, i32* @flag_finite_math_only, align 4, !dbg !6794
  %tobool450 = icmp ne i32 %207, 0, !dbg !6794
  br i1 %tobool450, label %if.end460, label %land.lhs.true451, !dbg !6796

land.lhs.true451:                                 ; preds = %land.lhs.true449
  %call452 = call zeroext i8 @real_isnan(%struct.real_value* %f0), !dbg !6797
  %conv453 = zext i8 %call452 to i32, !dbg !6797
  %tobool454 = icmp ne i32 %conv453, 0, !dbg !6797
  br i1 %tobool454, label %if.then459, label %lor.lhs.false455, !dbg !6798

lor.lhs.false455:                                 ; preds = %land.lhs.true451
  %call456 = call zeroext i8 @real_isnan(%struct.real_value* %f1), !dbg !6799
  %conv457 = zext i8 %call456 to i32, !dbg !6799
  %tobool458 = icmp ne i32 %conv457, 0, !dbg !6799
  br i1 %tobool458, label %if.then459, label %if.end460, !dbg !6800

if.then459:                                       ; preds = %lor.lhs.false455, %land.lhs.true451
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6801
  br label %return, !dbg !6801

if.end460:                                        ; preds = %lor.lhs.false455, %land.lhs.true449, %cond.end443, %lor.lhs.false373, %if.else349
  %208 = load i32, i32* %code.addr, align 4, !dbg !6802
  %cmp461 = icmp eq i32 %208, 55, !dbg !6804
  br i1 %cmp461, label %land.lhs.true463, label %if.end565, !dbg !6805

land.lhs.true463:                                 ; preds = %if.end460
  %call464 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %f1, %struct.real_value* @dconst0), !dbg !6806
  %conv465 = zext i8 %call464 to i32, !dbg !6806
  %tobool466 = icmp ne i32 %conv465, 0, !dbg !6806
  br i1 %tobool466, label %land.lhs.true467, label %if.end565, !dbg !6807

land.lhs.true467:                                 ; preds = %land.lhs.true463
  %209 = load i32, i32* @flag_trapping_math, align 4, !dbg !6808
  %tobool468 = icmp ne i32 %209, 0, !dbg !6808
  br i1 %tobool468, label %if.then564, label %lor.lhs.false469, !dbg !6809

lor.lhs.false469:                                 ; preds = %land.lhs.true467
  %210 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom470 = zext i32 %210 to i64, !dbg !6810
  %arrayidx471 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom470, !dbg !6810
  %211 = load i8, i8* %arrayidx471, align 1, !dbg !6810
  %conv472 = zext i8 %211 to i32, !dbg !6810
  %cmp473 = icmp eq i32 %conv472, 8, !dbg !6810
  br i1 %cmp473, label %land.lhs.true493, label %lor.lhs.false475, !dbg !6810

lor.lhs.false475:                                 ; preds = %lor.lhs.false469
  %212 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom476 = zext i32 %212 to i64, !dbg !6810
  %arrayidx477 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom476, !dbg !6810
  %213 = load i8, i8* %arrayidx477, align 1, !dbg !6810
  %conv478 = zext i8 %213 to i32, !dbg !6810
  %cmp479 = icmp eq i32 %conv478, 9, !dbg !6810
  br i1 %cmp479, label %land.lhs.true493, label %lor.lhs.false481, !dbg !6810

lor.lhs.false481:                                 ; preds = %lor.lhs.false475
  %214 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom482 = zext i32 %214 to i64, !dbg !6810
  %arrayidx483 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom482, !dbg !6810
  %215 = load i8, i8* %arrayidx483, align 1, !dbg !6810
  %conv484 = zext i8 %215 to i32, !dbg !6810
  %cmp485 = icmp eq i32 %conv484, 11, !dbg !6810
  br i1 %cmp485, label %land.lhs.true493, label %lor.lhs.false487, !dbg !6810

lor.lhs.false487:                                 ; preds = %lor.lhs.false481
  %216 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom488 = zext i32 %216 to i64, !dbg !6810
  %arrayidx489 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom488, !dbg !6810
  %217 = load i8, i8* %arrayidx489, align 1, !dbg !6810
  %conv490 = zext i8 %217 to i32, !dbg !6810
  %cmp491 = icmp eq i32 %conv490, 17, !dbg !6810
  br i1 %cmp491, label %land.lhs.true493, label %if.then564, !dbg !6810

land.lhs.true493:                                 ; preds = %lor.lhs.false487, %lor.lhs.false481, %lor.lhs.false475, %lor.lhs.false469
  %218 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom494 = zext i32 %218 to i64, !dbg !6810
  %arrayidx495 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom494, !dbg !6810
  %219 = load i8, i8* %arrayidx495, align 1, !dbg !6810
  %conv496 = zext i8 %219 to i32, !dbg !6810
  %cmp497 = icmp eq i32 %conv496, 8, !dbg !6810
  br i1 %cmp497, label %cond.true505, label %lor.lhs.false499, !dbg !6810

lor.lhs.false499:                                 ; preds = %land.lhs.true493
  %220 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom500 = zext i32 %220 to i64, !dbg !6810
  %arrayidx501 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom500, !dbg !6810
  %221 = load i8, i8* %arrayidx501, align 1, !dbg !6810
  %conv502 = zext i8 %221 to i32, !dbg !6810
  %cmp503 = icmp eq i32 %conv502, 9, !dbg !6810
  br i1 %cmp503, label %cond.true505, label %cond.false506, !dbg !6810

cond.true505:                                     ; preds = %lor.lhs.false499, %land.lhs.true493
  %222 = load i32, i32* %mode.addr, align 4, !dbg !6810
  br label %cond.end510, !dbg !6810

cond.false506:                                    ; preds = %lor.lhs.false499
  %223 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom507 = zext i32 %223 to i64, !dbg !6810
  %arrayidx508 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom507, !dbg !6810
  %224 = load i8, i8* %arrayidx508, align 1, !dbg !6810
  %conv509 = zext i8 %224 to i32, !dbg !6810
  br label %cond.end510, !dbg !6810

cond.end510:                                      ; preds = %cond.false506, %cond.true505
  %cond511 = phi i32 [ %222, %cond.true505 ], [ %conv509, %cond.false506 ], !dbg !6810
  %idxprom512 = zext i32 %cond511 to i64, !dbg !6810
  %arrayidx513 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom512, !dbg !6810
  %225 = load i8, i8* %arrayidx513, align 1, !dbg !6810
  %conv514 = zext i8 %225 to i32, !dbg !6810
  %cmp515 = icmp eq i32 %conv514, 9, !dbg !6810
  br i1 %cmp515, label %cond.true517, label %cond.false538, !dbg !6810

cond.true517:                                     ; preds = %cond.end510
  %226 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom518 = zext i32 %226 to i64, !dbg !6810
  %arrayidx519 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom518, !dbg !6810
  %227 = load i8, i8* %arrayidx519, align 1, !dbg !6810
  %conv520 = zext i8 %227 to i32, !dbg !6810
  %cmp521 = icmp eq i32 %conv520, 8, !dbg !6810
  br i1 %cmp521, label %cond.true529, label %lor.lhs.false523, !dbg !6810

lor.lhs.false523:                                 ; preds = %cond.true517
  %228 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom524 = zext i32 %228 to i64, !dbg !6810
  %arrayidx525 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom524, !dbg !6810
  %229 = load i8, i8* %arrayidx525, align 1, !dbg !6810
  %conv526 = zext i8 %229 to i32, !dbg !6810
  %cmp527 = icmp eq i32 %conv526, 9, !dbg !6810
  br i1 %cmp527, label %cond.true529, label %cond.false530, !dbg !6810

cond.true529:                                     ; preds = %lor.lhs.false523, %cond.true517
  %230 = load i32, i32* %mode.addr, align 4, !dbg !6810
  br label %cond.end534, !dbg !6810

cond.false530:                                    ; preds = %lor.lhs.false523
  %231 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom531 = zext i32 %231 to i64, !dbg !6810
  %arrayidx532 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom531, !dbg !6810
  %232 = load i8, i8* %arrayidx532, align 1, !dbg !6810
  %conv533 = zext i8 %232 to i32, !dbg !6810
  br label %cond.end534, !dbg !6810

cond.end534:                                      ; preds = %cond.false530, %cond.true529
  %cond535 = phi i32 [ %230, %cond.true529 ], [ %conv533, %cond.false530 ], !dbg !6810
  %sub536 = sub i32 %cond535, 42, !dbg !6810
  %add537 = add i32 %sub536, 4, !dbg !6810
  br label %cond.end558, !dbg !6810

cond.false538:                                    ; preds = %cond.end510
  %233 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom539 = zext i32 %233 to i64, !dbg !6810
  %arrayidx540 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom539, !dbg !6810
  %234 = load i8, i8* %arrayidx540, align 1, !dbg !6810
  %conv541 = zext i8 %234 to i32, !dbg !6810
  %cmp542 = icmp eq i32 %conv541, 8, !dbg !6810
  br i1 %cmp542, label %cond.true550, label %lor.lhs.false544, !dbg !6810

lor.lhs.false544:                                 ; preds = %cond.false538
  %235 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom545 = zext i32 %235 to i64, !dbg !6810
  %arrayidx546 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom545, !dbg !6810
  %236 = load i8, i8* %arrayidx546, align 1, !dbg !6810
  %conv547 = zext i8 %236 to i32, !dbg !6810
  %cmp548 = icmp eq i32 %conv547, 9, !dbg !6810
  br i1 %cmp548, label %cond.true550, label %cond.false551, !dbg !6810

cond.true550:                                     ; preds = %lor.lhs.false544, %cond.false538
  %237 = load i32, i32* %mode.addr, align 4, !dbg !6810
  br label %cond.end555, !dbg !6810

cond.false551:                                    ; preds = %lor.lhs.false544
  %238 = load i32, i32* %mode.addr, align 4, !dbg !6810
  %idxprom552 = zext i32 %238 to i64, !dbg !6810
  %arrayidx553 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom552, !dbg !6810
  %239 = load i8, i8* %arrayidx553, align 1, !dbg !6810
  %conv554 = zext i8 %239 to i32, !dbg !6810
  br label %cond.end555, !dbg !6810

cond.end555:                                      ; preds = %cond.false551, %cond.true550
  %cond556 = phi i32 [ %237, %cond.true550 ], [ %conv554, %cond.false551 ], !dbg !6810
  %sub557 = sub i32 %cond556, 38, !dbg !6810
  br label %cond.end558, !dbg !6810

cond.end558:                                      ; preds = %cond.end555, %cond.end534
  %cond559 = phi i32 [ %add537, %cond.end534 ], [ %sub557, %cond.end555 ], !dbg !6810
  %idxprom560 = zext i32 %cond559 to i64, !dbg !6810
  %arrayidx561 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom560, !dbg !6810
  %240 = load %struct.real_format*, %struct.real_format** %arrayidx561, align 8, !dbg !6810
  %has_inf = getelementptr inbounds %struct.real_format, %struct.real_format* %240, i32 0, i32 12, !dbg !6810
  %241 = load i8, i8* %has_inf, align 1, !dbg !6810
  %conv562 = zext i8 %241 to i32, !dbg !6810
  %tobool563 = icmp ne i32 %conv562, 0, !dbg !6810
  br i1 %tobool563, label %if.end565, label %if.then564, !dbg !6811

if.then564:                                       ; preds = %cond.end558, %lor.lhs.false487, %land.lhs.true467
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6812
  br label %return, !dbg !6812

if.end565:                                        ; preds = %cond.end558, %land.lhs.true463, %if.end460
  %242 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom566 = zext i32 %242 to i64, !dbg !6813
  %arrayidx567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom566, !dbg !6813
  %243 = load i8, i8* %arrayidx567, align 1, !dbg !6813
  %conv568 = zext i8 %243 to i32, !dbg !6813
  %cmp569 = icmp eq i32 %conv568, 8, !dbg !6813
  br i1 %cmp569, label %land.lhs.true589, label %lor.lhs.false571, !dbg !6813

lor.lhs.false571:                                 ; preds = %if.end565
  %244 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom572 = zext i32 %244 to i64, !dbg !6813
  %arrayidx573 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom572, !dbg !6813
  %245 = load i8, i8* %arrayidx573, align 1, !dbg !6813
  %conv574 = zext i8 %245 to i32, !dbg !6813
  %cmp575 = icmp eq i32 %conv574, 9, !dbg !6813
  br i1 %cmp575, label %land.lhs.true589, label %lor.lhs.false577, !dbg !6813

lor.lhs.false577:                                 ; preds = %lor.lhs.false571
  %246 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom578 = zext i32 %246 to i64, !dbg !6813
  %arrayidx579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom578, !dbg !6813
  %247 = load i8, i8* %arrayidx579, align 1, !dbg !6813
  %conv580 = zext i8 %247 to i32, !dbg !6813
  %cmp581 = icmp eq i32 %conv580, 11, !dbg !6813
  br i1 %cmp581, label %land.lhs.true589, label %lor.lhs.false583, !dbg !6813

lor.lhs.false583:                                 ; preds = %lor.lhs.false577
  %248 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom584 = zext i32 %248 to i64, !dbg !6813
  %arrayidx585 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom584, !dbg !6813
  %249 = load i8, i8* %arrayidx585, align 1, !dbg !6813
  %conv586 = zext i8 %249 to i32, !dbg !6813
  %cmp587 = icmp eq i32 %conv586, 17, !dbg !6813
  br i1 %cmp587, label %land.lhs.true589, label %if.end787, !dbg !6813

land.lhs.true589:                                 ; preds = %lor.lhs.false583, %lor.lhs.false577, %lor.lhs.false571, %if.end565
  %250 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom590 = zext i32 %250 to i64, !dbg !6813
  %arrayidx591 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom590, !dbg !6813
  %251 = load i8, i8* %arrayidx591, align 1, !dbg !6813
  %conv592 = zext i8 %251 to i32, !dbg !6813
  %cmp593 = icmp eq i32 %conv592, 8, !dbg !6813
  br i1 %cmp593, label %cond.true601, label %lor.lhs.false595, !dbg !6813

lor.lhs.false595:                                 ; preds = %land.lhs.true589
  %252 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom596 = zext i32 %252 to i64, !dbg !6813
  %arrayidx597 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom596, !dbg !6813
  %253 = load i8, i8* %arrayidx597, align 1, !dbg !6813
  %conv598 = zext i8 %253 to i32, !dbg !6813
  %cmp599 = icmp eq i32 %conv598, 9, !dbg !6813
  br i1 %cmp599, label %cond.true601, label %cond.false602, !dbg !6813

cond.true601:                                     ; preds = %lor.lhs.false595, %land.lhs.true589
  %254 = load i32, i32* %mode.addr, align 4, !dbg !6813
  br label %cond.end606, !dbg !6813

cond.false602:                                    ; preds = %lor.lhs.false595
  %255 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom603 = zext i32 %255 to i64, !dbg !6813
  %arrayidx604 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom603, !dbg !6813
  %256 = load i8, i8* %arrayidx604, align 1, !dbg !6813
  %conv605 = zext i8 %256 to i32, !dbg !6813
  br label %cond.end606, !dbg !6813

cond.end606:                                      ; preds = %cond.false602, %cond.true601
  %cond607 = phi i32 [ %254, %cond.true601 ], [ %conv605, %cond.false602 ], !dbg !6813
  %idxprom608 = zext i32 %cond607 to i64, !dbg !6813
  %arrayidx609 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom608, !dbg !6813
  %257 = load i8, i8* %arrayidx609, align 1, !dbg !6813
  %conv610 = zext i8 %257 to i32, !dbg !6813
  %cmp611 = icmp eq i32 %conv610, 9, !dbg !6813
  br i1 %cmp611, label %cond.true613, label %cond.false634, !dbg !6813

cond.true613:                                     ; preds = %cond.end606
  %258 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom614 = zext i32 %258 to i64, !dbg !6813
  %arrayidx615 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom614, !dbg !6813
  %259 = load i8, i8* %arrayidx615, align 1, !dbg !6813
  %conv616 = zext i8 %259 to i32, !dbg !6813
  %cmp617 = icmp eq i32 %conv616, 8, !dbg !6813
  br i1 %cmp617, label %cond.true625, label %lor.lhs.false619, !dbg !6813

lor.lhs.false619:                                 ; preds = %cond.true613
  %260 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom620 = zext i32 %260 to i64, !dbg !6813
  %arrayidx621 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom620, !dbg !6813
  %261 = load i8, i8* %arrayidx621, align 1, !dbg !6813
  %conv622 = zext i8 %261 to i32, !dbg !6813
  %cmp623 = icmp eq i32 %conv622, 9, !dbg !6813
  br i1 %cmp623, label %cond.true625, label %cond.false626, !dbg !6813

cond.true625:                                     ; preds = %lor.lhs.false619, %cond.true613
  %262 = load i32, i32* %mode.addr, align 4, !dbg !6813
  br label %cond.end630, !dbg !6813

cond.false626:                                    ; preds = %lor.lhs.false619
  %263 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom627 = zext i32 %263 to i64, !dbg !6813
  %arrayidx628 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom627, !dbg !6813
  %264 = load i8, i8* %arrayidx628, align 1, !dbg !6813
  %conv629 = zext i8 %264 to i32, !dbg !6813
  br label %cond.end630, !dbg !6813

cond.end630:                                      ; preds = %cond.false626, %cond.true625
  %cond631 = phi i32 [ %262, %cond.true625 ], [ %conv629, %cond.false626 ], !dbg !6813
  %sub632 = sub i32 %cond631, 42, !dbg !6813
  %add633 = add i32 %sub632, 4, !dbg !6813
  br label %cond.end654, !dbg !6813

cond.false634:                                    ; preds = %cond.end606
  %265 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom635 = zext i32 %265 to i64, !dbg !6813
  %arrayidx636 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom635, !dbg !6813
  %266 = load i8, i8* %arrayidx636, align 1, !dbg !6813
  %conv637 = zext i8 %266 to i32, !dbg !6813
  %cmp638 = icmp eq i32 %conv637, 8, !dbg !6813
  br i1 %cmp638, label %cond.true646, label %lor.lhs.false640, !dbg !6813

lor.lhs.false640:                                 ; preds = %cond.false634
  %267 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom641 = zext i32 %267 to i64, !dbg !6813
  %arrayidx642 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom641, !dbg !6813
  %268 = load i8, i8* %arrayidx642, align 1, !dbg !6813
  %conv643 = zext i8 %268 to i32, !dbg !6813
  %cmp644 = icmp eq i32 %conv643, 9, !dbg !6813
  br i1 %cmp644, label %cond.true646, label %cond.false647, !dbg !6813

cond.true646:                                     ; preds = %lor.lhs.false640, %cond.false634
  %269 = load i32, i32* %mode.addr, align 4, !dbg !6813
  br label %cond.end651, !dbg !6813

cond.false647:                                    ; preds = %lor.lhs.false640
  %270 = load i32, i32* %mode.addr, align 4, !dbg !6813
  %idxprom648 = zext i32 %270 to i64, !dbg !6813
  %arrayidx649 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom648, !dbg !6813
  %271 = load i8, i8* %arrayidx649, align 1, !dbg !6813
  %conv650 = zext i8 %271 to i32, !dbg !6813
  br label %cond.end651, !dbg !6813

cond.end651:                                      ; preds = %cond.false647, %cond.true646
  %cond652 = phi i32 [ %269, %cond.true646 ], [ %conv650, %cond.false647 ], !dbg !6813
  %sub653 = sub i32 %cond652, 38, !dbg !6813
  br label %cond.end654, !dbg !6813

cond.end654:                                      ; preds = %cond.end651, %cond.end630
  %cond655 = phi i32 [ %add633, %cond.end630 ], [ %sub653, %cond.end651 ], !dbg !6813
  %idxprom656 = zext i32 %cond655 to i64, !dbg !6813
  %arrayidx657 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom656, !dbg !6813
  %272 = load %struct.real_format*, %struct.real_format** %arrayidx657, align 8, !dbg !6813
  %has_inf658 = getelementptr inbounds %struct.real_format, %struct.real_format* %272, i32 0, i32 12, !dbg !6813
  %273 = load i8, i8* %has_inf658, align 1, !dbg !6813
  %conv659 = zext i8 %273 to i32, !dbg !6813
  %tobool660 = icmp ne i32 %conv659, 0, !dbg !6813
  br i1 %tobool660, label %land.lhs.true661, label %if.end787, !dbg !6815

land.lhs.true661:                                 ; preds = %cond.end654
  %274 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom662 = zext i32 %274 to i64, !dbg !6816
  %arrayidx663 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom662, !dbg !6816
  %275 = load i8, i8* %arrayidx663, align 1, !dbg !6816
  %conv664 = zext i8 %275 to i32, !dbg !6816
  %cmp665 = icmp eq i32 %conv664, 8, !dbg !6816
  br i1 %cmp665, label %land.lhs.true685, label %lor.lhs.false667, !dbg !6816

lor.lhs.false667:                                 ; preds = %land.lhs.true661
  %276 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom668 = zext i32 %276 to i64, !dbg !6816
  %arrayidx669 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom668, !dbg !6816
  %277 = load i8, i8* %arrayidx669, align 1, !dbg !6816
  %conv670 = zext i8 %277 to i32, !dbg !6816
  %cmp671 = icmp eq i32 %conv670, 9, !dbg !6816
  br i1 %cmp671, label %land.lhs.true685, label %lor.lhs.false673, !dbg !6816

lor.lhs.false673:                                 ; preds = %lor.lhs.false667
  %278 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom674 = zext i32 %278 to i64, !dbg !6816
  %arrayidx675 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom674, !dbg !6816
  %279 = load i8, i8* %arrayidx675, align 1, !dbg !6816
  %conv676 = zext i8 %279 to i32, !dbg !6816
  %cmp677 = icmp eq i32 %conv676, 11, !dbg !6816
  br i1 %cmp677, label %land.lhs.true685, label %lor.lhs.false679, !dbg !6816

lor.lhs.false679:                                 ; preds = %lor.lhs.false673
  %280 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom680 = zext i32 %280 to i64, !dbg !6816
  %arrayidx681 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom680, !dbg !6816
  %281 = load i8, i8* %arrayidx681, align 1, !dbg !6816
  %conv682 = zext i8 %281 to i32, !dbg !6816
  %cmp683 = icmp eq i32 %conv682, 17, !dbg !6816
  br i1 %cmp683, label %land.lhs.true685, label %if.end787, !dbg !6816

land.lhs.true685:                                 ; preds = %lor.lhs.false679, %lor.lhs.false673, %lor.lhs.false667, %land.lhs.true661
  %282 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom686 = zext i32 %282 to i64, !dbg !6816
  %arrayidx687 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom686, !dbg !6816
  %283 = load i8, i8* %arrayidx687, align 1, !dbg !6816
  %conv688 = zext i8 %283 to i32, !dbg !6816
  %cmp689 = icmp eq i32 %conv688, 8, !dbg !6816
  br i1 %cmp689, label %cond.true697, label %lor.lhs.false691, !dbg !6816

lor.lhs.false691:                                 ; preds = %land.lhs.true685
  %284 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom692 = zext i32 %284 to i64, !dbg !6816
  %arrayidx693 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom692, !dbg !6816
  %285 = load i8, i8* %arrayidx693, align 1, !dbg !6816
  %conv694 = zext i8 %285 to i32, !dbg !6816
  %cmp695 = icmp eq i32 %conv694, 9, !dbg !6816
  br i1 %cmp695, label %cond.true697, label %cond.false698, !dbg !6816

cond.true697:                                     ; preds = %lor.lhs.false691, %land.lhs.true685
  %286 = load i32, i32* %mode.addr, align 4, !dbg !6816
  br label %cond.end702, !dbg !6816

cond.false698:                                    ; preds = %lor.lhs.false691
  %287 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom699 = zext i32 %287 to i64, !dbg !6816
  %arrayidx700 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom699, !dbg !6816
  %288 = load i8, i8* %arrayidx700, align 1, !dbg !6816
  %conv701 = zext i8 %288 to i32, !dbg !6816
  br label %cond.end702, !dbg !6816

cond.end702:                                      ; preds = %cond.false698, %cond.true697
  %cond703 = phi i32 [ %286, %cond.true697 ], [ %conv701, %cond.false698 ], !dbg !6816
  %idxprom704 = zext i32 %cond703 to i64, !dbg !6816
  %arrayidx705 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom704, !dbg !6816
  %289 = load i8, i8* %arrayidx705, align 1, !dbg !6816
  %conv706 = zext i8 %289 to i32, !dbg !6816
  %cmp707 = icmp eq i32 %conv706, 9, !dbg !6816
  br i1 %cmp707, label %cond.true709, label %cond.false730, !dbg !6816

cond.true709:                                     ; preds = %cond.end702
  %290 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom710 = zext i32 %290 to i64, !dbg !6816
  %arrayidx711 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom710, !dbg !6816
  %291 = load i8, i8* %arrayidx711, align 1, !dbg !6816
  %conv712 = zext i8 %291 to i32, !dbg !6816
  %cmp713 = icmp eq i32 %conv712, 8, !dbg !6816
  br i1 %cmp713, label %cond.true721, label %lor.lhs.false715, !dbg !6816

lor.lhs.false715:                                 ; preds = %cond.true709
  %292 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom716 = zext i32 %292 to i64, !dbg !6816
  %arrayidx717 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom716, !dbg !6816
  %293 = load i8, i8* %arrayidx717, align 1, !dbg !6816
  %conv718 = zext i8 %293 to i32, !dbg !6816
  %cmp719 = icmp eq i32 %conv718, 9, !dbg !6816
  br i1 %cmp719, label %cond.true721, label %cond.false722, !dbg !6816

cond.true721:                                     ; preds = %lor.lhs.false715, %cond.true709
  %294 = load i32, i32* %mode.addr, align 4, !dbg !6816
  br label %cond.end726, !dbg !6816

cond.false722:                                    ; preds = %lor.lhs.false715
  %295 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom723 = zext i32 %295 to i64, !dbg !6816
  %arrayidx724 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom723, !dbg !6816
  %296 = load i8, i8* %arrayidx724, align 1, !dbg !6816
  %conv725 = zext i8 %296 to i32, !dbg !6816
  br label %cond.end726, !dbg !6816

cond.end726:                                      ; preds = %cond.false722, %cond.true721
  %cond727 = phi i32 [ %294, %cond.true721 ], [ %conv725, %cond.false722 ], !dbg !6816
  %sub728 = sub i32 %cond727, 42, !dbg !6816
  %add729 = add i32 %sub728, 4, !dbg !6816
  br label %cond.end750, !dbg !6816

cond.false730:                                    ; preds = %cond.end702
  %297 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom731 = zext i32 %297 to i64, !dbg !6816
  %arrayidx732 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom731, !dbg !6816
  %298 = load i8, i8* %arrayidx732, align 1, !dbg !6816
  %conv733 = zext i8 %298 to i32, !dbg !6816
  %cmp734 = icmp eq i32 %conv733, 8, !dbg !6816
  br i1 %cmp734, label %cond.true742, label %lor.lhs.false736, !dbg !6816

lor.lhs.false736:                                 ; preds = %cond.false730
  %299 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom737 = zext i32 %299 to i64, !dbg !6816
  %arrayidx738 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom737, !dbg !6816
  %300 = load i8, i8* %arrayidx738, align 1, !dbg !6816
  %conv739 = zext i8 %300 to i32, !dbg !6816
  %cmp740 = icmp eq i32 %conv739, 9, !dbg !6816
  br i1 %cmp740, label %cond.true742, label %cond.false743, !dbg !6816

cond.true742:                                     ; preds = %lor.lhs.false736, %cond.false730
  %301 = load i32, i32* %mode.addr, align 4, !dbg !6816
  br label %cond.end747, !dbg !6816

cond.false743:                                    ; preds = %lor.lhs.false736
  %302 = load i32, i32* %mode.addr, align 4, !dbg !6816
  %idxprom744 = zext i32 %302 to i64, !dbg !6816
  %arrayidx745 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom744, !dbg !6816
  %303 = load i8, i8* %arrayidx745, align 1, !dbg !6816
  %conv746 = zext i8 %303 to i32, !dbg !6816
  br label %cond.end747, !dbg !6816

cond.end747:                                      ; preds = %cond.false743, %cond.true742
  %cond748 = phi i32 [ %301, %cond.true742 ], [ %conv746, %cond.false743 ], !dbg !6816
  %sub749 = sub i32 %cond748, 38, !dbg !6816
  br label %cond.end750, !dbg !6816

cond.end750:                                      ; preds = %cond.end747, %cond.end726
  %cond751 = phi i32 [ %add729, %cond.end726 ], [ %sub749, %cond.end747 ], !dbg !6816
  %idxprom752 = zext i32 %cond751 to i64, !dbg !6816
  %arrayidx753 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom752, !dbg !6816
  %304 = load %struct.real_format*, %struct.real_format** %arrayidx753, align 8, !dbg !6816
  %has_nans754 = getelementptr inbounds %struct.real_format, %struct.real_format* %304, i32 0, i32 11, !dbg !6816
  %305 = load i8, i8* %has_nans754, align 2, !dbg !6816
  %conv755 = zext i8 %305 to i32, !dbg !6816
  %tobool756 = icmp ne i32 %conv755, 0, !dbg !6816
  br i1 %tobool756, label %land.lhs.true757, label %if.end787, !dbg !6816

land.lhs.true757:                                 ; preds = %cond.end750
  %306 = load i32, i32* @flag_finite_math_only, align 4, !dbg !6816
  %tobool758 = icmp ne i32 %306, 0, !dbg !6816
  br i1 %tobool758, label %if.end787, label %land.lhs.true759, !dbg !6817

land.lhs.true759:                                 ; preds = %land.lhs.true757
  %307 = load i32, i32* @flag_trapping_math, align 4, !dbg !6818
  %tobool760 = icmp ne i32 %307, 0, !dbg !6818
  br i1 %tobool760, label %land.lhs.true761, label %if.end787, !dbg !6819

land.lhs.true761:                                 ; preds = %land.lhs.true759
  %call762 = call zeroext i8 @real_isinf(%struct.real_value* %f0), !dbg !6820
  %conv763 = zext i8 %call762 to i32, !dbg !6820
  %tobool764 = icmp ne i32 %conv763, 0, !dbg !6820
  br i1 %tobool764, label %land.lhs.true765, label %if.end787, !dbg !6821

land.lhs.true765:                                 ; preds = %land.lhs.true761
  %call766 = call zeroext i8 @real_isinf(%struct.real_value* %f1), !dbg !6822
  %conv767 = zext i8 %call766 to i32, !dbg !6822
  %tobool768 = icmp ne i32 %conv767, 0, !dbg !6822
  br i1 %tobool768, label %if.then769, label %if.end787, !dbg !6823

if.then769:                                       ; preds = %land.lhs.true765
  call void @llvm.dbg.declare(metadata i32* %s0, metadata !6824, metadata !DIExpression()), !dbg !6826
  %call770 = call zeroext i8 @real_isneg(%struct.real_value* %f0), !dbg !6827
  %conv771 = zext i8 %call770 to i32, !dbg !6827
  store i32 %conv771, i32* %s0, align 4, !dbg !6826
  call void @llvm.dbg.declare(metadata i32* %s1, metadata !6828, metadata !DIExpression()), !dbg !6829
  %call772 = call zeroext i8 @real_isneg(%struct.real_value* %f1), !dbg !6830
  %conv773 = zext i8 %call772 to i32, !dbg !6830
  store i32 %conv773, i32* %s1, align 4, !dbg !6829
  %308 = load i32, i32* %code.addr, align 4, !dbg !6831
  switch i32 %308, label %sw.default785 [
    i32 49, label %sw.bb774
    i32 50, label %sw.bb779
    i32 55, label %sw.bb784
  ], !dbg !6832

sw.bb774:                                         ; preds = %if.then769
  %309 = load i32, i32* %s0, align 4, !dbg !6833
  %310 = load i32, i32* %s1, align 4, !dbg !6836
  %cmp775 = icmp ne i32 %309, %310, !dbg !6837
  br i1 %cmp775, label %if.then777, label %if.end778, !dbg !6838

if.then777:                                       ; preds = %sw.bb774
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6839
  br label %return, !dbg !6839

if.end778:                                        ; preds = %sw.bb774
  br label %sw.epilog786, !dbg !6840

sw.bb779:                                         ; preds = %if.then769
  %311 = load i32, i32* %s0, align 4, !dbg !6841
  %312 = load i32, i32* %s1, align 4, !dbg !6843
  %cmp780 = icmp eq i32 %311, %312, !dbg !6844
  br i1 %cmp780, label %if.then782, label %if.end783, !dbg !6845

if.then782:                                       ; preds = %sw.bb779
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6846
  br label %return, !dbg !6846

if.end783:                                        ; preds = %sw.bb779
  br label %sw.epilog786, !dbg !6847

sw.bb784:                                         ; preds = %if.then769
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6848
  br label %return, !dbg !6848

sw.default785:                                    ; preds = %if.then769
  br label %sw.epilog786, !dbg !6849

sw.epilog786:                                     ; preds = %sw.default785, %if.end783, %if.end778
  br label %if.end787, !dbg !6850

if.end787:                                        ; preds = %sw.epilog786, %land.lhs.true765, %land.lhs.true761, %land.lhs.true759, %land.lhs.true757, %cond.end750, %lor.lhs.false679, %cond.end654, %lor.lhs.false583
  %313 = load i32, i32* %code.addr, align 4, !dbg !6851
  %cmp788 = icmp eq i32 %313, 52, !dbg !6853
  br i1 %cmp788, label %land.lhs.true790, label %if.end1003, !dbg !6854

land.lhs.true790:                                 ; preds = %if.end787
  %314 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom791 = zext i32 %314 to i64, !dbg !6855
  %arrayidx792 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom791, !dbg !6855
  %315 = load i8, i8* %arrayidx792, align 1, !dbg !6855
  %conv793 = zext i8 %315 to i32, !dbg !6855
  %cmp794 = icmp eq i32 %conv793, 8, !dbg !6855
  br i1 %cmp794, label %land.lhs.true814, label %lor.lhs.false796, !dbg !6855

lor.lhs.false796:                                 ; preds = %land.lhs.true790
  %316 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom797 = zext i32 %316 to i64, !dbg !6855
  %arrayidx798 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom797, !dbg !6855
  %317 = load i8, i8* %arrayidx798, align 1, !dbg !6855
  %conv799 = zext i8 %317 to i32, !dbg !6855
  %cmp800 = icmp eq i32 %conv799, 9, !dbg !6855
  br i1 %cmp800, label %land.lhs.true814, label %lor.lhs.false802, !dbg !6855

lor.lhs.false802:                                 ; preds = %lor.lhs.false796
  %318 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom803 = zext i32 %318 to i64, !dbg !6855
  %arrayidx804 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom803, !dbg !6855
  %319 = load i8, i8* %arrayidx804, align 1, !dbg !6855
  %conv805 = zext i8 %319 to i32, !dbg !6855
  %cmp806 = icmp eq i32 %conv805, 11, !dbg !6855
  br i1 %cmp806, label %land.lhs.true814, label %lor.lhs.false808, !dbg !6855

lor.lhs.false808:                                 ; preds = %lor.lhs.false802
  %320 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom809 = zext i32 %320 to i64, !dbg !6855
  %arrayidx810 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom809, !dbg !6855
  %321 = load i8, i8* %arrayidx810, align 1, !dbg !6855
  %conv811 = zext i8 %321 to i32, !dbg !6855
  %cmp812 = icmp eq i32 %conv811, 17, !dbg !6855
  br i1 %cmp812, label %land.lhs.true814, label %if.end1003, !dbg !6855

land.lhs.true814:                                 ; preds = %lor.lhs.false808, %lor.lhs.false802, %lor.lhs.false796, %land.lhs.true790
  %322 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom815 = zext i32 %322 to i64, !dbg !6855
  %arrayidx816 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom815, !dbg !6855
  %323 = load i8, i8* %arrayidx816, align 1, !dbg !6855
  %conv817 = zext i8 %323 to i32, !dbg !6855
  %cmp818 = icmp eq i32 %conv817, 8, !dbg !6855
  br i1 %cmp818, label %cond.true826, label %lor.lhs.false820, !dbg !6855

lor.lhs.false820:                                 ; preds = %land.lhs.true814
  %324 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom821 = zext i32 %324 to i64, !dbg !6855
  %arrayidx822 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom821, !dbg !6855
  %325 = load i8, i8* %arrayidx822, align 1, !dbg !6855
  %conv823 = zext i8 %325 to i32, !dbg !6855
  %cmp824 = icmp eq i32 %conv823, 9, !dbg !6855
  br i1 %cmp824, label %cond.true826, label %cond.false827, !dbg !6855

cond.true826:                                     ; preds = %lor.lhs.false820, %land.lhs.true814
  %326 = load i32, i32* %mode.addr, align 4, !dbg !6855
  br label %cond.end831, !dbg !6855

cond.false827:                                    ; preds = %lor.lhs.false820
  %327 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom828 = zext i32 %327 to i64, !dbg !6855
  %arrayidx829 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom828, !dbg !6855
  %328 = load i8, i8* %arrayidx829, align 1, !dbg !6855
  %conv830 = zext i8 %328 to i32, !dbg !6855
  br label %cond.end831, !dbg !6855

cond.end831:                                      ; preds = %cond.false827, %cond.true826
  %cond832 = phi i32 [ %326, %cond.true826 ], [ %conv830, %cond.false827 ], !dbg !6855
  %idxprom833 = zext i32 %cond832 to i64, !dbg !6855
  %arrayidx834 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom833, !dbg !6855
  %329 = load i8, i8* %arrayidx834, align 1, !dbg !6855
  %conv835 = zext i8 %329 to i32, !dbg !6855
  %cmp836 = icmp eq i32 %conv835, 9, !dbg !6855
  br i1 %cmp836, label %cond.true838, label %cond.false859, !dbg !6855

cond.true838:                                     ; preds = %cond.end831
  %330 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom839 = zext i32 %330 to i64, !dbg !6855
  %arrayidx840 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom839, !dbg !6855
  %331 = load i8, i8* %arrayidx840, align 1, !dbg !6855
  %conv841 = zext i8 %331 to i32, !dbg !6855
  %cmp842 = icmp eq i32 %conv841, 8, !dbg !6855
  br i1 %cmp842, label %cond.true850, label %lor.lhs.false844, !dbg !6855

lor.lhs.false844:                                 ; preds = %cond.true838
  %332 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom845 = zext i32 %332 to i64, !dbg !6855
  %arrayidx846 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom845, !dbg !6855
  %333 = load i8, i8* %arrayidx846, align 1, !dbg !6855
  %conv847 = zext i8 %333 to i32, !dbg !6855
  %cmp848 = icmp eq i32 %conv847, 9, !dbg !6855
  br i1 %cmp848, label %cond.true850, label %cond.false851, !dbg !6855

cond.true850:                                     ; preds = %lor.lhs.false844, %cond.true838
  %334 = load i32, i32* %mode.addr, align 4, !dbg !6855
  br label %cond.end855, !dbg !6855

cond.false851:                                    ; preds = %lor.lhs.false844
  %335 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom852 = zext i32 %335 to i64, !dbg !6855
  %arrayidx853 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom852, !dbg !6855
  %336 = load i8, i8* %arrayidx853, align 1, !dbg !6855
  %conv854 = zext i8 %336 to i32, !dbg !6855
  br label %cond.end855, !dbg !6855

cond.end855:                                      ; preds = %cond.false851, %cond.true850
  %cond856 = phi i32 [ %334, %cond.true850 ], [ %conv854, %cond.false851 ], !dbg !6855
  %sub857 = sub i32 %cond856, 42, !dbg !6855
  %add858 = add i32 %sub857, 4, !dbg !6855
  br label %cond.end879, !dbg !6855

cond.false859:                                    ; preds = %cond.end831
  %337 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom860 = zext i32 %337 to i64, !dbg !6855
  %arrayidx861 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom860, !dbg !6855
  %338 = load i8, i8* %arrayidx861, align 1, !dbg !6855
  %conv862 = zext i8 %338 to i32, !dbg !6855
  %cmp863 = icmp eq i32 %conv862, 8, !dbg !6855
  br i1 %cmp863, label %cond.true871, label %lor.lhs.false865, !dbg !6855

lor.lhs.false865:                                 ; preds = %cond.false859
  %339 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom866 = zext i32 %339 to i64, !dbg !6855
  %arrayidx867 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom866, !dbg !6855
  %340 = load i8, i8* %arrayidx867, align 1, !dbg !6855
  %conv868 = zext i8 %340 to i32, !dbg !6855
  %cmp869 = icmp eq i32 %conv868, 9, !dbg !6855
  br i1 %cmp869, label %cond.true871, label %cond.false872, !dbg !6855

cond.true871:                                     ; preds = %lor.lhs.false865, %cond.false859
  %341 = load i32, i32* %mode.addr, align 4, !dbg !6855
  br label %cond.end876, !dbg !6855

cond.false872:                                    ; preds = %lor.lhs.false865
  %342 = load i32, i32* %mode.addr, align 4, !dbg !6855
  %idxprom873 = zext i32 %342 to i64, !dbg !6855
  %arrayidx874 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom873, !dbg !6855
  %343 = load i8, i8* %arrayidx874, align 1, !dbg !6855
  %conv875 = zext i8 %343 to i32, !dbg !6855
  br label %cond.end876, !dbg !6855

cond.end876:                                      ; preds = %cond.false872, %cond.true871
  %cond877 = phi i32 [ %341, %cond.true871 ], [ %conv875, %cond.false872 ], !dbg !6855
  %sub878 = sub i32 %cond877, 38, !dbg !6855
  br label %cond.end879, !dbg !6855

cond.end879:                                      ; preds = %cond.end876, %cond.end855
  %cond880 = phi i32 [ %add858, %cond.end855 ], [ %sub878, %cond.end876 ], !dbg !6855
  %idxprom881 = zext i32 %cond880 to i64, !dbg !6855
  %arrayidx882 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom881, !dbg !6855
  %344 = load %struct.real_format*, %struct.real_format** %arrayidx882, align 8, !dbg !6855
  %has_inf883 = getelementptr inbounds %struct.real_format, %struct.real_format* %344, i32 0, i32 12, !dbg !6855
  %345 = load i8, i8* %has_inf883, align 1, !dbg !6855
  %conv884 = zext i8 %345 to i32, !dbg !6855
  %tobool885 = icmp ne i32 %conv884, 0, !dbg !6855
  br i1 %tobool885, label %land.lhs.true886, label %if.end1003, !dbg !6856

land.lhs.true886:                                 ; preds = %cond.end879
  %346 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom887 = zext i32 %346 to i64, !dbg !6857
  %arrayidx888 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom887, !dbg !6857
  %347 = load i8, i8* %arrayidx888, align 1, !dbg !6857
  %conv889 = zext i8 %347 to i32, !dbg !6857
  %cmp890 = icmp eq i32 %conv889, 8, !dbg !6857
  br i1 %cmp890, label %land.lhs.true910, label %lor.lhs.false892, !dbg !6857

lor.lhs.false892:                                 ; preds = %land.lhs.true886
  %348 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom893 = zext i32 %348 to i64, !dbg !6857
  %arrayidx894 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom893, !dbg !6857
  %349 = load i8, i8* %arrayidx894, align 1, !dbg !6857
  %conv895 = zext i8 %349 to i32, !dbg !6857
  %cmp896 = icmp eq i32 %conv895, 9, !dbg !6857
  br i1 %cmp896, label %land.lhs.true910, label %lor.lhs.false898, !dbg !6857

lor.lhs.false898:                                 ; preds = %lor.lhs.false892
  %350 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom899 = zext i32 %350 to i64, !dbg !6857
  %arrayidx900 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom899, !dbg !6857
  %351 = load i8, i8* %arrayidx900, align 1, !dbg !6857
  %conv901 = zext i8 %351 to i32, !dbg !6857
  %cmp902 = icmp eq i32 %conv901, 11, !dbg !6857
  br i1 %cmp902, label %land.lhs.true910, label %lor.lhs.false904, !dbg !6857

lor.lhs.false904:                                 ; preds = %lor.lhs.false898
  %352 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom905 = zext i32 %352 to i64, !dbg !6857
  %arrayidx906 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom905, !dbg !6857
  %353 = load i8, i8* %arrayidx906, align 1, !dbg !6857
  %conv907 = zext i8 %353 to i32, !dbg !6857
  %cmp908 = icmp eq i32 %conv907, 17, !dbg !6857
  br i1 %cmp908, label %land.lhs.true910, label %if.end1003, !dbg !6857

land.lhs.true910:                                 ; preds = %lor.lhs.false904, %lor.lhs.false898, %lor.lhs.false892, %land.lhs.true886
  %354 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom911 = zext i32 %354 to i64, !dbg !6857
  %arrayidx912 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom911, !dbg !6857
  %355 = load i8, i8* %arrayidx912, align 1, !dbg !6857
  %conv913 = zext i8 %355 to i32, !dbg !6857
  %cmp914 = icmp eq i32 %conv913, 8, !dbg !6857
  br i1 %cmp914, label %cond.true922, label %lor.lhs.false916, !dbg !6857

lor.lhs.false916:                                 ; preds = %land.lhs.true910
  %356 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom917 = zext i32 %356 to i64, !dbg !6857
  %arrayidx918 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom917, !dbg !6857
  %357 = load i8, i8* %arrayidx918, align 1, !dbg !6857
  %conv919 = zext i8 %357 to i32, !dbg !6857
  %cmp920 = icmp eq i32 %conv919, 9, !dbg !6857
  br i1 %cmp920, label %cond.true922, label %cond.false923, !dbg !6857

cond.true922:                                     ; preds = %lor.lhs.false916, %land.lhs.true910
  %358 = load i32, i32* %mode.addr, align 4, !dbg !6857
  br label %cond.end927, !dbg !6857

cond.false923:                                    ; preds = %lor.lhs.false916
  %359 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom924 = zext i32 %359 to i64, !dbg !6857
  %arrayidx925 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom924, !dbg !6857
  %360 = load i8, i8* %arrayidx925, align 1, !dbg !6857
  %conv926 = zext i8 %360 to i32, !dbg !6857
  br label %cond.end927, !dbg !6857

cond.end927:                                      ; preds = %cond.false923, %cond.true922
  %cond928 = phi i32 [ %358, %cond.true922 ], [ %conv926, %cond.false923 ], !dbg !6857
  %idxprom929 = zext i32 %cond928 to i64, !dbg !6857
  %arrayidx930 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom929, !dbg !6857
  %361 = load i8, i8* %arrayidx930, align 1, !dbg !6857
  %conv931 = zext i8 %361 to i32, !dbg !6857
  %cmp932 = icmp eq i32 %conv931, 9, !dbg !6857
  br i1 %cmp932, label %cond.true934, label %cond.false955, !dbg !6857

cond.true934:                                     ; preds = %cond.end927
  %362 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom935 = zext i32 %362 to i64, !dbg !6857
  %arrayidx936 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom935, !dbg !6857
  %363 = load i8, i8* %arrayidx936, align 1, !dbg !6857
  %conv937 = zext i8 %363 to i32, !dbg !6857
  %cmp938 = icmp eq i32 %conv937, 8, !dbg !6857
  br i1 %cmp938, label %cond.true946, label %lor.lhs.false940, !dbg !6857

lor.lhs.false940:                                 ; preds = %cond.true934
  %364 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom941 = zext i32 %364 to i64, !dbg !6857
  %arrayidx942 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom941, !dbg !6857
  %365 = load i8, i8* %arrayidx942, align 1, !dbg !6857
  %conv943 = zext i8 %365 to i32, !dbg !6857
  %cmp944 = icmp eq i32 %conv943, 9, !dbg !6857
  br i1 %cmp944, label %cond.true946, label %cond.false947, !dbg !6857

cond.true946:                                     ; preds = %lor.lhs.false940, %cond.true934
  %366 = load i32, i32* %mode.addr, align 4, !dbg !6857
  br label %cond.end951, !dbg !6857

cond.false947:                                    ; preds = %lor.lhs.false940
  %367 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom948 = zext i32 %367 to i64, !dbg !6857
  %arrayidx949 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom948, !dbg !6857
  %368 = load i8, i8* %arrayidx949, align 1, !dbg !6857
  %conv950 = zext i8 %368 to i32, !dbg !6857
  br label %cond.end951, !dbg !6857

cond.end951:                                      ; preds = %cond.false947, %cond.true946
  %cond952 = phi i32 [ %366, %cond.true946 ], [ %conv950, %cond.false947 ], !dbg !6857
  %sub953 = sub i32 %cond952, 42, !dbg !6857
  %add954 = add i32 %sub953, 4, !dbg !6857
  br label %cond.end975, !dbg !6857

cond.false955:                                    ; preds = %cond.end927
  %369 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom956 = zext i32 %369 to i64, !dbg !6857
  %arrayidx957 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom956, !dbg !6857
  %370 = load i8, i8* %arrayidx957, align 1, !dbg !6857
  %conv958 = zext i8 %370 to i32, !dbg !6857
  %cmp959 = icmp eq i32 %conv958, 8, !dbg !6857
  br i1 %cmp959, label %cond.true967, label %lor.lhs.false961, !dbg !6857

lor.lhs.false961:                                 ; preds = %cond.false955
  %371 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom962 = zext i32 %371 to i64, !dbg !6857
  %arrayidx963 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom962, !dbg !6857
  %372 = load i8, i8* %arrayidx963, align 1, !dbg !6857
  %conv964 = zext i8 %372 to i32, !dbg !6857
  %cmp965 = icmp eq i32 %conv964, 9, !dbg !6857
  br i1 %cmp965, label %cond.true967, label %cond.false968, !dbg !6857

cond.true967:                                     ; preds = %lor.lhs.false961, %cond.false955
  %373 = load i32, i32* %mode.addr, align 4, !dbg !6857
  br label %cond.end972, !dbg !6857

cond.false968:                                    ; preds = %lor.lhs.false961
  %374 = load i32, i32* %mode.addr, align 4, !dbg !6857
  %idxprom969 = zext i32 %374 to i64, !dbg !6857
  %arrayidx970 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom969, !dbg !6857
  %375 = load i8, i8* %arrayidx970, align 1, !dbg !6857
  %conv971 = zext i8 %375 to i32, !dbg !6857
  br label %cond.end972, !dbg !6857

cond.end972:                                      ; preds = %cond.false968, %cond.true967
  %cond973 = phi i32 [ %373, %cond.true967 ], [ %conv971, %cond.false968 ], !dbg !6857
  %sub974 = sub i32 %cond973, 38, !dbg !6857
  br label %cond.end975, !dbg !6857

cond.end975:                                      ; preds = %cond.end972, %cond.end951
  %cond976 = phi i32 [ %add954, %cond.end951 ], [ %sub974, %cond.end972 ], !dbg !6857
  %idxprom977 = zext i32 %cond976 to i64, !dbg !6857
  %arrayidx978 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom977, !dbg !6857
  %376 = load %struct.real_format*, %struct.real_format** %arrayidx978, align 8, !dbg !6857
  %has_nans979 = getelementptr inbounds %struct.real_format, %struct.real_format* %376, i32 0, i32 11, !dbg !6857
  %377 = load i8, i8* %has_nans979, align 2, !dbg !6857
  %conv980 = zext i8 %377 to i32, !dbg !6857
  %tobool981 = icmp ne i32 %conv980, 0, !dbg !6857
  br i1 %tobool981, label %land.lhs.true982, label %if.end1003, !dbg !6857

land.lhs.true982:                                 ; preds = %cond.end975
  %378 = load i32, i32* @flag_finite_math_only, align 4, !dbg !6857
  %tobool983 = icmp ne i32 %378, 0, !dbg !6857
  br i1 %tobool983, label %if.end1003, label %land.lhs.true984, !dbg !6858

land.lhs.true984:                                 ; preds = %land.lhs.true982
  %379 = load i32, i32* @flag_trapping_math, align 4, !dbg !6859
  %tobool985 = icmp ne i32 %379, 0, !dbg !6859
  br i1 %tobool985, label %land.lhs.true986, label %if.end1003, !dbg !6860

land.lhs.true986:                                 ; preds = %land.lhs.true984
  %call987 = call zeroext i8 @real_isinf(%struct.real_value* %f0), !dbg !6861
  %conv988 = zext i8 %call987 to i32, !dbg !6861
  %tobool989 = icmp ne i32 %conv988, 0, !dbg !6861
  br i1 %tobool989, label %land.lhs.true990, label %lor.lhs.false994, !dbg !6862

land.lhs.true990:                                 ; preds = %land.lhs.true986
  %call991 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %f1, %struct.real_value* @dconst0), !dbg !6863
  %conv992 = zext i8 %call991 to i32, !dbg !6863
  %tobool993 = icmp ne i32 %conv992, 0, !dbg !6863
  br i1 %tobool993, label %if.then1002, label %lor.lhs.false994, !dbg !6864

lor.lhs.false994:                                 ; preds = %land.lhs.true990, %land.lhs.true986
  %call995 = call zeroext i8 @real_isinf(%struct.real_value* %f1), !dbg !6865
  %conv996 = zext i8 %call995 to i32, !dbg !6865
  %tobool997 = icmp ne i32 %conv996, 0, !dbg !6865
  br i1 %tobool997, label %land.lhs.true998, label %if.end1003, !dbg !6866

land.lhs.true998:                                 ; preds = %lor.lhs.false994
  %call999 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %f0, %struct.real_value* @dconst0), !dbg !6867
  %conv1000 = zext i8 %call999 to i32, !dbg !6867
  %tobool1001 = icmp ne i32 %conv1000, 0, !dbg !6867
  br i1 %tobool1001, label %if.then1002, label %if.end1003, !dbg !6868

if.then1002:                                      ; preds = %land.lhs.true998, %land.lhs.true990
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6869
  br label %return, !dbg !6869

if.end1003:                                       ; preds = %land.lhs.true998, %lor.lhs.false994, %land.lhs.true984, %land.lhs.true982, %cond.end975, %lor.lhs.false904, %cond.end879, %lor.lhs.false808, %if.end787
  %380 = load i32, i32* %code.addr, align 4, !dbg !6870
  %call1004 = call i32 @rtx_to_tree_code(i32 %380), !dbg !6871
  %call1005 = call zeroext i8 @real_arithmetic(%struct.real_value* %value, i32 %call1004, %struct.real_value* %f0, %struct.real_value* %f1), !dbg !6872
  store i8 %call1005, i8* %inexact, align 1, !dbg !6873
  %381 = load i32, i32* %mode.addr, align 4, !dbg !6874
  call void @real_convert(%struct.real_value* %result, i32 %381, %struct.real_value* %value), !dbg !6875
  %382 = load i32, i32* @flag_trapping_math, align 4, !dbg !6876
  %tobool1006 = icmp ne i32 %382, 0, !dbg !6876
  br i1 %tobool1006, label %land.lhs.true1007, label %if.end1114, !dbg !6878

land.lhs.true1007:                                ; preds = %if.end1003
  %383 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1008 = zext i32 %383 to i64, !dbg !6879
  %arrayidx1009 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1008, !dbg !6879
  %384 = load i8, i8* %arrayidx1009, align 1, !dbg !6879
  %conv1010 = zext i8 %384 to i32, !dbg !6879
  %cmp1011 = icmp eq i32 %conv1010, 8, !dbg !6879
  br i1 %cmp1011, label %land.lhs.true1031, label %lor.lhs.false1013, !dbg !6879

lor.lhs.false1013:                                ; preds = %land.lhs.true1007
  %385 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1014 = zext i32 %385 to i64, !dbg !6879
  %arrayidx1015 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1014, !dbg !6879
  %386 = load i8, i8* %arrayidx1015, align 1, !dbg !6879
  %conv1016 = zext i8 %386 to i32, !dbg !6879
  %cmp1017 = icmp eq i32 %conv1016, 9, !dbg !6879
  br i1 %cmp1017, label %land.lhs.true1031, label %lor.lhs.false1019, !dbg !6879

lor.lhs.false1019:                                ; preds = %lor.lhs.false1013
  %387 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1020 = zext i32 %387 to i64, !dbg !6879
  %arrayidx1021 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1020, !dbg !6879
  %388 = load i8, i8* %arrayidx1021, align 1, !dbg !6879
  %conv1022 = zext i8 %388 to i32, !dbg !6879
  %cmp1023 = icmp eq i32 %conv1022, 11, !dbg !6879
  br i1 %cmp1023, label %land.lhs.true1031, label %lor.lhs.false1025, !dbg !6879

lor.lhs.false1025:                                ; preds = %lor.lhs.false1019
  %389 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1026 = zext i32 %389 to i64, !dbg !6879
  %arrayidx1027 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1026, !dbg !6879
  %390 = load i8, i8* %arrayidx1027, align 1, !dbg !6879
  %conv1028 = zext i8 %390 to i32, !dbg !6879
  %cmp1029 = icmp eq i32 %conv1028, 17, !dbg !6879
  br i1 %cmp1029, label %land.lhs.true1031, label %if.end1114, !dbg !6879

land.lhs.true1031:                                ; preds = %lor.lhs.false1025, %lor.lhs.false1019, %lor.lhs.false1013, %land.lhs.true1007
  %391 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1032 = zext i32 %391 to i64, !dbg !6879
  %arrayidx1033 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1032, !dbg !6879
  %392 = load i8, i8* %arrayidx1033, align 1, !dbg !6879
  %conv1034 = zext i8 %392 to i32, !dbg !6879
  %cmp1035 = icmp eq i32 %conv1034, 8, !dbg !6879
  br i1 %cmp1035, label %cond.true1043, label %lor.lhs.false1037, !dbg !6879

lor.lhs.false1037:                                ; preds = %land.lhs.true1031
  %393 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1038 = zext i32 %393 to i64, !dbg !6879
  %arrayidx1039 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1038, !dbg !6879
  %394 = load i8, i8* %arrayidx1039, align 1, !dbg !6879
  %conv1040 = zext i8 %394 to i32, !dbg !6879
  %cmp1041 = icmp eq i32 %conv1040, 9, !dbg !6879
  br i1 %cmp1041, label %cond.true1043, label %cond.false1044, !dbg !6879

cond.true1043:                                    ; preds = %lor.lhs.false1037, %land.lhs.true1031
  %395 = load i32, i32* %mode.addr, align 4, !dbg !6879
  br label %cond.end1048, !dbg !6879

cond.false1044:                                   ; preds = %lor.lhs.false1037
  %396 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1045 = zext i32 %396 to i64, !dbg !6879
  %arrayidx1046 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1045, !dbg !6879
  %397 = load i8, i8* %arrayidx1046, align 1, !dbg !6879
  %conv1047 = zext i8 %397 to i32, !dbg !6879
  br label %cond.end1048, !dbg !6879

cond.end1048:                                     ; preds = %cond.false1044, %cond.true1043
  %cond1049 = phi i32 [ %395, %cond.true1043 ], [ %conv1047, %cond.false1044 ], !dbg !6879
  %idxprom1050 = zext i32 %cond1049 to i64, !dbg !6879
  %arrayidx1051 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1050, !dbg !6879
  %398 = load i8, i8* %arrayidx1051, align 1, !dbg !6879
  %conv1052 = zext i8 %398 to i32, !dbg !6879
  %cmp1053 = icmp eq i32 %conv1052, 9, !dbg !6879
  br i1 %cmp1053, label %cond.true1055, label %cond.false1076, !dbg !6879

cond.true1055:                                    ; preds = %cond.end1048
  %399 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1056 = zext i32 %399 to i64, !dbg !6879
  %arrayidx1057 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1056, !dbg !6879
  %400 = load i8, i8* %arrayidx1057, align 1, !dbg !6879
  %conv1058 = zext i8 %400 to i32, !dbg !6879
  %cmp1059 = icmp eq i32 %conv1058, 8, !dbg !6879
  br i1 %cmp1059, label %cond.true1067, label %lor.lhs.false1061, !dbg !6879

lor.lhs.false1061:                                ; preds = %cond.true1055
  %401 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1062 = zext i32 %401 to i64, !dbg !6879
  %arrayidx1063 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1062, !dbg !6879
  %402 = load i8, i8* %arrayidx1063, align 1, !dbg !6879
  %conv1064 = zext i8 %402 to i32, !dbg !6879
  %cmp1065 = icmp eq i32 %conv1064, 9, !dbg !6879
  br i1 %cmp1065, label %cond.true1067, label %cond.false1068, !dbg !6879

cond.true1067:                                    ; preds = %lor.lhs.false1061, %cond.true1055
  %403 = load i32, i32* %mode.addr, align 4, !dbg !6879
  br label %cond.end1072, !dbg !6879

cond.false1068:                                   ; preds = %lor.lhs.false1061
  %404 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1069 = zext i32 %404 to i64, !dbg !6879
  %arrayidx1070 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1069, !dbg !6879
  %405 = load i8, i8* %arrayidx1070, align 1, !dbg !6879
  %conv1071 = zext i8 %405 to i32, !dbg !6879
  br label %cond.end1072, !dbg !6879

cond.end1072:                                     ; preds = %cond.false1068, %cond.true1067
  %cond1073 = phi i32 [ %403, %cond.true1067 ], [ %conv1071, %cond.false1068 ], !dbg !6879
  %sub1074 = sub i32 %cond1073, 42, !dbg !6879
  %add1075 = add i32 %sub1074, 4, !dbg !6879
  br label %cond.end1096, !dbg !6879

cond.false1076:                                   ; preds = %cond.end1048
  %406 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1077 = zext i32 %406 to i64, !dbg !6879
  %arrayidx1078 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1077, !dbg !6879
  %407 = load i8, i8* %arrayidx1078, align 1, !dbg !6879
  %conv1079 = zext i8 %407 to i32, !dbg !6879
  %cmp1080 = icmp eq i32 %conv1079, 8, !dbg !6879
  br i1 %cmp1080, label %cond.true1088, label %lor.lhs.false1082, !dbg !6879

lor.lhs.false1082:                                ; preds = %cond.false1076
  %408 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1083 = zext i32 %408 to i64, !dbg !6879
  %arrayidx1084 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1083, !dbg !6879
  %409 = load i8, i8* %arrayidx1084, align 1, !dbg !6879
  %conv1085 = zext i8 %409 to i32, !dbg !6879
  %cmp1086 = icmp eq i32 %conv1085, 9, !dbg !6879
  br i1 %cmp1086, label %cond.true1088, label %cond.false1089, !dbg !6879

cond.true1088:                                    ; preds = %lor.lhs.false1082, %cond.false1076
  %410 = load i32, i32* %mode.addr, align 4, !dbg !6879
  br label %cond.end1093, !dbg !6879

cond.false1089:                                   ; preds = %lor.lhs.false1082
  %411 = load i32, i32* %mode.addr, align 4, !dbg !6879
  %idxprom1090 = zext i32 %411 to i64, !dbg !6879
  %arrayidx1091 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1090, !dbg !6879
  %412 = load i8, i8* %arrayidx1091, align 1, !dbg !6879
  %conv1092 = zext i8 %412 to i32, !dbg !6879
  br label %cond.end1093, !dbg !6879

cond.end1093:                                     ; preds = %cond.false1089, %cond.true1088
  %cond1094 = phi i32 [ %410, %cond.true1088 ], [ %conv1092, %cond.false1089 ], !dbg !6879
  %sub1095 = sub i32 %cond1094, 38, !dbg !6879
  br label %cond.end1096, !dbg !6879

cond.end1096:                                     ; preds = %cond.end1093, %cond.end1072
  %cond1097 = phi i32 [ %add1075, %cond.end1072 ], [ %sub1095, %cond.end1093 ], !dbg !6879
  %idxprom1098 = zext i32 %cond1097 to i64, !dbg !6879
  %arrayidx1099 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1098, !dbg !6879
  %413 = load %struct.real_format*, %struct.real_format** %arrayidx1099, align 8, !dbg !6879
  %has_inf1100 = getelementptr inbounds %struct.real_format, %struct.real_format* %413, i32 0, i32 12, !dbg !6879
  %414 = load i8, i8* %has_inf1100, align 1, !dbg !6879
  %conv1101 = zext i8 %414 to i32, !dbg !6879
  %tobool1102 = icmp ne i32 %conv1101, 0, !dbg !6879
  br i1 %tobool1102, label %land.lhs.true1103, label %if.end1114, !dbg !6880

land.lhs.true1103:                                ; preds = %cond.end1096
  %call1104 = call zeroext i8 @real_isinf(%struct.real_value* %result), !dbg !6881
  %conv1105 = zext i8 %call1104 to i32, !dbg !6881
  %tobool1106 = icmp ne i32 %conv1105, 0, !dbg !6881
  br i1 %tobool1106, label %land.lhs.true1107, label %if.end1114, !dbg !6882

land.lhs.true1107:                                ; preds = %land.lhs.true1103
  %call1108 = call zeroext i8 @real_isinf(%struct.real_value* %f0), !dbg !6883
  %tobool1109 = icmp ne i8 %call1108, 0, !dbg !6883
  br i1 %tobool1109, label %if.end1114, label %land.lhs.true1110, !dbg !6884

land.lhs.true1110:                                ; preds = %land.lhs.true1107
  %call1111 = call zeroext i8 @real_isinf(%struct.real_value* %f1), !dbg !6885
  %tobool1112 = icmp ne i8 %call1111, 0, !dbg !6885
  br i1 %tobool1112, label %if.end1114, label %if.then1113, !dbg !6886

if.then1113:                                      ; preds = %land.lhs.true1110
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6887
  br label %return, !dbg !6887

if.end1114:                                       ; preds = %land.lhs.true1110, %land.lhs.true1107, %land.lhs.true1103, %cond.end1096, %lor.lhs.false1025, %if.end1003
  %415 = load i32, i32* @flag_rounding_math, align 4, !dbg !6888
  %tobool1115 = icmp ne i32 %415, 0, !dbg !6888
  br i1 %tobool1115, label %land.lhs.true1281, label %lor.lhs.false1116, !dbg !6890

lor.lhs.false1116:                                ; preds = %if.end1114
  %416 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1117 = zext i32 %416 to i64, !dbg !6891
  %arrayidx1118 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1117, !dbg !6891
  %417 = load i8, i8* %arrayidx1118, align 1, !dbg !6891
  %conv1119 = zext i8 %417 to i32, !dbg !6891
  %cmp1120 = icmp eq i32 %conv1119, 8, !dbg !6891
  br i1 %cmp1120, label %land.lhs.true1140, label %lor.lhs.false1122, !dbg !6891

lor.lhs.false1122:                                ; preds = %lor.lhs.false1116
  %418 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1123 = zext i32 %418 to i64, !dbg !6891
  %arrayidx1124 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1123, !dbg !6891
  %419 = load i8, i8* %arrayidx1124, align 1, !dbg !6891
  %conv1125 = zext i8 %419 to i32, !dbg !6891
  %cmp1126 = icmp eq i32 %conv1125, 9, !dbg !6891
  br i1 %cmp1126, label %land.lhs.true1140, label %lor.lhs.false1128, !dbg !6891

lor.lhs.false1128:                                ; preds = %lor.lhs.false1122
  %420 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1129 = zext i32 %420 to i64, !dbg !6891
  %arrayidx1130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1129, !dbg !6891
  %421 = load i8, i8* %arrayidx1130, align 1, !dbg !6891
  %conv1131 = zext i8 %421 to i32, !dbg !6891
  %cmp1132 = icmp eq i32 %conv1131, 11, !dbg !6891
  br i1 %cmp1132, label %land.lhs.true1140, label %lor.lhs.false1134, !dbg !6891

lor.lhs.false1134:                                ; preds = %lor.lhs.false1128
  %422 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1135 = zext i32 %422 to i64, !dbg !6891
  %arrayidx1136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1135, !dbg !6891
  %423 = load i8, i8* %arrayidx1136, align 1, !dbg !6891
  %conv1137 = zext i8 %423 to i32, !dbg !6891
  %cmp1138 = icmp eq i32 %conv1137, 17, !dbg !6891
  br i1 %cmp1138, label %land.lhs.true1140, label %if.end1288, !dbg !6891

land.lhs.true1140:                                ; preds = %lor.lhs.false1134, %lor.lhs.false1128, %lor.lhs.false1122, %lor.lhs.false1116
  %424 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1141 = zext i32 %424 to i64, !dbg !6891
  %arrayidx1142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1141, !dbg !6891
  %425 = load i8, i8* %arrayidx1142, align 1, !dbg !6891
  %conv1143 = zext i8 %425 to i32, !dbg !6891
  %cmp1144 = icmp eq i32 %conv1143, 8, !dbg !6891
  br i1 %cmp1144, label %cond.true1152, label %lor.lhs.false1146, !dbg !6891

lor.lhs.false1146:                                ; preds = %land.lhs.true1140
  %426 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1147 = zext i32 %426 to i64, !dbg !6891
  %arrayidx1148 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1147, !dbg !6891
  %427 = load i8, i8* %arrayidx1148, align 1, !dbg !6891
  %conv1149 = zext i8 %427 to i32, !dbg !6891
  %cmp1150 = icmp eq i32 %conv1149, 9, !dbg !6891
  br i1 %cmp1150, label %cond.true1152, label %cond.false1153, !dbg !6891

cond.true1152:                                    ; preds = %lor.lhs.false1146, %land.lhs.true1140
  %428 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1157, !dbg !6891

cond.false1153:                                   ; preds = %lor.lhs.false1146
  %429 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1154 = zext i32 %429 to i64, !dbg !6891
  %arrayidx1155 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1154, !dbg !6891
  %430 = load i8, i8* %arrayidx1155, align 1, !dbg !6891
  %conv1156 = zext i8 %430 to i32, !dbg !6891
  br label %cond.end1157, !dbg !6891

cond.end1157:                                     ; preds = %cond.false1153, %cond.true1152
  %cond1158 = phi i32 [ %428, %cond.true1152 ], [ %conv1156, %cond.false1153 ], !dbg !6891
  %idxprom1159 = zext i32 %cond1158 to i64, !dbg !6891
  %arrayidx1160 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1159, !dbg !6891
  %431 = load i8, i8* %arrayidx1160, align 1, !dbg !6891
  %conv1161 = zext i8 %431 to i32, !dbg !6891
  %cmp1162 = icmp eq i32 %conv1161, 9, !dbg !6891
  br i1 %cmp1162, label %cond.true1164, label %cond.false1185, !dbg !6891

cond.true1164:                                    ; preds = %cond.end1157
  %432 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1165 = zext i32 %432 to i64, !dbg !6891
  %arrayidx1166 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1165, !dbg !6891
  %433 = load i8, i8* %arrayidx1166, align 1, !dbg !6891
  %conv1167 = zext i8 %433 to i32, !dbg !6891
  %cmp1168 = icmp eq i32 %conv1167, 8, !dbg !6891
  br i1 %cmp1168, label %cond.true1176, label %lor.lhs.false1170, !dbg !6891

lor.lhs.false1170:                                ; preds = %cond.true1164
  %434 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1171 = zext i32 %434 to i64, !dbg !6891
  %arrayidx1172 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1171, !dbg !6891
  %435 = load i8, i8* %arrayidx1172, align 1, !dbg !6891
  %conv1173 = zext i8 %435 to i32, !dbg !6891
  %cmp1174 = icmp eq i32 %conv1173, 9, !dbg !6891
  br i1 %cmp1174, label %cond.true1176, label %cond.false1177, !dbg !6891

cond.true1176:                                    ; preds = %lor.lhs.false1170, %cond.true1164
  %436 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1181, !dbg !6891

cond.false1177:                                   ; preds = %lor.lhs.false1170
  %437 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1178 = zext i32 %437 to i64, !dbg !6891
  %arrayidx1179 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1178, !dbg !6891
  %438 = load i8, i8* %arrayidx1179, align 1, !dbg !6891
  %conv1180 = zext i8 %438 to i32, !dbg !6891
  br label %cond.end1181, !dbg !6891

cond.end1181:                                     ; preds = %cond.false1177, %cond.true1176
  %cond1182 = phi i32 [ %436, %cond.true1176 ], [ %conv1180, %cond.false1177 ], !dbg !6891
  %sub1183 = sub i32 %cond1182, 42, !dbg !6891
  %add1184 = add i32 %sub1183, 4, !dbg !6891
  br label %cond.end1205, !dbg !6891

cond.false1185:                                   ; preds = %cond.end1157
  %439 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1186 = zext i32 %439 to i64, !dbg !6891
  %arrayidx1187 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1186, !dbg !6891
  %440 = load i8, i8* %arrayidx1187, align 1, !dbg !6891
  %conv1188 = zext i8 %440 to i32, !dbg !6891
  %cmp1189 = icmp eq i32 %conv1188, 8, !dbg !6891
  br i1 %cmp1189, label %cond.true1197, label %lor.lhs.false1191, !dbg !6891

lor.lhs.false1191:                                ; preds = %cond.false1185
  %441 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1192 = zext i32 %441 to i64, !dbg !6891
  %arrayidx1193 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1192, !dbg !6891
  %442 = load i8, i8* %arrayidx1193, align 1, !dbg !6891
  %conv1194 = zext i8 %442 to i32, !dbg !6891
  %cmp1195 = icmp eq i32 %conv1194, 9, !dbg !6891
  br i1 %cmp1195, label %cond.true1197, label %cond.false1198, !dbg !6891

cond.true1197:                                    ; preds = %lor.lhs.false1191, %cond.false1185
  %443 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1202, !dbg !6891

cond.false1198:                                   ; preds = %lor.lhs.false1191
  %444 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1199 = zext i32 %444 to i64, !dbg !6891
  %arrayidx1200 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1199, !dbg !6891
  %445 = load i8, i8* %arrayidx1200, align 1, !dbg !6891
  %conv1201 = zext i8 %445 to i32, !dbg !6891
  br label %cond.end1202, !dbg !6891

cond.end1202:                                     ; preds = %cond.false1198, %cond.true1197
  %cond1203 = phi i32 [ %443, %cond.true1197 ], [ %conv1201, %cond.false1198 ], !dbg !6891
  %sub1204 = sub i32 %cond1203, 38, !dbg !6891
  br label %cond.end1205, !dbg !6891

cond.end1205:                                     ; preds = %cond.end1202, %cond.end1181
  %cond1206 = phi i32 [ %add1184, %cond.end1181 ], [ %sub1204, %cond.end1202 ], !dbg !6891
  %idxprom1207 = zext i32 %cond1206 to i64, !dbg !6891
  %arrayidx1208 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1207, !dbg !6891
  %446 = load %struct.real_format*, %struct.real_format** %arrayidx1208, align 8, !dbg !6891
  %pnan = getelementptr inbounds %struct.real_format, %struct.real_format* %446, i32 0, i32 4, !dbg !6891
  %447 = load i32, i32* %pnan, align 8, !dbg !6891
  %448 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1209 = zext i32 %448 to i64, !dbg !6891
  %arrayidx1210 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1209, !dbg !6891
  %449 = load i8, i8* %arrayidx1210, align 1, !dbg !6891
  %conv1211 = zext i8 %449 to i32, !dbg !6891
  %cmp1212 = icmp eq i32 %conv1211, 8, !dbg !6891
  br i1 %cmp1212, label %cond.true1220, label %lor.lhs.false1214, !dbg !6891

lor.lhs.false1214:                                ; preds = %cond.end1205
  %450 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1215 = zext i32 %450 to i64, !dbg !6891
  %arrayidx1216 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1215, !dbg !6891
  %451 = load i8, i8* %arrayidx1216, align 1, !dbg !6891
  %conv1217 = zext i8 %451 to i32, !dbg !6891
  %cmp1218 = icmp eq i32 %conv1217, 9, !dbg !6891
  br i1 %cmp1218, label %cond.true1220, label %cond.false1221, !dbg !6891

cond.true1220:                                    ; preds = %lor.lhs.false1214, %cond.end1205
  %452 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1225, !dbg !6891

cond.false1221:                                   ; preds = %lor.lhs.false1214
  %453 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1222 = zext i32 %453 to i64, !dbg !6891
  %arrayidx1223 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1222, !dbg !6891
  %454 = load i8, i8* %arrayidx1223, align 1, !dbg !6891
  %conv1224 = zext i8 %454 to i32, !dbg !6891
  br label %cond.end1225, !dbg !6891

cond.end1225:                                     ; preds = %cond.false1221, %cond.true1220
  %cond1226 = phi i32 [ %452, %cond.true1220 ], [ %conv1224, %cond.false1221 ], !dbg !6891
  %idxprom1227 = zext i32 %cond1226 to i64, !dbg !6891
  %arrayidx1228 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1227, !dbg !6891
  %455 = load i8, i8* %arrayidx1228, align 1, !dbg !6891
  %conv1229 = zext i8 %455 to i32, !dbg !6891
  %cmp1230 = icmp eq i32 %conv1229, 9, !dbg !6891
  br i1 %cmp1230, label %cond.true1232, label %cond.false1253, !dbg !6891

cond.true1232:                                    ; preds = %cond.end1225
  %456 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1233 = zext i32 %456 to i64, !dbg !6891
  %arrayidx1234 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1233, !dbg !6891
  %457 = load i8, i8* %arrayidx1234, align 1, !dbg !6891
  %conv1235 = zext i8 %457 to i32, !dbg !6891
  %cmp1236 = icmp eq i32 %conv1235, 8, !dbg !6891
  br i1 %cmp1236, label %cond.true1244, label %lor.lhs.false1238, !dbg !6891

lor.lhs.false1238:                                ; preds = %cond.true1232
  %458 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1239 = zext i32 %458 to i64, !dbg !6891
  %arrayidx1240 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1239, !dbg !6891
  %459 = load i8, i8* %arrayidx1240, align 1, !dbg !6891
  %conv1241 = zext i8 %459 to i32, !dbg !6891
  %cmp1242 = icmp eq i32 %conv1241, 9, !dbg !6891
  br i1 %cmp1242, label %cond.true1244, label %cond.false1245, !dbg !6891

cond.true1244:                                    ; preds = %lor.lhs.false1238, %cond.true1232
  %460 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1249, !dbg !6891

cond.false1245:                                   ; preds = %lor.lhs.false1238
  %461 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1246 = zext i32 %461 to i64, !dbg !6891
  %arrayidx1247 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1246, !dbg !6891
  %462 = load i8, i8* %arrayidx1247, align 1, !dbg !6891
  %conv1248 = zext i8 %462 to i32, !dbg !6891
  br label %cond.end1249, !dbg !6891

cond.end1249:                                     ; preds = %cond.false1245, %cond.true1244
  %cond1250 = phi i32 [ %460, %cond.true1244 ], [ %conv1248, %cond.false1245 ], !dbg !6891
  %sub1251 = sub i32 %cond1250, 42, !dbg !6891
  %add1252 = add i32 %sub1251, 4, !dbg !6891
  br label %cond.end1273, !dbg !6891

cond.false1253:                                   ; preds = %cond.end1225
  %463 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1254 = zext i32 %463 to i64, !dbg !6891
  %arrayidx1255 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1254, !dbg !6891
  %464 = load i8, i8* %arrayidx1255, align 1, !dbg !6891
  %conv1256 = zext i8 %464 to i32, !dbg !6891
  %cmp1257 = icmp eq i32 %conv1256, 8, !dbg !6891
  br i1 %cmp1257, label %cond.true1265, label %lor.lhs.false1259, !dbg !6891

lor.lhs.false1259:                                ; preds = %cond.false1253
  %465 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1260 = zext i32 %465 to i64, !dbg !6891
  %arrayidx1261 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1260, !dbg !6891
  %466 = load i8, i8* %arrayidx1261, align 1, !dbg !6891
  %conv1262 = zext i8 %466 to i32, !dbg !6891
  %cmp1263 = icmp eq i32 %conv1262, 9, !dbg !6891
  br i1 %cmp1263, label %cond.true1265, label %cond.false1266, !dbg !6891

cond.true1265:                                    ; preds = %lor.lhs.false1259, %cond.false1253
  %467 = load i32, i32* %mode.addr, align 4, !dbg !6891
  br label %cond.end1270, !dbg !6891

cond.false1266:                                   ; preds = %lor.lhs.false1259
  %468 = load i32, i32* %mode.addr, align 4, !dbg !6891
  %idxprom1267 = zext i32 %468 to i64, !dbg !6891
  %arrayidx1268 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1267, !dbg !6891
  %469 = load i8, i8* %arrayidx1268, align 1, !dbg !6891
  %conv1269 = zext i8 %469 to i32, !dbg !6891
  br label %cond.end1270, !dbg !6891

cond.end1270:                                     ; preds = %cond.false1266, %cond.true1265
  %cond1271 = phi i32 [ %467, %cond.true1265 ], [ %conv1269, %cond.false1266 ], !dbg !6891
  %sub1272 = sub i32 %cond1271, 38, !dbg !6891
  br label %cond.end1273, !dbg !6891

cond.end1273:                                     ; preds = %cond.end1270, %cond.end1249
  %cond1274 = phi i32 [ %add1252, %cond.end1249 ], [ %sub1272, %cond.end1270 ], !dbg !6891
  %idxprom1275 = zext i32 %cond1274 to i64, !dbg !6891
  %arrayidx1276 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1275, !dbg !6891
  %470 = load %struct.real_format*, %struct.real_format** %arrayidx1276, align 8, !dbg !6891
  %p = getelementptr inbounds %struct.real_format, %struct.real_format* %470, i32 0, i32 3, !dbg !6891
  %471 = load i32, i32* %p, align 4, !dbg !6891
  %cmp1277 = icmp slt i32 %447, %471, !dbg !6891
  br i1 %cmp1277, label %land.lhs.true1279, label %if.end1288, !dbg !6892

land.lhs.true1279:                                ; preds = %cond.end1273
  %472 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !6893
  %tobool1280 = icmp ne i32 %472, 0, !dbg !6893
  br i1 %tobool1280, label %if.end1288, label %land.lhs.true1281, !dbg !6894

land.lhs.true1281:                                ; preds = %land.lhs.true1279, %if.end1114
  %473 = load i8, i8* %inexact, align 1, !dbg !6895
  %conv1282 = zext i8 %473 to i32, !dbg !6895
  %tobool1283 = icmp ne i32 %conv1282, 0, !dbg !6895
  br i1 %tobool1283, label %if.then1287, label %lor.lhs.false1284, !dbg !6896

lor.lhs.false1284:                                ; preds = %land.lhs.true1281
  %call1285 = call zeroext i8 @real_identical(%struct.real_value* %result, %struct.real_value* %value), !dbg !6897
  %tobool1286 = icmp ne i8 %call1285, 0, !dbg !6897
  br i1 %tobool1286, label %if.end1288, label %if.then1287, !dbg !6898

if.then1287:                                      ; preds = %lor.lhs.false1284, %land.lhs.true1281
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6899
  br label %return, !dbg !6899

if.end1288:                                       ; preds = %lor.lhs.false1284, %land.lhs.true1279, %cond.end1273, %lor.lhs.false1134
  %474 = load i32, i32* %mode.addr, align 4, !dbg !6900
  %call1289 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %result, i32 %474), !dbg !6900
  store %struct.rtx_def* %call1289, %struct.rtx_def** %retval, align 8, !dbg !6901
  br label %return, !dbg !6901

if.end1290:                                       ; preds = %land.lhs.true297, %land.lhs.true291, %land.lhs.true286, %land.lhs.true281, %lor.lhs.false275
  %475 = load i32, i32* %mode.addr, align 4, !dbg !6902
  %idxprom1291 = zext i32 %475 to i64, !dbg !6902
  %arrayidx1292 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1291, !dbg !6902
  %476 = load i8, i8* %arrayidx1292, align 1, !dbg !6902
  %conv1293 = zext i8 %476 to i32, !dbg !6902
  %cmp1294 = icmp eq i32 %conv1293, 2, !dbg !6904
  br i1 %cmp1294, label %land.lhs.true1296, label %if.end1506, !dbg !6905

land.lhs.true1296:                                ; preds = %if.end1290
  %477 = load i32, i32* %width, align 4, !dbg !6906
  %cmp1297 = icmp eq i32 %477, 128, !dbg !6907
  br i1 %cmp1297, label %land.lhs.true1299, label %if.end1506, !dbg !6908

land.lhs.true1299:                                ; preds = %land.lhs.true1296
  %478 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6909
  %479 = bitcast %struct.rtx_def* %478 to i32*, !dbg !6909
  %bf.load1300 = load i32, i32* %479, align 8, !dbg !6909
  %bf.clear1301 = and i32 %bf.load1300, 65535, !dbg !6909
  %cmp1302 = icmp eq i32 %bf.clear1301, 32, !dbg !6910
  br i1 %cmp1302, label %land.lhs.true1309, label %lor.lhs.false1304, !dbg !6911

lor.lhs.false1304:                                ; preds = %land.lhs.true1299
  %480 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6912
  %481 = bitcast %struct.rtx_def* %480 to i32*, !dbg !6912
  %bf.load1305 = load i32, i32* %481, align 8, !dbg !6912
  %bf.clear1306 = and i32 %bf.load1305, 65535, !dbg !6912
  %cmp1307 = icmp eq i32 %bf.clear1306, 30, !dbg !6912
  br i1 %cmp1307, label %land.lhs.true1309, label %if.end1506, !dbg !6913

land.lhs.true1309:                                ; preds = %lor.lhs.false1304, %land.lhs.true1299
  %482 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6914
  %483 = bitcast %struct.rtx_def* %482 to i32*, !dbg !6914
  %bf.load1310 = load i32, i32* %483, align 8, !dbg !6914
  %bf.clear1311 = and i32 %bf.load1310, 65535, !dbg !6914
  %cmp1312 = icmp eq i32 %bf.clear1311, 32, !dbg !6915
  br i1 %cmp1312, label %if.then1319, label %lor.lhs.false1314, !dbg !6916

lor.lhs.false1314:                                ; preds = %land.lhs.true1309
  %484 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6917
  %485 = bitcast %struct.rtx_def* %484 to i32*, !dbg !6917
  %bf.load1315 = load i32, i32* %485, align 8, !dbg !6917
  %bf.clear1316 = and i32 %bf.load1315, 65535, !dbg !6917
  %cmp1317 = icmp eq i32 %bf.clear1316, 30, !dbg !6917
  br i1 %cmp1317, label %if.then1319, label %if.end1506, !dbg !6918

if.then1319:                                      ; preds = %lor.lhs.false1314, %land.lhs.true1309
  call void @llvm.dbg.declare(metadata i64* %l1, metadata !6919, metadata !DIExpression()), !dbg !6921
  call void @llvm.dbg.declare(metadata i64* %l2, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata i64* %lv, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.declare(metadata i64* %lt, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata i64* %h1, metadata !6928, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.declare(metadata i64* %h2, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata i64* %hv, metadata !6932, metadata !DIExpression()), !dbg !6933
  call void @llvm.dbg.declare(metadata i64* %ht, metadata !6934, metadata !DIExpression()), !dbg !6935
  %486 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6936
  %487 = bitcast %struct.rtx_def* %486 to i32*, !dbg !6936
  %bf.load1320 = load i32, i32* %487, align 8, !dbg !6936
  %bf.clear1321 = and i32 %bf.load1320, 65535, !dbg !6936
  %cmp1322 = icmp eq i32 %bf.clear1321, 32, !dbg !6938
  br i1 %cmp1322, label %if.then1324, label %if.else1330, !dbg !6939

if.then1324:                                      ; preds = %if.then1319
  %488 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6940
  %u1325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %488, i32 0, i32 1, !dbg !6940
  %hwint = bitcast %union.u* %u1325 to [1 x i64]*, !dbg !6940
  %arrayidx1326 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !6940
  %489 = load i64, i64* %arrayidx1326, align 8, !dbg !6940
  store i64 %489, i64* %l1, align 8, !dbg !6941
  %490 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6942
  %u1327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %490, i32 0, i32 1, !dbg !6942
  %hwint1328 = bitcast %union.u* %u1327 to [1 x i64]*, !dbg !6942
  %arrayidx1329 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1328, i64 0, i64 1, !dbg !6942
  %491 = load i64, i64* %arrayidx1329, align 8, !dbg !6942
  store i64 %491, i64* %h1, align 8, !dbg !6943
  br label %if.end1337, !dbg !6944

if.else1330:                                      ; preds = %if.then1319
  %492 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !6945
  %u1331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %492, i32 0, i32 1, !dbg !6945
  %hwint1332 = bitcast %union.u* %u1331 to [1 x i64]*, !dbg !6945
  %arrayidx1333 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1332, i64 0, i64 0, !dbg !6945
  %493 = load i64, i64* %arrayidx1333, align 8, !dbg !6945
  store i64 %493, i64* %l1, align 8, !dbg !6946
  %494 = load i64, i64* %l1, align 8, !dbg !6947
  %cmp1334 = icmp slt i64 %494, 0, !dbg !6947
  %495 = zext i1 %cmp1334 to i64, !dbg !6947
  %cond1336 = select i1 %cmp1334, i64 -1, i64 0, !dbg !6947
  store i64 %cond1336, i64* %h1, align 8, !dbg !6948
  br label %if.end1337

if.end1337:                                       ; preds = %if.else1330, %if.then1324
  %496 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6949
  %497 = bitcast %struct.rtx_def* %496 to i32*, !dbg !6949
  %bf.load1338 = load i32, i32* %497, align 8, !dbg !6949
  %bf.clear1339 = and i32 %bf.load1338, 65535, !dbg !6949
  %cmp1340 = icmp eq i32 %bf.clear1339, 32, !dbg !6951
  br i1 %cmp1340, label %if.then1342, label %if.else1349, !dbg !6952

if.then1342:                                      ; preds = %if.end1337
  %498 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6953
  %u1343 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %498, i32 0, i32 1, !dbg !6953
  %hwint1344 = bitcast %union.u* %u1343 to [1 x i64]*, !dbg !6953
  %arrayidx1345 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1344, i64 0, i64 0, !dbg !6953
  %499 = load i64, i64* %arrayidx1345, align 8, !dbg !6953
  store i64 %499, i64* %l2, align 8, !dbg !6954
  %500 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6955
  %u1346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %500, i32 0, i32 1, !dbg !6955
  %hwint1347 = bitcast %union.u* %u1346 to [1 x i64]*, !dbg !6955
  %arrayidx1348 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1347, i64 0, i64 1, !dbg !6955
  %501 = load i64, i64* %arrayidx1348, align 8, !dbg !6955
  store i64 %501, i64* %h2, align 8, !dbg !6956
  br label %if.end1356, !dbg !6957

if.else1349:                                      ; preds = %if.end1337
  %502 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !6958
  %u1350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %502, i32 0, i32 1, !dbg !6958
  %hwint1351 = bitcast %union.u* %u1350 to [1 x i64]*, !dbg !6958
  %arrayidx1352 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1351, i64 0, i64 0, !dbg !6958
  %503 = load i64, i64* %arrayidx1352, align 8, !dbg !6958
  store i64 %503, i64* %l2, align 8, !dbg !6959
  %504 = load i64, i64* %l2, align 8, !dbg !6960
  %cmp1353 = icmp slt i64 %504, 0, !dbg !6960
  %505 = zext i1 %cmp1353 to i64, !dbg !6960
  %cond1355 = select i1 %cmp1353, i64 -1, i64 0, !dbg !6960
  store i64 %cond1355, i64* %h2, align 8, !dbg !6961
  br label %if.end1356

if.end1356:                                       ; preds = %if.else1349, %if.then1342
  %506 = load i32, i32* %code.addr, align 4, !dbg !6962
  switch i32 %506, label %sw.default1503 [
    i32 50, label %sw.bb1357
    i32 49, label %sw.bb1359
    i32 52, label %sw.bb1361
    i32 55, label %sw.bb1363
    i32 58, label %sw.bb1368
    i32 59, label %sw.bb1373
    i32 60, label %sw.bb1378
    i32 61, label %sw.bb1383
    i32 62, label %sw.bb1386
    i32 63, label %sw.bb1389
    i32 70, label %sw.bb1392
    i32 71, label %sw.bb1404
    i32 72, label %sw.bb1416
    i32 73, label %sw.bb1428
    i32 68, label %sw.bb1440
    i32 67, label %sw.bb1440
    i32 65, label %sw.bb1440
    i32 66, label %sw.bb1440
    i32 69, label %sw.bb1440
  ], !dbg !6963

sw.bb1357:                                        ; preds = %if.end1356
  %507 = load i64, i64* %l2, align 8, !dbg !6964
  %508 = load i64, i64* %h2, align 8, !dbg !6966
  %call1358 = call i32 @neg_double(i64 %507, i64 %508, i64* %lv, i64* %hv), !dbg !6967
  %509 = load i64, i64* %lv, align 8, !dbg !6968
  store i64 %509, i64* %l2, align 8, !dbg !6969
  %510 = load i64, i64* %hv, align 8, !dbg !6970
  store i64 %510, i64* %h2, align 8, !dbg !6971
  br label %sw.bb1359, !dbg !6972

sw.bb1359:                                        ; preds = %if.end1356, %sw.bb1357
  %511 = load i64, i64* %l1, align 8, !dbg !6973
  %512 = load i64, i64* %h1, align 8, !dbg !6973
  %513 = load i64, i64* %l2, align 8, !dbg !6973
  %514 = load i64, i64* %h2, align 8, !dbg !6973
  %call1360 = call i32 @add_double_with_sign(i64 %511, i64 %512, i64 %513, i64 %514, i64* %lv, i64* %hv, i8 zeroext 0), !dbg !6973
  br label %sw.epilog1504, !dbg !6974

sw.bb1361:                                        ; preds = %if.end1356
  %515 = load i64, i64* %l1, align 8, !dbg !6975
  %516 = load i64, i64* %h1, align 8, !dbg !6975
  %517 = load i64, i64* %l2, align 8, !dbg !6975
  %518 = load i64, i64* %h2, align 8, !dbg !6975
  %call1362 = call i32 @mul_double_with_sign(i64 %515, i64 %516, i64 %517, i64 %518, i64* %lv, i64* %hv, i8 zeroext 0), !dbg !6975
  br label %sw.epilog1504, !dbg !6976

sw.bb1363:                                        ; preds = %if.end1356
  %519 = load i64, i64* %l1, align 8, !dbg !6977
  %520 = load i64, i64* %h1, align 8, !dbg !6979
  %521 = load i64, i64* %l2, align 8, !dbg !6980
  %522 = load i64, i64* %h2, align 8, !dbg !6981
  %call1364 = call i32 @div_and_round_double(i32 67, i32 0, i64 %519, i64 %520, i64 %521, i64 %522, i64* %lv, i64* %hv, i64* %lt, i64* %ht), !dbg !6982
  %tobool1365 = icmp ne i32 %call1364, 0, !dbg !6982
  br i1 %tobool1365, label %if.then1366, label %if.end1367, !dbg !6983

if.then1366:                                      ; preds = %sw.bb1363
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6984
  br label %return, !dbg !6984

if.end1367:                                       ; preds = %sw.bb1363
  br label %sw.epilog1504, !dbg !6985

sw.bb1368:                                        ; preds = %if.end1356
  %523 = load i64, i64* %l1, align 8, !dbg !6986
  %524 = load i64, i64* %h1, align 8, !dbg !6988
  %525 = load i64, i64* %l2, align 8, !dbg !6989
  %526 = load i64, i64* %h2, align 8, !dbg !6990
  %call1369 = call i32 @div_and_round_double(i32 67, i32 0, i64 %523, i64 %524, i64 %525, i64 %526, i64* %lt, i64* %ht, i64* %lv, i64* %hv), !dbg !6991
  %tobool1370 = icmp ne i32 %call1369, 0, !dbg !6991
  br i1 %tobool1370, label %if.then1371, label %if.end1372, !dbg !6992

if.then1371:                                      ; preds = %sw.bb1368
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6993
  br label %return, !dbg !6993

if.end1372:                                       ; preds = %sw.bb1368
  br label %sw.epilog1504, !dbg !6994

sw.bb1373:                                        ; preds = %if.end1356
  %527 = load i64, i64* %l1, align 8, !dbg !6995
  %528 = load i64, i64* %h1, align 8, !dbg !6997
  %529 = load i64, i64* %l2, align 8, !dbg !6998
  %530 = load i64, i64* %h2, align 8, !dbg !6999
  %call1374 = call i32 @div_and_round_double(i32 67, i32 1, i64 %527, i64 %528, i64 %529, i64 %530, i64* %lv, i64* %hv, i64* %lt, i64* %ht), !dbg !7000
  %tobool1375 = icmp ne i32 %call1374, 0, !dbg !7000
  br i1 %tobool1375, label %if.then1376, label %if.end1377, !dbg !7001

if.then1376:                                      ; preds = %sw.bb1373
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7002
  br label %return, !dbg !7002

if.end1377:                                       ; preds = %sw.bb1373
  br label %sw.epilog1504, !dbg !7003

sw.bb1378:                                        ; preds = %if.end1356
  %531 = load i64, i64* %l1, align 8, !dbg !7004
  %532 = load i64, i64* %h1, align 8, !dbg !7006
  %533 = load i64, i64* %l2, align 8, !dbg !7007
  %534 = load i64, i64* %h2, align 8, !dbg !7008
  %call1379 = call i32 @div_and_round_double(i32 67, i32 1, i64 %531, i64 %532, i64 %533, i64 %534, i64* %lt, i64* %ht, i64* %lv, i64* %hv), !dbg !7009
  %tobool1380 = icmp ne i32 %call1379, 0, !dbg !7009
  br i1 %tobool1380, label %if.then1381, label %if.end1382, !dbg !7010

if.then1381:                                      ; preds = %sw.bb1378
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7011
  br label %return, !dbg !7011

if.end1382:                                       ; preds = %sw.bb1378
  br label %sw.epilog1504, !dbg !7012

sw.bb1383:                                        ; preds = %if.end1356
  %535 = load i64, i64* %l1, align 8, !dbg !7013
  %536 = load i64, i64* %l2, align 8, !dbg !7014
  %and1384 = and i64 %535, %536, !dbg !7015
  store i64 %and1384, i64* %lv, align 8, !dbg !7016
  %537 = load i64, i64* %h1, align 8, !dbg !7017
  %538 = load i64, i64* %h2, align 8, !dbg !7018
  %and1385 = and i64 %537, %538, !dbg !7019
  store i64 %and1385, i64* %hv, align 8, !dbg !7020
  br label %sw.epilog1504, !dbg !7021

sw.bb1386:                                        ; preds = %if.end1356
  %539 = load i64, i64* %l1, align 8, !dbg !7022
  %540 = load i64, i64* %l2, align 8, !dbg !7023
  %or1387 = or i64 %539, %540, !dbg !7024
  store i64 %or1387, i64* %lv, align 8, !dbg !7025
  %541 = load i64, i64* %h1, align 8, !dbg !7026
  %542 = load i64, i64* %h2, align 8, !dbg !7027
  %or1388 = or i64 %541, %542, !dbg !7028
  store i64 %or1388, i64* %hv, align 8, !dbg !7029
  br label %sw.epilog1504, !dbg !7030

sw.bb1389:                                        ; preds = %if.end1356
  %543 = load i64, i64* %l1, align 8, !dbg !7031
  %544 = load i64, i64* %l2, align 8, !dbg !7032
  %xor1390 = xor i64 %543, %544, !dbg !7033
  store i64 %xor1390, i64* %lv, align 8, !dbg !7034
  %545 = load i64, i64* %h1, align 8, !dbg !7035
  %546 = load i64, i64* %h2, align 8, !dbg !7036
  %xor1391 = xor i64 %545, %546, !dbg !7037
  store i64 %xor1391, i64* %hv, align 8, !dbg !7038
  br label %sw.epilog1504, !dbg !7039

sw.bb1392:                                        ; preds = %if.end1356
  %547 = load i64, i64* %h1, align 8, !dbg !7040
  %548 = load i64, i64* %h2, align 8, !dbg !7042
  %cmp1393 = icmp slt i64 %547, %548, !dbg !7043
  br i1 %cmp1393, label %if.then1401, label %lor.lhs.false1395, !dbg !7044

lor.lhs.false1395:                                ; preds = %sw.bb1392
  %549 = load i64, i64* %h1, align 8, !dbg !7045
  %550 = load i64, i64* %h2, align 8, !dbg !7046
  %cmp1396 = icmp eq i64 %549, %550, !dbg !7047
  br i1 %cmp1396, label %land.lhs.true1398, label %if.else1402, !dbg !7048

land.lhs.true1398:                                ; preds = %lor.lhs.false1395
  %551 = load i64, i64* %l1, align 8, !dbg !7049
  %552 = load i64, i64* %l2, align 8, !dbg !7050
  %cmp1399 = icmp ult i64 %551, %552, !dbg !7051
  br i1 %cmp1399, label %if.then1401, label %if.else1402, !dbg !7052

if.then1401:                                      ; preds = %land.lhs.true1398, %sw.bb1392
  %553 = load i64, i64* %l1, align 8, !dbg !7053
  store i64 %553, i64* %lv, align 8, !dbg !7054
  %554 = load i64, i64* %h1, align 8, !dbg !7055
  store i64 %554, i64* %hv, align 8, !dbg !7056
  br label %if.end1403, !dbg !7057

if.else1402:                                      ; preds = %land.lhs.true1398, %lor.lhs.false1395
  %555 = load i64, i64* %l2, align 8, !dbg !7058
  store i64 %555, i64* %lv, align 8, !dbg !7059
  %556 = load i64, i64* %h2, align 8, !dbg !7060
  store i64 %556, i64* %hv, align 8, !dbg !7061
  br label %if.end1403

if.end1403:                                       ; preds = %if.else1402, %if.then1401
  br label %sw.epilog1504, !dbg !7062

sw.bb1404:                                        ; preds = %if.end1356
  %557 = load i64, i64* %h1, align 8, !dbg !7063
  %558 = load i64, i64* %h2, align 8, !dbg !7065
  %cmp1405 = icmp sgt i64 %557, %558, !dbg !7066
  br i1 %cmp1405, label %if.then1413, label %lor.lhs.false1407, !dbg !7067

lor.lhs.false1407:                                ; preds = %sw.bb1404
  %559 = load i64, i64* %h1, align 8, !dbg !7068
  %560 = load i64, i64* %h2, align 8, !dbg !7069
  %cmp1408 = icmp eq i64 %559, %560, !dbg !7070
  br i1 %cmp1408, label %land.lhs.true1410, label %if.else1414, !dbg !7071

land.lhs.true1410:                                ; preds = %lor.lhs.false1407
  %561 = load i64, i64* %l1, align 8, !dbg !7072
  %562 = load i64, i64* %l2, align 8, !dbg !7073
  %cmp1411 = icmp ugt i64 %561, %562, !dbg !7074
  br i1 %cmp1411, label %if.then1413, label %if.else1414, !dbg !7075

if.then1413:                                      ; preds = %land.lhs.true1410, %sw.bb1404
  %563 = load i64, i64* %l1, align 8, !dbg !7076
  store i64 %563, i64* %lv, align 8, !dbg !7077
  %564 = load i64, i64* %h1, align 8, !dbg !7078
  store i64 %564, i64* %hv, align 8, !dbg !7079
  br label %if.end1415, !dbg !7080

if.else1414:                                      ; preds = %land.lhs.true1410, %lor.lhs.false1407
  %565 = load i64, i64* %l2, align 8, !dbg !7081
  store i64 %565, i64* %lv, align 8, !dbg !7082
  %566 = load i64, i64* %h2, align 8, !dbg !7083
  store i64 %566, i64* %hv, align 8, !dbg !7084
  br label %if.end1415

if.end1415:                                       ; preds = %if.else1414, %if.then1413
  br label %sw.epilog1504, !dbg !7085

sw.bb1416:                                        ; preds = %if.end1356
  %567 = load i64, i64* %h1, align 8, !dbg !7086
  %568 = load i64, i64* %h2, align 8, !dbg !7088
  %cmp1417 = icmp ult i64 %567, %568, !dbg !7089
  br i1 %cmp1417, label %if.then1425, label %lor.lhs.false1419, !dbg !7090

lor.lhs.false1419:                                ; preds = %sw.bb1416
  %569 = load i64, i64* %h1, align 8, !dbg !7091
  %570 = load i64, i64* %h2, align 8, !dbg !7092
  %cmp1420 = icmp eq i64 %569, %570, !dbg !7093
  br i1 %cmp1420, label %land.lhs.true1422, label %if.else1426, !dbg !7094

land.lhs.true1422:                                ; preds = %lor.lhs.false1419
  %571 = load i64, i64* %l1, align 8, !dbg !7095
  %572 = load i64, i64* %l2, align 8, !dbg !7096
  %cmp1423 = icmp ult i64 %571, %572, !dbg !7097
  br i1 %cmp1423, label %if.then1425, label %if.else1426, !dbg !7098

if.then1425:                                      ; preds = %land.lhs.true1422, %sw.bb1416
  %573 = load i64, i64* %l1, align 8, !dbg !7099
  store i64 %573, i64* %lv, align 8, !dbg !7100
  %574 = load i64, i64* %h1, align 8, !dbg !7101
  store i64 %574, i64* %hv, align 8, !dbg !7102
  br label %if.end1427, !dbg !7103

if.else1426:                                      ; preds = %land.lhs.true1422, %lor.lhs.false1419
  %575 = load i64, i64* %l2, align 8, !dbg !7104
  store i64 %575, i64* %lv, align 8, !dbg !7105
  %576 = load i64, i64* %h2, align 8, !dbg !7106
  store i64 %576, i64* %hv, align 8, !dbg !7107
  br label %if.end1427

if.end1427:                                       ; preds = %if.else1426, %if.then1425
  br label %sw.epilog1504, !dbg !7108

sw.bb1428:                                        ; preds = %if.end1356
  %577 = load i64, i64* %h1, align 8, !dbg !7109
  %578 = load i64, i64* %h2, align 8, !dbg !7111
  %cmp1429 = icmp ugt i64 %577, %578, !dbg !7112
  br i1 %cmp1429, label %if.then1437, label %lor.lhs.false1431, !dbg !7113

lor.lhs.false1431:                                ; preds = %sw.bb1428
  %579 = load i64, i64* %h1, align 8, !dbg !7114
  %580 = load i64, i64* %h2, align 8, !dbg !7115
  %cmp1432 = icmp eq i64 %579, %580, !dbg !7116
  br i1 %cmp1432, label %land.lhs.true1434, label %if.else1438, !dbg !7117

land.lhs.true1434:                                ; preds = %lor.lhs.false1431
  %581 = load i64, i64* %l1, align 8, !dbg !7118
  %582 = load i64, i64* %l2, align 8, !dbg !7119
  %cmp1435 = icmp ugt i64 %581, %582, !dbg !7120
  br i1 %cmp1435, label %if.then1437, label %if.else1438, !dbg !7121

if.then1437:                                      ; preds = %land.lhs.true1434, %sw.bb1428
  %583 = load i64, i64* %l1, align 8, !dbg !7122
  store i64 %583, i64* %lv, align 8, !dbg !7123
  %584 = load i64, i64* %h1, align 8, !dbg !7124
  store i64 %584, i64* %hv, align 8, !dbg !7125
  br label %if.end1439, !dbg !7126

if.else1438:                                      ; preds = %land.lhs.true1434, %lor.lhs.false1431
  %585 = load i64, i64* %l2, align 8, !dbg !7127
  store i64 %585, i64* %lv, align 8, !dbg !7128
  %586 = load i64, i64* %h2, align 8, !dbg !7129
  store i64 %586, i64* %hv, align 8, !dbg !7130
  br label %if.end1439

if.end1439:                                       ; preds = %if.else1438, %if.then1437
  br label %sw.epilog1504, !dbg !7131

sw.bb1440:                                        ; preds = %if.end1356, %if.end1356, %if.end1356, %if.end1356, %if.end1356
  %587 = load i64, i64* %h2, align 8, !dbg !7132
  %cmp1441 = icmp ne i64 %587, 0, !dbg !7134
  br i1 %cmp1441, label %if.then1453, label %lor.lhs.false1443, !dbg !7135

lor.lhs.false1443:                                ; preds = %sw.bb1440
  %588 = load i64, i64* %l2, align 8, !dbg !7136
  %589 = load i32, i32* %mode.addr, align 4, !dbg !7137
  %idxprom1444 = zext i32 %589 to i64, !dbg !7137
  %arrayidx1445 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1444, !dbg !7137
  %590 = load i8, i8* %arrayidx1445, align 1, !dbg !7137
  %conv1446 = zext i8 %590 to i16, !dbg !7137
  %conv1447 = zext i16 %conv1446 to i32, !dbg !7137
  %mul1448 = mul nsw i32 %conv1447, 8, !dbg !7137
  %conv1449 = trunc i32 %mul1448 to i16, !dbg !7137
  %conv1450 = zext i16 %conv1449 to i64, !dbg !7137
  %cmp1451 = icmp uge i64 %588, %conv1450, !dbg !7138
  br i1 %cmp1451, label %if.then1453, label %if.end1454, !dbg !7139

if.then1453:                                      ; preds = %lor.lhs.false1443, %sw.bb1440
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7140
  br label %return, !dbg !7140

if.end1454:                                       ; preds = %lor.lhs.false1443
  %591 = load i32, i32* %code.addr, align 4, !dbg !7141
  %cmp1455 = icmp eq i32 %591, 68, !dbg !7143
  br i1 %cmp1455, label %if.then1460, label %lor.lhs.false1457, !dbg !7144

lor.lhs.false1457:                                ; preds = %if.end1454
  %592 = load i32, i32* %code.addr, align 4, !dbg !7145
  %cmp1458 = icmp eq i32 %592, 67, !dbg !7146
  br i1 %cmp1458, label %if.then1460, label %if.else1470, !dbg !7147

if.then1460:                                      ; preds = %lor.lhs.false1457, %if.end1454
  %593 = load i64, i64* %l1, align 8, !dbg !7148
  %594 = load i64, i64* %h1, align 8, !dbg !7149
  %595 = load i64, i64* %l2, align 8, !dbg !7150
  %596 = load i32, i32* %mode.addr, align 4, !dbg !7151
  %idxprom1461 = zext i32 %596 to i64, !dbg !7151
  %arrayidx1462 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1461, !dbg !7151
  %597 = load i8, i8* %arrayidx1462, align 1, !dbg !7151
  %conv1463 = zext i8 %597 to i16, !dbg !7151
  %conv1464 = zext i16 %conv1463 to i32, !dbg !7151
  %mul1465 = mul nsw i32 %conv1464, 8, !dbg !7151
  %conv1466 = trunc i32 %mul1465 to i16, !dbg !7151
  %conv1467 = zext i16 %conv1466 to i32, !dbg !7151
  %598 = load i32, i32* %code.addr, align 4, !dbg !7152
  %cmp1468 = icmp eq i32 %598, 67, !dbg !7153
  %conv1469 = zext i1 %cmp1468 to i32, !dbg !7153
  call void @rshift_double(i64 %593, i64 %594, i64 %595, i32 %conv1467, i64* %lv, i64* %hv, i32 %conv1469), !dbg !7154
  br label %if.end1502, !dbg !7154

if.else1470:                                      ; preds = %lor.lhs.false1457
  %599 = load i32, i32* %code.addr, align 4, !dbg !7155
  %cmp1471 = icmp eq i32 %599, 65, !dbg !7157
  br i1 %cmp1471, label %if.then1473, label %if.else1481, !dbg !7158

if.then1473:                                      ; preds = %if.else1470
  %600 = load i64, i64* %l1, align 8, !dbg !7159
  %601 = load i64, i64* %h1, align 8, !dbg !7160
  %602 = load i64, i64* %l2, align 8, !dbg !7161
  %603 = load i32, i32* %mode.addr, align 4, !dbg !7162
  %idxprom1474 = zext i32 %603 to i64, !dbg !7162
  %arrayidx1475 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1474, !dbg !7162
  %604 = load i8, i8* %arrayidx1475, align 1, !dbg !7162
  %conv1476 = zext i8 %604 to i16, !dbg !7162
  %conv1477 = zext i16 %conv1476 to i32, !dbg !7162
  %mul1478 = mul nsw i32 %conv1477, 8, !dbg !7162
  %conv1479 = trunc i32 %mul1478 to i16, !dbg !7162
  %conv1480 = zext i16 %conv1479 to i32, !dbg !7162
  call void @lshift_double(i64 %600, i64 %601, i64 %602, i32 %conv1480, i64* %lv, i64* %hv, i32 1), !dbg !7163
  br label %if.end1501, !dbg !7163

if.else1481:                                      ; preds = %if.else1470
  %605 = load i32, i32* %code.addr, align 4, !dbg !7164
  %cmp1482 = icmp eq i32 %605, 66, !dbg !7166
  br i1 %cmp1482, label %if.then1484, label %if.else1492, !dbg !7167

if.then1484:                                      ; preds = %if.else1481
  %606 = load i64, i64* %l1, align 8, !dbg !7168
  %607 = load i64, i64* %h1, align 8, !dbg !7169
  %608 = load i64, i64* %l2, align 8, !dbg !7170
  %609 = load i32, i32* %mode.addr, align 4, !dbg !7171
  %idxprom1485 = zext i32 %609 to i64, !dbg !7171
  %arrayidx1486 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1485, !dbg !7171
  %610 = load i8, i8* %arrayidx1486, align 1, !dbg !7171
  %conv1487 = zext i8 %610 to i16, !dbg !7171
  %conv1488 = zext i16 %conv1487 to i32, !dbg !7171
  %mul1489 = mul nsw i32 %conv1488, 8, !dbg !7171
  %conv1490 = trunc i32 %mul1489 to i16, !dbg !7171
  %conv1491 = zext i16 %conv1490 to i32, !dbg !7171
  call void @lrotate_double(i64 %606, i64 %607, i64 %608, i32 %conv1491, i64* %lv, i64* %hv), !dbg !7172
  br label %if.end1500, !dbg !7172

if.else1492:                                      ; preds = %if.else1481
  %611 = load i64, i64* %l1, align 8, !dbg !7173
  %612 = load i64, i64* %h1, align 8, !dbg !7174
  %613 = load i64, i64* %l2, align 8, !dbg !7175
  %614 = load i32, i32* %mode.addr, align 4, !dbg !7176
  %idxprom1493 = zext i32 %614 to i64, !dbg !7176
  %arrayidx1494 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1493, !dbg !7176
  %615 = load i8, i8* %arrayidx1494, align 1, !dbg !7176
  %conv1495 = zext i8 %615 to i16, !dbg !7176
  %conv1496 = zext i16 %conv1495 to i32, !dbg !7176
  %mul1497 = mul nsw i32 %conv1496, 8, !dbg !7176
  %conv1498 = trunc i32 %mul1497 to i16, !dbg !7176
  %conv1499 = zext i16 %conv1498 to i32, !dbg !7176
  call void @rrotate_double(i64 %611, i64 %612, i64 %613, i32 %conv1499, i64* %lv, i64* %hv), !dbg !7177
  br label %if.end1500

if.end1500:                                       ; preds = %if.else1492, %if.then1484
  br label %if.end1501

if.end1501:                                       ; preds = %if.end1500, %if.then1473
  br label %if.end1502

if.end1502:                                       ; preds = %if.end1501, %if.then1460
  br label %sw.epilog1504, !dbg !7178

sw.default1503:                                   ; preds = %if.end1356
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7179
  br label %return, !dbg !7179

sw.epilog1504:                                    ; preds = %if.end1502, %if.end1439, %if.end1427, %if.end1415, %if.end1403, %sw.bb1389, %sw.bb1386, %sw.bb1383, %if.end1382, %if.end1377, %if.end1372, %if.end1367, %sw.bb1361, %sw.bb1359
  %616 = load i64, i64* %lv, align 8, !dbg !7180
  %617 = load i64, i64* %hv, align 8, !dbg !7181
  %618 = load i32, i32* %mode.addr, align 4, !dbg !7182
  %call1505 = call %struct.rtx_def* @immed_double_const(i64 %616, i64 %617, i32 %618), !dbg !7183
  store %struct.rtx_def* %call1505, %struct.rtx_def** %retval, align 8, !dbg !7184
  br label %return, !dbg !7184

if.end1506:                                       ; preds = %lor.lhs.false1314, %lor.lhs.false1304, %land.lhs.true1296, %if.end1290
  %619 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7185
  %620 = bitcast %struct.rtx_def* %619 to i32*, !dbg !7185
  %bf.load1507 = load i32, i32* %620, align 8, !dbg !7185
  %bf.clear1508 = and i32 %bf.load1507, 65535, !dbg !7185
  %cmp1509 = icmp eq i32 %bf.clear1508, 30, !dbg !7185
  br i1 %cmp1509, label %land.lhs.true1511, label %if.end1711, !dbg !7187

land.lhs.true1511:                                ; preds = %if.end1506
  %621 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7188
  %622 = bitcast %struct.rtx_def* %621 to i32*, !dbg !7188
  %bf.load1512 = load i32, i32* %622, align 8, !dbg !7188
  %bf.clear1513 = and i32 %bf.load1512, 65535, !dbg !7188
  %cmp1514 = icmp eq i32 %bf.clear1513, 30, !dbg !7188
  br i1 %cmp1514, label %land.lhs.true1516, label %if.end1711, !dbg !7189

land.lhs.true1516:                                ; preds = %land.lhs.true1511
  %623 = load i32, i32* %width, align 4, !dbg !7190
  %cmp1517 = icmp ule i32 %623, 64, !dbg !7191
  br i1 %cmp1517, label %land.lhs.true1519, label %if.end1711, !dbg !7192

land.lhs.true1519:                                ; preds = %land.lhs.true1516
  %624 = load i32, i32* %width, align 4, !dbg !7193
  %cmp1520 = icmp ne i32 %624, 0, !dbg !7194
  br i1 %cmp1520, label %if.then1522, label %if.end1711, !dbg !7195

if.then1522:                                      ; preds = %land.lhs.true1519
  %625 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7196
  %u1523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %625, i32 0, i32 1, !dbg !7196
  %hwint1524 = bitcast %union.u* %u1523 to [1 x i64]*, !dbg !7196
  %arrayidx1525 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1524, i64 0, i64 0, !dbg !7196
  %626 = load i64, i64* %arrayidx1525, align 8, !dbg !7196
  store i64 %626, i64* %arg0, align 8, !dbg !7198
  %627 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7199
  %u1526 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %627, i32 0, i32 1, !dbg !7199
  %hwint1527 = bitcast %union.u* %u1526 to [1 x i64]*, !dbg !7199
  %arrayidx1528 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1527, i64 0, i64 0, !dbg !7199
  %628 = load i64, i64* %arrayidx1528, align 8, !dbg !7199
  store i64 %628, i64* %arg1, align 8, !dbg !7200
  %629 = load i32, i32* %width, align 4, !dbg !7201
  %cmp1529 = icmp ult i32 %629, 64, !dbg !7203
  br i1 %cmp1529, label %if.then1531, label %if.else1558, !dbg !7204

if.then1531:                                      ; preds = %if.then1522
  %630 = load i32, i32* %width, align 4, !dbg !7205
  %sh_prom = zext i32 %630 to i64, !dbg !7207
  %shl = shl i64 1, %sh_prom, !dbg !7207
  %sub1532 = sub nsw i64 %shl, 1, !dbg !7208
  %631 = load i64, i64* %arg0, align 8, !dbg !7209
  %and1533 = and i64 %631, %sub1532, !dbg !7209
  store i64 %and1533, i64* %arg0, align 8, !dbg !7209
  %632 = load i32, i32* %width, align 4, !dbg !7210
  %sh_prom1534 = zext i32 %632 to i64, !dbg !7211
  %shl1535 = shl i64 1, %sh_prom1534, !dbg !7211
  %sub1536 = sub nsw i64 %shl1535, 1, !dbg !7212
  %633 = load i64, i64* %arg1, align 8, !dbg !7213
  %and1537 = and i64 %633, %sub1536, !dbg !7213
  store i64 %and1537, i64* %arg1, align 8, !dbg !7213
  %634 = load i64, i64* %arg0, align 8, !dbg !7214
  store i64 %634, i64* %arg0s, align 8, !dbg !7215
  %635 = load i64, i64* %arg0s, align 8, !dbg !7216
  %636 = load i32, i32* %width, align 4, !dbg !7218
  %sub1538 = sub i32 %636, 1, !dbg !7219
  %sh_prom1539 = zext i32 %sub1538 to i64, !dbg !7220
  %shl1540 = shl i64 1, %sh_prom1539, !dbg !7220
  %and1541 = and i64 %635, %shl1540, !dbg !7221
  %tobool1542 = icmp ne i64 %and1541, 0, !dbg !7221
  br i1 %tobool1542, label %if.then1543, label %if.end1547, !dbg !7222

if.then1543:                                      ; preds = %if.then1531
  %637 = load i32, i32* %width, align 4, !dbg !7223
  %sh_prom1544 = zext i32 %637 to i64, !dbg !7224
  %shl1545 = shl i64 -1, %sh_prom1544, !dbg !7224
  %638 = load i64, i64* %arg0s, align 8, !dbg !7225
  %or1546 = or i64 %638, %shl1545, !dbg !7225
  store i64 %or1546, i64* %arg0s, align 8, !dbg !7225
  br label %if.end1547, !dbg !7226

if.end1547:                                       ; preds = %if.then1543, %if.then1531
  %639 = load i64, i64* %arg1, align 8, !dbg !7227
  store i64 %639, i64* %arg1s, align 8, !dbg !7228
  %640 = load i64, i64* %arg1s, align 8, !dbg !7229
  %641 = load i32, i32* %width, align 4, !dbg !7231
  %sub1548 = sub i32 %641, 1, !dbg !7232
  %sh_prom1549 = zext i32 %sub1548 to i64, !dbg !7233
  %shl1550 = shl i64 1, %sh_prom1549, !dbg !7233
  %and1551 = and i64 %640, %shl1550, !dbg !7234
  %tobool1552 = icmp ne i64 %and1551, 0, !dbg !7234
  br i1 %tobool1552, label %if.then1553, label %if.end1557, !dbg !7235

if.then1553:                                      ; preds = %if.end1547
  %642 = load i32, i32* %width, align 4, !dbg !7236
  %sh_prom1554 = zext i32 %642 to i64, !dbg !7237
  %shl1555 = shl i64 -1, %sh_prom1554, !dbg !7237
  %643 = load i64, i64* %arg1s, align 8, !dbg !7238
  %or1556 = or i64 %643, %shl1555, !dbg !7238
  store i64 %or1556, i64* %arg1s, align 8, !dbg !7238
  br label %if.end1557, !dbg !7239

if.end1557:                                       ; preds = %if.then1553, %if.end1547
  br label %if.end1559, !dbg !7240

if.else1558:                                      ; preds = %if.then1522
  %644 = load i64, i64* %arg0, align 8, !dbg !7241
  store i64 %644, i64* %arg0s, align 8, !dbg !7243
  %645 = load i64, i64* %arg1, align 8, !dbg !7244
  store i64 %645, i64* %arg1s, align 8, !dbg !7245
  br label %if.end1559

if.end1559:                                       ; preds = %if.else1558, %if.end1557
  %646 = load i32, i32* %code.addr, align 4, !dbg !7246
  switch i32 %646, label %sw.default1708 [
    i32 49, label %sw.bb1560
    i32 50, label %sw.bb1562
    i32 52, label %sw.bb1564
    i32 55, label %sw.bb1566
    i32 58, label %sw.bb1577
    i32 59, label %sw.bb1588
    i32 60, label %sw.bb1600
    i32 61, label %sw.bb1612
    i32 62, label %sw.bb1614
    i32 63, label %sw.bb1616
    i32 68, label %sw.bb1618
    i32 65, label %sw.bb1618
    i32 67, label %sw.bb1618
    i32 69, label %sw.bb1654
    i32 66, label %sw.bb1666
    i32 48, label %sw.bb1678
    i32 70, label %sw.bb1679
    i32 72, label %sw.bb1686
    i32 71, label %sw.bb1693
    i32 73, label %sw.bb1700
    i32 127, label %sw.bb1707
    i32 128, label %sw.bb1707
    i32 129, label %sw.bb1707
    i32 135, label %sw.bb1707
    i32 53, label %sw.bb1707
    i32 54, label %sw.bb1707
    i32 56, label %sw.bb1707
    i32 57, label %sw.bb1707
    i32 133, label %sw.bb1707
    i32 134, label %sw.bb1707
  ], !dbg !7247

sw.bb1560:                                        ; preds = %if.end1559
  %647 = load i64, i64* %arg0s, align 8, !dbg !7248
  %648 = load i64, i64* %arg1s, align 8, !dbg !7250
  %add1561 = add nsw i64 %647, %648, !dbg !7251
  store i64 %add1561, i64* %val, align 8, !dbg !7252
  br label %sw.epilog1709, !dbg !7253

sw.bb1562:                                        ; preds = %if.end1559
  %649 = load i64, i64* %arg0s, align 8, !dbg !7254
  %650 = load i64, i64* %arg1s, align 8, !dbg !7255
  %sub1563 = sub nsw i64 %649, %650, !dbg !7256
  store i64 %sub1563, i64* %val, align 8, !dbg !7257
  br label %sw.epilog1709, !dbg !7258

sw.bb1564:                                        ; preds = %if.end1559
  %651 = load i64, i64* %arg0s, align 8, !dbg !7259
  %652 = load i64, i64* %arg1s, align 8, !dbg !7260
  %mul1565 = mul nsw i64 %651, %652, !dbg !7261
  store i64 %mul1565, i64* %val, align 8, !dbg !7262
  br label %sw.epilog1709, !dbg !7263

sw.bb1566:                                        ; preds = %if.end1559
  %653 = load i64, i64* %arg1s, align 8, !dbg !7264
  %cmp1567 = icmp eq i64 %653, 0, !dbg !7266
  br i1 %cmp1567, label %if.then1575, label %lor.lhs.false1569, !dbg !7267

lor.lhs.false1569:                                ; preds = %sw.bb1566
  %654 = load i64, i64* %arg0s, align 8, !dbg !7268
  %cmp1570 = icmp eq i64 %654, -9223372036854775808, !dbg !7269
  br i1 %cmp1570, label %land.lhs.true1572, label %if.end1576, !dbg !7270

land.lhs.true1572:                                ; preds = %lor.lhs.false1569
  %655 = load i64, i64* %arg1s, align 8, !dbg !7271
  %cmp1573 = icmp eq i64 %655, -1, !dbg !7272
  br i1 %cmp1573, label %if.then1575, label %if.end1576, !dbg !7273

if.then1575:                                      ; preds = %land.lhs.true1572, %sw.bb1566
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7274
  br label %return, !dbg !7274

if.end1576:                                       ; preds = %land.lhs.true1572, %lor.lhs.false1569
  %656 = load i64, i64* %arg0s, align 8, !dbg !7275
  %657 = load i64, i64* %arg1s, align 8, !dbg !7276
  %div = sdiv i64 %656, %657, !dbg !7277
  store i64 %div, i64* %val, align 8, !dbg !7278
  br label %sw.epilog1709, !dbg !7279

sw.bb1577:                                        ; preds = %if.end1559
  %658 = load i64, i64* %arg1s, align 8, !dbg !7280
  %cmp1578 = icmp eq i64 %658, 0, !dbg !7282
  br i1 %cmp1578, label %if.then1586, label %lor.lhs.false1580, !dbg !7283

lor.lhs.false1580:                                ; preds = %sw.bb1577
  %659 = load i64, i64* %arg0s, align 8, !dbg !7284
  %cmp1581 = icmp eq i64 %659, -9223372036854775808, !dbg !7285
  br i1 %cmp1581, label %land.lhs.true1583, label %if.end1587, !dbg !7286

land.lhs.true1583:                                ; preds = %lor.lhs.false1580
  %660 = load i64, i64* %arg1s, align 8, !dbg !7287
  %cmp1584 = icmp eq i64 %660, -1, !dbg !7288
  br i1 %cmp1584, label %if.then1586, label %if.end1587, !dbg !7289

if.then1586:                                      ; preds = %land.lhs.true1583, %sw.bb1577
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7290
  br label %return, !dbg !7290

if.end1587:                                       ; preds = %land.lhs.true1583, %lor.lhs.false1580
  %661 = load i64, i64* %arg0s, align 8, !dbg !7291
  %662 = load i64, i64* %arg1s, align 8, !dbg !7292
  %rem = srem i64 %661, %662, !dbg !7293
  store i64 %rem, i64* %val, align 8, !dbg !7294
  br label %sw.epilog1709, !dbg !7295

sw.bb1588:                                        ; preds = %if.end1559
  %663 = load i64, i64* %arg1, align 8, !dbg !7296
  %cmp1589 = icmp eq i64 %663, 0, !dbg !7298
  br i1 %cmp1589, label %if.then1597, label %lor.lhs.false1591, !dbg !7299

lor.lhs.false1591:                                ; preds = %sw.bb1588
  %664 = load i64, i64* %arg0s, align 8, !dbg !7300
  %cmp1592 = icmp eq i64 %664, -9223372036854775808, !dbg !7301
  br i1 %cmp1592, label %land.lhs.true1594, label %if.end1598, !dbg !7302

land.lhs.true1594:                                ; preds = %lor.lhs.false1591
  %665 = load i64, i64* %arg1s, align 8, !dbg !7303
  %cmp1595 = icmp eq i64 %665, -1, !dbg !7304
  br i1 %cmp1595, label %if.then1597, label %if.end1598, !dbg !7305

if.then1597:                                      ; preds = %land.lhs.true1594, %sw.bb1588
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7306
  br label %return, !dbg !7306

if.end1598:                                       ; preds = %land.lhs.true1594, %lor.lhs.false1591
  %666 = load i64, i64* %arg0, align 8, !dbg !7307
  %667 = load i64, i64* %arg1, align 8, !dbg !7308
  %div1599 = udiv i64 %666, %667, !dbg !7309
  store i64 %div1599, i64* %val, align 8, !dbg !7310
  br label %sw.epilog1709, !dbg !7311

sw.bb1600:                                        ; preds = %if.end1559
  %668 = load i64, i64* %arg1, align 8, !dbg !7312
  %cmp1601 = icmp eq i64 %668, 0, !dbg !7314
  br i1 %cmp1601, label %if.then1609, label %lor.lhs.false1603, !dbg !7315

lor.lhs.false1603:                                ; preds = %sw.bb1600
  %669 = load i64, i64* %arg0s, align 8, !dbg !7316
  %cmp1604 = icmp eq i64 %669, -9223372036854775808, !dbg !7317
  br i1 %cmp1604, label %land.lhs.true1606, label %if.end1610, !dbg !7318

land.lhs.true1606:                                ; preds = %lor.lhs.false1603
  %670 = load i64, i64* %arg1s, align 8, !dbg !7319
  %cmp1607 = icmp eq i64 %670, -1, !dbg !7320
  br i1 %cmp1607, label %if.then1609, label %if.end1610, !dbg !7321

if.then1609:                                      ; preds = %land.lhs.true1606, %sw.bb1600
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7322
  br label %return, !dbg !7322

if.end1610:                                       ; preds = %land.lhs.true1606, %lor.lhs.false1603
  %671 = load i64, i64* %arg0, align 8, !dbg !7323
  %672 = load i64, i64* %arg1, align 8, !dbg !7324
  %rem1611 = urem i64 %671, %672, !dbg !7325
  store i64 %rem1611, i64* %val, align 8, !dbg !7326
  br label %sw.epilog1709, !dbg !7327

sw.bb1612:                                        ; preds = %if.end1559
  %673 = load i64, i64* %arg0, align 8, !dbg !7328
  %674 = load i64, i64* %arg1, align 8, !dbg !7329
  %and1613 = and i64 %673, %674, !dbg !7330
  store i64 %and1613, i64* %val, align 8, !dbg !7331
  br label %sw.epilog1709, !dbg !7332

sw.bb1614:                                        ; preds = %if.end1559
  %675 = load i64, i64* %arg0, align 8, !dbg !7333
  %676 = load i64, i64* %arg1, align 8, !dbg !7334
  %or1615 = or i64 %675, %676, !dbg !7335
  store i64 %or1615, i64* %val, align 8, !dbg !7336
  br label %sw.epilog1709, !dbg !7337

sw.bb1616:                                        ; preds = %if.end1559
  %677 = load i64, i64* %arg0, align 8, !dbg !7338
  %678 = load i64, i64* %arg1, align 8, !dbg !7339
  %xor1617 = xor i64 %677, %678, !dbg !7340
  store i64 %xor1617, i64* %val, align 8, !dbg !7341
  br label %sw.epilog1709, !dbg !7342

sw.bb1618:                                        ; preds = %if.end1559, %if.end1559, %if.end1559
  %679 = load i64, i64* %arg1, align 8, !dbg !7343
  %cmp1619 = icmp slt i64 %679, 0, !dbg !7346
  br i1 %cmp1619, label %if.then1631, label %lor.lhs.false1621, !dbg !7347

lor.lhs.false1621:                                ; preds = %sw.bb1618
  %680 = load i64, i64* %arg1, align 8, !dbg !7348
  %681 = load i32, i32* %mode.addr, align 4, !dbg !7349
  %idxprom1622 = zext i32 %681 to i64, !dbg !7349
  %arrayidx1623 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1622, !dbg !7349
  %682 = load i8, i8* %arrayidx1623, align 1, !dbg !7349
  %conv1624 = zext i8 %682 to i16, !dbg !7349
  %conv1625 = zext i16 %conv1624 to i32, !dbg !7349
  %mul1626 = mul nsw i32 %conv1625, 8, !dbg !7349
  %conv1627 = trunc i32 %mul1626 to i16, !dbg !7349
  %conv1628 = zext i16 %conv1627 to i64, !dbg !7349
  %cmp1629 = icmp sge i64 %680, %conv1628, !dbg !7350
  br i1 %cmp1629, label %if.then1631, label %if.end1632, !dbg !7351

if.then1631:                                      ; preds = %lor.lhs.false1621, %sw.bb1618
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7352
  br label %return, !dbg !7352

if.end1632:                                       ; preds = %lor.lhs.false1621
  %683 = load i32, i32* %code.addr, align 4, !dbg !7353
  %cmp1633 = icmp eq i32 %683, 65, !dbg !7354
  br i1 %cmp1633, label %cond.true1635, label %cond.false1637, !dbg !7353

cond.true1635:                                    ; preds = %if.end1632
  %684 = load i64, i64* %arg0, align 8, !dbg !7355
  %685 = load i64, i64* %arg1, align 8, !dbg !7356
  %shl1636 = shl i64 %684, %685, !dbg !7357
  br label %cond.end1638, !dbg !7353

cond.false1637:                                   ; preds = %if.end1632
  %686 = load i64, i64* %arg0, align 8, !dbg !7358
  %687 = load i64, i64* %arg1, align 8, !dbg !7359
  %shr = lshr i64 %686, %687, !dbg !7360
  br label %cond.end1638, !dbg !7353

cond.end1638:                                     ; preds = %cond.false1637, %cond.true1635
  %cond1639 = phi i64 [ %shl1636, %cond.true1635 ], [ %shr, %cond.false1637 ], !dbg !7353
  store i64 %cond1639, i64* %val, align 8, !dbg !7361
  %688 = load i32, i32* %code.addr, align 4, !dbg !7362
  %cmp1640 = icmp eq i32 %688, 67, !dbg !7364
  br i1 %cmp1640, label %land.lhs.true1642, label %if.end1653, !dbg !7365

land.lhs.true1642:                                ; preds = %cond.end1638
  %689 = load i64, i64* %arg0s, align 8, !dbg !7366
  %cmp1643 = icmp slt i64 %689, 0, !dbg !7367
  br i1 %cmp1643, label %land.lhs.true1645, label %if.end1653, !dbg !7368

land.lhs.true1645:                                ; preds = %land.lhs.true1642
  %690 = load i64, i64* %arg1, align 8, !dbg !7369
  %cmp1646 = icmp sgt i64 %690, 0, !dbg !7370
  br i1 %cmp1646, label %if.then1648, label %if.end1653, !dbg !7371

if.then1648:                                      ; preds = %land.lhs.true1645
  %691 = load i32, i32* %width, align 4, !dbg !7372
  %conv1649 = zext i32 %691 to i64, !dbg !7372
  %692 = load i64, i64* %arg1, align 8, !dbg !7373
  %sub1650 = sub nsw i64 %conv1649, %692, !dbg !7374
  %shl1651 = shl i64 -1, %sub1650, !dbg !7375
  %693 = load i64, i64* %val, align 8, !dbg !7376
  %or1652 = or i64 %693, %shl1651, !dbg !7376
  store i64 %or1652, i64* %val, align 8, !dbg !7376
  br label %if.end1653, !dbg !7377

if.end1653:                                       ; preds = %if.then1648, %land.lhs.true1645, %land.lhs.true1642, %cond.end1638
  br label %sw.epilog1709, !dbg !7378

sw.bb1654:                                        ; preds = %if.end1559
  %694 = load i64, i64* %arg1, align 8, !dbg !7379
  %cmp1655 = icmp slt i64 %694, 0, !dbg !7381
  br i1 %cmp1655, label %if.then1657, label %if.end1658, !dbg !7382

if.then1657:                                      ; preds = %sw.bb1654
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7383
  br label %return, !dbg !7383

if.end1658:                                       ; preds = %sw.bb1654
  %695 = load i32, i32* %width, align 4, !dbg !7384
  %conv1659 = zext i32 %695 to i64, !dbg !7384
  %696 = load i64, i64* %arg1, align 8, !dbg !7385
  %rem1660 = srem i64 %696, %conv1659, !dbg !7385
  store i64 %rem1660, i64* %arg1, align 8, !dbg !7385
  %697 = load i64, i64* %arg0, align 8, !dbg !7386
  %698 = load i32, i32* %width, align 4, !dbg !7387
  %conv1661 = zext i32 %698 to i64, !dbg !7387
  %699 = load i64, i64* %arg1, align 8, !dbg !7388
  %sub1662 = sub nsw i64 %conv1661, %699, !dbg !7389
  %shl1663 = shl i64 %697, %sub1662, !dbg !7390
  %700 = load i64, i64* %arg0, align 8, !dbg !7391
  %701 = load i64, i64* %arg1, align 8, !dbg !7392
  %shr1664 = lshr i64 %700, %701, !dbg !7393
  %or1665 = or i64 %shl1663, %shr1664, !dbg !7394
  store i64 %or1665, i64* %val, align 8, !dbg !7395
  br label %sw.epilog1709, !dbg !7396

sw.bb1666:                                        ; preds = %if.end1559
  %702 = load i64, i64* %arg1, align 8, !dbg !7397
  %cmp1667 = icmp slt i64 %702, 0, !dbg !7399
  br i1 %cmp1667, label %if.then1669, label %if.end1670, !dbg !7400

if.then1669:                                      ; preds = %sw.bb1666
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7401
  br label %return, !dbg !7401

if.end1670:                                       ; preds = %sw.bb1666
  %703 = load i32, i32* %width, align 4, !dbg !7402
  %conv1671 = zext i32 %703 to i64, !dbg !7402
  %704 = load i64, i64* %arg1, align 8, !dbg !7403
  %rem1672 = srem i64 %704, %conv1671, !dbg !7403
  store i64 %rem1672, i64* %arg1, align 8, !dbg !7403
  %705 = load i64, i64* %arg0, align 8, !dbg !7404
  %706 = load i64, i64* %arg1, align 8, !dbg !7405
  %shl1673 = shl i64 %705, %706, !dbg !7406
  %707 = load i64, i64* %arg0, align 8, !dbg !7407
  %708 = load i32, i32* %width, align 4, !dbg !7408
  %conv1674 = zext i32 %708 to i64, !dbg !7408
  %709 = load i64, i64* %arg1, align 8, !dbg !7409
  %sub1675 = sub nsw i64 %conv1674, %709, !dbg !7410
  %shr1676 = lshr i64 %707, %sub1675, !dbg !7411
  %or1677 = or i64 %shl1673, %shr1676, !dbg !7412
  store i64 %or1677, i64* %val, align 8, !dbg !7413
  br label %sw.epilog1709, !dbg !7414

sw.bb1678:                                        ; preds = %if.end1559
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7415
  br label %return, !dbg !7415

sw.bb1679:                                        ; preds = %if.end1559
  %710 = load i64, i64* %arg0s, align 8, !dbg !7416
  %711 = load i64, i64* %arg1s, align 8, !dbg !7417
  %cmp1680 = icmp sle i64 %710, %711, !dbg !7418
  br i1 %cmp1680, label %cond.true1682, label %cond.false1683, !dbg !7416

cond.true1682:                                    ; preds = %sw.bb1679
  %712 = load i64, i64* %arg0s, align 8, !dbg !7419
  br label %cond.end1684, !dbg !7416

cond.false1683:                                   ; preds = %sw.bb1679
  %713 = load i64, i64* %arg1s, align 8, !dbg !7420
  br label %cond.end1684, !dbg !7416

cond.end1684:                                     ; preds = %cond.false1683, %cond.true1682
  %cond1685 = phi i64 [ %712, %cond.true1682 ], [ %713, %cond.false1683 ], !dbg !7416
  store i64 %cond1685, i64* %val, align 8, !dbg !7421
  br label %sw.epilog1709, !dbg !7422

sw.bb1686:                                        ; preds = %if.end1559
  %714 = load i64, i64* %arg0, align 8, !dbg !7423
  %715 = load i64, i64* %arg1, align 8, !dbg !7424
  %cmp1687 = icmp ule i64 %714, %715, !dbg !7425
  br i1 %cmp1687, label %cond.true1689, label %cond.false1690, !dbg !7426

cond.true1689:                                    ; preds = %sw.bb1686
  %716 = load i64, i64* %arg0, align 8, !dbg !7427
  br label %cond.end1691, !dbg !7426

cond.false1690:                                   ; preds = %sw.bb1686
  %717 = load i64, i64* %arg1, align 8, !dbg !7428
  br label %cond.end1691, !dbg !7426

cond.end1691:                                     ; preds = %cond.false1690, %cond.true1689
  %cond1692 = phi i64 [ %716, %cond.true1689 ], [ %717, %cond.false1690 ], !dbg !7426
  store i64 %cond1692, i64* %val, align 8, !dbg !7429
  br label %sw.epilog1709, !dbg !7430

sw.bb1693:                                        ; preds = %if.end1559
  %718 = load i64, i64* %arg0s, align 8, !dbg !7431
  %719 = load i64, i64* %arg1s, align 8, !dbg !7432
  %cmp1694 = icmp sgt i64 %718, %719, !dbg !7433
  br i1 %cmp1694, label %cond.true1696, label %cond.false1697, !dbg !7431

cond.true1696:                                    ; preds = %sw.bb1693
  %720 = load i64, i64* %arg0s, align 8, !dbg !7434
  br label %cond.end1698, !dbg !7431

cond.false1697:                                   ; preds = %sw.bb1693
  %721 = load i64, i64* %arg1s, align 8, !dbg !7435
  br label %cond.end1698, !dbg !7431

cond.end1698:                                     ; preds = %cond.false1697, %cond.true1696
  %cond1699 = phi i64 [ %720, %cond.true1696 ], [ %721, %cond.false1697 ], !dbg !7431
  store i64 %cond1699, i64* %val, align 8, !dbg !7436
  br label %sw.epilog1709, !dbg !7437

sw.bb1700:                                        ; preds = %if.end1559
  %722 = load i64, i64* %arg0, align 8, !dbg !7438
  %723 = load i64, i64* %arg1, align 8, !dbg !7439
  %cmp1701 = icmp ugt i64 %722, %723, !dbg !7440
  br i1 %cmp1701, label %cond.true1703, label %cond.false1704, !dbg !7441

cond.true1703:                                    ; preds = %sw.bb1700
  %724 = load i64, i64* %arg0, align 8, !dbg !7442
  br label %cond.end1705, !dbg !7441

cond.false1704:                                   ; preds = %sw.bb1700
  %725 = load i64, i64* %arg1, align 8, !dbg !7443
  br label %cond.end1705, !dbg !7441

cond.end1705:                                     ; preds = %cond.false1704, %cond.true1703
  %cond1706 = phi i64 [ %724, %cond.true1703 ], [ %725, %cond.false1704 ], !dbg !7441
  store i64 %cond1706, i64* %val, align 8, !dbg !7444
  br label %sw.epilog1709, !dbg !7445

sw.bb1707:                                        ; preds = %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559, %if.end1559
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7446
  br label %return, !dbg !7446

sw.default1708:                                   ; preds = %if.end1559
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3580, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7447
  br label %sw.epilog1709, !dbg !7448

sw.epilog1709:                                    ; preds = %sw.default1708, %cond.end1705, %cond.end1698, %cond.end1691, %cond.end1684, %if.end1670, %if.end1658, %if.end1653, %sw.bb1616, %sw.bb1614, %sw.bb1612, %if.end1610, %if.end1598, %if.end1587, %if.end1576, %sw.bb1564, %sw.bb1562, %sw.bb1560
  %726 = load i64, i64* %val, align 8, !dbg !7449
  %727 = load i32, i32* %mode.addr, align 4, !dbg !7450
  %call1710 = call %struct.rtx_def* @gen_int_mode(i64 %726, i32 %727), !dbg !7451
  store %struct.rtx_def* %call1710, %struct.rtx_def** %retval, align 8, !dbg !7452
  br label %return, !dbg !7452

if.end1711:                                       ; preds = %land.lhs.true1519, %land.lhs.true1516, %land.lhs.true1511, %if.end1506
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !7453
  br label %return, !dbg !7453

return:                                           ; preds = %if.end1711, %sw.epilog1709, %sw.bb1707, %sw.bb1678, %if.then1669, %if.then1657, %if.then1631, %if.then1609, %if.then1597, %if.then1586, %if.then1575, %sw.epilog1504, %sw.default1503, %if.then1453, %if.then1381, %if.then1376, %if.then1371, %if.then1366, %if.end1288, %if.then1287, %if.then1113, %if.then1002, %sw.bb784, %if.then782, %if.then777, %if.then564, %if.then459, %for.end346, %if.end267, %for.end, %if.then85
  %728 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !7454
  ret %struct.rtx_def* %728, !dbg !7454
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_binary_operation_1(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1, %struct.rtx_def* %trueop0, %struct.rtx_def* %trueop1) #0 !dbg !7455 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %trueop0.addr = alloca %struct.rtx_def*, align 8
  %trueop1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %reversed = alloca %struct.rtx_def*, align 8
  %opleft = alloca %struct.rtx_def*, align 8
  %opright = alloca %struct.rtx_def*, align 8
  %val = alloca i64, align 8
  %width = alloca i32, align 4
  %coeff0h = alloca i64, align 8
  %coeff1h = alloca i64, align 8
  %coeff0l = alloca i64, align 8
  %coeff1l = alloca i64, align 8
  %lhs = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %orig = alloca %struct.rtx_def*, align 8
  %coeff = alloca %struct.rtx_def*, align 8
  %l = alloca i64, align 8
  %h = alloca i64, align 8
  %speed = alloca i8, align 1
  %in1 = alloca %struct.rtx_def*, align 8
  %in2 = alloca %struct.rtx_def*, align 8
  %xop00 = alloca %struct.rtx_def*, align 8
  %xop10 = alloca %struct.rtx_def*, align 8
  %coeff0h1218 = alloca i64, align 8
  %negcoeff1h = alloca i64, align 8
  %coeff0l1219 = alloca i64, align 8
  %negcoeff1l = alloca i64, align 8
  %lhs1220 = alloca %struct.rtx_def*, align 8
  %rhs1221 = alloca %struct.rtx_def*, align 8
  %orig1419 = alloca %struct.rtx_def*, align 8
  %coeff1421 = alloca %struct.rtx_def*, align 8
  %l1422 = alloca i64, align 8
  %h1423 = alloca i64, align 8
  %speed1424 = alloca i8, align 1
  %in11665 = alloca %struct.rtx_def*, align 8
  %in21666 = alloca %struct.rtx_def*, align 8
  %in11790 = alloca %struct.rtx_def*, align 8
  %in21791 = alloca %struct.rtx_def*, align 8
  %d = alloca %struct.real_value, align 8
  %mask = alloca i64, align 8
  %c1 = alloca i64, align 8
  %c2 = alloca i64, align 8
  %count = alloca i32, align 4
  %mask3100 = alloca i64, align 8
  %num_negated = alloca i32, align 4
  %nzop0 = alloca i64, align 8
  %nzop1 = alloca i64, align 8
  %val1 = alloca i64, align 8
  %imode = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %xmode = alloca i32, align 4
  %tmp = alloca i64, align 8
  %pmop = alloca [2 x %struct.rtx_def*], align 16
  %which = alloca i32, align 4
  %d4420 = alloca %struct.real_value, align 8
  %x4561 = alloca %struct.rtx_def*, align 8
  %imode4727 = alloca i32, align 4
  %zero_val = alloca i64, align 8
  %op05005 = alloca %struct.rtx_def*, align 8
  %op15010 = alloca %struct.rtx_def*, align 8
  %opmode = alloca i32, align 4
  %elt_size = alloca i32, align 4
  %n_elts = alloca i32, align 4
  %i = alloca i32, align 4
  %elem5039 = alloca i32, align 4
  %vec = alloca %struct.rtvec_def*, align 8
  %tmp_op = alloca %struct.rtx_def*, align 8
  %tmp5040 = alloca %struct.rtx_def*, align 8
  %op00 = alloca %struct.rtx_def*, align 8
  %op01 = alloca %struct.rtx_def*, align 8
  %mode00 = alloca i32, align 4
  %mode01 = alloca i32, align 4
  %n_elts00 = alloca i32, align 4
  %n_elts01 = alloca i32, align 4
  %elt_size5314 = alloca i32, align 4
  %n_elts5322 = alloca i32, align 4
  %v = alloca %struct.rtvec_def*, align 8
  %i5329 = alloca i32, align 4
  %x5345 = alloca %struct.rtx_def*, align 8
  %vec5403 = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %vec_size = alloca i64, align 8
  %op0_mode = alloca i32, align 4
  %op1_mode = alloca i32, align 4
  %elt_size5702 = alloca i32, align 4
  %n_elts5710 = alloca i32, align 4
  %v5716 = alloca %struct.rtvec_def*, align 8
  %i5718 = alloca i32, align 4
  %in_n_elts = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !7458, metadata !DIExpression()), !dbg !7459
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7460, metadata !DIExpression()), !dbg !7461
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !7462, metadata !DIExpression()), !dbg !7463
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !7464, metadata !DIExpression()), !dbg !7465
  store %struct.rtx_def* %trueop0, %struct.rtx_def** %trueop0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop0.addr, metadata !7466, metadata !DIExpression()), !dbg !7467
  store %struct.rtx_def* %trueop1, %struct.rtx_def** %trueop1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop1.addr, metadata !7468, metadata !DIExpression()), !dbg !7469
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !7470, metadata !DIExpression()), !dbg !7471
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reversed, metadata !7472, metadata !DIExpression()), !dbg !7473
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %opleft, metadata !7474, metadata !DIExpression()), !dbg !7475
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %opright, metadata !7476, metadata !DIExpression()), !dbg !7477
  call void @llvm.dbg.declare(metadata i64* %val, metadata !7478, metadata !DIExpression()), !dbg !7479
  call void @llvm.dbg.declare(metadata i32* %width, metadata !7480, metadata !DIExpression()), !dbg !7481
  %0 = load i32, i32* %mode.addr, align 4, !dbg !7482
  %idxprom = zext i32 %0 to i64, !dbg !7482
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !7482
  %1 = load i8, i8* %arrayidx, align 1, !dbg !7482
  %conv = zext i8 %1 to i16, !dbg !7482
  %conv1 = zext i16 %conv to i32, !dbg !7482
  %mul = mul nsw i32 %conv1, 8, !dbg !7482
  %conv2 = trunc i32 %mul to i16, !dbg !7482
  %conv3 = zext i16 %conv2 to i32, !dbg !7482
  store i32 %conv3, i32* %width, align 4, !dbg !7481
  %2 = load i32, i32* %code.addr, align 4, !dbg !7483
  switch i32 %2, label %sw.default5878 [
    i32 49, label %sw.bb
    i32 48, label %sw.bb677
    i32 50, label %sw.bb763
    i32 52, label %sw.bb1845
    i32 62, label %sw.bb2523
    i32 63, label %sw.bb3137
    i32 61, label %sw.bb3441
    i32 59, label %sw.bb4051
    i32 55, label %sw.bb4086
    i32 60, label %sw.bb4566
    i32 58, label %sw.bb4612
    i32 69, label %sw.bb4642
    i32 66, label %sw.bb4642
    i32 67, label %sw.bb4642
    i32 65, label %sw.bb4678
    i32 133, label %sw.bb4678
    i32 134, label %sw.bb4678
    i32 68, label %sw.bb4694
    i32 70, label %sw.bb4736
    i32 71, label %sw.bb4769
    i32 72, label %sw.bb4802
    i32 73, label %sw.bb4823
    i32 127, label %sw.bb4842
    i32 128, label %sw.bb4842
    i32 129, label %sw.bb4842
    i32 135, label %sw.bb4842
    i32 53, label %sw.bb4842
    i32 54, label %sw.bb4842
    i32 56, label %sw.bb4842
    i32 57, label %sw.bb4842
    i32 124, label %sw.bb4843
    i32 125, label %sw.bb5465
  ], !dbg !7484

sw.bb:                                            ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom4 = zext i32 %3 to i64, !dbg !7485
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4, !dbg !7485
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !7485
  %conv6 = zext i8 %4 to i32, !dbg !7485
  %cmp = icmp eq i32 %conv6, 8, !dbg !7485
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !7485

lor.lhs.false:                                    ; preds = %sw.bb
  %5 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom8 = zext i32 %5 to i64, !dbg !7485
  %arrayidx9 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom8, !dbg !7485
  %6 = load i8, i8* %arrayidx9, align 1, !dbg !7485
  %conv10 = zext i8 %6 to i32, !dbg !7485
  %cmp11 = icmp eq i32 %conv10, 9, !dbg !7485
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false13, !dbg !7485

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %7 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom14 = zext i32 %7 to i64, !dbg !7485
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom14, !dbg !7485
  %8 = load i8, i8* %arrayidx15, align 1, !dbg !7485
  %conv16 = zext i8 %8 to i32, !dbg !7485
  %cmp17 = icmp eq i32 %conv16, 11, !dbg !7485
  br i1 %cmp17, label %land.lhs.true, label %lor.lhs.false19, !dbg !7485

lor.lhs.false19:                                  ; preds = %lor.lhs.false13
  %9 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom20 = zext i32 %9 to i64, !dbg !7485
  %arrayidx21 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom20, !dbg !7485
  %10 = load i8, i8* %arrayidx21, align 1, !dbg !7485
  %conv22 = zext i8 %10 to i32, !dbg !7485
  %cmp23 = icmp eq i32 %conv22, 17, !dbg !7485
  br i1 %cmp23, label %land.lhs.true, label %land.lhs.true90, !dbg !7485

land.lhs.true:                                    ; preds = %lor.lhs.false19, %lor.lhs.false13, %lor.lhs.false, %sw.bb
  %11 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom25 = zext i32 %11 to i64, !dbg !7485
  %arrayidx26 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom25, !dbg !7485
  %12 = load i8, i8* %arrayidx26, align 1, !dbg !7485
  %conv27 = zext i8 %12 to i32, !dbg !7485
  %cmp28 = icmp eq i32 %conv27, 8, !dbg !7485
  br i1 %cmp28, label %cond.true, label %lor.lhs.false30, !dbg !7485

lor.lhs.false30:                                  ; preds = %land.lhs.true
  %13 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom31 = zext i32 %13 to i64, !dbg !7485
  %arrayidx32 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom31, !dbg !7485
  %14 = load i8, i8* %arrayidx32, align 1, !dbg !7485
  %conv33 = zext i8 %14 to i32, !dbg !7485
  %cmp34 = icmp eq i32 %conv33, 9, !dbg !7485
  br i1 %cmp34, label %cond.true, label %cond.false, !dbg !7485

cond.true:                                        ; preds = %lor.lhs.false30, %land.lhs.true
  %15 = load i32, i32* %mode.addr, align 4, !dbg !7485
  br label %cond.end, !dbg !7485

cond.false:                                       ; preds = %lor.lhs.false30
  %16 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom36 = zext i32 %16 to i64, !dbg !7485
  %arrayidx37 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom36, !dbg !7485
  %17 = load i8, i8* %arrayidx37, align 1, !dbg !7485
  %conv38 = zext i8 %17 to i32, !dbg !7485
  br label %cond.end, !dbg !7485

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %15, %cond.true ], [ %conv38, %cond.false ], !dbg !7485
  %idxprom39 = zext i32 %cond to i64, !dbg !7485
  %arrayidx40 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom39, !dbg !7485
  %18 = load i8, i8* %arrayidx40, align 1, !dbg !7485
  %conv41 = zext i8 %18 to i32, !dbg !7485
  %cmp42 = icmp eq i32 %conv41, 9, !dbg !7485
  br i1 %cmp42, label %cond.true44, label %cond.false63, !dbg !7485

cond.true44:                                      ; preds = %cond.end
  %19 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom45 = zext i32 %19 to i64, !dbg !7485
  %arrayidx46 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom45, !dbg !7485
  %20 = load i8, i8* %arrayidx46, align 1, !dbg !7485
  %conv47 = zext i8 %20 to i32, !dbg !7485
  %cmp48 = icmp eq i32 %conv47, 8, !dbg !7485
  br i1 %cmp48, label %cond.true56, label %lor.lhs.false50, !dbg !7485

lor.lhs.false50:                                  ; preds = %cond.true44
  %21 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom51 = zext i32 %21 to i64, !dbg !7485
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom51, !dbg !7485
  %22 = load i8, i8* %arrayidx52, align 1, !dbg !7485
  %conv53 = zext i8 %22 to i32, !dbg !7485
  %cmp54 = icmp eq i32 %conv53, 9, !dbg !7485
  br i1 %cmp54, label %cond.true56, label %cond.false57, !dbg !7485

cond.true56:                                      ; preds = %lor.lhs.false50, %cond.true44
  %23 = load i32, i32* %mode.addr, align 4, !dbg !7485
  br label %cond.end61, !dbg !7485

cond.false57:                                     ; preds = %lor.lhs.false50
  %24 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom58 = zext i32 %24 to i64, !dbg !7485
  %arrayidx59 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom58, !dbg !7485
  %25 = load i8, i8* %arrayidx59, align 1, !dbg !7485
  %conv60 = zext i8 %25 to i32, !dbg !7485
  br label %cond.end61, !dbg !7485

cond.end61:                                       ; preds = %cond.false57, %cond.true56
  %cond62 = phi i32 [ %23, %cond.true56 ], [ %conv60, %cond.false57 ], !dbg !7485
  %sub = sub i32 %cond62, 42, !dbg !7485
  %add = add i32 %sub, 4, !dbg !7485
  br label %cond.end83, !dbg !7485

cond.false63:                                     ; preds = %cond.end
  %26 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom64 = zext i32 %26 to i64, !dbg !7485
  %arrayidx65 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom64, !dbg !7485
  %27 = load i8, i8* %arrayidx65, align 1, !dbg !7485
  %conv66 = zext i8 %27 to i32, !dbg !7485
  %cmp67 = icmp eq i32 %conv66, 8, !dbg !7485
  br i1 %cmp67, label %cond.true75, label %lor.lhs.false69, !dbg !7485

lor.lhs.false69:                                  ; preds = %cond.false63
  %28 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom70 = zext i32 %28 to i64, !dbg !7485
  %arrayidx71 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom70, !dbg !7485
  %29 = load i8, i8* %arrayidx71, align 1, !dbg !7485
  %conv72 = zext i8 %29 to i32, !dbg !7485
  %cmp73 = icmp eq i32 %conv72, 9, !dbg !7485
  br i1 %cmp73, label %cond.true75, label %cond.false76, !dbg !7485

cond.true75:                                      ; preds = %lor.lhs.false69, %cond.false63
  %30 = load i32, i32* %mode.addr, align 4, !dbg !7485
  br label %cond.end80, !dbg !7485

cond.false76:                                     ; preds = %lor.lhs.false69
  %31 = load i32, i32* %mode.addr, align 4, !dbg !7485
  %idxprom77 = zext i32 %31 to i64, !dbg !7485
  %arrayidx78 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom77, !dbg !7485
  %32 = load i8, i8* %arrayidx78, align 1, !dbg !7485
  %conv79 = zext i8 %32 to i32, !dbg !7485
  br label %cond.end80, !dbg !7485

cond.end80:                                       ; preds = %cond.false76, %cond.true75
  %cond81 = phi i32 [ %30, %cond.true75 ], [ %conv79, %cond.false76 ], !dbg !7485
  %sub82 = sub i32 %cond81, 38, !dbg !7485
  br label %cond.end83, !dbg !7485

cond.end83:                                       ; preds = %cond.end80, %cond.end61
  %cond84 = phi i32 [ %add, %cond.end61 ], [ %sub82, %cond.end80 ], !dbg !7485
  %idxprom85 = zext i32 %cond84 to i64, !dbg !7485
  %arrayidx86 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom85, !dbg !7485
  %33 = load %struct.real_format*, %struct.real_format** %arrayidx86, align 8, !dbg !7485
  %has_signed_zero = getelementptr inbounds %struct.real_format, %struct.real_format* %33, i32 0, i32 14, !dbg !7485
  %34 = load i8, i8* %has_signed_zero, align 1, !dbg !7485
  %conv87 = zext i8 %34 to i32, !dbg !7485
  %tobool = icmp ne i32 %conv87, 0, !dbg !7485
  br i1 %tobool, label %land.lhs.true88, label %land.lhs.true90, !dbg !7485

land.lhs.true88:                                  ; preds = %cond.end83
  %35 = load i32, i32* @flag_signed_zeros, align 4, !dbg !7485
  %tobool89 = icmp ne i32 %35, 0, !dbg !7485
  br i1 %tobool89, label %if.end, label %land.lhs.true90, !dbg !7488

land.lhs.true90:                                  ; preds = %land.lhs.true88, %cond.end83, %lor.lhs.false19
  %36 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !7489
  %37 = load i32, i32* %mode.addr, align 4, !dbg !7490
  %idxprom91 = sext i32 %37 to i64, !dbg !7490
  %arrayidx92 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom91, !dbg !7490
  %38 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx92, align 8, !dbg !7490
  %cmp93 = icmp eq %struct.rtx_def* %36, %38, !dbg !7491
  br i1 %cmp93, label %if.then, label %if.end, !dbg !7492

if.then:                                          ; preds = %land.lhs.true90
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7493
  store %struct.rtx_def* %39, %struct.rtx_def** %retval, align 8, !dbg !7494
  br label %return, !dbg !7494

if.end:                                           ; preds = %land.lhs.true90, %land.lhs.true88
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7495
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !7495
  %bf.load = load i32, i32* %41, align 8, !dbg !7495
  %bf.clear = and i32 %bf.load, 65535, !dbg !7495
  %cmp95 = icmp eq i32 %bf.clear, 51, !dbg !7497
  br i1 %cmp95, label %if.then97, label %if.else, !dbg !7498

if.then97:                                        ; preds = %if.end
  %42 = load i32, i32* %mode.addr, align 4, !dbg !7499
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7500
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7501
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !7501
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7501
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7501
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !7501
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7501
  %call = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %42, %struct.rtx_def* %43, %struct.rtx_def* %45), !dbg !7502
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !7503
  br label %return, !dbg !7503

if.else:                                          ; preds = %if.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7504
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !7504
  %bf.load99 = load i32, i32* %47, align 8, !dbg !7504
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !7504
  %cmp101 = icmp eq i32 %bf.clear100, 51, !dbg !7506
  br i1 %cmp101, label %if.then103, label %if.end109, !dbg !7507

if.then103:                                       ; preds = %if.else
  %48 = load i32, i32* %mode.addr, align 4, !dbg !7508
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7509
  %50 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7510
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !7510
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !7510
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !7510
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !7510
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !7510
  %call108 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %48, %struct.rtx_def* %49, %struct.rtx_def* %51), !dbg !7511
  store %struct.rtx_def* %call108, %struct.rtx_def** %retval, align 8, !dbg !7512
  br label %return, !dbg !7512

if.end109:                                        ; preds = %if.else
  br label %if.end110

if.end110:                                        ; preds = %if.end109
  %52 = load i32, i32* %mode.addr, align 4, !dbg !7513
  %idxprom111 = zext i32 %52 to i64, !dbg !7513
  %arrayidx112 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom111, !dbg !7513
  %53 = load i8, i8* %arrayidx112, align 1, !dbg !7513
  %conv113 = zext i8 %53 to i32, !dbg !7513
  %cmp114 = icmp eq i32 %conv113, 2, !dbg !7513
  br i1 %cmp114, label %land.lhs.true134, label %lor.lhs.false116, !dbg !7513

lor.lhs.false116:                                 ; preds = %if.end110
  %54 = load i32, i32* %mode.addr, align 4, !dbg !7513
  %idxprom117 = zext i32 %54 to i64, !dbg !7513
  %arrayidx118 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom117, !dbg !7513
  %55 = load i8, i8* %arrayidx118, align 1, !dbg !7513
  %conv119 = zext i8 %55 to i32, !dbg !7513
  %cmp120 = icmp eq i32 %conv119, 3, !dbg !7513
  br i1 %cmp120, label %land.lhs.true134, label %lor.lhs.false122, !dbg !7513

lor.lhs.false122:                                 ; preds = %lor.lhs.false116
  %56 = load i32, i32* %mode.addr, align 4, !dbg !7513
  %idxprom123 = zext i32 %56 to i64, !dbg !7513
  %arrayidx124 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom123, !dbg !7513
  %57 = load i8, i8* %arrayidx124, align 1, !dbg !7513
  %conv125 = zext i8 %57 to i32, !dbg !7513
  %cmp126 = icmp eq i32 %conv125, 10, !dbg !7513
  br i1 %cmp126, label %land.lhs.true134, label %lor.lhs.false128, !dbg !7513

lor.lhs.false128:                                 ; preds = %lor.lhs.false122
  %58 = load i32, i32* %mode.addr, align 4, !dbg !7513
  %idxprom129 = zext i32 %58 to i64, !dbg !7513
  %arrayidx130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom129, !dbg !7513
  %59 = load i8, i8* %arrayidx130, align 1, !dbg !7513
  %conv131 = zext i8 %59 to i32, !dbg !7513
  %cmp132 = icmp eq i32 %conv131, 12, !dbg !7513
  br i1 %cmp132, label %land.lhs.true134, label %if.end148, !dbg !7515

land.lhs.true134:                                 ; preds = %lor.lhs.false128, %lor.lhs.false122, %lor.lhs.false116, %if.end110
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7516
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !7516
  %bf.load135 = load i32, i32* %61, align 8, !dbg !7516
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !7516
  %cmp137 = icmp eq i32 %bf.clear136, 64, !dbg !7517
  br i1 %cmp137, label %land.lhs.true139, label %if.end148, !dbg !7518

land.lhs.true139:                                 ; preds = %land.lhs.true134
  %62 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !7519
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !7520
  %cmp140 = icmp eq %struct.rtx_def* %62, %63, !dbg !7521
  br i1 %cmp140, label %if.then142, label %if.end148, !dbg !7522

if.then142:                                       ; preds = %land.lhs.true139
  %64 = load i32, i32* %mode.addr, align 4, !dbg !7523
  %65 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7524
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !7524
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !7524
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 0, !dbg !7524
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !7524
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !7524
  %67 = load i32, i32* %mode.addr, align 4, !dbg !7525
  %call147 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %64, %struct.rtx_def* %66, i32 %67), !dbg !7526
  store %struct.rtx_def* %call147, %struct.rtx_def** %retval, align 8, !dbg !7527
  br label %return, !dbg !7527

if.end148:                                        ; preds = %land.lhs.true139, %land.lhs.true134, %lor.lhs.false128
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7528
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !7528
  %bf.load149 = load i32, i32* %69, align 8, !dbg !7528
  %bf.clear150 = and i32 %bf.load149, 65535, !dbg !7528
  %cmp151 = icmp eq i32 %bf.clear150, 35, !dbg !7530
  br i1 %cmp151, label %land.lhs.true163, label %lor.lhs.false153, !dbg !7531

lor.lhs.false153:                                 ; preds = %if.end148
  %70 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7532
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !7532
  %bf.load154 = load i32, i32* %71, align 8, !dbg !7532
  %bf.clear155 = and i32 %bf.load154, 65535, !dbg !7532
  %cmp156 = icmp eq i32 %bf.clear155, 45, !dbg !7533
  br i1 %cmp156, label %land.lhs.true163, label %lor.lhs.false158, !dbg !7534

lor.lhs.false158:                                 ; preds = %lor.lhs.false153
  %72 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7535
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !7535
  %bf.load159 = load i32, i32* %73, align 8, !dbg !7535
  %bf.clear160 = and i32 %bf.load159, 65535, !dbg !7535
  %cmp161 = icmp eq i32 %bf.clear160, 44, !dbg !7536
  br i1 %cmp161, label %land.lhs.true163, label %if.else172, !dbg !7537

land.lhs.true163:                                 ; preds = %lor.lhs.false158, %lor.lhs.false153, %if.end148
  %74 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7538
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !7538
  %bf.load164 = load i32, i32* %75, align 8, !dbg !7538
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !7538
  %cmp166 = icmp eq i32 %bf.clear165, 30, !dbg !7538
  br i1 %cmp166, label %if.then168, label %if.else172, !dbg !7539

if.then168:                                       ; preds = %land.lhs.true163
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7540
  %77 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7541
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !7541
  %hwint = bitcast %union.u* %u169 to [1 x i64]*, !dbg !7541
  %arrayidx170 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !7541
  %78 = load i64, i64* %arrayidx170, align 8, !dbg !7541
  %call171 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %76, i64 %78), !dbg !7542
  store %struct.rtx_def* %call171, %struct.rtx_def** %retval, align 8, !dbg !7543
  br label %return, !dbg !7543

if.else172:                                       ; preds = %land.lhs.true163, %lor.lhs.false158
  %79 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7544
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !7544
  %bf.load173 = load i32, i32* %80, align 8, !dbg !7544
  %bf.clear174 = and i32 %bf.load173, 65535, !dbg !7544
  %cmp175 = icmp eq i32 %bf.clear174, 35, !dbg !7546
  br i1 %cmp175, label %land.lhs.true187, label %lor.lhs.false177, !dbg !7547

lor.lhs.false177:                                 ; preds = %if.else172
  %81 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7548
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !7548
  %bf.load178 = load i32, i32* %82, align 8, !dbg !7548
  %bf.clear179 = and i32 %bf.load178, 65535, !dbg !7548
  %cmp180 = icmp eq i32 %bf.clear179, 45, !dbg !7549
  br i1 %cmp180, label %land.lhs.true187, label %lor.lhs.false182, !dbg !7550

lor.lhs.false182:                                 ; preds = %lor.lhs.false177
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7551
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !7551
  %bf.load183 = load i32, i32* %84, align 8, !dbg !7551
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !7551
  %cmp185 = icmp eq i32 %bf.clear184, 44, !dbg !7552
  br i1 %cmp185, label %land.lhs.true187, label %if.end197, !dbg !7553

land.lhs.true187:                                 ; preds = %lor.lhs.false182, %lor.lhs.false177, %if.else172
  %85 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7554
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !7554
  %bf.load188 = load i32, i32* %86, align 8, !dbg !7554
  %bf.clear189 = and i32 %bf.load188, 65535, !dbg !7554
  %cmp190 = icmp eq i32 %bf.clear189, 30, !dbg !7554
  br i1 %cmp190, label %if.then192, label %if.end197, !dbg !7555

if.then192:                                       ; preds = %land.lhs.true187
  %87 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7556
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7557
  %u193 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !7557
  %hwint194 = bitcast %union.u* %u193 to [1 x i64]*, !dbg !7557
  %arrayidx195 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint194, i64 0, i64 0, !dbg !7557
  %89 = load i64, i64* %arrayidx195, align 8, !dbg !7557
  %call196 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %87, i64 %89), !dbg !7558
  store %struct.rtx_def* %call196, %struct.rtx_def** %retval, align 8, !dbg !7559
  br label %return, !dbg !7559

if.end197:                                        ; preds = %land.lhs.true187, %lor.lhs.false182
  br label %if.end198

if.end198:                                        ; preds = %if.end197
  %90 = load i32, i32* %mode.addr, align 4, !dbg !7560
  %idxprom199 = zext i32 %90 to i64, !dbg !7560
  %arrayidx200 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom199, !dbg !7560
  %91 = load i8, i8* %arrayidx200, align 1, !dbg !7560
  %conv201 = zext i8 %91 to i32, !dbg !7560
  %cmp202 = icmp eq i32 %conv201, 2, !dbg !7560
  br i1 %cmp202, label %if.then210, label %lor.lhs.false204, !dbg !7560

lor.lhs.false204:                                 ; preds = %if.end198
  %92 = load i32, i32* %mode.addr, align 4, !dbg !7560
  %idxprom205 = zext i32 %92 to i64, !dbg !7560
  %arrayidx206 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom205, !dbg !7560
  %93 = load i8, i8* %arrayidx206, align 1, !dbg !7560
  %conv207 = zext i8 %93 to i32, !dbg !7560
  %cmp208 = icmp eq i32 %conv207, 3, !dbg !7560
  br i1 %cmp208, label %if.then210, label %if.end419, !dbg !7562

if.then210:                                       ; preds = %lor.lhs.false204, %if.end198
  call void @llvm.dbg.declare(metadata i64* %coeff0h, metadata !7563, metadata !DIExpression()), !dbg !7565
  store i64 0, i64* %coeff0h, align 8, !dbg !7565
  call void @llvm.dbg.declare(metadata i64* %coeff1h, metadata !7566, metadata !DIExpression()), !dbg !7567
  store i64 0, i64* %coeff1h, align 8, !dbg !7567
  call void @llvm.dbg.declare(metadata i64* %coeff0l, metadata !7568, metadata !DIExpression()), !dbg !7569
  store i64 1, i64* %coeff0l, align 8, !dbg !7569
  call void @llvm.dbg.declare(metadata i64* %coeff1l, metadata !7570, metadata !DIExpression()), !dbg !7571
  store i64 1, i64* %coeff1l, align 8, !dbg !7571
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs, metadata !7572, metadata !DIExpression()), !dbg !7573
  %94 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7574
  store %struct.rtx_def* %94, %struct.rtx_def** %lhs, align 8, !dbg !7573
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs, metadata !7575, metadata !DIExpression()), !dbg !7576
  %95 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7577
  store %struct.rtx_def* %95, %struct.rtx_def** %rhs, align 8, !dbg !7576
  %96 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7578
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !7578
  %bf.load211 = load i32, i32* %97, align 8, !dbg !7578
  %bf.clear212 = and i32 %bf.load211, 65535, !dbg !7578
  %cmp213 = icmp eq i32 %bf.clear212, 51, !dbg !7580
  br i1 %cmp213, label %if.then215, label %if.else220, !dbg !7581

if.then215:                                       ; preds = %if.then210
  store i64 -1, i64* %coeff0l, align 8, !dbg !7582
  store i64 -1, i64* %coeff0h, align 8, !dbg !7584
  %98 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7585
  %u216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !7585
  %fld217 = bitcast %union.u* %u216 to [1 x %union.rtunion_def]*, !dbg !7585
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i64 0, i64 0, !dbg !7585
  %rt_rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**, !dbg !7585
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx219, align 8, !dbg !7585
  store %struct.rtx_def* %99, %struct.rtx_def** %lhs, align 8, !dbg !7586
  br label %if.end305, !dbg !7587

if.else220:                                       ; preds = %if.then210
  %100 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7588
  %101 = bitcast %struct.rtx_def* %100 to i32*, !dbg !7588
  %bf.load221 = load i32, i32* %101, align 8, !dbg !7588
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !7588
  %cmp223 = icmp eq i32 %bf.clear222, 52, !dbg !7590
  br i1 %cmp223, label %land.lhs.true225, label %if.else257, !dbg !7591

land.lhs.true225:                                 ; preds = %if.else220
  %102 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7592
  %u226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !7592
  %fld227 = bitcast %union.u* %u226 to [1 x %union.rtunion_def]*, !dbg !7592
  %arrayidx228 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld227, i64 0, i64 1, !dbg !7592
  %rt_rtx229 = bitcast %union.rtunion_def* %arrayidx228 to %struct.rtx_def**, !dbg !7592
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx229, align 8, !dbg !7592
  %104 = bitcast %struct.rtx_def* %103 to i32*, !dbg !7592
  %bf.load230 = load i32, i32* %104, align 8, !dbg !7592
  %bf.clear231 = and i32 %bf.load230, 65535, !dbg !7592
  %cmp232 = icmp eq i32 %bf.clear231, 30, !dbg !7592
  br i1 %cmp232, label %if.then234, label %if.else257, !dbg !7593

if.then234:                                       ; preds = %land.lhs.true225
  %105 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7594
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !7594
  %fld236 = bitcast %union.u* %u235 to [1 x %union.rtunion_def]*, !dbg !7594
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i64 0, i64 1, !dbg !7594
  %rt_rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**, !dbg !7594
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx238, align 8, !dbg !7594
  %u239 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %106, i32 0, i32 1, !dbg !7594
  %hwint240 = bitcast %union.u* %u239 to [1 x i64]*, !dbg !7594
  %arrayidx241 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint240, i64 0, i64 0, !dbg !7594
  %107 = load i64, i64* %arrayidx241, align 8, !dbg !7594
  store i64 %107, i64* %coeff0l, align 8, !dbg !7596
  %108 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7597
  %u242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !7597
  %fld243 = bitcast %union.u* %u242 to [1 x %union.rtunion_def]*, !dbg !7597
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i64 0, i64 1, !dbg !7597
  %rt_rtx245 = bitcast %union.rtunion_def* %arrayidx244 to %struct.rtx_def**, !dbg !7597
  %109 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx245, align 8, !dbg !7597
  %u246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !7597
  %hwint247 = bitcast %union.u* %u246 to [1 x i64]*, !dbg !7597
  %arrayidx248 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint247, i64 0, i64 0, !dbg !7597
  %110 = load i64, i64* %arrayidx248, align 8, !dbg !7597
  %cmp249 = icmp slt i64 %110, 0, !dbg !7598
  %111 = zext i1 %cmp249 to i64, !dbg !7597
  %cond251 = select i1 %cmp249, i32 -1, i32 0, !dbg !7597
  %conv252 = sext i32 %cond251 to i64, !dbg !7597
  store i64 %conv252, i64* %coeff0h, align 8, !dbg !7599
  %112 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7600
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %112, i32 0, i32 1, !dbg !7600
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !7600
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !7600
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !7600
  %113 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !7600
  store %struct.rtx_def* %113, %struct.rtx_def** %lhs, align 8, !dbg !7601
  br label %if.end304, !dbg !7602

if.else257:                                       ; preds = %land.lhs.true225, %if.else220
  %114 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7603
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !7603
  %bf.load258 = load i32, i32* %115, align 8, !dbg !7603
  %bf.clear259 = and i32 %bf.load258, 65535, !dbg !7603
  %cmp260 = icmp eq i32 %bf.clear259, 65, !dbg !7605
  br i1 %cmp260, label %land.lhs.true262, label %if.end303, !dbg !7606

land.lhs.true262:                                 ; preds = %if.else257
  %116 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7607
  %u263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !7607
  %fld264 = bitcast %union.u* %u263 to [1 x %union.rtunion_def]*, !dbg !7607
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i64 0, i64 1, !dbg !7607
  %rt_rtx266 = bitcast %union.rtunion_def* %arrayidx265 to %struct.rtx_def**, !dbg !7607
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx266, align 8, !dbg !7607
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !7607
  %bf.load267 = load i32, i32* %118, align 8, !dbg !7607
  %bf.clear268 = and i32 %bf.load267, 65535, !dbg !7607
  %cmp269 = icmp eq i32 %bf.clear268, 30, !dbg !7607
  br i1 %cmp269, label %land.lhs.true271, label %if.end303, !dbg !7608

land.lhs.true271:                                 ; preds = %land.lhs.true262
  %119 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7609
  %u272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %119, i32 0, i32 1, !dbg !7609
  %fld273 = bitcast %union.u* %u272 to [1 x %union.rtunion_def]*, !dbg !7609
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i64 0, i64 1, !dbg !7609
  %rt_rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**, !dbg !7609
  %120 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !7609
  %u276 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !7609
  %hwint277 = bitcast %union.u* %u276 to [1 x i64]*, !dbg !7609
  %arrayidx278 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint277, i64 0, i64 0, !dbg !7609
  %121 = load i64, i64* %arrayidx278, align 8, !dbg !7609
  %cmp279 = icmp sge i64 %121, 0, !dbg !7610
  br i1 %cmp279, label %land.lhs.true281, label %if.end303, !dbg !7611

land.lhs.true281:                                 ; preds = %land.lhs.true271
  %122 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7612
  %u282 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !7612
  %fld283 = bitcast %union.u* %u282 to [1 x %union.rtunion_def]*, !dbg !7612
  %arrayidx284 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld283, i64 0, i64 1, !dbg !7612
  %rt_rtx285 = bitcast %union.rtunion_def* %arrayidx284 to %struct.rtx_def**, !dbg !7612
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx285, align 8, !dbg !7612
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !7612
  %hwint287 = bitcast %union.u* %u286 to [1 x i64]*, !dbg !7612
  %arrayidx288 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint287, i64 0, i64 0, !dbg !7612
  %124 = load i64, i64* %arrayidx288, align 8, !dbg !7612
  %cmp289 = icmp slt i64 %124, 64, !dbg !7613
  br i1 %cmp289, label %if.then291, label %if.end303, !dbg !7614

if.then291:                                       ; preds = %land.lhs.true281
  %125 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7615
  %u292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1, !dbg !7615
  %fld293 = bitcast %union.u* %u292 to [1 x %union.rtunion_def]*, !dbg !7615
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i64 0, i64 1, !dbg !7615
  %rt_rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**, !dbg !7615
  %126 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx295, align 8, !dbg !7615
  %u296 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !7615
  %hwint297 = bitcast %union.u* %u296 to [1 x i64]*, !dbg !7615
  %arrayidx298 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint297, i64 0, i64 0, !dbg !7615
  %127 = load i64, i64* %arrayidx298, align 8, !dbg !7615
  %shl = shl i64 1, %127, !dbg !7617
  store i64 %shl, i64* %coeff0l, align 8, !dbg !7618
  store i64 0, i64* %coeff0h, align 8, !dbg !7619
  %128 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7620
  %u299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !7620
  %fld300 = bitcast %union.u* %u299 to [1 x %union.rtunion_def]*, !dbg !7620
  %arrayidx301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld300, i64 0, i64 0, !dbg !7620
  %rt_rtx302 = bitcast %union.rtunion_def* %arrayidx301 to %struct.rtx_def**, !dbg !7620
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx302, align 8, !dbg !7620
  store %struct.rtx_def* %129, %struct.rtx_def** %lhs, align 8, !dbg !7621
  br label %if.end303, !dbg !7622

if.end303:                                        ; preds = %if.then291, %land.lhs.true281, %land.lhs.true271, %land.lhs.true262, %if.else257
  br label %if.end304

if.end304:                                        ; preds = %if.end303, %if.then234
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then215
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7623
  %131 = bitcast %struct.rtx_def* %130 to i32*, !dbg !7623
  %bf.load306 = load i32, i32* %131, align 8, !dbg !7623
  %bf.clear307 = and i32 %bf.load306, 65535, !dbg !7623
  %cmp308 = icmp eq i32 %bf.clear307, 51, !dbg !7625
  br i1 %cmp308, label %if.then310, label %if.else315, !dbg !7626

if.then310:                                       ; preds = %if.end305
  store i64 -1, i64* %coeff1l, align 8, !dbg !7627
  store i64 -1, i64* %coeff1h, align 8, !dbg !7629
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7630
  %u311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !7630
  %fld312 = bitcast %union.u* %u311 to [1 x %union.rtunion_def]*, !dbg !7630
  %arrayidx313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld312, i64 0, i64 0, !dbg !7630
  %rt_rtx314 = bitcast %union.rtunion_def* %arrayidx313 to %struct.rtx_def**, !dbg !7630
  %133 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx314, align 8, !dbg !7630
  store %struct.rtx_def* %133, %struct.rtx_def** %rhs, align 8, !dbg !7631
  br label %if.end401, !dbg !7632

if.else315:                                       ; preds = %if.end305
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7633
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !7633
  %bf.load316 = load i32, i32* %135, align 8, !dbg !7633
  %bf.clear317 = and i32 %bf.load316, 65535, !dbg !7633
  %cmp318 = icmp eq i32 %bf.clear317, 52, !dbg !7635
  br i1 %cmp318, label %land.lhs.true320, label %if.else352, !dbg !7636

land.lhs.true320:                                 ; preds = %if.else315
  %136 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7637
  %u321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !7637
  %fld322 = bitcast %union.u* %u321 to [1 x %union.rtunion_def]*, !dbg !7637
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i64 0, i64 1, !dbg !7637
  %rt_rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**, !dbg !7637
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx324, align 8, !dbg !7637
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !7637
  %bf.load325 = load i32, i32* %138, align 8, !dbg !7637
  %bf.clear326 = and i32 %bf.load325, 65535, !dbg !7637
  %cmp327 = icmp eq i32 %bf.clear326, 30, !dbg !7637
  br i1 %cmp327, label %if.then329, label %if.else352, !dbg !7638

if.then329:                                       ; preds = %land.lhs.true320
  %139 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7639
  %u330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !7639
  %fld331 = bitcast %union.u* %u330 to [1 x %union.rtunion_def]*, !dbg !7639
  %arrayidx332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld331, i64 0, i64 1, !dbg !7639
  %rt_rtx333 = bitcast %union.rtunion_def* %arrayidx332 to %struct.rtx_def**, !dbg !7639
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx333, align 8, !dbg !7639
  %u334 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %140, i32 0, i32 1, !dbg !7639
  %hwint335 = bitcast %union.u* %u334 to [1 x i64]*, !dbg !7639
  %arrayidx336 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint335, i64 0, i64 0, !dbg !7639
  %141 = load i64, i64* %arrayidx336, align 8, !dbg !7639
  store i64 %141, i64* %coeff1l, align 8, !dbg !7641
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7642
  %u337 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1, !dbg !7642
  %fld338 = bitcast %union.u* %u337 to [1 x %union.rtunion_def]*, !dbg !7642
  %arrayidx339 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld338, i64 0, i64 1, !dbg !7642
  %rt_rtx340 = bitcast %union.rtunion_def* %arrayidx339 to %struct.rtx_def**, !dbg !7642
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx340, align 8, !dbg !7642
  %u341 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !7642
  %hwint342 = bitcast %union.u* %u341 to [1 x i64]*, !dbg !7642
  %arrayidx343 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint342, i64 0, i64 0, !dbg !7642
  %144 = load i64, i64* %arrayidx343, align 8, !dbg !7642
  %cmp344 = icmp slt i64 %144, 0, !dbg !7643
  %145 = zext i1 %cmp344 to i64, !dbg !7642
  %cond346 = select i1 %cmp344, i32 -1, i32 0, !dbg !7642
  %conv347 = sext i32 %cond346 to i64, !dbg !7642
  store i64 %conv347, i64* %coeff1h, align 8, !dbg !7644
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7645
  %u348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !7645
  %fld349 = bitcast %union.u* %u348 to [1 x %union.rtunion_def]*, !dbg !7645
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i64 0, i64 0, !dbg !7645
  %rt_rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**, !dbg !7645
  %147 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx351, align 8, !dbg !7645
  store %struct.rtx_def* %147, %struct.rtx_def** %rhs, align 8, !dbg !7646
  br label %if.end400, !dbg !7647

if.else352:                                       ; preds = %land.lhs.true320, %if.else315
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7648
  %149 = bitcast %struct.rtx_def* %148 to i32*, !dbg !7648
  %bf.load353 = load i32, i32* %149, align 8, !dbg !7648
  %bf.clear354 = and i32 %bf.load353, 65535, !dbg !7648
  %cmp355 = icmp eq i32 %bf.clear354, 65, !dbg !7650
  br i1 %cmp355, label %land.lhs.true357, label %if.end399, !dbg !7651

land.lhs.true357:                                 ; preds = %if.else352
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7652
  %u358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %150, i32 0, i32 1, !dbg !7652
  %fld359 = bitcast %union.u* %u358 to [1 x %union.rtunion_def]*, !dbg !7652
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i64 0, i64 1, !dbg !7652
  %rt_rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**, !dbg !7652
  %151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !7652
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !7652
  %bf.load362 = load i32, i32* %152, align 8, !dbg !7652
  %bf.clear363 = and i32 %bf.load362, 65535, !dbg !7652
  %cmp364 = icmp eq i32 %bf.clear363, 30, !dbg !7652
  br i1 %cmp364, label %land.lhs.true366, label %if.end399, !dbg !7653

land.lhs.true366:                                 ; preds = %land.lhs.true357
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7654
  %u367 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !7654
  %fld368 = bitcast %union.u* %u367 to [1 x %union.rtunion_def]*, !dbg !7654
  %arrayidx369 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld368, i64 0, i64 1, !dbg !7654
  %rt_rtx370 = bitcast %union.rtunion_def* %arrayidx369 to %struct.rtx_def**, !dbg !7654
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx370, align 8, !dbg !7654
  %u371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1, !dbg !7654
  %hwint372 = bitcast %union.u* %u371 to [1 x i64]*, !dbg !7654
  %arrayidx373 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint372, i64 0, i64 0, !dbg !7654
  %155 = load i64, i64* %arrayidx373, align 8, !dbg !7654
  %cmp374 = icmp sge i64 %155, 0, !dbg !7655
  br i1 %cmp374, label %land.lhs.true376, label %if.end399, !dbg !7656

land.lhs.true376:                                 ; preds = %land.lhs.true366
  %156 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7657
  %u377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !7657
  %fld378 = bitcast %union.u* %u377 to [1 x %union.rtunion_def]*, !dbg !7657
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i64 0, i64 1, !dbg !7657
  %rt_rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**, !dbg !7657
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx380, align 8, !dbg !7657
  %u381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %157, i32 0, i32 1, !dbg !7657
  %hwint382 = bitcast %union.u* %u381 to [1 x i64]*, !dbg !7657
  %arrayidx383 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint382, i64 0, i64 0, !dbg !7657
  %158 = load i64, i64* %arrayidx383, align 8, !dbg !7657
  %cmp384 = icmp slt i64 %158, 64, !dbg !7658
  br i1 %cmp384, label %if.then386, label %if.end399, !dbg !7659

if.then386:                                       ; preds = %land.lhs.true376
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7660
  %u387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !7660
  %fld388 = bitcast %union.u* %u387 to [1 x %union.rtunion_def]*, !dbg !7660
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i64 0, i64 1, !dbg !7660
  %rt_rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**, !dbg !7660
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx390, align 8, !dbg !7660
  %u391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %160, i32 0, i32 1, !dbg !7660
  %hwint392 = bitcast %union.u* %u391 to [1 x i64]*, !dbg !7660
  %arrayidx393 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint392, i64 0, i64 0, !dbg !7660
  %161 = load i64, i64* %arrayidx393, align 8, !dbg !7660
  %shl394 = shl i64 1, %161, !dbg !7662
  store i64 %shl394, i64* %coeff1l, align 8, !dbg !7663
  store i64 0, i64* %coeff1h, align 8, !dbg !7664
  %162 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7665
  %u395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %162, i32 0, i32 1, !dbg !7665
  %fld396 = bitcast %union.u* %u395 to [1 x %union.rtunion_def]*, !dbg !7665
  %arrayidx397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld396, i64 0, i64 0, !dbg !7665
  %rt_rtx398 = bitcast %union.rtunion_def* %arrayidx397 to %struct.rtx_def**, !dbg !7665
  %163 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx398, align 8, !dbg !7665
  store %struct.rtx_def* %163, %struct.rtx_def** %rhs, align 8, !dbg !7666
  br label %if.end399, !dbg !7667

if.end399:                                        ; preds = %if.then386, %land.lhs.true376, %land.lhs.true366, %land.lhs.true357, %if.else352
  br label %if.end400

if.end400:                                        ; preds = %if.end399, %if.then329
  br label %if.end401

if.end401:                                        ; preds = %if.end400, %if.then310
  %164 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7668
  %165 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !7670
  %call402 = call i32 @rtx_equal_p(%struct.rtx_def* %164, %struct.rtx_def* %165), !dbg !7671
  %tobool403 = icmp ne i32 %call402, 0, !dbg !7671
  br i1 %tobool403, label %if.then404, label %if.end418, !dbg !7672

if.then404:                                       ; preds = %if.end401
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig, metadata !7673, metadata !DIExpression()), !dbg !7675
  %166 = load i32, i32* %mode.addr, align 4, !dbg !7676
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7676
  %168 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7676
  %call405 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %166, %struct.rtx_def* %167, %struct.rtx_def* %168), !dbg !7676
  store %struct.rtx_def* %call405, %struct.rtx_def** %orig, align 8, !dbg !7675
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %coeff, metadata !7677, metadata !DIExpression()), !dbg !7678
  call void @llvm.dbg.declare(metadata i64* %l, metadata !7679, metadata !DIExpression()), !dbg !7680
  call void @llvm.dbg.declare(metadata i64* %h, metadata !7681, metadata !DIExpression()), !dbg !7682
  call void @llvm.dbg.declare(metadata i8* %speed, metadata !7683, metadata !DIExpression()), !dbg !7684
  %169 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7685
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %169, i64 0, !dbg !7685
  %call406 = call zeroext i8 @optimize_function_for_speed_p(%struct.function* %add.ptr), !dbg !7686
  store i8 %call406, i8* %speed, align 1, !dbg !7684
  %170 = load i64, i64* %coeff0l, align 8, !dbg !7687
  %171 = load i64, i64* %coeff0h, align 8, !dbg !7687
  %172 = load i64, i64* %coeff1l, align 8, !dbg !7687
  %173 = load i64, i64* %coeff1h, align 8, !dbg !7687
  %call407 = call i32 @add_double_with_sign(i64 %170, i64 %171, i64 %172, i64 %173, i64* %l, i64* %h, i8 zeroext 0), !dbg !7687
  %174 = load i64, i64* %l, align 8, !dbg !7688
  %175 = load i64, i64* %h, align 8, !dbg !7689
  %176 = load i32, i32* %mode.addr, align 4, !dbg !7690
  %call408 = call %struct.rtx_def* @immed_double_const(i64 %174, i64 %175, i32 %176), !dbg !7691
  store %struct.rtx_def* %call408, %struct.rtx_def** %coeff, align 8, !dbg !7692
  %177 = load i32, i32* %mode.addr, align 4, !dbg !7693
  %178 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !7694
  %179 = load %struct.rtx_def*, %struct.rtx_def** %coeff, align 8, !dbg !7695
  %call409 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %177, %struct.rtx_def* %178, %struct.rtx_def* %179), !dbg !7696
  store %struct.rtx_def* %call409, %struct.rtx_def** %tem, align 8, !dbg !7697
  %180 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !7698
  %181 = load i8, i8* %speed, align 1, !dbg !7699
  %call410 = call i32 @rtx_cost(%struct.rtx_def* %180, i32 23, i8 zeroext %181), !dbg !7700
  %182 = load %struct.rtx_def*, %struct.rtx_def** %orig, align 8, !dbg !7701
  %183 = load i8, i8* %speed, align 1, !dbg !7702
  %call411 = call i32 @rtx_cost(%struct.rtx_def* %182, i32 23, i8 zeroext %183), !dbg !7703
  %cmp412 = icmp sle i32 %call410, %call411, !dbg !7704
  br i1 %cmp412, label %cond.true414, label %cond.false415, !dbg !7700

cond.true414:                                     ; preds = %if.then404
  %184 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !7705
  br label %cond.end416, !dbg !7700

cond.false415:                                    ; preds = %if.then404
  br label %cond.end416, !dbg !7700

cond.end416:                                      ; preds = %cond.false415, %cond.true414
  %cond417 = phi %struct.rtx_def* [ %184, %cond.true414 ], [ null, %cond.false415 ], !dbg !7700
  store %struct.rtx_def* %cond417, %struct.rtx_def** %retval, align 8, !dbg !7706
  br label %return, !dbg !7706

if.end418:                                        ; preds = %if.end401
  br label %if.end419, !dbg !7707

if.end419:                                        ; preds = %if.end418, %lor.lhs.false204
  %185 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7708
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !7708
  %bf.load420 = load i32, i32* %186, align 8, !dbg !7708
  %bf.clear421 = and i32 %bf.load420, 65535, !dbg !7708
  %cmp422 = icmp eq i32 %bf.clear421, 30, !dbg !7708
  br i1 %cmp422, label %land.lhs.true429, label %lor.lhs.false424, !dbg !7710

lor.lhs.false424:                                 ; preds = %if.end419
  %187 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7711
  %188 = bitcast %struct.rtx_def* %187 to i32*, !dbg !7711
  %bf.load425 = load i32, i32* %188, align 8, !dbg !7711
  %bf.clear426 = and i32 %bf.load425, 65535, !dbg !7711
  %cmp427 = icmp eq i32 %bf.clear426, 32, !dbg !7712
  br i1 %cmp427, label %land.lhs.true429, label %if.end467, !dbg !7713

land.lhs.true429:                                 ; preds = %lor.lhs.false424, %if.end419
  %189 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7714
  %190 = bitcast %struct.rtx_def* %189 to i32*, !dbg !7714
  %bf.load430 = load i32, i32* %190, align 8, !dbg !7714
  %bf.clear431 = and i32 %bf.load430, 65535, !dbg !7714
  %cmp432 = icmp eq i32 %bf.clear431, 63, !dbg !7715
  br i1 %cmp432, label %land.lhs.true434, label %if.end467, !dbg !7716

land.lhs.true434:                                 ; preds = %land.lhs.true429
  %191 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7717
  %u435 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %191, i32 0, i32 1, !dbg !7717
  %fld436 = bitcast %union.u* %u435 to [1 x %union.rtunion_def]*, !dbg !7717
  %arrayidx437 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld436, i64 0, i64 1, !dbg !7717
  %rt_rtx438 = bitcast %union.rtunion_def* %arrayidx437 to %struct.rtx_def**, !dbg !7717
  %192 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx438, align 8, !dbg !7717
  %193 = bitcast %struct.rtx_def* %192 to i32*, !dbg !7717
  %bf.load439 = load i32, i32* %193, align 8, !dbg !7717
  %bf.clear440 = and i32 %bf.load439, 65535, !dbg !7717
  %cmp441 = icmp eq i32 %bf.clear440, 30, !dbg !7717
  br i1 %cmp441, label %land.lhs.true452, label %lor.lhs.false443, !dbg !7718

lor.lhs.false443:                                 ; preds = %land.lhs.true434
  %194 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7719
  %u444 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !7719
  %fld445 = bitcast %union.u* %u444 to [1 x %union.rtunion_def]*, !dbg !7719
  %arrayidx446 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld445, i64 0, i64 1, !dbg !7719
  %rt_rtx447 = bitcast %union.rtunion_def* %arrayidx446 to %struct.rtx_def**, !dbg !7719
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx447, align 8, !dbg !7719
  %196 = bitcast %struct.rtx_def* %195 to i32*, !dbg !7719
  %bf.load448 = load i32, i32* %196, align 8, !dbg !7719
  %bf.clear449 = and i32 %bf.load448, 65535, !dbg !7719
  %cmp450 = icmp eq i32 %bf.clear449, 32, !dbg !7720
  br i1 %cmp450, label %land.lhs.true452, label %if.end467, !dbg !7721

land.lhs.true452:                                 ; preds = %lor.lhs.false443, %land.lhs.true434
  %197 = load i32, i32* %mode.addr, align 4, !dbg !7722
  %198 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7723
  %call453 = call zeroext i8 @mode_signbit_p(i32 %197, %struct.rtx_def* %198), !dbg !7724
  %conv454 = zext i8 %call453 to i32, !dbg !7724
  %tobool455 = icmp ne i32 %conv454, 0, !dbg !7724
  br i1 %tobool455, label %if.then456, label %if.end467, !dbg !7725

if.then456:                                       ; preds = %land.lhs.true452
  %199 = load i32, i32* %mode.addr, align 4, !dbg !7726
  %200 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7727
  %u457 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1, !dbg !7727
  %fld458 = bitcast %union.u* %u457 to [1 x %union.rtunion_def]*, !dbg !7727
  %arrayidx459 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld458, i64 0, i64 0, !dbg !7727
  %rt_rtx460 = bitcast %union.rtunion_def* %arrayidx459 to %struct.rtx_def**, !dbg !7727
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx460, align 8, !dbg !7727
  %202 = load i32, i32* %mode.addr, align 4, !dbg !7728
  %203 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7729
  %204 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7730
  %u461 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !7730
  %fld462 = bitcast %union.u* %u461 to [1 x %union.rtunion_def]*, !dbg !7730
  %arrayidx463 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld462, i64 0, i64 1, !dbg !7730
  %rt_rtx464 = bitcast %union.rtunion_def* %arrayidx463 to %struct.rtx_def**, !dbg !7730
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx464, align 8, !dbg !7730
  %call465 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %202, %struct.rtx_def* %203, %struct.rtx_def* %205), !dbg !7731
  %call466 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %199, %struct.rtx_def* %201, %struct.rtx_def* %call465), !dbg !7732
  store %struct.rtx_def* %call466, %struct.rtx_def** %retval, align 8, !dbg !7733
  br label %return, !dbg !7733

if.end467:                                        ; preds = %land.lhs.true452, %lor.lhs.false443, %land.lhs.true429, %lor.lhs.false424
  %206 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom468 = zext i32 %206 to i64, !dbg !7734
  %arrayidx469 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom468, !dbg !7734
  %207 = load i8, i8* %arrayidx469, align 1, !dbg !7734
  %conv470 = zext i8 %207 to i32, !dbg !7734
  %cmp471 = icmp eq i32 %conv470, 8, !dbg !7734
  br i1 %cmp471, label %land.lhs.true491, label %lor.lhs.false473, !dbg !7734

lor.lhs.false473:                                 ; preds = %if.end467
  %208 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom474 = zext i32 %208 to i64, !dbg !7734
  %arrayidx475 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom474, !dbg !7734
  %209 = load i8, i8* %arrayidx475, align 1, !dbg !7734
  %conv476 = zext i8 %209 to i32, !dbg !7734
  %cmp477 = icmp eq i32 %conv476, 9, !dbg !7734
  br i1 %cmp477, label %land.lhs.true491, label %lor.lhs.false479, !dbg !7734

lor.lhs.false479:                                 ; preds = %lor.lhs.false473
  %210 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom480 = zext i32 %210 to i64, !dbg !7734
  %arrayidx481 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom480, !dbg !7734
  %211 = load i8, i8* %arrayidx481, align 1, !dbg !7734
  %conv482 = zext i8 %211 to i32, !dbg !7734
  %cmp483 = icmp eq i32 %conv482, 11, !dbg !7734
  br i1 %cmp483, label %land.lhs.true491, label %lor.lhs.false485, !dbg !7734

lor.lhs.false485:                                 ; preds = %lor.lhs.false479
  %212 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom486 = zext i32 %212 to i64, !dbg !7734
  %arrayidx487 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom486, !dbg !7734
  %213 = load i8, i8* %arrayidx487, align 1, !dbg !7734
  %conv488 = zext i8 %213 to i32, !dbg !7734
  %cmp489 = icmp eq i32 %conv488, 17, !dbg !7734
  br i1 %cmp489, label %land.lhs.true491, label %land.lhs.true564, !dbg !7734

land.lhs.true491:                                 ; preds = %lor.lhs.false485, %lor.lhs.false479, %lor.lhs.false473, %if.end467
  %214 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom492 = zext i32 %214 to i64, !dbg !7734
  %arrayidx493 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom492, !dbg !7734
  %215 = load i8, i8* %arrayidx493, align 1, !dbg !7734
  %conv494 = zext i8 %215 to i32, !dbg !7734
  %cmp495 = icmp eq i32 %conv494, 8, !dbg !7734
  br i1 %cmp495, label %cond.true503, label %lor.lhs.false497, !dbg !7734

lor.lhs.false497:                                 ; preds = %land.lhs.true491
  %216 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom498 = zext i32 %216 to i64, !dbg !7734
  %arrayidx499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom498, !dbg !7734
  %217 = load i8, i8* %arrayidx499, align 1, !dbg !7734
  %conv500 = zext i8 %217 to i32, !dbg !7734
  %cmp501 = icmp eq i32 %conv500, 9, !dbg !7734
  br i1 %cmp501, label %cond.true503, label %cond.false504, !dbg !7734

cond.true503:                                     ; preds = %lor.lhs.false497, %land.lhs.true491
  %218 = load i32, i32* %mode.addr, align 4, !dbg !7734
  br label %cond.end508, !dbg !7734

cond.false504:                                    ; preds = %lor.lhs.false497
  %219 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom505 = zext i32 %219 to i64, !dbg !7734
  %arrayidx506 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom505, !dbg !7734
  %220 = load i8, i8* %arrayidx506, align 1, !dbg !7734
  %conv507 = zext i8 %220 to i32, !dbg !7734
  br label %cond.end508, !dbg !7734

cond.end508:                                      ; preds = %cond.false504, %cond.true503
  %cond509 = phi i32 [ %218, %cond.true503 ], [ %conv507, %cond.false504 ], !dbg !7734
  %idxprom510 = zext i32 %cond509 to i64, !dbg !7734
  %arrayidx511 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom510, !dbg !7734
  %221 = load i8, i8* %arrayidx511, align 1, !dbg !7734
  %conv512 = zext i8 %221 to i32, !dbg !7734
  %cmp513 = icmp eq i32 %conv512, 9, !dbg !7734
  br i1 %cmp513, label %cond.true515, label %cond.false536, !dbg !7734

cond.true515:                                     ; preds = %cond.end508
  %222 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom516 = zext i32 %222 to i64, !dbg !7734
  %arrayidx517 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom516, !dbg !7734
  %223 = load i8, i8* %arrayidx517, align 1, !dbg !7734
  %conv518 = zext i8 %223 to i32, !dbg !7734
  %cmp519 = icmp eq i32 %conv518, 8, !dbg !7734
  br i1 %cmp519, label %cond.true527, label %lor.lhs.false521, !dbg !7734

lor.lhs.false521:                                 ; preds = %cond.true515
  %224 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom522 = zext i32 %224 to i64, !dbg !7734
  %arrayidx523 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom522, !dbg !7734
  %225 = load i8, i8* %arrayidx523, align 1, !dbg !7734
  %conv524 = zext i8 %225 to i32, !dbg !7734
  %cmp525 = icmp eq i32 %conv524, 9, !dbg !7734
  br i1 %cmp525, label %cond.true527, label %cond.false528, !dbg !7734

cond.true527:                                     ; preds = %lor.lhs.false521, %cond.true515
  %226 = load i32, i32* %mode.addr, align 4, !dbg !7734
  br label %cond.end532, !dbg !7734

cond.false528:                                    ; preds = %lor.lhs.false521
  %227 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom529 = zext i32 %227 to i64, !dbg !7734
  %arrayidx530 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom529, !dbg !7734
  %228 = load i8, i8* %arrayidx530, align 1, !dbg !7734
  %conv531 = zext i8 %228 to i32, !dbg !7734
  br label %cond.end532, !dbg !7734

cond.end532:                                      ; preds = %cond.false528, %cond.true527
  %cond533 = phi i32 [ %226, %cond.true527 ], [ %conv531, %cond.false528 ], !dbg !7734
  %sub534 = sub i32 %cond533, 42, !dbg !7734
  %add535 = add i32 %sub534, 4, !dbg !7734
  br label %cond.end556, !dbg !7734

cond.false536:                                    ; preds = %cond.end508
  %229 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom537 = zext i32 %229 to i64, !dbg !7734
  %arrayidx538 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom537, !dbg !7734
  %230 = load i8, i8* %arrayidx538, align 1, !dbg !7734
  %conv539 = zext i8 %230 to i32, !dbg !7734
  %cmp540 = icmp eq i32 %conv539, 8, !dbg !7734
  br i1 %cmp540, label %cond.true548, label %lor.lhs.false542, !dbg !7734

lor.lhs.false542:                                 ; preds = %cond.false536
  %231 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom543 = zext i32 %231 to i64, !dbg !7734
  %arrayidx544 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom543, !dbg !7734
  %232 = load i8, i8* %arrayidx544, align 1, !dbg !7734
  %conv545 = zext i8 %232 to i32, !dbg !7734
  %cmp546 = icmp eq i32 %conv545, 9, !dbg !7734
  br i1 %cmp546, label %cond.true548, label %cond.false549, !dbg !7734

cond.true548:                                     ; preds = %lor.lhs.false542, %cond.false536
  %233 = load i32, i32* %mode.addr, align 4, !dbg !7734
  br label %cond.end553, !dbg !7734

cond.false549:                                    ; preds = %lor.lhs.false542
  %234 = load i32, i32* %mode.addr, align 4, !dbg !7734
  %idxprom550 = zext i32 %234 to i64, !dbg !7734
  %arrayidx551 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom550, !dbg !7734
  %235 = load i8, i8* %arrayidx551, align 1, !dbg !7734
  %conv552 = zext i8 %235 to i32, !dbg !7734
  br label %cond.end553, !dbg !7734

cond.end553:                                      ; preds = %cond.false549, %cond.true548
  %cond554 = phi i32 [ %233, %cond.true548 ], [ %conv552, %cond.false549 ], !dbg !7734
  %sub555 = sub i32 %cond554, 38, !dbg !7734
  br label %cond.end556, !dbg !7734

cond.end556:                                      ; preds = %cond.end553, %cond.end532
  %cond557 = phi i32 [ %add535, %cond.end532 ], [ %sub555, %cond.end553 ], !dbg !7734
  %idxprom558 = zext i32 %cond557 to i64, !dbg !7734
  %arrayidx559 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom558, !dbg !7734
  %236 = load %struct.real_format*, %struct.real_format** %arrayidx559, align 8, !dbg !7734
  %has_sign_dependent_rounding = getelementptr inbounds %struct.real_format, %struct.real_format* %236, i32 0, i32 10, !dbg !7734
  %237 = load i8, i8* %has_sign_dependent_rounding, align 1, !dbg !7734
  %conv560 = zext i8 %237 to i32, !dbg !7734
  %tobool561 = icmp ne i32 %conv560, 0, !dbg !7734
  br i1 %tobool561, label %land.lhs.true562, label %land.lhs.true564, !dbg !7734

land.lhs.true562:                                 ; preds = %cond.end556
  %238 = load i32, i32* @flag_rounding_math, align 4, !dbg !7734
  %tobool563 = icmp ne i32 %238, 0, !dbg !7734
  br i1 %tobool563, label %if.end593, label %land.lhs.true564, !dbg !7736

land.lhs.true564:                                 ; preds = %land.lhs.true562, %cond.end556, %lor.lhs.false485
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7737
  %240 = bitcast %struct.rtx_def* %239 to i32*, !dbg !7737
  %bf.load565 = load i32, i32* %240, align 8, !dbg !7737
  %bf.clear566 = and i32 %bf.load565, 65535, !dbg !7737
  %cmp567 = icmp eq i32 %bf.clear566, 52, !dbg !7738
  br i1 %cmp567, label %land.lhs.true569, label %if.end593, !dbg !7739

land.lhs.true569:                                 ; preds = %land.lhs.true564
  %241 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7740
  %u570 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %241, i32 0, i32 1, !dbg !7740
  %fld571 = bitcast %union.u* %u570 to [1 x %union.rtunion_def]*, !dbg !7740
  %arrayidx572 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld571, i64 0, i64 0, !dbg !7740
  %rt_rtx573 = bitcast %union.rtunion_def* %arrayidx572 to %struct.rtx_def**, !dbg !7740
  %242 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx573, align 8, !dbg !7740
  %243 = bitcast %struct.rtx_def* %242 to i32*, !dbg !7740
  %bf.load574 = load i32, i32* %243, align 8, !dbg !7740
  %bf.clear575 = and i32 %bf.load574, 65535, !dbg !7740
  %cmp576 = icmp eq i32 %bf.clear575, 51, !dbg !7741
  br i1 %cmp576, label %if.then578, label %if.end593, !dbg !7742

if.then578:                                       ; preds = %land.lhs.true569
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in1, metadata !7743, metadata !DIExpression()), !dbg !7745
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in2, metadata !7746, metadata !DIExpression()), !dbg !7747
  %244 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7748
  %u579 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %244, i32 0, i32 1, !dbg !7748
  %fld580 = bitcast %union.u* %u579 to [1 x %union.rtunion_def]*, !dbg !7748
  %arrayidx581 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld580, i64 0, i64 0, !dbg !7748
  %rt_rtx582 = bitcast %union.rtunion_def* %arrayidx581 to %struct.rtx_def**, !dbg !7748
  %245 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx582, align 8, !dbg !7748
  %u583 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %245, i32 0, i32 1, !dbg !7748
  %fld584 = bitcast %union.u* %u583 to [1 x %union.rtunion_def]*, !dbg !7748
  %arrayidx585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld584, i64 0, i64 0, !dbg !7748
  %rt_rtx586 = bitcast %union.rtunion_def* %arrayidx585 to %struct.rtx_def**, !dbg !7748
  %246 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx586, align 8, !dbg !7748
  store %struct.rtx_def* %246, %struct.rtx_def** %in1, align 8, !dbg !7749
  %247 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7750
  %u587 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %247, i32 0, i32 1, !dbg !7750
  %fld588 = bitcast %union.u* %u587 to [1 x %union.rtunion_def]*, !dbg !7750
  %arrayidx589 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld588, i64 0, i64 1, !dbg !7750
  %rt_rtx590 = bitcast %union.rtunion_def* %arrayidx589 to %struct.rtx_def**, !dbg !7750
  %248 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx590, align 8, !dbg !7750
  store %struct.rtx_def* %248, %struct.rtx_def** %in2, align 8, !dbg !7751
  %249 = load i32, i32* %mode.addr, align 4, !dbg !7752
  %250 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7753
  %251 = load i32, i32* %mode.addr, align 4, !dbg !7754
  %252 = load %struct.rtx_def*, %struct.rtx_def** %in1, align 8, !dbg !7755
  %253 = load %struct.rtx_def*, %struct.rtx_def** %in2, align 8, !dbg !7756
  %call591 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %251, %struct.rtx_def* %252, %struct.rtx_def* %253), !dbg !7757
  %call592 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %249, %struct.rtx_def* %250, %struct.rtx_def* %call591), !dbg !7758
  store %struct.rtx_def* %call592, %struct.rtx_def** %retval, align 8, !dbg !7759
  br label %return, !dbg !7759

if.end593:                                        ; preds = %land.lhs.true569, %land.lhs.true564, %land.lhs.true562
  %254 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7760
  %255 = bitcast %struct.rtx_def* %254 to i32*, !dbg !7760
  %bf.load594 = load i32, i32* %255, align 8, !dbg !7760
  %bf.clear595 = and i32 %bf.load594, 65535, !dbg !7760
  %idxprom596 = sext i32 %bf.clear595 to i64, !dbg !7760
  %arrayidx597 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom596, !dbg !7760
  %256 = load i32, i32* %arrayidx597, align 4, !dbg !7760
  %and = and i32 %256, -2, !dbg !7760
  %cmp598 = icmp eq i32 %and, 0, !dbg !7760
  br i1 %cmp598, label %land.lhs.true600, label %if.end608, !dbg !7762

land.lhs.true600:                                 ; preds = %if.end593
  %257 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !7763
  %258 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !7764
  %cmp601 = icmp eq %struct.rtx_def* %257, %258, !dbg !7765
  br i1 %cmp601, label %land.lhs.true603, label %if.end608, !dbg !7766

land.lhs.true603:                                 ; preds = %land.lhs.true600
  %259 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7767
  %260 = load i32, i32* %mode.addr, align 4, !dbg !7768
  %call604 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %259, i32 %260), !dbg !7769
  store %struct.rtx_def* %call604, %struct.rtx_def** %reversed, align 8, !dbg !7770
  %tobool605 = icmp ne %struct.rtx_def* %call604, null, !dbg !7770
  br i1 %tobool605, label %if.then606, label %if.end608, !dbg !7771

if.then606:                                       ; preds = %land.lhs.true603
  %261 = load i32, i32* %mode.addr, align 4, !dbg !7772
  %262 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8, !dbg !7773
  %263 = load i32, i32* %mode.addr, align 4, !dbg !7774
  %call607 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %261, %struct.rtx_def* %262, i32 %263), !dbg !7775
  store %struct.rtx_def* %call607, %struct.rtx_def** %retval, align 8, !dbg !7776
  br label %return, !dbg !7776

if.end608:                                        ; preds = %land.lhs.true603, %land.lhs.true600, %if.end593
  %264 = load i32, i32* %mode.addr, align 4, !dbg !7777
  %idxprom609 = zext i32 %264 to i64, !dbg !7777
  %arrayidx610 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom609, !dbg !7777
  %265 = load i8, i8* %arrayidx610, align 1, !dbg !7777
  %conv611 = zext i8 %265 to i32, !dbg !7777
  %cmp612 = icmp eq i32 %conv611, 2, !dbg !7777
  br i1 %cmp612, label %land.lhs.true632, label %lor.lhs.false614, !dbg !7777

lor.lhs.false614:                                 ; preds = %if.end608
  %266 = load i32, i32* %mode.addr, align 4, !dbg !7777
  %idxprom615 = zext i32 %266 to i64, !dbg !7777
  %arrayidx616 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom615, !dbg !7777
  %267 = load i8, i8* %arrayidx616, align 1, !dbg !7777
  %conv617 = zext i8 %267 to i32, !dbg !7777
  %cmp618 = icmp eq i32 %conv617, 3, !dbg !7777
  br i1 %cmp618, label %land.lhs.true632, label %lor.lhs.false620, !dbg !7777

lor.lhs.false620:                                 ; preds = %lor.lhs.false614
  %268 = load i32, i32* %mode.addr, align 4, !dbg !7777
  %idxprom621 = zext i32 %268 to i64, !dbg !7777
  %arrayidx622 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom621, !dbg !7777
  %269 = load i8, i8* %arrayidx622, align 1, !dbg !7777
  %conv623 = zext i8 %269 to i32, !dbg !7777
  %cmp624 = icmp eq i32 %conv623, 10, !dbg !7777
  br i1 %cmp624, label %land.lhs.true632, label %lor.lhs.false626, !dbg !7777

lor.lhs.false626:                                 ; preds = %lor.lhs.false620
  %270 = load i32, i32* %mode.addr, align 4, !dbg !7777
  %idxprom627 = zext i32 %270 to i64, !dbg !7777
  %arrayidx628 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom627, !dbg !7777
  %271 = load i8, i8* %arrayidx628, align 1, !dbg !7777
  %conv629 = zext i8 %271 to i32, !dbg !7777
  %cmp630 = icmp eq i32 %conv629, 12, !dbg !7777
  br i1 %cmp630, label %land.lhs.true632, label %if.end645, !dbg !7779

land.lhs.true632:                                 ; preds = %lor.lhs.false626, %lor.lhs.false620, %lor.lhs.false614, %if.end608
  %272 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7780
  %call633 = call zeroext i8 @plus_minus_operand_p(%struct.rtx_def* %272), !dbg !7781
  %conv634 = zext i8 %call633 to i32, !dbg !7781
  %tobool635 = icmp ne i32 %conv634, 0, !dbg !7781
  br i1 %tobool635, label %land.lhs.true640, label %lor.lhs.false636, !dbg !7782

lor.lhs.false636:                                 ; preds = %land.lhs.true632
  %273 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7783
  %call637 = call zeroext i8 @plus_minus_operand_p(%struct.rtx_def* %273), !dbg !7784
  %conv638 = zext i8 %call637 to i32, !dbg !7784
  %tobool639 = icmp ne i32 %conv638, 0, !dbg !7784
  br i1 %tobool639, label %land.lhs.true640, label %if.end645, !dbg !7785

land.lhs.true640:                                 ; preds = %lor.lhs.false636, %land.lhs.true632
  %274 = load i32, i32* %code.addr, align 4, !dbg !7786
  %275 = load i32, i32* %mode.addr, align 4, !dbg !7787
  %276 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7788
  %277 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7789
  %call641 = call %struct.rtx_def* @simplify_plus_minus(i32 %274, i32 %275, %struct.rtx_def* %276, %struct.rtx_def* %277), !dbg !7790
  store %struct.rtx_def* %call641, %struct.rtx_def** %tem, align 8, !dbg !7791
  %cmp642 = icmp ne %struct.rtx_def* %call641, null, !dbg !7792
  br i1 %cmp642, label %if.then644, label %if.end645, !dbg !7793

if.then644:                                       ; preds = %land.lhs.true640
  %278 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !7794
  store %struct.rtx_def* %278, %struct.rtx_def** %retval, align 8, !dbg !7795
  br label %return, !dbg !7795

if.end645:                                        ; preds = %land.lhs.true640, %lor.lhs.false636, %lor.lhs.false626
  %279 = load i32, i32* %mode.addr, align 4, !dbg !7796
  %idxprom646 = zext i32 %279 to i64, !dbg !7796
  %arrayidx647 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom646, !dbg !7796
  %280 = load i8, i8* %arrayidx647, align 1, !dbg !7796
  %conv648 = zext i8 %280 to i32, !dbg !7796
  %cmp649 = icmp eq i32 %conv648, 8, !dbg !7796
  br i1 %cmp649, label %land.lhs.true669, label %lor.lhs.false651, !dbg !7796

lor.lhs.false651:                                 ; preds = %if.end645
  %281 = load i32, i32* %mode.addr, align 4, !dbg !7796
  %idxprom652 = zext i32 %281 to i64, !dbg !7796
  %arrayidx653 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom652, !dbg !7796
  %282 = load i8, i8* %arrayidx653, align 1, !dbg !7796
  %conv654 = zext i8 %282 to i32, !dbg !7796
  %cmp655 = icmp eq i32 %conv654, 9, !dbg !7796
  br i1 %cmp655, label %land.lhs.true669, label %lor.lhs.false657, !dbg !7796

lor.lhs.false657:                                 ; preds = %lor.lhs.false651
  %283 = load i32, i32* %mode.addr, align 4, !dbg !7796
  %idxprom658 = zext i32 %283 to i64, !dbg !7796
  %arrayidx659 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom658, !dbg !7796
  %284 = load i8, i8* %arrayidx659, align 1, !dbg !7796
  %conv660 = zext i8 %284 to i32, !dbg !7796
  %cmp661 = icmp eq i32 %conv660, 11, !dbg !7796
  br i1 %cmp661, label %land.lhs.true669, label %lor.lhs.false663, !dbg !7796

lor.lhs.false663:                                 ; preds = %lor.lhs.false657
  %285 = load i32, i32* %mode.addr, align 4, !dbg !7796
  %idxprom664 = zext i32 %285 to i64, !dbg !7796
  %arrayidx665 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom664, !dbg !7796
  %286 = load i8, i8* %arrayidx665, align 1, !dbg !7796
  %conv666 = zext i8 %286 to i32, !dbg !7796
  %cmp667 = icmp eq i32 %conv666, 17, !dbg !7796
  br i1 %cmp667, label %land.lhs.true669, label %if.end676, !dbg !7798

land.lhs.true669:                                 ; preds = %lor.lhs.false663, %lor.lhs.false657, %lor.lhs.false651, %if.end645
  %287 = load i32, i32* @flag_associative_math, align 4, !dbg !7799
  %tobool670 = icmp ne i32 %287, 0, !dbg !7799
  br i1 %tobool670, label %if.then671, label %if.end676, !dbg !7800

if.then671:                                       ; preds = %land.lhs.true669
  %288 = load i32, i32* %code.addr, align 4, !dbg !7801
  %289 = load i32, i32* %mode.addr, align 4, !dbg !7803
  %290 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7804
  %291 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7805
  %call672 = call %struct.rtx_def* @simplify_associative_operation(i32 %288, i32 %289, %struct.rtx_def* %290, %struct.rtx_def* %291), !dbg !7806
  store %struct.rtx_def* %call672, %struct.rtx_def** %tem, align 8, !dbg !7807
  %292 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !7808
  %tobool673 = icmp ne %struct.rtx_def* %292, null, !dbg !7808
  br i1 %tobool673, label %if.then674, label %if.end675, !dbg !7810

if.then674:                                       ; preds = %if.then671
  %293 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !7811
  store %struct.rtx_def* %293, %struct.rtx_def** %retval, align 8, !dbg !7812
  br label %return, !dbg !7812

if.end675:                                        ; preds = %if.then671
  br label %if.end676, !dbg !7813

if.end676:                                        ; preds = %if.end675, %land.lhs.true669, %lor.lhs.false663
  br label %sw.epilog5879, !dbg !7814

sw.bb677:                                         ; preds = %entry
  %294 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7815
  %295 = bitcast %struct.rtx_def* %294 to i32*, !dbg !7815
  %bf.load678 = load i32, i32* %295, align 8, !dbg !7815
  %bf.clear679 = and i32 %bf.load678, 65535, !dbg !7815
  %cmp680 = icmp eq i32 %bf.clear679, 83, !dbg !7817
  br i1 %cmp680, label %land.lhs.true682, label %lor.lhs.false687, !dbg !7818

land.lhs.true682:                                 ; preds = %sw.bb677
  %296 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7819
  %297 = bitcast %struct.rtx_def* %296 to i32*, !dbg !7819
  %bf.load683 = load i32, i32* %297, align 8, !dbg !7819
  %bf.clear684 = and i32 %bf.load683, 65535, !dbg !7819
  %cmp685 = icmp eq i32 %bf.clear684, 85, !dbg !7820
  br i1 %cmp685, label %land.lhs.true697, label %lor.lhs.false687, !dbg !7821

lor.lhs.false687:                                 ; preds = %land.lhs.true682, %sw.bb677
  %298 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7822
  %299 = bitcast %struct.rtx_def* %298 to i32*, !dbg !7822
  %bf.load688 = load i32, i32* %299, align 8, !dbg !7822
  %bf.clear689 = and i32 %bf.load688, 65535, !dbg !7822
  %cmp690 = icmp eq i32 %bf.clear689, 87, !dbg !7823
  br i1 %cmp690, label %land.lhs.true692, label %if.end762, !dbg !7824

land.lhs.true692:                                 ; preds = %lor.lhs.false687
  %300 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7825
  %301 = bitcast %struct.rtx_def* %300 to i32*, !dbg !7825
  %bf.load693 = load i32, i32* %301, align 8, !dbg !7825
  %bf.clear694 = and i32 %bf.load693, 65535, !dbg !7825
  %cmp695 = icmp eq i32 %bf.clear694, 89, !dbg !7826
  br i1 %cmp695, label %land.lhs.true697, label %if.end762, !dbg !7827

land.lhs.true697:                                 ; preds = %land.lhs.true692, %land.lhs.true682
  %302 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7828
  %u698 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %302, i32 0, i32 1, !dbg !7828
  %fld699 = bitcast %union.u* %u698 to [1 x %union.rtunion_def]*, !dbg !7828
  %arrayidx700 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld699, i64 0, i64 1, !dbg !7828
  %rt_rtx701 = bitcast %union.rtunion_def* %arrayidx700 to %struct.rtx_def**, !dbg !7828
  %303 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx701, align 8, !dbg !7828
  %304 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7829
  %cmp702 = icmp eq %struct.rtx_def* %303, %304, !dbg !7830
  br i1 %cmp702, label %land.lhs.true704, label %if.end762, !dbg !7831

land.lhs.true704:                                 ; preds = %land.lhs.true697
  %305 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7832
  %u705 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %305, i32 0, i32 1, !dbg !7832
  %fld706 = bitcast %union.u* %u705 to [1 x %union.rtunion_def]*, !dbg !7832
  %arrayidx707 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld706, i64 0, i64 1, !dbg !7832
  %rt_rtx708 = bitcast %union.rtunion_def* %arrayidx707 to %struct.rtx_def**, !dbg !7832
  %306 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx708, align 8, !dbg !7832
  %307 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7833
  %cmp709 = icmp eq %struct.rtx_def* %306, %307, !dbg !7834
  br i1 %cmp709, label %if.then711, label %if.end762, !dbg !7835

if.then711:                                       ; preds = %land.lhs.true704
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xop00, metadata !7836, metadata !DIExpression()), !dbg !7838
  %308 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7839
  %u712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %308, i32 0, i32 1, !dbg !7839
  %fld713 = bitcast %union.u* %u712 to [1 x %union.rtunion_def]*, !dbg !7839
  %arrayidx714 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld713, i64 0, i64 0, !dbg !7839
  %rt_rtx715 = bitcast %union.rtunion_def* %arrayidx714 to %struct.rtx_def**, !dbg !7839
  %309 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx715, align 8, !dbg !7839
  store %struct.rtx_def* %309, %struct.rtx_def** %xop00, align 8, !dbg !7838
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xop10, metadata !7840, metadata !DIExpression()), !dbg !7841
  %310 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7842
  %u716 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %310, i32 0, i32 1, !dbg !7842
  %fld717 = bitcast %union.u* %u716 to [1 x %union.rtunion_def]*, !dbg !7842
  %arrayidx718 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld717, i64 0, i64 0, !dbg !7842
  %rt_rtx719 = bitcast %union.rtunion_def* %arrayidx718 to %struct.rtx_def**, !dbg !7842
  %311 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx719, align 8, !dbg !7842
  store %struct.rtx_def* %311, %struct.rtx_def** %xop10, align 8, !dbg !7841
  %312 = load %struct.rtx_def*, %struct.rtx_def** %xop00, align 8, !dbg !7843
  %313 = bitcast %struct.rtx_def* %312 to i32*, !dbg !7843
  %bf.load720 = load i32, i32* %313, align 8, !dbg !7843
  %bf.clear721 = and i32 %bf.load720, 65535, !dbg !7843
  %cmp722 = icmp eq i32 %bf.clear721, 37, !dbg !7843
  br i1 %cmp722, label %land.lhs.true724, label %if.end761, !dbg !7845

land.lhs.true724:                                 ; preds = %if.then711
  %314 = load %struct.rtx_def*, %struct.rtx_def** %xop10, align 8, !dbg !7846
  %315 = bitcast %struct.rtx_def* %314 to i32*, !dbg !7846
  %bf.load725 = load i32, i32* %315, align 8, !dbg !7846
  %bf.clear726 = and i32 %bf.load725, 65535, !dbg !7846
  %cmp727 = icmp eq i32 %bf.clear726, 37, !dbg !7846
  br i1 %cmp727, label %land.lhs.true729, label %if.end761, !dbg !7847

land.lhs.true729:                                 ; preds = %land.lhs.true724
  %316 = load %struct.rtx_def*, %struct.rtx_def** %xop00, align 8, !dbg !7848
  %317 = bitcast %struct.rtx_def* %316 to i32*, !dbg !7848
  %bf.load730 = load i32, i32* %317, align 8, !dbg !7848
  %bf.lshr = lshr i32 %bf.load730, 16, !dbg !7848
  %bf.clear731 = and i32 %bf.lshr, 255, !dbg !7848
  %318 = load %struct.rtx_def*, %struct.rtx_def** %xop10, align 8, !dbg !7849
  %319 = bitcast %struct.rtx_def* %318 to i32*, !dbg !7849
  %bf.load732 = load i32, i32* %319, align 8, !dbg !7849
  %bf.lshr733 = lshr i32 %bf.load732, 16, !dbg !7849
  %bf.clear734 = and i32 %bf.lshr733, 255, !dbg !7849
  %cmp735 = icmp eq i32 %bf.clear731, %bf.clear734, !dbg !7850
  br i1 %cmp735, label %land.lhs.true737, label %if.end761, !dbg !7851

land.lhs.true737:                                 ; preds = %land.lhs.true729
  %320 = load %struct.rtx_def*, %struct.rtx_def** %xop00, align 8, !dbg !7852
  %call738 = call i32 @rhs_regno(%struct.rtx_def* %320), !dbg !7852
  %321 = load %struct.rtx_def*, %struct.rtx_def** %xop10, align 8, !dbg !7853
  %call739 = call i32 @rhs_regno(%struct.rtx_def* %321), !dbg !7853
  %cmp740 = icmp eq i32 %call738, %call739, !dbg !7854
  br i1 %cmp740, label %land.lhs.true742, label %if.end761, !dbg !7855

land.lhs.true742:                                 ; preds = %land.lhs.true737
  %322 = load %struct.rtx_def*, %struct.rtx_def** %xop00, align 8, !dbg !7856
  %323 = bitcast %struct.rtx_def* %322 to i32*, !dbg !7856
  %bf.load743 = load i32, i32* %323, align 8, !dbg !7856
  %bf.lshr744 = lshr i32 %bf.load743, 16, !dbg !7856
  %bf.clear745 = and i32 %bf.lshr744, 255, !dbg !7856
  %idxprom746 = zext i32 %bf.clear745 to i64, !dbg !7856
  %arrayidx747 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom746, !dbg !7856
  %324 = load i8, i8* %arrayidx747, align 1, !dbg !7856
  %conv748 = zext i8 %324 to i32, !dbg !7856
  %cmp749 = icmp eq i32 %conv748, 1, !dbg !7857
  br i1 %cmp749, label %land.lhs.true751, label %if.end761, !dbg !7858

land.lhs.true751:                                 ; preds = %land.lhs.true742
  %325 = load %struct.rtx_def*, %struct.rtx_def** %xop10, align 8, !dbg !7859
  %326 = bitcast %struct.rtx_def* %325 to i32*, !dbg !7859
  %bf.load752 = load i32, i32* %326, align 8, !dbg !7859
  %bf.lshr753 = lshr i32 %bf.load752, 16, !dbg !7859
  %bf.clear754 = and i32 %bf.lshr753, 255, !dbg !7859
  %idxprom755 = zext i32 %bf.clear754 to i64, !dbg !7859
  %arrayidx756 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom755, !dbg !7859
  %327 = load i8, i8* %arrayidx756, align 1, !dbg !7859
  %conv757 = zext i8 %327 to i32, !dbg !7859
  %cmp758 = icmp eq i32 %conv757, 1, !dbg !7860
  br i1 %cmp758, label %if.then760, label %if.end761, !dbg !7861

if.then760:                                       ; preds = %land.lhs.true751
  %328 = load %struct.rtx_def*, %struct.rtx_def** %xop00, align 8, !dbg !7862
  store %struct.rtx_def* %328, %struct.rtx_def** %retval, align 8, !dbg !7863
  br label %return, !dbg !7863

if.end761:                                        ; preds = %land.lhs.true751, %land.lhs.true742, %land.lhs.true737, %land.lhs.true729, %land.lhs.true724, %if.then711
  br label %if.end762, !dbg !7864

if.end762:                                        ; preds = %if.end761, %land.lhs.true704, %land.lhs.true697, %land.lhs.true692, %lor.lhs.false687
  br label %sw.epilog5879, !dbg !7865

sw.bb763:                                         ; preds = %entry
  %329 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !7866
  %330 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !7868
  %call764 = call i32 @rtx_equal_p(%struct.rtx_def* %329, %struct.rtx_def* %330), !dbg !7869
  %tobool765 = icmp ne i32 %call764, 0, !dbg !7869
  br i1 %tobool765, label %land.lhs.true766, label %if.end893, !dbg !7870

land.lhs.true766:                                 ; preds = %sw.bb763
  %331 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7871
  %call767 = call i32 @side_effects_p(%struct.rtx_def* %331), !dbg !7872
  %tobool768 = icmp ne i32 %call767, 0, !dbg !7872
  br i1 %tobool768, label %if.end893, label %land.lhs.true769, !dbg !7873

land.lhs.true769:                                 ; preds = %land.lhs.true766
  %332 = load i32, i32* %mode.addr, align 4, !dbg !7874
  %idxprom770 = zext i32 %332 to i64, !dbg !7874
  %arrayidx771 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom770, !dbg !7874
  %333 = load i8, i8* %arrayidx771, align 1, !dbg !7874
  %conv772 = zext i8 %333 to i32, !dbg !7874
  %cmp773 = icmp eq i32 %conv772, 8, !dbg !7874
  br i1 %cmp773, label %lor.lhs.false793, label %lor.lhs.false775, !dbg !7874

lor.lhs.false775:                                 ; preds = %land.lhs.true769
  %334 = load i32, i32* %mode.addr, align 4, !dbg !7874
  %idxprom776 = zext i32 %334 to i64, !dbg !7874
  %arrayidx777 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom776, !dbg !7874
  %335 = load i8, i8* %arrayidx777, align 1, !dbg !7874
  %conv778 = zext i8 %335 to i32, !dbg !7874
  %cmp779 = icmp eq i32 %conv778, 9, !dbg !7874
  br i1 %cmp779, label %lor.lhs.false793, label %lor.lhs.false781, !dbg !7874

lor.lhs.false781:                                 ; preds = %lor.lhs.false775
  %336 = load i32, i32* %mode.addr, align 4, !dbg !7874
  %idxprom782 = zext i32 %336 to i64, !dbg !7874
  %arrayidx783 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom782, !dbg !7874
  %337 = load i8, i8* %arrayidx783, align 1, !dbg !7874
  %conv784 = zext i8 %337 to i32, !dbg !7874
  %cmp785 = icmp eq i32 %conv784, 11, !dbg !7874
  br i1 %cmp785, label %lor.lhs.false793, label %lor.lhs.false787, !dbg !7874

lor.lhs.false787:                                 ; preds = %lor.lhs.false781
  %338 = load i32, i32* %mode.addr, align 4, !dbg !7874
  %idxprom788 = zext i32 %338 to i64, !dbg !7874
  %arrayidx789 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom788, !dbg !7874
  %339 = load i8, i8* %arrayidx789, align 1, !dbg !7874
  %conv790 = zext i8 %339 to i32, !dbg !7874
  %cmp791 = icmp eq i32 %conv790, 17, !dbg !7874
  br i1 %cmp791, label %lor.lhs.false793, label %if.then890, !dbg !7875

lor.lhs.false793:                                 ; preds = %lor.lhs.false787, %lor.lhs.false781, %lor.lhs.false775, %land.lhs.true769
  %340 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom794 = zext i32 %340 to i64, !dbg !7876
  %arrayidx795 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom794, !dbg !7876
  %341 = load i8, i8* %arrayidx795, align 1, !dbg !7876
  %conv796 = zext i8 %341 to i32, !dbg !7876
  %cmp797 = icmp eq i32 %conv796, 8, !dbg !7876
  br i1 %cmp797, label %land.lhs.true817, label %lor.lhs.false799, !dbg !7876

lor.lhs.false799:                                 ; preds = %lor.lhs.false793
  %342 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom800 = zext i32 %342 to i64, !dbg !7876
  %arrayidx801 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom800, !dbg !7876
  %343 = load i8, i8* %arrayidx801, align 1, !dbg !7876
  %conv802 = zext i8 %343 to i32, !dbg !7876
  %cmp803 = icmp eq i32 %conv802, 9, !dbg !7876
  br i1 %cmp803, label %land.lhs.true817, label %lor.lhs.false805, !dbg !7876

lor.lhs.false805:                                 ; preds = %lor.lhs.false799
  %344 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom806 = zext i32 %344 to i64, !dbg !7876
  %arrayidx807 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom806, !dbg !7876
  %345 = load i8, i8* %arrayidx807, align 1, !dbg !7876
  %conv808 = zext i8 %345 to i32, !dbg !7876
  %cmp809 = icmp eq i32 %conv808, 11, !dbg !7876
  br i1 %cmp809, label %land.lhs.true817, label %lor.lhs.false811, !dbg !7876

lor.lhs.false811:                                 ; preds = %lor.lhs.false805
  %346 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom812 = zext i32 %346 to i64, !dbg !7876
  %arrayidx813 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom812, !dbg !7876
  %347 = load i8, i8* %arrayidx813, align 1, !dbg !7876
  %conv814 = zext i8 %347 to i32, !dbg !7876
  %cmp815 = icmp eq i32 %conv814, 17, !dbg !7876
  br i1 %cmp815, label %land.lhs.true817, label %if.then890, !dbg !7876

land.lhs.true817:                                 ; preds = %lor.lhs.false811, %lor.lhs.false805, %lor.lhs.false799, %lor.lhs.false793
  %348 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom818 = zext i32 %348 to i64, !dbg !7876
  %arrayidx819 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom818, !dbg !7876
  %349 = load i8, i8* %arrayidx819, align 1, !dbg !7876
  %conv820 = zext i8 %349 to i32, !dbg !7876
  %cmp821 = icmp eq i32 %conv820, 8, !dbg !7876
  br i1 %cmp821, label %cond.true829, label %lor.lhs.false823, !dbg !7876

lor.lhs.false823:                                 ; preds = %land.lhs.true817
  %350 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom824 = zext i32 %350 to i64, !dbg !7876
  %arrayidx825 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom824, !dbg !7876
  %351 = load i8, i8* %arrayidx825, align 1, !dbg !7876
  %conv826 = zext i8 %351 to i32, !dbg !7876
  %cmp827 = icmp eq i32 %conv826, 9, !dbg !7876
  br i1 %cmp827, label %cond.true829, label %cond.false830, !dbg !7876

cond.true829:                                     ; preds = %lor.lhs.false823, %land.lhs.true817
  %352 = load i32, i32* %mode.addr, align 4, !dbg !7876
  br label %cond.end834, !dbg !7876

cond.false830:                                    ; preds = %lor.lhs.false823
  %353 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom831 = zext i32 %353 to i64, !dbg !7876
  %arrayidx832 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom831, !dbg !7876
  %354 = load i8, i8* %arrayidx832, align 1, !dbg !7876
  %conv833 = zext i8 %354 to i32, !dbg !7876
  br label %cond.end834, !dbg !7876

cond.end834:                                      ; preds = %cond.false830, %cond.true829
  %cond835 = phi i32 [ %352, %cond.true829 ], [ %conv833, %cond.false830 ], !dbg !7876
  %idxprom836 = zext i32 %cond835 to i64, !dbg !7876
  %arrayidx837 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom836, !dbg !7876
  %355 = load i8, i8* %arrayidx837, align 1, !dbg !7876
  %conv838 = zext i8 %355 to i32, !dbg !7876
  %cmp839 = icmp eq i32 %conv838, 9, !dbg !7876
  br i1 %cmp839, label %cond.true841, label %cond.false862, !dbg !7876

cond.true841:                                     ; preds = %cond.end834
  %356 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom842 = zext i32 %356 to i64, !dbg !7876
  %arrayidx843 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom842, !dbg !7876
  %357 = load i8, i8* %arrayidx843, align 1, !dbg !7876
  %conv844 = zext i8 %357 to i32, !dbg !7876
  %cmp845 = icmp eq i32 %conv844, 8, !dbg !7876
  br i1 %cmp845, label %cond.true853, label %lor.lhs.false847, !dbg !7876

lor.lhs.false847:                                 ; preds = %cond.true841
  %358 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom848 = zext i32 %358 to i64, !dbg !7876
  %arrayidx849 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom848, !dbg !7876
  %359 = load i8, i8* %arrayidx849, align 1, !dbg !7876
  %conv850 = zext i8 %359 to i32, !dbg !7876
  %cmp851 = icmp eq i32 %conv850, 9, !dbg !7876
  br i1 %cmp851, label %cond.true853, label %cond.false854, !dbg !7876

cond.true853:                                     ; preds = %lor.lhs.false847, %cond.true841
  %360 = load i32, i32* %mode.addr, align 4, !dbg !7876
  br label %cond.end858, !dbg !7876

cond.false854:                                    ; preds = %lor.lhs.false847
  %361 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom855 = zext i32 %361 to i64, !dbg !7876
  %arrayidx856 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom855, !dbg !7876
  %362 = load i8, i8* %arrayidx856, align 1, !dbg !7876
  %conv857 = zext i8 %362 to i32, !dbg !7876
  br label %cond.end858, !dbg !7876

cond.end858:                                      ; preds = %cond.false854, %cond.true853
  %cond859 = phi i32 [ %360, %cond.true853 ], [ %conv857, %cond.false854 ], !dbg !7876
  %sub860 = sub i32 %cond859, 42, !dbg !7876
  %add861 = add i32 %sub860, 4, !dbg !7876
  br label %cond.end882, !dbg !7876

cond.false862:                                    ; preds = %cond.end834
  %363 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom863 = zext i32 %363 to i64, !dbg !7876
  %arrayidx864 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom863, !dbg !7876
  %364 = load i8, i8* %arrayidx864, align 1, !dbg !7876
  %conv865 = zext i8 %364 to i32, !dbg !7876
  %cmp866 = icmp eq i32 %conv865, 8, !dbg !7876
  br i1 %cmp866, label %cond.true874, label %lor.lhs.false868, !dbg !7876

lor.lhs.false868:                                 ; preds = %cond.false862
  %365 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom869 = zext i32 %365 to i64, !dbg !7876
  %arrayidx870 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom869, !dbg !7876
  %366 = load i8, i8* %arrayidx870, align 1, !dbg !7876
  %conv871 = zext i8 %366 to i32, !dbg !7876
  %cmp872 = icmp eq i32 %conv871, 9, !dbg !7876
  br i1 %cmp872, label %cond.true874, label %cond.false875, !dbg !7876

cond.true874:                                     ; preds = %lor.lhs.false868, %cond.false862
  %367 = load i32, i32* %mode.addr, align 4, !dbg !7876
  br label %cond.end879, !dbg !7876

cond.false875:                                    ; preds = %lor.lhs.false868
  %368 = load i32, i32* %mode.addr, align 4, !dbg !7876
  %idxprom876 = zext i32 %368 to i64, !dbg !7876
  %arrayidx877 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom876, !dbg !7876
  %369 = load i8, i8* %arrayidx877, align 1, !dbg !7876
  %conv878 = zext i8 %369 to i32, !dbg !7876
  br label %cond.end879, !dbg !7876

cond.end879:                                      ; preds = %cond.false875, %cond.true874
  %cond880 = phi i32 [ %367, %cond.true874 ], [ %conv878, %cond.false875 ], !dbg !7876
  %sub881 = sub i32 %cond880, 38, !dbg !7876
  br label %cond.end882, !dbg !7876

cond.end882:                                      ; preds = %cond.end879, %cond.end858
  %cond883 = phi i32 [ %add861, %cond.end858 ], [ %sub881, %cond.end879 ], !dbg !7876
  %idxprom884 = zext i32 %cond883 to i64, !dbg !7876
  %arrayidx885 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom884, !dbg !7876
  %370 = load %struct.real_format*, %struct.real_format** %arrayidx885, align 8, !dbg !7876
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %370, i32 0, i32 11, !dbg !7876
  %371 = load i8, i8* %has_nans, align 2, !dbg !7876
  %conv886 = zext i8 %371 to i32, !dbg !7876
  %tobool887 = icmp ne i32 %conv886, 0, !dbg !7876
  br i1 %tobool887, label %land.lhs.true888, label %if.then890, !dbg !7876

land.lhs.true888:                                 ; preds = %cond.end882
  %372 = load i32, i32* @flag_finite_math_only, align 4, !dbg !7876
  %tobool889 = icmp ne i32 %372, 0, !dbg !7876
  br i1 %tobool889, label %if.then890, label %if.end893, !dbg !7877

if.then890:                                       ; preds = %land.lhs.true888, %cond.end882, %lor.lhs.false811, %lor.lhs.false787
  %373 = load i32, i32* %mode.addr, align 4, !dbg !7878
  %idxprom891 = sext i32 %373 to i64, !dbg !7878
  %arrayidx892 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom891, !dbg !7878
  %374 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx892, align 8, !dbg !7878
  store %struct.rtx_def* %374, %struct.rtx_def** %retval, align 8, !dbg !7879
  br label %return, !dbg !7879

if.end893:                                        ; preds = %land.lhs.true888, %land.lhs.true766, %sw.bb763
  %375 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom894 = zext i32 %375 to i64, !dbg !7880
  %arrayidx895 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom894, !dbg !7880
  %376 = load i8, i8* %arrayidx895, align 1, !dbg !7880
  %conv896 = zext i8 %376 to i32, !dbg !7880
  %cmp897 = icmp eq i32 %conv896, 8, !dbg !7880
  br i1 %cmp897, label %land.lhs.true917, label %lor.lhs.false899, !dbg !7880

lor.lhs.false899:                                 ; preds = %if.end893
  %377 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom900 = zext i32 %377 to i64, !dbg !7880
  %arrayidx901 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom900, !dbg !7880
  %378 = load i8, i8* %arrayidx901, align 1, !dbg !7880
  %conv902 = zext i8 %378 to i32, !dbg !7880
  %cmp903 = icmp eq i32 %conv902, 9, !dbg !7880
  br i1 %cmp903, label %land.lhs.true917, label %lor.lhs.false905, !dbg !7880

lor.lhs.false905:                                 ; preds = %lor.lhs.false899
  %379 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom906 = zext i32 %379 to i64, !dbg !7880
  %arrayidx907 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom906, !dbg !7880
  %380 = load i8, i8* %arrayidx907, align 1, !dbg !7880
  %conv908 = zext i8 %380 to i32, !dbg !7880
  %cmp909 = icmp eq i32 %conv908, 11, !dbg !7880
  br i1 %cmp909, label %land.lhs.true917, label %lor.lhs.false911, !dbg !7880

lor.lhs.false911:                                 ; preds = %lor.lhs.false905
  %381 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom912 = zext i32 %381 to i64, !dbg !7880
  %arrayidx913 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom912, !dbg !7880
  %382 = load i8, i8* %arrayidx913, align 1, !dbg !7880
  %conv914 = zext i8 %382 to i32, !dbg !7880
  %cmp915 = icmp eq i32 %conv914, 17, !dbg !7880
  br i1 %cmp915, label %land.lhs.true917, label %land.lhs.true991, !dbg !7880

land.lhs.true917:                                 ; preds = %lor.lhs.false911, %lor.lhs.false905, %lor.lhs.false899, %if.end893
  %383 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom918 = zext i32 %383 to i64, !dbg !7880
  %arrayidx919 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom918, !dbg !7880
  %384 = load i8, i8* %arrayidx919, align 1, !dbg !7880
  %conv920 = zext i8 %384 to i32, !dbg !7880
  %cmp921 = icmp eq i32 %conv920, 8, !dbg !7880
  br i1 %cmp921, label %cond.true929, label %lor.lhs.false923, !dbg !7880

lor.lhs.false923:                                 ; preds = %land.lhs.true917
  %385 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom924 = zext i32 %385 to i64, !dbg !7880
  %arrayidx925 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom924, !dbg !7880
  %386 = load i8, i8* %arrayidx925, align 1, !dbg !7880
  %conv926 = zext i8 %386 to i32, !dbg !7880
  %cmp927 = icmp eq i32 %conv926, 9, !dbg !7880
  br i1 %cmp927, label %cond.true929, label %cond.false930, !dbg !7880

cond.true929:                                     ; preds = %lor.lhs.false923, %land.lhs.true917
  %387 = load i32, i32* %mode.addr, align 4, !dbg !7880
  br label %cond.end934, !dbg !7880

cond.false930:                                    ; preds = %lor.lhs.false923
  %388 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom931 = zext i32 %388 to i64, !dbg !7880
  %arrayidx932 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom931, !dbg !7880
  %389 = load i8, i8* %arrayidx932, align 1, !dbg !7880
  %conv933 = zext i8 %389 to i32, !dbg !7880
  br label %cond.end934, !dbg !7880

cond.end934:                                      ; preds = %cond.false930, %cond.true929
  %cond935 = phi i32 [ %387, %cond.true929 ], [ %conv933, %cond.false930 ], !dbg !7880
  %idxprom936 = zext i32 %cond935 to i64, !dbg !7880
  %arrayidx937 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom936, !dbg !7880
  %390 = load i8, i8* %arrayidx937, align 1, !dbg !7880
  %conv938 = zext i8 %390 to i32, !dbg !7880
  %cmp939 = icmp eq i32 %conv938, 9, !dbg !7880
  br i1 %cmp939, label %cond.true941, label %cond.false962, !dbg !7880

cond.true941:                                     ; preds = %cond.end934
  %391 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom942 = zext i32 %391 to i64, !dbg !7880
  %arrayidx943 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom942, !dbg !7880
  %392 = load i8, i8* %arrayidx943, align 1, !dbg !7880
  %conv944 = zext i8 %392 to i32, !dbg !7880
  %cmp945 = icmp eq i32 %conv944, 8, !dbg !7880
  br i1 %cmp945, label %cond.true953, label %lor.lhs.false947, !dbg !7880

lor.lhs.false947:                                 ; preds = %cond.true941
  %393 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom948 = zext i32 %393 to i64, !dbg !7880
  %arrayidx949 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom948, !dbg !7880
  %394 = load i8, i8* %arrayidx949, align 1, !dbg !7880
  %conv950 = zext i8 %394 to i32, !dbg !7880
  %cmp951 = icmp eq i32 %conv950, 9, !dbg !7880
  br i1 %cmp951, label %cond.true953, label %cond.false954, !dbg !7880

cond.true953:                                     ; preds = %lor.lhs.false947, %cond.true941
  %395 = load i32, i32* %mode.addr, align 4, !dbg !7880
  br label %cond.end958, !dbg !7880

cond.false954:                                    ; preds = %lor.lhs.false947
  %396 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom955 = zext i32 %396 to i64, !dbg !7880
  %arrayidx956 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom955, !dbg !7880
  %397 = load i8, i8* %arrayidx956, align 1, !dbg !7880
  %conv957 = zext i8 %397 to i32, !dbg !7880
  br label %cond.end958, !dbg !7880

cond.end958:                                      ; preds = %cond.false954, %cond.true953
  %cond959 = phi i32 [ %395, %cond.true953 ], [ %conv957, %cond.false954 ], !dbg !7880
  %sub960 = sub i32 %cond959, 42, !dbg !7880
  %add961 = add i32 %sub960, 4, !dbg !7880
  br label %cond.end982, !dbg !7880

cond.false962:                                    ; preds = %cond.end934
  %398 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom963 = zext i32 %398 to i64, !dbg !7880
  %arrayidx964 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom963, !dbg !7880
  %399 = load i8, i8* %arrayidx964, align 1, !dbg !7880
  %conv965 = zext i8 %399 to i32, !dbg !7880
  %cmp966 = icmp eq i32 %conv965, 8, !dbg !7880
  br i1 %cmp966, label %cond.true974, label %lor.lhs.false968, !dbg !7880

lor.lhs.false968:                                 ; preds = %cond.false962
  %400 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom969 = zext i32 %400 to i64, !dbg !7880
  %arrayidx970 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom969, !dbg !7880
  %401 = load i8, i8* %arrayidx970, align 1, !dbg !7880
  %conv971 = zext i8 %401 to i32, !dbg !7880
  %cmp972 = icmp eq i32 %conv971, 9, !dbg !7880
  br i1 %cmp972, label %cond.true974, label %cond.false975, !dbg !7880

cond.true974:                                     ; preds = %lor.lhs.false968, %cond.false962
  %402 = load i32, i32* %mode.addr, align 4, !dbg !7880
  br label %cond.end979, !dbg !7880

cond.false975:                                    ; preds = %lor.lhs.false968
  %403 = load i32, i32* %mode.addr, align 4, !dbg !7880
  %idxprom976 = zext i32 %403 to i64, !dbg !7880
  %arrayidx977 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom976, !dbg !7880
  %404 = load i8, i8* %arrayidx977, align 1, !dbg !7880
  %conv978 = zext i8 %404 to i32, !dbg !7880
  br label %cond.end979, !dbg !7880

cond.end979:                                      ; preds = %cond.false975, %cond.true974
  %cond980 = phi i32 [ %402, %cond.true974 ], [ %conv978, %cond.false975 ], !dbg !7880
  %sub981 = sub i32 %cond980, 38, !dbg !7880
  br label %cond.end982, !dbg !7880

cond.end982:                                      ; preds = %cond.end979, %cond.end958
  %cond983 = phi i32 [ %add961, %cond.end958 ], [ %sub981, %cond.end979 ], !dbg !7880
  %idxprom984 = zext i32 %cond983 to i64, !dbg !7880
  %arrayidx985 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom984, !dbg !7880
  %405 = load %struct.real_format*, %struct.real_format** %arrayidx985, align 8, !dbg !7880
  %has_signed_zero986 = getelementptr inbounds %struct.real_format, %struct.real_format* %405, i32 0, i32 14, !dbg !7880
  %406 = load i8, i8* %has_signed_zero986, align 1, !dbg !7880
  %conv987 = zext i8 %406 to i32, !dbg !7880
  %tobool988 = icmp ne i32 %conv987, 0, !dbg !7880
  br i1 %tobool988, label %land.lhs.true989, label %land.lhs.true991, !dbg !7880

land.lhs.true989:                                 ; preds = %cond.end982
  %407 = load i32, i32* @flag_signed_zeros, align 4, !dbg !7880
  %tobool990 = icmp ne i32 %407, 0, !dbg !7880
  br i1 %tobool990, label %if.end998, label %land.lhs.true991, !dbg !7882

land.lhs.true991:                                 ; preds = %land.lhs.true989, %cond.end982, %lor.lhs.false911
  %408 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !7883
  %409 = load i32, i32* %mode.addr, align 4, !dbg !7884
  %idxprom992 = sext i32 %409 to i64, !dbg !7884
  %arrayidx993 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom992, !dbg !7884
  %410 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx993, align 8, !dbg !7884
  %cmp994 = icmp eq %struct.rtx_def* %408, %410, !dbg !7885
  br i1 %cmp994, label %if.then996, label %if.end998, !dbg !7886

if.then996:                                       ; preds = %land.lhs.true991
  %411 = load i32, i32* %mode.addr, align 4, !dbg !7887
  %412 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7888
  %413 = load i32, i32* %mode.addr, align 4, !dbg !7889
  %call997 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %411, %struct.rtx_def* %412, i32 %413), !dbg !7890
  store %struct.rtx_def* %call997, %struct.rtx_def** %retval, align 8, !dbg !7891
  br label %return, !dbg !7891

if.end998:                                        ; preds = %land.lhs.true991, %land.lhs.true989
  %414 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !7892
  %415 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !7894
  %cmp999 = icmp eq %struct.rtx_def* %414, %415, !dbg !7895
  br i1 %cmp999, label %if.then1001, label %if.end1003, !dbg !7896

if.then1001:                                      ; preds = %if.end998
  %416 = load i32, i32* %mode.addr, align 4, !dbg !7897
  %417 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7898
  %418 = load i32, i32* %mode.addr, align 4, !dbg !7899
  %call1002 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %416, %struct.rtx_def* %417, i32 %418), !dbg !7900
  store %struct.rtx_def* %call1002, %struct.rtx_def** %retval, align 8, !dbg !7901
  br label %return, !dbg !7901

if.end1003:                                       ; preds = %if.end998
  %419 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1004 = zext i32 %419 to i64, !dbg !7902
  %arrayidx1005 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1004, !dbg !7902
  %420 = load i8, i8* %arrayidx1005, align 1, !dbg !7902
  %conv1006 = zext i8 %420 to i32, !dbg !7902
  %cmp1007 = icmp eq i32 %conv1006, 8, !dbg !7902
  br i1 %cmp1007, label %land.lhs.true1027, label %lor.lhs.false1009, !dbg !7902

lor.lhs.false1009:                                ; preds = %if.end1003
  %421 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1010 = zext i32 %421 to i64, !dbg !7902
  %arrayidx1011 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1010, !dbg !7902
  %422 = load i8, i8* %arrayidx1011, align 1, !dbg !7902
  %conv1012 = zext i8 %422 to i32, !dbg !7902
  %cmp1013 = icmp eq i32 %conv1012, 9, !dbg !7902
  br i1 %cmp1013, label %land.lhs.true1027, label %lor.lhs.false1015, !dbg !7902

lor.lhs.false1015:                                ; preds = %lor.lhs.false1009
  %423 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1016 = zext i32 %423 to i64, !dbg !7902
  %arrayidx1017 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1016, !dbg !7902
  %424 = load i8, i8* %arrayidx1017, align 1, !dbg !7902
  %conv1018 = zext i8 %424 to i32, !dbg !7902
  %cmp1019 = icmp eq i32 %conv1018, 11, !dbg !7902
  br i1 %cmp1019, label %land.lhs.true1027, label %lor.lhs.false1021, !dbg !7902

lor.lhs.false1021:                                ; preds = %lor.lhs.false1015
  %425 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1022 = zext i32 %425 to i64, !dbg !7902
  %arrayidx1023 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1022, !dbg !7902
  %426 = load i8, i8* %arrayidx1023, align 1, !dbg !7902
  %conv1024 = zext i8 %426 to i32, !dbg !7902
  %cmp1025 = icmp eq i32 %conv1024, 17, !dbg !7902
  br i1 %cmp1025, label %land.lhs.true1027, label %land.lhs.true1199, !dbg !7902

land.lhs.true1027:                                ; preds = %lor.lhs.false1021, %lor.lhs.false1015, %lor.lhs.false1009, %if.end1003
  %427 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1028 = zext i32 %427 to i64, !dbg !7902
  %arrayidx1029 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1028, !dbg !7902
  %428 = load i8, i8* %arrayidx1029, align 1, !dbg !7902
  %conv1030 = zext i8 %428 to i32, !dbg !7902
  %cmp1031 = icmp eq i32 %conv1030, 8, !dbg !7902
  br i1 %cmp1031, label %cond.true1039, label %lor.lhs.false1033, !dbg !7902

lor.lhs.false1033:                                ; preds = %land.lhs.true1027
  %429 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1034 = zext i32 %429 to i64, !dbg !7902
  %arrayidx1035 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1034, !dbg !7902
  %430 = load i8, i8* %arrayidx1035, align 1, !dbg !7902
  %conv1036 = zext i8 %430 to i32, !dbg !7902
  %cmp1037 = icmp eq i32 %conv1036, 9, !dbg !7902
  br i1 %cmp1037, label %cond.true1039, label %cond.false1040, !dbg !7902

cond.true1039:                                    ; preds = %lor.lhs.false1033, %land.lhs.true1027
  %431 = load i32, i32* %mode.addr, align 4, !dbg !7902
  br label %cond.end1044, !dbg !7902

cond.false1040:                                   ; preds = %lor.lhs.false1033
  %432 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1041 = zext i32 %432 to i64, !dbg !7902
  %arrayidx1042 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1041, !dbg !7902
  %433 = load i8, i8* %arrayidx1042, align 1, !dbg !7902
  %conv1043 = zext i8 %433 to i32, !dbg !7902
  br label %cond.end1044, !dbg !7902

cond.end1044:                                     ; preds = %cond.false1040, %cond.true1039
  %cond1045 = phi i32 [ %431, %cond.true1039 ], [ %conv1043, %cond.false1040 ], !dbg !7902
  %idxprom1046 = zext i32 %cond1045 to i64, !dbg !7902
  %arrayidx1047 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1046, !dbg !7902
  %434 = load i8, i8* %arrayidx1047, align 1, !dbg !7902
  %conv1048 = zext i8 %434 to i32, !dbg !7902
  %cmp1049 = icmp eq i32 %conv1048, 9, !dbg !7902
  br i1 %cmp1049, label %cond.true1051, label %cond.false1072, !dbg !7902

cond.true1051:                                    ; preds = %cond.end1044
  %435 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1052 = zext i32 %435 to i64, !dbg !7902
  %arrayidx1053 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1052, !dbg !7902
  %436 = load i8, i8* %arrayidx1053, align 1, !dbg !7902
  %conv1054 = zext i8 %436 to i32, !dbg !7902
  %cmp1055 = icmp eq i32 %conv1054, 8, !dbg !7902
  br i1 %cmp1055, label %cond.true1063, label %lor.lhs.false1057, !dbg !7902

lor.lhs.false1057:                                ; preds = %cond.true1051
  %437 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1058 = zext i32 %437 to i64, !dbg !7902
  %arrayidx1059 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1058, !dbg !7902
  %438 = load i8, i8* %arrayidx1059, align 1, !dbg !7902
  %conv1060 = zext i8 %438 to i32, !dbg !7902
  %cmp1061 = icmp eq i32 %conv1060, 9, !dbg !7902
  br i1 %cmp1061, label %cond.true1063, label %cond.false1064, !dbg !7902

cond.true1063:                                    ; preds = %lor.lhs.false1057, %cond.true1051
  %439 = load i32, i32* %mode.addr, align 4, !dbg !7902
  br label %cond.end1068, !dbg !7902

cond.false1064:                                   ; preds = %lor.lhs.false1057
  %440 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1065 = zext i32 %440 to i64, !dbg !7902
  %arrayidx1066 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1065, !dbg !7902
  %441 = load i8, i8* %arrayidx1066, align 1, !dbg !7902
  %conv1067 = zext i8 %441 to i32, !dbg !7902
  br label %cond.end1068, !dbg !7902

cond.end1068:                                     ; preds = %cond.false1064, %cond.true1063
  %cond1069 = phi i32 [ %439, %cond.true1063 ], [ %conv1067, %cond.false1064 ], !dbg !7902
  %sub1070 = sub i32 %cond1069, 42, !dbg !7902
  %add1071 = add i32 %sub1070, 4, !dbg !7902
  br label %cond.end1092, !dbg !7902

cond.false1072:                                   ; preds = %cond.end1044
  %442 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1073 = zext i32 %442 to i64, !dbg !7902
  %arrayidx1074 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1073, !dbg !7902
  %443 = load i8, i8* %arrayidx1074, align 1, !dbg !7902
  %conv1075 = zext i8 %443 to i32, !dbg !7902
  %cmp1076 = icmp eq i32 %conv1075, 8, !dbg !7902
  br i1 %cmp1076, label %cond.true1084, label %lor.lhs.false1078, !dbg !7902

lor.lhs.false1078:                                ; preds = %cond.false1072
  %444 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1079 = zext i32 %444 to i64, !dbg !7902
  %arrayidx1080 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1079, !dbg !7902
  %445 = load i8, i8* %arrayidx1080, align 1, !dbg !7902
  %conv1081 = zext i8 %445 to i32, !dbg !7902
  %cmp1082 = icmp eq i32 %conv1081, 9, !dbg !7902
  br i1 %cmp1082, label %cond.true1084, label %cond.false1085, !dbg !7902

cond.true1084:                                    ; preds = %lor.lhs.false1078, %cond.false1072
  %446 = load i32, i32* %mode.addr, align 4, !dbg !7902
  br label %cond.end1089, !dbg !7902

cond.false1085:                                   ; preds = %lor.lhs.false1078
  %447 = load i32, i32* %mode.addr, align 4, !dbg !7902
  %idxprom1086 = zext i32 %447 to i64, !dbg !7902
  %arrayidx1087 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1086, !dbg !7902
  %448 = load i8, i8* %arrayidx1087, align 1, !dbg !7902
  %conv1088 = zext i8 %448 to i32, !dbg !7902
  br label %cond.end1089, !dbg !7902

cond.end1089:                                     ; preds = %cond.false1085, %cond.true1084
  %cond1090 = phi i32 [ %446, %cond.true1084 ], [ %conv1088, %cond.false1085 ], !dbg !7902
  %sub1091 = sub i32 %cond1090, 38, !dbg !7902
  br label %cond.end1092, !dbg !7902

cond.end1092:                                     ; preds = %cond.end1089, %cond.end1068
  %cond1093 = phi i32 [ %add1071, %cond.end1068 ], [ %sub1091, %cond.end1089 ], !dbg !7902
  %idxprom1094 = zext i32 %cond1093 to i64, !dbg !7902
  %arrayidx1095 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1094, !dbg !7902
  %449 = load %struct.real_format*, %struct.real_format** %arrayidx1095, align 8, !dbg !7902
  %has_signed_zero1096 = getelementptr inbounds %struct.real_format, %struct.real_format* %449, i32 0, i32 14, !dbg !7902
  %450 = load i8, i8* %has_signed_zero1096, align 1, !dbg !7902
  %conv1097 = zext i8 %450 to i32, !dbg !7902
  %tobool1098 = icmp ne i32 %conv1097, 0, !dbg !7902
  br i1 %tobool1098, label %land.lhs.true1099, label %land.lhs.true1199, !dbg !7902

land.lhs.true1099:                                ; preds = %cond.end1092
  %451 = load i32, i32* @flag_signed_zeros, align 4, !dbg !7902
  %tobool1100 = icmp ne i32 %451, 0, !dbg !7902
  br i1 %tobool1100, label %land.lhs.true1101, label %land.lhs.true1199, !dbg !7904

land.lhs.true1101:                                ; preds = %land.lhs.true1099
  %452 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1102 = zext i32 %452 to i64, !dbg !7905
  %arrayidx1103 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1102, !dbg !7905
  %453 = load i8, i8* %arrayidx1103, align 1, !dbg !7905
  %conv1104 = zext i8 %453 to i32, !dbg !7905
  %cmp1105 = icmp eq i32 %conv1104, 8, !dbg !7905
  br i1 %cmp1105, label %land.lhs.true1125, label %lor.lhs.false1107, !dbg !7905

lor.lhs.false1107:                                ; preds = %land.lhs.true1101
  %454 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1108 = zext i32 %454 to i64, !dbg !7905
  %arrayidx1109 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1108, !dbg !7905
  %455 = load i8, i8* %arrayidx1109, align 1, !dbg !7905
  %conv1110 = zext i8 %455 to i32, !dbg !7905
  %cmp1111 = icmp eq i32 %conv1110, 9, !dbg !7905
  br i1 %cmp1111, label %land.lhs.true1125, label %lor.lhs.false1113, !dbg !7905

lor.lhs.false1113:                                ; preds = %lor.lhs.false1107
  %456 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1114 = zext i32 %456 to i64, !dbg !7905
  %arrayidx1115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1114, !dbg !7905
  %457 = load i8, i8* %arrayidx1115, align 1, !dbg !7905
  %conv1116 = zext i8 %457 to i32, !dbg !7905
  %cmp1117 = icmp eq i32 %conv1116, 11, !dbg !7905
  br i1 %cmp1117, label %land.lhs.true1125, label %lor.lhs.false1119, !dbg !7905

lor.lhs.false1119:                                ; preds = %lor.lhs.false1113
  %458 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1120 = zext i32 %458 to i64, !dbg !7905
  %arrayidx1121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1120, !dbg !7905
  %459 = load i8, i8* %arrayidx1121, align 1, !dbg !7905
  %conv1122 = zext i8 %459 to i32, !dbg !7905
  %cmp1123 = icmp eq i32 %conv1122, 17, !dbg !7905
  br i1 %cmp1123, label %land.lhs.true1125, label %land.lhs.true1199, !dbg !7905

land.lhs.true1125:                                ; preds = %lor.lhs.false1119, %lor.lhs.false1113, %lor.lhs.false1107, %land.lhs.true1101
  %460 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1126 = zext i32 %460 to i64, !dbg !7905
  %arrayidx1127 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1126, !dbg !7905
  %461 = load i8, i8* %arrayidx1127, align 1, !dbg !7905
  %conv1128 = zext i8 %461 to i32, !dbg !7905
  %cmp1129 = icmp eq i32 %conv1128, 8, !dbg !7905
  br i1 %cmp1129, label %cond.true1137, label %lor.lhs.false1131, !dbg !7905

lor.lhs.false1131:                                ; preds = %land.lhs.true1125
  %462 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1132 = zext i32 %462 to i64, !dbg !7905
  %arrayidx1133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1132, !dbg !7905
  %463 = load i8, i8* %arrayidx1133, align 1, !dbg !7905
  %conv1134 = zext i8 %463 to i32, !dbg !7905
  %cmp1135 = icmp eq i32 %conv1134, 9, !dbg !7905
  br i1 %cmp1135, label %cond.true1137, label %cond.false1138, !dbg !7905

cond.true1137:                                    ; preds = %lor.lhs.false1131, %land.lhs.true1125
  %464 = load i32, i32* %mode.addr, align 4, !dbg !7905
  br label %cond.end1142, !dbg !7905

cond.false1138:                                   ; preds = %lor.lhs.false1131
  %465 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1139 = zext i32 %465 to i64, !dbg !7905
  %arrayidx1140 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1139, !dbg !7905
  %466 = load i8, i8* %arrayidx1140, align 1, !dbg !7905
  %conv1141 = zext i8 %466 to i32, !dbg !7905
  br label %cond.end1142, !dbg !7905

cond.end1142:                                     ; preds = %cond.false1138, %cond.true1137
  %cond1143 = phi i32 [ %464, %cond.true1137 ], [ %conv1141, %cond.false1138 ], !dbg !7905
  %idxprom1144 = zext i32 %cond1143 to i64, !dbg !7905
  %arrayidx1145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1144, !dbg !7905
  %467 = load i8, i8* %arrayidx1145, align 1, !dbg !7905
  %conv1146 = zext i8 %467 to i32, !dbg !7905
  %cmp1147 = icmp eq i32 %conv1146, 9, !dbg !7905
  br i1 %cmp1147, label %cond.true1149, label %cond.false1170, !dbg !7905

cond.true1149:                                    ; preds = %cond.end1142
  %468 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1150 = zext i32 %468 to i64, !dbg !7905
  %arrayidx1151 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1150, !dbg !7905
  %469 = load i8, i8* %arrayidx1151, align 1, !dbg !7905
  %conv1152 = zext i8 %469 to i32, !dbg !7905
  %cmp1153 = icmp eq i32 %conv1152, 8, !dbg !7905
  br i1 %cmp1153, label %cond.true1161, label %lor.lhs.false1155, !dbg !7905

lor.lhs.false1155:                                ; preds = %cond.true1149
  %470 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1156 = zext i32 %470 to i64, !dbg !7905
  %arrayidx1157 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1156, !dbg !7905
  %471 = load i8, i8* %arrayidx1157, align 1, !dbg !7905
  %conv1158 = zext i8 %471 to i32, !dbg !7905
  %cmp1159 = icmp eq i32 %conv1158, 9, !dbg !7905
  br i1 %cmp1159, label %cond.true1161, label %cond.false1162, !dbg !7905

cond.true1161:                                    ; preds = %lor.lhs.false1155, %cond.true1149
  %472 = load i32, i32* %mode.addr, align 4, !dbg !7905
  br label %cond.end1166, !dbg !7905

cond.false1162:                                   ; preds = %lor.lhs.false1155
  %473 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1163 = zext i32 %473 to i64, !dbg !7905
  %arrayidx1164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1163, !dbg !7905
  %474 = load i8, i8* %arrayidx1164, align 1, !dbg !7905
  %conv1165 = zext i8 %474 to i32, !dbg !7905
  br label %cond.end1166, !dbg !7905

cond.end1166:                                     ; preds = %cond.false1162, %cond.true1161
  %cond1167 = phi i32 [ %472, %cond.true1161 ], [ %conv1165, %cond.false1162 ], !dbg !7905
  %sub1168 = sub i32 %cond1167, 42, !dbg !7905
  %add1169 = add i32 %sub1168, 4, !dbg !7905
  br label %cond.end1190, !dbg !7905

cond.false1170:                                   ; preds = %cond.end1142
  %475 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1171 = zext i32 %475 to i64, !dbg !7905
  %arrayidx1172 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1171, !dbg !7905
  %476 = load i8, i8* %arrayidx1172, align 1, !dbg !7905
  %conv1173 = zext i8 %476 to i32, !dbg !7905
  %cmp1174 = icmp eq i32 %conv1173, 8, !dbg !7905
  br i1 %cmp1174, label %cond.true1182, label %lor.lhs.false1176, !dbg !7905

lor.lhs.false1176:                                ; preds = %cond.false1170
  %477 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1177 = zext i32 %477 to i64, !dbg !7905
  %arrayidx1178 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1177, !dbg !7905
  %478 = load i8, i8* %arrayidx1178, align 1, !dbg !7905
  %conv1179 = zext i8 %478 to i32, !dbg !7905
  %cmp1180 = icmp eq i32 %conv1179, 9, !dbg !7905
  br i1 %cmp1180, label %cond.true1182, label %cond.false1183, !dbg !7905

cond.true1182:                                    ; preds = %lor.lhs.false1176, %cond.false1170
  %479 = load i32, i32* %mode.addr, align 4, !dbg !7905
  br label %cond.end1187, !dbg !7905

cond.false1183:                                   ; preds = %lor.lhs.false1176
  %480 = load i32, i32* %mode.addr, align 4, !dbg !7905
  %idxprom1184 = zext i32 %480 to i64, !dbg !7905
  %arrayidx1185 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1184, !dbg !7905
  %481 = load i8, i8* %arrayidx1185, align 1, !dbg !7905
  %conv1186 = zext i8 %481 to i32, !dbg !7905
  br label %cond.end1187, !dbg !7905

cond.end1187:                                     ; preds = %cond.false1183, %cond.true1182
  %cond1188 = phi i32 [ %479, %cond.true1182 ], [ %conv1186, %cond.false1183 ], !dbg !7905
  %sub1189 = sub i32 %cond1188, 38, !dbg !7905
  br label %cond.end1190, !dbg !7905

cond.end1190:                                     ; preds = %cond.end1187, %cond.end1166
  %cond1191 = phi i32 [ %add1169, %cond.end1166 ], [ %sub1189, %cond.end1187 ], !dbg !7905
  %idxprom1192 = zext i32 %cond1191 to i64, !dbg !7905
  %arrayidx1193 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1192, !dbg !7905
  %482 = load %struct.real_format*, %struct.real_format** %arrayidx1193, align 8, !dbg !7905
  %has_sign_dependent_rounding1194 = getelementptr inbounds %struct.real_format, %struct.real_format* %482, i32 0, i32 10, !dbg !7905
  %483 = load i8, i8* %has_sign_dependent_rounding1194, align 1, !dbg !7905
  %conv1195 = zext i8 %483 to i32, !dbg !7905
  %tobool1196 = icmp ne i32 %conv1195, 0, !dbg !7905
  br i1 %tobool1196, label %land.lhs.true1197, label %land.lhs.true1199, !dbg !7905

land.lhs.true1197:                                ; preds = %cond.end1190
  %484 = load i32, i32* @flag_rounding_math, align 4, !dbg !7905
  %tobool1198 = icmp ne i32 %484, 0, !dbg !7905
  br i1 %tobool1198, label %if.end1205, label %land.lhs.true1199, !dbg !7906

land.lhs.true1199:                                ; preds = %land.lhs.true1197, %cond.end1190, %lor.lhs.false1119, %land.lhs.true1099, %cond.end1092, %lor.lhs.false1021
  %485 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !7907
  %486 = load i32, i32* %mode.addr, align 4, !dbg !7908
  %idxprom1200 = sext i32 %486 to i64, !dbg !7908
  %arrayidx1201 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom1200, !dbg !7908
  %487 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1201, align 8, !dbg !7908
  %cmp1202 = icmp eq %struct.rtx_def* %485, %487, !dbg !7909
  br i1 %cmp1202, label %if.then1204, label %if.end1205, !dbg !7910

if.then1204:                                      ; preds = %land.lhs.true1199
  %488 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7911
  store %struct.rtx_def* %488, %struct.rtx_def** %retval, align 8, !dbg !7912
  br label %return, !dbg !7912

if.end1205:                                       ; preds = %land.lhs.true1199, %land.lhs.true1197
  %489 = load i32, i32* %mode.addr, align 4, !dbg !7913
  %idxprom1206 = zext i32 %489 to i64, !dbg !7913
  %arrayidx1207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1206, !dbg !7913
  %490 = load i8, i8* %arrayidx1207, align 1, !dbg !7913
  %conv1208 = zext i8 %490 to i32, !dbg !7913
  %cmp1209 = icmp eq i32 %conv1208, 2, !dbg !7913
  br i1 %cmp1209, label %if.then1217, label %lor.lhs.false1211, !dbg !7913

lor.lhs.false1211:                                ; preds = %if.end1205
  %491 = load i32, i32* %mode.addr, align 4, !dbg !7913
  %idxprom1212 = zext i32 %491 to i64, !dbg !7913
  %arrayidx1213 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1212, !dbg !7913
  %492 = load i8, i8* %arrayidx1213, align 1, !dbg !7913
  %conv1214 = zext i8 %492 to i32, !dbg !7913
  %cmp1215 = icmp eq i32 %conv1214, 3, !dbg !7913
  br i1 %cmp1215, label %if.then1217, label %if.end1439, !dbg !7915

if.then1217:                                      ; preds = %lor.lhs.false1211, %if.end1205
  call void @llvm.dbg.declare(metadata i64* %coeff0h1218, metadata !7916, metadata !DIExpression()), !dbg !7918
  store i64 0, i64* %coeff0h1218, align 8, !dbg !7918
  call void @llvm.dbg.declare(metadata i64* %negcoeff1h, metadata !7919, metadata !DIExpression()), !dbg !7920
  store i64 -1, i64* %negcoeff1h, align 8, !dbg !7920
  call void @llvm.dbg.declare(metadata i64* %coeff0l1219, metadata !7921, metadata !DIExpression()), !dbg !7922
  store i64 1, i64* %coeff0l1219, align 8, !dbg !7922
  call void @llvm.dbg.declare(metadata i64* %negcoeff1l, metadata !7923, metadata !DIExpression()), !dbg !7924
  store i64 -1, i64* %negcoeff1l, align 8, !dbg !7924
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs1220, metadata !7925, metadata !DIExpression()), !dbg !7926
  %493 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !7927
  store %struct.rtx_def* %493, %struct.rtx_def** %lhs1220, align 8, !dbg !7926
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs1221, metadata !7928, metadata !DIExpression()), !dbg !7929
  %494 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !7930
  store %struct.rtx_def* %494, %struct.rtx_def** %rhs1221, align 8, !dbg !7929
  %495 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7931
  %496 = bitcast %struct.rtx_def* %495 to i32*, !dbg !7931
  %bf.load1222 = load i32, i32* %496, align 8, !dbg !7931
  %bf.clear1223 = and i32 %bf.load1222, 65535, !dbg !7931
  %cmp1224 = icmp eq i32 %bf.clear1223, 51, !dbg !7933
  br i1 %cmp1224, label %if.then1226, label %if.else1231, !dbg !7934

if.then1226:                                      ; preds = %if.then1217
  store i64 -1, i64* %coeff0l1219, align 8, !dbg !7935
  store i64 -1, i64* %coeff0h1218, align 8, !dbg !7937
  %497 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7938
  %u1227 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %497, i32 0, i32 1, !dbg !7938
  %fld1228 = bitcast %union.u* %u1227 to [1 x %union.rtunion_def]*, !dbg !7938
  %arrayidx1229 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1228, i64 0, i64 0, !dbg !7938
  %rt_rtx1230 = bitcast %union.rtunion_def* %arrayidx1229 to %struct.rtx_def**, !dbg !7938
  %498 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1230, align 8, !dbg !7938
  store %struct.rtx_def* %498, %struct.rtx_def** %lhs1220, align 8, !dbg !7939
  br label %if.end1317, !dbg !7940

if.else1231:                                      ; preds = %if.then1217
  %499 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7941
  %500 = bitcast %struct.rtx_def* %499 to i32*, !dbg !7941
  %bf.load1232 = load i32, i32* %500, align 8, !dbg !7941
  %bf.clear1233 = and i32 %bf.load1232, 65535, !dbg !7941
  %cmp1234 = icmp eq i32 %bf.clear1233, 52, !dbg !7943
  br i1 %cmp1234, label %land.lhs.true1236, label %if.else1268, !dbg !7944

land.lhs.true1236:                                ; preds = %if.else1231
  %501 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7945
  %u1237 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %501, i32 0, i32 1, !dbg !7945
  %fld1238 = bitcast %union.u* %u1237 to [1 x %union.rtunion_def]*, !dbg !7945
  %arrayidx1239 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1238, i64 0, i64 1, !dbg !7945
  %rt_rtx1240 = bitcast %union.rtunion_def* %arrayidx1239 to %struct.rtx_def**, !dbg !7945
  %502 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1240, align 8, !dbg !7945
  %503 = bitcast %struct.rtx_def* %502 to i32*, !dbg !7945
  %bf.load1241 = load i32, i32* %503, align 8, !dbg !7945
  %bf.clear1242 = and i32 %bf.load1241, 65535, !dbg !7945
  %cmp1243 = icmp eq i32 %bf.clear1242, 30, !dbg !7945
  br i1 %cmp1243, label %if.then1245, label %if.else1268, !dbg !7946

if.then1245:                                      ; preds = %land.lhs.true1236
  %504 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7947
  %u1246 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %504, i32 0, i32 1, !dbg !7947
  %fld1247 = bitcast %union.u* %u1246 to [1 x %union.rtunion_def]*, !dbg !7947
  %arrayidx1248 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1247, i64 0, i64 1, !dbg !7947
  %rt_rtx1249 = bitcast %union.rtunion_def* %arrayidx1248 to %struct.rtx_def**, !dbg !7947
  %505 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1249, align 8, !dbg !7947
  %u1250 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %505, i32 0, i32 1, !dbg !7947
  %hwint1251 = bitcast %union.u* %u1250 to [1 x i64]*, !dbg !7947
  %arrayidx1252 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1251, i64 0, i64 0, !dbg !7947
  %506 = load i64, i64* %arrayidx1252, align 8, !dbg !7947
  store i64 %506, i64* %coeff0l1219, align 8, !dbg !7949
  %507 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7950
  %u1253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %507, i32 0, i32 1, !dbg !7950
  %fld1254 = bitcast %union.u* %u1253 to [1 x %union.rtunion_def]*, !dbg !7950
  %arrayidx1255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1254, i64 0, i64 1, !dbg !7950
  %rt_rtx1256 = bitcast %union.rtunion_def* %arrayidx1255 to %struct.rtx_def**, !dbg !7950
  %508 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1256, align 8, !dbg !7950
  %u1257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %508, i32 0, i32 1, !dbg !7950
  %hwint1258 = bitcast %union.u* %u1257 to [1 x i64]*, !dbg !7950
  %arrayidx1259 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1258, i64 0, i64 0, !dbg !7950
  %509 = load i64, i64* %arrayidx1259, align 8, !dbg !7950
  %cmp1260 = icmp slt i64 %509, 0, !dbg !7951
  %510 = zext i1 %cmp1260 to i64, !dbg !7950
  %cond1262 = select i1 %cmp1260, i32 -1, i32 0, !dbg !7950
  %conv1263 = sext i32 %cond1262 to i64, !dbg !7950
  store i64 %conv1263, i64* %coeff0h1218, align 8, !dbg !7952
  %511 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7953
  %u1264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %511, i32 0, i32 1, !dbg !7953
  %fld1265 = bitcast %union.u* %u1264 to [1 x %union.rtunion_def]*, !dbg !7953
  %arrayidx1266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1265, i64 0, i64 0, !dbg !7953
  %rt_rtx1267 = bitcast %union.rtunion_def* %arrayidx1266 to %struct.rtx_def**, !dbg !7953
  %512 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1267, align 8, !dbg !7953
  store %struct.rtx_def* %512, %struct.rtx_def** %lhs1220, align 8, !dbg !7954
  br label %if.end1316, !dbg !7955

if.else1268:                                      ; preds = %land.lhs.true1236, %if.else1231
  %513 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7956
  %514 = bitcast %struct.rtx_def* %513 to i32*, !dbg !7956
  %bf.load1269 = load i32, i32* %514, align 8, !dbg !7956
  %bf.clear1270 = and i32 %bf.load1269, 65535, !dbg !7956
  %cmp1271 = icmp eq i32 %bf.clear1270, 65, !dbg !7958
  br i1 %cmp1271, label %land.lhs.true1273, label %if.end1315, !dbg !7959

land.lhs.true1273:                                ; preds = %if.else1268
  %515 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7960
  %u1274 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %515, i32 0, i32 1, !dbg !7960
  %fld1275 = bitcast %union.u* %u1274 to [1 x %union.rtunion_def]*, !dbg !7960
  %arrayidx1276 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1275, i64 0, i64 1, !dbg !7960
  %rt_rtx1277 = bitcast %union.rtunion_def* %arrayidx1276 to %struct.rtx_def**, !dbg !7960
  %516 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1277, align 8, !dbg !7960
  %517 = bitcast %struct.rtx_def* %516 to i32*, !dbg !7960
  %bf.load1278 = load i32, i32* %517, align 8, !dbg !7960
  %bf.clear1279 = and i32 %bf.load1278, 65535, !dbg !7960
  %cmp1280 = icmp eq i32 %bf.clear1279, 30, !dbg !7960
  br i1 %cmp1280, label %land.lhs.true1282, label %if.end1315, !dbg !7961

land.lhs.true1282:                                ; preds = %land.lhs.true1273
  %518 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7962
  %u1283 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %518, i32 0, i32 1, !dbg !7962
  %fld1284 = bitcast %union.u* %u1283 to [1 x %union.rtunion_def]*, !dbg !7962
  %arrayidx1285 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1284, i64 0, i64 1, !dbg !7962
  %rt_rtx1286 = bitcast %union.rtunion_def* %arrayidx1285 to %struct.rtx_def**, !dbg !7962
  %519 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1286, align 8, !dbg !7962
  %u1287 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %519, i32 0, i32 1, !dbg !7962
  %hwint1288 = bitcast %union.u* %u1287 to [1 x i64]*, !dbg !7962
  %arrayidx1289 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1288, i64 0, i64 0, !dbg !7962
  %520 = load i64, i64* %arrayidx1289, align 8, !dbg !7962
  %cmp1290 = icmp sge i64 %520, 0, !dbg !7963
  br i1 %cmp1290, label %land.lhs.true1292, label %if.end1315, !dbg !7964

land.lhs.true1292:                                ; preds = %land.lhs.true1282
  %521 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7965
  %u1293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %521, i32 0, i32 1, !dbg !7965
  %fld1294 = bitcast %union.u* %u1293 to [1 x %union.rtunion_def]*, !dbg !7965
  %arrayidx1295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1294, i64 0, i64 1, !dbg !7965
  %rt_rtx1296 = bitcast %union.rtunion_def* %arrayidx1295 to %struct.rtx_def**, !dbg !7965
  %522 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1296, align 8, !dbg !7965
  %u1297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %522, i32 0, i32 1, !dbg !7965
  %hwint1298 = bitcast %union.u* %u1297 to [1 x i64]*, !dbg !7965
  %arrayidx1299 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1298, i64 0, i64 0, !dbg !7965
  %523 = load i64, i64* %arrayidx1299, align 8, !dbg !7965
  %cmp1300 = icmp slt i64 %523, 64, !dbg !7966
  br i1 %cmp1300, label %if.then1302, label %if.end1315, !dbg !7967

if.then1302:                                      ; preds = %land.lhs.true1292
  %524 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7968
  %u1303 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %524, i32 0, i32 1, !dbg !7968
  %fld1304 = bitcast %union.u* %u1303 to [1 x %union.rtunion_def]*, !dbg !7968
  %arrayidx1305 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1304, i64 0, i64 1, !dbg !7968
  %rt_rtx1306 = bitcast %union.rtunion_def* %arrayidx1305 to %struct.rtx_def**, !dbg !7968
  %525 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1306, align 8, !dbg !7968
  %u1307 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %525, i32 0, i32 1, !dbg !7968
  %hwint1308 = bitcast %union.u* %u1307 to [1 x i64]*, !dbg !7968
  %arrayidx1309 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1308, i64 0, i64 0, !dbg !7968
  %526 = load i64, i64* %arrayidx1309, align 8, !dbg !7968
  %shl1310 = shl i64 1, %526, !dbg !7970
  store i64 %shl1310, i64* %coeff0l1219, align 8, !dbg !7971
  store i64 0, i64* %coeff0h1218, align 8, !dbg !7972
  %527 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !7973
  %u1311 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %527, i32 0, i32 1, !dbg !7973
  %fld1312 = bitcast %union.u* %u1311 to [1 x %union.rtunion_def]*, !dbg !7973
  %arrayidx1313 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1312, i64 0, i64 0, !dbg !7973
  %rt_rtx1314 = bitcast %union.rtunion_def* %arrayidx1313 to %struct.rtx_def**, !dbg !7973
  %528 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1314, align 8, !dbg !7973
  store %struct.rtx_def* %528, %struct.rtx_def** %lhs1220, align 8, !dbg !7974
  br label %if.end1315, !dbg !7975

if.end1315:                                       ; preds = %if.then1302, %land.lhs.true1292, %land.lhs.true1282, %land.lhs.true1273, %if.else1268
  br label %if.end1316

if.end1316:                                       ; preds = %if.end1315, %if.then1245
  br label %if.end1317

if.end1317:                                       ; preds = %if.end1316, %if.then1226
  %529 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7976
  %530 = bitcast %struct.rtx_def* %529 to i32*, !dbg !7976
  %bf.load1318 = load i32, i32* %530, align 8, !dbg !7976
  %bf.clear1319 = and i32 %bf.load1318, 65535, !dbg !7976
  %cmp1320 = icmp eq i32 %bf.clear1319, 51, !dbg !7978
  br i1 %cmp1320, label %if.then1322, label %if.else1327, !dbg !7979

if.then1322:                                      ; preds = %if.end1317
  store i64 1, i64* %negcoeff1l, align 8, !dbg !7980
  store i64 0, i64* %negcoeff1h, align 8, !dbg !7982
  %531 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7983
  %u1323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %531, i32 0, i32 1, !dbg !7983
  %fld1324 = bitcast %union.u* %u1323 to [1 x %union.rtunion_def]*, !dbg !7983
  %arrayidx1325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1324, i64 0, i64 0, !dbg !7983
  %rt_rtx1326 = bitcast %union.rtunion_def* %arrayidx1325 to %struct.rtx_def**, !dbg !7983
  %532 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1326, align 8, !dbg !7983
  store %struct.rtx_def* %532, %struct.rtx_def** %rhs1221, align 8, !dbg !7984
  br label %if.end1415, !dbg !7985

if.else1327:                                      ; preds = %if.end1317
  %533 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7986
  %534 = bitcast %struct.rtx_def* %533 to i32*, !dbg !7986
  %bf.load1328 = load i32, i32* %534, align 8, !dbg !7986
  %bf.clear1329 = and i32 %bf.load1328, 65535, !dbg !7986
  %cmp1330 = icmp eq i32 %bf.clear1329, 52, !dbg !7988
  br i1 %cmp1330, label %land.lhs.true1332, label %if.else1365, !dbg !7989

land.lhs.true1332:                                ; preds = %if.else1327
  %535 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7990
  %u1333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %535, i32 0, i32 1, !dbg !7990
  %fld1334 = bitcast %union.u* %u1333 to [1 x %union.rtunion_def]*, !dbg !7990
  %arrayidx1335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1334, i64 0, i64 1, !dbg !7990
  %rt_rtx1336 = bitcast %union.rtunion_def* %arrayidx1335 to %struct.rtx_def**, !dbg !7990
  %536 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1336, align 8, !dbg !7990
  %537 = bitcast %struct.rtx_def* %536 to i32*, !dbg !7990
  %bf.load1337 = load i32, i32* %537, align 8, !dbg !7990
  %bf.clear1338 = and i32 %bf.load1337, 65535, !dbg !7990
  %cmp1339 = icmp eq i32 %bf.clear1338, 30, !dbg !7990
  br i1 %cmp1339, label %if.then1341, label %if.else1365, !dbg !7991

if.then1341:                                      ; preds = %land.lhs.true1332
  %538 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7992
  %u1342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %538, i32 0, i32 1, !dbg !7992
  %fld1343 = bitcast %union.u* %u1342 to [1 x %union.rtunion_def]*, !dbg !7992
  %arrayidx1344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1343, i64 0, i64 1, !dbg !7992
  %rt_rtx1345 = bitcast %union.rtunion_def* %arrayidx1344 to %struct.rtx_def**, !dbg !7992
  %539 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1345, align 8, !dbg !7992
  %u1346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %539, i32 0, i32 1, !dbg !7992
  %hwint1347 = bitcast %union.u* %u1346 to [1 x i64]*, !dbg !7992
  %arrayidx1348 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1347, i64 0, i64 0, !dbg !7992
  %540 = load i64, i64* %arrayidx1348, align 8, !dbg !7992
  %sub1349 = sub nsw i64 0, %540, !dbg !7994
  store i64 %sub1349, i64* %negcoeff1l, align 8, !dbg !7995
  %541 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7996
  %u1350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %541, i32 0, i32 1, !dbg !7996
  %fld1351 = bitcast %union.u* %u1350 to [1 x %union.rtunion_def]*, !dbg !7996
  %arrayidx1352 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1351, i64 0, i64 1, !dbg !7996
  %rt_rtx1353 = bitcast %union.rtunion_def* %arrayidx1352 to %struct.rtx_def**, !dbg !7996
  %542 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1353, align 8, !dbg !7996
  %u1354 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %542, i32 0, i32 1, !dbg !7996
  %hwint1355 = bitcast %union.u* %u1354 to [1 x i64]*, !dbg !7996
  %arrayidx1356 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1355, i64 0, i64 0, !dbg !7996
  %543 = load i64, i64* %arrayidx1356, align 8, !dbg !7996
  %cmp1357 = icmp sle i64 %543, 0, !dbg !7997
  %544 = zext i1 %cmp1357 to i64, !dbg !7996
  %cond1359 = select i1 %cmp1357, i32 0, i32 -1, !dbg !7996
  %conv1360 = sext i32 %cond1359 to i64, !dbg !7996
  store i64 %conv1360, i64* %negcoeff1h, align 8, !dbg !7998
  %545 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !7999
  %u1361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %545, i32 0, i32 1, !dbg !7999
  %fld1362 = bitcast %union.u* %u1361 to [1 x %union.rtunion_def]*, !dbg !7999
  %arrayidx1363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1362, i64 0, i64 0, !dbg !7999
  %rt_rtx1364 = bitcast %union.rtunion_def* %arrayidx1363 to %struct.rtx_def**, !dbg !7999
  %546 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1364, align 8, !dbg !7999
  store %struct.rtx_def* %546, %struct.rtx_def** %rhs1221, align 8, !dbg !8000
  br label %if.end1414, !dbg !8001

if.else1365:                                      ; preds = %land.lhs.true1332, %if.else1327
  %547 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8002
  %548 = bitcast %struct.rtx_def* %547 to i32*, !dbg !8002
  %bf.load1366 = load i32, i32* %548, align 8, !dbg !8002
  %bf.clear1367 = and i32 %bf.load1366, 65535, !dbg !8002
  %cmp1368 = icmp eq i32 %bf.clear1367, 65, !dbg !8004
  br i1 %cmp1368, label %land.lhs.true1370, label %if.end1413, !dbg !8005

land.lhs.true1370:                                ; preds = %if.else1365
  %549 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8006
  %u1371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %549, i32 0, i32 1, !dbg !8006
  %fld1372 = bitcast %union.u* %u1371 to [1 x %union.rtunion_def]*, !dbg !8006
  %arrayidx1373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1372, i64 0, i64 1, !dbg !8006
  %rt_rtx1374 = bitcast %union.rtunion_def* %arrayidx1373 to %struct.rtx_def**, !dbg !8006
  %550 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1374, align 8, !dbg !8006
  %551 = bitcast %struct.rtx_def* %550 to i32*, !dbg !8006
  %bf.load1375 = load i32, i32* %551, align 8, !dbg !8006
  %bf.clear1376 = and i32 %bf.load1375, 65535, !dbg !8006
  %cmp1377 = icmp eq i32 %bf.clear1376, 30, !dbg !8006
  br i1 %cmp1377, label %land.lhs.true1379, label %if.end1413, !dbg !8007

land.lhs.true1379:                                ; preds = %land.lhs.true1370
  %552 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8008
  %u1380 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %552, i32 0, i32 1, !dbg !8008
  %fld1381 = bitcast %union.u* %u1380 to [1 x %union.rtunion_def]*, !dbg !8008
  %arrayidx1382 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1381, i64 0, i64 1, !dbg !8008
  %rt_rtx1383 = bitcast %union.rtunion_def* %arrayidx1382 to %struct.rtx_def**, !dbg !8008
  %553 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1383, align 8, !dbg !8008
  %u1384 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %553, i32 0, i32 1, !dbg !8008
  %hwint1385 = bitcast %union.u* %u1384 to [1 x i64]*, !dbg !8008
  %arrayidx1386 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1385, i64 0, i64 0, !dbg !8008
  %554 = load i64, i64* %arrayidx1386, align 8, !dbg !8008
  %cmp1387 = icmp sge i64 %554, 0, !dbg !8009
  br i1 %cmp1387, label %land.lhs.true1389, label %if.end1413, !dbg !8010

land.lhs.true1389:                                ; preds = %land.lhs.true1379
  %555 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8011
  %u1390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %555, i32 0, i32 1, !dbg !8011
  %fld1391 = bitcast %union.u* %u1390 to [1 x %union.rtunion_def]*, !dbg !8011
  %arrayidx1392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1391, i64 0, i64 1, !dbg !8011
  %rt_rtx1393 = bitcast %union.rtunion_def* %arrayidx1392 to %struct.rtx_def**, !dbg !8011
  %556 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1393, align 8, !dbg !8011
  %u1394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %556, i32 0, i32 1, !dbg !8011
  %hwint1395 = bitcast %union.u* %u1394 to [1 x i64]*, !dbg !8011
  %arrayidx1396 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1395, i64 0, i64 0, !dbg !8011
  %557 = load i64, i64* %arrayidx1396, align 8, !dbg !8011
  %cmp1397 = icmp slt i64 %557, 64, !dbg !8012
  br i1 %cmp1397, label %if.then1399, label %if.end1413, !dbg !8013

if.then1399:                                      ; preds = %land.lhs.true1389
  %558 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8014
  %u1400 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %558, i32 0, i32 1, !dbg !8014
  %fld1401 = bitcast %union.u* %u1400 to [1 x %union.rtunion_def]*, !dbg !8014
  %arrayidx1402 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1401, i64 0, i64 1, !dbg !8014
  %rt_rtx1403 = bitcast %union.rtunion_def* %arrayidx1402 to %struct.rtx_def**, !dbg !8014
  %559 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1403, align 8, !dbg !8014
  %u1404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %559, i32 0, i32 1, !dbg !8014
  %hwint1405 = bitcast %union.u* %u1404 to [1 x i64]*, !dbg !8014
  %arrayidx1406 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1405, i64 0, i64 0, !dbg !8014
  %560 = load i64, i64* %arrayidx1406, align 8, !dbg !8014
  %shl1407 = shl i64 1, %560, !dbg !8016
  %sub1408 = sub nsw i64 0, %shl1407, !dbg !8017
  store i64 %sub1408, i64* %negcoeff1l, align 8, !dbg !8018
  store i64 -1, i64* %negcoeff1h, align 8, !dbg !8019
  %561 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8020
  %u1409 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %561, i32 0, i32 1, !dbg !8020
  %fld1410 = bitcast %union.u* %u1409 to [1 x %union.rtunion_def]*, !dbg !8020
  %arrayidx1411 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1410, i64 0, i64 0, !dbg !8020
  %rt_rtx1412 = bitcast %union.rtunion_def* %arrayidx1411 to %struct.rtx_def**, !dbg !8020
  %562 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1412, align 8, !dbg !8020
  store %struct.rtx_def* %562, %struct.rtx_def** %rhs1221, align 8, !dbg !8021
  br label %if.end1413, !dbg !8022

if.end1413:                                       ; preds = %if.then1399, %land.lhs.true1389, %land.lhs.true1379, %land.lhs.true1370, %if.else1365
  br label %if.end1414

if.end1414:                                       ; preds = %if.end1413, %if.then1341
  br label %if.end1415

if.end1415:                                       ; preds = %if.end1414, %if.then1322
  %563 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !8023
  %564 = load %struct.rtx_def*, %struct.rtx_def** %rhs1221, align 8, !dbg !8025
  %call1416 = call i32 @rtx_equal_p(%struct.rtx_def* %563, %struct.rtx_def* %564), !dbg !8026
  %tobool1417 = icmp ne i32 %call1416, 0, !dbg !8026
  br i1 %tobool1417, label %if.then1418, label %if.end1438, !dbg !8027

if.then1418:                                      ; preds = %if.end1415
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %orig1419, metadata !8028, metadata !DIExpression()), !dbg !8030
  %565 = load i32, i32* %mode.addr, align 4, !dbg !8031
  %566 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8031
  %567 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8031
  %call1420 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %565, %struct.rtx_def* %566, %struct.rtx_def* %567), !dbg !8031
  store %struct.rtx_def* %call1420, %struct.rtx_def** %orig1419, align 8, !dbg !8030
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %coeff1421, metadata !8032, metadata !DIExpression()), !dbg !8033
  call void @llvm.dbg.declare(metadata i64* %l1422, metadata !8034, metadata !DIExpression()), !dbg !8035
  call void @llvm.dbg.declare(metadata i64* %h1423, metadata !8036, metadata !DIExpression()), !dbg !8037
  call void @llvm.dbg.declare(metadata i8* %speed1424, metadata !8038, metadata !DIExpression()), !dbg !8039
  %568 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !8040
  %add.ptr1425 = getelementptr inbounds %struct.function, %struct.function* %568, i64 0, !dbg !8040
  %call1426 = call zeroext i8 @optimize_function_for_speed_p(%struct.function* %add.ptr1425), !dbg !8041
  store i8 %call1426, i8* %speed1424, align 1, !dbg !8039
  %569 = load i64, i64* %coeff0l1219, align 8, !dbg !8042
  %570 = load i64, i64* %coeff0h1218, align 8, !dbg !8042
  %571 = load i64, i64* %negcoeff1l, align 8, !dbg !8042
  %572 = load i64, i64* %negcoeff1h, align 8, !dbg !8042
  %call1427 = call i32 @add_double_with_sign(i64 %569, i64 %570, i64 %571, i64 %572, i64* %l1422, i64* %h1423, i8 zeroext 0), !dbg !8042
  %573 = load i64, i64* %l1422, align 8, !dbg !8043
  %574 = load i64, i64* %h1423, align 8, !dbg !8044
  %575 = load i32, i32* %mode.addr, align 4, !dbg !8045
  %call1428 = call %struct.rtx_def* @immed_double_const(i64 %573, i64 %574, i32 %575), !dbg !8046
  store %struct.rtx_def* %call1428, %struct.rtx_def** %coeff1421, align 8, !dbg !8047
  %576 = load i32, i32* %mode.addr, align 4, !dbg !8048
  %577 = load %struct.rtx_def*, %struct.rtx_def** %lhs1220, align 8, !dbg !8049
  %578 = load %struct.rtx_def*, %struct.rtx_def** %coeff1421, align 8, !dbg !8050
  %call1429 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %576, %struct.rtx_def* %577, %struct.rtx_def* %578), !dbg !8051
  store %struct.rtx_def* %call1429, %struct.rtx_def** %tem, align 8, !dbg !8052
  %579 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8053
  %580 = load i8, i8* %speed1424, align 1, !dbg !8054
  %call1430 = call i32 @rtx_cost(%struct.rtx_def* %579, i32 23, i8 zeroext %580), !dbg !8055
  %581 = load %struct.rtx_def*, %struct.rtx_def** %orig1419, align 8, !dbg !8056
  %582 = load i8, i8* %speed1424, align 1, !dbg !8057
  %call1431 = call i32 @rtx_cost(%struct.rtx_def* %581, i32 23, i8 zeroext %582), !dbg !8058
  %cmp1432 = icmp sle i32 %call1430, %call1431, !dbg !8059
  br i1 %cmp1432, label %cond.true1434, label %cond.false1435, !dbg !8055

cond.true1434:                                    ; preds = %if.then1418
  %583 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8060
  br label %cond.end1436, !dbg !8055

cond.false1435:                                   ; preds = %if.then1418
  br label %cond.end1436, !dbg !8055

cond.end1436:                                     ; preds = %cond.false1435, %cond.true1434
  %cond1437 = phi %struct.rtx_def* [ %583, %cond.true1434 ], [ null, %cond.false1435 ], !dbg !8055
  store %struct.rtx_def* %cond1437, %struct.rtx_def** %retval, align 8, !dbg !8061
  br label %return, !dbg !8061

if.end1438:                                       ; preds = %if.end1415
  br label %if.end1439, !dbg !8062

if.end1439:                                       ; preds = %if.end1438, %lor.lhs.false1211
  %584 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8063
  %585 = bitcast %struct.rtx_def* %584 to i32*, !dbg !8063
  %bf.load1440 = load i32, i32* %585, align 8, !dbg !8063
  %bf.clear1441 = and i32 %bf.load1440, 65535, !dbg !8063
  %cmp1442 = icmp eq i32 %bf.clear1441, 51, !dbg !8065
  br i1 %cmp1442, label %if.then1444, label %if.end1450, !dbg !8066

if.then1444:                                      ; preds = %if.end1439
  %586 = load i32, i32* %mode.addr, align 4, !dbg !8067
  %587 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8068
  %588 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8069
  %u1445 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %588, i32 0, i32 1, !dbg !8069
  %fld1446 = bitcast %union.u* %u1445 to [1 x %union.rtunion_def]*, !dbg !8069
  %arrayidx1447 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1446, i64 0, i64 0, !dbg !8069
  %rt_rtx1448 = bitcast %union.rtunion_def* %arrayidx1447 to %struct.rtx_def**, !dbg !8069
  %589 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1448, align 8, !dbg !8069
  %call1449 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %586, %struct.rtx_def* %587, %struct.rtx_def* %589), !dbg !8070
  store %struct.rtx_def* %call1449, %struct.rtx_def** %retval, align 8, !dbg !8071
  br label %return, !dbg !8071

if.end1450:                                       ; preds = %if.end1439
  %590 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8072
  %591 = bitcast %struct.rtx_def* %590 to i32*, !dbg !8072
  %bf.load1451 = load i32, i32* %591, align 8, !dbg !8072
  %bf.clear1452 = and i32 %bf.load1451, 65535, !dbg !8072
  %cmp1453 = icmp eq i32 %bf.clear1452, 51, !dbg !8074
  br i1 %cmp1453, label %land.lhs.true1455, label %if.end1475, !dbg !8075

land.lhs.true1455:                                ; preds = %if.end1450
  %592 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8076
  %593 = bitcast %struct.rtx_def* %592 to i32*, !dbg !8076
  %bf.load1456 = load i32, i32* %593, align 8, !dbg !8076
  %bf.clear1457 = and i32 %bf.load1456, 65535, !dbg !8076
  %cmp1458 = icmp eq i32 %bf.clear1457, 30, !dbg !8076
  br i1 %cmp1458, label %if.then1465, label %lor.lhs.false1460, !dbg !8077

lor.lhs.false1460:                                ; preds = %land.lhs.true1455
  %594 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8078
  %595 = bitcast %struct.rtx_def* %594 to i32*, !dbg !8078
  %bf.load1461 = load i32, i32* %595, align 8, !dbg !8078
  %bf.clear1462 = and i32 %bf.load1461, 65535, !dbg !8078
  %cmp1463 = icmp eq i32 %bf.clear1462, 32, !dbg !8079
  br i1 %cmp1463, label %if.then1465, label %if.end1475, !dbg !8080

if.then1465:                                      ; preds = %lor.lhs.false1460, %land.lhs.true1455
  %596 = load i32, i32* %mode.addr, align 4, !dbg !8081
  %597 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8083
  %598 = load i32, i32* %mode.addr, align 4, !dbg !8084
  %call1466 = call %struct.rtx_def* @simplify_unary_operation(i32 51, i32 %596, %struct.rtx_def* %597, i32 %598), !dbg !8085
  store %struct.rtx_def* %call1466, %struct.rtx_def** %tem, align 8, !dbg !8086
  %599 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8087
  %tobool1467 = icmp ne %struct.rtx_def* %599, null, !dbg !8087
  br i1 %tobool1467, label %if.then1468, label %if.end1474, !dbg !8089

if.then1468:                                      ; preds = %if.then1465
  %600 = load i32, i32* %mode.addr, align 4, !dbg !8090
  %601 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8091
  %602 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8092
  %u1469 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %602, i32 0, i32 1, !dbg !8092
  %fld1470 = bitcast %union.u* %u1469 to [1 x %union.rtunion_def]*, !dbg !8092
  %arrayidx1471 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1470, i64 0, i64 0, !dbg !8092
  %rt_rtx1472 = bitcast %union.rtunion_def* %arrayidx1471 to %struct.rtx_def**, !dbg !8092
  %603 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1472, align 8, !dbg !8092
  %call1473 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %600, %struct.rtx_def* %601, %struct.rtx_def* %603), !dbg !8093
  store %struct.rtx_def* %call1473, %struct.rtx_def** %retval, align 8, !dbg !8094
  br label %return, !dbg !8094

if.end1474:                                       ; preds = %if.then1465
  br label %if.end1475, !dbg !8095

if.end1475:                                       ; preds = %if.end1474, %lor.lhs.false1460, %if.end1450
  %604 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8096
  %605 = bitcast %struct.rtx_def* %604 to i32*, !dbg !8096
  %bf.load1476 = load i32, i32* %605, align 8, !dbg !8096
  %bf.clear1477 = and i32 %bf.load1476, 65535, !dbg !8096
  %cmp1478 = icmp eq i32 %bf.clear1477, 30, !dbg !8096
  br i1 %cmp1478, label %land.lhs.true1480, label %if.end1489, !dbg !8098

land.lhs.true1480:                                ; preds = %if.end1475
  %606 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8099
  %607 = bitcast %struct.rtx_def* %606 to i32*, !dbg !8099
  %bf.load1481 = load i32, i32* %607, align 8, !dbg !8099
  %bf.lshr1482 = lshr i32 %bf.load1481, 16, !dbg !8099
  %bf.clear1483 = and i32 %bf.lshr1482, 255, !dbg !8099
  %cmp1484 = icmp ne i32 %bf.clear1483, 0, !dbg !8100
  br i1 %cmp1484, label %if.then1486, label %if.end1489, !dbg !8101

if.then1486:                                      ; preds = %land.lhs.true1480
  %608 = load i32, i32* %mode.addr, align 4, !dbg !8102
  %609 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8103
  %610 = load i32, i32* %mode.addr, align 4, !dbg !8104
  %611 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8105
  %call1487 = call %struct.rtx_def* @neg_const_int(i32 %610, %struct.rtx_def* %611), !dbg !8106
  %call1488 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %608, %struct.rtx_def* %609, %struct.rtx_def* %call1487), !dbg !8107
  store %struct.rtx_def* %call1488, %struct.rtx_def** %retval, align 8, !dbg !8108
  br label %return, !dbg !8108

if.end1489:                                       ; preds = %land.lhs.true1480, %if.end1475
  %612 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8109
  %613 = bitcast %struct.rtx_def* %612 to i32*, !dbg !8109
  %bf.load1490 = load i32, i32* %613, align 8, !dbg !8109
  %bf.clear1491 = and i32 %bf.load1490, 65535, !dbg !8109
  %cmp1492 = icmp eq i32 %bf.clear1491, 61, !dbg !8111
  br i1 %cmp1492, label %if.then1494, label %if.end1537, !dbg !8112

if.then1494:                                      ; preds = %if.end1489
  %614 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8113
  %615 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8116
  %u1495 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %615, i32 0, i32 1, !dbg !8116
  %fld1496 = bitcast %union.u* %u1495 to [1 x %union.rtunion_def]*, !dbg !8116
  %arrayidx1497 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1496, i64 0, i64 0, !dbg !8116
  %rt_rtx1498 = bitcast %union.rtunion_def* %arrayidx1497 to %struct.rtx_def**, !dbg !8116
  %616 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1498, align 8, !dbg !8116
  %call1499 = call i32 @rtx_equal_p(%struct.rtx_def* %614, %struct.rtx_def* %616), !dbg !8117
  %tobool1500 = icmp ne i32 %call1499, 0, !dbg !8117
  br i1 %tobool1500, label %if.then1501, label %if.end1515, !dbg !8118

if.then1501:                                      ; preds = %if.then1494
  %617 = load i32, i32* %mode.addr, align 4, !dbg !8119
  %618 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8121
  %u1502 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %618, i32 0, i32 1, !dbg !8121
  %fld1503 = bitcast %union.u* %u1502 to [1 x %union.rtunion_def]*, !dbg !8121
  %arrayidx1504 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1503, i64 0, i64 1, !dbg !8121
  %rt_rtx1505 = bitcast %union.rtunion_def* %arrayidx1504 to %struct.rtx_def**, !dbg !8121
  %619 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1505, align 8, !dbg !8121
  %620 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8122
  %u1506 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %620, i32 0, i32 1, !dbg !8122
  %fld1507 = bitcast %union.u* %u1506 to [1 x %union.rtunion_def]*, !dbg !8122
  %arrayidx1508 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1507, i64 0, i64 1, !dbg !8122
  %rt_rtx1509 = bitcast %union.rtunion_def* %arrayidx1508 to %struct.rtx_def**, !dbg !8122
  %621 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1509, align 8, !dbg !8122
  %622 = bitcast %struct.rtx_def* %621 to i32*, !dbg !8122
  %bf.load1510 = load i32, i32* %622, align 8, !dbg !8122
  %bf.lshr1511 = lshr i32 %bf.load1510, 16, !dbg !8122
  %bf.clear1512 = and i32 %bf.lshr1511, 255, !dbg !8122
  %call1513 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %617, %struct.rtx_def* %619, i32 %bf.clear1512), !dbg !8123
  store %struct.rtx_def* %call1513, %struct.rtx_def** %tem, align 8, !dbg !8124
  %623 = load i32, i32* %mode.addr, align 4, !dbg !8125
  %624 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8126
  %625 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8127
  %call1514 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %623, %struct.rtx_def* %624, %struct.rtx_def* %625), !dbg !8128
  store %struct.rtx_def* %call1514, %struct.rtx_def** %retval, align 8, !dbg !8129
  br label %return, !dbg !8129

if.end1515:                                       ; preds = %if.then1494
  %626 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8130
  %627 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8132
  %u1516 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %627, i32 0, i32 1, !dbg !8132
  %fld1517 = bitcast %union.u* %u1516 to [1 x %union.rtunion_def]*, !dbg !8132
  %arrayidx1518 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1517, i64 0, i64 1, !dbg !8132
  %rt_rtx1519 = bitcast %union.rtunion_def* %arrayidx1518 to %struct.rtx_def**, !dbg !8132
  %628 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1519, align 8, !dbg !8132
  %call1520 = call i32 @rtx_equal_p(%struct.rtx_def* %626, %struct.rtx_def* %628), !dbg !8133
  %tobool1521 = icmp ne i32 %call1520, 0, !dbg !8133
  br i1 %tobool1521, label %if.then1522, label %if.end1536, !dbg !8134

if.then1522:                                      ; preds = %if.end1515
  %629 = load i32, i32* %mode.addr, align 4, !dbg !8135
  %630 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8137
  %u1523 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %630, i32 0, i32 1, !dbg !8137
  %fld1524 = bitcast %union.u* %u1523 to [1 x %union.rtunion_def]*, !dbg !8137
  %arrayidx1525 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1524, i64 0, i64 0, !dbg !8137
  %rt_rtx1526 = bitcast %union.rtunion_def* %arrayidx1525 to %struct.rtx_def**, !dbg !8137
  %631 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1526, align 8, !dbg !8137
  %632 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8138
  %u1527 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %632, i32 0, i32 1, !dbg !8138
  %fld1528 = bitcast %union.u* %u1527 to [1 x %union.rtunion_def]*, !dbg !8138
  %arrayidx1529 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1528, i64 0, i64 0, !dbg !8138
  %rt_rtx1530 = bitcast %union.rtunion_def* %arrayidx1529 to %struct.rtx_def**, !dbg !8138
  %633 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1530, align 8, !dbg !8138
  %634 = bitcast %struct.rtx_def* %633 to i32*, !dbg !8138
  %bf.load1531 = load i32, i32* %634, align 8, !dbg !8138
  %bf.lshr1532 = lshr i32 %bf.load1531, 16, !dbg !8138
  %bf.clear1533 = and i32 %bf.lshr1532, 255, !dbg !8138
  %call1534 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %629, %struct.rtx_def* %631, i32 %bf.clear1533), !dbg !8139
  store %struct.rtx_def* %call1534, %struct.rtx_def** %tem, align 8, !dbg !8140
  %635 = load i32, i32* %mode.addr, align 4, !dbg !8141
  %636 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8142
  %637 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8143
  %call1535 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %635, %struct.rtx_def* %636, %struct.rtx_def* %637), !dbg !8144
  store %struct.rtx_def* %call1535, %struct.rtx_def** %retval, align 8, !dbg !8145
  br label %return, !dbg !8145

if.end1536:                                       ; preds = %if.end1515
  br label %if.end1537, !dbg !8146

if.end1537:                                       ; preds = %if.end1536, %if.end1489
  %638 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !8147
  %639 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8149
  %cmp1538 = icmp eq %struct.rtx_def* %638, %639, !dbg !8150
  br i1 %cmp1538, label %land.lhs.true1540, label %if.end1552, !dbg !8151

land.lhs.true1540:                                ; preds = %if.end1537
  %640 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8152
  %641 = bitcast %struct.rtx_def* %640 to i32*, !dbg !8152
  %bf.load1541 = load i32, i32* %641, align 8, !dbg !8152
  %bf.clear1542 = and i32 %bf.load1541, 65535, !dbg !8152
  %idxprom1543 = sext i32 %bf.clear1542 to i64, !dbg !8152
  %arrayidx1544 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom1543, !dbg !8152
  %642 = load i32, i32* %arrayidx1544, align 4, !dbg !8152
  %and1545 = and i32 %642, -2, !dbg !8152
  %cmp1546 = icmp eq i32 %and1545, 0, !dbg !8152
  br i1 %cmp1546, label %land.lhs.true1548, label %if.end1552, !dbg !8153

land.lhs.true1548:                                ; preds = %land.lhs.true1540
  %643 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8154
  %644 = load i32, i32* %mode.addr, align 4, !dbg !8155
  %call1549 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %643, i32 %644), !dbg !8156
  store %struct.rtx_def* %call1549, %struct.rtx_def** %reversed, align 8, !dbg !8157
  %tobool1550 = icmp ne %struct.rtx_def* %call1549, null, !dbg !8157
  br i1 %tobool1550, label %if.then1551, label %if.end1552, !dbg !8158

if.then1551:                                      ; preds = %land.lhs.true1548
  %645 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8, !dbg !8159
  store %struct.rtx_def* %645, %struct.rtx_def** %retval, align 8, !dbg !8160
  br label %return, !dbg !8160

if.end1552:                                       ; preds = %land.lhs.true1548, %land.lhs.true1540, %if.end1537
  %646 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1553 = zext i32 %646 to i64, !dbg !8161
  %arrayidx1554 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1553, !dbg !8161
  %647 = load i8, i8* %arrayidx1554, align 1, !dbg !8161
  %conv1555 = zext i8 %647 to i32, !dbg !8161
  %cmp1556 = icmp eq i32 %conv1555, 8, !dbg !8161
  br i1 %cmp1556, label %land.lhs.true1576, label %lor.lhs.false1558, !dbg !8161

lor.lhs.false1558:                                ; preds = %if.end1552
  %648 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1559 = zext i32 %648 to i64, !dbg !8161
  %arrayidx1560 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1559, !dbg !8161
  %649 = load i8, i8* %arrayidx1560, align 1, !dbg !8161
  %conv1561 = zext i8 %649 to i32, !dbg !8161
  %cmp1562 = icmp eq i32 %conv1561, 9, !dbg !8161
  br i1 %cmp1562, label %land.lhs.true1576, label %lor.lhs.false1564, !dbg !8161

lor.lhs.false1564:                                ; preds = %lor.lhs.false1558
  %650 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1565 = zext i32 %650 to i64, !dbg !8161
  %arrayidx1566 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1565, !dbg !8161
  %651 = load i8, i8* %arrayidx1566, align 1, !dbg !8161
  %conv1567 = zext i8 %651 to i32, !dbg !8161
  %cmp1568 = icmp eq i32 %conv1567, 11, !dbg !8161
  br i1 %cmp1568, label %land.lhs.true1576, label %lor.lhs.false1570, !dbg !8161

lor.lhs.false1570:                                ; preds = %lor.lhs.false1564
  %652 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1571 = zext i32 %652 to i64, !dbg !8161
  %arrayidx1572 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1571, !dbg !8161
  %653 = load i8, i8* %arrayidx1572, align 1, !dbg !8161
  %conv1573 = zext i8 %653 to i32, !dbg !8161
  %cmp1574 = icmp eq i32 %conv1573, 17, !dbg !8161
  br i1 %cmp1574, label %land.lhs.true1576, label %land.lhs.true1650, !dbg !8161

land.lhs.true1576:                                ; preds = %lor.lhs.false1570, %lor.lhs.false1564, %lor.lhs.false1558, %if.end1552
  %654 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1577 = zext i32 %654 to i64, !dbg !8161
  %arrayidx1578 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1577, !dbg !8161
  %655 = load i8, i8* %arrayidx1578, align 1, !dbg !8161
  %conv1579 = zext i8 %655 to i32, !dbg !8161
  %cmp1580 = icmp eq i32 %conv1579, 8, !dbg !8161
  br i1 %cmp1580, label %cond.true1588, label %lor.lhs.false1582, !dbg !8161

lor.lhs.false1582:                                ; preds = %land.lhs.true1576
  %656 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1583 = zext i32 %656 to i64, !dbg !8161
  %arrayidx1584 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1583, !dbg !8161
  %657 = load i8, i8* %arrayidx1584, align 1, !dbg !8161
  %conv1585 = zext i8 %657 to i32, !dbg !8161
  %cmp1586 = icmp eq i32 %conv1585, 9, !dbg !8161
  br i1 %cmp1586, label %cond.true1588, label %cond.false1589, !dbg !8161

cond.true1588:                                    ; preds = %lor.lhs.false1582, %land.lhs.true1576
  %658 = load i32, i32* %mode.addr, align 4, !dbg !8161
  br label %cond.end1593, !dbg !8161

cond.false1589:                                   ; preds = %lor.lhs.false1582
  %659 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1590 = zext i32 %659 to i64, !dbg !8161
  %arrayidx1591 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1590, !dbg !8161
  %660 = load i8, i8* %arrayidx1591, align 1, !dbg !8161
  %conv1592 = zext i8 %660 to i32, !dbg !8161
  br label %cond.end1593, !dbg !8161

cond.end1593:                                     ; preds = %cond.false1589, %cond.true1588
  %cond1594 = phi i32 [ %658, %cond.true1588 ], [ %conv1592, %cond.false1589 ], !dbg !8161
  %idxprom1595 = zext i32 %cond1594 to i64, !dbg !8161
  %arrayidx1596 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1595, !dbg !8161
  %661 = load i8, i8* %arrayidx1596, align 1, !dbg !8161
  %conv1597 = zext i8 %661 to i32, !dbg !8161
  %cmp1598 = icmp eq i32 %conv1597, 9, !dbg !8161
  br i1 %cmp1598, label %cond.true1600, label %cond.false1621, !dbg !8161

cond.true1600:                                    ; preds = %cond.end1593
  %662 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1601 = zext i32 %662 to i64, !dbg !8161
  %arrayidx1602 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1601, !dbg !8161
  %663 = load i8, i8* %arrayidx1602, align 1, !dbg !8161
  %conv1603 = zext i8 %663 to i32, !dbg !8161
  %cmp1604 = icmp eq i32 %conv1603, 8, !dbg !8161
  br i1 %cmp1604, label %cond.true1612, label %lor.lhs.false1606, !dbg !8161

lor.lhs.false1606:                                ; preds = %cond.true1600
  %664 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1607 = zext i32 %664 to i64, !dbg !8161
  %arrayidx1608 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1607, !dbg !8161
  %665 = load i8, i8* %arrayidx1608, align 1, !dbg !8161
  %conv1609 = zext i8 %665 to i32, !dbg !8161
  %cmp1610 = icmp eq i32 %conv1609, 9, !dbg !8161
  br i1 %cmp1610, label %cond.true1612, label %cond.false1613, !dbg !8161

cond.true1612:                                    ; preds = %lor.lhs.false1606, %cond.true1600
  %666 = load i32, i32* %mode.addr, align 4, !dbg !8161
  br label %cond.end1617, !dbg !8161

cond.false1613:                                   ; preds = %lor.lhs.false1606
  %667 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1614 = zext i32 %667 to i64, !dbg !8161
  %arrayidx1615 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1614, !dbg !8161
  %668 = load i8, i8* %arrayidx1615, align 1, !dbg !8161
  %conv1616 = zext i8 %668 to i32, !dbg !8161
  br label %cond.end1617, !dbg !8161

cond.end1617:                                     ; preds = %cond.false1613, %cond.true1612
  %cond1618 = phi i32 [ %666, %cond.true1612 ], [ %conv1616, %cond.false1613 ], !dbg !8161
  %sub1619 = sub i32 %cond1618, 42, !dbg !8161
  %add1620 = add i32 %sub1619, 4, !dbg !8161
  br label %cond.end1641, !dbg !8161

cond.false1621:                                   ; preds = %cond.end1593
  %669 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1622 = zext i32 %669 to i64, !dbg !8161
  %arrayidx1623 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1622, !dbg !8161
  %670 = load i8, i8* %arrayidx1623, align 1, !dbg !8161
  %conv1624 = zext i8 %670 to i32, !dbg !8161
  %cmp1625 = icmp eq i32 %conv1624, 8, !dbg !8161
  br i1 %cmp1625, label %cond.true1633, label %lor.lhs.false1627, !dbg !8161

lor.lhs.false1627:                                ; preds = %cond.false1621
  %671 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1628 = zext i32 %671 to i64, !dbg !8161
  %arrayidx1629 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1628, !dbg !8161
  %672 = load i8, i8* %arrayidx1629, align 1, !dbg !8161
  %conv1630 = zext i8 %672 to i32, !dbg !8161
  %cmp1631 = icmp eq i32 %conv1630, 9, !dbg !8161
  br i1 %cmp1631, label %cond.true1633, label %cond.false1634, !dbg !8161

cond.true1633:                                    ; preds = %lor.lhs.false1627, %cond.false1621
  %673 = load i32, i32* %mode.addr, align 4, !dbg !8161
  br label %cond.end1638, !dbg !8161

cond.false1634:                                   ; preds = %lor.lhs.false1627
  %674 = load i32, i32* %mode.addr, align 4, !dbg !8161
  %idxprom1635 = zext i32 %674 to i64, !dbg !8161
  %arrayidx1636 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1635, !dbg !8161
  %675 = load i8, i8* %arrayidx1636, align 1, !dbg !8161
  %conv1637 = zext i8 %675 to i32, !dbg !8161
  br label %cond.end1638, !dbg !8161

cond.end1638:                                     ; preds = %cond.false1634, %cond.true1633
  %cond1639 = phi i32 [ %673, %cond.true1633 ], [ %conv1637, %cond.false1634 ], !dbg !8161
  %sub1640 = sub i32 %cond1639, 38, !dbg !8161
  br label %cond.end1641, !dbg !8161

cond.end1641:                                     ; preds = %cond.end1638, %cond.end1617
  %cond1642 = phi i32 [ %add1620, %cond.end1617 ], [ %sub1640, %cond.end1638 ], !dbg !8161
  %idxprom1643 = zext i32 %cond1642 to i64, !dbg !8161
  %arrayidx1644 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1643, !dbg !8161
  %676 = load %struct.real_format*, %struct.real_format** %arrayidx1644, align 8, !dbg !8161
  %has_sign_dependent_rounding1645 = getelementptr inbounds %struct.real_format, %struct.real_format* %676, i32 0, i32 10, !dbg !8161
  %677 = load i8, i8* %has_sign_dependent_rounding1645, align 1, !dbg !8161
  %conv1646 = zext i8 %677 to i32, !dbg !8161
  %tobool1647 = icmp ne i32 %conv1646, 0, !dbg !8161
  br i1 %tobool1647, label %land.lhs.true1648, label %land.lhs.true1650, !dbg !8161

land.lhs.true1648:                                ; preds = %cond.end1641
  %678 = load i32, i32* @flag_rounding_math, align 4, !dbg !8161
  %tobool1649 = icmp ne i32 %678, 0, !dbg !8161
  br i1 %tobool1649, label %if.end1681, label %land.lhs.true1650, !dbg !8163

land.lhs.true1650:                                ; preds = %land.lhs.true1648, %cond.end1641, %lor.lhs.false1570
  %679 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8164
  %680 = bitcast %struct.rtx_def* %679 to i32*, !dbg !8164
  %bf.load1651 = load i32, i32* %680, align 8, !dbg !8164
  %bf.clear1652 = and i32 %bf.load1651, 65535, !dbg !8164
  %cmp1653 = icmp eq i32 %bf.clear1652, 52, !dbg !8165
  br i1 %cmp1653, label %land.lhs.true1655, label %if.end1681, !dbg !8166

land.lhs.true1655:                                ; preds = %land.lhs.true1650
  %681 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8167
  %u1656 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %681, i32 0, i32 1, !dbg !8167
  %fld1657 = bitcast %union.u* %u1656 to [1 x %union.rtunion_def]*, !dbg !8167
  %arrayidx1658 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1657, i64 0, i64 0, !dbg !8167
  %rt_rtx1659 = bitcast %union.rtunion_def* %arrayidx1658 to %struct.rtx_def**, !dbg !8167
  %682 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1659, align 8, !dbg !8167
  %683 = bitcast %struct.rtx_def* %682 to i32*, !dbg !8167
  %bf.load1660 = load i32, i32* %683, align 8, !dbg !8167
  %bf.clear1661 = and i32 %bf.load1660, 65535, !dbg !8167
  %cmp1662 = icmp eq i32 %bf.clear1661, 51, !dbg !8168
  br i1 %cmp1662, label %if.then1664, label %if.end1681, !dbg !8169

if.then1664:                                      ; preds = %land.lhs.true1655
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in11665, metadata !8170, metadata !DIExpression()), !dbg !8172
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in21666, metadata !8173, metadata !DIExpression()), !dbg !8174
  %684 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8175
  %u1667 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %684, i32 0, i32 1, !dbg !8175
  %fld1668 = bitcast %union.u* %u1667 to [1 x %union.rtunion_def]*, !dbg !8175
  %arrayidx1669 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1668, i64 0, i64 0, !dbg !8175
  %rt_rtx1670 = bitcast %union.rtunion_def* %arrayidx1669 to %struct.rtx_def**, !dbg !8175
  %685 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1670, align 8, !dbg !8175
  %u1671 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %685, i32 0, i32 1, !dbg !8175
  %fld1672 = bitcast %union.u* %u1671 to [1 x %union.rtunion_def]*, !dbg !8175
  %arrayidx1673 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1672, i64 0, i64 0, !dbg !8175
  %rt_rtx1674 = bitcast %union.rtunion_def* %arrayidx1673 to %struct.rtx_def**, !dbg !8175
  %686 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1674, align 8, !dbg !8175
  store %struct.rtx_def* %686, %struct.rtx_def** %in11665, align 8, !dbg !8176
  %687 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8177
  %u1675 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %687, i32 0, i32 1, !dbg !8177
  %fld1676 = bitcast %union.u* %u1675 to [1 x %union.rtunion_def]*, !dbg !8177
  %arrayidx1677 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1676, i64 0, i64 1, !dbg !8177
  %rt_rtx1678 = bitcast %union.rtunion_def* %arrayidx1677 to %struct.rtx_def**, !dbg !8177
  %688 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1678, align 8, !dbg !8177
  store %struct.rtx_def* %688, %struct.rtx_def** %in21666, align 8, !dbg !8178
  %689 = load i32, i32* %mode.addr, align 4, !dbg !8179
  %690 = load i32, i32* %mode.addr, align 4, !dbg !8180
  %691 = load %struct.rtx_def*, %struct.rtx_def** %in11665, align 8, !dbg !8181
  %692 = load %struct.rtx_def*, %struct.rtx_def** %in21666, align 8, !dbg !8182
  %call1679 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %690, %struct.rtx_def* %691, %struct.rtx_def* %692), !dbg !8183
  %693 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8184
  %call1680 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %689, %struct.rtx_def* %call1679, %struct.rtx_def* %693), !dbg !8185
  store %struct.rtx_def* %call1680, %struct.rtx_def** %retval, align 8, !dbg !8186
  br label %return, !dbg !8186

if.end1681:                                       ; preds = %land.lhs.true1655, %land.lhs.true1650, %land.lhs.true1648
  %694 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1682 = zext i32 %694 to i64, !dbg !8187
  %arrayidx1683 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1682, !dbg !8187
  %695 = load i8, i8* %arrayidx1683, align 1, !dbg !8187
  %conv1684 = zext i8 %695 to i32, !dbg !8187
  %cmp1685 = icmp eq i32 %conv1684, 8, !dbg !8187
  br i1 %cmp1685, label %land.lhs.true1705, label %lor.lhs.false1687, !dbg !8187

lor.lhs.false1687:                                ; preds = %if.end1681
  %696 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1688 = zext i32 %696 to i64, !dbg !8187
  %arrayidx1689 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1688, !dbg !8187
  %697 = load i8, i8* %arrayidx1689, align 1, !dbg !8187
  %conv1690 = zext i8 %697 to i32, !dbg !8187
  %cmp1691 = icmp eq i32 %conv1690, 9, !dbg !8187
  br i1 %cmp1691, label %land.lhs.true1705, label %lor.lhs.false1693, !dbg !8187

lor.lhs.false1693:                                ; preds = %lor.lhs.false1687
  %698 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1694 = zext i32 %698 to i64, !dbg !8187
  %arrayidx1695 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1694, !dbg !8187
  %699 = load i8, i8* %arrayidx1695, align 1, !dbg !8187
  %conv1696 = zext i8 %699 to i32, !dbg !8187
  %cmp1697 = icmp eq i32 %conv1696, 11, !dbg !8187
  br i1 %cmp1697, label %land.lhs.true1705, label %lor.lhs.false1699, !dbg !8187

lor.lhs.false1699:                                ; preds = %lor.lhs.false1693
  %700 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1700 = zext i32 %700 to i64, !dbg !8187
  %arrayidx1701 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1700, !dbg !8187
  %701 = load i8, i8* %arrayidx1701, align 1, !dbg !8187
  %conv1702 = zext i8 %701 to i32, !dbg !8187
  %cmp1703 = icmp eq i32 %conv1702, 17, !dbg !8187
  br i1 %cmp1703, label %land.lhs.true1705, label %land.lhs.true1779, !dbg !8187

land.lhs.true1705:                                ; preds = %lor.lhs.false1699, %lor.lhs.false1693, %lor.lhs.false1687, %if.end1681
  %702 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1706 = zext i32 %702 to i64, !dbg !8187
  %arrayidx1707 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1706, !dbg !8187
  %703 = load i8, i8* %arrayidx1707, align 1, !dbg !8187
  %conv1708 = zext i8 %703 to i32, !dbg !8187
  %cmp1709 = icmp eq i32 %conv1708, 8, !dbg !8187
  br i1 %cmp1709, label %cond.true1717, label %lor.lhs.false1711, !dbg !8187

lor.lhs.false1711:                                ; preds = %land.lhs.true1705
  %704 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1712 = zext i32 %704 to i64, !dbg !8187
  %arrayidx1713 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1712, !dbg !8187
  %705 = load i8, i8* %arrayidx1713, align 1, !dbg !8187
  %conv1714 = zext i8 %705 to i32, !dbg !8187
  %cmp1715 = icmp eq i32 %conv1714, 9, !dbg !8187
  br i1 %cmp1715, label %cond.true1717, label %cond.false1718, !dbg !8187

cond.true1717:                                    ; preds = %lor.lhs.false1711, %land.lhs.true1705
  %706 = load i32, i32* %mode.addr, align 4, !dbg !8187
  br label %cond.end1722, !dbg !8187

cond.false1718:                                   ; preds = %lor.lhs.false1711
  %707 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1719 = zext i32 %707 to i64, !dbg !8187
  %arrayidx1720 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1719, !dbg !8187
  %708 = load i8, i8* %arrayidx1720, align 1, !dbg !8187
  %conv1721 = zext i8 %708 to i32, !dbg !8187
  br label %cond.end1722, !dbg !8187

cond.end1722:                                     ; preds = %cond.false1718, %cond.true1717
  %cond1723 = phi i32 [ %706, %cond.true1717 ], [ %conv1721, %cond.false1718 ], !dbg !8187
  %idxprom1724 = zext i32 %cond1723 to i64, !dbg !8187
  %arrayidx1725 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1724, !dbg !8187
  %709 = load i8, i8* %arrayidx1725, align 1, !dbg !8187
  %conv1726 = zext i8 %709 to i32, !dbg !8187
  %cmp1727 = icmp eq i32 %conv1726, 9, !dbg !8187
  br i1 %cmp1727, label %cond.true1729, label %cond.false1750, !dbg !8187

cond.true1729:                                    ; preds = %cond.end1722
  %710 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1730 = zext i32 %710 to i64, !dbg !8187
  %arrayidx1731 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1730, !dbg !8187
  %711 = load i8, i8* %arrayidx1731, align 1, !dbg !8187
  %conv1732 = zext i8 %711 to i32, !dbg !8187
  %cmp1733 = icmp eq i32 %conv1732, 8, !dbg !8187
  br i1 %cmp1733, label %cond.true1741, label %lor.lhs.false1735, !dbg !8187

lor.lhs.false1735:                                ; preds = %cond.true1729
  %712 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1736 = zext i32 %712 to i64, !dbg !8187
  %arrayidx1737 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1736, !dbg !8187
  %713 = load i8, i8* %arrayidx1737, align 1, !dbg !8187
  %conv1738 = zext i8 %713 to i32, !dbg !8187
  %cmp1739 = icmp eq i32 %conv1738, 9, !dbg !8187
  br i1 %cmp1739, label %cond.true1741, label %cond.false1742, !dbg !8187

cond.true1741:                                    ; preds = %lor.lhs.false1735, %cond.true1729
  %714 = load i32, i32* %mode.addr, align 4, !dbg !8187
  br label %cond.end1746, !dbg !8187

cond.false1742:                                   ; preds = %lor.lhs.false1735
  %715 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1743 = zext i32 %715 to i64, !dbg !8187
  %arrayidx1744 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1743, !dbg !8187
  %716 = load i8, i8* %arrayidx1744, align 1, !dbg !8187
  %conv1745 = zext i8 %716 to i32, !dbg !8187
  br label %cond.end1746, !dbg !8187

cond.end1746:                                     ; preds = %cond.false1742, %cond.true1741
  %cond1747 = phi i32 [ %714, %cond.true1741 ], [ %conv1745, %cond.false1742 ], !dbg !8187
  %sub1748 = sub i32 %cond1747, 42, !dbg !8187
  %add1749 = add i32 %sub1748, 4, !dbg !8187
  br label %cond.end1770, !dbg !8187

cond.false1750:                                   ; preds = %cond.end1722
  %717 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1751 = zext i32 %717 to i64, !dbg !8187
  %arrayidx1752 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1751, !dbg !8187
  %718 = load i8, i8* %arrayidx1752, align 1, !dbg !8187
  %conv1753 = zext i8 %718 to i32, !dbg !8187
  %cmp1754 = icmp eq i32 %conv1753, 8, !dbg !8187
  br i1 %cmp1754, label %cond.true1762, label %lor.lhs.false1756, !dbg !8187

lor.lhs.false1756:                                ; preds = %cond.false1750
  %719 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1757 = zext i32 %719 to i64, !dbg !8187
  %arrayidx1758 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1757, !dbg !8187
  %720 = load i8, i8* %arrayidx1758, align 1, !dbg !8187
  %conv1759 = zext i8 %720 to i32, !dbg !8187
  %cmp1760 = icmp eq i32 %conv1759, 9, !dbg !8187
  br i1 %cmp1760, label %cond.true1762, label %cond.false1763, !dbg !8187

cond.true1762:                                    ; preds = %lor.lhs.false1756, %cond.false1750
  %721 = load i32, i32* %mode.addr, align 4, !dbg !8187
  br label %cond.end1767, !dbg !8187

cond.false1763:                                   ; preds = %lor.lhs.false1756
  %722 = load i32, i32* %mode.addr, align 4, !dbg !8187
  %idxprom1764 = zext i32 %722 to i64, !dbg !8187
  %arrayidx1765 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1764, !dbg !8187
  %723 = load i8, i8* %arrayidx1765, align 1, !dbg !8187
  %conv1766 = zext i8 %723 to i32, !dbg !8187
  br label %cond.end1767, !dbg !8187

cond.end1767:                                     ; preds = %cond.false1763, %cond.true1762
  %cond1768 = phi i32 [ %721, %cond.true1762 ], [ %conv1766, %cond.false1763 ], !dbg !8187
  %sub1769 = sub i32 %cond1768, 38, !dbg !8187
  br label %cond.end1770, !dbg !8187

cond.end1770:                                     ; preds = %cond.end1767, %cond.end1746
  %cond1771 = phi i32 [ %add1749, %cond.end1746 ], [ %sub1769, %cond.end1767 ], !dbg !8187
  %idxprom1772 = zext i32 %cond1771 to i64, !dbg !8187
  %arrayidx1773 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1772, !dbg !8187
  %724 = load %struct.real_format*, %struct.real_format** %arrayidx1773, align 8, !dbg !8187
  %has_sign_dependent_rounding1774 = getelementptr inbounds %struct.real_format, %struct.real_format* %724, i32 0, i32 10, !dbg !8187
  %725 = load i8, i8* %has_sign_dependent_rounding1774, align 1, !dbg !8187
  %conv1775 = zext i8 %725 to i32, !dbg !8187
  %tobool1776 = icmp ne i32 %conv1775, 0, !dbg !8187
  br i1 %tobool1776, label %land.lhs.true1777, label %land.lhs.true1779, !dbg !8187

land.lhs.true1777:                                ; preds = %cond.end1770
  %726 = load i32, i32* @flag_rounding_math, align 4, !dbg !8187
  %tobool1778 = icmp ne i32 %726, 0, !dbg !8187
  br i1 %tobool1778, label %if.end1807, label %land.lhs.true1779, !dbg !8189

land.lhs.true1779:                                ; preds = %land.lhs.true1777, %cond.end1770, %lor.lhs.false1699
  %727 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8190
  %728 = bitcast %struct.rtx_def* %727 to i32*, !dbg !8190
  %bf.load1780 = load i32, i32* %728, align 8, !dbg !8190
  %bf.clear1781 = and i32 %bf.load1780, 65535, !dbg !8190
  %cmp1782 = icmp eq i32 %bf.clear1781, 52, !dbg !8191
  br i1 %cmp1782, label %land.lhs.true1784, label %if.end1807, !dbg !8192

land.lhs.true1784:                                ; preds = %land.lhs.true1779
  %729 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8193
  %730 = bitcast %struct.rtx_def* %729 to i32*, !dbg !8193
  %bf.load1785 = load i32, i32* %730, align 8, !dbg !8193
  %bf.clear1786 = and i32 %bf.load1785, 65535, !dbg !8193
  %cmp1787 = icmp eq i32 %bf.clear1786, 51, !dbg !8194
  br i1 %cmp1787, label %if.then1789, label %if.end1807, !dbg !8195

if.then1789:                                      ; preds = %land.lhs.true1784
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in11790, metadata !8196, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in21791, metadata !8199, metadata !DIExpression()), !dbg !8200
  %731 = load i32, i32* %mode.addr, align 4, !dbg !8201
  %732 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8202
  %u1792 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %732, i32 0, i32 1, !dbg !8202
  %fld1793 = bitcast %union.u* %u1792 to [1 x %union.rtunion_def]*, !dbg !8202
  %arrayidx1794 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1793, i64 0, i64 0, !dbg !8202
  %rt_rtx1795 = bitcast %union.rtunion_def* %arrayidx1794 to %struct.rtx_def**, !dbg !8202
  %733 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1795, align 8, !dbg !8202
  %734 = load i32, i32* %mode.addr, align 4, !dbg !8203
  %call1796 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %731, %struct.rtx_def* %733, i32 %734), !dbg !8204
  store %struct.rtx_def* %call1796, %struct.rtx_def** %in11790, align 8, !dbg !8205
  %735 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8206
  %u1797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %735, i32 0, i32 1, !dbg !8206
  %fld1798 = bitcast %union.u* %u1797 to [1 x %union.rtunion_def]*, !dbg !8206
  %arrayidx1799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1798, i64 0, i64 1, !dbg !8206
  %rt_rtx1800 = bitcast %union.rtunion_def* %arrayidx1799 to %struct.rtx_def**, !dbg !8206
  %736 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1800, align 8, !dbg !8206
  store %struct.rtx_def* %736, %struct.rtx_def** %in21791, align 8, !dbg !8207
  %737 = load i32, i32* %mode.addr, align 4, !dbg !8208
  %738 = load i32, i32* %mode.addr, align 4, !dbg !8209
  %739 = load %struct.rtx_def*, %struct.rtx_def** %in11790, align 8, !dbg !8210
  %740 = load %struct.rtx_def*, %struct.rtx_def** %in21791, align 8, !dbg !8211
  %call1801 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %738, %struct.rtx_def* %739, %struct.rtx_def* %740), !dbg !8212
  %741 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8213
  %u1802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %741, i32 0, i32 1, !dbg !8213
  %fld1803 = bitcast %union.u* %u1802 to [1 x %union.rtunion_def]*, !dbg !8213
  %arrayidx1804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1803, i64 0, i64 0, !dbg !8213
  %rt_rtx1805 = bitcast %union.rtunion_def* %arrayidx1804 to %struct.rtx_def**, !dbg !8213
  %742 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1805, align 8, !dbg !8213
  %call1806 = call %struct.rtx_def* @simplify_gen_binary(i32 50, i32 %737, %struct.rtx_def* %call1801, %struct.rtx_def* %742), !dbg !8214
  store %struct.rtx_def* %call1806, %struct.rtx_def** %retval, align 8, !dbg !8215
  br label %return, !dbg !8215

if.end1807:                                       ; preds = %land.lhs.true1784, %land.lhs.true1779, %land.lhs.true1777
  %743 = load i32, i32* %mode.addr, align 4, !dbg !8216
  %idxprom1808 = zext i32 %743 to i64, !dbg !8216
  %arrayidx1809 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1808, !dbg !8216
  %744 = load i8, i8* %arrayidx1809, align 1, !dbg !8216
  %conv1810 = zext i8 %744 to i32, !dbg !8216
  %cmp1811 = icmp eq i32 %conv1810, 2, !dbg !8216
  br i1 %cmp1811, label %land.lhs.true1831, label %lor.lhs.false1813, !dbg !8216

lor.lhs.false1813:                                ; preds = %if.end1807
  %745 = load i32, i32* %mode.addr, align 4, !dbg !8216
  %idxprom1814 = zext i32 %745 to i64, !dbg !8216
  %arrayidx1815 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1814, !dbg !8216
  %746 = load i8, i8* %arrayidx1815, align 1, !dbg !8216
  %conv1816 = zext i8 %746 to i32, !dbg !8216
  %cmp1817 = icmp eq i32 %conv1816, 3, !dbg !8216
  br i1 %cmp1817, label %land.lhs.true1831, label %lor.lhs.false1819, !dbg !8216

lor.lhs.false1819:                                ; preds = %lor.lhs.false1813
  %747 = load i32, i32* %mode.addr, align 4, !dbg !8216
  %idxprom1820 = zext i32 %747 to i64, !dbg !8216
  %arrayidx1821 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1820, !dbg !8216
  %748 = load i8, i8* %arrayidx1821, align 1, !dbg !8216
  %conv1822 = zext i8 %748 to i32, !dbg !8216
  %cmp1823 = icmp eq i32 %conv1822, 10, !dbg !8216
  br i1 %cmp1823, label %land.lhs.true1831, label %lor.lhs.false1825, !dbg !8216

lor.lhs.false1825:                                ; preds = %lor.lhs.false1819
  %749 = load i32, i32* %mode.addr, align 4, !dbg !8216
  %idxprom1826 = zext i32 %749 to i64, !dbg !8216
  %arrayidx1827 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1826, !dbg !8216
  %750 = load i8, i8* %arrayidx1827, align 1, !dbg !8216
  %conv1828 = zext i8 %750 to i32, !dbg !8216
  %cmp1829 = icmp eq i32 %conv1828, 12, !dbg !8216
  br i1 %cmp1829, label %land.lhs.true1831, label %if.end1844, !dbg !8218

land.lhs.true1831:                                ; preds = %lor.lhs.false1825, %lor.lhs.false1819, %lor.lhs.false1813, %if.end1807
  %751 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8219
  %call1832 = call zeroext i8 @plus_minus_operand_p(%struct.rtx_def* %751), !dbg !8220
  %conv1833 = zext i8 %call1832 to i32, !dbg !8220
  %tobool1834 = icmp ne i32 %conv1833, 0, !dbg !8220
  br i1 %tobool1834, label %land.lhs.true1839, label %lor.lhs.false1835, !dbg !8221

lor.lhs.false1835:                                ; preds = %land.lhs.true1831
  %752 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8222
  %call1836 = call zeroext i8 @plus_minus_operand_p(%struct.rtx_def* %752), !dbg !8223
  %conv1837 = zext i8 %call1836 to i32, !dbg !8223
  %tobool1838 = icmp ne i32 %conv1837, 0, !dbg !8223
  br i1 %tobool1838, label %land.lhs.true1839, label %if.end1844, !dbg !8224

land.lhs.true1839:                                ; preds = %lor.lhs.false1835, %land.lhs.true1831
  %753 = load i32, i32* %code.addr, align 4, !dbg !8225
  %754 = load i32, i32* %mode.addr, align 4, !dbg !8226
  %755 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8227
  %756 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8228
  %call1840 = call %struct.rtx_def* @simplify_plus_minus(i32 %753, i32 %754, %struct.rtx_def* %755, %struct.rtx_def* %756), !dbg !8229
  store %struct.rtx_def* %call1840, %struct.rtx_def** %tem, align 8, !dbg !8230
  %cmp1841 = icmp ne %struct.rtx_def* %call1840, null, !dbg !8231
  br i1 %cmp1841, label %if.then1843, label %if.end1844, !dbg !8232

if.then1843:                                      ; preds = %land.lhs.true1839
  %757 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8233
  store %struct.rtx_def* %757, %struct.rtx_def** %retval, align 8, !dbg !8234
  br label %return, !dbg !8234

if.end1844:                                       ; preds = %land.lhs.true1839, %lor.lhs.false1835, %lor.lhs.false1825
  br label %sw.epilog5879, !dbg !8235

sw.bb1845:                                        ; preds = %entry
  %758 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8236
  %759 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8238
  %cmp1846 = icmp eq %struct.rtx_def* %758, %759, !dbg !8239
  br i1 %cmp1846, label %if.then1848, label %if.end1850, !dbg !8240

if.then1848:                                      ; preds = %sw.bb1845
  %760 = load i32, i32* %mode.addr, align 4, !dbg !8241
  %761 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8242
  %762 = load i32, i32* %mode.addr, align 4, !dbg !8243
  %call1849 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %760, %struct.rtx_def* %761, i32 %762), !dbg !8244
  store %struct.rtx_def* %call1849, %struct.rtx_def** %retval, align 8, !dbg !8245
  br label %return, !dbg !8245

if.end1850:                                       ; preds = %sw.bb1845
  %763 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1851 = zext i32 %763 to i64, !dbg !8246
  %arrayidx1852 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1851, !dbg !8246
  %764 = load i8, i8* %arrayidx1852, align 1, !dbg !8246
  %conv1853 = zext i8 %764 to i32, !dbg !8246
  %cmp1854 = icmp eq i32 %conv1853, 8, !dbg !8246
  br i1 %cmp1854, label %land.lhs.true1874, label %lor.lhs.false1856, !dbg !8246

lor.lhs.false1856:                                ; preds = %if.end1850
  %765 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1857 = zext i32 %765 to i64, !dbg !8246
  %arrayidx1858 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1857, !dbg !8246
  %766 = load i8, i8* %arrayidx1858, align 1, !dbg !8246
  %conv1859 = zext i8 %766 to i32, !dbg !8246
  %cmp1860 = icmp eq i32 %conv1859, 9, !dbg !8246
  br i1 %cmp1860, label %land.lhs.true1874, label %lor.lhs.false1862, !dbg !8246

lor.lhs.false1862:                                ; preds = %lor.lhs.false1856
  %767 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1863 = zext i32 %767 to i64, !dbg !8246
  %arrayidx1864 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1863, !dbg !8246
  %768 = load i8, i8* %arrayidx1864, align 1, !dbg !8246
  %conv1865 = zext i8 %768 to i32, !dbg !8246
  %cmp1866 = icmp eq i32 %conv1865, 11, !dbg !8246
  br i1 %cmp1866, label %land.lhs.true1874, label %lor.lhs.false1868, !dbg !8246

lor.lhs.false1868:                                ; preds = %lor.lhs.false1862
  %769 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1869 = zext i32 %769 to i64, !dbg !8246
  %arrayidx1870 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1869, !dbg !8246
  %770 = load i8, i8* %arrayidx1870, align 1, !dbg !8246
  %conv1871 = zext i8 %770 to i32, !dbg !8246
  %cmp1872 = icmp eq i32 %conv1871, 17, !dbg !8246
  br i1 %cmp1872, label %land.lhs.true1874, label %land.lhs.true1948, !dbg !8246

land.lhs.true1874:                                ; preds = %lor.lhs.false1868, %lor.lhs.false1862, %lor.lhs.false1856, %if.end1850
  %771 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1875 = zext i32 %771 to i64, !dbg !8246
  %arrayidx1876 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1875, !dbg !8246
  %772 = load i8, i8* %arrayidx1876, align 1, !dbg !8246
  %conv1877 = zext i8 %772 to i32, !dbg !8246
  %cmp1878 = icmp eq i32 %conv1877, 8, !dbg !8246
  br i1 %cmp1878, label %cond.true1886, label %lor.lhs.false1880, !dbg !8246

lor.lhs.false1880:                                ; preds = %land.lhs.true1874
  %773 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1881 = zext i32 %773 to i64, !dbg !8246
  %arrayidx1882 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1881, !dbg !8246
  %774 = load i8, i8* %arrayidx1882, align 1, !dbg !8246
  %conv1883 = zext i8 %774 to i32, !dbg !8246
  %cmp1884 = icmp eq i32 %conv1883, 9, !dbg !8246
  br i1 %cmp1884, label %cond.true1886, label %cond.false1887, !dbg !8246

cond.true1886:                                    ; preds = %lor.lhs.false1880, %land.lhs.true1874
  %775 = load i32, i32* %mode.addr, align 4, !dbg !8246
  br label %cond.end1891, !dbg !8246

cond.false1887:                                   ; preds = %lor.lhs.false1880
  %776 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1888 = zext i32 %776 to i64, !dbg !8246
  %arrayidx1889 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1888, !dbg !8246
  %777 = load i8, i8* %arrayidx1889, align 1, !dbg !8246
  %conv1890 = zext i8 %777 to i32, !dbg !8246
  br label %cond.end1891, !dbg !8246

cond.end1891:                                     ; preds = %cond.false1887, %cond.true1886
  %cond1892 = phi i32 [ %775, %cond.true1886 ], [ %conv1890, %cond.false1887 ], !dbg !8246
  %idxprom1893 = zext i32 %cond1892 to i64, !dbg !8246
  %arrayidx1894 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1893, !dbg !8246
  %778 = load i8, i8* %arrayidx1894, align 1, !dbg !8246
  %conv1895 = zext i8 %778 to i32, !dbg !8246
  %cmp1896 = icmp eq i32 %conv1895, 9, !dbg !8246
  br i1 %cmp1896, label %cond.true1898, label %cond.false1919, !dbg !8246

cond.true1898:                                    ; preds = %cond.end1891
  %779 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1899 = zext i32 %779 to i64, !dbg !8246
  %arrayidx1900 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1899, !dbg !8246
  %780 = load i8, i8* %arrayidx1900, align 1, !dbg !8246
  %conv1901 = zext i8 %780 to i32, !dbg !8246
  %cmp1902 = icmp eq i32 %conv1901, 8, !dbg !8246
  br i1 %cmp1902, label %cond.true1910, label %lor.lhs.false1904, !dbg !8246

lor.lhs.false1904:                                ; preds = %cond.true1898
  %781 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1905 = zext i32 %781 to i64, !dbg !8246
  %arrayidx1906 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1905, !dbg !8246
  %782 = load i8, i8* %arrayidx1906, align 1, !dbg !8246
  %conv1907 = zext i8 %782 to i32, !dbg !8246
  %cmp1908 = icmp eq i32 %conv1907, 9, !dbg !8246
  br i1 %cmp1908, label %cond.true1910, label %cond.false1911, !dbg !8246

cond.true1910:                                    ; preds = %lor.lhs.false1904, %cond.true1898
  %783 = load i32, i32* %mode.addr, align 4, !dbg !8246
  br label %cond.end1915, !dbg !8246

cond.false1911:                                   ; preds = %lor.lhs.false1904
  %784 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1912 = zext i32 %784 to i64, !dbg !8246
  %arrayidx1913 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1912, !dbg !8246
  %785 = load i8, i8* %arrayidx1913, align 1, !dbg !8246
  %conv1914 = zext i8 %785 to i32, !dbg !8246
  br label %cond.end1915, !dbg !8246

cond.end1915:                                     ; preds = %cond.false1911, %cond.true1910
  %cond1916 = phi i32 [ %783, %cond.true1910 ], [ %conv1914, %cond.false1911 ], !dbg !8246
  %sub1917 = sub i32 %cond1916, 42, !dbg !8246
  %add1918 = add i32 %sub1917, 4, !dbg !8246
  br label %cond.end1939, !dbg !8246

cond.false1919:                                   ; preds = %cond.end1891
  %786 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1920 = zext i32 %786 to i64, !dbg !8246
  %arrayidx1921 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1920, !dbg !8246
  %787 = load i8, i8* %arrayidx1921, align 1, !dbg !8246
  %conv1922 = zext i8 %787 to i32, !dbg !8246
  %cmp1923 = icmp eq i32 %conv1922, 8, !dbg !8246
  br i1 %cmp1923, label %cond.true1931, label %lor.lhs.false1925, !dbg !8246

lor.lhs.false1925:                                ; preds = %cond.false1919
  %788 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1926 = zext i32 %788 to i64, !dbg !8246
  %arrayidx1927 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1926, !dbg !8246
  %789 = load i8, i8* %arrayidx1927, align 1, !dbg !8246
  %conv1928 = zext i8 %789 to i32, !dbg !8246
  %cmp1929 = icmp eq i32 %conv1928, 9, !dbg !8246
  br i1 %cmp1929, label %cond.true1931, label %cond.false1932, !dbg !8246

cond.true1931:                                    ; preds = %lor.lhs.false1925, %cond.false1919
  %790 = load i32, i32* %mode.addr, align 4, !dbg !8246
  br label %cond.end1936, !dbg !8246

cond.false1932:                                   ; preds = %lor.lhs.false1925
  %791 = load i32, i32* %mode.addr, align 4, !dbg !8246
  %idxprom1933 = zext i32 %791 to i64, !dbg !8246
  %arrayidx1934 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1933, !dbg !8246
  %792 = load i8, i8* %arrayidx1934, align 1, !dbg !8246
  %conv1935 = zext i8 %792 to i32, !dbg !8246
  br label %cond.end1936, !dbg !8246

cond.end1936:                                     ; preds = %cond.false1932, %cond.true1931
  %cond1937 = phi i32 [ %790, %cond.true1931 ], [ %conv1935, %cond.false1932 ], !dbg !8246
  %sub1938 = sub i32 %cond1937, 38, !dbg !8246
  br label %cond.end1939, !dbg !8246

cond.end1939:                                     ; preds = %cond.end1936, %cond.end1915
  %cond1940 = phi i32 [ %add1918, %cond.end1915 ], [ %sub1938, %cond.end1936 ], !dbg !8246
  %idxprom1941 = zext i32 %cond1940 to i64, !dbg !8246
  %arrayidx1942 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1941, !dbg !8246
  %793 = load %struct.real_format*, %struct.real_format** %arrayidx1942, align 8, !dbg !8246
  %has_nans1943 = getelementptr inbounds %struct.real_format, %struct.real_format* %793, i32 0, i32 11, !dbg !8246
  %794 = load i8, i8* %has_nans1943, align 2, !dbg !8246
  %conv1944 = zext i8 %794 to i32, !dbg !8246
  %tobool1945 = icmp ne i32 %conv1944, 0, !dbg !8246
  br i1 %tobool1945, label %land.lhs.true1946, label %land.lhs.true1948, !dbg !8246

land.lhs.true1946:                                ; preds = %cond.end1939
  %795 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8246
  %tobool1947 = icmp ne i32 %795, 0, !dbg !8246
  br i1 %tobool1947, label %land.lhs.true1948, label %if.end2055, !dbg !8248

land.lhs.true1948:                                ; preds = %land.lhs.true1946, %cond.end1939, %lor.lhs.false1868
  %796 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1949 = zext i32 %796 to i64, !dbg !8249
  %arrayidx1950 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1949, !dbg !8249
  %797 = load i8, i8* %arrayidx1950, align 1, !dbg !8249
  %conv1951 = zext i8 %797 to i32, !dbg !8249
  %cmp1952 = icmp eq i32 %conv1951, 8, !dbg !8249
  br i1 %cmp1952, label %land.lhs.true1972, label %lor.lhs.false1954, !dbg !8249

lor.lhs.false1954:                                ; preds = %land.lhs.true1948
  %798 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1955 = zext i32 %798 to i64, !dbg !8249
  %arrayidx1956 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1955, !dbg !8249
  %799 = load i8, i8* %arrayidx1956, align 1, !dbg !8249
  %conv1957 = zext i8 %799 to i32, !dbg !8249
  %cmp1958 = icmp eq i32 %conv1957, 9, !dbg !8249
  br i1 %cmp1958, label %land.lhs.true1972, label %lor.lhs.false1960, !dbg !8249

lor.lhs.false1960:                                ; preds = %lor.lhs.false1954
  %800 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1961 = zext i32 %800 to i64, !dbg !8249
  %arrayidx1962 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1961, !dbg !8249
  %801 = load i8, i8* %arrayidx1962, align 1, !dbg !8249
  %conv1963 = zext i8 %801 to i32, !dbg !8249
  %cmp1964 = icmp eq i32 %conv1963, 11, !dbg !8249
  br i1 %cmp1964, label %land.lhs.true1972, label %lor.lhs.false1966, !dbg !8249

lor.lhs.false1966:                                ; preds = %lor.lhs.false1960
  %802 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1967 = zext i32 %802 to i64, !dbg !8249
  %arrayidx1968 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1967, !dbg !8249
  %803 = load i8, i8* %arrayidx1968, align 1, !dbg !8249
  %conv1969 = zext i8 %803 to i32, !dbg !8249
  %cmp1970 = icmp eq i32 %conv1969, 17, !dbg !8249
  br i1 %cmp1970, label %land.lhs.true1972, label %land.lhs.true2046, !dbg !8249

land.lhs.true1972:                                ; preds = %lor.lhs.false1966, %lor.lhs.false1960, %lor.lhs.false1954, %land.lhs.true1948
  %804 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1973 = zext i32 %804 to i64, !dbg !8249
  %arrayidx1974 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1973, !dbg !8249
  %805 = load i8, i8* %arrayidx1974, align 1, !dbg !8249
  %conv1975 = zext i8 %805 to i32, !dbg !8249
  %cmp1976 = icmp eq i32 %conv1975, 8, !dbg !8249
  br i1 %cmp1976, label %cond.true1984, label %lor.lhs.false1978, !dbg !8249

lor.lhs.false1978:                                ; preds = %land.lhs.true1972
  %806 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1979 = zext i32 %806 to i64, !dbg !8249
  %arrayidx1980 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1979, !dbg !8249
  %807 = load i8, i8* %arrayidx1980, align 1, !dbg !8249
  %conv1981 = zext i8 %807 to i32, !dbg !8249
  %cmp1982 = icmp eq i32 %conv1981, 9, !dbg !8249
  br i1 %cmp1982, label %cond.true1984, label %cond.false1985, !dbg !8249

cond.true1984:                                    ; preds = %lor.lhs.false1978, %land.lhs.true1972
  %808 = load i32, i32* %mode.addr, align 4, !dbg !8249
  br label %cond.end1989, !dbg !8249

cond.false1985:                                   ; preds = %lor.lhs.false1978
  %809 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1986 = zext i32 %809 to i64, !dbg !8249
  %arrayidx1987 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1986, !dbg !8249
  %810 = load i8, i8* %arrayidx1987, align 1, !dbg !8249
  %conv1988 = zext i8 %810 to i32, !dbg !8249
  br label %cond.end1989, !dbg !8249

cond.end1989:                                     ; preds = %cond.false1985, %cond.true1984
  %cond1990 = phi i32 [ %808, %cond.true1984 ], [ %conv1988, %cond.false1985 ], !dbg !8249
  %idxprom1991 = zext i32 %cond1990 to i64, !dbg !8249
  %arrayidx1992 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1991, !dbg !8249
  %811 = load i8, i8* %arrayidx1992, align 1, !dbg !8249
  %conv1993 = zext i8 %811 to i32, !dbg !8249
  %cmp1994 = icmp eq i32 %conv1993, 9, !dbg !8249
  br i1 %cmp1994, label %cond.true1996, label %cond.false2017, !dbg !8249

cond.true1996:                                    ; preds = %cond.end1989
  %812 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom1997 = zext i32 %812 to i64, !dbg !8249
  %arrayidx1998 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1997, !dbg !8249
  %813 = load i8, i8* %arrayidx1998, align 1, !dbg !8249
  %conv1999 = zext i8 %813 to i32, !dbg !8249
  %cmp2000 = icmp eq i32 %conv1999, 8, !dbg !8249
  br i1 %cmp2000, label %cond.true2008, label %lor.lhs.false2002, !dbg !8249

lor.lhs.false2002:                                ; preds = %cond.true1996
  %814 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom2003 = zext i32 %814 to i64, !dbg !8249
  %arrayidx2004 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2003, !dbg !8249
  %815 = load i8, i8* %arrayidx2004, align 1, !dbg !8249
  %conv2005 = zext i8 %815 to i32, !dbg !8249
  %cmp2006 = icmp eq i32 %conv2005, 9, !dbg !8249
  br i1 %cmp2006, label %cond.true2008, label %cond.false2009, !dbg !8249

cond.true2008:                                    ; preds = %lor.lhs.false2002, %cond.true1996
  %816 = load i32, i32* %mode.addr, align 4, !dbg !8249
  br label %cond.end2013, !dbg !8249

cond.false2009:                                   ; preds = %lor.lhs.false2002
  %817 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom2010 = zext i32 %817 to i64, !dbg !8249
  %arrayidx2011 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2010, !dbg !8249
  %818 = load i8, i8* %arrayidx2011, align 1, !dbg !8249
  %conv2012 = zext i8 %818 to i32, !dbg !8249
  br label %cond.end2013, !dbg !8249

cond.end2013:                                     ; preds = %cond.false2009, %cond.true2008
  %cond2014 = phi i32 [ %816, %cond.true2008 ], [ %conv2012, %cond.false2009 ], !dbg !8249
  %sub2015 = sub i32 %cond2014, 42, !dbg !8249
  %add2016 = add i32 %sub2015, 4, !dbg !8249
  br label %cond.end2037, !dbg !8249

cond.false2017:                                   ; preds = %cond.end1989
  %819 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom2018 = zext i32 %819 to i64, !dbg !8249
  %arrayidx2019 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2018, !dbg !8249
  %820 = load i8, i8* %arrayidx2019, align 1, !dbg !8249
  %conv2020 = zext i8 %820 to i32, !dbg !8249
  %cmp2021 = icmp eq i32 %conv2020, 8, !dbg !8249
  br i1 %cmp2021, label %cond.true2029, label %lor.lhs.false2023, !dbg !8249

lor.lhs.false2023:                                ; preds = %cond.false2017
  %821 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom2024 = zext i32 %821 to i64, !dbg !8249
  %arrayidx2025 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2024, !dbg !8249
  %822 = load i8, i8* %arrayidx2025, align 1, !dbg !8249
  %conv2026 = zext i8 %822 to i32, !dbg !8249
  %cmp2027 = icmp eq i32 %conv2026, 9, !dbg !8249
  br i1 %cmp2027, label %cond.true2029, label %cond.false2030, !dbg !8249

cond.true2029:                                    ; preds = %lor.lhs.false2023, %cond.false2017
  %823 = load i32, i32* %mode.addr, align 4, !dbg !8249
  br label %cond.end2034, !dbg !8249

cond.false2030:                                   ; preds = %lor.lhs.false2023
  %824 = load i32, i32* %mode.addr, align 4, !dbg !8249
  %idxprom2031 = zext i32 %824 to i64, !dbg !8249
  %arrayidx2032 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2031, !dbg !8249
  %825 = load i8, i8* %arrayidx2032, align 1, !dbg !8249
  %conv2033 = zext i8 %825 to i32, !dbg !8249
  br label %cond.end2034, !dbg !8249

cond.end2034:                                     ; preds = %cond.false2030, %cond.true2029
  %cond2035 = phi i32 [ %823, %cond.true2029 ], [ %conv2033, %cond.false2030 ], !dbg !8249
  %sub2036 = sub i32 %cond2035, 38, !dbg !8249
  br label %cond.end2037, !dbg !8249

cond.end2037:                                     ; preds = %cond.end2034, %cond.end2013
  %cond2038 = phi i32 [ %add2016, %cond.end2013 ], [ %sub2036, %cond.end2034 ], !dbg !8249
  %idxprom2039 = zext i32 %cond2038 to i64, !dbg !8249
  %arrayidx2040 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom2039, !dbg !8249
  %826 = load %struct.real_format*, %struct.real_format** %arrayidx2040, align 8, !dbg !8249
  %has_signed_zero2041 = getelementptr inbounds %struct.real_format, %struct.real_format* %826, i32 0, i32 14, !dbg !8249
  %827 = load i8, i8* %has_signed_zero2041, align 1, !dbg !8249
  %conv2042 = zext i8 %827 to i32, !dbg !8249
  %tobool2043 = icmp ne i32 %conv2042, 0, !dbg !8249
  br i1 %tobool2043, label %land.lhs.true2044, label %land.lhs.true2046, !dbg !8249

land.lhs.true2044:                                ; preds = %cond.end2037
  %828 = load i32, i32* @flag_signed_zeros, align 4, !dbg !8249
  %tobool2045 = icmp ne i32 %828, 0, !dbg !8249
  br i1 %tobool2045, label %if.end2055, label %land.lhs.true2046, !dbg !8250

land.lhs.true2046:                                ; preds = %land.lhs.true2044, %cond.end2037, %lor.lhs.false1966
  %829 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8251
  %830 = load i32, i32* %mode.addr, align 4, !dbg !8252
  %idxprom2047 = sext i32 %830 to i64, !dbg !8252
  %arrayidx2048 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom2047, !dbg !8252
  %831 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2048, align 8, !dbg !8252
  %cmp2049 = icmp eq %struct.rtx_def* %829, %831, !dbg !8253
  br i1 %cmp2049, label %land.lhs.true2051, label %if.end2055, !dbg !8254

land.lhs.true2051:                                ; preds = %land.lhs.true2046
  %832 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8255
  %call2052 = call i32 @side_effects_p(%struct.rtx_def* %832), !dbg !8256
  %tobool2053 = icmp ne i32 %call2052, 0, !dbg !8256
  br i1 %tobool2053, label %if.end2055, label %if.then2054, !dbg !8257

if.then2054:                                      ; preds = %land.lhs.true2051
  %833 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8258
  store %struct.rtx_def* %833, %struct.rtx_def** %retval, align 8, !dbg !8259
  br label %return, !dbg !8259

if.end2055:                                       ; preds = %land.lhs.true2051, %land.lhs.true2046, %land.lhs.true2044, %land.lhs.true1946
  %834 = load i32, i32* @flag_signaling_nans, align 4, !dbg !8260
  %tobool2056 = icmp ne i32 %834, 0, !dbg !8260
  br i1 %tobool2056, label %land.lhs.true2057, label %land.lhs.true2155, !dbg !8260

land.lhs.true2057:                                ; preds = %if.end2055
  %835 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2058 = zext i32 %835 to i64, !dbg !8260
  %arrayidx2059 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2058, !dbg !8260
  %836 = load i8, i8* %arrayidx2059, align 1, !dbg !8260
  %conv2060 = zext i8 %836 to i32, !dbg !8260
  %cmp2061 = icmp eq i32 %conv2060, 8, !dbg !8260
  br i1 %cmp2061, label %land.lhs.true2081, label %lor.lhs.false2063, !dbg !8260

lor.lhs.false2063:                                ; preds = %land.lhs.true2057
  %837 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2064 = zext i32 %837 to i64, !dbg !8260
  %arrayidx2065 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2064, !dbg !8260
  %838 = load i8, i8* %arrayidx2065, align 1, !dbg !8260
  %conv2066 = zext i8 %838 to i32, !dbg !8260
  %cmp2067 = icmp eq i32 %conv2066, 9, !dbg !8260
  br i1 %cmp2067, label %land.lhs.true2081, label %lor.lhs.false2069, !dbg !8260

lor.lhs.false2069:                                ; preds = %lor.lhs.false2063
  %839 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2070 = zext i32 %839 to i64, !dbg !8260
  %arrayidx2071 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2070, !dbg !8260
  %840 = load i8, i8* %arrayidx2071, align 1, !dbg !8260
  %conv2072 = zext i8 %840 to i32, !dbg !8260
  %cmp2073 = icmp eq i32 %conv2072, 11, !dbg !8260
  br i1 %cmp2073, label %land.lhs.true2081, label %lor.lhs.false2075, !dbg !8260

lor.lhs.false2075:                                ; preds = %lor.lhs.false2069
  %841 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2076 = zext i32 %841 to i64, !dbg !8260
  %arrayidx2077 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2076, !dbg !8260
  %842 = load i8, i8* %arrayidx2077, align 1, !dbg !8260
  %conv2078 = zext i8 %842 to i32, !dbg !8260
  %cmp2079 = icmp eq i32 %conv2078, 17, !dbg !8260
  br i1 %cmp2079, label %land.lhs.true2081, label %land.lhs.true2155, !dbg !8260

land.lhs.true2081:                                ; preds = %lor.lhs.false2075, %lor.lhs.false2069, %lor.lhs.false2063, %land.lhs.true2057
  %843 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2082 = zext i32 %843 to i64, !dbg !8260
  %arrayidx2083 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2082, !dbg !8260
  %844 = load i8, i8* %arrayidx2083, align 1, !dbg !8260
  %conv2084 = zext i8 %844 to i32, !dbg !8260
  %cmp2085 = icmp eq i32 %conv2084, 8, !dbg !8260
  br i1 %cmp2085, label %cond.true2093, label %lor.lhs.false2087, !dbg !8260

lor.lhs.false2087:                                ; preds = %land.lhs.true2081
  %845 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2088 = zext i32 %845 to i64, !dbg !8260
  %arrayidx2089 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2088, !dbg !8260
  %846 = load i8, i8* %arrayidx2089, align 1, !dbg !8260
  %conv2090 = zext i8 %846 to i32, !dbg !8260
  %cmp2091 = icmp eq i32 %conv2090, 9, !dbg !8260
  br i1 %cmp2091, label %cond.true2093, label %cond.false2094, !dbg !8260

cond.true2093:                                    ; preds = %lor.lhs.false2087, %land.lhs.true2081
  %847 = load i32, i32* %mode.addr, align 4, !dbg !8260
  br label %cond.end2098, !dbg !8260

cond.false2094:                                   ; preds = %lor.lhs.false2087
  %848 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2095 = zext i32 %848 to i64, !dbg !8260
  %arrayidx2096 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2095, !dbg !8260
  %849 = load i8, i8* %arrayidx2096, align 1, !dbg !8260
  %conv2097 = zext i8 %849 to i32, !dbg !8260
  br label %cond.end2098, !dbg !8260

cond.end2098:                                     ; preds = %cond.false2094, %cond.true2093
  %cond2099 = phi i32 [ %847, %cond.true2093 ], [ %conv2097, %cond.false2094 ], !dbg !8260
  %idxprom2100 = zext i32 %cond2099 to i64, !dbg !8260
  %arrayidx2101 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2100, !dbg !8260
  %850 = load i8, i8* %arrayidx2101, align 1, !dbg !8260
  %conv2102 = zext i8 %850 to i32, !dbg !8260
  %cmp2103 = icmp eq i32 %conv2102, 9, !dbg !8260
  br i1 %cmp2103, label %cond.true2105, label %cond.false2126, !dbg !8260

cond.true2105:                                    ; preds = %cond.end2098
  %851 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2106 = zext i32 %851 to i64, !dbg !8260
  %arrayidx2107 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2106, !dbg !8260
  %852 = load i8, i8* %arrayidx2107, align 1, !dbg !8260
  %conv2108 = zext i8 %852 to i32, !dbg !8260
  %cmp2109 = icmp eq i32 %conv2108, 8, !dbg !8260
  br i1 %cmp2109, label %cond.true2117, label %lor.lhs.false2111, !dbg !8260

lor.lhs.false2111:                                ; preds = %cond.true2105
  %853 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2112 = zext i32 %853 to i64, !dbg !8260
  %arrayidx2113 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2112, !dbg !8260
  %854 = load i8, i8* %arrayidx2113, align 1, !dbg !8260
  %conv2114 = zext i8 %854 to i32, !dbg !8260
  %cmp2115 = icmp eq i32 %conv2114, 9, !dbg !8260
  br i1 %cmp2115, label %cond.true2117, label %cond.false2118, !dbg !8260

cond.true2117:                                    ; preds = %lor.lhs.false2111, %cond.true2105
  %855 = load i32, i32* %mode.addr, align 4, !dbg !8260
  br label %cond.end2122, !dbg !8260

cond.false2118:                                   ; preds = %lor.lhs.false2111
  %856 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2119 = zext i32 %856 to i64, !dbg !8260
  %arrayidx2120 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2119, !dbg !8260
  %857 = load i8, i8* %arrayidx2120, align 1, !dbg !8260
  %conv2121 = zext i8 %857 to i32, !dbg !8260
  br label %cond.end2122, !dbg !8260

cond.end2122:                                     ; preds = %cond.false2118, %cond.true2117
  %cond2123 = phi i32 [ %855, %cond.true2117 ], [ %conv2121, %cond.false2118 ], !dbg !8260
  %sub2124 = sub i32 %cond2123, 42, !dbg !8260
  %add2125 = add i32 %sub2124, 4, !dbg !8260
  br label %cond.end2146, !dbg !8260

cond.false2126:                                   ; preds = %cond.end2098
  %858 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2127 = zext i32 %858 to i64, !dbg !8260
  %arrayidx2128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2127, !dbg !8260
  %859 = load i8, i8* %arrayidx2128, align 1, !dbg !8260
  %conv2129 = zext i8 %859 to i32, !dbg !8260
  %cmp2130 = icmp eq i32 %conv2129, 8, !dbg !8260
  br i1 %cmp2130, label %cond.true2138, label %lor.lhs.false2132, !dbg !8260

lor.lhs.false2132:                                ; preds = %cond.false2126
  %860 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2133 = zext i32 %860 to i64, !dbg !8260
  %arrayidx2134 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2133, !dbg !8260
  %861 = load i8, i8* %arrayidx2134, align 1, !dbg !8260
  %conv2135 = zext i8 %861 to i32, !dbg !8260
  %cmp2136 = icmp eq i32 %conv2135, 9, !dbg !8260
  br i1 %cmp2136, label %cond.true2138, label %cond.false2139, !dbg !8260

cond.true2138:                                    ; preds = %lor.lhs.false2132, %cond.false2126
  %862 = load i32, i32* %mode.addr, align 4, !dbg !8260
  br label %cond.end2143, !dbg !8260

cond.false2139:                                   ; preds = %lor.lhs.false2132
  %863 = load i32, i32* %mode.addr, align 4, !dbg !8260
  %idxprom2140 = zext i32 %863 to i64, !dbg !8260
  %arrayidx2141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2140, !dbg !8260
  %864 = load i8, i8* %arrayidx2141, align 1, !dbg !8260
  %conv2142 = zext i8 %864 to i32, !dbg !8260
  br label %cond.end2143, !dbg !8260

cond.end2143:                                     ; preds = %cond.false2139, %cond.true2138
  %cond2144 = phi i32 [ %862, %cond.true2138 ], [ %conv2142, %cond.false2139 ], !dbg !8260
  %sub2145 = sub i32 %cond2144, 38, !dbg !8260
  br label %cond.end2146, !dbg !8260

cond.end2146:                                     ; preds = %cond.end2143, %cond.end2122
  %cond2147 = phi i32 [ %add2125, %cond.end2122 ], [ %sub2145, %cond.end2143 ], !dbg !8260
  %idxprom2148 = zext i32 %cond2147 to i64, !dbg !8260
  %arrayidx2149 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom2148, !dbg !8260
  %865 = load %struct.real_format*, %struct.real_format** %arrayidx2149, align 8, !dbg !8260
  %has_nans2150 = getelementptr inbounds %struct.real_format, %struct.real_format* %865, i32 0, i32 11, !dbg !8260
  %866 = load i8, i8* %has_nans2150, align 2, !dbg !8260
  %conv2151 = zext i8 %866 to i32, !dbg !8260
  %tobool2152 = icmp ne i32 %conv2151, 0, !dbg !8260
  br i1 %tobool2152, label %land.lhs.true2153, label %land.lhs.true2155, !dbg !8260

land.lhs.true2153:                                ; preds = %cond.end2146
  %867 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8260
  %tobool2154 = icmp ne i32 %867, 0, !dbg !8260
  br i1 %tobool2154, label %land.lhs.true2155, label %if.end2161, !dbg !8262

land.lhs.true2155:                                ; preds = %land.lhs.true2153, %cond.end2146, %lor.lhs.false2075, %if.end2055
  %868 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8263
  %869 = load i32, i32* %mode.addr, align 4, !dbg !8264
  %idxprom2156 = sext i32 %869 to i64, !dbg !8264
  %arrayidx2157 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom2156, !dbg !8264
  %870 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx2157, align 8, !dbg !8264
  %cmp2158 = icmp eq %struct.rtx_def* %868, %870, !dbg !8265
  br i1 %cmp2158, label %if.then2160, label %if.end2161, !dbg !8266

if.then2160:                                      ; preds = %land.lhs.true2155
  %871 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8267
  store %struct.rtx_def* %871, %struct.rtx_def** %retval, align 8, !dbg !8268
  br label %return, !dbg !8268

if.end2161:                                       ; preds = %land.lhs.true2155, %land.lhs.true2153
  %872 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8269
  %873 = bitcast %struct.rtx_def* %872 to i32*, !dbg !8269
  %bf.load2162 = load i32, i32* %873, align 8, !dbg !8269
  %bf.clear2163 = and i32 %bf.load2162, 65535, !dbg !8269
  %cmp2164 = icmp eq i32 %bf.clear2163, 30, !dbg !8269
  br i1 %cmp2164, label %land.lhs.true2166, label %if.end2183, !dbg !8271

land.lhs.true2166:                                ; preds = %if.end2161
  %874 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8272
  %u2167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %874, i32 0, i32 1, !dbg !8272
  %hwint2168 = bitcast %union.u* %u2167 to [1 x i64]*, !dbg !8272
  %arrayidx2169 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2168, i64 0, i64 0, !dbg !8272
  %875 = load i64, i64* %arrayidx2169, align 8, !dbg !8272
  %call2170 = call i32 @exact_log2(i64 %875), !dbg !8273
  %conv2171 = sext i32 %call2170 to i64, !dbg !8273
  store i64 %conv2171, i64* %val, align 8, !dbg !8274
  %cmp2172 = icmp sge i64 %conv2171, 0, !dbg !8275
  br i1 %cmp2172, label %land.lhs.true2174, label %if.end2183, !dbg !8276

land.lhs.true2174:                                ; preds = %land.lhs.true2166
  %876 = load i32, i32* %width, align 4, !dbg !8277
  %cmp2175 = icmp ule i32 %876, 64, !dbg !8278
  br i1 %cmp2175, label %if.then2180, label %lor.lhs.false2177, !dbg !8279

lor.lhs.false2177:                                ; preds = %land.lhs.true2174
  %877 = load i64, i64* %val, align 8, !dbg !8280
  %cmp2178 = icmp ne i64 %877, 63, !dbg !8281
  br i1 %cmp2178, label %if.then2180, label %if.end2183, !dbg !8282

if.then2180:                                      ; preds = %lor.lhs.false2177, %land.lhs.true2174
  %878 = load i32, i32* %mode.addr, align 4, !dbg !8283
  %879 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8284
  %880 = load i64, i64* %val, align 8, !dbg !8285
  %call2181 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %880), !dbg !8285
  %call2182 = call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %878, %struct.rtx_def* %879, %struct.rtx_def* %call2181), !dbg !8286
  store %struct.rtx_def* %call2182, %struct.rtx_def** %retval, align 8, !dbg !8287
  br label %return, !dbg !8287

if.end2183:                                       ; preds = %lor.lhs.false2177, %land.lhs.true2166, %if.end2161
  %881 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8288
  %882 = bitcast %struct.rtx_def* %881 to i32*, !dbg !8288
  %bf.load2184 = load i32, i32* %882, align 8, !dbg !8288
  %bf.clear2185 = and i32 %bf.load2184, 65535, !dbg !8288
  %cmp2186 = icmp eq i32 %bf.clear2185, 32, !dbg !8290
  br i1 %cmp2186, label %land.lhs.true2188, label %if.end2227, !dbg !8291

land.lhs.true2188:                                ; preds = %if.end2183
  %883 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8292
  %884 = bitcast %struct.rtx_def* %883 to i32*, !dbg !8292
  %bf.load2189 = load i32, i32* %884, align 8, !dbg !8292
  %bf.lshr2190 = lshr i32 %bf.load2189, 16, !dbg !8292
  %bf.clear2191 = and i32 %bf.lshr2190, 255, !dbg !8292
  %cmp2192 = icmp eq i32 %bf.clear2191, 0, !dbg !8293
  br i1 %cmp2192, label %land.lhs.true2203, label %lor.lhs.false2194, !dbg !8294

lor.lhs.false2194:                                ; preds = %land.lhs.true2188
  %885 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8295
  %886 = bitcast %struct.rtx_def* %885 to i32*, !dbg !8295
  %bf.load2195 = load i32, i32* %886, align 8, !dbg !8295
  %bf.lshr2196 = lshr i32 %bf.load2195, 16, !dbg !8295
  %bf.clear2197 = and i32 %bf.lshr2196, 255, !dbg !8295
  %idxprom2198 = zext i32 %bf.clear2197 to i64, !dbg !8295
  %arrayidx2199 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2198, !dbg !8295
  %887 = load i8, i8* %arrayidx2199, align 1, !dbg !8295
  %conv2200 = zext i8 %887 to i32, !dbg !8295
  %cmp2201 = icmp eq i32 %conv2200, 2, !dbg !8296
  br i1 %cmp2201, label %land.lhs.true2203, label %if.end2227, !dbg !8297

land.lhs.true2203:                                ; preds = %lor.lhs.false2194, %land.lhs.true2188
  %888 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8298
  %889 = bitcast %struct.rtx_def* %888 to i32*, !dbg !8298
  %bf.load2204 = load i32, i32* %889, align 8, !dbg !8298
  %bf.lshr2205 = lshr i32 %bf.load2204, 16, !dbg !8298
  %bf.clear2206 = and i32 %bf.lshr2205, 255, !dbg !8298
  %890 = load i32, i32* %mode.addr, align 4, !dbg !8299
  %cmp2207 = icmp eq i32 %bf.clear2206, %890, !dbg !8300
  br i1 %cmp2207, label %land.lhs.true2209, label %if.end2227, !dbg !8301

land.lhs.true2209:                                ; preds = %land.lhs.true2203
  %891 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8302
  %u2210 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %891, i32 0, i32 1, !dbg !8302
  %hwint2211 = bitcast %union.u* %u2210 to [1 x i64]*, !dbg !8302
  %arrayidx2212 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2211, i64 0, i64 0, !dbg !8302
  %892 = load i64, i64* %arrayidx2212, align 8, !dbg !8302
  %cmp2213 = icmp eq i64 %892, 0, !dbg !8303
  br i1 %cmp2213, label %land.lhs.true2215, label %if.end2227, !dbg !8304

land.lhs.true2215:                                ; preds = %land.lhs.true2209
  %893 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8305
  %u2216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %893, i32 0, i32 1, !dbg !8305
  %hwint2217 = bitcast %union.u* %u2216 to [1 x i64]*, !dbg !8305
  %arrayidx2218 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2217, i64 0, i64 1, !dbg !8305
  %894 = load i64, i64* %arrayidx2218, align 8, !dbg !8305
  %call2219 = call i32 @exact_log2(i64 %894), !dbg !8306
  %conv2220 = sext i32 %call2219 to i64, !dbg !8306
  store i64 %conv2220, i64* %val, align 8, !dbg !8307
  %cmp2221 = icmp sge i64 %conv2220, 0, !dbg !8308
  br i1 %cmp2221, label %if.then2223, label %if.end2227, !dbg !8309

if.then2223:                                      ; preds = %land.lhs.true2215
  %895 = load i32, i32* %mode.addr, align 4, !dbg !8310
  %896 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8311
  %897 = load i64, i64* %val, align 8, !dbg !8312
  %add2224 = add nsw i64 %897, 64, !dbg !8312
  %call2225 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %add2224), !dbg !8312
  %call2226 = call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %895, %struct.rtx_def* %896, %struct.rtx_def* %call2225), !dbg !8313
  store %struct.rtx_def* %call2226, %struct.rtx_def** %retval, align 8, !dbg !8314
  br label %return, !dbg !8314

if.end2227:                                       ; preds = %land.lhs.true2215, %land.lhs.true2209, %land.lhs.true2203, %lor.lhs.false2194, %if.end2183
  %898 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8315
  %899 = bitcast %struct.rtx_def* %898 to i32*, !dbg !8315
  %bf.load2228 = load i32, i32* %899, align 8, !dbg !8315
  %bf.clear2229 = and i32 %bf.load2228, 65535, !dbg !8315
  %cmp2230 = icmp eq i32 %bf.clear2229, 32, !dbg !8317
  br i1 %cmp2230, label %land.lhs.true2232, label %if.end2379, !dbg !8318

land.lhs.true2232:                                ; preds = %if.end2227
  %900 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8319
  %901 = bitcast %struct.rtx_def* %900 to i32*, !dbg !8319
  %bf.load2233 = load i32, i32* %901, align 8, !dbg !8319
  %bf.lshr2234 = lshr i32 %bf.load2233, 16, !dbg !8319
  %bf.clear2235 = and i32 %bf.lshr2234, 255, !dbg !8319
  %idxprom2236 = zext i32 %bf.clear2235 to i64, !dbg !8319
  %arrayidx2237 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2236, !dbg !8319
  %902 = load i8, i8* %arrayidx2237, align 1, !dbg !8319
  %conv2238 = zext i8 %902 to i32, !dbg !8319
  %cmp2239 = icmp eq i32 %conv2238, 8, !dbg !8319
  br i1 %cmp2239, label %land.lhs.true2250, label %lor.lhs.false2241, !dbg !8319

lor.lhs.false2241:                                ; preds = %land.lhs.true2232
  %903 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8319
  %904 = bitcast %struct.rtx_def* %903 to i32*, !dbg !8319
  %bf.load2242 = load i32, i32* %904, align 8, !dbg !8319
  %bf.lshr2243 = lshr i32 %bf.load2242, 16, !dbg !8319
  %bf.clear2244 = and i32 %bf.lshr2243, 255, !dbg !8319
  %idxprom2245 = zext i32 %bf.clear2244 to i64, !dbg !8319
  %arrayidx2246 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2245, !dbg !8319
  %905 = load i8, i8* %arrayidx2246, align 1, !dbg !8319
  %conv2247 = zext i8 %905 to i32, !dbg !8319
  %cmp2248 = icmp eq i32 %conv2247, 9, !dbg !8319
  br i1 %cmp2248, label %land.lhs.true2250, label %if.end2379, !dbg !8320

land.lhs.true2250:                                ; preds = %lor.lhs.false2241, %land.lhs.true2232
  %906 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8321
  %907 = bitcast %struct.rtx_def* %906 to i32*, !dbg !8321
  %bf.load2251 = load i32, i32* %907, align 8, !dbg !8321
  %bf.lshr2252 = lshr i32 %bf.load2251, 16, !dbg !8321
  %bf.clear2253 = and i32 %bf.lshr2252, 255, !dbg !8321
  %idxprom2254 = zext i32 %bf.clear2253 to i64, !dbg !8321
  %arrayidx2255 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2254, !dbg !8321
  %908 = load i8, i8* %arrayidx2255, align 1, !dbg !8321
  %conv2256 = zext i8 %908 to i32, !dbg !8321
  %cmp2257 = icmp eq i32 %conv2256, 9, !dbg !8321
  br i1 %cmp2257, label %if.end2379, label %land.lhs.true2259, !dbg !8322

land.lhs.true2259:                                ; preds = %land.lhs.true2250
  %909 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8323
  %910 = bitcast %struct.rtx_def* %909 to i32*, !dbg !8323
  %bf.load2260 = load i32, i32* %910, align 8, !dbg !8323
  %bf.lshr2261 = lshr i32 %bf.load2260, 16, !dbg !8323
  %bf.clear2262 = and i32 %bf.lshr2261, 255, !dbg !8323
  %911 = load i32, i32* %mode.addr, align 4, !dbg !8324
  %cmp2263 = icmp eq i32 %bf.clear2262, %911, !dbg !8325
  br i1 %cmp2263, label %if.then2265, label %if.end2379, !dbg !8326

if.then2265:                                      ; preds = %land.lhs.true2259
  call void @llvm.dbg.declare(metadata %struct.real_value* %d, metadata !8327, metadata !DIExpression()), !dbg !8329
  %912 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8330
  %u2266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %912, i32 0, i32 1, !dbg !8330
  %rv = bitcast %union.u* %u2266 to %struct.real_value*, !dbg !8330
  %913 = bitcast %struct.real_value* %d to i8*, !dbg !8330
  %914 = bitcast %struct.real_value* %rv to i8*, !dbg !8330
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %913, i8* align 8 %914, i64 32, i1 false), !dbg !8330
  %call2267 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %d, %struct.real_value* @dconst2), !dbg !8331
  %tobool2268 = icmp ne i8 %call2267, 0, !dbg !8331
  br i1 %tobool2268, label %if.then2269, label %if.end2272, !dbg !8333

if.then2269:                                      ; preds = %if.then2265
  %915 = load i32, i32* %mode.addr, align 4, !dbg !8334
  %916 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8335
  %917 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8336
  %call2270 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %917), !dbg !8337
  %call2271 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %915, %struct.rtx_def* %916, %struct.rtx_def* %call2270), !dbg !8338
  store %struct.rtx_def* %call2271, %struct.rtx_def** %retval, align 8, !dbg !8339
  br label %return, !dbg !8339

if.end2272:                                       ; preds = %if.then2265
  %918 = load i32, i32* @flag_signaling_nans, align 4, !dbg !8340
  %tobool2273 = icmp ne i32 %918, 0, !dbg !8340
  br i1 %tobool2273, label %land.lhs.true2274, label %land.lhs.true2372, !dbg !8340

land.lhs.true2274:                                ; preds = %if.end2272
  %919 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2275 = zext i32 %919 to i64, !dbg !8340
  %arrayidx2276 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2275, !dbg !8340
  %920 = load i8, i8* %arrayidx2276, align 1, !dbg !8340
  %conv2277 = zext i8 %920 to i32, !dbg !8340
  %cmp2278 = icmp eq i32 %conv2277, 8, !dbg !8340
  br i1 %cmp2278, label %land.lhs.true2298, label %lor.lhs.false2280, !dbg !8340

lor.lhs.false2280:                                ; preds = %land.lhs.true2274
  %921 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2281 = zext i32 %921 to i64, !dbg !8340
  %arrayidx2282 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2281, !dbg !8340
  %922 = load i8, i8* %arrayidx2282, align 1, !dbg !8340
  %conv2283 = zext i8 %922 to i32, !dbg !8340
  %cmp2284 = icmp eq i32 %conv2283, 9, !dbg !8340
  br i1 %cmp2284, label %land.lhs.true2298, label %lor.lhs.false2286, !dbg !8340

lor.lhs.false2286:                                ; preds = %lor.lhs.false2280
  %923 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2287 = zext i32 %923 to i64, !dbg !8340
  %arrayidx2288 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2287, !dbg !8340
  %924 = load i8, i8* %arrayidx2288, align 1, !dbg !8340
  %conv2289 = zext i8 %924 to i32, !dbg !8340
  %cmp2290 = icmp eq i32 %conv2289, 11, !dbg !8340
  br i1 %cmp2290, label %land.lhs.true2298, label %lor.lhs.false2292, !dbg !8340

lor.lhs.false2292:                                ; preds = %lor.lhs.false2286
  %925 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2293 = zext i32 %925 to i64, !dbg !8340
  %arrayidx2294 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2293, !dbg !8340
  %926 = load i8, i8* %arrayidx2294, align 1, !dbg !8340
  %conv2295 = zext i8 %926 to i32, !dbg !8340
  %cmp2296 = icmp eq i32 %conv2295, 17, !dbg !8340
  br i1 %cmp2296, label %land.lhs.true2298, label %land.lhs.true2372, !dbg !8340

land.lhs.true2298:                                ; preds = %lor.lhs.false2292, %lor.lhs.false2286, %lor.lhs.false2280, %land.lhs.true2274
  %927 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2299 = zext i32 %927 to i64, !dbg !8340
  %arrayidx2300 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2299, !dbg !8340
  %928 = load i8, i8* %arrayidx2300, align 1, !dbg !8340
  %conv2301 = zext i8 %928 to i32, !dbg !8340
  %cmp2302 = icmp eq i32 %conv2301, 8, !dbg !8340
  br i1 %cmp2302, label %cond.true2310, label %lor.lhs.false2304, !dbg !8340

lor.lhs.false2304:                                ; preds = %land.lhs.true2298
  %929 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2305 = zext i32 %929 to i64, !dbg !8340
  %arrayidx2306 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2305, !dbg !8340
  %930 = load i8, i8* %arrayidx2306, align 1, !dbg !8340
  %conv2307 = zext i8 %930 to i32, !dbg !8340
  %cmp2308 = icmp eq i32 %conv2307, 9, !dbg !8340
  br i1 %cmp2308, label %cond.true2310, label %cond.false2311, !dbg !8340

cond.true2310:                                    ; preds = %lor.lhs.false2304, %land.lhs.true2298
  %931 = load i32, i32* %mode.addr, align 4, !dbg !8340
  br label %cond.end2315, !dbg !8340

cond.false2311:                                   ; preds = %lor.lhs.false2304
  %932 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2312 = zext i32 %932 to i64, !dbg !8340
  %arrayidx2313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2312, !dbg !8340
  %933 = load i8, i8* %arrayidx2313, align 1, !dbg !8340
  %conv2314 = zext i8 %933 to i32, !dbg !8340
  br label %cond.end2315, !dbg !8340

cond.end2315:                                     ; preds = %cond.false2311, %cond.true2310
  %cond2316 = phi i32 [ %931, %cond.true2310 ], [ %conv2314, %cond.false2311 ], !dbg !8340
  %idxprom2317 = zext i32 %cond2316 to i64, !dbg !8340
  %arrayidx2318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2317, !dbg !8340
  %934 = load i8, i8* %arrayidx2318, align 1, !dbg !8340
  %conv2319 = zext i8 %934 to i32, !dbg !8340
  %cmp2320 = icmp eq i32 %conv2319, 9, !dbg !8340
  br i1 %cmp2320, label %cond.true2322, label %cond.false2343, !dbg !8340

cond.true2322:                                    ; preds = %cond.end2315
  %935 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2323 = zext i32 %935 to i64, !dbg !8340
  %arrayidx2324 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2323, !dbg !8340
  %936 = load i8, i8* %arrayidx2324, align 1, !dbg !8340
  %conv2325 = zext i8 %936 to i32, !dbg !8340
  %cmp2326 = icmp eq i32 %conv2325, 8, !dbg !8340
  br i1 %cmp2326, label %cond.true2334, label %lor.lhs.false2328, !dbg !8340

lor.lhs.false2328:                                ; preds = %cond.true2322
  %937 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2329 = zext i32 %937 to i64, !dbg !8340
  %arrayidx2330 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2329, !dbg !8340
  %938 = load i8, i8* %arrayidx2330, align 1, !dbg !8340
  %conv2331 = zext i8 %938 to i32, !dbg !8340
  %cmp2332 = icmp eq i32 %conv2331, 9, !dbg !8340
  br i1 %cmp2332, label %cond.true2334, label %cond.false2335, !dbg !8340

cond.true2334:                                    ; preds = %lor.lhs.false2328, %cond.true2322
  %939 = load i32, i32* %mode.addr, align 4, !dbg !8340
  br label %cond.end2339, !dbg !8340

cond.false2335:                                   ; preds = %lor.lhs.false2328
  %940 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2336 = zext i32 %940 to i64, !dbg !8340
  %arrayidx2337 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2336, !dbg !8340
  %941 = load i8, i8* %arrayidx2337, align 1, !dbg !8340
  %conv2338 = zext i8 %941 to i32, !dbg !8340
  br label %cond.end2339, !dbg !8340

cond.end2339:                                     ; preds = %cond.false2335, %cond.true2334
  %cond2340 = phi i32 [ %939, %cond.true2334 ], [ %conv2338, %cond.false2335 ], !dbg !8340
  %sub2341 = sub i32 %cond2340, 42, !dbg !8340
  %add2342 = add i32 %sub2341, 4, !dbg !8340
  br label %cond.end2363, !dbg !8340

cond.false2343:                                   ; preds = %cond.end2315
  %942 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2344 = zext i32 %942 to i64, !dbg !8340
  %arrayidx2345 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2344, !dbg !8340
  %943 = load i8, i8* %arrayidx2345, align 1, !dbg !8340
  %conv2346 = zext i8 %943 to i32, !dbg !8340
  %cmp2347 = icmp eq i32 %conv2346, 8, !dbg !8340
  br i1 %cmp2347, label %cond.true2355, label %lor.lhs.false2349, !dbg !8340

lor.lhs.false2349:                                ; preds = %cond.false2343
  %944 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2350 = zext i32 %944 to i64, !dbg !8340
  %arrayidx2351 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2350, !dbg !8340
  %945 = load i8, i8* %arrayidx2351, align 1, !dbg !8340
  %conv2352 = zext i8 %945 to i32, !dbg !8340
  %cmp2353 = icmp eq i32 %conv2352, 9, !dbg !8340
  br i1 %cmp2353, label %cond.true2355, label %cond.false2356, !dbg !8340

cond.true2355:                                    ; preds = %lor.lhs.false2349, %cond.false2343
  %946 = load i32, i32* %mode.addr, align 4, !dbg !8340
  br label %cond.end2360, !dbg !8340

cond.false2356:                                   ; preds = %lor.lhs.false2349
  %947 = load i32, i32* %mode.addr, align 4, !dbg !8340
  %idxprom2357 = zext i32 %947 to i64, !dbg !8340
  %arrayidx2358 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom2357, !dbg !8340
  %948 = load i8, i8* %arrayidx2358, align 1, !dbg !8340
  %conv2359 = zext i8 %948 to i32, !dbg !8340
  br label %cond.end2360, !dbg !8340

cond.end2360:                                     ; preds = %cond.false2356, %cond.true2355
  %cond2361 = phi i32 [ %946, %cond.true2355 ], [ %conv2359, %cond.false2356 ], !dbg !8340
  %sub2362 = sub i32 %cond2361, 38, !dbg !8340
  br label %cond.end2363, !dbg !8340

cond.end2363:                                     ; preds = %cond.end2360, %cond.end2339
  %cond2364 = phi i32 [ %add2342, %cond.end2339 ], [ %sub2362, %cond.end2360 ], !dbg !8340
  %idxprom2365 = zext i32 %cond2364 to i64, !dbg !8340
  %arrayidx2366 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom2365, !dbg !8340
  %949 = load %struct.real_format*, %struct.real_format** %arrayidx2366, align 8, !dbg !8340
  %has_nans2367 = getelementptr inbounds %struct.real_format, %struct.real_format* %949, i32 0, i32 11, !dbg !8340
  %950 = load i8, i8* %has_nans2367, align 2, !dbg !8340
  %conv2368 = zext i8 %950 to i32, !dbg !8340
  %tobool2369 = icmp ne i32 %conv2368, 0, !dbg !8340
  br i1 %tobool2369, label %land.lhs.true2370, label %land.lhs.true2372, !dbg !8340

land.lhs.true2370:                                ; preds = %cond.end2363
  %951 = load i32, i32* @flag_finite_math_only, align 4, !dbg !8340
  %tobool2371 = icmp ne i32 %951, 0, !dbg !8340
  br i1 %tobool2371, label %land.lhs.true2372, label %if.end2378, !dbg !8342

land.lhs.true2372:                                ; preds = %land.lhs.true2370, %cond.end2363, %lor.lhs.false2292, %if.end2272
  %call2373 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %d, %struct.real_value* @dconstm1), !dbg !8343
  %conv2374 = zext i8 %call2373 to i32, !dbg !8343
  %tobool2375 = icmp ne i32 %conv2374, 0, !dbg !8343
  br i1 %tobool2375, label %if.then2376, label %if.end2378, !dbg !8344

if.then2376:                                      ; preds = %land.lhs.true2372
  %952 = load i32, i32* %mode.addr, align 4, !dbg !8345
  %953 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8346
  %954 = load i32, i32* %mode.addr, align 4, !dbg !8347
  %call2377 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %952, %struct.rtx_def* %953, i32 %954), !dbg !8348
  store %struct.rtx_def* %call2377, %struct.rtx_def** %retval, align 8, !dbg !8349
  br label %return, !dbg !8349

if.end2378:                                       ; preds = %land.lhs.true2372, %land.lhs.true2370
  br label %if.end2379, !dbg !8350

if.end2379:                                       ; preds = %if.end2378, %land.lhs.true2259, %land.lhs.true2250, %lor.lhs.false2241, %if.end2227
  %955 = load i32, i32* %mode.addr, align 4, !dbg !8351
  %idxprom2380 = zext i32 %955 to i64, !dbg !8351
  %arrayidx2381 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2380, !dbg !8351
  %956 = load i8, i8* %arrayidx2381, align 1, !dbg !8351
  %conv2382 = zext i8 %956 to i32, !dbg !8351
  %cmp2383 = icmp eq i32 %conv2382, 8, !dbg !8351
  br i1 %cmp2383, label %land.lhs.true2403, label %lor.lhs.false2385, !dbg !8351

lor.lhs.false2385:                                ; preds = %if.end2379
  %957 = load i32, i32* %mode.addr, align 4, !dbg !8351
  %idxprom2386 = zext i32 %957 to i64, !dbg !8351
  %arrayidx2387 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2386, !dbg !8351
  %958 = load i8, i8* %arrayidx2387, align 1, !dbg !8351
  %conv2388 = zext i8 %958 to i32, !dbg !8351
  %cmp2389 = icmp eq i32 %conv2388, 9, !dbg !8351
  br i1 %cmp2389, label %land.lhs.true2403, label %lor.lhs.false2391, !dbg !8351

lor.lhs.false2391:                                ; preds = %lor.lhs.false2385
  %959 = load i32, i32* %mode.addr, align 4, !dbg !8351
  %idxprom2392 = zext i32 %959 to i64, !dbg !8351
  %arrayidx2393 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2392, !dbg !8351
  %960 = load i8, i8* %arrayidx2393, align 1, !dbg !8351
  %conv2394 = zext i8 %960 to i32, !dbg !8351
  %cmp2395 = icmp eq i32 %conv2394, 11, !dbg !8351
  br i1 %cmp2395, label %land.lhs.true2403, label %lor.lhs.false2397, !dbg !8351

lor.lhs.false2397:                                ; preds = %lor.lhs.false2391
  %961 = load i32, i32* %mode.addr, align 4, !dbg !8351
  %idxprom2398 = zext i32 %961 to i64, !dbg !8351
  %arrayidx2399 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2398, !dbg !8351
  %962 = load i8, i8* %arrayidx2399, align 1, !dbg !8351
  %conv2400 = zext i8 %962 to i32, !dbg !8351
  %cmp2401 = icmp eq i32 %conv2400, 17, !dbg !8351
  br i1 %cmp2401, label %land.lhs.true2403, label %if.end2441, !dbg !8353

land.lhs.true2403:                                ; preds = %lor.lhs.false2397, %lor.lhs.false2391, %lor.lhs.false2385, %if.end2379
  %963 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8354
  %964 = bitcast %struct.rtx_def* %963 to i32*, !dbg !8354
  %bf.load2404 = load i32, i32* %964, align 8, !dbg !8354
  %bf.clear2405 = and i32 %bf.load2404, 65535, !dbg !8354
  %cmp2406 = icmp eq i32 %bf.clear2405, 51, !dbg !8355
  br i1 %cmp2406, label %land.lhs.true2408, label %if.end2441, !dbg !8356

land.lhs.true2408:                                ; preds = %land.lhs.true2403
  %965 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8357
  %966 = bitcast %struct.rtx_def* %965 to i32*, !dbg !8357
  %bf.load2409 = load i32, i32* %966, align 8, !dbg !8357
  %bf.clear2410 = and i32 %bf.load2409, 65535, !dbg !8357
  %cmp2411 = icmp eq i32 %bf.clear2410, 51, !dbg !8358
  br i1 %cmp2411, label %land.lhs.true2413, label %if.end2441, !dbg !8359

land.lhs.true2413:                                ; preds = %land.lhs.true2408
  %967 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8360
  %u2414 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %967, i32 0, i32 1, !dbg !8360
  %fld2415 = bitcast %union.u* %u2414 to [1 x %union.rtunion_def]*, !dbg !8360
  %arrayidx2416 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2415, i64 0, i64 0, !dbg !8360
  %rt_rtx2417 = bitcast %union.rtunion_def* %arrayidx2416 to %struct.rtx_def**, !dbg !8360
  %968 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2417, align 8, !dbg !8360
  %969 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8361
  %u2418 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %969, i32 0, i32 1, !dbg !8361
  %fld2419 = bitcast %union.u* %u2418 to [1 x %union.rtunion_def]*, !dbg !8361
  %arrayidx2420 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2419, i64 0, i64 0, !dbg !8361
  %rt_rtx2421 = bitcast %union.rtunion_def* %arrayidx2420 to %struct.rtx_def**, !dbg !8361
  %970 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2421, align 8, !dbg !8361
  %call2422 = call i32 @rtx_equal_p(%struct.rtx_def* %968, %struct.rtx_def* %970), !dbg !8362
  %tobool2423 = icmp ne i32 %call2422, 0, !dbg !8362
  br i1 %tobool2423, label %land.lhs.true2424, label %if.end2441, !dbg !8363

land.lhs.true2424:                                ; preds = %land.lhs.true2413
  %971 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8364
  %u2425 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %971, i32 0, i32 1, !dbg !8364
  %fld2426 = bitcast %union.u* %u2425 to [1 x %union.rtunion_def]*, !dbg !8364
  %arrayidx2427 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2426, i64 0, i64 0, !dbg !8364
  %rt_rtx2428 = bitcast %union.rtunion_def* %arrayidx2427 to %struct.rtx_def**, !dbg !8364
  %972 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2428, align 8, !dbg !8364
  %call2429 = call i32 @side_effects_p(%struct.rtx_def* %972), !dbg !8365
  %tobool2430 = icmp ne i32 %call2429, 0, !dbg !8365
  br i1 %tobool2430, label %if.end2441, label %if.then2431, !dbg !8366

if.then2431:                                      ; preds = %land.lhs.true2424
  %973 = load i32, i32* %mode.addr, align 4, !dbg !8367
  %974 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8368
  %u2432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %974, i32 0, i32 1, !dbg !8368
  %fld2433 = bitcast %union.u* %u2432 to [1 x %union.rtunion_def]*, !dbg !8368
  %arrayidx2434 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2433, i64 0, i64 0, !dbg !8368
  %rt_rtx2435 = bitcast %union.rtunion_def* %arrayidx2434 to %struct.rtx_def**, !dbg !8368
  %975 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2435, align 8, !dbg !8368
  %976 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8369
  %u2436 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %976, i32 0, i32 1, !dbg !8369
  %fld2437 = bitcast %union.u* %u2436 to [1 x %union.rtunion_def]*, !dbg !8369
  %arrayidx2438 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2437, i64 0, i64 0, !dbg !8369
  %rt_rtx2439 = bitcast %union.rtunion_def* %arrayidx2438 to %struct.rtx_def**, !dbg !8369
  %977 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2439, align 8, !dbg !8369
  %call2440 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %973, %struct.rtx_def* %975, %struct.rtx_def* %977), !dbg !8370
  store %struct.rtx_def* %call2440, %struct.rtx_def** %retval, align 8, !dbg !8371
  br label %return, !dbg !8371

if.end2441:                                       ; preds = %land.lhs.true2424, %land.lhs.true2413, %land.lhs.true2408, %land.lhs.true2403, %lor.lhs.false2397
  %978 = load i32, i32* %mode.addr, align 4, !dbg !8372
  %idxprom2442 = zext i32 %978 to i64, !dbg !8372
  %arrayidx2443 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2442, !dbg !8372
  %979 = load i8, i8* %arrayidx2443, align 1, !dbg !8372
  %conv2444 = zext i8 %979 to i32, !dbg !8372
  %cmp2445 = icmp eq i32 %conv2444, 8, !dbg !8372
  br i1 %cmp2445, label %land.lhs.true2453, label %lor.lhs.false2447, !dbg !8372

lor.lhs.false2447:                                ; preds = %if.end2441
  %980 = load i32, i32* %mode.addr, align 4, !dbg !8372
  %idxprom2448 = zext i32 %980 to i64, !dbg !8372
  %arrayidx2449 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2448, !dbg !8372
  %981 = load i8, i8* %arrayidx2449, align 1, !dbg !8372
  %conv2450 = zext i8 %981 to i32, !dbg !8372
  %cmp2451 = icmp eq i32 %conv2450, 9, !dbg !8372
  br i1 %cmp2451, label %land.lhs.true2453, label %if.end2491, !dbg !8374

land.lhs.true2453:                                ; preds = %lor.lhs.false2447, %if.end2441
  %982 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8375
  %983 = bitcast %struct.rtx_def* %982 to i32*, !dbg !8375
  %bf.load2454 = load i32, i32* %983, align 8, !dbg !8375
  %bf.clear2455 = and i32 %bf.load2454, 65535, !dbg !8375
  %cmp2456 = icmp eq i32 %bf.clear2455, 111, !dbg !8376
  br i1 %cmp2456, label %land.lhs.true2458, label %if.end2491, !dbg !8377

land.lhs.true2458:                                ; preds = %land.lhs.true2453
  %984 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8378
  %985 = bitcast %struct.rtx_def* %984 to i32*, !dbg !8378
  %bf.load2459 = load i32, i32* %985, align 8, !dbg !8378
  %bf.clear2460 = and i32 %bf.load2459, 65535, !dbg !8378
  %cmp2461 = icmp eq i32 %bf.clear2460, 111, !dbg !8379
  br i1 %cmp2461, label %land.lhs.true2463, label %if.end2491, !dbg !8380

land.lhs.true2463:                                ; preds = %land.lhs.true2458
  %986 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8381
  %u2464 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %986, i32 0, i32 1, !dbg !8381
  %fld2465 = bitcast %union.u* %u2464 to [1 x %union.rtunion_def]*, !dbg !8381
  %arrayidx2466 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2465, i64 0, i64 0, !dbg !8381
  %rt_rtx2467 = bitcast %union.rtunion_def* %arrayidx2466 to %struct.rtx_def**, !dbg !8381
  %987 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2467, align 8, !dbg !8381
  %988 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8382
  %u2468 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %988, i32 0, i32 1, !dbg !8382
  %fld2469 = bitcast %union.u* %u2468 to [1 x %union.rtunion_def]*, !dbg !8382
  %arrayidx2470 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2469, i64 0, i64 0, !dbg !8382
  %rt_rtx2471 = bitcast %union.rtunion_def* %arrayidx2470 to %struct.rtx_def**, !dbg !8382
  %989 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2471, align 8, !dbg !8382
  %call2472 = call i32 @rtx_equal_p(%struct.rtx_def* %987, %struct.rtx_def* %989), !dbg !8383
  %tobool2473 = icmp ne i32 %call2472, 0, !dbg !8383
  br i1 %tobool2473, label %land.lhs.true2474, label %if.end2491, !dbg !8384

land.lhs.true2474:                                ; preds = %land.lhs.true2463
  %990 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8385
  %u2475 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %990, i32 0, i32 1, !dbg !8385
  %fld2476 = bitcast %union.u* %u2475 to [1 x %union.rtunion_def]*, !dbg !8385
  %arrayidx2477 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2476, i64 0, i64 0, !dbg !8385
  %rt_rtx2478 = bitcast %union.rtunion_def* %arrayidx2477 to %struct.rtx_def**, !dbg !8385
  %991 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2478, align 8, !dbg !8385
  %call2479 = call i32 @side_effects_p(%struct.rtx_def* %991), !dbg !8386
  %tobool2480 = icmp ne i32 %call2479, 0, !dbg !8386
  br i1 %tobool2480, label %if.end2491, label %if.then2481, !dbg !8387

if.then2481:                                      ; preds = %land.lhs.true2474
  %992 = load i32, i32* %mode.addr, align 4, !dbg !8388
  %993 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8389
  %u2482 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %993, i32 0, i32 1, !dbg !8389
  %fld2483 = bitcast %union.u* %u2482 to [1 x %union.rtunion_def]*, !dbg !8389
  %arrayidx2484 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2483, i64 0, i64 0, !dbg !8389
  %rt_rtx2485 = bitcast %union.rtunion_def* %arrayidx2484 to %struct.rtx_def**, !dbg !8389
  %994 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2485, align 8, !dbg !8389
  %995 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8390
  %u2486 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %995, i32 0, i32 1, !dbg !8390
  %fld2487 = bitcast %union.u* %u2486 to [1 x %union.rtunion_def]*, !dbg !8390
  %arrayidx2488 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2487, i64 0, i64 0, !dbg !8390
  %rt_rtx2489 = bitcast %union.rtunion_def* %arrayidx2488 to %struct.rtx_def**, !dbg !8390
  %996 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2489, align 8, !dbg !8390
  %call2490 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %992, %struct.rtx_def* %994, %struct.rtx_def* %996), !dbg !8391
  store %struct.rtx_def* %call2490, %struct.rtx_def** %retval, align 8, !dbg !8392
  br label %return, !dbg !8392

if.end2491:                                       ; preds = %land.lhs.true2474, %land.lhs.true2463, %land.lhs.true2458, %land.lhs.true2453, %lor.lhs.false2447
  %997 = load i32, i32* %mode.addr, align 4, !dbg !8393
  %idxprom2492 = zext i32 %997 to i64, !dbg !8393
  %arrayidx2493 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2492, !dbg !8393
  %998 = load i8, i8* %arrayidx2493, align 1, !dbg !8393
  %conv2494 = zext i8 %998 to i32, !dbg !8393
  %cmp2495 = icmp eq i32 %conv2494, 8, !dbg !8393
  br i1 %cmp2495, label %lor.lhs.false2515, label %lor.lhs.false2497, !dbg !8393

lor.lhs.false2497:                                ; preds = %if.end2491
  %999 = load i32, i32* %mode.addr, align 4, !dbg !8393
  %idxprom2498 = zext i32 %999 to i64, !dbg !8393
  %arrayidx2499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2498, !dbg !8393
  %1000 = load i8, i8* %arrayidx2499, align 1, !dbg !8393
  %conv2500 = zext i8 %1000 to i32, !dbg !8393
  %cmp2501 = icmp eq i32 %conv2500, 9, !dbg !8393
  br i1 %cmp2501, label %lor.lhs.false2515, label %lor.lhs.false2503, !dbg !8393

lor.lhs.false2503:                                ; preds = %lor.lhs.false2497
  %1001 = load i32, i32* %mode.addr, align 4, !dbg !8393
  %idxprom2504 = zext i32 %1001 to i64, !dbg !8393
  %arrayidx2505 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2504, !dbg !8393
  %1002 = load i8, i8* %arrayidx2505, align 1, !dbg !8393
  %conv2506 = zext i8 %1002 to i32, !dbg !8393
  %cmp2507 = icmp eq i32 %conv2506, 11, !dbg !8393
  br i1 %cmp2507, label %lor.lhs.false2515, label %lor.lhs.false2509, !dbg !8393

lor.lhs.false2509:                                ; preds = %lor.lhs.false2503
  %1003 = load i32, i32* %mode.addr, align 4, !dbg !8393
  %idxprom2510 = zext i32 %1003 to i64, !dbg !8393
  %arrayidx2511 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2510, !dbg !8393
  %1004 = load i8, i8* %arrayidx2511, align 1, !dbg !8393
  %conv2512 = zext i8 %1004 to i32, !dbg !8393
  %cmp2513 = icmp eq i32 %conv2512, 17, !dbg !8393
  br i1 %cmp2513, label %lor.lhs.false2515, label %if.then2517, !dbg !8395

lor.lhs.false2515:                                ; preds = %lor.lhs.false2509, %lor.lhs.false2503, %lor.lhs.false2497, %if.end2491
  %1005 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !8396
  %tobool2516 = icmp ne i32 %1005, 0, !dbg !8396
  br i1 %tobool2516, label %if.then2517, label %if.end2522, !dbg !8397

if.then2517:                                      ; preds = %lor.lhs.false2515, %lor.lhs.false2509
  %1006 = load i32, i32* %code.addr, align 4, !dbg !8398
  %1007 = load i32, i32* %mode.addr, align 4, !dbg !8400
  %1008 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8401
  %1009 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8402
  %call2518 = call %struct.rtx_def* @simplify_associative_operation(i32 %1006, i32 %1007, %struct.rtx_def* %1008, %struct.rtx_def* %1009), !dbg !8403
  store %struct.rtx_def* %call2518, %struct.rtx_def** %tem, align 8, !dbg !8404
  %1010 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8405
  %tobool2519 = icmp ne %struct.rtx_def* %1010, null, !dbg !8405
  br i1 %tobool2519, label %if.then2520, label %if.end2521, !dbg !8407

if.then2520:                                      ; preds = %if.then2517
  %1011 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8408
  store %struct.rtx_def* %1011, %struct.rtx_def** %retval, align 8, !dbg !8409
  br label %return, !dbg !8409

if.end2521:                                       ; preds = %if.then2517
  br label %if.end2522, !dbg !8410

if.end2522:                                       ; preds = %if.end2521, %lor.lhs.false2515
  br label %sw.epilog5879, !dbg !8411

sw.bb2523:                                        ; preds = %entry
  %1012 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8412
  %1013 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8414
  %cmp2524 = icmp eq %struct.rtx_def* %1012, %1013, !dbg !8415
  br i1 %cmp2524, label %if.then2526, label %if.end2527, !dbg !8416

if.then2526:                                      ; preds = %sw.bb2523
  %1014 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8417
  store %struct.rtx_def* %1014, %struct.rtx_def** %retval, align 8, !dbg !8418
  br label %return, !dbg !8418

if.end2527:                                       ; preds = %sw.bb2523
  %1015 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8419
  %1016 = bitcast %struct.rtx_def* %1015 to i32*, !dbg !8419
  %bf.load2528 = load i32, i32* %1016, align 8, !dbg !8419
  %bf.clear2529 = and i32 %bf.load2528, 65535, !dbg !8419
  %cmp2530 = icmp eq i32 %bf.clear2529, 30, !dbg !8419
  br i1 %cmp2530, label %land.lhs.true2532, label %if.end2544, !dbg !8421

land.lhs.true2532:                                ; preds = %if.end2527
  %1017 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8422
  %u2533 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1017, i32 0, i32 1, !dbg !8422
  %hwint2534 = bitcast %union.u* %u2533 to [1 x i64]*, !dbg !8422
  %arrayidx2535 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2534, i64 0, i64 0, !dbg !8422
  %1018 = load i64, i64* %arrayidx2535, align 8, !dbg !8422
  %1019 = load i32, i32* %mode.addr, align 4, !dbg !8423
  %idxprom2536 = zext i32 %1019 to i64, !dbg !8423
  %arrayidx2537 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom2536, !dbg !8423
  %1020 = load i64, i64* %arrayidx2537, align 8, !dbg !8423
  %and2538 = and i64 %1018, %1020, !dbg !8424
  %1021 = load i32, i32* %mode.addr, align 4, !dbg !8425
  %idxprom2539 = zext i32 %1021 to i64, !dbg !8425
  %arrayidx2540 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom2539, !dbg !8425
  %1022 = load i64, i64* %arrayidx2540, align 8, !dbg !8425
  %cmp2541 = icmp eq i64 %and2538, %1022, !dbg !8426
  br i1 %cmp2541, label %if.then2543, label %if.end2544, !dbg !8427

if.then2543:                                      ; preds = %land.lhs.true2532
  %1023 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8428
  store %struct.rtx_def* %1023, %struct.rtx_def** %retval, align 8, !dbg !8429
  br label %return, !dbg !8429

if.end2544:                                       ; preds = %land.lhs.true2532, %if.end2527
  %1024 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !8430
  %1025 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8432
  %call2545 = call i32 @rtx_equal_p(%struct.rtx_def* %1024, %struct.rtx_def* %1025), !dbg !8433
  %tobool2546 = icmp ne i32 %call2545, 0, !dbg !8433
  br i1 %tobool2546, label %land.lhs.true2547, label %if.end2551, !dbg !8434

land.lhs.true2547:                                ; preds = %if.end2544
  %1026 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8435
  %call2548 = call i32 @side_effects_p(%struct.rtx_def* %1026), !dbg !8436
  %tobool2549 = icmp ne i32 %call2548, 0, !dbg !8436
  br i1 %tobool2549, label %if.end2551, label %if.then2550, !dbg !8437

if.then2550:                                      ; preds = %land.lhs.true2547
  %1027 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8438
  store %struct.rtx_def* %1027, %struct.rtx_def** %retval, align 8, !dbg !8439
  br label %return, !dbg !8439

if.end2551:                                       ; preds = %land.lhs.true2547, %if.end2544
  %1028 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8440
  %1029 = bitcast %struct.rtx_def* %1028 to i32*, !dbg !8440
  %bf.load2552 = load i32, i32* %1029, align 8, !dbg !8440
  %bf.clear2553 = and i32 %bf.load2552, 65535, !dbg !8440
  %cmp2554 = icmp eq i32 %bf.clear2553, 64, !dbg !8442
  br i1 %cmp2554, label %land.lhs.true2556, label %lor.lhs.false2563, !dbg !8443

land.lhs.true2556:                                ; preds = %if.end2551
  %1030 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8444
  %u2557 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1030, i32 0, i32 1, !dbg !8444
  %fld2558 = bitcast %union.u* %u2557 to [1 x %union.rtunion_def]*, !dbg !8444
  %arrayidx2559 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2558, i64 0, i64 0, !dbg !8444
  %rt_rtx2560 = bitcast %union.rtunion_def* %arrayidx2559 to %struct.rtx_def**, !dbg !8444
  %1031 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2560, align 8, !dbg !8444
  %1032 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8445
  %call2561 = call i32 @rtx_equal_p(%struct.rtx_def* %1031, %struct.rtx_def* %1032), !dbg !8446
  %tobool2562 = icmp ne i32 %call2561, 0, !dbg !8446
  br i1 %tobool2562, label %land.lhs.true2575, label %lor.lhs.false2563, !dbg !8447

lor.lhs.false2563:                                ; preds = %land.lhs.true2556, %if.end2551
  %1033 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8448
  %1034 = bitcast %struct.rtx_def* %1033 to i32*, !dbg !8448
  %bf.load2564 = load i32, i32* %1034, align 8, !dbg !8448
  %bf.clear2565 = and i32 %bf.load2564, 65535, !dbg !8448
  %cmp2566 = icmp eq i32 %bf.clear2565, 64, !dbg !8449
  br i1 %cmp2566, label %land.lhs.true2568, label %if.end2591, !dbg !8450

land.lhs.true2568:                                ; preds = %lor.lhs.false2563
  %1035 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8451
  %u2569 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1035, i32 0, i32 1, !dbg !8451
  %fld2570 = bitcast %union.u* %u2569 to [1 x %union.rtunion_def]*, !dbg !8451
  %arrayidx2571 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2570, i64 0, i64 0, !dbg !8451
  %rt_rtx2572 = bitcast %union.rtunion_def* %arrayidx2571 to %struct.rtx_def**, !dbg !8451
  %1036 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2572, align 8, !dbg !8451
  %1037 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8452
  %call2573 = call i32 @rtx_equal_p(%struct.rtx_def* %1036, %struct.rtx_def* %1037), !dbg !8453
  %tobool2574 = icmp ne i32 %call2573, 0, !dbg !8453
  br i1 %tobool2574, label %land.lhs.true2575, label %if.end2591, !dbg !8454

land.lhs.true2575:                                ; preds = %land.lhs.true2568, %land.lhs.true2556
  %1038 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8455
  %call2576 = call i32 @side_effects_p(%struct.rtx_def* %1038), !dbg !8456
  %tobool2577 = icmp ne i32 %call2576, 0, !dbg !8456
  br i1 %tobool2577, label %if.end2591, label %land.lhs.true2578, !dbg !8457

land.lhs.true2578:                                ; preds = %land.lhs.true2575
  %1039 = load i32, i32* %mode.addr, align 4, !dbg !8458
  %idxprom2579 = zext i32 %1039 to i64, !dbg !8458
  %arrayidx2580 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2579, !dbg !8458
  %1040 = load i8, i8* %arrayidx2580, align 1, !dbg !8458
  %conv2581 = zext i8 %1040 to i32, !dbg !8458
  %cmp2582 = icmp eq i32 %conv2581, 2, !dbg !8458
  br i1 %cmp2582, label %if.then2590, label %lor.lhs.false2584, !dbg !8458

lor.lhs.false2584:                                ; preds = %land.lhs.true2578
  %1041 = load i32, i32* %mode.addr, align 4, !dbg !8458
  %idxprom2585 = zext i32 %1041 to i64, !dbg !8458
  %arrayidx2586 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom2585, !dbg !8458
  %1042 = load i8, i8* %arrayidx2586, align 1, !dbg !8458
  %conv2587 = zext i8 %1042 to i32, !dbg !8458
  %cmp2588 = icmp eq i32 %conv2587, 3, !dbg !8458
  br i1 %cmp2588, label %if.then2590, label %if.end2591, !dbg !8459

if.then2590:                                      ; preds = %lor.lhs.false2584, %land.lhs.true2578
  %1043 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !8460
  store %struct.rtx_def* %1043, %struct.rtx_def** %retval, align 8, !dbg !8461
  br label %return, !dbg !8461

if.end2591:                                       ; preds = %lor.lhs.false2584, %land.lhs.true2575, %land.lhs.true2568, %lor.lhs.false2563
  %1044 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8462
  %1045 = bitcast %struct.rtx_def* %1044 to i32*, !dbg !8462
  %bf.load2592 = load i32, i32* %1045, align 8, !dbg !8462
  %bf.clear2593 = and i32 %bf.load2592, 65535, !dbg !8462
  %cmp2594 = icmp eq i32 %bf.clear2593, 30, !dbg !8462
  br i1 %cmp2594, label %land.lhs.true2596, label %if.end2615, !dbg !8464

land.lhs.true2596:                                ; preds = %if.end2591
  %1046 = load i32, i32* %mode.addr, align 4, !dbg !8465
  %idxprom2597 = zext i32 %1046 to i64, !dbg !8465
  %arrayidx2598 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2597, !dbg !8465
  %1047 = load i8, i8* %arrayidx2598, align 1, !dbg !8465
  %conv2599 = zext i8 %1047 to i16, !dbg !8465
  %conv2600 = zext i16 %conv2599 to i32, !dbg !8465
  %mul2601 = mul nsw i32 %conv2600, 8, !dbg !8465
  %conv2602 = trunc i32 %mul2601 to i16, !dbg !8465
  %conv2603 = zext i16 %conv2602 to i32, !dbg !8465
  %cmp2604 = icmp sle i32 %conv2603, 64, !dbg !8466
  br i1 %cmp2604, label %land.lhs.true2606, label %if.end2615, !dbg !8467

land.lhs.true2606:                                ; preds = %land.lhs.true2596
  %1048 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8468
  %1049 = load i32, i32* %mode.addr, align 4, !dbg !8469
  %call2607 = call i64 @nonzero_bits(%struct.rtx_def* %1048, i32 %1049), !dbg !8470
  %1050 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8471
  %u2608 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1050, i32 0, i32 1, !dbg !8471
  %hwint2609 = bitcast %union.u* %u2608 to [1 x i64]*, !dbg !8471
  %arrayidx2610 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2609, i64 0, i64 0, !dbg !8471
  %1051 = load i64, i64* %arrayidx2610, align 8, !dbg !8471
  %neg = xor i64 %1051, -1, !dbg !8472
  %and2611 = and i64 %call2607, %neg, !dbg !8473
  %cmp2612 = icmp eq i64 %and2611, 0, !dbg !8474
  br i1 %cmp2612, label %if.then2614, label %if.end2615, !dbg !8475

if.then2614:                                      ; preds = %land.lhs.true2606
  %1052 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8476
  store %struct.rtx_def* %1052, %struct.rtx_def** %retval, align 8, !dbg !8477
  br label %return, !dbg !8477

if.end2615:                                       ; preds = %land.lhs.true2606, %land.lhs.true2596, %if.end2591
  %1053 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8478
  %1054 = bitcast %struct.rtx_def* %1053 to i32*, !dbg !8478
  %bf.load2616 = load i32, i32* %1054, align 8, !dbg !8478
  %bf.clear2617 = and i32 %bf.load2616, 65535, !dbg !8478
  %cmp2618 = icmp eq i32 %bf.clear2617, 61, !dbg !8480
  br i1 %cmp2618, label %land.lhs.true2620, label %if.end2686, !dbg !8481

land.lhs.true2620:                                ; preds = %if.end2615
  %1055 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8482
  %1056 = bitcast %struct.rtx_def* %1055 to i32*, !dbg !8482
  %bf.load2621 = load i32, i32* %1056, align 8, !dbg !8482
  %bf.clear2622 = and i32 %bf.load2621, 65535, !dbg !8482
  %cmp2623 = icmp eq i32 %bf.clear2622, 30, !dbg !8482
  br i1 %cmp2623, label %land.lhs.true2625, label %if.end2686, !dbg !8483

land.lhs.true2625:                                ; preds = %land.lhs.true2620
  %1057 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8484
  %u2626 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1057, i32 0, i32 1, !dbg !8484
  %fld2627 = bitcast %union.u* %u2626 to [1 x %union.rtunion_def]*, !dbg !8484
  %arrayidx2628 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2627, i64 0, i64 1, !dbg !8484
  %rt_rtx2629 = bitcast %union.rtunion_def* %arrayidx2628 to %struct.rtx_def**, !dbg !8484
  %1058 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2629, align 8, !dbg !8484
  %1059 = bitcast %struct.rtx_def* %1058 to i32*, !dbg !8484
  %bf.load2630 = load i32, i32* %1059, align 8, !dbg !8484
  %bf.clear2631 = and i32 %bf.load2630, 65535, !dbg !8484
  %cmp2632 = icmp eq i32 %bf.clear2631, 30, !dbg !8484
  br i1 %cmp2632, label %if.then2634, label %if.end2686, !dbg !8485

if.then2634:                                      ; preds = %land.lhs.true2625
  call void @llvm.dbg.declare(metadata i64* %mask, metadata !8486, metadata !DIExpression()), !dbg !8488
  %1060 = load i32, i32* %mode.addr, align 4, !dbg !8489
  %idxprom2635 = zext i32 %1060 to i64, !dbg !8489
  %arrayidx2636 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom2635, !dbg !8489
  %1061 = load i64, i64* %arrayidx2636, align 8, !dbg !8489
  store i64 %1061, i64* %mask, align 8, !dbg !8488
  call void @llvm.dbg.declare(metadata i64* %c1, metadata !8490, metadata !DIExpression()), !dbg !8491
  %1062 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8492
  %u2637 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1062, i32 0, i32 1, !dbg !8492
  %fld2638 = bitcast %union.u* %u2637 to [1 x %union.rtunion_def]*, !dbg !8492
  %arrayidx2639 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2638, i64 0, i64 1, !dbg !8492
  %rt_rtx2640 = bitcast %union.rtunion_def* %arrayidx2639 to %struct.rtx_def**, !dbg !8492
  %1063 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2640, align 8, !dbg !8492
  %u2641 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1063, i32 0, i32 1, !dbg !8492
  %hwint2642 = bitcast %union.u* %u2641 to [1 x i64]*, !dbg !8492
  %arrayidx2643 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2642, i64 0, i64 0, !dbg !8492
  %1064 = load i64, i64* %arrayidx2643, align 8, !dbg !8492
  store i64 %1064, i64* %c1, align 8, !dbg !8491
  call void @llvm.dbg.declare(metadata i64* %c2, metadata !8493, metadata !DIExpression()), !dbg !8494
  %1065 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8495
  %u2644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1065, i32 0, i32 1, !dbg !8495
  %hwint2645 = bitcast %union.u* %u2644 to [1 x i64]*, !dbg !8495
  %arrayidx2646 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2645, i64 0, i64 0, !dbg !8495
  %1066 = load i64, i64* %arrayidx2646, align 8, !dbg !8495
  store i64 %1066, i64* %c2, align 8, !dbg !8494
  %1067 = load i64, i64* %c1, align 8, !dbg !8496
  %1068 = load i64, i64* %c2, align 8, !dbg !8498
  %and2647 = and i64 %1067, %1068, !dbg !8499
  %1069 = load i64, i64* %c1, align 8, !dbg !8500
  %cmp2648 = icmp eq i64 %and2647, %1069, !dbg !8501
  br i1 %cmp2648, label %land.lhs.true2650, label %if.end2658, !dbg !8502

land.lhs.true2650:                                ; preds = %if.then2634
  %1070 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8503
  %u2651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1070, i32 0, i32 1, !dbg !8503
  %fld2652 = bitcast %union.u* %u2651 to [1 x %union.rtunion_def]*, !dbg !8503
  %arrayidx2653 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2652, i64 0, i64 0, !dbg !8503
  %rt_rtx2654 = bitcast %union.rtunion_def* %arrayidx2653 to %struct.rtx_def**, !dbg !8503
  %1071 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2654, align 8, !dbg !8503
  %call2655 = call i32 @side_effects_p(%struct.rtx_def* %1071), !dbg !8504
  %tobool2656 = icmp ne i32 %call2655, 0, !dbg !8504
  br i1 %tobool2656, label %if.end2658, label %if.then2657, !dbg !8505

if.then2657:                                      ; preds = %land.lhs.true2650
  %1072 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8506
  store %struct.rtx_def* %1072, %struct.rtx_def** %retval, align 8, !dbg !8507
  br label %return, !dbg !8507

if.end2658:                                       ; preds = %land.lhs.true2650, %if.then2634
  %1073 = load i64, i64* %c1, align 8, !dbg !8508
  %1074 = load i64, i64* %c2, align 8, !dbg !8510
  %or = or i64 %1073, %1074, !dbg !8511
  %1075 = load i64, i64* %mask, align 8, !dbg !8512
  %and2659 = and i64 %or, %1075, !dbg !8513
  %1076 = load i64, i64* %mask, align 8, !dbg !8514
  %cmp2660 = icmp eq i64 %and2659, %1076, !dbg !8515
  br i1 %cmp2660, label %if.then2662, label %if.end2668, !dbg !8516

if.then2662:                                      ; preds = %if.end2658
  %1077 = load i32, i32* %mode.addr, align 4, !dbg !8517
  %1078 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8518
  %u2663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1078, i32 0, i32 1, !dbg !8518
  %fld2664 = bitcast %union.u* %u2663 to [1 x %union.rtunion_def]*, !dbg !8518
  %arrayidx2665 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2664, i64 0, i64 0, !dbg !8518
  %rt_rtx2666 = bitcast %union.rtunion_def* %arrayidx2665 to %struct.rtx_def**, !dbg !8518
  %1079 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2666, align 8, !dbg !8518
  %1080 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8519
  %call2667 = call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %1077, %struct.rtx_def* %1079, %struct.rtx_def* %1080), !dbg !8520
  store %struct.rtx_def* %call2667, %struct.rtx_def** %retval, align 8, !dbg !8521
  br label %return, !dbg !8521

if.end2668:                                       ; preds = %if.end2658
  %1081 = load i64, i64* %c1, align 8, !dbg !8522
  %1082 = load i64, i64* %c2, align 8, !dbg !8524
  %neg2669 = xor i64 %1082, -1, !dbg !8525
  %and2670 = and i64 %1081, %neg2669, !dbg !8526
  %1083 = load i64, i64* %mask, align 8, !dbg !8527
  %and2671 = and i64 %and2670, %1083, !dbg !8528
  %1084 = load i64, i64* %c1, align 8, !dbg !8529
  %1085 = load i64, i64* %mask, align 8, !dbg !8530
  %and2672 = and i64 %1084, %1085, !dbg !8531
  %cmp2673 = icmp ne i64 %and2671, %and2672, !dbg !8532
  br i1 %cmp2673, label %if.then2675, label %if.end2685, !dbg !8533

if.then2675:                                      ; preds = %if.end2668
  %1086 = load i32, i32* %mode.addr, align 4, !dbg !8534
  %1087 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8536
  %u2676 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1087, i32 0, i32 1, !dbg !8536
  %fld2677 = bitcast %union.u* %u2676 to [1 x %union.rtunion_def]*, !dbg !8536
  %arrayidx2678 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2677, i64 0, i64 0, !dbg !8536
  %rt_rtx2679 = bitcast %union.rtunion_def* %arrayidx2678 to %struct.rtx_def**, !dbg !8536
  %1088 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2679, align 8, !dbg !8536
  %1089 = load i64, i64* %c1, align 8, !dbg !8537
  %1090 = load i64, i64* %c2, align 8, !dbg !8538
  %neg2680 = xor i64 %1090, -1, !dbg !8539
  %and2681 = and i64 %1089, %neg2680, !dbg !8540
  %1091 = load i32, i32* %mode.addr, align 4, !dbg !8541
  %call2682 = call %struct.rtx_def* @gen_int_mode(i64 %and2681, i32 %1091), !dbg !8542
  %call2683 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1086, %struct.rtx_def* %1088, %struct.rtx_def* %call2682), !dbg !8543
  store %struct.rtx_def* %call2683, %struct.rtx_def** %tem, align 8, !dbg !8544
  %1092 = load i32, i32* %mode.addr, align 4, !dbg !8545
  %1093 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8546
  %1094 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8547
  %call2684 = call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %1092, %struct.rtx_def* %1093, %struct.rtx_def* %1094), !dbg !8548
  store %struct.rtx_def* %call2684, %struct.rtx_def** %retval, align 8, !dbg !8549
  br label %return, !dbg !8549

if.end2685:                                       ; preds = %if.end2668
  br label %if.end2686, !dbg !8550

if.end2686:                                       ; preds = %if.end2685, %land.lhs.true2625, %land.lhs.true2620, %if.end2615
  %1095 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8551
  %1096 = bitcast %struct.rtx_def* %1095 to i32*, !dbg !8551
  %bf.load2687 = load i32, i32* %1096, align 8, !dbg !8551
  %bf.clear2688 = and i32 %bf.load2687, 65535, !dbg !8551
  %cmp2689 = icmp eq i32 %bf.clear2688, 61, !dbg !8553
  br i1 %cmp2689, label %land.lhs.true2691, label %if.end2720, !dbg !8554

land.lhs.true2691:                                ; preds = %if.end2686
  %1097 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8555
  %u2692 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1097, i32 0, i32 1, !dbg !8555
  %fld2693 = bitcast %union.u* %u2692 to [1 x %union.rtunion_def]*, !dbg !8555
  %arrayidx2694 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2693, i64 0, i64 0, !dbg !8555
  %rt_rtx2695 = bitcast %union.rtunion_def* %arrayidx2694 to %struct.rtx_def**, !dbg !8555
  %1098 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2695, align 8, !dbg !8555
  %1099 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8556
  %call2696 = call i32 @rtx_equal_p(%struct.rtx_def* %1098, %struct.rtx_def* %1099), !dbg !8557
  %tobool2697 = icmp ne i32 %call2696, 0, !dbg !8557
  br i1 %tobool2697, label %land.lhs.true2705, label %lor.lhs.false2698, !dbg !8558

lor.lhs.false2698:                                ; preds = %land.lhs.true2691
  %1100 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8559
  %u2699 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1100, i32 0, i32 1, !dbg !8559
  %fld2700 = bitcast %union.u* %u2699 to [1 x %union.rtunion_def]*, !dbg !8559
  %arrayidx2701 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2700, i64 0, i64 1, !dbg !8559
  %rt_rtx2702 = bitcast %union.rtunion_def* %arrayidx2701 to %struct.rtx_def**, !dbg !8559
  %1101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2702, align 8, !dbg !8559
  %1102 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8560
  %call2703 = call i32 @rtx_equal_p(%struct.rtx_def* %1101, %struct.rtx_def* %1102), !dbg !8561
  %tobool2704 = icmp ne i32 %call2703, 0, !dbg !8561
  br i1 %tobool2704, label %land.lhs.true2705, label %if.end2720, !dbg !8562

land.lhs.true2705:                                ; preds = %lor.lhs.false2698, %land.lhs.true2691
  %1103 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8563
  %u2706 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1103, i32 0, i32 1, !dbg !8563
  %fld2707 = bitcast %union.u* %u2706 to [1 x %union.rtunion_def]*, !dbg !8563
  %arrayidx2708 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2707, i64 0, i64 0, !dbg !8563
  %rt_rtx2709 = bitcast %union.rtunion_def* %arrayidx2708 to %struct.rtx_def**, !dbg !8563
  %1104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2709, align 8, !dbg !8563
  %call2710 = call i32 @side_effects_p(%struct.rtx_def* %1104), !dbg !8564
  %tobool2711 = icmp ne i32 %call2710, 0, !dbg !8564
  br i1 %tobool2711, label %if.end2720, label %land.lhs.true2712, !dbg !8565

land.lhs.true2712:                                ; preds = %land.lhs.true2705
  %1105 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8566
  %u2713 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1105, i32 0, i32 1, !dbg !8566
  %fld2714 = bitcast %union.u* %u2713 to [1 x %union.rtunion_def]*, !dbg !8566
  %arrayidx2715 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2714, i64 0, i64 1, !dbg !8566
  %rt_rtx2716 = bitcast %union.rtunion_def* %arrayidx2715 to %struct.rtx_def**, !dbg !8566
  %1106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2716, align 8, !dbg !8566
  %call2717 = call i32 @side_effects_p(%struct.rtx_def* %1106), !dbg !8567
  %tobool2718 = icmp ne i32 %call2717, 0, !dbg !8567
  br i1 %tobool2718, label %if.end2720, label %if.then2719, !dbg !8568

if.then2719:                                      ; preds = %land.lhs.true2712
  %1107 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8569
  store %struct.rtx_def* %1107, %struct.rtx_def** %retval, align 8, !dbg !8570
  br label %return, !dbg !8570

if.end2720:                                       ; preds = %land.lhs.true2712, %land.lhs.true2705, %lor.lhs.false2698, %if.end2686
  %1108 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8571
  %1109 = bitcast %struct.rtx_def* %1108 to i32*, !dbg !8571
  %bf.load2721 = load i32, i32* %1109, align 8, !dbg !8571
  %bf.clear2722 = and i32 %bf.load2721, 65535, !dbg !8571
  %cmp2723 = icmp eq i32 %bf.clear2722, 65, !dbg !8573
  br i1 %cmp2723, label %if.then2730, label %lor.lhs.false2725, !dbg !8574

lor.lhs.false2725:                                ; preds = %if.end2720
  %1110 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8575
  %1111 = bitcast %struct.rtx_def* %1110 to i32*, !dbg !8575
  %bf.load2726 = load i32, i32* %1111, align 8, !dbg !8575
  %bf.clear2727 = and i32 %bf.load2726, 65535, !dbg !8575
  %cmp2728 = icmp eq i32 %bf.clear2727, 39, !dbg !8576
  br i1 %cmp2728, label %if.then2730, label %if.else2731, !dbg !8577

if.then2730:                                      ; preds = %lor.lhs.false2725, %if.end2720
  %1112 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8578
  store %struct.rtx_def* %1112, %struct.rtx_def** %opleft, align 8, !dbg !8580
  %1113 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8581
  store %struct.rtx_def* %1113, %struct.rtx_def** %opright, align 8, !dbg !8582
  br label %if.end2732, !dbg !8583

if.else2731:                                      ; preds = %lor.lhs.false2725
  %1114 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8584
  store %struct.rtx_def* %1114, %struct.rtx_def** %opright, align 8, !dbg !8586
  %1115 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8587
  store %struct.rtx_def* %1115, %struct.rtx_def** %opleft, align 8, !dbg !8588
  br label %if.end2732

if.end2732:                                       ; preds = %if.else2731, %if.then2730
  %1116 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8589
  %1117 = bitcast %struct.rtx_def* %1116 to i32*, !dbg !8589
  %bf.load2733 = load i32, i32* %1117, align 8, !dbg !8589
  %bf.clear2734 = and i32 %bf.load2733, 65535, !dbg !8589
  %cmp2735 = icmp eq i32 %bf.clear2734, 65, !dbg !8591
  br i1 %cmp2735, label %land.lhs.true2737, label %if.end2806, !dbg !8592

land.lhs.true2737:                                ; preds = %if.end2732
  %1118 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8593
  %1119 = bitcast %struct.rtx_def* %1118 to i32*, !dbg !8593
  %bf.load2738 = load i32, i32* %1119, align 8, !dbg !8593
  %bf.clear2739 = and i32 %bf.load2738, 65535, !dbg !8593
  %cmp2740 = icmp eq i32 %bf.clear2739, 68, !dbg !8594
  br i1 %cmp2740, label %land.lhs.true2742, label %if.end2806, !dbg !8595

land.lhs.true2742:                                ; preds = %land.lhs.true2737
  %1120 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8596
  %u2743 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1120, i32 0, i32 1, !dbg !8596
  %fld2744 = bitcast %union.u* %u2743 to [1 x %union.rtunion_def]*, !dbg !8596
  %arrayidx2745 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2744, i64 0, i64 0, !dbg !8596
  %rt_rtx2746 = bitcast %union.rtunion_def* %arrayidx2745 to %struct.rtx_def**, !dbg !8596
  %1121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2746, align 8, !dbg !8596
  %1122 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8597
  %u2747 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1122, i32 0, i32 1, !dbg !8597
  %fld2748 = bitcast %union.u* %u2747 to [1 x %union.rtunion_def]*, !dbg !8597
  %arrayidx2749 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2748, i64 0, i64 0, !dbg !8597
  %rt_rtx2750 = bitcast %union.rtunion_def* %arrayidx2749 to %struct.rtx_def**, !dbg !8597
  %1123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2750, align 8, !dbg !8597
  %call2751 = call i32 @rtx_equal_p(%struct.rtx_def* %1121, %struct.rtx_def* %1123), !dbg !8598
  %tobool2752 = icmp ne i32 %call2751, 0, !dbg !8598
  br i1 %tobool2752, label %land.lhs.true2753, label %if.end2806, !dbg !8599

land.lhs.true2753:                                ; preds = %land.lhs.true2742
  %1124 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8600
  %u2754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1124, i32 0, i32 1, !dbg !8600
  %fld2755 = bitcast %union.u* %u2754 to [1 x %union.rtunion_def]*, !dbg !8600
  %arrayidx2756 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2755, i64 0, i64 1, !dbg !8600
  %rt_rtx2757 = bitcast %union.rtunion_def* %arrayidx2756 to %struct.rtx_def**, !dbg !8600
  %1125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2757, align 8, !dbg !8600
  %1126 = bitcast %struct.rtx_def* %1125 to i32*, !dbg !8600
  %bf.load2758 = load i32, i32* %1126, align 8, !dbg !8600
  %bf.clear2759 = and i32 %bf.load2758, 65535, !dbg !8600
  %cmp2760 = icmp eq i32 %bf.clear2759, 30, !dbg !8600
  br i1 %cmp2760, label %land.lhs.true2762, label %if.end2806, !dbg !8601

land.lhs.true2762:                                ; preds = %land.lhs.true2753
  %1127 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8602
  %u2763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1127, i32 0, i32 1, !dbg !8602
  %fld2764 = bitcast %union.u* %u2763 to [1 x %union.rtunion_def]*, !dbg !8602
  %arrayidx2765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2764, i64 0, i64 1, !dbg !8602
  %rt_rtx2766 = bitcast %union.rtunion_def* %arrayidx2765 to %struct.rtx_def**, !dbg !8602
  %1128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2766, align 8, !dbg !8602
  %1129 = bitcast %struct.rtx_def* %1128 to i32*, !dbg !8602
  %bf.load2767 = load i32, i32* %1129, align 8, !dbg !8602
  %bf.clear2768 = and i32 %bf.load2767, 65535, !dbg !8602
  %cmp2769 = icmp eq i32 %bf.clear2768, 30, !dbg !8602
  br i1 %cmp2769, label %land.lhs.true2771, label %if.end2806, !dbg !8603

land.lhs.true2771:                                ; preds = %land.lhs.true2762
  %1130 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8604
  %u2772 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1130, i32 0, i32 1, !dbg !8604
  %fld2773 = bitcast %union.u* %u2772 to [1 x %union.rtunion_def]*, !dbg !8604
  %arrayidx2774 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2773, i64 0, i64 1, !dbg !8604
  %rt_rtx2775 = bitcast %union.rtunion_def* %arrayidx2774 to %struct.rtx_def**, !dbg !8604
  %1131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2775, align 8, !dbg !8604
  %u2776 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1131, i32 0, i32 1, !dbg !8604
  %hwint2777 = bitcast %union.u* %u2776 to [1 x i64]*, !dbg !8604
  %arrayidx2778 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2777, i64 0, i64 0, !dbg !8604
  %1132 = load i64, i64* %arrayidx2778, align 8, !dbg !8604
  %1133 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8605
  %u2779 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1133, i32 0, i32 1, !dbg !8605
  %fld2780 = bitcast %union.u* %u2779 to [1 x %union.rtunion_def]*, !dbg !8605
  %arrayidx2781 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2780, i64 0, i64 1, !dbg !8605
  %rt_rtx2782 = bitcast %union.rtunion_def* %arrayidx2781 to %struct.rtx_def**, !dbg !8605
  %1134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2782, align 8, !dbg !8605
  %u2783 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1134, i32 0, i32 1, !dbg !8605
  %hwint2784 = bitcast %union.u* %u2783 to [1 x i64]*, !dbg !8605
  %arrayidx2785 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2784, i64 0, i64 0, !dbg !8605
  %1135 = load i64, i64* %arrayidx2785, align 8, !dbg !8605
  %add2786 = add nsw i64 %1132, %1135, !dbg !8606
  %1136 = load i32, i32* %mode.addr, align 4, !dbg !8607
  %idxprom2787 = zext i32 %1136 to i64, !dbg !8607
  %arrayidx2788 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2787, !dbg !8607
  %1137 = load i8, i8* %arrayidx2788, align 1, !dbg !8607
  %conv2789 = zext i8 %1137 to i16, !dbg !8607
  %conv2790 = zext i16 %conv2789 to i32, !dbg !8607
  %mul2791 = mul nsw i32 %conv2790, 8, !dbg !8607
  %conv2792 = trunc i32 %mul2791 to i16, !dbg !8607
  %conv2793 = zext i16 %conv2792 to i64, !dbg !8607
  %cmp2794 = icmp eq i64 %add2786, %conv2793, !dbg !8608
  br i1 %cmp2794, label %if.then2796, label %if.end2806, !dbg !8609

if.then2796:                                      ; preds = %land.lhs.true2771
  %1138 = load i32, i32* %mode.addr, align 4, !dbg !8610
  %1139 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8610
  %u2797 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1139, i32 0, i32 1, !dbg !8610
  %fld2798 = bitcast %union.u* %u2797 to [1 x %union.rtunion_def]*, !dbg !8610
  %arrayidx2799 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2798, i64 0, i64 0, !dbg !8610
  %rt_rtx2800 = bitcast %union.rtunion_def* %arrayidx2799 to %struct.rtx_def**, !dbg !8610
  %1140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2800, align 8, !dbg !8610
  %1141 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8610
  %u2801 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1141, i32 0, i32 1, !dbg !8610
  %fld2802 = bitcast %union.u* %u2801 to [1 x %union.rtunion_def]*, !dbg !8610
  %arrayidx2803 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2802, i64 0, i64 1, !dbg !8610
  %rt_rtx2804 = bitcast %union.rtunion_def* %arrayidx2803 to %struct.rtx_def**, !dbg !8610
  %1142 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2804, align 8, !dbg !8610
  %call2805 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 66, i32 %1138, %struct.rtx_def* %1140, %struct.rtx_def* %1142), !dbg !8610
  store %struct.rtx_def* %call2805, %struct.rtx_def** %retval, align 8, !dbg !8611
  br label %return, !dbg !8611

if.end2806:                                       ; preds = %land.lhs.true2771, %land.lhs.true2762, %land.lhs.true2753, %land.lhs.true2742, %land.lhs.true2737, %if.end2732
  %1143 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8612
  %1144 = bitcast %struct.rtx_def* %1143 to i32*, !dbg !8612
  %bf.load2807 = load i32, i32* %1144, align 8, !dbg !8612
  %bf.clear2808 = and i32 %bf.load2807, 65535, !dbg !8612
  %cmp2809 = icmp eq i32 %bf.clear2808, 39, !dbg !8614
  br i1 %cmp2809, label %land.lhs.true2811, label %if.end2966, !dbg !8615

land.lhs.true2811:                                ; preds = %if.end2806
  %1145 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8616
  %u2812 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1145, i32 0, i32 1, !dbg !8616
  %fld2813 = bitcast %union.u* %u2812 to [1 x %union.rtunion_def]*, !dbg !8616
  %arrayidx2814 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2813, i64 0, i64 0, !dbg !8616
  %rt_rtx2815 = bitcast %union.rtunion_def* %arrayidx2814 to %struct.rtx_def**, !dbg !8616
  %1146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2815, align 8, !dbg !8616
  %1147 = bitcast %struct.rtx_def* %1146 to i32*, !dbg !8616
  %bf.load2816 = load i32, i32* %1147, align 8, !dbg !8616
  %bf.clear2817 = and i32 %bf.load2816, 65535, !dbg !8616
  %cmp2818 = icmp eq i32 %bf.clear2817, 65, !dbg !8617
  br i1 %cmp2818, label %land.lhs.true2820, label %if.end2966, !dbg !8618

land.lhs.true2820:                                ; preds = %land.lhs.true2811
  %1148 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8619
  %1149 = bitcast %struct.rtx_def* %1148 to i32*, !dbg !8619
  %bf.load2821 = load i32, i32* %1149, align 8, !dbg !8619
  %bf.clear2822 = and i32 %bf.load2821, 65535, !dbg !8619
  %cmp2823 = icmp eq i32 %bf.clear2822, 68, !dbg !8620
  br i1 %cmp2823, label %land.lhs.true2825, label %if.end2966, !dbg !8621

land.lhs.true2825:                                ; preds = %land.lhs.true2820
  %1150 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8622
  %u2826 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1150, i32 0, i32 1, !dbg !8622
  %fld2827 = bitcast %union.u* %u2826 to [1 x %union.rtunion_def]*, !dbg !8622
  %arrayidx2828 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2827, i64 0, i64 0, !dbg !8622
  %rt_rtx2829 = bitcast %union.rtunion_def* %arrayidx2828 to %struct.rtx_def**, !dbg !8622
  %1151 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2829, align 8, !dbg !8622
  %1152 = bitcast %struct.rtx_def* %1151 to i32*, !dbg !8622
  %bf.load2830 = load i32, i32* %1152, align 8, !dbg !8622
  %bf.clear2831 = and i32 %bf.load2830, 65535, !dbg !8622
  %cmp2832 = icmp eq i32 %bf.clear2831, 39, !dbg !8623
  br i1 %cmp2832, label %land.lhs.true2834, label %if.end2966, !dbg !8624

land.lhs.true2834:                                ; preds = %land.lhs.true2825
  %1153 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8625
  %1154 = bitcast %struct.rtx_def* %1153 to i32*, !dbg !8625
  %bf.load2835 = load i32, i32* %1154, align 8, !dbg !8625
  %bf.lshr2836 = lshr i32 %bf.load2835, 16, !dbg !8625
  %bf.clear2837 = and i32 %bf.lshr2836, 255, !dbg !8625
  %1155 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8626
  %u2838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1155, i32 0, i32 1, !dbg !8626
  %fld2839 = bitcast %union.u* %u2838 to [1 x %union.rtunion_def]*, !dbg !8626
  %arrayidx2840 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2839, i64 0, i64 0, !dbg !8626
  %rt_rtx2841 = bitcast %union.rtunion_def* %arrayidx2840 to %struct.rtx_def**, !dbg !8626
  %1156 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2841, align 8, !dbg !8626
  %1157 = bitcast %struct.rtx_def* %1156 to i32*, !dbg !8626
  %bf.load2842 = load i32, i32* %1157, align 8, !dbg !8626
  %bf.lshr2843 = lshr i32 %bf.load2842, 16, !dbg !8626
  %bf.clear2844 = and i32 %bf.lshr2843, 255, !dbg !8626
  %cmp2845 = icmp eq i32 %bf.clear2837, %bf.clear2844, !dbg !8627
  br i1 %cmp2845, label %land.lhs.true2847, label %if.end2966, !dbg !8628

land.lhs.true2847:                                ; preds = %land.lhs.true2834
  %1158 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8629
  %u2848 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1158, i32 0, i32 1, !dbg !8629
  %fld2849 = bitcast %union.u* %u2848 to [1 x %union.rtunion_def]*, !dbg !8629
  %arrayidx2850 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2849, i64 0, i64 1, !dbg !8629
  %rt_uint = bitcast %union.rtunion_def* %arrayidx2850 to i32*, !dbg !8629
  %1159 = load i32, i32* %rt_uint, align 8, !dbg !8629
  %1160 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8630
  %u2851 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1160, i32 0, i32 1, !dbg !8630
  %fld2852 = bitcast %union.u* %u2851 to [1 x %union.rtunion_def]*, !dbg !8630
  %arrayidx2853 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2852, i64 0, i64 0, !dbg !8630
  %rt_rtx2854 = bitcast %union.rtunion_def* %arrayidx2853 to %struct.rtx_def**, !dbg !8630
  %1161 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2854, align 8, !dbg !8630
  %u2855 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1161, i32 0, i32 1, !dbg !8630
  %fld2856 = bitcast %union.u* %u2855 to [1 x %union.rtunion_def]*, !dbg !8630
  %arrayidx2857 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2856, i64 0, i64 1, !dbg !8630
  %rt_uint2858 = bitcast %union.rtunion_def* %arrayidx2857 to i32*, !dbg !8630
  %1162 = load i32, i32* %rt_uint2858, align 8, !dbg !8630
  %cmp2859 = icmp eq i32 %1159, %1162, !dbg !8631
  br i1 %cmp2859, label %land.lhs.true2861, label %if.end2966, !dbg !8632

land.lhs.true2861:                                ; preds = %land.lhs.true2847
  %1163 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8633
  %1164 = bitcast %struct.rtx_def* %1163 to i32*, !dbg !8633
  %bf.load2862 = load i32, i32* %1164, align 8, !dbg !8633
  %bf.lshr2863 = lshr i32 %bf.load2862, 16, !dbg !8633
  %bf.clear2864 = and i32 %bf.lshr2863, 255, !dbg !8633
  %idxprom2865 = zext i32 %bf.clear2864 to i64, !dbg !8633
  %arrayidx2866 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2865, !dbg !8633
  %1165 = load i8, i8* %arrayidx2866, align 1, !dbg !8633
  %conv2867 = zext i8 %1165 to i16, !dbg !8633
  %conv2868 = zext i16 %conv2867 to i32, !dbg !8633
  %1166 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8634
  %u2869 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1166, i32 0, i32 1, !dbg !8634
  %fld2870 = bitcast %union.u* %u2869 to [1 x %union.rtunion_def]*, !dbg !8634
  %arrayidx2871 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2870, i64 0, i64 0, !dbg !8634
  %rt_rtx2872 = bitcast %union.rtunion_def* %arrayidx2871 to %struct.rtx_def**, !dbg !8634
  %1167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2872, align 8, !dbg !8634
  %1168 = bitcast %struct.rtx_def* %1167 to i32*, !dbg !8634
  %bf.load2873 = load i32, i32* %1168, align 8, !dbg !8634
  %bf.lshr2874 = lshr i32 %bf.load2873, 16, !dbg !8634
  %bf.clear2875 = and i32 %bf.lshr2874, 255, !dbg !8634
  %idxprom2876 = zext i32 %bf.clear2875 to i64, !dbg !8634
  %arrayidx2877 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2876, !dbg !8634
  %1169 = load i8, i8* %arrayidx2877, align 1, !dbg !8634
  %conv2878 = zext i8 %1169 to i16, !dbg !8634
  %conv2879 = zext i16 %conv2878 to i32, !dbg !8634
  %cmp2880 = icmp slt i32 %conv2868, %conv2879, !dbg !8635
  br i1 %cmp2880, label %land.lhs.true2882, label %if.end2966, !dbg !8636

land.lhs.true2882:                                ; preds = %land.lhs.true2861
  %1170 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8637
  %u2883 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1170, i32 0, i32 1, !dbg !8637
  %fld2884 = bitcast %union.u* %u2883 to [1 x %union.rtunion_def]*, !dbg !8637
  %arrayidx2885 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2884, i64 0, i64 0, !dbg !8637
  %rt_rtx2886 = bitcast %union.rtunion_def* %arrayidx2885 to %struct.rtx_def**, !dbg !8637
  %1171 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2886, align 8, !dbg !8637
  %u2887 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1171, i32 0, i32 1, !dbg !8637
  %fld2888 = bitcast %union.u* %u2887 to [1 x %union.rtunion_def]*, !dbg !8637
  %arrayidx2889 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2888, i64 0, i64 0, !dbg !8637
  %rt_rtx2890 = bitcast %union.rtunion_def* %arrayidx2889 to %struct.rtx_def**, !dbg !8637
  %1172 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2890, align 8, !dbg !8637
  %1173 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8638
  %u2891 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1173, i32 0, i32 1, !dbg !8638
  %fld2892 = bitcast %union.u* %u2891 to [1 x %union.rtunion_def]*, !dbg !8638
  %arrayidx2893 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2892, i64 0, i64 0, !dbg !8638
  %rt_rtx2894 = bitcast %union.rtunion_def* %arrayidx2893 to %struct.rtx_def**, !dbg !8638
  %1174 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2894, align 8, !dbg !8638
  %u2895 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1174, i32 0, i32 1, !dbg !8638
  %fld2896 = bitcast %union.u* %u2895 to [1 x %union.rtunion_def]*, !dbg !8638
  %arrayidx2897 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2896, i64 0, i64 0, !dbg !8638
  %rt_rtx2898 = bitcast %union.rtunion_def* %arrayidx2897 to %struct.rtx_def**, !dbg !8638
  %1175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2898, align 8, !dbg !8638
  %call2899 = call i32 @rtx_equal_p(%struct.rtx_def* %1172, %struct.rtx_def* %1175), !dbg !8639
  %tobool2900 = icmp ne i32 %call2899, 0, !dbg !8639
  br i1 %tobool2900, label %land.lhs.true2901, label %if.end2966, !dbg !8640

land.lhs.true2901:                                ; preds = %land.lhs.true2882
  %1176 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8641
  %u2902 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1176, i32 0, i32 1, !dbg !8641
  %fld2903 = bitcast %union.u* %u2902 to [1 x %union.rtunion_def]*, !dbg !8641
  %arrayidx2904 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2903, i64 0, i64 0, !dbg !8641
  %rt_rtx2905 = bitcast %union.rtunion_def* %arrayidx2904 to %struct.rtx_def**, !dbg !8641
  %1177 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2905, align 8, !dbg !8641
  %u2906 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1177, i32 0, i32 1, !dbg !8641
  %fld2907 = bitcast %union.u* %u2906 to [1 x %union.rtunion_def]*, !dbg !8641
  %arrayidx2908 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2907, i64 0, i64 1, !dbg !8641
  %rt_rtx2909 = bitcast %union.rtunion_def* %arrayidx2908 to %struct.rtx_def**, !dbg !8641
  %1178 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2909, align 8, !dbg !8641
  %1179 = bitcast %struct.rtx_def* %1178 to i32*, !dbg !8641
  %bf.load2910 = load i32, i32* %1179, align 8, !dbg !8641
  %bf.clear2911 = and i32 %bf.load2910, 65535, !dbg !8641
  %cmp2912 = icmp eq i32 %bf.clear2911, 30, !dbg !8641
  br i1 %cmp2912, label %land.lhs.true2914, label %if.end2966, !dbg !8642

land.lhs.true2914:                                ; preds = %land.lhs.true2901
  %1180 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8643
  %u2915 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1180, i32 0, i32 1, !dbg !8643
  %fld2916 = bitcast %union.u* %u2915 to [1 x %union.rtunion_def]*, !dbg !8643
  %arrayidx2917 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2916, i64 0, i64 1, !dbg !8643
  %rt_rtx2918 = bitcast %union.rtunion_def* %arrayidx2917 to %struct.rtx_def**, !dbg !8643
  %1181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2918, align 8, !dbg !8643
  %1182 = bitcast %struct.rtx_def* %1181 to i32*, !dbg !8643
  %bf.load2919 = load i32, i32* %1182, align 8, !dbg !8643
  %bf.clear2920 = and i32 %bf.load2919, 65535, !dbg !8643
  %cmp2921 = icmp eq i32 %bf.clear2920, 30, !dbg !8643
  br i1 %cmp2921, label %land.lhs.true2923, label %if.end2966, !dbg !8644

land.lhs.true2923:                                ; preds = %land.lhs.true2914
  %1183 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8645
  %u2924 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1183, i32 0, i32 1, !dbg !8645
  %fld2925 = bitcast %union.u* %u2924 to [1 x %union.rtunion_def]*, !dbg !8645
  %arrayidx2926 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2925, i64 0, i64 0, !dbg !8645
  %rt_rtx2927 = bitcast %union.rtunion_def* %arrayidx2926 to %struct.rtx_def**, !dbg !8645
  %1184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2927, align 8, !dbg !8645
  %u2928 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1184, i32 0, i32 1, !dbg !8645
  %fld2929 = bitcast %union.u* %u2928 to [1 x %union.rtunion_def]*, !dbg !8645
  %arrayidx2930 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2929, i64 0, i64 1, !dbg !8645
  %rt_rtx2931 = bitcast %union.rtunion_def* %arrayidx2930 to %struct.rtx_def**, !dbg !8645
  %1185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2931, align 8, !dbg !8645
  %u2932 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1185, i32 0, i32 1, !dbg !8645
  %hwint2933 = bitcast %union.u* %u2932 to [1 x i64]*, !dbg !8645
  %arrayidx2934 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2933, i64 0, i64 0, !dbg !8645
  %1186 = load i64, i64* %arrayidx2934, align 8, !dbg !8645
  %1187 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8646
  %u2935 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1187, i32 0, i32 1, !dbg !8646
  %fld2936 = bitcast %union.u* %u2935 to [1 x %union.rtunion_def]*, !dbg !8646
  %arrayidx2937 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2936, i64 0, i64 1, !dbg !8646
  %rt_rtx2938 = bitcast %union.rtunion_def* %arrayidx2937 to %struct.rtx_def**, !dbg !8646
  %1188 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2938, align 8, !dbg !8646
  %u2939 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1188, i32 0, i32 1, !dbg !8646
  %hwint2940 = bitcast %union.u* %u2939 to [1 x i64]*, !dbg !8646
  %arrayidx2941 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2940, i64 0, i64 0, !dbg !8646
  %1189 = load i64, i64* %arrayidx2941, align 8, !dbg !8646
  %add2942 = add nsw i64 %1186, %1189, !dbg !8647
  %1190 = load i32, i32* %mode.addr, align 4, !dbg !8648
  %idxprom2943 = zext i32 %1190 to i64, !dbg !8648
  %arrayidx2944 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2943, !dbg !8648
  %1191 = load i8, i8* %arrayidx2944, align 1, !dbg !8648
  %conv2945 = zext i8 %1191 to i16, !dbg !8648
  %conv2946 = zext i16 %conv2945 to i32, !dbg !8648
  %mul2947 = mul nsw i32 %conv2946, 8, !dbg !8648
  %conv2948 = trunc i32 %mul2947 to i16, !dbg !8648
  %conv2949 = zext i16 %conv2948 to i64, !dbg !8648
  %cmp2950 = icmp eq i64 %add2942, %conv2949, !dbg !8649
  br i1 %cmp2950, label %if.then2952, label %if.end2966, !dbg !8650

if.then2952:                                      ; preds = %land.lhs.true2923
  %1192 = load i32, i32* %mode.addr, align 4, !dbg !8651
  %1193 = load %struct.rtx_def*, %struct.rtx_def** %opright, align 8, !dbg !8651
  %u2953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1193, i32 0, i32 1, !dbg !8651
  %fld2954 = bitcast %union.u* %u2953 to [1 x %union.rtunion_def]*, !dbg !8651
  %arrayidx2955 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2954, i64 0, i64 0, !dbg !8651
  %rt_rtx2956 = bitcast %union.rtunion_def* %arrayidx2955 to %struct.rtx_def**, !dbg !8651
  %1194 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2956, align 8, !dbg !8651
  %1195 = load %struct.rtx_def*, %struct.rtx_def** %opleft, align 8, !dbg !8651
  %u2957 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1195, i32 0, i32 1, !dbg !8651
  %fld2958 = bitcast %union.u* %u2957 to [1 x %union.rtunion_def]*, !dbg !8651
  %arrayidx2959 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2958, i64 0, i64 0, !dbg !8651
  %rt_rtx2960 = bitcast %union.rtunion_def* %arrayidx2959 to %struct.rtx_def**, !dbg !8651
  %1196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2960, align 8, !dbg !8651
  %u2961 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1196, i32 0, i32 1, !dbg !8651
  %fld2962 = bitcast %union.u* %u2961 to [1 x %union.rtunion_def]*, !dbg !8651
  %arrayidx2963 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2962, i64 0, i64 1, !dbg !8651
  %rt_rtx2964 = bitcast %union.rtunion_def* %arrayidx2963 to %struct.rtx_def**, !dbg !8651
  %1197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2964, align 8, !dbg !8651
  %call2965 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 66, i32 %1192, %struct.rtx_def* %1194, %struct.rtx_def* %1197), !dbg !8651
  store %struct.rtx_def* %call2965, %struct.rtx_def** %retval, align 8, !dbg !8652
  br label %return, !dbg !8652

if.end2966:                                       ; preds = %land.lhs.true2923, %land.lhs.true2914, %land.lhs.true2901, %land.lhs.true2882, %land.lhs.true2861, %land.lhs.true2847, %land.lhs.true2834, %land.lhs.true2825, %land.lhs.true2820, %land.lhs.true2811, %if.end2806
  %1198 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8653
  %1199 = bitcast %struct.rtx_def* %1198 to i32*, !dbg !8653
  %bf.load2967 = load i32, i32* %1199, align 8, !dbg !8653
  %bf.clear2968 = and i32 %bf.load2967, 65535, !dbg !8653
  %cmp2969 = icmp eq i32 %bf.clear2968, 30, !dbg !8653
  br i1 %cmp2969, label %land.lhs.true2971, label %if.end3040, !dbg !8655

land.lhs.true2971:                                ; preds = %if.end2966
  %1200 = load i32, i32* %mode.addr, align 4, !dbg !8656
  %idxprom2972 = zext i32 %1200 to i64, !dbg !8656
  %arrayidx2973 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom2972, !dbg !8656
  %1201 = load i8, i8* %arrayidx2973, align 1, !dbg !8656
  %conv2974 = zext i8 %1201 to i16, !dbg !8656
  %conv2975 = zext i16 %conv2974 to i32, !dbg !8656
  %mul2976 = mul nsw i32 %conv2975, 8, !dbg !8656
  %conv2977 = trunc i32 %mul2976 to i16, !dbg !8656
  %conv2978 = zext i16 %conv2977 to i32, !dbg !8656
  %cmp2979 = icmp sle i32 %conv2978, 64, !dbg !8657
  br i1 %cmp2979, label %land.lhs.true2987, label %lor.lhs.false2981, !dbg !8658

lor.lhs.false2981:                                ; preds = %land.lhs.true2971
  %1202 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8659
  %u2982 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1202, i32 0, i32 1, !dbg !8659
  %hwint2983 = bitcast %union.u* %u2982 to [1 x i64]*, !dbg !8659
  %arrayidx2984 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint2983, i64 0, i64 0, !dbg !8659
  %1203 = load i64, i64* %arrayidx2984, align 8, !dbg !8659
  %cmp2985 = icmp sgt i64 %1203, 0, !dbg !8660
  br i1 %cmp2985, label %land.lhs.true2987, label %if.end3040, !dbg !8661

land.lhs.true2987:                                ; preds = %lor.lhs.false2981, %land.lhs.true2971
  %1204 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8662
  %1205 = bitcast %struct.rtx_def* %1204 to i32*, !dbg !8662
  %bf.load2988 = load i32, i32* %1205, align 8, !dbg !8662
  %bf.clear2989 = and i32 %bf.load2988, 65535, !dbg !8662
  %cmp2990 = icmp eq i32 %bf.clear2989, 61, !dbg !8663
  br i1 %cmp2990, label %land.lhs.true2992, label %if.end3040, !dbg !8664

land.lhs.true2992:                                ; preds = %land.lhs.true2987
  %1206 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8665
  %u2993 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1206, i32 0, i32 1, !dbg !8665
  %fld2994 = bitcast %union.u* %u2993 to [1 x %union.rtunion_def]*, !dbg !8665
  %arrayidx2995 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2994, i64 0, i64 1, !dbg !8665
  %rt_rtx2996 = bitcast %union.rtunion_def* %arrayidx2995 to %struct.rtx_def**, !dbg !8665
  %1207 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx2996, align 8, !dbg !8665
  %1208 = bitcast %struct.rtx_def* %1207 to i32*, !dbg !8665
  %bf.load2997 = load i32, i32* %1208, align 8, !dbg !8665
  %bf.clear2998 = and i32 %bf.load2997, 65535, !dbg !8665
  %cmp2999 = icmp eq i32 %bf.clear2998, 30, !dbg !8665
  br i1 %cmp2999, label %land.lhs.true3001, label %if.end3040, !dbg !8666

land.lhs.true3001:                                ; preds = %land.lhs.true2992
  %1209 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8667
  %1210 = bitcast %struct.rtx_def* %1209 to i32*, !dbg !8667
  %bf.load3002 = load i32, i32* %1210, align 8, !dbg !8667
  %bf.clear3003 = and i32 %bf.load3002, 65535, !dbg !8667
  %cmp3004 = icmp eq i32 %bf.clear3003, 30, !dbg !8667
  br i1 %cmp3004, label %land.lhs.true3006, label %if.end3040, !dbg !8668

land.lhs.true3006:                                ; preds = %land.lhs.true3001
  %1211 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8669
  %u3007 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1211, i32 0, i32 1, !dbg !8669
  %fld3008 = bitcast %union.u* %u3007 to [1 x %union.rtunion_def]*, !dbg !8669
  %arrayidx3009 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3008, i64 0, i64 1, !dbg !8669
  %rt_rtx3010 = bitcast %union.rtunion_def* %arrayidx3009 to %struct.rtx_def**, !dbg !8669
  %1212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3010, align 8, !dbg !8669
  %u3011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1212, i32 0, i32 1, !dbg !8669
  %hwint3012 = bitcast %union.u* %u3011 to [1 x i64]*, !dbg !8669
  %arrayidx3013 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3012, i64 0, i64 0, !dbg !8669
  %1213 = load i64, i64* %arrayidx3013, align 8, !dbg !8669
  %1214 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8670
  %u3014 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1214, i32 0, i32 1, !dbg !8670
  %hwint3015 = bitcast %union.u* %u3014 to [1 x i64]*, !dbg !8670
  %arrayidx3016 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3015, i64 0, i64 0, !dbg !8670
  %1215 = load i64, i64* %arrayidx3016, align 8, !dbg !8670
  %and3017 = and i64 %1213, %1215, !dbg !8671
  %cmp3018 = icmp ne i64 %and3017, 0, !dbg !8672
  br i1 %cmp3018, label %if.then3020, label %if.end3040, !dbg !8673

if.then3020:                                      ; preds = %land.lhs.true3006
  %1216 = load i32, i32* %mode.addr, align 4, !dbg !8674
  %1217 = load i32, i32* %mode.addr, align 4, !dbg !8675
  %1218 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8676
  %u3021 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1218, i32 0, i32 1, !dbg !8676
  %fld3022 = bitcast %union.u* %u3021 to [1 x %union.rtunion_def]*, !dbg !8676
  %arrayidx3023 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3022, i64 0, i64 0, !dbg !8676
  %rt_rtx3024 = bitcast %union.rtunion_def* %arrayidx3023 to %struct.rtx_def**, !dbg !8676
  %1219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3024, align 8, !dbg !8676
  %1220 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8677
  %u3025 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1220, i32 0, i32 1, !dbg !8677
  %fld3026 = bitcast %union.u* %u3025 to [1 x %union.rtunion_def]*, !dbg !8677
  %arrayidx3027 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3026, i64 0, i64 1, !dbg !8677
  %rt_rtx3028 = bitcast %union.rtunion_def* %arrayidx3027 to %struct.rtx_def**, !dbg !8677
  %1221 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3028, align 8, !dbg !8677
  %u3029 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1221, i32 0, i32 1, !dbg !8677
  %hwint3030 = bitcast %union.u* %u3029 to [1 x i64]*, !dbg !8677
  %arrayidx3031 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3030, i64 0, i64 0, !dbg !8677
  %1222 = load i64, i64* %arrayidx3031, align 8, !dbg !8677
  %1223 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8677
  %u3032 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1223, i32 0, i32 1, !dbg !8677
  %hwint3033 = bitcast %union.u* %u3032 to [1 x i64]*, !dbg !8677
  %arrayidx3034 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3033, i64 0, i64 0, !dbg !8677
  %1224 = load i64, i64* %arrayidx3034, align 8, !dbg !8677
  %neg3035 = xor i64 %1224, -1, !dbg !8677
  %and3036 = and i64 %1222, %neg3035, !dbg !8677
  %call3037 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %and3036), !dbg !8677
  %call3038 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1217, %struct.rtx_def* %1219, %struct.rtx_def* %call3037), !dbg !8678
  %1225 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8679
  %call3039 = call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %1216, %struct.rtx_def* %call3038, %struct.rtx_def* %1225), !dbg !8680
  store %struct.rtx_def* %call3039, %struct.rtx_def** %retval, align 8, !dbg !8681
  br label %return, !dbg !8681

if.end3040:                                       ; preds = %land.lhs.true3006, %land.lhs.true3001, %land.lhs.true2992, %land.lhs.true2987, %lor.lhs.false2981, %if.end2966
  %1226 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8682
  %1227 = bitcast %struct.rtx_def* %1226 to i32*, !dbg !8682
  %bf.load3041 = load i32, i32* %1227, align 8, !dbg !8682
  %bf.clear3042 = and i32 %bf.load3041, 65535, !dbg !8682
  %cmp3043 = icmp eq i32 %bf.clear3042, 30, !dbg !8682
  br i1 %cmp3043, label %land.lhs.true3045, label %if.end3132, !dbg !8684

land.lhs.true3045:                                ; preds = %if.end3040
  %1228 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8685
  %1229 = bitcast %struct.rtx_def* %1228 to i32*, !dbg !8685
  %bf.load3046 = load i32, i32* %1229, align 8, !dbg !8685
  %bf.clear3047 = and i32 %bf.load3046, 65535, !dbg !8685
  %cmp3048 = icmp eq i32 %bf.clear3047, 67, !dbg !8686
  br i1 %cmp3048, label %land.lhs.true3050, label %if.end3132, !dbg !8687

land.lhs.true3050:                                ; preds = %land.lhs.true3045
  %1230 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8688
  %u3051 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1230, i32 0, i32 1, !dbg !8688
  %fld3052 = bitcast %union.u* %u3051 to [1 x %union.rtunion_def]*, !dbg !8688
  %arrayidx3053 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3052, i64 0, i64 0, !dbg !8688
  %rt_rtx3054 = bitcast %union.rtunion_def* %arrayidx3053 to %struct.rtx_def**, !dbg !8688
  %1231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3054, align 8, !dbg !8688
  %1232 = bitcast %struct.rtx_def* %1231 to i32*, !dbg !8688
  %bf.load3055 = load i32, i32* %1232, align 8, !dbg !8688
  %bf.clear3056 = and i32 %bf.load3055, 65535, !dbg !8688
  %cmp3057 = icmp eq i32 %bf.clear3056, 49, !dbg !8689
  br i1 %cmp3057, label %land.lhs.true3059, label %if.end3132, !dbg !8690

land.lhs.true3059:                                ; preds = %land.lhs.true3050
  %1233 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8691
  %u3060 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1233, i32 0, i32 1, !dbg !8691
  %fld3061 = bitcast %union.u* %u3060 to [1 x %union.rtunion_def]*, !dbg !8691
  %arrayidx3062 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3061, i64 0, i64 0, !dbg !8691
  %rt_rtx3063 = bitcast %union.rtunion_def* %arrayidx3062 to %struct.rtx_def**, !dbg !8691
  %1234 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3063, align 8, !dbg !8691
  %u3064 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1234, i32 0, i32 1, !dbg !8691
  %fld3065 = bitcast %union.u* %u3064 to [1 x %union.rtunion_def]*, !dbg !8691
  %arrayidx3066 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3065, i64 0, i64 1, !dbg !8691
  %rt_rtx3067 = bitcast %union.rtunion_def* %arrayidx3066 to %struct.rtx_def**, !dbg !8691
  %1235 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3067, align 8, !dbg !8691
  %1236 = bitcast %struct.rtx_def* %1235 to i32*, !dbg !8691
  %bf.load3068 = load i32, i32* %1236, align 8, !dbg !8691
  %bf.clear3069 = and i32 %bf.load3068, 65535, !dbg !8691
  %cmp3070 = icmp eq i32 %bf.clear3069, 30, !dbg !8691
  br i1 %cmp3070, label %land.lhs.true3072, label %if.end3132, !dbg !8692

land.lhs.true3072:                                ; preds = %land.lhs.true3059
  %1237 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8693
  %u3073 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1237, i32 0, i32 1, !dbg !8693
  %fld3074 = bitcast %union.u* %u3073 to [1 x %union.rtunion_def]*, !dbg !8693
  %arrayidx3075 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3074, i64 0, i64 1, !dbg !8693
  %rt_rtx3076 = bitcast %union.rtunion_def* %arrayidx3075 to %struct.rtx_def**, !dbg !8693
  %1238 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3076, align 8, !dbg !8693
  %1239 = bitcast %struct.rtx_def* %1238 to i32*, !dbg !8693
  %bf.load3077 = load i32, i32* %1239, align 8, !dbg !8693
  %bf.clear3078 = and i32 %bf.load3077, 65535, !dbg !8693
  %cmp3079 = icmp eq i32 %bf.clear3078, 30, !dbg !8693
  br i1 %cmp3079, label %land.lhs.true3081, label %if.end3132, !dbg !8694

land.lhs.true3081:                                ; preds = %land.lhs.true3072
  %1240 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8695
  %u3082 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1240, i32 0, i32 1, !dbg !8695
  %fld3083 = bitcast %union.u* %u3082 to [1 x %union.rtunion_def]*, !dbg !8695
  %arrayidx3084 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3083, i64 0, i64 1, !dbg !8695
  %rt_rtx3085 = bitcast %union.rtunion_def* %arrayidx3084 to %struct.rtx_def**, !dbg !8695
  %1241 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3085, align 8, !dbg !8695
  %u3086 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1241, i32 0, i32 1, !dbg !8695
  %hwint3087 = bitcast %union.u* %u3086 to [1 x i64]*, !dbg !8695
  %arrayidx3088 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3087, i64 0, i64 0, !dbg !8695
  %1242 = load i64, i64* %arrayidx3088, align 8, !dbg !8695
  %cmp3089 = icmp slt i64 %1242, 64, !dbg !8696
  br i1 %cmp3089, label %if.then3091, label %if.end3132, !dbg !8697

if.then3091:                                      ; preds = %land.lhs.true3081
  call void @llvm.dbg.declare(metadata i32* %count, metadata !8698, metadata !DIExpression()), !dbg !8700
  %1243 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8701
  %u3092 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1243, i32 0, i32 1, !dbg !8701
  %fld3093 = bitcast %union.u* %u3092 to [1 x %union.rtunion_def]*, !dbg !8701
  %arrayidx3094 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3093, i64 0, i64 1, !dbg !8701
  %rt_rtx3095 = bitcast %union.rtunion_def* %arrayidx3094 to %struct.rtx_def**, !dbg !8701
  %1244 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3095, align 8, !dbg !8701
  %u3096 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1244, i32 0, i32 1, !dbg !8701
  %hwint3097 = bitcast %union.u* %u3096 to [1 x i64]*, !dbg !8701
  %arrayidx3098 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3097, i64 0, i64 0, !dbg !8701
  %1245 = load i64, i64* %arrayidx3098, align 8, !dbg !8701
  %conv3099 = trunc i64 %1245 to i32, !dbg !8701
  store i32 %conv3099, i32* %count, align 4, !dbg !8700
  call void @llvm.dbg.declare(metadata i64* %mask3100, metadata !8702, metadata !DIExpression()), !dbg !8703
  %1246 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8704
  %u3101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1246, i32 0, i32 1, !dbg !8704
  %hwint3102 = bitcast %union.u* %u3101 to [1 x i64]*, !dbg !8704
  %arrayidx3103 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3102, i64 0, i64 0, !dbg !8704
  %1247 = load i64, i64* %arrayidx3103, align 8, !dbg !8704
  %1248 = load i32, i32* %count, align 4, !dbg !8705
  %sh_prom = zext i32 %1248 to i64, !dbg !8706
  %shl3104 = shl i64 %1247, %sh_prom, !dbg !8706
  store i64 %shl3104, i64* %mask3100, align 8, !dbg !8703
  %1249 = load i64, i64* %mask3100, align 8, !dbg !8707
  %1250 = load i32, i32* %count, align 4, !dbg !8709
  %sh_prom3105 = zext i32 %1250 to i64, !dbg !8710
  %shr = ashr i64 %1249, %sh_prom3105, !dbg !8710
  %1251 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8711
  %u3106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1251, i32 0, i32 1, !dbg !8711
  %hwint3107 = bitcast %union.u* %u3106 to [1 x i64]*, !dbg !8711
  %arrayidx3108 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3107, i64 0, i64 0, !dbg !8711
  %1252 = load i64, i64* %arrayidx3108, align 8, !dbg !8711
  %cmp3109 = icmp eq i64 %shr, %1252, !dbg !8712
  br i1 %cmp3109, label %land.lhs.true3111, label %if.end3131, !dbg !8713

land.lhs.true3111:                                ; preds = %if.then3091
  %1253 = load i64, i64* %mask3100, align 8, !dbg !8714
  %1254 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8715
  %u3112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1254, i32 0, i32 1, !dbg !8715
  %fld3113 = bitcast %union.u* %u3112 to [1 x %union.rtunion_def]*, !dbg !8715
  %arrayidx3114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3113, i64 0, i64 0, !dbg !8715
  %rt_rtx3115 = bitcast %union.rtunion_def* %arrayidx3114 to %struct.rtx_def**, !dbg !8715
  %1255 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3115, align 8, !dbg !8715
  %1256 = load i32, i32* %mode.addr, align 4, !dbg !8716
  %call3116 = call i64 @nonzero_bits(%struct.rtx_def* %1255, i32 %1256), !dbg !8717
  %and3117 = and i64 %1253, %call3116, !dbg !8718
  %cmp3118 = icmp eq i64 %and3117, 0, !dbg !8719
  br i1 %cmp3118, label %if.then3120, label %if.end3131, !dbg !8720

if.then3120:                                      ; preds = %land.lhs.true3111
  %1257 = load i32, i32* %mode.addr, align 4, !dbg !8721
  %1258 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8722
  %u3121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1258, i32 0, i32 1, !dbg !8722
  %fld3122 = bitcast %union.u* %u3121 to [1 x %union.rtunion_def]*, !dbg !8722
  %arrayidx3123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3122, i64 0, i64 0, !dbg !8722
  %rt_rtx3124 = bitcast %union.rtunion_def* %arrayidx3123 to %struct.rtx_def**, !dbg !8722
  %1259 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3124, align 8, !dbg !8722
  %1260 = load i64, i64* %mask3100, align 8, !dbg !8723
  %call3125 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %1259, i64 %1260), !dbg !8724
  %1261 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8725
  %u3126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1261, i32 0, i32 1, !dbg !8725
  %fld3127 = bitcast %union.u* %u3126 to [1 x %union.rtunion_def]*, !dbg !8725
  %arrayidx3128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3127, i64 0, i64 1, !dbg !8725
  %rt_rtx3129 = bitcast %union.rtunion_def* %arrayidx3128 to %struct.rtx_def**, !dbg !8725
  %1262 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3129, align 8, !dbg !8725
  %call3130 = call %struct.rtx_def* @simplify_gen_binary(i32 67, i32 %1257, %struct.rtx_def* %call3125, %struct.rtx_def* %1262), !dbg !8726
  store %struct.rtx_def* %call3130, %struct.rtx_def** %retval, align 8, !dbg !8727
  br label %return, !dbg !8727

if.end3131:                                       ; preds = %land.lhs.true3111, %if.then3091
  br label %if.end3132, !dbg !8728

if.end3132:                                       ; preds = %if.end3131, %land.lhs.true3081, %land.lhs.true3072, %land.lhs.true3059, %land.lhs.true3050, %land.lhs.true3045, %if.end3040
  %1263 = load i32, i32* %code.addr, align 4, !dbg !8729
  %1264 = load i32, i32* %mode.addr, align 4, !dbg !8730
  %1265 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8731
  %1266 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8732
  %call3133 = call %struct.rtx_def* @simplify_associative_operation(i32 %1263, i32 %1264, %struct.rtx_def* %1265, %struct.rtx_def* %1266), !dbg !8733
  store %struct.rtx_def* %call3133, %struct.rtx_def** %tem, align 8, !dbg !8734
  %1267 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8735
  %tobool3134 = icmp ne %struct.rtx_def* %1267, null, !dbg !8735
  br i1 %tobool3134, label %if.then3135, label %if.end3136, !dbg !8737

if.then3135:                                      ; preds = %if.end3132
  %1268 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8738
  store %struct.rtx_def* %1268, %struct.rtx_def** %retval, align 8, !dbg !8739
  br label %return, !dbg !8739

if.end3136:                                       ; preds = %if.end3132
  br label %sw.epilog5879, !dbg !8740

sw.bb3137:                                        ; preds = %entry
  %1269 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8741
  %1270 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8743
  %cmp3138 = icmp eq %struct.rtx_def* %1269, %1270, !dbg !8744
  br i1 %cmp3138, label %if.then3140, label %if.end3141, !dbg !8745

if.then3140:                                      ; preds = %sw.bb3137
  %1271 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8746
  store %struct.rtx_def* %1271, %struct.rtx_def** %retval, align 8, !dbg !8747
  br label %return, !dbg !8747

if.end3141:                                       ; preds = %sw.bb3137
  %1272 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8748
  %1273 = bitcast %struct.rtx_def* %1272 to i32*, !dbg !8748
  %bf.load3142 = load i32, i32* %1273, align 8, !dbg !8748
  %bf.clear3143 = and i32 %bf.load3142, 65535, !dbg !8748
  %cmp3144 = icmp eq i32 %bf.clear3143, 30, !dbg !8748
  br i1 %cmp3144, label %land.lhs.true3146, label %if.end3159, !dbg !8750

land.lhs.true3146:                                ; preds = %if.end3141
  %1274 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8751
  %u3147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1274, i32 0, i32 1, !dbg !8751
  %hwint3148 = bitcast %union.u* %u3147 to [1 x i64]*, !dbg !8751
  %arrayidx3149 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3148, i64 0, i64 0, !dbg !8751
  %1275 = load i64, i64* %arrayidx3149, align 8, !dbg !8751
  %1276 = load i32, i32* %mode.addr, align 4, !dbg !8752
  %idxprom3150 = zext i32 %1276 to i64, !dbg !8752
  %arrayidx3151 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom3150, !dbg !8752
  %1277 = load i64, i64* %arrayidx3151, align 8, !dbg !8752
  %and3152 = and i64 %1275, %1277, !dbg !8753
  %1278 = load i32, i32* %mode.addr, align 4, !dbg !8754
  %idxprom3153 = zext i32 %1278 to i64, !dbg !8754
  %arrayidx3154 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom3153, !dbg !8754
  %1279 = load i64, i64* %arrayidx3154, align 8, !dbg !8754
  %cmp3155 = icmp eq i64 %and3152, %1279, !dbg !8755
  br i1 %cmp3155, label %if.then3157, label %if.end3159, !dbg !8756

if.then3157:                                      ; preds = %land.lhs.true3146
  %1280 = load i32, i32* %mode.addr, align 4, !dbg !8757
  %1281 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8758
  %1282 = load i32, i32* %mode.addr, align 4, !dbg !8759
  %call3158 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1280, %struct.rtx_def* %1281, i32 %1282), !dbg !8760
  store %struct.rtx_def* %call3158, %struct.rtx_def** %retval, align 8, !dbg !8761
  br label %return, !dbg !8761

if.end3159:                                       ; preds = %land.lhs.true3146, %if.end3141
  %1283 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !8762
  %1284 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8764
  %call3160 = call i32 @rtx_equal_p(%struct.rtx_def* %1283, %struct.rtx_def* %1284), !dbg !8765
  %tobool3161 = icmp ne i32 %call3160, 0, !dbg !8765
  br i1 %tobool3161, label %land.lhs.true3162, label %if.end3174, !dbg !8766

land.lhs.true3162:                                ; preds = %if.end3159
  %1285 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8767
  %call3163 = call i32 @side_effects_p(%struct.rtx_def* %1285), !dbg !8768
  %tobool3164 = icmp ne i32 %call3163, 0, !dbg !8768
  br i1 %tobool3164, label %if.end3174, label %land.lhs.true3165, !dbg !8769

land.lhs.true3165:                                ; preds = %land.lhs.true3162
  %1286 = load i32, i32* %mode.addr, align 4, !dbg !8770
  %idxprom3166 = zext i32 %1286 to i64, !dbg !8770
  %arrayidx3167 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3166, !dbg !8770
  %1287 = load i8, i8* %arrayidx3167, align 1, !dbg !8770
  %conv3168 = zext i8 %1287 to i32, !dbg !8770
  %cmp3169 = icmp ne i32 %conv3168, 1, !dbg !8771
  br i1 %cmp3169, label %if.then3171, label %if.end3174, !dbg !8772

if.then3171:                                      ; preds = %land.lhs.true3165
  %1288 = load i32, i32* %mode.addr, align 4, !dbg !8773
  %idxprom3172 = sext i32 %1288 to i64, !dbg !8773
  %arrayidx3173 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom3172, !dbg !8773
  %1289 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3173, align 8, !dbg !8773
  store %struct.rtx_def* %1289, %struct.rtx_def** %retval, align 8, !dbg !8774
  br label %return, !dbg !8774

if.end3174:                                       ; preds = %land.lhs.true3165, %land.lhs.true3162, %if.end3159
  %1290 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8775
  %1291 = bitcast %struct.rtx_def* %1290 to i32*, !dbg !8775
  %bf.load3175 = load i32, i32* %1291, align 8, !dbg !8775
  %bf.clear3176 = and i32 %bf.load3175, 65535, !dbg !8775
  %cmp3177 = icmp eq i32 %bf.clear3176, 30, !dbg !8775
  br i1 %cmp3177, label %land.lhs.true3184, label %lor.lhs.false3179, !dbg !8777

lor.lhs.false3179:                                ; preds = %if.end3174
  %1292 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8778
  %1293 = bitcast %struct.rtx_def* %1292 to i32*, !dbg !8778
  %bf.load3180 = load i32, i32* %1293, align 8, !dbg !8778
  %bf.clear3181 = and i32 %bf.load3180, 65535, !dbg !8778
  %cmp3182 = icmp eq i32 %bf.clear3181, 32, !dbg !8779
  br i1 %cmp3182, label %land.lhs.true3184, label %if.end3190, !dbg !8780

land.lhs.true3184:                                ; preds = %lor.lhs.false3179, %if.end3174
  %1294 = load i32, i32* %mode.addr, align 4, !dbg !8781
  %1295 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8782
  %call3185 = call zeroext i8 @mode_signbit_p(i32 %1294, %struct.rtx_def* %1295), !dbg !8783
  %conv3186 = zext i8 %call3185 to i32, !dbg !8783
  %tobool3187 = icmp ne i32 %conv3186, 0, !dbg !8783
  br i1 %tobool3187, label %if.then3188, label %if.end3190, !dbg !8784

if.then3188:                                      ; preds = %land.lhs.true3184
  %1296 = load i32, i32* %mode.addr, align 4, !dbg !8785
  %1297 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8786
  %1298 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8787
  %call3189 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %1296, %struct.rtx_def* %1297, %struct.rtx_def* %1298), !dbg !8788
  store %struct.rtx_def* %call3189, %struct.rtx_def** %retval, align 8, !dbg !8789
  br label %return, !dbg !8789

if.end3190:                                       ; preds = %land.lhs.true3184, %lor.lhs.false3179
  %1299 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8790
  %1300 = bitcast %struct.rtx_def* %1299 to i32*, !dbg !8790
  %bf.load3191 = load i32, i32* %1300, align 8, !dbg !8790
  %bf.clear3192 = and i32 %bf.load3191, 65535, !dbg !8790
  %cmp3193 = icmp eq i32 %bf.clear3192, 30, !dbg !8790
  br i1 %cmp3193, label %land.lhs.true3200, label %lor.lhs.false3195, !dbg !8792

lor.lhs.false3195:                                ; preds = %if.end3190
  %1301 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8793
  %1302 = bitcast %struct.rtx_def* %1301 to i32*, !dbg !8793
  %bf.load3196 = load i32, i32* %1302, align 8, !dbg !8793
  %bf.clear3197 = and i32 %bf.load3196, 65535, !dbg !8793
  %cmp3198 = icmp eq i32 %bf.clear3197, 32, !dbg !8794
  br i1 %cmp3198, label %land.lhs.true3200, label %if.end3242, !dbg !8795

land.lhs.true3200:                                ; preds = %lor.lhs.false3195, %if.end3190
  %1303 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8796
  %1304 = bitcast %struct.rtx_def* %1303 to i32*, !dbg !8796
  %bf.load3201 = load i32, i32* %1304, align 8, !dbg !8796
  %bf.clear3202 = and i32 %bf.load3201, 65535, !dbg !8796
  %cmp3203 = icmp eq i32 %bf.clear3202, 49, !dbg !8797
  br i1 %cmp3203, label %land.lhs.true3205, label %if.end3242, !dbg !8798

land.lhs.true3205:                                ; preds = %land.lhs.true3200
  %1305 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8799
  %u3206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1305, i32 0, i32 1, !dbg !8799
  %fld3207 = bitcast %union.u* %u3206 to [1 x %union.rtunion_def]*, !dbg !8799
  %arrayidx3208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3207, i64 0, i64 1, !dbg !8799
  %rt_rtx3209 = bitcast %union.rtunion_def* %arrayidx3208 to %struct.rtx_def**, !dbg !8799
  %1306 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3209, align 8, !dbg !8799
  %1307 = bitcast %struct.rtx_def* %1306 to i32*, !dbg !8799
  %bf.load3210 = load i32, i32* %1307, align 8, !dbg !8799
  %bf.clear3211 = and i32 %bf.load3210, 65535, !dbg !8799
  %cmp3212 = icmp eq i32 %bf.clear3211, 30, !dbg !8799
  br i1 %cmp3212, label %land.lhs.true3223, label %lor.lhs.false3214, !dbg !8800

lor.lhs.false3214:                                ; preds = %land.lhs.true3205
  %1308 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8801
  %u3215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1308, i32 0, i32 1, !dbg !8801
  %fld3216 = bitcast %union.u* %u3215 to [1 x %union.rtunion_def]*, !dbg !8801
  %arrayidx3217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3216, i64 0, i64 1, !dbg !8801
  %rt_rtx3218 = bitcast %union.rtunion_def* %arrayidx3217 to %struct.rtx_def**, !dbg !8801
  %1309 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3218, align 8, !dbg !8801
  %1310 = bitcast %struct.rtx_def* %1309 to i32*, !dbg !8801
  %bf.load3219 = load i32, i32* %1310, align 8, !dbg !8801
  %bf.clear3220 = and i32 %bf.load3219, 65535, !dbg !8801
  %cmp3221 = icmp eq i32 %bf.clear3220, 32, !dbg !8802
  br i1 %cmp3221, label %land.lhs.true3223, label %if.end3242, !dbg !8803

land.lhs.true3223:                                ; preds = %lor.lhs.false3214, %land.lhs.true3205
  %1311 = load i32, i32* %mode.addr, align 4, !dbg !8804
  %1312 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8805
  %u3224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1312, i32 0, i32 1, !dbg !8805
  %fld3225 = bitcast %union.u* %u3224 to [1 x %union.rtunion_def]*, !dbg !8805
  %arrayidx3226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3225, i64 0, i64 1, !dbg !8805
  %rt_rtx3227 = bitcast %union.rtunion_def* %arrayidx3226 to %struct.rtx_def**, !dbg !8805
  %1313 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3227, align 8, !dbg !8805
  %call3228 = call zeroext i8 @mode_signbit_p(i32 %1311, %struct.rtx_def* %1313), !dbg !8806
  %conv3229 = zext i8 %call3228 to i32, !dbg !8806
  %tobool3230 = icmp ne i32 %conv3229, 0, !dbg !8806
  br i1 %tobool3230, label %if.then3231, label %if.end3242, !dbg !8807

if.then3231:                                      ; preds = %land.lhs.true3223
  %1314 = load i32, i32* %mode.addr, align 4, !dbg !8808
  %1315 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8809
  %u3232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1315, i32 0, i32 1, !dbg !8809
  %fld3233 = bitcast %union.u* %u3232 to [1 x %union.rtunion_def]*, !dbg !8809
  %arrayidx3234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3233, i64 0, i64 0, !dbg !8809
  %rt_rtx3235 = bitcast %union.rtunion_def* %arrayidx3234 to %struct.rtx_def**, !dbg !8809
  %1316 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3235, align 8, !dbg !8809
  %1317 = load i32, i32* %mode.addr, align 4, !dbg !8810
  %1318 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8811
  %1319 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8812
  %u3236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1319, i32 0, i32 1, !dbg !8812
  %fld3237 = bitcast %union.u* %u3236 to [1 x %union.rtunion_def]*, !dbg !8812
  %arrayidx3238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3237, i64 0, i64 1, !dbg !8812
  %rt_rtx3239 = bitcast %union.rtunion_def* %arrayidx3238 to %struct.rtx_def**, !dbg !8812
  %1320 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3239, align 8, !dbg !8812
  %call3240 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %1317, %struct.rtx_def* %1318, %struct.rtx_def* %1320), !dbg !8813
  %call3241 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %1314, %struct.rtx_def* %1316, %struct.rtx_def* %call3240), !dbg !8814
  store %struct.rtx_def* %call3241, %struct.rtx_def** %retval, align 8, !dbg !8815
  br label %return, !dbg !8815

if.end3242:                                       ; preds = %land.lhs.true3223, %lor.lhs.false3214, %land.lhs.true3200, %lor.lhs.false3195
  %1321 = load i32, i32* %mode.addr, align 4, !dbg !8816
  %idxprom3243 = zext i32 %1321 to i64, !dbg !8816
  %arrayidx3244 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3243, !dbg !8816
  %1322 = load i8, i8* %arrayidx3244, align 1, !dbg !8816
  %conv3245 = zext i8 %1322 to i16, !dbg !8816
  %conv3246 = zext i16 %conv3245 to i32, !dbg !8816
  %mul3247 = mul nsw i32 %conv3246, 8, !dbg !8816
  %conv3248 = trunc i32 %mul3247 to i16, !dbg !8816
  %conv3249 = zext i16 %conv3248 to i32, !dbg !8816
  %cmp3250 = icmp sle i32 %conv3249, 64, !dbg !8818
  br i1 %cmp3250, label %land.lhs.true3252, label %if.end3260, !dbg !8819

land.lhs.true3252:                                ; preds = %if.end3242
  %1323 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8820
  %1324 = load i32, i32* %mode.addr, align 4, !dbg !8821
  %call3253 = call i64 @nonzero_bits(%struct.rtx_def* %1323, i32 %1324), !dbg !8822
  %1325 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8823
  %1326 = load i32, i32* %mode.addr, align 4, !dbg !8824
  %call3254 = call i64 @nonzero_bits(%struct.rtx_def* %1325, i32 %1326), !dbg !8825
  %and3255 = and i64 %call3253, %call3254, !dbg !8826
  %cmp3256 = icmp eq i64 %and3255, 0, !dbg !8827
  br i1 %cmp3256, label %if.then3258, label %if.end3260, !dbg !8828

if.then3258:                                      ; preds = %land.lhs.true3252
  %1327 = load i32, i32* %mode.addr, align 4, !dbg !8829
  %1328 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8830
  %1329 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8831
  %call3259 = call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %1327, %struct.rtx_def* %1328, %struct.rtx_def* %1329), !dbg !8832
  store %struct.rtx_def* %call3259, %struct.rtx_def** %retval, align 8, !dbg !8833
  br label %return, !dbg !8833

if.end3260:                                       ; preds = %land.lhs.true3252, %if.end3242
  call void @llvm.dbg.declare(metadata i32* %num_negated, metadata !8834, metadata !DIExpression()), !dbg !8836
  store i32 0, i32* %num_negated, align 4, !dbg !8836
  %1330 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8837
  %1331 = bitcast %struct.rtx_def* %1330 to i32*, !dbg !8837
  %bf.load3261 = load i32, i32* %1331, align 8, !dbg !8837
  %bf.clear3262 = and i32 %bf.load3261, 65535, !dbg !8837
  %cmp3263 = icmp eq i32 %bf.clear3262, 64, !dbg !8839
  br i1 %cmp3263, label %if.then3265, label %if.end3270, !dbg !8840

if.then3265:                                      ; preds = %if.end3260
  %1332 = load i32, i32* %num_negated, align 4, !dbg !8841
  %inc = add nsw i32 %1332, 1, !dbg !8841
  store i32 %inc, i32* %num_negated, align 4, !dbg !8841
  %1333 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8842
  %u3266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1333, i32 0, i32 1, !dbg !8842
  %fld3267 = bitcast %union.u* %u3266 to [1 x %union.rtunion_def]*, !dbg !8842
  %arrayidx3268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3267, i64 0, i64 0, !dbg !8842
  %rt_rtx3269 = bitcast %union.rtunion_def* %arrayidx3268 to %struct.rtx_def**, !dbg !8842
  %1334 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3269, align 8, !dbg !8842
  store %struct.rtx_def* %1334, %struct.rtx_def** %op0.addr, align 8, !dbg !8843
  br label %if.end3270, !dbg !8844

if.end3270:                                       ; preds = %if.then3265, %if.end3260
  %1335 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8845
  %1336 = bitcast %struct.rtx_def* %1335 to i32*, !dbg !8845
  %bf.load3271 = load i32, i32* %1336, align 8, !dbg !8845
  %bf.clear3272 = and i32 %bf.load3271, 65535, !dbg !8845
  %cmp3273 = icmp eq i32 %bf.clear3272, 64, !dbg !8847
  br i1 %cmp3273, label %if.then3275, label %if.end3281, !dbg !8848

if.then3275:                                      ; preds = %if.end3270
  %1337 = load i32, i32* %num_negated, align 4, !dbg !8849
  %inc3276 = add nsw i32 %1337, 1, !dbg !8849
  store i32 %inc3276, i32* %num_negated, align 4, !dbg !8849
  %1338 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8850
  %u3277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1338, i32 0, i32 1, !dbg !8850
  %fld3278 = bitcast %union.u* %u3277 to [1 x %union.rtunion_def]*, !dbg !8850
  %arrayidx3279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3278, i64 0, i64 0, !dbg !8850
  %rt_rtx3280 = bitcast %union.rtunion_def* %arrayidx3279 to %struct.rtx_def**, !dbg !8850
  %1339 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3280, align 8, !dbg !8850
  store %struct.rtx_def* %1339, %struct.rtx_def** %op1.addr, align 8, !dbg !8851
  br label %if.end3281, !dbg !8852

if.end3281:                                       ; preds = %if.then3275, %if.end3270
  %1340 = load i32, i32* %num_negated, align 4, !dbg !8853
  %cmp3282 = icmp eq i32 %1340, 2, !dbg !8855
  br i1 %cmp3282, label %if.then3284, label %if.else3286, !dbg !8856

if.then3284:                                      ; preds = %if.end3281
  %1341 = load i32, i32* %mode.addr, align 4, !dbg !8857
  %1342 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8858
  %1343 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8859
  %call3285 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %1341, %struct.rtx_def* %1342, %struct.rtx_def* %1343), !dbg !8860
  store %struct.rtx_def* %call3285, %struct.rtx_def** %retval, align 8, !dbg !8861
  br label %return, !dbg !8861

if.else3286:                                      ; preds = %if.end3281
  %1344 = load i32, i32* %num_negated, align 4, !dbg !8862
  %cmp3287 = icmp eq i32 %1344, 1, !dbg !8864
  br i1 %cmp3287, label %if.then3289, label %if.end3292, !dbg !8865

if.then3289:                                      ; preds = %if.else3286
  %1345 = load i32, i32* %mode.addr, align 4, !dbg !8866
  %1346 = load i32, i32* %mode.addr, align 4, !dbg !8867
  %1347 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8868
  %1348 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8869
  %call3290 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %1346, %struct.rtx_def* %1347, %struct.rtx_def* %1348), !dbg !8870
  %1349 = load i32, i32* %mode.addr, align 4, !dbg !8871
  %call3291 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1345, %struct.rtx_def* %call3290, i32 %1349), !dbg !8872
  store %struct.rtx_def* %call3291, %struct.rtx_def** %retval, align 8, !dbg !8873
  br label %return, !dbg !8873

if.end3292:                                       ; preds = %if.else3286
  br label %if.end3293

if.end3293:                                       ; preds = %if.end3292
  %1350 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8874
  %1351 = bitcast %struct.rtx_def* %1350 to i32*, !dbg !8874
  %bf.load3294 = load i32, i32* %1351, align 8, !dbg !8874
  %bf.clear3295 = and i32 %bf.load3294, 65535, !dbg !8874
  %cmp3296 = icmp eq i32 %bf.clear3295, 61, !dbg !8876
  br i1 %cmp3296, label %land.lhs.true3298, label %if.else3315, !dbg !8877

land.lhs.true3298:                                ; preds = %if.end3293
  %1352 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8878
  %u3299 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1352, i32 0, i32 1, !dbg !8878
  %fld3300 = bitcast %union.u* %u3299 to [1 x %union.rtunion_def]*, !dbg !8878
  %arrayidx3301 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3300, i64 0, i64 1, !dbg !8878
  %rt_rtx3302 = bitcast %union.rtunion_def* %arrayidx3301 to %struct.rtx_def**, !dbg !8878
  %1353 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3302, align 8, !dbg !8878
  %1354 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8879
  %call3303 = call i32 @rtx_equal_p(%struct.rtx_def* %1353, %struct.rtx_def* %1354), !dbg !8880
  %tobool3304 = icmp ne i32 %call3303, 0, !dbg !8880
  br i1 %tobool3304, label %land.lhs.true3305, label %if.else3315, !dbg !8881

land.lhs.true3305:                                ; preds = %land.lhs.true3298
  %1355 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8882
  %call3306 = call i32 @side_effects_p(%struct.rtx_def* %1355), !dbg !8883
  %tobool3307 = icmp ne i32 %call3306, 0, !dbg !8883
  br i1 %tobool3307, label %if.else3315, label %if.then3308, !dbg !8884

if.then3308:                                      ; preds = %land.lhs.true3305
  %1356 = load i32, i32* %mode.addr, align 4, !dbg !8885
  %1357 = load i32, i32* %mode.addr, align 4, !dbg !8886
  %1358 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8887
  %u3309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1358, i32 0, i32 1, !dbg !8887
  %fld3310 = bitcast %union.u* %u3309 to [1 x %union.rtunion_def]*, !dbg !8887
  %arrayidx3311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3310, i64 0, i64 0, !dbg !8887
  %rt_rtx3312 = bitcast %union.rtunion_def* %arrayidx3311 to %struct.rtx_def**, !dbg !8887
  %1359 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3312, align 8, !dbg !8887
  %1360 = load i32, i32* %mode.addr, align 4, !dbg !8888
  %call3313 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1357, %struct.rtx_def* %1359, i32 %1360), !dbg !8889
  %1361 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8890
  %call3314 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1356, %struct.rtx_def* %call3313, %struct.rtx_def* %1361), !dbg !8891
  store %struct.rtx_def* %call3314, %struct.rtx_def** %retval, align 8, !dbg !8892
  br label %return, !dbg !8892

if.else3315:                                      ; preds = %land.lhs.true3305, %land.lhs.true3298, %if.end3293
  %1362 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8893
  %1363 = bitcast %struct.rtx_def* %1362 to i32*, !dbg !8893
  %bf.load3316 = load i32, i32* %1363, align 8, !dbg !8893
  %bf.clear3317 = and i32 %bf.load3316, 65535, !dbg !8893
  %cmp3318 = icmp eq i32 %bf.clear3317, 61, !dbg !8895
  br i1 %cmp3318, label %land.lhs.true3320, label %if.end3337, !dbg !8896

land.lhs.true3320:                                ; preds = %if.else3315
  %1364 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8897
  %u3321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1364, i32 0, i32 1, !dbg !8897
  %fld3322 = bitcast %union.u* %u3321 to [1 x %union.rtunion_def]*, !dbg !8897
  %arrayidx3323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3322, i64 0, i64 0, !dbg !8897
  %rt_rtx3324 = bitcast %union.rtunion_def* %arrayidx3323 to %struct.rtx_def**, !dbg !8897
  %1365 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3324, align 8, !dbg !8897
  %1366 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8898
  %call3325 = call i32 @rtx_equal_p(%struct.rtx_def* %1365, %struct.rtx_def* %1366), !dbg !8899
  %tobool3326 = icmp ne i32 %call3325, 0, !dbg !8899
  br i1 %tobool3326, label %land.lhs.true3327, label %if.end3337, !dbg !8900

land.lhs.true3327:                                ; preds = %land.lhs.true3320
  %1367 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8901
  %call3328 = call i32 @side_effects_p(%struct.rtx_def* %1367), !dbg !8902
  %tobool3329 = icmp ne i32 %call3328, 0, !dbg !8902
  br i1 %tobool3329, label %if.end3337, label %if.then3330, !dbg !8903

if.then3330:                                      ; preds = %land.lhs.true3327
  %1368 = load i32, i32* %mode.addr, align 4, !dbg !8904
  %1369 = load i32, i32* %mode.addr, align 4, !dbg !8905
  %1370 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8906
  %u3331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1370, i32 0, i32 1, !dbg !8906
  %fld3332 = bitcast %union.u* %u3331 to [1 x %union.rtunion_def]*, !dbg !8906
  %arrayidx3333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3332, i64 0, i64 1, !dbg !8906
  %rt_rtx3334 = bitcast %union.rtunion_def* %arrayidx3333 to %struct.rtx_def**, !dbg !8906
  %1371 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3334, align 8, !dbg !8906
  %1372 = load i32, i32* %mode.addr, align 4, !dbg !8907
  %call3335 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1369, %struct.rtx_def* %1371, i32 %1372), !dbg !8908
  %1373 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8909
  %call3336 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1368, %struct.rtx_def* %call3335, %struct.rtx_def* %1373), !dbg !8910
  store %struct.rtx_def* %call3336, %struct.rtx_def** %retval, align 8, !dbg !8911
  br label %return, !dbg !8911

if.end3337:                                       ; preds = %land.lhs.true3327, %land.lhs.true3320, %if.else3315
  br label %if.end3338

if.end3338:                                       ; preds = %if.end3337
  %1374 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8912
  %1375 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8914
  %cmp3339 = icmp eq %struct.rtx_def* %1374, %1375, !dbg !8915
  br i1 %cmp3339, label %land.lhs.true3341, label %if.end3353, !dbg !8916

land.lhs.true3341:                                ; preds = %if.end3338
  %1376 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8917
  %1377 = bitcast %struct.rtx_def* %1376 to i32*, !dbg !8917
  %bf.load3342 = load i32, i32* %1377, align 8, !dbg !8917
  %bf.clear3343 = and i32 %bf.load3342, 65535, !dbg !8917
  %idxprom3344 = sext i32 %bf.clear3343 to i64, !dbg !8917
  %arrayidx3345 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom3344, !dbg !8917
  %1378 = load i32, i32* %arrayidx3345, align 4, !dbg !8917
  %and3346 = and i32 %1378, -2, !dbg !8917
  %cmp3347 = icmp eq i32 %and3346, 0, !dbg !8917
  br i1 %cmp3347, label %land.lhs.true3349, label %if.end3353, !dbg !8918

land.lhs.true3349:                                ; preds = %land.lhs.true3341
  %1379 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8919
  %1380 = load i32, i32* %mode.addr, align 4, !dbg !8920
  %call3350 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %1379, i32 %1380), !dbg !8921
  store %struct.rtx_def* %call3350, %struct.rtx_def** %reversed, align 8, !dbg !8922
  %tobool3351 = icmp ne %struct.rtx_def* %call3350, null, !dbg !8922
  br i1 %tobool3351, label %if.then3352, label %if.end3353, !dbg !8923

if.then3352:                                      ; preds = %land.lhs.true3349
  %1381 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8, !dbg !8924
  store %struct.rtx_def* %1381, %struct.rtx_def** %retval, align 8, !dbg !8925
  br label %return, !dbg !8925

if.end3353:                                       ; preds = %land.lhs.true3349, %land.lhs.true3341, %if.end3338
  %1382 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8926
  %1383 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !8928
  %cmp3354 = icmp eq %struct.rtx_def* %1382, %1383, !dbg !8929
  br i1 %cmp3354, label %land.lhs.true3356, label %if.end3395, !dbg !8930

land.lhs.true3356:                                ; preds = %if.end3353
  %1384 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8931
  %1385 = bitcast %struct.rtx_def* %1384 to i32*, !dbg !8931
  %bf.load3357 = load i32, i32* %1385, align 8, !dbg !8931
  %bf.clear3358 = and i32 %bf.load3357, 65535, !dbg !8931
  %cmp3359 = icmp eq i32 %bf.clear3358, 68, !dbg !8932
  br i1 %cmp3359, label %land.lhs.true3361, label %if.end3395, !dbg !8933

land.lhs.true3361:                                ; preds = %land.lhs.true3356
  %1386 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8934
  %u3362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1386, i32 0, i32 1, !dbg !8934
  %fld3363 = bitcast %union.u* %u3362 to [1 x %union.rtunion_def]*, !dbg !8934
  %arrayidx3364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3363, i64 0, i64 1, !dbg !8934
  %rt_rtx3365 = bitcast %union.rtunion_def* %arrayidx3364 to %struct.rtx_def**, !dbg !8934
  %1387 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3365, align 8, !dbg !8934
  %1388 = bitcast %struct.rtx_def* %1387 to i32*, !dbg !8934
  %bf.load3366 = load i32, i32* %1388, align 8, !dbg !8934
  %bf.clear3367 = and i32 %bf.load3366, 65535, !dbg !8934
  %cmp3368 = icmp eq i32 %bf.clear3367, 30, !dbg !8934
  br i1 %cmp3368, label %land.lhs.true3370, label %if.end3395, !dbg !8935

land.lhs.true3370:                                ; preds = %land.lhs.true3361
  %1389 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8936
  %u3371 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1389, i32 0, i32 1, !dbg !8936
  %fld3372 = bitcast %union.u* %u3371 to [1 x %union.rtunion_def]*, !dbg !8936
  %arrayidx3373 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3372, i64 0, i64 1, !dbg !8936
  %rt_rtx3374 = bitcast %union.rtunion_def* %arrayidx3373 to %struct.rtx_def**, !dbg !8936
  %1390 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3374, align 8, !dbg !8936
  %u3375 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1390, i32 0, i32 1, !dbg !8936
  %hwint3376 = bitcast %union.u* %u3375 to [1 x i64]*, !dbg !8936
  %arrayidx3377 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3376, i64 0, i64 0, !dbg !8936
  %1391 = load i64, i64* %arrayidx3377, align 8, !dbg !8936
  %1392 = load i32, i32* %mode.addr, align 4, !dbg !8937
  %idxprom3378 = zext i32 %1392 to i64, !dbg !8937
  %arrayidx3379 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3378, !dbg !8937
  %1393 = load i8, i8* %arrayidx3379, align 1, !dbg !8937
  %conv3380 = zext i8 %1393 to i16, !dbg !8937
  %conv3381 = zext i16 %conv3380 to i32, !dbg !8937
  %mul3382 = mul nsw i32 %conv3381, 8, !dbg !8937
  %conv3383 = trunc i32 %mul3382 to i16, !dbg !8937
  %conv3384 = zext i16 %conv3383 to i32, !dbg !8937
  %sub3385 = sub nsw i32 %conv3384, 1, !dbg !8938
  %conv3386 = sext i32 %sub3385 to i64, !dbg !8937
  %cmp3387 = icmp eq i64 %1391, %conv3386, !dbg !8939
  br i1 %cmp3387, label %if.then3389, label %if.end3395, !dbg !8940

if.then3389:                                      ; preds = %land.lhs.true3370
  %1394 = load i32, i32* %mode.addr, align 4, !dbg !8941
  %1395 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8941
  %u3390 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1395, i32 0, i32 1, !dbg !8941
  %fld3391 = bitcast %union.u* %u3390 to [1 x %union.rtunion_def]*, !dbg !8941
  %arrayidx3392 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3391, i64 0, i64 0, !dbg !8941
  %rt_rtx3393 = bitcast %union.rtunion_def* %arrayidx3392 to %struct.rtx_def**, !dbg !8941
  %1396 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3393, align 8, !dbg !8941
  %1397 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8941
  %call3394 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 82, i32 %1394, %struct.rtx_def* %1396, %struct.rtx_def* %1397), !dbg !8941
  store %struct.rtx_def* %call3394, %struct.rtx_def** %retval, align 8, !dbg !8942
  br label %return, !dbg !8942

if.end3395:                                       ; preds = %land.lhs.true3370, %land.lhs.true3361, %land.lhs.true3356, %if.end3353
  %1398 = load i32, i32* %mode.addr, align 4, !dbg !8943
  %idxprom3396 = zext i32 %1398 to i64, !dbg !8943
  %arrayidx3397 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3396, !dbg !8943
  %1399 = load i8, i8* %arrayidx3397, align 1, !dbg !8943
  %conv3398 = zext i8 %1399 to i16, !dbg !8943
  %conv3399 = zext i16 %conv3398 to i32, !dbg !8943
  %mul3400 = mul nsw i32 %conv3399, 8, !dbg !8943
  %conv3401 = trunc i32 %mul3400 to i16, !dbg !8943
  %conv3402 = zext i16 %conv3401 to i32, !dbg !8943
  %cmp3403 = icmp sle i32 %conv3402, 64, !dbg !8945
  br i1 %cmp3403, label %land.lhs.true3405, label %if.end3436, !dbg !8946

land.lhs.true3405:                                ; preds = %if.end3395
  %1400 = load i32, i32* %mode.addr, align 4, !dbg !8947
  %idxprom3406 = zext i32 %1400 to i64, !dbg !8947
  %arrayidx3407 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom3406, !dbg !8947
  %1401 = load i64, i64* %arrayidx3407, align 8, !dbg !8947
  %and3408 = and i64 1, %1401, !dbg !8948
  %1402 = load i32, i32* %mode.addr, align 4, !dbg !8949
  %idxprom3409 = zext i32 %1402 to i64, !dbg !8949
  %arrayidx3410 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3409, !dbg !8949
  %1403 = load i8, i8* %arrayidx3410, align 1, !dbg !8949
  %conv3411 = zext i8 %1403 to i16, !dbg !8949
  %conv3412 = zext i16 %conv3411 to i32, !dbg !8949
  %mul3413 = mul nsw i32 %conv3412, 8, !dbg !8949
  %conv3414 = trunc i32 %mul3413 to i16, !dbg !8949
  %conv3415 = zext i16 %conv3414 to i32, !dbg !8949
  %sub3416 = sub nsw i32 %conv3415, 1, !dbg !8950
  %sh_prom3417 = zext i32 %sub3416 to i64, !dbg !8951
  %shl3418 = shl i64 1, %sh_prom3417, !dbg !8951
  %cmp3419 = icmp eq i64 %and3408, %shl3418, !dbg !8952
  br i1 %cmp3419, label %land.lhs.true3421, label %if.end3436, !dbg !8953

land.lhs.true3421:                                ; preds = %land.lhs.true3405
  %1404 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8954
  %1405 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !8955
  %cmp3422 = icmp eq %struct.rtx_def* %1404, %1405, !dbg !8956
  br i1 %cmp3422, label %land.lhs.true3424, label %if.end3436, !dbg !8957

land.lhs.true3424:                                ; preds = %land.lhs.true3421
  %1406 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8958
  %1407 = bitcast %struct.rtx_def* %1406 to i32*, !dbg !8958
  %bf.load3425 = load i32, i32* %1407, align 8, !dbg !8958
  %bf.clear3426 = and i32 %bf.load3425, 65535, !dbg !8958
  %idxprom3427 = sext i32 %bf.clear3426 to i64, !dbg !8958
  %arrayidx3428 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom3427, !dbg !8958
  %1408 = load i32, i32* %arrayidx3428, align 4, !dbg !8958
  %and3429 = and i32 %1408, -2, !dbg !8958
  %cmp3430 = icmp eq i32 %and3429, 0, !dbg !8958
  br i1 %cmp3430, label %land.lhs.true3432, label %if.end3436, !dbg !8959

land.lhs.true3432:                                ; preds = %land.lhs.true3424
  %1409 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8960
  %1410 = load i32, i32* %mode.addr, align 4, !dbg !8961
  %call3433 = call %struct.rtx_def* @reversed_comparison(%struct.rtx_def* %1409, i32 %1410), !dbg !8962
  store %struct.rtx_def* %call3433, %struct.rtx_def** %reversed, align 8, !dbg !8963
  %tobool3434 = icmp ne %struct.rtx_def* %call3433, null, !dbg !8963
  br i1 %tobool3434, label %if.then3435, label %if.end3436, !dbg !8964

if.then3435:                                      ; preds = %land.lhs.true3432
  %1411 = load %struct.rtx_def*, %struct.rtx_def** %reversed, align 8, !dbg !8965
  store %struct.rtx_def* %1411, %struct.rtx_def** %retval, align 8, !dbg !8966
  br label %return, !dbg !8966

if.end3436:                                       ; preds = %land.lhs.true3432, %land.lhs.true3424, %land.lhs.true3421, %land.lhs.true3405, %if.end3395
  %1412 = load i32, i32* %code.addr, align 4, !dbg !8967
  %1413 = load i32, i32* %mode.addr, align 4, !dbg !8968
  %1414 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8969
  %1415 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !8970
  %call3437 = call %struct.rtx_def* @simplify_associative_operation(i32 %1412, i32 %1413, %struct.rtx_def* %1414, %struct.rtx_def* %1415), !dbg !8971
  store %struct.rtx_def* %call3437, %struct.rtx_def** %tem, align 8, !dbg !8972
  %1416 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8973
  %tobool3438 = icmp ne %struct.rtx_def* %1416, null, !dbg !8973
  br i1 %tobool3438, label %if.then3439, label %if.end3440, !dbg !8975

if.then3439:                                      ; preds = %if.end3436
  %1417 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !8976
  store %struct.rtx_def* %1417, %struct.rtx_def** %retval, align 8, !dbg !8977
  br label %return, !dbg !8977

if.end3440:                                       ; preds = %if.end3436
  br label %sw.epilog5879, !dbg !8978

sw.bb3441:                                        ; preds = %entry
  %1418 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8979
  %1419 = load i32, i32* %mode.addr, align 4, !dbg !8981
  %idxprom3442 = sext i32 %1419 to i64, !dbg !8981
  %arrayidx3443 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom3442, !dbg !8981
  %1420 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3443, align 8, !dbg !8981
  %cmp3444 = icmp eq %struct.rtx_def* %1418, %1420, !dbg !8982
  br i1 %cmp3444, label %land.lhs.true3446, label %if.end3450, !dbg !8983

land.lhs.true3446:                                ; preds = %sw.bb3441
  %1421 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !8984
  %call3447 = call i32 @side_effects_p(%struct.rtx_def* %1421), !dbg !8985
  %tobool3448 = icmp ne i32 %call3447, 0, !dbg !8985
  br i1 %tobool3448, label %if.end3450, label %if.then3449, !dbg !8986

if.then3449:                                      ; preds = %land.lhs.true3446
  %1422 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !8987
  store %struct.rtx_def* %1422, %struct.rtx_def** %retval, align 8, !dbg !8988
  br label %return, !dbg !8988

if.end3450:                                       ; preds = %land.lhs.true3446, %sw.bb3441
  %1423 = load i32, i32* %mode.addr, align 4, !dbg !8989
  %idxprom3451 = zext i32 %1423 to i64, !dbg !8989
  %arrayidx3452 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3451, !dbg !8989
  %1424 = load i8, i8* %arrayidx3452, align 1, !dbg !8989
  %conv3453 = zext i8 %1424 to i16, !dbg !8989
  %conv3454 = zext i16 %conv3453 to i32, !dbg !8989
  %mul3455 = mul nsw i32 %conv3454, 8, !dbg !8989
  %conv3456 = trunc i32 %mul3455 to i16, !dbg !8989
  %conv3457 = zext i16 %conv3456 to i32, !dbg !8989
  %cmp3458 = icmp sle i32 %conv3457, 64, !dbg !8991
  br i1 %cmp3458, label %if.then3460, label %if.end3491, !dbg !8992

if.then3460:                                      ; preds = %if.end3450
  call void @llvm.dbg.declare(metadata i64* %nzop0, metadata !8993, metadata !DIExpression()), !dbg !8995
  %1425 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !8996
  %1426 = load i32, i32* %mode.addr, align 4, !dbg !8997
  %call3461 = call i64 @nonzero_bits(%struct.rtx_def* %1425, i32 %1426), !dbg !8998
  store i64 %call3461, i64* %nzop0, align 8, !dbg !8995
  call void @llvm.dbg.declare(metadata i64* %nzop1, metadata !8999, metadata !DIExpression()), !dbg !9000
  %1427 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9001
  %1428 = bitcast %struct.rtx_def* %1427 to i32*, !dbg !9001
  %bf.load3462 = load i32, i32* %1428, align 8, !dbg !9001
  %bf.clear3463 = and i32 %bf.load3462, 65535, !dbg !9001
  %cmp3464 = icmp eq i32 %bf.clear3463, 30, !dbg !9001
  br i1 %cmp3464, label %if.then3466, label %if.end3476, !dbg !9003

if.then3466:                                      ; preds = %if.then3460
  call void @llvm.dbg.declare(metadata i64* %val1, metadata !9004, metadata !DIExpression()), !dbg !9006
  %1429 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9007
  %u3467 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1429, i32 0, i32 1, !dbg !9007
  %hwint3468 = bitcast %union.u* %u3467 to [1 x i64]*, !dbg !9007
  %arrayidx3469 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3468, i64 0, i64 0, !dbg !9007
  %1430 = load i64, i64* %arrayidx3469, align 8, !dbg !9007
  store i64 %1430, i64* %val1, align 8, !dbg !9006
  %1431 = load i64, i64* %nzop0, align 8, !dbg !9008
  %1432 = load i64, i64* %val1, align 8, !dbg !9010
  %neg3470 = xor i64 %1432, -1, !dbg !9011
  %and3471 = and i64 %1431, %neg3470, !dbg !9012
  %cmp3472 = icmp eq i64 %and3471, 0, !dbg !9013
  br i1 %cmp3472, label %if.then3474, label %if.end3475, !dbg !9014

if.then3474:                                      ; preds = %if.then3466
  %1433 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9015
  store %struct.rtx_def* %1433, %struct.rtx_def** %retval, align 8, !dbg !9016
  br label %return, !dbg !9016

if.end3475:                                       ; preds = %if.then3466
  br label %if.end3476, !dbg !9017

if.end3476:                                       ; preds = %if.end3475, %if.then3460
  %1434 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9018
  %1435 = load i32, i32* %mode.addr, align 4, !dbg !9019
  %call3477 = call i64 @nonzero_bits(%struct.rtx_def* %1434, i32 %1435), !dbg !9020
  store i64 %call3477, i64* %nzop1, align 8, !dbg !9021
  %1436 = load i64, i64* %nzop1, align 8, !dbg !9022
  %1437 = load i64, i64* %nzop0, align 8, !dbg !9024
  %and3478 = and i64 %1436, %1437, !dbg !9025
  %cmp3479 = icmp eq i64 %and3478, 0, !dbg !9026
  br i1 %cmp3479, label %land.lhs.true3481, label %if.end3490, !dbg !9027

land.lhs.true3481:                                ; preds = %if.end3476
  %1438 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9028
  %call3482 = call i32 @side_effects_p(%struct.rtx_def* %1438), !dbg !9029
  %tobool3483 = icmp ne i32 %call3482, 0, !dbg !9029
  br i1 %tobool3483, label %if.end3490, label %land.lhs.true3484, !dbg !9030

land.lhs.true3484:                                ; preds = %land.lhs.true3481
  %1439 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9031
  %call3485 = call i32 @side_effects_p(%struct.rtx_def* %1439), !dbg !9032
  %tobool3486 = icmp ne i32 %call3485, 0, !dbg !9032
  br i1 %tobool3486, label %if.end3490, label %if.then3487, !dbg !9033

if.then3487:                                      ; preds = %land.lhs.true3484
  %1440 = load i32, i32* %mode.addr, align 4, !dbg !9034
  %idxprom3488 = sext i32 %1440 to i64, !dbg !9034
  %arrayidx3489 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom3488, !dbg !9034
  %1441 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3489, align 8, !dbg !9034
  store %struct.rtx_def* %1441, %struct.rtx_def** %retval, align 8, !dbg !9035
  br label %return, !dbg !9035

if.end3490:                                       ; preds = %land.lhs.true3484, %land.lhs.true3481, %if.end3476
  br label %if.end3491, !dbg !9036

if.end3491:                                       ; preds = %if.end3490, %if.end3450
  %1442 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9037
  %1443 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9039
  %call3492 = call i32 @rtx_equal_p(%struct.rtx_def* %1442, %struct.rtx_def* %1443), !dbg !9040
  %tobool3493 = icmp ne i32 %call3492, 0, !dbg !9040
  br i1 %tobool3493, label %land.lhs.true3494, label %if.end3504, !dbg !9041

land.lhs.true3494:                                ; preds = %if.end3491
  %1444 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9042
  %call3495 = call i32 @side_effects_p(%struct.rtx_def* %1444), !dbg !9043
  %tobool3496 = icmp ne i32 %call3495, 0, !dbg !9043
  br i1 %tobool3496, label %if.end3504, label %land.lhs.true3497, !dbg !9044

land.lhs.true3497:                                ; preds = %land.lhs.true3494
  %1445 = load i32, i32* %mode.addr, align 4, !dbg !9045
  %idxprom3498 = zext i32 %1445 to i64, !dbg !9045
  %arrayidx3499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3498, !dbg !9045
  %1446 = load i8, i8* %arrayidx3499, align 1, !dbg !9045
  %conv3500 = zext i8 %1446 to i32, !dbg !9045
  %cmp3501 = icmp ne i32 %conv3500, 1, !dbg !9046
  br i1 %cmp3501, label %if.then3503, label %if.end3504, !dbg !9047

if.then3503:                                      ; preds = %land.lhs.true3497
  %1447 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9048
  store %struct.rtx_def* %1447, %struct.rtx_def** %retval, align 8, !dbg !9049
  br label %return, !dbg !9049

if.end3504:                                       ; preds = %land.lhs.true3497, %land.lhs.true3494, %if.end3491
  %1448 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9050
  %1449 = bitcast %struct.rtx_def* %1448 to i32*, !dbg !9050
  %bf.load3505 = load i32, i32* %1449, align 8, !dbg !9050
  %bf.clear3506 = and i32 %bf.load3505, 65535, !dbg !9050
  %cmp3507 = icmp eq i32 %bf.clear3506, 64, !dbg !9052
  br i1 %cmp3507, label %land.lhs.true3509, label %lor.lhs.false3516, !dbg !9053

land.lhs.true3509:                                ; preds = %if.end3504
  %1450 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9054
  %u3510 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1450, i32 0, i32 1, !dbg !9054
  %fld3511 = bitcast %union.u* %u3510 to [1 x %union.rtunion_def]*, !dbg !9054
  %arrayidx3512 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3511, i64 0, i64 0, !dbg !9054
  %rt_rtx3513 = bitcast %union.rtunion_def* %arrayidx3512 to %struct.rtx_def**, !dbg !9054
  %1451 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3513, align 8, !dbg !9054
  %1452 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9055
  %call3514 = call i32 @rtx_equal_p(%struct.rtx_def* %1451, %struct.rtx_def* %1452), !dbg !9056
  %tobool3515 = icmp ne i32 %call3514, 0, !dbg !9056
  br i1 %tobool3515, label %land.lhs.true3528, label %lor.lhs.false3516, !dbg !9057

lor.lhs.false3516:                                ; preds = %land.lhs.true3509, %if.end3504
  %1453 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9058
  %1454 = bitcast %struct.rtx_def* %1453 to i32*, !dbg !9058
  %bf.load3517 = load i32, i32* %1454, align 8, !dbg !9058
  %bf.clear3518 = and i32 %bf.load3517, 65535, !dbg !9058
  %cmp3519 = icmp eq i32 %bf.clear3518, 64, !dbg !9059
  br i1 %cmp3519, label %land.lhs.true3521, label %if.end3540, !dbg !9060

land.lhs.true3521:                                ; preds = %lor.lhs.false3516
  %1455 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9061
  %u3522 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1455, i32 0, i32 1, !dbg !9061
  %fld3523 = bitcast %union.u* %u3522 to [1 x %union.rtunion_def]*, !dbg !9061
  %arrayidx3524 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3523, i64 0, i64 0, !dbg !9061
  %rt_rtx3525 = bitcast %union.rtunion_def* %arrayidx3524 to %struct.rtx_def**, !dbg !9061
  %1456 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3525, align 8, !dbg !9061
  %1457 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9062
  %call3526 = call i32 @rtx_equal_p(%struct.rtx_def* %1456, %struct.rtx_def* %1457), !dbg !9063
  %tobool3527 = icmp ne i32 %call3526, 0, !dbg !9063
  br i1 %tobool3527, label %land.lhs.true3528, label %if.end3540, !dbg !9064

land.lhs.true3528:                                ; preds = %land.lhs.true3521, %land.lhs.true3509
  %1458 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9065
  %call3529 = call i32 @side_effects_p(%struct.rtx_def* %1458), !dbg !9066
  %tobool3530 = icmp ne i32 %call3529, 0, !dbg !9066
  br i1 %tobool3530, label %if.end3540, label %land.lhs.true3531, !dbg !9067

land.lhs.true3531:                                ; preds = %land.lhs.true3528
  %1459 = load i32, i32* %mode.addr, align 4, !dbg !9068
  %idxprom3532 = zext i32 %1459 to i64, !dbg !9068
  %arrayidx3533 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom3532, !dbg !9068
  %1460 = load i8, i8* %arrayidx3533, align 1, !dbg !9068
  %conv3534 = zext i8 %1460 to i32, !dbg !9068
  %cmp3535 = icmp ne i32 %conv3534, 1, !dbg !9069
  br i1 %cmp3535, label %if.then3537, label %if.end3540, !dbg !9070

if.then3537:                                      ; preds = %land.lhs.true3531
  %1461 = load i32, i32* %mode.addr, align 4, !dbg !9071
  %idxprom3538 = sext i32 %1461 to i64, !dbg !9071
  %arrayidx3539 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom3538, !dbg !9071
  %1462 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3539, align 8, !dbg !9071
  store %struct.rtx_def* %1462, %struct.rtx_def** %retval, align 8, !dbg !9072
  br label %return, !dbg !9072

if.end3540:                                       ; preds = %land.lhs.true3531, %land.lhs.true3528, %land.lhs.true3521, %lor.lhs.false3516
  %1463 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9073
  %1464 = bitcast %struct.rtx_def* %1463 to i32*, !dbg !9073
  %bf.load3541 = load i32, i32* %1464, align 8, !dbg !9073
  %bf.clear3542 = and i32 %bf.load3541, 65535, !dbg !9073
  %cmp3543 = icmp eq i32 %bf.clear3542, 98, !dbg !9075
  br i1 %cmp3543, label %land.lhs.true3550, label %lor.lhs.false3545, !dbg !9076

lor.lhs.false3545:                                ; preds = %if.end3540
  %1465 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9077
  %1466 = bitcast %struct.rtx_def* %1465 to i32*, !dbg !9077
  %bf.load3546 = load i32, i32* %1466, align 8, !dbg !9077
  %bf.clear3547 = and i32 %bf.load3546, 65535, !dbg !9077
  %cmp3548 = icmp eq i32 %bf.clear3547, 99, !dbg !9078
  br i1 %cmp3548, label %land.lhs.true3550, label %if.end3600, !dbg !9079

land.lhs.true3550:                                ; preds = %lor.lhs.false3545, %if.end3540
  %1467 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9080
  %1468 = bitcast %struct.rtx_def* %1467 to i32*, !dbg !9080
  %bf.load3551 = load i32, i32* %1468, align 8, !dbg !9080
  %bf.clear3552 = and i32 %bf.load3551, 65535, !dbg !9080
  %cmp3553 = icmp eq i32 %bf.clear3552, 30, !dbg !9080
  br i1 %cmp3553, label %land.lhs.true3555, label %if.end3600, !dbg !9081

land.lhs.true3555:                                ; preds = %land.lhs.true3550
  %1469 = load i32, i32* %mode.addr, align 4, !dbg !9082
  %idxprom3556 = zext i32 %1469 to i64, !dbg !9082
  %arrayidx3557 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3556, !dbg !9082
  %1470 = load i8, i8* %arrayidx3557, align 1, !dbg !9082
  %conv3558 = zext i8 %1470 to i16, !dbg !9082
  %conv3559 = zext i16 %conv3558 to i32, !dbg !9082
  %mul3560 = mul nsw i32 %conv3559, 8, !dbg !9082
  %conv3561 = trunc i32 %mul3560 to i16, !dbg !9082
  %conv3562 = zext i16 %conv3561 to i32, !dbg !9082
  %cmp3563 = icmp sle i32 %conv3562, 64, !dbg !9083
  br i1 %cmp3563, label %land.lhs.true3565, label %if.end3600, !dbg !9084

land.lhs.true3565:                                ; preds = %land.lhs.true3555
  %1471 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9085
  %u3566 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1471, i32 0, i32 1, !dbg !9085
  %fld3567 = bitcast %union.u* %u3566 to [1 x %union.rtunion_def]*, !dbg !9085
  %arrayidx3568 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3567, i64 0, i64 0, !dbg !9085
  %rt_rtx3569 = bitcast %union.rtunion_def* %arrayidx3568 to %struct.rtx_def**, !dbg !9085
  %1472 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3569, align 8, !dbg !9085
  %1473 = bitcast %struct.rtx_def* %1472 to i32*, !dbg !9085
  %bf.load3570 = load i32, i32* %1473, align 8, !dbg !9085
  %bf.lshr3571 = lshr i32 %bf.load3570, 16, !dbg !9085
  %bf.clear3572 = and i32 %bf.lshr3571, 255, !dbg !9085
  %idxprom3573 = zext i32 %bf.clear3572 to i64, !dbg !9085
  %arrayidx3574 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom3573, !dbg !9085
  %1474 = load i64, i64* %arrayidx3574, align 8, !dbg !9085
  %neg3575 = xor i64 %1474, -1, !dbg !9086
  %1475 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9087
  %u3576 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1475, i32 0, i32 1, !dbg !9087
  %hwint3577 = bitcast %union.u* %u3576 to [1 x i64]*, !dbg !9087
  %arrayidx3578 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3577, i64 0, i64 0, !dbg !9087
  %1476 = load i64, i64* %arrayidx3578, align 8, !dbg !9087
  %and3579 = and i64 %neg3575, %1476, !dbg !9088
  %cmp3580 = icmp eq i64 %and3579, 0, !dbg !9089
  br i1 %cmp3580, label %if.then3582, label %if.end3600, !dbg !9090

if.then3582:                                      ; preds = %land.lhs.true3565
  call void @llvm.dbg.declare(metadata i32* %imode, metadata !9091, metadata !DIExpression()), !dbg !9093
  %1477 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9094
  %u3583 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1477, i32 0, i32 1, !dbg !9094
  %fld3584 = bitcast %union.u* %u3583 to [1 x %union.rtunion_def]*, !dbg !9094
  %arrayidx3585 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3584, i64 0, i64 0, !dbg !9094
  %rt_rtx3586 = bitcast %union.rtunion_def* %arrayidx3585 to %struct.rtx_def**, !dbg !9094
  %1478 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3586, align 8, !dbg !9094
  %1479 = bitcast %struct.rtx_def* %1478 to i32*, !dbg !9094
  %bf.load3587 = load i32, i32* %1479, align 8, !dbg !9094
  %bf.lshr3588 = lshr i32 %bf.load3587, 16, !dbg !9094
  %bf.clear3589 = and i32 %bf.lshr3588, 255, !dbg !9094
  store i32 %bf.clear3589, i32* %imode, align 4, !dbg !9093
  %1480 = load i32, i32* %imode, align 4, !dbg !9095
  %1481 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9096
  %u3590 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1481, i32 0, i32 1, !dbg !9096
  %fld3591 = bitcast %union.u* %u3590 to [1 x %union.rtunion_def]*, !dbg !9096
  %arrayidx3592 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3591, i64 0, i64 0, !dbg !9096
  %rt_rtx3593 = bitcast %union.rtunion_def* %arrayidx3592 to %struct.rtx_def**, !dbg !9096
  %1482 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3593, align 8, !dbg !9096
  %1483 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9097
  %u3594 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1483, i32 0, i32 1, !dbg !9097
  %hwint3595 = bitcast %union.u* %u3594 to [1 x i64]*, !dbg !9097
  %arrayidx3596 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3595, i64 0, i64 0, !dbg !9097
  %1484 = load i64, i64* %arrayidx3596, align 8, !dbg !9097
  %1485 = load i32, i32* %imode, align 4, !dbg !9098
  %call3597 = call %struct.rtx_def* @gen_int_mode(i64 %1484, i32 %1485), !dbg !9099
  %call3598 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1480, %struct.rtx_def* %1482, %struct.rtx_def* %call3597), !dbg !9100
  store %struct.rtx_def* %call3598, %struct.rtx_def** %tem, align 8, !dbg !9101
  %1486 = load i32, i32* %mode.addr, align 4, !dbg !9102
  %1487 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9103
  %1488 = load i32, i32* %imode, align 4, !dbg !9104
  %call3599 = call %struct.rtx_def* @simplify_gen_unary(i32 99, i32 %1486, %struct.rtx_def* %1487, i32 %1488), !dbg !9105
  store %struct.rtx_def* %call3599, %struct.rtx_def** %retval, align 8, !dbg !9106
  br label %return, !dbg !9106

if.end3600:                                       ; preds = %land.lhs.true3565, %land.lhs.true3555, %land.lhs.true3550, %lor.lhs.false3545
  %1489 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9107
  %1490 = bitcast %struct.rtx_def* %1489 to i32*, !dbg !9107
  %bf.load3601 = load i32, i32* %1490, align 8, !dbg !9107
  %bf.clear3602 = and i32 %bf.load3601, 65535, !dbg !9107
  %cmp3603 = icmp eq i32 %bf.clear3602, 100, !dbg !9109
  br i1 %cmp3603, label %land.lhs.true3605, label %if.end3624, !dbg !9110

land.lhs.true3605:                                ; preds = %if.end3600
  %1491 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9111
  %1492 = bitcast %struct.rtx_def* %1491 to i32*, !dbg !9111
  %bf.load3606 = load i32, i32* %1492, align 8, !dbg !9111
  %bf.clear3607 = and i32 %bf.load3606, 65535, !dbg !9111
  %cmp3608 = icmp eq i32 %bf.clear3607, 30, !dbg !9111
  br i1 %cmp3608, label %if.then3610, label %if.end3624, !dbg !9112

if.then3610:                                      ; preds = %land.lhs.true3605
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !9113, metadata !DIExpression()), !dbg !9115
  %1493 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9116
  %u3611 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1493, i32 0, i32 1, !dbg !9116
  %fld3612 = bitcast %union.u* %u3611 to [1 x %union.rtunion_def]*, !dbg !9116
  %arrayidx3613 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3612, i64 0, i64 0, !dbg !9116
  %rt_rtx3614 = bitcast %union.rtunion_def* %arrayidx3613 to %struct.rtx_def**, !dbg !9116
  %1494 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3614, align 8, !dbg !9116
  store %struct.rtx_def* %1494, %struct.rtx_def** %x, align 8, !dbg !9115
  call void @llvm.dbg.declare(metadata i32* %xmode, metadata !9117, metadata !DIExpression()), !dbg !9118
  %1495 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !9119
  %1496 = bitcast %struct.rtx_def* %1495 to i32*, !dbg !9119
  %bf.load3615 = load i32, i32* %1496, align 8, !dbg !9119
  %bf.lshr3616 = lshr i32 %bf.load3615, 16, !dbg !9119
  %bf.clear3617 = and i32 %bf.lshr3616, 255, !dbg !9119
  store i32 %bf.clear3617, i32* %xmode, align 4, !dbg !9118
  %1497 = load i32, i32* %xmode, align 4, !dbg !9120
  %1498 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !9121
  %1499 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9122
  %u3618 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1499, i32 0, i32 1, !dbg !9122
  %hwint3619 = bitcast %union.u* %u3618 to [1 x i64]*, !dbg !9122
  %arrayidx3620 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3619, i64 0, i64 0, !dbg !9122
  %1500 = load i64, i64* %arrayidx3620, align 8, !dbg !9122
  %1501 = load i32, i32* %xmode, align 4, !dbg !9123
  %call3621 = call %struct.rtx_def* @gen_int_mode(i64 %1500, i32 %1501), !dbg !9124
  %call3622 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1497, %struct.rtx_def* %1498, %struct.rtx_def* %call3621), !dbg !9125
  store %struct.rtx_def* %call3622, %struct.rtx_def** %tem, align 8, !dbg !9126
  %1502 = load i32, i32* %mode.addr, align 4, !dbg !9127
  %1503 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9128
  %1504 = load i32, i32* %xmode, align 4, !dbg !9129
  %call3623 = call %struct.rtx_def* @simplify_gen_unary(i32 100, i32 %1502, %struct.rtx_def* %1503, i32 %1504), !dbg !9130
  store %struct.rtx_def* %call3623, %struct.rtx_def** %retval, align 8, !dbg !9131
  br label %return, !dbg !9131

if.end3624:                                       ; preds = %land.lhs.true3605, %if.end3600
  %1505 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9132
  %1506 = bitcast %struct.rtx_def* %1505 to i32*, !dbg !9132
  %bf.load3625 = load i32, i32* %1506, align 8, !dbg !9132
  %bf.clear3626 = and i32 %bf.load3625, 65535, !dbg !9132
  %cmp3627 = icmp eq i32 %bf.clear3626, 62, !dbg !9134
  br i1 %cmp3627, label %land.lhs.true3629, label %if.end3662, !dbg !9135

land.lhs.true3629:                                ; preds = %if.end3624
  %1507 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9136
  %1508 = bitcast %struct.rtx_def* %1507 to i32*, !dbg !9136
  %bf.load3630 = load i32, i32* %1508, align 8, !dbg !9136
  %bf.clear3631 = and i32 %bf.load3630, 65535, !dbg !9136
  %cmp3632 = icmp eq i32 %bf.clear3631, 30, !dbg !9136
  br i1 %cmp3632, label %land.lhs.true3634, label %if.end3662, !dbg !9137

land.lhs.true3634:                                ; preds = %land.lhs.true3629
  %1509 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9138
  %u3635 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1509, i32 0, i32 1, !dbg !9138
  %fld3636 = bitcast %union.u* %u3635 to [1 x %union.rtunion_def]*, !dbg !9138
  %arrayidx3637 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3636, i64 0, i64 1, !dbg !9138
  %rt_rtx3638 = bitcast %union.rtunion_def* %arrayidx3637 to %struct.rtx_def**, !dbg !9138
  %1510 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3638, align 8, !dbg !9138
  %1511 = bitcast %struct.rtx_def* %1510 to i32*, !dbg !9138
  %bf.load3639 = load i32, i32* %1511, align 8, !dbg !9138
  %bf.clear3640 = and i32 %bf.load3639, 65535, !dbg !9138
  %cmp3641 = icmp eq i32 %bf.clear3640, 30, !dbg !9138
  br i1 %cmp3641, label %if.then3643, label %if.end3662, !dbg !9139

if.then3643:                                      ; preds = %land.lhs.true3634
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !9140, metadata !DIExpression()), !dbg !9142
  %1512 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9143
  %u3644 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1512, i32 0, i32 1, !dbg !9143
  %hwint3645 = bitcast %union.u* %u3644 to [1 x i64]*, !dbg !9143
  %arrayidx3646 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3645, i64 0, i64 0, !dbg !9143
  %1513 = load i64, i64* %arrayidx3646, align 8, !dbg !9143
  %1514 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9144
  %u3647 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1514, i32 0, i32 1, !dbg !9144
  %fld3648 = bitcast %union.u* %u3647 to [1 x %union.rtunion_def]*, !dbg !9144
  %arrayidx3649 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3648, i64 0, i64 1, !dbg !9144
  %rt_rtx3650 = bitcast %union.rtunion_def* %arrayidx3649 to %struct.rtx_def**, !dbg !9144
  %1515 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3650, align 8, !dbg !9144
  %u3651 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1515, i32 0, i32 1, !dbg !9144
  %hwint3652 = bitcast %union.u* %u3651 to [1 x i64]*, !dbg !9144
  %arrayidx3653 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3652, i64 0, i64 0, !dbg !9144
  %1516 = load i64, i64* %arrayidx3653, align 8, !dbg !9144
  %and3654 = and i64 %1513, %1516, !dbg !9145
  store i64 %and3654, i64* %tmp, align 8, !dbg !9142
  %1517 = load i32, i32* %mode.addr, align 4, !dbg !9146
  %1518 = load i32, i32* %mode.addr, align 4, !dbg !9147
  %1519 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9148
  %u3655 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1519, i32 0, i32 1, !dbg !9148
  %fld3656 = bitcast %union.u* %u3655 to [1 x %union.rtunion_def]*, !dbg !9148
  %arrayidx3657 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3656, i64 0, i64 0, !dbg !9148
  %rt_rtx3658 = bitcast %union.rtunion_def* %arrayidx3657 to %struct.rtx_def**, !dbg !9148
  %1520 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3658, align 8, !dbg !9148
  %1521 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9149
  %call3659 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1518, %struct.rtx_def* %1520, %struct.rtx_def* %1521), !dbg !9150
  %1522 = load i64, i64* %tmp, align 8, !dbg !9151
  %1523 = load i32, i32* %mode.addr, align 4, !dbg !9152
  %call3660 = call %struct.rtx_def* @gen_int_mode(i64 %1522, i32 %1523), !dbg !9153
  %call3661 = call %struct.rtx_def* @simplify_gen_binary(i32 62, i32 %1517, %struct.rtx_def* %call3659, %struct.rtx_def* %call3660), !dbg !9154
  store %struct.rtx_def* %call3661, %struct.rtx_def** %retval, align 8, !dbg !9155
  br label %return, !dbg !9155

if.end3662:                                       ; preds = %land.lhs.true3634, %land.lhs.true3629, %if.end3624
  %1524 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9156
  %1525 = bitcast %struct.rtx_def* %1524 to i32*, !dbg !9156
  %bf.load3663 = load i32, i32* %1525, align 8, !dbg !9156
  %bf.clear3664 = and i32 %bf.load3663, 65535, !dbg !9156
  %cmp3665 = icmp eq i32 %bf.clear3664, 63, !dbg !9158
  br i1 %cmp3665, label %land.lhs.true3667, label %if.end3684, !dbg !9159

land.lhs.true3667:                                ; preds = %if.end3662
  %1526 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9160
  %u3668 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1526, i32 0, i32 1, !dbg !9160
  %fld3669 = bitcast %union.u* %u3668 to [1 x %union.rtunion_def]*, !dbg !9160
  %arrayidx3670 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3669, i64 0, i64 0, !dbg !9160
  %rt_rtx3671 = bitcast %union.rtunion_def* %arrayidx3670 to %struct.rtx_def**, !dbg !9160
  %1527 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3671, align 8, !dbg !9160
  %1528 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9161
  %call3672 = call i32 @rtx_equal_p(%struct.rtx_def* %1527, %struct.rtx_def* %1528), !dbg !9162
  %tobool3673 = icmp ne i32 %call3672, 0, !dbg !9162
  br i1 %tobool3673, label %land.lhs.true3674, label %if.end3684, !dbg !9163

land.lhs.true3674:                                ; preds = %land.lhs.true3667
  %1529 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9164
  %call3675 = call i32 @side_effects_p(%struct.rtx_def* %1529), !dbg !9165
  %tobool3676 = icmp ne i32 %call3675, 0, !dbg !9165
  br i1 %tobool3676, label %if.end3684, label %if.then3677, !dbg !9166

if.then3677:                                      ; preds = %land.lhs.true3674
  %1530 = load i32, i32* %mode.addr, align 4, !dbg !9167
  %1531 = load i32, i32* %mode.addr, align 4, !dbg !9168
  %1532 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9169
  %u3678 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1532, i32 0, i32 1, !dbg !9169
  %fld3679 = bitcast %union.u* %u3678 to [1 x %union.rtunion_def]*, !dbg !9169
  %arrayidx3680 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3679, i64 0, i64 1, !dbg !9169
  %rt_rtx3681 = bitcast %union.rtunion_def* %arrayidx3680 to %struct.rtx_def**, !dbg !9169
  %1533 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3681, align 8, !dbg !9169
  %1534 = load i32, i32* %mode.addr, align 4, !dbg !9170
  %call3682 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1531, %struct.rtx_def* %1533, i32 %1534), !dbg !9171
  %1535 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9172
  %call3683 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1530, %struct.rtx_def* %call3682, %struct.rtx_def* %1535), !dbg !9173
  store %struct.rtx_def* %call3683, %struct.rtx_def** %retval, align 8, !dbg !9174
  br label %return, !dbg !9174

if.end3684:                                       ; preds = %land.lhs.true3674, %land.lhs.true3667, %if.end3662
  %1536 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9175
  %1537 = bitcast %struct.rtx_def* %1536 to i32*, !dbg !9175
  %bf.load3685 = load i32, i32* %1537, align 8, !dbg !9175
  %bf.clear3686 = and i32 %bf.load3685, 65535, !dbg !9175
  %cmp3687 = icmp eq i32 %bf.clear3686, 63, !dbg !9177
  br i1 %cmp3687, label %land.lhs.true3689, label %if.end3706, !dbg !9178

land.lhs.true3689:                                ; preds = %if.end3684
  %1538 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9179
  %u3690 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1538, i32 0, i32 1, !dbg !9179
  %fld3691 = bitcast %union.u* %u3690 to [1 x %union.rtunion_def]*, !dbg !9179
  %arrayidx3692 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3691, i64 0, i64 1, !dbg !9179
  %rt_rtx3693 = bitcast %union.rtunion_def* %arrayidx3692 to %struct.rtx_def**, !dbg !9179
  %1539 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3693, align 8, !dbg !9179
  %1540 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9180
  %call3694 = call i32 @rtx_equal_p(%struct.rtx_def* %1539, %struct.rtx_def* %1540), !dbg !9181
  %tobool3695 = icmp ne i32 %call3694, 0, !dbg !9181
  br i1 %tobool3695, label %land.lhs.true3696, label %if.end3706, !dbg !9182

land.lhs.true3696:                                ; preds = %land.lhs.true3689
  %1541 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9183
  %call3697 = call i32 @side_effects_p(%struct.rtx_def* %1541), !dbg !9184
  %tobool3698 = icmp ne i32 %call3697, 0, !dbg !9184
  br i1 %tobool3698, label %if.end3706, label %if.then3699, !dbg !9185

if.then3699:                                      ; preds = %land.lhs.true3696
  %1542 = load i32, i32* %mode.addr, align 4, !dbg !9186
  %1543 = load i32, i32* %mode.addr, align 4, !dbg !9187
  %1544 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9188
  %u3700 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1544, i32 0, i32 1, !dbg !9188
  %fld3701 = bitcast %union.u* %u3700 to [1 x %union.rtunion_def]*, !dbg !9188
  %arrayidx3702 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3701, i64 0, i64 0, !dbg !9188
  %rt_rtx3703 = bitcast %union.rtunion_def* %arrayidx3702 to %struct.rtx_def**, !dbg !9188
  %1545 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3703, align 8, !dbg !9188
  %1546 = load i32, i32* %mode.addr, align 4, !dbg !9189
  %call3704 = call %struct.rtx_def* @simplify_gen_unary(i32 64, i32 %1543, %struct.rtx_def* %1545, i32 %1546), !dbg !9190
  %1547 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9191
  %call3705 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1542, %struct.rtx_def* %call3704, %struct.rtx_def* %1547), !dbg !9192
  store %struct.rtx_def* %call3705, %struct.rtx_def** %retval, align 8, !dbg !9193
  br label %return, !dbg !9193

if.end3706:                                       ; preds = %land.lhs.true3696, %land.lhs.true3689, %if.end3684
  %1548 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9194
  %1549 = bitcast %struct.rtx_def* %1548 to i32*, !dbg !9194
  %bf.load3707 = load i32, i32* %1549, align 8, !dbg !9194
  %bf.clear3708 = and i32 %bf.load3707, 65535, !dbg !9194
  %cmp3709 = icmp eq i32 %bf.clear3708, 64, !dbg !9196
  br i1 %cmp3709, label %land.lhs.true3711, label %if.end3744, !dbg !9197

land.lhs.true3711:                                ; preds = %if.end3706
  %1550 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9198
  %u3712 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1550, i32 0, i32 1, !dbg !9198
  %fld3713 = bitcast %union.u* %u3712 to [1 x %union.rtunion_def]*, !dbg !9198
  %arrayidx3714 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3713, i64 0, i64 0, !dbg !9198
  %rt_rtx3715 = bitcast %union.rtunion_def* %arrayidx3714 to %struct.rtx_def**, !dbg !9198
  %1551 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3715, align 8, !dbg !9198
  %1552 = bitcast %struct.rtx_def* %1551 to i32*, !dbg !9198
  %bf.load3716 = load i32, i32* %1552, align 8, !dbg !9198
  %bf.clear3717 = and i32 %bf.load3716, 65535, !dbg !9198
  %cmp3718 = icmp eq i32 %bf.clear3717, 63, !dbg !9199
  br i1 %cmp3718, label %land.lhs.true3720, label %if.end3744, !dbg !9200

land.lhs.true3720:                                ; preds = %land.lhs.true3711
  %1553 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9201
  %u3721 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1553, i32 0, i32 1, !dbg !9201
  %fld3722 = bitcast %union.u* %u3721 to [1 x %union.rtunion_def]*, !dbg !9201
  %arrayidx3723 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3722, i64 0, i64 0, !dbg !9201
  %rt_rtx3724 = bitcast %union.rtunion_def* %arrayidx3723 to %struct.rtx_def**, !dbg !9201
  %1554 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3724, align 8, !dbg !9201
  %u3725 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1554, i32 0, i32 1, !dbg !9201
  %fld3726 = bitcast %union.u* %u3725 to [1 x %union.rtunion_def]*, !dbg !9201
  %arrayidx3727 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3726, i64 0, i64 0, !dbg !9201
  %rt_rtx3728 = bitcast %union.rtunion_def* %arrayidx3727 to %struct.rtx_def**, !dbg !9201
  %1555 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3728, align 8, !dbg !9201
  %1556 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9202
  %call3729 = call i32 @rtx_equal_p(%struct.rtx_def* %1555, %struct.rtx_def* %1556), !dbg !9203
  %tobool3730 = icmp ne i32 %call3729, 0, !dbg !9203
  br i1 %tobool3730, label %land.lhs.true3731, label %if.end3744, !dbg !9204

land.lhs.true3731:                                ; preds = %land.lhs.true3720
  %1557 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9205
  %call3732 = call i32 @side_effects_p(%struct.rtx_def* %1557), !dbg !9206
  %tobool3733 = icmp ne i32 %call3732, 0, !dbg !9206
  br i1 %tobool3733, label %if.end3744, label %if.then3734, !dbg !9207

if.then3734:                                      ; preds = %land.lhs.true3731
  %1558 = load i32, i32* %mode.addr, align 4, !dbg !9208
  %1559 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9209
  %u3735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1559, i32 0, i32 1, !dbg !9209
  %fld3736 = bitcast %union.u* %u3735 to [1 x %union.rtunion_def]*, !dbg !9209
  %arrayidx3737 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3736, i64 0, i64 0, !dbg !9209
  %rt_rtx3738 = bitcast %union.rtunion_def* %arrayidx3737 to %struct.rtx_def**, !dbg !9209
  %1560 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3738, align 8, !dbg !9209
  %u3739 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1560, i32 0, i32 1, !dbg !9209
  %fld3740 = bitcast %union.u* %u3739 to [1 x %union.rtunion_def]*, !dbg !9209
  %arrayidx3741 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3740, i64 0, i64 1, !dbg !9209
  %rt_rtx3742 = bitcast %union.rtunion_def* %arrayidx3741 to %struct.rtx_def**, !dbg !9209
  %1561 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3742, align 8, !dbg !9209
  %1562 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9210
  %call3743 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1558, %struct.rtx_def* %1561, %struct.rtx_def* %1562), !dbg !9211
  store %struct.rtx_def* %call3743, %struct.rtx_def** %retval, align 8, !dbg !9212
  br label %return, !dbg !9212

if.end3744:                                       ; preds = %land.lhs.true3731, %land.lhs.true3720, %land.lhs.true3711, %if.end3706
  %1563 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9213
  %1564 = bitcast %struct.rtx_def* %1563 to i32*, !dbg !9213
  %bf.load3745 = load i32, i32* %1564, align 8, !dbg !9213
  %bf.clear3746 = and i32 %bf.load3745, 65535, !dbg !9213
  %cmp3747 = icmp eq i32 %bf.clear3746, 64, !dbg !9215
  br i1 %cmp3747, label %land.lhs.true3749, label %if.end3782, !dbg !9216

land.lhs.true3749:                                ; preds = %if.end3744
  %1565 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9217
  %u3750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1565, i32 0, i32 1, !dbg !9217
  %fld3751 = bitcast %union.u* %u3750 to [1 x %union.rtunion_def]*, !dbg !9217
  %arrayidx3752 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3751, i64 0, i64 0, !dbg !9217
  %rt_rtx3753 = bitcast %union.rtunion_def* %arrayidx3752 to %struct.rtx_def**, !dbg !9217
  %1566 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3753, align 8, !dbg !9217
  %1567 = bitcast %struct.rtx_def* %1566 to i32*, !dbg !9217
  %bf.load3754 = load i32, i32* %1567, align 8, !dbg !9217
  %bf.clear3755 = and i32 %bf.load3754, 65535, !dbg !9217
  %cmp3756 = icmp eq i32 %bf.clear3755, 63, !dbg !9218
  br i1 %cmp3756, label %land.lhs.true3758, label %if.end3782, !dbg !9219

land.lhs.true3758:                                ; preds = %land.lhs.true3749
  %1568 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9220
  %u3759 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1568, i32 0, i32 1, !dbg !9220
  %fld3760 = bitcast %union.u* %u3759 to [1 x %union.rtunion_def]*, !dbg !9220
  %arrayidx3761 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3760, i64 0, i64 0, !dbg !9220
  %rt_rtx3762 = bitcast %union.rtunion_def* %arrayidx3761 to %struct.rtx_def**, !dbg !9220
  %1569 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3762, align 8, !dbg !9220
  %u3763 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1569, i32 0, i32 1, !dbg !9220
  %fld3764 = bitcast %union.u* %u3763 to [1 x %union.rtunion_def]*, !dbg !9220
  %arrayidx3765 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3764, i64 0, i64 1, !dbg !9220
  %rt_rtx3766 = bitcast %union.rtunion_def* %arrayidx3765 to %struct.rtx_def**, !dbg !9220
  %1570 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3766, align 8, !dbg !9220
  %1571 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9221
  %call3767 = call i32 @rtx_equal_p(%struct.rtx_def* %1570, %struct.rtx_def* %1571), !dbg !9222
  %tobool3768 = icmp ne i32 %call3767, 0, !dbg !9222
  br i1 %tobool3768, label %land.lhs.true3769, label %if.end3782, !dbg !9223

land.lhs.true3769:                                ; preds = %land.lhs.true3758
  %1572 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9224
  %call3770 = call i32 @side_effects_p(%struct.rtx_def* %1572), !dbg !9225
  %tobool3771 = icmp ne i32 %call3770, 0, !dbg !9225
  br i1 %tobool3771, label %if.end3782, label %if.then3772, !dbg !9226

if.then3772:                                      ; preds = %land.lhs.true3769
  %1573 = load i32, i32* %mode.addr, align 4, !dbg !9227
  %1574 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9228
  %u3773 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1574, i32 0, i32 1, !dbg !9228
  %fld3774 = bitcast %union.u* %u3773 to [1 x %union.rtunion_def]*, !dbg !9228
  %arrayidx3775 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3774, i64 0, i64 0, !dbg !9228
  %rt_rtx3776 = bitcast %union.rtunion_def* %arrayidx3775 to %struct.rtx_def**, !dbg !9228
  %1575 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3776, align 8, !dbg !9228
  %u3777 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1575, i32 0, i32 1, !dbg !9228
  %fld3778 = bitcast %union.u* %u3777 to [1 x %union.rtunion_def]*, !dbg !9228
  %arrayidx3779 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3778, i64 0, i64 0, !dbg !9228
  %rt_rtx3780 = bitcast %union.rtunion_def* %arrayidx3779 to %struct.rtx_def**, !dbg !9228
  %1576 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3780, align 8, !dbg !9228
  %1577 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9229
  %call3781 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1573, %struct.rtx_def* %1576, %struct.rtx_def* %1577), !dbg !9230
  store %struct.rtx_def* %call3781, %struct.rtx_def** %retval, align 8, !dbg !9231
  br label %return, !dbg !9231

if.end3782:                                       ; preds = %land.lhs.true3769, %land.lhs.true3758, %land.lhs.true3749, %if.end3744
  %1578 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9232
  %1579 = bitcast %struct.rtx_def* %1578 to i32*, !dbg !9232
  %bf.load3783 = load i32, i32* %1579, align 8, !dbg !9232
  %bf.clear3784 = and i32 %bf.load3783, 65535, !dbg !9232
  %cmp3785 = icmp eq i32 %bf.clear3784, 62, !dbg !9234
  br i1 %cmp3785, label %land.lhs.true3787, label %if.end3816, !dbg !9235

land.lhs.true3787:                                ; preds = %if.end3782
  %1580 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9236
  %u3788 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1580, i32 0, i32 1, !dbg !9236
  %fld3789 = bitcast %union.u* %u3788 to [1 x %union.rtunion_def]*, !dbg !9236
  %arrayidx3790 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3789, i64 0, i64 0, !dbg !9236
  %rt_rtx3791 = bitcast %union.rtunion_def* %arrayidx3790 to %struct.rtx_def**, !dbg !9236
  %1581 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3791, align 8, !dbg !9236
  %1582 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9237
  %call3792 = call i32 @rtx_equal_p(%struct.rtx_def* %1581, %struct.rtx_def* %1582), !dbg !9238
  %tobool3793 = icmp ne i32 %call3792, 0, !dbg !9238
  br i1 %tobool3793, label %land.lhs.true3801, label %lor.lhs.false3794, !dbg !9239

lor.lhs.false3794:                                ; preds = %land.lhs.true3787
  %1583 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9240
  %u3795 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1583, i32 0, i32 1, !dbg !9240
  %fld3796 = bitcast %union.u* %u3795 to [1 x %union.rtunion_def]*, !dbg !9240
  %arrayidx3797 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3796, i64 0, i64 1, !dbg !9240
  %rt_rtx3798 = bitcast %union.rtunion_def* %arrayidx3797 to %struct.rtx_def**, !dbg !9240
  %1584 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3798, align 8, !dbg !9240
  %1585 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9241
  %call3799 = call i32 @rtx_equal_p(%struct.rtx_def* %1584, %struct.rtx_def* %1585), !dbg !9242
  %tobool3800 = icmp ne i32 %call3799, 0, !dbg !9242
  br i1 %tobool3800, label %land.lhs.true3801, label %if.end3816, !dbg !9243

land.lhs.true3801:                                ; preds = %lor.lhs.false3794, %land.lhs.true3787
  %1586 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9244
  %u3802 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1586, i32 0, i32 1, !dbg !9244
  %fld3803 = bitcast %union.u* %u3802 to [1 x %union.rtunion_def]*, !dbg !9244
  %arrayidx3804 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3803, i64 0, i64 0, !dbg !9244
  %rt_rtx3805 = bitcast %union.rtunion_def* %arrayidx3804 to %struct.rtx_def**, !dbg !9244
  %1587 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3805, align 8, !dbg !9244
  %call3806 = call i32 @side_effects_p(%struct.rtx_def* %1587), !dbg !9245
  %tobool3807 = icmp ne i32 %call3806, 0, !dbg !9245
  br i1 %tobool3807, label %if.end3816, label %land.lhs.true3808, !dbg !9246

land.lhs.true3808:                                ; preds = %land.lhs.true3801
  %1588 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9247
  %u3809 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1588, i32 0, i32 1, !dbg !9247
  %fld3810 = bitcast %union.u* %u3809 to [1 x %union.rtunion_def]*, !dbg !9247
  %arrayidx3811 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3810, i64 0, i64 1, !dbg !9247
  %rt_rtx3812 = bitcast %union.rtunion_def* %arrayidx3811 to %struct.rtx_def**, !dbg !9247
  %1589 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3812, align 8, !dbg !9247
  %call3813 = call i32 @side_effects_p(%struct.rtx_def* %1589), !dbg !9248
  %tobool3814 = icmp ne i32 %call3813, 0, !dbg !9248
  br i1 %tobool3814, label %if.end3816, label %if.then3815, !dbg !9249

if.then3815:                                      ; preds = %land.lhs.true3808
  %1590 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9250
  store %struct.rtx_def* %1590, %struct.rtx_def** %retval, align 8, !dbg !9251
  br label %return, !dbg !9251

if.end3816:                                       ; preds = %land.lhs.true3808, %land.lhs.true3801, %lor.lhs.false3794, %if.end3782
  %1591 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9252
  %1592 = bitcast %struct.rtx_def* %1591 to i32*, !dbg !9252
  %bf.load3817 = load i32, i32* %1592, align 8, !dbg !9252
  %bf.clear3818 = and i32 %bf.load3817, 65535, !dbg !9252
  %cmp3819 = icmp eq i32 %bf.clear3818, 30, !dbg !9252
  br i1 %cmp3819, label %land.lhs.true3821, label %if.end3984, !dbg !9254

land.lhs.true3821:                                ; preds = %if.end3816
  %1593 = load i32, i32* %mode.addr, align 4, !dbg !9255
  %idxprom3822 = zext i32 %1593 to i64, !dbg !9255
  %arrayidx3823 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom3822, !dbg !9255
  %1594 = load i8, i8* %arrayidx3823, align 1, !dbg !9255
  %conv3824 = zext i8 %1594 to i16, !dbg !9255
  %conv3825 = zext i16 %conv3824 to i32, !dbg !9255
  %mul3826 = mul nsw i32 %conv3825, 8, !dbg !9255
  %conv3827 = trunc i32 %mul3826 to i16, !dbg !9255
  %conv3828 = zext i16 %conv3827 to i32, !dbg !9255
  %cmp3829 = icmp sle i32 %conv3828, 64, !dbg !9256
  br i1 %cmp3829, label %land.lhs.true3831, label %if.end3984, !dbg !9257

land.lhs.true3831:                                ; preds = %land.lhs.true3821
  %1595 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9258
  %u3832 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1595, i32 0, i32 1, !dbg !9258
  %hwint3833 = bitcast %union.u* %u3832 to [1 x i64]*, !dbg !9258
  %arrayidx3834 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3833, i64 0, i64 0, !dbg !9258
  %1596 = load i64, i64* %arrayidx3834, align 8, !dbg !9258
  %neg3835 = xor i64 %1596, -1, !dbg !9259
  %tobool3836 = icmp ne i64 %neg3835, 0, !dbg !9259
  br i1 %tobool3836, label %land.lhs.true3837, label %if.end3984, !dbg !9260

land.lhs.true3837:                                ; preds = %land.lhs.true3831
  %1597 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9261
  %u3838 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1597, i32 0, i32 1, !dbg !9261
  %hwint3839 = bitcast %union.u* %u3838 to [1 x i64]*, !dbg !9261
  %arrayidx3840 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3839, i64 0, i64 0, !dbg !9261
  %1598 = load i64, i64* %arrayidx3840, align 8, !dbg !9261
  %1599 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9262
  %u3841 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1599, i32 0, i32 1, !dbg !9262
  %hwint3842 = bitcast %union.u* %u3841 to [1 x i64]*, !dbg !9262
  %arrayidx3843 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3842, i64 0, i64 0, !dbg !9262
  %1600 = load i64, i64* %arrayidx3843, align 8, !dbg !9262
  %add3844 = add nsw i64 %1600, 1, !dbg !9263
  %and3845 = and i64 %1598, %add3844, !dbg !9264
  %cmp3846 = icmp eq i64 %and3845, 0, !dbg !9265
  br i1 %cmp3846, label %land.lhs.true3848, label %if.end3984, !dbg !9266

land.lhs.true3848:                                ; preds = %land.lhs.true3837
  %1601 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9267
  %1602 = bitcast %struct.rtx_def* %1601 to i32*, !dbg !9267
  %bf.load3849 = load i32, i32* %1602, align 8, !dbg !9267
  %bf.clear3850 = and i32 %bf.load3849, 65535, !dbg !9267
  %cmp3851 = icmp eq i32 %bf.clear3850, 49, !dbg !9268
  br i1 %cmp3851, label %if.then3858, label %lor.lhs.false3853, !dbg !9269

lor.lhs.false3853:                                ; preds = %land.lhs.true3848
  %1603 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9270
  %1604 = bitcast %struct.rtx_def* %1603 to i32*, !dbg !9270
  %bf.load3854 = load i32, i32* %1604, align 8, !dbg !9270
  %bf.clear3855 = and i32 %bf.load3854, 65535, !dbg !9270
  %cmp3856 = icmp eq i32 %bf.clear3855, 50, !dbg !9271
  br i1 %cmp3856, label %if.then3858, label %if.end3984, !dbg !9272

if.then3858:                                      ; preds = %lor.lhs.false3853, %land.lhs.true3848
  call void @llvm.dbg.declare(metadata [2 x %struct.rtx_def*]* %pmop, metadata !9273, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata i32* %which, metadata !9277, metadata !DIExpression()), !dbg !9278
  %1605 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9279
  %u3859 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1605, i32 0, i32 1, !dbg !9279
  %fld3860 = bitcast %union.u* %u3859 to [1 x %union.rtunion_def]*, !dbg !9279
  %arrayidx3861 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3860, i64 0, i64 0, !dbg !9279
  %rt_rtx3862 = bitcast %union.rtunion_def* %arrayidx3861 to %struct.rtx_def**, !dbg !9279
  %1606 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3862, align 8, !dbg !9279
  %arrayidx3863 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 0, !dbg !9280
  store %struct.rtx_def* %1606, %struct.rtx_def** %arrayidx3863, align 16, !dbg !9281
  %1607 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9282
  %u3864 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1607, i32 0, i32 1, !dbg !9282
  %fld3865 = bitcast %union.u* %u3864 to [1 x %union.rtunion_def]*, !dbg !9282
  %arrayidx3866 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3865, i64 0, i64 1, !dbg !9282
  %rt_rtx3867 = bitcast %union.rtunion_def* %arrayidx3866 to %struct.rtx_def**, !dbg !9282
  %1608 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3867, align 8, !dbg !9282
  %arrayidx3868 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 1, !dbg !9283
  store %struct.rtx_def* %1608, %struct.rtx_def** %arrayidx3868, align 8, !dbg !9284
  %arrayidx3869 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 1, !dbg !9285
  %1609 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3869, align 8, !dbg !9285
  %1610 = bitcast %struct.rtx_def* %1609 to i32*, !dbg !9285
  %bf.load3870 = load i32, i32* %1610, align 8, !dbg !9285
  %bf.clear3871 = and i32 %bf.load3870, 65535, !dbg !9285
  %cmp3872 = icmp eq i32 %bf.clear3871, 30, !dbg !9285
  br i1 %cmp3872, label %land.lhs.true3874, label %if.end3888, !dbg !9287

land.lhs.true3874:                                ; preds = %if.then3858
  %arrayidx3875 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 1, !dbg !9288
  %1611 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3875, align 8, !dbg !9288
  %u3876 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1611, i32 0, i32 1, !dbg !9288
  %hwint3877 = bitcast %union.u* %u3876 to [1 x i64]*, !dbg !9288
  %arrayidx3878 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3877, i64 0, i64 0, !dbg !9288
  %1612 = load i64, i64* %arrayidx3878, align 8, !dbg !9288
  %1613 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9289
  %u3879 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1613, i32 0, i32 1, !dbg !9289
  %hwint3880 = bitcast %union.u* %u3879 to [1 x i64]*, !dbg !9289
  %arrayidx3881 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3880, i64 0, i64 0, !dbg !9289
  %1614 = load i64, i64* %arrayidx3881, align 8, !dbg !9289
  %and3882 = and i64 %1612, %1614, !dbg !9290
  %cmp3883 = icmp eq i64 %and3882, 0, !dbg !9291
  br i1 %cmp3883, label %if.then3885, label %if.end3888, !dbg !9292

if.then3885:                                      ; preds = %land.lhs.true3874
  %1615 = load i32, i32* %mode.addr, align 4, !dbg !9293
  %arrayidx3886 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 0, !dbg !9294
  %1616 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3886, align 16, !dbg !9294
  %1617 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9295
  %call3887 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1615, %struct.rtx_def* %1616, %struct.rtx_def* %1617), !dbg !9296
  store %struct.rtx_def* %call3887, %struct.rtx_def** %retval, align 8, !dbg !9297
  br label %return, !dbg !9297

if.end3888:                                       ; preds = %land.lhs.true3874, %if.then3858
  store i32 0, i32* %which, align 4, !dbg !9298
  br label %for.cond, !dbg !9300

for.cond:                                         ; preds = %for.inc, %if.end3888
  %1618 = load i32, i32* %which, align 4, !dbg !9301
  %cmp3889 = icmp slt i32 %1618, 2, !dbg !9303
  br i1 %cmp3889, label %for.body, label %for.end, !dbg !9304

for.body:                                         ; preds = %for.cond
  %1619 = load i32, i32* %which, align 4, !dbg !9305
  %idxprom3891 = sext i32 %1619 to i64, !dbg !9307
  %arrayidx3892 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 %idxprom3891, !dbg !9307
  %1620 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3892, align 8, !dbg !9307
  store %struct.rtx_def* %1620, %struct.rtx_def** %tem, align 8, !dbg !9308
  %1621 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9309
  %1622 = bitcast %struct.rtx_def* %1621 to i32*, !dbg !9309
  %bf.load3893 = load i32, i32* %1622, align 8, !dbg !9309
  %bf.clear3894 = and i32 %bf.load3893, 65535, !dbg !9309
  switch i32 %bf.clear3894, label %sw.default [
    i32 61, label %sw.bb3895
    i32 62, label %sw.bb3929
    i32 63, label %sw.bb3929
  ], !dbg !9310

sw.bb3895:                                        ; preds = %for.body
  %1623 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9311
  %u3896 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1623, i32 0, i32 1, !dbg !9311
  %fld3897 = bitcast %union.u* %u3896 to [1 x %union.rtunion_def]*, !dbg !9311
  %arrayidx3898 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3897, i64 0, i64 1, !dbg !9311
  %rt_rtx3899 = bitcast %union.rtunion_def* %arrayidx3898 to %struct.rtx_def**, !dbg !9311
  %1624 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3899, align 8, !dbg !9311
  %1625 = bitcast %struct.rtx_def* %1624 to i32*, !dbg !9311
  %bf.load3900 = load i32, i32* %1625, align 8, !dbg !9311
  %bf.clear3901 = and i32 %bf.load3900, 65535, !dbg !9311
  %cmp3902 = icmp eq i32 %bf.clear3901, 30, !dbg !9311
  br i1 %cmp3902, label %land.lhs.true3904, label %if.end3928, !dbg !9314

land.lhs.true3904:                                ; preds = %sw.bb3895
  %1626 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9315
  %u3905 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1626, i32 0, i32 1, !dbg !9315
  %fld3906 = bitcast %union.u* %u3905 to [1 x %union.rtunion_def]*, !dbg !9315
  %arrayidx3907 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3906, i64 0, i64 1, !dbg !9315
  %rt_rtx3908 = bitcast %union.rtunion_def* %arrayidx3907 to %struct.rtx_def**, !dbg !9315
  %1627 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3908, align 8, !dbg !9315
  %u3909 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1627, i32 0, i32 1, !dbg !9315
  %hwint3910 = bitcast %union.u* %u3909 to [1 x i64]*, !dbg !9315
  %arrayidx3911 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3910, i64 0, i64 0, !dbg !9315
  %1628 = load i64, i64* %arrayidx3911, align 8, !dbg !9315
  %1629 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9316
  %u3912 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1629, i32 0, i32 1, !dbg !9316
  %hwint3913 = bitcast %union.u* %u3912 to [1 x i64]*, !dbg !9316
  %arrayidx3914 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3913, i64 0, i64 0, !dbg !9316
  %1630 = load i64, i64* %arrayidx3914, align 8, !dbg !9316
  %and3915 = and i64 %1628, %1630, !dbg !9317
  %1631 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9318
  %u3916 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1631, i32 0, i32 1, !dbg !9318
  %hwint3917 = bitcast %union.u* %u3916 to [1 x i64]*, !dbg !9318
  %arrayidx3918 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3917, i64 0, i64 0, !dbg !9318
  %1632 = load i64, i64* %arrayidx3918, align 8, !dbg !9318
  %cmp3919 = icmp eq i64 %and3915, %1632, !dbg !9319
  br i1 %cmp3919, label %if.then3921, label %if.end3928, !dbg !9320

if.then3921:                                      ; preds = %land.lhs.true3904
  %1633 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9321
  %u3922 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1633, i32 0, i32 1, !dbg !9321
  %fld3923 = bitcast %union.u* %u3922 to [1 x %union.rtunion_def]*, !dbg !9321
  %arrayidx3924 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3923, i64 0, i64 0, !dbg !9321
  %rt_rtx3925 = bitcast %union.rtunion_def* %arrayidx3924 to %struct.rtx_def**, !dbg !9321
  %1634 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3925, align 8, !dbg !9321
  %1635 = load i32, i32* %which, align 4, !dbg !9322
  %idxprom3926 = sext i32 %1635 to i64, !dbg !9323
  %arrayidx3927 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 %idxprom3926, !dbg !9323
  store %struct.rtx_def* %1634, %struct.rtx_def** %arrayidx3927, align 8, !dbg !9324
  br label %if.end3928, !dbg !9323

if.end3928:                                       ; preds = %if.then3921, %land.lhs.true3904, %sw.bb3895
  br label %sw.epilog, !dbg !9325

sw.bb3929:                                        ; preds = %for.body, %for.body
  %1636 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9326
  %u3930 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1636, i32 0, i32 1, !dbg !9326
  %fld3931 = bitcast %union.u* %u3930 to [1 x %union.rtunion_def]*, !dbg !9326
  %arrayidx3932 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3931, i64 0, i64 1, !dbg !9326
  %rt_rtx3933 = bitcast %union.rtunion_def* %arrayidx3932 to %struct.rtx_def**, !dbg !9326
  %1637 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3933, align 8, !dbg !9326
  %1638 = bitcast %struct.rtx_def* %1637 to i32*, !dbg !9326
  %bf.load3934 = load i32, i32* %1638, align 8, !dbg !9326
  %bf.clear3935 = and i32 %bf.load3934, 65535, !dbg !9326
  %cmp3936 = icmp eq i32 %bf.clear3935, 30, !dbg !9326
  br i1 %cmp3936, label %land.lhs.true3938, label %if.end3959, !dbg !9328

land.lhs.true3938:                                ; preds = %sw.bb3929
  %1639 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9329
  %u3939 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1639, i32 0, i32 1, !dbg !9329
  %fld3940 = bitcast %union.u* %u3939 to [1 x %union.rtunion_def]*, !dbg !9329
  %arrayidx3941 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3940, i64 0, i64 1, !dbg !9329
  %rt_rtx3942 = bitcast %union.rtunion_def* %arrayidx3941 to %struct.rtx_def**, !dbg !9329
  %1640 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3942, align 8, !dbg !9329
  %u3943 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1640, i32 0, i32 1, !dbg !9329
  %hwint3944 = bitcast %union.u* %u3943 to [1 x i64]*, !dbg !9329
  %arrayidx3945 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3944, i64 0, i64 0, !dbg !9329
  %1641 = load i64, i64* %arrayidx3945, align 8, !dbg !9329
  %1642 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9330
  %u3946 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1642, i32 0, i32 1, !dbg !9330
  %hwint3947 = bitcast %union.u* %u3946 to [1 x i64]*, !dbg !9330
  %arrayidx3948 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3947, i64 0, i64 0, !dbg !9330
  %1643 = load i64, i64* %arrayidx3948, align 8, !dbg !9330
  %and3949 = and i64 %1641, %1643, !dbg !9331
  %cmp3950 = icmp eq i64 %and3949, 0, !dbg !9332
  br i1 %cmp3950, label %if.then3952, label %if.end3959, !dbg !9333

if.then3952:                                      ; preds = %land.lhs.true3938
  %1644 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9334
  %u3953 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1644, i32 0, i32 1, !dbg !9334
  %fld3954 = bitcast %union.u* %u3953 to [1 x %union.rtunion_def]*, !dbg !9334
  %arrayidx3955 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3954, i64 0, i64 0, !dbg !9334
  %rt_rtx3956 = bitcast %union.rtunion_def* %arrayidx3955 to %struct.rtx_def**, !dbg !9334
  %1645 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3956, align 8, !dbg !9334
  %1646 = load i32, i32* %which, align 4, !dbg !9335
  %idxprom3957 = sext i32 %1646 to i64, !dbg !9336
  %arrayidx3958 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 %idxprom3957, !dbg !9336
  store %struct.rtx_def* %1645, %struct.rtx_def** %arrayidx3958, align 8, !dbg !9337
  br label %if.end3959, !dbg !9336

if.end3959:                                       ; preds = %if.then3952, %land.lhs.true3938, %sw.bb3929
  br label %sw.epilog, !dbg !9338

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !9339

sw.epilog:                                        ; preds = %sw.default, %if.end3959, %if.end3928
  br label %for.inc, !dbg !9340

for.inc:                                          ; preds = %sw.epilog
  %1647 = load i32, i32* %which, align 4, !dbg !9341
  %inc3960 = add nsw i32 %1647, 1, !dbg !9341
  store i32 %inc3960, i32* %which, align 4, !dbg !9341
  br label %for.cond, !dbg !9342, !llvm.loop !9343

for.end:                                          ; preds = %for.cond
  %arrayidx3961 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 0, !dbg !9345
  %1648 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3961, align 16, !dbg !9345
  %1649 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9347
  %u3962 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1649, i32 0, i32 1, !dbg !9347
  %fld3963 = bitcast %union.u* %u3962 to [1 x %union.rtunion_def]*, !dbg !9347
  %arrayidx3964 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3963, i64 0, i64 0, !dbg !9347
  %rt_rtx3965 = bitcast %union.rtunion_def* %arrayidx3964 to %struct.rtx_def**, !dbg !9347
  %1650 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3965, align 8, !dbg !9347
  %cmp3966 = icmp ne %struct.rtx_def* %1648, %1650, !dbg !9348
  br i1 %cmp3966, label %if.then3976, label %lor.lhs.false3968, !dbg !9349

lor.lhs.false3968:                                ; preds = %for.end
  %arrayidx3969 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 1, !dbg !9350
  %1651 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3969, align 8, !dbg !9350
  %1652 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9351
  %u3970 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1652, i32 0, i32 1, !dbg !9351
  %fld3971 = bitcast %union.u* %u3970 to [1 x %union.rtunion_def]*, !dbg !9351
  %arrayidx3972 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3971, i64 0, i64 1, !dbg !9351
  %rt_rtx3973 = bitcast %union.rtunion_def* %arrayidx3972 to %struct.rtx_def**, !dbg !9351
  %1653 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3973, align 8, !dbg !9351
  %cmp3974 = icmp ne %struct.rtx_def* %1651, %1653, !dbg !9352
  br i1 %cmp3974, label %if.then3976, label %if.end3983, !dbg !9353

if.then3976:                                      ; preds = %lor.lhs.false3968, %for.end
  %1654 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9354
  %1655 = bitcast %struct.rtx_def* %1654 to i32*, !dbg !9354
  %bf.load3977 = load i32, i32* %1655, align 8, !dbg !9354
  %bf.clear3978 = and i32 %bf.load3977, 65535, !dbg !9354
  %1656 = load i32, i32* %mode.addr, align 4, !dbg !9356
  %arrayidx3979 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 0, !dbg !9357
  %1657 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3979, align 16, !dbg !9357
  %arrayidx3980 = getelementptr inbounds [2 x %struct.rtx_def*], [2 x %struct.rtx_def*]* %pmop, i64 0, i64 1, !dbg !9358
  %1658 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx3980, align 8, !dbg !9358
  %call3981 = call %struct.rtx_def* @simplify_gen_binary(i32 %bf.clear3978, i32 %1656, %struct.rtx_def* %1657, %struct.rtx_def* %1658), !dbg !9359
  store %struct.rtx_def* %call3981, %struct.rtx_def** %tem, align 8, !dbg !9360
  %1659 = load i32, i32* %code.addr, align 4, !dbg !9361
  %1660 = load i32, i32* %mode.addr, align 4, !dbg !9362
  %1661 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9363
  %1662 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9364
  %call3982 = call %struct.rtx_def* @simplify_gen_binary(i32 %1659, i32 %1660, %struct.rtx_def* %1661, %struct.rtx_def* %1662), !dbg !9365
  store %struct.rtx_def* %call3982, %struct.rtx_def** %retval, align 8, !dbg !9366
  br label %return, !dbg !9366

if.end3983:                                       ; preds = %lor.lhs.false3968
  br label %if.end3984, !dbg !9367

if.end3984:                                       ; preds = %if.end3983, %lor.lhs.false3853, %land.lhs.true3837, %land.lhs.true3831, %land.lhs.true3821, %if.end3816
  %1663 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9368
  %1664 = bitcast %struct.rtx_def* %1663 to i32*, !dbg !9368
  %bf.load3985 = load i32, i32* %1664, align 8, !dbg !9368
  %bf.clear3986 = and i32 %bf.load3985, 65535, !dbg !9368
  %cmp3987 = icmp eq i32 %bf.clear3986, 62, !dbg !9370
  br i1 %cmp3987, label %land.lhs.true3989, label %if.end4015, !dbg !9371

land.lhs.true3989:                                ; preds = %if.end3984
  %1665 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9372
  %u3990 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1665, i32 0, i32 1, !dbg !9372
  %fld3991 = bitcast %union.u* %u3990 to [1 x %union.rtunion_def]*, !dbg !9372
  %arrayidx3992 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3991, i64 0, i64 0, !dbg !9372
  %rt_rtx3993 = bitcast %union.rtunion_def* %arrayidx3992 to %struct.rtx_def**, !dbg !9372
  %1666 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx3993, align 8, !dbg !9372
  %1667 = bitcast %struct.rtx_def* %1666 to i32*, !dbg !9372
  %bf.load3994 = load i32, i32* %1667, align 8, !dbg !9372
  %bf.clear3995 = and i32 %bf.load3994, 65535, !dbg !9372
  %cmp3996 = icmp eq i32 %bf.clear3995, 64, !dbg !9373
  br i1 %cmp3996, label %land.lhs.true3998, label %if.end4015, !dbg !9374

land.lhs.true3998:                                ; preds = %land.lhs.true3989
  %1668 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9375
  %1669 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9376
  %u3999 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1669, i32 0, i32 1, !dbg !9376
  %fld4000 = bitcast %union.u* %u3999 to [1 x %union.rtunion_def]*, !dbg !9376
  %arrayidx4001 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4000, i64 0, i64 0, !dbg !9376
  %rt_rtx4002 = bitcast %union.rtunion_def* %arrayidx4001 to %struct.rtx_def**, !dbg !9376
  %1670 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4002, align 8, !dbg !9376
  %u4003 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1670, i32 0, i32 1, !dbg !9376
  %fld4004 = bitcast %union.u* %u4003 to [1 x %union.rtunion_def]*, !dbg !9376
  %arrayidx4005 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4004, i64 0, i64 0, !dbg !9376
  %rt_rtx4006 = bitcast %union.rtunion_def* %arrayidx4005 to %struct.rtx_def**, !dbg !9376
  %1671 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4006, align 8, !dbg !9376
  %cmp4007 = icmp eq %struct.rtx_def* %1668, %1671, !dbg !9377
  br i1 %cmp4007, label %if.then4009, label %if.end4015, !dbg !9378

if.then4009:                                      ; preds = %land.lhs.true3998
  %1672 = load i32, i32* %mode.addr, align 4, !dbg !9379
  %1673 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9380
  %1674 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9381
  %u4010 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1674, i32 0, i32 1, !dbg !9381
  %fld4011 = bitcast %union.u* %u4010 to [1 x %union.rtunion_def]*, !dbg !9381
  %arrayidx4012 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4011, i64 0, i64 1, !dbg !9381
  %rt_rtx4013 = bitcast %union.rtunion_def* %arrayidx4012 to %struct.rtx_def**, !dbg !9381
  %1675 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4013, align 8, !dbg !9381
  %call4014 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1672, %struct.rtx_def* %1673, %struct.rtx_def* %1675), !dbg !9382
  store %struct.rtx_def* %call4014, %struct.rtx_def** %retval, align 8, !dbg !9383
  br label %return, !dbg !9383

if.end4015:                                       ; preds = %land.lhs.true3998, %land.lhs.true3989, %if.end3984
  %1676 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9384
  %1677 = bitcast %struct.rtx_def* %1676 to i32*, !dbg !9384
  %bf.load4016 = load i32, i32* %1677, align 8, !dbg !9384
  %bf.clear4017 = and i32 %bf.load4016, 65535, !dbg !9384
  %cmp4018 = icmp eq i32 %bf.clear4017, 62, !dbg !9386
  br i1 %cmp4018, label %land.lhs.true4020, label %if.end4046, !dbg !9387

land.lhs.true4020:                                ; preds = %if.end4015
  %1678 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9388
  %u4021 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1678, i32 0, i32 1, !dbg !9388
  %fld4022 = bitcast %union.u* %u4021 to [1 x %union.rtunion_def]*, !dbg !9388
  %arrayidx4023 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4022, i64 0, i64 0, !dbg !9388
  %rt_rtx4024 = bitcast %union.rtunion_def* %arrayidx4023 to %struct.rtx_def**, !dbg !9388
  %1679 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4024, align 8, !dbg !9388
  %1680 = bitcast %struct.rtx_def* %1679 to i32*, !dbg !9388
  %bf.load4025 = load i32, i32* %1680, align 8, !dbg !9388
  %bf.clear4026 = and i32 %bf.load4025, 65535, !dbg !9388
  %cmp4027 = icmp eq i32 %bf.clear4026, 64, !dbg !9389
  br i1 %cmp4027, label %land.lhs.true4029, label %if.end4046, !dbg !9390

land.lhs.true4029:                                ; preds = %land.lhs.true4020
  %1681 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9391
  %1682 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9392
  %u4030 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1682, i32 0, i32 1, !dbg !9392
  %fld4031 = bitcast %union.u* %u4030 to [1 x %union.rtunion_def]*, !dbg !9392
  %arrayidx4032 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4031, i64 0, i64 0, !dbg !9392
  %rt_rtx4033 = bitcast %union.rtunion_def* %arrayidx4032 to %struct.rtx_def**, !dbg !9392
  %1683 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4033, align 8, !dbg !9392
  %u4034 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1683, i32 0, i32 1, !dbg !9392
  %fld4035 = bitcast %union.u* %u4034 to [1 x %union.rtunion_def]*, !dbg !9392
  %arrayidx4036 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4035, i64 0, i64 0, !dbg !9392
  %rt_rtx4037 = bitcast %union.rtunion_def* %arrayidx4036 to %struct.rtx_def**, !dbg !9392
  %1684 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4037, align 8, !dbg !9392
  %cmp4038 = icmp eq %struct.rtx_def* %1681, %1684, !dbg !9393
  br i1 %cmp4038, label %if.then4040, label %if.end4046, !dbg !9394

if.then4040:                                      ; preds = %land.lhs.true4029
  %1685 = load i32, i32* %mode.addr, align 4, !dbg !9395
  %1686 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9396
  %1687 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9397
  %u4041 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1687, i32 0, i32 1, !dbg !9397
  %fld4042 = bitcast %union.u* %u4041 to [1 x %union.rtunion_def]*, !dbg !9397
  %arrayidx4043 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4042, i64 0, i64 1, !dbg !9397
  %rt_rtx4044 = bitcast %union.rtunion_def* %arrayidx4043 to %struct.rtx_def**, !dbg !9397
  %1688 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4044, align 8, !dbg !9397
  %call4045 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1685, %struct.rtx_def* %1686, %struct.rtx_def* %1688), !dbg !9398
  store %struct.rtx_def* %call4045, %struct.rtx_def** %retval, align 8, !dbg !9399
  br label %return, !dbg !9399

if.end4046:                                       ; preds = %land.lhs.true4029, %land.lhs.true4020, %if.end4015
  %1689 = load i32, i32* %code.addr, align 4, !dbg !9400
  %1690 = load i32, i32* %mode.addr, align 4, !dbg !9401
  %1691 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9402
  %1692 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9403
  %call4047 = call %struct.rtx_def* @simplify_associative_operation(i32 %1689, i32 %1690, %struct.rtx_def* %1691, %struct.rtx_def* %1692), !dbg !9404
  store %struct.rtx_def* %call4047, %struct.rtx_def** %tem, align 8, !dbg !9405
  %1693 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9406
  %tobool4048 = icmp ne %struct.rtx_def* %1693, null, !dbg !9406
  br i1 %tobool4048, label %if.then4049, label %if.end4050, !dbg !9408

if.then4049:                                      ; preds = %if.end4046
  %1694 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9409
  store %struct.rtx_def* %1694, %struct.rtx_def** %retval, align 8, !dbg !9410
  br label %return, !dbg !9410

if.end4050:                                       ; preds = %if.end4046
  br label %sw.epilog5879, !dbg !9411

sw.bb4051:                                        ; preds = %entry
  %1695 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9412
  %1696 = load i32, i32* %mode.addr, align 4, !dbg !9414
  %idxprom4052 = sext i32 %1696 to i64, !dbg !9414
  %arrayidx4053 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4052, !dbg !9414
  %1697 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4053, align 8, !dbg !9414
  %cmp4054 = icmp eq %struct.rtx_def* %1695, %1697, !dbg !9415
  br i1 %cmp4054, label %if.then4056, label %if.end4062, !dbg !9416

if.then4056:                                      ; preds = %sw.bb4051
  %1698 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9417
  %call4057 = call i32 @side_effects_p(%struct.rtx_def* %1698), !dbg !9420
  %tobool4058 = icmp ne i32 %call4057, 0, !dbg !9420
  br i1 %tobool4058, label %if.then4059, label %if.end4061, !dbg !9421

if.then4059:                                      ; preds = %if.then4056
  %1699 = load i32, i32* %mode.addr, align 4, !dbg !9422
  %1700 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9423
  %1701 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9424
  %call4060 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1699, %struct.rtx_def* %1700, %struct.rtx_def* %1701), !dbg !9425
  store %struct.rtx_def* %call4060, %struct.rtx_def** %retval, align 8, !dbg !9426
  br label %return, !dbg !9426

if.end4061:                                       ; preds = %if.then4056
  %1702 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9427
  store %struct.rtx_def* %1702, %struct.rtx_def** %retval, align 8, !dbg !9428
  br label %return, !dbg !9428

if.end4062:                                       ; preds = %sw.bb4051
  %1703 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9429
  %1704 = load i32, i32* %mode.addr, align 4, !dbg !9431
  %idxprom4063 = sext i32 %1704 to i64, !dbg !9431
  %arrayidx4064 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom4063, !dbg !9431
  %1705 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4064, align 8, !dbg !9431
  %cmp4065 = icmp eq %struct.rtx_def* %1703, %1705, !dbg !9432
  br i1 %cmp4065, label %if.then4067, label %if.end4069, !dbg !9433

if.then4067:                                      ; preds = %if.end4062
  %1706 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !9434
  %1707 = load i32, i32* %mode.addr, align 4, !dbg !9435
  %1708 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9436
  %call4068 = call %struct.rtx_def* %1706(i32 %1707, %struct.rtx_def* %1708), !dbg !9437
  store %struct.rtx_def* %call4068, %struct.rtx_def** %retval, align 8, !dbg !9438
  br label %return, !dbg !9438

if.end4069:                                       ; preds = %if.end4062
  %1709 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9439
  %1710 = bitcast %struct.rtx_def* %1709 to i32*, !dbg !9439
  %bf.load4070 = load i32, i32* %1710, align 8, !dbg !9439
  %bf.clear4071 = and i32 %bf.load4070, 65535, !dbg !9439
  %cmp4072 = icmp eq i32 %bf.clear4071, 30, !dbg !9439
  br i1 %cmp4072, label %land.lhs.true4074, label %if.end4085, !dbg !9441

land.lhs.true4074:                                ; preds = %if.end4069
  %1711 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9442
  %u4075 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1711, i32 0, i32 1, !dbg !9442
  %hwint4076 = bitcast %union.u* %u4075 to [1 x i64]*, !dbg !9442
  %arrayidx4077 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4076, i64 0, i64 0, !dbg !9442
  %1712 = load i64, i64* %arrayidx4077, align 8, !dbg !9442
  %call4078 = call i32 @exact_log2(i64 %1712), !dbg !9443
  %conv4079 = sext i32 %call4078 to i64, !dbg !9443
  store i64 %conv4079, i64* %val, align 8, !dbg !9444
  %cmp4080 = icmp sgt i64 %conv4079, 0, !dbg !9445
  br i1 %cmp4080, label %if.then4082, label %if.end4085, !dbg !9446

if.then4082:                                      ; preds = %land.lhs.true4074
  %1713 = load i32, i32* %mode.addr, align 4, !dbg !9447
  %1714 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9448
  %1715 = load i64, i64* %val, align 8, !dbg !9449
  %call4083 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %1715), !dbg !9449
  %call4084 = call %struct.rtx_def* @simplify_gen_binary(i32 68, i32 %1713, %struct.rtx_def* %1714, %struct.rtx_def* %call4083), !dbg !9450
  store %struct.rtx_def* %call4084, %struct.rtx_def** %retval, align 8, !dbg !9451
  br label %return, !dbg !9451

if.end4085:                                       ; preds = %land.lhs.true4074, %if.end4069
  br label %sw.epilog5879, !dbg !9452

sw.bb4086:                                        ; preds = %entry
  %1716 = load i32, i32* %mode.addr, align 4, !dbg !9453
  %idxprom4087 = zext i32 %1716 to i64, !dbg !9453
  %arrayidx4088 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4087, !dbg !9453
  %1717 = load i8, i8* %arrayidx4088, align 1, !dbg !9453
  %conv4089 = zext i8 %1717 to i32, !dbg !9453
  %cmp4090 = icmp eq i32 %conv4089, 8, !dbg !9453
  br i1 %cmp4090, label %if.then4098, label %lor.lhs.false4092, !dbg !9453

lor.lhs.false4092:                                ; preds = %sw.bb4086
  %1718 = load i32, i32* %mode.addr, align 4, !dbg !9453
  %idxprom4093 = zext i32 %1718 to i64, !dbg !9453
  %arrayidx4094 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4093, !dbg !9453
  %1719 = load i8, i8* %arrayidx4094, align 1, !dbg !9453
  %conv4095 = zext i8 %1719 to i32, !dbg !9453
  %cmp4096 = icmp eq i32 %conv4095, 9, !dbg !9453
  br i1 %cmp4096, label %if.then4098, label %if.else4539, !dbg !9455

if.then4098:                                      ; preds = %lor.lhs.false4092, %sw.bb4086
  %1720 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9456
  %1721 = load i32, i32* %mode.addr, align 4, !dbg !9459
  %idxprom4099 = sext i32 %1721 to i64, !dbg !9459
  %arrayidx4100 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4099, !dbg !9459
  %1722 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4100, align 8, !dbg !9459
  %cmp4101 = icmp eq %struct.rtx_def* %1720, %1722, !dbg !9460
  br i1 %cmp4101, label %land.lhs.true4103, label %if.end4303, !dbg !9461

land.lhs.true4103:                                ; preds = %if.then4098
  %1723 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4104 = zext i32 %1723 to i64, !dbg !9462
  %arrayidx4105 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4104, !dbg !9462
  %1724 = load i8, i8* %arrayidx4105, align 1, !dbg !9462
  %conv4106 = zext i8 %1724 to i32, !dbg !9462
  %cmp4107 = icmp eq i32 %conv4106, 8, !dbg !9462
  br i1 %cmp4107, label %land.lhs.true4127, label %lor.lhs.false4109, !dbg !9462

lor.lhs.false4109:                                ; preds = %land.lhs.true4103
  %1725 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4110 = zext i32 %1725 to i64, !dbg !9462
  %arrayidx4111 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4110, !dbg !9462
  %1726 = load i8, i8* %arrayidx4111, align 1, !dbg !9462
  %conv4112 = zext i8 %1726 to i32, !dbg !9462
  %cmp4113 = icmp eq i32 %conv4112, 9, !dbg !9462
  br i1 %cmp4113, label %land.lhs.true4127, label %lor.lhs.false4115, !dbg !9462

lor.lhs.false4115:                                ; preds = %lor.lhs.false4109
  %1727 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4116 = zext i32 %1727 to i64, !dbg !9462
  %arrayidx4117 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4116, !dbg !9462
  %1728 = load i8, i8* %arrayidx4117, align 1, !dbg !9462
  %conv4118 = zext i8 %1728 to i32, !dbg !9462
  %cmp4119 = icmp eq i32 %conv4118, 11, !dbg !9462
  br i1 %cmp4119, label %land.lhs.true4127, label %lor.lhs.false4121, !dbg !9462

lor.lhs.false4121:                                ; preds = %lor.lhs.false4115
  %1729 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4122 = zext i32 %1729 to i64, !dbg !9462
  %arrayidx4123 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4122, !dbg !9462
  %1730 = load i8, i8* %arrayidx4123, align 1, !dbg !9462
  %conv4124 = zext i8 %1730 to i32, !dbg !9462
  %cmp4125 = icmp eq i32 %conv4124, 17, !dbg !9462
  br i1 %cmp4125, label %land.lhs.true4127, label %land.lhs.true4201, !dbg !9462

land.lhs.true4127:                                ; preds = %lor.lhs.false4121, %lor.lhs.false4115, %lor.lhs.false4109, %land.lhs.true4103
  %1731 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4128 = zext i32 %1731 to i64, !dbg !9462
  %arrayidx4129 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4128, !dbg !9462
  %1732 = load i8, i8* %arrayidx4129, align 1, !dbg !9462
  %conv4130 = zext i8 %1732 to i32, !dbg !9462
  %cmp4131 = icmp eq i32 %conv4130, 8, !dbg !9462
  br i1 %cmp4131, label %cond.true4139, label %lor.lhs.false4133, !dbg !9462

lor.lhs.false4133:                                ; preds = %land.lhs.true4127
  %1733 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4134 = zext i32 %1733 to i64, !dbg !9462
  %arrayidx4135 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4134, !dbg !9462
  %1734 = load i8, i8* %arrayidx4135, align 1, !dbg !9462
  %conv4136 = zext i8 %1734 to i32, !dbg !9462
  %cmp4137 = icmp eq i32 %conv4136, 9, !dbg !9462
  br i1 %cmp4137, label %cond.true4139, label %cond.false4140, !dbg !9462

cond.true4139:                                    ; preds = %lor.lhs.false4133, %land.lhs.true4127
  %1735 = load i32, i32* %mode.addr, align 4, !dbg !9462
  br label %cond.end4144, !dbg !9462

cond.false4140:                                   ; preds = %lor.lhs.false4133
  %1736 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4141 = zext i32 %1736 to i64, !dbg !9462
  %arrayidx4142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4141, !dbg !9462
  %1737 = load i8, i8* %arrayidx4142, align 1, !dbg !9462
  %conv4143 = zext i8 %1737 to i32, !dbg !9462
  br label %cond.end4144, !dbg !9462

cond.end4144:                                     ; preds = %cond.false4140, %cond.true4139
  %cond4145 = phi i32 [ %1735, %cond.true4139 ], [ %conv4143, %cond.false4140 ], !dbg !9462
  %idxprom4146 = zext i32 %cond4145 to i64, !dbg !9462
  %arrayidx4147 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4146, !dbg !9462
  %1738 = load i8, i8* %arrayidx4147, align 1, !dbg !9462
  %conv4148 = zext i8 %1738 to i32, !dbg !9462
  %cmp4149 = icmp eq i32 %conv4148, 9, !dbg !9462
  br i1 %cmp4149, label %cond.true4151, label %cond.false4172, !dbg !9462

cond.true4151:                                    ; preds = %cond.end4144
  %1739 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4152 = zext i32 %1739 to i64, !dbg !9462
  %arrayidx4153 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4152, !dbg !9462
  %1740 = load i8, i8* %arrayidx4153, align 1, !dbg !9462
  %conv4154 = zext i8 %1740 to i32, !dbg !9462
  %cmp4155 = icmp eq i32 %conv4154, 8, !dbg !9462
  br i1 %cmp4155, label %cond.true4163, label %lor.lhs.false4157, !dbg !9462

lor.lhs.false4157:                                ; preds = %cond.true4151
  %1741 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4158 = zext i32 %1741 to i64, !dbg !9462
  %arrayidx4159 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4158, !dbg !9462
  %1742 = load i8, i8* %arrayidx4159, align 1, !dbg !9462
  %conv4160 = zext i8 %1742 to i32, !dbg !9462
  %cmp4161 = icmp eq i32 %conv4160, 9, !dbg !9462
  br i1 %cmp4161, label %cond.true4163, label %cond.false4164, !dbg !9462

cond.true4163:                                    ; preds = %lor.lhs.false4157, %cond.true4151
  %1743 = load i32, i32* %mode.addr, align 4, !dbg !9462
  br label %cond.end4168, !dbg !9462

cond.false4164:                                   ; preds = %lor.lhs.false4157
  %1744 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4165 = zext i32 %1744 to i64, !dbg !9462
  %arrayidx4166 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4165, !dbg !9462
  %1745 = load i8, i8* %arrayidx4166, align 1, !dbg !9462
  %conv4167 = zext i8 %1745 to i32, !dbg !9462
  br label %cond.end4168, !dbg !9462

cond.end4168:                                     ; preds = %cond.false4164, %cond.true4163
  %cond4169 = phi i32 [ %1743, %cond.true4163 ], [ %conv4167, %cond.false4164 ], !dbg !9462
  %sub4170 = sub i32 %cond4169, 42, !dbg !9462
  %add4171 = add i32 %sub4170, 4, !dbg !9462
  br label %cond.end4192, !dbg !9462

cond.false4172:                                   ; preds = %cond.end4144
  %1746 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4173 = zext i32 %1746 to i64, !dbg !9462
  %arrayidx4174 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4173, !dbg !9462
  %1747 = load i8, i8* %arrayidx4174, align 1, !dbg !9462
  %conv4175 = zext i8 %1747 to i32, !dbg !9462
  %cmp4176 = icmp eq i32 %conv4175, 8, !dbg !9462
  br i1 %cmp4176, label %cond.true4184, label %lor.lhs.false4178, !dbg !9462

lor.lhs.false4178:                                ; preds = %cond.false4172
  %1748 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4179 = zext i32 %1748 to i64, !dbg !9462
  %arrayidx4180 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4179, !dbg !9462
  %1749 = load i8, i8* %arrayidx4180, align 1, !dbg !9462
  %conv4181 = zext i8 %1749 to i32, !dbg !9462
  %cmp4182 = icmp eq i32 %conv4181, 9, !dbg !9462
  br i1 %cmp4182, label %cond.true4184, label %cond.false4185, !dbg !9462

cond.true4184:                                    ; preds = %lor.lhs.false4178, %cond.false4172
  %1750 = load i32, i32* %mode.addr, align 4, !dbg !9462
  br label %cond.end4189, !dbg !9462

cond.false4185:                                   ; preds = %lor.lhs.false4178
  %1751 = load i32, i32* %mode.addr, align 4, !dbg !9462
  %idxprom4186 = zext i32 %1751 to i64, !dbg !9462
  %arrayidx4187 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4186, !dbg !9462
  %1752 = load i8, i8* %arrayidx4187, align 1, !dbg !9462
  %conv4188 = zext i8 %1752 to i32, !dbg !9462
  br label %cond.end4189, !dbg !9462

cond.end4189:                                     ; preds = %cond.false4185, %cond.true4184
  %cond4190 = phi i32 [ %1750, %cond.true4184 ], [ %conv4188, %cond.false4185 ], !dbg !9462
  %sub4191 = sub i32 %cond4190, 38, !dbg !9462
  br label %cond.end4192, !dbg !9462

cond.end4192:                                     ; preds = %cond.end4189, %cond.end4168
  %cond4193 = phi i32 [ %add4171, %cond.end4168 ], [ %sub4191, %cond.end4189 ], !dbg !9462
  %idxprom4194 = zext i32 %cond4193 to i64, !dbg !9462
  %arrayidx4195 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom4194, !dbg !9462
  %1753 = load %struct.real_format*, %struct.real_format** %arrayidx4195, align 8, !dbg !9462
  %has_nans4196 = getelementptr inbounds %struct.real_format, %struct.real_format* %1753, i32 0, i32 11, !dbg !9462
  %1754 = load i8, i8* %has_nans4196, align 2, !dbg !9462
  %conv4197 = zext i8 %1754 to i32, !dbg !9462
  %tobool4198 = icmp ne i32 %conv4197, 0, !dbg !9462
  br i1 %tobool4198, label %land.lhs.true4199, label %land.lhs.true4201, !dbg !9462

land.lhs.true4199:                                ; preds = %cond.end4192
  %1755 = load i32, i32* @flag_finite_math_only, align 4, !dbg !9462
  %tobool4200 = icmp ne i32 %1755, 0, !dbg !9462
  br i1 %tobool4200, label %land.lhs.true4201, label %if.end4303, !dbg !9463

land.lhs.true4201:                                ; preds = %land.lhs.true4199, %cond.end4192, %lor.lhs.false4121
  %1756 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4202 = zext i32 %1756 to i64, !dbg !9464
  %arrayidx4203 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4202, !dbg !9464
  %1757 = load i8, i8* %arrayidx4203, align 1, !dbg !9464
  %conv4204 = zext i8 %1757 to i32, !dbg !9464
  %cmp4205 = icmp eq i32 %conv4204, 8, !dbg !9464
  br i1 %cmp4205, label %land.lhs.true4225, label %lor.lhs.false4207, !dbg !9464

lor.lhs.false4207:                                ; preds = %land.lhs.true4201
  %1758 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4208 = zext i32 %1758 to i64, !dbg !9464
  %arrayidx4209 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4208, !dbg !9464
  %1759 = load i8, i8* %arrayidx4209, align 1, !dbg !9464
  %conv4210 = zext i8 %1759 to i32, !dbg !9464
  %cmp4211 = icmp eq i32 %conv4210, 9, !dbg !9464
  br i1 %cmp4211, label %land.lhs.true4225, label %lor.lhs.false4213, !dbg !9464

lor.lhs.false4213:                                ; preds = %lor.lhs.false4207
  %1760 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4214 = zext i32 %1760 to i64, !dbg !9464
  %arrayidx4215 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4214, !dbg !9464
  %1761 = load i8, i8* %arrayidx4215, align 1, !dbg !9464
  %conv4216 = zext i8 %1761 to i32, !dbg !9464
  %cmp4217 = icmp eq i32 %conv4216, 11, !dbg !9464
  br i1 %cmp4217, label %land.lhs.true4225, label %lor.lhs.false4219, !dbg !9464

lor.lhs.false4219:                                ; preds = %lor.lhs.false4213
  %1762 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4220 = zext i32 %1762 to i64, !dbg !9464
  %arrayidx4221 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4220, !dbg !9464
  %1763 = load i8, i8* %arrayidx4221, align 1, !dbg !9464
  %conv4222 = zext i8 %1763 to i32, !dbg !9464
  %cmp4223 = icmp eq i32 %conv4222, 17, !dbg !9464
  br i1 %cmp4223, label %land.lhs.true4225, label %land.lhs.true4299, !dbg !9464

land.lhs.true4225:                                ; preds = %lor.lhs.false4219, %lor.lhs.false4213, %lor.lhs.false4207, %land.lhs.true4201
  %1764 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4226 = zext i32 %1764 to i64, !dbg !9464
  %arrayidx4227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4226, !dbg !9464
  %1765 = load i8, i8* %arrayidx4227, align 1, !dbg !9464
  %conv4228 = zext i8 %1765 to i32, !dbg !9464
  %cmp4229 = icmp eq i32 %conv4228, 8, !dbg !9464
  br i1 %cmp4229, label %cond.true4237, label %lor.lhs.false4231, !dbg !9464

lor.lhs.false4231:                                ; preds = %land.lhs.true4225
  %1766 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4232 = zext i32 %1766 to i64, !dbg !9464
  %arrayidx4233 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4232, !dbg !9464
  %1767 = load i8, i8* %arrayidx4233, align 1, !dbg !9464
  %conv4234 = zext i8 %1767 to i32, !dbg !9464
  %cmp4235 = icmp eq i32 %conv4234, 9, !dbg !9464
  br i1 %cmp4235, label %cond.true4237, label %cond.false4238, !dbg !9464

cond.true4237:                                    ; preds = %lor.lhs.false4231, %land.lhs.true4225
  %1768 = load i32, i32* %mode.addr, align 4, !dbg !9464
  br label %cond.end4242, !dbg !9464

cond.false4238:                                   ; preds = %lor.lhs.false4231
  %1769 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4239 = zext i32 %1769 to i64, !dbg !9464
  %arrayidx4240 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4239, !dbg !9464
  %1770 = load i8, i8* %arrayidx4240, align 1, !dbg !9464
  %conv4241 = zext i8 %1770 to i32, !dbg !9464
  br label %cond.end4242, !dbg !9464

cond.end4242:                                     ; preds = %cond.false4238, %cond.true4237
  %cond4243 = phi i32 [ %1768, %cond.true4237 ], [ %conv4241, %cond.false4238 ], !dbg !9464
  %idxprom4244 = zext i32 %cond4243 to i64, !dbg !9464
  %arrayidx4245 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4244, !dbg !9464
  %1771 = load i8, i8* %arrayidx4245, align 1, !dbg !9464
  %conv4246 = zext i8 %1771 to i32, !dbg !9464
  %cmp4247 = icmp eq i32 %conv4246, 9, !dbg !9464
  br i1 %cmp4247, label %cond.true4249, label %cond.false4270, !dbg !9464

cond.true4249:                                    ; preds = %cond.end4242
  %1772 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4250 = zext i32 %1772 to i64, !dbg !9464
  %arrayidx4251 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4250, !dbg !9464
  %1773 = load i8, i8* %arrayidx4251, align 1, !dbg !9464
  %conv4252 = zext i8 %1773 to i32, !dbg !9464
  %cmp4253 = icmp eq i32 %conv4252, 8, !dbg !9464
  br i1 %cmp4253, label %cond.true4261, label %lor.lhs.false4255, !dbg !9464

lor.lhs.false4255:                                ; preds = %cond.true4249
  %1774 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4256 = zext i32 %1774 to i64, !dbg !9464
  %arrayidx4257 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4256, !dbg !9464
  %1775 = load i8, i8* %arrayidx4257, align 1, !dbg !9464
  %conv4258 = zext i8 %1775 to i32, !dbg !9464
  %cmp4259 = icmp eq i32 %conv4258, 9, !dbg !9464
  br i1 %cmp4259, label %cond.true4261, label %cond.false4262, !dbg !9464

cond.true4261:                                    ; preds = %lor.lhs.false4255, %cond.true4249
  %1776 = load i32, i32* %mode.addr, align 4, !dbg !9464
  br label %cond.end4266, !dbg !9464

cond.false4262:                                   ; preds = %lor.lhs.false4255
  %1777 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4263 = zext i32 %1777 to i64, !dbg !9464
  %arrayidx4264 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4263, !dbg !9464
  %1778 = load i8, i8* %arrayidx4264, align 1, !dbg !9464
  %conv4265 = zext i8 %1778 to i32, !dbg !9464
  br label %cond.end4266, !dbg !9464

cond.end4266:                                     ; preds = %cond.false4262, %cond.true4261
  %cond4267 = phi i32 [ %1776, %cond.true4261 ], [ %conv4265, %cond.false4262 ], !dbg !9464
  %sub4268 = sub i32 %cond4267, 42, !dbg !9464
  %add4269 = add i32 %sub4268, 4, !dbg !9464
  br label %cond.end4290, !dbg !9464

cond.false4270:                                   ; preds = %cond.end4242
  %1779 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4271 = zext i32 %1779 to i64, !dbg !9464
  %arrayidx4272 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4271, !dbg !9464
  %1780 = load i8, i8* %arrayidx4272, align 1, !dbg !9464
  %conv4273 = zext i8 %1780 to i32, !dbg !9464
  %cmp4274 = icmp eq i32 %conv4273, 8, !dbg !9464
  br i1 %cmp4274, label %cond.true4282, label %lor.lhs.false4276, !dbg !9464

lor.lhs.false4276:                                ; preds = %cond.false4270
  %1781 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4277 = zext i32 %1781 to i64, !dbg !9464
  %arrayidx4278 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4277, !dbg !9464
  %1782 = load i8, i8* %arrayidx4278, align 1, !dbg !9464
  %conv4279 = zext i8 %1782 to i32, !dbg !9464
  %cmp4280 = icmp eq i32 %conv4279, 9, !dbg !9464
  br i1 %cmp4280, label %cond.true4282, label %cond.false4283, !dbg !9464

cond.true4282:                                    ; preds = %lor.lhs.false4276, %cond.false4270
  %1783 = load i32, i32* %mode.addr, align 4, !dbg !9464
  br label %cond.end4287, !dbg !9464

cond.false4283:                                   ; preds = %lor.lhs.false4276
  %1784 = load i32, i32* %mode.addr, align 4, !dbg !9464
  %idxprom4284 = zext i32 %1784 to i64, !dbg !9464
  %arrayidx4285 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4284, !dbg !9464
  %1785 = load i8, i8* %arrayidx4285, align 1, !dbg !9464
  %conv4286 = zext i8 %1785 to i32, !dbg !9464
  br label %cond.end4287, !dbg !9464

cond.end4287:                                     ; preds = %cond.false4283, %cond.true4282
  %cond4288 = phi i32 [ %1783, %cond.true4282 ], [ %conv4286, %cond.false4283 ], !dbg !9464
  %sub4289 = sub i32 %cond4288, 38, !dbg !9464
  br label %cond.end4290, !dbg !9464

cond.end4290:                                     ; preds = %cond.end4287, %cond.end4266
  %cond4291 = phi i32 [ %add4269, %cond.end4266 ], [ %sub4289, %cond.end4287 ], !dbg !9464
  %idxprom4292 = zext i32 %cond4291 to i64, !dbg !9464
  %arrayidx4293 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom4292, !dbg !9464
  %1786 = load %struct.real_format*, %struct.real_format** %arrayidx4293, align 8, !dbg !9464
  %has_signed_zero4294 = getelementptr inbounds %struct.real_format, %struct.real_format* %1786, i32 0, i32 14, !dbg !9464
  %1787 = load i8, i8* %has_signed_zero4294, align 1, !dbg !9464
  %conv4295 = zext i8 %1787 to i32, !dbg !9464
  %tobool4296 = icmp ne i32 %conv4295, 0, !dbg !9464
  br i1 %tobool4296, label %land.lhs.true4297, label %land.lhs.true4299, !dbg !9464

land.lhs.true4297:                                ; preds = %cond.end4290
  %1788 = load i32, i32* @flag_signed_zeros, align 4, !dbg !9464
  %tobool4298 = icmp ne i32 %1788, 0, !dbg !9464
  br i1 %tobool4298, label %if.end4303, label %land.lhs.true4299, !dbg !9465

land.lhs.true4299:                                ; preds = %land.lhs.true4297, %cond.end4290, %lor.lhs.false4219
  %1789 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9466
  %call4300 = call i32 @side_effects_p(%struct.rtx_def* %1789), !dbg !9467
  %tobool4301 = icmp ne i32 %call4300, 0, !dbg !9467
  br i1 %tobool4301, label %if.end4303, label %if.then4302, !dbg !9468

if.then4302:                                      ; preds = %land.lhs.true4299
  %1790 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9469
  store %struct.rtx_def* %1790, %struct.rtx_def** %retval, align 8, !dbg !9470
  br label %return, !dbg !9470

if.end4303:                                       ; preds = %land.lhs.true4299, %land.lhs.true4297, %land.lhs.true4199, %if.then4098
  %1791 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9471
  %1792 = load i32, i32* %mode.addr, align 4, !dbg !9473
  %idxprom4304 = sext i32 %1792 to i64, !dbg !9473
  %arrayidx4305 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom4304, !dbg !9473
  %1793 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4305, align 8, !dbg !9473
  %cmp4306 = icmp eq %struct.rtx_def* %1791, %1793, !dbg !9474
  br i1 %cmp4306, label %land.lhs.true4308, label %if.end4409, !dbg !9475

land.lhs.true4308:                                ; preds = %if.end4303
  %1794 = load i32, i32* @flag_signaling_nans, align 4, !dbg !9476
  %tobool4309 = icmp ne i32 %1794, 0, !dbg !9476
  br i1 %tobool4309, label %land.lhs.true4310, label %if.then4408, !dbg !9476

land.lhs.true4310:                                ; preds = %land.lhs.true4308
  %1795 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4311 = zext i32 %1795 to i64, !dbg !9476
  %arrayidx4312 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4311, !dbg !9476
  %1796 = load i8, i8* %arrayidx4312, align 1, !dbg !9476
  %conv4313 = zext i8 %1796 to i32, !dbg !9476
  %cmp4314 = icmp eq i32 %conv4313, 8, !dbg !9476
  br i1 %cmp4314, label %land.lhs.true4334, label %lor.lhs.false4316, !dbg !9476

lor.lhs.false4316:                                ; preds = %land.lhs.true4310
  %1797 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4317 = zext i32 %1797 to i64, !dbg !9476
  %arrayidx4318 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4317, !dbg !9476
  %1798 = load i8, i8* %arrayidx4318, align 1, !dbg !9476
  %conv4319 = zext i8 %1798 to i32, !dbg !9476
  %cmp4320 = icmp eq i32 %conv4319, 9, !dbg !9476
  br i1 %cmp4320, label %land.lhs.true4334, label %lor.lhs.false4322, !dbg !9476

lor.lhs.false4322:                                ; preds = %lor.lhs.false4316
  %1799 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4323 = zext i32 %1799 to i64, !dbg !9476
  %arrayidx4324 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4323, !dbg !9476
  %1800 = load i8, i8* %arrayidx4324, align 1, !dbg !9476
  %conv4325 = zext i8 %1800 to i32, !dbg !9476
  %cmp4326 = icmp eq i32 %conv4325, 11, !dbg !9476
  br i1 %cmp4326, label %land.lhs.true4334, label %lor.lhs.false4328, !dbg !9476

lor.lhs.false4328:                                ; preds = %lor.lhs.false4322
  %1801 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4329 = zext i32 %1801 to i64, !dbg !9476
  %arrayidx4330 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4329, !dbg !9476
  %1802 = load i8, i8* %arrayidx4330, align 1, !dbg !9476
  %conv4331 = zext i8 %1802 to i32, !dbg !9476
  %cmp4332 = icmp eq i32 %conv4331, 17, !dbg !9476
  br i1 %cmp4332, label %land.lhs.true4334, label %if.then4408, !dbg !9476

land.lhs.true4334:                                ; preds = %lor.lhs.false4328, %lor.lhs.false4322, %lor.lhs.false4316, %land.lhs.true4310
  %1803 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4335 = zext i32 %1803 to i64, !dbg !9476
  %arrayidx4336 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4335, !dbg !9476
  %1804 = load i8, i8* %arrayidx4336, align 1, !dbg !9476
  %conv4337 = zext i8 %1804 to i32, !dbg !9476
  %cmp4338 = icmp eq i32 %conv4337, 8, !dbg !9476
  br i1 %cmp4338, label %cond.true4346, label %lor.lhs.false4340, !dbg !9476

lor.lhs.false4340:                                ; preds = %land.lhs.true4334
  %1805 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4341 = zext i32 %1805 to i64, !dbg !9476
  %arrayidx4342 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4341, !dbg !9476
  %1806 = load i8, i8* %arrayidx4342, align 1, !dbg !9476
  %conv4343 = zext i8 %1806 to i32, !dbg !9476
  %cmp4344 = icmp eq i32 %conv4343, 9, !dbg !9476
  br i1 %cmp4344, label %cond.true4346, label %cond.false4347, !dbg !9476

cond.true4346:                                    ; preds = %lor.lhs.false4340, %land.lhs.true4334
  %1807 = load i32, i32* %mode.addr, align 4, !dbg !9476
  br label %cond.end4351, !dbg !9476

cond.false4347:                                   ; preds = %lor.lhs.false4340
  %1808 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4348 = zext i32 %1808 to i64, !dbg !9476
  %arrayidx4349 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4348, !dbg !9476
  %1809 = load i8, i8* %arrayidx4349, align 1, !dbg !9476
  %conv4350 = zext i8 %1809 to i32, !dbg !9476
  br label %cond.end4351, !dbg !9476

cond.end4351:                                     ; preds = %cond.false4347, %cond.true4346
  %cond4352 = phi i32 [ %1807, %cond.true4346 ], [ %conv4350, %cond.false4347 ], !dbg !9476
  %idxprom4353 = zext i32 %cond4352 to i64, !dbg !9476
  %arrayidx4354 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4353, !dbg !9476
  %1810 = load i8, i8* %arrayidx4354, align 1, !dbg !9476
  %conv4355 = zext i8 %1810 to i32, !dbg !9476
  %cmp4356 = icmp eq i32 %conv4355, 9, !dbg !9476
  br i1 %cmp4356, label %cond.true4358, label %cond.false4379, !dbg !9476

cond.true4358:                                    ; preds = %cond.end4351
  %1811 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4359 = zext i32 %1811 to i64, !dbg !9476
  %arrayidx4360 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4359, !dbg !9476
  %1812 = load i8, i8* %arrayidx4360, align 1, !dbg !9476
  %conv4361 = zext i8 %1812 to i32, !dbg !9476
  %cmp4362 = icmp eq i32 %conv4361, 8, !dbg !9476
  br i1 %cmp4362, label %cond.true4370, label %lor.lhs.false4364, !dbg !9476

lor.lhs.false4364:                                ; preds = %cond.true4358
  %1813 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4365 = zext i32 %1813 to i64, !dbg !9476
  %arrayidx4366 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4365, !dbg !9476
  %1814 = load i8, i8* %arrayidx4366, align 1, !dbg !9476
  %conv4367 = zext i8 %1814 to i32, !dbg !9476
  %cmp4368 = icmp eq i32 %conv4367, 9, !dbg !9476
  br i1 %cmp4368, label %cond.true4370, label %cond.false4371, !dbg !9476

cond.true4370:                                    ; preds = %lor.lhs.false4364, %cond.true4358
  %1815 = load i32, i32* %mode.addr, align 4, !dbg !9476
  br label %cond.end4375, !dbg !9476

cond.false4371:                                   ; preds = %lor.lhs.false4364
  %1816 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4372 = zext i32 %1816 to i64, !dbg !9476
  %arrayidx4373 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4372, !dbg !9476
  %1817 = load i8, i8* %arrayidx4373, align 1, !dbg !9476
  %conv4374 = zext i8 %1817 to i32, !dbg !9476
  br label %cond.end4375, !dbg !9476

cond.end4375:                                     ; preds = %cond.false4371, %cond.true4370
  %cond4376 = phi i32 [ %1815, %cond.true4370 ], [ %conv4374, %cond.false4371 ], !dbg !9476
  %sub4377 = sub i32 %cond4376, 42, !dbg !9476
  %add4378 = add i32 %sub4377, 4, !dbg !9476
  br label %cond.end4399, !dbg !9476

cond.false4379:                                   ; preds = %cond.end4351
  %1818 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4380 = zext i32 %1818 to i64, !dbg !9476
  %arrayidx4381 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4380, !dbg !9476
  %1819 = load i8, i8* %arrayidx4381, align 1, !dbg !9476
  %conv4382 = zext i8 %1819 to i32, !dbg !9476
  %cmp4383 = icmp eq i32 %conv4382, 8, !dbg !9476
  br i1 %cmp4383, label %cond.true4391, label %lor.lhs.false4385, !dbg !9476

lor.lhs.false4385:                                ; preds = %cond.false4379
  %1820 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4386 = zext i32 %1820 to i64, !dbg !9476
  %arrayidx4387 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4386, !dbg !9476
  %1821 = load i8, i8* %arrayidx4387, align 1, !dbg !9476
  %conv4388 = zext i8 %1821 to i32, !dbg !9476
  %cmp4389 = icmp eq i32 %conv4388, 9, !dbg !9476
  br i1 %cmp4389, label %cond.true4391, label %cond.false4392, !dbg !9476

cond.true4391:                                    ; preds = %lor.lhs.false4385, %cond.false4379
  %1822 = load i32, i32* %mode.addr, align 4, !dbg !9476
  br label %cond.end4396, !dbg !9476

cond.false4392:                                   ; preds = %lor.lhs.false4385
  %1823 = load i32, i32* %mode.addr, align 4, !dbg !9476
  %idxprom4393 = zext i32 %1823 to i64, !dbg !9476
  %arrayidx4394 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4393, !dbg !9476
  %1824 = load i8, i8* %arrayidx4394, align 1, !dbg !9476
  %conv4395 = zext i8 %1824 to i32, !dbg !9476
  br label %cond.end4396, !dbg !9476

cond.end4396:                                     ; preds = %cond.false4392, %cond.true4391
  %cond4397 = phi i32 [ %1822, %cond.true4391 ], [ %conv4395, %cond.false4392 ], !dbg !9476
  %sub4398 = sub i32 %cond4397, 38, !dbg !9476
  br label %cond.end4399, !dbg !9476

cond.end4399:                                     ; preds = %cond.end4396, %cond.end4375
  %cond4400 = phi i32 [ %add4378, %cond.end4375 ], [ %sub4398, %cond.end4396 ], !dbg !9476
  %idxprom4401 = zext i32 %cond4400 to i64, !dbg !9476
  %arrayidx4402 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom4401, !dbg !9476
  %1825 = load %struct.real_format*, %struct.real_format** %arrayidx4402, align 8, !dbg !9476
  %has_nans4403 = getelementptr inbounds %struct.real_format, %struct.real_format* %1825, i32 0, i32 11, !dbg !9476
  %1826 = load i8, i8* %has_nans4403, align 2, !dbg !9476
  %conv4404 = zext i8 %1826 to i32, !dbg !9476
  %tobool4405 = icmp ne i32 %conv4404, 0, !dbg !9476
  br i1 %tobool4405, label %land.lhs.true4406, label %if.then4408, !dbg !9476

land.lhs.true4406:                                ; preds = %cond.end4399
  %1827 = load i32, i32* @flag_finite_math_only, align 4, !dbg !9476
  %tobool4407 = icmp ne i32 %1827, 0, !dbg !9476
  br i1 %tobool4407, label %if.then4408, label %if.end4409, !dbg !9477

if.then4408:                                      ; preds = %land.lhs.true4406, %cond.end4399, %lor.lhs.false4328, %land.lhs.true4308
  %1828 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9478
  store %struct.rtx_def* %1828, %struct.rtx_def** %retval, align 8, !dbg !9479
  br label %return, !dbg !9479

if.end4409:                                       ; preds = %land.lhs.true4406, %if.end4303
  %1829 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9480
  %1830 = bitcast %struct.rtx_def* %1829 to i32*, !dbg !9480
  %bf.load4410 = load i32, i32* %1830, align 8, !dbg !9480
  %bf.clear4411 = and i32 %bf.load4410, 65535, !dbg !9480
  %cmp4412 = icmp eq i32 %bf.clear4411, 32, !dbg !9482
  br i1 %cmp4412, label %land.lhs.true4414, label %if.end4538, !dbg !9483

land.lhs.true4414:                                ; preds = %if.end4409
  %1831 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9484
  %1832 = load i32, i32* %mode.addr, align 4, !dbg !9485
  %idxprom4415 = sext i32 %1832 to i64, !dbg !9485
  %arrayidx4416 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4415, !dbg !9485
  %1833 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4416, align 8, !dbg !9485
  %cmp4417 = icmp ne %struct.rtx_def* %1831, %1833, !dbg !9486
  br i1 %cmp4417, label %if.then4419, label %if.end4538, !dbg !9487

if.then4419:                                      ; preds = %land.lhs.true4414
  call void @llvm.dbg.declare(metadata %struct.real_value* %d4420, metadata !9488, metadata !DIExpression()), !dbg !9490
  %1834 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9491
  %u4421 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1834, i32 0, i32 1, !dbg !9491
  %rv4422 = bitcast %union.u* %u4421 to %struct.real_value*, !dbg !9491
  %1835 = bitcast %struct.real_value* %d4420 to i8*, !dbg !9491
  %1836 = bitcast %struct.real_value* %rv4422 to i8*, !dbg !9491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1835, i8* align 8 %1836, i64 32, i1 false), !dbg !9491
  %call4423 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %d4420, %struct.real_value* @dconstm1), !dbg !9492
  %conv4424 = zext i8 %call4423 to i32, !dbg !9492
  %tobool4425 = icmp ne i32 %conv4424, 0, !dbg !9492
  br i1 %tobool4425, label %land.lhs.true4426, label %if.end4528, !dbg !9494

land.lhs.true4426:                                ; preds = %if.then4419
  %1837 = load i32, i32* @flag_signaling_nans, align 4, !dbg !9495
  %tobool4427 = icmp ne i32 %1837, 0, !dbg !9495
  br i1 %tobool4427, label %land.lhs.true4428, label %if.then4526, !dbg !9495

land.lhs.true4428:                                ; preds = %land.lhs.true4426
  %1838 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4429 = zext i32 %1838 to i64, !dbg !9495
  %arrayidx4430 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4429, !dbg !9495
  %1839 = load i8, i8* %arrayidx4430, align 1, !dbg !9495
  %conv4431 = zext i8 %1839 to i32, !dbg !9495
  %cmp4432 = icmp eq i32 %conv4431, 8, !dbg !9495
  br i1 %cmp4432, label %land.lhs.true4452, label %lor.lhs.false4434, !dbg !9495

lor.lhs.false4434:                                ; preds = %land.lhs.true4428
  %1840 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4435 = zext i32 %1840 to i64, !dbg !9495
  %arrayidx4436 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4435, !dbg !9495
  %1841 = load i8, i8* %arrayidx4436, align 1, !dbg !9495
  %conv4437 = zext i8 %1841 to i32, !dbg !9495
  %cmp4438 = icmp eq i32 %conv4437, 9, !dbg !9495
  br i1 %cmp4438, label %land.lhs.true4452, label %lor.lhs.false4440, !dbg !9495

lor.lhs.false4440:                                ; preds = %lor.lhs.false4434
  %1842 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4441 = zext i32 %1842 to i64, !dbg !9495
  %arrayidx4442 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4441, !dbg !9495
  %1843 = load i8, i8* %arrayidx4442, align 1, !dbg !9495
  %conv4443 = zext i8 %1843 to i32, !dbg !9495
  %cmp4444 = icmp eq i32 %conv4443, 11, !dbg !9495
  br i1 %cmp4444, label %land.lhs.true4452, label %lor.lhs.false4446, !dbg !9495

lor.lhs.false4446:                                ; preds = %lor.lhs.false4440
  %1844 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4447 = zext i32 %1844 to i64, !dbg !9495
  %arrayidx4448 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4447, !dbg !9495
  %1845 = load i8, i8* %arrayidx4448, align 1, !dbg !9495
  %conv4449 = zext i8 %1845 to i32, !dbg !9495
  %cmp4450 = icmp eq i32 %conv4449, 17, !dbg !9495
  br i1 %cmp4450, label %land.lhs.true4452, label %if.then4526, !dbg !9495

land.lhs.true4452:                                ; preds = %lor.lhs.false4446, %lor.lhs.false4440, %lor.lhs.false4434, %land.lhs.true4428
  %1846 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4453 = zext i32 %1846 to i64, !dbg !9495
  %arrayidx4454 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4453, !dbg !9495
  %1847 = load i8, i8* %arrayidx4454, align 1, !dbg !9495
  %conv4455 = zext i8 %1847 to i32, !dbg !9495
  %cmp4456 = icmp eq i32 %conv4455, 8, !dbg !9495
  br i1 %cmp4456, label %cond.true4464, label %lor.lhs.false4458, !dbg !9495

lor.lhs.false4458:                                ; preds = %land.lhs.true4452
  %1848 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4459 = zext i32 %1848 to i64, !dbg !9495
  %arrayidx4460 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4459, !dbg !9495
  %1849 = load i8, i8* %arrayidx4460, align 1, !dbg !9495
  %conv4461 = zext i8 %1849 to i32, !dbg !9495
  %cmp4462 = icmp eq i32 %conv4461, 9, !dbg !9495
  br i1 %cmp4462, label %cond.true4464, label %cond.false4465, !dbg !9495

cond.true4464:                                    ; preds = %lor.lhs.false4458, %land.lhs.true4452
  %1850 = load i32, i32* %mode.addr, align 4, !dbg !9495
  br label %cond.end4469, !dbg !9495

cond.false4465:                                   ; preds = %lor.lhs.false4458
  %1851 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4466 = zext i32 %1851 to i64, !dbg !9495
  %arrayidx4467 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4466, !dbg !9495
  %1852 = load i8, i8* %arrayidx4467, align 1, !dbg !9495
  %conv4468 = zext i8 %1852 to i32, !dbg !9495
  br label %cond.end4469, !dbg !9495

cond.end4469:                                     ; preds = %cond.false4465, %cond.true4464
  %cond4470 = phi i32 [ %1850, %cond.true4464 ], [ %conv4468, %cond.false4465 ], !dbg !9495
  %idxprom4471 = zext i32 %cond4470 to i64, !dbg !9495
  %arrayidx4472 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4471, !dbg !9495
  %1853 = load i8, i8* %arrayidx4472, align 1, !dbg !9495
  %conv4473 = zext i8 %1853 to i32, !dbg !9495
  %cmp4474 = icmp eq i32 %conv4473, 9, !dbg !9495
  br i1 %cmp4474, label %cond.true4476, label %cond.false4497, !dbg !9495

cond.true4476:                                    ; preds = %cond.end4469
  %1854 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4477 = zext i32 %1854 to i64, !dbg !9495
  %arrayidx4478 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4477, !dbg !9495
  %1855 = load i8, i8* %arrayidx4478, align 1, !dbg !9495
  %conv4479 = zext i8 %1855 to i32, !dbg !9495
  %cmp4480 = icmp eq i32 %conv4479, 8, !dbg !9495
  br i1 %cmp4480, label %cond.true4488, label %lor.lhs.false4482, !dbg !9495

lor.lhs.false4482:                                ; preds = %cond.true4476
  %1856 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4483 = zext i32 %1856 to i64, !dbg !9495
  %arrayidx4484 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4483, !dbg !9495
  %1857 = load i8, i8* %arrayidx4484, align 1, !dbg !9495
  %conv4485 = zext i8 %1857 to i32, !dbg !9495
  %cmp4486 = icmp eq i32 %conv4485, 9, !dbg !9495
  br i1 %cmp4486, label %cond.true4488, label %cond.false4489, !dbg !9495

cond.true4488:                                    ; preds = %lor.lhs.false4482, %cond.true4476
  %1858 = load i32, i32* %mode.addr, align 4, !dbg !9495
  br label %cond.end4493, !dbg !9495

cond.false4489:                                   ; preds = %lor.lhs.false4482
  %1859 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4490 = zext i32 %1859 to i64, !dbg !9495
  %arrayidx4491 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4490, !dbg !9495
  %1860 = load i8, i8* %arrayidx4491, align 1, !dbg !9495
  %conv4492 = zext i8 %1860 to i32, !dbg !9495
  br label %cond.end4493, !dbg !9495

cond.end4493:                                     ; preds = %cond.false4489, %cond.true4488
  %cond4494 = phi i32 [ %1858, %cond.true4488 ], [ %conv4492, %cond.false4489 ], !dbg !9495
  %sub4495 = sub i32 %cond4494, 42, !dbg !9495
  %add4496 = add i32 %sub4495, 4, !dbg !9495
  br label %cond.end4517, !dbg !9495

cond.false4497:                                   ; preds = %cond.end4469
  %1861 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4498 = zext i32 %1861 to i64, !dbg !9495
  %arrayidx4499 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4498, !dbg !9495
  %1862 = load i8, i8* %arrayidx4499, align 1, !dbg !9495
  %conv4500 = zext i8 %1862 to i32, !dbg !9495
  %cmp4501 = icmp eq i32 %conv4500, 8, !dbg !9495
  br i1 %cmp4501, label %cond.true4509, label %lor.lhs.false4503, !dbg !9495

lor.lhs.false4503:                                ; preds = %cond.false4497
  %1863 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4504 = zext i32 %1863 to i64, !dbg !9495
  %arrayidx4505 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4504, !dbg !9495
  %1864 = load i8, i8* %arrayidx4505, align 1, !dbg !9495
  %conv4506 = zext i8 %1864 to i32, !dbg !9495
  %cmp4507 = icmp eq i32 %conv4506, 9, !dbg !9495
  br i1 %cmp4507, label %cond.true4509, label %cond.false4510, !dbg !9495

cond.true4509:                                    ; preds = %lor.lhs.false4503, %cond.false4497
  %1865 = load i32, i32* %mode.addr, align 4, !dbg !9495
  br label %cond.end4514, !dbg !9495

cond.false4510:                                   ; preds = %lor.lhs.false4503
  %1866 = load i32, i32* %mode.addr, align 4, !dbg !9495
  %idxprom4511 = zext i32 %1866 to i64, !dbg !9495
  %arrayidx4512 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4511, !dbg !9495
  %1867 = load i8, i8* %arrayidx4512, align 1, !dbg !9495
  %conv4513 = zext i8 %1867 to i32, !dbg !9495
  br label %cond.end4514, !dbg !9495

cond.end4514:                                     ; preds = %cond.false4510, %cond.true4509
  %cond4515 = phi i32 [ %1865, %cond.true4509 ], [ %conv4513, %cond.false4510 ], !dbg !9495
  %sub4516 = sub i32 %cond4515, 38, !dbg !9495
  br label %cond.end4517, !dbg !9495

cond.end4517:                                     ; preds = %cond.end4514, %cond.end4493
  %cond4518 = phi i32 [ %add4496, %cond.end4493 ], [ %sub4516, %cond.end4514 ], !dbg !9495
  %idxprom4519 = zext i32 %cond4518 to i64, !dbg !9495
  %arrayidx4520 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom4519, !dbg !9495
  %1868 = load %struct.real_format*, %struct.real_format** %arrayidx4520, align 8, !dbg !9495
  %has_nans4521 = getelementptr inbounds %struct.real_format, %struct.real_format* %1868, i32 0, i32 11, !dbg !9495
  %1869 = load i8, i8* %has_nans4521, align 2, !dbg !9495
  %conv4522 = zext i8 %1869 to i32, !dbg !9495
  %tobool4523 = icmp ne i32 %conv4522, 0, !dbg !9495
  br i1 %tobool4523, label %land.lhs.true4524, label %if.then4526, !dbg !9495

land.lhs.true4524:                                ; preds = %cond.end4517
  %1870 = load i32, i32* @flag_finite_math_only, align 4, !dbg !9495
  %tobool4525 = icmp ne i32 %1870, 0, !dbg !9495
  br i1 %tobool4525, label %if.then4526, label %if.end4528, !dbg !9496

if.then4526:                                      ; preds = %land.lhs.true4524, %cond.end4517, %lor.lhs.false4446, %land.lhs.true4426
  %1871 = load i32, i32* %mode.addr, align 4, !dbg !9497
  %1872 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9498
  %1873 = load i32, i32* %mode.addr, align 4, !dbg !9499
  %call4527 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %1871, %struct.rtx_def* %1872, i32 %1873), !dbg !9500
  store %struct.rtx_def* %call4527, %struct.rtx_def** %retval, align 8, !dbg !9501
  br label %return, !dbg !9501

if.end4528:                                       ; preds = %land.lhs.true4524, %if.then4419
  %1874 = load i32, i32* @flag_reciprocal_math, align 4, !dbg !9502
  %tobool4529 = icmp ne i32 %1874, 0, !dbg !9502
  br i1 %tobool4529, label %land.lhs.true4530, label %if.end4537, !dbg !9504

land.lhs.true4530:                                ; preds = %if.end4528
  %call4531 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %d4420, %struct.real_value* @dconst0), !dbg !9505
  %tobool4532 = icmp ne i8 %call4531, 0, !dbg !9505
  br i1 %tobool4532, label %if.end4537, label %if.then4533, !dbg !9506

if.then4533:                                      ; preds = %land.lhs.true4530
  %call4534 = call zeroext i8 @real_arithmetic(%struct.real_value* %d4420, i32 75, %struct.real_value* @dconst1, %struct.real_value* %d4420), !dbg !9507
  %1875 = load i32, i32* %mode.addr, align 4, !dbg !9509
  %call4535 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %d4420, i32 %1875), !dbg !9509
  store %struct.rtx_def* %call4535, %struct.rtx_def** %tem, align 8, !dbg !9510
  %1876 = load i32, i32* %mode.addr, align 4, !dbg !9511
  %1877 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9512
  %1878 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9513
  %call4536 = call %struct.rtx_def* @simplify_gen_binary(i32 52, i32 %1876, %struct.rtx_def* %1877, %struct.rtx_def* %1878), !dbg !9514
  store %struct.rtx_def* %call4536, %struct.rtx_def** %retval, align 8, !dbg !9515
  br label %return, !dbg !9515

if.end4537:                                       ; preds = %land.lhs.true4530, %if.end4528
  br label %if.end4538, !dbg !9516

if.end4538:                                       ; preds = %if.end4537, %land.lhs.true4414, %if.end4409
  br label %if.end4565, !dbg !9517

if.else4539:                                      ; preds = %lor.lhs.false4092
  %1879 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9518
  %1880 = load i32, i32* %mode.addr, align 4, !dbg !9521
  %idxprom4540 = sext i32 %1880 to i64, !dbg !9521
  %arrayidx4541 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4540, !dbg !9521
  %1881 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4541, align 8, !dbg !9521
  %cmp4542 = icmp eq %struct.rtx_def* %1879, %1881, !dbg !9522
  br i1 %cmp4542, label %if.then4544, label %if.end4550, !dbg !9523

if.then4544:                                      ; preds = %if.else4539
  %1882 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9524
  %call4545 = call i32 @side_effects_p(%struct.rtx_def* %1882), !dbg !9527
  %tobool4546 = icmp ne i32 %call4545, 0, !dbg !9527
  br i1 %tobool4546, label %if.then4547, label %if.end4549, !dbg !9528

if.then4547:                                      ; preds = %if.then4544
  %1883 = load i32, i32* %mode.addr, align 4, !dbg !9529
  %1884 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9530
  %1885 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9531
  %call4548 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1883, %struct.rtx_def* %1884, %struct.rtx_def* %1885), !dbg !9532
  store %struct.rtx_def* %call4548, %struct.rtx_def** %retval, align 8, !dbg !9533
  br label %return, !dbg !9533

if.end4549:                                       ; preds = %if.then4544
  %1886 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9534
  store %struct.rtx_def* %1886, %struct.rtx_def** %retval, align 8, !dbg !9535
  br label %return, !dbg !9535

if.end4550:                                       ; preds = %if.else4539
  %1887 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9536
  %1888 = load i32, i32* %mode.addr, align 4, !dbg !9538
  %idxprom4551 = sext i32 %1888 to i64, !dbg !9538
  %arrayidx4552 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom4551, !dbg !9538
  %1889 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4552, align 8, !dbg !9538
  %cmp4553 = icmp eq %struct.rtx_def* %1887, %1889, !dbg !9539
  br i1 %cmp4553, label %if.then4555, label %if.end4557, !dbg !9540

if.then4555:                                      ; preds = %if.end4550
  %1890 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !9541
  %1891 = load i32, i32* %mode.addr, align 4, !dbg !9542
  %1892 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9543
  %call4556 = call %struct.rtx_def* %1890(i32 %1891, %struct.rtx_def* %1892), !dbg !9544
  store %struct.rtx_def* %call4556, %struct.rtx_def** %retval, align 8, !dbg !9545
  br label %return, !dbg !9545

if.end4557:                                       ; preds = %if.end4550
  %1893 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9546
  %1894 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !9548
  %cmp4558 = icmp eq %struct.rtx_def* %1893, %1894, !dbg !9549
  br i1 %cmp4558, label %if.then4560, label %if.end4564, !dbg !9550

if.then4560:                                      ; preds = %if.end4557
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x4561, metadata !9551, metadata !DIExpression()), !dbg !9553
  %1895 = load %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* (i32, %struct.rtx_def*)** getelementptr inbounds (%struct.rtl_hooks, %struct.rtl_hooks* @rtl_hooks, i32 0, i32 1), align 8, !dbg !9554
  %1896 = load i32, i32* %mode.addr, align 4, !dbg !9555
  %1897 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9556
  %call4562 = call %struct.rtx_def* %1895(i32 %1896, %struct.rtx_def* %1897), !dbg !9557
  store %struct.rtx_def* %call4562, %struct.rtx_def** %x4561, align 8, !dbg !9553
  %1898 = load i32, i32* %mode.addr, align 4, !dbg !9558
  %1899 = load %struct.rtx_def*, %struct.rtx_def** %x4561, align 8, !dbg !9559
  %1900 = load i32, i32* %mode.addr, align 4, !dbg !9560
  %call4563 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %1898, %struct.rtx_def* %1899, i32 %1900), !dbg !9561
  store %struct.rtx_def* %call4563, %struct.rtx_def** %retval, align 8, !dbg !9562
  br label %return, !dbg !9562

if.end4564:                                       ; preds = %if.end4557
  br label %if.end4565

if.end4565:                                       ; preds = %if.end4564, %if.end4538
  br label %sw.epilog5879, !dbg !9563

sw.bb4566:                                        ; preds = %entry
  %1901 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9564
  %1902 = load i32, i32* %mode.addr, align 4, !dbg !9566
  %idxprom4567 = sext i32 %1902 to i64, !dbg !9566
  %arrayidx4568 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4567, !dbg !9566
  %1903 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4568, align 8, !dbg !9566
  %cmp4569 = icmp eq %struct.rtx_def* %1901, %1903, !dbg !9567
  br i1 %cmp4569, label %if.then4571, label %if.end4577, !dbg !9568

if.then4571:                                      ; preds = %sw.bb4566
  %1904 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9569
  %call4572 = call i32 @side_effects_p(%struct.rtx_def* %1904), !dbg !9572
  %tobool4573 = icmp ne i32 %call4572, 0, !dbg !9572
  br i1 %tobool4573, label %if.then4574, label %if.end4576, !dbg !9573

if.then4574:                                      ; preds = %if.then4571
  %1905 = load i32, i32* %mode.addr, align 4, !dbg !9574
  %1906 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9575
  %1907 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9576
  %call4575 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1905, %struct.rtx_def* %1906, %struct.rtx_def* %1907), !dbg !9577
  store %struct.rtx_def* %call4575, %struct.rtx_def** %retval, align 8, !dbg !9578
  br label %return, !dbg !9578

if.end4576:                                       ; preds = %if.then4571
  %1908 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9579
  store %struct.rtx_def* %1908, %struct.rtx_def** %retval, align 8, !dbg !9580
  br label %return, !dbg !9580

if.end4577:                                       ; preds = %sw.bb4566
  %1909 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9581
  %1910 = load i32, i32* %mode.addr, align 4, !dbg !9583
  %idxprom4578 = sext i32 %1910 to i64, !dbg !9583
  %arrayidx4579 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom4578, !dbg !9583
  %1911 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4579, align 8, !dbg !9583
  %cmp4580 = icmp eq %struct.rtx_def* %1909, %1911, !dbg !9584
  br i1 %cmp4580, label %if.then4582, label %if.end4592, !dbg !9585

if.then4582:                                      ; preds = %if.end4577
  %1912 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9586
  %call4583 = call i32 @side_effects_p(%struct.rtx_def* %1912), !dbg !9589
  %tobool4584 = icmp ne i32 %call4583, 0, !dbg !9589
  br i1 %tobool4584, label %if.then4585, label %if.end4589, !dbg !9590

if.then4585:                                      ; preds = %if.then4582
  %1913 = load i32, i32* %mode.addr, align 4, !dbg !9591
  %1914 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9592
  %1915 = load i32, i32* %mode.addr, align 4, !dbg !9593
  %idxprom4586 = sext i32 %1915 to i64, !dbg !9593
  %arrayidx4587 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4586, !dbg !9593
  %1916 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4587, align 8, !dbg !9593
  %call4588 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1913, %struct.rtx_def* %1914, %struct.rtx_def* %1916), !dbg !9594
  store %struct.rtx_def* %call4588, %struct.rtx_def** %retval, align 8, !dbg !9595
  br label %return, !dbg !9595

if.end4589:                                       ; preds = %if.then4582
  %1917 = load i32, i32* %mode.addr, align 4, !dbg !9596
  %idxprom4590 = sext i32 %1917 to i64, !dbg !9596
  %arrayidx4591 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4590, !dbg !9596
  %1918 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4591, align 8, !dbg !9596
  store %struct.rtx_def* %1918, %struct.rtx_def** %retval, align 8, !dbg !9597
  br label %return, !dbg !9597

if.end4592:                                       ; preds = %if.end4577
  %1919 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9598
  %1920 = bitcast %struct.rtx_def* %1919 to i32*, !dbg !9598
  %bf.load4593 = load i32, i32* %1920, align 8, !dbg !9598
  %bf.clear4594 = and i32 %bf.load4593, 65535, !dbg !9598
  %cmp4595 = icmp eq i32 %bf.clear4594, 30, !dbg !9598
  br i1 %cmp4595, label %land.lhs.true4597, label %if.end4611, !dbg !9600

land.lhs.true4597:                                ; preds = %if.end4592
  %1921 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9601
  %u4598 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1921, i32 0, i32 1, !dbg !9601
  %hwint4599 = bitcast %union.u* %u4598 to [1 x i64]*, !dbg !9601
  %arrayidx4600 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4599, i64 0, i64 0, !dbg !9601
  %1922 = load i64, i64* %arrayidx4600, align 8, !dbg !9601
  %call4601 = call i32 @exact_log2(i64 %1922), !dbg !9602
  %cmp4602 = icmp sgt i32 %call4601, 0, !dbg !9603
  br i1 %cmp4602, label %if.then4604, label %if.end4611, !dbg !9604

if.then4604:                                      ; preds = %land.lhs.true4597
  %1923 = load i32, i32* %mode.addr, align 4, !dbg !9605
  %1924 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9606
  %1925 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9607
  %u4605 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1925, i32 0, i32 1, !dbg !9607
  %hwint4606 = bitcast %union.u* %u4605 to [1 x i64]*, !dbg !9607
  %arrayidx4607 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4606, i64 0, i64 0, !dbg !9607
  %1926 = load i64, i64* %arrayidx4607, align 8, !dbg !9607
  %sub4608 = sub nsw i64 %1926, 1, !dbg !9607
  %call4609 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %sub4608), !dbg !9607
  %call4610 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1923, %struct.rtx_def* %1924, %struct.rtx_def* %call4609), !dbg !9608
  store %struct.rtx_def* %call4610, %struct.rtx_def** %retval, align 8, !dbg !9609
  br label %return, !dbg !9609

if.end4611:                                       ; preds = %land.lhs.true4597, %if.end4592
  br label %sw.epilog5879, !dbg !9610

sw.bb4612:                                        ; preds = %entry
  %1927 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9611
  %1928 = load i32, i32* %mode.addr, align 4, !dbg !9613
  %idxprom4613 = sext i32 %1928 to i64, !dbg !9613
  %arrayidx4614 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4613, !dbg !9613
  %1929 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4614, align 8, !dbg !9613
  %cmp4615 = icmp eq %struct.rtx_def* %1927, %1929, !dbg !9614
  br i1 %cmp4615, label %if.then4617, label %if.end4623, !dbg !9615

if.then4617:                                      ; preds = %sw.bb4612
  %1930 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9616
  %call4618 = call i32 @side_effects_p(%struct.rtx_def* %1930), !dbg !9619
  %tobool4619 = icmp ne i32 %call4618, 0, !dbg !9619
  br i1 %tobool4619, label %if.then4620, label %if.end4622, !dbg !9620

if.then4620:                                      ; preds = %if.then4617
  %1931 = load i32, i32* %mode.addr, align 4, !dbg !9621
  %1932 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9622
  %1933 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9623
  %call4621 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1931, %struct.rtx_def* %1932, %struct.rtx_def* %1933), !dbg !9624
  store %struct.rtx_def* %call4621, %struct.rtx_def** %retval, align 8, !dbg !9625
  br label %return, !dbg !9625

if.end4622:                                       ; preds = %if.then4617
  %1934 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9626
  store %struct.rtx_def* %1934, %struct.rtx_def** %retval, align 8, !dbg !9627
  br label %return, !dbg !9627

if.end4623:                                       ; preds = %sw.bb4612
  %1935 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9628
  %1936 = load i32, i32* %mode.addr, align 4, !dbg !9630
  %idxprom4624 = sext i32 %1936 to i64, !dbg !9630
  %arrayidx4625 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 1), i64 0, i64 %idxprom4624, !dbg !9630
  %1937 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4625, align 8, !dbg !9630
  %cmp4626 = icmp eq %struct.rtx_def* %1935, %1937, !dbg !9631
  br i1 %cmp4626, label %if.then4631, label %lor.lhs.false4628, !dbg !9632

lor.lhs.false4628:                                ; preds = %if.end4623
  %1938 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9633
  %1939 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !9634
  %cmp4629 = icmp eq %struct.rtx_def* %1938, %1939, !dbg !9635
  br i1 %cmp4629, label %if.then4631, label %if.end4641, !dbg !9636

if.then4631:                                      ; preds = %lor.lhs.false4628, %if.end4623
  %1940 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9637
  %call4632 = call i32 @side_effects_p(%struct.rtx_def* %1940), !dbg !9640
  %tobool4633 = icmp ne i32 %call4632, 0, !dbg !9640
  br i1 %tobool4633, label %if.then4634, label %if.end4638, !dbg !9641

if.then4634:                                      ; preds = %if.then4631
  %1941 = load i32, i32* %mode.addr, align 4, !dbg !9642
  %1942 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9643
  %1943 = load i32, i32* %mode.addr, align 4, !dbg !9644
  %idxprom4635 = sext i32 %1943 to i64, !dbg !9644
  %arrayidx4636 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4635, !dbg !9644
  %1944 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4636, align 8, !dbg !9644
  %call4637 = call %struct.rtx_def* @simplify_gen_binary(i32 61, i32 %1941, %struct.rtx_def* %1942, %struct.rtx_def* %1944), !dbg !9645
  store %struct.rtx_def* %call4637, %struct.rtx_def** %retval, align 8, !dbg !9646
  br label %return, !dbg !9646

if.end4638:                                       ; preds = %if.then4631
  %1945 = load i32, i32* %mode.addr, align 4, !dbg !9647
  %idxprom4639 = sext i32 %1945 to i64, !dbg !9647
  %arrayidx4640 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4639, !dbg !9647
  %1946 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4640, align 8, !dbg !9647
  store %struct.rtx_def* %1946, %struct.rtx_def** %retval, align 8, !dbg !9648
  br label %return, !dbg !9648

if.end4641:                                       ; preds = %lor.lhs.false4628
  br label %sw.epilog5879, !dbg !9649

sw.bb4642:                                        ; preds = %entry, %entry, %entry
  %1947 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9650
  %1948 = load i32, i32* %mode.addr, align 4, !dbg !9652
  %idxprom4643 = sext i32 %1948 to i64, !dbg !9652
  %arrayidx4644 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4643, !dbg !9652
  %1949 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4644, align 8, !dbg !9652
  %cmp4645 = icmp eq %struct.rtx_def* %1947, %1949, !dbg !9653
  br i1 %cmp4645, label %if.then4647, label %if.end4648, !dbg !9654

if.then4647:                                      ; preds = %sw.bb4642
  %1950 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9655
  store %struct.rtx_def* %1950, %struct.rtx_def** %retval, align 8, !dbg !9656
  br label %return, !dbg !9656

if.end4648:                                       ; preds = %sw.bb4642
  %1951 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9657
  %1952 = load i32, i32* %mode.addr, align 4, !dbg !9659
  %idxprom4649 = sext i32 %1952 to i64, !dbg !9659
  %arrayidx4650 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4649, !dbg !9659
  %1953 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4650, align 8, !dbg !9659
  %cmp4651 = icmp eq %struct.rtx_def* %1951, %1953, !dbg !9660
  br i1 %cmp4651, label %land.lhs.true4653, label %if.end4657, !dbg !9661

land.lhs.true4653:                                ; preds = %if.end4648
  %1954 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9662
  %call4654 = call i32 @side_effects_p(%struct.rtx_def* %1954), !dbg !9663
  %tobool4655 = icmp ne i32 %call4654, 0, !dbg !9663
  br i1 %tobool4655, label %if.end4657, label %if.then4656, !dbg !9664

if.then4656:                                      ; preds = %land.lhs.true4653
  %1955 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9665
  store %struct.rtx_def* %1955, %struct.rtx_def** %retval, align 8, !dbg !9666
  br label %return, !dbg !9666

if.end4657:                                       ; preds = %land.lhs.true4653, %if.end4648
  %1956 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9667
  %1957 = bitcast %struct.rtx_def* %1956 to i32*, !dbg !9667
  %bf.load4658 = load i32, i32* %1957, align 8, !dbg !9667
  %bf.clear4659 = and i32 %bf.load4658, 65535, !dbg !9667
  %cmp4660 = icmp eq i32 %bf.clear4659, 30, !dbg !9667
  br i1 %cmp4660, label %land.lhs.true4662, label %if.end4677, !dbg !9669

land.lhs.true4662:                                ; preds = %if.end4657
  %1958 = load i32, i32* %width, align 4, !dbg !9670
  %cmp4663 = icmp ule i32 %1958, 64, !dbg !9671
  br i1 %cmp4663, label %land.lhs.true4665, label %if.end4677, !dbg !9672

land.lhs.true4665:                                ; preds = %land.lhs.true4662
  %1959 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9673
  %u4666 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1959, i32 0, i32 1, !dbg !9673
  %hwint4667 = bitcast %union.u* %u4666 to [1 x i64]*, !dbg !9673
  %arrayidx4668 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4667, i64 0, i64 0, !dbg !9673
  %1960 = load i64, i64* %arrayidx4668, align 8, !dbg !9673
  %1961 = load i32, i32* %mode.addr, align 4, !dbg !9674
  %idxprom4669 = zext i32 %1961 to i64, !dbg !9674
  %arrayidx4670 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom4669, !dbg !9674
  %1962 = load i64, i64* %arrayidx4670, align 8, !dbg !9674
  %cmp4671 = icmp eq i64 %1960, %1962, !dbg !9675
  br i1 %cmp4671, label %land.lhs.true4673, label %if.end4677, !dbg !9676

land.lhs.true4673:                                ; preds = %land.lhs.true4665
  %1963 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9677
  %call4674 = call i32 @side_effects_p(%struct.rtx_def* %1963), !dbg !9678
  %tobool4675 = icmp ne i32 %call4674, 0, !dbg !9678
  br i1 %tobool4675, label %if.end4677, label %if.then4676, !dbg !9679

if.then4676:                                      ; preds = %land.lhs.true4673
  %1964 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9680
  store %struct.rtx_def* %1964, %struct.rtx_def** %retval, align 8, !dbg !9681
  br label %return, !dbg !9681

if.end4677:                                       ; preds = %land.lhs.true4673, %land.lhs.true4665, %land.lhs.true4662, %if.end4657
  br label %canonicalize_shift, !dbg !9682

canonicalize_shift:                               ; preds = %if.end4735, %if.end4693, %if.end4677
  call void @llvm.dbg.label(metadata !9683), !dbg !9684
  br label %sw.epilog5879, !dbg !9685

sw.bb4678:                                        ; preds = %entry, %entry, %entry
  %1965 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9686
  %1966 = load i32, i32* %mode.addr, align 4, !dbg !9688
  %idxprom4679 = sext i32 %1966 to i64, !dbg !9688
  %arrayidx4680 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4679, !dbg !9688
  %1967 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4680, align 8, !dbg !9688
  %cmp4681 = icmp eq %struct.rtx_def* %1965, %1967, !dbg !9689
  br i1 %cmp4681, label %if.then4683, label %if.end4684, !dbg !9690

if.then4683:                                      ; preds = %sw.bb4678
  %1968 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9691
  store %struct.rtx_def* %1968, %struct.rtx_def** %retval, align 8, !dbg !9692
  br label %return, !dbg !9692

if.end4684:                                       ; preds = %sw.bb4678
  %1969 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9693
  %1970 = load i32, i32* %mode.addr, align 4, !dbg !9695
  %idxprom4685 = sext i32 %1970 to i64, !dbg !9695
  %arrayidx4686 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4685, !dbg !9695
  %1971 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4686, align 8, !dbg !9695
  %cmp4687 = icmp eq %struct.rtx_def* %1969, %1971, !dbg !9696
  br i1 %cmp4687, label %land.lhs.true4689, label %if.end4693, !dbg !9697

land.lhs.true4689:                                ; preds = %if.end4684
  %1972 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9698
  %call4690 = call i32 @side_effects_p(%struct.rtx_def* %1972), !dbg !9699
  %tobool4691 = icmp ne i32 %call4690, 0, !dbg !9699
  br i1 %tobool4691, label %if.end4693, label %if.then4692, !dbg !9700

if.then4692:                                      ; preds = %land.lhs.true4689
  %1973 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9701
  store %struct.rtx_def* %1973, %struct.rtx_def** %retval, align 8, !dbg !9702
  br label %return, !dbg !9702

if.end4693:                                       ; preds = %land.lhs.true4689, %if.end4684
  br label %canonicalize_shift, !dbg !9703

sw.bb4694:                                        ; preds = %entry
  %1974 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9704
  %1975 = load i32, i32* %mode.addr, align 4, !dbg !9706
  %idxprom4695 = sext i32 %1975 to i64, !dbg !9706
  %arrayidx4696 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4695, !dbg !9706
  %1976 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4696, align 8, !dbg !9706
  %cmp4697 = icmp eq %struct.rtx_def* %1974, %1976, !dbg !9707
  br i1 %cmp4697, label %if.then4699, label %if.end4700, !dbg !9708

if.then4699:                                      ; preds = %sw.bb4694
  %1977 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9709
  store %struct.rtx_def* %1977, %struct.rtx_def** %retval, align 8, !dbg !9710
  br label %return, !dbg !9710

if.end4700:                                       ; preds = %sw.bb4694
  %1978 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9711
  %1979 = load i32, i32* %mode.addr, align 4, !dbg !9713
  %idxprom4701 = sext i32 %1979 to i64, !dbg !9713
  %arrayidx4702 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4701, !dbg !9713
  %1980 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4702, align 8, !dbg !9713
  %cmp4703 = icmp eq %struct.rtx_def* %1978, %1980, !dbg !9714
  br i1 %cmp4703, label %land.lhs.true4705, label %if.end4709, !dbg !9715

land.lhs.true4705:                                ; preds = %if.end4700
  %1981 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9716
  %call4706 = call i32 @side_effects_p(%struct.rtx_def* %1981), !dbg !9717
  %tobool4707 = icmp ne i32 %call4706, 0, !dbg !9717
  br i1 %tobool4707, label %if.end4709, label %if.then4708, !dbg !9718

if.then4708:                                      ; preds = %land.lhs.true4705
  %1982 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9719
  store %struct.rtx_def* %1982, %struct.rtx_def** %retval, align 8, !dbg !9720
  br label %return, !dbg !9720

if.end4709:                                       ; preds = %land.lhs.true4705, %if.end4700
  %1983 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9721
  %1984 = bitcast %struct.rtx_def* %1983 to i32*, !dbg !9721
  %bf.load4710 = load i32, i32* %1984, align 8, !dbg !9721
  %bf.clear4711 = and i32 %bf.load4710, 65535, !dbg !9721
  %cmp4712 = icmp eq i32 %bf.clear4711, 115, !dbg !9723
  br i1 %cmp4712, label %land.lhs.true4714, label %if.end4735, !dbg !9724

land.lhs.true4714:                                ; preds = %if.end4709
  %1985 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9725
  %1986 = bitcast %struct.rtx_def* %1985 to i32*, !dbg !9725
  %bf.load4715 = load i32, i32* %1986, align 8, !dbg !9725
  %bf.clear4716 = and i32 %bf.load4715, 65535, !dbg !9725
  %cmp4717 = icmp eq i32 %bf.clear4716, 30, !dbg !9725
  br i1 %cmp4717, label %land.lhs.true4719, label %if.end4735, !dbg !9726

land.lhs.true4719:                                ; preds = %land.lhs.true4714
  %1987 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9727
  %u4720 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1987, i32 0, i32 1, !dbg !9727
  %hwint4721 = bitcast %union.u* %u4720 to [1 x i64]*, !dbg !9727
  %arrayidx4722 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4721, i64 0, i64 0, !dbg !9727
  %1988 = load i64, i64* %arrayidx4722, align 8, !dbg !9727
  %1989 = load i32, i32* %width, align 4, !dbg !9728
  %conv4723 = zext i32 %1989 to i64, !dbg !9729
  %cmp4724 = icmp slt i64 %1988, %conv4723, !dbg !9730
  br i1 %cmp4724, label %if.then4726, label %if.end4735, !dbg !9731

if.then4726:                                      ; preds = %land.lhs.true4719
  call void @llvm.dbg.declare(metadata i32* %imode4727, metadata !9732, metadata !DIExpression()), !dbg !9734
  %1990 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9735
  %u4728 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1990, i32 0, i32 1, !dbg !9735
  %fld4729 = bitcast %union.u* %u4728 to [1 x %union.rtunion_def]*, !dbg !9735
  %arrayidx4730 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4729, i64 0, i64 0, !dbg !9735
  %rt_rtx4731 = bitcast %union.rtunion_def* %arrayidx4730 to %struct.rtx_def**, !dbg !9735
  %1991 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4731, align 8, !dbg !9735
  %1992 = bitcast %struct.rtx_def* %1991 to i32*, !dbg !9735
  %bf.load4732 = load i32, i32* %1992, align 8, !dbg !9735
  %bf.lshr4733 = lshr i32 %bf.load4732, 16, !dbg !9735
  %bf.clear4734 = and i32 %bf.lshr4733, 255, !dbg !9735
  store i32 %bf.clear4734, i32* %imode4727, align 4, !dbg !9734
  call void @llvm.dbg.declare(metadata i64* %zero_val, metadata !9736, metadata !DIExpression()), !dbg !9737
  store i64 0, i64* %zero_val, align 8, !dbg !9737
  br label %if.end4735, !dbg !9738

if.end4735:                                       ; preds = %if.then4726, %land.lhs.true4719, %land.lhs.true4714, %if.end4709
  br label %canonicalize_shift, !dbg !9739

sw.bb4736:                                        ; preds = %entry
  %1993 = load i32, i32* %width, align 4, !dbg !9740
  %cmp4737 = icmp ule i32 %1993, 64, !dbg !9742
  br i1 %cmp4737, label %land.lhs.true4739, label %if.end4757, !dbg !9743

land.lhs.true4739:                                ; preds = %sw.bb4736
  %1994 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9744
  %1995 = bitcast %struct.rtx_def* %1994 to i32*, !dbg !9744
  %bf.load4740 = load i32, i32* %1995, align 8, !dbg !9744
  %bf.clear4741 = and i32 %bf.load4740, 65535, !dbg !9744
  %cmp4742 = icmp eq i32 %bf.clear4741, 30, !dbg !9744
  br i1 %cmp4742, label %land.lhs.true4744, label %if.end4757, !dbg !9745

land.lhs.true4744:                                ; preds = %land.lhs.true4739
  %1996 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9746
  %u4745 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1996, i32 0, i32 1, !dbg !9746
  %hwint4746 = bitcast %union.u* %u4745 to [1 x i64]*, !dbg !9746
  %arrayidx4747 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4746, i64 0, i64 0, !dbg !9746
  %1997 = load i64, i64* %arrayidx4747, align 8, !dbg !9746
  %1998 = load i32, i32* %width, align 4, !dbg !9747
  %sub4748 = sub i32 %1998, 1, !dbg !9748
  %sh_prom4749 = zext i32 %sub4748 to i64, !dbg !9749
  %shl4750 = shl i64 1, %sh_prom4749, !dbg !9749
  %cmp4751 = icmp eq i64 %1997, %shl4750, !dbg !9750
  br i1 %cmp4751, label %land.lhs.true4753, label %if.end4757, !dbg !9751

land.lhs.true4753:                                ; preds = %land.lhs.true4744
  %1999 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9752
  %call4754 = call i32 @side_effects_p(%struct.rtx_def* %1999), !dbg !9753
  %tobool4755 = icmp ne i32 %call4754, 0, !dbg !9753
  br i1 %tobool4755, label %if.end4757, label %if.then4756, !dbg !9754

if.then4756:                                      ; preds = %land.lhs.true4753
  %2000 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9755
  store %struct.rtx_def* %2000, %struct.rtx_def** %retval, align 8, !dbg !9756
  br label %return, !dbg !9756

if.end4757:                                       ; preds = %land.lhs.true4753, %land.lhs.true4744, %land.lhs.true4739, %sw.bb4736
  %2001 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9757
  %2002 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9759
  %call4758 = call i32 @rtx_equal_p(%struct.rtx_def* %2001, %struct.rtx_def* %2002), !dbg !9760
  %tobool4759 = icmp ne i32 %call4758, 0, !dbg !9760
  br i1 %tobool4759, label %land.lhs.true4760, label %if.end4764, !dbg !9761

land.lhs.true4760:                                ; preds = %if.end4757
  %2003 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9762
  %call4761 = call i32 @side_effects_p(%struct.rtx_def* %2003), !dbg !9763
  %tobool4762 = icmp ne i32 %call4761, 0, !dbg !9763
  br i1 %tobool4762, label %if.end4764, label %if.then4763, !dbg !9764

if.then4763:                                      ; preds = %land.lhs.true4760
  %2004 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9765
  store %struct.rtx_def* %2004, %struct.rtx_def** %retval, align 8, !dbg !9766
  br label %return, !dbg !9766

if.end4764:                                       ; preds = %land.lhs.true4760, %if.end4757
  %2005 = load i32, i32* %code.addr, align 4, !dbg !9767
  %2006 = load i32, i32* %mode.addr, align 4, !dbg !9768
  %2007 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9769
  %2008 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9770
  %call4765 = call %struct.rtx_def* @simplify_associative_operation(i32 %2005, i32 %2006, %struct.rtx_def* %2007, %struct.rtx_def* %2008), !dbg !9771
  store %struct.rtx_def* %call4765, %struct.rtx_def** %tem, align 8, !dbg !9772
  %2009 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9773
  %tobool4766 = icmp ne %struct.rtx_def* %2009, null, !dbg !9773
  br i1 %tobool4766, label %if.then4767, label %if.end4768, !dbg !9775

if.then4767:                                      ; preds = %if.end4764
  %2010 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9776
  store %struct.rtx_def* %2010, %struct.rtx_def** %retval, align 8, !dbg !9777
  br label %return, !dbg !9777

if.end4768:                                       ; preds = %if.end4764
  br label %sw.epilog5879, !dbg !9778

sw.bb4769:                                        ; preds = %entry
  %2011 = load i32, i32* %width, align 4, !dbg !9779
  %cmp4770 = icmp ule i32 %2011, 64, !dbg !9781
  br i1 %cmp4770, label %land.lhs.true4772, label %if.end4790, !dbg !9782

land.lhs.true4772:                                ; preds = %sw.bb4769
  %2012 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9783
  %2013 = bitcast %struct.rtx_def* %2012 to i32*, !dbg !9783
  %bf.load4773 = load i32, i32* %2013, align 8, !dbg !9783
  %bf.clear4774 = and i32 %bf.load4773, 65535, !dbg !9783
  %cmp4775 = icmp eq i32 %bf.clear4774, 30, !dbg !9783
  br i1 %cmp4775, label %land.lhs.true4777, label %if.end4790, !dbg !9784

land.lhs.true4777:                                ; preds = %land.lhs.true4772
  %2014 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9785
  %u4778 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2014, i32 0, i32 1, !dbg !9785
  %hwint4779 = bitcast %union.u* %u4778 to [1 x i64]*, !dbg !9785
  %arrayidx4780 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4779, i64 0, i64 0, !dbg !9785
  %2015 = load i64, i64* %arrayidx4780, align 8, !dbg !9785
  %2016 = load i32, i32* %mode.addr, align 4, !dbg !9786
  %idxprom4781 = zext i32 %2016 to i64, !dbg !9786
  %arrayidx4782 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom4781, !dbg !9786
  %2017 = load i64, i64* %arrayidx4782, align 8, !dbg !9786
  %shr4783 = lshr i64 %2017, 1, !dbg !9787
  %cmp4784 = icmp eq i64 %2015, %shr4783, !dbg !9788
  br i1 %cmp4784, label %land.lhs.true4786, label %if.end4790, !dbg !9789

land.lhs.true4786:                                ; preds = %land.lhs.true4777
  %2018 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9790
  %call4787 = call i32 @side_effects_p(%struct.rtx_def* %2018), !dbg !9791
  %tobool4788 = icmp ne i32 %call4787, 0, !dbg !9791
  br i1 %tobool4788, label %if.end4790, label %if.then4789, !dbg !9792

if.then4789:                                      ; preds = %land.lhs.true4786
  %2019 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9793
  store %struct.rtx_def* %2019, %struct.rtx_def** %retval, align 8, !dbg !9794
  br label %return, !dbg !9794

if.end4790:                                       ; preds = %land.lhs.true4786, %land.lhs.true4777, %land.lhs.true4772, %sw.bb4769
  %2020 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9795
  %2021 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9797
  %call4791 = call i32 @rtx_equal_p(%struct.rtx_def* %2020, %struct.rtx_def* %2021), !dbg !9798
  %tobool4792 = icmp ne i32 %call4791, 0, !dbg !9798
  br i1 %tobool4792, label %land.lhs.true4793, label %if.end4797, !dbg !9799

land.lhs.true4793:                                ; preds = %if.end4790
  %2022 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9800
  %call4794 = call i32 @side_effects_p(%struct.rtx_def* %2022), !dbg !9801
  %tobool4795 = icmp ne i32 %call4794, 0, !dbg !9801
  br i1 %tobool4795, label %if.end4797, label %if.then4796, !dbg !9802

if.then4796:                                      ; preds = %land.lhs.true4793
  %2023 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9803
  store %struct.rtx_def* %2023, %struct.rtx_def** %retval, align 8, !dbg !9804
  br label %return, !dbg !9804

if.end4797:                                       ; preds = %land.lhs.true4793, %if.end4790
  %2024 = load i32, i32* %code.addr, align 4, !dbg !9805
  %2025 = load i32, i32* %mode.addr, align 4, !dbg !9806
  %2026 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9807
  %2027 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9808
  %call4798 = call %struct.rtx_def* @simplify_associative_operation(i32 %2024, i32 %2025, %struct.rtx_def* %2026, %struct.rtx_def* %2027), !dbg !9809
  store %struct.rtx_def* %call4798, %struct.rtx_def** %tem, align 8, !dbg !9810
  %2028 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9811
  %tobool4799 = icmp ne %struct.rtx_def* %2028, null, !dbg !9811
  br i1 %tobool4799, label %if.then4800, label %if.end4801, !dbg !9813

if.then4800:                                      ; preds = %if.end4797
  %2029 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9814
  store %struct.rtx_def* %2029, %struct.rtx_def** %retval, align 8, !dbg !9815
  br label %return, !dbg !9815

if.end4801:                                       ; preds = %if.end4797
  br label %sw.epilog5879, !dbg !9816

sw.bb4802:                                        ; preds = %entry
  %2030 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9817
  %2031 = load i32, i32* %mode.addr, align 4, !dbg !9819
  %idxprom4803 = sext i32 %2031 to i64, !dbg !9819
  %arrayidx4804 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom4803, !dbg !9819
  %2032 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4804, align 8, !dbg !9819
  %cmp4805 = icmp eq %struct.rtx_def* %2030, %2032, !dbg !9820
  br i1 %cmp4805, label %land.lhs.true4807, label %if.end4811, !dbg !9821

land.lhs.true4807:                                ; preds = %sw.bb4802
  %2033 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9822
  %call4808 = call i32 @side_effects_p(%struct.rtx_def* %2033), !dbg !9823
  %tobool4809 = icmp ne i32 %call4808, 0, !dbg !9823
  br i1 %tobool4809, label %if.end4811, label %if.then4810, !dbg !9824

if.then4810:                                      ; preds = %land.lhs.true4807
  %2034 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9825
  store %struct.rtx_def* %2034, %struct.rtx_def** %retval, align 8, !dbg !9826
  br label %return, !dbg !9826

if.end4811:                                       ; preds = %land.lhs.true4807, %sw.bb4802
  %2035 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9827
  %2036 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9829
  %call4812 = call i32 @rtx_equal_p(%struct.rtx_def* %2035, %struct.rtx_def* %2036), !dbg !9830
  %tobool4813 = icmp ne i32 %call4812, 0, !dbg !9830
  br i1 %tobool4813, label %land.lhs.true4814, label %if.end4818, !dbg !9831

land.lhs.true4814:                                ; preds = %if.end4811
  %2037 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9832
  %call4815 = call i32 @side_effects_p(%struct.rtx_def* %2037), !dbg !9833
  %tobool4816 = icmp ne i32 %call4815, 0, !dbg !9833
  br i1 %tobool4816, label %if.end4818, label %if.then4817, !dbg !9834

if.then4817:                                      ; preds = %land.lhs.true4814
  %2038 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9835
  store %struct.rtx_def* %2038, %struct.rtx_def** %retval, align 8, !dbg !9836
  br label %return, !dbg !9836

if.end4818:                                       ; preds = %land.lhs.true4814, %if.end4811
  %2039 = load i32, i32* %code.addr, align 4, !dbg !9837
  %2040 = load i32, i32* %mode.addr, align 4, !dbg !9838
  %2041 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9839
  %2042 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9840
  %call4819 = call %struct.rtx_def* @simplify_associative_operation(i32 %2039, i32 %2040, %struct.rtx_def* %2041, %struct.rtx_def* %2042), !dbg !9841
  store %struct.rtx_def* %call4819, %struct.rtx_def** %tem, align 8, !dbg !9842
  %2043 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9843
  %tobool4820 = icmp ne %struct.rtx_def* %2043, null, !dbg !9843
  br i1 %tobool4820, label %if.then4821, label %if.end4822, !dbg !9845

if.then4821:                                      ; preds = %if.end4818
  %2044 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9846
  store %struct.rtx_def* %2044, %struct.rtx_def** %retval, align 8, !dbg !9847
  br label %return, !dbg !9847

if.end4822:                                       ; preds = %if.end4818
  br label %sw.epilog5879, !dbg !9848

sw.bb4823:                                        ; preds = %entry
  %2045 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9849
  %2046 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !9851
  %cmp4824 = icmp eq %struct.rtx_def* %2045, %2046, !dbg !9852
  br i1 %cmp4824, label %land.lhs.true4826, label %if.end4830, !dbg !9853

land.lhs.true4826:                                ; preds = %sw.bb4823
  %2047 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9854
  %call4827 = call i32 @side_effects_p(%struct.rtx_def* %2047), !dbg !9855
  %tobool4828 = icmp ne i32 %call4827, 0, !dbg !9855
  br i1 %tobool4828, label %if.end4830, label %if.then4829, !dbg !9856

if.then4829:                                      ; preds = %land.lhs.true4826
  %2048 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9857
  store %struct.rtx_def* %2048, %struct.rtx_def** %retval, align 8, !dbg !9858
  br label %return, !dbg !9858

if.end4830:                                       ; preds = %land.lhs.true4826, %sw.bb4823
  %2049 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9859
  %2050 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9861
  %call4831 = call i32 @rtx_equal_p(%struct.rtx_def* %2049, %struct.rtx_def* %2050), !dbg !9862
  %tobool4832 = icmp ne i32 %call4831, 0, !dbg !9862
  br i1 %tobool4832, label %land.lhs.true4833, label %if.end4837, !dbg !9863

land.lhs.true4833:                                ; preds = %if.end4830
  %2051 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9864
  %call4834 = call i32 @side_effects_p(%struct.rtx_def* %2051), !dbg !9865
  %tobool4835 = icmp ne i32 %call4834, 0, !dbg !9865
  br i1 %tobool4835, label %if.end4837, label %if.then4836, !dbg !9866

if.then4836:                                      ; preds = %land.lhs.true4833
  %2052 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9867
  store %struct.rtx_def* %2052, %struct.rtx_def** %retval, align 8, !dbg !9868
  br label %return, !dbg !9868

if.end4837:                                       ; preds = %land.lhs.true4833, %if.end4830
  %2053 = load i32, i32* %code.addr, align 4, !dbg !9869
  %2054 = load i32, i32* %mode.addr, align 4, !dbg !9870
  %2055 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !9871
  %2056 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !9872
  %call4838 = call %struct.rtx_def* @simplify_associative_operation(i32 %2053, i32 %2054, %struct.rtx_def* %2055, %struct.rtx_def* %2056), !dbg !9873
  store %struct.rtx_def* %call4838, %struct.rtx_def** %tem, align 8, !dbg !9874
  %2057 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9875
  %tobool4839 = icmp ne %struct.rtx_def* %2057, null, !dbg !9875
  br i1 %tobool4839, label %if.then4840, label %if.end4841, !dbg !9877

if.then4840:                                      ; preds = %if.end4837
  %2058 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9878
  store %struct.rtx_def* %2058, %struct.rtx_def** %retval, align 8, !dbg !9879
  br label %return, !dbg !9879

if.end4841:                                       ; preds = %if.end4837
  br label %sw.epilog5879, !dbg !9880

sw.bb4842:                                        ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !9881
  br label %return, !dbg !9881

sw.bb4843:                                        ; preds = %entry
  %2059 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4844 = zext i32 %2059 to i64, !dbg !9882
  %arrayidx4845 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4844, !dbg !9882
  %2060 = load i8, i8* %arrayidx4845, align 1, !dbg !9882
  %conv4846 = zext i8 %2060 to i32, !dbg !9882
  %cmp4847 = icmp eq i32 %conv4846, 12, !dbg !9882
  br i1 %cmp4847, label %if.else5228, label %lor.lhs.false4849, !dbg !9882

lor.lhs.false4849:                                ; preds = %sw.bb4843
  %2061 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4850 = zext i32 %2061 to i64, !dbg !9882
  %arrayidx4851 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4850, !dbg !9882
  %2062 = load i8, i8* %arrayidx4851, align 1, !dbg !9882
  %conv4852 = zext i8 %2062 to i32, !dbg !9882
  %cmp4853 = icmp eq i32 %conv4852, 17, !dbg !9882
  br i1 %cmp4853, label %if.else5228, label %lor.lhs.false4855, !dbg !9882

lor.lhs.false4855:                                ; preds = %lor.lhs.false4849
  %2063 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4856 = zext i32 %2063 to i64, !dbg !9882
  %arrayidx4857 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4856, !dbg !9882
  %2064 = load i8, i8* %arrayidx4857, align 1, !dbg !9882
  %conv4858 = zext i8 %2064 to i32, !dbg !9882
  %cmp4859 = icmp eq i32 %conv4858, 13, !dbg !9882
  br i1 %cmp4859, label %if.else5228, label %lor.lhs.false4861, !dbg !9882

lor.lhs.false4861:                                ; preds = %lor.lhs.false4855
  %2065 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4862 = zext i32 %2065 to i64, !dbg !9882
  %arrayidx4863 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4862, !dbg !9882
  %2066 = load i8, i8* %arrayidx4863, align 1, !dbg !9882
  %conv4864 = zext i8 %2066 to i32, !dbg !9882
  %cmp4865 = icmp eq i32 %conv4864, 14, !dbg !9882
  br i1 %cmp4865, label %if.else5228, label %lor.lhs.false4867, !dbg !9882

lor.lhs.false4867:                                ; preds = %lor.lhs.false4861
  %2067 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4868 = zext i32 %2067 to i64, !dbg !9882
  %arrayidx4869 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4868, !dbg !9882
  %2068 = load i8, i8* %arrayidx4869, align 1, !dbg !9882
  %conv4870 = zext i8 %2068 to i32, !dbg !9882
  %cmp4871 = icmp eq i32 %conv4870, 15, !dbg !9882
  br i1 %cmp4871, label %if.else5228, label %lor.lhs.false4873, !dbg !9882

lor.lhs.false4873:                                ; preds = %lor.lhs.false4867
  %2069 = load i32, i32* %mode.addr, align 4, !dbg !9882
  %idxprom4874 = zext i32 %2069 to i64, !dbg !9882
  %arrayidx4875 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4874, !dbg !9882
  %2070 = load i8, i8* %arrayidx4875, align 1, !dbg !9882
  %conv4876 = zext i8 %2070 to i32, !dbg !9882
  %cmp4877 = icmp eq i32 %conv4876, 16, !dbg !9882
  br i1 %cmp4877, label %if.else5228, label %if.then4879, !dbg !9884

if.then4879:                                      ; preds = %lor.lhs.false4873
  %2071 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2072 = bitcast %struct.rtx_def* %2071 to i32*, !dbg !9885
  %bf.load4880 = load i32, i32* %2072, align 8, !dbg !9885
  %bf.lshr4881 = lshr i32 %bf.load4880, 16, !dbg !9885
  %bf.clear4882 = and i32 %bf.lshr4881, 255, !dbg !9885
  %idxprom4883 = zext i32 %bf.clear4882 to i64, !dbg !9885
  %arrayidx4884 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4883, !dbg !9885
  %2073 = load i8, i8* %arrayidx4884, align 1, !dbg !9885
  %conv4885 = zext i8 %2073 to i32, !dbg !9885
  %cmp4886 = icmp eq i32 %conv4885, 12, !dbg !9885
  br i1 %cmp4886, label %cond.false4934, label %lor.lhs.false4888, !dbg !9885

lor.lhs.false4888:                                ; preds = %if.then4879
  %2074 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2075 = bitcast %struct.rtx_def* %2074 to i32*, !dbg !9885
  %bf.load4889 = load i32, i32* %2075, align 8, !dbg !9885
  %bf.lshr4890 = lshr i32 %bf.load4889, 16, !dbg !9885
  %bf.clear4891 = and i32 %bf.lshr4890, 255, !dbg !9885
  %idxprom4892 = zext i32 %bf.clear4891 to i64, !dbg !9885
  %arrayidx4893 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4892, !dbg !9885
  %2076 = load i8, i8* %arrayidx4893, align 1, !dbg !9885
  %conv4894 = zext i8 %2076 to i32, !dbg !9885
  %cmp4895 = icmp eq i32 %conv4894, 17, !dbg !9885
  br i1 %cmp4895, label %cond.false4934, label %lor.lhs.false4897, !dbg !9885

lor.lhs.false4897:                                ; preds = %lor.lhs.false4888
  %2077 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2078 = bitcast %struct.rtx_def* %2077 to i32*, !dbg !9885
  %bf.load4898 = load i32, i32* %2078, align 8, !dbg !9885
  %bf.lshr4899 = lshr i32 %bf.load4898, 16, !dbg !9885
  %bf.clear4900 = and i32 %bf.lshr4899, 255, !dbg !9885
  %idxprom4901 = zext i32 %bf.clear4900 to i64, !dbg !9885
  %arrayidx4902 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4901, !dbg !9885
  %2079 = load i8, i8* %arrayidx4902, align 1, !dbg !9885
  %conv4903 = zext i8 %2079 to i32, !dbg !9885
  %cmp4904 = icmp eq i32 %conv4903, 13, !dbg !9885
  br i1 %cmp4904, label %cond.false4934, label %lor.lhs.false4906, !dbg !9885

lor.lhs.false4906:                                ; preds = %lor.lhs.false4897
  %2080 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2081 = bitcast %struct.rtx_def* %2080 to i32*, !dbg !9885
  %bf.load4907 = load i32, i32* %2081, align 8, !dbg !9885
  %bf.lshr4908 = lshr i32 %bf.load4907, 16, !dbg !9885
  %bf.clear4909 = and i32 %bf.lshr4908, 255, !dbg !9885
  %idxprom4910 = zext i32 %bf.clear4909 to i64, !dbg !9885
  %arrayidx4911 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4910, !dbg !9885
  %2082 = load i8, i8* %arrayidx4911, align 1, !dbg !9885
  %conv4912 = zext i8 %2082 to i32, !dbg !9885
  %cmp4913 = icmp eq i32 %conv4912, 14, !dbg !9885
  br i1 %cmp4913, label %cond.false4934, label %lor.lhs.false4915, !dbg !9885

lor.lhs.false4915:                                ; preds = %lor.lhs.false4906
  %2083 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2084 = bitcast %struct.rtx_def* %2083 to i32*, !dbg !9885
  %bf.load4916 = load i32, i32* %2084, align 8, !dbg !9885
  %bf.lshr4917 = lshr i32 %bf.load4916, 16, !dbg !9885
  %bf.clear4918 = and i32 %bf.lshr4917, 255, !dbg !9885
  %idxprom4919 = zext i32 %bf.clear4918 to i64, !dbg !9885
  %arrayidx4920 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4919, !dbg !9885
  %2085 = load i8, i8* %arrayidx4920, align 1, !dbg !9885
  %conv4921 = zext i8 %2085 to i32, !dbg !9885
  %cmp4922 = icmp eq i32 %conv4921, 15, !dbg !9885
  br i1 %cmp4922, label %cond.false4934, label %lor.lhs.false4924, !dbg !9885

lor.lhs.false4924:                                ; preds = %lor.lhs.false4915
  %2086 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9885
  %2087 = bitcast %struct.rtx_def* %2086 to i32*, !dbg !9885
  %bf.load4925 = load i32, i32* %2087, align 8, !dbg !9885
  %bf.lshr4926 = lshr i32 %bf.load4925, 16, !dbg !9885
  %bf.clear4927 = and i32 %bf.lshr4926, 255, !dbg !9885
  %idxprom4928 = zext i32 %bf.clear4927 to i64, !dbg !9885
  %arrayidx4929 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4928, !dbg !9885
  %2088 = load i8, i8* %arrayidx4929, align 1, !dbg !9885
  %conv4930 = zext i8 %2088 to i32, !dbg !9885
  %cmp4931 = icmp eq i32 %conv4930, 16, !dbg !9885
  br i1 %cmp4931, label %cond.false4934, label %cond.true4933, !dbg !9885

cond.true4933:                                    ; preds = %lor.lhs.false4924
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2860, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9885
  br label %cond.end4935, !dbg !9885

cond.false4934:                                   ; preds = %lor.lhs.false4924, %lor.lhs.false4915, %lor.lhs.false4906, %lor.lhs.false4897, %lor.lhs.false4888, %if.then4879
  br label %cond.end4935, !dbg !9885

cond.end4935:                                     ; preds = %cond.false4934, %cond.true4933
  %cond4936 = phi i32 [ 0, %cond.true4933 ], [ 0, %cond.false4934 ], !dbg !9885
  %2089 = load i32, i32* %mode.addr, align 4, !dbg !9887
  %2090 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9887
  %2091 = bitcast %struct.rtx_def* %2090 to i32*, !dbg !9887
  %bf.load4937 = load i32, i32* %2091, align 8, !dbg !9887
  %bf.lshr4938 = lshr i32 %bf.load4937, 16, !dbg !9887
  %bf.clear4939 = and i32 %bf.lshr4938, 255, !dbg !9887
  %idxprom4940 = zext i32 %bf.clear4939 to i64, !dbg !9887
  %arrayidx4941 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom4940, !dbg !9887
  %2092 = load i8, i8* %arrayidx4941, align 1, !dbg !9887
  %conv4942 = zext i8 %2092 to i32, !dbg !9887
  %cmp4943 = icmp eq i32 %2089, %conv4942, !dbg !9887
  br i1 %cmp4943, label %cond.false4946, label %cond.true4945, !dbg !9887

cond.true4945:                                    ; preds = %cond.end4935
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2861, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9887
  br label %cond.end4947, !dbg !9887

cond.false4946:                                   ; preds = %cond.end4935
  br label %cond.end4947, !dbg !9887

cond.end4947:                                     ; preds = %cond.false4946, %cond.true4945
  %cond4948 = phi i32 [ 0, %cond.true4945 ], [ 0, %cond.false4946 ], !dbg !9887
  %2093 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9888
  %2094 = bitcast %struct.rtx_def* %2093 to i32*, !dbg !9888
  %bf.load4949 = load i32, i32* %2094, align 8, !dbg !9888
  %bf.clear4950 = and i32 %bf.load4949, 65535, !dbg !9888
  %cmp4951 = icmp eq i32 %bf.clear4950, 15, !dbg !9888
  br i1 %cmp4951, label %cond.false4954, label %cond.true4953, !dbg !9888

cond.true4953:                                    ; preds = %cond.end4947
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2862, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9888
  br label %cond.end4955, !dbg !9888

cond.false4954:                                   ; preds = %cond.end4947
  br label %cond.end4955, !dbg !9888

cond.end4955:                                     ; preds = %cond.false4954, %cond.true4953
  %cond4956 = phi i32 [ 0, %cond.true4953 ], [ 0, %cond.false4954 ], !dbg !9888
  %2095 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9889
  %u4957 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2095, i32 0, i32 1, !dbg !9889
  %fld4958 = bitcast %union.u* %u4957 to [1 x %union.rtunion_def]*, !dbg !9889
  %arrayidx4959 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4958, i64 0, i64 0, !dbg !9889
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx4959 to %struct.rtvec_def**, !dbg !9889
  %2096 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !9889
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2096, i32 0, i32 0, !dbg !9889
  %2097 = load i32, i32* %num_elem, align 8, !dbg !9889
  %cmp4960 = icmp eq i32 %2097, 1, !dbg !9889
  br i1 %cmp4960, label %cond.false4963, label %cond.true4962, !dbg !9889

cond.true4962:                                    ; preds = %cond.end4955
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2863, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9889
  br label %cond.end4964, !dbg !9889

cond.false4963:                                   ; preds = %cond.end4955
  br label %cond.end4964, !dbg !9889

cond.end4964:                                     ; preds = %cond.false4963, %cond.true4962
  %cond4965 = phi i32 [ 0, %cond.true4962 ], [ 0, %cond.false4963 ], !dbg !9889
  %2098 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9890
  %u4966 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2098, i32 0, i32 1, !dbg !9890
  %fld4967 = bitcast %union.u* %u4966 to [1 x %union.rtunion_def]*, !dbg !9890
  %arrayidx4968 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4967, i64 0, i64 0, !dbg !9890
  %rt_rtvec4969 = bitcast %union.rtunion_def* %arrayidx4968 to %struct.rtvec_def**, !dbg !9890
  %2099 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec4969, align 8, !dbg !9890
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2099, i32 0, i32 1, !dbg !9890
  %arrayidx4970 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !9890
  %2100 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4970, align 8, !dbg !9890
  %2101 = bitcast %struct.rtx_def* %2100 to i32*, !dbg !9890
  %bf.load4971 = load i32, i32* %2101, align 8, !dbg !9890
  %bf.clear4972 = and i32 %bf.load4971, 65535, !dbg !9890
  %cmp4973 = icmp eq i32 %bf.clear4972, 30, !dbg !9890
  br i1 %cmp4973, label %cond.false4976, label %cond.true4975, !dbg !9890

cond.true4975:                                    ; preds = %cond.end4964
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9890
  br label %cond.end4977, !dbg !9890

cond.false4976:                                   ; preds = %cond.end4964
  br label %cond.end4977, !dbg !9890

cond.end4977:                                     ; preds = %cond.false4976, %cond.true4975
  %cond4978 = phi i32 [ 0, %cond.true4975 ], [ 0, %cond.false4976 ], !dbg !9890
  %2102 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9891
  %2103 = bitcast %struct.rtx_def* %2102 to i32*, !dbg !9891
  %bf.load4979 = load i32, i32* %2103, align 8, !dbg !9891
  %bf.clear4980 = and i32 %bf.load4979, 65535, !dbg !9891
  %cmp4981 = icmp eq i32 %bf.clear4980, 33, !dbg !9893
  br i1 %cmp4981, label %if.then4983, label %if.end4999, !dbg !9894

if.then4983:                                      ; preds = %cond.end4977
  %2104 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9895
  %u4984 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2104, i32 0, i32 1, !dbg !9895
  %fld4985 = bitcast %union.u* %u4984 to [1 x %union.rtunion_def]*, !dbg !9895
  %arrayidx4986 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4985, i64 0, i64 0, !dbg !9895
  %rt_rtvec4987 = bitcast %union.rtunion_def* %arrayidx4986 to %struct.rtvec_def**, !dbg !9895
  %2105 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec4987, align 8, !dbg !9895
  %elem4988 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2105, i32 0, i32 1, !dbg !9895
  %2106 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9895
  %u4989 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2106, i32 0, i32 1, !dbg !9895
  %fld4990 = bitcast %union.u* %u4989 to [1 x %union.rtunion_def]*, !dbg !9895
  %arrayidx4991 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4990, i64 0, i64 0, !dbg !9895
  %rt_rtvec4992 = bitcast %union.rtunion_def* %arrayidx4991 to %struct.rtvec_def**, !dbg !9895
  %2107 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec4992, align 8, !dbg !9895
  %elem4993 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2107, i32 0, i32 1, !dbg !9895
  %arrayidx4994 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem4993, i64 0, i64 0, !dbg !9895
  %2108 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4994, align 8, !dbg !9895
  %u4995 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2108, i32 0, i32 1, !dbg !9895
  %hwint4996 = bitcast %union.u* %u4995 to [1 x i64]*, !dbg !9895
  %arrayidx4997 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint4996, i64 0, i64 0, !dbg !9895
  %2109 = load i64, i64* %arrayidx4997, align 8, !dbg !9895
  %arrayidx4998 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem4988, i64 0, i64 %2109, !dbg !9895
  %2110 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx4998, align 8, !dbg !9895
  store %struct.rtx_def* %2110, %struct.rtx_def** %retval, align 8, !dbg !9896
  br label %return, !dbg !9896

if.end4999:                                       ; preds = %cond.end4977
  %2111 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9897
  %2112 = bitcast %struct.rtx_def* %2111 to i32*, !dbg !9897
  %bf.load5000 = load i32, i32* %2112, align 8, !dbg !9897
  %bf.clear5001 = and i32 %bf.load5000, 65535, !dbg !9897
  %cmp5002 = icmp eq i32 %bf.clear5001, 124, !dbg !9899
  br i1 %cmp5002, label %if.then5004, label %if.end5207, !dbg !9900

if.then5004:                                      ; preds = %if.end4999
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op05005, metadata !9901, metadata !DIExpression()), !dbg !9903
  %2113 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9904
  %u5006 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2113, i32 0, i32 1, !dbg !9904
  %fld5007 = bitcast %union.u* %u5006 to [1 x %union.rtunion_def]*, !dbg !9904
  %arrayidx5008 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5007, i64 0, i64 0, !dbg !9904
  %rt_rtx5009 = bitcast %union.rtunion_def* %arrayidx5008 to %struct.rtx_def**, !dbg !9904
  %2114 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5009, align 8, !dbg !9904
  store %struct.rtx_def* %2114, %struct.rtx_def** %op05005, align 8, !dbg !9903
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op15010, metadata !9905, metadata !DIExpression()), !dbg !9906
  %2115 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !9907
  %u5011 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2115, i32 0, i32 1, !dbg !9907
  %fld5012 = bitcast %union.u* %u5011 to [1 x %union.rtunion_def]*, !dbg !9907
  %arrayidx5013 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5012, i64 0, i64 1, !dbg !9907
  %rt_rtx5014 = bitcast %union.rtunion_def* %arrayidx5013 to %struct.rtx_def**, !dbg !9907
  %2116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5014, align 8, !dbg !9907
  store %struct.rtx_def* %2116, %struct.rtx_def** %op15010, align 8, !dbg !9906
  call void @llvm.dbg.declare(metadata i32* %opmode, metadata !9908, metadata !DIExpression()), !dbg !9909
  %2117 = load %struct.rtx_def*, %struct.rtx_def** %op05005, align 8, !dbg !9910
  %2118 = bitcast %struct.rtx_def* %2117 to i32*, !dbg !9910
  %bf.load5015 = load i32, i32* %2118, align 8, !dbg !9910
  %bf.lshr5016 = lshr i32 %bf.load5015, 16, !dbg !9910
  %bf.clear5017 = and i32 %bf.lshr5016, 255, !dbg !9910
  store i32 %bf.clear5017, i32* %opmode, align 4, !dbg !9909
  call void @llvm.dbg.declare(metadata i32* %elt_size, metadata !9911, metadata !DIExpression()), !dbg !9912
  %2119 = load i32, i32* %opmode, align 4, !dbg !9913
  %idxprom5018 = zext i32 %2119 to i64, !dbg !9913
  %arrayidx5019 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5018, !dbg !9913
  %2120 = load i8, i8* %arrayidx5019, align 1, !dbg !9913
  %conv5020 = zext i8 %2120 to i32, !dbg !9913
  %idxprom5021 = zext i32 %conv5020 to i64, !dbg !9913
  %arrayidx5022 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5021, !dbg !9913
  %2121 = load i8, i8* %arrayidx5022, align 1, !dbg !9913
  %conv5023 = zext i8 %2121 to i16, !dbg !9913
  %conv5024 = zext i16 %conv5023 to i32, !dbg !9913
  store i32 %conv5024, i32* %elt_size, align 4, !dbg !9912
  call void @llvm.dbg.declare(metadata i32* %n_elts, metadata !9914, metadata !DIExpression()), !dbg !9915
  %2122 = load i32, i32* %opmode, align 4, !dbg !9916
  %idxprom5025 = zext i32 %2122 to i64, !dbg !9916
  %arrayidx5026 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5025, !dbg !9916
  %2123 = load i8, i8* %arrayidx5026, align 1, !dbg !9916
  %conv5027 = zext i8 %2123 to i16, !dbg !9916
  %conv5028 = zext i16 %conv5027 to i32, !dbg !9916
  %2124 = load i32, i32* %elt_size, align 4, !dbg !9917
  %div = sdiv i32 %conv5028, %2124, !dbg !9918
  store i32 %div, i32* %n_elts, align 4, !dbg !9915
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9919, metadata !DIExpression()), !dbg !9920
  %2125 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !9921
  %u5029 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2125, i32 0, i32 1, !dbg !9921
  %fld5030 = bitcast %union.u* %u5029 to [1 x %union.rtunion_def]*, !dbg !9921
  %arrayidx5031 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5030, i64 0, i64 0, !dbg !9921
  %rt_rtvec5032 = bitcast %union.rtunion_def* %arrayidx5031 to %struct.rtvec_def**, !dbg !9921
  %2126 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5032, align 8, !dbg !9921
  %elem5033 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2126, i32 0, i32 1, !dbg !9921
  %arrayidx5034 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5033, i64 0, i64 0, !dbg !9921
  %2127 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5034, align 8, !dbg !9921
  %u5035 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2127, i32 0, i32 1, !dbg !9921
  %hwint5036 = bitcast %union.u* %u5035 to [1 x i64]*, !dbg !9921
  %arrayidx5037 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint5036, i64 0, i64 0, !dbg !9921
  %2128 = load i64, i64* %arrayidx5037, align 8, !dbg !9921
  %conv5038 = trunc i64 %2128 to i32, !dbg !9921
  store i32 %conv5038, i32* %i, align 4, !dbg !9920
  call void @llvm.dbg.declare(metadata i32* %elem5039, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %vec, metadata !9924, metadata !DIExpression()), !dbg !9925
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp_op, metadata !9926, metadata !DIExpression()), !dbg !9927
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp5040, metadata !9928, metadata !DIExpression()), !dbg !9929
  %2129 = load %struct.rtx_def*, %struct.rtx_def** %op15010, align 8, !dbg !9930
  %2130 = bitcast %struct.rtx_def* %2129 to i32*, !dbg !9930
  %bf.load5041 = load i32, i32* %2130, align 8, !dbg !9930
  %bf.clear5042 = and i32 %bf.load5041, 65535, !dbg !9930
  %cmp5043 = icmp eq i32 %bf.clear5042, 15, !dbg !9930
  br i1 %cmp5043, label %cond.false5046, label %cond.true5045, !dbg !9930

cond.true5045:                                    ; preds = %if.then5004
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2891, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9930
  br label %cond.end5047, !dbg !9930

cond.false5046:                                   ; preds = %if.then5004
  br label %cond.end5047, !dbg !9930

cond.end5047:                                     ; preds = %cond.false5046, %cond.true5045
  %cond5048 = phi i32 [ 0, %cond.true5045 ], [ 0, %cond.false5046 ], !dbg !9930
  %2131 = load i32, i32* %i, align 4, !dbg !9931
  %2132 = load i32, i32* %n_elts, align 4, !dbg !9931
  %cmp5049 = icmp slt i32 %2131, %2132, !dbg !9931
  br i1 %cmp5049, label %cond.false5052, label %cond.true5051, !dbg !9931

cond.true5051:                                    ; preds = %cond.end5047
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2892, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9931
  br label %cond.end5053, !dbg !9931

cond.false5052:                                   ; preds = %cond.end5047
  br label %cond.end5053, !dbg !9931

cond.end5053:                                     ; preds = %cond.false5052, %cond.true5051
  %cond5054 = phi i32 [ 0, %cond.true5051 ], [ 0, %cond.false5052 ], !dbg !9931
  %2133 = load %struct.rtx_def*, %struct.rtx_def** %op15010, align 8, !dbg !9932
  %u5055 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2133, i32 0, i32 1, !dbg !9932
  %fld5056 = bitcast %union.u* %u5055 to [1 x %union.rtunion_def]*, !dbg !9932
  %arrayidx5057 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5056, i64 0, i64 0, !dbg !9932
  %rt_rtvec5058 = bitcast %union.rtunion_def* %arrayidx5057 to %struct.rtvec_def**, !dbg !9932
  %2134 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5058, align 8, !dbg !9932
  %elem5059 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2134, i32 0, i32 1, !dbg !9932
  %2135 = load i32, i32* %i, align 4, !dbg !9932
  %idxprom5060 = sext i32 %2135 to i64, !dbg !9932
  %arrayidx5061 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5059, i64 0, i64 %idxprom5060, !dbg !9932
  %2136 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5061, align 8, !dbg !9932
  %u5062 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2136, i32 0, i32 1, !dbg !9932
  %hwint5063 = bitcast %union.u* %u5062 to [1 x i64]*, !dbg !9932
  %arrayidx5064 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint5063, i64 0, i64 0, !dbg !9932
  %2137 = load i64, i64* %arrayidx5064, align 8, !dbg !9932
  %conv5065 = trunc i64 %2137 to i32, !dbg !9932
  store i32 %conv5065, i32* %elem5039, align 4, !dbg !9933
  %2138 = load %struct.rtx_def*, %struct.rtx_def** %op05005, align 8, !dbg !9934
  %2139 = bitcast %struct.rtx_def* %2138 to i32*, !dbg !9934
  %bf.load5066 = load i32, i32* %2139, align 8, !dbg !9934
  %bf.clear5067 = and i32 %bf.load5066, 65535, !dbg !9934
  %cmp5068 = icmp eq i32 %bf.clear5067, 125, !dbg !9936
  br i1 %cmp5068, label %if.then5070, label %if.else5198, !dbg !9937

if.then5070:                                      ; preds = %cond.end5053
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op00, metadata !9938, metadata !DIExpression()), !dbg !9940
  %2140 = load %struct.rtx_def*, %struct.rtx_def** %op05005, align 8, !dbg !9941
  %u5071 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2140, i32 0, i32 1, !dbg !9941
  %fld5072 = bitcast %union.u* %u5071 to [1 x %union.rtunion_def]*, !dbg !9941
  %arrayidx5073 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5072, i64 0, i64 0, !dbg !9941
  %rt_rtx5074 = bitcast %union.rtunion_def* %arrayidx5073 to %struct.rtx_def**, !dbg !9941
  %2141 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5074, align 8, !dbg !9941
  store %struct.rtx_def* %2141, %struct.rtx_def** %op00, align 8, !dbg !9940
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op01, metadata !9942, metadata !DIExpression()), !dbg !9943
  %2142 = load %struct.rtx_def*, %struct.rtx_def** %op05005, align 8, !dbg !9944
  %u5075 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2142, i32 0, i32 1, !dbg !9944
  %fld5076 = bitcast %union.u* %u5075 to [1 x %union.rtunion_def]*, !dbg !9944
  %arrayidx5077 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5076, i64 0, i64 1, !dbg !9944
  %rt_rtx5078 = bitcast %union.rtunion_def* %arrayidx5077 to %struct.rtx_def**, !dbg !9944
  %2143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5078, align 8, !dbg !9944
  store %struct.rtx_def* %2143, %struct.rtx_def** %op01, align 8, !dbg !9943
  call void @llvm.dbg.declare(metadata i32* %mode00, metadata !9945, metadata !DIExpression()), !dbg !9946
  call void @llvm.dbg.declare(metadata i32* %mode01, metadata !9947, metadata !DIExpression()), !dbg !9948
  call void @llvm.dbg.declare(metadata i32* %n_elts00, metadata !9949, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.declare(metadata i32* %n_elts01, metadata !9951, metadata !DIExpression()), !dbg !9952
  %2144 = load %struct.rtx_def*, %struct.rtx_def** %op00, align 8, !dbg !9953
  %2145 = bitcast %struct.rtx_def* %2144 to i32*, !dbg !9953
  %bf.load5079 = load i32, i32* %2145, align 8, !dbg !9953
  %bf.lshr5080 = lshr i32 %bf.load5079, 16, !dbg !9953
  %bf.clear5081 = and i32 %bf.lshr5080, 255, !dbg !9953
  store i32 %bf.clear5081, i32* %mode00, align 4, !dbg !9954
  %2146 = load %struct.rtx_def*, %struct.rtx_def** %op01, align 8, !dbg !9955
  %2147 = bitcast %struct.rtx_def* %2146 to i32*, !dbg !9955
  %bf.load5082 = load i32, i32* %2147, align 8, !dbg !9955
  %bf.lshr5083 = lshr i32 %bf.load5082, 16, !dbg !9955
  %bf.clear5084 = and i32 %bf.lshr5083, 255, !dbg !9955
  store i32 %bf.clear5084, i32* %mode01, align 4, !dbg !9956
  %2148 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5085 = zext i32 %2148 to i64, !dbg !9957
  %arrayidx5086 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5085, !dbg !9957
  %2149 = load i8, i8* %arrayidx5086, align 1, !dbg !9957
  %conv5087 = zext i8 %2149 to i32, !dbg !9957
  %cmp5088 = icmp eq i32 %conv5087, 12, !dbg !9957
  br i1 %cmp5088, label %if.then5120, label %lor.lhs.false5090, !dbg !9957

lor.lhs.false5090:                                ; preds = %if.then5070
  %2150 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5091 = zext i32 %2150 to i64, !dbg !9957
  %arrayidx5092 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5091, !dbg !9957
  %2151 = load i8, i8* %arrayidx5092, align 1, !dbg !9957
  %conv5093 = zext i8 %2151 to i32, !dbg !9957
  %cmp5094 = icmp eq i32 %conv5093, 17, !dbg !9957
  br i1 %cmp5094, label %if.then5120, label %lor.lhs.false5096, !dbg !9957

lor.lhs.false5096:                                ; preds = %lor.lhs.false5090
  %2152 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5097 = zext i32 %2152 to i64, !dbg !9957
  %arrayidx5098 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5097, !dbg !9957
  %2153 = load i8, i8* %arrayidx5098, align 1, !dbg !9957
  %conv5099 = zext i8 %2153 to i32, !dbg !9957
  %cmp5100 = icmp eq i32 %conv5099, 13, !dbg !9957
  br i1 %cmp5100, label %if.then5120, label %lor.lhs.false5102, !dbg !9957

lor.lhs.false5102:                                ; preds = %lor.lhs.false5096
  %2154 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5103 = zext i32 %2154 to i64, !dbg !9957
  %arrayidx5104 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5103, !dbg !9957
  %2155 = load i8, i8* %arrayidx5104, align 1, !dbg !9957
  %conv5105 = zext i8 %2155 to i32, !dbg !9957
  %cmp5106 = icmp eq i32 %conv5105, 14, !dbg !9957
  br i1 %cmp5106, label %if.then5120, label %lor.lhs.false5108, !dbg !9957

lor.lhs.false5108:                                ; preds = %lor.lhs.false5102
  %2156 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5109 = zext i32 %2156 to i64, !dbg !9957
  %arrayidx5110 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5109, !dbg !9957
  %2157 = load i8, i8* %arrayidx5110, align 1, !dbg !9957
  %conv5111 = zext i8 %2157 to i32, !dbg !9957
  %cmp5112 = icmp eq i32 %conv5111, 15, !dbg !9957
  br i1 %cmp5112, label %if.then5120, label %lor.lhs.false5114, !dbg !9957

lor.lhs.false5114:                                ; preds = %lor.lhs.false5108
  %2158 = load i32, i32* %mode00, align 4, !dbg !9957
  %idxprom5115 = zext i32 %2158 to i64, !dbg !9957
  %arrayidx5116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5115, !dbg !9957
  %2159 = load i8, i8* %arrayidx5116, align 1, !dbg !9957
  %conv5117 = zext i8 %2159 to i32, !dbg !9957
  %cmp5118 = icmp eq i32 %conv5117, 16, !dbg !9957
  br i1 %cmp5118, label %if.then5120, label %if.else5133, !dbg !9959

if.then5120:                                      ; preds = %lor.lhs.false5114, %lor.lhs.false5108, %lor.lhs.false5102, %lor.lhs.false5096, %lor.lhs.false5090, %if.then5070
  %2160 = load i32, i32* %mode00, align 4, !dbg !9960
  %idxprom5121 = zext i32 %2160 to i64, !dbg !9960
  %arrayidx5122 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5121, !dbg !9960
  %2161 = load i8, i8* %arrayidx5122, align 1, !dbg !9960
  %conv5123 = zext i8 %2161 to i32, !dbg !9960
  %idxprom5124 = zext i32 %conv5123 to i64, !dbg !9960
  %arrayidx5125 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5124, !dbg !9960
  %2162 = load i8, i8* %arrayidx5125, align 1, !dbg !9960
  %conv5126 = zext i8 %2162 to i16, !dbg !9960
  %conv5127 = zext i16 %conv5126 to i32, !dbg !9960
  store i32 %conv5127, i32* %elt_size, align 4, !dbg !9962
  %2163 = load i32, i32* %mode00, align 4, !dbg !9963
  %idxprom5128 = zext i32 %2163 to i64, !dbg !9963
  %arrayidx5129 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5128, !dbg !9963
  %2164 = load i8, i8* %arrayidx5129, align 1, !dbg !9963
  %conv5130 = zext i8 %2164 to i16, !dbg !9963
  %conv5131 = zext i16 %conv5130 to i32, !dbg !9963
  %2165 = load i32, i32* %elt_size, align 4, !dbg !9964
  %div5132 = sdiv i32 %conv5131, %2165, !dbg !9965
  store i32 %div5132, i32* %n_elts00, align 4, !dbg !9966
  br label %if.end5134, !dbg !9967

if.else5133:                                      ; preds = %lor.lhs.false5114
  store i32 1, i32* %n_elts00, align 4, !dbg !9968
  br label %if.end5134

if.end5134:                                       ; preds = %if.else5133, %if.then5120
  %2166 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5135 = zext i32 %2166 to i64, !dbg !9969
  %arrayidx5136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5135, !dbg !9969
  %2167 = load i8, i8* %arrayidx5136, align 1, !dbg !9969
  %conv5137 = zext i8 %2167 to i32, !dbg !9969
  %cmp5138 = icmp eq i32 %conv5137, 12, !dbg !9969
  br i1 %cmp5138, label %if.then5170, label %lor.lhs.false5140, !dbg !9969

lor.lhs.false5140:                                ; preds = %if.end5134
  %2168 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5141 = zext i32 %2168 to i64, !dbg !9969
  %arrayidx5142 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5141, !dbg !9969
  %2169 = load i8, i8* %arrayidx5142, align 1, !dbg !9969
  %conv5143 = zext i8 %2169 to i32, !dbg !9969
  %cmp5144 = icmp eq i32 %conv5143, 17, !dbg !9969
  br i1 %cmp5144, label %if.then5170, label %lor.lhs.false5146, !dbg !9969

lor.lhs.false5146:                                ; preds = %lor.lhs.false5140
  %2170 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5147 = zext i32 %2170 to i64, !dbg !9969
  %arrayidx5148 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5147, !dbg !9969
  %2171 = load i8, i8* %arrayidx5148, align 1, !dbg !9969
  %conv5149 = zext i8 %2171 to i32, !dbg !9969
  %cmp5150 = icmp eq i32 %conv5149, 13, !dbg !9969
  br i1 %cmp5150, label %if.then5170, label %lor.lhs.false5152, !dbg !9969

lor.lhs.false5152:                                ; preds = %lor.lhs.false5146
  %2172 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5153 = zext i32 %2172 to i64, !dbg !9969
  %arrayidx5154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5153, !dbg !9969
  %2173 = load i8, i8* %arrayidx5154, align 1, !dbg !9969
  %conv5155 = zext i8 %2173 to i32, !dbg !9969
  %cmp5156 = icmp eq i32 %conv5155, 14, !dbg !9969
  br i1 %cmp5156, label %if.then5170, label %lor.lhs.false5158, !dbg !9969

lor.lhs.false5158:                                ; preds = %lor.lhs.false5152
  %2174 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5159 = zext i32 %2174 to i64, !dbg !9969
  %arrayidx5160 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5159, !dbg !9969
  %2175 = load i8, i8* %arrayidx5160, align 1, !dbg !9969
  %conv5161 = zext i8 %2175 to i32, !dbg !9969
  %cmp5162 = icmp eq i32 %conv5161, 15, !dbg !9969
  br i1 %cmp5162, label %if.then5170, label %lor.lhs.false5164, !dbg !9969

lor.lhs.false5164:                                ; preds = %lor.lhs.false5158
  %2176 = load i32, i32* %mode01, align 4, !dbg !9969
  %idxprom5165 = zext i32 %2176 to i64, !dbg !9969
  %arrayidx5166 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5165, !dbg !9969
  %2177 = load i8, i8* %arrayidx5166, align 1, !dbg !9969
  %conv5167 = zext i8 %2177 to i32, !dbg !9969
  %cmp5168 = icmp eq i32 %conv5167, 16, !dbg !9969
  br i1 %cmp5168, label %if.then5170, label %if.else5183, !dbg !9971

if.then5170:                                      ; preds = %lor.lhs.false5164, %lor.lhs.false5158, %lor.lhs.false5152, %lor.lhs.false5146, %lor.lhs.false5140, %if.end5134
  %2178 = load i32, i32* %mode01, align 4, !dbg !9972
  %idxprom5171 = zext i32 %2178 to i64, !dbg !9972
  %arrayidx5172 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5171, !dbg !9972
  %2179 = load i8, i8* %arrayidx5172, align 1, !dbg !9972
  %conv5173 = zext i8 %2179 to i32, !dbg !9972
  %idxprom5174 = zext i32 %conv5173 to i64, !dbg !9972
  %arrayidx5175 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5174, !dbg !9972
  %2180 = load i8, i8* %arrayidx5175, align 1, !dbg !9972
  %conv5176 = zext i8 %2180 to i16, !dbg !9972
  %conv5177 = zext i16 %conv5176 to i32, !dbg !9972
  store i32 %conv5177, i32* %elt_size, align 4, !dbg !9974
  %2181 = load i32, i32* %mode01, align 4, !dbg !9975
  %idxprom5178 = zext i32 %2181 to i64, !dbg !9975
  %arrayidx5179 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5178, !dbg !9975
  %2182 = load i8, i8* %arrayidx5179, align 1, !dbg !9975
  %conv5180 = zext i8 %2182 to i16, !dbg !9975
  %conv5181 = zext i16 %conv5180 to i32, !dbg !9975
  %2183 = load i32, i32* %elt_size, align 4, !dbg !9976
  %div5182 = sdiv i32 %conv5181, %2183, !dbg !9977
  store i32 %div5182, i32* %n_elts01, align 4, !dbg !9978
  br label %if.end5184, !dbg !9979

if.else5183:                                      ; preds = %lor.lhs.false5164
  store i32 1, i32* %n_elts01, align 4, !dbg !9980
  br label %if.end5184

if.end5184:                                       ; preds = %if.else5183, %if.then5170
  %2184 = load i32, i32* %n_elts, align 4, !dbg !9981
  %2185 = load i32, i32* %n_elts00, align 4, !dbg !9981
  %2186 = load i32, i32* %n_elts01, align 4, !dbg !9981
  %add5185 = add nsw i32 %2185, %2186, !dbg !9981
  %cmp5186 = icmp eq i32 %2184, %add5185, !dbg !9981
  br i1 %cmp5186, label %cond.false5189, label %cond.true5188, !dbg !9981

cond.true5188:                                    ; preds = %if.end5184
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2926, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !9981
  br label %cond.end5190, !dbg !9981

cond.false5189:                                   ; preds = %if.end5184
  br label %cond.end5190, !dbg !9981

cond.end5190:                                     ; preds = %cond.false5189, %cond.true5188
  %cond5191 = phi i32 [ 0, %cond.true5188 ], [ 0, %cond.false5189 ], !dbg !9981
  %2187 = load i32, i32* %elem5039, align 4, !dbg !9982
  %2188 = load i32, i32* %n_elts01, align 4, !dbg !9984
  %cmp5192 = icmp slt i32 %2187, %2188, !dbg !9985
  br i1 %cmp5192, label %if.then5194, label %if.else5195, !dbg !9986

if.then5194:                                      ; preds = %cond.end5190
  %2189 = load %struct.rtx_def*, %struct.rtx_def** %op00, align 8, !dbg !9987
  store %struct.rtx_def* %2189, %struct.rtx_def** %tmp_op, align 8, !dbg !9988
  br label %if.end5197, !dbg !9989

if.else5195:                                      ; preds = %cond.end5190
  %2190 = load %struct.rtx_def*, %struct.rtx_def** %op01, align 8, !dbg !9990
  store %struct.rtx_def* %2190, %struct.rtx_def** %tmp_op, align 8, !dbg !9992
  %2191 = load i32, i32* %n_elts00, align 4, !dbg !9993
  %2192 = load i32, i32* %elem5039, align 4, !dbg !9994
  %sub5196 = sub nsw i32 %2192, %2191, !dbg !9994
  store i32 %sub5196, i32* %elem5039, align 4, !dbg !9994
  br label %if.end5197

if.end5197:                                       ; preds = %if.else5195, %if.then5194
  br label %if.end5199, !dbg !9995

if.else5198:                                      ; preds = %cond.end5053
  %2193 = load %struct.rtx_def*, %struct.rtx_def** %op05005, align 8, !dbg !9996
  store %struct.rtx_def* %2193, %struct.rtx_def** %tmp_op, align 8, !dbg !9997
  br label %if.end5199

if.end5199:                                       ; preds = %if.else5198, %if.end5197
  %call5200 = call %struct.rtvec_def* @rtvec_alloc(i32 1), !dbg !9998
  store %struct.rtvec_def* %call5200, %struct.rtvec_def** %vec, align 8, !dbg !9999
  %2194 = load i32, i32* %elem5039, align 4, !dbg !10000
  %conv5201 = sext i32 %2194 to i64, !dbg !10000
  %call5202 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv5201), !dbg !10000
  %2195 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !10001
  %elem5203 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2195, i32 0, i32 1, !dbg !10001
  %arrayidx5204 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5203, i64 0, i64 0, !dbg !10001
  store %struct.rtx_def* %call5202, %struct.rtx_def** %arrayidx5204, align 8, !dbg !10002
  %2196 = load i32, i32* %code.addr, align 4, !dbg !10003
  %2197 = load i32, i32* %mode.addr, align 4, !dbg !10003
  %2198 = load %struct.rtx_def*, %struct.rtx_def** %tmp_op, align 8, !dbg !10003
  %2199 = load %struct.rtvec_def*, %struct.rtvec_def** %vec, align 8, !dbg !10003
  %call5205 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %2199), !dbg !10003
  %call5206 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %2196, i32 %2197, %struct.rtx_def* %2198, %struct.rtx_def* %call5205), !dbg !10003
  store %struct.rtx_def* %call5206, %struct.rtx_def** %tmp5040, align 8, !dbg !10004
  %2200 = load %struct.rtx_def*, %struct.rtx_def** %tmp5040, align 8, !dbg !10005
  store %struct.rtx_def* %2200, %struct.rtx_def** %retval, align 8, !dbg !10006
  br label %return, !dbg !10006

if.end5207:                                       ; preds = %if.end4999
  %2201 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10007
  %2202 = bitcast %struct.rtx_def* %2201 to i32*, !dbg !10007
  %bf.load5208 = load i32, i32* %2202, align 8, !dbg !10007
  %bf.clear5209 = and i32 %bf.load5208, 65535, !dbg !10007
  %cmp5210 = icmp eq i32 %bf.clear5209, 126, !dbg !10009
  br i1 %cmp5210, label %land.lhs.true5212, label %if.end5227, !dbg !10010

land.lhs.true5212:                                ; preds = %if.end5207
  %2203 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10011
  %u5213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2203, i32 0, i32 1, !dbg !10011
  %fld5214 = bitcast %union.u* %u5213 to [1 x %union.rtunion_def]*, !dbg !10011
  %arrayidx5215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5214, i64 0, i64 0, !dbg !10011
  %rt_rtx5216 = bitcast %union.rtunion_def* %arrayidx5215 to %struct.rtx_def**, !dbg !10011
  %2204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5216, align 8, !dbg !10011
  %2205 = bitcast %struct.rtx_def* %2204 to i32*, !dbg !10011
  %bf.load5217 = load i32, i32* %2205, align 8, !dbg !10011
  %bf.lshr5218 = lshr i32 %bf.load5217, 16, !dbg !10011
  %bf.clear5219 = and i32 %bf.lshr5218, 255, !dbg !10011
  %2206 = load i32, i32* %mode.addr, align 4, !dbg !10012
  %cmp5220 = icmp eq i32 %bf.clear5219, %2206, !dbg !10013
  br i1 %cmp5220, label %if.then5222, label %if.end5227, !dbg !10014

if.then5222:                                      ; preds = %land.lhs.true5212
  %2207 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10015
  %u5223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2207, i32 0, i32 1, !dbg !10015
  %fld5224 = bitcast %union.u* %u5223 to [1 x %union.rtunion_def]*, !dbg !10015
  %arrayidx5225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5224, i64 0, i64 0, !dbg !10015
  %rt_rtx5226 = bitcast %union.rtunion_def* %arrayidx5225 to %struct.rtx_def**, !dbg !10015
  %2208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5226, align 8, !dbg !10015
  store %struct.rtx_def* %2208, %struct.rtx_def** %retval, align 8, !dbg !10016
  br label %return, !dbg !10016

if.end5227:                                       ; preds = %land.lhs.true5212, %if.end5207
  br label %if.end5378, !dbg !10017

if.else5228:                                      ; preds = %lor.lhs.false4873, %lor.lhs.false4867, %lor.lhs.false4861, %lor.lhs.false4855, %lor.lhs.false4849, %sw.bb4843
  %2209 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2210 = bitcast %struct.rtx_def* %2209 to i32*, !dbg !10018
  %bf.load5229 = load i32, i32* %2210, align 8, !dbg !10018
  %bf.lshr5230 = lshr i32 %bf.load5229, 16, !dbg !10018
  %bf.clear5231 = and i32 %bf.lshr5230, 255, !dbg !10018
  %idxprom5232 = zext i32 %bf.clear5231 to i64, !dbg !10018
  %arrayidx5233 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5232, !dbg !10018
  %2211 = load i8, i8* %arrayidx5233, align 1, !dbg !10018
  %conv5234 = zext i8 %2211 to i32, !dbg !10018
  %cmp5235 = icmp eq i32 %conv5234, 12, !dbg !10018
  br i1 %cmp5235, label %cond.false5283, label %lor.lhs.false5237, !dbg !10018

lor.lhs.false5237:                                ; preds = %if.else5228
  %2212 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2213 = bitcast %struct.rtx_def* %2212 to i32*, !dbg !10018
  %bf.load5238 = load i32, i32* %2213, align 8, !dbg !10018
  %bf.lshr5239 = lshr i32 %bf.load5238, 16, !dbg !10018
  %bf.clear5240 = and i32 %bf.lshr5239, 255, !dbg !10018
  %idxprom5241 = zext i32 %bf.clear5240 to i64, !dbg !10018
  %arrayidx5242 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5241, !dbg !10018
  %2214 = load i8, i8* %arrayidx5242, align 1, !dbg !10018
  %conv5243 = zext i8 %2214 to i32, !dbg !10018
  %cmp5244 = icmp eq i32 %conv5243, 17, !dbg !10018
  br i1 %cmp5244, label %cond.false5283, label %lor.lhs.false5246, !dbg !10018

lor.lhs.false5246:                                ; preds = %lor.lhs.false5237
  %2215 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2216 = bitcast %struct.rtx_def* %2215 to i32*, !dbg !10018
  %bf.load5247 = load i32, i32* %2216, align 8, !dbg !10018
  %bf.lshr5248 = lshr i32 %bf.load5247, 16, !dbg !10018
  %bf.clear5249 = and i32 %bf.lshr5248, 255, !dbg !10018
  %idxprom5250 = zext i32 %bf.clear5249 to i64, !dbg !10018
  %arrayidx5251 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5250, !dbg !10018
  %2217 = load i8, i8* %arrayidx5251, align 1, !dbg !10018
  %conv5252 = zext i8 %2217 to i32, !dbg !10018
  %cmp5253 = icmp eq i32 %conv5252, 13, !dbg !10018
  br i1 %cmp5253, label %cond.false5283, label %lor.lhs.false5255, !dbg !10018

lor.lhs.false5255:                                ; preds = %lor.lhs.false5246
  %2218 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2219 = bitcast %struct.rtx_def* %2218 to i32*, !dbg !10018
  %bf.load5256 = load i32, i32* %2219, align 8, !dbg !10018
  %bf.lshr5257 = lshr i32 %bf.load5256, 16, !dbg !10018
  %bf.clear5258 = and i32 %bf.lshr5257, 255, !dbg !10018
  %idxprom5259 = zext i32 %bf.clear5258 to i64, !dbg !10018
  %arrayidx5260 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5259, !dbg !10018
  %2220 = load i8, i8* %arrayidx5260, align 1, !dbg !10018
  %conv5261 = zext i8 %2220 to i32, !dbg !10018
  %cmp5262 = icmp eq i32 %conv5261, 14, !dbg !10018
  br i1 %cmp5262, label %cond.false5283, label %lor.lhs.false5264, !dbg !10018

lor.lhs.false5264:                                ; preds = %lor.lhs.false5255
  %2221 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2222 = bitcast %struct.rtx_def* %2221 to i32*, !dbg !10018
  %bf.load5265 = load i32, i32* %2222, align 8, !dbg !10018
  %bf.lshr5266 = lshr i32 %bf.load5265, 16, !dbg !10018
  %bf.clear5267 = and i32 %bf.lshr5266, 255, !dbg !10018
  %idxprom5268 = zext i32 %bf.clear5267 to i64, !dbg !10018
  %arrayidx5269 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5268, !dbg !10018
  %2223 = load i8, i8* %arrayidx5269, align 1, !dbg !10018
  %conv5270 = zext i8 %2223 to i32, !dbg !10018
  %cmp5271 = icmp eq i32 %conv5270, 15, !dbg !10018
  br i1 %cmp5271, label %cond.false5283, label %lor.lhs.false5273, !dbg !10018

lor.lhs.false5273:                                ; preds = %lor.lhs.false5264
  %2224 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10018
  %2225 = bitcast %struct.rtx_def* %2224 to i32*, !dbg !10018
  %bf.load5274 = load i32, i32* %2225, align 8, !dbg !10018
  %bf.lshr5275 = lshr i32 %bf.load5274, 16, !dbg !10018
  %bf.clear5276 = and i32 %bf.lshr5275, 255, !dbg !10018
  %idxprom5277 = zext i32 %bf.clear5276 to i64, !dbg !10018
  %arrayidx5278 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5277, !dbg !10018
  %2226 = load i8, i8* %arrayidx5278, align 1, !dbg !10018
  %conv5279 = zext i8 %2226 to i32, !dbg !10018
  %cmp5280 = icmp eq i32 %conv5279, 16, !dbg !10018
  br i1 %cmp5280, label %cond.false5283, label %cond.true5282, !dbg !10018

cond.true5282:                                    ; preds = %lor.lhs.false5273
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2954, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10018
  br label %cond.end5284, !dbg !10018

cond.false5283:                                   ; preds = %lor.lhs.false5273, %lor.lhs.false5264, %lor.lhs.false5255, %lor.lhs.false5246, %lor.lhs.false5237, %if.else5228
  br label %cond.end5284, !dbg !10018

cond.end5284:                                     ; preds = %cond.false5283, %cond.true5282
  %cond5285 = phi i32 [ 0, %cond.true5282 ], [ 0, %cond.false5283 ], !dbg !10018
  %2227 = load i32, i32* %mode.addr, align 4, !dbg !10020
  %idxprom5286 = zext i32 %2227 to i64, !dbg !10020
  %arrayidx5287 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5286, !dbg !10020
  %2228 = load i8, i8* %arrayidx5287, align 1, !dbg !10020
  %conv5288 = zext i8 %2228 to i32, !dbg !10020
  %2229 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10020
  %2230 = bitcast %struct.rtx_def* %2229 to i32*, !dbg !10020
  %bf.load5289 = load i32, i32* %2230, align 8, !dbg !10020
  %bf.lshr5290 = lshr i32 %bf.load5289, 16, !dbg !10020
  %bf.clear5291 = and i32 %bf.lshr5290, 255, !dbg !10020
  %idxprom5292 = zext i32 %bf.clear5291 to i64, !dbg !10020
  %arrayidx5293 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5292, !dbg !10020
  %2231 = load i8, i8* %arrayidx5293, align 1, !dbg !10020
  %conv5294 = zext i8 %2231 to i32, !dbg !10020
  %cmp5295 = icmp eq i32 %conv5288, %conv5294, !dbg !10020
  br i1 %cmp5295, label %cond.false5298, label %cond.true5297, !dbg !10020

cond.true5297:                                    ; preds = %cond.end5284
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2956, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10020
  br label %cond.end5299, !dbg !10020

cond.false5298:                                   ; preds = %cond.end5284
  br label %cond.end5299, !dbg !10020

cond.end5299:                                     ; preds = %cond.false5298, %cond.true5297
  %cond5300 = phi i32 [ 0, %cond.true5297 ], [ 0, %cond.false5298 ], !dbg !10020
  %2232 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10021
  %2233 = bitcast %struct.rtx_def* %2232 to i32*, !dbg !10021
  %bf.load5301 = load i32, i32* %2233, align 8, !dbg !10021
  %bf.clear5302 = and i32 %bf.load5301, 65535, !dbg !10021
  %cmp5303 = icmp eq i32 %bf.clear5302, 15, !dbg !10021
  br i1 %cmp5303, label %cond.false5306, label %cond.true5305, !dbg !10021

cond.true5305:                                    ; preds = %cond.end5299
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2957, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10021
  br label %cond.end5307, !dbg !10021

cond.false5306:                                   ; preds = %cond.end5299
  br label %cond.end5307, !dbg !10021

cond.end5307:                                     ; preds = %cond.false5306, %cond.true5305
  %cond5308 = phi i32 [ 0, %cond.true5305 ], [ 0, %cond.false5306 ], !dbg !10021
  %2234 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10022
  %2235 = bitcast %struct.rtx_def* %2234 to i32*, !dbg !10022
  %bf.load5309 = load i32, i32* %2235, align 8, !dbg !10022
  %bf.clear5310 = and i32 %bf.load5309, 65535, !dbg !10022
  %cmp5311 = icmp eq i32 %bf.clear5310, 33, !dbg !10024
  br i1 %cmp5311, label %if.then5313, label %if.end5377, !dbg !10025

if.then5313:                                      ; preds = %cond.end5307
  call void @llvm.dbg.declare(metadata i32* %elt_size5314, metadata !10026, metadata !DIExpression()), !dbg !10028
  %2236 = load i32, i32* %mode.addr, align 4, !dbg !10029
  %idxprom5315 = zext i32 %2236 to i64, !dbg !10029
  %arrayidx5316 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5315, !dbg !10029
  %2237 = load i8, i8* %arrayidx5316, align 1, !dbg !10029
  %conv5317 = zext i8 %2237 to i32, !dbg !10029
  %idxprom5318 = zext i32 %conv5317 to i64, !dbg !10029
  %arrayidx5319 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5318, !dbg !10029
  %2238 = load i8, i8* %arrayidx5319, align 1, !dbg !10029
  %conv5320 = zext i8 %2238 to i16, !dbg !10029
  %conv5321 = zext i16 %conv5320 to i32, !dbg !10029
  store i32 %conv5321, i32* %elt_size5314, align 4, !dbg !10028
  call void @llvm.dbg.declare(metadata i32* %n_elts5322, metadata !10030, metadata !DIExpression()), !dbg !10031
  %2239 = load i32, i32* %mode.addr, align 4, !dbg !10032
  %idxprom5323 = zext i32 %2239 to i64, !dbg !10032
  %arrayidx5324 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5323, !dbg !10032
  %2240 = load i8, i8* %arrayidx5324, align 1, !dbg !10032
  %conv5325 = zext i8 %2240 to i16, !dbg !10032
  %conv5326 = zext i16 %conv5325 to i32, !dbg !10032
  %2241 = load i32, i32* %elt_size5314, align 4, !dbg !10033
  %div5327 = sdiv i32 %conv5326, %2241, !dbg !10034
  store i32 %div5327, i32* %n_elts5322, align 4, !dbg !10031
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v, metadata !10035, metadata !DIExpression()), !dbg !10036
  %2242 = load i32, i32* %n_elts5322, align 4, !dbg !10037
  %call5328 = call %struct.rtvec_def* @rtvec_alloc(i32 %2242), !dbg !10038
  store %struct.rtvec_def* %call5328, %struct.rtvec_def** %v, align 8, !dbg !10036
  call void @llvm.dbg.declare(metadata i32* %i5329, metadata !10039, metadata !DIExpression()), !dbg !10040
  %2243 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10041
  %u5330 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2243, i32 0, i32 1, !dbg !10041
  %fld5331 = bitcast %union.u* %u5330 to [1 x %union.rtunion_def]*, !dbg !10041
  %arrayidx5332 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5331, i64 0, i64 0, !dbg !10041
  %rt_rtvec5333 = bitcast %union.rtunion_def* %arrayidx5332 to %struct.rtvec_def**, !dbg !10041
  %2244 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5333, align 8, !dbg !10041
  %num_elem5334 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2244, i32 0, i32 0, !dbg !10041
  %2245 = load i32, i32* %num_elem5334, align 8, !dbg !10041
  %2246 = load i32, i32* %n_elts5322, align 4, !dbg !10041
  %cmp5335 = icmp eq i32 %2245, %2246, !dbg !10041
  br i1 %cmp5335, label %cond.false5338, label %cond.true5337, !dbg !10041

cond.true5337:                                    ; preds = %if.then5313
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10041
  br label %cond.end5339, !dbg !10041

cond.false5338:                                   ; preds = %if.then5313
  br label %cond.end5339, !dbg !10041

cond.end5339:                                     ; preds = %cond.false5338, %cond.true5337
  %cond5340 = phi i32 [ 0, %cond.true5337 ], [ 0, %cond.false5338 ], !dbg !10041
  store i32 0, i32* %i5329, align 4, !dbg !10042
  br label %for.cond5341, !dbg !10044

for.cond5341:                                     ; preds = %for.inc5373, %cond.end5339
  %2247 = load i32, i32* %i5329, align 4, !dbg !10045
  %2248 = load i32, i32* %n_elts5322, align 4, !dbg !10047
  %cmp5342 = icmp ult i32 %2247, %2248, !dbg !10048
  br i1 %cmp5342, label %for.body5344, label %for.end5375, !dbg !10049

for.body5344:                                     ; preds = %for.cond5341
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x5345, metadata !10050, metadata !DIExpression()), !dbg !10052
  %2249 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10053
  %u5346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2249, i32 0, i32 1, !dbg !10053
  %fld5347 = bitcast %union.u* %u5346 to [1 x %union.rtunion_def]*, !dbg !10053
  %arrayidx5348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5347, i64 0, i64 0, !dbg !10053
  %rt_rtvec5349 = bitcast %union.rtunion_def* %arrayidx5348 to %struct.rtvec_def**, !dbg !10053
  %2250 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5349, align 8, !dbg !10053
  %elem5350 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2250, i32 0, i32 1, !dbg !10053
  %2251 = load i32, i32* %i5329, align 4, !dbg !10053
  %idxprom5351 = zext i32 %2251 to i64, !dbg !10053
  %arrayidx5352 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5350, i64 0, i64 %idxprom5351, !dbg !10053
  %2252 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5352, align 8, !dbg !10053
  store %struct.rtx_def* %2252, %struct.rtx_def** %x5345, align 8, !dbg !10052
  %2253 = load %struct.rtx_def*, %struct.rtx_def** %x5345, align 8, !dbg !10054
  %2254 = bitcast %struct.rtx_def* %2253 to i32*, !dbg !10054
  %bf.load5353 = load i32, i32* %2254, align 8, !dbg !10054
  %bf.clear5354 = and i32 %bf.load5353, 65535, !dbg !10054
  %cmp5355 = icmp eq i32 %bf.clear5354, 30, !dbg !10054
  br i1 %cmp5355, label %cond.false5358, label %cond.true5357, !dbg !10054

cond.true5357:                                    ; preds = %for.body5344
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 2971, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10054
  br label %cond.end5359, !dbg !10054

cond.false5358:                                   ; preds = %for.body5344
  br label %cond.end5359, !dbg !10054

cond.end5359:                                     ; preds = %cond.false5358, %cond.true5357
  %cond5360 = phi i32 [ 0, %cond.true5357 ], [ 0, %cond.false5358 ], !dbg !10054
  %2255 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10055
  %u5361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2255, i32 0, i32 1, !dbg !10055
  %fld5362 = bitcast %union.u* %u5361 to [1 x %union.rtunion_def]*, !dbg !10055
  %arrayidx5363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5362, i64 0, i64 0, !dbg !10055
  %rt_rtvec5364 = bitcast %union.rtunion_def* %arrayidx5363 to %struct.rtvec_def**, !dbg !10055
  %2256 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5364, align 8, !dbg !10055
  %elem5365 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2256, i32 0, i32 1, !dbg !10055
  %2257 = load %struct.rtx_def*, %struct.rtx_def** %x5345, align 8, !dbg !10055
  %u5366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2257, i32 0, i32 1, !dbg !10055
  %hwint5367 = bitcast %union.u* %u5366 to [1 x i64]*, !dbg !10055
  %arrayidx5368 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint5367, i64 0, i64 0, !dbg !10055
  %2258 = load i64, i64* %arrayidx5368, align 8, !dbg !10055
  %arrayidx5369 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5365, i64 0, i64 %2258, !dbg !10055
  %2259 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5369, align 8, !dbg !10055
  %2260 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !10056
  %elem5370 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2260, i32 0, i32 1, !dbg !10056
  %2261 = load i32, i32* %i5329, align 4, !dbg !10056
  %idxprom5371 = zext i32 %2261 to i64, !dbg !10056
  %arrayidx5372 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5370, i64 0, i64 %idxprom5371, !dbg !10056
  store %struct.rtx_def* %2259, %struct.rtx_def** %arrayidx5372, align 8, !dbg !10057
  br label %for.inc5373, !dbg !10058

for.inc5373:                                      ; preds = %cond.end5359
  %2262 = load i32, i32* %i5329, align 4, !dbg !10059
  %inc5374 = add i32 %2262, 1, !dbg !10059
  store i32 %inc5374, i32* %i5329, align 4, !dbg !10059
  br label %for.cond5341, !dbg !10060, !llvm.loop !10061

for.end5375:                                      ; preds = %for.cond5341
  %2263 = load i32, i32* %mode.addr, align 4, !dbg !10063
  %2264 = load %struct.rtvec_def*, %struct.rtvec_def** %v, align 8, !dbg !10064
  %call5376 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %2263, %struct.rtvec_def* %2264), !dbg !10065
  store %struct.rtx_def* %call5376, %struct.rtx_def** %retval, align 8, !dbg !10066
  br label %return, !dbg !10066

if.end5377:                                       ; preds = %cond.end5307
  br label %if.end5378

if.end5378:                                       ; preds = %if.end5377, %if.end5227
  %2265 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10067
  %u5379 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2265, i32 0, i32 1, !dbg !10067
  %fld5380 = bitcast %union.u* %u5379 to [1 x %union.rtunion_def]*, !dbg !10067
  %arrayidx5381 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5380, i64 0, i64 0, !dbg !10067
  %rt_rtvec5382 = bitcast %union.rtunion_def* %arrayidx5381 to %struct.rtvec_def**, !dbg !10067
  %2266 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5382, align 8, !dbg !10067
  %num_elem5383 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2266, i32 0, i32 0, !dbg !10067
  %2267 = load i32, i32* %num_elem5383, align 8, !dbg !10067
  %cmp5384 = icmp eq i32 %2267, 1, !dbg !10069
  br i1 %cmp5384, label %land.lhs.true5386, label %if.end5464, !dbg !10070

land.lhs.true5386:                                ; preds = %if.end5378
  %2268 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10071
  %u5387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2268, i32 0, i32 1, !dbg !10071
  %fld5388 = bitcast %union.u* %u5387 to [1 x %union.rtunion_def]*, !dbg !10071
  %arrayidx5389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5388, i64 0, i64 0, !dbg !10071
  %rt_rtvec5390 = bitcast %union.rtunion_def* %arrayidx5389 to %struct.rtvec_def**, !dbg !10071
  %2269 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5390, align 8, !dbg !10071
  %elem5391 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2269, i32 0, i32 1, !dbg !10071
  %arrayidx5392 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5391, i64 0, i64 0, !dbg !10071
  %2270 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5392, align 8, !dbg !10071
  %2271 = bitcast %struct.rtx_def* %2270 to i32*, !dbg !10071
  %bf.load5393 = load i32, i32* %2271, align 8, !dbg !10071
  %bf.clear5394 = and i32 %bf.load5393, 65535, !dbg !10071
  %cmp5395 = icmp eq i32 %bf.clear5394, 30, !dbg !10071
  br i1 %cmp5395, label %land.lhs.true5397, label %if.end5464, !dbg !10072

land.lhs.true5397:                                ; preds = %land.lhs.true5386
  %2272 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10073
  %2273 = bitcast %struct.rtx_def* %2272 to i32*, !dbg !10073
  %bf.load5398 = load i32, i32* %2273, align 8, !dbg !10073
  %bf.clear5399 = and i32 %bf.load5398, 65535, !dbg !10073
  %cmp5400 = icmp eq i32 %bf.clear5399, 125, !dbg !10074
  br i1 %cmp5400, label %if.then5402, label %if.end5464, !dbg !10075

if.then5402:                                      ; preds = %land.lhs.true5397
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vec5403, metadata !10076, metadata !DIExpression()), !dbg !10078
  %2274 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10079
  store %struct.rtx_def* %2274, %struct.rtx_def** %vec5403, align 8, !dbg !10078
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !10080, metadata !DIExpression()), !dbg !10081
  %2275 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10082
  %u5404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2275, i32 0, i32 1, !dbg !10082
  %fld5405 = bitcast %union.u* %u5404 to [1 x %union.rtunion_def]*, !dbg !10082
  %arrayidx5406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5405, i64 0, i64 0, !dbg !10082
  %rt_rtvec5407 = bitcast %union.rtunion_def* %arrayidx5406 to %struct.rtvec_def**, !dbg !10082
  %2276 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5407, align 8, !dbg !10082
  %elem5408 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2276, i32 0, i32 1, !dbg !10082
  %arrayidx5409 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5408, i64 0, i64 0, !dbg !10082
  %2277 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5409, align 8, !dbg !10082
  %u5410 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2277, i32 0, i32 1, !dbg !10082
  %hwint5411 = bitcast %union.u* %u5410 to [1 x i64]*, !dbg !10082
  %arrayidx5412 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint5411, i64 0, i64 0, !dbg !10082
  %2278 = load i64, i64* %arrayidx5412, align 8, !dbg !10082
  %2279 = load i32, i32* %mode.addr, align 4, !dbg !10083
  %idxprom5413 = zext i32 %2279 to i64, !dbg !10083
  %arrayidx5414 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5413, !dbg !10083
  %2280 = load i8, i8* %arrayidx5414, align 1, !dbg !10083
  %conv5415 = zext i8 %2280 to i16, !dbg !10083
  %conv5416 = zext i16 %conv5415 to i64, !dbg !10083
  %mul5417 = mul nsw i64 %2278, %conv5416, !dbg !10084
  %conv5418 = trunc i64 %mul5417 to i32, !dbg !10082
  store i32 %conv5418, i32* %offset, align 4, !dbg !10081
  br label %while.cond, !dbg !10085

while.cond:                                       ; preds = %if.end5455, %if.then5402
  %2281 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10086
  %2282 = bitcast %struct.rtx_def* %2281 to i32*, !dbg !10086
  %bf.load5419 = load i32, i32* %2282, align 8, !dbg !10086
  %bf.lshr5420 = lshr i32 %bf.load5419, 16, !dbg !10086
  %bf.clear5421 = and i32 %bf.lshr5420, 255, !dbg !10086
  %2283 = load i32, i32* %mode.addr, align 4, !dbg !10087
  %cmp5422 = icmp ne i32 %bf.clear5421, %2283, !dbg !10088
  br i1 %cmp5422, label %land.rhs, label %land.end, !dbg !10089

land.rhs:                                         ; preds = %while.cond
  %2284 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10090
  %2285 = bitcast %struct.rtx_def* %2284 to i32*, !dbg !10090
  %bf.load5424 = load i32, i32* %2285, align 8, !dbg !10090
  %bf.clear5425 = and i32 %bf.load5424, 65535, !dbg !10090
  %cmp5426 = icmp eq i32 %bf.clear5425, 125, !dbg !10091
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %2286 = phi i1 [ false, %while.cond ], [ %cmp5426, %land.rhs ], !dbg !10092
  br i1 %2286, label %while.body, label %while.end, !dbg !10085

while.body:                                       ; preds = %land.end
  call void @llvm.dbg.declare(metadata i64* %vec_size, metadata !10093, metadata !DIExpression()), !dbg !10095
  %2287 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10096
  %u5428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2287, i32 0, i32 1, !dbg !10096
  %fld5429 = bitcast %union.u* %u5428 to [1 x %union.rtunion_def]*, !dbg !10096
  %arrayidx5430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5429, i64 0, i64 0, !dbg !10096
  %rt_rtx5431 = bitcast %union.rtunion_def* %arrayidx5430 to %struct.rtx_def**, !dbg !10096
  %2288 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5431, align 8, !dbg !10096
  %2289 = bitcast %struct.rtx_def* %2288 to i32*, !dbg !10096
  %bf.load5432 = load i32, i32* %2289, align 8, !dbg !10096
  %bf.lshr5433 = lshr i32 %bf.load5432, 16, !dbg !10096
  %bf.clear5434 = and i32 %bf.lshr5433, 255, !dbg !10096
  %idxprom5435 = zext i32 %bf.clear5434 to i64, !dbg !10096
  %arrayidx5436 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5435, !dbg !10096
  %2290 = load i8, i8* %arrayidx5436, align 1, !dbg !10096
  %conv5437 = zext i8 %2290 to i16, !dbg !10096
  %conv5438 = zext i16 %conv5437 to i64, !dbg !10096
  store i64 %conv5438, i64* %vec_size, align 8, !dbg !10095
  %2291 = load i32, i32* %offset, align 4, !dbg !10097
  %conv5439 = sext i32 %2291 to i64, !dbg !10097
  %2292 = load i64, i64* %vec_size, align 8, !dbg !10099
  %cmp5440 = icmp slt i64 %conv5439, %2292, !dbg !10100
  br i1 %cmp5440, label %if.then5442, label %if.else5447, !dbg !10101

if.then5442:                                      ; preds = %while.body
  %2293 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10102
  %u5443 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2293, i32 0, i32 1, !dbg !10102
  %fld5444 = bitcast %union.u* %u5443 to [1 x %union.rtunion_def]*, !dbg !10102
  %arrayidx5445 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5444, i64 0, i64 0, !dbg !10102
  %rt_rtx5446 = bitcast %union.rtunion_def* %arrayidx5445 to %struct.rtx_def**, !dbg !10102
  %2294 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5446, align 8, !dbg !10102
  store %struct.rtx_def* %2294, %struct.rtx_def** %vec5403, align 8, !dbg !10103
  br label %if.end5455, !dbg !10104

if.else5447:                                      ; preds = %while.body
  %2295 = load i64, i64* %vec_size, align 8, !dbg !10105
  %2296 = load i32, i32* %offset, align 4, !dbg !10107
  %conv5448 = sext i32 %2296 to i64, !dbg !10107
  %sub5449 = sub nsw i64 %conv5448, %2295, !dbg !10107
  %conv5450 = trunc i64 %sub5449 to i32, !dbg !10107
  store i32 %conv5450, i32* %offset, align 4, !dbg !10107
  %2297 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10108
  %u5451 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2297, i32 0, i32 1, !dbg !10108
  %fld5452 = bitcast %union.u* %u5451 to [1 x %union.rtunion_def]*, !dbg !10108
  %arrayidx5453 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5452, i64 0, i64 1, !dbg !10108
  %rt_rtx5454 = bitcast %union.rtunion_def* %arrayidx5453 to %struct.rtx_def**, !dbg !10108
  %2298 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5454, align 8, !dbg !10108
  store %struct.rtx_def* %2298, %struct.rtx_def** %vec5403, align 8, !dbg !10109
  br label %if.end5455

if.end5455:                                       ; preds = %if.else5447, %if.then5442
  %2299 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10110
  %call5456 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %2299), !dbg !10111
  store %struct.rtx_def* %call5456, %struct.rtx_def** %vec5403, align 8, !dbg !10112
  br label %while.cond, !dbg !10085, !llvm.loop !10113

while.end:                                        ; preds = %land.end
  %2300 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10115
  %2301 = bitcast %struct.rtx_def* %2300 to i32*, !dbg !10115
  %bf.load5457 = load i32, i32* %2301, align 8, !dbg !10115
  %bf.lshr5458 = lshr i32 %bf.load5457, 16, !dbg !10115
  %bf.clear5459 = and i32 %bf.lshr5458, 255, !dbg !10115
  %2302 = load i32, i32* %mode.addr, align 4, !dbg !10117
  %cmp5460 = icmp eq i32 %bf.clear5459, %2302, !dbg !10118
  br i1 %cmp5460, label %if.then5462, label %if.end5463, !dbg !10119

if.then5462:                                      ; preds = %while.end
  %2303 = load %struct.rtx_def*, %struct.rtx_def** %vec5403, align 8, !dbg !10120
  store %struct.rtx_def* %2303, %struct.rtx_def** %retval, align 8, !dbg !10121
  br label %return, !dbg !10121

if.end5463:                                       ; preds = %while.end
  br label %if.end5464, !dbg !10122

if.end5464:                                       ; preds = %if.end5463, %land.lhs.true5397, %land.lhs.true5386, %if.end5378
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10123
  br label %return, !dbg !10123

sw.bb5465:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %op0_mode, metadata !10124, metadata !DIExpression()), !dbg !10126
  %2304 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10127
  %2305 = bitcast %struct.rtx_def* %2304 to i32*, !dbg !10127
  %bf.load5466 = load i32, i32* %2305, align 8, !dbg !10127
  %bf.lshr5467 = lshr i32 %bf.load5466, 16, !dbg !10127
  %bf.clear5468 = and i32 %bf.lshr5467, 255, !dbg !10127
  %cmp5469 = icmp ne i32 %bf.clear5468, 0, !dbg !10128
  br i1 %cmp5469, label %cond.true5471, label %cond.false5475, !dbg !10127

cond.true5471:                                    ; preds = %sw.bb5465
  %2306 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10129
  %2307 = bitcast %struct.rtx_def* %2306 to i32*, !dbg !10129
  %bf.load5472 = load i32, i32* %2307, align 8, !dbg !10129
  %bf.lshr5473 = lshr i32 %bf.load5472, 16, !dbg !10129
  %bf.clear5474 = and i32 %bf.lshr5473, 255, !dbg !10129
  br label %cond.end5479, !dbg !10127

cond.false5475:                                   ; preds = %sw.bb5465
  %2308 = load i32, i32* %mode.addr, align 4, !dbg !10130
  %idxprom5476 = zext i32 %2308 to i64, !dbg !10130
  %arrayidx5477 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5476, !dbg !10130
  %2309 = load i8, i8* %arrayidx5477, align 1, !dbg !10130
  %conv5478 = zext i8 %2309 to i32, !dbg !10130
  br label %cond.end5479, !dbg !10127

cond.end5479:                                     ; preds = %cond.false5475, %cond.true5471
  %cond5480 = phi i32 [ %bf.clear5474, %cond.true5471 ], [ %conv5478, %cond.false5475 ], !dbg !10127
  store i32 %cond5480, i32* %op0_mode, align 4, !dbg !10126
  call void @llvm.dbg.declare(metadata i32* %op1_mode, metadata !10131, metadata !DIExpression()), !dbg !10132
  %2310 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10133
  %2311 = bitcast %struct.rtx_def* %2310 to i32*, !dbg !10133
  %bf.load5481 = load i32, i32* %2311, align 8, !dbg !10133
  %bf.lshr5482 = lshr i32 %bf.load5481, 16, !dbg !10133
  %bf.clear5483 = and i32 %bf.lshr5482, 255, !dbg !10133
  %cmp5484 = icmp ne i32 %bf.clear5483, 0, !dbg !10134
  br i1 %cmp5484, label %cond.true5486, label %cond.false5490, !dbg !10133

cond.true5486:                                    ; preds = %cond.end5479
  %2312 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10135
  %2313 = bitcast %struct.rtx_def* %2312 to i32*, !dbg !10135
  %bf.load5487 = load i32, i32* %2313, align 8, !dbg !10135
  %bf.lshr5488 = lshr i32 %bf.load5487, 16, !dbg !10135
  %bf.clear5489 = and i32 %bf.lshr5488, 255, !dbg !10135
  br label %cond.end5494, !dbg !10133

cond.false5490:                                   ; preds = %cond.end5479
  %2314 = load i32, i32* %mode.addr, align 4, !dbg !10136
  %idxprom5491 = zext i32 %2314 to i64, !dbg !10136
  %arrayidx5492 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5491, !dbg !10136
  %2315 = load i8, i8* %arrayidx5492, align 1, !dbg !10136
  %conv5493 = zext i8 %2315 to i32, !dbg !10136
  br label %cond.end5494, !dbg !10133

cond.end5494:                                     ; preds = %cond.false5490, %cond.true5486
  %cond5495 = phi i32 [ %bf.clear5489, %cond.true5486 ], [ %conv5493, %cond.false5490 ], !dbg !10133
  store i32 %cond5495, i32* %op1_mode, align 4, !dbg !10132
  %2316 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5496 = zext i32 %2316 to i64, !dbg !10137
  %arrayidx5497 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5496, !dbg !10137
  %2317 = load i8, i8* %arrayidx5497, align 1, !dbg !10137
  %conv5498 = zext i8 %2317 to i32, !dbg !10137
  %cmp5499 = icmp eq i32 %conv5498, 12, !dbg !10137
  br i1 %cmp5499, label %cond.false5532, label %lor.lhs.false5501, !dbg !10137

lor.lhs.false5501:                                ; preds = %cond.end5494
  %2318 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5502 = zext i32 %2318 to i64, !dbg !10137
  %arrayidx5503 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5502, !dbg !10137
  %2319 = load i8, i8* %arrayidx5503, align 1, !dbg !10137
  %conv5504 = zext i8 %2319 to i32, !dbg !10137
  %cmp5505 = icmp eq i32 %conv5504, 17, !dbg !10137
  br i1 %cmp5505, label %cond.false5532, label %lor.lhs.false5507, !dbg !10137

lor.lhs.false5507:                                ; preds = %lor.lhs.false5501
  %2320 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5508 = zext i32 %2320 to i64, !dbg !10137
  %arrayidx5509 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5508, !dbg !10137
  %2321 = load i8, i8* %arrayidx5509, align 1, !dbg !10137
  %conv5510 = zext i8 %2321 to i32, !dbg !10137
  %cmp5511 = icmp eq i32 %conv5510, 13, !dbg !10137
  br i1 %cmp5511, label %cond.false5532, label %lor.lhs.false5513, !dbg !10137

lor.lhs.false5513:                                ; preds = %lor.lhs.false5507
  %2322 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5514 = zext i32 %2322 to i64, !dbg !10137
  %arrayidx5515 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5514, !dbg !10137
  %2323 = load i8, i8* %arrayidx5515, align 1, !dbg !10137
  %conv5516 = zext i8 %2323 to i32, !dbg !10137
  %cmp5517 = icmp eq i32 %conv5516, 14, !dbg !10137
  br i1 %cmp5517, label %cond.false5532, label %lor.lhs.false5519, !dbg !10137

lor.lhs.false5519:                                ; preds = %lor.lhs.false5513
  %2324 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5520 = zext i32 %2324 to i64, !dbg !10137
  %arrayidx5521 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5520, !dbg !10137
  %2325 = load i8, i8* %arrayidx5521, align 1, !dbg !10137
  %conv5522 = zext i8 %2325 to i32, !dbg !10137
  %cmp5523 = icmp eq i32 %conv5522, 15, !dbg !10137
  br i1 %cmp5523, label %cond.false5532, label %lor.lhs.false5525, !dbg !10137

lor.lhs.false5525:                                ; preds = %lor.lhs.false5519
  %2326 = load i32, i32* %mode.addr, align 4, !dbg !10137
  %idxprom5526 = zext i32 %2326 to i64, !dbg !10137
  %arrayidx5527 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5526, !dbg !10137
  %2327 = load i8, i8* %arrayidx5527, align 1, !dbg !10137
  %conv5528 = zext i8 %2327 to i32, !dbg !10137
  %cmp5529 = icmp eq i32 %conv5528, 16, !dbg !10137
  br i1 %cmp5529, label %cond.false5532, label %cond.true5531, !dbg !10137

cond.true5531:                                    ; preds = %lor.lhs.false5525
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3016, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10137
  br label %cond.end5533, !dbg !10137

cond.false5532:                                   ; preds = %lor.lhs.false5525, %lor.lhs.false5519, %lor.lhs.false5513, %lor.lhs.false5507, %lor.lhs.false5501, %cond.end5494
  br label %cond.end5533, !dbg !10137

cond.end5533:                                     ; preds = %cond.false5532, %cond.true5531
  %cond5534 = phi i32 [ 0, %cond.true5531 ], [ 0, %cond.false5532 ], !dbg !10137
  %2328 = load i32, i32* %op0_mode, align 4, !dbg !10138
  %idxprom5535 = zext i32 %2328 to i64, !dbg !10138
  %arrayidx5536 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5535, !dbg !10138
  %2329 = load i8, i8* %arrayidx5536, align 1, !dbg !10138
  %conv5537 = zext i8 %2329 to i16, !dbg !10138
  %conv5538 = zext i16 %conv5537 to i32, !dbg !10138
  %2330 = load i32, i32* %op1_mode, align 4, !dbg !10138
  %idxprom5539 = zext i32 %2330 to i64, !dbg !10138
  %arrayidx5540 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5539, !dbg !10138
  %2331 = load i8, i8* %arrayidx5540, align 1, !dbg !10138
  %conv5541 = zext i8 %2331 to i16, !dbg !10138
  %conv5542 = zext i16 %conv5541 to i32, !dbg !10138
  %add5543 = add nsw i32 %conv5538, %conv5542, !dbg !10138
  %2332 = load i32, i32* %mode.addr, align 4, !dbg !10138
  %idxprom5544 = zext i32 %2332 to i64, !dbg !10138
  %arrayidx5545 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5544, !dbg !10138
  %2333 = load i8, i8* %arrayidx5545, align 1, !dbg !10138
  %conv5546 = zext i8 %2333 to i16, !dbg !10138
  %conv5547 = zext i16 %conv5546 to i32, !dbg !10138
  %cmp5548 = icmp eq i32 %add5543, %conv5547, !dbg !10138
  br i1 %cmp5548, label %cond.false5551, label %cond.true5550, !dbg !10138

cond.true5550:                                    ; preds = %cond.end5533
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3018, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10138
  br label %cond.end5552, !dbg !10138

cond.false5551:                                   ; preds = %cond.end5533
  br label %cond.end5552, !dbg !10138

cond.end5552:                                     ; preds = %cond.false5551, %cond.true5550
  %cond5553 = phi i32 [ 0, %cond.true5550 ], [ 0, %cond.false5551 ], !dbg !10138
  %2334 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5554 = zext i32 %2334 to i64, !dbg !10139
  %arrayidx5555 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5554, !dbg !10139
  %2335 = load i8, i8* %arrayidx5555, align 1, !dbg !10139
  %conv5556 = zext i8 %2335 to i32, !dbg !10139
  %cmp5557 = icmp eq i32 %conv5556, 12, !dbg !10139
  br i1 %cmp5557, label %if.then5589, label %lor.lhs.false5559, !dbg !10139

lor.lhs.false5559:                                ; preds = %cond.end5552
  %2336 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5560 = zext i32 %2336 to i64, !dbg !10139
  %arrayidx5561 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5560, !dbg !10139
  %2337 = load i8, i8* %arrayidx5561, align 1, !dbg !10139
  %conv5562 = zext i8 %2337 to i32, !dbg !10139
  %cmp5563 = icmp eq i32 %conv5562, 17, !dbg !10139
  br i1 %cmp5563, label %if.then5589, label %lor.lhs.false5565, !dbg !10139

lor.lhs.false5565:                                ; preds = %lor.lhs.false5559
  %2338 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5566 = zext i32 %2338 to i64, !dbg !10139
  %arrayidx5567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5566, !dbg !10139
  %2339 = load i8, i8* %arrayidx5567, align 1, !dbg !10139
  %conv5568 = zext i8 %2339 to i32, !dbg !10139
  %cmp5569 = icmp eq i32 %conv5568, 13, !dbg !10139
  br i1 %cmp5569, label %if.then5589, label %lor.lhs.false5571, !dbg !10139

lor.lhs.false5571:                                ; preds = %lor.lhs.false5565
  %2340 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5572 = zext i32 %2340 to i64, !dbg !10139
  %arrayidx5573 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5572, !dbg !10139
  %2341 = load i8, i8* %arrayidx5573, align 1, !dbg !10139
  %conv5574 = zext i8 %2341 to i32, !dbg !10139
  %cmp5575 = icmp eq i32 %conv5574, 14, !dbg !10139
  br i1 %cmp5575, label %if.then5589, label %lor.lhs.false5577, !dbg !10139

lor.lhs.false5577:                                ; preds = %lor.lhs.false5571
  %2342 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5578 = zext i32 %2342 to i64, !dbg !10139
  %arrayidx5579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5578, !dbg !10139
  %2343 = load i8, i8* %arrayidx5579, align 1, !dbg !10139
  %conv5580 = zext i8 %2343 to i32, !dbg !10139
  %cmp5581 = icmp eq i32 %conv5580, 15, !dbg !10139
  br i1 %cmp5581, label %if.then5589, label %lor.lhs.false5583, !dbg !10139

lor.lhs.false5583:                                ; preds = %lor.lhs.false5577
  %2344 = load i32, i32* %op0_mode, align 4, !dbg !10139
  %idxprom5584 = zext i32 %2344 to i64, !dbg !10139
  %arrayidx5585 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5584, !dbg !10139
  %2345 = load i8, i8* %arrayidx5585, align 1, !dbg !10139
  %conv5586 = zext i8 %2345 to i32, !dbg !10139
  %cmp5587 = icmp eq i32 %conv5586, 16, !dbg !10139
  br i1 %cmp5587, label %if.then5589, label %if.else5602, !dbg !10141

if.then5589:                                      ; preds = %lor.lhs.false5583, %lor.lhs.false5577, %lor.lhs.false5571, %lor.lhs.false5565, %lor.lhs.false5559, %cond.end5552
  %2346 = load i32, i32* %mode.addr, align 4, !dbg !10142
  %idxprom5590 = zext i32 %2346 to i64, !dbg !10142
  %arrayidx5591 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5590, !dbg !10142
  %2347 = load i8, i8* %arrayidx5591, align 1, !dbg !10142
  %conv5592 = zext i8 %2347 to i32, !dbg !10142
  %2348 = load i32, i32* %op0_mode, align 4, !dbg !10142
  %idxprom5593 = zext i32 %2348 to i64, !dbg !10142
  %arrayidx5594 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5593, !dbg !10142
  %2349 = load i8, i8* %arrayidx5594, align 1, !dbg !10142
  %conv5595 = zext i8 %2349 to i32, !dbg !10142
  %cmp5596 = icmp eq i32 %conv5592, %conv5595, !dbg !10142
  br i1 %cmp5596, label %cond.false5599, label %cond.true5598, !dbg !10142

cond.true5598:                                    ; preds = %if.then5589
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3022, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10142
  br label %cond.end5600, !dbg !10142

cond.false5599:                                   ; preds = %if.then5589
  br label %cond.end5600, !dbg !10142

cond.end5600:                                     ; preds = %cond.false5599, %cond.true5598
  %cond5601 = phi i32 [ 0, %cond.true5598 ], [ 0, %cond.false5599 ], !dbg !10142
  br label %if.end5612, !dbg !10142

if.else5602:                                      ; preds = %lor.lhs.false5583
  %2350 = load i32, i32* %mode.addr, align 4, !dbg !10143
  %idxprom5603 = zext i32 %2350 to i64, !dbg !10143
  %arrayidx5604 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5603, !dbg !10143
  %2351 = load i8, i8* %arrayidx5604, align 1, !dbg !10143
  %conv5605 = zext i8 %2351 to i32, !dbg !10143
  %2352 = load i32, i32* %op0_mode, align 4, !dbg !10143
  %cmp5606 = icmp eq i32 %conv5605, %2352, !dbg !10143
  br i1 %cmp5606, label %cond.false5609, label %cond.true5608, !dbg !10143

cond.true5608:                                    ; preds = %if.else5602
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3024, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10143
  br label %cond.end5610, !dbg !10143

cond.false5609:                                   ; preds = %if.else5602
  br label %cond.end5610, !dbg !10143

cond.end5610:                                     ; preds = %cond.false5609, %cond.true5608
  %cond5611 = phi i32 [ 0, %cond.true5608 ], [ 0, %cond.false5609 ], !dbg !10143
  br label %if.end5612

if.end5612:                                       ; preds = %cond.end5610, %cond.end5600
  %2353 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5613 = zext i32 %2353 to i64, !dbg !10144
  %arrayidx5614 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5613, !dbg !10144
  %2354 = load i8, i8* %arrayidx5614, align 1, !dbg !10144
  %conv5615 = zext i8 %2354 to i32, !dbg !10144
  %cmp5616 = icmp eq i32 %conv5615, 12, !dbg !10144
  br i1 %cmp5616, label %if.then5648, label %lor.lhs.false5618, !dbg !10144

lor.lhs.false5618:                                ; preds = %if.end5612
  %2355 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5619 = zext i32 %2355 to i64, !dbg !10144
  %arrayidx5620 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5619, !dbg !10144
  %2356 = load i8, i8* %arrayidx5620, align 1, !dbg !10144
  %conv5621 = zext i8 %2356 to i32, !dbg !10144
  %cmp5622 = icmp eq i32 %conv5621, 17, !dbg !10144
  br i1 %cmp5622, label %if.then5648, label %lor.lhs.false5624, !dbg !10144

lor.lhs.false5624:                                ; preds = %lor.lhs.false5618
  %2357 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5625 = zext i32 %2357 to i64, !dbg !10144
  %arrayidx5626 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5625, !dbg !10144
  %2358 = load i8, i8* %arrayidx5626, align 1, !dbg !10144
  %conv5627 = zext i8 %2358 to i32, !dbg !10144
  %cmp5628 = icmp eq i32 %conv5627, 13, !dbg !10144
  br i1 %cmp5628, label %if.then5648, label %lor.lhs.false5630, !dbg !10144

lor.lhs.false5630:                                ; preds = %lor.lhs.false5624
  %2359 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5631 = zext i32 %2359 to i64, !dbg !10144
  %arrayidx5632 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5631, !dbg !10144
  %2360 = load i8, i8* %arrayidx5632, align 1, !dbg !10144
  %conv5633 = zext i8 %2360 to i32, !dbg !10144
  %cmp5634 = icmp eq i32 %conv5633, 14, !dbg !10144
  br i1 %cmp5634, label %if.then5648, label %lor.lhs.false5636, !dbg !10144

lor.lhs.false5636:                                ; preds = %lor.lhs.false5630
  %2361 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5637 = zext i32 %2361 to i64, !dbg !10144
  %arrayidx5638 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5637, !dbg !10144
  %2362 = load i8, i8* %arrayidx5638, align 1, !dbg !10144
  %conv5639 = zext i8 %2362 to i32, !dbg !10144
  %cmp5640 = icmp eq i32 %conv5639, 15, !dbg !10144
  br i1 %cmp5640, label %if.then5648, label %lor.lhs.false5642, !dbg !10144

lor.lhs.false5642:                                ; preds = %lor.lhs.false5636
  %2363 = load i32, i32* %op1_mode, align 4, !dbg !10144
  %idxprom5643 = zext i32 %2363 to i64, !dbg !10144
  %arrayidx5644 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5643, !dbg !10144
  %2364 = load i8, i8* %arrayidx5644, align 1, !dbg !10144
  %conv5645 = zext i8 %2364 to i32, !dbg !10144
  %cmp5646 = icmp eq i32 %conv5645, 16, !dbg !10144
  br i1 %cmp5646, label %if.then5648, label %if.else5661, !dbg !10146

if.then5648:                                      ; preds = %lor.lhs.false5642, %lor.lhs.false5636, %lor.lhs.false5630, %lor.lhs.false5624, %lor.lhs.false5618, %if.end5612
  %2365 = load i32, i32* %mode.addr, align 4, !dbg !10147
  %idxprom5649 = zext i32 %2365 to i64, !dbg !10147
  %arrayidx5650 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5649, !dbg !10147
  %2366 = load i8, i8* %arrayidx5650, align 1, !dbg !10147
  %conv5651 = zext i8 %2366 to i32, !dbg !10147
  %2367 = load i32, i32* %op1_mode, align 4, !dbg !10147
  %idxprom5652 = zext i32 %2367 to i64, !dbg !10147
  %arrayidx5653 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5652, !dbg !10147
  %2368 = load i8, i8* %arrayidx5653, align 1, !dbg !10147
  %conv5654 = zext i8 %2368 to i32, !dbg !10147
  %cmp5655 = icmp eq i32 %conv5651, %conv5654, !dbg !10147
  br i1 %cmp5655, label %cond.false5658, label %cond.true5657, !dbg !10147

cond.true5657:                                    ; preds = %if.then5648
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3028, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10147
  br label %cond.end5659, !dbg !10147

cond.false5658:                                   ; preds = %if.then5648
  br label %cond.end5659, !dbg !10147

cond.end5659:                                     ; preds = %cond.false5658, %cond.true5657
  %cond5660 = phi i32 [ 0, %cond.true5657 ], [ 0, %cond.false5658 ], !dbg !10147
  br label %if.end5671, !dbg !10147

if.else5661:                                      ; preds = %lor.lhs.false5642
  %2369 = load i32, i32* %mode.addr, align 4, !dbg !10148
  %idxprom5662 = zext i32 %2369 to i64, !dbg !10148
  %arrayidx5663 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5662, !dbg !10148
  %2370 = load i8, i8* %arrayidx5663, align 1, !dbg !10148
  %conv5664 = zext i8 %2370 to i32, !dbg !10148
  %2371 = load i32, i32* %op1_mode, align 4, !dbg !10148
  %cmp5665 = icmp eq i32 %conv5664, %2371, !dbg !10148
  br i1 %cmp5665, label %cond.false5668, label %cond.true5667, !dbg !10148

cond.true5667:                                    ; preds = %if.else5661
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3030, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10148
  br label %cond.end5669, !dbg !10148

cond.false5668:                                   ; preds = %if.else5661
  br label %cond.end5669, !dbg !10148

cond.end5669:                                     ; preds = %cond.false5668, %cond.true5667
  %cond5670 = phi i32 [ 0, %cond.true5667 ], [ 0, %cond.false5668 ], !dbg !10148
  br label %if.end5671

if.end5671:                                       ; preds = %cond.end5669, %cond.end5659
  %2372 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10149
  %2373 = bitcast %struct.rtx_def* %2372 to i32*, !dbg !10149
  %bf.load5672 = load i32, i32* %2373, align 8, !dbg !10149
  %bf.clear5673 = and i32 %bf.load5672, 65535, !dbg !10149
  %cmp5674 = icmp eq i32 %bf.clear5673, 33, !dbg !10151
  br i1 %cmp5674, label %land.lhs.true5686, label %lor.lhs.false5676, !dbg !10152

lor.lhs.false5676:                                ; preds = %if.end5671
  %2374 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10153
  %2375 = bitcast %struct.rtx_def* %2374 to i32*, !dbg !10153
  %bf.load5677 = load i32, i32* %2375, align 8, !dbg !10153
  %bf.clear5678 = and i32 %bf.load5677, 65535, !dbg !10153
  %cmp5679 = icmp eq i32 %bf.clear5678, 30, !dbg !10153
  br i1 %cmp5679, label %land.lhs.true5686, label %lor.lhs.false5681, !dbg !10154

lor.lhs.false5681:                                ; preds = %lor.lhs.false5676
  %2376 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10155
  %2377 = bitcast %struct.rtx_def* %2376 to i32*, !dbg !10155
  %bf.load5682 = load i32, i32* %2377, align 8, !dbg !10155
  %bf.clear5683 = and i32 %bf.load5682, 65535, !dbg !10155
  %cmp5684 = icmp eq i32 %bf.clear5683, 32, !dbg !10156
  br i1 %cmp5684, label %land.lhs.true5686, label %if.end5877, !dbg !10157

land.lhs.true5686:                                ; preds = %lor.lhs.false5681, %lor.lhs.false5676, %if.end5671
  %2378 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10158
  %2379 = bitcast %struct.rtx_def* %2378 to i32*, !dbg !10158
  %bf.load5687 = load i32, i32* %2379, align 8, !dbg !10158
  %bf.clear5688 = and i32 %bf.load5687, 65535, !dbg !10158
  %cmp5689 = icmp eq i32 %bf.clear5688, 33, !dbg !10159
  br i1 %cmp5689, label %if.then5701, label %lor.lhs.false5691, !dbg !10160

lor.lhs.false5691:                                ; preds = %land.lhs.true5686
  %2380 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10161
  %2381 = bitcast %struct.rtx_def* %2380 to i32*, !dbg !10161
  %bf.load5692 = load i32, i32* %2381, align 8, !dbg !10161
  %bf.clear5693 = and i32 %bf.load5692, 65535, !dbg !10161
  %cmp5694 = icmp eq i32 %bf.clear5693, 30, !dbg !10161
  br i1 %cmp5694, label %if.then5701, label %lor.lhs.false5696, !dbg !10162

lor.lhs.false5696:                                ; preds = %lor.lhs.false5691
  %2382 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10163
  %2383 = bitcast %struct.rtx_def* %2382 to i32*, !dbg !10163
  %bf.load5697 = load i32, i32* %2383, align 8, !dbg !10163
  %bf.clear5698 = and i32 %bf.load5697, 65535, !dbg !10163
  %cmp5699 = icmp eq i32 %bf.clear5698, 32, !dbg !10164
  br i1 %cmp5699, label %if.then5701, label %if.end5877, !dbg !10165

if.then5701:                                      ; preds = %lor.lhs.false5696, %lor.lhs.false5691, %land.lhs.true5686
  call void @llvm.dbg.declare(metadata i32* %elt_size5702, metadata !10166, metadata !DIExpression()), !dbg !10168
  %2384 = load i32, i32* %mode.addr, align 4, !dbg !10169
  %idxprom5703 = zext i32 %2384 to i64, !dbg !10169
  %arrayidx5704 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom5703, !dbg !10169
  %2385 = load i8, i8* %arrayidx5704, align 1, !dbg !10169
  %conv5705 = zext i8 %2385 to i32, !dbg !10169
  %idxprom5706 = zext i32 %conv5705 to i64, !dbg !10169
  %arrayidx5707 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5706, !dbg !10169
  %2386 = load i8, i8* %arrayidx5707, align 1, !dbg !10169
  %conv5708 = zext i8 %2386 to i16, !dbg !10169
  %conv5709 = zext i16 %conv5708 to i32, !dbg !10169
  store i32 %conv5709, i32* %elt_size5702, align 4, !dbg !10168
  call void @llvm.dbg.declare(metadata i32* %n_elts5710, metadata !10170, metadata !DIExpression()), !dbg !10171
  %2387 = load i32, i32* %mode.addr, align 4, !dbg !10172
  %idxprom5711 = zext i32 %2387 to i64, !dbg !10172
  %arrayidx5712 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5711, !dbg !10172
  %2388 = load i8, i8* %arrayidx5712, align 1, !dbg !10172
  %conv5713 = zext i8 %2388 to i16, !dbg !10172
  %conv5714 = zext i16 %conv5713 to i32, !dbg !10172
  %2389 = load i32, i32* %elt_size5702, align 4, !dbg !10173
  %div5715 = sdiv i32 %conv5714, %2389, !dbg !10174
  store i32 %div5715, i32* %n_elts5710, align 4, !dbg !10171
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %v5716, metadata !10175, metadata !DIExpression()), !dbg !10176
  %2390 = load i32, i32* %n_elts5710, align 4, !dbg !10177
  %call5717 = call %struct.rtvec_def* @rtvec_alloc(i32 %2390), !dbg !10178
  store %struct.rtvec_def* %call5717, %struct.rtvec_def** %v5716, align 8, !dbg !10176
  call void @llvm.dbg.declare(metadata i32* %i5718, metadata !10179, metadata !DIExpression()), !dbg !10180
  call void @llvm.dbg.declare(metadata i32* %in_n_elts, metadata !10181, metadata !DIExpression()), !dbg !10182
  store i32 1, i32* %in_n_elts, align 4, !dbg !10182
  %2391 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5719 = zext i32 %2391 to i64, !dbg !10183
  %arrayidx5720 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5719, !dbg !10183
  %2392 = load i8, i8* %arrayidx5720, align 1, !dbg !10183
  %conv5721 = zext i8 %2392 to i32, !dbg !10183
  %cmp5722 = icmp eq i32 %conv5721, 12, !dbg !10183
  br i1 %cmp5722, label %if.then5754, label %lor.lhs.false5724, !dbg !10183

lor.lhs.false5724:                                ; preds = %if.then5701
  %2393 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5725 = zext i32 %2393 to i64, !dbg !10183
  %arrayidx5726 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5725, !dbg !10183
  %2394 = load i8, i8* %arrayidx5726, align 1, !dbg !10183
  %conv5727 = zext i8 %2394 to i32, !dbg !10183
  %cmp5728 = icmp eq i32 %conv5727, 17, !dbg !10183
  br i1 %cmp5728, label %if.then5754, label %lor.lhs.false5730, !dbg !10183

lor.lhs.false5730:                                ; preds = %lor.lhs.false5724
  %2395 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5731 = zext i32 %2395 to i64, !dbg !10183
  %arrayidx5732 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5731, !dbg !10183
  %2396 = load i8, i8* %arrayidx5732, align 1, !dbg !10183
  %conv5733 = zext i8 %2396 to i32, !dbg !10183
  %cmp5734 = icmp eq i32 %conv5733, 13, !dbg !10183
  br i1 %cmp5734, label %if.then5754, label %lor.lhs.false5736, !dbg !10183

lor.lhs.false5736:                                ; preds = %lor.lhs.false5730
  %2397 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5737 = zext i32 %2397 to i64, !dbg !10183
  %arrayidx5738 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5737, !dbg !10183
  %2398 = load i8, i8* %arrayidx5738, align 1, !dbg !10183
  %conv5739 = zext i8 %2398 to i32, !dbg !10183
  %cmp5740 = icmp eq i32 %conv5739, 14, !dbg !10183
  br i1 %cmp5740, label %if.then5754, label %lor.lhs.false5742, !dbg !10183

lor.lhs.false5742:                                ; preds = %lor.lhs.false5736
  %2399 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5743 = zext i32 %2399 to i64, !dbg !10183
  %arrayidx5744 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5743, !dbg !10183
  %2400 = load i8, i8* %arrayidx5744, align 1, !dbg !10183
  %conv5745 = zext i8 %2400 to i32, !dbg !10183
  %cmp5746 = icmp eq i32 %conv5745, 15, !dbg !10183
  br i1 %cmp5746, label %if.then5754, label %lor.lhs.false5748, !dbg !10183

lor.lhs.false5748:                                ; preds = %lor.lhs.false5742
  %2401 = load i32, i32* %op0_mode, align 4, !dbg !10183
  %idxprom5749 = zext i32 %2401 to i64, !dbg !10183
  %arrayidx5750 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5749, !dbg !10183
  %2402 = load i8, i8* %arrayidx5750, align 1, !dbg !10183
  %conv5751 = zext i8 %2402 to i32, !dbg !10183
  %cmp5752 = icmp eq i32 %conv5751, 16, !dbg !10183
  br i1 %cmp5752, label %if.then5754, label %if.end5760, !dbg !10185

if.then5754:                                      ; preds = %lor.lhs.false5748, %lor.lhs.false5742, %lor.lhs.false5736, %lor.lhs.false5730, %lor.lhs.false5724, %if.then5701
  %2403 = load i32, i32* %op0_mode, align 4, !dbg !10186
  %idxprom5755 = zext i32 %2403 to i64, !dbg !10186
  %arrayidx5756 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom5755, !dbg !10186
  %2404 = load i8, i8* %arrayidx5756, align 1, !dbg !10186
  %conv5757 = zext i8 %2404 to i16, !dbg !10186
  %conv5758 = zext i16 %conv5757 to i32, !dbg !10186
  %2405 = load i32, i32* %elt_size5702, align 4, !dbg !10187
  %div5759 = sdiv i32 %conv5758, %2405, !dbg !10188
  store i32 %div5759, i32* %in_n_elts, align 4, !dbg !10189
  br label %if.end5760, !dbg !10190

if.end5760:                                       ; preds = %if.then5754, %lor.lhs.false5748
  store i32 0, i32* %i5718, align 4, !dbg !10191
  br label %for.cond5761, !dbg !10193

for.cond5761:                                     ; preds = %for.inc5873, %if.end5760
  %2406 = load i32, i32* %i5718, align 4, !dbg !10194
  %2407 = load i32, i32* %n_elts5710, align 4, !dbg !10196
  %cmp5762 = icmp ult i32 %2406, %2407, !dbg !10197
  br i1 %cmp5762, label %for.body5764, label %for.end5875, !dbg !10198

for.body5764:                                     ; preds = %for.cond5761
  %2408 = load i32, i32* %i5718, align 4, !dbg !10199
  %2409 = load i32, i32* %in_n_elts, align 4, !dbg !10202
  %cmp5765 = icmp ult i32 %2408, %2409, !dbg !10203
  br i1 %cmp5765, label %if.then5767, label %if.else5819, !dbg !10204

if.then5767:                                      ; preds = %for.body5764
  %2410 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5768 = zext i32 %2410 to i64, !dbg !10205
  %arrayidx5769 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5768, !dbg !10205
  %2411 = load i8, i8* %arrayidx5769, align 1, !dbg !10205
  %conv5770 = zext i8 %2411 to i32, !dbg !10205
  %cmp5771 = icmp eq i32 %conv5770, 12, !dbg !10205
  br i1 %cmp5771, label %if.else5807, label %lor.lhs.false5773, !dbg !10205

lor.lhs.false5773:                                ; preds = %if.then5767
  %2412 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5774 = zext i32 %2412 to i64, !dbg !10205
  %arrayidx5775 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5774, !dbg !10205
  %2413 = load i8, i8* %arrayidx5775, align 1, !dbg !10205
  %conv5776 = zext i8 %2413 to i32, !dbg !10205
  %cmp5777 = icmp eq i32 %conv5776, 17, !dbg !10205
  br i1 %cmp5777, label %if.else5807, label %lor.lhs.false5779, !dbg !10205

lor.lhs.false5779:                                ; preds = %lor.lhs.false5773
  %2414 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5780 = zext i32 %2414 to i64, !dbg !10205
  %arrayidx5781 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5780, !dbg !10205
  %2415 = load i8, i8* %arrayidx5781, align 1, !dbg !10205
  %conv5782 = zext i8 %2415 to i32, !dbg !10205
  %cmp5783 = icmp eq i32 %conv5782, 13, !dbg !10205
  br i1 %cmp5783, label %if.else5807, label %lor.lhs.false5785, !dbg !10205

lor.lhs.false5785:                                ; preds = %lor.lhs.false5779
  %2416 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5786 = zext i32 %2416 to i64, !dbg !10205
  %arrayidx5787 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5786, !dbg !10205
  %2417 = load i8, i8* %arrayidx5787, align 1, !dbg !10205
  %conv5788 = zext i8 %2417 to i32, !dbg !10205
  %cmp5789 = icmp eq i32 %conv5788, 14, !dbg !10205
  br i1 %cmp5789, label %if.else5807, label %lor.lhs.false5791, !dbg !10205

lor.lhs.false5791:                                ; preds = %lor.lhs.false5785
  %2418 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5792 = zext i32 %2418 to i64, !dbg !10205
  %arrayidx5793 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5792, !dbg !10205
  %2419 = load i8, i8* %arrayidx5793, align 1, !dbg !10205
  %conv5794 = zext i8 %2419 to i32, !dbg !10205
  %cmp5795 = icmp eq i32 %conv5794, 15, !dbg !10205
  br i1 %cmp5795, label %if.else5807, label %lor.lhs.false5797, !dbg !10205

lor.lhs.false5797:                                ; preds = %lor.lhs.false5791
  %2420 = load i32, i32* %op0_mode, align 4, !dbg !10205
  %idxprom5798 = zext i32 %2420 to i64, !dbg !10205
  %arrayidx5799 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5798, !dbg !10205
  %2421 = load i8, i8* %arrayidx5799, align 1, !dbg !10205
  %conv5800 = zext i8 %2421 to i32, !dbg !10205
  %cmp5801 = icmp eq i32 %conv5800, 16, !dbg !10205
  br i1 %cmp5801, label %if.else5807, label %if.then5803, !dbg !10208

if.then5803:                                      ; preds = %lor.lhs.false5797
  %2422 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10209
  %2423 = load %struct.rtvec_def*, %struct.rtvec_def** %v5716, align 8, !dbg !10210
  %elem5804 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2423, i32 0, i32 1, !dbg !10210
  %2424 = load i32, i32* %i5718, align 4, !dbg !10210
  %idxprom5805 = zext i32 %2424 to i64, !dbg !10210
  %arrayidx5806 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5804, i64 0, i64 %idxprom5805, !dbg !10210
  store %struct.rtx_def* %2422, %struct.rtx_def** %arrayidx5806, align 8, !dbg !10211
  br label %if.end5818, !dbg !10210

if.else5807:                                      ; preds = %lor.lhs.false5797, %lor.lhs.false5791, %lor.lhs.false5785, %lor.lhs.false5779, %lor.lhs.false5773, %if.then5767
  %2425 = load %struct.rtx_def*, %struct.rtx_def** %trueop0.addr, align 8, !dbg !10212
  %u5808 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2425, i32 0, i32 1, !dbg !10212
  %fld5809 = bitcast %union.u* %u5808 to [1 x %union.rtunion_def]*, !dbg !10212
  %arrayidx5810 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5809, i64 0, i64 0, !dbg !10212
  %rt_rtvec5811 = bitcast %union.rtunion_def* %arrayidx5810 to %struct.rtvec_def**, !dbg !10212
  %2426 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5811, align 8, !dbg !10212
  %elem5812 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2426, i32 0, i32 1, !dbg !10212
  %2427 = load i32, i32* %i5718, align 4, !dbg !10212
  %idxprom5813 = zext i32 %2427 to i64, !dbg !10212
  %arrayidx5814 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5812, i64 0, i64 %idxprom5813, !dbg !10212
  %2428 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5814, align 8, !dbg !10212
  %2429 = load %struct.rtvec_def*, %struct.rtvec_def** %v5716, align 8, !dbg !10213
  %elem5815 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2429, i32 0, i32 1, !dbg !10213
  %2430 = load i32, i32* %i5718, align 4, !dbg !10213
  %idxprom5816 = zext i32 %2430 to i64, !dbg !10213
  %arrayidx5817 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5815, i64 0, i64 %idxprom5816, !dbg !10213
  store %struct.rtx_def* %2428, %struct.rtx_def** %arrayidx5817, align 8, !dbg !10214
  br label %if.end5818

if.end5818:                                       ; preds = %if.else5807, %if.then5803
  br label %if.end5872, !dbg !10215

if.else5819:                                      ; preds = %for.body5764
  %2431 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5820 = zext i32 %2431 to i64, !dbg !10216
  %arrayidx5821 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5820, !dbg !10216
  %2432 = load i8, i8* %arrayidx5821, align 1, !dbg !10216
  %conv5822 = zext i8 %2432 to i32, !dbg !10216
  %cmp5823 = icmp eq i32 %conv5822, 12, !dbg !10216
  br i1 %cmp5823, label %if.else5859, label %lor.lhs.false5825, !dbg !10216

lor.lhs.false5825:                                ; preds = %if.else5819
  %2433 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5826 = zext i32 %2433 to i64, !dbg !10216
  %arrayidx5827 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5826, !dbg !10216
  %2434 = load i8, i8* %arrayidx5827, align 1, !dbg !10216
  %conv5828 = zext i8 %2434 to i32, !dbg !10216
  %cmp5829 = icmp eq i32 %conv5828, 17, !dbg !10216
  br i1 %cmp5829, label %if.else5859, label %lor.lhs.false5831, !dbg !10216

lor.lhs.false5831:                                ; preds = %lor.lhs.false5825
  %2435 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5832 = zext i32 %2435 to i64, !dbg !10216
  %arrayidx5833 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5832, !dbg !10216
  %2436 = load i8, i8* %arrayidx5833, align 1, !dbg !10216
  %conv5834 = zext i8 %2436 to i32, !dbg !10216
  %cmp5835 = icmp eq i32 %conv5834, 13, !dbg !10216
  br i1 %cmp5835, label %if.else5859, label %lor.lhs.false5837, !dbg !10216

lor.lhs.false5837:                                ; preds = %lor.lhs.false5831
  %2437 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5838 = zext i32 %2437 to i64, !dbg !10216
  %arrayidx5839 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5838, !dbg !10216
  %2438 = load i8, i8* %arrayidx5839, align 1, !dbg !10216
  %conv5840 = zext i8 %2438 to i32, !dbg !10216
  %cmp5841 = icmp eq i32 %conv5840, 14, !dbg !10216
  br i1 %cmp5841, label %if.else5859, label %lor.lhs.false5843, !dbg !10216

lor.lhs.false5843:                                ; preds = %lor.lhs.false5837
  %2439 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5844 = zext i32 %2439 to i64, !dbg !10216
  %arrayidx5845 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5844, !dbg !10216
  %2440 = load i8, i8* %arrayidx5845, align 1, !dbg !10216
  %conv5846 = zext i8 %2440 to i32, !dbg !10216
  %cmp5847 = icmp eq i32 %conv5846, 15, !dbg !10216
  br i1 %cmp5847, label %if.else5859, label %lor.lhs.false5849, !dbg !10216

lor.lhs.false5849:                                ; preds = %lor.lhs.false5843
  %2441 = load i32, i32* %op1_mode, align 4, !dbg !10216
  %idxprom5850 = zext i32 %2441 to i64, !dbg !10216
  %arrayidx5851 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom5850, !dbg !10216
  %2442 = load i8, i8* %arrayidx5851, align 1, !dbg !10216
  %conv5852 = zext i8 %2442 to i32, !dbg !10216
  %cmp5853 = icmp eq i32 %conv5852, 16, !dbg !10216
  br i1 %cmp5853, label %if.else5859, label %if.then5855, !dbg !10219

if.then5855:                                      ; preds = %lor.lhs.false5849
  %2443 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10220
  %2444 = load %struct.rtvec_def*, %struct.rtvec_def** %v5716, align 8, !dbg !10221
  %elem5856 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2444, i32 0, i32 1, !dbg !10221
  %2445 = load i32, i32* %i5718, align 4, !dbg !10221
  %idxprom5857 = zext i32 %2445 to i64, !dbg !10221
  %arrayidx5858 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5856, i64 0, i64 %idxprom5857, !dbg !10221
  store %struct.rtx_def* %2443, %struct.rtx_def** %arrayidx5858, align 8, !dbg !10222
  br label %if.end5871, !dbg !10221

if.else5859:                                      ; preds = %lor.lhs.false5849, %lor.lhs.false5843, %lor.lhs.false5837, %lor.lhs.false5831, %lor.lhs.false5825, %if.else5819
  %2446 = load %struct.rtx_def*, %struct.rtx_def** %trueop1.addr, align 8, !dbg !10223
  %u5860 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2446, i32 0, i32 1, !dbg !10223
  %fld5861 = bitcast %union.u* %u5860 to [1 x %union.rtunion_def]*, !dbg !10223
  %arrayidx5862 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5861, i64 0, i64 0, !dbg !10223
  %rt_rtvec5863 = bitcast %union.rtunion_def* %arrayidx5862 to %struct.rtvec_def**, !dbg !10223
  %2447 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec5863, align 8, !dbg !10223
  %elem5864 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2447, i32 0, i32 1, !dbg !10223
  %2448 = load i32, i32* %i5718, align 4, !dbg !10223
  %2449 = load i32, i32* %in_n_elts, align 4, !dbg !10223
  %sub5865 = sub i32 %2448, %2449, !dbg !10223
  %idxprom5866 = zext i32 %sub5865 to i64, !dbg !10223
  %arrayidx5867 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5864, i64 0, i64 %idxprom5866, !dbg !10223
  %2450 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx5867, align 8, !dbg !10223
  %2451 = load %struct.rtvec_def*, %struct.rtvec_def** %v5716, align 8, !dbg !10224
  %elem5868 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %2451, i32 0, i32 1, !dbg !10224
  %2452 = load i32, i32* %i5718, align 4, !dbg !10224
  %idxprom5869 = zext i32 %2452 to i64, !dbg !10224
  %arrayidx5870 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem5868, i64 0, i64 %idxprom5869, !dbg !10224
  store %struct.rtx_def* %2450, %struct.rtx_def** %arrayidx5870, align 8, !dbg !10225
  br label %if.end5871

if.end5871:                                       ; preds = %if.else5859, %if.then5855
  br label %if.end5872

if.end5872:                                       ; preds = %if.end5871, %if.end5818
  br label %for.inc5873, !dbg !10226

for.inc5873:                                      ; preds = %if.end5872
  %2453 = load i32, i32* %i5718, align 4, !dbg !10227
  %inc5874 = add i32 %2453, 1, !dbg !10227
  store i32 %inc5874, i32* %i5718, align 4, !dbg !10227
  br label %for.cond5761, !dbg !10228, !llvm.loop !10229

for.end5875:                                      ; preds = %for.cond5761
  %2454 = load i32, i32* %mode.addr, align 4, !dbg !10231
  %2455 = load %struct.rtvec_def*, %struct.rtvec_def** %v5716, align 8, !dbg !10232
  %call5876 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %2454, %struct.rtvec_def* %2455), !dbg !10233
  store %struct.rtx_def* %call5876, %struct.rtx_def** %retval, align 8, !dbg !10234
  br label %return, !dbg !10234

if.end5877:                                       ; preds = %lor.lhs.false5696, %lor.lhs.false5681
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10235
  br label %return, !dbg !10235

sw.default5878:                                   ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3072, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10236
  br label %sw.epilog5879, !dbg !10237

sw.epilog5879:                                    ; preds = %sw.default5878, %if.end4841, %if.end4822, %if.end4801, %if.end4768, %canonicalize_shift, %if.end4641, %if.end4611, %if.end4565, %if.end4085, %if.end4050, %if.end3440, %if.end3136, %if.end2522, %if.end1844, %if.end762, %if.end676
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10238
  br label %return, !dbg !10238

return:                                           ; preds = %sw.epilog5879, %if.end5877, %for.end5875, %if.end5464, %if.then5462, %for.end5375, %if.then5222, %if.end5199, %if.then4983, %sw.bb4842, %if.then4840, %if.then4836, %if.then4829, %if.then4821, %if.then4817, %if.then4810, %if.then4800, %if.then4796, %if.then4789, %if.then4767, %if.then4763, %if.then4756, %if.then4708, %if.then4699, %if.then4692, %if.then4683, %if.then4676, %if.then4656, %if.then4647, %if.end4638, %if.then4634, %if.end4622, %if.then4620, %if.then4604, %if.end4589, %if.then4585, %if.end4576, %if.then4574, %if.then4560, %if.then4555, %if.end4549, %if.then4547, %if.then4533, %if.then4526, %if.then4408, %if.then4302, %if.then4082, %if.then4067, %if.end4061, %if.then4059, %if.then4049, %if.then4040, %if.then4009, %if.then3976, %if.then3885, %if.then3815, %if.then3772, %if.then3734, %if.then3699, %if.then3677, %if.then3643, %if.then3610, %if.then3582, %if.then3537, %if.then3503, %if.then3487, %if.then3474, %if.then3449, %if.then3439, %if.then3435, %if.then3389, %if.then3352, %if.then3330, %if.then3308, %if.then3289, %if.then3284, %if.then3258, %if.then3231, %if.then3188, %if.then3171, %if.then3157, %if.then3140, %if.then3135, %if.then3120, %if.then3020, %if.then2952, %if.then2796, %if.then2719, %if.then2675, %if.then2662, %if.then2657, %if.then2614, %if.then2590, %if.then2550, %if.then2543, %if.then2526, %if.then2520, %if.then2481, %if.then2431, %if.then2376, %if.then2269, %if.then2223, %if.then2180, %if.then2160, %if.then2054, %if.then1848, %if.then1843, %if.then1789, %if.then1664, %if.then1551, %if.then1522, %if.then1501, %if.then1486, %if.then1468, %if.then1444, %cond.end1436, %if.then1204, %if.then1001, %if.then996, %if.then890, %if.then760, %if.then674, %if.then644, %if.then606, %if.then578, %if.then456, %cond.end416, %if.then192, %if.then168, %if.then142, %if.then103, %if.then97, %if.then
  %2456 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !10239
  ret %struct.rtx_def* %2456, !dbg !10239
}

declare dso_local void @real_convert(%struct.real_value*, i32, %struct.real_value*) #2

declare dso_local zeroext i8 @real_isinf(%struct.real_value*) #2

declare dso_local i32 @rtx_to_tree_code(i32) #2

declare dso_local zeroext i8 @real_identical(%struct.real_value*, %struct.real_value*) #2

declare dso_local i32 @add_double_with_sign(i64, i64, i64, i64, i64*, i64*, i8 zeroext) #2

declare dso_local i32 @mul_double_with_sign(i64, i64, i64, i64, i64*, i64*, i8 zeroext) #2

declare dso_local i32 @div_and_round_double(i32, i32, i64, i64, i64, i64, i64*, i64*, i64*, i64*) #2

declare dso_local void @rshift_double(i64, i64, i64, i32, i64*, i64*, i32) #2

declare dso_local void @lshift_double(i64, i64, i64, i32, i64*, i64*, i32) #2

declare dso_local void @lrotate_double(i64, i64, i64, i32, i64*, i64*) #2

declare dso_local void @rrotate_double(i64, i64, i64, i32, i64*, i64*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_const_relational_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !10240 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %trueop0 = alloca %struct.rtx_def*, align 8
  %trueop1 = alloca %struct.rtx_def*, align 8
  %d0 = alloca %struct.real_value, align 8
  %d1 = alloca %struct.real_value, align 8
  %width = alloca i32, align 4
  %l0s = alloca i64, align 8
  %h0s = alloca i64, align 8
  %l1s = alloca i64, align 8
  %h1s = alloca i64, align 8
  %l0u = alloca i64, align 8
  %h0u = alloca i64, align 8
  %l1u = alloca i64, align 8
  %h1u = alloca i64, align 8
  %cr = alloca i32, align 4
  %sign = alloca i32, align 4
  %nonzero = alloca i64, align 8
  %val = alloca i64, align 8
  %mmin = alloca i64, align 8
  %mmax = alloca i64, align 8
  %mmin_rtx = alloca %struct.rtx_def*, align 8
  %mmax_rtx = alloca %struct.rtx_def*, align 8
  %sign_copies = alloca i32, align 4
  %inner_const = alloca %struct.rtx_def*, align 8
  %sign_bitnum = alloca i32, align 4
  %has_sign = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !10241, metadata !DIExpression()), !dbg !10242
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10243, metadata !DIExpression()), !dbg !10244
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !10245, metadata !DIExpression()), !dbg !10246
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !10247, metadata !DIExpression()), !dbg !10248
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !10249, metadata !DIExpression()), !dbg !10250
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop0, metadata !10251, metadata !DIExpression()), !dbg !10252
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %trueop1, metadata !10253, metadata !DIExpression()), !dbg !10254
  %0 = load i32, i32* %mode.addr, align 4, !dbg !10255
  %cmp = icmp ne i32 %0, 0, !dbg !10255
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !10255

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10255
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !10255
  %bf.load = load i32, i32* %2, align 8, !dbg !10255
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !10255
  %bf.clear = and i32 %bf.lshr, 255, !dbg !10255
  %cmp1 = icmp eq i32 %bf.clear, 0, !dbg !10255
  br i1 %cmp1, label %land.lhs.true, label %cond.true, !dbg !10255

land.lhs.true:                                    ; preds = %lor.lhs.false
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10255
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !10255
  %bf.load2 = load i32, i32* %4, align 8, !dbg !10255
  %bf.lshr3 = lshr i32 %bf.load2, 16, !dbg !10255
  %bf.clear4 = and i32 %bf.lshr3, 255, !dbg !10255
  %cmp5 = icmp eq i32 %bf.clear4, 0, !dbg !10255
  br i1 %cmp5, label %cond.false, label %cond.true, !dbg !10255

cond.true:                                        ; preds = %land.lhs.true, %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !10255
  br label %cond.end, !dbg !10255

cond.false:                                       ; preds = %land.lhs.true, %entry
  br label %cond.end, !dbg !10255

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10255
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10256
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !10256
  %bf.load6 = load i32, i32* %6, align 8, !dbg !10256
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !10256
  %cmp8 = icmp eq i32 %bf.clear7, 48, !dbg !10258
  br i1 %cmp8, label %land.lhs.true9, label %if.end33, !dbg !10259

land.lhs.true9:                                   ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10260
  %8 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10261
  %cmp10 = icmp eq %struct.rtx_def* %7, %8, !dbg !10262
  br i1 %cmp10, label %if.then, label %if.end33, !dbg !10263

if.then:                                          ; preds = %land.lhs.true9
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10264
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !10264
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !10264
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !10264
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10264
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10264
  store %struct.rtx_def* %10, %struct.rtx_def** %op1.addr, align 8, !dbg !10266
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10267
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !10267
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !10267
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !10267
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !10267
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !10267
  store %struct.rtx_def* %12, %struct.rtx_def** %op0.addr, align 8, !dbg !10268
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10269
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !10269
  %bf.load15 = load i32, i32* %14, align 8, !dbg !10269
  %bf.lshr16 = lshr i32 %bf.load15, 16, !dbg !10269
  %bf.clear17 = and i32 %bf.lshr16, 255, !dbg !10269
  %cmp18 = icmp ne i32 %bf.clear17, 0, !dbg !10271
  br i1 %cmp18, label %if.then19, label %if.else, !dbg !10272

if.then19:                                        ; preds = %if.then
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10273
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !10273
  %bf.load20 = load i32, i32* %16, align 8, !dbg !10273
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !10273
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !10273
  store i32 %bf.clear22, i32* %mode.addr, align 4, !dbg !10274
  br label %if.end32, !dbg !10275

if.else:                                          ; preds = %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10276
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !10276
  %bf.load23 = load i32, i32* %18, align 8, !dbg !10276
  %bf.lshr24 = lshr i32 %bf.load23, 16, !dbg !10276
  %bf.clear25 = and i32 %bf.lshr24, 255, !dbg !10276
  %cmp26 = icmp ne i32 %bf.clear25, 0, !dbg !10278
  br i1 %cmp26, label %if.then27, label %if.else31, !dbg !10279

if.then27:                                        ; preds = %if.else
  %19 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10280
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !10280
  %bf.load28 = load i32, i32* %20, align 8, !dbg !10280
  %bf.lshr29 = lshr i32 %bf.load28, 16, !dbg !10280
  %bf.clear30 = and i32 %bf.lshr29, 255, !dbg !10280
  store i32 %bf.clear30, i32* %mode.addr, align 4, !dbg !10281
  br label %if.end, !dbg !10282

if.else31:                                        ; preds = %if.else
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10283
  br label %return, !dbg !10283

if.end:                                           ; preds = %if.then27
  br label %if.end32

if.end32:                                         ; preds = %if.end, %if.then19
  br label %if.end33, !dbg !10284

if.end33:                                         ; preds = %if.end32, %land.lhs.true9, %cond.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10285
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !10285
  %bf.load34 = load i32, i32* %22, align 8, !dbg !10285
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !10285
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !10285
  %idxprom = zext i32 %bf.clear36 to i64, !dbg !10285
  %arrayidx37 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !10285
  %23 = load i8, i8* %arrayidx37, align 1, !dbg !10285
  %conv = zext i8 %23 to i32, !dbg !10285
  %cmp38 = icmp eq i32 %conv, 1, !dbg !10287
  br i1 %cmp38, label %if.then43, label %lor.lhs.false40, !dbg !10288

lor.lhs.false40:                                  ; preds = %if.end33
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10289
  %tobool = icmp ne %struct.rtx_def* %24, null, !dbg !10289
  br i1 %tobool, label %cond.true41, label %cond.false42, !dbg !10290

cond.true41:                                      ; preds = %lor.lhs.false40
  br i1 false, label %if.then43, label %if.end44, !dbg !10289

cond.false42:                                     ; preds = %lor.lhs.false40
  br i1 false, label %if.then43, label %if.end44, !dbg !10290

if.then43:                                        ; preds = %cond.false42, %cond.true41, %if.end33
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10291
  br label %return, !dbg !10291

if.end44:                                         ; preds = %cond.false42, %cond.true41
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10292
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10294
  %call = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %25, %struct.rtx_def* %26), !dbg !10295
  %tobool45 = icmp ne i8 %call, 0, !dbg !10295
  br i1 %tobool45, label %if.then46, label %if.end48, !dbg !10296

if.then46:                                        ; preds = %if.end44
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10297
  store %struct.rtx_def* %27, %struct.rtx_def** %tem, align 8, !dbg !10299
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10300
  store %struct.rtx_def* %28, %struct.rtx_def** %op0.addr, align 8, !dbg !10301
  %29 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !10302
  store %struct.rtx_def* %29, %struct.rtx_def** %op1.addr, align 8, !dbg !10303
  %30 = load i32, i32* %code.addr, align 4, !dbg !10304
  %call47 = call i32 @swap_condition(i32 %30), !dbg !10305
  store i32 %call47, i32* %code.addr, align 4, !dbg !10306
  br label %if.end48, !dbg !10307

if.end48:                                         ; preds = %if.then46, %if.end44
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10308
  %call49 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %31), !dbg !10309
  store %struct.rtx_def* %call49, %struct.rtx_def** %trueop0, align 8, !dbg !10310
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10311
  %call50 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %32), !dbg !10312
  store %struct.rtx_def* %call50, %struct.rtx_def** %trueop1, align 8, !dbg !10313
  %33 = load i32, i32* %mode.addr, align 4, !dbg !10314
  %idxprom51 = zext i32 %33 to i64, !dbg !10314
  %arrayidx52 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom51, !dbg !10314
  %34 = load i8, i8* %arrayidx52, align 1, !dbg !10314
  %conv53 = zext i8 %34 to i32, !dbg !10314
  %cmp54 = icmp eq i32 %conv53, 2, !dbg !10314
  br i1 %cmp54, label %land.lhs.true74, label %lor.lhs.false56, !dbg !10314

lor.lhs.false56:                                  ; preds = %if.end48
  %35 = load i32, i32* %mode.addr, align 4, !dbg !10314
  %idxprom57 = zext i32 %35 to i64, !dbg !10314
  %arrayidx58 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom57, !dbg !10314
  %36 = load i8, i8* %arrayidx58, align 1, !dbg !10314
  %conv59 = zext i8 %36 to i32, !dbg !10314
  %cmp60 = icmp eq i32 %conv59, 3, !dbg !10314
  br i1 %cmp60, label %land.lhs.true74, label %lor.lhs.false62, !dbg !10314

lor.lhs.false62:                                  ; preds = %lor.lhs.false56
  %37 = load i32, i32* %mode.addr, align 4, !dbg !10314
  %idxprom63 = zext i32 %37 to i64, !dbg !10314
  %arrayidx64 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom63, !dbg !10314
  %38 = load i8, i8* %arrayidx64, align 1, !dbg !10314
  %conv65 = zext i8 %38 to i32, !dbg !10314
  %cmp66 = icmp eq i32 %conv65, 10, !dbg !10314
  br i1 %cmp66, label %land.lhs.true74, label %lor.lhs.false68, !dbg !10314

lor.lhs.false68:                                  ; preds = %lor.lhs.false62
  %39 = load i32, i32* %mode.addr, align 4, !dbg !10314
  %idxprom69 = zext i32 %39 to i64, !dbg !10314
  %arrayidx70 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom69, !dbg !10314
  %40 = load i8, i8* %arrayidx70, align 1, !dbg !10314
  %conv71 = zext i8 %40 to i32, !dbg !10314
  %cmp72 = icmp eq i32 %conv71, 12, !dbg !10314
  br i1 %cmp72, label %land.lhs.true74, label %if.end113, !dbg !10316

land.lhs.true74:                                  ; preds = %lor.lhs.false68, %lor.lhs.false62, %lor.lhs.false56, %if.end48
  %41 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10317
  %42 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10318
  %cmp75 = icmp ne %struct.rtx_def* %41, %42, !dbg !10319
  br i1 %cmp75, label %land.lhs.true77, label %if.end113, !dbg !10320

land.lhs.true77:                                  ; preds = %land.lhs.true74
  %43 = load i32, i32* %code.addr, align 4, !dbg !10321
  %cmp78 = icmp eq i32 %43, 81, !dbg !10322
  br i1 %cmp78, label %land.lhs.true83, label %lor.lhs.false80, !dbg !10323

lor.lhs.false80:                                  ; preds = %land.lhs.true77
  %44 = load i32, i32* %code.addr, align 4, !dbg !10324
  %cmp81 = icmp eq i32 %44, 80, !dbg !10325
  br i1 %cmp81, label %land.lhs.true83, label %if.end113, !dbg !10326

land.lhs.true83:                                  ; preds = %lor.lhs.false80, %land.lhs.true77
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10327
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !10327
  %bf.load84 = load i32, i32* %46, align 8, !dbg !10327
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !10327
  %cmp86 = icmp eq i32 %bf.clear85, 37, !dbg !10327
  br i1 %cmp86, label %land.lhs.true93, label %lor.lhs.false88, !dbg !10328

lor.lhs.false88:                                  ; preds = %land.lhs.true83
  %47 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10329
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !10329
  %bf.load89 = load i32, i32* %48, align 8, !dbg !10329
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !10329
  %cmp91 = icmp eq i32 %bf.clear90, 30, !dbg !10329
  br i1 %cmp91, label %land.lhs.true93, label %land.lhs.true103, !dbg !10330

land.lhs.true93:                                  ; preds = %lor.lhs.false88, %land.lhs.true83
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10331
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !10331
  %bf.load94 = load i32, i32* %50, align 8, !dbg !10331
  %bf.clear95 = and i32 %bf.load94, 65535, !dbg !10331
  %cmp96 = icmp eq i32 %bf.clear95, 37, !dbg !10331
  br i1 %cmp96, label %if.end113, label %lor.lhs.false98, !dbg !10332

lor.lhs.false98:                                  ; preds = %land.lhs.true93
  %51 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10333
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !10333
  %bf.load99 = load i32, i32* %52, align 8, !dbg !10333
  %bf.clear100 = and i32 %bf.load99, 65535, !dbg !10333
  %cmp101 = icmp eq i32 %bf.clear100, 30, !dbg !10333
  br i1 %cmp101, label %if.end113, label %land.lhs.true103, !dbg !10334

land.lhs.true103:                                 ; preds = %lor.lhs.false98, %lor.lhs.false88
  %53 = load i32, i32* %mode.addr, align 4, !dbg !10335
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10336
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !10337
  %call104 = call %struct.rtx_def* @simplify_binary_operation(i32 50, i32 %53, %struct.rtx_def* %54, %struct.rtx_def* %55), !dbg !10338
  store %struct.rtx_def* %call104, %struct.rtx_def** %tem, align 8, !dbg !10339
  %cmp105 = icmp ne %struct.rtx_def* null, %call104, !dbg !10340
  br i1 %cmp105, label %land.lhs.true107, label %if.end113, !dbg !10341

land.lhs.true107:                                 ; preds = %land.lhs.true103
  %56 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !10342
  %call108 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %56), !dbg !10343
  %tobool109 = icmp ne i8 %call108, 0, !dbg !10343
  br i1 %tobool109, label %if.end113, label %if.then110, !dbg !10344

if.then110:                                       ; preds = %land.lhs.true107
  %57 = load i32, i32* %code.addr, align 4, !dbg !10345
  %call111 = call i32 @signed_condition(i32 %57), !dbg !10346
  %58 = load i32, i32* %mode.addr, align 4, !dbg !10347
  %59 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !10348
  %60 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10349
  %call112 = call %struct.rtx_def* @simplify_const_relational_operation(i32 %call111, i32 %58, %struct.rtx_def* %59, %struct.rtx_def* %60), !dbg !10350
  store %struct.rtx_def* %call112, %struct.rtx_def** %retval, align 8, !dbg !10351
  br label %return, !dbg !10351

if.end113:                                        ; preds = %land.lhs.true107, %land.lhs.true103, %lor.lhs.false98, %land.lhs.true93, %lor.lhs.false80, %land.lhs.true74, %lor.lhs.false68
  %61 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom114 = zext i32 %61 to i64, !dbg !10352
  %arrayidx115 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom114, !dbg !10352
  %62 = load i8, i8* %arrayidx115, align 1, !dbg !10352
  %conv116 = zext i8 %62 to i32, !dbg !10352
  %cmp117 = icmp eq i32 %conv116, 8, !dbg !10352
  br i1 %cmp117, label %land.lhs.true137, label %lor.lhs.false119, !dbg !10352

lor.lhs.false119:                                 ; preds = %if.end113
  %63 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom120 = zext i32 %63 to i64, !dbg !10352
  %arrayidx121 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom120, !dbg !10352
  %64 = load i8, i8* %arrayidx121, align 1, !dbg !10352
  %conv122 = zext i8 %64 to i32, !dbg !10352
  %cmp123 = icmp eq i32 %conv122, 9, !dbg !10352
  br i1 %cmp123, label %land.lhs.true137, label %lor.lhs.false125, !dbg !10352

lor.lhs.false125:                                 ; preds = %lor.lhs.false119
  %65 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom126 = zext i32 %65 to i64, !dbg !10352
  %arrayidx127 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom126, !dbg !10352
  %66 = load i8, i8* %arrayidx127, align 1, !dbg !10352
  %conv128 = zext i8 %66 to i32, !dbg !10352
  %cmp129 = icmp eq i32 %conv128, 11, !dbg !10352
  br i1 %cmp129, label %land.lhs.true137, label %lor.lhs.false131, !dbg !10352

lor.lhs.false131:                                 ; preds = %lor.lhs.false125
  %67 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom132 = zext i32 %67 to i64, !dbg !10352
  %arrayidx133 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom132, !dbg !10352
  %68 = load i8, i8* %arrayidx133, align 1, !dbg !10352
  %conv134 = zext i8 %68 to i32, !dbg !10352
  %cmp135 = icmp eq i32 %conv134, 17, !dbg !10352
  br i1 %cmp135, label %land.lhs.true137, label %land.lhs.true208, !dbg !10352

land.lhs.true137:                                 ; preds = %lor.lhs.false131, %lor.lhs.false125, %lor.lhs.false119, %if.end113
  %69 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom138 = zext i32 %69 to i64, !dbg !10352
  %arrayidx139 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom138, !dbg !10352
  %70 = load i8, i8* %arrayidx139, align 1, !dbg !10352
  %conv140 = zext i8 %70 to i32, !dbg !10352
  %cmp141 = icmp eq i32 %conv140, 8, !dbg !10352
  br i1 %cmp141, label %cond.true149, label %lor.lhs.false143, !dbg !10352

lor.lhs.false143:                                 ; preds = %land.lhs.true137
  %71 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom144 = zext i32 %71 to i64, !dbg !10352
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom144, !dbg !10352
  %72 = load i8, i8* %arrayidx145, align 1, !dbg !10352
  %conv146 = zext i8 %72 to i32, !dbg !10352
  %cmp147 = icmp eq i32 %conv146, 9, !dbg !10352
  br i1 %cmp147, label %cond.true149, label %cond.false150, !dbg !10352

cond.true149:                                     ; preds = %lor.lhs.false143, %land.lhs.true137
  %73 = load i32, i32* %mode.addr, align 4, !dbg !10352
  br label %cond.end154, !dbg !10352

cond.false150:                                    ; preds = %lor.lhs.false143
  %74 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom151 = zext i32 %74 to i64, !dbg !10352
  %arrayidx152 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom151, !dbg !10352
  %75 = load i8, i8* %arrayidx152, align 1, !dbg !10352
  %conv153 = zext i8 %75 to i32, !dbg !10352
  br label %cond.end154, !dbg !10352

cond.end154:                                      ; preds = %cond.false150, %cond.true149
  %cond155 = phi i32 [ %73, %cond.true149 ], [ %conv153, %cond.false150 ], !dbg !10352
  %idxprom156 = zext i32 %cond155 to i64, !dbg !10352
  %arrayidx157 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom156, !dbg !10352
  %76 = load i8, i8* %arrayidx157, align 1, !dbg !10352
  %conv158 = zext i8 %76 to i32, !dbg !10352
  %cmp159 = icmp eq i32 %conv158, 9, !dbg !10352
  br i1 %cmp159, label %cond.true161, label %cond.false180, !dbg !10352

cond.true161:                                     ; preds = %cond.end154
  %77 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom162 = zext i32 %77 to i64, !dbg !10352
  %arrayidx163 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom162, !dbg !10352
  %78 = load i8, i8* %arrayidx163, align 1, !dbg !10352
  %conv164 = zext i8 %78 to i32, !dbg !10352
  %cmp165 = icmp eq i32 %conv164, 8, !dbg !10352
  br i1 %cmp165, label %cond.true173, label %lor.lhs.false167, !dbg !10352

lor.lhs.false167:                                 ; preds = %cond.true161
  %79 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom168 = zext i32 %79 to i64, !dbg !10352
  %arrayidx169 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom168, !dbg !10352
  %80 = load i8, i8* %arrayidx169, align 1, !dbg !10352
  %conv170 = zext i8 %80 to i32, !dbg !10352
  %cmp171 = icmp eq i32 %conv170, 9, !dbg !10352
  br i1 %cmp171, label %cond.true173, label %cond.false174, !dbg !10352

cond.true173:                                     ; preds = %lor.lhs.false167, %cond.true161
  %81 = load i32, i32* %mode.addr, align 4, !dbg !10352
  br label %cond.end178, !dbg !10352

cond.false174:                                    ; preds = %lor.lhs.false167
  %82 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom175 = zext i32 %82 to i64, !dbg !10352
  %arrayidx176 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom175, !dbg !10352
  %83 = load i8, i8* %arrayidx176, align 1, !dbg !10352
  %conv177 = zext i8 %83 to i32, !dbg !10352
  br label %cond.end178, !dbg !10352

cond.end178:                                      ; preds = %cond.false174, %cond.true173
  %cond179 = phi i32 [ %81, %cond.true173 ], [ %conv177, %cond.false174 ], !dbg !10352
  %sub = sub i32 %cond179, 42, !dbg !10352
  %add = add i32 %sub, 4, !dbg !10352
  br label %cond.end200, !dbg !10352

cond.false180:                                    ; preds = %cond.end154
  %84 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom181 = zext i32 %84 to i64, !dbg !10352
  %arrayidx182 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom181, !dbg !10352
  %85 = load i8, i8* %arrayidx182, align 1, !dbg !10352
  %conv183 = zext i8 %85 to i32, !dbg !10352
  %cmp184 = icmp eq i32 %conv183, 8, !dbg !10352
  br i1 %cmp184, label %cond.true192, label %lor.lhs.false186, !dbg !10352

lor.lhs.false186:                                 ; preds = %cond.false180
  %86 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom187 = zext i32 %86 to i64, !dbg !10352
  %arrayidx188 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom187, !dbg !10352
  %87 = load i8, i8* %arrayidx188, align 1, !dbg !10352
  %conv189 = zext i8 %87 to i32, !dbg !10352
  %cmp190 = icmp eq i32 %conv189, 9, !dbg !10352
  br i1 %cmp190, label %cond.true192, label %cond.false193, !dbg !10352

cond.true192:                                     ; preds = %lor.lhs.false186, %cond.false180
  %88 = load i32, i32* %mode.addr, align 4, !dbg !10352
  br label %cond.end197, !dbg !10352

cond.false193:                                    ; preds = %lor.lhs.false186
  %89 = load i32, i32* %mode.addr, align 4, !dbg !10352
  %idxprom194 = zext i32 %89 to i64, !dbg !10352
  %arrayidx195 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom194, !dbg !10352
  %90 = load i8, i8* %arrayidx195, align 1, !dbg !10352
  %conv196 = zext i8 %90 to i32, !dbg !10352
  br label %cond.end197, !dbg !10352

cond.end197:                                      ; preds = %cond.false193, %cond.true192
  %cond198 = phi i32 [ %88, %cond.true192 ], [ %conv196, %cond.false193 ], !dbg !10352
  %sub199 = sub i32 %cond198, 38, !dbg !10352
  br label %cond.end200, !dbg !10352

cond.end200:                                      ; preds = %cond.end197, %cond.end178
  %cond201 = phi i32 [ %add, %cond.end178 ], [ %sub199, %cond.end197 ], !dbg !10352
  %idxprom202 = zext i32 %cond201 to i64, !dbg !10352
  %arrayidx203 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom202, !dbg !10352
  %91 = load %struct.real_format*, %struct.real_format** %arrayidx203, align 8, !dbg !10352
  %has_nans = getelementptr inbounds %struct.real_format, %struct.real_format* %91, i32 0, i32 11, !dbg !10352
  %92 = load i8, i8* %has_nans, align 2, !dbg !10352
  %conv204 = zext i8 %92 to i32, !dbg !10352
  %tobool205 = icmp ne i32 %conv204, 0, !dbg !10352
  br i1 %tobool205, label %land.lhs.true206, label %land.lhs.true208, !dbg !10352

land.lhs.true206:                                 ; preds = %cond.end200
  %93 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10352
  %tobool207 = icmp ne i32 %93, 0, !dbg !10352
  br i1 %tobool207, label %land.lhs.true208, label %if.end212, !dbg !10354

land.lhs.true208:                                 ; preds = %land.lhs.true206, %cond.end200, %lor.lhs.false131
  %94 = load i32, i32* %code.addr, align 4, !dbg !10355
  %cmp209 = icmp eq i32 %94, 91, !dbg !10356
  br i1 %cmp209, label %if.then211, label %if.end212, !dbg !10357

if.then211:                                       ; preds = %land.lhs.true208
  %95 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10358
  store %struct.rtx_def* %95, %struct.rtx_def** %retval, align 8, !dbg !10359
  br label %return, !dbg !10359

if.end212:                                        ; preds = %land.lhs.true208, %land.lhs.true206
  %96 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom213 = zext i32 %96 to i64, !dbg !10360
  %arrayidx214 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom213, !dbg !10360
  %97 = load i8, i8* %arrayidx214, align 1, !dbg !10360
  %conv215 = zext i8 %97 to i32, !dbg !10360
  %cmp216 = icmp eq i32 %conv215, 8, !dbg !10360
  br i1 %cmp216, label %land.lhs.true236, label %lor.lhs.false218, !dbg !10360

lor.lhs.false218:                                 ; preds = %if.end212
  %98 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom219 = zext i32 %98 to i64, !dbg !10360
  %arrayidx220 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom219, !dbg !10360
  %99 = load i8, i8* %arrayidx220, align 1, !dbg !10360
  %conv221 = zext i8 %99 to i32, !dbg !10360
  %cmp222 = icmp eq i32 %conv221, 9, !dbg !10360
  br i1 %cmp222, label %land.lhs.true236, label %lor.lhs.false224, !dbg !10360

lor.lhs.false224:                                 ; preds = %lor.lhs.false218
  %100 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom225 = zext i32 %100 to i64, !dbg !10360
  %arrayidx226 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom225, !dbg !10360
  %101 = load i8, i8* %arrayidx226, align 1, !dbg !10360
  %conv227 = zext i8 %101 to i32, !dbg !10360
  %cmp228 = icmp eq i32 %conv227, 11, !dbg !10360
  br i1 %cmp228, label %land.lhs.true236, label %lor.lhs.false230, !dbg !10360

lor.lhs.false230:                                 ; preds = %lor.lhs.false224
  %102 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom231 = zext i32 %102 to i64, !dbg !10360
  %arrayidx232 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom231, !dbg !10360
  %103 = load i8, i8* %arrayidx232, align 1, !dbg !10360
  %conv233 = zext i8 %103 to i32, !dbg !10360
  %cmp234 = icmp eq i32 %conv233, 17, !dbg !10360
  br i1 %cmp234, label %land.lhs.true236, label %land.lhs.true310, !dbg !10360

land.lhs.true236:                                 ; preds = %lor.lhs.false230, %lor.lhs.false224, %lor.lhs.false218, %if.end212
  %104 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom237 = zext i32 %104 to i64, !dbg !10360
  %arrayidx238 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom237, !dbg !10360
  %105 = load i8, i8* %arrayidx238, align 1, !dbg !10360
  %conv239 = zext i8 %105 to i32, !dbg !10360
  %cmp240 = icmp eq i32 %conv239, 8, !dbg !10360
  br i1 %cmp240, label %cond.true248, label %lor.lhs.false242, !dbg !10360

lor.lhs.false242:                                 ; preds = %land.lhs.true236
  %106 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom243 = zext i32 %106 to i64, !dbg !10360
  %arrayidx244 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom243, !dbg !10360
  %107 = load i8, i8* %arrayidx244, align 1, !dbg !10360
  %conv245 = zext i8 %107 to i32, !dbg !10360
  %cmp246 = icmp eq i32 %conv245, 9, !dbg !10360
  br i1 %cmp246, label %cond.true248, label %cond.false249, !dbg !10360

cond.true248:                                     ; preds = %lor.lhs.false242, %land.lhs.true236
  %108 = load i32, i32* %mode.addr, align 4, !dbg !10360
  br label %cond.end253, !dbg !10360

cond.false249:                                    ; preds = %lor.lhs.false242
  %109 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom250 = zext i32 %109 to i64, !dbg !10360
  %arrayidx251 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom250, !dbg !10360
  %110 = load i8, i8* %arrayidx251, align 1, !dbg !10360
  %conv252 = zext i8 %110 to i32, !dbg !10360
  br label %cond.end253, !dbg !10360

cond.end253:                                      ; preds = %cond.false249, %cond.true248
  %cond254 = phi i32 [ %108, %cond.true248 ], [ %conv252, %cond.false249 ], !dbg !10360
  %idxprom255 = zext i32 %cond254 to i64, !dbg !10360
  %arrayidx256 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom255, !dbg !10360
  %111 = load i8, i8* %arrayidx256, align 1, !dbg !10360
  %conv257 = zext i8 %111 to i32, !dbg !10360
  %cmp258 = icmp eq i32 %conv257, 9, !dbg !10360
  br i1 %cmp258, label %cond.true260, label %cond.false281, !dbg !10360

cond.true260:                                     ; preds = %cond.end253
  %112 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom261 = zext i32 %112 to i64, !dbg !10360
  %arrayidx262 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom261, !dbg !10360
  %113 = load i8, i8* %arrayidx262, align 1, !dbg !10360
  %conv263 = zext i8 %113 to i32, !dbg !10360
  %cmp264 = icmp eq i32 %conv263, 8, !dbg !10360
  br i1 %cmp264, label %cond.true272, label %lor.lhs.false266, !dbg !10360

lor.lhs.false266:                                 ; preds = %cond.true260
  %114 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom267 = zext i32 %114 to i64, !dbg !10360
  %arrayidx268 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom267, !dbg !10360
  %115 = load i8, i8* %arrayidx268, align 1, !dbg !10360
  %conv269 = zext i8 %115 to i32, !dbg !10360
  %cmp270 = icmp eq i32 %conv269, 9, !dbg !10360
  br i1 %cmp270, label %cond.true272, label %cond.false273, !dbg !10360

cond.true272:                                     ; preds = %lor.lhs.false266, %cond.true260
  %116 = load i32, i32* %mode.addr, align 4, !dbg !10360
  br label %cond.end277, !dbg !10360

cond.false273:                                    ; preds = %lor.lhs.false266
  %117 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom274 = zext i32 %117 to i64, !dbg !10360
  %arrayidx275 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom274, !dbg !10360
  %118 = load i8, i8* %arrayidx275, align 1, !dbg !10360
  %conv276 = zext i8 %118 to i32, !dbg !10360
  br label %cond.end277, !dbg !10360

cond.end277:                                      ; preds = %cond.false273, %cond.true272
  %cond278 = phi i32 [ %116, %cond.true272 ], [ %conv276, %cond.false273 ], !dbg !10360
  %sub279 = sub i32 %cond278, 42, !dbg !10360
  %add280 = add i32 %sub279, 4, !dbg !10360
  br label %cond.end301, !dbg !10360

cond.false281:                                    ; preds = %cond.end253
  %119 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom282 = zext i32 %119 to i64, !dbg !10360
  %arrayidx283 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom282, !dbg !10360
  %120 = load i8, i8* %arrayidx283, align 1, !dbg !10360
  %conv284 = zext i8 %120 to i32, !dbg !10360
  %cmp285 = icmp eq i32 %conv284, 8, !dbg !10360
  br i1 %cmp285, label %cond.true293, label %lor.lhs.false287, !dbg !10360

lor.lhs.false287:                                 ; preds = %cond.false281
  %121 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom288 = zext i32 %121 to i64, !dbg !10360
  %arrayidx289 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom288, !dbg !10360
  %122 = load i8, i8* %arrayidx289, align 1, !dbg !10360
  %conv290 = zext i8 %122 to i32, !dbg !10360
  %cmp291 = icmp eq i32 %conv290, 9, !dbg !10360
  br i1 %cmp291, label %cond.true293, label %cond.false294, !dbg !10360

cond.true293:                                     ; preds = %lor.lhs.false287, %cond.false281
  %123 = load i32, i32* %mode.addr, align 4, !dbg !10360
  br label %cond.end298, !dbg !10360

cond.false294:                                    ; preds = %lor.lhs.false287
  %124 = load i32, i32* %mode.addr, align 4, !dbg !10360
  %idxprom295 = zext i32 %124 to i64, !dbg !10360
  %arrayidx296 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom295, !dbg !10360
  %125 = load i8, i8* %arrayidx296, align 1, !dbg !10360
  %conv297 = zext i8 %125 to i32, !dbg !10360
  br label %cond.end298, !dbg !10360

cond.end298:                                      ; preds = %cond.false294, %cond.true293
  %cond299 = phi i32 [ %123, %cond.true293 ], [ %conv297, %cond.false294 ], !dbg !10360
  %sub300 = sub i32 %cond299, 38, !dbg !10360
  br label %cond.end301, !dbg !10360

cond.end301:                                      ; preds = %cond.end298, %cond.end277
  %cond302 = phi i32 [ %add280, %cond.end277 ], [ %sub300, %cond.end298 ], !dbg !10360
  %idxprom303 = zext i32 %cond302 to i64, !dbg !10360
  %arrayidx304 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom303, !dbg !10360
  %126 = load %struct.real_format*, %struct.real_format** %arrayidx304, align 8, !dbg !10360
  %has_nans305 = getelementptr inbounds %struct.real_format, %struct.real_format* %126, i32 0, i32 11, !dbg !10360
  %127 = load i8, i8* %has_nans305, align 2, !dbg !10360
  %conv306 = zext i8 %127 to i32, !dbg !10360
  %tobool307 = icmp ne i32 %conv306, 0, !dbg !10360
  br i1 %tobool307, label %land.lhs.true308, label %land.lhs.true310, !dbg !10360

land.lhs.true308:                                 ; preds = %cond.end301
  %128 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10360
  %tobool309 = icmp ne i32 %128, 0, !dbg !10360
  br i1 %tobool309, label %land.lhs.true310, label %if.end314, !dbg !10362

land.lhs.true310:                                 ; preds = %land.lhs.true308, %cond.end301, %lor.lhs.false230
  %129 = load i32, i32* %code.addr, align 4, !dbg !10363
  %cmp311 = icmp eq i32 %129, 90, !dbg !10364
  br i1 %cmp311, label %if.then313, label %if.end314, !dbg !10365

if.then313:                                       ; preds = %land.lhs.true310
  %130 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10366
  store %struct.rtx_def* %130, %struct.rtx_def** %retval, align 8, !dbg !10367
  br label %return, !dbg !10367

if.end314:                                        ; preds = %land.lhs.true310, %land.lhs.true308
  %131 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !10368
  %bf.load315 = load i32, i32* %132, align 8, !dbg !10368
  %bf.lshr316 = lshr i32 %bf.load315, 16, !dbg !10368
  %bf.clear317 = and i32 %bf.lshr316, 255, !dbg !10368
  %idxprom318 = zext i32 %bf.clear317 to i64, !dbg !10368
  %arrayidx319 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom318, !dbg !10368
  %133 = load i8, i8* %arrayidx319, align 1, !dbg !10368
  %conv320 = zext i8 %133 to i32, !dbg !10368
  %cmp321 = icmp eq i32 %conv320, 8, !dbg !10368
  br i1 %cmp321, label %land.lhs.true350, label %lor.lhs.false323, !dbg !10368

lor.lhs.false323:                                 ; preds = %if.end314
  %134 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !10368
  %bf.load324 = load i32, i32* %135, align 8, !dbg !10368
  %bf.lshr325 = lshr i32 %bf.load324, 16, !dbg !10368
  %bf.clear326 = and i32 %bf.lshr325, 255, !dbg !10368
  %idxprom327 = zext i32 %bf.clear326 to i64, !dbg !10368
  %arrayidx328 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom327, !dbg !10368
  %136 = load i8, i8* %arrayidx328, align 1, !dbg !10368
  %conv329 = zext i8 %136 to i32, !dbg !10368
  %cmp330 = icmp eq i32 %conv329, 9, !dbg !10368
  br i1 %cmp330, label %land.lhs.true350, label %lor.lhs.false332, !dbg !10368

lor.lhs.false332:                                 ; preds = %lor.lhs.false323
  %137 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %138 = bitcast %struct.rtx_def* %137 to i32*, !dbg !10368
  %bf.load333 = load i32, i32* %138, align 8, !dbg !10368
  %bf.lshr334 = lshr i32 %bf.load333, 16, !dbg !10368
  %bf.clear335 = and i32 %bf.lshr334, 255, !dbg !10368
  %idxprom336 = zext i32 %bf.clear335 to i64, !dbg !10368
  %arrayidx337 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom336, !dbg !10368
  %139 = load i8, i8* %arrayidx337, align 1, !dbg !10368
  %conv338 = zext i8 %139 to i32, !dbg !10368
  %cmp339 = icmp eq i32 %conv338, 11, !dbg !10368
  br i1 %cmp339, label %land.lhs.true350, label %lor.lhs.false341, !dbg !10368

lor.lhs.false341:                                 ; preds = %lor.lhs.false332
  %140 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !10368
  %bf.load342 = load i32, i32* %141, align 8, !dbg !10368
  %bf.lshr343 = lshr i32 %bf.load342, 16, !dbg !10368
  %bf.clear344 = and i32 %bf.lshr343, 255, !dbg !10368
  %idxprom345 = zext i32 %bf.clear344 to i64, !dbg !10368
  %arrayidx346 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom345, !dbg !10368
  %142 = load i8, i8* %arrayidx346, align 1, !dbg !10368
  %conv347 = zext i8 %142 to i32, !dbg !10368
  %cmp348 = icmp eq i32 %conv347, 17, !dbg !10368
  br i1 %cmp348, label %land.lhs.true350, label %land.lhs.true626, !dbg !10368

land.lhs.true350:                                 ; preds = %lor.lhs.false341, %lor.lhs.false332, %lor.lhs.false323, %if.end314
  %143 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %144 = bitcast %struct.rtx_def* %143 to i32*, !dbg !10368
  %bf.load351 = load i32, i32* %144, align 8, !dbg !10368
  %bf.lshr352 = lshr i32 %bf.load351, 16, !dbg !10368
  %bf.clear353 = and i32 %bf.lshr352, 255, !dbg !10368
  %idxprom354 = zext i32 %bf.clear353 to i64, !dbg !10368
  %arrayidx355 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom354, !dbg !10368
  %145 = load i8, i8* %arrayidx355, align 1, !dbg !10368
  %conv356 = zext i8 %145 to i32, !dbg !10368
  %cmp357 = icmp eq i32 %conv356, 8, !dbg !10368
  br i1 %cmp357, label %cond.true368, label %lor.lhs.false359, !dbg !10368

lor.lhs.false359:                                 ; preds = %land.lhs.true350
  %146 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !10368
  %bf.load360 = load i32, i32* %147, align 8, !dbg !10368
  %bf.lshr361 = lshr i32 %bf.load360, 16, !dbg !10368
  %bf.clear362 = and i32 %bf.lshr361, 255, !dbg !10368
  %idxprom363 = zext i32 %bf.clear362 to i64, !dbg !10368
  %arrayidx364 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom363, !dbg !10368
  %148 = load i8, i8* %arrayidx364, align 1, !dbg !10368
  %conv365 = zext i8 %148 to i32, !dbg !10368
  %cmp366 = icmp eq i32 %conv365, 9, !dbg !10368
  br i1 %cmp366, label %cond.true368, label %cond.false372, !dbg !10368

cond.true368:                                     ; preds = %lor.lhs.false359, %land.lhs.true350
  %149 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !10368
  %bf.load369 = load i32, i32* %150, align 8, !dbg !10368
  %bf.lshr370 = lshr i32 %bf.load369, 16, !dbg !10368
  %bf.clear371 = and i32 %bf.lshr370, 255, !dbg !10368
  br label %cond.end379, !dbg !10368

cond.false372:                                    ; preds = %lor.lhs.false359
  %151 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !10368
  %bf.load373 = load i32, i32* %152, align 8, !dbg !10368
  %bf.lshr374 = lshr i32 %bf.load373, 16, !dbg !10368
  %bf.clear375 = and i32 %bf.lshr374, 255, !dbg !10368
  %idxprom376 = zext i32 %bf.clear375 to i64, !dbg !10368
  %arrayidx377 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom376, !dbg !10368
  %153 = load i8, i8* %arrayidx377, align 1, !dbg !10368
  %conv378 = zext i8 %153 to i32, !dbg !10368
  br label %cond.end379, !dbg !10368

cond.end379:                                      ; preds = %cond.false372, %cond.true368
  %cond380 = phi i32 [ %bf.clear371, %cond.true368 ], [ %conv378, %cond.false372 ], !dbg !10368
  %idxprom381 = zext i32 %cond380 to i64, !dbg !10368
  %arrayidx382 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom381, !dbg !10368
  %154 = load i8, i8* %arrayidx382, align 1, !dbg !10368
  %conv383 = zext i8 %154 to i32, !dbg !10368
  %cmp384 = icmp eq i32 %conv383, 9, !dbg !10368
  br i1 %cmp384, label %cond.true386, label %cond.false419, !dbg !10368

cond.true386:                                     ; preds = %cond.end379
  %155 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !10368
  %bf.load387 = load i32, i32* %156, align 8, !dbg !10368
  %bf.lshr388 = lshr i32 %bf.load387, 16, !dbg !10368
  %bf.clear389 = and i32 %bf.lshr388, 255, !dbg !10368
  %idxprom390 = zext i32 %bf.clear389 to i64, !dbg !10368
  %arrayidx391 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom390, !dbg !10368
  %157 = load i8, i8* %arrayidx391, align 1, !dbg !10368
  %conv392 = zext i8 %157 to i32, !dbg !10368
  %cmp393 = icmp eq i32 %conv392, 8, !dbg !10368
  br i1 %cmp393, label %cond.true404, label %lor.lhs.false395, !dbg !10368

lor.lhs.false395:                                 ; preds = %cond.true386
  %158 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %159 = bitcast %struct.rtx_def* %158 to i32*, !dbg !10368
  %bf.load396 = load i32, i32* %159, align 8, !dbg !10368
  %bf.lshr397 = lshr i32 %bf.load396, 16, !dbg !10368
  %bf.clear398 = and i32 %bf.lshr397, 255, !dbg !10368
  %idxprom399 = zext i32 %bf.clear398 to i64, !dbg !10368
  %arrayidx400 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom399, !dbg !10368
  %160 = load i8, i8* %arrayidx400, align 1, !dbg !10368
  %conv401 = zext i8 %160 to i32, !dbg !10368
  %cmp402 = icmp eq i32 %conv401, 9, !dbg !10368
  br i1 %cmp402, label %cond.true404, label %cond.false408, !dbg !10368

cond.true404:                                     ; preds = %lor.lhs.false395, %cond.true386
  %161 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !10368
  %bf.load405 = load i32, i32* %162, align 8, !dbg !10368
  %bf.lshr406 = lshr i32 %bf.load405, 16, !dbg !10368
  %bf.clear407 = and i32 %bf.lshr406, 255, !dbg !10368
  br label %cond.end415, !dbg !10368

cond.false408:                                    ; preds = %lor.lhs.false395
  %163 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !10368
  %bf.load409 = load i32, i32* %164, align 8, !dbg !10368
  %bf.lshr410 = lshr i32 %bf.load409, 16, !dbg !10368
  %bf.clear411 = and i32 %bf.lshr410, 255, !dbg !10368
  %idxprom412 = zext i32 %bf.clear411 to i64, !dbg !10368
  %arrayidx413 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom412, !dbg !10368
  %165 = load i8, i8* %arrayidx413, align 1, !dbg !10368
  %conv414 = zext i8 %165 to i32, !dbg !10368
  br label %cond.end415, !dbg !10368

cond.end415:                                      ; preds = %cond.false408, %cond.true404
  %cond416 = phi i32 [ %bf.clear407, %cond.true404 ], [ %conv414, %cond.false408 ], !dbg !10368
  %sub417 = sub i32 %cond416, 42, !dbg !10368
  %add418 = add i32 %sub417, 4, !dbg !10368
  br label %cond.end451, !dbg !10368

cond.false419:                                    ; preds = %cond.end379
  %166 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %167 = bitcast %struct.rtx_def* %166 to i32*, !dbg !10368
  %bf.load420 = load i32, i32* %167, align 8, !dbg !10368
  %bf.lshr421 = lshr i32 %bf.load420, 16, !dbg !10368
  %bf.clear422 = and i32 %bf.lshr421, 255, !dbg !10368
  %idxprom423 = zext i32 %bf.clear422 to i64, !dbg !10368
  %arrayidx424 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom423, !dbg !10368
  %168 = load i8, i8* %arrayidx424, align 1, !dbg !10368
  %conv425 = zext i8 %168 to i32, !dbg !10368
  %cmp426 = icmp eq i32 %conv425, 8, !dbg !10368
  br i1 %cmp426, label %cond.true437, label %lor.lhs.false428, !dbg !10368

lor.lhs.false428:                                 ; preds = %cond.false419
  %169 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %170 = bitcast %struct.rtx_def* %169 to i32*, !dbg !10368
  %bf.load429 = load i32, i32* %170, align 8, !dbg !10368
  %bf.lshr430 = lshr i32 %bf.load429, 16, !dbg !10368
  %bf.clear431 = and i32 %bf.lshr430, 255, !dbg !10368
  %idxprom432 = zext i32 %bf.clear431 to i64, !dbg !10368
  %arrayidx433 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom432, !dbg !10368
  %171 = load i8, i8* %arrayidx433, align 1, !dbg !10368
  %conv434 = zext i8 %171 to i32, !dbg !10368
  %cmp435 = icmp eq i32 %conv434, 9, !dbg !10368
  br i1 %cmp435, label %cond.true437, label %cond.false441, !dbg !10368

cond.true437:                                     ; preds = %lor.lhs.false428, %cond.false419
  %172 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %173 = bitcast %struct.rtx_def* %172 to i32*, !dbg !10368
  %bf.load438 = load i32, i32* %173, align 8, !dbg !10368
  %bf.lshr439 = lshr i32 %bf.load438, 16, !dbg !10368
  %bf.clear440 = and i32 %bf.lshr439, 255, !dbg !10368
  br label %cond.end448, !dbg !10368

cond.false441:                                    ; preds = %lor.lhs.false428
  %174 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10368
  %175 = bitcast %struct.rtx_def* %174 to i32*, !dbg !10368
  %bf.load442 = load i32, i32* %175, align 8, !dbg !10368
  %bf.lshr443 = lshr i32 %bf.load442, 16, !dbg !10368
  %bf.clear444 = and i32 %bf.lshr443, 255, !dbg !10368
  %idxprom445 = zext i32 %bf.clear444 to i64, !dbg !10368
  %arrayidx446 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom445, !dbg !10368
  %176 = load i8, i8* %arrayidx446, align 1, !dbg !10368
  %conv447 = zext i8 %176 to i32, !dbg !10368
  br label %cond.end448, !dbg !10368

cond.end448:                                      ; preds = %cond.false441, %cond.true437
  %cond449 = phi i32 [ %bf.clear440, %cond.true437 ], [ %conv447, %cond.false441 ], !dbg !10368
  %sub450 = sub i32 %cond449, 38, !dbg !10368
  br label %cond.end451, !dbg !10368

cond.end451:                                      ; preds = %cond.end448, %cond.end415
  %cond452 = phi i32 [ %add418, %cond.end415 ], [ %sub450, %cond.end448 ], !dbg !10368
  %idxprom453 = zext i32 %cond452 to i64, !dbg !10368
  %arrayidx454 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom453, !dbg !10368
  %177 = load %struct.real_format*, %struct.real_format** %arrayidx454, align 8, !dbg !10368
  %has_nans455 = getelementptr inbounds %struct.real_format, %struct.real_format* %177, i32 0, i32 11, !dbg !10368
  %178 = load i8, i8* %has_nans455, align 2, !dbg !10368
  %conv456 = zext i8 %178 to i32, !dbg !10368
  %tobool457 = icmp ne i32 %conv456, 0, !dbg !10368
  br i1 %tobool457, label %land.lhs.true458, label %land.lhs.true626, !dbg !10368

land.lhs.true458:                                 ; preds = %cond.end451
  %179 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10368
  %tobool459 = icmp ne i32 %179, 0, !dbg !10368
  br i1 %tobool459, label %land.lhs.true626, label %lor.lhs.false460, !dbg !10370

lor.lhs.false460:                                 ; preds = %land.lhs.true458
  %180 = load i32, i32* %code.addr, align 4, !dbg !10371
  %cmp461 = icmp eq i32 %180, 92, !dbg !10372
  br i1 %cmp461, label %land.lhs.true626, label %lor.lhs.false463, !dbg !10373

lor.lhs.false463:                                 ; preds = %lor.lhs.false460
  %181 = load i32, i32* %code.addr, align 4, !dbg !10374
  %cmp464 = icmp eq i32 %181, 95, !dbg !10375
  br i1 %cmp464, label %land.lhs.true626, label %lor.lhs.false466, !dbg !10376

lor.lhs.false466:                                 ; preds = %lor.lhs.false463
  %182 = load i32, i32* %code.addr, align 4, !dbg !10377
  %cmp467 = icmp eq i32 %182, 93, !dbg !10378
  br i1 %cmp467, label %land.lhs.true626, label %lor.lhs.false469, !dbg !10379

lor.lhs.false469:                                 ; preds = %lor.lhs.false466
  %183 = load i32, i32* %code.addr, align 4, !dbg !10380
  %cmp470 = icmp eq i32 %183, 85, !dbg !10381
  br i1 %cmp470, label %land.lhs.true478, label %lor.lhs.false472, !dbg !10382

lor.lhs.false472:                                 ; preds = %lor.lhs.false469
  %184 = load i32, i32* %code.addr, align 4, !dbg !10383
  %cmp473 = icmp eq i32 %184, 83, !dbg !10384
  br i1 %cmp473, label %land.lhs.true478, label %lor.lhs.false475, !dbg !10385

lor.lhs.false475:                                 ; preds = %lor.lhs.false472
  %185 = load i32, i32* %code.addr, align 4, !dbg !10386
  %cmp476 = icmp eq i32 %185, 97, !dbg !10387
  br i1 %cmp476, label %land.lhs.true478, label %if.end634, !dbg !10388

land.lhs.true478:                                 ; preds = %lor.lhs.false475, %lor.lhs.false472, %lor.lhs.false469
  %186 = load i32, i32* @flag_signaling_nans, align 4, !dbg !10389
  %tobool479 = icmp ne i32 %186, 0, !dbg !10389
  br i1 %tobool479, label %land.lhs.true480, label %land.lhs.true626, !dbg !10389

land.lhs.true480:                                 ; preds = %land.lhs.true478
  %187 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %188 = bitcast %struct.rtx_def* %187 to i32*, !dbg !10389
  %bf.load481 = load i32, i32* %188, align 8, !dbg !10389
  %bf.lshr482 = lshr i32 %bf.load481, 16, !dbg !10389
  %bf.clear483 = and i32 %bf.lshr482, 255, !dbg !10389
  %idxprom484 = zext i32 %bf.clear483 to i64, !dbg !10389
  %arrayidx485 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom484, !dbg !10389
  %189 = load i8, i8* %arrayidx485, align 1, !dbg !10389
  %conv486 = zext i8 %189 to i32, !dbg !10389
  %cmp487 = icmp eq i32 %conv486, 8, !dbg !10389
  br i1 %cmp487, label %land.lhs.true516, label %lor.lhs.false489, !dbg !10389

lor.lhs.false489:                                 ; preds = %land.lhs.true480
  %190 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %191 = bitcast %struct.rtx_def* %190 to i32*, !dbg !10389
  %bf.load490 = load i32, i32* %191, align 8, !dbg !10389
  %bf.lshr491 = lshr i32 %bf.load490, 16, !dbg !10389
  %bf.clear492 = and i32 %bf.lshr491, 255, !dbg !10389
  %idxprom493 = zext i32 %bf.clear492 to i64, !dbg !10389
  %arrayidx494 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom493, !dbg !10389
  %192 = load i8, i8* %arrayidx494, align 1, !dbg !10389
  %conv495 = zext i8 %192 to i32, !dbg !10389
  %cmp496 = icmp eq i32 %conv495, 9, !dbg !10389
  br i1 %cmp496, label %land.lhs.true516, label %lor.lhs.false498, !dbg !10389

lor.lhs.false498:                                 ; preds = %lor.lhs.false489
  %193 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !10389
  %bf.load499 = load i32, i32* %194, align 8, !dbg !10389
  %bf.lshr500 = lshr i32 %bf.load499, 16, !dbg !10389
  %bf.clear501 = and i32 %bf.lshr500, 255, !dbg !10389
  %idxprom502 = zext i32 %bf.clear501 to i64, !dbg !10389
  %arrayidx503 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom502, !dbg !10389
  %195 = load i8, i8* %arrayidx503, align 1, !dbg !10389
  %conv504 = zext i8 %195 to i32, !dbg !10389
  %cmp505 = icmp eq i32 %conv504, 11, !dbg !10389
  br i1 %cmp505, label %land.lhs.true516, label %lor.lhs.false507, !dbg !10389

lor.lhs.false507:                                 ; preds = %lor.lhs.false498
  %196 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %197 = bitcast %struct.rtx_def* %196 to i32*, !dbg !10389
  %bf.load508 = load i32, i32* %197, align 8, !dbg !10389
  %bf.lshr509 = lshr i32 %bf.load508, 16, !dbg !10389
  %bf.clear510 = and i32 %bf.lshr509, 255, !dbg !10389
  %idxprom511 = zext i32 %bf.clear510 to i64, !dbg !10389
  %arrayidx512 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom511, !dbg !10389
  %198 = load i8, i8* %arrayidx512, align 1, !dbg !10389
  %conv513 = zext i8 %198 to i32, !dbg !10389
  %cmp514 = icmp eq i32 %conv513, 17, !dbg !10389
  br i1 %cmp514, label %land.lhs.true516, label %land.lhs.true626, !dbg !10389

land.lhs.true516:                                 ; preds = %lor.lhs.false507, %lor.lhs.false498, %lor.lhs.false489, %land.lhs.true480
  %199 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %200 = bitcast %struct.rtx_def* %199 to i32*, !dbg !10389
  %bf.load517 = load i32, i32* %200, align 8, !dbg !10389
  %bf.lshr518 = lshr i32 %bf.load517, 16, !dbg !10389
  %bf.clear519 = and i32 %bf.lshr518, 255, !dbg !10389
  %idxprom520 = zext i32 %bf.clear519 to i64, !dbg !10389
  %arrayidx521 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom520, !dbg !10389
  %201 = load i8, i8* %arrayidx521, align 1, !dbg !10389
  %conv522 = zext i8 %201 to i32, !dbg !10389
  %cmp523 = icmp eq i32 %conv522, 8, !dbg !10389
  br i1 %cmp523, label %cond.true534, label %lor.lhs.false525, !dbg !10389

lor.lhs.false525:                                 ; preds = %land.lhs.true516
  %202 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %203 = bitcast %struct.rtx_def* %202 to i32*, !dbg !10389
  %bf.load526 = load i32, i32* %203, align 8, !dbg !10389
  %bf.lshr527 = lshr i32 %bf.load526, 16, !dbg !10389
  %bf.clear528 = and i32 %bf.lshr527, 255, !dbg !10389
  %idxprom529 = zext i32 %bf.clear528 to i64, !dbg !10389
  %arrayidx530 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom529, !dbg !10389
  %204 = load i8, i8* %arrayidx530, align 1, !dbg !10389
  %conv531 = zext i8 %204 to i32, !dbg !10389
  %cmp532 = icmp eq i32 %conv531, 9, !dbg !10389
  br i1 %cmp532, label %cond.true534, label %cond.false538, !dbg !10389

cond.true534:                                     ; preds = %lor.lhs.false525, %land.lhs.true516
  %205 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %206 = bitcast %struct.rtx_def* %205 to i32*, !dbg !10389
  %bf.load535 = load i32, i32* %206, align 8, !dbg !10389
  %bf.lshr536 = lshr i32 %bf.load535, 16, !dbg !10389
  %bf.clear537 = and i32 %bf.lshr536, 255, !dbg !10389
  br label %cond.end545, !dbg !10389

cond.false538:                                    ; preds = %lor.lhs.false525
  %207 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !10389
  %bf.load539 = load i32, i32* %208, align 8, !dbg !10389
  %bf.lshr540 = lshr i32 %bf.load539, 16, !dbg !10389
  %bf.clear541 = and i32 %bf.lshr540, 255, !dbg !10389
  %idxprom542 = zext i32 %bf.clear541 to i64, !dbg !10389
  %arrayidx543 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom542, !dbg !10389
  %209 = load i8, i8* %arrayidx543, align 1, !dbg !10389
  %conv544 = zext i8 %209 to i32, !dbg !10389
  br label %cond.end545, !dbg !10389

cond.end545:                                      ; preds = %cond.false538, %cond.true534
  %cond546 = phi i32 [ %bf.clear537, %cond.true534 ], [ %conv544, %cond.false538 ], !dbg !10389
  %idxprom547 = zext i32 %cond546 to i64, !dbg !10389
  %arrayidx548 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom547, !dbg !10389
  %210 = load i8, i8* %arrayidx548, align 1, !dbg !10389
  %conv549 = zext i8 %210 to i32, !dbg !10389
  %cmp550 = icmp eq i32 %conv549, 9, !dbg !10389
  br i1 %cmp550, label %cond.true552, label %cond.false585, !dbg !10389

cond.true552:                                     ; preds = %cond.end545
  %211 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %212 = bitcast %struct.rtx_def* %211 to i32*, !dbg !10389
  %bf.load553 = load i32, i32* %212, align 8, !dbg !10389
  %bf.lshr554 = lshr i32 %bf.load553, 16, !dbg !10389
  %bf.clear555 = and i32 %bf.lshr554, 255, !dbg !10389
  %idxprom556 = zext i32 %bf.clear555 to i64, !dbg !10389
  %arrayidx557 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom556, !dbg !10389
  %213 = load i8, i8* %arrayidx557, align 1, !dbg !10389
  %conv558 = zext i8 %213 to i32, !dbg !10389
  %cmp559 = icmp eq i32 %conv558, 8, !dbg !10389
  br i1 %cmp559, label %cond.true570, label %lor.lhs.false561, !dbg !10389

lor.lhs.false561:                                 ; preds = %cond.true552
  %214 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %215 = bitcast %struct.rtx_def* %214 to i32*, !dbg !10389
  %bf.load562 = load i32, i32* %215, align 8, !dbg !10389
  %bf.lshr563 = lshr i32 %bf.load562, 16, !dbg !10389
  %bf.clear564 = and i32 %bf.lshr563, 255, !dbg !10389
  %idxprom565 = zext i32 %bf.clear564 to i64, !dbg !10389
  %arrayidx566 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom565, !dbg !10389
  %216 = load i8, i8* %arrayidx566, align 1, !dbg !10389
  %conv567 = zext i8 %216 to i32, !dbg !10389
  %cmp568 = icmp eq i32 %conv567, 9, !dbg !10389
  br i1 %cmp568, label %cond.true570, label %cond.false574, !dbg !10389

cond.true570:                                     ; preds = %lor.lhs.false561, %cond.true552
  %217 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %218 = bitcast %struct.rtx_def* %217 to i32*, !dbg !10389
  %bf.load571 = load i32, i32* %218, align 8, !dbg !10389
  %bf.lshr572 = lshr i32 %bf.load571, 16, !dbg !10389
  %bf.clear573 = and i32 %bf.lshr572, 255, !dbg !10389
  br label %cond.end581, !dbg !10389

cond.false574:                                    ; preds = %lor.lhs.false561
  %219 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %220 = bitcast %struct.rtx_def* %219 to i32*, !dbg !10389
  %bf.load575 = load i32, i32* %220, align 8, !dbg !10389
  %bf.lshr576 = lshr i32 %bf.load575, 16, !dbg !10389
  %bf.clear577 = and i32 %bf.lshr576, 255, !dbg !10389
  %idxprom578 = zext i32 %bf.clear577 to i64, !dbg !10389
  %arrayidx579 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom578, !dbg !10389
  %221 = load i8, i8* %arrayidx579, align 1, !dbg !10389
  %conv580 = zext i8 %221 to i32, !dbg !10389
  br label %cond.end581, !dbg !10389

cond.end581:                                      ; preds = %cond.false574, %cond.true570
  %cond582 = phi i32 [ %bf.clear573, %cond.true570 ], [ %conv580, %cond.false574 ], !dbg !10389
  %sub583 = sub i32 %cond582, 42, !dbg !10389
  %add584 = add i32 %sub583, 4, !dbg !10389
  br label %cond.end617, !dbg !10389

cond.false585:                                    ; preds = %cond.end545
  %222 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %223 = bitcast %struct.rtx_def* %222 to i32*, !dbg !10389
  %bf.load586 = load i32, i32* %223, align 8, !dbg !10389
  %bf.lshr587 = lshr i32 %bf.load586, 16, !dbg !10389
  %bf.clear588 = and i32 %bf.lshr587, 255, !dbg !10389
  %idxprom589 = zext i32 %bf.clear588 to i64, !dbg !10389
  %arrayidx590 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom589, !dbg !10389
  %224 = load i8, i8* %arrayidx590, align 1, !dbg !10389
  %conv591 = zext i8 %224 to i32, !dbg !10389
  %cmp592 = icmp eq i32 %conv591, 8, !dbg !10389
  br i1 %cmp592, label %cond.true603, label %lor.lhs.false594, !dbg !10389

lor.lhs.false594:                                 ; preds = %cond.false585
  %225 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %226 = bitcast %struct.rtx_def* %225 to i32*, !dbg !10389
  %bf.load595 = load i32, i32* %226, align 8, !dbg !10389
  %bf.lshr596 = lshr i32 %bf.load595, 16, !dbg !10389
  %bf.clear597 = and i32 %bf.lshr596, 255, !dbg !10389
  %idxprom598 = zext i32 %bf.clear597 to i64, !dbg !10389
  %arrayidx599 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom598, !dbg !10389
  %227 = load i8, i8* %arrayidx599, align 1, !dbg !10389
  %conv600 = zext i8 %227 to i32, !dbg !10389
  %cmp601 = icmp eq i32 %conv600, 9, !dbg !10389
  br i1 %cmp601, label %cond.true603, label %cond.false607, !dbg !10389

cond.true603:                                     ; preds = %lor.lhs.false594, %cond.false585
  %228 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %229 = bitcast %struct.rtx_def* %228 to i32*, !dbg !10389
  %bf.load604 = load i32, i32* %229, align 8, !dbg !10389
  %bf.lshr605 = lshr i32 %bf.load604, 16, !dbg !10389
  %bf.clear606 = and i32 %bf.lshr605, 255, !dbg !10389
  br label %cond.end614, !dbg !10389

cond.false607:                                    ; preds = %lor.lhs.false594
  %230 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10389
  %231 = bitcast %struct.rtx_def* %230 to i32*, !dbg !10389
  %bf.load608 = load i32, i32* %231, align 8, !dbg !10389
  %bf.lshr609 = lshr i32 %bf.load608, 16, !dbg !10389
  %bf.clear610 = and i32 %bf.lshr609, 255, !dbg !10389
  %idxprom611 = zext i32 %bf.clear610 to i64, !dbg !10389
  %arrayidx612 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom611, !dbg !10389
  %232 = load i8, i8* %arrayidx612, align 1, !dbg !10389
  %conv613 = zext i8 %232 to i32, !dbg !10389
  br label %cond.end614, !dbg !10389

cond.end614:                                      ; preds = %cond.false607, %cond.true603
  %cond615 = phi i32 [ %bf.clear606, %cond.true603 ], [ %conv613, %cond.false607 ], !dbg !10389
  %sub616 = sub i32 %cond615, 38, !dbg !10389
  br label %cond.end617, !dbg !10389

cond.end617:                                      ; preds = %cond.end614, %cond.end581
  %cond618 = phi i32 [ %add584, %cond.end581 ], [ %sub616, %cond.end614 ], !dbg !10389
  %idxprom619 = zext i32 %cond618 to i64, !dbg !10389
  %arrayidx620 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom619, !dbg !10389
  %233 = load %struct.real_format*, %struct.real_format** %arrayidx620, align 8, !dbg !10389
  %has_nans621 = getelementptr inbounds %struct.real_format, %struct.real_format* %233, i32 0, i32 11, !dbg !10389
  %234 = load i8, i8* %has_nans621, align 2, !dbg !10389
  %conv622 = zext i8 %234 to i32, !dbg !10389
  %tobool623 = icmp ne i32 %conv622, 0, !dbg !10389
  br i1 %tobool623, label %land.lhs.true624, label %land.lhs.true626, !dbg !10389

land.lhs.true624:                                 ; preds = %cond.end617
  %235 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10389
  %tobool625 = icmp ne i32 %235, 0, !dbg !10389
  br i1 %tobool625, label %land.lhs.true626, label %if.end634, !dbg !10390

land.lhs.true626:                                 ; preds = %land.lhs.true624, %cond.end617, %lor.lhs.false507, %land.lhs.true478, %lor.lhs.false466, %lor.lhs.false463, %lor.lhs.false460, %land.lhs.true458, %cond.end451, %lor.lhs.false341
  %236 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10391
  %237 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10392
  %call627 = call i32 @rtx_equal_p(%struct.rtx_def* %236, %struct.rtx_def* %237), !dbg !10393
  %tobool628 = icmp ne i32 %call627, 0, !dbg !10393
  br i1 %tobool628, label %land.lhs.true629, label %if.end634, !dbg !10394

land.lhs.true629:                                 ; preds = %land.lhs.true626
  %238 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10395
  %call630 = call i32 @side_effects_p(%struct.rtx_def* %238), !dbg !10396
  %tobool631 = icmp ne i32 %call630, 0, !dbg !10396
  br i1 %tobool631, label %if.end634, label %if.then632, !dbg !10397

if.then632:                                       ; preds = %land.lhs.true629
  %239 = load i32, i32* %code.addr, align 4, !dbg !10398
  %call633 = call %struct.rtx_def* @comparison_result(i32 %239, i32 1), !dbg !10399
  store %struct.rtx_def* %call633, %struct.rtx_def** %retval, align 8, !dbg !10400
  br label %return, !dbg !10400

if.end634:                                        ; preds = %land.lhs.true629, %land.lhs.true626, %land.lhs.true624, %lor.lhs.false475
  %240 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10401
  %241 = bitcast %struct.rtx_def* %240 to i32*, !dbg !10401
  %bf.load635 = load i32, i32* %241, align 8, !dbg !10401
  %bf.clear636 = and i32 %bf.load635, 65535, !dbg !10401
  %cmp637 = icmp eq i32 %bf.clear636, 32, !dbg !10403
  br i1 %cmp637, label %land.lhs.true639, label %if.end688, !dbg !10404

land.lhs.true639:                                 ; preds = %if.end634
  %242 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10405
  %243 = bitcast %struct.rtx_def* %242 to i32*, !dbg !10405
  %bf.load640 = load i32, i32* %243, align 8, !dbg !10405
  %bf.clear641 = and i32 %bf.load640, 65535, !dbg !10405
  %cmp642 = icmp eq i32 %bf.clear641, 32, !dbg !10406
  br i1 %cmp642, label %land.lhs.true644, label %if.end688, !dbg !10407

land.lhs.true644:                                 ; preds = %land.lhs.true639
  %244 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10408
  %245 = bitcast %struct.rtx_def* %244 to i32*, !dbg !10408
  %bf.load645 = load i32, i32* %245, align 8, !dbg !10408
  %bf.lshr646 = lshr i32 %bf.load645, 16, !dbg !10408
  %bf.clear647 = and i32 %bf.lshr646, 255, !dbg !10408
  %idxprom648 = zext i32 %bf.clear647 to i64, !dbg !10408
  %arrayidx649 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom648, !dbg !10408
  %246 = load i8, i8* %arrayidx649, align 1, !dbg !10408
  %conv650 = zext i8 %246 to i32, !dbg !10408
  %cmp651 = icmp eq i32 %conv650, 8, !dbg !10408
  br i1 %cmp651, label %if.then662, label %lor.lhs.false653, !dbg !10408

lor.lhs.false653:                                 ; preds = %land.lhs.true644
  %247 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10408
  %248 = bitcast %struct.rtx_def* %247 to i32*, !dbg !10408
  %bf.load654 = load i32, i32* %248, align 8, !dbg !10408
  %bf.lshr655 = lshr i32 %bf.load654, 16, !dbg !10408
  %bf.clear656 = and i32 %bf.lshr655, 255, !dbg !10408
  %idxprom657 = zext i32 %bf.clear656 to i64, !dbg !10408
  %arrayidx658 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom657, !dbg !10408
  %249 = load i8, i8* %arrayidx658, align 1, !dbg !10408
  %conv659 = zext i8 %249 to i32, !dbg !10408
  %cmp660 = icmp eq i32 %conv659, 9, !dbg !10408
  br i1 %cmp660, label %if.then662, label %if.end688, !dbg !10409

if.then662:                                       ; preds = %lor.lhs.false653, %land.lhs.true644
  call void @llvm.dbg.declare(metadata %struct.real_value* %d0, metadata !10410, metadata !DIExpression()), !dbg !10412
  call void @llvm.dbg.declare(metadata %struct.real_value* %d1, metadata !10413, metadata !DIExpression()), !dbg !10414
  %250 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10415
  %u663 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %250, i32 0, i32 1, !dbg !10415
  %rv = bitcast %union.u* %u663 to %struct.real_value*, !dbg !10415
  %251 = bitcast %struct.real_value* %d0 to i8*, !dbg !10415
  %252 = bitcast %struct.real_value* %rv to i8*, !dbg !10415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 32, i1 false), !dbg !10415
  %253 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10416
  %u664 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %253, i32 0, i32 1, !dbg !10416
  %rv665 = bitcast %union.u* %u664 to %struct.real_value*, !dbg !10416
  %254 = bitcast %struct.real_value* %d1 to i8*, !dbg !10416
  %255 = bitcast %struct.real_value* %rv665 to i8*, !dbg !10416
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %254, i8* align 8 %255, i64 32, i1 false), !dbg !10416
  %call666 = call zeroext i8 @real_isnan(%struct.real_value* %d0), !dbg !10417
  %conv667 = zext i8 %call666 to i32, !dbg !10417
  %tobool668 = icmp ne i32 %conv667, 0, !dbg !10417
  br i1 %tobool668, label %if.then673, label %lor.lhs.false669, !dbg !10419

lor.lhs.false669:                                 ; preds = %if.then662
  %call670 = call zeroext i8 @real_isnan(%struct.real_value* %d1), !dbg !10420
  %conv671 = zext i8 %call670 to i32, !dbg !10420
  %tobool672 = icmp ne i32 %conv671, 0, !dbg !10420
  br i1 %tobool672, label %if.then673, label %if.end675, !dbg !10421

if.then673:                                       ; preds = %lor.lhs.false669, %if.then662
  %256 = load i32, i32* %code.addr, align 4, !dbg !10422
  switch i32 %256, label %sw.default [
    i32 92, label %sw.bb
    i32 96, label %sw.bb
    i32 94, label %sw.bb
    i32 95, label %sw.bb
    i32 93, label %sw.bb
    i32 80, label %sw.bb
    i32 90, label %sw.bb
    i32 81, label %sw.bb674
    i32 85, label %sw.bb674
    i32 83, label %sw.bb674
    i32 84, label %sw.bb674
    i32 82, label %sw.bb674
    i32 97, label %sw.bb674
    i32 91, label %sw.bb674
  ], !dbg !10423

sw.bb:                                            ; preds = %if.then673, %if.then673, %if.then673, %if.then673, %if.then673, %if.then673, %if.then673
  %257 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10424
  store %struct.rtx_def* %257, %struct.rtx_def** %retval, align 8, !dbg !10426
  br label %return, !dbg !10426

sw.bb674:                                         ; preds = %if.then673, %if.then673, %if.then673, %if.then673, %if.then673, %if.then673, %if.then673
  %258 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10427
  store %struct.rtx_def* %258, %struct.rtx_def** %retval, align 8, !dbg !10428
  br label %return, !dbg !10428

sw.default:                                       ; preds = %if.then673
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10429
  br label %return, !dbg !10429

if.end675:                                        ; preds = %lor.lhs.false669
  %259 = load i32, i32* %code.addr, align 4, !dbg !10430
  %call676 = call zeroext i8 @real_compare(i32 101, %struct.real_value* %d0, %struct.real_value* %d1), !dbg !10431
  %conv677 = zext i8 %call676 to i32, !dbg !10431
  %tobool678 = icmp ne i32 %conv677, 0, !dbg !10431
  br i1 %tobool678, label %cond.true679, label %cond.false680, !dbg !10431

cond.true679:                                     ; preds = %if.end675
  br label %cond.end685, !dbg !10431

cond.false680:                                    ; preds = %if.end675
  %call681 = call zeroext i8 @real_compare(i32 97, %struct.real_value* %d0, %struct.real_value* %d1), !dbg !10432
  %conv682 = zext i8 %call681 to i32, !dbg !10432
  %tobool683 = icmp ne i32 %conv682, 0, !dbg !10432
  %260 = zext i1 %tobool683 to i64, !dbg !10432
  %cond684 = select i1 %tobool683, i32 2, i32 4, !dbg !10432
  br label %cond.end685, !dbg !10431

cond.end685:                                      ; preds = %cond.false680, %cond.true679
  %cond686 = phi i32 [ 1, %cond.true679 ], [ %cond684, %cond.false680 ], !dbg !10431
  %call687 = call %struct.rtx_def* @comparison_result(i32 %259, i32 %cond686), !dbg !10433
  store %struct.rtx_def* %call687, %struct.rtx_def** %retval, align 8, !dbg !10434
  br label %return, !dbg !10434

if.end688:                                        ; preds = %lor.lhs.false653, %land.lhs.true639, %if.end634
  %261 = load i32, i32* %mode.addr, align 4, !dbg !10435
  %idxprom689 = zext i32 %261 to i64, !dbg !10435
  %arrayidx690 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom689, !dbg !10435
  %262 = load i8, i8* %arrayidx690, align 1, !dbg !10435
  %conv691 = zext i8 %262 to i32, !dbg !10435
  %cmp692 = icmp eq i32 %conv691, 2, !dbg !10437
  br i1 %cmp692, label %land.lhs.true697, label %lor.lhs.false694, !dbg !10438

lor.lhs.false694:                                 ; preds = %if.end688
  %263 = load i32, i32* %mode.addr, align 4, !dbg !10439
  %cmp695 = icmp eq i32 %263, 0, !dbg !10440
  br i1 %cmp695, label %land.lhs.true697, label %if.end833, !dbg !10441

land.lhs.true697:                                 ; preds = %lor.lhs.false694, %if.end688
  %264 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10442
  %265 = bitcast %struct.rtx_def* %264 to i32*, !dbg !10442
  %bf.load698 = load i32, i32* %265, align 8, !dbg !10442
  %bf.clear699 = and i32 %bf.load698, 65535, !dbg !10442
  %cmp700 = icmp eq i32 %bf.clear699, 32, !dbg !10443
  br i1 %cmp700, label %land.lhs.true707, label %lor.lhs.false702, !dbg !10444

lor.lhs.false702:                                 ; preds = %land.lhs.true697
  %266 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10445
  %267 = bitcast %struct.rtx_def* %266 to i32*, !dbg !10445
  %bf.load703 = load i32, i32* %267, align 8, !dbg !10445
  %bf.clear704 = and i32 %bf.load703, 65535, !dbg !10445
  %cmp705 = icmp eq i32 %bf.clear704, 30, !dbg !10445
  br i1 %cmp705, label %land.lhs.true707, label %if.end833, !dbg !10446

land.lhs.true707:                                 ; preds = %lor.lhs.false702, %land.lhs.true697
  %268 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10447
  %269 = bitcast %struct.rtx_def* %268 to i32*, !dbg !10447
  %bf.load708 = load i32, i32* %269, align 8, !dbg !10447
  %bf.clear709 = and i32 %bf.load708, 65535, !dbg !10447
  %cmp710 = icmp eq i32 %bf.clear709, 32, !dbg !10448
  br i1 %cmp710, label %if.then717, label %lor.lhs.false712, !dbg !10449

lor.lhs.false712:                                 ; preds = %land.lhs.true707
  %270 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10450
  %271 = bitcast %struct.rtx_def* %270 to i32*, !dbg !10450
  %bf.load713 = load i32, i32* %271, align 8, !dbg !10450
  %bf.clear714 = and i32 %bf.load713, 65535, !dbg !10450
  %cmp715 = icmp eq i32 %bf.clear714, 30, !dbg !10450
  br i1 %cmp715, label %if.then717, label %if.end833, !dbg !10451

if.then717:                                       ; preds = %lor.lhs.false712, %land.lhs.true707
  call void @llvm.dbg.declare(metadata i32* %width, metadata !10452, metadata !DIExpression()), !dbg !10454
  %272 = load i32, i32* %mode.addr, align 4, !dbg !10455
  %idxprom718 = zext i32 %272 to i64, !dbg !10455
  %arrayidx719 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom718, !dbg !10455
  %273 = load i8, i8* %arrayidx719, align 1, !dbg !10455
  %conv720 = zext i8 %273 to i16, !dbg !10455
  %conv721 = zext i16 %conv720 to i32, !dbg !10455
  %mul = mul nsw i32 %conv721, 8, !dbg !10455
  %conv722 = trunc i32 %mul to i16, !dbg !10455
  %conv723 = zext i16 %conv722 to i32, !dbg !10455
  store i32 %conv723, i32* %width, align 4, !dbg !10454
  call void @llvm.dbg.declare(metadata i64* %l0s, metadata !10456, metadata !DIExpression()), !dbg !10457
  call void @llvm.dbg.declare(metadata i64* %h0s, metadata !10458, metadata !DIExpression()), !dbg !10459
  call void @llvm.dbg.declare(metadata i64* %l1s, metadata !10460, metadata !DIExpression()), !dbg !10461
  call void @llvm.dbg.declare(metadata i64* %h1s, metadata !10462, metadata !DIExpression()), !dbg !10463
  call void @llvm.dbg.declare(metadata i64* %l0u, metadata !10464, metadata !DIExpression()), !dbg !10465
  call void @llvm.dbg.declare(metadata i64* %h0u, metadata !10466, metadata !DIExpression()), !dbg !10467
  call void @llvm.dbg.declare(metadata i64* %l1u, metadata !10468, metadata !DIExpression()), !dbg !10469
  call void @llvm.dbg.declare(metadata i64* %h1u, metadata !10470, metadata !DIExpression()), !dbg !10471
  %274 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10472
  %275 = bitcast %struct.rtx_def* %274 to i32*, !dbg !10472
  %bf.load724 = load i32, i32* %275, align 8, !dbg !10472
  %bf.clear725 = and i32 %bf.load724, 65535, !dbg !10472
  %cmp726 = icmp eq i32 %bf.clear725, 32, !dbg !10474
  br i1 %cmp726, label %if.then728, label %if.else734, !dbg !10475

if.then728:                                       ; preds = %if.then717
  %276 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10476
  %u729 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %276, i32 0, i32 1, !dbg !10476
  %hwint = bitcast %union.u* %u729 to [1 x i64]*, !dbg !10476
  %arrayidx730 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !10476
  %277 = load i64, i64* %arrayidx730, align 8, !dbg !10476
  store i64 %277, i64* %l0s, align 8, !dbg !10478
  store i64 %277, i64* %l0u, align 8, !dbg !10479
  %278 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10480
  %u731 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %278, i32 0, i32 1, !dbg !10480
  %hwint732 = bitcast %union.u* %u731 to [1 x i64]*, !dbg !10480
  %arrayidx733 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint732, i64 0, i64 1, !dbg !10480
  %279 = load i64, i64* %arrayidx733, align 8, !dbg !10480
  store i64 %279, i64* %h0s, align 8, !dbg !10481
  store i64 %279, i64* %h0u, align 8, !dbg !10482
  br label %if.end741, !dbg !10483

if.else734:                                       ; preds = %if.then717
  %280 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10484
  %u735 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %280, i32 0, i32 1, !dbg !10484
  %hwint736 = bitcast %union.u* %u735 to [1 x i64]*, !dbg !10484
  %arrayidx737 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint736, i64 0, i64 0, !dbg !10484
  %281 = load i64, i64* %arrayidx737, align 8, !dbg !10484
  store i64 %281, i64* %l0s, align 8, !dbg !10486
  store i64 %281, i64* %l0u, align 8, !dbg !10487
  %282 = load i64, i64* %l0s, align 8, !dbg !10488
  %cmp738 = icmp slt i64 %282, 0, !dbg !10488
  %283 = zext i1 %cmp738 to i64, !dbg !10488
  %cond740 = select i1 %cmp738, i64 -1, i64 0, !dbg !10488
  store i64 %cond740, i64* %h0s, align 8, !dbg !10489
  store i64 %cond740, i64* %h0u, align 8, !dbg !10490
  br label %if.end741

if.end741:                                        ; preds = %if.else734, %if.then728
  %284 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10491
  %285 = bitcast %struct.rtx_def* %284 to i32*, !dbg !10491
  %bf.load742 = load i32, i32* %285, align 8, !dbg !10491
  %bf.clear743 = and i32 %bf.load742, 65535, !dbg !10491
  %cmp744 = icmp eq i32 %bf.clear743, 32, !dbg !10493
  br i1 %cmp744, label %if.then746, label %if.else753, !dbg !10494

if.then746:                                       ; preds = %if.end741
  %286 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10495
  %u747 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %286, i32 0, i32 1, !dbg !10495
  %hwint748 = bitcast %union.u* %u747 to [1 x i64]*, !dbg !10495
  %arrayidx749 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint748, i64 0, i64 0, !dbg !10495
  %287 = load i64, i64* %arrayidx749, align 8, !dbg !10495
  store i64 %287, i64* %l1s, align 8, !dbg !10497
  store i64 %287, i64* %l1u, align 8, !dbg !10498
  %288 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10499
  %u750 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %288, i32 0, i32 1, !dbg !10499
  %hwint751 = bitcast %union.u* %u750 to [1 x i64]*, !dbg !10499
  %arrayidx752 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint751, i64 0, i64 1, !dbg !10499
  %289 = load i64, i64* %arrayidx752, align 8, !dbg !10499
  store i64 %289, i64* %h1s, align 8, !dbg !10500
  store i64 %289, i64* %h1u, align 8, !dbg !10501
  br label %if.end760, !dbg !10502

if.else753:                                       ; preds = %if.end741
  %290 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10503
  %u754 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %290, i32 0, i32 1, !dbg !10503
  %hwint755 = bitcast %union.u* %u754 to [1 x i64]*, !dbg !10503
  %arrayidx756 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint755, i64 0, i64 0, !dbg !10503
  %291 = load i64, i64* %arrayidx756, align 8, !dbg !10503
  store i64 %291, i64* %l1s, align 8, !dbg !10505
  store i64 %291, i64* %l1u, align 8, !dbg !10506
  %292 = load i64, i64* %l1s, align 8, !dbg !10507
  %cmp757 = icmp slt i64 %292, 0, !dbg !10507
  %293 = zext i1 %cmp757 to i64, !dbg !10507
  %cond759 = select i1 %cmp757, i64 -1, i64 0, !dbg !10507
  store i64 %cond759, i64* %h1s, align 8, !dbg !10508
  store i64 %cond759, i64* %h1u, align 8, !dbg !10509
  br label %if.end760

if.end760:                                        ; preds = %if.else753, %if.then746
  %294 = load i32, i32* %width, align 4, !dbg !10510
  %cmp761 = icmp ne i32 %294, 0, !dbg !10512
  br i1 %cmp761, label %land.lhs.true763, label %if.end791, !dbg !10513

land.lhs.true763:                                 ; preds = %if.end760
  %295 = load i32, i32* %width, align 4, !dbg !10514
  %cmp764 = icmp slt i32 %295, 64, !dbg !10515
  br i1 %cmp764, label %if.then766, label %if.end791, !dbg !10516

if.then766:                                       ; preds = %land.lhs.true763
  %296 = load i32, i32* %width, align 4, !dbg !10517
  %sh_prom = zext i32 %296 to i64, !dbg !10519
  %shl = shl i64 1, %sh_prom, !dbg !10519
  %sub767 = sub nsw i64 %shl, 1, !dbg !10520
  %297 = load i64, i64* %l0u, align 8, !dbg !10521
  %and = and i64 %297, %sub767, !dbg !10521
  store i64 %and, i64* %l0u, align 8, !dbg !10521
  %298 = load i32, i32* %width, align 4, !dbg !10522
  %sh_prom768 = zext i32 %298 to i64, !dbg !10523
  %shl769 = shl i64 1, %sh_prom768, !dbg !10523
  %sub770 = sub nsw i64 %shl769, 1, !dbg !10524
  %299 = load i64, i64* %l1u, align 8, !dbg !10525
  %and771 = and i64 %299, %sub770, !dbg !10525
  store i64 %and771, i64* %l1u, align 8, !dbg !10525
  %300 = load i64, i64* %l0s, align 8, !dbg !10526
  %301 = load i32, i32* %width, align 4, !dbg !10528
  %sub772 = sub nsw i32 %301, 1, !dbg !10529
  %sh_prom773 = zext i32 %sub772 to i64, !dbg !10530
  %shl774 = shl i64 1, %sh_prom773, !dbg !10530
  %and775 = and i64 %300, %shl774, !dbg !10531
  %tobool776 = icmp ne i64 %and775, 0, !dbg !10531
  br i1 %tobool776, label %if.then777, label %if.end780, !dbg !10532

if.then777:                                       ; preds = %if.then766
  %302 = load i32, i32* %width, align 4, !dbg !10533
  %sh_prom778 = zext i32 %302 to i64, !dbg !10534
  %shl779 = shl i64 -1, %sh_prom778, !dbg !10534
  %303 = load i64, i64* %l0s, align 8, !dbg !10535
  %or = or i64 %303, %shl779, !dbg !10535
  store i64 %or, i64* %l0s, align 8, !dbg !10535
  br label %if.end780, !dbg !10536

if.end780:                                        ; preds = %if.then777, %if.then766
  %304 = load i64, i64* %l1s, align 8, !dbg !10537
  %305 = load i32, i32* %width, align 4, !dbg !10539
  %sub781 = sub nsw i32 %305, 1, !dbg !10540
  %sh_prom782 = zext i32 %sub781 to i64, !dbg !10541
  %shl783 = shl i64 1, %sh_prom782, !dbg !10541
  %and784 = and i64 %304, %shl783, !dbg !10542
  %tobool785 = icmp ne i64 %and784, 0, !dbg !10542
  br i1 %tobool785, label %if.then786, label %if.end790, !dbg !10543

if.then786:                                       ; preds = %if.end780
  %306 = load i32, i32* %width, align 4, !dbg !10544
  %sh_prom787 = zext i32 %306 to i64, !dbg !10545
  %shl788 = shl i64 -1, %sh_prom787, !dbg !10545
  %307 = load i64, i64* %l1s, align 8, !dbg !10546
  %or789 = or i64 %307, %shl788, !dbg !10546
  store i64 %or789, i64* %l1s, align 8, !dbg !10546
  br label %if.end790, !dbg !10547

if.end790:                                        ; preds = %if.then786, %if.end780
  br label %if.end791, !dbg !10548

if.end791:                                        ; preds = %if.end790, %land.lhs.true763, %if.end760
  %308 = load i32, i32* %width, align 4, !dbg !10549
  %cmp792 = icmp ne i32 %308, 0, !dbg !10551
  br i1 %cmp792, label %land.lhs.true794, label %if.end804, !dbg !10552

land.lhs.true794:                                 ; preds = %if.end791
  %309 = load i32, i32* %width, align 4, !dbg !10553
  %cmp795 = icmp sle i32 %309, 64, !dbg !10554
  br i1 %cmp795, label %if.then797, label %if.end804, !dbg !10555

if.then797:                                       ; preds = %land.lhs.true794
  store i64 0, i64* %h1u, align 8, !dbg !10556
  store i64 0, i64* %h0u, align 8, !dbg !10557
  %310 = load i64, i64* %l0s, align 8, !dbg !10558
  %cmp798 = icmp slt i64 %310, 0, !dbg !10558
  %311 = zext i1 %cmp798 to i64, !dbg !10558
  %cond800 = select i1 %cmp798, i64 -1, i64 0, !dbg !10558
  store i64 %cond800, i64* %h0s, align 8, !dbg !10559
  %312 = load i64, i64* %l1s, align 8, !dbg !10560
  %cmp801 = icmp slt i64 %312, 0, !dbg !10560
  %313 = zext i1 %cmp801 to i64, !dbg !10560
  %cond803 = select i1 %cmp801, i64 -1, i64 0, !dbg !10560
  store i64 %cond803, i64* %h1s, align 8, !dbg !10561
  br label %if.end804, !dbg !10562

if.end804:                                        ; preds = %if.then797, %land.lhs.true794, %if.end791
  %314 = load i64, i64* %h0u, align 8, !dbg !10563
  %315 = load i64, i64* %h1u, align 8, !dbg !10565
  %cmp805 = icmp eq i64 %314, %315, !dbg !10566
  br i1 %cmp805, label %land.lhs.true807, label %if.else812, !dbg !10567

land.lhs.true807:                                 ; preds = %if.end804
  %316 = load i64, i64* %l0u, align 8, !dbg !10568
  %317 = load i64, i64* %l1u, align 8, !dbg !10569
  %cmp808 = icmp eq i64 %316, %317, !dbg !10570
  br i1 %cmp808, label %if.then810, label %if.else812, !dbg !10571

if.then810:                                       ; preds = %land.lhs.true807
  %318 = load i32, i32* %code.addr, align 4, !dbg !10572
  %call811 = call %struct.rtx_def* @comparison_result(i32 %318, i32 1), !dbg !10573
  store %struct.rtx_def* %call811, %struct.rtx_def** %retval, align 8, !dbg !10574
  br label %return, !dbg !10574

if.else812:                                       ; preds = %land.lhs.true807, %if.end804
  call void @llvm.dbg.declare(metadata i32* %cr, metadata !10575, metadata !DIExpression()), !dbg !10577
  %319 = load i64, i64* %h0s, align 8, !dbg !10578
  %320 = load i64, i64* %h1s, align 8, !dbg !10579
  %cmp813 = icmp slt i64 %319, %320, !dbg !10580
  br i1 %cmp813, label %lor.end, label %lor.rhs, !dbg !10581

lor.rhs:                                          ; preds = %if.else812
  %321 = load i64, i64* %h0s, align 8, !dbg !10582
  %322 = load i64, i64* %h1s, align 8, !dbg !10583
  %cmp815 = icmp eq i64 %321, %322, !dbg !10584
  br i1 %cmp815, label %land.rhs, label %land.end, !dbg !10585

land.rhs:                                         ; preds = %lor.rhs
  %323 = load i64, i64* %l0u, align 8, !dbg !10586
  %324 = load i64, i64* %l1u, align 8, !dbg !10587
  %cmp817 = icmp ult i64 %323, %324, !dbg !10588
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %325 = phi i1 [ false, %lor.rhs ], [ %cmp817, %land.rhs ], !dbg !10589
  br label %lor.end, !dbg !10581

lor.end:                                          ; preds = %land.end, %if.else812
  %326 = phi i1 [ true, %if.else812 ], [ %325, %land.end ]
  %327 = zext i1 %326 to i64, !dbg !10590
  %cond819 = select i1 %326, i32 2, i32 4, !dbg !10590
  store i32 %cond819, i32* %cr, align 4, !dbg !10591
  %328 = load i64, i64* %h0u, align 8, !dbg !10592
  %329 = load i64, i64* %h1u, align 8, !dbg !10593
  %cmp820 = icmp ult i64 %328, %329, !dbg !10594
  br i1 %cmp820, label %lor.end829, label %lor.rhs822, !dbg !10595

lor.rhs822:                                       ; preds = %lor.end
  %330 = load i64, i64* %h0u, align 8, !dbg !10596
  %331 = load i64, i64* %h1u, align 8, !dbg !10597
  %cmp823 = icmp eq i64 %330, %331, !dbg !10598
  br i1 %cmp823, label %land.rhs825, label %land.end828, !dbg !10599

land.rhs825:                                      ; preds = %lor.rhs822
  %332 = load i64, i64* %l0u, align 8, !dbg !10600
  %333 = load i64, i64* %l1u, align 8, !dbg !10601
  %cmp826 = icmp ult i64 %332, %333, !dbg !10602
  br label %land.end828

land.end828:                                      ; preds = %land.rhs825, %lor.rhs822
  %334 = phi i1 [ false, %lor.rhs822 ], [ %cmp826, %land.rhs825 ], !dbg !10589
  br label %lor.end829, !dbg !10595

lor.end829:                                       ; preds = %land.end828, %lor.end
  %335 = phi i1 [ true, %lor.end ], [ %334, %land.end828 ]
  %336 = zext i1 %335 to i64, !dbg !10603
  %cond830 = select i1 %335, i32 8, i32 16, !dbg !10603
  %337 = load i32, i32* %cr, align 4, !dbg !10604
  %or831 = or i32 %337, %cond830, !dbg !10604
  store i32 %or831, i32* %cr, align 4, !dbg !10604
  %338 = load i32, i32* %code.addr, align 4, !dbg !10605
  %339 = load i32, i32* %cr, align 4, !dbg !10606
  %call832 = call %struct.rtx_def* @comparison_result(i32 %338, i32 %339), !dbg !10607
  store %struct.rtx_def* %call832, %struct.rtx_def** %retval, align 8, !dbg !10608
  br label %return, !dbg !10608

if.end833:                                        ; preds = %lor.lhs.false712, %lor.lhs.false702, %lor.lhs.false694
  %340 = load i32, i32* %mode.addr, align 4, !dbg !10609
  %idxprom834 = zext i32 %340 to i64, !dbg !10609
  %arrayidx835 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom834, !dbg !10609
  %341 = load i8, i8* %arrayidx835, align 1, !dbg !10609
  %conv836 = zext i8 %341 to i32, !dbg !10609
  %cmp837 = icmp eq i32 %conv836, 2, !dbg !10609
  br i1 %cmp837, label %land.lhs.true845, label %lor.lhs.false839, !dbg !10609

lor.lhs.false839:                                 ; preds = %if.end833
  %342 = load i32, i32* %mode.addr, align 4, !dbg !10609
  %idxprom840 = zext i32 %342 to i64, !dbg !10609
  %arrayidx841 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom840, !dbg !10609
  %343 = load i8, i8* %arrayidx841, align 1, !dbg !10609
  %conv842 = zext i8 %343 to i32, !dbg !10609
  %cmp843 = icmp eq i32 %conv842, 3, !dbg !10609
  br i1 %cmp843, label %land.lhs.true845, label %if.end991, !dbg !10611

land.lhs.true845:                                 ; preds = %lor.lhs.false839, %if.end833
  %344 = load i32, i32* %mode.addr, align 4, !dbg !10612
  %idxprom846 = zext i32 %344 to i64, !dbg !10612
  %arrayidx847 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom846, !dbg !10612
  %345 = load i8, i8* %arrayidx847, align 1, !dbg !10612
  %conv848 = zext i8 %345 to i16, !dbg !10612
  %conv849 = zext i16 %conv848 to i32, !dbg !10612
  %mul850 = mul nsw i32 %conv849, 8, !dbg !10612
  %conv851 = trunc i32 %mul850 to i16, !dbg !10612
  %conv852 = zext i16 %conv851 to i32, !dbg !10612
  %cmp853 = icmp sle i32 %conv852, 64, !dbg !10613
  br i1 %cmp853, label %land.lhs.true855, label %if.end991, !dbg !10614

land.lhs.true855:                                 ; preds = %land.lhs.true845
  %346 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10615
  %347 = bitcast %struct.rtx_def* %346 to i32*, !dbg !10615
  %bf.load856 = load i32, i32* %347, align 8, !dbg !10615
  %bf.clear857 = and i32 %bf.load856, 65535, !dbg !10615
  %cmp858 = icmp eq i32 %bf.clear857, 30, !dbg !10615
  br i1 %cmp858, label %if.then860, label %if.end991, !dbg !10616

if.then860:                                       ; preds = %land.lhs.true855
  call void @llvm.dbg.declare(metadata i32* %sign, metadata !10617, metadata !DIExpression()), !dbg !10619
  call void @llvm.dbg.declare(metadata i64* %nonzero, metadata !10620, metadata !DIExpression()), !dbg !10621
  %348 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10622
  %349 = load i32, i32* %mode.addr, align 4, !dbg !10623
  %call861 = call i64 @nonzero_bits(%struct.rtx_def* %348, i32 %349), !dbg !10624
  store i64 %call861, i64* %nonzero, align 8, !dbg !10621
  call void @llvm.dbg.declare(metadata i64* %val, metadata !10625, metadata !DIExpression()), !dbg !10626
  %350 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10627
  %u862 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %350, i32 0, i32 1, !dbg !10627
  %hwint863 = bitcast %union.u* %u862 to [1 x i64]*, !dbg !10627
  %arrayidx864 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint863, i64 0, i64 0, !dbg !10627
  %351 = load i64, i64* %arrayidx864, align 8, !dbg !10627
  store i64 %351, i64* %val, align 8, !dbg !10626
  call void @llvm.dbg.declare(metadata i64* %mmin, metadata !10628, metadata !DIExpression()), !dbg !10629
  call void @llvm.dbg.declare(metadata i64* %mmax, metadata !10630, metadata !DIExpression()), !dbg !10631
  %352 = load i32, i32* %code.addr, align 4, !dbg !10632
  %cmp865 = icmp eq i32 %352, 86, !dbg !10634
  br i1 %cmp865, label %if.then876, label %lor.lhs.false867, !dbg !10635

lor.lhs.false867:                                 ; preds = %if.then860
  %353 = load i32, i32* %code.addr, align 4, !dbg !10636
  %cmp868 = icmp eq i32 %353, 88, !dbg !10637
  br i1 %cmp868, label %if.then876, label %lor.lhs.false870, !dbg !10638

lor.lhs.false870:                                 ; preds = %lor.lhs.false867
  %354 = load i32, i32* %code.addr, align 4, !dbg !10639
  %cmp871 = icmp eq i32 %354, 87, !dbg !10640
  br i1 %cmp871, label %if.then876, label %lor.lhs.false873, !dbg !10641

lor.lhs.false873:                                 ; preds = %lor.lhs.false870
  %355 = load i32, i32* %code.addr, align 4, !dbg !10642
  %cmp874 = icmp eq i32 %355, 89, !dbg !10643
  br i1 %cmp874, label %if.then876, label %if.else877, !dbg !10644

if.then876:                                       ; preds = %lor.lhs.false873, %lor.lhs.false870, %lor.lhs.false867, %if.then860
  store i32 0, i32* %sign, align 4, !dbg !10645
  br label %if.end878, !dbg !10646

if.else877:                                       ; preds = %lor.lhs.false873
  store i32 1, i32* %sign, align 4, !dbg !10647
  br label %if.end878

if.end878:                                        ; preds = %if.else877, %if.then876
  %356 = load i64, i64* %nonzero, align 8, !dbg !10648
  %357 = load i32, i32* %mode.addr, align 4, !dbg !10650
  %idxprom879 = zext i32 %357 to i64, !dbg !10650
  %arrayidx880 = getelementptr inbounds [87 x i64], [87 x i64]* @mode_mask_array, i64 0, i64 %idxprom879, !dbg !10650
  %358 = load i64, i64* %arrayidx880, align 8, !dbg !10650
  %shr = lshr i64 %358, 1, !dbg !10651
  %cmp881 = icmp ule i64 %356, %shr, !dbg !10652
  br i1 %cmp881, label %if.then883, label %if.else884, !dbg !10653

if.then883:                                       ; preds = %if.end878
  store i64 0, i64* %mmin, align 8, !dbg !10654
  %359 = load i64, i64* %nonzero, align 8, !dbg !10656
  store i64 %359, i64* %mmax, align 8, !dbg !10657
  br label %if.end901, !dbg !10658

if.else884:                                       ; preds = %if.end878
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mmin_rtx, metadata !10659, metadata !DIExpression()), !dbg !10661
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mmax_rtx, metadata !10662, metadata !DIExpression()), !dbg !10663
  %360 = load i32, i32* %mode.addr, align 4, !dbg !10664
  %361 = load i32, i32* %sign, align 4, !dbg !10665
  %362 = load i32, i32* %mode.addr, align 4, !dbg !10666
  call void @get_mode_bounds(i32 %360, i32 %361, i32 %362, %struct.rtx_def** %mmin_rtx, %struct.rtx_def** %mmax_rtx), !dbg !10667
  %363 = load %struct.rtx_def*, %struct.rtx_def** %mmin_rtx, align 8, !dbg !10668
  %u885 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %363, i32 0, i32 1, !dbg !10668
  %hwint886 = bitcast %union.u* %u885 to [1 x i64]*, !dbg !10668
  %arrayidx887 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint886, i64 0, i64 0, !dbg !10668
  %364 = load i64, i64* %arrayidx887, align 8, !dbg !10668
  store i64 %364, i64* %mmin, align 8, !dbg !10669
  %365 = load %struct.rtx_def*, %struct.rtx_def** %mmax_rtx, align 8, !dbg !10670
  %u888 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %365, i32 0, i32 1, !dbg !10670
  %hwint889 = bitcast %union.u* %u888 to [1 x i64]*, !dbg !10670
  %arrayidx890 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint889, i64 0, i64 0, !dbg !10670
  %366 = load i64, i64* %arrayidx890, align 8, !dbg !10670
  store i64 %366, i64* %mmax, align 8, !dbg !10671
  %367 = load i32, i32* %sign, align 4, !dbg !10672
  %tobool891 = icmp ne i32 %367, 0, !dbg !10672
  br i1 %tobool891, label %if.then892, label %if.end900, !dbg !10674

if.then892:                                       ; preds = %if.else884
  call void @llvm.dbg.declare(metadata i32* %sign_copies, metadata !10675, metadata !DIExpression()), !dbg !10677
  %368 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10678
  %369 = load i32, i32* %mode.addr, align 4, !dbg !10679
  %call893 = call i32 @num_sign_bit_copies(%struct.rtx_def* %368, i32 %369), !dbg !10680
  store i32 %call893, i32* %sign_copies, align 4, !dbg !10677
  %370 = load i32, i32* %sign_copies, align 4, !dbg !10681
  %sub894 = sub i32 %370, 1, !dbg !10682
  %371 = load i64, i64* %mmin, align 8, !dbg !10683
  %sh_prom895 = zext i32 %sub894 to i64, !dbg !10683
  %shr896 = ashr i64 %371, %sh_prom895, !dbg !10683
  store i64 %shr896, i64* %mmin, align 8, !dbg !10683
  %372 = load i32, i32* %sign_copies, align 4, !dbg !10684
  %sub897 = sub i32 %372, 1, !dbg !10685
  %373 = load i64, i64* %mmax, align 8, !dbg !10686
  %sh_prom898 = zext i32 %sub897 to i64, !dbg !10686
  %shr899 = ashr i64 %373, %sh_prom898, !dbg !10686
  store i64 %shr899, i64* %mmax, align 8, !dbg !10686
  br label %if.end900, !dbg !10687

if.end900:                                        ; preds = %if.then892, %if.else884
  br label %if.end901

if.end901:                                        ; preds = %if.end900, %if.then883
  %374 = load i32, i32* %code.addr, align 4, !dbg !10688
  switch i32 %374, label %sw.default990 [
    i32 86, label %sw.bb902
    i32 82, label %sw.bb911
    i32 88, label %sw.bb920
    i32 84, label %sw.bb929
    i32 81, label %sw.bb938
    i32 87, label %sw.bb946
    i32 83, label %sw.bb955
    i32 89, label %sw.bb964
    i32 85, label %sw.bb973
    i32 80, label %sw.bb982
  ], !dbg !10689

sw.bb902:                                         ; preds = %if.end901
  %375 = load i64, i64* %val, align 8, !dbg !10690
  %376 = load i64, i64* %mmin, align 8, !dbg !10693
  %cmp903 = icmp ule i64 %375, %376, !dbg !10694
  br i1 %cmp903, label %if.then905, label %if.end906, !dbg !10695

if.then905:                                       ; preds = %sw.bb902
  %377 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10696
  store %struct.rtx_def* %377, %struct.rtx_def** %retval, align 8, !dbg !10697
  br label %return, !dbg !10697

if.end906:                                        ; preds = %sw.bb902
  %378 = load i64, i64* %val, align 8, !dbg !10698
  %379 = load i64, i64* %mmax, align 8, !dbg !10700
  %cmp907 = icmp ugt i64 %378, %379, !dbg !10701
  br i1 %cmp907, label %if.then909, label %if.end910, !dbg !10702

if.then909:                                       ; preds = %if.end906
  %380 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10703
  store %struct.rtx_def* %380, %struct.rtx_def** %retval, align 8, !dbg !10704
  br label %return, !dbg !10704

if.end910:                                        ; preds = %if.end906
  br label %sw.epilog, !dbg !10705

sw.bb911:                                         ; preds = %if.end901
  %381 = load i64, i64* %val, align 8, !dbg !10706
  %382 = load i64, i64* %mmin, align 8, !dbg !10708
  %cmp912 = icmp sle i64 %381, %382, !dbg !10709
  br i1 %cmp912, label %if.then914, label %if.end915, !dbg !10710

if.then914:                                       ; preds = %sw.bb911
  %383 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10711
  store %struct.rtx_def* %383, %struct.rtx_def** %retval, align 8, !dbg !10712
  br label %return, !dbg !10712

if.end915:                                        ; preds = %sw.bb911
  %384 = load i64, i64* %val, align 8, !dbg !10713
  %385 = load i64, i64* %mmax, align 8, !dbg !10715
  %cmp916 = icmp sgt i64 %384, %385, !dbg !10716
  br i1 %cmp916, label %if.then918, label %if.end919, !dbg !10717

if.then918:                                       ; preds = %if.end915
  %386 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10718
  store %struct.rtx_def* %386, %struct.rtx_def** %retval, align 8, !dbg !10719
  br label %return, !dbg !10719

if.end919:                                        ; preds = %if.end915
  br label %sw.epilog, !dbg !10720

sw.bb920:                                         ; preds = %if.end901
  %387 = load i64, i64* %val, align 8, !dbg !10721
  %388 = load i64, i64* %mmax, align 8, !dbg !10723
  %cmp921 = icmp uge i64 %387, %388, !dbg !10724
  br i1 %cmp921, label %if.then923, label %if.end924, !dbg !10725

if.then923:                                       ; preds = %sw.bb920
  %389 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10726
  store %struct.rtx_def* %389, %struct.rtx_def** %retval, align 8, !dbg !10727
  br label %return, !dbg !10727

if.end924:                                        ; preds = %sw.bb920
  %390 = load i64, i64* %val, align 8, !dbg !10728
  %391 = load i64, i64* %mmin, align 8, !dbg !10730
  %cmp925 = icmp ult i64 %390, %391, !dbg !10731
  br i1 %cmp925, label %if.then927, label %if.end928, !dbg !10732

if.then927:                                       ; preds = %if.end924
  %392 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10733
  store %struct.rtx_def* %392, %struct.rtx_def** %retval, align 8, !dbg !10734
  br label %return, !dbg !10734

if.end928:                                        ; preds = %if.end924
  br label %sw.epilog, !dbg !10735

sw.bb929:                                         ; preds = %if.end901
  %393 = load i64, i64* %val, align 8, !dbg !10736
  %394 = load i64, i64* %mmax, align 8, !dbg !10738
  %cmp930 = icmp sge i64 %393, %394, !dbg !10739
  br i1 %cmp930, label %if.then932, label %if.end933, !dbg !10740

if.then932:                                       ; preds = %sw.bb929
  %395 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10741
  store %struct.rtx_def* %395, %struct.rtx_def** %retval, align 8, !dbg !10742
  br label %return, !dbg !10742

if.end933:                                        ; preds = %sw.bb929
  %396 = load i64, i64* %val, align 8, !dbg !10743
  %397 = load i64, i64* %mmin, align 8, !dbg !10745
  %cmp934 = icmp slt i64 %396, %397, !dbg !10746
  br i1 %cmp934, label %if.then936, label %if.end937, !dbg !10747

if.then936:                                       ; preds = %if.end933
  %398 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10748
  store %struct.rtx_def* %398, %struct.rtx_def** %retval, align 8, !dbg !10749
  br label %return, !dbg !10749

if.end937:                                        ; preds = %if.end933
  br label %sw.epilog, !dbg !10750

sw.bb938:                                         ; preds = %if.end901
  %399 = load i64, i64* %val, align 8, !dbg !10751
  %400 = load i64, i64* %mmin, align 8, !dbg !10753
  %cmp939 = icmp slt i64 %399, %400, !dbg !10754
  br i1 %cmp939, label %if.then944, label %lor.lhs.false941, !dbg !10755

lor.lhs.false941:                                 ; preds = %sw.bb938
  %401 = load i64, i64* %val, align 8, !dbg !10756
  %402 = load i64, i64* %mmax, align 8, !dbg !10757
  %cmp942 = icmp sgt i64 %401, %402, !dbg !10758
  br i1 %cmp942, label %if.then944, label %if.end945, !dbg !10759

if.then944:                                       ; preds = %lor.lhs.false941, %sw.bb938
  %403 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10760
  store %struct.rtx_def* %403, %struct.rtx_def** %retval, align 8, !dbg !10761
  br label %return, !dbg !10761

if.end945:                                        ; preds = %lor.lhs.false941
  br label %sw.epilog, !dbg !10762

sw.bb946:                                         ; preds = %if.end901
  %404 = load i64, i64* %val, align 8, !dbg !10763
  %405 = load i64, i64* %mmax, align 8, !dbg !10765
  %cmp947 = icmp uge i64 %404, %405, !dbg !10766
  br i1 %cmp947, label %if.then949, label %if.end950, !dbg !10767

if.then949:                                       ; preds = %sw.bb946
  %406 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10768
  store %struct.rtx_def* %406, %struct.rtx_def** %retval, align 8, !dbg !10769
  br label %return, !dbg !10769

if.end950:                                        ; preds = %sw.bb946
  %407 = load i64, i64* %val, align 8, !dbg !10770
  %408 = load i64, i64* %mmin, align 8, !dbg !10772
  %cmp951 = icmp ult i64 %407, %408, !dbg !10773
  br i1 %cmp951, label %if.then953, label %if.end954, !dbg !10774

if.then953:                                       ; preds = %if.end950
  %409 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10775
  store %struct.rtx_def* %409, %struct.rtx_def** %retval, align 8, !dbg !10776
  br label %return, !dbg !10776

if.end954:                                        ; preds = %if.end950
  br label %sw.epilog, !dbg !10777

sw.bb955:                                         ; preds = %if.end901
  %410 = load i64, i64* %val, align 8, !dbg !10778
  %411 = load i64, i64* %mmax, align 8, !dbg !10780
  %cmp956 = icmp sge i64 %410, %411, !dbg !10781
  br i1 %cmp956, label %if.then958, label %if.end959, !dbg !10782

if.then958:                                       ; preds = %sw.bb955
  %412 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10783
  store %struct.rtx_def* %412, %struct.rtx_def** %retval, align 8, !dbg !10784
  br label %return, !dbg !10784

if.end959:                                        ; preds = %sw.bb955
  %413 = load i64, i64* %val, align 8, !dbg !10785
  %414 = load i64, i64* %mmin, align 8, !dbg !10787
  %cmp960 = icmp slt i64 %413, %414, !dbg !10788
  br i1 %cmp960, label %if.then962, label %if.end963, !dbg !10789

if.then962:                                       ; preds = %if.end959
  %415 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10790
  store %struct.rtx_def* %415, %struct.rtx_def** %retval, align 8, !dbg !10791
  br label %return, !dbg !10791

if.end963:                                        ; preds = %if.end959
  br label %sw.epilog, !dbg !10792

sw.bb964:                                         ; preds = %if.end901
  %416 = load i64, i64* %val, align 8, !dbg !10793
  %417 = load i64, i64* %mmin, align 8, !dbg !10795
  %cmp965 = icmp ule i64 %416, %417, !dbg !10796
  br i1 %cmp965, label %if.then967, label %if.end968, !dbg !10797

if.then967:                                       ; preds = %sw.bb964
  %418 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10798
  store %struct.rtx_def* %418, %struct.rtx_def** %retval, align 8, !dbg !10799
  br label %return, !dbg !10799

if.end968:                                        ; preds = %sw.bb964
  %419 = load i64, i64* %val, align 8, !dbg !10800
  %420 = load i64, i64* %mmax, align 8, !dbg !10802
  %cmp969 = icmp ugt i64 %419, %420, !dbg !10803
  br i1 %cmp969, label %if.then971, label %if.end972, !dbg !10804

if.then971:                                       ; preds = %if.end968
  %421 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10805
  store %struct.rtx_def* %421, %struct.rtx_def** %retval, align 8, !dbg !10806
  br label %return, !dbg !10806

if.end972:                                        ; preds = %if.end968
  br label %sw.epilog, !dbg !10807

sw.bb973:                                         ; preds = %if.end901
  %422 = load i64, i64* %val, align 8, !dbg !10808
  %423 = load i64, i64* %mmin, align 8, !dbg !10810
  %cmp974 = icmp sle i64 %422, %423, !dbg !10811
  br i1 %cmp974, label %if.then976, label %if.end977, !dbg !10812

if.then976:                                       ; preds = %sw.bb973
  %424 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10813
  store %struct.rtx_def* %424, %struct.rtx_def** %retval, align 8, !dbg !10814
  br label %return, !dbg !10814

if.end977:                                        ; preds = %sw.bb973
  %425 = load i64, i64* %val, align 8, !dbg !10815
  %426 = load i64, i64* %mmax, align 8, !dbg !10817
  %cmp978 = icmp sgt i64 %425, %426, !dbg !10818
  br i1 %cmp978, label %if.then980, label %if.end981, !dbg !10819

if.then980:                                       ; preds = %if.end977
  %427 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10820
  store %struct.rtx_def* %427, %struct.rtx_def** %retval, align 8, !dbg !10821
  br label %return, !dbg !10821

if.end981:                                        ; preds = %if.end977
  br label %sw.epilog, !dbg !10822

sw.bb982:                                         ; preds = %if.end901
  %428 = load i64, i64* %val, align 8, !dbg !10823
  %429 = load i64, i64* %mmin, align 8, !dbg !10825
  %cmp983 = icmp slt i64 %428, %429, !dbg !10826
  br i1 %cmp983, label %if.then988, label %lor.lhs.false985, !dbg !10827

lor.lhs.false985:                                 ; preds = %sw.bb982
  %430 = load i64, i64* %val, align 8, !dbg !10828
  %431 = load i64, i64* %mmax, align 8, !dbg !10829
  %cmp986 = icmp sgt i64 %430, %431, !dbg !10830
  br i1 %cmp986, label %if.then988, label %if.end989, !dbg !10831

if.then988:                                       ; preds = %lor.lhs.false985, %sw.bb982
  %432 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10832
  store %struct.rtx_def* %432, %struct.rtx_def** %retval, align 8, !dbg !10833
  br label %return, !dbg !10833

if.end989:                                        ; preds = %lor.lhs.false985
  br label %sw.epilog, !dbg !10834

sw.default990:                                    ; preds = %if.end901
  br label %sw.epilog, !dbg !10835

sw.epilog:                                        ; preds = %sw.default990, %if.end989, %if.end981, %if.end972, %if.end963, %if.end954, %if.end945, %if.end937, %if.end928, %if.end919, %if.end910
  br label %if.end991, !dbg !10836

if.end991:                                        ; preds = %sw.epilog, %land.lhs.true855, %land.lhs.true845, %lor.lhs.false839
  %433 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10837
  %434 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10839
  %cmp992 = icmp eq %struct.rtx_def* %433, %434, !dbg !10840
  br i1 %cmp992, label %if.then994, label %if.end1064, !dbg !10841

if.then994:                                       ; preds = %if.end991
  %435 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10842
  %call995 = call zeroext i8 @nonzero_address_p(%struct.rtx_def* %435), !dbg !10845
  %tobool996 = icmp ne i8 %call995, 0, !dbg !10845
  br i1 %tobool996, label %if.then997, label %if.end1012, !dbg !10846

if.then997:                                       ; preds = %if.then994
  %436 = load i32, i32* %code.addr, align 4, !dbg !10847
  %cmp998 = icmp eq i32 %436, 81, !dbg !10850
  br i1 %cmp998, label %if.then1003, label %lor.lhs.false1000, !dbg !10851

lor.lhs.false1000:                                ; preds = %if.then997
  %437 = load i32, i32* %code.addr, align 4, !dbg !10852
  %cmp1001 = icmp eq i32 %437, 88, !dbg !10853
  br i1 %cmp1001, label %if.then1003, label %if.end1004, !dbg !10854

if.then1003:                                      ; preds = %lor.lhs.false1000, %if.then997
  %438 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10855
  store %struct.rtx_def* %438, %struct.rtx_def** %retval, align 8, !dbg !10856
  br label %return, !dbg !10856

if.end1004:                                       ; preds = %lor.lhs.false1000
  %439 = load i32, i32* %code.addr, align 4, !dbg !10857
  %cmp1005 = icmp eq i32 %439, 80, !dbg !10859
  br i1 %cmp1005, label %if.then1010, label %lor.lhs.false1007, !dbg !10860

lor.lhs.false1007:                                ; preds = %if.end1004
  %440 = load i32, i32* %code.addr, align 4, !dbg !10861
  %cmp1008 = icmp eq i32 %440, 87, !dbg !10862
  br i1 %cmp1008, label %if.then1010, label %if.end1011, !dbg !10863

if.then1010:                                      ; preds = %lor.lhs.false1007, %if.end1004
  %441 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10864
  store %struct.rtx_def* %441, %struct.rtx_def** %retval, align 8, !dbg !10865
  br label %return, !dbg !10865

if.end1011:                                       ; preds = %lor.lhs.false1007
  br label %if.end1012, !dbg !10866

if.end1012:                                       ; preds = %if.end1011, %if.then994
  %442 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10867
  %443 = bitcast %struct.rtx_def* %442 to i32*, !dbg !10867
  %bf.load1013 = load i32, i32* %443, align 8, !dbg !10867
  %bf.clear1014 = and i32 %bf.load1013, 65535, !dbg !10867
  %cmp1015 = icmp eq i32 %bf.clear1014, 62, !dbg !10869
  br i1 %cmp1015, label %if.then1017, label %if.end1063, !dbg !10870

if.then1017:                                      ; preds = %if.end1012
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner_const, metadata !10871, metadata !DIExpression()), !dbg !10873
  %444 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !10874
  %u1018 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %444, i32 0, i32 1, !dbg !10874
  %fld1019 = bitcast %union.u* %u1018 to [1 x %union.rtunion_def]*, !dbg !10874
  %arrayidx1020 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1019, i64 0, i64 1, !dbg !10874
  %rt_rtx1021 = bitcast %union.rtunion_def* %arrayidx1020 to %struct.rtx_def**, !dbg !10874
  %445 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1021, align 8, !dbg !10874
  %call1022 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %445), !dbg !10875
  store %struct.rtx_def* %call1022, %struct.rtx_def** %inner_const, align 8, !dbg !10873
  %446 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !10876
  %447 = bitcast %struct.rtx_def* %446 to i32*, !dbg !10876
  %bf.load1023 = load i32, i32* %447, align 8, !dbg !10876
  %bf.clear1024 = and i32 %bf.load1023, 65535, !dbg !10876
  %cmp1025 = icmp eq i32 %bf.clear1024, 30, !dbg !10876
  br i1 %cmp1025, label %land.lhs.true1027, label %if.end1062, !dbg !10878

land.lhs.true1027:                                ; preds = %if.then1017
  %448 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !10879
  %449 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10880
  %cmp1028 = icmp ne %struct.rtx_def* %448, %449, !dbg !10881
  br i1 %cmp1028, label %if.then1030, label %if.end1062, !dbg !10882

if.then1030:                                      ; preds = %land.lhs.true1027
  call void @llvm.dbg.declare(metadata i32* %sign_bitnum, metadata !10883, metadata !DIExpression()), !dbg !10885
  %450 = load i32, i32* %mode.addr, align 4, !dbg !10886
  %idxprom1031 = zext i32 %450 to i64, !dbg !10886
  %arrayidx1032 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom1031, !dbg !10886
  %451 = load i8, i8* %arrayidx1032, align 1, !dbg !10886
  %conv1033 = zext i8 %451 to i16, !dbg !10886
  %conv1034 = zext i16 %conv1033 to i32, !dbg !10886
  %mul1035 = mul nsw i32 %conv1034, 8, !dbg !10886
  %conv1036 = trunc i32 %mul1035 to i16, !dbg !10886
  %conv1037 = zext i16 %conv1036 to i32, !dbg !10886
  %sub1038 = sub nsw i32 %conv1037, 1, !dbg !10887
  store i32 %sub1038, i32* %sign_bitnum, align 4, !dbg !10885
  call void @llvm.dbg.declare(metadata i32* %has_sign, metadata !10888, metadata !DIExpression()), !dbg !10889
  %452 = load i32, i32* %sign_bitnum, align 4, !dbg !10890
  %cmp1039 = icmp sge i32 64, %452, !dbg !10891
  br i1 %cmp1039, label %land.rhs1041, label %land.end1049, !dbg !10892

land.rhs1041:                                     ; preds = %if.then1030
  %453 = load %struct.rtx_def*, %struct.rtx_def** %inner_const, align 8, !dbg !10893
  %u1042 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %453, i32 0, i32 1, !dbg !10893
  %hwint1043 = bitcast %union.u* %u1042 to [1 x i64]*, !dbg !10893
  %arrayidx1044 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint1043, i64 0, i64 0, !dbg !10893
  %454 = load i64, i64* %arrayidx1044, align 8, !dbg !10893
  %455 = load i32, i32* %sign_bitnum, align 4, !dbg !10894
  %sh_prom1045 = zext i32 %455 to i64, !dbg !10895
  %shl1046 = shl i64 1, %sh_prom1045, !dbg !10895
  %and1047 = and i64 %454, %shl1046, !dbg !10896
  %tobool1048 = icmp ne i64 %and1047, 0, !dbg !10892
  br label %land.end1049

land.end1049:                                     ; preds = %land.rhs1041, %if.then1030
  %456 = phi i1 [ false, %if.then1030 ], [ %tobool1048, %land.rhs1041 ], !dbg !10897
  %land.ext = zext i1 %456 to i32, !dbg !10892
  store i32 %land.ext, i32* %has_sign, align 4, !dbg !10889
  %457 = load i32, i32* %code.addr, align 4, !dbg !10898
  switch i32 %457, label %sw.default1060 [
    i32 81, label %sw.bb1050
    i32 88, label %sw.bb1050
    i32 80, label %sw.bb1051
    i32 87, label %sw.bb1051
    i32 85, label %sw.bb1052
    i32 84, label %sw.bb1052
    i32 83, label %sw.bb1056
    i32 82, label %sw.bb1056
  ], !dbg !10899

sw.bb1050:                                        ; preds = %land.end1049, %land.end1049
  %458 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10900
  store %struct.rtx_def* %458, %struct.rtx_def** %retval, align 8, !dbg !10902
  br label %return, !dbg !10902

sw.bb1051:                                        ; preds = %land.end1049, %land.end1049
  %459 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10903
  store %struct.rtx_def* %459, %struct.rtx_def** %retval, align 8, !dbg !10904
  br label %return, !dbg !10904

sw.bb1052:                                        ; preds = %land.end1049, %land.end1049
  %460 = load i32, i32* %has_sign, align 4, !dbg !10905
  %tobool1053 = icmp ne i32 %460, 0, !dbg !10905
  br i1 %tobool1053, label %if.then1054, label %if.end1055, !dbg !10907

if.then1054:                                      ; preds = %sw.bb1052
  %461 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10908
  store %struct.rtx_def* %461, %struct.rtx_def** %retval, align 8, !dbg !10909
  br label %return, !dbg !10909

if.end1055:                                       ; preds = %sw.bb1052
  br label %sw.epilog1061, !dbg !10910

sw.bb1056:                                        ; preds = %land.end1049, %land.end1049
  %462 = load i32, i32* %has_sign, align 4, !dbg !10911
  %tobool1057 = icmp ne i32 %462, 0, !dbg !10911
  br i1 %tobool1057, label %if.then1058, label %if.end1059, !dbg !10913

if.then1058:                                      ; preds = %sw.bb1056
  %463 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10914
  store %struct.rtx_def* %463, %struct.rtx_def** %retval, align 8, !dbg !10915
  br label %return, !dbg !10915

if.end1059:                                       ; preds = %sw.bb1056
  br label %sw.epilog1061, !dbg !10916

sw.default1060:                                   ; preds = %land.end1049
  br label %sw.epilog1061, !dbg !10917

sw.epilog1061:                                    ; preds = %sw.default1060, %if.end1059, %if.end1055
  br label %if.end1062, !dbg !10918

if.end1062:                                       ; preds = %sw.epilog1061, %land.lhs.true1027, %if.then1017
  br label %if.end1063, !dbg !10919

if.end1063:                                       ; preds = %if.end1062, %if.end1012
  br label %if.end1064, !dbg !10920

if.end1064:                                       ; preds = %if.end1063, %if.end991
  %464 = load %struct.rtx_def*, %struct.rtx_def** %trueop1, align 8, !dbg !10921
  %465 = load i32, i32* %mode.addr, align 4, !dbg !10923
  %idxprom1065 = sext i32 %465 to i64, !dbg !10923
  %arrayidx1066 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* getelementptr inbounds ([3 x [87 x %struct.rtx_def*]], [3 x [87 x %struct.rtx_def*]]* @const_tiny_rtx, i64 0, i64 0), i64 0, i64 %idxprom1065, !dbg !10923
  %466 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx1066, align 8, !dbg !10923
  %cmp1067 = icmp eq %struct.rtx_def* %464, %466, !dbg !10924
  br i1 %cmp1067, label %land.lhs.true1069, label %if.end1412, !dbg !10925

land.lhs.true1069:                                ; preds = %if.end1064
  %467 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10926
  %468 = bitcast %struct.rtx_def* %467 to i32*, !dbg !10926
  %bf.load1070 = load i32, i32* %468, align 8, !dbg !10926
  %bf.clear1071 = and i32 %bf.load1070, 65535, !dbg !10926
  %cmp1072 = icmp eq i32 %bf.clear1071, 111, !dbg !10927
  br i1 %cmp1072, label %if.then1088, label %lor.lhs.false1074, !dbg !10928

lor.lhs.false1074:                                ; preds = %land.lhs.true1069
  %469 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10929
  %470 = bitcast %struct.rtx_def* %469 to i32*, !dbg !10929
  %bf.load1075 = load i32, i32* %470, align 8, !dbg !10929
  %bf.clear1076 = and i32 %bf.load1075, 65535, !dbg !10929
  %cmp1077 = icmp eq i32 %bf.clear1076, 101, !dbg !10930
  br i1 %cmp1077, label %land.lhs.true1079, label %if.end1412, !dbg !10931

land.lhs.true1079:                                ; preds = %lor.lhs.false1074
  %471 = load %struct.rtx_def*, %struct.rtx_def** %trueop0, align 8, !dbg !10932
  %u1080 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %471, i32 0, i32 1, !dbg !10932
  %fld1081 = bitcast %union.u* %u1080 to [1 x %union.rtunion_def]*, !dbg !10932
  %arrayidx1082 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld1081, i64 0, i64 0, !dbg !10932
  %rt_rtx1083 = bitcast %union.rtunion_def* %arrayidx1082 to %struct.rtx_def**, !dbg !10932
  %472 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx1083, align 8, !dbg !10932
  %473 = bitcast %struct.rtx_def* %472 to i32*, !dbg !10932
  %bf.load1084 = load i32, i32* %473, align 8, !dbg !10932
  %bf.clear1085 = and i32 %bf.load1084, 65535, !dbg !10932
  %cmp1086 = icmp eq i32 %bf.clear1085, 111, !dbg !10933
  br i1 %cmp1086, label %if.then1088, label %if.end1412, !dbg !10934

if.then1088:                                      ; preds = %land.lhs.true1079, %land.lhs.true1069
  %474 = load i32, i32* %code.addr, align 4, !dbg !10935
  switch i32 %474, label %sw.default1410 [
    i32 85, label %sw.bb1089
    i32 82, label %sw.bb1250
    i32 93, label %sw.bb1409
  ], !dbg !10937

sw.bb1089:                                        ; preds = %if.then1088
  %475 = load i32, i32* @flag_signaling_nans, align 4, !dbg !10938
  %tobool1090 = icmp ne i32 %475, 0, !dbg !10938
  br i1 %tobool1090, label %land.lhs.true1091, label %land.lhs.true1189, !dbg !10938

land.lhs.true1091:                                ; preds = %sw.bb1089
  %476 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1092 = zext i32 %476 to i64, !dbg !10938
  %arrayidx1093 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1092, !dbg !10938
  %477 = load i8, i8* %arrayidx1093, align 1, !dbg !10938
  %conv1094 = zext i8 %477 to i32, !dbg !10938
  %cmp1095 = icmp eq i32 %conv1094, 8, !dbg !10938
  br i1 %cmp1095, label %land.lhs.true1115, label %lor.lhs.false1097, !dbg !10938

lor.lhs.false1097:                                ; preds = %land.lhs.true1091
  %478 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1098 = zext i32 %478 to i64, !dbg !10938
  %arrayidx1099 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1098, !dbg !10938
  %479 = load i8, i8* %arrayidx1099, align 1, !dbg !10938
  %conv1100 = zext i8 %479 to i32, !dbg !10938
  %cmp1101 = icmp eq i32 %conv1100, 9, !dbg !10938
  br i1 %cmp1101, label %land.lhs.true1115, label %lor.lhs.false1103, !dbg !10938

lor.lhs.false1103:                                ; preds = %lor.lhs.false1097
  %480 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1104 = zext i32 %480 to i64, !dbg !10938
  %arrayidx1105 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1104, !dbg !10938
  %481 = load i8, i8* %arrayidx1105, align 1, !dbg !10938
  %conv1106 = zext i8 %481 to i32, !dbg !10938
  %cmp1107 = icmp eq i32 %conv1106, 11, !dbg !10938
  br i1 %cmp1107, label %land.lhs.true1115, label %lor.lhs.false1109, !dbg !10938

lor.lhs.false1109:                                ; preds = %lor.lhs.false1103
  %482 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1110 = zext i32 %482 to i64, !dbg !10938
  %arrayidx1111 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1110, !dbg !10938
  %483 = load i8, i8* %arrayidx1111, align 1, !dbg !10938
  %conv1112 = zext i8 %483 to i32, !dbg !10938
  %cmp1113 = icmp eq i32 %conv1112, 17, !dbg !10938
  br i1 %cmp1113, label %land.lhs.true1115, label %land.lhs.true1189, !dbg !10938

land.lhs.true1115:                                ; preds = %lor.lhs.false1109, %lor.lhs.false1103, %lor.lhs.false1097, %land.lhs.true1091
  %484 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1116 = zext i32 %484 to i64, !dbg !10938
  %arrayidx1117 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1116, !dbg !10938
  %485 = load i8, i8* %arrayidx1117, align 1, !dbg !10938
  %conv1118 = zext i8 %485 to i32, !dbg !10938
  %cmp1119 = icmp eq i32 %conv1118, 8, !dbg !10938
  br i1 %cmp1119, label %cond.true1127, label %lor.lhs.false1121, !dbg !10938

lor.lhs.false1121:                                ; preds = %land.lhs.true1115
  %486 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1122 = zext i32 %486 to i64, !dbg !10938
  %arrayidx1123 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1122, !dbg !10938
  %487 = load i8, i8* %arrayidx1123, align 1, !dbg !10938
  %conv1124 = zext i8 %487 to i32, !dbg !10938
  %cmp1125 = icmp eq i32 %conv1124, 9, !dbg !10938
  br i1 %cmp1125, label %cond.true1127, label %cond.false1128, !dbg !10938

cond.true1127:                                    ; preds = %lor.lhs.false1121, %land.lhs.true1115
  %488 = load i32, i32* %mode.addr, align 4, !dbg !10938
  br label %cond.end1132, !dbg !10938

cond.false1128:                                   ; preds = %lor.lhs.false1121
  %489 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1129 = zext i32 %489 to i64, !dbg !10938
  %arrayidx1130 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1129, !dbg !10938
  %490 = load i8, i8* %arrayidx1130, align 1, !dbg !10938
  %conv1131 = zext i8 %490 to i32, !dbg !10938
  br label %cond.end1132, !dbg !10938

cond.end1132:                                     ; preds = %cond.false1128, %cond.true1127
  %cond1133 = phi i32 [ %488, %cond.true1127 ], [ %conv1131, %cond.false1128 ], !dbg !10938
  %idxprom1134 = zext i32 %cond1133 to i64, !dbg !10938
  %arrayidx1135 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1134, !dbg !10938
  %491 = load i8, i8* %arrayidx1135, align 1, !dbg !10938
  %conv1136 = zext i8 %491 to i32, !dbg !10938
  %cmp1137 = icmp eq i32 %conv1136, 9, !dbg !10938
  br i1 %cmp1137, label %cond.true1139, label %cond.false1160, !dbg !10938

cond.true1139:                                    ; preds = %cond.end1132
  %492 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1140 = zext i32 %492 to i64, !dbg !10938
  %arrayidx1141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1140, !dbg !10938
  %493 = load i8, i8* %arrayidx1141, align 1, !dbg !10938
  %conv1142 = zext i8 %493 to i32, !dbg !10938
  %cmp1143 = icmp eq i32 %conv1142, 8, !dbg !10938
  br i1 %cmp1143, label %cond.true1151, label %lor.lhs.false1145, !dbg !10938

lor.lhs.false1145:                                ; preds = %cond.true1139
  %494 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1146 = zext i32 %494 to i64, !dbg !10938
  %arrayidx1147 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1146, !dbg !10938
  %495 = load i8, i8* %arrayidx1147, align 1, !dbg !10938
  %conv1148 = zext i8 %495 to i32, !dbg !10938
  %cmp1149 = icmp eq i32 %conv1148, 9, !dbg !10938
  br i1 %cmp1149, label %cond.true1151, label %cond.false1152, !dbg !10938

cond.true1151:                                    ; preds = %lor.lhs.false1145, %cond.true1139
  %496 = load i32, i32* %mode.addr, align 4, !dbg !10938
  br label %cond.end1156, !dbg !10938

cond.false1152:                                   ; preds = %lor.lhs.false1145
  %497 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1153 = zext i32 %497 to i64, !dbg !10938
  %arrayidx1154 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1153, !dbg !10938
  %498 = load i8, i8* %arrayidx1154, align 1, !dbg !10938
  %conv1155 = zext i8 %498 to i32, !dbg !10938
  br label %cond.end1156, !dbg !10938

cond.end1156:                                     ; preds = %cond.false1152, %cond.true1151
  %cond1157 = phi i32 [ %496, %cond.true1151 ], [ %conv1155, %cond.false1152 ], !dbg !10938
  %sub1158 = sub i32 %cond1157, 42, !dbg !10938
  %add1159 = add i32 %sub1158, 4, !dbg !10938
  br label %cond.end1180, !dbg !10938

cond.false1160:                                   ; preds = %cond.end1132
  %499 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1161 = zext i32 %499 to i64, !dbg !10938
  %arrayidx1162 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1161, !dbg !10938
  %500 = load i8, i8* %arrayidx1162, align 1, !dbg !10938
  %conv1163 = zext i8 %500 to i32, !dbg !10938
  %cmp1164 = icmp eq i32 %conv1163, 8, !dbg !10938
  br i1 %cmp1164, label %cond.true1172, label %lor.lhs.false1166, !dbg !10938

lor.lhs.false1166:                                ; preds = %cond.false1160
  %501 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1167 = zext i32 %501 to i64, !dbg !10938
  %arrayidx1168 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1167, !dbg !10938
  %502 = load i8, i8* %arrayidx1168, align 1, !dbg !10938
  %conv1169 = zext i8 %502 to i32, !dbg !10938
  %cmp1170 = icmp eq i32 %conv1169, 9, !dbg !10938
  br i1 %cmp1170, label %cond.true1172, label %cond.false1173, !dbg !10938

cond.true1172:                                    ; preds = %lor.lhs.false1166, %cond.false1160
  %503 = load i32, i32* %mode.addr, align 4, !dbg !10938
  br label %cond.end1177, !dbg !10938

cond.false1173:                                   ; preds = %lor.lhs.false1166
  %504 = load i32, i32* %mode.addr, align 4, !dbg !10938
  %idxprom1174 = zext i32 %504 to i64, !dbg !10938
  %arrayidx1175 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1174, !dbg !10938
  %505 = load i8, i8* %arrayidx1175, align 1, !dbg !10938
  %conv1176 = zext i8 %505 to i32, !dbg !10938
  br label %cond.end1177, !dbg !10938

cond.end1177:                                     ; preds = %cond.false1173, %cond.true1172
  %cond1178 = phi i32 [ %503, %cond.true1172 ], [ %conv1176, %cond.false1173 ], !dbg !10938
  %sub1179 = sub i32 %cond1178, 38, !dbg !10938
  br label %cond.end1180, !dbg !10938

cond.end1180:                                     ; preds = %cond.end1177, %cond.end1156
  %cond1181 = phi i32 [ %add1159, %cond.end1156 ], [ %sub1179, %cond.end1177 ], !dbg !10938
  %idxprom1182 = zext i32 %cond1181 to i64, !dbg !10938
  %arrayidx1183 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1182, !dbg !10938
  %506 = load %struct.real_format*, %struct.real_format** %arrayidx1183, align 8, !dbg !10938
  %has_nans1184 = getelementptr inbounds %struct.real_format, %struct.real_format* %506, i32 0, i32 11, !dbg !10938
  %507 = load i8, i8* %has_nans1184, align 2, !dbg !10938
  %conv1185 = zext i8 %507 to i32, !dbg !10938
  %tobool1186 = icmp ne i32 %conv1185, 0, !dbg !10938
  br i1 %tobool1186, label %land.lhs.true1187, label %land.lhs.true1189, !dbg !10938

land.lhs.true1187:                                ; preds = %cond.end1180
  %508 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10938
  %tobool1188 = icmp ne i32 %508, 0, !dbg !10938
  br i1 %tobool1188, label %land.lhs.true1189, label %if.end1249, !dbg !10941

land.lhs.true1189:                                ; preds = %land.lhs.true1187, %cond.end1180, %lor.lhs.false1109, %sw.bb1089
  %509 = load i32, i32* %mode.addr, align 4, !dbg !10942
  %idxprom1190 = zext i32 %509 to i64, !dbg !10942
  %arrayidx1191 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1190, !dbg !10942
  %510 = load i8, i8* %arrayidx1191, align 1, !dbg !10942
  %conv1192 = zext i8 %510 to i32, !dbg !10942
  %cmp1193 = icmp eq i32 %conv1192, 2, !dbg !10942
  br i1 %cmp1193, label %lor.lhs.false1213, label %lor.lhs.false1195, !dbg !10942

lor.lhs.false1195:                                ; preds = %land.lhs.true1189
  %511 = load i32, i32* %mode.addr, align 4, !dbg !10942
  %idxprom1196 = zext i32 %511 to i64, !dbg !10942
  %arrayidx1197 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1196, !dbg !10942
  %512 = load i8, i8* %arrayidx1197, align 1, !dbg !10942
  %conv1198 = zext i8 %512 to i32, !dbg !10942
  %cmp1199 = icmp eq i32 %conv1198, 3, !dbg !10942
  br i1 %cmp1199, label %lor.lhs.false1213, label %lor.lhs.false1201, !dbg !10942

lor.lhs.false1201:                                ; preds = %lor.lhs.false1195
  %513 = load i32, i32* %mode.addr, align 4, !dbg !10942
  %idxprom1202 = zext i32 %513 to i64, !dbg !10942
  %arrayidx1203 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1202, !dbg !10942
  %514 = load i8, i8* %arrayidx1203, align 1, !dbg !10942
  %conv1204 = zext i8 %514 to i32, !dbg !10942
  %cmp1205 = icmp eq i32 %conv1204, 10, !dbg !10942
  br i1 %cmp1205, label %lor.lhs.false1213, label %lor.lhs.false1207, !dbg !10942

lor.lhs.false1207:                                ; preds = %lor.lhs.false1201
  %515 = load i32, i32* %mode.addr, align 4, !dbg !10942
  %idxprom1208 = zext i32 %515 to i64, !dbg !10942
  %arrayidx1209 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1208, !dbg !10942
  %516 = load i8, i8* %arrayidx1209, align 1, !dbg !10942
  %conv1210 = zext i8 %516 to i32, !dbg !10942
  %cmp1211 = icmp eq i32 %conv1210, 12, !dbg !10942
  br i1 %cmp1211, label %lor.lhs.false1213, label %if.then1219, !dbg !10943

lor.lhs.false1213:                                ; preds = %lor.lhs.false1207, %lor.lhs.false1201, %lor.lhs.false1195, %land.lhs.true1189
  %517 = load i32, i32* @flag_wrapv, align 4, !dbg !10944
  %tobool1214 = icmp ne i32 %517, 0, !dbg !10944
  br i1 %tobool1214, label %if.end1249, label %land.lhs.true1215, !dbg !10945

land.lhs.true1215:                                ; preds = %lor.lhs.false1213
  %518 = load i32, i32* @flag_trapv, align 4, !dbg !10946
  %tobool1216 = icmp ne i32 %518, 0, !dbg !10946
  br i1 %tobool1216, label %if.end1249, label %land.lhs.true1217, !dbg !10947

land.lhs.true1217:                                ; preds = %land.lhs.true1215
  %519 = load i32, i32* @flag_strict_overflow, align 4, !dbg !10948
  %tobool1218 = icmp ne i32 %519, 0, !dbg !10948
  br i1 %tobool1218, label %if.then1219, label %if.end1249, !dbg !10949

if.then1219:                                      ; preds = %land.lhs.true1217, %lor.lhs.false1207
  %520 = load i32, i32* %mode.addr, align 4, !dbg !10950
  %idxprom1220 = zext i32 %520 to i64, !dbg !10950
  %arrayidx1221 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1220, !dbg !10950
  %521 = load i8, i8* %arrayidx1221, align 1, !dbg !10950
  %conv1222 = zext i8 %521 to i32, !dbg !10950
  %cmp1223 = icmp eq i32 %conv1222, 2, !dbg !10950
  br i1 %cmp1223, label %land.lhs.true1243, label %lor.lhs.false1225, !dbg !10950

lor.lhs.false1225:                                ; preds = %if.then1219
  %522 = load i32, i32* %mode.addr, align 4, !dbg !10950
  %idxprom1226 = zext i32 %522 to i64, !dbg !10950
  %arrayidx1227 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1226, !dbg !10950
  %523 = load i8, i8* %arrayidx1227, align 1, !dbg !10950
  %conv1228 = zext i8 %523 to i32, !dbg !10950
  %cmp1229 = icmp eq i32 %conv1228, 3, !dbg !10950
  br i1 %cmp1229, label %land.lhs.true1243, label %lor.lhs.false1231, !dbg !10950

lor.lhs.false1231:                                ; preds = %lor.lhs.false1225
  %524 = load i32, i32* %mode.addr, align 4, !dbg !10950
  %idxprom1232 = zext i32 %524 to i64, !dbg !10950
  %arrayidx1233 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1232, !dbg !10950
  %525 = load i8, i8* %arrayidx1233, align 1, !dbg !10950
  %conv1234 = zext i8 %525 to i32, !dbg !10950
  %cmp1235 = icmp eq i32 %conv1234, 10, !dbg !10950
  br i1 %cmp1235, label %land.lhs.true1243, label %lor.lhs.false1237, !dbg !10950

lor.lhs.false1237:                                ; preds = %lor.lhs.false1231
  %526 = load i32, i32* %mode.addr, align 4, !dbg !10950
  %idxprom1238 = zext i32 %526 to i64, !dbg !10950
  %arrayidx1239 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1238, !dbg !10950
  %527 = load i8, i8* %arrayidx1239, align 1, !dbg !10950
  %conv1240 = zext i8 %527 to i32, !dbg !10950
  %cmp1241 = icmp eq i32 %conv1240, 12, !dbg !10950
  br i1 %cmp1241, label %land.lhs.true1243, label %if.end1248, !dbg !10953

land.lhs.true1243:                                ; preds = %lor.lhs.false1237, %lor.lhs.false1231, %lor.lhs.false1225, %if.then1219
  %528 = load i32, i32* @warn_strict_overflow, align 4, !dbg !10954
  %cmp1244 = icmp sge i32 %528, 2, !dbg !10954
  br i1 %cmp1244, label %if.then1246, label %if.end1248, !dbg !10955

if.then1246:                                      ; preds = %land.lhs.true1243
  %call1247 = call zeroext i8 (i32, i8*, ...) @warning(i32 187, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.2, i64 0, i64 0)), !dbg !10956
  br label %if.end1248, !dbg !10956

if.end1248:                                       ; preds = %if.then1246, %land.lhs.true1243, %lor.lhs.false1237
  %529 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10957
  store %struct.rtx_def* %529, %struct.rtx_def** %retval, align 8, !dbg !10958
  br label %return, !dbg !10958

if.end1249:                                       ; preds = %land.lhs.true1217, %land.lhs.true1215, %lor.lhs.false1213, %land.lhs.true1187
  br label %sw.epilog1411, !dbg !10959

sw.bb1250:                                        ; preds = %if.then1088
  %530 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1251 = zext i32 %530 to i64, !dbg !10960
  %arrayidx1252 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1251, !dbg !10960
  %531 = load i8, i8* %arrayidx1252, align 1, !dbg !10960
  %conv1253 = zext i8 %531 to i32, !dbg !10960
  %cmp1254 = icmp eq i32 %conv1253, 8, !dbg !10960
  br i1 %cmp1254, label %land.lhs.true1274, label %lor.lhs.false1256, !dbg !10960

lor.lhs.false1256:                                ; preds = %sw.bb1250
  %532 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1257 = zext i32 %532 to i64, !dbg !10960
  %arrayidx1258 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1257, !dbg !10960
  %533 = load i8, i8* %arrayidx1258, align 1, !dbg !10960
  %conv1259 = zext i8 %533 to i32, !dbg !10960
  %cmp1260 = icmp eq i32 %conv1259, 9, !dbg !10960
  br i1 %cmp1260, label %land.lhs.true1274, label %lor.lhs.false1262, !dbg !10960

lor.lhs.false1262:                                ; preds = %lor.lhs.false1256
  %534 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1263 = zext i32 %534 to i64, !dbg !10960
  %arrayidx1264 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1263, !dbg !10960
  %535 = load i8, i8* %arrayidx1264, align 1, !dbg !10960
  %conv1265 = zext i8 %535 to i32, !dbg !10960
  %cmp1266 = icmp eq i32 %conv1265, 11, !dbg !10960
  br i1 %cmp1266, label %land.lhs.true1274, label %lor.lhs.false1268, !dbg !10960

lor.lhs.false1268:                                ; preds = %lor.lhs.false1262
  %536 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1269 = zext i32 %536 to i64, !dbg !10960
  %arrayidx1270 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1269, !dbg !10960
  %537 = load i8, i8* %arrayidx1270, align 1, !dbg !10960
  %conv1271 = zext i8 %537 to i32, !dbg !10960
  %cmp1272 = icmp eq i32 %conv1271, 17, !dbg !10960
  br i1 %cmp1272, label %land.lhs.true1274, label %land.lhs.true1348, !dbg !10960

land.lhs.true1274:                                ; preds = %lor.lhs.false1268, %lor.lhs.false1262, %lor.lhs.false1256, %sw.bb1250
  %538 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1275 = zext i32 %538 to i64, !dbg !10960
  %arrayidx1276 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1275, !dbg !10960
  %539 = load i8, i8* %arrayidx1276, align 1, !dbg !10960
  %conv1277 = zext i8 %539 to i32, !dbg !10960
  %cmp1278 = icmp eq i32 %conv1277, 8, !dbg !10960
  br i1 %cmp1278, label %cond.true1286, label %lor.lhs.false1280, !dbg !10960

lor.lhs.false1280:                                ; preds = %land.lhs.true1274
  %540 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1281 = zext i32 %540 to i64, !dbg !10960
  %arrayidx1282 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1281, !dbg !10960
  %541 = load i8, i8* %arrayidx1282, align 1, !dbg !10960
  %conv1283 = zext i8 %541 to i32, !dbg !10960
  %cmp1284 = icmp eq i32 %conv1283, 9, !dbg !10960
  br i1 %cmp1284, label %cond.true1286, label %cond.false1287, !dbg !10960

cond.true1286:                                    ; preds = %lor.lhs.false1280, %land.lhs.true1274
  %542 = load i32, i32* %mode.addr, align 4, !dbg !10960
  br label %cond.end1291, !dbg !10960

cond.false1287:                                   ; preds = %lor.lhs.false1280
  %543 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1288 = zext i32 %543 to i64, !dbg !10960
  %arrayidx1289 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1288, !dbg !10960
  %544 = load i8, i8* %arrayidx1289, align 1, !dbg !10960
  %conv1290 = zext i8 %544 to i32, !dbg !10960
  br label %cond.end1291, !dbg !10960

cond.end1291:                                     ; preds = %cond.false1287, %cond.true1286
  %cond1292 = phi i32 [ %542, %cond.true1286 ], [ %conv1290, %cond.false1287 ], !dbg !10960
  %idxprom1293 = zext i32 %cond1292 to i64, !dbg !10960
  %arrayidx1294 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1293, !dbg !10960
  %545 = load i8, i8* %arrayidx1294, align 1, !dbg !10960
  %conv1295 = zext i8 %545 to i32, !dbg !10960
  %cmp1296 = icmp eq i32 %conv1295, 9, !dbg !10960
  br i1 %cmp1296, label %cond.true1298, label %cond.false1319, !dbg !10960

cond.true1298:                                    ; preds = %cond.end1291
  %546 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1299 = zext i32 %546 to i64, !dbg !10960
  %arrayidx1300 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1299, !dbg !10960
  %547 = load i8, i8* %arrayidx1300, align 1, !dbg !10960
  %conv1301 = zext i8 %547 to i32, !dbg !10960
  %cmp1302 = icmp eq i32 %conv1301, 8, !dbg !10960
  br i1 %cmp1302, label %cond.true1310, label %lor.lhs.false1304, !dbg !10960

lor.lhs.false1304:                                ; preds = %cond.true1298
  %548 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1305 = zext i32 %548 to i64, !dbg !10960
  %arrayidx1306 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1305, !dbg !10960
  %549 = load i8, i8* %arrayidx1306, align 1, !dbg !10960
  %conv1307 = zext i8 %549 to i32, !dbg !10960
  %cmp1308 = icmp eq i32 %conv1307, 9, !dbg !10960
  br i1 %cmp1308, label %cond.true1310, label %cond.false1311, !dbg !10960

cond.true1310:                                    ; preds = %lor.lhs.false1304, %cond.true1298
  %550 = load i32, i32* %mode.addr, align 4, !dbg !10960
  br label %cond.end1315, !dbg !10960

cond.false1311:                                   ; preds = %lor.lhs.false1304
  %551 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1312 = zext i32 %551 to i64, !dbg !10960
  %arrayidx1313 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1312, !dbg !10960
  %552 = load i8, i8* %arrayidx1313, align 1, !dbg !10960
  %conv1314 = zext i8 %552 to i32, !dbg !10960
  br label %cond.end1315, !dbg !10960

cond.end1315:                                     ; preds = %cond.false1311, %cond.true1310
  %cond1316 = phi i32 [ %550, %cond.true1310 ], [ %conv1314, %cond.false1311 ], !dbg !10960
  %sub1317 = sub i32 %cond1316, 42, !dbg !10960
  %add1318 = add i32 %sub1317, 4, !dbg !10960
  br label %cond.end1339, !dbg !10960

cond.false1319:                                   ; preds = %cond.end1291
  %553 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1320 = zext i32 %553 to i64, !dbg !10960
  %arrayidx1321 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1320, !dbg !10960
  %554 = load i8, i8* %arrayidx1321, align 1, !dbg !10960
  %conv1322 = zext i8 %554 to i32, !dbg !10960
  %cmp1323 = icmp eq i32 %conv1322, 8, !dbg !10960
  br i1 %cmp1323, label %cond.true1331, label %lor.lhs.false1325, !dbg !10960

lor.lhs.false1325:                                ; preds = %cond.false1319
  %555 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1326 = zext i32 %555 to i64, !dbg !10960
  %arrayidx1327 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1326, !dbg !10960
  %556 = load i8, i8* %arrayidx1327, align 1, !dbg !10960
  %conv1328 = zext i8 %556 to i32, !dbg !10960
  %cmp1329 = icmp eq i32 %conv1328, 9, !dbg !10960
  br i1 %cmp1329, label %cond.true1331, label %cond.false1332, !dbg !10960

cond.true1331:                                    ; preds = %lor.lhs.false1325, %cond.false1319
  %557 = load i32, i32* %mode.addr, align 4, !dbg !10960
  br label %cond.end1336, !dbg !10960

cond.false1332:                                   ; preds = %lor.lhs.false1325
  %558 = load i32, i32* %mode.addr, align 4, !dbg !10960
  %idxprom1333 = zext i32 %558 to i64, !dbg !10960
  %arrayidx1334 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom1333, !dbg !10960
  %559 = load i8, i8* %arrayidx1334, align 1, !dbg !10960
  %conv1335 = zext i8 %559 to i32, !dbg !10960
  br label %cond.end1336, !dbg !10960

cond.end1336:                                     ; preds = %cond.false1332, %cond.true1331
  %cond1337 = phi i32 [ %557, %cond.true1331 ], [ %conv1335, %cond.false1332 ], !dbg !10960
  %sub1338 = sub i32 %cond1337, 38, !dbg !10960
  br label %cond.end1339, !dbg !10960

cond.end1339:                                     ; preds = %cond.end1336, %cond.end1315
  %cond1340 = phi i32 [ %add1318, %cond.end1315 ], [ %sub1338, %cond.end1336 ], !dbg !10960
  %idxprom1341 = zext i32 %cond1340 to i64, !dbg !10960
  %arrayidx1342 = getelementptr inbounds [7 x %struct.real_format*], [7 x %struct.real_format*]* @real_format_for_mode, i64 0, i64 %idxprom1341, !dbg !10960
  %560 = load %struct.real_format*, %struct.real_format** %arrayidx1342, align 8, !dbg !10960
  %has_nans1343 = getelementptr inbounds %struct.real_format, %struct.real_format* %560, i32 0, i32 11, !dbg !10960
  %561 = load i8, i8* %has_nans1343, align 2, !dbg !10960
  %conv1344 = zext i8 %561 to i32, !dbg !10960
  %tobool1345 = icmp ne i32 %conv1344, 0, !dbg !10960
  br i1 %tobool1345, label %land.lhs.true1346, label %land.lhs.true1348, !dbg !10960

land.lhs.true1346:                                ; preds = %cond.end1339
  %562 = load i32, i32* @flag_finite_math_only, align 4, !dbg !10960
  %tobool1347 = icmp ne i32 %562, 0, !dbg !10960
  br i1 %tobool1347, label %land.lhs.true1348, label %if.end1408, !dbg !10962

land.lhs.true1348:                                ; preds = %land.lhs.true1346, %cond.end1339, %lor.lhs.false1268
  %563 = load i32, i32* %mode.addr, align 4, !dbg !10963
  %idxprom1349 = zext i32 %563 to i64, !dbg !10963
  %arrayidx1350 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1349, !dbg !10963
  %564 = load i8, i8* %arrayidx1350, align 1, !dbg !10963
  %conv1351 = zext i8 %564 to i32, !dbg !10963
  %cmp1352 = icmp eq i32 %conv1351, 2, !dbg !10963
  br i1 %cmp1352, label %lor.lhs.false1372, label %lor.lhs.false1354, !dbg !10963

lor.lhs.false1354:                                ; preds = %land.lhs.true1348
  %565 = load i32, i32* %mode.addr, align 4, !dbg !10963
  %idxprom1355 = zext i32 %565 to i64, !dbg !10963
  %arrayidx1356 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1355, !dbg !10963
  %566 = load i8, i8* %arrayidx1356, align 1, !dbg !10963
  %conv1357 = zext i8 %566 to i32, !dbg !10963
  %cmp1358 = icmp eq i32 %conv1357, 3, !dbg !10963
  br i1 %cmp1358, label %lor.lhs.false1372, label %lor.lhs.false1360, !dbg !10963

lor.lhs.false1360:                                ; preds = %lor.lhs.false1354
  %567 = load i32, i32* %mode.addr, align 4, !dbg !10963
  %idxprom1361 = zext i32 %567 to i64, !dbg !10963
  %arrayidx1362 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1361, !dbg !10963
  %568 = load i8, i8* %arrayidx1362, align 1, !dbg !10963
  %conv1363 = zext i8 %568 to i32, !dbg !10963
  %cmp1364 = icmp eq i32 %conv1363, 10, !dbg !10963
  br i1 %cmp1364, label %lor.lhs.false1372, label %lor.lhs.false1366, !dbg !10963

lor.lhs.false1366:                                ; preds = %lor.lhs.false1360
  %569 = load i32, i32* %mode.addr, align 4, !dbg !10963
  %idxprom1367 = zext i32 %569 to i64, !dbg !10963
  %arrayidx1368 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1367, !dbg !10963
  %570 = load i8, i8* %arrayidx1368, align 1, !dbg !10963
  %conv1369 = zext i8 %570 to i32, !dbg !10963
  %cmp1370 = icmp eq i32 %conv1369, 12, !dbg !10963
  br i1 %cmp1370, label %lor.lhs.false1372, label %if.then1378, !dbg !10964

lor.lhs.false1372:                                ; preds = %lor.lhs.false1366, %lor.lhs.false1360, %lor.lhs.false1354, %land.lhs.true1348
  %571 = load i32, i32* @flag_wrapv, align 4, !dbg !10965
  %tobool1373 = icmp ne i32 %571, 0, !dbg !10965
  br i1 %tobool1373, label %if.end1408, label %land.lhs.true1374, !dbg !10966

land.lhs.true1374:                                ; preds = %lor.lhs.false1372
  %572 = load i32, i32* @flag_trapv, align 4, !dbg !10967
  %tobool1375 = icmp ne i32 %572, 0, !dbg !10967
  br i1 %tobool1375, label %if.end1408, label %land.lhs.true1376, !dbg !10968

land.lhs.true1376:                                ; preds = %land.lhs.true1374
  %573 = load i32, i32* @flag_strict_overflow, align 4, !dbg !10969
  %tobool1377 = icmp ne i32 %573, 0, !dbg !10969
  br i1 %tobool1377, label %if.then1378, label %if.end1408, !dbg !10970

if.then1378:                                      ; preds = %land.lhs.true1376, %lor.lhs.false1366
  %574 = load i32, i32* %mode.addr, align 4, !dbg !10971
  %idxprom1379 = zext i32 %574 to i64, !dbg !10971
  %arrayidx1380 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1379, !dbg !10971
  %575 = load i8, i8* %arrayidx1380, align 1, !dbg !10971
  %conv1381 = zext i8 %575 to i32, !dbg !10971
  %cmp1382 = icmp eq i32 %conv1381, 2, !dbg !10971
  br i1 %cmp1382, label %land.lhs.true1402, label %lor.lhs.false1384, !dbg !10971

lor.lhs.false1384:                                ; preds = %if.then1378
  %576 = load i32, i32* %mode.addr, align 4, !dbg !10971
  %idxprom1385 = zext i32 %576 to i64, !dbg !10971
  %arrayidx1386 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1385, !dbg !10971
  %577 = load i8, i8* %arrayidx1386, align 1, !dbg !10971
  %conv1387 = zext i8 %577 to i32, !dbg !10971
  %cmp1388 = icmp eq i32 %conv1387, 3, !dbg !10971
  br i1 %cmp1388, label %land.lhs.true1402, label %lor.lhs.false1390, !dbg !10971

lor.lhs.false1390:                                ; preds = %lor.lhs.false1384
  %578 = load i32, i32* %mode.addr, align 4, !dbg !10971
  %idxprom1391 = zext i32 %578 to i64, !dbg !10971
  %arrayidx1392 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1391, !dbg !10971
  %579 = load i8, i8* %arrayidx1392, align 1, !dbg !10971
  %conv1393 = zext i8 %579 to i32, !dbg !10971
  %cmp1394 = icmp eq i32 %conv1393, 10, !dbg !10971
  br i1 %cmp1394, label %land.lhs.true1402, label %lor.lhs.false1396, !dbg !10971

lor.lhs.false1396:                                ; preds = %lor.lhs.false1390
  %580 = load i32, i32* %mode.addr, align 4, !dbg !10971
  %idxprom1397 = zext i32 %580 to i64, !dbg !10971
  %arrayidx1398 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom1397, !dbg !10971
  %581 = load i8, i8* %arrayidx1398, align 1, !dbg !10971
  %conv1399 = zext i8 %581 to i32, !dbg !10971
  %cmp1400 = icmp eq i32 %conv1399, 12, !dbg !10971
  br i1 %cmp1400, label %land.lhs.true1402, label %if.end1407, !dbg !10974

land.lhs.true1402:                                ; preds = %lor.lhs.false1396, %lor.lhs.false1390, %lor.lhs.false1384, %if.then1378
  %582 = load i32, i32* @warn_strict_overflow, align 4, !dbg !10975
  %cmp1403 = icmp sge i32 %582, 2, !dbg !10975
  br i1 %cmp1403, label %if.then1405, label %if.end1407, !dbg !10976

if.then1405:                                      ; preds = %land.lhs.true1402
  %call1406 = call zeroext i8 (i32, i8*, ...) @warning(i32 187, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.3, i64 0, i64 0)), !dbg !10977
  br label %if.end1407, !dbg !10977

if.end1407:                                       ; preds = %if.then1405, %land.lhs.true1402, %lor.lhs.false1396
  %583 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10978
  store %struct.rtx_def* %583, %struct.rtx_def** %retval, align 8, !dbg !10979
  br label %return, !dbg !10979

if.end1408:                                       ; preds = %land.lhs.true1376, %land.lhs.true1374, %lor.lhs.false1372, %land.lhs.true1346
  br label %sw.epilog1411, !dbg !10980

sw.bb1409:                                        ; preds = %if.then1088
  %584 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !10981
  store %struct.rtx_def* %584, %struct.rtx_def** %retval, align 8, !dbg !10982
  br label %return, !dbg !10982

sw.default1410:                                   ; preds = %if.then1088
  br label %sw.epilog1411, !dbg !10983

sw.epilog1411:                                    ; preds = %sw.default1410, %if.end1408, %if.end1249
  br label %if.end1412, !dbg !10984

if.end1412:                                       ; preds = %sw.epilog1411, %land.lhs.true1079, %lor.lhs.false1074, %if.end1064
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !10985
  br label %return, !dbg !10985

return:                                           ; preds = %if.end1412, %sw.bb1409, %if.end1407, %if.end1248, %if.then1058, %if.then1054, %sw.bb1051, %sw.bb1050, %if.then1010, %if.then1003, %if.then988, %if.then980, %if.then976, %if.then971, %if.then967, %if.then962, %if.then958, %if.then953, %if.then949, %if.then944, %if.then936, %if.then932, %if.then927, %if.then923, %if.then918, %if.then914, %if.then909, %if.then905, %lor.end829, %if.then810, %cond.end685, %sw.default, %sw.bb674, %sw.bb, %if.then632, %if.then313, %if.then211, %if.then110, %if.then43, %if.else31
  %585 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !10986
  ret %struct.rtx_def* %585, !dbg !10986
}

declare dso_local i32 @swap_condition(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_relational_operation_1(i32 %code, i32 %mode, i32 %cmp_mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !10987 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %cmp_mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %op0code = alloca i32, align 4
  %new_code = alloca i32, align 4
  %new_cmp = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %c = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !10990, metadata !DIExpression()), !dbg !10991
  store i32 %cmp_mode, i32* %cmp_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cmp_mode.addr, metadata !10992, metadata !DIExpression()), !dbg !10993
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !10994, metadata !DIExpression()), !dbg !10995
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata i32* %op0code, metadata !10998, metadata !DIExpression()), !dbg !10999
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11000
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !11000
  %bf.load = load i32, i32* %1, align 8, !dbg !11000
  %bf.clear = and i32 %bf.load, 65535, !dbg !11000
  store i32 %bf.clear, i32* %op0code, align 4, !dbg !10999
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11001
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11003
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !11004
  br i1 %cmp, label %land.lhs.true, label %if.end35, !dbg !11005

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11006
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !11006
  %bf.load1 = load i32, i32* %5, align 8, !dbg !11006
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !11006
  %idxprom = sext i32 %bf.clear2 to i64, !dbg !11006
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !11006
  %6 = load i32, i32* %arrayidx, align 4, !dbg !11006
  %and = and i32 %6, -2, !dbg !11006
  %cmp3 = icmp eq i32 %and, 0, !dbg !11006
  br i1 %cmp3, label %if.then, label %if.end35, !dbg !11007

if.then:                                          ; preds = %land.lhs.true
  %7 = load i32, i32* %code.addr, align 4, !dbg !11008
  %cmp4 = icmp eq i32 %7, 80, !dbg !11011
  br i1 %cmp4, label %if.then5, label %if.else18, !dbg !11012

if.then5:                                         ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11013
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !11013
  %bf.load6 = load i32, i32* %9, align 8, !dbg !11013
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !11013
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !11013
  %10 = load i32, i32* %mode.addr, align 4, !dbg !11016
  %cmp8 = icmp eq i32 %bf.clear7, %10, !dbg !11017
  br i1 %cmp8, label %if.then9, label %if.else, !dbg !11018

if.then9:                                         ; preds = %if.then5
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11019
  %call = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %11), !dbg !11020
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !11021
  br label %return, !dbg !11021

if.else:                                          ; preds = %if.then5
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11022
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !11022
  %bf.load10 = load i32, i32* %13, align 8, !dbg !11022
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !11022
  %14 = load i32, i32* %mode.addr, align 4, !dbg !11023
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11024
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !11024
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11024
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11024
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !11024
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !11024
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11025
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !11025
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !11025
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 1, !dbg !11025
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !11025
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !11025
  %call17 = call %struct.rtx_def* @simplify_gen_relational(i32 %bf.clear11, i32 %14, i32 0, %struct.rtx_def* %16, %struct.rtx_def* %18), !dbg !11026
  store %struct.rtx_def* %call17, %struct.rtx_def** %retval, align 8, !dbg !11027
  br label %return, !dbg !11027

if.else18:                                        ; preds = %if.then
  %19 = load i32, i32* %code.addr, align 4, !dbg !11028
  %cmp19 = icmp eq i32 %19, 81, !dbg !11030
  br i1 %cmp19, label %if.then20, label %if.end33, !dbg !11031

if.then20:                                        ; preds = %if.else18
  call void @llvm.dbg.declare(metadata i32* %new_code, metadata !11032, metadata !DIExpression()), !dbg !11034
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11035
  %call21 = call i32 @reversed_comparison_code(%struct.rtx_def* %20, %struct.rtx_def* null), !dbg !11036
  store i32 %call21, i32* %new_code, align 4, !dbg !11034
  %21 = load i32, i32* %new_code, align 4, !dbg !11037
  %cmp22 = icmp ne i32 %21, 0, !dbg !11039
  br i1 %cmp22, label %if.then23, label %if.end, !dbg !11040

if.then23:                                        ; preds = %if.then20
  %22 = load i32, i32* %new_code, align 4, !dbg !11041
  %23 = load i32, i32* %mode.addr, align 4, !dbg !11042
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11043
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !11043
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !11043
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !11043
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !11043
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !11043
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11044
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !11044
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !11044
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 1, !dbg !11044
  %rt_rtx31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtx_def**, !dbg !11044
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx31, align 8, !dbg !11044
  %call32 = call %struct.rtx_def* @simplify_gen_relational(i32 %22, i32 %23, i32 0, %struct.rtx_def* %25, %struct.rtx_def* %27), !dbg !11045
  store %struct.rtx_def* %call32, %struct.rtx_def** %retval, align 8, !dbg !11046
  br label %return, !dbg !11046

if.end:                                           ; preds = %if.then20
  br label %if.end33, !dbg !11047

if.end33:                                         ; preds = %if.end, %if.else18
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35, !dbg !11048

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %entry
  %28 = load i32, i32* %code.addr, align 4, !dbg !11049
  %cmp36 = icmp eq i32 %28, 89, !dbg !11051
  br i1 %cmp36, label %land.lhs.true38, label %lor.lhs.false, !dbg !11052

lor.lhs.false:                                    ; preds = %if.end35
  %29 = load i32, i32* %code.addr, align 4, !dbg !11053
  %cmp37 = icmp eq i32 %29, 86, !dbg !11054
  br i1 %cmp37, label %land.lhs.true38, label %if.end75, !dbg !11055

land.lhs.true38:                                  ; preds = %lor.lhs.false, %if.end35
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11056
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !11056
  %bf.load39 = load i32, i32* %31, align 8, !dbg !11056
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !11056
  %cmp41 = icmp eq i32 %bf.clear40, 49, !dbg !11057
  br i1 %cmp41, label %land.lhs.true42, label %if.end75, !dbg !11058

land.lhs.true42:                                  ; preds = %land.lhs.true38
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11059
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !11059
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !11059
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 1, !dbg !11059
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !11059
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !11059
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !11059
  %bf.load47 = load i32, i32* %34, align 8, !dbg !11059
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !11059
  %cmp49 = icmp eq i32 %bf.clear48, 30, !dbg !11059
  br i1 %cmp49, label %land.lhs.true50, label %if.end75, !dbg !11060

land.lhs.true50:                                  ; preds = %land.lhs.true42
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11061
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11062
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !11062
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !11062
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !11062
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !11062
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !11062
  %call55 = call i32 @rtx_equal_p(%struct.rtx_def* %35, %struct.rtx_def* %37), !dbg !11063
  %tobool = icmp ne i32 %call55, 0, !dbg !11063
  br i1 %tobool, label %if.then63, label %lor.lhs.false56, !dbg !11064

lor.lhs.false56:                                  ; preds = %land.lhs.true50
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11065
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11066
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !11066
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !11066
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 1, !dbg !11066
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !11066
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !11066
  %call61 = call i32 @rtx_equal_p(%struct.rtx_def* %38, %struct.rtx_def* %40), !dbg !11067
  %tobool62 = icmp ne i32 %call61, 0, !dbg !11067
  br i1 %tobool62, label %if.then63, label %if.end75, !dbg !11068

if.then63:                                        ; preds = %lor.lhs.false56, %land.lhs.true50
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_cmp, metadata !11069, metadata !DIExpression()), !dbg !11071
  %41 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11072
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11073
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !11073
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !11073
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 1, !dbg !11073
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !11073
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !11073
  %44 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11074
  %call68 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %41, %struct.rtx_def* %43, i32 %44), !dbg !11075
  store %struct.rtx_def* %call68, %struct.rtx_def** %new_cmp, align 8, !dbg !11071
  %45 = load i32, i32* %code.addr, align 4, !dbg !11076
  %cmp69 = icmp eq i32 %45, 89, !dbg !11077
  %46 = zext i1 %cmp69 to i64, !dbg !11076
  %cond = select i1 %cmp69, i32 86, i32 89, !dbg !11076
  %47 = load i32, i32* %mode.addr, align 4, !dbg !11078
  %48 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11079
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11080
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !11080
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !11080
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !11080
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !11080
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !11080
  %51 = load %struct.rtx_def*, %struct.rtx_def** %new_cmp, align 8, !dbg !11081
  %call74 = call %struct.rtx_def* @simplify_gen_relational(i32 %cond, i32 %47, i32 %48, %struct.rtx_def* %50, %struct.rtx_def* %51), !dbg !11082
  store %struct.rtx_def* %call74, %struct.rtx_def** %retval, align 8, !dbg !11083
  br label %return, !dbg !11083

if.end75:                                         ; preds = %lor.lhs.false56, %land.lhs.true42, %land.lhs.true38, %lor.lhs.false
  %52 = load i32, i32* %code.addr, align 4, !dbg !11084
  %cmp76 = icmp eq i32 %52, 89, !dbg !11086
  br i1 %cmp76, label %land.lhs.true79, label %lor.lhs.false77, !dbg !11087

lor.lhs.false77:                                  ; preds = %if.end75
  %53 = load i32, i32* %code.addr, align 4, !dbg !11088
  %cmp78 = icmp eq i32 %53, 86, !dbg !11089
  br i1 %cmp78, label %land.lhs.true79, label %if.end104, !dbg !11090

land.lhs.true79:                                  ; preds = %lor.lhs.false77, %if.end75
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11091
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !11091
  %bf.load80 = load i32, i32* %55, align 8, !dbg !11091
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !11091
  %cmp82 = icmp eq i32 %bf.clear81, 49, !dbg !11092
  br i1 %cmp82, label %land.lhs.true83, label %if.end104, !dbg !11093

land.lhs.true83:                                  ; preds = %land.lhs.true79
  %56 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11094
  %57 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11095
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !11095
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !11095
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 1, !dbg !11095
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !11095
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !11095
  %call88 = call i32 @rtx_equal_p(%struct.rtx_def* %56, %struct.rtx_def* %58), !dbg !11096
  %tobool89 = icmp ne i32 %call88, 0, !dbg !11096
  br i1 %tobool89, label %land.lhs.true90, label %if.end104, !dbg !11097

land.lhs.true90:                                  ; preds = %land.lhs.true83
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11098
  %60 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11099
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !11099
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !11099
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !11099
  %rt_rtx94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtx_def**, !dbg !11099
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx94, align 8, !dbg !11099
  %call95 = call i32 @rtx_equal_p(%struct.rtx_def* %59, %struct.rtx_def* %61), !dbg !11100
  %tobool96 = icmp ne i32 %call95, 0, !dbg !11100
  br i1 %tobool96, label %if.end104, label %if.then97, !dbg !11101

if.then97:                                        ; preds = %land.lhs.true90
  %62 = load i32, i32* %code.addr, align 4, !dbg !11102
  %63 = load i32, i32* %mode.addr, align 4, !dbg !11103
  %64 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11104
  %65 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11105
  %66 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11106
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !11106
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !11106
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 0, !dbg !11106
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !11106
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !11106
  %call102 = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %67), !dbg !11107
  %call103 = call %struct.rtx_def* @simplify_gen_relational(i32 %62, i32 %63, i32 %64, %struct.rtx_def* %65, %struct.rtx_def* %call102), !dbg !11108
  store %struct.rtx_def* %call103, %struct.rtx_def** %retval, align 8, !dbg !11109
  br label %return, !dbg !11109

if.end104:                                        ; preds = %land.lhs.true90, %land.lhs.true83, %land.lhs.true79, %lor.lhs.false77
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11110
  %69 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11112
  %cmp105 = icmp eq %struct.rtx_def* %68, %69, !dbg !11113
  br i1 %cmp105, label %if.then106, label %if.else115, !dbg !11114

if.then106:                                       ; preds = %if.end104
  %70 = load i32, i32* %code.addr, align 4, !dbg !11115
  %cmp107 = icmp eq i32 %70, 87, !dbg !11118
  br i1 %cmp107, label %if.then108, label %if.end110, !dbg !11119

if.then108:                                       ; preds = %if.then106
  %71 = load i32, i32* %mode.addr, align 4, !dbg !11120
  %72 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11121
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11122
  %74 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11123
  %call109 = call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 %71, i32 %72, %struct.rtx_def* %73, %struct.rtx_def* %74), !dbg !11124
  store %struct.rtx_def* %call109, %struct.rtx_def** %retval, align 8, !dbg !11125
  br label %return, !dbg !11125

if.end110:                                        ; preds = %if.then106
  %75 = load i32, i32* %code.addr, align 4, !dbg !11126
  %cmp111 = icmp eq i32 %75, 88, !dbg !11128
  br i1 %cmp111, label %if.then112, label %if.end114, !dbg !11129

if.then112:                                       ; preds = %if.end110
  %76 = load i32, i32* %mode.addr, align 4, !dbg !11130
  %77 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11131
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11132
  %79 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11133
  %call113 = call %struct.rtx_def* @simplify_gen_relational(i32 81, i32 %76, i32 %77, %struct.rtx_def* %78, %struct.rtx_def* %79), !dbg !11134
  store %struct.rtx_def* %call113, %struct.rtx_def** %retval, align 8, !dbg !11135
  br label %return, !dbg !11135

if.end114:                                        ; preds = %if.end110
  br label %if.end138, !dbg !11136

if.else115:                                       ; preds = %if.end104
  %80 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11137
  %81 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 65), align 8, !dbg !11139
  %cmp116 = icmp eq %struct.rtx_def* %80, %81, !dbg !11140
  br i1 %cmp116, label %if.then117, label %if.else125, !dbg !11141

if.then117:                                       ; preds = %if.else115
  %82 = load i32, i32* %code.addr, align 4, !dbg !11142
  switch i32 %82, label %sw.default [
    i32 82, label %sw.bb
    i32 86, label %sw.bb119
    i32 85, label %sw.bb121
    i32 89, label %sw.bb123
  ], !dbg !11144

sw.bb:                                            ; preds = %if.then117
  %83 = load i32, i32* %mode.addr, align 4, !dbg !11145
  %84 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11147
  %85 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11148
  %86 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11149
  %call118 = call %struct.rtx_def* @simplify_gen_relational(i32 83, i32 %83, i32 %84, %struct.rtx_def* %85, %struct.rtx_def* %86), !dbg !11150
  store %struct.rtx_def* %call118, %struct.rtx_def** %retval, align 8, !dbg !11151
  br label %return, !dbg !11151

sw.bb119:                                         ; preds = %if.then117
  %87 = load i32, i32* %mode.addr, align 4, !dbg !11152
  %88 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11153
  %89 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11154
  %90 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11155
  %call120 = call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 %87, i32 %88, %struct.rtx_def* %89, %struct.rtx_def* %90), !dbg !11156
  store %struct.rtx_def* %call120, %struct.rtx_def** %retval, align 8, !dbg !11157
  br label %return, !dbg !11157

sw.bb121:                                         ; preds = %if.then117
  %91 = load i32, i32* %mode.addr, align 4, !dbg !11158
  %92 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11159
  %93 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11160
  %94 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11161
  %call122 = call %struct.rtx_def* @simplify_gen_relational(i32 84, i32 %91, i32 %92, %struct.rtx_def* %93, %struct.rtx_def* %94), !dbg !11162
  store %struct.rtx_def* %call122, %struct.rtx_def** %retval, align 8, !dbg !11163
  br label %return, !dbg !11163

sw.bb123:                                         ; preds = %if.then117
  %95 = load i32, i32* %mode.addr, align 4, !dbg !11164
  %96 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11165
  %97 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11166
  %98 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11167
  %call124 = call %struct.rtx_def* @simplify_gen_relational(i32 81, i32 %95, i32 %96, %struct.rtx_def* %97, %struct.rtx_def* %98), !dbg !11168
  store %struct.rtx_def* %call124, %struct.rtx_def** %retval, align 8, !dbg !11169
  br label %return, !dbg !11169

sw.default:                                       ; preds = %if.then117
  br label %sw.epilog, !dbg !11170

sw.epilog:                                        ; preds = %sw.default
  br label %if.end137, !dbg !11171

if.else125:                                       ; preds = %if.else115
  %99 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11172
  %100 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !11174
  %cmp126 = icmp eq %struct.rtx_def* %99, %100, !dbg !11175
  br i1 %cmp126, label %if.then127, label %if.end136, !dbg !11176

if.then127:                                       ; preds = %if.else125
  %101 = load i32, i32* %code.addr, align 4, !dbg !11177
  %cmp128 = icmp eq i32 %101, 84, !dbg !11180
  br i1 %cmp128, label %if.then129, label %if.end131, !dbg !11181

if.then129:                                       ; preds = %if.then127
  %102 = load i32, i32* %mode.addr, align 4, !dbg !11182
  %103 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11183
  %104 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11184
  %105 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11185
  %call130 = call %struct.rtx_def* @simplify_gen_relational(i32 85, i32 %102, i32 %103, %struct.rtx_def* %104, %struct.rtx_def* %105), !dbg !11186
  store %struct.rtx_def* %call130, %struct.rtx_def** %retval, align 8, !dbg !11187
  br label %return, !dbg !11187

if.end131:                                        ; preds = %if.then127
  %106 = load i32, i32* %code.addr, align 4, !dbg !11188
  %cmp132 = icmp eq i32 %106, 83, !dbg !11190
  br i1 %cmp132, label %if.then133, label %if.end135, !dbg !11191

if.then133:                                       ; preds = %if.end131
  %107 = load i32, i32* %mode.addr, align 4, !dbg !11192
  %108 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11193
  %109 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11194
  %110 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11195
  %call134 = call %struct.rtx_def* @simplify_gen_relational(i32 82, i32 %107, i32 %108, %struct.rtx_def* %109, %struct.rtx_def* %110), !dbg !11196
  store %struct.rtx_def* %call134, %struct.rtx_def** %retval, align 8, !dbg !11197
  br label %return, !dbg !11197

if.end135:                                        ; preds = %if.end131
  br label %if.end136, !dbg !11198

if.end136:                                        ; preds = %if.end135, %if.else125
  br label %if.end137

if.end137:                                        ; preds = %if.end136, %sw.epilog
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end114
  %111 = load i32, i32* %code.addr, align 4, !dbg !11199
  %cmp139 = icmp eq i32 %111, 81, !dbg !11201
  br i1 %cmp139, label %land.lhs.true142, label %lor.lhs.false140, !dbg !11202

lor.lhs.false140:                                 ; preds = %if.end138
  %112 = load i32, i32* %code.addr, align 4, !dbg !11203
  %cmp141 = icmp eq i32 %112, 80, !dbg !11204
  br i1 %cmp141, label %land.lhs.true142, label %if.end201, !dbg !11205

land.lhs.true142:                                 ; preds = %lor.lhs.false140, %if.end138
  %113 = load i32, i32* %op0code, align 4, !dbg !11206
  %cmp143 = icmp eq i32 %113, 49, !dbg !11207
  br i1 %cmp143, label %land.lhs.true146, label %lor.lhs.false144, !dbg !11208

lor.lhs.false144:                                 ; preds = %land.lhs.true142
  %114 = load i32, i32* %op0code, align 4, !dbg !11209
  %cmp145 = icmp eq i32 %114, 50, !dbg !11210
  br i1 %cmp145, label %land.lhs.true146, label %if.end201, !dbg !11211

land.lhs.true146:                                 ; preds = %lor.lhs.false144, %land.lhs.true142
  %115 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11212
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !11212
  %bf.load147 = load i32, i32* %116, align 8, !dbg !11212
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !11212
  %idxprom149 = sext i32 %bf.clear148 to i64, !dbg !11212
  %arrayidx150 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom149, !dbg !11212
  %117 = load i32, i32* %arrayidx150, align 4, !dbg !11212
  %cmp151 = icmp eq i32 %117, 9, !dbg !11212
  br i1 %cmp151, label %land.lhs.true152, label %if.end201, !dbg !11213

land.lhs.true152:                                 ; preds = %land.lhs.true146
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11214
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !11214
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !11214
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 1, !dbg !11214
  %rt_rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**, !dbg !11214
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx156, align 8, !dbg !11214
  %120 = bitcast %struct.rtx_def* %119 to i32*, !dbg !11214
  %bf.load157 = load i32, i32* %120, align 8, !dbg !11214
  %bf.clear158 = and i32 %bf.load157, 65535, !dbg !11214
  %idxprom159 = sext i32 %bf.clear158 to i64, !dbg !11214
  %arrayidx160 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom159, !dbg !11214
  %121 = load i32, i32* %arrayidx160, align 4, !dbg !11214
  %cmp161 = icmp eq i32 %121, 9, !dbg !11214
  br i1 %cmp161, label %land.lhs.true162, label %if.end201, !dbg !11215

land.lhs.true162:                                 ; preds = %land.lhs.true152
  %122 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11216
  %idxprom163 = zext i32 %122 to i64, !dbg !11216
  %arrayidx164 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom163, !dbg !11216
  %123 = load i8, i8* %arrayidx164, align 1, !dbg !11216
  %conv = zext i8 %123 to i32, !dbg !11216
  %cmp165 = icmp eq i32 %conv, 2, !dbg !11216
  br i1 %cmp165, label %if.then187, label %lor.lhs.false167, !dbg !11216

lor.lhs.false167:                                 ; preds = %land.lhs.true162
  %124 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11216
  %idxprom168 = zext i32 %124 to i64, !dbg !11216
  %arrayidx169 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom168, !dbg !11216
  %125 = load i8, i8* %arrayidx169, align 1, !dbg !11216
  %conv170 = zext i8 %125 to i32, !dbg !11216
  %cmp171 = icmp eq i32 %conv170, 3, !dbg !11216
  br i1 %cmp171, label %if.then187, label %lor.lhs.false173, !dbg !11216

lor.lhs.false173:                                 ; preds = %lor.lhs.false167
  %126 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11216
  %idxprom174 = zext i32 %126 to i64, !dbg !11216
  %arrayidx175 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom174, !dbg !11216
  %127 = load i8, i8* %arrayidx175, align 1, !dbg !11216
  %conv176 = zext i8 %127 to i32, !dbg !11216
  %cmp177 = icmp eq i32 %conv176, 10, !dbg !11216
  br i1 %cmp177, label %if.then187, label %lor.lhs.false179, !dbg !11216

lor.lhs.false179:                                 ; preds = %lor.lhs.false173
  %128 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11216
  %idxprom180 = zext i32 %128 to i64, !dbg !11216
  %arrayidx181 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom180, !dbg !11216
  %129 = load i8, i8* %arrayidx181, align 1, !dbg !11216
  %conv182 = zext i8 %129 to i32, !dbg !11216
  %cmp183 = icmp eq i32 %conv182, 12, !dbg !11216
  br i1 %cmp183, label %if.then187, label %lor.lhs.false185, !dbg !11217

lor.lhs.false185:                                 ; preds = %lor.lhs.false179
  %130 = load i32, i32* @flag_unsafe_math_optimizations, align 4, !dbg !11218
  %tobool186 = icmp ne i32 %130, 0, !dbg !11218
  br i1 %tobool186, label %if.then187, label %if.end201, !dbg !11219

if.then187:                                       ; preds = %lor.lhs.false185, %lor.lhs.false179, %lor.lhs.false173, %lor.lhs.false167, %land.lhs.true162
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !11220, metadata !DIExpression()), !dbg !11222
  %131 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11223
  %u188 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1, !dbg !11223
  %fld189 = bitcast %union.u* %u188 to [1 x %union.rtunion_def]*, !dbg !11223
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld189, i64 0, i64 0, !dbg !11223
  %rt_rtx191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtx_def**, !dbg !11223
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx191, align 8, !dbg !11223
  store %struct.rtx_def* %132, %struct.rtx_def** %x, align 8, !dbg !11222
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %c, metadata !11224, metadata !DIExpression()), !dbg !11225
  %133 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11226
  %u192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !11226
  %fld193 = bitcast %union.u* %u192 to [1 x %union.rtunion_def]*, !dbg !11226
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i64 0, i64 1, !dbg !11226
  %rt_rtx195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtx_def**, !dbg !11226
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx195, align 8, !dbg !11226
  store %struct.rtx_def* %134, %struct.rtx_def** %c, align 8, !dbg !11225
  %135 = load i32, i32* %op0code, align 4, !dbg !11227
  %cmp196 = icmp eq i32 %135, 49, !dbg !11228
  %136 = zext i1 %cmp196 to i64, !dbg !11227
  %cond198 = select i1 %cmp196, i32 50, i32 49, !dbg !11227
  %137 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11229
  %138 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11230
  %139 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !11231
  %call199 = call %struct.rtx_def* @simplify_gen_binary(i32 %cond198, i32 %137, %struct.rtx_def* %138, %struct.rtx_def* %139), !dbg !11232
  store %struct.rtx_def* %call199, %struct.rtx_def** %c, align 8, !dbg !11233
  %140 = load i32, i32* %code.addr, align 4, !dbg !11234
  %141 = load i32, i32* %mode.addr, align 4, !dbg !11235
  %142 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11236
  %143 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !11237
  %144 = load %struct.rtx_def*, %struct.rtx_def** %c, align 8, !dbg !11238
  %call200 = call %struct.rtx_def* @simplify_gen_relational(i32 %140, i32 %141, i32 %142, %struct.rtx_def* %143, %struct.rtx_def* %144), !dbg !11239
  store %struct.rtx_def* %call200, %struct.rtx_def** %retval, align 8, !dbg !11240
  br label %return, !dbg !11240

if.end201:                                        ; preds = %lor.lhs.false185, %land.lhs.true152, %land.lhs.true146, %lor.lhs.false144, %lor.lhs.false140
  %145 = load i32, i32* %code.addr, align 4, !dbg !11241
  %cmp202 = icmp eq i32 %145, 80, !dbg !11243
  br i1 %cmp202, label %land.lhs.true204, label %if.end240, !dbg !11244

land.lhs.true204:                                 ; preds = %if.end201
  %146 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11245
  %147 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11246
  %cmp205 = icmp eq %struct.rtx_def* %146, %147, !dbg !11247
  br i1 %cmp205, label %land.lhs.true207, label %if.end240, !dbg !11248

land.lhs.true207:                                 ; preds = %land.lhs.true204
  %148 = load i32, i32* %mode.addr, align 4, !dbg !11249
  %idxprom208 = zext i32 %148 to i64, !dbg !11249
  %arrayidx209 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom208, !dbg !11249
  %149 = load i8, i8* %arrayidx209, align 1, !dbg !11249
  %conv210 = zext i8 %149 to i32, !dbg !11249
  %cmp211 = icmp eq i32 %conv210, 2, !dbg !11250
  br i1 %cmp211, label %land.lhs.true213, label %if.end240, !dbg !11251

land.lhs.true213:                                 ; preds = %land.lhs.true207
  %150 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11252
  %cmp214 = icmp ne i32 %150, 0, !dbg !11253
  br i1 %cmp214, label %land.lhs.true216, label %if.end240, !dbg !11254

land.lhs.true216:                                 ; preds = %land.lhs.true213
  %151 = load i32, i32* %mode.addr, align 4, !dbg !11255
  %cmp217 = icmp ne i32 %151, 13, !dbg !11256
  br i1 %cmp217, label %land.lhs.true219, label %if.end240, !dbg !11257

land.lhs.true219:                                 ; preds = %land.lhs.true216
  %152 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11258
  %cmp220 = icmp ne i32 %152, 13, !dbg !11259
  br i1 %cmp220, label %land.lhs.true222, label %if.end240, !dbg !11260

land.lhs.true222:                                 ; preds = %land.lhs.true219
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11261
  %154 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11262
  %call223 = call i64 @nonzero_bits(%struct.rtx_def* %153, i32 %154), !dbg !11263
  %cmp224 = icmp eq i64 %call223, 1, !dbg !11264
  br i1 %cmp224, label %if.then226, label %if.end240, !dbg !11265

if.then226:                                       ; preds = %land.lhs.true222
  %155 = load i32, i32* %mode.addr, align 4, !dbg !11266
  %idxprom227 = zext i32 %155 to i64, !dbg !11266
  %arrayidx228 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom227, !dbg !11266
  %156 = load i8, i8* %arrayidx228, align 1, !dbg !11266
  %conv229 = zext i8 %156 to i16, !dbg !11266
  %conv230 = zext i16 %conv229 to i32, !dbg !11266
  %157 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11267
  %idxprom231 = zext i32 %157 to i64, !dbg !11267
  %arrayidx232 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom231, !dbg !11267
  %158 = load i8, i8* %arrayidx232, align 1, !dbg !11267
  %conv233 = zext i8 %158 to i16, !dbg !11267
  %conv234 = zext i16 %conv233 to i32, !dbg !11267
  %cmp235 = icmp sgt i32 %conv230, %conv234, !dbg !11268
  br i1 %cmp235, label %cond.true, label %cond.false, !dbg !11266

cond.true:                                        ; preds = %if.then226
  %159 = load i32, i32* %mode.addr, align 4, !dbg !11269
  %160 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11270
  %161 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11271
  %call237 = call %struct.rtx_def* @simplify_gen_unary(i32 99, i32 %159, %struct.rtx_def* %160, i32 %161), !dbg !11272
  br label %cond.end, !dbg !11266

cond.false:                                       ; preds = %if.then226
  %162 = load i32, i32* %mode.addr, align 4, !dbg !11273
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11274
  %164 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11275
  %call238 = call %struct.rtx_def* @lowpart_subreg(i32 %162, %struct.rtx_def* %163, i32 %164), !dbg !11276
  br label %cond.end, !dbg !11266

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond239 = phi %struct.rtx_def* [ %call237, %cond.true ], [ %call238, %cond.false ], !dbg !11266
  store %struct.rtx_def* %cond239, %struct.rtx_def** %retval, align 8, !dbg !11277
  br label %return, !dbg !11277

if.end240:                                        ; preds = %land.lhs.true222, %land.lhs.true219, %land.lhs.true216, %land.lhs.true213, %land.lhs.true207, %land.lhs.true204, %if.end201
  %165 = load i32, i32* %code.addr, align 4, !dbg !11278
  %cmp241 = icmp eq i32 %165, 81, !dbg !11280
  br i1 %cmp241, label %land.lhs.true246, label %lor.lhs.false243, !dbg !11281

lor.lhs.false243:                                 ; preds = %if.end240
  %166 = load i32, i32* %code.addr, align 4, !dbg !11282
  %cmp244 = icmp eq i32 %166, 80, !dbg !11283
  br i1 %cmp244, label %land.lhs.true246, label %if.end262, !dbg !11284

land.lhs.true246:                                 ; preds = %lor.lhs.false243, %if.end240
  %167 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11285
  %168 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11286
  %cmp247 = icmp eq %struct.rtx_def* %167, %168, !dbg !11287
  br i1 %cmp247, label %land.lhs.true249, label %if.end262, !dbg !11288

land.lhs.true249:                                 ; preds = %land.lhs.true246
  %169 = load i32, i32* %op0code, align 4, !dbg !11289
  %cmp250 = icmp eq i32 %169, 63, !dbg !11290
  br i1 %cmp250, label %if.then252, label %if.end262, !dbg !11291

if.then252:                                       ; preds = %land.lhs.true249
  %170 = load i32, i32* %code.addr, align 4, !dbg !11292
  %171 = load i32, i32* %mode.addr, align 4, !dbg !11293
  %172 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11294
  %173 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11295
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %173, i32 0, i32 1, !dbg !11295
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !11295
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !11295
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !11295
  %174 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !11295
  %175 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11296
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !11296
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !11296
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 1, !dbg !11296
  %rt_rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**, !dbg !11296
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx260, align 8, !dbg !11296
  %call261 = call %struct.rtx_def* @simplify_gen_relational(i32 %170, i32 %171, i32 %172, %struct.rtx_def* %174, %struct.rtx_def* %176), !dbg !11297
  store %struct.rtx_def* %call261, %struct.rtx_def** %retval, align 8, !dbg !11298
  br label %return, !dbg !11298

if.end262:                                        ; preds = %land.lhs.true249, %land.lhs.true246, %lor.lhs.false243
  %177 = load i32, i32* %code.addr, align 4, !dbg !11299
  %cmp263 = icmp eq i32 %177, 81, !dbg !11301
  br i1 %cmp263, label %land.lhs.true268, label %lor.lhs.false265, !dbg !11302

lor.lhs.false265:                                 ; preds = %if.end262
  %178 = load i32, i32* %code.addr, align 4, !dbg !11303
  %cmp266 = icmp eq i32 %178, 80, !dbg !11304
  br i1 %cmp266, label %land.lhs.true268, label %if.end291, !dbg !11305

land.lhs.true268:                                 ; preds = %lor.lhs.false265, %if.end262
  %179 = load i32, i32* %op0code, align 4, !dbg !11306
  %cmp269 = icmp eq i32 %179, 63, !dbg !11307
  br i1 %cmp269, label %land.lhs.true271, label %if.end291, !dbg !11308

land.lhs.true271:                                 ; preds = %land.lhs.true268
  %180 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11309
  %u272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1, !dbg !11309
  %fld273 = bitcast %union.u* %u272 to [1 x %union.rtunion_def]*, !dbg !11309
  %arrayidx274 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i64 0, i64 0, !dbg !11309
  %rt_rtx275 = bitcast %union.rtunion_def* %arrayidx274 to %struct.rtx_def**, !dbg !11309
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx275, align 8, !dbg !11309
  %182 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11310
  %call276 = call i32 @rtx_equal_p(%struct.rtx_def* %181, %struct.rtx_def* %182), !dbg !11311
  %tobool277 = icmp ne i32 %call276, 0, !dbg !11311
  br i1 %tobool277, label %land.lhs.true278, label %if.end291, !dbg !11312

land.lhs.true278:                                 ; preds = %land.lhs.true271
  %183 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11313
  %u279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !11313
  %fld280 = bitcast %union.u* %u279 to [1 x %union.rtunion_def]*, !dbg !11313
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i64 0, i64 0, !dbg !11313
  %rt_rtx282 = bitcast %union.rtunion_def* %arrayidx281 to %struct.rtx_def**, !dbg !11313
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx282, align 8, !dbg !11313
  %call283 = call i32 @side_effects_p(%struct.rtx_def* %184), !dbg !11314
  %tobool284 = icmp ne i32 %call283, 0, !dbg !11314
  br i1 %tobool284, label %if.end291, label %if.then285, !dbg !11315

if.then285:                                       ; preds = %land.lhs.true278
  %185 = load i32, i32* %code.addr, align 4, !dbg !11316
  %186 = load i32, i32* %mode.addr, align 4, !dbg !11317
  %187 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11318
  %188 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11319
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !11319
  %fld287 = bitcast %union.u* %u286 to [1 x %union.rtunion_def]*, !dbg !11319
  %arrayidx288 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld287, i64 0, i64 1, !dbg !11319
  %rt_rtx289 = bitcast %union.rtunion_def* %arrayidx288 to %struct.rtx_def**, !dbg !11319
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx289, align 8, !dbg !11319
  %190 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11320
  %call290 = call %struct.rtx_def* @simplify_gen_relational(i32 %185, i32 %186, i32 %187, %struct.rtx_def* %189, %struct.rtx_def* %190), !dbg !11321
  store %struct.rtx_def* %call290, %struct.rtx_def** %retval, align 8, !dbg !11322
  br label %return, !dbg !11322

if.end291:                                        ; preds = %land.lhs.true278, %land.lhs.true271, %land.lhs.true268, %lor.lhs.false265
  %191 = load i32, i32* %code.addr, align 4, !dbg !11323
  %cmp292 = icmp eq i32 %191, 81, !dbg !11325
  br i1 %cmp292, label %land.lhs.true297, label %lor.lhs.false294, !dbg !11326

lor.lhs.false294:                                 ; preds = %if.end291
  %192 = load i32, i32* %code.addr, align 4, !dbg !11327
  %cmp295 = icmp eq i32 %192, 80, !dbg !11328
  br i1 %cmp295, label %land.lhs.true297, label %if.end320, !dbg !11329

land.lhs.true297:                                 ; preds = %lor.lhs.false294, %if.end291
  %193 = load i32, i32* %op0code, align 4, !dbg !11330
  %cmp298 = icmp eq i32 %193, 63, !dbg !11331
  br i1 %cmp298, label %land.lhs.true300, label %if.end320, !dbg !11332

land.lhs.true300:                                 ; preds = %land.lhs.true297
  %194 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11333
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %194, i32 0, i32 1, !dbg !11333
  %fld302 = bitcast %union.u* %u301 to [1 x %union.rtunion_def]*, !dbg !11333
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i64 0, i64 1, !dbg !11333
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !11333
  %195 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !11333
  %196 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11334
  %call305 = call i32 @rtx_equal_p(%struct.rtx_def* %195, %struct.rtx_def* %196), !dbg !11335
  %tobool306 = icmp ne i32 %call305, 0, !dbg !11335
  br i1 %tobool306, label %land.lhs.true307, label %if.end320, !dbg !11336

land.lhs.true307:                                 ; preds = %land.lhs.true300
  %197 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11337
  %u308 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %197, i32 0, i32 1, !dbg !11337
  %fld309 = bitcast %union.u* %u308 to [1 x %union.rtunion_def]*, !dbg !11337
  %arrayidx310 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld309, i64 0, i64 1, !dbg !11337
  %rt_rtx311 = bitcast %union.rtunion_def* %arrayidx310 to %struct.rtx_def**, !dbg !11337
  %198 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx311, align 8, !dbg !11337
  %call312 = call i32 @side_effects_p(%struct.rtx_def* %198), !dbg !11338
  %tobool313 = icmp ne i32 %call312, 0, !dbg !11338
  br i1 %tobool313, label %if.end320, label %if.then314, !dbg !11339

if.then314:                                       ; preds = %land.lhs.true307
  %199 = load i32, i32* %code.addr, align 4, !dbg !11340
  %200 = load i32, i32* %mode.addr, align 4, !dbg !11341
  %201 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11342
  %202 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11343
  %u315 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %202, i32 0, i32 1, !dbg !11343
  %fld316 = bitcast %union.u* %u315 to [1 x %union.rtunion_def]*, !dbg !11343
  %arrayidx317 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld316, i64 0, i64 0, !dbg !11343
  %rt_rtx318 = bitcast %union.rtunion_def* %arrayidx317 to %struct.rtx_def**, !dbg !11343
  %203 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx318, align 8, !dbg !11343
  %204 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11344
  %call319 = call %struct.rtx_def* @simplify_gen_relational(i32 %199, i32 %200, i32 %201, %struct.rtx_def* %203, %struct.rtx_def* %204), !dbg !11345
  store %struct.rtx_def* %call319, %struct.rtx_def** %retval, align 8, !dbg !11346
  br label %return, !dbg !11346

if.end320:                                        ; preds = %land.lhs.true307, %land.lhs.true300, %land.lhs.true297, %lor.lhs.false294
  %205 = load i32, i32* %code.addr, align 4, !dbg !11347
  %cmp321 = icmp eq i32 %205, 81, !dbg !11349
  br i1 %cmp321, label %land.lhs.true326, label %lor.lhs.false323, !dbg !11350

lor.lhs.false323:                                 ; preds = %if.end320
  %206 = load i32, i32* %code.addr, align 4, !dbg !11351
  %cmp324 = icmp eq i32 %206, 80, !dbg !11352
  br i1 %cmp324, label %land.lhs.true326, label %if.end368, !dbg !11353

land.lhs.true326:                                 ; preds = %lor.lhs.false323, %if.end320
  %207 = load i32, i32* %op0code, align 4, !dbg !11354
  %cmp327 = icmp eq i32 %207, 63, !dbg !11355
  br i1 %cmp327, label %land.lhs.true329, label %if.end368, !dbg !11356

land.lhs.true329:                                 ; preds = %land.lhs.true326
  %208 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11357
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !11357
  %bf.load330 = load i32, i32* %209, align 8, !dbg !11357
  %bf.clear331 = and i32 %bf.load330, 65535, !dbg !11357
  %cmp332 = icmp eq i32 %bf.clear331, 30, !dbg !11357
  br i1 %cmp332, label %land.lhs.true339, label %lor.lhs.false334, !dbg !11358

lor.lhs.false334:                                 ; preds = %land.lhs.true329
  %210 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11359
  %211 = bitcast %struct.rtx_def* %210 to i32*, !dbg !11359
  %bf.load335 = load i32, i32* %211, align 8, !dbg !11359
  %bf.clear336 = and i32 %bf.load335, 65535, !dbg !11359
  %cmp337 = icmp eq i32 %bf.clear336, 32, !dbg !11360
  br i1 %cmp337, label %land.lhs.true339, label %if.end368, !dbg !11361

land.lhs.true339:                                 ; preds = %lor.lhs.false334, %land.lhs.true329
  %212 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11362
  %u340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1, !dbg !11362
  %fld341 = bitcast %union.u* %u340 to [1 x %union.rtunion_def]*, !dbg !11362
  %arrayidx342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld341, i64 0, i64 1, !dbg !11362
  %rt_rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**, !dbg !11362
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx343, align 8, !dbg !11362
  %214 = bitcast %struct.rtx_def* %213 to i32*, !dbg !11362
  %bf.load344 = load i32, i32* %214, align 8, !dbg !11362
  %bf.clear345 = and i32 %bf.load344, 65535, !dbg !11362
  %cmp346 = icmp eq i32 %bf.clear345, 30, !dbg !11362
  br i1 %cmp346, label %if.then357, label %lor.lhs.false348, !dbg !11363

lor.lhs.false348:                                 ; preds = %land.lhs.true339
  %215 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11364
  %u349 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %215, i32 0, i32 1, !dbg !11364
  %fld350 = bitcast %union.u* %u349 to [1 x %union.rtunion_def]*, !dbg !11364
  %arrayidx351 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld350, i64 0, i64 1, !dbg !11364
  %rt_rtx352 = bitcast %union.rtunion_def* %arrayidx351 to %struct.rtx_def**, !dbg !11364
  %216 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx352, align 8, !dbg !11364
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !11364
  %bf.load353 = load i32, i32* %217, align 8, !dbg !11364
  %bf.clear354 = and i32 %bf.load353, 65535, !dbg !11364
  %cmp355 = icmp eq i32 %bf.clear354, 32, !dbg !11365
  br i1 %cmp355, label %if.then357, label %if.end368, !dbg !11366

if.then357:                                       ; preds = %lor.lhs.false348, %land.lhs.true339
  %218 = load i32, i32* %code.addr, align 4, !dbg !11367
  %219 = load i32, i32* %mode.addr, align 4, !dbg !11368
  %220 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11369
  %221 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11370
  %u358 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %221, i32 0, i32 1, !dbg !11370
  %fld359 = bitcast %union.u* %u358 to [1 x %union.rtunion_def]*, !dbg !11370
  %arrayidx360 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld359, i64 0, i64 0, !dbg !11370
  %rt_rtx361 = bitcast %union.rtunion_def* %arrayidx360 to %struct.rtx_def**, !dbg !11370
  %222 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx361, align 8, !dbg !11370
  %223 = load i32, i32* %cmp_mode.addr, align 4, !dbg !11371
  %224 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11372
  %u362 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %224, i32 0, i32 1, !dbg !11372
  %fld363 = bitcast %union.u* %u362 to [1 x %union.rtunion_def]*, !dbg !11372
  %arrayidx364 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld363, i64 0, i64 1, !dbg !11372
  %rt_rtx365 = bitcast %union.rtunion_def* %arrayidx364 to %struct.rtx_def**, !dbg !11372
  %225 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx365, align 8, !dbg !11372
  %226 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11373
  %call366 = call %struct.rtx_def* @simplify_gen_binary(i32 63, i32 %223, %struct.rtx_def* %225, %struct.rtx_def* %226), !dbg !11374
  %call367 = call %struct.rtx_def* @simplify_gen_relational(i32 %218, i32 %219, i32 %220, %struct.rtx_def* %222, %struct.rtx_def* %call366), !dbg !11375
  store %struct.rtx_def* %call367, %struct.rtx_def** %retval, align 8, !dbg !11376
  br label %return, !dbg !11376

if.end368:                                        ; preds = %lor.lhs.false348, %lor.lhs.false334, %land.lhs.true326, %lor.lhs.false323
  %227 = load i32, i32* %op0code, align 4, !dbg !11377
  %cmp369 = icmp eq i32 %227, 117, !dbg !11379
  br i1 %cmp369, label %land.lhs.true371, label %if.end403, !dbg !11380

land.lhs.true371:                                 ; preds = %if.end368
  %228 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !11381
  %229 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11382
  %cmp372 = icmp eq %struct.rtx_def* %228, %229, !dbg !11383
  br i1 %cmp372, label %if.then374, label %if.end403, !dbg !11384

if.then374:                                       ; preds = %land.lhs.true371
  %230 = load i32, i32* %code.addr, align 4, !dbg !11385
  switch i32 %230, label %sw.default401 [
    i32 81, label %sw.bb375
    i32 84, label %sw.bb375
    i32 88, label %sw.bb375
    i32 80, label %sw.bb388
    i32 83, label %sw.bb388
    i32 87, label %sw.bb388
  ], !dbg !11386

sw.bb375:                                         ; preds = %if.then374, %if.then374, %if.then374
  %231 = load i32, i32* %mode.addr, align 4, !dbg !11387
  %232 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11389
  %u376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !11389
  %fld377 = bitcast %union.u* %u376 to [1 x %union.rtunion_def]*, !dbg !11389
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i64 0, i64 0, !dbg !11389
  %rt_rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**, !dbg !11389
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx379, align 8, !dbg !11389
  %234 = bitcast %struct.rtx_def* %233 to i32*, !dbg !11389
  %bf.load380 = load i32, i32* %234, align 8, !dbg !11389
  %bf.lshr381 = lshr i32 %bf.load380, 16, !dbg !11389
  %bf.clear382 = and i32 %bf.lshr381, 255, !dbg !11389
  %235 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11390
  %u383 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %235, i32 0, i32 1, !dbg !11390
  %fld384 = bitcast %union.u* %u383 to [1 x %union.rtunion_def]*, !dbg !11390
  %arrayidx385 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld384, i64 0, i64 0, !dbg !11390
  %rt_rtx386 = bitcast %union.rtunion_def* %arrayidx385 to %struct.rtx_def**, !dbg !11390
  %236 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx386, align 8, !dbg !11390
  %237 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11391
  %call387 = call %struct.rtx_def* @simplify_gen_relational(i32 81, i32 %231, i32 %bf.clear382, %struct.rtx_def* %236, %struct.rtx_def* %237), !dbg !11392
  store %struct.rtx_def* %call387, %struct.rtx_def** %retval, align 8, !dbg !11393
  br label %return, !dbg !11393

sw.bb388:                                         ; preds = %if.then374, %if.then374, %if.then374
  %238 = load i32, i32* %mode.addr, align 4, !dbg !11394
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11395
  %u389 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %239, i32 0, i32 1, !dbg !11395
  %fld390 = bitcast %union.u* %u389 to [1 x %union.rtunion_def]*, !dbg !11395
  %arrayidx391 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld390, i64 0, i64 0, !dbg !11395
  %rt_rtx392 = bitcast %union.rtunion_def* %arrayidx391 to %struct.rtx_def**, !dbg !11395
  %240 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx392, align 8, !dbg !11395
  %241 = bitcast %struct.rtx_def* %240 to i32*, !dbg !11395
  %bf.load393 = load i32, i32* %241, align 8, !dbg !11395
  %bf.lshr394 = lshr i32 %bf.load393, 16, !dbg !11395
  %bf.clear395 = and i32 %bf.lshr394, 255, !dbg !11395
  %242 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !11396
  %u396 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %242, i32 0, i32 1, !dbg !11396
  %fld397 = bitcast %union.u* %u396 to [1 x %union.rtunion_def]*, !dbg !11396
  %arrayidx398 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld397, i64 0, i64 0, !dbg !11396
  %rt_rtx399 = bitcast %union.rtunion_def* %arrayidx398 to %struct.rtx_def**, !dbg !11396
  %243 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx399, align 8, !dbg !11396
  %244 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11397
  %call400 = call %struct.rtx_def* @simplify_gen_relational(i32 80, i32 %238, i32 %bf.clear395, %struct.rtx_def* %243, %struct.rtx_def* %244), !dbg !11398
  store %struct.rtx_def* %call400, %struct.rtx_def** %retval, align 8, !dbg !11399
  br label %return, !dbg !11399

sw.default401:                                    ; preds = %if.then374
  br label %sw.epilog402, !dbg !11400

sw.epilog402:                                     ; preds = %sw.default401
  br label %if.end403, !dbg !11401

if.end403:                                        ; preds = %sw.epilog402, %land.lhs.true371, %if.end368
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11402
  br label %return, !dbg !11402

return:                                           ; preds = %if.end403, %sw.bb388, %sw.bb375, %if.then357, %if.then314, %if.then285, %if.then252, %cond.end, %if.then187, %if.then133, %if.then129, %sw.bb123, %sw.bb121, %sw.bb119, %sw.bb, %if.then112, %if.then108, %if.then97, %if.then63, %if.then23, %if.else, %if.then9
  %245 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !11403
  ret %struct.rtx_def* %245, !dbg !11403
}

declare dso_local zeroext i8 @nonzero_address_p(%struct.rtx_def*) #2

declare dso_local i32 @signed_condition(i32) #2

declare dso_local i32 @side_effects_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @comparison_result(i32 %code, i32 %known_results) #0 !dbg !11404 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %known_results.addr = alloca i32, align 4
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !11407, metadata !DIExpression()), !dbg !11408
  store i32 %known_results, i32* %known_results.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %known_results.addr, metadata !11409, metadata !DIExpression()), !dbg !11410
  %0 = load i32, i32* %code.addr, align 4, !dbg !11411
  switch i32 %0, label %sw.default [
    i32 81, label %sw.bb
    i32 92, label %sw.bb
    i32 80, label %sw.bb1
    i32 97, label %sw.bb1
    i32 85, label %sw.bb8
    i32 96, label %sw.bb8
    i32 82, label %sw.bb15
    i32 93, label %sw.bb15
    i32 83, label %sw.bb22
    i32 94, label %sw.bb22
    i32 84, label %sw.bb29
    i32 95, label %sw.bb29
    i32 89, label %sw.bb36
    i32 86, label %sw.bb43
    i32 87, label %sw.bb50
    i32 88, label %sw.bb57
    i32 91, label %sw.bb64
    i32 90, label %sw.bb65
  ], !dbg !11412

sw.bb:                                            ; preds = %entry, %entry
  %1 = load i32, i32* %known_results.addr, align 4, !dbg !11413
  %and = and i32 %1, 1, !dbg !11415
  %tobool = icmp ne i32 %and, 0, !dbg !11415
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !11416

cond.true:                                        ; preds = %sw.bb
  %2 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11417
  br label %cond.end, !dbg !11416

cond.false:                                       ; preds = %sw.bb
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11418
  br label %cond.end, !dbg !11416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %2, %cond.true ], [ %3, %cond.false ], !dbg !11416
  store %struct.rtx_def* %cond, %struct.rtx_def** %retval, align 8, !dbg !11419
  br label %return, !dbg !11419

sw.bb1:                                           ; preds = %entry, %entry
  %4 = load i32, i32* %known_results.addr, align 4, !dbg !11420
  %and2 = and i32 %4, 1, !dbg !11421
  %tobool3 = icmp ne i32 %and2, 0, !dbg !11421
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !11422

cond.true4:                                       ; preds = %sw.bb1
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11423
  br label %cond.end6, !dbg !11422

cond.false5:                                      ; preds = %sw.bb1
  %6 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11424
  br label %cond.end6, !dbg !11422

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi %struct.rtx_def* [ %5, %cond.true4 ], [ %6, %cond.false5 ], !dbg !11422
  store %struct.rtx_def* %cond7, %struct.rtx_def** %retval, align 8, !dbg !11425
  br label %return, !dbg !11425

sw.bb8:                                           ; preds = %entry, %entry
  %7 = load i32, i32* %known_results.addr, align 4, !dbg !11426
  %and9 = and i32 %7, 2, !dbg !11427
  %tobool10 = icmp ne i32 %and9, 0, !dbg !11427
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !11428

cond.true11:                                      ; preds = %sw.bb8
  %8 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11429
  br label %cond.end13, !dbg !11428

cond.false12:                                     ; preds = %sw.bb8
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11430
  br label %cond.end13, !dbg !11428

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi %struct.rtx_def* [ %8, %cond.true11 ], [ %9, %cond.false12 ], !dbg !11428
  store %struct.rtx_def* %cond14, %struct.rtx_def** %retval, align 8, !dbg !11431
  br label %return, !dbg !11431

sw.bb15:                                          ; preds = %entry, %entry
  %10 = load i32, i32* %known_results.addr, align 4, !dbg !11432
  %and16 = and i32 %10, 2, !dbg !11433
  %tobool17 = icmp ne i32 %and16, 0, !dbg !11433
  br i1 %tobool17, label %cond.true18, label %cond.false19, !dbg !11434

cond.true18:                                      ; preds = %sw.bb15
  %11 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11435
  br label %cond.end20, !dbg !11434

cond.false19:                                     ; preds = %sw.bb15
  %12 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11436
  br label %cond.end20, !dbg !11434

cond.end20:                                       ; preds = %cond.false19, %cond.true18
  %cond21 = phi %struct.rtx_def* [ %11, %cond.true18 ], [ %12, %cond.false19 ], !dbg !11434
  store %struct.rtx_def* %cond21, %struct.rtx_def** %retval, align 8, !dbg !11437
  br label %return, !dbg !11437

sw.bb22:                                          ; preds = %entry, %entry
  %13 = load i32, i32* %known_results.addr, align 4, !dbg !11438
  %and23 = and i32 %13, 4, !dbg !11439
  %tobool24 = icmp ne i32 %and23, 0, !dbg !11439
  br i1 %tobool24, label %cond.true25, label %cond.false26, !dbg !11440

cond.true25:                                      ; preds = %sw.bb22
  %14 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11441
  br label %cond.end27, !dbg !11440

cond.false26:                                     ; preds = %sw.bb22
  %15 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11442
  br label %cond.end27, !dbg !11440

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi %struct.rtx_def* [ %14, %cond.true25 ], [ %15, %cond.false26 ], !dbg !11440
  store %struct.rtx_def* %cond28, %struct.rtx_def** %retval, align 8, !dbg !11443
  br label %return, !dbg !11443

sw.bb29:                                          ; preds = %entry, %entry
  %16 = load i32, i32* %known_results.addr, align 4, !dbg !11444
  %and30 = and i32 %16, 4, !dbg !11445
  %tobool31 = icmp ne i32 %and30, 0, !dbg !11445
  br i1 %tobool31, label %cond.true32, label %cond.false33, !dbg !11446

cond.true32:                                      ; preds = %sw.bb29
  %17 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11447
  br label %cond.end34, !dbg !11446

cond.false33:                                     ; preds = %sw.bb29
  %18 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11448
  br label %cond.end34, !dbg !11446

cond.end34:                                       ; preds = %cond.false33, %cond.true32
  %cond35 = phi %struct.rtx_def* [ %17, %cond.true32 ], [ %18, %cond.false33 ], !dbg !11446
  store %struct.rtx_def* %cond35, %struct.rtx_def** %retval, align 8, !dbg !11449
  br label %return, !dbg !11449

sw.bb36:                                          ; preds = %entry
  %19 = load i32, i32* %known_results.addr, align 4, !dbg !11450
  %and37 = and i32 %19, 8, !dbg !11451
  %tobool38 = icmp ne i32 %and37, 0, !dbg !11451
  br i1 %tobool38, label %cond.true39, label %cond.false40, !dbg !11452

cond.true39:                                      ; preds = %sw.bb36
  %20 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11453
  br label %cond.end41, !dbg !11452

cond.false40:                                     ; preds = %sw.bb36
  %21 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11454
  br label %cond.end41, !dbg !11452

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi %struct.rtx_def* [ %20, %cond.true39 ], [ %21, %cond.false40 ], !dbg !11452
  store %struct.rtx_def* %cond42, %struct.rtx_def** %retval, align 8, !dbg !11455
  br label %return, !dbg !11455

sw.bb43:                                          ; preds = %entry
  %22 = load i32, i32* %known_results.addr, align 4, !dbg !11456
  %and44 = and i32 %22, 8, !dbg !11457
  %tobool45 = icmp ne i32 %and44, 0, !dbg !11457
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !11458

cond.true46:                                      ; preds = %sw.bb43
  %23 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11459
  br label %cond.end48, !dbg !11458

cond.false47:                                     ; preds = %sw.bb43
  %24 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11460
  br label %cond.end48, !dbg !11458

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi %struct.rtx_def* [ %23, %cond.true46 ], [ %24, %cond.false47 ], !dbg !11458
  store %struct.rtx_def* %cond49, %struct.rtx_def** %retval, align 8, !dbg !11461
  br label %return, !dbg !11461

sw.bb50:                                          ; preds = %entry
  %25 = load i32, i32* %known_results.addr, align 4, !dbg !11462
  %and51 = and i32 %25, 16, !dbg !11463
  %tobool52 = icmp ne i32 %and51, 0, !dbg !11463
  br i1 %tobool52, label %cond.true53, label %cond.false54, !dbg !11464

cond.true53:                                      ; preds = %sw.bb50
  %26 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11465
  br label %cond.end55, !dbg !11464

cond.false54:                                     ; preds = %sw.bb50
  %27 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11466
  br label %cond.end55, !dbg !11464

cond.end55:                                       ; preds = %cond.false54, %cond.true53
  %cond56 = phi %struct.rtx_def* [ %26, %cond.true53 ], [ %27, %cond.false54 ], !dbg !11464
  store %struct.rtx_def* %cond56, %struct.rtx_def** %retval, align 8, !dbg !11467
  br label %return, !dbg !11467

sw.bb57:                                          ; preds = %entry
  %28 = load i32, i32* %known_results.addr, align 4, !dbg !11468
  %and58 = and i32 %28, 16, !dbg !11469
  %tobool59 = icmp ne i32 %and58, 0, !dbg !11469
  br i1 %tobool59, label %cond.true60, label %cond.false61, !dbg !11470

cond.true60:                                      ; preds = %sw.bb57
  %29 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11471
  br label %cond.end62, !dbg !11470

cond.false61:                                     ; preds = %sw.bb57
  %30 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11472
  br label %cond.end62, !dbg !11470

cond.end62:                                       ; preds = %cond.false61, %cond.true60
  %cond63 = phi %struct.rtx_def* [ %29, %cond.true60 ], [ %30, %cond.false61 ], !dbg !11470
  store %struct.rtx_def* %cond63, %struct.rtx_def** %retval, align 8, !dbg !11473
  br label %return, !dbg !11473

sw.bb64:                                          ; preds = %entry
  %31 = load %struct.rtx_def*, %struct.rtx_def** @const_true_rtx, align 8, !dbg !11474
  store %struct.rtx_def* %31, %struct.rtx_def** %retval, align 8, !dbg !11475
  br label %return, !dbg !11475

sw.bb65:                                          ; preds = %entry
  %32 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11476
  store %struct.rtx_def* %32, %struct.rtx_def** %retval, align 8, !dbg !11477
  br label %return, !dbg !11477

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4236, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11478
  br label %sw.epilog, !dbg !11479

sw.epilog:                                        ; preds = %sw.default
  %33 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !11480
  store %struct.rtx_def* %33, %struct.rtx_def** %retval, align 8, !dbg !11481
  br label %return, !dbg !11481

return:                                           ; preds = %sw.epilog, %sw.bb65, %sw.bb64, %cond.end62, %cond.end55, %cond.end48, %cond.end41, %cond.end34, %cond.end27, %cond.end20, %cond.end13, %cond.end6, %cond.end
  %34 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !11482
  ret %struct.rtx_def* %34, !dbg !11482
}

declare dso_local i64 @nonzero_bits(%struct.rtx_def*, i32) #2

declare dso_local void @get_mode_bounds(i32, i32, i32, %struct.rtx_def**, %struct.rtx_def**) #2

declare dso_local i32 @num_sign_bit_copies(%struct.rtx_def*, i32) #2

declare dso_local zeroext i8 @warning(i32, i8*, ...) #2

declare dso_local i32 @reversed_comparison_code(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_immed_subreg(i32 %outermode, %struct.rtx_def* %op, i32 %innermode, i32 %byte) #0 !dbg !1492 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %outermode.addr = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %innermode.addr = alloca i32, align 4
  %byte.addr = alloca i32, align 4
  %value = alloca [64 x i8], align 16
  %value_start = alloca i32, align 4
  %i = alloca i32, align 4
  %elem = alloca i32, align 4
  %num_elem = alloca i32, align 4
  %elems = alloca %struct.rtx_def**, align 8
  %elem_bitsize = alloca i32, align 4
  %result_s = alloca %struct.rtx_def*, align 8
  %result_v = alloca %struct.rtvec_def*, align 8
  %outer_class = alloca i32, align 4
  %outer_submode = alloca i32, align 4
  %vp = alloca i8*, align 8
  %el = alloca %struct.rtx_def*, align 8
  %byte45 = alloca i32, align 4
  %ibyte = alloca i32, align 4
  %word_byte = alloca i32, align 4
  %subword_byte = alloca i32, align 4
  %bytele = alloca i32, align 4
  %tmp = alloca [16 x i64], align 16
  %bitsize = alloca i32, align 4
  %ibase = alloca i32, align 4
  %ibyte278 = alloca i32, align 4
  %word_byte289 = alloca i32, align 4
  %subword_byte290 = alloca i32, align 4
  %vp383 = alloca i8*, align 8
  %byte384 = alloca i32, align 4
  %ibyte387 = alloca i32, align 4
  %word_byte392 = alloca i32, align 4
  %subword_byte393 = alloca i32, align 4
  %bytele394 = alloca i32, align 4
  %hi = alloca i64, align 8
  %lo = alloca i64, align 8
  %r = alloca %struct.real_value, align 8
  %tmp454 = alloca [16 x i64], align 16
  %ibase468 = alloca i32, align 4
  %f = alloca %struct.fixed_value, align 8
  store i32 %outermode, i32* %outermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outermode.addr, metadata !11483, metadata !DIExpression()), !dbg !11484
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !11485, metadata !DIExpression()), !dbg !11486
  store i32 %innermode, i32* %innermode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %innermode.addr, metadata !11487, metadata !DIExpression()), !dbg !11488
  store i32 %byte, i32* %byte.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %byte.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  call void @llvm.dbg.declare(metadata [64 x i8]* %value, metadata !11491, metadata !DIExpression()), !dbg !11495
  call void @llvm.dbg.declare(metadata i32* %value_start, metadata !11496, metadata !DIExpression()), !dbg !11497
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.declare(metadata i32* %elem, metadata !11500, metadata !DIExpression()), !dbg !11501
  call void @llvm.dbg.declare(metadata i32* %num_elem, metadata !11502, metadata !DIExpression()), !dbg !11503
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %elems, metadata !11504, metadata !DIExpression()), !dbg !11506
  call void @llvm.dbg.declare(metadata i32* %elem_bitsize, metadata !11507, metadata !DIExpression()), !dbg !11508
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %result_s, metadata !11509, metadata !DIExpression()), !dbg !11510
  call void @llvm.dbg.declare(metadata %struct.rtvec_def** %result_v, metadata !11511, metadata !DIExpression()), !dbg !11512
  store %struct.rtvec_def* null, %struct.rtvec_def** %result_v, align 8, !dbg !11512
  call void @llvm.dbg.declare(metadata i32* %outer_class, metadata !11513, metadata !DIExpression()), !dbg !11514
  call void @llvm.dbg.declare(metadata i32* %outer_submode, metadata !11515, metadata !DIExpression()), !dbg !11516
  %0 = load i32, i32* %outermode.addr, align 4, !dbg !11517
  %idxprom = zext i32 %0 to i64, !dbg !11517
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !11517
  %1 = load i8, i8* %arrayidx, align 1, !dbg !11517
  %conv = zext i8 %1 to i32, !dbg !11517
  %cmp = icmp eq i32 %conv, 1, !dbg !11519
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11520

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !11521
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !11521
  %bf.load = load i32, i32* %3, align 8, !dbg !11521
  %bf.clear = and i32 %bf.load, 65535, !dbg !11521
  %cmp2 = icmp eq i32 %bf.clear, 30, !dbg !11521
  br i1 %cmp2, label %if.then, label %if.end, !dbg !11522

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !11523
  store %struct.rtx_def* %4, %struct.rtx_def** %retval, align 8, !dbg !11524
  br label %return, !dbg !11524

if.end:                                           ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* %outermode.addr, align 4, !dbg !11525
  %idxprom4 = zext i32 %5 to i64, !dbg !11525
  %arrayidx5 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom4, !dbg !11525
  %6 = load i8, i8* %arrayidx5, align 1, !dbg !11525
  %conv6 = zext i8 %6 to i32, !dbg !11525
  %cmp7 = icmp eq i32 %conv6, 10, !dbg !11525
  br i1 %cmp7, label %if.then14, label %lor.lhs.false, !dbg !11525

lor.lhs.false:                                    ; preds = %if.end
  %7 = load i32, i32* %outermode.addr, align 4, !dbg !11525
  %idxprom9 = zext i32 %7 to i64, !dbg !11525
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom9, !dbg !11525
  %8 = load i8, i8* %arrayidx10, align 1, !dbg !11525
  %conv11 = zext i8 %8 to i32, !dbg !11525
  %cmp12 = icmp eq i32 %conv11, 11, !dbg !11525
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !11527

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !11528
  br label %return, !dbg !11528

if.end15:                                         ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !11529
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !11529
  %bf.load16 = load i32, i32* %10, align 8, !dbg !11529
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !11529
  %cmp18 = icmp eq i32 %bf.clear17, 33, !dbg !11531
  br i1 %cmp18, label %if.then20, label %if.else, !dbg !11532

if.then20:                                        ; preds = %if.end15
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !11533
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !11533
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !11533
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !11533
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtvec_def**, !dbg !11533
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !11533
  %num_elem22 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i32 0, i32 0, !dbg !11533
  %13 = load i32, i32* %num_elem22, align 8, !dbg !11533
  store i32 %13, i32* %num_elem, align 4, !dbg !11535
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !11536
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !11536
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !11536
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !11536
  %rt_rtvec26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtvec_def**, !dbg !11536
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec26, align 8, !dbg !11536
  %elem27 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !11536
  %arrayidx28 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem27, i64 0, i64 0, !dbg !11536
  store %struct.rtx_def** %arrayidx28, %struct.rtx_def*** %elems, align 8, !dbg !11537
  %16 = load i32, i32* %innermode.addr, align 4, !dbg !11538
  %idxprom29 = zext i32 %16 to i64, !dbg !11538
  %arrayidx30 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom29, !dbg !11538
  %17 = load i8, i8* %arrayidx30, align 1, !dbg !11538
  %conv31 = zext i8 %17 to i32, !dbg !11538
  %idxprom32 = zext i32 %conv31 to i64, !dbg !11538
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom32, !dbg !11538
  %18 = load i8, i8* %arrayidx33, align 1, !dbg !11538
  %conv34 = zext i8 %18 to i16, !dbg !11538
  %conv35 = zext i16 %conv34 to i32, !dbg !11538
  %mul = mul nsw i32 %conv35, 8, !dbg !11538
  %conv36 = trunc i32 %mul to i16, !dbg !11538
  %conv37 = zext i16 %conv36 to i32, !dbg !11538
  store i32 %conv37, i32* %elem_bitsize, align 4, !dbg !11539
  br label %if.end38, !dbg !11540

if.else:                                          ; preds = %if.end15
  store i32 1, i32* %num_elem, align 4, !dbg !11541
  store %struct.rtx_def** %op.addr, %struct.rtx_def*** %elems, align 8, !dbg !11543
  store i32 512, i32* %elem_bitsize, align 4, !dbg !11544
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then20
  %19 = load i32, i32* %elem_bitsize, align 4, !dbg !11545
  %rem = srem i32 %19, 8, !dbg !11545
  %cmp39 = icmp eq i32 %rem, 0, !dbg !11545
  br i1 %cmp39, label %cond.false, label %cond.true, !dbg !11545

cond.true:                                        ; preds = %if.end38
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4876, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11545
  br label %cond.end, !dbg !11545

cond.false:                                       ; preds = %if.end38
  br label %cond.end, !dbg !11545

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11545
  store i32 0, i32* %elem, align 4, !dbg !11546
  br label %for.cond, !dbg !11548

for.cond:                                         ; preds = %for.inc265, %cond.end
  %20 = load i32, i32* %elem, align 4, !dbg !11549
  %21 = load i32, i32* %num_elem, align 4, !dbg !11551
  %cmp41 = icmp slt i32 %20, %21, !dbg !11552
  br i1 %cmp41, label %for.body, label %for.end266, !dbg !11553

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %vp, metadata !11554, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %el, metadata !11558, metadata !DIExpression()), !dbg !11559
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %elems, align 8, !dbg !11560
  %23 = load i32, i32* %elem, align 4, !dbg !11561
  %idxprom43 = sext i32 %23 to i64, !dbg !11560
  %arrayidx44 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %22, i64 %idxprom43, !dbg !11560
  %24 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx44, align 8, !dbg !11560
  store %struct.rtx_def* %24, %struct.rtx_def** %el, align 8, !dbg !11559
  call void @llvm.dbg.declare(metadata i32* %byte45, metadata !11562, metadata !DIExpression()), !dbg !11564
  %25 = load i32, i32* %elem, align 4, !dbg !11565
  %26 = load i32, i32* %elem_bitsize, align 4, !dbg !11566
  %mul46 = mul nsw i32 %25, %26, !dbg !11567
  %div = sdiv i32 %mul46, 8, !dbg !11568
  store i32 %div, i32* %byte45, align 4, !dbg !11564
  call void @llvm.dbg.declare(metadata i32* %ibyte, metadata !11569, metadata !DIExpression()), !dbg !11570
  %27 = load i32, i32* %num_elem, align 4, !dbg !11571
  %sub = sub nsw i32 %27, 1, !dbg !11572
  %28 = load i32, i32* %elem, align 4, !dbg !11573
  %sub47 = sub nsw i32 %sub, %28, !dbg !11574
  %29 = load i32, i32* %elem_bitsize, align 4, !dbg !11575
  %mul48 = mul nsw i32 %sub47, %29, !dbg !11576
  %div49 = sdiv i32 %mul48, 8, !dbg !11577
  store i32 %div49, i32* %ibyte, align 4, !dbg !11570
  call void @llvm.dbg.declare(metadata i32* %word_byte, metadata !11578, metadata !DIExpression()), !dbg !11579
  %30 = load i32, i32* %byte45, align 4, !dbg !11580
  store i32 %30, i32* %word_byte, align 4, !dbg !11579
  call void @llvm.dbg.declare(metadata i32* %subword_byte, metadata !11581, metadata !DIExpression()), !dbg !11582
  %31 = load i32, i32* %byte45, align 4, !dbg !11583
  store i32 %31, i32* %subword_byte, align 4, !dbg !11582
  call void @llvm.dbg.declare(metadata i32* %bytele, metadata !11584, metadata !DIExpression()), !dbg !11585
  %32 = load i32, i32* %subword_byte, align 4, !dbg !11586
  %rem50 = urem i32 %32, 4, !dbg !11587
  %33 = load i32, i32* %word_byte, align 4, !dbg !11588
  %div51 = udiv i32 %33, 4, !dbg !11589
  %mul52 = mul i32 %div51, 4, !dbg !11590
  %add = add i32 %rem50, %mul52, !dbg !11591
  store i32 %add, i32* %bytele, align 4, !dbg !11585
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %value, i64 0, i64 0, !dbg !11592
  %34 = load i32, i32* %bytele, align 4, !dbg !11593
  %mul53 = mul i32 %34, 8, !dbg !11594
  %div54 = udiv i32 %mul53, 8, !dbg !11595
  %idx.ext = zext i32 %div54 to i64, !dbg !11596
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 %idx.ext, !dbg !11596
  store i8* %add.ptr, i8** %vp, align 8, !dbg !11597
  %35 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11598
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !11598
  %bf.load55 = load i32, i32* %36, align 8, !dbg !11598
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !11598
  switch i32 %bf.clear56, label %sw.default [
    i32 30, label %sw.bb
    i32 32, label %sw.bb82
    i32 31, label %sw.bb205
  ], !dbg !11599

sw.bb:                                            ; preds = %for.body
  store i32 0, i32* %i, align 4, !dbg !11600
  br label %for.cond57, !dbg !11603

for.cond57:                                       ; preds = %for.inc, %sw.bb
  %37 = load i32, i32* %i, align 4, !dbg !11604
  %cmp58 = icmp slt i32 %37, 64, !dbg !11606
  br i1 %cmp58, label %land.rhs, label %land.end, !dbg !11607

land.rhs:                                         ; preds = %for.cond57
  %38 = load i32, i32* %i, align 4, !dbg !11608
  %39 = load i32, i32* %elem_bitsize, align 4, !dbg !11609
  %cmp60 = icmp slt i32 %38, %39, !dbg !11610
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond57
  %40 = phi i1 [ false, %for.cond57 ], [ %cmp60, %land.rhs ], !dbg !11611
  br i1 %40, label %for.body62, label %for.end, !dbg !11612

for.body62:                                       ; preds = %land.end
  %41 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11613
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !11613
  %hwint = bitcast %union.u* %u63 to [1 x i64]*, !dbg !11613
  %arrayidx64 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !11613
  %42 = load i64, i64* %arrayidx64, align 8, !dbg !11613
  %43 = load i32, i32* %i, align 4, !dbg !11614
  %sh_prom = zext i32 %43 to i64, !dbg !11615
  %shr = ashr i64 %42, %sh_prom, !dbg !11615
  %conv65 = trunc i64 %shr to i8, !dbg !11613
  %44 = load i8*, i8** %vp, align 8, !dbg !11616
  %incdec.ptr = getelementptr inbounds i8, i8* %44, i32 1, !dbg !11616
  store i8* %incdec.ptr, i8** %vp, align 8, !dbg !11616
  store i8 %conv65, i8* %44, align 1, !dbg !11617
  br label %for.inc, !dbg !11618

for.inc:                                          ; preds = %for.body62
  %45 = load i32, i32* %i, align 4, !dbg !11619
  %add66 = add nsw i32 %45, 8, !dbg !11619
  store i32 %add66, i32* %i, align 4, !dbg !11619
  br label %for.cond57, !dbg !11620, !llvm.loop !11621

for.end:                                          ; preds = %land.end
  br label %for.cond67, !dbg !11623

for.cond67:                                       ; preds = %for.inc79, %for.end
  %46 = load i32, i32* %i, align 4, !dbg !11624
  %47 = load i32, i32* %elem_bitsize, align 4, !dbg !11627
  %cmp68 = icmp slt i32 %46, %47, !dbg !11628
  br i1 %cmp68, label %for.body70, label %for.end81, !dbg !11629

for.body70:                                       ; preds = %for.cond67
  %48 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11630
  %u71 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !11630
  %hwint72 = bitcast %union.u* %u71 to [1 x i64]*, !dbg !11630
  %arrayidx73 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint72, i64 0, i64 0, !dbg !11630
  %49 = load i64, i64* %arrayidx73, align 8, !dbg !11630
  %cmp74 = icmp slt i64 %49, 0, !dbg !11631
  %50 = zext i1 %cmp74 to i64, !dbg !11630
  %cond76 = select i1 %cmp74, i32 -1, i32 0, !dbg !11630
  %conv77 = trunc i32 %cond76 to i8, !dbg !11630
  %51 = load i8*, i8** %vp, align 8, !dbg !11632
  %incdec.ptr78 = getelementptr inbounds i8, i8* %51, i32 1, !dbg !11632
  store i8* %incdec.ptr78, i8** %vp, align 8, !dbg !11632
  store i8 %conv77, i8* %51, align 1, !dbg !11633
  br label %for.inc79, !dbg !11634

for.inc79:                                        ; preds = %for.body70
  %52 = load i32, i32* %i, align 4, !dbg !11635
  %add80 = add nsw i32 %52, 8, !dbg !11635
  store i32 %add80, i32* %i, align 4, !dbg !11635
  br label %for.cond67, !dbg !11636, !llvm.loop !11637

for.end81:                                        ; preds = %for.cond67
  br label %sw.epilog, !dbg !11639

sw.bb82:                                          ; preds = %for.body
  %53 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11640
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !11640
  %bf.load83 = load i32, i32* %54, align 8, !dbg !11640
  %bf.lshr = lshr i32 %bf.load83, 16, !dbg !11640
  %bf.clear84 = and i32 %bf.lshr, 255, !dbg !11640
  %cmp85 = icmp eq i32 %bf.clear84, 0, !dbg !11642
  br i1 %cmp85, label %if.then87, label %if.else131, !dbg !11643

if.then87:                                        ; preds = %sw.bb82
  %55 = load i32, i32* %elem_bitsize, align 4, !dbg !11644
  %cmp88 = icmp sgt i32 %55, 64, !dbg !11644
  br i1 %cmp88, label %cond.false91, label %cond.true90, !dbg !11644

cond.true90:                                      ; preds = %if.then87
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4913, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11644
  br label %cond.end92, !dbg !11644

cond.false91:                                     ; preds = %if.then87
  br label %cond.end92, !dbg !11644

cond.end92:                                       ; preds = %cond.false91, %cond.true90
  %cond93 = phi i32 [ 0, %cond.true90 ], [ 0, %cond.false91 ], !dbg !11644
  store i32 0, i32* %i, align 4, !dbg !11646
  br label %for.cond94, !dbg !11648

for.cond94:                                       ; preds = %for.inc105, %cond.end92
  %56 = load i32, i32* %i, align 4, !dbg !11649
  %cmp95 = icmp slt i32 %56, 64, !dbg !11651
  br i1 %cmp95, label %for.body97, label %for.end107, !dbg !11652

for.body97:                                       ; preds = %for.cond94
  %57 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11653
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !11653
  %hwint99 = bitcast %union.u* %u98 to [1 x i64]*, !dbg !11653
  %arrayidx100 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint99, i64 0, i64 0, !dbg !11653
  %58 = load i64, i64* %arrayidx100, align 8, !dbg !11653
  %59 = load i32, i32* %i, align 4, !dbg !11654
  %sh_prom101 = zext i32 %59 to i64, !dbg !11655
  %shr102 = ashr i64 %58, %sh_prom101, !dbg !11655
  %conv103 = trunc i64 %shr102 to i8, !dbg !11653
  %60 = load i8*, i8** %vp, align 8, !dbg !11656
  %incdec.ptr104 = getelementptr inbounds i8, i8* %60, i32 1, !dbg !11656
  store i8* %incdec.ptr104, i8** %vp, align 8, !dbg !11656
  store i8 %conv103, i8* %60, align 1, !dbg !11657
  br label %for.inc105, !dbg !11658

for.inc105:                                       ; preds = %for.body97
  %61 = load i32, i32* %i, align 4, !dbg !11659
  %add106 = add nsw i32 %61, 8, !dbg !11659
  store i32 %add106, i32* %i, align 4, !dbg !11659
  br label %for.cond94, !dbg !11660, !llvm.loop !11661

for.end107:                                       ; preds = %for.cond94
  br label %while.cond, !dbg !11663

while.cond:                                       ; preds = %while.body, %for.end107
  %62 = load i32, i32* %i, align 4, !dbg !11664
  %cmp108 = icmp slt i32 %62, 128, !dbg !11665
  br i1 %cmp108, label %land.rhs110, label %land.end113, !dbg !11666

land.rhs110:                                      ; preds = %while.cond
  %63 = load i32, i32* %i, align 4, !dbg !11667
  %64 = load i32, i32* %elem_bitsize, align 4, !dbg !11668
  %cmp111 = icmp slt i32 %63, %64, !dbg !11669
  br label %land.end113

land.end113:                                      ; preds = %land.rhs110, %while.cond
  %65 = phi i1 [ false, %while.cond ], [ %cmp111, %land.rhs110 ], !dbg !11670
  br i1 %65, label %while.body, label %while.end, !dbg !11663

while.body:                                       ; preds = %land.end113
  %66 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11671
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !11671
  %hwint115 = bitcast %union.u* %u114 to [1 x i64]*, !dbg !11671
  %arrayidx116 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint115, i64 0, i64 1, !dbg !11671
  %67 = load i64, i64* %arrayidx116, align 8, !dbg !11671
  %68 = load i32, i32* %i, align 4, !dbg !11673
  %sub117 = sub nsw i32 %68, 64, !dbg !11674
  %sh_prom118 = zext i32 %sub117 to i64, !dbg !11675
  %shr119 = ashr i64 %67, %sh_prom118, !dbg !11675
  %conv120 = trunc i64 %shr119 to i8, !dbg !11671
  %69 = load i8*, i8** %vp, align 8, !dbg !11676
  %incdec.ptr121 = getelementptr inbounds i8, i8* %69, i32 1, !dbg !11676
  store i8* %incdec.ptr121, i8** %vp, align 8, !dbg !11676
  store i8 %conv120, i8* %69, align 1, !dbg !11677
  %70 = load i32, i32* %i, align 4, !dbg !11678
  %add122 = add nsw i32 %70, 8, !dbg !11678
  store i32 %add122, i32* %i, align 4, !dbg !11678
  br label %while.cond, !dbg !11663, !llvm.loop !11679

while.end:                                        ; preds = %land.end113
  br label %for.cond123, !dbg !11681

for.cond123:                                      ; preds = %for.inc128, %while.end
  %71 = load i32, i32* %i, align 4, !dbg !11682
  %72 = load i32, i32* %elem_bitsize, align 4, !dbg !11685
  %cmp124 = icmp slt i32 %71, %72, !dbg !11686
  br i1 %cmp124, label %for.body126, label %for.end130, !dbg !11687

for.body126:                                      ; preds = %for.cond123
  %73 = load i8*, i8** %vp, align 8, !dbg !11688
  %incdec.ptr127 = getelementptr inbounds i8, i8* %73, i32 1, !dbg !11688
  store i8* %incdec.ptr127, i8** %vp, align 8, !dbg !11688
  store i8 0, i8* %73, align 1, !dbg !11689
  br label %for.inc128, !dbg !11690

for.inc128:                                       ; preds = %for.body126
  %74 = load i32, i32* %i, align 4, !dbg !11691
  %add129 = add nsw i32 %74, 8, !dbg !11691
  store i32 %add129, i32* %i, align 4, !dbg !11691
  br label %for.cond123, !dbg !11692, !llvm.loop !11693

for.end130:                                       ; preds = %for.cond123
  br label %if.end204, !dbg !11695

if.else131:                                       ; preds = %sw.bb82
  call void @llvm.dbg.declare(metadata [16 x i64]* %tmp, metadata !11696, metadata !DIExpression()), !dbg !11701
  call void @llvm.dbg.declare(metadata i32* %bitsize, metadata !11702, metadata !DIExpression()), !dbg !11703
  %75 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11704
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !11704
  %bf.load132 = load i32, i32* %76, align 8, !dbg !11704
  %bf.lshr133 = lshr i32 %bf.load132, 16, !dbg !11704
  %bf.clear134 = and i32 %bf.lshr133, 255, !dbg !11704
  %idxprom135 = zext i32 %bf.clear134 to i64, !dbg !11704
  %arrayidx136 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom135, !dbg !11704
  %77 = load i8, i8* %arrayidx136, align 1, !dbg !11704
  %conv137 = zext i8 %77 to i16, !dbg !11704
  %conv138 = zext i16 %conv137 to i32, !dbg !11704
  %mul139 = mul nsw i32 %conv138, 8, !dbg !11704
  %conv140 = trunc i32 %mul139 to i16, !dbg !11704
  %conv141 = zext i16 %conv140 to i32, !dbg !11704
  store i32 %conv141, i32* %bitsize, align 4, !dbg !11703
  %78 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11705
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !11705
  %bf.load142 = load i32, i32* %79, align 8, !dbg !11705
  %bf.lshr143 = lshr i32 %bf.load142, 16, !dbg !11705
  %bf.clear144 = and i32 %bf.lshr143, 255, !dbg !11705
  %idxprom145 = zext i32 %bf.clear144 to i64, !dbg !11705
  %arrayidx146 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom145, !dbg !11705
  %80 = load i8, i8* %arrayidx146, align 1, !dbg !11705
  %conv147 = zext i8 %80 to i32, !dbg !11705
  %cmp148 = icmp eq i32 %conv147, 8, !dbg !11705
  br i1 %cmp148, label %cond.false160, label %lor.lhs.false150, !dbg !11705

lor.lhs.false150:                                 ; preds = %if.else131
  %81 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11705
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !11705
  %bf.load151 = load i32, i32* %82, align 8, !dbg !11705
  %bf.lshr152 = lshr i32 %bf.load151, 16, !dbg !11705
  %bf.clear153 = and i32 %bf.lshr152, 255, !dbg !11705
  %idxprom154 = zext i32 %bf.clear153 to i64, !dbg !11705
  %arrayidx155 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom154, !dbg !11705
  %83 = load i8, i8* %arrayidx155, align 1, !dbg !11705
  %conv156 = zext i8 %83 to i32, !dbg !11705
  %cmp157 = icmp eq i32 %conv156, 9, !dbg !11705
  br i1 %cmp157, label %cond.false160, label %cond.true159, !dbg !11705

cond.true159:                                     ; preds = %lor.lhs.false150
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4933, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11705
  br label %cond.end161, !dbg !11705

cond.false160:                                    ; preds = %lor.lhs.false150, %if.else131
  br label %cond.end161, !dbg !11705

cond.end161:                                      ; preds = %cond.false160, %cond.true159
  %cond162 = phi i32 [ 0, %cond.true159 ], [ 0, %cond.false160 ], !dbg !11705
  %84 = load i32, i32* %bitsize, align 4, !dbg !11706
  %85 = load i32, i32* %elem_bitsize, align 4, !dbg !11706
  %cmp163 = icmp sle i32 %84, %85, !dbg !11706
  br i1 %cmp163, label %cond.false166, label %cond.true165, !dbg !11706

cond.true165:                                     ; preds = %cond.end161
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4934, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11706
  br label %cond.end167, !dbg !11706

cond.false166:                                    ; preds = %cond.end161
  br label %cond.end167, !dbg !11706

cond.end167:                                      ; preds = %cond.false166, %cond.true165
  %cond168 = phi i32 [ 0, %cond.true165 ], [ 0, %cond.false166 ], !dbg !11706
  %86 = load i32, i32* %bitsize, align 4, !dbg !11707
  %rem169 = srem i32 %86, 8, !dbg !11707
  %cmp170 = icmp eq i32 %rem169, 0, !dbg !11707
  br i1 %cmp170, label %cond.false173, label %cond.true172, !dbg !11707

cond.true172:                                     ; preds = %cond.end167
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4935, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11707
  br label %cond.end174, !dbg !11707

cond.false173:                                    ; preds = %cond.end167
  br label %cond.end174, !dbg !11707

cond.end174:                                      ; preds = %cond.false173, %cond.true172
  %cond175 = phi i32 [ 0, %cond.true172 ], [ 0, %cond.false173 ], !dbg !11707
  %arraydecay176 = getelementptr inbounds [16 x i64], [16 x i64]* %tmp, i64 0, i64 0, !dbg !11708
  %87 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11709
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !11709
  %rv = bitcast %union.u* %u177 to %struct.real_value*, !dbg !11709
  %88 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11710
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !11710
  %bf.load178 = load i32, i32* %89, align 8, !dbg !11710
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !11710
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !11710
  %call = call i64 @real_to_target(i64* %arraydecay176, %struct.real_value* %rv, i32 %bf.clear180), !dbg !11711
  store i32 0, i32* %i, align 4, !dbg !11712
  br label %for.cond181, !dbg !11714

for.cond181:                                      ; preds = %for.inc193, %cond.end174
  %90 = load i32, i32* %i, align 4, !dbg !11715
  %91 = load i32, i32* %bitsize, align 4, !dbg !11717
  %cmp182 = icmp slt i32 %90, %91, !dbg !11718
  br i1 %cmp182, label %for.body184, label %for.end195, !dbg !11719

for.body184:                                      ; preds = %for.cond181
  call void @llvm.dbg.declare(metadata i32* %ibase, metadata !11720, metadata !DIExpression()), !dbg !11722
  %92 = load i32, i32* %i, align 4, !dbg !11723
  store i32 %92, i32* %ibase, align 4, !dbg !11725
  %93 = load i32, i32* %ibase, align 4, !dbg !11726
  %div185 = sdiv i32 %93, 32, !dbg !11727
  %idxprom186 = sext i32 %div185 to i64, !dbg !11728
  %arrayidx187 = getelementptr inbounds [16 x i64], [16 x i64]* %tmp, i64 0, i64 %idxprom186, !dbg !11728
  %94 = load i64, i64* %arrayidx187, align 8, !dbg !11728
  %95 = load i32, i32* %i, align 4, !dbg !11729
  %rem188 = srem i32 %95, 32, !dbg !11730
  %sh_prom189 = zext i32 %rem188 to i64, !dbg !11731
  %shr190 = ashr i64 %94, %sh_prom189, !dbg !11731
  %conv191 = trunc i64 %shr190 to i8, !dbg !11728
  %96 = load i8*, i8** %vp, align 8, !dbg !11732
  %incdec.ptr192 = getelementptr inbounds i8, i8* %96, i32 1, !dbg !11732
  store i8* %incdec.ptr192, i8** %vp, align 8, !dbg !11732
  store i8 %conv191, i8* %96, align 1, !dbg !11733
  br label %for.inc193, !dbg !11734

for.inc193:                                       ; preds = %for.body184
  %97 = load i32, i32* %i, align 4, !dbg !11735
  %add194 = add nsw i32 %97, 8, !dbg !11735
  store i32 %add194, i32* %i, align 4, !dbg !11735
  br label %for.cond181, !dbg !11736, !llvm.loop !11737

for.end195:                                       ; preds = %for.cond181
  br label %for.cond196, !dbg !11739

for.cond196:                                      ; preds = %for.inc201, %for.end195
  %98 = load i32, i32* %i, align 4, !dbg !11740
  %99 = load i32, i32* %elem_bitsize, align 4, !dbg !11743
  %cmp197 = icmp slt i32 %98, %99, !dbg !11744
  br i1 %cmp197, label %for.body199, label %for.end203, !dbg !11745

for.body199:                                      ; preds = %for.cond196
  %100 = load i8*, i8** %vp, align 8, !dbg !11746
  %incdec.ptr200 = getelementptr inbounds i8, i8* %100, i32 1, !dbg !11746
  store i8* %incdec.ptr200, i8** %vp, align 8, !dbg !11746
  store i8 0, i8* %100, align 1, !dbg !11747
  br label %for.inc201, !dbg !11748

for.inc201:                                       ; preds = %for.body199
  %101 = load i32, i32* %i, align 4, !dbg !11749
  %add202 = add nsw i32 %101, 8, !dbg !11749
  store i32 %add202, i32* %i, align 4, !dbg !11749
  br label %for.cond196, !dbg !11750, !llvm.loop !11751

for.end203:                                       ; preds = %for.cond196
  br label %if.end204

if.end204:                                        ; preds = %for.end203, %for.end130
  br label %sw.epilog, !dbg !11753

sw.bb205:                                         ; preds = %for.body
  %102 = load i32, i32* %elem_bitsize, align 4, !dbg !11754
  %cmp206 = icmp sle i32 %102, 64, !dbg !11756
  br i1 %cmp206, label %if.then208, label %if.else221, !dbg !11757

if.then208:                                       ; preds = %sw.bb205
  store i32 0, i32* %i, align 4, !dbg !11758
  br label %for.cond209, !dbg !11761

for.cond209:                                      ; preds = %for.inc218, %if.then208
  %103 = load i32, i32* %i, align 4, !dbg !11762
  %104 = load i32, i32* %elem_bitsize, align 4, !dbg !11764
  %cmp210 = icmp slt i32 %103, %104, !dbg !11765
  br i1 %cmp210, label %for.body212, label %for.end220, !dbg !11766

for.body212:                                      ; preds = %for.cond209
  %105 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11767
  %u213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !11767
  %fv = bitcast %union.u* %u213 to %struct.fixed_value*, !dbg !11767
  %data = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv, i32 0, i32 0, !dbg !11767
  %low = getelementptr inbounds %struct.double_int, %struct.double_int* %data, i32 0, i32 0, !dbg !11767
  %106 = load i64, i64* %low, align 8, !dbg !11767
  %107 = load i32, i32* %i, align 4, !dbg !11768
  %sh_prom214 = zext i32 %107 to i64, !dbg !11769
  %shr215 = ashr i64 %106, %sh_prom214, !dbg !11769
  %conv216 = trunc i64 %shr215 to i8, !dbg !11767
  %108 = load i8*, i8** %vp, align 8, !dbg !11770
  %incdec.ptr217 = getelementptr inbounds i8, i8* %108, i32 1, !dbg !11770
  store i8* %incdec.ptr217, i8** %vp, align 8, !dbg !11770
  store i8 %conv216, i8* %108, align 1, !dbg !11771
  br label %for.inc218, !dbg !11772

for.inc218:                                       ; preds = %for.body212
  %109 = load i32, i32* %i, align 4, !dbg !11773
  %add219 = add nsw i32 %109, 8, !dbg !11773
  store i32 %add219, i32* %i, align 4, !dbg !11773
  br label %for.cond209, !dbg !11774, !llvm.loop !11775

for.end220:                                       ; preds = %for.cond209
  br label %if.end264, !dbg !11777

if.else221:                                       ; preds = %sw.bb205
  store i32 0, i32* %i, align 4, !dbg !11778
  br label %for.cond222, !dbg !11781

for.cond222:                                      ; preds = %for.inc234, %if.else221
  %110 = load i32, i32* %i, align 4, !dbg !11782
  %cmp223 = icmp slt i32 %110, 64, !dbg !11784
  br i1 %cmp223, label %for.body225, label %for.end236, !dbg !11785

for.body225:                                      ; preds = %for.cond222
  %111 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11786
  %u226 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1, !dbg !11786
  %fv227 = bitcast %union.u* %u226 to %struct.fixed_value*, !dbg !11786
  %data228 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv227, i32 0, i32 0, !dbg !11786
  %low229 = getelementptr inbounds %struct.double_int, %struct.double_int* %data228, i32 0, i32 0, !dbg !11786
  %112 = load i64, i64* %low229, align 8, !dbg !11786
  %113 = load i32, i32* %i, align 4, !dbg !11787
  %sh_prom230 = zext i32 %113 to i64, !dbg !11788
  %shr231 = ashr i64 %112, %sh_prom230, !dbg !11788
  %conv232 = trunc i64 %shr231 to i8, !dbg !11786
  %114 = load i8*, i8** %vp, align 8, !dbg !11789
  %incdec.ptr233 = getelementptr inbounds i8, i8* %114, i32 1, !dbg !11789
  store i8* %incdec.ptr233, i8** %vp, align 8, !dbg !11789
  store i8 %conv232, i8* %114, align 1, !dbg !11790
  br label %for.inc234, !dbg !11791

for.inc234:                                       ; preds = %for.body225
  %115 = load i32, i32* %i, align 4, !dbg !11792
  %add235 = add nsw i32 %115, 8, !dbg !11792
  store i32 %add235, i32* %i, align 4, !dbg !11792
  br label %for.cond222, !dbg !11793, !llvm.loop !11794

for.end236:                                       ; preds = %for.cond222
  br label %for.cond237, !dbg !11796

for.cond237:                                      ; preds = %for.inc253, %for.end236
  %116 = load i32, i32* %i, align 4, !dbg !11797
  %cmp238 = icmp slt i32 %116, 128, !dbg !11800
  br i1 %cmp238, label %land.rhs240, label %land.end243, !dbg !11801

land.rhs240:                                      ; preds = %for.cond237
  %117 = load i32, i32* %i, align 4, !dbg !11802
  %118 = load i32, i32* %elem_bitsize, align 4, !dbg !11803
  %cmp241 = icmp slt i32 %117, %118, !dbg !11804
  br label %land.end243

land.end243:                                      ; preds = %land.rhs240, %for.cond237
  %119 = phi i1 [ false, %for.cond237 ], [ %cmp241, %land.rhs240 ], !dbg !11805
  br i1 %119, label %for.body244, label %for.end255, !dbg !11806

for.body244:                                      ; preds = %land.end243
  %120 = load %struct.rtx_def*, %struct.rtx_def** %el, align 8, !dbg !11807
  %u245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !11807
  %fv246 = bitcast %union.u* %u245 to %struct.fixed_value*, !dbg !11807
  %data247 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %fv246, i32 0, i32 0, !dbg !11807
  %high = getelementptr inbounds %struct.double_int, %struct.double_int* %data247, i32 0, i32 1, !dbg !11807
  %121 = load i64, i64* %high, align 8, !dbg !11807
  %122 = load i32, i32* %i, align 4, !dbg !11808
  %sub248 = sub nsw i32 %122, 64, !dbg !11809
  %sh_prom249 = zext i32 %sub248 to i64, !dbg !11810
  %shr250 = ashr i64 %121, %sh_prom249, !dbg !11810
  %conv251 = trunc i64 %shr250 to i8, !dbg !11807
  %123 = load i8*, i8** %vp, align 8, !dbg !11811
  %incdec.ptr252 = getelementptr inbounds i8, i8* %123, i32 1, !dbg !11811
  store i8* %incdec.ptr252, i8** %vp, align 8, !dbg !11811
  store i8 %conv251, i8* %123, align 1, !dbg !11812
  br label %for.inc253, !dbg !11813

for.inc253:                                       ; preds = %for.body244
  %124 = load i32, i32* %i, align 4, !dbg !11814
  %add254 = add nsw i32 %124, 8, !dbg !11814
  store i32 %add254, i32* %i, align 4, !dbg !11814
  br label %for.cond237, !dbg !11815, !llvm.loop !11816

for.end255:                                       ; preds = %land.end243
  br label %for.cond256, !dbg !11818

for.cond256:                                      ; preds = %for.inc261, %for.end255
  %125 = load i32, i32* %i, align 4, !dbg !11819
  %126 = load i32, i32* %elem_bitsize, align 4, !dbg !11822
  %cmp257 = icmp slt i32 %125, %126, !dbg !11823
  br i1 %cmp257, label %for.body259, label %for.end263, !dbg !11824

for.body259:                                      ; preds = %for.cond256
  %127 = load i8*, i8** %vp, align 8, !dbg !11825
  %incdec.ptr260 = getelementptr inbounds i8, i8* %127, i32 1, !dbg !11825
  store i8* %incdec.ptr260, i8** %vp, align 8, !dbg !11825
  store i8 0, i8* %127, align 1, !dbg !11826
  br label %for.inc261, !dbg !11827

for.inc261:                                       ; preds = %for.body259
  %128 = load i32, i32* %i, align 4, !dbg !11828
  %add262 = add nsw i32 %128, 8, !dbg !11828
  store i32 %add262, i32* %i, align 4, !dbg !11828
  br label %for.cond256, !dbg !11829, !llvm.loop !11830

for.end263:                                       ; preds = %for.cond256
  br label %if.end264

if.end264:                                        ; preds = %for.end263, %for.end220
  br label %sw.epilog, !dbg !11832

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 4981, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11833
  br label %sw.epilog, !dbg !11834

sw.epilog:                                        ; preds = %sw.default, %if.end264, %if.end204, %for.end81
  br label %for.inc265, !dbg !11835

for.inc265:                                       ; preds = %sw.epilog
  %129 = load i32, i32* %elem, align 4, !dbg !11836
  %inc = add nsw i32 %129, 1, !dbg !11836
  store i32 %inc, i32* %elem, align 4, !dbg !11836
  br label %for.cond, !dbg !11837, !llvm.loop !11838

for.end266:                                       ; preds = %for.cond
  %130 = load i32, i32* %innermode.addr, align 4, !dbg !11840
  %idxprom267 = zext i32 %130 to i64, !dbg !11840
  %arrayidx268 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom267, !dbg !11840
  %131 = load i8, i8* %arrayidx268, align 1, !dbg !11840
  %conv269 = zext i8 %131 to i16, !dbg !11840
  %conv270 = zext i16 %conv269 to i32, !dbg !11840
  %132 = load i32, i32* %outermode.addr, align 4, !dbg !11842
  %idxprom271 = zext i32 %132 to i64, !dbg !11842
  %arrayidx272 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom271, !dbg !11842
  %133 = load i8, i8* %arrayidx272, align 1, !dbg !11842
  %conv273 = zext i8 %133 to i16, !dbg !11842
  %conv274 = zext i16 %conv273 to i32, !dbg !11842
  %cmp275 = icmp sge i32 %conv270, %conv274, !dbg !11843
  br i1 %cmp275, label %if.then277, label %if.end295, !dbg !11844

if.then277:                                       ; preds = %for.end266
  call void @llvm.dbg.declare(metadata i32* %ibyte278, metadata !11845, metadata !DIExpression()), !dbg !11847
  %134 = load i32, i32* %innermode.addr, align 4, !dbg !11848
  %idxprom279 = zext i32 %134 to i64, !dbg !11848
  %arrayidx280 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom279, !dbg !11848
  %135 = load i8, i8* %arrayidx280, align 1, !dbg !11848
  %conv281 = zext i8 %135 to i16, !dbg !11848
  %conv282 = zext i16 %conv281 to i32, !dbg !11848
  %136 = load i32, i32* %outermode.addr, align 4, !dbg !11849
  %idxprom283 = zext i32 %136 to i64, !dbg !11849
  %arrayidx284 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom283, !dbg !11849
  %137 = load i8, i8* %arrayidx284, align 1, !dbg !11849
  %conv285 = zext i8 %137 to i16, !dbg !11849
  %conv286 = zext i16 %conv285 to i32, !dbg !11849
  %sub287 = sub nsw i32 %conv282, %conv286, !dbg !11850
  %138 = load i32, i32* %byte.addr, align 4, !dbg !11851
  %sub288 = sub i32 %sub287, %138, !dbg !11852
  store i32 %sub288, i32* %ibyte278, align 4, !dbg !11847
  call void @llvm.dbg.declare(metadata i32* %word_byte289, metadata !11853, metadata !DIExpression()), !dbg !11854
  %139 = load i32, i32* %byte.addr, align 4, !dbg !11855
  store i32 %139, i32* %word_byte289, align 4, !dbg !11854
  call void @llvm.dbg.declare(metadata i32* %subword_byte290, metadata !11856, metadata !DIExpression()), !dbg !11857
  %140 = load i32, i32* %byte.addr, align 4, !dbg !11858
  store i32 %140, i32* %subword_byte290, align 4, !dbg !11857
  %141 = load i32, i32* %subword_byte290, align 4, !dbg !11859
  %rem291 = urem i32 %141, 4, !dbg !11860
  %142 = load i32, i32* %word_byte289, align 4, !dbg !11861
  %div292 = udiv i32 %142, 4, !dbg !11862
  %mul293 = mul i32 %div292, 4, !dbg !11863
  %add294 = add i32 %rem291, %mul293, !dbg !11864
  store i32 %add294, i32* %byte.addr, align 4, !dbg !11865
  br label %if.end295, !dbg !11866

if.end295:                                        ; preds = %if.then277, %for.end266
  %143 = load i32, i32* %byte.addr, align 4, !dbg !11867
  %144 = load i32, i32* %innermode.addr, align 4, !dbg !11867
  %idxprom296 = zext i32 %144 to i64, !dbg !11867
  %arrayidx297 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom296, !dbg !11867
  %145 = load i8, i8* %arrayidx297, align 1, !dbg !11867
  %conv298 = zext i8 %145 to i16, !dbg !11867
  %conv299 = zext i16 %conv298 to i32, !dbg !11867
  %cmp300 = icmp ult i32 %143, %conv299, !dbg !11867
  br i1 %cmp300, label %cond.false303, label %cond.true302, !dbg !11867

cond.true302:                                     ; preds = %if.end295
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5001, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11867
  br label %cond.end304, !dbg !11867

cond.false303:                                    ; preds = %if.end295
  br label %cond.end304, !dbg !11867

cond.end304:                                      ; preds = %cond.false303, %cond.true302
  %cond305 = phi i32 [ 0, %cond.true302 ], [ 0, %cond.false303 ], !dbg !11867
  %146 = load i32, i32* %byte.addr, align 4, !dbg !11868
  %mul306 = mul i32 %146, 1, !dbg !11869
  store i32 %mul306, i32* %value_start, align 4, !dbg !11870
  %147 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom307 = zext i32 %147 to i64, !dbg !11871
  %arrayidx308 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom307, !dbg !11871
  %148 = load i8, i8* %arrayidx308, align 1, !dbg !11871
  %conv309 = zext i8 %148 to i32, !dbg !11871
  %cmp310 = icmp eq i32 %conv309, 12, !dbg !11871
  br i1 %cmp310, label %if.then342, label %lor.lhs.false312, !dbg !11871

lor.lhs.false312:                                 ; preds = %cond.end304
  %149 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom313 = zext i32 %149 to i64, !dbg !11871
  %arrayidx314 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom313, !dbg !11871
  %150 = load i8, i8* %arrayidx314, align 1, !dbg !11871
  %conv315 = zext i8 %150 to i32, !dbg !11871
  %cmp316 = icmp eq i32 %conv315, 17, !dbg !11871
  br i1 %cmp316, label %if.then342, label %lor.lhs.false318, !dbg !11871

lor.lhs.false318:                                 ; preds = %lor.lhs.false312
  %151 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom319 = zext i32 %151 to i64, !dbg !11871
  %arrayidx320 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom319, !dbg !11871
  %152 = load i8, i8* %arrayidx320, align 1, !dbg !11871
  %conv321 = zext i8 %152 to i32, !dbg !11871
  %cmp322 = icmp eq i32 %conv321, 13, !dbg !11871
  br i1 %cmp322, label %if.then342, label %lor.lhs.false324, !dbg !11871

lor.lhs.false324:                                 ; preds = %lor.lhs.false318
  %153 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom325 = zext i32 %153 to i64, !dbg !11871
  %arrayidx326 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom325, !dbg !11871
  %154 = load i8, i8* %arrayidx326, align 1, !dbg !11871
  %conv327 = zext i8 %154 to i32, !dbg !11871
  %cmp328 = icmp eq i32 %conv327, 14, !dbg !11871
  br i1 %cmp328, label %if.then342, label %lor.lhs.false330, !dbg !11871

lor.lhs.false330:                                 ; preds = %lor.lhs.false324
  %155 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom331 = zext i32 %155 to i64, !dbg !11871
  %arrayidx332 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom331, !dbg !11871
  %156 = load i8, i8* %arrayidx332, align 1, !dbg !11871
  %conv333 = zext i8 %156 to i32, !dbg !11871
  %cmp334 = icmp eq i32 %conv333, 15, !dbg !11871
  br i1 %cmp334, label %if.then342, label %lor.lhs.false336, !dbg !11871

lor.lhs.false336:                                 ; preds = %lor.lhs.false330
  %157 = load i32, i32* %outermode.addr, align 4, !dbg !11871
  %idxprom337 = zext i32 %157 to i64, !dbg !11871
  %arrayidx338 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom337, !dbg !11871
  %158 = load i8, i8* %arrayidx338, align 1, !dbg !11871
  %conv339 = zext i8 %158 to i32, !dbg !11871
  %cmp340 = icmp eq i32 %conv339, 16, !dbg !11871
  br i1 %cmp340, label %if.then342, label %if.else352, !dbg !11873

if.then342:                                       ; preds = %lor.lhs.false336, %lor.lhs.false330, %lor.lhs.false324, %lor.lhs.false318, %lor.lhs.false312, %cond.end304
  %159 = load i32, i32* %outermode.addr, align 4, !dbg !11874
  %idxprom343 = zext i32 %159 to i64, !dbg !11874
  %arrayidx344 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_nunits, i64 0, i64 %idxprom343, !dbg !11874
  %160 = load i8, i8* %arrayidx344, align 1, !dbg !11874
  %conv345 = zext i8 %160 to i32, !dbg !11874
  store i32 %conv345, i32* %num_elem, align 4, !dbg !11876
  %161 = load i32, i32* %num_elem, align 4, !dbg !11877
  %call346 = call %struct.rtvec_def* @rtvec_alloc(i32 %161), !dbg !11878
  store %struct.rtvec_def* %call346, %struct.rtvec_def** %result_v, align 8, !dbg !11879
  %162 = load %struct.rtvec_def*, %struct.rtvec_def** %result_v, align 8, !dbg !11880
  %elem347 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %162, i32 0, i32 1, !dbg !11880
  %arrayidx348 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem347, i64 0, i64 0, !dbg !11880
  store %struct.rtx_def** %arrayidx348, %struct.rtx_def*** %elems, align 8, !dbg !11881
  %163 = load i32, i32* %outermode.addr, align 4, !dbg !11882
  %idxprom349 = zext i32 %163 to i64, !dbg !11882
  %arrayidx350 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_inner, i64 0, i64 %idxprom349, !dbg !11882
  %164 = load i8, i8* %arrayidx350, align 1, !dbg !11882
  %conv351 = zext i8 %164 to i32, !dbg !11882
  store i32 %conv351, i32* %outer_submode, align 4, !dbg !11883
  br label %if.end353, !dbg !11884

if.else352:                                       ; preds = %lor.lhs.false336
  store i32 1, i32* %num_elem, align 4, !dbg !11885
  store %struct.rtx_def** %result_s, %struct.rtx_def*** %elems, align 8, !dbg !11887
  %165 = load i32, i32* %outermode.addr, align 4, !dbg !11888
  store i32 %165, i32* %outer_submode, align 4, !dbg !11889
  br label %if.end353

if.end353:                                        ; preds = %if.else352, %if.then342
  %166 = load i32, i32* %outer_submode, align 4, !dbg !11890
  %idxprom354 = zext i32 %166 to i64, !dbg !11890
  %arrayidx355 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom354, !dbg !11890
  %167 = load i8, i8* %arrayidx355, align 1, !dbg !11890
  %conv356 = zext i8 %167 to i32, !dbg !11890
  store i32 %conv356, i32* %outer_class, align 4, !dbg !11891
  %168 = load i32, i32* %outer_submode, align 4, !dbg !11892
  %idxprom357 = zext i32 %168 to i64, !dbg !11892
  %arrayidx358 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom357, !dbg !11892
  %169 = load i8, i8* %arrayidx358, align 1, !dbg !11892
  %conv359 = zext i8 %169 to i16, !dbg !11892
  %conv360 = zext i16 %conv359 to i32, !dbg !11892
  %mul361 = mul nsw i32 %conv360, 8, !dbg !11892
  %conv362 = trunc i32 %mul361 to i16, !dbg !11892
  %conv363 = zext i16 %conv362 to i32, !dbg !11892
  store i32 %conv363, i32* %elem_bitsize, align 4, !dbg !11893
  %170 = load i32, i32* %elem_bitsize, align 4, !dbg !11894
  %rem364 = srem i32 %170, 8, !dbg !11894
  %cmp365 = icmp eq i32 %rem364, 0, !dbg !11894
  br i1 %cmp365, label %cond.false368, label %cond.true367, !dbg !11894

cond.true367:                                     ; preds = %if.end353
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11894
  br label %cond.end369, !dbg !11894

cond.false368:                                    ; preds = %if.end353
  br label %cond.end369, !dbg !11894

cond.end369:                                      ; preds = %cond.false368, %cond.true367
  %cond370 = phi i32 [ 0, %cond.true367 ], [ 0, %cond.false368 ], !dbg !11894
  %171 = load i32, i32* %elem_bitsize, align 4, !dbg !11895
  %172 = load i32, i32* %value_start, align 4, !dbg !11895
  %mul371 = mul nsw i32 %172, 8, !dbg !11895
  %add372 = add nsw i32 %171, %mul371, !dbg !11895
  %cmp373 = icmp sle i32 %add372, 512, !dbg !11895
  br i1 %cmp373, label %cond.false376, label %cond.true375, !dbg !11895

cond.true375:                                     ; preds = %cond.end369
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5026, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !11895
  br label %cond.end377, !dbg !11895

cond.false376:                                    ; preds = %cond.end369
  br label %cond.end377, !dbg !11895

cond.end377:                                      ; preds = %cond.false376, %cond.true375
  %cond378 = phi i32 [ 0, %cond.true375 ], [ 0, %cond.false376 ], !dbg !11895
  store i32 0, i32* %elem, align 4, !dbg !11896
  br label %for.cond379, !dbg !11898

for.cond379:                                      ; preds = %for.inc533, %cond.end377
  %173 = load i32, i32* %elem, align 4, !dbg !11899
  %174 = load i32, i32* %num_elem, align 4, !dbg !11901
  %cmp380 = icmp slt i32 %173, %174, !dbg !11902
  br i1 %cmp380, label %for.body382, label %for.end535, !dbg !11903

for.body382:                                      ; preds = %for.cond379
  call void @llvm.dbg.declare(metadata i8** %vp383, metadata !11904, metadata !DIExpression()), !dbg !11906
  call void @llvm.dbg.declare(metadata i32* %byte384, metadata !11907, metadata !DIExpression()), !dbg !11909
  %175 = load i32, i32* %elem, align 4, !dbg !11910
  %176 = load i32, i32* %elem_bitsize, align 4, !dbg !11911
  %mul385 = mul nsw i32 %175, %176, !dbg !11912
  %div386 = sdiv i32 %mul385, 8, !dbg !11913
  store i32 %div386, i32* %byte384, align 4, !dbg !11909
  call void @llvm.dbg.declare(metadata i32* %ibyte387, metadata !11914, metadata !DIExpression()), !dbg !11915
  %177 = load i32, i32* %num_elem, align 4, !dbg !11916
  %sub388 = sub nsw i32 %177, 1, !dbg !11917
  %178 = load i32, i32* %elem, align 4, !dbg !11918
  %sub389 = sub nsw i32 %sub388, %178, !dbg !11919
  %179 = load i32, i32* %elem_bitsize, align 4, !dbg !11920
  %mul390 = mul nsw i32 %sub389, %179, !dbg !11921
  %div391 = sdiv i32 %mul390, 8, !dbg !11922
  store i32 %div391, i32* %ibyte387, align 4, !dbg !11915
  call void @llvm.dbg.declare(metadata i32* %word_byte392, metadata !11923, metadata !DIExpression()), !dbg !11924
  %180 = load i32, i32* %byte384, align 4, !dbg !11925
  store i32 %180, i32* %word_byte392, align 4, !dbg !11924
  call void @llvm.dbg.declare(metadata i32* %subword_byte393, metadata !11926, metadata !DIExpression()), !dbg !11927
  %181 = load i32, i32* %byte384, align 4, !dbg !11928
  store i32 %181, i32* %subword_byte393, align 4, !dbg !11927
  call void @llvm.dbg.declare(metadata i32* %bytele394, metadata !11929, metadata !DIExpression()), !dbg !11930
  %182 = load i32, i32* %subword_byte393, align 4, !dbg !11931
  %rem395 = urem i32 %182, 4, !dbg !11932
  %183 = load i32, i32* %word_byte392, align 4, !dbg !11933
  %div396 = udiv i32 %183, 4, !dbg !11934
  %mul397 = mul i32 %div396, 4, !dbg !11935
  %add398 = add i32 %rem395, %mul397, !dbg !11936
  store i32 %add398, i32* %bytele394, align 4, !dbg !11930
  %arraydecay399 = getelementptr inbounds [64 x i8], [64 x i8]* %value, i64 0, i64 0, !dbg !11937
  %184 = load i32, i32* %value_start, align 4, !dbg !11938
  %idx.ext400 = sext i32 %184 to i64, !dbg !11939
  %add.ptr401 = getelementptr inbounds i8, i8* %arraydecay399, i64 %idx.ext400, !dbg !11939
  %185 = load i32, i32* %bytele394, align 4, !dbg !11940
  %mul402 = mul i32 %185, 8, !dbg !11941
  %div403 = udiv i32 %mul402, 8, !dbg !11942
  %idx.ext404 = zext i32 %div403 to i64, !dbg !11943
  %add.ptr405 = getelementptr inbounds i8, i8* %add.ptr401, i64 %idx.ext404, !dbg !11943
  store i8* %add.ptr405, i8** %vp383, align 8, !dbg !11944
  %186 = load i32, i32* %outer_class, align 4, !dbg !11945
  switch i32 %186, label %sw.default531 [
    i32 2, label %sw.bb406
    i32 3, label %sw.bb406
    i32 8, label %sw.bb453
    i32 9, label %sw.bb453
    i32 4, label %sw.bb486
    i32 5, label %sw.bb486
    i32 6, label %sw.bb486
    i32 7, label %sw.bb486
  ], !dbg !11946

sw.bb406:                                         ; preds = %for.body382, %for.body382
  call void @llvm.dbg.declare(metadata i64* %hi, metadata !11947, metadata !DIExpression()), !dbg !11950
  store i64 0, i64* %hi, align 8, !dbg !11950
  call void @llvm.dbg.declare(metadata i64* %lo, metadata !11951, metadata !DIExpression()), !dbg !11952
  store i64 0, i64* %lo, align 8, !dbg !11952
  store i32 0, i32* %i, align 4, !dbg !11953
  br label %for.cond407, !dbg !11955

for.cond407:                                      ; preds = %for.inc419, %sw.bb406
  %187 = load i32, i32* %i, align 4, !dbg !11956
  %cmp408 = icmp slt i32 %187, 64, !dbg !11958
  br i1 %cmp408, label %land.rhs410, label %land.end413, !dbg !11959

land.rhs410:                                      ; preds = %for.cond407
  %188 = load i32, i32* %i, align 4, !dbg !11960
  %189 = load i32, i32* %elem_bitsize, align 4, !dbg !11961
  %cmp411 = icmp slt i32 %188, %189, !dbg !11962
  br label %land.end413

land.end413:                                      ; preds = %land.rhs410, %for.cond407
  %190 = phi i1 [ false, %for.cond407 ], [ %cmp411, %land.rhs410 ], !dbg !11963
  br i1 %190, label %for.body414, label %for.end421, !dbg !11964

for.body414:                                      ; preds = %land.end413
  %191 = load i8*, i8** %vp383, align 8, !dbg !11965
  %incdec.ptr415 = getelementptr inbounds i8, i8* %191, i32 1, !dbg !11965
  store i8* %incdec.ptr415, i8** %vp383, align 8, !dbg !11965
  %192 = load i8, i8* %191, align 1, !dbg !11966
  %conv416 = zext i8 %192 to i32, !dbg !11966
  %and = and i32 %conv416, 255, !dbg !11967
  %conv417 = sext i32 %and to i64, !dbg !11968
  %193 = load i32, i32* %i, align 4, !dbg !11969
  %sh_prom418 = zext i32 %193 to i64, !dbg !11970
  %shl = shl i64 %conv417, %sh_prom418, !dbg !11970
  %194 = load i64, i64* %lo, align 8, !dbg !11971
  %or = or i64 %194, %shl, !dbg !11971
  store i64 %or, i64* %lo, align 8, !dbg !11971
  br label %for.inc419, !dbg !11972

for.inc419:                                       ; preds = %for.body414
  %195 = load i32, i32* %i, align 4, !dbg !11973
  %add420 = add nsw i32 %195, 8, !dbg !11973
  store i32 %add420, i32* %i, align 4, !dbg !11973
  br label %for.cond407, !dbg !11974, !llvm.loop !11975

for.end421:                                       ; preds = %land.end413
  br label %for.cond422, !dbg !11977

for.cond422:                                      ; preds = %for.inc434, %for.end421
  %196 = load i32, i32* %i, align 4, !dbg !11978
  %197 = load i32, i32* %elem_bitsize, align 4, !dbg !11981
  %cmp423 = icmp slt i32 %196, %197, !dbg !11982
  br i1 %cmp423, label %for.body425, label %for.end436, !dbg !11983

for.body425:                                      ; preds = %for.cond422
  %198 = load i8*, i8** %vp383, align 8, !dbg !11984
  %incdec.ptr426 = getelementptr inbounds i8, i8* %198, i32 1, !dbg !11984
  store i8* %incdec.ptr426, i8** %vp383, align 8, !dbg !11984
  %199 = load i8, i8* %198, align 1, !dbg !11985
  %conv427 = zext i8 %199 to i32, !dbg !11985
  %and428 = and i32 %conv427, 255, !dbg !11986
  %conv429 = sext i32 %and428 to i64, !dbg !11987
  %200 = load i32, i32* %i, align 4, !dbg !11988
  %sub430 = sub nsw i32 %200, 64, !dbg !11989
  %sh_prom431 = zext i32 %sub430 to i64, !dbg !11990
  %shl432 = shl i64 %conv429, %sh_prom431, !dbg !11990
  %201 = load i64, i64* %hi, align 8, !dbg !11991
  %or433 = or i64 %201, %shl432, !dbg !11991
  store i64 %or433, i64* %hi, align 8, !dbg !11991
  br label %for.inc434, !dbg !11992

for.inc434:                                       ; preds = %for.body425
  %202 = load i32, i32* %i, align 4, !dbg !11993
  %add435 = add nsw i32 %202, 8, !dbg !11993
  store i32 %add435, i32* %i, align 4, !dbg !11993
  br label %for.cond422, !dbg !11994, !llvm.loop !11995

for.end436:                                       ; preds = %for.cond422
  %203 = load i32, i32* %elem_bitsize, align 4, !dbg !11997
  %cmp437 = icmp sle i32 %203, 64, !dbg !11999
  br i1 %cmp437, label %if.then439, label %if.else443, !dbg !12000

if.then439:                                       ; preds = %for.end436
  %204 = load i64, i64* %lo, align 8, !dbg !12001
  %205 = load i32, i32* %outer_submode, align 4, !dbg !12002
  %call440 = call %struct.rtx_def* @gen_int_mode(i64 %204, i32 %205), !dbg !12003
  %206 = load %struct.rtx_def**, %struct.rtx_def*** %elems, align 8, !dbg !12004
  %207 = load i32, i32* %elem, align 4, !dbg !12005
  %idxprom441 = sext i32 %207 to i64, !dbg !12004
  %arrayidx442 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %206, i64 %idxprom441, !dbg !12004
  store %struct.rtx_def* %call440, %struct.rtx_def** %arrayidx442, align 8, !dbg !12006
  br label %if.end452, !dbg !12004

if.else443:                                       ; preds = %for.end436
  %208 = load i32, i32* %elem_bitsize, align 4, !dbg !12007
  %cmp444 = icmp sle i32 %208, 128, !dbg !12009
  br i1 %cmp444, label %if.then446, label %if.else450, !dbg !12010

if.then446:                                       ; preds = %if.else443
  %209 = load i64, i64* %lo, align 8, !dbg !12011
  %210 = load i64, i64* %hi, align 8, !dbg !12012
  %211 = load i32, i32* %outer_submode, align 4, !dbg !12013
  %call447 = call %struct.rtx_def* @immed_double_const(i64 %209, i64 %210, i32 %211), !dbg !12014
  %212 = load %struct.rtx_def**, %struct.rtx_def*** %elems, align 8, !dbg !12015
  %213 = load i32, i32* %elem, align 4, !dbg !12016
  %idxprom448 = sext i32 %213 to i64, !dbg !12015
  %arrayidx449 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %212, i64 %idxprom448, !dbg !12015
  store %struct.rtx_def* %call447, %struct.rtx_def** %arrayidx449, align 8, !dbg !12017
  br label %if.end451, !dbg !12015

if.else450:                                       ; preds = %if.else443
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !12018
  br label %return, !dbg !12018

if.end451:                                        ; preds = %if.then446
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %if.then439
  br label %sw.epilog532, !dbg !12019

sw.bb453:                                         ; preds = %for.body382, %for.body382
  call void @llvm.dbg.declare(metadata %struct.real_value* %r, metadata !12020, metadata !DIExpression()), !dbg !12022
  call void @llvm.dbg.declare(metadata [16 x i64]* %tmp454, metadata !12023, metadata !DIExpression()), !dbg !12024
  store i32 0, i32* %i, align 4, !dbg !12025
  br label %for.cond455, !dbg !12027

for.cond455:                                      ; preds = %for.inc461, %sw.bb453
  %214 = load i32, i32* %i, align 4, !dbg !12028
  %cmp456 = icmp slt i32 %214, 16, !dbg !12030
  br i1 %cmp456, label %for.body458, label %for.end463, !dbg !12031

for.body458:                                      ; preds = %for.cond455
  %215 = load i32, i32* %i, align 4, !dbg !12032
  %idxprom459 = sext i32 %215 to i64, !dbg !12033
  %arrayidx460 = getelementptr inbounds [16 x i64], [16 x i64]* %tmp454, i64 0, i64 %idxprom459, !dbg !12033
  store i64 0, i64* %arrayidx460, align 8, !dbg !12034
  br label %for.inc461, !dbg !12033

for.inc461:                                       ; preds = %for.body458
  %216 = load i32, i32* %i, align 4, !dbg !12035
  %inc462 = add nsw i32 %216, 1, !dbg !12035
  store i32 %inc462, i32* %i, align 4, !dbg !12035
  br label %for.cond455, !dbg !12036, !llvm.loop !12037

for.end463:                                       ; preds = %for.cond455
  store i32 0, i32* %i, align 4, !dbg !12039
  br label %for.cond464, !dbg !12041

for.cond464:                                      ; preds = %for.inc479, %for.end463
  %217 = load i32, i32* %i, align 4, !dbg !12042
  %218 = load i32, i32* %elem_bitsize, align 4, !dbg !12044
  %cmp465 = icmp slt i32 %217, %218, !dbg !12045
  br i1 %cmp465, label %for.body467, label %for.end481, !dbg !12046

for.body467:                                      ; preds = %for.cond464
  call void @llvm.dbg.declare(metadata i32* %ibase468, metadata !12047, metadata !DIExpression()), !dbg !12049
  %219 = load i32, i32* %i, align 4, !dbg !12050
  store i32 %219, i32* %ibase468, align 4, !dbg !12052
  %220 = load i8*, i8** %vp383, align 8, !dbg !12053
  %incdec.ptr469 = getelementptr inbounds i8, i8* %220, i32 1, !dbg !12053
  store i8* %incdec.ptr469, i8** %vp383, align 8, !dbg !12053
  %221 = load i8, i8* %220, align 1, !dbg !12054
  %conv470 = zext i8 %221 to i32, !dbg !12054
  %and471 = and i32 %conv470, 255, !dbg !12055
  %222 = load i32, i32* %i, align 4, !dbg !12056
  %rem472 = srem i32 %222, 32, !dbg !12057
  %shl473 = shl i32 %and471, %rem472, !dbg !12058
  %conv474 = sext i32 %shl473 to i64, !dbg !12059
  %223 = load i32, i32* %ibase468, align 4, !dbg !12060
  %div475 = sdiv i32 %223, 32, !dbg !12061
  %idxprom476 = sext i32 %div475 to i64, !dbg !12062
  %arrayidx477 = getelementptr inbounds [16 x i64], [16 x i64]* %tmp454, i64 0, i64 %idxprom476, !dbg !12062
  %224 = load i64, i64* %arrayidx477, align 8, !dbg !12063
  %or478 = or i64 %224, %conv474, !dbg !12063
  store i64 %or478, i64* %arrayidx477, align 8, !dbg !12063
  br label %for.inc479, !dbg !12064

for.inc479:                                       ; preds = %for.body467
  %225 = load i32, i32* %i, align 4, !dbg !12065
  %add480 = add nsw i32 %225, 8, !dbg !12065
  store i32 %add480, i32* %i, align 4, !dbg !12065
  br label %for.cond464, !dbg !12066, !llvm.loop !12067

for.end481:                                       ; preds = %for.cond464
  %arraydecay482 = getelementptr inbounds [16 x i64], [16 x i64]* %tmp454, i64 0, i64 0, !dbg !12069
  %226 = load i32, i32* %outer_submode, align 4, !dbg !12070
  call void @real_from_target(%struct.real_value* %r, i64* %arraydecay482, i32 %226), !dbg !12071
  %227 = load i32, i32* %outer_submode, align 4, !dbg !12072
  %call483 = call %struct.rtx_def* @const_double_from_real_value(%struct.real_value* byval(%struct.real_value) align 8 %r, i32 %227), !dbg !12072
  %228 = load %struct.rtx_def**, %struct.rtx_def*** %elems, align 8, !dbg !12073
  %229 = load i32, i32* %elem, align 4, !dbg !12074
  %idxprom484 = sext i32 %229 to i64, !dbg !12073
  %arrayidx485 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %228, i64 %idxprom484, !dbg !12073
  store %struct.rtx_def* %call483, %struct.rtx_def** %arrayidx485, align 8, !dbg !12075
  br label %sw.epilog532, !dbg !12076

sw.bb486:                                         ; preds = %for.body382, %for.body382, %for.body382, %for.body382
  call void @llvm.dbg.declare(metadata %struct.fixed_value* %f, metadata !12077, metadata !DIExpression()), !dbg !12079
  %data487 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %f, i32 0, i32 0, !dbg !12080
  %low488 = getelementptr inbounds %struct.double_int, %struct.double_int* %data487, i32 0, i32 0, !dbg !12081
  store i64 0, i64* %low488, align 8, !dbg !12082
  %data489 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %f, i32 0, i32 0, !dbg !12083
  %high490 = getelementptr inbounds %struct.double_int, %struct.double_int* %data489, i32 0, i32 1, !dbg !12084
  store i64 0, i64* %high490, align 8, !dbg !12085
  %230 = load i32, i32* %outer_submode, align 4, !dbg !12086
  %mode = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %f, i32 0, i32 1, !dbg !12087
  store i32 %230, i32* %mode, align 8, !dbg !12088
  store i32 0, i32* %i, align 4, !dbg !12089
  br label %for.cond491, !dbg !12091

for.cond491:                                      ; preds = %for.inc508, %sw.bb486
  %231 = load i32, i32* %i, align 4, !dbg !12092
  %cmp492 = icmp slt i32 %231, 64, !dbg !12094
  br i1 %cmp492, label %land.rhs494, label %land.end497, !dbg !12095

land.rhs494:                                      ; preds = %for.cond491
  %232 = load i32, i32* %i, align 4, !dbg !12096
  %233 = load i32, i32* %elem_bitsize, align 4, !dbg !12097
  %cmp495 = icmp slt i32 %232, %233, !dbg !12098
  br label %land.end497

land.end497:                                      ; preds = %land.rhs494, %for.cond491
  %234 = phi i1 [ false, %for.cond491 ], [ %cmp495, %land.rhs494 ], !dbg !12099
  br i1 %234, label %for.body498, label %for.end510, !dbg !12100

for.body498:                                      ; preds = %land.end497
  %235 = load i8*, i8** %vp383, align 8, !dbg !12101
  %incdec.ptr499 = getelementptr inbounds i8, i8* %235, i32 1, !dbg !12101
  store i8* %incdec.ptr499, i8** %vp383, align 8, !dbg !12101
  %236 = load i8, i8* %235, align 1, !dbg !12102
  %conv500 = zext i8 %236 to i32, !dbg !12102
  %and501 = and i32 %conv500, 255, !dbg !12103
  %conv502 = sext i32 %and501 to i64, !dbg !12104
  %237 = load i32, i32* %i, align 4, !dbg !12105
  %sh_prom503 = zext i32 %237 to i64, !dbg !12106
  %shl504 = shl i64 %conv502, %sh_prom503, !dbg !12106
  %data505 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %f, i32 0, i32 0, !dbg !12107
  %low506 = getelementptr inbounds %struct.double_int, %struct.double_int* %data505, i32 0, i32 0, !dbg !12108
  %238 = load i64, i64* %low506, align 8, !dbg !12109
  %or507 = or i64 %238, %shl504, !dbg !12109
  store i64 %or507, i64* %low506, align 8, !dbg !12109
  br label %for.inc508, !dbg !12110

for.inc508:                                       ; preds = %for.body498
  %239 = load i32, i32* %i, align 4, !dbg !12111
  %add509 = add nsw i32 %239, 8, !dbg !12111
  store i32 %add509, i32* %i, align 4, !dbg !12111
  br label %for.cond491, !dbg !12112, !llvm.loop !12113

for.end510:                                       ; preds = %land.end497
  br label %for.cond511, !dbg !12115

for.cond511:                                      ; preds = %for.inc525, %for.end510
  %240 = load i32, i32* %i, align 4, !dbg !12116
  %241 = load i32, i32* %elem_bitsize, align 4, !dbg !12119
  %cmp512 = icmp slt i32 %240, %241, !dbg !12120
  br i1 %cmp512, label %for.body514, label %for.end527, !dbg !12121

for.body514:                                      ; preds = %for.cond511
  %242 = load i8*, i8** %vp383, align 8, !dbg !12122
  %incdec.ptr515 = getelementptr inbounds i8, i8* %242, i32 1, !dbg !12122
  store i8* %incdec.ptr515, i8** %vp383, align 8, !dbg !12122
  %243 = load i8, i8* %242, align 1, !dbg !12123
  %conv516 = zext i8 %243 to i32, !dbg !12123
  %and517 = and i32 %conv516, 255, !dbg !12124
  %conv518 = sext i32 %and517 to i64, !dbg !12125
  %244 = load i32, i32* %i, align 4, !dbg !12126
  %sub519 = sub nsw i32 %244, 64, !dbg !12127
  %sh_prom520 = zext i32 %sub519 to i64, !dbg !12128
  %shl521 = shl i64 %conv518, %sh_prom520, !dbg !12128
  %data522 = getelementptr inbounds %struct.fixed_value, %struct.fixed_value* %f, i32 0, i32 0, !dbg !12129
  %high523 = getelementptr inbounds %struct.double_int, %struct.double_int* %data522, i32 0, i32 1, !dbg !12130
  %245 = load i64, i64* %high523, align 8, !dbg !12131
  %or524 = or i64 %245, %shl521, !dbg !12131
  store i64 %or524, i64* %high523, align 8, !dbg !12131
  br label %for.inc525, !dbg !12132

for.inc525:                                       ; preds = %for.body514
  %246 = load i32, i32* %i, align 4, !dbg !12133
  %add526 = add nsw i32 %246, 8, !dbg !12133
  store i32 %add526, i32* %i, align 4, !dbg !12133
  br label %for.cond511, !dbg !12134, !llvm.loop !12135

for.end527:                                       ; preds = %for.cond511
  %247 = load i32, i32* %outer_submode, align 4, !dbg !12137
  %call528 = call %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8 %f, i32 %247), !dbg !12137
  %248 = load %struct.rtx_def**, %struct.rtx_def*** %elems, align 8, !dbg !12138
  %249 = load i32, i32* %elem, align 4, !dbg !12139
  %idxprom529 = sext i32 %249 to i64, !dbg !12138
  %arrayidx530 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %248, i64 %idxprom529, !dbg !12138
  store %struct.rtx_def* %call528, %struct.rtx_def** %arrayidx530, align 8, !dbg !12140
  br label %sw.epilog532, !dbg !12141

sw.default531:                                    ; preds = %for.body382
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 5121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12142
  br label %sw.epilog532, !dbg !12143

sw.epilog532:                                     ; preds = %sw.default531, %for.end527, %for.end481, %if.end452
  br label %for.inc533, !dbg !12144

for.inc533:                                       ; preds = %sw.epilog532
  %250 = load i32, i32* %elem, align 4, !dbg !12145
  %inc534 = add nsw i32 %250, 1, !dbg !12145
  store i32 %inc534, i32* %elem, align 4, !dbg !12145
  br label %for.cond379, !dbg !12146, !llvm.loop !12147

for.end535:                                       ; preds = %for.cond379
  %251 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom536 = zext i32 %251 to i64, !dbg !12149
  %arrayidx537 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom536, !dbg !12149
  %252 = load i8, i8* %arrayidx537, align 1, !dbg !12149
  %conv538 = zext i8 %252 to i32, !dbg !12149
  %cmp539 = icmp eq i32 %conv538, 12, !dbg !12149
  br i1 %cmp539, label %if.then571, label %lor.lhs.false541, !dbg !12149

lor.lhs.false541:                                 ; preds = %for.end535
  %253 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom542 = zext i32 %253 to i64, !dbg !12149
  %arrayidx543 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom542, !dbg !12149
  %254 = load i8, i8* %arrayidx543, align 1, !dbg !12149
  %conv544 = zext i8 %254 to i32, !dbg !12149
  %cmp545 = icmp eq i32 %conv544, 17, !dbg !12149
  br i1 %cmp545, label %if.then571, label %lor.lhs.false547, !dbg !12149

lor.lhs.false547:                                 ; preds = %lor.lhs.false541
  %255 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom548 = zext i32 %255 to i64, !dbg !12149
  %arrayidx549 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom548, !dbg !12149
  %256 = load i8, i8* %arrayidx549, align 1, !dbg !12149
  %conv550 = zext i8 %256 to i32, !dbg !12149
  %cmp551 = icmp eq i32 %conv550, 13, !dbg !12149
  br i1 %cmp551, label %if.then571, label %lor.lhs.false553, !dbg !12149

lor.lhs.false553:                                 ; preds = %lor.lhs.false547
  %257 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom554 = zext i32 %257 to i64, !dbg !12149
  %arrayidx555 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom554, !dbg !12149
  %258 = load i8, i8* %arrayidx555, align 1, !dbg !12149
  %conv556 = zext i8 %258 to i32, !dbg !12149
  %cmp557 = icmp eq i32 %conv556, 14, !dbg !12149
  br i1 %cmp557, label %if.then571, label %lor.lhs.false559, !dbg !12149

lor.lhs.false559:                                 ; preds = %lor.lhs.false553
  %259 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom560 = zext i32 %259 to i64, !dbg !12149
  %arrayidx561 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom560, !dbg !12149
  %260 = load i8, i8* %arrayidx561, align 1, !dbg !12149
  %conv562 = zext i8 %260 to i32, !dbg !12149
  %cmp563 = icmp eq i32 %conv562, 15, !dbg !12149
  br i1 %cmp563, label %if.then571, label %lor.lhs.false565, !dbg !12149

lor.lhs.false565:                                 ; preds = %lor.lhs.false559
  %261 = load i32, i32* %outermode.addr, align 4, !dbg !12149
  %idxprom566 = zext i32 %261 to i64, !dbg !12149
  %arrayidx567 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom566, !dbg !12149
  %262 = load i8, i8* %arrayidx567, align 1, !dbg !12149
  %conv568 = zext i8 %262 to i32, !dbg !12149
  %cmp569 = icmp eq i32 %conv568, 16, !dbg !12149
  br i1 %cmp569, label %if.then571, label %if.else573, !dbg !12151

if.then571:                                       ; preds = %lor.lhs.false565, %lor.lhs.false559, %lor.lhs.false553, %lor.lhs.false547, %lor.lhs.false541, %for.end535
  %263 = load i32, i32* %outermode.addr, align 4, !dbg !12152
  %264 = load %struct.rtvec_def*, %struct.rtvec_def** %result_v, align 8, !dbg !12153
  %call572 = call %struct.rtx_def* @gen_rtx_CONST_VECTOR(i32 %263, %struct.rtvec_def* %264), !dbg !12154
  store %struct.rtx_def* %call572, %struct.rtx_def** %retval, align 8, !dbg !12155
  br label %return, !dbg !12155

if.else573:                                       ; preds = %lor.lhs.false565
  %265 = load %struct.rtx_def*, %struct.rtx_def** %result_s, align 8, !dbg !12156
  store %struct.rtx_def* %265, %struct.rtx_def** %retval, align 8, !dbg !12157
  br label %return, !dbg !12157

return:                                           ; preds = %if.else573, %if.then571, %if.else450, %if.then14, %if.then
  %266 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !12158
  ret %struct.rtx_def* %266, !dbg !12158
}

declare dso_local zeroext i8 @validate_subreg(i32, i32, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_SUBREG(i32, %struct.rtx_def*, i32) #2

declare dso_local i32 @subreg_lowpart_p(%struct.rtx_def*) #2

declare dso_local i32 @subreg_lowpart_offset(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !12159 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !12162, metadata !DIExpression()), !dbg !12163
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12164
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !12164
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12164
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12164
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !12164
  %1 = load i32, i32* %rt_uint, align 8, !dbg !12164
  ret i32 %1, !dbg !12165
}

declare dso_local i32 @simplify_subreg_regno(i32, i32, i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_REG_offset(%struct.rtx_def*, i32, i32, i32) #2

declare dso_local i32 @mode_dependent_address_p(%struct.rtx_def*) #2

declare dso_local i32 @have_insn_for(i32, i32) #2

declare dso_local i32 @subreg_lsb_1(i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %x) #0 !dbg !12166 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %mode = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !12169, metadata !DIExpression()), !dbg !12170
  call void @llvm.dbg.declare(metadata i32* %code, metadata !12171, metadata !DIExpression()), !dbg !12173
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12174
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !12174
  %bf.load = load i32, i32* %1, align 8, !dbg !12174
  %bf.clear = and i32 %bf.load, 65535, !dbg !12174
  store i32 %bf.clear, i32* %code, align 4, !dbg !12173
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !12175, metadata !DIExpression()), !dbg !12177
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12178
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !12178
  %bf.load1 = load i32, i32* %3, align 8, !dbg !12178
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !12178
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !12178
  store i32 %bf.clear2, i32* %mode, align 4, !dbg !12177
  %4 = load i32, i32* %code, align 4, !dbg !12179
  %idxprom = sext i32 %4 to i64, !dbg !12179
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !12179
  %5 = load i32, i32* %arrayidx, align 4, !dbg !12179
  switch i32 %5, label %sw.default [
    i32 4, label %sw.bb
    i32 3, label %sw.bb11
    i32 2, label %sw.bb30
    i32 10, label %sw.bb40
    i32 11, label %sw.bb40
    i32 0, label %sw.bb61
    i32 1, label %sw.bb61
    i32 5, label %sw.bb92
    i32 8, label %sw.bb111
  ], !dbg !12180

sw.bb:                                            ; preds = %entry
  %6 = load i32, i32* %code, align 4, !dbg !12181
  %7 = load i32, i32* %mode, align 4, !dbg !12183
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12184
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !12184
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12184
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12184
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !12184
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12184
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12185
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !12185
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !12185
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 0, !dbg !12185
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !12185
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !12185
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !12185
  %bf.load8 = load i32, i32* %12, align 8, !dbg !12185
  %bf.lshr9 = lshr i32 %bf.load8, 16, !dbg !12185
  %bf.clear10 = and i32 %bf.lshr9, 255, !dbg !12185
  %call = call %struct.rtx_def* @simplify_unary_operation(i32 %6, i32 %7, %struct.rtx_def* %9, i32 %bf.clear10), !dbg !12186
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !12187
  br label %return, !dbg !12187

sw.bb11:                                          ; preds = %entry
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12188
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !12188
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !12188
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !12188
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !12188
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !12188
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12190
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !12190
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !12190
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !12190
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !12190
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !12190
  %call20 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %14, %struct.rtx_def* %16), !dbg !12191
  %tobool = icmp ne i8 %call20, 0, !dbg !12191
  br i1 %tobool, label %if.then, label %if.end, !dbg !12192

if.then:                                          ; preds = %sw.bb11
  %17 = load i32, i32* %code, align 4, !dbg !12193
  %18 = load i32, i32* %mode, align 4, !dbg !12194
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12195
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !12195
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !12195
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 1, !dbg !12195
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !12195
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !12195
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12196
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !12196
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !12196
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !12196
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !12196
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !12196
  %call29 = call %struct.rtx_def* @simplify_gen_binary(i32 %17, i32 %18, %struct.rtx_def* %20, %struct.rtx_def* %22), !dbg !12197
  store %struct.rtx_def* %call29, %struct.rtx_def** %retval, align 8, !dbg !12198
  br label %return, !dbg !12198

if.end:                                           ; preds = %sw.bb11
  br label %sw.bb30, !dbg !12199

sw.bb30:                                          ; preds = %entry, %if.end
  %23 = load i32, i32* %code, align 4, !dbg !12200
  %24 = load i32, i32* %mode, align 4, !dbg !12201
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12202
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !12202
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !12202
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !12202
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !12202
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !12202
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12203
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !12203
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !12203
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 1, !dbg !12203
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !12203
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !12203
  %call39 = call %struct.rtx_def* @simplify_binary_operation(i32 %23, i32 %24, %struct.rtx_def* %26, %struct.rtx_def* %28), !dbg !12204
  store %struct.rtx_def* %call39, %struct.rtx_def** %retval, align 8, !dbg !12205
  br label %return, !dbg !12205

sw.bb40:                                          ; preds = %entry, %entry
  %29 = load i32, i32* %code, align 4, !dbg !12206
  %30 = load i32, i32* %mode, align 4, !dbg !12207
  %31 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12208
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !12208
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !12208
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !12208
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !12208
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !12208
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !12208
  %bf.load45 = load i32, i32* %33, align 8, !dbg !12208
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !12208
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !12208
  %34 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12209
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !12209
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !12209
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !12209
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !12209
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !12209
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12210
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !12210
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !12210
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !12210
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !12210
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !12210
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12211
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !12211
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !12211
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 2, !dbg !12211
  %rt_rtx59 = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !12211
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx59, align 8, !dbg !12211
  %call60 = call %struct.rtx_def* @simplify_ternary_operation(i32 %29, i32 %30, i32 %bf.clear47, %struct.rtx_def* %35, %struct.rtx_def* %37, %struct.rtx_def* %39), !dbg !12212
  store %struct.rtx_def* %call60, %struct.rtx_def** %retval, align 8, !dbg !12213
  br label %return, !dbg !12213

sw.bb61:                                          ; preds = %entry, %entry
  %40 = load i32, i32* %code, align 4, !dbg !12214
  %41 = load i32, i32* %mode, align 4, !dbg !12215
  %42 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12216
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !12216
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !12216
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !12216
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !12216
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !12216
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !12216
  %bf.load66 = load i32, i32* %44, align 8, !dbg !12216
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !12216
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !12216
  %cmp = icmp ne i32 %bf.clear68, 0, !dbg !12217
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12218

cond.true:                                        ; preds = %sw.bb61
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12219
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !12219
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !12219
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !12219
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !12219
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !12219
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !12219
  %bf.load73 = load i32, i32* %47, align 8, !dbg !12219
  %bf.lshr74 = lshr i32 %bf.load73, 16, !dbg !12219
  %bf.clear75 = and i32 %bf.lshr74, 255, !dbg !12219
  br label %cond.end, !dbg !12218

cond.false:                                       ; preds = %sw.bb61
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12220
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !12220
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !12220
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 1, !dbg !12220
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !12220
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !12220
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !12220
  %bf.load80 = load i32, i32* %50, align 8, !dbg !12220
  %bf.lshr81 = lshr i32 %bf.load80, 16, !dbg !12220
  %bf.clear82 = and i32 %bf.lshr81, 255, !dbg !12220
  br label %cond.end, !dbg !12218

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear75, %cond.true ], [ %bf.clear82, %cond.false ], !dbg !12218
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12221
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !12221
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !12221
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 0, !dbg !12221
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !12221
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !12221
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12222
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !12222
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !12222
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 1, !dbg !12222
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !12222
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !12222
  %call91 = call %struct.rtx_def* @simplify_relational_operation(i32 %40, i32 %41, i32 %cond, %struct.rtx_def* %52, %struct.rtx_def* %54), !dbg !12223
  store %struct.rtx_def* %call91, %struct.rtx_def** %retval, align 8, !dbg !12224
  br label %return, !dbg !12224

sw.bb92:                                          ; preds = %entry
  %55 = load i32, i32* %code, align 4, !dbg !12225
  %cmp93 = icmp eq i32 %55, 39, !dbg !12227
  br i1 %cmp93, label %if.then94, label %if.end110, !dbg !12228

if.then94:                                        ; preds = %sw.bb92
  %56 = load i32, i32* %mode, align 4, !dbg !12229
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12230
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !12230
  %fld96 = bitcast %union.u* %u95 to [1 x %union.rtunion_def]*, !dbg !12230
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i64 0, i64 0, !dbg !12230
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !12230
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx98, align 8, !dbg !12230
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12231
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !12231
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !12231
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 0, !dbg !12231
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !12231
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !12231
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !12231
  %bf.load103 = load i32, i32* %61, align 8, !dbg !12231
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !12231
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !12231
  %62 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12232
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !12232
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !12232
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 1, !dbg !12232
  %rt_uint = bitcast %union.rtunion_def* %arrayidx108 to i32*, !dbg !12232
  %63 = load i32, i32* %rt_uint, align 8, !dbg !12232
  %call109 = call %struct.rtx_def* @simplify_subreg(i32 %56, %struct.rtx_def* %58, i32 %bf.clear105, i32 %63), !dbg !12233
  store %struct.rtx_def* %call109, %struct.rtx_def** %retval, align 8, !dbg !12234
  br label %return, !dbg !12234

if.end110:                                        ; preds = %sw.bb92
  br label %sw.epilog, !dbg !12235

sw.bb111:                                         ; preds = %entry
  %64 = load i32, i32* %code, align 4, !dbg !12236
  %cmp112 = icmp eq i32 %64, 122, !dbg !12238
  br i1 %cmp112, label %if.then113, label %if.end141, !dbg !12239

if.then113:                                       ; preds = %sw.bb111
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12240
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !12240
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !12240
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 0, !dbg !12240
  %rt_rtx117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtx_def**, !dbg !12240
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx117, align 8, !dbg !12240
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !12240
  %bf.load118 = load i32, i32* %67, align 8, !dbg !12240
  %bf.clear119 = and i32 %bf.load118, 65535, !dbg !12240
  %cmp120 = icmp eq i32 %bf.clear119, 121, !dbg !12243
  br i1 %cmp120, label %land.lhs.true, label %if.end140, !dbg !12244

land.lhs.true:                                    ; preds = %if.then113
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12245
  %u121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !12245
  %fld122 = bitcast %union.u* %u121 to [1 x %union.rtunion_def]*, !dbg !12245
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i64 0, i64 0, !dbg !12245
  %rt_rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**, !dbg !12245
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx124, align 8, !dbg !12245
  %u125 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !12245
  %fld126 = bitcast %union.u* %u125 to [1 x %union.rtunion_def]*, !dbg !12245
  %arrayidx127 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld126, i64 0, i64 0, !dbg !12245
  %rt_rtx128 = bitcast %union.rtunion_def* %arrayidx127 to %struct.rtx_def**, !dbg !12245
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx128, align 8, !dbg !12245
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12246
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !12246
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !12246
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 1, !dbg !12246
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !12246
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !12246
  %call133 = call i32 @rtx_equal_p(%struct.rtx_def* %70, %struct.rtx_def* %72), !dbg !12247
  %tobool134 = icmp ne i32 %call133, 0, !dbg !12247
  br i1 %tobool134, label %if.then135, label %if.end140, !dbg !12248

if.then135:                                       ; preds = %land.lhs.true
  %73 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12249
  %u136 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !12249
  %fld137 = bitcast %union.u* %u136 to [1 x %union.rtunion_def]*, !dbg !12249
  %arrayidx138 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld137, i64 0, i64 1, !dbg !12249
  %rt_rtx139 = bitcast %union.rtunion_def* %arrayidx138 to %struct.rtx_def**, !dbg !12249
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx139, align 8, !dbg !12249
  store %struct.rtx_def* %74, %struct.rtx_def** %retval, align 8, !dbg !12250
  br label %return, !dbg !12250

if.end140:                                        ; preds = %land.lhs.true, %if.then113
  br label %if.end141, !dbg !12251

if.end141:                                        ; preds = %if.end140, %sw.bb111
  br label %sw.epilog, !dbg !12252

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !12253

sw.epilog:                                        ; preds = %sw.default, %if.end141, %if.end110
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !12254
  br label %return, !dbg !12254

return:                                           ; preds = %sw.epilog, %if.then135, %if.then94, %cond.end, %sw.bb40, %sw.bb30, %if.then, %sw.bb
  %75 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !12255
  ret %struct.rtx_def* %75, !dbg !12255
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare dso_local zeroext i8 @truncated_to_mode(i32, %struct.rtx_def*) #2

declare dso_local i32 @significand_size(i32) #2

declare dso_local zeroext i8 @optimize_function_for_speed_p(%struct.function*) #2

declare dso_local i32 @rtx_cost(%struct.rtx_def*, i32, i8 zeroext) #2

declare dso_local %struct.rtx_def* @reversed_comparison(%struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @plus_minus_operand_p(%struct.rtx_def* %x) #0 !dbg !12256 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !12259, metadata !DIExpression()), !dbg !12260
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12261
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !12261
  %bf.load = load i32, i32* %1, align 8, !dbg !12261
  %bf.clear = and i32 %bf.load, 65535, !dbg !12261
  %cmp = icmp eq i32 %bf.clear, 49, !dbg !12262
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !12263

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12264
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !12264
  %bf.load1 = load i32, i32* %3, align 8, !dbg !12264
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !12264
  %cmp3 = icmp eq i32 %bf.clear2, 50, !dbg !12265
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !12266

lor.rhs:                                          ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12267
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !12267
  %bf.load4 = load i32, i32* %5, align 8, !dbg !12267
  %bf.clear5 = and i32 %bf.load4, 65535, !dbg !12267
  %cmp6 = icmp eq i32 %bf.clear5, 35, !dbg !12268
  br i1 %cmp6, label %land.lhs.true, label %land.end, !dbg !12269

land.lhs.true:                                    ; preds = %lor.rhs
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12270
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !12270
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12270
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12270
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12270
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12270
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !12270
  %bf.load7 = load i32, i32* %8, align 8, !dbg !12270
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !12270
  %cmp9 = icmp eq i32 %bf.clear8, 49, !dbg !12271
  br i1 %cmp9, label %land.lhs.true10, label %land.end, !dbg !12272

land.lhs.true10:                                  ; preds = %land.lhs.true
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12273
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !12273
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !12273
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !12273
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !12273
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !12273
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !12273
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !12273
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !12273
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !12273
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !12273
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !12273
  %bf.load19 = load i32, i32* %12, align 8, !dbg !12273
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !12273
  %idxprom = sext i32 %bf.clear20 to i64, !dbg !12273
  %arrayidx21 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !12273
  %13 = load i32, i32* %arrayidx21, align 4, !dbg !12273
  %cmp22 = icmp eq i32 %13, 9, !dbg !12273
  br i1 %cmp22, label %land.rhs, label %land.end, !dbg !12274

land.rhs:                                         ; preds = %land.lhs.true10
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !12275
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !12275
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !12275
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !12275
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !12275
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !12275
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !12275
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !12275
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 1, !dbg !12275
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !12275
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !12275
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !12275
  %bf.load31 = load i32, i32* %17, align 8, !dbg !12275
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !12275
  %idxprom33 = sext i32 %bf.clear32 to i64, !dbg !12275
  %arrayidx34 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom33, !dbg !12275
  %18 = load i32, i32* %arrayidx34, align 4, !dbg !12275
  %cmp35 = icmp eq i32 %18, 9, !dbg !12275
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true10, %land.lhs.true, %lor.rhs
  %19 = phi i1 [ false, %land.lhs.true10 ], [ false, %land.lhs.true ], [ false, %lor.rhs ], [ %cmp35, %land.rhs ], !dbg !12276
  br label %lor.end, !dbg !12266

lor.end:                                          ; preds = %land.end, %lor.lhs.false, %entry
  %20 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %19, %land.end ]
  %lor.ext = zext i1 %20 to i32, !dbg !12266
  %conv = trunc i32 %lor.ext to i8, !dbg !12261
  ret i8 %conv, !dbg !12277
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_plus_minus(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !12278 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %ops = alloca [8 x %struct.simplify_plus_minus_op_data], align 16
  %result = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %n_ops = alloca i32, align 4
  %input_ops = alloca i32, align 4
  %changed = alloca i32, align 4
  %n_constants = alloca i32, align 4
  %canonicalized = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %this_op = alloca %struct.rtx_def*, align 8
  %this_neg = alloca i32, align 4
  %this_code = alloca i32, align 4
  %code166 = alloca i32, align 4
  %lhs = alloca %struct.rtx_def*, align 8
  %rhs = alloca %struct.rtx_def*, align 8
  %save = alloca %struct.simplify_plus_minus_op_data, align 8
  %lhs256 = alloca %struct.rtx_def*, align 8
  %rhs260 = alloca %struct.rtx_def*, align 8
  %lneg = alloca i32, align 4
  %rneg = alloca i32, align 4
  %ncode = alloca i32, align 4
  %tem_lhs = alloca %struct.rtx_def*, align 8
  %tem_rhs = alloca %struct.rtx_def*, align 8
  %value = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !12279, metadata !DIExpression()), !dbg !12280
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12281, metadata !DIExpression()), !dbg !12282
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !12283, metadata !DIExpression()), !dbg !12284
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !12285, metadata !DIExpression()), !dbg !12286
  call void @llvm.dbg.declare(metadata [8 x %struct.simplify_plus_minus_op_data]* %ops, metadata !12287, metadata !DIExpression()), !dbg !12296
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %result, metadata !12297, metadata !DIExpression()), !dbg !12298
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.declare(metadata i32* %n_ops, metadata !12301, metadata !DIExpression()), !dbg !12302
  store i32 2, i32* %n_ops, align 4, !dbg !12302
  call void @llvm.dbg.declare(metadata i32* %input_ops, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i32 2, i32* %input_ops, align 4, !dbg !12304
  call void @llvm.dbg.declare(metadata i32* %changed, metadata !12305, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.declare(metadata i32* %n_constants, metadata !12307, metadata !DIExpression()), !dbg !12308
  store i32 0, i32* %n_constants, align 4, !dbg !12308
  call void @llvm.dbg.declare(metadata i32* %canonicalized, metadata !12309, metadata !DIExpression()), !dbg !12310
  store i32 0, i32* %canonicalized, align 4, !dbg !12310
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12311, metadata !DIExpression()), !dbg !12312
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12313, metadata !DIExpression()), !dbg !12314
  %arraydecay = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12315
  %0 = bitcast %struct.simplify_plus_minus_op_data* %arraydecay to i8*, !dbg !12315
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 128, i1 false), !dbg !12315
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12316
  %arrayidx = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12317
  %op = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx, i32 0, i32 0, !dbg !12318
  store %struct.rtx_def* %1, %struct.rtx_def** %op, align 16, !dbg !12319
  %arrayidx1 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12320
  %neg = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx1, i32 0, i32 1, !dbg !12321
  store i16 0, i16* %neg, align 8, !dbg !12322
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12323
  %arrayidx2 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12324
  %op3 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx2, i32 0, i32 0, !dbg !12325
  store %struct.rtx_def* %2, %struct.rtx_def** %op3, align 16, !dbg !12326
  %3 = load i32, i32* %code.addr, align 4, !dbg !12327
  %cmp = icmp eq i32 %3, 50, !dbg !12328
  %conv = zext i1 %cmp to i32, !dbg !12328
  %conv4 = trunc i32 %conv to i16, !dbg !12329
  %arrayidx5 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12330
  %neg6 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx5, i32 0, i32 1, !dbg !12331
  store i16 %conv4, i16* %neg6, align 8, !dbg !12332
  br label %do.body, !dbg !12333

do.body:                                          ; preds = %do.cond, %entry
  store i32 0, i32* %changed, align 4, !dbg !12334
  store i32 0, i32* %i, align 4, !dbg !12336
  br label %for.cond, !dbg !12338

for.cond:                                         ; preds = %for.inc, %do.body
  %4 = load i32, i32* %i, align 4, !dbg !12339
  %5 = load i32, i32* %n_ops, align 4, !dbg !12341
  %cmp7 = icmp slt i32 %4, %5, !dbg !12342
  br i1 %cmp7, label %for.body, label %for.end, !dbg !12343

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %this_op, metadata !12344, metadata !DIExpression()), !dbg !12346
  %6 = load i32, i32* %i, align 4, !dbg !12347
  %idxprom = sext i32 %6 to i64, !dbg !12348
  %arrayidx9 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom, !dbg !12348
  %op10 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx9, i32 0, i32 0, !dbg !12349
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op10, align 16, !dbg !12349
  store %struct.rtx_def* %7, %struct.rtx_def** %this_op, align 8, !dbg !12346
  call void @llvm.dbg.declare(metadata i32* %this_neg, metadata !12350, metadata !DIExpression()), !dbg !12351
  %8 = load i32, i32* %i, align 4, !dbg !12352
  %idxprom11 = sext i32 %8 to i64, !dbg !12353
  %arrayidx12 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom11, !dbg !12353
  %neg13 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx12, i32 0, i32 1, !dbg !12354
  %9 = load i16, i16* %neg13, align 8, !dbg !12354
  %conv14 = sext i16 %9 to i32, !dbg !12353
  store i32 %conv14, i32* %this_neg, align 4, !dbg !12351
  call void @llvm.dbg.declare(metadata i32* %this_code, metadata !12355, metadata !DIExpression()), !dbg !12356
  %10 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12357
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !12357
  %bf.load = load i32, i32* %11, align 8, !dbg !12357
  %bf.clear = and i32 %bf.load, 65535, !dbg !12357
  store i32 %bf.clear, i32* %this_code, align 4, !dbg !12356
  %12 = load i32, i32* %this_code, align 4, !dbg !12358
  switch i32 %12, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 51, label %sw.bb35
    i32 35, label %sw.bb47
    i32 64, label %sw.bb117
    i32 30, label %sw.bb144
  ], !dbg !12359

sw.bb:                                            ; preds = %for.body, %for.body
  %13 = load i32, i32* %n_ops, align 4, !dbg !12360
  %cmp15 = icmp eq i32 %13, 7, !dbg !12363
  br i1 %cmp15, label %if.then, label %if.end, !dbg !12364

if.then:                                          ; preds = %sw.bb
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !12365
  br label %return, !dbg !12365

if.end:                                           ; preds = %sw.bb
  %14 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12366
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !12366
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12366
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !12366
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !12366
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12366
  %16 = load i32, i32* %n_ops, align 4, !dbg !12367
  %idxprom18 = sext i32 %16 to i64, !dbg !12368
  %arrayidx19 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom18, !dbg !12368
  %op20 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx19, i32 0, i32 0, !dbg !12369
  store %struct.rtx_def* %15, %struct.rtx_def** %op20, align 16, !dbg !12370
  %17 = load i32, i32* %this_code, align 4, !dbg !12371
  %cmp21 = icmp eq i32 %17, 50, !dbg !12372
  %conv22 = zext i1 %cmp21 to i32, !dbg !12372
  %18 = load i32, i32* %this_neg, align 4, !dbg !12373
  %xor = xor i32 %conv22, %18, !dbg !12374
  %conv23 = trunc i32 %xor to i16, !dbg !12375
  %19 = load i32, i32* %n_ops, align 4, !dbg !12376
  %idxprom24 = sext i32 %19 to i64, !dbg !12377
  %arrayidx25 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom24, !dbg !12377
  %neg26 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx25, i32 0, i32 1, !dbg !12378
  store i16 %conv23, i16* %neg26, align 8, !dbg !12379
  %20 = load i32, i32* %n_ops, align 4, !dbg !12380
  %inc = add nsw i32 %20, 1, !dbg !12380
  store i32 %inc, i32* %n_ops, align 4, !dbg !12380
  %21 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12381
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !12381
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !12381
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !12381
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !12381
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !12381
  %23 = load i32, i32* %i, align 4, !dbg !12382
  %idxprom31 = sext i32 %23 to i64, !dbg !12383
  %arrayidx32 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom31, !dbg !12383
  %op33 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx32, i32 0, i32 0, !dbg !12384
  store %struct.rtx_def* %22, %struct.rtx_def** %op33, align 16, !dbg !12385
  %24 = load i32, i32* %input_ops, align 4, !dbg !12386
  %inc34 = add nsw i32 %24, 1, !dbg !12386
  store i32 %inc34, i32* %input_ops, align 4, !dbg !12386
  store i32 1, i32* %changed, align 4, !dbg !12387
  %25 = load i32, i32* %this_neg, align 4, !dbg !12388
  %26 = load i32, i32* %canonicalized, align 4, !dbg !12389
  %or = or i32 %26, %25, !dbg !12389
  store i32 %or, i32* %canonicalized, align 4, !dbg !12389
  br label %sw.epilog, !dbg !12390

sw.bb35:                                          ; preds = %for.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12391
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !12391
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !12391
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !12391
  %rt_rtx39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtx_def**, !dbg !12391
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx39, align 8, !dbg !12391
  %29 = load i32, i32* %i, align 4, !dbg !12392
  %idxprom40 = sext i32 %29 to i64, !dbg !12393
  %arrayidx41 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom40, !dbg !12393
  %op42 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx41, i32 0, i32 0, !dbg !12394
  store %struct.rtx_def* %28, %struct.rtx_def** %op42, align 16, !dbg !12395
  %30 = load i32, i32* %this_neg, align 4, !dbg !12396
  %tobool = icmp ne i32 %30, 0, !dbg !12397
  %lnot = xor i1 %tobool, true, !dbg !12397
  %lnot.ext = zext i1 %lnot to i32, !dbg !12397
  %conv43 = trunc i32 %lnot.ext to i16, !dbg !12397
  %31 = load i32, i32* %i, align 4, !dbg !12398
  %idxprom44 = sext i32 %31 to i64, !dbg !12399
  %arrayidx45 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom44, !dbg !12399
  %neg46 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx45, i32 0, i32 1, !dbg !12400
  store i16 %conv43, i16* %neg46, align 8, !dbg !12401
  store i32 1, i32* %changed, align 4, !dbg !12402
  store i32 1, i32* %canonicalized, align 4, !dbg !12403
  br label %sw.epilog, !dbg !12404

sw.bb47:                                          ; preds = %for.body
  %32 = load i32, i32* %n_ops, align 4, !dbg !12405
  %cmp48 = icmp slt i32 %32, 7, !dbg !12407
  br i1 %cmp48, label %land.lhs.true, label %if.end116, !dbg !12408

land.lhs.true:                                    ; preds = %sw.bb47
  %33 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12409
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !12409
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !12409
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 0, !dbg !12409
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !12409
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !12409
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !12409
  %bf.load54 = load i32, i32* %35, align 8, !dbg !12409
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !12409
  %cmp56 = icmp eq i32 %bf.clear55, 49, !dbg !12410
  br i1 %cmp56, label %land.lhs.true58, label %if.end116, !dbg !12411

land.lhs.true58:                                  ; preds = %land.lhs.true
  %36 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12412
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !12412
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !12412
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !12412
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !12412
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !12412
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !12412
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !12412
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 0, !dbg !12412
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !12412
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !12412
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !12412
  %bf.load67 = load i32, i32* %39, align 8, !dbg !12412
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !12412
  %idxprom69 = sext i32 %bf.clear68 to i64, !dbg !12412
  %arrayidx70 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom69, !dbg !12412
  %40 = load i32, i32* %arrayidx70, align 4, !dbg !12412
  %cmp71 = icmp eq i32 %40, 9, !dbg !12412
  br i1 %cmp71, label %land.lhs.true73, label %if.end116, !dbg !12413

land.lhs.true73:                                  ; preds = %land.lhs.true58
  %41 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12414
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !12414
  %fld75 = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !12414
  %arrayidx76 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld75, i64 0, i64 0, !dbg !12414
  %rt_rtx77 = bitcast %union.rtunion_def* %arrayidx76 to %struct.rtx_def**, !dbg !12414
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx77, align 8, !dbg !12414
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !12414
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !12414
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 1, !dbg !12414
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !12414
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !12414
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !12414
  %bf.load82 = load i32, i32* %44, align 8, !dbg !12414
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !12414
  %idxprom84 = sext i32 %bf.clear83 to i64, !dbg !12414
  %arrayidx85 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom84, !dbg !12414
  %45 = load i32, i32* %arrayidx85, align 4, !dbg !12414
  %cmp86 = icmp eq i32 %45, 9, !dbg !12414
  br i1 %cmp86, label %if.then88, label %if.end116, !dbg !12415

if.then88:                                        ; preds = %land.lhs.true73
  %46 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12416
  %u89 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !12416
  %fld90 = bitcast %union.u* %u89 to [1 x %union.rtunion_def]*, !dbg !12416
  %arrayidx91 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld90, i64 0, i64 0, !dbg !12416
  %rt_rtx92 = bitcast %union.rtunion_def* %arrayidx91 to %struct.rtx_def**, !dbg !12416
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx92, align 8, !dbg !12416
  %u93 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !12416
  %fld94 = bitcast %union.u* %u93 to [1 x %union.rtunion_def]*, !dbg !12416
  %arrayidx95 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld94, i64 0, i64 0, !dbg !12416
  %rt_rtx96 = bitcast %union.rtunion_def* %arrayidx95 to %struct.rtx_def**, !dbg !12416
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx96, align 8, !dbg !12416
  %49 = load i32, i32* %i, align 4, !dbg !12418
  %idxprom97 = sext i32 %49 to i64, !dbg !12419
  %arrayidx98 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom97, !dbg !12419
  %op99 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx98, i32 0, i32 0, !dbg !12420
  store %struct.rtx_def* %48, %struct.rtx_def** %op99, align 16, !dbg !12421
  %50 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12422
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !12422
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !12422
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 0, !dbg !12422
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !12422
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !12422
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !12422
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !12422
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 1, !dbg !12422
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !12422
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !12422
  %53 = load i32, i32* %n_ops, align 4, !dbg !12423
  %idxprom108 = sext i32 %53 to i64, !dbg !12424
  %arrayidx109 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom108, !dbg !12424
  %op110 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx109, i32 0, i32 0, !dbg !12425
  store %struct.rtx_def* %52, %struct.rtx_def** %op110, align 16, !dbg !12426
  %54 = load i32, i32* %this_neg, align 4, !dbg !12427
  %conv111 = trunc i32 %54 to i16, !dbg !12427
  %55 = load i32, i32* %n_ops, align 4, !dbg !12428
  %idxprom112 = sext i32 %55 to i64, !dbg !12429
  %arrayidx113 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom112, !dbg !12429
  %neg114 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx113, i32 0, i32 1, !dbg !12430
  store i16 %conv111, i16* %neg114, align 8, !dbg !12431
  %56 = load i32, i32* %n_ops, align 4, !dbg !12432
  %inc115 = add nsw i32 %56, 1, !dbg !12432
  store i32 %inc115, i32* %n_ops, align 4, !dbg !12432
  store i32 1, i32* %changed, align 4, !dbg !12433
  store i32 1, i32* %canonicalized, align 4, !dbg !12434
  br label %if.end116, !dbg !12435

if.end116:                                        ; preds = %if.then88, %land.lhs.true73, %land.lhs.true58, %land.lhs.true, %sw.bb47
  br label %sw.epilog, !dbg !12436

sw.bb117:                                         ; preds = %for.body
  %57 = load i32, i32* %n_ops, align 4, !dbg !12437
  %cmp118 = icmp ne i32 %57, 7, !dbg !12439
  br i1 %cmp118, label %if.then120, label %if.end143, !dbg !12440

if.then120:                                       ; preds = %sw.bb117
  %58 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 63), align 8, !dbg !12441
  %59 = load i32, i32* %n_ops, align 4, !dbg !12443
  %idxprom121 = sext i32 %59 to i64, !dbg !12444
  %arrayidx122 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom121, !dbg !12444
  %op123 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx122, i32 0, i32 0, !dbg !12445
  store %struct.rtx_def* %58, %struct.rtx_def** %op123, align 16, !dbg !12446
  %60 = load i32, i32* %this_neg, align 4, !dbg !12447
  %conv124 = trunc i32 %60 to i16, !dbg !12447
  %61 = load i32, i32* %n_ops, align 4, !dbg !12448
  %inc125 = add nsw i32 %61, 1, !dbg !12448
  store i32 %inc125, i32* %n_ops, align 4, !dbg !12448
  %idxprom126 = sext i32 %61 to i64, !dbg !12449
  %arrayidx127 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom126, !dbg !12449
  %neg128 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx127, i32 0, i32 1, !dbg !12450
  store i16 %conv124, i16* %neg128, align 8, !dbg !12451
  %62 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12452
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !12452
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !12452
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 0, !dbg !12452
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !12452
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !12452
  %64 = load i32, i32* %i, align 4, !dbg !12453
  %idxprom133 = sext i32 %64 to i64, !dbg !12454
  %arrayidx134 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom133, !dbg !12454
  %op135 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx134, i32 0, i32 0, !dbg !12455
  store %struct.rtx_def* %63, %struct.rtx_def** %op135, align 16, !dbg !12456
  %65 = load i32, i32* %this_neg, align 4, !dbg !12457
  %tobool136 = icmp ne i32 %65, 0, !dbg !12458
  %lnot137 = xor i1 %tobool136, true, !dbg !12458
  %lnot.ext138 = zext i1 %lnot137 to i32, !dbg !12458
  %conv139 = trunc i32 %lnot.ext138 to i16, !dbg !12458
  %66 = load i32, i32* %i, align 4, !dbg !12459
  %idxprom140 = sext i32 %66 to i64, !dbg !12460
  %arrayidx141 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom140, !dbg !12460
  %neg142 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx141, i32 0, i32 1, !dbg !12461
  store i16 %conv139, i16* %neg142, align 8, !dbg !12462
  store i32 1, i32* %changed, align 4, !dbg !12463
  store i32 1, i32* %canonicalized, align 4, !dbg !12464
  br label %if.end143, !dbg !12465

if.end143:                                        ; preds = %if.then120, %sw.bb117
  br label %sw.epilog, !dbg !12466

sw.bb144:                                         ; preds = %for.body
  %67 = load i32, i32* %n_constants, align 4, !dbg !12467
  %inc145 = add nsw i32 %67, 1, !dbg !12467
  store i32 %inc145, i32* %n_constants, align 4, !dbg !12467
  %68 = load i32, i32* %this_neg, align 4, !dbg !12468
  %tobool146 = icmp ne i32 %68, 0, !dbg !12468
  br i1 %tobool146, label %if.then147, label %if.end154, !dbg !12470

if.then147:                                       ; preds = %sw.bb144
  %69 = load i32, i32* %mode.addr, align 4, !dbg !12471
  %70 = load %struct.rtx_def*, %struct.rtx_def** %this_op, align 8, !dbg !12473
  %call = call %struct.rtx_def* @neg_const_int(i32 %69, %struct.rtx_def* %70), !dbg !12474
  %71 = load i32, i32* %i, align 4, !dbg !12475
  %idxprom148 = sext i32 %71 to i64, !dbg !12476
  %arrayidx149 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom148, !dbg !12476
  %op150 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx149, i32 0, i32 0, !dbg !12477
  store %struct.rtx_def* %call, %struct.rtx_def** %op150, align 16, !dbg !12478
  %72 = load i32, i32* %i, align 4, !dbg !12479
  %idxprom151 = sext i32 %72 to i64, !dbg !12480
  %arrayidx152 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom151, !dbg !12480
  %neg153 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx152, i32 0, i32 1, !dbg !12481
  store i16 0, i16* %neg153, align 8, !dbg !12482
  store i32 1, i32* %changed, align 4, !dbg !12483
  store i32 1, i32* %canonicalized, align 4, !dbg !12484
  br label %if.end154, !dbg !12485

if.end154:                                        ; preds = %if.then147, %sw.bb144
  br label %sw.epilog, !dbg !12486

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !12487

sw.epilog:                                        ; preds = %sw.default, %if.end154, %if.end143, %if.end116, %sw.bb35, %if.end
  br label %for.inc, !dbg !12488

for.inc:                                          ; preds = %sw.epilog
  %73 = load i32, i32* %i, align 4, !dbg !12489
  %inc155 = add nsw i32 %73, 1, !dbg !12489
  store i32 %inc155, i32* %i, align 4, !dbg !12489
  br label %for.cond, !dbg !12490, !llvm.loop !12491

for.end:                                          ; preds = %for.cond
  br label %do.cond, !dbg !12493

do.cond:                                          ; preds = %for.end
  %74 = load i32, i32* %changed, align 4, !dbg !12494
  %tobool156 = icmp ne i32 %74, 0, !dbg !12493
  br i1 %tobool156, label %do.body, label %do.end, !dbg !12493, !llvm.loop !12495

do.end:                                           ; preds = %do.cond
  %75 = load i32, i32* %n_constants, align 4, !dbg !12497
  %cmp157 = icmp sgt i32 %75, 1, !dbg !12499
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !12500

if.then159:                                       ; preds = %do.end
  store i32 1, i32* %canonicalized, align 4, !dbg !12501
  br label %if.end160, !dbg !12502

if.end160:                                        ; preds = %if.then159, %do.end
  %76 = load i32, i32* %n_ops, align 4, !dbg !12503
  %cmp161 = icmp sge i32 %76, 2, !dbg !12503
  br i1 %cmp161, label %cond.false, label %cond.true, !dbg !12503

cond.true:                                        ; preds = %if.end160
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i32 3725, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !12503
  br label %cond.end, !dbg !12503

cond.false:                                       ; preds = %if.end160
  br label %cond.end, !dbg !12503

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12503
  %77 = load i32, i32* %n_ops, align 4, !dbg !12504
  %cmp163 = icmp eq i32 %77, 2, !dbg !12506
  br i1 %cmp163, label %if.then165, label %if.end207, !dbg !12507

if.then165:                                       ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %code166, metadata !12508, metadata !DIExpression()), !dbg !12510
  %arrayidx167 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12511
  %neg168 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx167, i32 0, i32 1, !dbg !12512
  %78 = load i16, i16* %neg168, align 8, !dbg !12512
  %conv169 = sext i16 %78 to i32, !dbg !12511
  %tobool170 = icmp ne i32 %conv169, 0, !dbg !12511
  br i1 %tobool170, label %lor.end, label %lor.rhs, !dbg !12513

lor.rhs:                                          ; preds = %if.then165
  %arrayidx171 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12514
  %neg172 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx171, i32 0, i32 1, !dbg !12515
  %79 = load i16, i16* %neg172, align 8, !dbg !12515
  %conv173 = sext i16 %79 to i32, !dbg !12514
  %tobool174 = icmp ne i32 %conv173, 0, !dbg !12513
  br label %lor.end, !dbg !12513

lor.end:                                          ; preds = %lor.rhs, %if.then165
  %80 = phi i1 [ true, %if.then165 ], [ %tobool174, %lor.rhs ]
  %81 = zext i1 %80 to i64, !dbg !12511
  %cond175 = select i1 %80, i32 50, i32 49, !dbg !12511
  store i32 %cond175, i32* %code166, align 4, !dbg !12510
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs, metadata !12516, metadata !DIExpression()), !dbg !12517
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs, metadata !12518, metadata !DIExpression()), !dbg !12519
  %arrayidx176 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12520
  %neg177 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx176, i32 0, i32 1, !dbg !12522
  %82 = load i16, i16* %neg177, align 8, !dbg !12522
  %conv178 = sext i16 %82 to i32, !dbg !12520
  %tobool179 = icmp ne i32 %conv178, 0, !dbg !12520
  br i1 %tobool179, label %land.lhs.true180, label %if.else, !dbg !12523

land.lhs.true180:                                 ; preds = %lor.end
  %arrayidx181 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12524
  %neg182 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx181, i32 0, i32 1, !dbg !12525
  %83 = load i16, i16* %neg182, align 8, !dbg !12525
  %conv183 = sext i16 %83 to i32, !dbg !12524
  %tobool184 = icmp ne i32 %conv183, 0, !dbg !12524
  br i1 %tobool184, label %if.then185, label %if.else, !dbg !12526

if.then185:                                       ; preds = %land.lhs.true180
  %84 = load i32, i32* %mode.addr, align 4, !dbg !12527
  %arrayidx186 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12527
  %op187 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx186, i32 0, i32 0, !dbg !12527
  %85 = load %struct.rtx_def*, %struct.rtx_def** %op187, align 16, !dbg !12527
  %call188 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %84, %struct.rtx_def* %85), !dbg !12527
  store %struct.rtx_def* %call188, %struct.rtx_def** %lhs, align 8, !dbg !12529
  %arrayidx189 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12530
  %op190 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx189, i32 0, i32 0, !dbg !12531
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op190, align 16, !dbg !12531
  store %struct.rtx_def* %86, %struct.rtx_def** %rhs, align 8, !dbg !12532
  br label %if.end205, !dbg !12533

if.else:                                          ; preds = %land.lhs.true180, %lor.end
  %arrayidx191 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12534
  %neg192 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx191, i32 0, i32 1, !dbg !12536
  %87 = load i16, i16* %neg192, align 8, !dbg !12536
  %tobool193 = icmp ne i16 %87, 0, !dbg !12534
  br i1 %tobool193, label %if.then194, label %if.else199, !dbg !12537

if.then194:                                       ; preds = %if.else
  %arrayidx195 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12538
  %op196 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx195, i32 0, i32 0, !dbg !12540
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op196, align 16, !dbg !12540
  store %struct.rtx_def* %88, %struct.rtx_def** %lhs, align 8, !dbg !12541
  %arrayidx197 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12542
  %op198 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx197, i32 0, i32 0, !dbg !12543
  %89 = load %struct.rtx_def*, %struct.rtx_def** %op198, align 16, !dbg !12543
  store %struct.rtx_def* %89, %struct.rtx_def** %rhs, align 8, !dbg !12544
  br label %if.end204, !dbg !12545

if.else199:                                       ; preds = %if.else
  %arrayidx200 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12546
  %op201 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx200, i32 0, i32 0, !dbg !12548
  %90 = load %struct.rtx_def*, %struct.rtx_def** %op201, align 16, !dbg !12548
  store %struct.rtx_def* %90, %struct.rtx_def** %lhs, align 8, !dbg !12549
  %arrayidx202 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12550
  %op203 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx202, i32 0, i32 0, !dbg !12551
  %91 = load %struct.rtx_def*, %struct.rtx_def** %op203, align 16, !dbg !12551
  store %struct.rtx_def* %91, %struct.rtx_def** %rhs, align 8, !dbg !12552
  br label %if.end204

if.end204:                                        ; preds = %if.else199, %if.then194
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.then185
  %92 = load i32, i32* %code166, align 4, !dbg !12553
  %93 = load i32, i32* %mode.addr, align 4, !dbg !12554
  %94 = load %struct.rtx_def*, %struct.rtx_def** %lhs, align 8, !dbg !12555
  %95 = load %struct.rtx_def*, %struct.rtx_def** %rhs, align 8, !dbg !12556
  %call206 = call %struct.rtx_def* @simplify_const_binary_operation(i32 %92, i32 %93, %struct.rtx_def* %94, %struct.rtx_def* %95), !dbg !12557
  store %struct.rtx_def* %call206, %struct.rtx_def** %retval, align 8, !dbg !12558
  br label %return, !dbg !12558

if.end207:                                        ; preds = %cond.end
  br label %do.body208, !dbg !12559

do.body208:                                       ; preds = %do.cond449, %if.end207
  store i32 1, i32* %i, align 4, !dbg !12560
  br label %for.cond209, !dbg !12563

for.cond209:                                      ; preds = %for.inc243, %do.body208
  %96 = load i32, i32* %i, align 4, !dbg !12564
  %97 = load i32, i32* %n_ops, align 4, !dbg !12566
  %cmp210 = icmp slt i32 %96, %97, !dbg !12567
  br i1 %cmp210, label %for.body212, label %for.end245, !dbg !12568

for.body212:                                      ; preds = %for.cond209
  call void @llvm.dbg.declare(metadata %struct.simplify_plus_minus_op_data* %save, metadata !12569, metadata !DIExpression()), !dbg !12571
  %98 = load i32, i32* %i, align 4, !dbg !12572
  %sub = sub nsw i32 %98, 1, !dbg !12573
  store i32 %sub, i32* %j, align 4, !dbg !12574
  %99 = load i32, i32* %j, align 4, !dbg !12575
  %idxprom213 = sext i32 %99 to i64, !dbg !12577
  %arrayidx214 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom213, !dbg !12577
  %op215 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx214, i32 0, i32 0, !dbg !12578
  %100 = load %struct.rtx_def*, %struct.rtx_def** %op215, align 16, !dbg !12578
  %101 = load i32, i32* %i, align 4, !dbg !12579
  %idxprom216 = sext i32 %101 to i64, !dbg !12580
  %arrayidx217 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom216, !dbg !12580
  %op218 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx217, i32 0, i32 0, !dbg !12581
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op218, align 16, !dbg !12581
  %call219 = call zeroext i8 @simplify_plus_minus_op_data_cmp(%struct.rtx_def* %100, %struct.rtx_def* %102), !dbg !12582
  %tobool220 = icmp ne i8 %call219, 0, !dbg !12582
  br i1 %tobool220, label %if.end222, label %if.then221, !dbg !12583

if.then221:                                       ; preds = %for.body212
  br label %for.inc243, !dbg !12584

if.end222:                                        ; preds = %for.body212
  store i32 1, i32* %canonicalized, align 4, !dbg !12585
  %103 = load i32, i32* %i, align 4, !dbg !12586
  %idxprom223 = sext i32 %103 to i64, !dbg !12587
  %arrayidx224 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom223, !dbg !12587
  %104 = bitcast %struct.simplify_plus_minus_op_data* %save to i8*, !dbg !12587
  %105 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx224 to i8*, !dbg !12587
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 16 %105, i64 16, i1 false), !dbg !12587
  br label %do.body225, !dbg !12588

do.body225:                                       ; preds = %land.end, %if.end222
  %106 = load i32, i32* %j, align 4, !dbg !12589
  %add = add nsw i32 %106, 1, !dbg !12590
  %idxprom226 = sext i32 %add to i64, !dbg !12591
  %arrayidx227 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom226, !dbg !12591
  %107 = load i32, i32* %j, align 4, !dbg !12592
  %idxprom228 = sext i32 %107 to i64, !dbg !12593
  %arrayidx229 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom228, !dbg !12593
  %108 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx227 to i8*, !dbg !12593
  %109 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx229 to i8*, !dbg !12593
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %108, i8* align 16 %109, i64 16, i1 false), !dbg !12593
  br label %do.cond230, !dbg !12591

do.cond230:                                       ; preds = %do.body225
  %110 = load i32, i32* %j, align 4, !dbg !12594
  %dec = add nsw i32 %110, -1, !dbg !12594
  store i32 %dec, i32* %j, align 4, !dbg !12594
  %tobool231 = icmp ne i32 %110, 0, !dbg !12594
  br i1 %tobool231, label %land.rhs, label %land.end, !dbg !12595

land.rhs:                                         ; preds = %do.cond230
  %111 = load i32, i32* %j, align 4, !dbg !12596
  %idxprom232 = sext i32 %111 to i64, !dbg !12597
  %arrayidx233 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom232, !dbg !12597
  %op234 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx233, i32 0, i32 0, !dbg !12598
  %112 = load %struct.rtx_def*, %struct.rtx_def** %op234, align 16, !dbg !12598
  %op235 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %save, i32 0, i32 0, !dbg !12599
  %113 = load %struct.rtx_def*, %struct.rtx_def** %op235, align 8, !dbg !12599
  %call236 = call zeroext i8 @simplify_plus_minus_op_data_cmp(%struct.rtx_def* %112, %struct.rtx_def* %113), !dbg !12600
  %conv237 = zext i8 %call236 to i32, !dbg !12600
  %tobool238 = icmp ne i32 %conv237, 0, !dbg !12595
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond230
  %114 = phi i1 [ false, %do.cond230 ], [ %tobool238, %land.rhs ], !dbg !12601
  br i1 %114, label %do.body225, label %do.end239, !dbg !12591, !llvm.loop !12602

do.end239:                                        ; preds = %land.end
  %115 = load i32, i32* %j, align 4, !dbg !12604
  %add240 = add nsw i32 %115, 1, !dbg !12605
  %idxprom241 = sext i32 %add240 to i64, !dbg !12606
  %arrayidx242 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom241, !dbg !12606
  %116 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx242 to i8*, !dbg !12607
  %117 = bitcast %struct.simplify_plus_minus_op_data* %save to i8*, !dbg !12607
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %116, i8* align 8 %117, i64 16, i1 false), !dbg !12607
  br label %for.inc243, !dbg !12608

for.inc243:                                       ; preds = %do.end239, %if.then221
  %118 = load i32, i32* %i, align 4, !dbg !12609
  %inc244 = add nsw i32 %118, 1, !dbg !12609
  store i32 %inc244, i32* %i, align 4, !dbg !12609
  br label %for.cond209, !dbg !12610, !llvm.loop !12611

for.end245:                                       ; preds = %for.cond209
  store i32 0, i32* %changed, align 4, !dbg !12613
  %119 = load i32, i32* %n_ops, align 4, !dbg !12614
  %sub246 = sub nsw i32 %119, 1, !dbg !12616
  store i32 %sub246, i32* %i, align 4, !dbg !12617
  br label %for.cond247, !dbg !12618

for.cond247:                                      ; preds = %for.inc425, %for.end245
  %120 = load i32, i32* %i, align 4, !dbg !12619
  %cmp248 = icmp sgt i32 %120, 0, !dbg !12621
  br i1 %cmp248, label %for.body250, label %for.end427, !dbg !12622

for.body250:                                      ; preds = %for.cond247
  %121 = load i32, i32* %i, align 4, !dbg !12623
  %sub251 = sub nsw i32 %121, 1, !dbg !12625
  store i32 %sub251, i32* %j, align 4, !dbg !12626
  br label %for.cond252, !dbg !12627

for.cond252:                                      ; preds = %for.inc422, %for.body250
  %122 = load i32, i32* %j, align 4, !dbg !12628
  %cmp253 = icmp sge i32 %122, 0, !dbg !12630
  br i1 %cmp253, label %for.body255, label %for.end424, !dbg !12631

for.body255:                                      ; preds = %for.cond252
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %lhs256, metadata !12632, metadata !DIExpression()), !dbg !12634
  %123 = load i32, i32* %j, align 4, !dbg !12635
  %idxprom257 = sext i32 %123 to i64, !dbg !12636
  %arrayidx258 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom257, !dbg !12636
  %op259 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx258, i32 0, i32 0, !dbg !12637
  %124 = load %struct.rtx_def*, %struct.rtx_def** %op259, align 16, !dbg !12637
  store %struct.rtx_def* %124, %struct.rtx_def** %lhs256, align 8, !dbg !12634
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rhs260, metadata !12638, metadata !DIExpression()), !dbg !12639
  %125 = load i32, i32* %i, align 4, !dbg !12640
  %idxprom261 = sext i32 %125 to i64, !dbg !12641
  %arrayidx262 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom261, !dbg !12641
  %op263 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx262, i32 0, i32 0, !dbg !12642
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op263, align 16, !dbg !12642
  store %struct.rtx_def* %126, %struct.rtx_def** %rhs260, align 8, !dbg !12639
  call void @llvm.dbg.declare(metadata i32* %lneg, metadata !12643, metadata !DIExpression()), !dbg !12644
  %127 = load i32, i32* %j, align 4, !dbg !12645
  %idxprom264 = sext i32 %127 to i64, !dbg !12646
  %arrayidx265 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom264, !dbg !12646
  %neg266 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx265, i32 0, i32 1, !dbg !12647
  %128 = load i16, i16* %neg266, align 8, !dbg !12647
  %conv267 = sext i16 %128 to i32, !dbg !12646
  store i32 %conv267, i32* %lneg, align 4, !dbg !12644
  call void @llvm.dbg.declare(metadata i32* %rneg, metadata !12648, metadata !DIExpression()), !dbg !12649
  %129 = load i32, i32* %i, align 4, !dbg !12650
  %idxprom268 = sext i32 %129 to i64, !dbg !12651
  %arrayidx269 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom268, !dbg !12651
  %neg270 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx269, i32 0, i32 1, !dbg !12652
  %130 = load i16, i16* %neg270, align 8, !dbg !12652
  %conv271 = sext i16 %130 to i32, !dbg !12651
  store i32 %conv271, i32* %rneg, align 4, !dbg !12649
  %131 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12653
  %cmp272 = icmp ne %struct.rtx_def* %131, null, !dbg !12655
  br i1 %cmp272, label %land.lhs.true274, label %if.end421, !dbg !12656

land.lhs.true274:                                 ; preds = %for.body255
  %132 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12657
  %cmp275 = icmp ne %struct.rtx_def* %132, null, !dbg !12658
  br i1 %cmp275, label %if.then277, label %if.end421, !dbg !12659

if.then277:                                       ; preds = %land.lhs.true274
  call void @llvm.dbg.declare(metadata i32* %ncode, metadata !12660, metadata !DIExpression()), !dbg !12662
  store i32 49, i32* %ncode, align 4, !dbg !12662
  %133 = load i32, i32* %lneg, align 4, !dbg !12663
  %134 = load i32, i32* %rneg, align 4, !dbg !12665
  %cmp278 = icmp ne i32 %133, %134, !dbg !12666
  br i1 %cmp278, label %if.then280, label %if.else284, !dbg !12667

if.then280:                                       ; preds = %if.then277
  store i32 50, i32* %ncode, align 4, !dbg !12668
  %135 = load i32, i32* %lneg, align 4, !dbg !12670
  %tobool281 = icmp ne i32 %135, 0, !dbg !12670
  br i1 %tobool281, label %if.then282, label %if.end283, !dbg !12672

if.then282:                                       ; preds = %if.then280
  %136 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12673
  store %struct.rtx_def* %136, %struct.rtx_def** %tem, align 8, !dbg !12674
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12675
  store %struct.rtx_def* %137, %struct.rtx_def** %lhs256, align 8, !dbg !12676
  %138 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12677
  store %struct.rtx_def* %138, %struct.rtx_def** %rhs260, align 8, !dbg !12678
  br label %if.end283, !dbg !12679

if.end283:                                        ; preds = %if.then282, %if.then280
  br label %if.end289, !dbg !12680

if.else284:                                       ; preds = %if.then277
  %139 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12681
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12683
  %call285 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %139, %struct.rtx_def* %140), !dbg !12684
  %tobool286 = icmp ne i8 %call285, 0, !dbg !12684
  br i1 %tobool286, label %if.then287, label %if.end288, !dbg !12685

if.then287:                                       ; preds = %if.else284
  %141 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12686
  store %struct.rtx_def* %141, %struct.rtx_def** %tem, align 8, !dbg !12687
  %142 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12688
  store %struct.rtx_def* %142, %struct.rtx_def** %lhs256, align 8, !dbg !12689
  %143 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12690
  store %struct.rtx_def* %143, %struct.rtx_def** %rhs260, align 8, !dbg !12691
  br label %if.end288, !dbg !12692

if.end288:                                        ; preds = %if.then287, %if.else284
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end283
  %144 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12693
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !12693
  %bf.load290 = load i32, i32* %145, align 8, !dbg !12693
  %bf.clear291 = and i32 %bf.load290, 65535, !dbg !12693
  %cmp292 = icmp eq i32 %bf.clear291, 35, !dbg !12695
  br i1 %cmp292, label %land.lhs.true298, label %lor.lhs.false, !dbg !12696

lor.lhs.false:                                    ; preds = %if.end289
  %146 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12697
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !12697
  %bf.load294 = load i32, i32* %147, align 8, !dbg !12697
  %bf.clear295 = and i32 %bf.load294, 65535, !dbg !12697
  %cmp296 = icmp eq i32 %bf.clear295, 30, !dbg !12697
  br i1 %cmp296, label %land.lhs.true298, label %if.else347, !dbg !12698

land.lhs.true298:                                 ; preds = %lor.lhs.false, %if.end289
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12699
  %149 = bitcast %struct.rtx_def* %148 to i32*, !dbg !12699
  %bf.load299 = load i32, i32* %149, align 8, !dbg !12699
  %bf.clear300 = and i32 %bf.load299, 65535, !dbg !12699
  %cmp301 = icmp eq i32 %bf.clear300, 35, !dbg !12700
  br i1 %cmp301, label %if.then308, label %lor.lhs.false303, !dbg !12701

lor.lhs.false303:                                 ; preds = %land.lhs.true298
  %150 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12702
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !12702
  %bf.load304 = load i32, i32* %151, align 8, !dbg !12702
  %bf.clear305 = and i32 %bf.load304, 65535, !dbg !12702
  %cmp306 = icmp eq i32 %bf.clear305, 30, !dbg !12702
  br i1 %cmp306, label %if.then308, label %if.else347, !dbg !12703

if.then308:                                       ; preds = %lor.lhs.false303, %land.lhs.true298
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem_lhs, metadata !12704, metadata !DIExpression()), !dbg !12706
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem_rhs, metadata !12707, metadata !DIExpression()), !dbg !12708
  %152 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12709
  %153 = bitcast %struct.rtx_def* %152 to i32*, !dbg !12709
  %bf.load309 = load i32, i32* %153, align 8, !dbg !12709
  %bf.clear310 = and i32 %bf.load309, 65535, !dbg !12709
  %cmp311 = icmp eq i32 %bf.clear310, 35, !dbg !12710
  br i1 %cmp311, label %cond.true313, label %cond.false318, !dbg !12709

cond.true313:                                     ; preds = %if.then308
  %154 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12711
  %u314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1, !dbg !12711
  %fld315 = bitcast %union.u* %u314 to [1 x %union.rtunion_def]*, !dbg !12711
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i64 0, i64 0, !dbg !12711
  %rt_rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**, !dbg !12711
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx317, align 8, !dbg !12711
  br label %cond.end319, !dbg !12709

cond.false318:                                    ; preds = %if.then308
  %156 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12712
  br label %cond.end319, !dbg !12709

cond.end319:                                      ; preds = %cond.false318, %cond.true313
  %cond320 = phi %struct.rtx_def* [ %155, %cond.true313 ], [ %156, %cond.false318 ], !dbg !12709
  store %struct.rtx_def* %cond320, %struct.rtx_def** %tem_lhs, align 8, !dbg !12713
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12714
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !12714
  %bf.load321 = load i32, i32* %158, align 8, !dbg !12714
  %bf.clear322 = and i32 %bf.load321, 65535, !dbg !12714
  %cmp323 = icmp eq i32 %bf.clear322, 35, !dbg !12715
  br i1 %cmp323, label %cond.true325, label %cond.false330, !dbg !12714

cond.true325:                                     ; preds = %cond.end319
  %159 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12716
  %u326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %159, i32 0, i32 1, !dbg !12716
  %fld327 = bitcast %union.u* %u326 to [1 x %union.rtunion_def]*, !dbg !12716
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i64 0, i64 0, !dbg !12716
  %rt_rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**, !dbg !12716
  %160 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx329, align 8, !dbg !12716
  br label %cond.end331, !dbg !12714

cond.false330:                                    ; preds = %cond.end319
  %161 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12717
  br label %cond.end331, !dbg !12714

cond.end331:                                      ; preds = %cond.false330, %cond.true325
  %cond332 = phi %struct.rtx_def* [ %160, %cond.true325 ], [ %161, %cond.false330 ], !dbg !12714
  store %struct.rtx_def* %cond332, %struct.rtx_def** %tem_rhs, align 8, !dbg !12718
  %162 = load i32, i32* %ncode, align 4, !dbg !12719
  %163 = load i32, i32* %mode.addr, align 4, !dbg !12720
  %164 = load %struct.rtx_def*, %struct.rtx_def** %tem_lhs, align 8, !dbg !12721
  %165 = load %struct.rtx_def*, %struct.rtx_def** %tem_rhs, align 8, !dbg !12722
  %call333 = call %struct.rtx_def* @simplify_binary_operation(i32 %162, i32 %163, %struct.rtx_def* %164, %struct.rtx_def* %165), !dbg !12723
  store %struct.rtx_def* %call333, %struct.rtx_def** %tem, align 8, !dbg !12724
  %166 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12725
  %tobool334 = icmp ne %struct.rtx_def* %166, null, !dbg !12725
  br i1 %tobool334, label %land.lhs.true335, label %if.end346, !dbg !12727

land.lhs.true335:                                 ; preds = %cond.end331
  %167 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12728
  %168 = bitcast %struct.rtx_def* %167 to i32*, !dbg !12728
  %bf.load336 = load i32, i32* %168, align 8, !dbg !12728
  %bf.clear337 = and i32 %bf.load336, 65535, !dbg !12728
  %idxprom338 = sext i32 %bf.clear337 to i64, !dbg !12728
  %arrayidx339 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom338, !dbg !12728
  %169 = load i32, i32* %arrayidx339, align 4, !dbg !12728
  %cmp340 = icmp eq i32 %169, 9, !dbg !12728
  br i1 %cmp340, label %if.end346, label %if.then342, !dbg !12729

if.then342:                                       ; preds = %land.lhs.true335
  %170 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12730
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !12730
  %bf.load343 = load i32, i32* %171, align 8, !dbg !12730
  %bf.lshr = lshr i32 %bf.load343, 16, !dbg !12730
  %bf.clear344 = and i32 %bf.lshr, 255, !dbg !12730
  %172 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12730
  %call345 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 35, i32 %bf.clear344, %struct.rtx_def* %172), !dbg !12730
  store %struct.rtx_def* %call345, %struct.rtx_def** %tem, align 8, !dbg !12731
  br label %if.end346, !dbg !12732

if.end346:                                        ; preds = %if.then342, %land.lhs.true335, %cond.end331
  br label %if.end349, !dbg !12733

if.else347:                                       ; preds = %lor.lhs.false303, %lor.lhs.false
  %173 = load i32, i32* %ncode, align 4, !dbg !12734
  %174 = load i32, i32* %mode.addr, align 4, !dbg !12735
  %175 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12736
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12737
  %call348 = call %struct.rtx_def* @simplify_binary_operation(i32 %173, i32 %174, %struct.rtx_def* %175, %struct.rtx_def* %176), !dbg !12738
  store %struct.rtx_def* %call348, %struct.rtx_def** %tem, align 8, !dbg !12739
  br label %if.end349

if.end349:                                        ; preds = %if.else347, %if.end346
  %177 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12740
  %tobool350 = icmp ne %struct.rtx_def* %177, null, !dbg !12740
  br i1 %tobool350, label %land.lhs.true351, label %if.end420, !dbg !12742

land.lhs.true351:                                 ; preds = %if.end349
  %178 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12743
  %179 = bitcast %struct.rtx_def* %178 to i32*, !dbg !12743
  %bf.load352 = load i32, i32* %179, align 8, !dbg !12743
  %bf.clear353 = and i32 %bf.load352, 65535, !dbg !12743
  %cmp354 = icmp eq i32 %bf.clear353, 35, !dbg !12744
  br i1 %cmp354, label %land.lhs.true356, label %if.then387, !dbg !12745

land.lhs.true356:                                 ; preds = %land.lhs.true351
  %180 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12746
  %u357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %180, i32 0, i32 1, !dbg !12746
  %fld358 = bitcast %union.u* %u357 to [1 x %union.rtunion_def]*, !dbg !12746
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i64 0, i64 0, !dbg !12746
  %rt_rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**, !dbg !12746
  %181 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx360, align 8, !dbg !12746
  %182 = bitcast %struct.rtx_def* %181 to i32*, !dbg !12746
  %bf.load361 = load i32, i32* %182, align 8, !dbg !12746
  %bf.clear362 = and i32 %bf.load361, 65535, !dbg !12746
  %183 = load i32, i32* %ncode, align 4, !dbg !12747
  %cmp363 = icmp eq i32 %bf.clear362, %183, !dbg !12748
  br i1 %cmp363, label %land.lhs.true365, label %if.then387, !dbg !12749

land.lhs.true365:                                 ; preds = %land.lhs.true356
  %184 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12750
  %u366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %184, i32 0, i32 1, !dbg !12750
  %fld367 = bitcast %union.u* %u366 to [1 x %union.rtunion_def]*, !dbg !12750
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i64 0, i64 0, !dbg !12750
  %rt_rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**, !dbg !12750
  %185 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx369, align 8, !dbg !12750
  %u370 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1, !dbg !12750
  %fld371 = bitcast %union.u* %u370 to [1 x %union.rtunion_def]*, !dbg !12750
  %arrayidx372 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld371, i64 0, i64 0, !dbg !12750
  %rt_rtx373 = bitcast %union.rtunion_def* %arrayidx372 to %struct.rtx_def**, !dbg !12750
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx373, align 8, !dbg !12750
  %187 = load %struct.rtx_def*, %struct.rtx_def** %lhs256, align 8, !dbg !12751
  %cmp374 = icmp eq %struct.rtx_def* %186, %187, !dbg !12752
  br i1 %cmp374, label %land.lhs.true376, label %if.then387, !dbg !12753

land.lhs.true376:                                 ; preds = %land.lhs.true365
  %188 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12754
  %u377 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !12754
  %fld378 = bitcast %union.u* %u377 to [1 x %union.rtunion_def]*, !dbg !12754
  %arrayidx379 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld378, i64 0, i64 0, !dbg !12754
  %rt_rtx380 = bitcast %union.rtunion_def* %arrayidx379 to %struct.rtx_def**, !dbg !12754
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx380, align 8, !dbg !12754
  %u381 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1, !dbg !12754
  %fld382 = bitcast %union.u* %u381 to [1 x %union.rtunion_def]*, !dbg !12754
  %arrayidx383 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld382, i64 0, i64 1, !dbg !12754
  %rt_rtx384 = bitcast %union.rtunion_def* %arrayidx383 to %struct.rtx_def**, !dbg !12754
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx384, align 8, !dbg !12754
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rhs260, align 8, !dbg !12755
  %cmp385 = icmp eq %struct.rtx_def* %190, %191, !dbg !12756
  br i1 %cmp385, label %if.end420, label %if.then387, !dbg !12757

if.then387:                                       ; preds = %land.lhs.true376, %land.lhs.true365, %land.lhs.true356, %land.lhs.true351
  %192 = load i32, i32* %rneg, align 4, !dbg !12758
  %193 = load i32, i32* %lneg, align 4, !dbg !12760
  %and = and i32 %193, %192, !dbg !12760
  store i32 %and, i32* %lneg, align 4, !dbg !12760
  %194 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12761
  %195 = bitcast %struct.rtx_def* %194 to i32*, !dbg !12761
  %bf.load388 = load i32, i32* %195, align 8, !dbg !12761
  %bf.clear389 = and i32 %bf.load388, 65535, !dbg !12761
  %cmp390 = icmp eq i32 %bf.clear389, 51, !dbg !12763
  br i1 %cmp390, label %if.then392, label %if.end400, !dbg !12764

if.then392:                                       ; preds = %if.then387
  %196 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12765
  %u393 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !12765
  %fld394 = bitcast %union.u* %u393 to [1 x %union.rtunion_def]*, !dbg !12765
  %arrayidx395 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld394, i64 0, i64 0, !dbg !12765
  %rt_rtx396 = bitcast %union.rtunion_def* %arrayidx395 to %struct.rtx_def**, !dbg !12765
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx396, align 8, !dbg !12765
  store %struct.rtx_def* %197, %struct.rtx_def** %tem, align 8, !dbg !12766
  %198 = load i32, i32* %lneg, align 4, !dbg !12767
  %tobool397 = icmp ne i32 %198, 0, !dbg !12768
  %lnot398 = xor i1 %tobool397, true, !dbg !12768
  %lnot.ext399 = zext i1 %lnot398 to i32, !dbg !12768
  store i32 %lnot.ext399, i32* %lneg, align 4, !dbg !12769
  br label %if.end400, !dbg !12770

if.end400:                                        ; preds = %if.then392, %if.then387
  %199 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12771
  %200 = bitcast %struct.rtx_def* %199 to i32*, !dbg !12771
  %bf.load401 = load i32, i32* %200, align 8, !dbg !12771
  %bf.clear402 = and i32 %bf.load401, 65535, !dbg !12771
  %cmp403 = icmp eq i32 %bf.clear402, 30, !dbg !12771
  br i1 %cmp403, label %land.lhs.true405, label %if.end409, !dbg !12773

land.lhs.true405:                                 ; preds = %if.end400
  %201 = load i32, i32* %lneg, align 4, !dbg !12774
  %tobool406 = icmp ne i32 %201, 0, !dbg !12774
  br i1 %tobool406, label %if.then407, label %if.end409, !dbg !12775

if.then407:                                       ; preds = %land.lhs.true405
  %202 = load i32, i32* %mode.addr, align 4, !dbg !12776
  %203 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12777
  %call408 = call %struct.rtx_def* @neg_const_int(i32 %202, %struct.rtx_def* %203), !dbg !12778
  store %struct.rtx_def* %call408, %struct.rtx_def** %tem, align 8, !dbg !12779
  store i32 0, i32* %lneg, align 4, !dbg !12780
  br label %if.end409, !dbg !12781

if.end409:                                        ; preds = %if.then407, %land.lhs.true405, %if.end400
  %204 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12782
  %205 = load i32, i32* %i, align 4, !dbg !12783
  %idxprom410 = sext i32 %205 to i64, !dbg !12784
  %arrayidx411 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom410, !dbg !12784
  %op412 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx411, i32 0, i32 0, !dbg !12785
  store %struct.rtx_def* %204, %struct.rtx_def** %op412, align 16, !dbg !12786
  %206 = load i32, i32* %lneg, align 4, !dbg !12787
  %conv413 = trunc i32 %206 to i16, !dbg !12787
  %207 = load i32, i32* %i, align 4, !dbg !12788
  %idxprom414 = sext i32 %207 to i64, !dbg !12789
  %arrayidx415 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom414, !dbg !12789
  %neg416 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx415, i32 0, i32 1, !dbg !12790
  store i16 %conv413, i16* %neg416, align 8, !dbg !12791
  %208 = load i32, i32* %j, align 4, !dbg !12792
  %idxprom417 = sext i32 %208 to i64, !dbg !12793
  %arrayidx418 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom417, !dbg !12793
  %op419 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx418, i32 0, i32 0, !dbg !12794
  store %struct.rtx_def* null, %struct.rtx_def** %op419, align 16, !dbg !12795
  store i32 1, i32* %changed, align 4, !dbg !12796
  store i32 1, i32* %canonicalized, align 4, !dbg !12797
  br label %if.end420, !dbg !12798

if.end420:                                        ; preds = %if.end409, %land.lhs.true376, %if.end349
  br label %if.end421, !dbg !12799

if.end421:                                        ; preds = %if.end420, %land.lhs.true274, %for.body255
  br label %for.inc422, !dbg !12800

for.inc422:                                       ; preds = %if.end421
  %209 = load i32, i32* %j, align 4, !dbg !12801
  %dec423 = add nsw i32 %209, -1, !dbg !12801
  store i32 %dec423, i32* %j, align 4, !dbg !12801
  br label %for.cond252, !dbg !12802, !llvm.loop !12803

for.end424:                                       ; preds = %for.cond252
  br label %for.inc425, !dbg !12804

for.inc425:                                       ; preds = %for.end424
  %210 = load i32, i32* %i, align 4, !dbg !12805
  %dec426 = add nsw i32 %210, -1, !dbg !12805
  store i32 %dec426, i32* %i, align 4, !dbg !12805
  br label %for.cond247, !dbg !12806, !llvm.loop !12807

for.end427:                                       ; preds = %for.cond247
  %211 = load i32, i32* %canonicalized, align 4, !dbg !12809
  %tobool428 = icmp ne i32 %211, 0, !dbg !12809
  br i1 %tobool428, label %if.end430, label %if.then429, !dbg !12811

if.then429:                                       ; preds = %for.end427
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !12812
  br label %return, !dbg !12812

if.end430:                                        ; preds = %for.end427
  store i32 0, i32* %i, align 4, !dbg !12813
  store i32 0, i32* %j, align 4, !dbg !12815
  br label %for.cond431, !dbg !12816

for.cond431:                                      ; preds = %for.inc446, %if.end430
  %212 = load i32, i32* %j, align 4, !dbg !12817
  %213 = load i32, i32* %n_ops, align 4, !dbg !12819
  %cmp432 = icmp slt i32 %212, %213, !dbg !12820
  br i1 %cmp432, label %for.body434, label %for.end448, !dbg !12821

for.body434:                                      ; preds = %for.cond431
  %214 = load i32, i32* %j, align 4, !dbg !12822
  %idxprom435 = sext i32 %214 to i64, !dbg !12824
  %arrayidx436 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom435, !dbg !12824
  %op437 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx436, i32 0, i32 0, !dbg !12825
  %215 = load %struct.rtx_def*, %struct.rtx_def** %op437, align 16, !dbg !12825
  %tobool438 = icmp ne %struct.rtx_def* %215, null, !dbg !12824
  br i1 %tobool438, label %if.then439, label %if.end445, !dbg !12826

if.then439:                                       ; preds = %for.body434
  %216 = load i32, i32* %i, align 4, !dbg !12827
  %idxprom440 = sext i32 %216 to i64, !dbg !12829
  %arrayidx441 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom440, !dbg !12829
  %217 = load i32, i32* %j, align 4, !dbg !12830
  %idxprom442 = sext i32 %217 to i64, !dbg !12831
  %arrayidx443 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom442, !dbg !12831
  %218 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx441 to i8*, !dbg !12831
  %219 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx443 to i8*, !dbg !12831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %218, i8* align 16 %219, i64 16, i1 false), !dbg !12831
  %220 = load i32, i32* %i, align 4, !dbg !12832
  %inc444 = add nsw i32 %220, 1, !dbg !12832
  store i32 %inc444, i32* %i, align 4, !dbg !12832
  br label %if.end445, !dbg !12833

if.end445:                                        ; preds = %if.then439, %for.body434
  br label %for.inc446, !dbg !12825

for.inc446:                                       ; preds = %if.end445
  %221 = load i32, i32* %j, align 4, !dbg !12834
  %inc447 = add nsw i32 %221, 1, !dbg !12834
  store i32 %inc447, i32* %j, align 4, !dbg !12834
  br label %for.cond431, !dbg !12835, !llvm.loop !12836

for.end448:                                       ; preds = %for.cond431
  %222 = load i32, i32* %i, align 4, !dbg !12838
  store i32 %222, i32* %n_ops, align 4, !dbg !12839
  br label %do.cond449, !dbg !12840

do.cond449:                                       ; preds = %for.end448
  %223 = load i32, i32* %changed, align 4, !dbg !12841
  %tobool450 = icmp ne i32 %223, 0, !dbg !12840
  br i1 %tobool450, label %do.body208, label %do.end451, !dbg !12840, !llvm.loop !12842

do.end451:                                        ; preds = %do.cond449
  %224 = load i32, i32* %n_ops, align 4, !dbg !12844
  %cmp452 = icmp eq i32 %224, 2, !dbg !12846
  br i1 %cmp452, label %land.lhs.true454, label %if.end481, !dbg !12847

land.lhs.true454:                                 ; preds = %do.end451
  %arrayidx455 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12848
  %op456 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx455, i32 0, i32 0, !dbg !12848
  %225 = load %struct.rtx_def*, %struct.rtx_def** %op456, align 16, !dbg !12848
  %226 = bitcast %struct.rtx_def* %225 to i32*, !dbg !12848
  %bf.load457 = load i32, i32* %226, align 8, !dbg !12848
  %bf.clear458 = and i32 %bf.load457, 65535, !dbg !12848
  %cmp459 = icmp eq i32 %bf.clear458, 30, !dbg !12848
  br i1 %cmp459, label %land.lhs.true461, label %if.end481, !dbg !12849

land.lhs.true461:                                 ; preds = %land.lhs.true454
  %arrayidx462 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12850
  %op463 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx462, i32 0, i32 0, !dbg !12850
  %227 = load %struct.rtx_def*, %struct.rtx_def** %op463, align 16, !dbg !12850
  %228 = bitcast %struct.rtx_def* %227 to i32*, !dbg !12850
  %bf.load464 = load i32, i32* %228, align 8, !dbg !12850
  %bf.clear465 = and i32 %bf.load464, 65535, !dbg !12850
  %idxprom466 = sext i32 %bf.clear465 to i64, !dbg !12850
  %arrayidx467 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom466, !dbg !12850
  %229 = load i32, i32* %arrayidx467, align 4, !dbg !12850
  %cmp468 = icmp eq i32 %229, 9, !dbg !12850
  br i1 %cmp468, label %land.lhs.true470, label %if.end481, !dbg !12851

land.lhs.true470:                                 ; preds = %land.lhs.true461
  %arrayidx471 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12852
  %neg472 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx471, i32 0, i32 1, !dbg !12853
  %230 = load i16, i16* %neg472, align 8, !dbg !12853
  %conv473 = sext i16 %230 to i32, !dbg !12852
  %tobool474 = icmp ne i32 %conv473, 0, !dbg !12852
  br i1 %tobool474, label %if.then475, label %if.end481, !dbg !12854

if.then475:                                       ; preds = %land.lhs.true470
  %231 = load i32, i32* %mode.addr, align 4, !dbg !12855
  %arrayidx476 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 1, !dbg !12855
  %op477 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx476, i32 0, i32 0, !dbg !12855
  %232 = load %struct.rtx_def*, %struct.rtx_def** %op477, align 16, !dbg !12855
  %arrayidx478 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12855
  %op479 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx478, i32 0, i32 0, !dbg !12855
  %233 = load %struct.rtx_def*, %struct.rtx_def** %op479, align 16, !dbg !12855
  %call480 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 50, i32 %231, %struct.rtx_def* %232, %struct.rtx_def* %233), !dbg !12855
  store %struct.rtx_def* %call480, %struct.rtx_def** %retval, align 8, !dbg !12856
  br label %return, !dbg !12856

if.end481:                                        ; preds = %land.lhs.true470, %land.lhs.true461, %land.lhs.true454, %do.end451
  %234 = load i32, i32* %n_ops, align 4, !dbg !12857
  %cmp482 = icmp sgt i32 %234, 1, !dbg !12859
  br i1 %cmp482, label %land.lhs.true484, label %if.end536, !dbg !12860

land.lhs.true484:                                 ; preds = %if.end481
  %235 = load i32, i32* %n_ops, align 4, !dbg !12861
  %sub485 = sub nsw i32 %235, 1, !dbg !12861
  %idxprom486 = sext i32 %sub485 to i64, !dbg !12861
  %arrayidx487 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom486, !dbg !12861
  %op488 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx487, i32 0, i32 0, !dbg !12861
  %236 = load %struct.rtx_def*, %struct.rtx_def** %op488, align 16, !dbg !12861
  %237 = bitcast %struct.rtx_def* %236 to i32*, !dbg !12861
  %bf.load489 = load i32, i32* %237, align 8, !dbg !12861
  %bf.clear490 = and i32 %bf.load489, 65535, !dbg !12861
  %cmp491 = icmp eq i32 %bf.clear490, 30, !dbg !12861
  br i1 %cmp491, label %land.lhs.true493, label %if.end536, !dbg !12862

land.lhs.true493:                                 ; preds = %land.lhs.true484
  %238 = load i32, i32* %n_ops, align 4, !dbg !12863
  %sub494 = sub nsw i32 %238, 2, !dbg !12863
  %idxprom495 = sext i32 %sub494 to i64, !dbg !12863
  %arrayidx496 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom495, !dbg !12863
  %op497 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx496, i32 0, i32 0, !dbg !12863
  %239 = load %struct.rtx_def*, %struct.rtx_def** %op497, align 16, !dbg !12863
  %240 = bitcast %struct.rtx_def* %239 to i32*, !dbg !12863
  %bf.load498 = load i32, i32* %240, align 8, !dbg !12863
  %bf.clear499 = and i32 %bf.load498, 65535, !dbg !12863
  %idxprom500 = sext i32 %bf.clear499 to i64, !dbg !12863
  %arrayidx501 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom500, !dbg !12863
  %241 = load i32, i32* %arrayidx501, align 4, !dbg !12863
  %cmp502 = icmp eq i32 %241, 9, !dbg !12863
  br i1 %cmp502, label %if.then504, label %if.end536, !dbg !12864

if.then504:                                       ; preds = %land.lhs.true493
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %value, metadata !12865, metadata !DIExpression()), !dbg !12867
  %242 = load i32, i32* %n_ops, align 4, !dbg !12868
  %sub505 = sub nsw i32 %242, 1, !dbg !12869
  %idxprom506 = sext i32 %sub505 to i64, !dbg !12870
  %arrayidx507 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom506, !dbg !12870
  %op508 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx507, i32 0, i32 0, !dbg !12871
  %243 = load %struct.rtx_def*, %struct.rtx_def** %op508, align 16, !dbg !12871
  store %struct.rtx_def* %243, %struct.rtx_def** %value, align 8, !dbg !12867
  %244 = load i32, i32* %n_ops, align 4, !dbg !12872
  %sub509 = sub nsw i32 %244, 1, !dbg !12874
  %idxprom510 = sext i32 %sub509 to i64, !dbg !12875
  %arrayidx511 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom510, !dbg !12875
  %neg512 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx511, i32 0, i32 1, !dbg !12876
  %245 = load i16, i16* %neg512, align 8, !dbg !12876
  %conv513 = sext i16 %245 to i32, !dbg !12875
  %246 = load i32, i32* %n_ops, align 4, !dbg !12877
  %sub514 = sub nsw i32 %246, 2, !dbg !12878
  %idxprom515 = sext i32 %sub514 to i64, !dbg !12879
  %arrayidx516 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom515, !dbg !12879
  %neg517 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx516, i32 0, i32 1, !dbg !12880
  %247 = load i16, i16* %neg517, align 8, !dbg !12880
  %conv518 = sext i16 %247 to i32, !dbg !12879
  %xor519 = xor i32 %conv513, %conv518, !dbg !12881
  %tobool520 = icmp ne i32 %xor519, 0, !dbg !12881
  br i1 %tobool520, label %if.then521, label %if.end523, !dbg !12882

if.then521:                                       ; preds = %if.then504
  %248 = load i32, i32* %mode.addr, align 4, !dbg !12883
  %249 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !12884
  %call522 = call %struct.rtx_def* @neg_const_int(i32 %248, %struct.rtx_def* %249), !dbg !12885
  store %struct.rtx_def* %call522, %struct.rtx_def** %value, align 8, !dbg !12886
  br label %if.end523, !dbg !12887

if.end523:                                        ; preds = %if.then521, %if.then504
  %250 = load i32, i32* %n_ops, align 4, !dbg !12888
  %sub524 = sub nsw i32 %250, 2, !dbg !12889
  %idxprom525 = sext i32 %sub524 to i64, !dbg !12890
  %arrayidx526 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom525, !dbg !12890
  %op527 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx526, i32 0, i32 0, !dbg !12891
  %251 = load %struct.rtx_def*, %struct.rtx_def** %op527, align 16, !dbg !12891
  %252 = load %struct.rtx_def*, %struct.rtx_def** %value, align 8, !dbg !12892
  %u528 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %252, i32 0, i32 1, !dbg !12892
  %hwint = bitcast %union.u* %u528 to [1 x i64]*, !dbg !12892
  %arrayidx529 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !12892
  %253 = load i64, i64* %arrayidx529, align 8, !dbg !12892
  %call530 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %251, i64 %253), !dbg !12893
  %254 = load i32, i32* %n_ops, align 4, !dbg !12894
  %sub531 = sub nsw i32 %254, 2, !dbg !12895
  %idxprom532 = sext i32 %sub531 to i64, !dbg !12896
  %arrayidx533 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom532, !dbg !12896
  %op534 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx533, i32 0, i32 0, !dbg !12897
  store %struct.rtx_def* %call530, %struct.rtx_def** %op534, align 16, !dbg !12898
  %255 = load i32, i32* %n_ops, align 4, !dbg !12899
  %dec535 = add nsw i32 %255, -1, !dbg !12899
  store i32 %dec535, i32* %n_ops, align 4, !dbg !12899
  br label %if.end536, !dbg !12900

if.end536:                                        ; preds = %if.end523, %land.lhs.true493, %land.lhs.true484, %if.end481
  store i32 0, i32* %i, align 4, !dbg !12901
  br label %for.cond537, !dbg !12903

for.cond537:                                      ; preds = %for.inc548, %if.end536
  %256 = load i32, i32* %i, align 4, !dbg !12904
  %257 = load i32, i32* %n_ops, align 4, !dbg !12906
  %cmp538 = icmp slt i32 %256, %257, !dbg !12907
  br i1 %cmp538, label %land.rhs540, label %land.end546, !dbg !12908

land.rhs540:                                      ; preds = %for.cond537
  %258 = load i32, i32* %i, align 4, !dbg !12909
  %idxprom541 = sext i32 %258 to i64, !dbg !12910
  %arrayidx542 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom541, !dbg !12910
  %neg543 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx542, i32 0, i32 1, !dbg !12911
  %259 = load i16, i16* %neg543, align 8, !dbg !12911
  %conv544 = sext i16 %259 to i32, !dbg !12910
  %tobool545 = icmp ne i32 %conv544, 0, !dbg !12908
  br label %land.end546

land.end546:                                      ; preds = %land.rhs540, %for.cond537
  %260 = phi i1 [ false, %for.cond537 ], [ %tobool545, %land.rhs540 ], !dbg !12912
  br i1 %260, label %for.body547, label %for.end550, !dbg !12913

for.body547:                                      ; preds = %land.end546
  br label %for.inc548, !dbg !12914

for.inc548:                                       ; preds = %for.body547
  %261 = load i32, i32* %i, align 4, !dbg !12915
  %inc549 = add nsw i32 %261, 1, !dbg !12915
  store i32 %inc549, i32* %i, align 4, !dbg !12915
  br label %for.cond537, !dbg !12916, !llvm.loop !12917

for.end550:                                       ; preds = %land.end546
  %262 = load i32, i32* %i, align 4, !dbg !12919
  %263 = load i32, i32* %n_ops, align 4, !dbg !12921
  %cmp551 = icmp eq i32 %262, %263, !dbg !12922
  br i1 %cmp551, label %if.then553, label %if.else559, !dbg !12923

if.then553:                                       ; preds = %for.end550
  %264 = load i32, i32* %mode.addr, align 4, !dbg !12924
  %arrayidx554 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12924
  %op555 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx554, i32 0, i32 0, !dbg !12924
  %265 = load %struct.rtx_def*, %struct.rtx_def** %op555, align 16, !dbg !12924
  %call556 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 51, i32 %264, %struct.rtx_def* %265), !dbg !12924
  %arrayidx557 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12925
  %op558 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx557, i32 0, i32 0, !dbg !12926
  store %struct.rtx_def* %call556, %struct.rtx_def** %op558, align 16, !dbg !12927
  br label %if.end575, !dbg !12925

if.else559:                                       ; preds = %for.end550
  %266 = load i32, i32* %i, align 4, !dbg !12928
  %cmp560 = icmp ne i32 %266, 0, !dbg !12930
  br i1 %cmp560, label %if.then562, label %if.end574, !dbg !12931

if.then562:                                       ; preds = %if.else559
  %arrayidx563 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12932
  %op564 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx563, i32 0, i32 0, !dbg !12934
  %267 = load %struct.rtx_def*, %struct.rtx_def** %op564, align 16, !dbg !12934
  store %struct.rtx_def* %267, %struct.rtx_def** %tem, align 8, !dbg !12935
  %arrayidx565 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12936
  %268 = load i32, i32* %i, align 4, !dbg !12937
  %idxprom566 = sext i32 %268 to i64, !dbg !12938
  %arrayidx567 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom566, !dbg !12938
  %269 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx565 to i8*, !dbg !12938
  %270 = bitcast %struct.simplify_plus_minus_op_data* %arrayidx567 to i8*, !dbg !12938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %269, i8* align 16 %270, i64 16, i1 false), !dbg !12938
  %271 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !12939
  %272 = load i32, i32* %i, align 4, !dbg !12940
  %idxprom568 = sext i32 %272 to i64, !dbg !12941
  %arrayidx569 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom568, !dbg !12941
  %op570 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx569, i32 0, i32 0, !dbg !12942
  store %struct.rtx_def* %271, %struct.rtx_def** %op570, align 16, !dbg !12943
  %273 = load i32, i32* %i, align 4, !dbg !12944
  %idxprom571 = sext i32 %273 to i64, !dbg !12945
  %arrayidx572 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom571, !dbg !12945
  %neg573 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx572, i32 0, i32 1, !dbg !12946
  store i16 1, i16* %neg573, align 8, !dbg !12947
  br label %if.end574, !dbg !12948

if.end574:                                        ; preds = %if.then562, %if.else559
  br label %if.end575

if.end575:                                        ; preds = %if.end574, %if.then553
  %arrayidx576 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 0, !dbg !12949
  %op577 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx576, i32 0, i32 0, !dbg !12950
  %274 = load %struct.rtx_def*, %struct.rtx_def** %op577, align 16, !dbg !12950
  store %struct.rtx_def* %274, %struct.rtx_def** %result, align 8, !dbg !12951
  store i32 1, i32* %i, align 4, !dbg !12952
  br label %for.cond578, !dbg !12954

for.cond578:                                      ; preds = %for.inc592, %if.end575
  %275 = load i32, i32* %i, align 4, !dbg !12955
  %276 = load i32, i32* %n_ops, align 4, !dbg !12957
  %cmp579 = icmp slt i32 %275, %276, !dbg !12958
  br i1 %cmp579, label %for.body581, label %for.end594, !dbg !12959

for.body581:                                      ; preds = %for.cond578
  %277 = load i32, i32* %i, align 4, !dbg !12960
  %idxprom582 = sext i32 %277 to i64, !dbg !12960
  %arrayidx583 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom582, !dbg !12960
  %neg584 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx583, i32 0, i32 1, !dbg !12960
  %278 = load i16, i16* %neg584, align 8, !dbg !12960
  %conv585 = sext i16 %278 to i32, !dbg !12960
  %tobool586 = icmp ne i32 %conv585, 0, !dbg !12960
  %279 = zext i1 %tobool586 to i64, !dbg !12960
  %cond587 = select i1 %tobool586, i32 50, i32 49, !dbg !12960
  %280 = load i32, i32* %mode.addr, align 4, !dbg !12960
  %281 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !12960
  %282 = load i32, i32* %i, align 4, !dbg !12960
  %idxprom588 = sext i32 %282 to i64, !dbg !12960
  %arrayidx589 = getelementptr inbounds [8 x %struct.simplify_plus_minus_op_data], [8 x %struct.simplify_plus_minus_op_data]* %ops, i64 0, i64 %idxprom588, !dbg !12960
  %op590 = getelementptr inbounds %struct.simplify_plus_minus_op_data, %struct.simplify_plus_minus_op_data* %arrayidx589, i32 0, i32 0, !dbg !12960
  %283 = load %struct.rtx_def*, %struct.rtx_def** %op590, align 16, !dbg !12960
  %call591 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %cond587, i32 %280, %struct.rtx_def* %281, %struct.rtx_def* %283), !dbg !12960
  store %struct.rtx_def* %call591, %struct.rtx_def** %result, align 8, !dbg !12961
  br label %for.inc592, !dbg !12962

for.inc592:                                       ; preds = %for.body581
  %284 = load i32, i32* %i, align 4, !dbg !12963
  %inc593 = add nsw i32 %284, 1, !dbg !12963
  store i32 %inc593, i32* %i, align 4, !dbg !12963
  br label %for.cond578, !dbg !12964, !llvm.loop !12965

for.end594:                                       ; preds = %for.cond578
  %285 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !12967
  store %struct.rtx_def* %285, %struct.rtx_def** %retval, align 8, !dbg !12968
  br label %return, !dbg !12968

return:                                           ; preds = %for.end594, %if.then475, %if.then429, %if.end205, %if.then
  %286 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !12969
  ret %struct.rtx_def* %286, !dbg !12969
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @simplify_associative_operation(i32 %code, i32 %mode, %struct.rtx_def* %op0, %struct.rtx_def* %op1) #0 !dbg !12970 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %code.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %op0.addr = alloca %struct.rtx_def*, align 8
  %op1.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store i32 %code, i32* %code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %code.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !12973, metadata !DIExpression()), !dbg !12974
  store %struct.rtx_def* %op0, %struct.rtx_def** %op0.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0.addr, metadata !12975, metadata !DIExpression()), !dbg !12976
  store %struct.rtx_def* %op1, %struct.rtx_def** %op1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1.addr, metadata !12977, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !12979, metadata !DIExpression()), !dbg !12980
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12981
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !12981
  %bf.load = load i32, i32* %1, align 8, !dbg !12981
  %bf.clear = and i32 %bf.load, 65535, !dbg !12981
  %2 = load i32, i32* %code.addr, align 4, !dbg !12983
  %cmp = icmp eq i32 %bf.clear, %2, !dbg !12984
  br i1 %cmp, label %if.then, label %if.end14, !dbg !12985

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12986
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !12986
  %bf.load1 = load i32, i32* %4, align 8, !dbg !12986
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !12986
  %5 = load i32, i32* %code.addr, align 4, !dbg !12989
  %cmp3 = icmp eq i32 %bf.clear2, %5, !dbg !12990
  br i1 %cmp3, label %if.then4, label %if.end, !dbg !12991

if.then4:                                         ; preds = %if.then
  %6 = load i32, i32* %code.addr, align 4, !dbg !12992
  %7 = load i32, i32* %mode.addr, align 4, !dbg !12994
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !12995
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !12996
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !12996
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !12996
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !12996
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !12996
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !12996
  %call = call %struct.rtx_def* @simplify_gen_binary(i32 %6, i32 %7, %struct.rtx_def* %8, %struct.rtx_def* %10), !dbg !12997
  store %struct.rtx_def* %call, %struct.rtx_def** %tem, align 8, !dbg !12998
  %11 = load i32, i32* %code.addr, align 4, !dbg !12999
  %12 = load i32, i32* %mode.addr, align 4, !dbg !13000
  %13 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13001
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13002
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !13002
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !13002
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !13002
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !13002
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !13002
  %call9 = call %struct.rtx_def* @simplify_gen_binary(i32 %11, i32 %12, %struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !13003
  store %struct.rtx_def* %call9, %struct.rtx_def** %retval, align 8, !dbg !13004
  br label %return, !dbg !13004

if.end:                                           ; preds = %if.then
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13005
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13007
  %call10 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %16, %struct.rtx_def* %17), !dbg !13008
  %tobool = icmp ne i8 %call10, 0, !dbg !13008
  br i1 %tobool, label %if.end13, label %if.then11, !dbg !13009

if.then11:                                        ; preds = %if.end
  %18 = load i32, i32* %code.addr, align 4, !dbg !13010
  %19 = load i32, i32* %mode.addr, align 4, !dbg !13011
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13012
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13013
  %call12 = call %struct.rtx_def* @simplify_gen_binary(i32 %18, i32 %19, %struct.rtx_def* %20, %struct.rtx_def* %21), !dbg !13014
  store %struct.rtx_def* %call12, %struct.rtx_def** %retval, align 8, !dbg !13015
  br label %return, !dbg !13015

if.end13:                                         ; preds = %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13016
  store %struct.rtx_def* %22, %struct.rtx_def** %tem, align 8, !dbg !13017
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13018
  store %struct.rtx_def* %23, %struct.rtx_def** %op0.addr, align 8, !dbg !13019
  %24 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13020
  store %struct.rtx_def* %24, %struct.rtx_def** %op1.addr, align 8, !dbg !13021
  br label %if.end14, !dbg !13022

if.end14:                                         ; preds = %if.end13, %entry
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13023
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !13023
  %bf.load15 = load i32, i32* %26, align 8, !dbg !13023
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !13023
  %27 = load i32, i32* %code.addr, align 4, !dbg !13025
  %cmp17 = icmp eq i32 %bf.clear16, %27, !dbg !13026
  br i1 %cmp17, label %if.then18, label %if.end63, !dbg !13027

if.then18:                                        ; preds = %if.end14
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13028
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !13028
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !13028
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 1, !dbg !13028
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !13028
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !13028
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13031
  %call23 = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %29, %struct.rtx_def* %30), !dbg !13032
  %tobool24 = icmp ne i8 %call23, 0, !dbg !13032
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !13033

if.then25:                                        ; preds = %if.then18
  %31 = load i32, i32* %code.addr, align 4, !dbg !13034
  %32 = load i32, i32* %mode.addr, align 4, !dbg !13036
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13037
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !13037
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !13037
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 0, !dbg !13037
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !13037
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !13037
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13038
  %call30 = call %struct.rtx_def* @simplify_gen_binary(i32 %31, i32 %32, %struct.rtx_def* %34, %struct.rtx_def* %35), !dbg !13039
  store %struct.rtx_def* %call30, %struct.rtx_def** %tem, align 8, !dbg !13040
  %36 = load i32, i32* %code.addr, align 4, !dbg !13041
  %37 = load i32, i32* %mode.addr, align 4, !dbg !13042
  %38 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13043
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13044
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !13044
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !13044
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 1, !dbg !13044
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !13044
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !13044
  %call35 = call %struct.rtx_def* @simplify_gen_binary(i32 %36, i32 %37, %struct.rtx_def* %38, %struct.rtx_def* %40), !dbg !13045
  store %struct.rtx_def* %call35, %struct.rtx_def** %retval, align 8, !dbg !13046
  br label %return, !dbg !13046

if.end36:                                         ; preds = %if.then18
  %41 = load i32, i32* %code.addr, align 4, !dbg !13047
  %42 = load i32, i32* %mode.addr, align 4, !dbg !13048
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13049
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !13049
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !13049
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 1, !dbg !13049
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !13049
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !13049
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13050
  %call41 = call %struct.rtx_def* @simplify_binary_operation(i32 %41, i32 %42, %struct.rtx_def* %44, %struct.rtx_def* %45), !dbg !13051
  store %struct.rtx_def* %call41, %struct.rtx_def** %tem, align 8, !dbg !13052
  %46 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13053
  %cmp42 = icmp ne %struct.rtx_def* %46, null, !dbg !13055
  br i1 %cmp42, label %if.then43, label %if.end49, !dbg !13056

if.then43:                                        ; preds = %if.end36
  %47 = load i32, i32* %code.addr, align 4, !dbg !13057
  %48 = load i32, i32* %mode.addr, align 4, !dbg !13058
  %49 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13059
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !13059
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !13059
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !13059
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !13059
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !13059
  %51 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13060
  %call48 = call %struct.rtx_def* @simplify_gen_binary(i32 %47, i32 %48, %struct.rtx_def* %50, %struct.rtx_def* %51), !dbg !13061
  store %struct.rtx_def* %call48, %struct.rtx_def** %retval, align 8, !dbg !13062
  br label %return, !dbg !13062

if.end49:                                         ; preds = %if.end36
  %52 = load i32, i32* %code.addr, align 4, !dbg !13063
  %53 = load i32, i32* %mode.addr, align 4, !dbg !13064
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13065
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !13065
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !13065
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 0, !dbg !13065
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !13065
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !13065
  %56 = load %struct.rtx_def*, %struct.rtx_def** %op1.addr, align 8, !dbg !13066
  %call54 = call %struct.rtx_def* @simplify_binary_operation(i32 %52, i32 %53, %struct.rtx_def* %55, %struct.rtx_def* %56), !dbg !13067
  store %struct.rtx_def* %call54, %struct.rtx_def** %tem, align 8, !dbg !13068
  %57 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13069
  %cmp55 = icmp ne %struct.rtx_def* %57, null, !dbg !13071
  br i1 %cmp55, label %if.then56, label %if.end62, !dbg !13072

if.then56:                                        ; preds = %if.end49
  %58 = load i32, i32* %code.addr, align 4, !dbg !13073
  %59 = load i32, i32* %mode.addr, align 4, !dbg !13074
  %60 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !13075
  %61 = load %struct.rtx_def*, %struct.rtx_def** %op0.addr, align 8, !dbg !13076
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !13076
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !13076
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 1, !dbg !13076
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !13076
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !13076
  %call61 = call %struct.rtx_def* @simplify_gen_binary(i32 %58, i32 %59, %struct.rtx_def* %60, %struct.rtx_def* %62), !dbg !13077
  store %struct.rtx_def* %call61, %struct.rtx_def** %retval, align 8, !dbg !13078
  br label %return, !dbg !13078

if.end62:                                         ; preds = %if.end49
  br label %if.end63, !dbg !13079

if.end63:                                         ; preds = %if.end62, %if.end14
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !13080
  br label %return, !dbg !13080

return:                                           ; preds = %if.end63, %if.then56, %if.then43, %if.then25, %if.then11, %if.then4
  %63 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !13081
  ret %struct.rtx_def* %63, !dbg !13081
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @neg_const_int(i32 %mode, %struct.rtx_def* %i) #0 !dbg !13082 {
entry:
  %mode.addr = alloca i32, align 4
  %i.addr = alloca %struct.rtx_def*, align 8
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !13085, metadata !DIExpression()), !dbg !13086
  store %struct.rtx_def* %i, %struct.rtx_def** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %i.addr, metadata !13087, metadata !DIExpression()), !dbg !13088
  %0 = load %struct.rtx_def*, %struct.rtx_def** %i.addr, align 8, !dbg !13089
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !13089
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !13089
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !13089
  %1 = load i64, i64* %arrayidx, align 8, !dbg !13089
  %sub = sub nsw i64 0, %1, !dbg !13090
  %2 = load i32, i32* %mode.addr, align 4, !dbg !13091
  %call = call %struct.rtx_def* @gen_int_mode(i64 %sub, i32 %2), !dbg !13092
  ret %struct.rtx_def* %call, !dbg !13093
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @simplify_plus_minus_op_data_cmp(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 !dbg !13094 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %result = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y.addr, metadata !13099, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.declare(metadata i32* %result, metadata !13101, metadata !DIExpression()), !dbg !13102
  %0 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !13103
  %call = call i32 @commutative_operand_precedence(%struct.rtx_def* %0), !dbg !13104
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !13105
  %call1 = call i32 @commutative_operand_precedence(%struct.rtx_def* %1), !dbg !13106
  %sub = sub nsw i32 %call, %call1, !dbg !13107
  store i32 %sub, i32* %result, align 4, !dbg !13108
  %2 = load i32, i32* %result, align 4, !dbg !13109
  %tobool = icmp ne i32 %2, 0, !dbg !13109
  br i1 %tobool, label %if.then, label %if.end, !dbg !13111

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %result, align 4, !dbg !13112
  %cmp = icmp sgt i32 %3, 0, !dbg !13113
  %conv = zext i1 %cmp to i32, !dbg !13113
  %conv2 = trunc i32 %conv to i8, !dbg !13112
  store i8 %conv2, i8* %retval, align 1, !dbg !13114
  br label %return, !dbg !13114

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !13115
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !13115
  %bf.load = load i32, i32* %5, align 8, !dbg !13115
  %bf.clear = and i32 %bf.load, 65535, !dbg !13115
  %cmp3 = icmp eq i32 %bf.clear, 37, !dbg !13115
  br i1 %cmp3, label %land.lhs.true, label %if.else, !dbg !13117

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !13118
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !13118
  %bf.load5 = load i32, i32* %7, align 8, !dbg !13118
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !13118
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !13118
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !13119

if.then9:                                         ; preds = %land.lhs.true
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !13120
  %call10 = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !13120
  %9 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !13121
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %9), !dbg !13121
  %cmp12 = icmp ugt i32 %call10, %call11, !dbg !13122
  %conv13 = zext i1 %cmp12 to i32, !dbg !13122
  %conv14 = trunc i32 %conv13 to i8, !dbg !13120
  store i8 %conv14, i8* %retval, align 1, !dbg !13123
  br label %return, !dbg !13123

if.else:                                          ; preds = %land.lhs.true, %if.end
  store i8 0, i8* %retval, align 1, !dbg !13124
  br label %return, !dbg !13124

return:                                           ; preds = %if.else, %if.then9, %if.then
  %10 = load i8, i8* %retval, align 1, !dbg !13125
  ret i8 %10, !dbg !13125
}

declare dso_local i32 @commutative_operand_precedence(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @lowpart_subreg(i32, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @const_fixed_from_fixed_value(%struct.fixed_value* byval(%struct.fixed_value) align 8, i32) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!2581, !2582, !2583}
!llvm.ident = !{!2584}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !2575, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "simplify-rtx.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !132, !138, !143, !148, !167, !174, !181, !375, !397, !540, !555, !565, !602, !609, !617, !1491}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !4, line: 7, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131}
!7 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!10 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!11 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!12 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!13 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!14 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!15 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!16 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!17 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!18 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!19 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!20 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!21 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!22 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!23 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!24 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!25 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!26 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!27 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!28 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!29 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!30 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!31 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!32 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!33 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!34 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!35 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!36 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!37 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!38 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!39 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!40 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!41 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!42 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!43 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!44 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!45 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!46 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!47 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!48 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!49 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!50 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!51 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!52 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!53 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!54 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!55 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!56 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!57 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!58 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!59 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!60 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!61 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!62 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!63 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!64 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!65 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!66 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!67 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!68 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!69 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!70 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!71 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!72 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!73 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!74 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!75 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!76 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!77 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!78 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!79 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!80 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!81 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!82 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!83 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!84 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!85 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!86 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!87 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!88 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!89 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!90 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!91 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!92 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!93 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!94 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!95 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!131 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!132 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !133, line: 363, baseType: !5, size: 32, elements: !134)
!133 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!134 = !{!135, !136, !137}
!135 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!136 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!137 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!138 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !133, line: 355, baseType: !5, size: 32, elements: !139)
!139 = !{!140, !141, !142}
!140 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!141 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!142 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!143 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !144, line: 474, baseType: !5, size: 32, elements: !145)
!144 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!145 = !{!146, !147}
!146 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!147 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !149, line: 280, baseType: !5, size: 32, elements: !150)
!149 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!151 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!152 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!153 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !149, line: 1817, baseType: !5, size: 32, elements: !168)
!168 = !{!169, !170, !171, !172, !173}
!169 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!174 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !149, line: 1805, baseType: !5, size: 32, elements: !175)
!175 = !{!176, !177, !178, !179, !180}
!176 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !149, line: 39, baseType: !5, size: 32, elements: !182)
!182 = !{!183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374}
!183 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!186 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!188 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!189 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!190 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!191 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!192 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!193 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!194 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!195 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!196 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!197 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!198 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!199 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!200 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!201 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!202 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!203 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!204 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!205 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!206 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!207 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!208 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!209 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!210 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!211 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!213 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!214 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!215 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!216 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!217 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!218 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!219 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!220 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!221 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!222 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!223 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!224 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!225 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!226 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!227 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!228 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!229 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!230 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!231 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!232 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!233 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!234 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!235 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!236 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!237 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!238 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!239 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!240 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!241 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!242 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!243 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!244 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!245 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!246 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!247 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!248 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!249 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!250 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!251 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!252 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!253 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!254 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!255 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!256 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!257 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!258 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!259 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!260 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!262 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!263 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!264 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!265 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!266 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!267 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!268 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!269 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!270 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!271 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!274 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!275 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!280 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!281 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!282 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!283 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!284 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!285 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!286 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!287 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!288 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!289 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!290 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!291 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!292 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!293 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!294 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!295 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!296 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!297 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!298 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!299 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!300 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!301 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!302 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!303 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!304 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!305 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!306 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!307 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!308 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!309 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!310 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!311 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!312 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!313 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!314 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!315 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!316 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!317 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!318 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!319 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!320 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!321 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!322 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!323 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!324 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!325 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!326 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!327 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!328 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!329 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!330 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!331 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!332 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!333 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!334 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!335 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!336 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!337 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!347 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!348 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!350 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!351 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!352 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!353 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!354 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!368 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!369 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!370 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!371 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!372 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!373 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!374 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!375 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !376, line: 36, baseType: !5, size: 32, elements: !377)
!376 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!377 = !{!378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396}
!378 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!379 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!380 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!381 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!382 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!383 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!384 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!385 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!386 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!387 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!388 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!389 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!390 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!391 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!392 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!393 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!394 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!395 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!396 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !398, line: 45, baseType: !5, size: 32, elements: !399)
!398 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!399 = !{!400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539}
!400 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!401 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!402 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!403 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!404 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!405 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!406 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!407 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!408 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!409 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!410 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!411 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!412 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!413 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!414 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!415 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!416 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!417 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!418 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!419 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!420 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!421 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!422 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!423 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!424 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!425 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!426 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!427 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!428 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!429 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!430 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!431 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!432 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!433 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!434 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!435 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!436 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!437 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!438 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!439 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!440 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!441 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!442 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!443 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!444 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!445 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!446 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!447 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!448 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!449 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!450 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!451 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!452 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!453 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!454 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!455 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!456 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!457 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!458 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!459 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!460 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!461 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!462 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!463 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!464 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!465 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!466 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!467 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!468 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!469 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!470 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!471 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!472 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!473 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!474 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!475 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!476 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!477 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!478 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!479 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!480 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!481 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!482 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!483 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!484 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!485 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!486 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!487 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!488 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!489 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!490 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!491 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!492 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!493 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!494 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!495 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!496 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!497 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!498 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!499 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!500 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!501 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!502 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!503 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!504 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!505 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!506 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!507 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!508 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!509 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!510 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!511 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!512 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!513 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!514 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!515 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!516 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!517 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!518 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!519 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!520 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!521 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!522 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!523 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!524 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!525 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!526 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!527 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!528 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!529 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!530 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!531 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!532 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!533 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!534 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!535 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!536 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!537 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!538 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!539 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!540 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !398, line: 60, baseType: !5, size: 32, elements: !541)
!541 = !{!542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554}
!542 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!543 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!544 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!545 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!546 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!547 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!548 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!549 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!550 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!551 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!552 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!553 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!554 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!555 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tls_model", file: !556, line: 97, baseType: !5, size: 32, elements: !557)
!556 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!557 = !{!558, !559, !560, !561, !562, !563, !564}
!558 = !DIEnumerator(name: "TLS_MODEL_NONE", value: 0, isUnsigned: true)
!559 = !DIEnumerator(name: "TLS_MODEL_EMULATED", value: 1, isUnsigned: true)
!560 = !DIEnumerator(name: "TLS_MODEL_REAL", value: 2, isUnsigned: true)
!561 = !DIEnumerator(name: "TLS_MODEL_GLOBAL_DYNAMIC", value: 2, isUnsigned: true)
!562 = !DIEnumerator(name: "TLS_MODEL_LOCAL_DYNAMIC", value: 3, isUnsigned: true)
!563 = !DIEnumerator(name: "TLS_MODEL_INITIAL_EXEC", value: 4, isUnsigned: true)
!564 = !DIEnumerator(name: "TLS_MODEL_LOCAL_EXEC", value: 5, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_node_structure_enum", file: !149, line: 630, baseType: !5, size: 32, elements: !566)
!566 = !{!567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601}
!567 = !DIEnumerator(name: "TS_BASE", value: 0, isUnsigned: true)
!568 = !DIEnumerator(name: "TS_COMMON", value: 1, isUnsigned: true)
!569 = !DIEnumerator(name: "TS_INT_CST", value: 2, isUnsigned: true)
!570 = !DIEnumerator(name: "TS_REAL_CST", value: 3, isUnsigned: true)
!571 = !DIEnumerator(name: "TS_FIXED_CST", value: 4, isUnsigned: true)
!572 = !DIEnumerator(name: "TS_VECTOR", value: 5, isUnsigned: true)
!573 = !DIEnumerator(name: "TS_STRING", value: 6, isUnsigned: true)
!574 = !DIEnumerator(name: "TS_COMPLEX", value: 7, isUnsigned: true)
!575 = !DIEnumerator(name: "TS_IDENTIFIER", value: 8, isUnsigned: true)
!576 = !DIEnumerator(name: "TS_DECL_MINIMAL", value: 9, isUnsigned: true)
!577 = !DIEnumerator(name: "TS_DECL_COMMON", value: 10, isUnsigned: true)
!578 = !DIEnumerator(name: "TS_DECL_WRTL", value: 11, isUnsigned: true)
!579 = !DIEnumerator(name: "TS_DECL_NON_COMMON", value: 12, isUnsigned: true)
!580 = !DIEnumerator(name: "TS_DECL_WITH_VIS", value: 13, isUnsigned: true)
!581 = !DIEnumerator(name: "TS_FIELD_DECL", value: 14, isUnsigned: true)
!582 = !DIEnumerator(name: "TS_VAR_DECL", value: 15, isUnsigned: true)
!583 = !DIEnumerator(name: "TS_PARM_DECL", value: 16, isUnsigned: true)
!584 = !DIEnumerator(name: "TS_LABEL_DECL", value: 17, isUnsigned: true)
!585 = !DIEnumerator(name: "TS_RESULT_DECL", value: 18, isUnsigned: true)
!586 = !DIEnumerator(name: "TS_CONST_DECL", value: 19, isUnsigned: true)
!587 = !DIEnumerator(name: "TS_TYPE_DECL", value: 20, isUnsigned: true)
!588 = !DIEnumerator(name: "TS_FUNCTION_DECL", value: 21, isUnsigned: true)
!589 = !DIEnumerator(name: "TS_TYPE", value: 22, isUnsigned: true)
!590 = !DIEnumerator(name: "TS_LIST", value: 23, isUnsigned: true)
!591 = !DIEnumerator(name: "TS_VEC", value: 24, isUnsigned: true)
!592 = !DIEnumerator(name: "TS_EXP", value: 25, isUnsigned: true)
!593 = !DIEnumerator(name: "TS_SSA_NAME", value: 26, isUnsigned: true)
!594 = !DIEnumerator(name: "TS_BLOCK", value: 27, isUnsigned: true)
!595 = !DIEnumerator(name: "TS_BINFO", value: 28, isUnsigned: true)
!596 = !DIEnumerator(name: "TS_STATEMENT_LIST", value: 29, isUnsigned: true)
!597 = !DIEnumerator(name: "TS_CONSTRUCTOR", value: 30, isUnsigned: true)
!598 = !DIEnumerator(name: "TS_OMP_CLAUSE", value: 31, isUnsigned: true)
!599 = !DIEnumerator(name: "TS_OPTIMIZATION", value: 32, isUnsigned: true)
!600 = !DIEnumerator(name: "TS_TARGET_OPTION", value: 33, isUnsigned: true)
!601 = !DIEnumerator(name: "LAST_TS_ENUM", value: 34, isUnsigned: true)
!602 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 4179, baseType: !5, size: 32, elements: !603)
!603 = !{!604, !605, !606, !607, !608}
!604 = !DIEnumerator(name: "CMP_EQ", value: 1, isUnsigned: true)
!605 = !DIEnumerator(name: "CMP_LT", value: 2, isUnsigned: true)
!606 = !DIEnumerator(name: "CMP_GT", value: 4, isUnsigned: true)
!607 = !DIEnumerator(name: "CMP_LTU", value: 8, isUnsigned: true)
!608 = !DIEnumerator(name: "CMP_GTU", value: 16, isUnsigned: true)
!609 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "warn_strict_overflow_code", file: !610, line: 367, baseType: !5, size: 32, elements: !611)
!610 = !DIFile(filename: "./flags.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!611 = !{!612, !613, !614, !615, !616}
!612 = !DIEnumerator(name: "WARN_STRICT_OVERFLOW_ALL", value: 1, isUnsigned: true)
!613 = !DIEnumerator(name: "WARN_STRICT_OVERFLOW_CONDITIONAL", value: 2, isUnsigned: true)
!614 = !DIEnumerator(name: "WARN_STRICT_OVERFLOW_COMPARISON", value: 3, isUnsigned: true)
!615 = !DIEnumerator(name: "WARN_STRICT_OVERFLOW_MISC", value: 4, isUnsigned: true)
!616 = !DIEnumerator(name: "WARN_STRICT_OVERFLOW_MAGNITUDE", value: 5, isUnsigned: true)
!617 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_code", file: !618, line: 723, baseType: !5, size: 32, elements: !619)
!618 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!619 = !{!620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490}
!620 = !DIEnumerator(name: "OPT__help", value: 0, isUnsigned: true)
!621 = !DIEnumerator(name: "OPT__help_", value: 1, isUnsigned: true)
!622 = !DIEnumerator(name: "OPT__output_pch_", value: 2, isUnsigned: true)
!623 = !DIEnumerator(name: "OPT__param", value: 3, isUnsigned: true)
!624 = !DIEnumerator(name: "OPT__target_help", value: 4, isUnsigned: true)
!625 = !DIEnumerator(name: "OPT__version", value: 5, isUnsigned: true)
!626 = !DIEnumerator(name: "OPT_A", value: 6, isUnsigned: true)
!627 = !DIEnumerator(name: "OPT_C", value: 7, isUnsigned: true)
!628 = !DIEnumerator(name: "OPT_CC", value: 8, isUnsigned: true)
!629 = !DIEnumerator(name: "OPT_D", value: 9, isUnsigned: true)
!630 = !DIEnumerator(name: "OPT_E", value: 10, isUnsigned: true)
!631 = !DIEnumerator(name: "OPT_F", value: 11, isUnsigned: true)
!632 = !DIEnumerator(name: "OPT_G", value: 12, isUnsigned: true)
!633 = !DIEnumerator(name: "OPT_H", value: 13, isUnsigned: true)
!634 = !DIEnumerator(name: "OPT_I", value: 14, isUnsigned: true)
!635 = !DIEnumerator(name: "OPT_J", value: 15, isUnsigned: true)
!636 = !DIEnumerator(name: "OPT_M", value: 16, isUnsigned: true)
!637 = !DIEnumerator(name: "OPT_MD", value: 17, isUnsigned: true)
!638 = !DIEnumerator(name: "OPT_MD_", value: 18, isUnsigned: true)
!639 = !DIEnumerator(name: "OPT_MF", value: 19, isUnsigned: true)
!640 = !DIEnumerator(name: "OPT_MG", value: 20, isUnsigned: true)
!641 = !DIEnumerator(name: "OPT_MM", value: 21, isUnsigned: true)
!642 = !DIEnumerator(name: "OPT_MMD", value: 22, isUnsigned: true)
!643 = !DIEnumerator(name: "OPT_MMD_", value: 23, isUnsigned: true)
!644 = !DIEnumerator(name: "OPT_MP", value: 24, isUnsigned: true)
!645 = !DIEnumerator(name: "OPT_MQ", value: 25, isUnsigned: true)
!646 = !DIEnumerator(name: "OPT_MT", value: 26, isUnsigned: true)
!647 = !DIEnumerator(name: "OPT_O", value: 27, isUnsigned: true)
!648 = !DIEnumerator(name: "OPT_Os", value: 28, isUnsigned: true)
!649 = !DIEnumerator(name: "OPT_P", value: 29, isUnsigned: true)
!650 = !DIEnumerator(name: "OPT_U", value: 30, isUnsigned: true)
!651 = !DIEnumerator(name: "OPT_W", value: 31, isUnsigned: true)
!652 = !DIEnumerator(name: "OPT_Wabi", value: 32, isUnsigned: true)
!653 = !DIEnumerator(name: "OPT_Waddress", value: 33, isUnsigned: true)
!654 = !DIEnumerator(name: "OPT_Waggregate_return", value: 34, isUnsigned: true)
!655 = !DIEnumerator(name: "OPT_Waliasing", value: 35, isUnsigned: true)
!656 = !DIEnumerator(name: "OPT_Walign_commons", value: 36, isUnsigned: true)
!657 = !DIEnumerator(name: "OPT_Wall", value: 37, isUnsigned: true)
!658 = !DIEnumerator(name: "OPT_Wall_deprecation", value: 38, isUnsigned: true)
!659 = !DIEnumerator(name: "OPT_Wall_javadoc", value: 39, isUnsigned: true)
!660 = !DIEnumerator(name: "OPT_Wampersand", value: 40, isUnsigned: true)
!661 = !DIEnumerator(name: "OPT_Warray_bounds", value: 41, isUnsigned: true)
!662 = !DIEnumerator(name: "OPT_Warray_temporaries", value: 42, isUnsigned: true)
!663 = !DIEnumerator(name: "OPT_Wassert_identifier", value: 43, isUnsigned: true)
!664 = !DIEnumerator(name: "OPT_Wassign_intercept", value: 44, isUnsigned: true)
!665 = !DIEnumerator(name: "OPT_Wattributes", value: 45, isUnsigned: true)
!666 = !DIEnumerator(name: "OPT_Wbad_function_cast", value: 46, isUnsigned: true)
!667 = !DIEnumerator(name: "OPT_Wboxing", value: 47, isUnsigned: true)
!668 = !DIEnumerator(name: "OPT_Wbuiltin_macro_redefined", value: 48, isUnsigned: true)
!669 = !DIEnumerator(name: "OPT_Wc___compat", value: 49, isUnsigned: true)
!670 = !DIEnumerator(name: "OPT_Wc__0x_compat", value: 50, isUnsigned: true)
!671 = !DIEnumerator(name: "OPT_Wcast_align", value: 51, isUnsigned: true)
!672 = !DIEnumerator(name: "OPT_Wcast_qual", value: 52, isUnsigned: true)
!673 = !DIEnumerator(name: "OPT_Wchar_concat", value: 53, isUnsigned: true)
!674 = !DIEnumerator(name: "OPT_Wchar_subscripts", value: 54, isUnsigned: true)
!675 = !DIEnumerator(name: "OPT_Wcharacter_truncation", value: 55, isUnsigned: true)
!676 = !DIEnumerator(name: "OPT_Wclobbered", value: 56, isUnsigned: true)
!677 = !DIEnumerator(name: "OPT_Wcomment", value: 57, isUnsigned: true)
!678 = !DIEnumerator(name: "OPT_Wcomments", value: 58, isUnsigned: true)
!679 = !DIEnumerator(name: "OPT_Wcondition_assign", value: 59, isUnsigned: true)
!680 = !DIEnumerator(name: "OPT_Wconstructor_name", value: 60, isUnsigned: true)
!681 = !DIEnumerator(name: "OPT_Wconversion", value: 61, isUnsigned: true)
!682 = !DIEnumerator(name: "OPT_Wconversion_null", value: 62, isUnsigned: true)
!683 = !DIEnumerator(name: "OPT_Wcoverage_mismatch", value: 63, isUnsigned: true)
!684 = !DIEnumerator(name: "OPT_Wctor_dtor_privacy", value: 64, isUnsigned: true)
!685 = !DIEnumerator(name: "OPT_Wdeclaration_after_statement", value: 65, isUnsigned: true)
!686 = !DIEnumerator(name: "OPT_Wdep_ann", value: 66, isUnsigned: true)
!687 = !DIEnumerator(name: "OPT_Wdeprecated", value: 67, isUnsigned: true)
!688 = !DIEnumerator(name: "OPT_Wdeprecated_declarations", value: 68, isUnsigned: true)
!689 = !DIEnumerator(name: "OPT_Wdisabled_optimization", value: 69, isUnsigned: true)
!690 = !DIEnumerator(name: "OPT_Wdiscouraged", value: 70, isUnsigned: true)
!691 = !DIEnumerator(name: "OPT_Wdiv_by_zero", value: 71, isUnsigned: true)
!692 = !DIEnumerator(name: "OPT_Weffc__", value: 72, isUnsigned: true)
!693 = !DIEnumerator(name: "OPT_Wempty_block", value: 73, isUnsigned: true)
!694 = !DIEnumerator(name: "OPT_Wempty_body", value: 74, isUnsigned: true)
!695 = !DIEnumerator(name: "OPT_Wendif_labels", value: 75, isUnsigned: true)
!696 = !DIEnumerator(name: "OPT_Wenum_compare", value: 76, isUnsigned: true)
!697 = !DIEnumerator(name: "OPT_Wenum_identifier", value: 77, isUnsigned: true)
!698 = !DIEnumerator(name: "OPT_Wenum_switch", value: 78, isUnsigned: true)
!699 = !DIEnumerator(name: "OPT_Werror", value: 79, isUnsigned: true)
!700 = !DIEnumerator(name: "OPT_Werror_implicit_function_declaration", value: 80, isUnsigned: true)
!701 = !DIEnumerator(name: "OPT_Werror_", value: 81, isUnsigned: true)
!702 = !DIEnumerator(name: "OPT_Wextra", value: 82, isUnsigned: true)
!703 = !DIEnumerator(name: "OPT_Wextraneous_semicolon", value: 83, isUnsigned: true)
!704 = !DIEnumerator(name: "OPT_Wfallthrough", value: 84, isUnsigned: true)
!705 = !DIEnumerator(name: "OPT_Wfatal_errors", value: 85, isUnsigned: true)
!706 = !DIEnumerator(name: "OPT_Wfield_hiding", value: 86, isUnsigned: true)
!707 = !DIEnumerator(name: "OPT_Wfinal_bound", value: 87, isUnsigned: true)
!708 = !DIEnumerator(name: "OPT_Wfinally", value: 88, isUnsigned: true)
!709 = !DIEnumerator(name: "OPT_Wfloat_equal", value: 89, isUnsigned: true)
!710 = !DIEnumerator(name: "OPT_Wforbidden", value: 90, isUnsigned: true)
!711 = !DIEnumerator(name: "OPT_Wformat", value: 91, isUnsigned: true)
!712 = !DIEnumerator(name: "OPT_Wformat_contains_nul", value: 92, isUnsigned: true)
!713 = !DIEnumerator(name: "OPT_Wformat_extra_args", value: 93, isUnsigned: true)
!714 = !DIEnumerator(name: "OPT_Wformat_nonliteral", value: 94, isUnsigned: true)
!715 = !DIEnumerator(name: "OPT_Wformat_security", value: 95, isUnsigned: true)
!716 = !DIEnumerator(name: "OPT_Wformat_y2k", value: 96, isUnsigned: true)
!717 = !DIEnumerator(name: "OPT_Wformat_zero_length", value: 97, isUnsigned: true)
!718 = !DIEnumerator(name: "OPT_Wformat_", value: 98, isUnsigned: true)
!719 = !DIEnumerator(name: "OPT_Wframe_larger_than_", value: 99, isUnsigned: true)
!720 = !DIEnumerator(name: "OPT_Whiding", value: 100, isUnsigned: true)
!721 = !DIEnumerator(name: "OPT_Wignored_qualifiers", value: 101, isUnsigned: true)
!722 = !DIEnumerator(name: "OPT_Wimplicit", value: 102, isUnsigned: true)
!723 = !DIEnumerator(name: "OPT_Wimplicit_function_declaration", value: 103, isUnsigned: true)
!724 = !DIEnumerator(name: "OPT_Wimplicit_int", value: 104, isUnsigned: true)
!725 = !DIEnumerator(name: "OPT_Wimplicit_interface", value: 105, isUnsigned: true)
!726 = !DIEnumerator(name: "OPT_Wimplicit_procedure", value: 106, isUnsigned: true)
!727 = !DIEnumerator(name: "OPT_Wimport", value: 107, isUnsigned: true)
!728 = !DIEnumerator(name: "OPT_Windirect_static", value: 108, isUnsigned: true)
!729 = !DIEnumerator(name: "OPT_Winit_self", value: 109, isUnsigned: true)
!730 = !DIEnumerator(name: "OPT_Winline", value: 110, isUnsigned: true)
!731 = !DIEnumerator(name: "OPT_Wint_to_pointer_cast", value: 111, isUnsigned: true)
!732 = !DIEnumerator(name: "OPT_Wintf_annotation", value: 112, isUnsigned: true)
!733 = !DIEnumerator(name: "OPT_Wintf_non_inherited", value: 113, isUnsigned: true)
!734 = !DIEnumerator(name: "OPT_Wintrinsic_shadow", value: 114, isUnsigned: true)
!735 = !DIEnumerator(name: "OPT_Wintrinsics_std", value: 115, isUnsigned: true)
!736 = !DIEnumerator(name: "OPT_Winvalid_offsetof", value: 116, isUnsigned: true)
!737 = !DIEnumerator(name: "OPT_Winvalid_pch", value: 117, isUnsigned: true)
!738 = !DIEnumerator(name: "OPT_Wjavadoc", value: 118, isUnsigned: true)
!739 = !DIEnumerator(name: "OPT_Wjump_misses_init", value: 119, isUnsigned: true)
!740 = !DIEnumerator(name: "OPT_Wlarger_than_", value: 120, isUnsigned: true)
!741 = !DIEnumerator(name: "OPT_Wlarger_than_eq", value: 121, isUnsigned: true)
!742 = !DIEnumerator(name: "OPT_Wline_truncation", value: 122, isUnsigned: true)
!743 = !DIEnumerator(name: "OPT_Wlocal_hiding", value: 123, isUnsigned: true)
!744 = !DIEnumerator(name: "OPT_Wlogical_op", value: 124, isUnsigned: true)
!745 = !DIEnumerator(name: "OPT_Wlong_long", value: 125, isUnsigned: true)
!746 = !DIEnumerator(name: "OPT_Wmain", value: 126, isUnsigned: true)
!747 = !DIEnumerator(name: "OPT_Wmasked_catch_block", value: 127, isUnsigned: true)
!748 = !DIEnumerator(name: "OPT_Wmissing_braces", value: 128, isUnsigned: true)
!749 = !DIEnumerator(name: "OPT_Wmissing_declarations", value: 129, isUnsigned: true)
!750 = !DIEnumerator(name: "OPT_Wmissing_field_initializers", value: 130, isUnsigned: true)
!751 = !DIEnumerator(name: "OPT_Wmissing_format_attribute", value: 131, isUnsigned: true)
!752 = !DIEnumerator(name: "OPT_Wmissing_include_dirs", value: 132, isUnsigned: true)
!753 = !DIEnumerator(name: "OPT_Wmissing_noreturn", value: 133, isUnsigned: true)
!754 = !DIEnumerator(name: "OPT_Wmissing_parameter_type", value: 134, isUnsigned: true)
!755 = !DIEnumerator(name: "OPT_Wmissing_prototypes", value: 135, isUnsigned: true)
!756 = !DIEnumerator(name: "OPT_Wmudflap", value: 136, isUnsigned: true)
!757 = !DIEnumerator(name: "OPT_Wmultichar", value: 137, isUnsigned: true)
!758 = !DIEnumerator(name: "OPT_Wnested_externs", value: 138, isUnsigned: true)
!759 = !DIEnumerator(name: "OPT_Wnls", value: 139, isUnsigned: true)
!760 = !DIEnumerator(name: "OPT_Wno_effect_assign", value: 140, isUnsigned: true)
!761 = !DIEnumerator(name: "OPT_Wnon_template_friend", value: 141, isUnsigned: true)
!762 = !DIEnumerator(name: "OPT_Wnon_virtual_dtor", value: 142, isUnsigned: true)
!763 = !DIEnumerator(name: "OPT_Wnonnull", value: 143, isUnsigned: true)
!764 = !DIEnumerator(name: "OPT_Wnormalized_", value: 144, isUnsigned: true)
!765 = !DIEnumerator(name: "OPT_Wnull", value: 145, isUnsigned: true)
!766 = !DIEnumerator(name: "OPT_Wold_style_cast", value: 146, isUnsigned: true)
!767 = !DIEnumerator(name: "OPT_Wold_style_declaration", value: 147, isUnsigned: true)
!768 = !DIEnumerator(name: "OPT_Wold_style_definition", value: 148, isUnsigned: true)
!769 = !DIEnumerator(name: "OPT_Wout_of_date", value: 149, isUnsigned: true)
!770 = !DIEnumerator(name: "OPT_Wover_ann", value: 150, isUnsigned: true)
!771 = !DIEnumerator(name: "OPT_Woverflow", value: 151, isUnsigned: true)
!772 = !DIEnumerator(name: "OPT_Woverlength_strings", value: 152, isUnsigned: true)
!773 = !DIEnumerator(name: "OPT_Woverloaded_virtual", value: 153, isUnsigned: true)
!774 = !DIEnumerator(name: "OPT_Woverride_init", value: 154, isUnsigned: true)
!775 = !DIEnumerator(name: "OPT_Wpacked", value: 155, isUnsigned: true)
!776 = !DIEnumerator(name: "OPT_Wpacked_bitfield_compat", value: 156, isUnsigned: true)
!777 = !DIEnumerator(name: "OPT_Wpadded", value: 157, isUnsigned: true)
!778 = !DIEnumerator(name: "OPT_Wparam_assign", value: 158, isUnsigned: true)
!779 = !DIEnumerator(name: "OPT_Wparentheses", value: 159, isUnsigned: true)
!780 = !DIEnumerator(name: "OPT_Wpkg_default_method", value: 160, isUnsigned: true)
!781 = !DIEnumerator(name: "OPT_Wpmf_conversions", value: 161, isUnsigned: true)
!782 = !DIEnumerator(name: "OPT_Wpointer_arith", value: 162, isUnsigned: true)
!783 = !DIEnumerator(name: "OPT_Wpointer_sign", value: 163, isUnsigned: true)
!784 = !DIEnumerator(name: "OPT_Wpointer_to_int_cast", value: 164, isUnsigned: true)
!785 = !DIEnumerator(name: "OPT_Wpragmas", value: 165, isUnsigned: true)
!786 = !DIEnumerator(name: "OPT_Wprotocol", value: 166, isUnsigned: true)
!787 = !DIEnumerator(name: "OPT_Wpsabi", value: 167, isUnsigned: true)
!788 = !DIEnumerator(name: "OPT_Wraw", value: 168, isUnsigned: true)
!789 = !DIEnumerator(name: "OPT_Wredundant_decls", value: 169, isUnsigned: true)
!790 = !DIEnumerator(name: "OPT_Wredundant_modifiers", value: 170, isUnsigned: true)
!791 = !DIEnumerator(name: "OPT_Wreorder", value: 171, isUnsigned: true)
!792 = !DIEnumerator(name: "OPT_Wreturn_type", value: 172, isUnsigned: true)
!793 = !DIEnumerator(name: "OPT_Wselector", value: 173, isUnsigned: true)
!794 = !DIEnumerator(name: "OPT_Wsequence_point", value: 174, isUnsigned: true)
!795 = !DIEnumerator(name: "OPT_Wserial", value: 175, isUnsigned: true)
!796 = !DIEnumerator(name: "OPT_Wshadow", value: 176, isUnsigned: true)
!797 = !DIEnumerator(name: "OPT_Wsign_compare", value: 177, isUnsigned: true)
!798 = !DIEnumerator(name: "OPT_Wsign_conversion", value: 178, isUnsigned: true)
!799 = !DIEnumerator(name: "OPT_Wsign_promo", value: 179, isUnsigned: true)
!800 = !DIEnumerator(name: "OPT_Wspecial_param_hiding", value: 180, isUnsigned: true)
!801 = !DIEnumerator(name: "OPT_Wstack_protector", value: 181, isUnsigned: true)
!802 = !DIEnumerator(name: "OPT_Wstatic_access", value: 182, isUnsigned: true)
!803 = !DIEnumerator(name: "OPT_Wstatic_receiver", value: 183, isUnsigned: true)
!804 = !DIEnumerator(name: "OPT_Wstrict_aliasing", value: 184, isUnsigned: true)
!805 = !DIEnumerator(name: "OPT_Wstrict_aliasing_", value: 185, isUnsigned: true)
!806 = !DIEnumerator(name: "OPT_Wstrict_null_sentinel", value: 186, isUnsigned: true)
!807 = !DIEnumerator(name: "OPT_Wstrict_overflow", value: 187, isUnsigned: true)
!808 = !DIEnumerator(name: "OPT_Wstrict_overflow_", value: 188, isUnsigned: true)
!809 = !DIEnumerator(name: "OPT_Wstrict_prototypes", value: 189, isUnsigned: true)
!810 = !DIEnumerator(name: "OPT_Wstrict_selector_match", value: 190, isUnsigned: true)
!811 = !DIEnumerator(name: "OPT_Wsuppress", value: 191, isUnsigned: true)
!812 = !DIEnumerator(name: "OPT_Wsurprising", value: 192, isUnsigned: true)
!813 = !DIEnumerator(name: "OPT_Wswitch", value: 193, isUnsigned: true)
!814 = !DIEnumerator(name: "OPT_Wswitch_default", value: 194, isUnsigned: true)
!815 = !DIEnumerator(name: "OPT_Wswitch_enum", value: 195, isUnsigned: true)
!816 = !DIEnumerator(name: "OPT_Wsync_nand", value: 196, isUnsigned: true)
!817 = !DIEnumerator(name: "OPT_Wsynth", value: 197, isUnsigned: true)
!818 = !DIEnumerator(name: "OPT_Wsynthetic_access", value: 198, isUnsigned: true)
!819 = !DIEnumerator(name: "OPT_Wsystem_headers", value: 199, isUnsigned: true)
!820 = !DIEnumerator(name: "OPT_Wtabs", value: 200, isUnsigned: true)
!821 = !DIEnumerator(name: "OPT_Wtasks", value: 201, isUnsigned: true)
!822 = !DIEnumerator(name: "OPT_Wtraditional", value: 202, isUnsigned: true)
!823 = !DIEnumerator(name: "OPT_Wtraditional_conversion", value: 203, isUnsigned: true)
!824 = !DIEnumerator(name: "OPT_Wtrigraphs", value: 204, isUnsigned: true)
!825 = !DIEnumerator(name: "OPT_Wtype_hiding", value: 205, isUnsigned: true)
!826 = !DIEnumerator(name: "OPT_Wtype_limits", value: 206, isUnsigned: true)
!827 = !DIEnumerator(name: "OPT_Wuncheck", value: 207, isUnsigned: true)
!828 = !DIEnumerator(name: "OPT_Wundeclared_selector", value: 208, isUnsigned: true)
!829 = !DIEnumerator(name: "OPT_Wundef", value: 209, isUnsigned: true)
!830 = !DIEnumerator(name: "OPT_Wunderflow", value: 210, isUnsigned: true)
!831 = !DIEnumerator(name: "OPT_Wuninitialized", value: 211, isUnsigned: true)
!832 = !DIEnumerator(name: "OPT_Wunknown_pragmas", value: 212, isUnsigned: true)
!833 = !DIEnumerator(name: "OPT_Wunnecessary_else", value: 213, isUnsigned: true)
!834 = !DIEnumerator(name: "OPT_Wunqualified_field", value: 214, isUnsigned: true)
!835 = !DIEnumerator(name: "OPT_Wunreachable_code", value: 215, isUnsigned: true)
!836 = !DIEnumerator(name: "OPT_Wunsafe_loop_optimizations", value: 216, isUnsigned: true)
!837 = !DIEnumerator(name: "OPT_Wunsuffixed_float_constants", value: 217, isUnsigned: true)
!838 = !DIEnumerator(name: "OPT_Wunused", value: 218, isUnsigned: true)
!839 = !DIEnumerator(name: "OPT_Wunused_argument", value: 219, isUnsigned: true)
!840 = !DIEnumerator(name: "OPT_Wunused_function", value: 220, isUnsigned: true)
!841 = !DIEnumerator(name: "OPT_Wunused_import", value: 221, isUnsigned: true)
!842 = !DIEnumerator(name: "OPT_Wunused_label", value: 222, isUnsigned: true)
!843 = !DIEnumerator(name: "OPT_Wunused_local", value: 223, isUnsigned: true)
!844 = !DIEnumerator(name: "OPT_Wunused_macros", value: 224, isUnsigned: true)
!845 = !DIEnumerator(name: "OPT_Wunused_parameter", value: 225, isUnsigned: true)
!846 = !DIEnumerator(name: "OPT_Wunused_private", value: 226, isUnsigned: true)
!847 = !DIEnumerator(name: "OPT_Wunused_result", value: 227, isUnsigned: true)
!848 = !DIEnumerator(name: "OPT_Wunused_thrown", value: 228, isUnsigned: true)
!849 = !DIEnumerator(name: "OPT_Wunused_value", value: 229, isUnsigned: true)
!850 = !DIEnumerator(name: "OPT_Wunused_variable", value: 230, isUnsigned: true)
!851 = !DIEnumerator(name: "OPT_Wuseless_type_check", value: 231, isUnsigned: true)
!852 = !DIEnumerator(name: "OPT_Wvarargs_cast", value: 232, isUnsigned: true)
!853 = !DIEnumerator(name: "OPT_Wvariadic_macros", value: 233, isUnsigned: true)
!854 = !DIEnumerator(name: "OPT_Wvla", value: 234, isUnsigned: true)
!855 = !DIEnumerator(name: "OPT_Wvolatile_register_var", value: 235, isUnsigned: true)
!856 = !DIEnumerator(name: "OPT_Wwarning_token", value: 236, isUnsigned: true)
!857 = !DIEnumerator(name: "OPT_Wwrite_strings", value: 237, isUnsigned: true)
!858 = !DIEnumerator(name: "OPT_ansi", value: 238, isUnsigned: true)
!859 = !DIEnumerator(name: "OPT_aux_info", value: 239, isUnsigned: true)
!860 = !DIEnumerator(name: "OPT_aux_info_", value: 240, isUnsigned: true)
!861 = !DIEnumerator(name: "OPT_auxbase", value: 241, isUnsigned: true)
!862 = !DIEnumerator(name: "OPT_auxbase_strip", value: 242, isUnsigned: true)
!863 = !DIEnumerator(name: "OPT_cpp", value: 243, isUnsigned: true)
!864 = !DIEnumerator(name: "OPT_d", value: 244, isUnsigned: true)
!865 = !DIEnumerator(name: "OPT_dumpbase", value: 245, isUnsigned: true)
!866 = !DIEnumerator(name: "OPT_dumpdir", value: 246, isUnsigned: true)
!867 = !DIEnumerator(name: "OPT_fCLASSPATH_", value: 247, isUnsigned: true)
!868 = !DIEnumerator(name: "OPT_fPIC", value: 248, isUnsigned: true)
!869 = !DIEnumerator(name: "OPT_fPIE", value: 249, isUnsigned: true)
!870 = !DIEnumerator(name: "OPT_fRTS_", value: 250, isUnsigned: true)
!871 = !DIEnumerator(name: "OPT_fabi_version_", value: 251, isUnsigned: true)
!872 = !DIEnumerator(name: "OPT_faccess_control", value: 252, isUnsigned: true)
!873 = !DIEnumerator(name: "OPT_falign_commons", value: 253, isUnsigned: true)
!874 = !DIEnumerator(name: "OPT_falign_functions", value: 254, isUnsigned: true)
!875 = !DIEnumerator(name: "OPT_falign_functions_", value: 255, isUnsigned: true)
!876 = !DIEnumerator(name: "OPT_falign_jumps", value: 256, isUnsigned: true)
!877 = !DIEnumerator(name: "OPT_falign_jumps_", value: 257, isUnsigned: true)
!878 = !DIEnumerator(name: "OPT_falign_labels", value: 258, isUnsigned: true)
!879 = !DIEnumerator(name: "OPT_falign_labels_", value: 259, isUnsigned: true)
!880 = !DIEnumerator(name: "OPT_falign_loops", value: 260, isUnsigned: true)
!881 = !DIEnumerator(name: "OPT_falign_loops_", value: 261, isUnsigned: true)
!882 = !DIEnumerator(name: "OPT_fall_intrinsics", value: 262, isUnsigned: true)
!883 = !DIEnumerator(name: "OPT_fall_virtual", value: 263, isUnsigned: true)
!884 = !DIEnumerator(name: "OPT_fallow_leading_underscore", value: 264, isUnsigned: true)
!885 = !DIEnumerator(name: "OPT_falt_external_templates", value: 265, isUnsigned: true)
!886 = !DIEnumerator(name: "OPT_fargument_alias", value: 266, isUnsigned: true)
!887 = !DIEnumerator(name: "OPT_fargument_noalias", value: 267, isUnsigned: true)
!888 = !DIEnumerator(name: "OPT_fargument_noalias_anything", value: 268, isUnsigned: true)
!889 = !DIEnumerator(name: "OPT_fargument_noalias_global", value: 269, isUnsigned: true)
!890 = !DIEnumerator(name: "OPT_fasm", value: 270, isUnsigned: true)
!891 = !DIEnumerator(name: "OPT_fassert", value: 271, isUnsigned: true)
!892 = !DIEnumerator(name: "OPT_fassociative_math", value: 272, isUnsigned: true)
!893 = !DIEnumerator(name: "OPT_fassume_compiled", value: 273, isUnsigned: true)
!894 = !DIEnumerator(name: "OPT_fassume_compiled_", value: 274, isUnsigned: true)
!895 = !DIEnumerator(name: "OPT_fasynchronous_unwind_tables", value: 275, isUnsigned: true)
!896 = !DIEnumerator(name: "OPT_fauto_inc_dec", value: 276, isUnsigned: true)
!897 = !DIEnumerator(name: "OPT_fautomatic", value: 277, isUnsigned: true)
!898 = !DIEnumerator(name: "OPT_faux_classpath", value: 278, isUnsigned: true)
!899 = !DIEnumerator(name: "OPT_fbackslash", value: 279, isUnsigned: true)
!900 = !DIEnumerator(name: "OPT_fbacktrace", value: 280, isUnsigned: true)
!901 = !DIEnumerator(name: "OPT_fblas_matmul_limit_", value: 281, isUnsigned: true)
!902 = !DIEnumerator(name: "OPT_fbootclasspath_", value: 282, isUnsigned: true)
!903 = !DIEnumerator(name: "OPT_fbootstrap_classes", value: 283, isUnsigned: true)
!904 = !DIEnumerator(name: "OPT_fbounds_check", value: 284, isUnsigned: true)
!905 = !DIEnumerator(name: "OPT_fbranch_count_reg", value: 285, isUnsigned: true)
!906 = !DIEnumerator(name: "OPT_fbranch_probabilities", value: 286, isUnsigned: true)
!907 = !DIEnumerator(name: "OPT_fbranch_target_load_optimize", value: 287, isUnsigned: true)
!908 = !DIEnumerator(name: "OPT_fbranch_target_load_optimize2", value: 288, isUnsigned: true)
!909 = !DIEnumerator(name: "OPT_fbtr_bb_exclusive", value: 289, isUnsigned: true)
!910 = !DIEnumerator(name: "OPT_fbuiltin", value: 290, isUnsigned: true)
!911 = !DIEnumerator(name: "OPT_fbuiltin_", value: 291, isUnsigned: true)
!912 = !DIEnumerator(name: "OPT_fcall_saved_", value: 292, isUnsigned: true)
!913 = !DIEnumerator(name: "OPT_fcall_used_", value: 293, isUnsigned: true)
!914 = !DIEnumerator(name: "OPT_fcaller_saves", value: 294, isUnsigned: true)
!915 = !DIEnumerator(name: "OPT_fcheck_array_temporaries", value: 295, isUnsigned: true)
!916 = !DIEnumerator(name: "OPT_fcheck_data_deps", value: 296, isUnsigned: true)
!917 = !DIEnumerator(name: "OPT_fcheck_new", value: 297, isUnsigned: true)
!918 = !DIEnumerator(name: "OPT_fcheck_references", value: 298, isUnsigned: true)
!919 = !DIEnumerator(name: "OPT_fcheck_", value: 299, isUnsigned: true)
!920 = !DIEnumerator(name: "OPT_fclasspath_", value: 300, isUnsigned: true)
!921 = !DIEnumerator(name: "OPT_fcommon", value: 301, isUnsigned: true)
!922 = !DIEnumerator(name: "OPT_fcompare_debug_second", value: 302, isUnsigned: true)
!923 = !DIEnumerator(name: "OPT_fcompare_debug_", value: 303, isUnsigned: true)
!924 = !DIEnumerator(name: "OPT_fcompile_resource_", value: 304, isUnsigned: true)
!925 = !DIEnumerator(name: "OPT_fcond_mismatch", value: 305, isUnsigned: true)
!926 = !DIEnumerator(name: "OPT_fconserve_space", value: 306, isUnsigned: true)
!927 = !DIEnumerator(name: "OPT_fconserve_stack", value: 307, isUnsigned: true)
!928 = !DIEnumerator(name: "OPT_fconstant_string_class_", value: 308, isUnsigned: true)
!929 = !DIEnumerator(name: "OPT_fconvert_big_endian", value: 309, isUnsigned: true)
!930 = !DIEnumerator(name: "OPT_fconvert_little_endian", value: 310, isUnsigned: true)
!931 = !DIEnumerator(name: "OPT_fconvert_native", value: 311, isUnsigned: true)
!932 = !DIEnumerator(name: "OPT_fconvert_swap", value: 312, isUnsigned: true)
!933 = !DIEnumerator(name: "OPT_fcprop_registers", value: 313, isUnsigned: true)
!934 = !DIEnumerator(name: "OPT_fcray_pointer", value: 314, isUnsigned: true)
!935 = !DIEnumerator(name: "OPT_fcrossjumping", value: 315, isUnsigned: true)
!936 = !DIEnumerator(name: "OPT_fcse_follow_jumps", value: 316, isUnsigned: true)
!937 = !DIEnumerator(name: "OPT_fcse_skip_blocks", value: 317, isUnsigned: true)
!938 = !DIEnumerator(name: "OPT_fcx_fortran_rules", value: 318, isUnsigned: true)
!939 = !DIEnumerator(name: "OPT_fcx_limited_range", value: 319, isUnsigned: true)
!940 = !DIEnumerator(name: "OPT_fd_lines_as_code", value: 320, isUnsigned: true)
!941 = !DIEnumerator(name: "OPT_fd_lines_as_comments", value: 321, isUnsigned: true)
!942 = !DIEnumerator(name: "OPT_fdata_sections", value: 322, isUnsigned: true)
!943 = !DIEnumerator(name: "OPT_fdbg_cnt_list", value: 323, isUnsigned: true)
!944 = !DIEnumerator(name: "OPT_fdbg_cnt_", value: 324, isUnsigned: true)
!945 = !DIEnumerator(name: "OPT_fdce", value: 325, isUnsigned: true)
!946 = !DIEnumerator(name: "OPT_fdebug_prefix_map_", value: 326, isUnsigned: true)
!947 = !DIEnumerator(name: "OPT_fdeduce_init_list", value: 327, isUnsigned: true)
!948 = !DIEnumerator(name: "OPT_fdefault_double_8", value: 328, isUnsigned: true)
!949 = !DIEnumerator(name: "OPT_fdefault_inline", value: 329, isUnsigned: true)
!950 = !DIEnumerator(name: "OPT_fdefault_integer_8", value: 330, isUnsigned: true)
!951 = !DIEnumerator(name: "OPT_fdefault_real_8", value: 331, isUnsigned: true)
!952 = !DIEnumerator(name: "OPT_fdefer_pop", value: 332, isUnsigned: true)
!953 = !DIEnumerator(name: "OPT_fdelayed_branch", value: 333, isUnsigned: true)
!954 = !DIEnumerator(name: "OPT_fdelete_null_pointer_checks", value: 334, isUnsigned: true)
!955 = !DIEnumerator(name: "OPT_fdiagnostics_show_location_", value: 335, isUnsigned: true)
!956 = !DIEnumerator(name: "OPT_fdiagnostics_show_option", value: 336, isUnsigned: true)
!957 = !DIEnumerator(name: "OPT_fdirectives_only", value: 337, isUnsigned: true)
!958 = !DIEnumerator(name: "OPT_fdisable_assertions", value: 338, isUnsigned: true)
!959 = !DIEnumerator(name: "OPT_fdisable_assertions_", value: 339, isUnsigned: true)
!960 = !DIEnumerator(name: "OPT_fdollar_ok", value: 340, isUnsigned: true)
!961 = !DIEnumerator(name: "OPT_fdollars_in_identifiers", value: 341, isUnsigned: true)
!962 = !DIEnumerator(name: "OPT_fdse", value: 342, isUnsigned: true)
!963 = !DIEnumerator(name: "OPT_fdump_", value: 343, isUnsigned: true)
!964 = !DIEnumerator(name: "OPT_fdump_core", value: 344, isUnsigned: true)
!965 = !DIEnumerator(name: "OPT_fdump_final_insns_", value: 345, isUnsigned: true)
!966 = !DIEnumerator(name: "OPT_fdump_noaddr", value: 346, isUnsigned: true)
!967 = !DIEnumerator(name: "OPT_fdump_parse_tree", value: 347, isUnsigned: true)
!968 = !DIEnumerator(name: "OPT_fdump_unnumbered", value: 348, isUnsigned: true)
!969 = !DIEnumerator(name: "OPT_fdump_unnumbered_links", value: 349, isUnsigned: true)
!970 = !DIEnumerator(name: "OPT_fdwarf2_cfi_asm", value: 350, isUnsigned: true)
!971 = !DIEnumerator(name: "OPT_fearly_inlining", value: 351, isUnsigned: true)
!972 = !DIEnumerator(name: "OPT_felide_constructors", value: 352, isUnsigned: true)
!973 = !DIEnumerator(name: "OPT_feliminate_dwarf2_dups", value: 353, isUnsigned: true)
!974 = !DIEnumerator(name: "OPT_feliminate_unused_debug_symbols", value: 354, isUnsigned: true)
!975 = !DIEnumerator(name: "OPT_feliminate_unused_debug_types", value: 355, isUnsigned: true)
!976 = !DIEnumerator(name: "OPT_femit_class_debug_always", value: 356, isUnsigned: true)
!977 = !DIEnumerator(name: "OPT_femit_class_file", value: 357, isUnsigned: true)
!978 = !DIEnumerator(name: "OPT_femit_class_files", value: 358, isUnsigned: true)
!979 = !DIEnumerator(name: "OPT_femit_struct_debug_baseonly", value: 359, isUnsigned: true)
!980 = !DIEnumerator(name: "OPT_femit_struct_debug_detailed_", value: 360, isUnsigned: true)
!981 = !DIEnumerator(name: "OPT_femit_struct_debug_reduced", value: 361, isUnsigned: true)
!982 = !DIEnumerator(name: "OPT_fenable_assertions", value: 362, isUnsigned: true)
!983 = !DIEnumerator(name: "OPT_fenable_assertions_", value: 363, isUnsigned: true)
!984 = !DIEnumerator(name: "OPT_fenable_icf_debug", value: 364, isUnsigned: true)
!985 = !DIEnumerator(name: "OPT_fencoding_", value: 365, isUnsigned: true)
!986 = !DIEnumerator(name: "OPT_fenforce_eh_specs", value: 366, isUnsigned: true)
!987 = !DIEnumerator(name: "OPT_fenum_int_equiv", value: 367, isUnsigned: true)
!988 = !DIEnumerator(name: "OPT_fexceptions", value: 368, isUnsigned: true)
!989 = !DIEnumerator(name: "OPT_fexcess_precision_", value: 369, isUnsigned: true)
!990 = !DIEnumerator(name: "OPT_fexec_charset_", value: 370, isUnsigned: true)
!991 = !DIEnumerator(name: "OPT_fexpensive_optimizations", value: 371, isUnsigned: true)
!992 = !DIEnumerator(name: "OPT_fextdirs_", value: 372, isUnsigned: true)
!993 = !DIEnumerator(name: "OPT_fextended_identifiers", value: 373, isUnsigned: true)
!994 = !DIEnumerator(name: "OPT_fexternal_blas", value: 374, isUnsigned: true)
!995 = !DIEnumerator(name: "OPT_fexternal_templates", value: 375, isUnsigned: true)
!996 = !DIEnumerator(name: "OPT_ff2c", value: 376, isUnsigned: true)
!997 = !DIEnumerator(name: "OPT_ffast_math", value: 377, isUnsigned: true)
!998 = !DIEnumerator(name: "OPT_ffilelist_file", value: 378, isUnsigned: true)
!999 = !DIEnumerator(name: "OPT_ffinite_math_only", value: 379, isUnsigned: true)
!1000 = !DIEnumerator(name: "OPT_ffixed_", value: 380, isUnsigned: true)
!1001 = !DIEnumerator(name: "OPT_ffixed_form", value: 381, isUnsigned: true)
!1002 = !DIEnumerator(name: "OPT_ffixed_line_length_", value: 382, isUnsigned: true)
!1003 = !DIEnumerator(name: "OPT_ffixed_line_length_none", value: 383, isUnsigned: true)
!1004 = !DIEnumerator(name: "OPT_ffloat_store", value: 384, isUnsigned: true)
!1005 = !DIEnumerator(name: "OPT_ffor_scope", value: 385, isUnsigned: true)
!1006 = !DIEnumerator(name: "OPT_fforce_addr", value: 386, isUnsigned: true)
!1007 = !DIEnumerator(name: "OPT_fforce_classes_archive_check", value: 387, isUnsigned: true)
!1008 = !DIEnumerator(name: "OPT_fforward_propagate", value: 388, isUnsigned: true)
!1009 = !DIEnumerator(name: "OPT_ffpe_trap_", value: 389, isUnsigned: true)
!1010 = !DIEnumerator(name: "OPT_ffree_form", value: 390, isUnsigned: true)
!1011 = !DIEnumerator(name: "OPT_ffree_line_length_", value: 391, isUnsigned: true)
!1012 = !DIEnumerator(name: "OPT_ffree_line_length_none", value: 392, isUnsigned: true)
!1013 = !DIEnumerator(name: "OPT_ffreestanding", value: 393, isUnsigned: true)
!1014 = !DIEnumerator(name: "OPT_ffriend_injection", value: 394, isUnsigned: true)
!1015 = !DIEnumerator(name: "OPT_ffunction_cse", value: 395, isUnsigned: true)
!1016 = !DIEnumerator(name: "OPT_ffunction_sections", value: 396, isUnsigned: true)
!1017 = !DIEnumerator(name: "OPT_fgcse", value: 397, isUnsigned: true)
!1018 = !DIEnumerator(name: "OPT_fgcse_after_reload", value: 398, isUnsigned: true)
!1019 = !DIEnumerator(name: "OPT_fgcse_las", value: 399, isUnsigned: true)
!1020 = !DIEnumerator(name: "OPT_fgcse_lm", value: 400, isUnsigned: true)
!1021 = !DIEnumerator(name: "OPT_fgcse_sm", value: 401, isUnsigned: true)
!1022 = !DIEnumerator(name: "OPT_fgnu_keywords", value: 402, isUnsigned: true)
!1023 = !DIEnumerator(name: "OPT_fgnu_runtime", value: 403, isUnsigned: true)
!1024 = !DIEnumerator(name: "OPT_fgnu89_inline", value: 404, isUnsigned: true)
!1025 = !DIEnumerator(name: "OPT_fgraphite", value: 405, isUnsigned: true)
!1026 = !DIEnumerator(name: "OPT_fgraphite_identity", value: 406, isUnsigned: true)
!1027 = !DIEnumerator(name: "OPT_fguess_branch_probability", value: 407, isUnsigned: true)
!1028 = !DIEnumerator(name: "OPT_fguiding_decls", value: 408, isUnsigned: true)
!1029 = !DIEnumerator(name: "OPT_fhandle_exceptions", value: 409, isUnsigned: true)
!1030 = !DIEnumerator(name: "OPT_fhash_synchronization", value: 410, isUnsigned: true)
!1031 = !DIEnumerator(name: "OPT_fhelp", value: 411, isUnsigned: true)
!1032 = !DIEnumerator(name: "OPT_fhelp_", value: 412, isUnsigned: true)
!1033 = !DIEnumerator(name: "OPT_fhonor_std", value: 413, isUnsigned: true)
!1034 = !DIEnumerator(name: "OPT_fhosted", value: 414, isUnsigned: true)
!1035 = !DIEnumerator(name: "OPT_fhuge_objects", value: 415, isUnsigned: true)
!1036 = !DIEnumerator(name: "OPT_fident", value: 416, isUnsigned: true)
!1037 = !DIEnumerator(name: "OPT_fif_conversion", value: 417, isUnsigned: true)
!1038 = !DIEnumerator(name: "OPT_fif_conversion2", value: 418, isUnsigned: true)
!1039 = !DIEnumerator(name: "OPT_fimplement_inlines", value: 419, isUnsigned: true)
!1040 = !DIEnumerator(name: "OPT_fimplicit_inline_templates", value: 420, isUnsigned: true)
!1041 = !DIEnumerator(name: "OPT_fimplicit_none", value: 421, isUnsigned: true)
!1042 = !DIEnumerator(name: "OPT_fimplicit_templates", value: 422, isUnsigned: true)
!1043 = !DIEnumerator(name: "OPT_findirect_classes", value: 423, isUnsigned: true)
!1044 = !DIEnumerator(name: "OPT_findirect_dispatch", value: 424, isUnsigned: true)
!1045 = !DIEnumerator(name: "OPT_findirect_inlining", value: 425, isUnsigned: true)
!1046 = !DIEnumerator(name: "OPT_finhibit_size_directive", value: 426, isUnsigned: true)
!1047 = !DIEnumerator(name: "OPT_finit_character_", value: 427, isUnsigned: true)
!1048 = !DIEnumerator(name: "OPT_finit_integer_", value: 428, isUnsigned: true)
!1049 = !DIEnumerator(name: "OPT_finit_local_zero", value: 429, isUnsigned: true)
!1050 = !DIEnumerator(name: "OPT_finit_logical_", value: 430, isUnsigned: true)
!1051 = !DIEnumerator(name: "OPT_finit_real_", value: 431, isUnsigned: true)
!1052 = !DIEnumerator(name: "OPT_finline", value: 432, isUnsigned: true)
!1053 = !DIEnumerator(name: "OPT_finline_functions", value: 433, isUnsigned: true)
!1054 = !DIEnumerator(name: "OPT_finline_functions_called_once", value: 434, isUnsigned: true)
!1055 = !DIEnumerator(name: "OPT_finline_limit_", value: 435, isUnsigned: true)
!1056 = !DIEnumerator(name: "OPT_finline_limit_eq", value: 436, isUnsigned: true)
!1057 = !DIEnumerator(name: "OPT_finline_small_functions", value: 437, isUnsigned: true)
!1058 = !DIEnumerator(name: "OPT_finput_charset_", value: 438, isUnsigned: true)
!1059 = !DIEnumerator(name: "OPT_finstrument_functions", value: 439, isUnsigned: true)
!1060 = !DIEnumerator(name: "OPT_finstrument_functions_exclude_file_list_", value: 440, isUnsigned: true)
!1061 = !DIEnumerator(name: "OPT_finstrument_functions_exclude_function_list_", value: 441, isUnsigned: true)
!1062 = !DIEnumerator(name: "OPT_fintrinsic_modules_path", value: 442, isUnsigned: true)
!1063 = !DIEnumerator(name: "OPT_fipa_cp", value: 443, isUnsigned: true)
!1064 = !DIEnumerator(name: "OPT_fipa_cp_clone", value: 444, isUnsigned: true)
!1065 = !DIEnumerator(name: "OPT_fipa_matrix_reorg", value: 445, isUnsigned: true)
!1066 = !DIEnumerator(name: "OPT_fipa_pta", value: 446, isUnsigned: true)
!1067 = !DIEnumerator(name: "OPT_fipa_pure_const", value: 447, isUnsigned: true)
!1068 = !DIEnumerator(name: "OPT_fipa_reference", value: 448, isUnsigned: true)
!1069 = !DIEnumerator(name: "OPT_fipa_sra", value: 449, isUnsigned: true)
!1070 = !DIEnumerator(name: "OPT_fipa_struct_reorg", value: 450, isUnsigned: true)
!1071 = !DIEnumerator(name: "OPT_fipa_type_escape", value: 451, isUnsigned: true)
!1072 = !DIEnumerator(name: "OPT_fira_algorithm_", value: 452, isUnsigned: true)
!1073 = !DIEnumerator(name: "OPT_fira_coalesce", value: 453, isUnsigned: true)
!1074 = !DIEnumerator(name: "OPT_fira_loop_pressure", value: 454, isUnsigned: true)
!1075 = !DIEnumerator(name: "OPT_fira_region_", value: 455, isUnsigned: true)
!1076 = !DIEnumerator(name: "OPT_fira_share_save_slots", value: 456, isUnsigned: true)
!1077 = !DIEnumerator(name: "OPT_fira_share_spill_slots", value: 457, isUnsigned: true)
!1078 = !DIEnumerator(name: "OPT_fira_verbose_", value: 458, isUnsigned: true)
!1079 = !DIEnumerator(name: "OPT_fivopts", value: 459, isUnsigned: true)
!1080 = !DIEnumerator(name: "OPT_fjni", value: 460, isUnsigned: true)
!1081 = !DIEnumerator(name: "OPT_fjump_tables", value: 461, isUnsigned: true)
!1082 = !DIEnumerator(name: "OPT_fkeep_inline_functions", value: 462, isUnsigned: true)
!1083 = !DIEnumerator(name: "OPT_fkeep_static_consts", value: 463, isUnsigned: true)
!1084 = !DIEnumerator(name: "OPT_flabels_ok", value: 464, isUnsigned: true)
!1085 = !DIEnumerator(name: "OPT_flax_vector_conversions", value: 465, isUnsigned: true)
!1086 = !DIEnumerator(name: "OPT_fleading_underscore", value: 466, isUnsigned: true)
!1087 = !DIEnumerator(name: "OPT_floop_block", value: 467, isUnsigned: true)
!1088 = !DIEnumerator(name: "OPT_floop_interchange", value: 468, isUnsigned: true)
!1089 = !DIEnumerator(name: "OPT_floop_optimize", value: 469, isUnsigned: true)
!1090 = !DIEnumerator(name: "OPT_floop_parallelize_all", value: 470, isUnsigned: true)
!1091 = !DIEnumerator(name: "OPT_floop_strip_mine", value: 471, isUnsigned: true)
!1092 = !DIEnumerator(name: "OPT_flto", value: 472, isUnsigned: true)
!1093 = !DIEnumerator(name: "OPT_flto_compression_level_", value: 473, isUnsigned: true)
!1094 = !DIEnumerator(name: "OPT_flto_report", value: 474, isUnsigned: true)
!1095 = !DIEnumerator(name: "OPT_fltrans", value: 475, isUnsigned: true)
!1096 = !DIEnumerator(name: "OPT_fltrans_output_list_", value: 476, isUnsigned: true)
!1097 = !DIEnumerator(name: "OPT_fmath_errno", value: 477, isUnsigned: true)
!1098 = !DIEnumerator(name: "OPT_fmax_array_constructor_", value: 478, isUnsigned: true)
!1099 = !DIEnumerator(name: "OPT_fmax_errors_", value: 479, isUnsigned: true)
!1100 = !DIEnumerator(name: "OPT_fmax_identifier_length_", value: 480, isUnsigned: true)
!1101 = !DIEnumerator(name: "OPT_fmax_stack_var_size_", value: 481, isUnsigned: true)
!1102 = !DIEnumerator(name: "OPT_fmax_subrecord_length_", value: 482, isUnsigned: true)
!1103 = !DIEnumerator(name: "OPT_fmem_report", value: 483, isUnsigned: true)
!1104 = !DIEnumerator(name: "OPT_fmerge_all_constants", value: 484, isUnsigned: true)
!1105 = !DIEnumerator(name: "OPT_fmerge_constants", value: 485, isUnsigned: true)
!1106 = !DIEnumerator(name: "OPT_fmerge_debug_strings", value: 486, isUnsigned: true)
!1107 = !DIEnumerator(name: "OPT_fmessage_length_", value: 487, isUnsigned: true)
!1108 = !DIEnumerator(name: "OPT_fmodule_private", value: 488, isUnsigned: true)
!1109 = !DIEnumerator(name: "OPT_fmodulo_sched", value: 489, isUnsigned: true)
!1110 = !DIEnumerator(name: "OPT_fmodulo_sched_allow_regmoves", value: 490, isUnsigned: true)
!1111 = !DIEnumerator(name: "OPT_fmove_loop_invariants", value: 491, isUnsigned: true)
!1112 = !DIEnumerator(name: "OPT_fms_extensions", value: 492, isUnsigned: true)
!1113 = !DIEnumerator(name: "OPT_fmudflap", value: 493, isUnsigned: true)
!1114 = !DIEnumerator(name: "OPT_fmudflapir", value: 494, isUnsigned: true)
!1115 = !DIEnumerator(name: "OPT_fmudflapth", value: 495, isUnsigned: true)
!1116 = !DIEnumerator(name: "OPT_fname_mangling_version_", value: 496, isUnsigned: true)
!1117 = !DIEnumerator(name: "OPT_fnew_abi", value: 497, isUnsigned: true)
!1118 = !DIEnumerator(name: "OPT_fnext_runtime", value: 498, isUnsigned: true)
!1119 = !DIEnumerator(name: "OPT_fnil_receivers", value: 499, isUnsigned: true)
!1120 = !DIEnumerator(name: "OPT_fnon_call_exceptions", value: 500, isUnsigned: true)
!1121 = !DIEnumerator(name: "OPT_fnonansi_builtins", value: 501, isUnsigned: true)
!1122 = !DIEnumerator(name: "OPT_fnonnull_objects", value: 502, isUnsigned: true)
!1123 = !DIEnumerator(name: "OPT_fobjc_call_cxx_cdtors", value: 503, isUnsigned: true)
!1124 = !DIEnumerator(name: "OPT_fobjc_direct_dispatch", value: 504, isUnsigned: true)
!1125 = !DIEnumerator(name: "OPT_fobjc_exceptions", value: 505, isUnsigned: true)
!1126 = !DIEnumerator(name: "OPT_fobjc_gc", value: 506, isUnsigned: true)
!1127 = !DIEnumerator(name: "OPT_fobjc_sjlj_exceptions", value: 507, isUnsigned: true)
!1128 = !DIEnumerator(name: "OPT_fomit_frame_pointer", value: 508, isUnsigned: true)
!1129 = !DIEnumerator(name: "OPT_fopenmp", value: 509, isUnsigned: true)
!1130 = !DIEnumerator(name: "OPT_foperator_names", value: 510, isUnsigned: true)
!1131 = !DIEnumerator(name: "OPT_foptimize_register_move", value: 511, isUnsigned: true)
!1132 = !DIEnumerator(name: "OPT_foptimize_sibling_calls", value: 512, isUnsigned: true)
!1133 = !DIEnumerator(name: "OPT_foptimize_static_class_initialization", value: 513, isUnsigned: true)
!1134 = !DIEnumerator(name: "OPT_foptional_diags", value: 514, isUnsigned: true)
!1135 = !DIEnumerator(name: "OPT_foutput_class_dir_", value: 515, isUnsigned: true)
!1136 = !DIEnumerator(name: "OPT_fpack_derived", value: 516, isUnsigned: true)
!1137 = !DIEnumerator(name: "OPT_fpack_struct", value: 517, isUnsigned: true)
!1138 = !DIEnumerator(name: "OPT_fpack_struct_", value: 518, isUnsigned: true)
!1139 = !DIEnumerator(name: "OPT_fpcc_struct_return", value: 519, isUnsigned: true)
!1140 = !DIEnumerator(name: "OPT_fpch_deps", value: 520, isUnsigned: true)
!1141 = !DIEnumerator(name: "OPT_fpch_preprocess", value: 521, isUnsigned: true)
!1142 = !DIEnumerator(name: "OPT_fpeel_loops", value: 522, isUnsigned: true)
!1143 = !DIEnumerator(name: "OPT_fpeephole", value: 523, isUnsigned: true)
!1144 = !DIEnumerator(name: "OPT_fpeephole2", value: 524, isUnsigned: true)
!1145 = !DIEnumerator(name: "OPT_fpermissive", value: 525, isUnsigned: true)
!1146 = !DIEnumerator(name: "OPT_fpic", value: 526, isUnsigned: true)
!1147 = !DIEnumerator(name: "OPT_fpie", value: 527, isUnsigned: true)
!1148 = !DIEnumerator(name: "OPT_fplugin_arg_", value: 528, isUnsigned: true)
!1149 = !DIEnumerator(name: "OPT_fplugin_", value: 529, isUnsigned: true)
!1150 = !DIEnumerator(name: "OPT_fpost_ipa_mem_report", value: 530, isUnsigned: true)
!1151 = !DIEnumerator(name: "OPT_fpre_ipa_mem_report", value: 531, isUnsigned: true)
!1152 = !DIEnumerator(name: "OPT_fpredictive_commoning", value: 532, isUnsigned: true)
!1153 = !DIEnumerator(name: "OPT_fprefetch_loop_arrays", value: 533, isUnsigned: true)
!1154 = !DIEnumerator(name: "OPT_fpreprocessed", value: 534, isUnsigned: true)
!1155 = !DIEnumerator(name: "OPT_fpretty_templates", value: 535, isUnsigned: true)
!1156 = !DIEnumerator(name: "OPT_fprofile", value: 536, isUnsigned: true)
!1157 = !DIEnumerator(name: "OPT_fprofile_arcs", value: 537, isUnsigned: true)
!1158 = !DIEnumerator(name: "OPT_fprofile_correction", value: 538, isUnsigned: true)
!1159 = !DIEnumerator(name: "OPT_fprofile_dir_", value: 539, isUnsigned: true)
!1160 = !DIEnumerator(name: "OPT_fprofile_generate", value: 540, isUnsigned: true)
!1161 = !DIEnumerator(name: "OPT_fprofile_generate_", value: 541, isUnsigned: true)
!1162 = !DIEnumerator(name: "OPT_fprofile_use", value: 542, isUnsigned: true)
!1163 = !DIEnumerator(name: "OPT_fprofile_use_", value: 543, isUnsigned: true)
!1164 = !DIEnumerator(name: "OPT_fprofile_values", value: 544, isUnsigned: true)
!1165 = !DIEnumerator(name: "OPT_fprotect_parens", value: 545, isUnsigned: true)
!1166 = !DIEnumerator(name: "OPT_frandom_seed", value: 546, isUnsigned: true)
!1167 = !DIEnumerator(name: "OPT_frandom_seed_", value: 547, isUnsigned: true)
!1168 = !DIEnumerator(name: "OPT_frange_check", value: 548, isUnsigned: true)
!1169 = !DIEnumerator(name: "OPT_freciprocal_math", value: 549, isUnsigned: true)
!1170 = !DIEnumerator(name: "OPT_frecord_gcc_switches", value: 550, isUnsigned: true)
!1171 = !DIEnumerator(name: "OPT_frecord_marker_4", value: 551, isUnsigned: true)
!1172 = !DIEnumerator(name: "OPT_frecord_marker_8", value: 552, isUnsigned: true)
!1173 = !DIEnumerator(name: "OPT_frecursive", value: 553, isUnsigned: true)
!1174 = !DIEnumerator(name: "OPT_freduced_reflection", value: 554, isUnsigned: true)
!1175 = !DIEnumerator(name: "OPT_freg_struct_return", value: 555, isUnsigned: true)
!1176 = !DIEnumerator(name: "OPT_fregmove", value: 556, isUnsigned: true)
!1177 = !DIEnumerator(name: "OPT_frename_registers", value: 557, isUnsigned: true)
!1178 = !DIEnumerator(name: "OPT_freorder_blocks", value: 558, isUnsigned: true)
!1179 = !DIEnumerator(name: "OPT_freorder_blocks_and_partition", value: 559, isUnsigned: true)
!1180 = !DIEnumerator(name: "OPT_freorder_functions", value: 560, isUnsigned: true)
!1181 = !DIEnumerator(name: "OPT_frepack_arrays", value: 561, isUnsigned: true)
!1182 = !DIEnumerator(name: "OPT_freplace_objc_classes", value: 562, isUnsigned: true)
!1183 = !DIEnumerator(name: "OPT_frepo", value: 563, isUnsigned: true)
!1184 = !DIEnumerator(name: "OPT_frerun_cse_after_loop", value: 564, isUnsigned: true)
!1185 = !DIEnumerator(name: "OPT_frerun_loop_opt", value: 565, isUnsigned: true)
!1186 = !DIEnumerator(name: "OPT_freschedule_modulo_scheduled_loops", value: 566, isUnsigned: true)
!1187 = !DIEnumerator(name: "OPT_fresolution", value: 567, isUnsigned: true)
!1188 = !DIEnumerator(name: "OPT_frounding_math", value: 568, isUnsigned: true)
!1189 = !DIEnumerator(name: "OPT_frtti", value: 569, isUnsigned: true)
!1190 = !DIEnumerator(name: "OPT_fsaw_java_file", value: 570, isUnsigned: true)
!1191 = !DIEnumerator(name: "OPT_fsched_critical_path_heuristic", value: 571, isUnsigned: true)
!1192 = !DIEnumerator(name: "OPT_fsched_dep_count_heuristic", value: 572, isUnsigned: true)
!1193 = !DIEnumerator(name: "OPT_fsched_group_heuristic", value: 573, isUnsigned: true)
!1194 = !DIEnumerator(name: "OPT_fsched_interblock", value: 574, isUnsigned: true)
!1195 = !DIEnumerator(name: "OPT_fsched_last_insn_heuristic", value: 575, isUnsigned: true)
!1196 = !DIEnumerator(name: "OPT_fsched_pressure", value: 576, isUnsigned: true)
!1197 = !DIEnumerator(name: "OPT_fsched_rank_heuristic", value: 577, isUnsigned: true)
!1198 = !DIEnumerator(name: "OPT_fsched_spec", value: 578, isUnsigned: true)
!1199 = !DIEnumerator(name: "OPT_fsched_spec_insn_heuristic", value: 579, isUnsigned: true)
!1200 = !DIEnumerator(name: "OPT_fsched_spec_load", value: 580, isUnsigned: true)
!1201 = !DIEnumerator(name: "OPT_fsched_spec_load_dangerous", value: 581, isUnsigned: true)
!1202 = !DIEnumerator(name: "OPT_fsched_stalled_insns", value: 582, isUnsigned: true)
!1203 = !DIEnumerator(name: "OPT_fsched_stalled_insns_dep", value: 583, isUnsigned: true)
!1204 = !DIEnumerator(name: "OPT_fsched_stalled_insns_dep_", value: 584, isUnsigned: true)
!1205 = !DIEnumerator(name: "OPT_fsched_stalled_insns_", value: 585, isUnsigned: true)
!1206 = !DIEnumerator(name: "OPT_fsched_verbose_", value: 586, isUnsigned: true)
!1207 = !DIEnumerator(name: "OPT_fsched2_use_superblocks", value: 587, isUnsigned: true)
!1208 = !DIEnumerator(name: "OPT_fsched2_use_traces", value: 588, isUnsigned: true)
!1209 = !DIEnumerator(name: "OPT_fschedule_insns", value: 589, isUnsigned: true)
!1210 = !DIEnumerator(name: "OPT_fschedule_insns2", value: 590, isUnsigned: true)
!1211 = !DIEnumerator(name: "OPT_fsecond_underscore", value: 591, isUnsigned: true)
!1212 = !DIEnumerator(name: "OPT_fsection_anchors", value: 592, isUnsigned: true)
!1213 = !DIEnumerator(name: "OPT_fsee", value: 593, isUnsigned: true)
!1214 = !DIEnumerator(name: "OPT_fsel_sched_pipelining", value: 594, isUnsigned: true)
!1215 = !DIEnumerator(name: "OPT_fsel_sched_pipelining_outer_loops", value: 595, isUnsigned: true)
!1216 = !DIEnumerator(name: "OPT_fsel_sched_reschedule_pipelined", value: 596, isUnsigned: true)
!1217 = !DIEnumerator(name: "OPT_fselective_scheduling", value: 597, isUnsigned: true)
!1218 = !DIEnumerator(name: "OPT_fselective_scheduling2", value: 598, isUnsigned: true)
!1219 = !DIEnumerator(name: "OPT_fshort_double", value: 599, isUnsigned: true)
!1220 = !DIEnumerator(name: "OPT_fshort_enums", value: 600, isUnsigned: true)
!1221 = !DIEnumerator(name: "OPT_fshort_wchar", value: 601, isUnsigned: true)
!1222 = !DIEnumerator(name: "OPT_fshow_column", value: 602, isUnsigned: true)
!1223 = !DIEnumerator(name: "OPT_fsign_zero", value: 603, isUnsigned: true)
!1224 = !DIEnumerator(name: "OPT_fsignaling_nans", value: 604, isUnsigned: true)
!1225 = !DIEnumerator(name: "OPT_fsigned_bitfields", value: 605, isUnsigned: true)
!1226 = !DIEnumerator(name: "OPT_fsigned_char", value: 606, isUnsigned: true)
!1227 = !DIEnumerator(name: "OPT_fsigned_zeros", value: 607, isUnsigned: true)
!1228 = !DIEnumerator(name: "OPT_fsingle_precision_constant", value: 608, isUnsigned: true)
!1229 = !DIEnumerator(name: "OPT_fsource_filename_", value: 609, isUnsigned: true)
!1230 = !DIEnumerator(name: "OPT_fsource_", value: 610, isUnsigned: true)
!1231 = !DIEnumerator(name: "OPT_fsplit_ivs_in_unroller", value: 611, isUnsigned: true)
!1232 = !DIEnumerator(name: "OPT_fsplit_wide_types", value: 612, isUnsigned: true)
!1233 = !DIEnumerator(name: "OPT_fsquangle", value: 613, isUnsigned: true)
!1234 = !DIEnumerator(name: "OPT_fstack_check", value: 614, isUnsigned: true)
!1235 = !DIEnumerator(name: "OPT_fstack_check_", value: 615, isUnsigned: true)
!1236 = !DIEnumerator(name: "OPT_fstack_limit", value: 616, isUnsigned: true)
!1237 = !DIEnumerator(name: "OPT_fstack_limit_register_", value: 617, isUnsigned: true)
!1238 = !DIEnumerator(name: "OPT_fstack_limit_symbol_", value: 618, isUnsigned: true)
!1239 = !DIEnumerator(name: "OPT_fstack_protector", value: 619, isUnsigned: true)
!1240 = !DIEnumerator(name: "OPT_fstack_protector_all", value: 620, isUnsigned: true)
!1241 = !DIEnumerator(name: "OPT_fstats", value: 621, isUnsigned: true)
!1242 = !DIEnumerator(name: "OPT_fstore_check", value: 622, isUnsigned: true)
!1243 = !DIEnumerator(name: "OPT_fstrength_reduce", value: 623, isUnsigned: true)
!1244 = !DIEnumerator(name: "OPT_fstrict_aliasing", value: 624, isUnsigned: true)
!1245 = !DIEnumerator(name: "OPT_fstrict_overflow", value: 625, isUnsigned: true)
!1246 = !DIEnumerator(name: "OPT_fstrict_prototype", value: 626, isUnsigned: true)
!1247 = !DIEnumerator(name: "OPT_fsyntax_only", value: 627, isUnsigned: true)
!1248 = !DIEnumerator(name: "OPT_ftabstop_", value: 628, isUnsigned: true)
!1249 = !DIEnumerator(name: "OPT_ftarget_help", value: 629, isUnsigned: true)
!1250 = !DIEnumerator(name: "OPT_ftarget_", value: 630, isUnsigned: true)
!1251 = !DIEnumerator(name: "OPT_ftemplate_depth_", value: 631, isUnsigned: true)
!1252 = !DIEnumerator(name: "OPT_ftemplate_depth_eq", value: 632, isUnsigned: true)
!1253 = !DIEnumerator(name: "OPT_ftest_coverage", value: 633, isUnsigned: true)
!1254 = !DIEnumerator(name: "OPT_fthis_is_variable", value: 634, isUnsigned: true)
!1255 = !DIEnumerator(name: "OPT_fthread_jumps", value: 635, isUnsigned: true)
!1256 = !DIEnumerator(name: "OPT_fthreadsafe_statics", value: 636, isUnsigned: true)
!1257 = !DIEnumerator(name: "OPT_ftime_report", value: 637, isUnsigned: true)
!1258 = !DIEnumerator(name: "OPT_ftls_model_", value: 638, isUnsigned: true)
!1259 = !DIEnumerator(name: "OPT_ftoplevel_reorder", value: 639, isUnsigned: true)
!1260 = !DIEnumerator(name: "OPT_ftracer", value: 640, isUnsigned: true)
!1261 = !DIEnumerator(name: "OPT_ftrapping_math", value: 641, isUnsigned: true)
!1262 = !DIEnumerator(name: "OPT_ftrapv", value: 642, isUnsigned: true)
!1263 = !DIEnumerator(name: "OPT_ftree_builtin_call_dce", value: 643, isUnsigned: true)
!1264 = !DIEnumerator(name: "OPT_ftree_ccp", value: 644, isUnsigned: true)
!1265 = !DIEnumerator(name: "OPT_ftree_ch", value: 645, isUnsigned: true)
!1266 = !DIEnumerator(name: "OPT_ftree_copy_prop", value: 646, isUnsigned: true)
!1267 = !DIEnumerator(name: "OPT_ftree_copyrename", value: 647, isUnsigned: true)
!1268 = !DIEnumerator(name: "OPT_ftree_cselim", value: 648, isUnsigned: true)
!1269 = !DIEnumerator(name: "OPT_ftree_dce", value: 649, isUnsigned: true)
!1270 = !DIEnumerator(name: "OPT_ftree_dominator_opts", value: 650, isUnsigned: true)
!1271 = !DIEnumerator(name: "OPT_ftree_dse", value: 651, isUnsigned: true)
!1272 = !DIEnumerator(name: "OPT_ftree_forwprop", value: 652, isUnsigned: true)
!1273 = !DIEnumerator(name: "OPT_ftree_fre", value: 653, isUnsigned: true)
!1274 = !DIEnumerator(name: "OPT_ftree_loop_distribution", value: 654, isUnsigned: true)
!1275 = !DIEnumerator(name: "OPT_ftree_loop_im", value: 655, isUnsigned: true)
!1276 = !DIEnumerator(name: "OPT_ftree_loop_ivcanon", value: 656, isUnsigned: true)
!1277 = !DIEnumerator(name: "OPT_ftree_loop_linear", value: 657, isUnsigned: true)
!1278 = !DIEnumerator(name: "OPT_ftree_loop_optimize", value: 658, isUnsigned: true)
!1279 = !DIEnumerator(name: "OPT_ftree_lrs", value: 659, isUnsigned: true)
!1280 = !DIEnumerator(name: "OPT_ftree_parallelize_loops_", value: 660, isUnsigned: true)
!1281 = !DIEnumerator(name: "OPT_ftree_phiprop", value: 661, isUnsigned: true)
!1282 = !DIEnumerator(name: "OPT_ftree_pre", value: 662, isUnsigned: true)
!1283 = !DIEnumerator(name: "OPT_ftree_pta", value: 663, isUnsigned: true)
!1284 = !DIEnumerator(name: "OPT_ftree_reassoc", value: 664, isUnsigned: true)
!1285 = !DIEnumerator(name: "OPT_ftree_salias", value: 665, isUnsigned: true)
!1286 = !DIEnumerator(name: "OPT_ftree_scev_cprop", value: 666, isUnsigned: true)
!1287 = !DIEnumerator(name: "OPT_ftree_sink", value: 667, isUnsigned: true)
!1288 = !DIEnumerator(name: "OPT_ftree_slp_vectorize", value: 668, isUnsigned: true)
!1289 = !DIEnumerator(name: "OPT_ftree_sra", value: 669, isUnsigned: true)
!1290 = !DIEnumerator(name: "OPT_ftree_store_ccp", value: 670, isUnsigned: true)
!1291 = !DIEnumerator(name: "OPT_ftree_store_copy_prop", value: 671, isUnsigned: true)
!1292 = !DIEnumerator(name: "OPT_ftree_switch_conversion", value: 672, isUnsigned: true)
!1293 = !DIEnumerator(name: "OPT_ftree_ter", value: 673, isUnsigned: true)
!1294 = !DIEnumerator(name: "OPT_ftree_vect_loop_version", value: 674, isUnsigned: true)
!1295 = !DIEnumerator(name: "OPT_ftree_vectorize", value: 675, isUnsigned: true)
!1296 = !DIEnumerator(name: "OPT_ftree_vectorizer_verbose_", value: 676, isUnsigned: true)
!1297 = !DIEnumerator(name: "OPT_ftree_vrp", value: 677, isUnsigned: true)
!1298 = !DIEnumerator(name: "OPT_funderscoring", value: 678, isUnsigned: true)
!1299 = !DIEnumerator(name: "OPT_funit_at_a_time", value: 679, isUnsigned: true)
!1300 = !DIEnumerator(name: "OPT_funroll_all_loops", value: 680, isUnsigned: true)
!1301 = !DIEnumerator(name: "OPT_funroll_loops", value: 681, isUnsigned: true)
!1302 = !DIEnumerator(name: "OPT_funsafe_loop_optimizations", value: 682, isUnsigned: true)
!1303 = !DIEnumerator(name: "OPT_funsafe_math_optimizations", value: 683, isUnsigned: true)
!1304 = !DIEnumerator(name: "OPT_funsigned_bitfields", value: 684, isUnsigned: true)
!1305 = !DIEnumerator(name: "OPT_funsigned_char", value: 685, isUnsigned: true)
!1306 = !DIEnumerator(name: "OPT_funswitch_loops", value: 686, isUnsigned: true)
!1307 = !DIEnumerator(name: "OPT_funwind_tables", value: 687, isUnsigned: true)
!1308 = !DIEnumerator(name: "OPT_fuse_atomic_builtins", value: 688, isUnsigned: true)
!1309 = !DIEnumerator(name: "OPT_fuse_boehm_gc", value: 689, isUnsigned: true)
!1310 = !DIEnumerator(name: "OPT_fuse_cxa_atexit", value: 690, isUnsigned: true)
!1311 = !DIEnumerator(name: "OPT_fuse_cxa_get_exception_ptr", value: 691, isUnsigned: true)
!1312 = !DIEnumerator(name: "OPT_fuse_divide_subroutine", value: 692, isUnsigned: true)
!1313 = !DIEnumerator(name: "OPT_fuse_linker_plugin", value: 693, isUnsigned: true)
!1314 = !DIEnumerator(name: "OPT_fvar_tracking", value: 694, isUnsigned: true)
!1315 = !DIEnumerator(name: "OPT_fvar_tracking_assignments", value: 695, isUnsigned: true)
!1316 = !DIEnumerator(name: "OPT_fvar_tracking_assignments_toggle", value: 696, isUnsigned: true)
!1317 = !DIEnumerator(name: "OPT_fvar_tracking_uninit", value: 697, isUnsigned: true)
!1318 = !DIEnumerator(name: "OPT_fvariable_expansion_in_unroller", value: 698, isUnsigned: true)
!1319 = !DIEnumerator(name: "OPT_fvect_cost_model", value: 699, isUnsigned: true)
!1320 = !DIEnumerator(name: "OPT_fverbose_asm", value: 700, isUnsigned: true)
!1321 = !DIEnumerator(name: "OPT_fversion", value: 701, isUnsigned: true)
!1322 = !DIEnumerator(name: "OPT_fvisibility_inlines_hidden", value: 702, isUnsigned: true)
!1323 = !DIEnumerator(name: "OPT_fvisibility_ms_compat", value: 703, isUnsigned: true)
!1324 = !DIEnumerator(name: "OPT_fvisibility_", value: 704, isUnsigned: true)
!1325 = !DIEnumerator(name: "OPT_fvpt", value: 705, isUnsigned: true)
!1326 = !DIEnumerator(name: "OPT_fvtable_gc", value: 706, isUnsigned: true)
!1327 = !DIEnumerator(name: "OPT_fvtable_thunks", value: 707, isUnsigned: true)
!1328 = !DIEnumerator(name: "OPT_fweak", value: 708, isUnsigned: true)
!1329 = !DIEnumerator(name: "OPT_fweb", value: 709, isUnsigned: true)
!1330 = !DIEnumerator(name: "OPT_fwhole_file", value: 710, isUnsigned: true)
!1331 = !DIEnumerator(name: "OPT_fwhole_program", value: 711, isUnsigned: true)
!1332 = !DIEnumerator(name: "OPT_fwhopr", value: 712, isUnsigned: true)
!1333 = !DIEnumerator(name: "OPT_fwide_exec_charset_", value: 713, isUnsigned: true)
!1334 = !DIEnumerator(name: "OPT_fworking_directory", value: 714, isUnsigned: true)
!1335 = !DIEnumerator(name: "OPT_fwpa", value: 715, isUnsigned: true)
!1336 = !DIEnumerator(name: "OPT_fwrapv", value: 716, isUnsigned: true)
!1337 = !DIEnumerator(name: "OPT_fxref", value: 717, isUnsigned: true)
!1338 = !DIEnumerator(name: "OPT_fzero_initialized_in_bss", value: 718, isUnsigned: true)
!1339 = !DIEnumerator(name: "OPT_fzero_link", value: 719, isUnsigned: true)
!1340 = !DIEnumerator(name: "OPT_g", value: 720, isUnsigned: true)
!1341 = !DIEnumerator(name: "OPT_gant", value: 721, isUnsigned: true)
!1342 = !DIEnumerator(name: "OPT_gcoff", value: 722, isUnsigned: true)
!1343 = !DIEnumerator(name: "OPT_gdwarfplus", value: 723, isUnsigned: true)
!1344 = !DIEnumerator(name: "OPT_gdwarf_", value: 724, isUnsigned: true)
!1345 = !DIEnumerator(name: "OPT_gen_decls", value: 725, isUnsigned: true)
!1346 = !DIEnumerator(name: "OPT_ggdb", value: 726, isUnsigned: true)
!1347 = !DIEnumerator(name: "OPT_gnat", value: 727, isUnsigned: true)
!1348 = !DIEnumerator(name: "OPT_gnatO", value: 728, isUnsigned: true)
!1349 = !DIEnumerator(name: "OPT_gno_strict_dwarf", value: 729, isUnsigned: true)
!1350 = !DIEnumerator(name: "OPT_gstabs", value: 730, isUnsigned: true)
!1351 = !DIEnumerator(name: "OPT_gstabs_", value: 731, isUnsigned: true)
!1352 = !DIEnumerator(name: "OPT_gstrict_dwarf", value: 732, isUnsigned: true)
!1353 = !DIEnumerator(name: "OPT_gtoggle", value: 733, isUnsigned: true)
!1354 = !DIEnumerator(name: "OPT_gvms", value: 734, isUnsigned: true)
!1355 = !DIEnumerator(name: "OPT_gxcoff", value: 735, isUnsigned: true)
!1356 = !DIEnumerator(name: "OPT_gxcoff_", value: 736, isUnsigned: true)
!1357 = !DIEnumerator(name: "OPT_idirafter", value: 737, isUnsigned: true)
!1358 = !DIEnumerator(name: "OPT_imacros", value: 738, isUnsigned: true)
!1359 = !DIEnumerator(name: "OPT_imultilib", value: 739, isUnsigned: true)
!1360 = !DIEnumerator(name: "OPT_include", value: 740, isUnsigned: true)
!1361 = !DIEnumerator(name: "OPT_iprefix", value: 741, isUnsigned: true)
!1362 = !DIEnumerator(name: "OPT_iquote", value: 742, isUnsigned: true)
!1363 = !DIEnumerator(name: "OPT_isysroot", value: 743, isUnsigned: true)
!1364 = !DIEnumerator(name: "OPT_isystem", value: 744, isUnsigned: true)
!1365 = !DIEnumerator(name: "OPT_iwithprefix", value: 745, isUnsigned: true)
!1366 = !DIEnumerator(name: "OPT_iwithprefixbefore", value: 746, isUnsigned: true)
!1367 = !DIEnumerator(name: "OPT_lang_asm", value: 747, isUnsigned: true)
!1368 = !DIEnumerator(name: "OPT_lang_objc", value: 748, isUnsigned: true)
!1369 = !DIEnumerator(name: "OPT_m128bit_long_double", value: 749, isUnsigned: true)
!1370 = !DIEnumerator(name: "OPT_m32", value: 750, isUnsigned: true)
!1371 = !DIEnumerator(name: "OPT_m3dnow", value: 751, isUnsigned: true)
!1372 = !DIEnumerator(name: "OPT_m3dnowa", value: 752, isUnsigned: true)
!1373 = !DIEnumerator(name: "OPT_m64", value: 753, isUnsigned: true)
!1374 = !DIEnumerator(name: "OPT_m80387", value: 754, isUnsigned: true)
!1375 = !DIEnumerator(name: "OPT_m96bit_long_double", value: 755, isUnsigned: true)
!1376 = !DIEnumerator(name: "OPT_mabi_", value: 756, isUnsigned: true)
!1377 = !DIEnumerator(name: "OPT_mabm", value: 757, isUnsigned: true)
!1378 = !DIEnumerator(name: "OPT_maccumulate_outgoing_args", value: 758, isUnsigned: true)
!1379 = !DIEnumerator(name: "OPT_maes", value: 759, isUnsigned: true)
!1380 = !DIEnumerator(name: "OPT_malign_double", value: 760, isUnsigned: true)
!1381 = !DIEnumerator(name: "OPT_malign_functions_", value: 761, isUnsigned: true)
!1382 = !DIEnumerator(name: "OPT_malign_jumps_", value: 762, isUnsigned: true)
!1383 = !DIEnumerator(name: "OPT_malign_loops_", value: 763, isUnsigned: true)
!1384 = !DIEnumerator(name: "OPT_malign_stringops", value: 764, isUnsigned: true)
!1385 = !DIEnumerator(name: "OPT_march_", value: 765, isUnsigned: true)
!1386 = !DIEnumerator(name: "OPT_masm_", value: 766, isUnsigned: true)
!1387 = !DIEnumerator(name: "OPT_mavx", value: 767, isUnsigned: true)
!1388 = !DIEnumerator(name: "OPT_mbranch_cost_", value: 768, isUnsigned: true)
!1389 = !DIEnumerator(name: "OPT_mcld", value: 769, isUnsigned: true)
!1390 = !DIEnumerator(name: "OPT_mcmodel_", value: 770, isUnsigned: true)
!1391 = !DIEnumerator(name: "OPT_mcrc32", value: 771, isUnsigned: true)
!1392 = !DIEnumerator(name: "OPT_mcx16", value: 772, isUnsigned: true)
!1393 = !DIEnumerator(name: "OPT_mfancy_math_387", value: 773, isUnsigned: true)
!1394 = !DIEnumerator(name: "OPT_mfma", value: 774, isUnsigned: true)
!1395 = !DIEnumerator(name: "OPT_mfma4", value: 775, isUnsigned: true)
!1396 = !DIEnumerator(name: "OPT_mforce_drap", value: 776, isUnsigned: true)
!1397 = !DIEnumerator(name: "OPT_mfp_ret_in_387", value: 777, isUnsigned: true)
!1398 = !DIEnumerator(name: "OPT_mfpmath_", value: 778, isUnsigned: true)
!1399 = !DIEnumerator(name: "OPT_mfused_madd", value: 779, isUnsigned: true)
!1400 = !DIEnumerator(name: "OPT_mglibc", value: 780, isUnsigned: true)
!1401 = !DIEnumerator(name: "OPT_mhard_float", value: 781, isUnsigned: true)
!1402 = !DIEnumerator(name: "OPT_mieee_fp", value: 782, isUnsigned: true)
!1403 = !DIEnumerator(name: "OPT_mincoming_stack_boundary_", value: 783, isUnsigned: true)
!1404 = !DIEnumerator(name: "OPT_minline_all_stringops", value: 784, isUnsigned: true)
!1405 = !DIEnumerator(name: "OPT_minline_stringops_dynamically", value: 785, isUnsigned: true)
!1406 = !DIEnumerator(name: "OPT_mintel_syntax", value: 786, isUnsigned: true)
!1407 = !DIEnumerator(name: "OPT_mlarge_data_threshold_", value: 787, isUnsigned: true)
!1408 = !DIEnumerator(name: "OPT_mlwp", value: 788, isUnsigned: true)
!1409 = !DIEnumerator(name: "OPT_mmmx", value: 789, isUnsigned: true)
!1410 = !DIEnumerator(name: "OPT_mmovbe", value: 790, isUnsigned: true)
!1411 = !DIEnumerator(name: "OPT_mms_bitfields", value: 791, isUnsigned: true)
!1412 = !DIEnumerator(name: "OPT_mno_align_stringops", value: 792, isUnsigned: true)
!1413 = !DIEnumerator(name: "OPT_mno_fancy_math_387", value: 793, isUnsigned: true)
!1414 = !DIEnumerator(name: "OPT_mno_push_args", value: 794, isUnsigned: true)
!1415 = !DIEnumerator(name: "OPT_mno_red_zone", value: 795, isUnsigned: true)
!1416 = !DIEnumerator(name: "OPT_mno_sse4", value: 796, isUnsigned: true)
!1417 = !DIEnumerator(name: "OPT_momit_leaf_frame_pointer", value: 797, isUnsigned: true)
!1418 = !DIEnumerator(name: "OPT_mpc", value: 798, isUnsigned: true)
!1419 = !DIEnumerator(name: "OPT_mpclmul", value: 799, isUnsigned: true)
!1420 = !DIEnumerator(name: "OPT_mpopcnt", value: 800, isUnsigned: true)
!1421 = !DIEnumerator(name: "OPT_mpreferred_stack_boundary_", value: 801, isUnsigned: true)
!1422 = !DIEnumerator(name: "OPT_mpush_args", value: 802, isUnsigned: true)
!1423 = !DIEnumerator(name: "OPT_mrecip", value: 803, isUnsigned: true)
!1424 = !DIEnumerator(name: "OPT_mred_zone", value: 804, isUnsigned: true)
!1425 = !DIEnumerator(name: "OPT_mregparm_", value: 805, isUnsigned: true)
!1426 = !DIEnumerator(name: "OPT_mrtd", value: 806, isUnsigned: true)
!1427 = !DIEnumerator(name: "OPT_msahf", value: 807, isUnsigned: true)
!1428 = !DIEnumerator(name: "OPT_msoft_float", value: 808, isUnsigned: true)
!1429 = !DIEnumerator(name: "OPT_msse", value: 809, isUnsigned: true)
!1430 = !DIEnumerator(name: "OPT_msse2", value: 810, isUnsigned: true)
!1431 = !DIEnumerator(name: "OPT_msse2avx", value: 811, isUnsigned: true)
!1432 = !DIEnumerator(name: "OPT_msse3", value: 812, isUnsigned: true)
!1433 = !DIEnumerator(name: "OPT_msse4", value: 813, isUnsigned: true)
!1434 = !DIEnumerator(name: "OPT_msse4_1", value: 814, isUnsigned: true)
!1435 = !DIEnumerator(name: "OPT_msse4_2", value: 815, isUnsigned: true)
!1436 = !DIEnumerator(name: "OPT_msse4a", value: 816, isUnsigned: true)
!1437 = !DIEnumerator(name: "OPT_msseregparm", value: 817, isUnsigned: true)
!1438 = !DIEnumerator(name: "OPT_mssse3", value: 818, isUnsigned: true)
!1439 = !DIEnumerator(name: "OPT_mstack_arg_probe", value: 819, isUnsigned: true)
!1440 = !DIEnumerator(name: "OPT_mstackrealign", value: 820, isUnsigned: true)
!1441 = !DIEnumerator(name: "OPT_mstringop_strategy_", value: 821, isUnsigned: true)
!1442 = !DIEnumerator(name: "OPT_mtls_dialect_", value: 822, isUnsigned: true)
!1443 = !DIEnumerator(name: "OPT_mtls_direct_seg_refs", value: 823, isUnsigned: true)
!1444 = !DIEnumerator(name: "OPT_mtune_", value: 824, isUnsigned: true)
!1445 = !DIEnumerator(name: "OPT_muclibc", value: 825, isUnsigned: true)
!1446 = !DIEnumerator(name: "OPT_mveclibabi_", value: 826, isUnsigned: true)
!1447 = !DIEnumerator(name: "OPT_mxop", value: 827, isUnsigned: true)
!1448 = !DIEnumerator(name: "OPT_nocpp", value: 828, isUnsigned: true)
!1449 = !DIEnumerator(name: "OPT_nostdinc", value: 829, isUnsigned: true)
!1450 = !DIEnumerator(name: "OPT_nostdinc__", value: 830, isUnsigned: true)
!1451 = !DIEnumerator(name: "OPT_nostdlib", value: 831, isUnsigned: true)
!1452 = !DIEnumerator(name: "OPT_o", value: 832, isUnsigned: true)
!1453 = !DIEnumerator(name: "OPT_p", value: 833, isUnsigned: true)
!1454 = !DIEnumerator(name: "OPT_pedantic", value: 834, isUnsigned: true)
!1455 = !DIEnumerator(name: "OPT_pedantic_errors", value: 835, isUnsigned: true)
!1456 = !DIEnumerator(name: "OPT_pie", value: 836, isUnsigned: true)
!1457 = !DIEnumerator(name: "OPT_print_objc_runtime_info", value: 837, isUnsigned: true)
!1458 = !DIEnumerator(name: "OPT_print_pch_checksum", value: 838, isUnsigned: true)
!1459 = !DIEnumerator(name: "OPT_quiet", value: 839, isUnsigned: true)
!1460 = !DIEnumerator(name: "OPT_remap", value: 840, isUnsigned: true)
!1461 = !DIEnumerator(name: "OPT_shared", value: 841, isUnsigned: true)
!1462 = !DIEnumerator(name: "OPT_static_libgfortran", value: 842, isUnsigned: true)
!1463 = !DIEnumerator(name: "OPT_std_c__0x", value: 843, isUnsigned: true)
!1464 = !DIEnumerator(name: "OPT_std_c__98", value: 844, isUnsigned: true)
!1465 = !DIEnumerator(name: "OPT_std_c89", value: 845, isUnsigned: true)
!1466 = !DIEnumerator(name: "OPT_std_c90", value: 846, isUnsigned: true)
!1467 = !DIEnumerator(name: "OPT_std_c99", value: 847, isUnsigned: true)
!1468 = !DIEnumerator(name: "OPT_std_c9x", value: 848, isUnsigned: true)
!1469 = !DIEnumerator(name: "OPT_std_f2003", value: 849, isUnsigned: true)
!1470 = !DIEnumerator(name: "OPT_std_f2008", value: 850, isUnsigned: true)
!1471 = !DIEnumerator(name: "OPT_std_f95", value: 851, isUnsigned: true)
!1472 = !DIEnumerator(name: "OPT_std_gnu", value: 852, isUnsigned: true)
!1473 = !DIEnumerator(name: "OPT_std_gnu__0x", value: 853, isUnsigned: true)
!1474 = !DIEnumerator(name: "OPT_std_gnu__98", value: 854, isUnsigned: true)
!1475 = !DIEnumerator(name: "OPT_std_gnu89", value: 855, isUnsigned: true)
!1476 = !DIEnumerator(name: "OPT_std_gnu90", value: 856, isUnsigned: true)
!1477 = !DIEnumerator(name: "OPT_std_gnu99", value: 857, isUnsigned: true)
!1478 = !DIEnumerator(name: "OPT_std_gnu9x", value: 858, isUnsigned: true)
!1479 = !DIEnumerator(name: "OPT_std_iso9899_1990", value: 859, isUnsigned: true)
!1480 = !DIEnumerator(name: "OPT_std_iso9899_199409", value: 860, isUnsigned: true)
!1481 = !DIEnumerator(name: "OPT_std_iso9899_1999", value: 861, isUnsigned: true)
!1482 = !DIEnumerator(name: "OPT_std_iso9899_199x", value: 862, isUnsigned: true)
!1483 = !DIEnumerator(name: "OPT_std_legacy", value: 863, isUnsigned: true)
!1484 = !DIEnumerator(name: "OPT_traditional_cpp", value: 864, isUnsigned: true)
!1485 = !DIEnumerator(name: "OPT_trigraphs", value: 865, isUnsigned: true)
!1486 = !DIEnumerator(name: "OPT_undef", value: 866, isUnsigned: true)
!1487 = !DIEnumerator(name: "OPT_v", value: 867, isUnsigned: true)
!1488 = !DIEnumerator(name: "OPT_version", value: 868, isUnsigned: true)
!1489 = !DIEnumerator(name: "OPT_w", value: 869, isUnsigned: true)
!1490 = !DIEnumerator(name: "N_OPTS", value: 870, isUnsigned: true)
!1491 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !1492, file: !1, line: 4833, baseType: !5, size: 32, elements: !2571)
!1492 = distinct !DISubprogram(name: "simplify_immed_subreg", scope: !1, file: !1, line: 4829, type: !1493, scopeLine: 4831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!1493 = !DISubroutineType(types: !1494)
!1494 = !{!1495, !3, !1495, !3, !5}
!1495 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !556, line: 50, baseType: !1496)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !398, line: 240, size: 384, elements: !1498)
!1498 = !{!1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1497, file: !398, line: 242, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1497, file: !398, line: 245, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1497, file: !398, line: 252, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1497, file: !398, line: 257, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1497, file: !398, line: 265, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1497, file: !398, line: 277, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1497, file: !398, line: 291, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1497, file: !398, line: 298, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1497, file: !398, line: 305, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1497, file: !398, line: 310, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1497, file: !398, line: 321, baseType: !1510, size: 320, offset: 64)
!1510 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !398, line: 315, size: 320, elements: !1511)
!1511 = !{!1512, !2505, !2507, !2568, !2569}
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1510, file: !398, line: 316, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1514, size: 64, elements: !1533)
!1514 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !398, line: 183, baseType: !1515)
!1515 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !398, line: 166, size: 64, elements: !1516)
!1516 = !{!1517, !1519, !1520, !1524, !1525, !1535, !1536, !1548, !1551, !1615, !2483, !2484, !2495, !2502}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1515, file: !398, line: 168, baseType: !1518, size: 32)
!1518 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1515, file: !398, line: 169, baseType: !5, size: 32)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1515, file: !398, line: 170, baseType: !1521, size: 64)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1523)
!1523 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1515, file: !398, line: 171, baseType: !1495, size: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1515, file: !398, line: 172, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !556, line: 53, baseType: !1527)
!1527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1528, size: 64)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !398, line: 359, size: 128, elements: !1529)
!1529 = !{!1530, !1531}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1528, file: !398, line: 360, baseType: !1518, size: 32)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1528, file: !398, line: 361, baseType: !1532, size: 64, offset: 64)
!1532 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1495, size: 64, elements: !1533)
!1533 = !{!1534}
!1534 = !DISubrange(count: 1)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1515, file: !398, line: 173, baseType: !3, size: 32)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1515, file: !398, line: 174, baseType: !1537, size: 32)
!1537 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !398, line: 133, baseType: !1538)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !398, line: 115, size: 32, elements: !1539)
!1539 = !{!1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547}
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1538, file: !398, line: 118, baseType: !5, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1538, file: !398, line: 120, baseType: !5, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1538, file: !398, line: 121, baseType: !5, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1538, file: !398, line: 123, baseType: !5, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1538, file: !398, line: 125, baseType: !5, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1538, file: !398, line: 127, baseType: !5, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1538, file: !398, line: 130, baseType: !5, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1538, file: !398, line: 132, baseType: !5, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1515, file: !398, line: 175, baseType: !1549, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !398, line: 175, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1515, file: !398, line: 176, baseType: !1552, size: 64)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1554, line: 75, size: 256, elements: !1555)
!1554 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1555 = !{!1556, !1571, !1572, !1573}
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1553, file: !1554, line: 76, baseType: !1557, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1554, line: 68, baseType: !1559)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1554, line: 63, size: 320, elements: !1560)
!1560 = !{!1561, !1563, !1564, !1565}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1559, file: !1554, line: 64, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1559, file: !1554, line: 65, baseType: !1562, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1559, file: !1554, line: 66, baseType: !5, size: 32, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1559, file: !1554, line: 67, baseType: !1566, size: 128, offset: 192)
!1566 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1567, size: 128, elements: !1569)
!1567 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1554, line: 29, baseType: !1568)
!1568 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1569 = !{!1570}
!1570 = !DISubrange(count: 2)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1553, file: !1554, line: 77, baseType: !1557, size: 64, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1553, file: !1554, line: 78, baseType: !5, size: 32, offset: 128)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1553, file: !1554, line: 79, baseType: !1574, size: 64, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1554, line: 49, baseType: !1576)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1554, line: 45, size: 832, elements: !1577)
!1577 = !{!1578, !1579, !1580}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1576, file: !1554, line: 46, baseType: !1562, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1576, file: !1554, line: 47, baseType: !1552, size: 64, offset: 64)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1576, file: !1554, line: 48, baseType: !1581, size: 704, offset: 128)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1582, line: 164, size: 704, elements: !1583)
!1582 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1583 = !{!1584, !1586, !1597, !1598, !1599, !1600, !1601, !1602, !1607, !1611, !1612, !1613, !1614}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1581, file: !1582, line: 166, baseType: !1585, size: 64)
!1585 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1581, file: !1582, line: 167, baseType: !1587, size: 64, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1588, size: 64)
!1588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1582, line: 157, size: 192, elements: !1589)
!1589 = !{!1590, !1592, !1593}
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1588, file: !1582, line: 159, baseType: !1591, size: 64)
!1591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1523, size: 64)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1588, file: !1582, line: 160, baseType: !1587, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1588, file: !1582, line: 161, baseType: !1594, size: 32, offset: 128)
!1594 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 32, elements: !1595)
!1595 = !{!1596}
!1596 = !DISubrange(count: 4)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1581, file: !1582, line: 168, baseType: !1591, size: 64, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1581, file: !1582, line: 169, baseType: !1591, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1581, file: !1582, line: 170, baseType: !1591, size: 64, offset: 256)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1581, file: !1582, line: 171, baseType: !1585, size: 64, offset: 320)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1581, file: !1582, line: 172, baseType: !1518, size: 32, offset: 384)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1581, file: !1582, line: 176, baseType: !1603, size: 64, offset: 448)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DISubroutineType(types: !1605)
!1605 = !{!1587, !1606, !1585}
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1581, file: !1582, line: 177, baseType: !1608, size: 64, offset: 512)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1609, size: 64)
!1609 = !DISubroutineType(types: !1610)
!1610 = !{null, !1606, !1587}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1581, file: !1582, line: 178, baseType: !1606, size: 64, offset: 576)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1581, file: !1582, line: 179, baseType: !5, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1581, file: !1582, line: 180, baseType: !5, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1581, file: !1582, line: 184, baseType: !5, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1515, file: !398, line: 177, baseType: !1616, size: 64)
!1616 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !556, line: 56, baseType: !1617)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !149, line: 3371, size: 1792, elements: !1619)
!1619 = !{!1620, !1653, !1659, !1670, !1689, !1700, !1705, !1712, !1718, !1732, !1744, !1782, !1787, !1815, !1823, !1824, !1829, !1838, !1844, !1849, !1853, !1857, !2108, !2157, !2163, !2170, !2177, !2203, !2228, !2245, !2257, !2279, !2294, !2465}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1618, file: !149, line: 3372, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !149, line: 360, size: 64, elements: !1622)
!1622 = !{!1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652}
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1621, file: !149, line: 361, baseType: !5, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1621, file: !149, line: 363, baseType: !5, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1621, file: !149, line: 364, baseType: !5, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1621, file: !149, line: 365, baseType: !5, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1621, file: !149, line: 366, baseType: !5, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1621, file: !149, line: 367, baseType: !5, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1621, file: !149, line: 368, baseType: !5, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1621, file: !149, line: 369, baseType: !5, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1621, file: !149, line: 370, baseType: !5, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1621, file: !149, line: 372, baseType: !5, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1621, file: !149, line: 373, baseType: !5, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1621, file: !149, line: 374, baseType: !5, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1621, file: !149, line: 375, baseType: !5, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1621, file: !149, line: 376, baseType: !5, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1621, file: !149, line: 377, baseType: !5, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1621, file: !149, line: 378, baseType: !5, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1621, file: !149, line: 379, baseType: !5, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1621, file: !149, line: 381, baseType: !5, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1621, file: !149, line: 382, baseType: !5, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1621, file: !149, line: 383, baseType: !5, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1621, file: !149, line: 384, baseType: !5, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1621, file: !149, line: 385, baseType: !5, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1621, file: !149, line: 386, baseType: !5, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1621, file: !149, line: 387, baseType: !5, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1621, file: !149, line: 388, baseType: !5, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1621, file: !149, line: 390, baseType: !5, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1621, file: !149, line: 391, baseType: !5, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1621, file: !149, line: 392, baseType: !5, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1621, file: !149, line: 394, baseType: !5, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1621, file: !149, line: 399, baseType: !5, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1618, file: !149, line: 3373, baseType: !1654, size: 192)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !149, line: 402, size: 192, elements: !1655)
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1654, file: !149, line: 403, baseType: !1621, size: 64)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1654, file: !149, line: 404, baseType: !1616, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1654, file: !149, line: 405, baseType: !1616, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1618, file: !149, line: 3374, baseType: !1660, size: 320)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !149, line: 1384, size: 320, elements: !1661)
!1661 = !{!1662, !1663}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1660, file: !149, line: 1385, baseType: !1654, size: 192)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1660, file: !149, line: 1386, baseType: !1664, size: 128, offset: 192)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1665, line: 58, baseType: !1666)
!1665 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1665, line: 54, size: 128, elements: !1667)
!1667 = !{!1668, !1669}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1666, file: !1665, line: 56, baseType: !1568, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1666, file: !1665, line: 57, baseType: !1585, size: 64, offset: 64)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1618, file: !149, line: 3375, baseType: !1671, size: 256)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !149, line: 1397, size: 256, elements: !1672)
!1672 = !{!1673, !1674}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1671, file: !149, line: 1398, baseType: !1654, size: 192)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1671, file: !149, line: 1399, baseType: !1675, size: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1677, line: 52, size: 256, elements: !1678)
!1677 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1678 = !{!1679, !1680, !1681, !1682, !1683, !1684, !1685}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1676, file: !1677, line: 56, baseType: !5, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1676, file: !1677, line: 57, baseType: !5, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1676, file: !1677, line: 58, baseType: !5, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1676, file: !1677, line: 59, baseType: !5, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1676, file: !1677, line: 60, baseType: !5, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1676, file: !1677, line: 61, baseType: !5, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1676, file: !1677, line: 62, baseType: !1686, size: 192, offset: 64)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1568, size: 192, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 3)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1618, file: !149, line: 3376, baseType: !1690, size: 256)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !149, line: 1408, size: 256, elements: !1691)
!1691 = !{!1692, !1693}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1690, file: !149, line: 1409, baseType: !1654, size: 192)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1690, file: !149, line: 1410, baseType: !1694, size: 64, offset: 192)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1696, line: 27, size: 192, elements: !1697)
!1696 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1697 = !{!1698, !1699}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1695, file: !1696, line: 29, baseType: !1664, size: 128)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1695, file: !1696, line: 30, baseType: !3, size: 32, offset: 128)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1618, file: !149, line: 3377, baseType: !1701, size: 256)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !149, line: 1437, size: 256, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1701, file: !149, line: 1438, baseType: !1654, size: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1701, file: !149, line: 1439, baseType: !1616, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1618, file: !149, line: 3378, baseType: !1706, size: 256)
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !149, line: 1418, size: 256, elements: !1707)
!1707 = !{!1708, !1709, !1710}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1706, file: !149, line: 1419, baseType: !1654, size: 192)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1706, file: !149, line: 1420, baseType: !1518, size: 32, offset: 192)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1706, file: !149, line: 1421, baseType: !1711, size: 8, offset: 224)
!1711 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1523, size: 8, elements: !1533)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1618, file: !149, line: 3379, baseType: !1713, size: 320)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !149, line: 1428, size: 320, elements: !1714)
!1714 = !{!1715, !1716, !1717}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1713, file: !149, line: 1429, baseType: !1654, size: 192)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1713, file: !149, line: 1430, baseType: !1616, size: 64, offset: 192)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1713, file: !149, line: 1431, baseType: !1616, size: 64, offset: 256)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1618, file: !149, line: 3380, baseType: !1719, size: 320)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !149, line: 1460, size: 320, elements: !1720)
!1720 = !{!1721, !1722}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1719, file: !149, line: 1461, baseType: !1654, size: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1719, file: !149, line: 1462, baseType: !1723, size: 128, offset: 192)
!1723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1724, line: 31, size: 128, elements: !1725)
!1724 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1725 = !{!1726, !1730, !1731}
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1723, file: !1724, line: 32, baseType: !1727, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1729)
!1729 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1723, file: !1724, line: 33, baseType: !5, size: 32, offset: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1723, file: !1724, line: 34, baseType: !5, size: 32, offset: 96)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1618, file: !149, line: 3381, baseType: !1733, size: 384)
!1733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !149, line: 2507, size: 384, elements: !1734)
!1734 = !{!1735, !1736, !1741, !1742, !1743}
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1733, file: !149, line: 2508, baseType: !1654, size: 192)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1733, file: !149, line: 2509, baseType: !1737, size: 32, offset: 192)
!1737 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1738, line: 58, baseType: !1739)
!1738 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1739 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1740, line: 44, baseType: !5)
!1740 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1733, file: !149, line: 2510, baseType: !5, size: 32, offset: 224)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1733, file: !149, line: 2511, baseType: !1616, size: 64, offset: 256)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1733, file: !149, line: 2512, baseType: !1616, size: 64, offset: 320)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1618, file: !149, line: 3382, baseType: !1745, size: 896)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !149, line: 2652, size: 896, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1745, file: !149, line: 2653, baseType: !1733, size: 384)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1745, file: !149, line: 2654, baseType: !1616, size: 64, offset: 384)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1745, file: !149, line: 2656, baseType: !5, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1745, file: !149, line: 2658, baseType: !5, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1745, file: !149, line: 2659, baseType: !5, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1745, file: !149, line: 2660, baseType: !5, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1745, file: !149, line: 2661, baseType: !5, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1745, file: !149, line: 2662, baseType: !5, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1745, file: !149, line: 2663, baseType: !5, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1745, file: !149, line: 2664, baseType: !5, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1745, file: !149, line: 2666, baseType: !5, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1745, file: !149, line: 2667, baseType: !5, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1745, file: !149, line: 2668, baseType: !5, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1745, file: !149, line: 2669, baseType: !5, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1745, file: !149, line: 2670, baseType: !5, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1745, file: !149, line: 2671, baseType: !5, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1745, file: !149, line: 2672, baseType: !5, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1745, file: !149, line: 2673, baseType: !5, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1745, file: !149, line: 2674, baseType: !5, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1745, file: !149, line: 2678, baseType: !5, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1745, file: !149, line: 2682, baseType: !5, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1745, file: !149, line: 2685, baseType: !5, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1745, file: !149, line: 2688, baseType: !5, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1745, file: !149, line: 2690, baseType: !5, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1745, file: !149, line: 2692, baseType: !5, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1745, file: !149, line: 2695, baseType: !5, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1745, file: !149, line: 2698, baseType: !5, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1745, file: !149, line: 2703, baseType: !5, size: 32, offset: 512)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1745, file: !149, line: 2705, baseType: !1616, size: 64, offset: 576)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1745, file: !149, line: 2706, baseType: !1616, size: 64, offset: 640)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1745, file: !149, line: 2707, baseType: !1616, size: 64, offset: 704)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1745, file: !149, line: 2708, baseType: !1616, size: 64, offset: 768)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1745, file: !149, line: 2711, baseType: !1780, size: 64, offset: 832)
!1780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1781, size: 64)
!1781 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !149, line: 2711, flags: DIFlagFwdDecl)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1618, file: !149, line: 3383, baseType: !1783, size: 960)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !149, line: 2756, size: 960, elements: !1784)
!1784 = !{!1785, !1786}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1783, file: !149, line: 2757, baseType: !1745, size: 896)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1783, file: !149, line: 2758, baseType: !1495, size: 64, offset: 896)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1618, file: !149, line: 3384, baseType: !1788, size: 1472)
!1788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !149, line: 3114, size: 1472, elements: !1789)
!1789 = !{!1790, !1811, !1812, !1813, !1814}
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1788, file: !149, line: 3115, baseType: !1791, size: 1216)
!1791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !149, line: 2984, size: 1216, elements: !1792)
!1792 = !{!1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810}
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1791, file: !149, line: 2985, baseType: !1783, size: 960)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1791, file: !149, line: 2986, baseType: !1616, size: 64, offset: 960)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1791, file: !149, line: 2987, baseType: !1616, size: 64, offset: 1024)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1791, file: !149, line: 2988, baseType: !1616, size: 64, offset: 1088)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1791, file: !149, line: 2991, baseType: !5, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1791, file: !149, line: 2992, baseType: !5, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1791, file: !149, line: 2993, baseType: !5, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1791, file: !149, line: 2994, baseType: !5, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1791, file: !149, line: 2995, baseType: !5, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1791, file: !149, line: 2996, baseType: !5, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1791, file: !149, line: 2998, baseType: !5, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1791, file: !149, line: 3000, baseType: !5, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1791, file: !149, line: 3002, baseType: !5, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1791, file: !149, line: 3003, baseType: !5, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1791, file: !149, line: 3004, baseType: !5, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1791, file: !149, line: 3005, baseType: !5, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1791, file: !149, line: 3007, baseType: !5, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1791, file: !149, line: 3010, baseType: !5, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1788, file: !149, line: 3117, baseType: !1616, size: 64, offset: 1216)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1788, file: !149, line: 3119, baseType: !1616, size: 64, offset: 1280)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1788, file: !149, line: 3121, baseType: !1616, size: 64, offset: 1344)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1788, file: !149, line: 3123, baseType: !1616, size: 64, offset: 1408)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1618, file: !149, line: 3385, baseType: !1816, size: 1088)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !149, line: 2874, size: 1088, elements: !1817)
!1817 = !{!1818, !1819, !1820}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1816, file: !149, line: 2875, baseType: !1783, size: 960)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1816, file: !149, line: 2876, baseType: !1495, size: 64, offset: 960)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1816, file: !149, line: 2877, baseType: !1821, size: 64, offset: 1024)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !149, line: 2856, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1618, file: !149, line: 3386, baseType: !1791, size: 1216)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1618, file: !149, line: 3387, baseType: !1825, size: 1280)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !149, line: 3093, size: 1280, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1825, file: !149, line: 3094, baseType: !1791, size: 1216)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1825, file: !149, line: 3095, baseType: !1821, size: 64, offset: 1216)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1618, file: !149, line: 3388, baseType: !1830, size: 1216)
!1830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !149, line: 2824, size: 1216, elements: !1831)
!1831 = !{!1832, !1833, !1834, !1835, !1836, !1837}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1830, file: !149, line: 2825, baseType: !1745, size: 896)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1830, file: !149, line: 2827, baseType: !1616, size: 64, offset: 896)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1830, file: !149, line: 2828, baseType: !1616, size: 64, offset: 960)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1830, file: !149, line: 2829, baseType: !1616, size: 64, offset: 1024)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1830, file: !149, line: 2830, baseType: !1616, size: 64, offset: 1088)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1830, file: !149, line: 2831, baseType: !1616, size: 64, offset: 1152)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1618, file: !149, line: 3389, baseType: !1839, size: 1024)
!1839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !149, line: 2850, size: 1024, elements: !1840)
!1840 = !{!1841, !1842, !1843}
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1839, file: !149, line: 2851, baseType: !1783, size: 960)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1839, file: !149, line: 2852, baseType: !1518, size: 32, offset: 960)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1839, file: !149, line: 2853, baseType: !1518, size: 32, offset: 992)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1618, file: !149, line: 3390, baseType: !1845, size: 1024)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !149, line: 2857, size: 1024, elements: !1846)
!1846 = !{!1847, !1848}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1845, file: !149, line: 2858, baseType: !1783, size: 960)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1845, file: !149, line: 2859, baseType: !1821, size: 64, offset: 960)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1618, file: !149, line: 3391, baseType: !1850, size: 960)
!1850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !149, line: 2862, size: 960, elements: !1851)
!1851 = !{!1852}
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1850, file: !149, line: 2863, baseType: !1783, size: 960)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1618, file: !149, line: 3392, baseType: !1854, size: 1472)
!1854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !149, line: 3304, size: 1472, elements: !1855)
!1855 = !{!1856}
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1854, file: !149, line: 3305, baseType: !1788, size: 1472)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1618, file: !149, line: 3393, baseType: !1858, size: 1792)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !149, line: 3248, size: 1792, elements: !1859)
!1859 = !{!1860, !1861, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1858, file: !149, line: 3249, baseType: !1788, size: 1472)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1858, file: !149, line: 3251, baseType: !1862, size: 64, offset: 1472)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1864, line: 463, size: 1152, elements: !1865)
!1864 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1865 = !{!1866, !1869, !1973, !1974, !1977, !1980, !2032, !2033, !2034, !2035, !2036, !2060, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1863, file: !1864, line: 464, baseType: !1867, size: 64)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1864, line: 464, flags: DIFlagFwdDecl)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1863, file: !1864, line: 467, baseType: !1870, size: 64, offset: 64)
!1870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1871, size: 64)
!1871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !133, line: 374, size: 640, elements: !1872)
!1872 = !{!1873, !1948, !1949, !1962, !1963, !1964, !1965, !1966, !1967, !1969, !1971, !1972}
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1871, file: !133, line: 377, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !556, line: 111, baseType: !1875)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !133, line: 217, size: 832, elements: !1877)
!1877 = !{!1878, !1913, !1914, !1915, !1918, !1922, !1923, !1924, !1942, !1943, !1944, !1945, !1946, !1947}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1876, file: !133, line: 219, baseType: !1879, size: 64)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !133, line: 151, baseType: !1881)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !133, line: 151, size: 128, elements: !1882)
!1882 = !{!1883}
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1881, file: !133, line: 151, baseType: !1884, size: 128)
!1884 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !133, line: 150, baseType: !1885)
!1885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !133, line: 150, size: 128, elements: !1886)
!1886 = !{!1887, !1888, !1889}
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1885, file: !133, line: 150, baseType: !5, size: 32)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1885, file: !133, line: 150, baseType: !5, size: 32, offset: 32)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1885, file: !133, line: 150, baseType: !1890, size: 64, offset: 64)
!1890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1891, size: 64, elements: !1533)
!1891 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !556, line: 108, baseType: !1892)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !133, line: 122, size: 512, elements: !1894)
!1894 = !{!1895, !1896, !1897, !1905, !1906, !1907, !1908, !1909, !1910, !1911}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1893, file: !133, line: 124, baseType: !1875, size: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1893, file: !133, line: 125, baseType: !1875, size: 64, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1893, file: !133, line: 131, baseType: !1898, size: 64, offset: 128)
!1898 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !133, line: 128, size: 64, elements: !1899)
!1899 = !{!1900, !1904}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1898, file: !133, line: 129, baseType: !1901, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !556, line: 66, baseType: !1902)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !556, line: 65, flags: DIFlagFwdDecl)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1898, file: !133, line: 130, baseType: !1495, size: 64)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1893, file: !133, line: 134, baseType: !1606, size: 64, offset: 192)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1893, file: !133, line: 137, baseType: !1616, size: 64, offset: 256)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1893, file: !133, line: 138, baseType: !1737, size: 32, offset: 320)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1893, file: !133, line: 142, baseType: !5, size: 32, offset: 352)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1893, file: !133, line: 144, baseType: !1518, size: 32, offset: 384)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1893, file: !133, line: 145, baseType: !1518, size: 32, offset: 416)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1893, file: !133, line: 146, baseType: !1912, size: 64, offset: 448)
!1912 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !133, line: 119, baseType: !1585)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1876, file: !133, line: 220, baseType: !1879, size: 64, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1876, file: !133, line: 223, baseType: !1606, size: 64, offset: 128)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1876, file: !133, line: 226, baseType: !1916, size: 64, offset: 192)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1917, size: 64)
!1917 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !133, line: 185, flags: DIFlagFwdDecl)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1876, file: !133, line: 229, baseType: !1919, size: 128, offset: 256)
!1919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1920, size: 128, elements: !1569)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !133, line: 229, flags: DIFlagFwdDecl)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1876, file: !133, line: 232, baseType: !1875, size: 64, offset: 384)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1876, file: !133, line: 233, baseType: !1875, size: 64, offset: 448)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1876, file: !133, line: 238, baseType: !1925, size: 64, offset: 512)
!1925 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !133, line: 235, size: 64, elements: !1926)
!1926 = !{!1927, !1933}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1925, file: !133, line: 236, baseType: !1928, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1929, size: 64)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !133, line: 273, size: 128, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1929, file: !133, line: 275, baseType: !1901, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1929, file: !133, line: 278, baseType: !1901, size: 64, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1925, file: !133, line: 237, baseType: !1934, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1935, size: 64)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !133, line: 259, size: 320, elements: !1936)
!1936 = !{!1937, !1938, !1939, !1940, !1941}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1935, file: !133, line: 261, baseType: !1495, size: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1935, file: !133, line: 262, baseType: !1495, size: 64, offset: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1935, file: !133, line: 266, baseType: !1495, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1935, file: !133, line: 267, baseType: !1495, size: 64, offset: 192)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1935, file: !133, line: 270, baseType: !1518, size: 32, offset: 256)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1876, file: !133, line: 241, baseType: !1912, size: 64, offset: 576)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1876, file: !133, line: 244, baseType: !1518, size: 32, offset: 640)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1876, file: !133, line: 247, baseType: !1518, size: 32, offset: 672)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1876, file: !133, line: 250, baseType: !1518, size: 32, offset: 704)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1876, file: !133, line: 253, baseType: !1518, size: 32, offset: 736)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1876, file: !133, line: 256, baseType: !1518, size: 32, offset: 768)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1871, file: !133, line: 378, baseType: !1874, size: 64, offset: 64)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1871, file: !133, line: 381, baseType: !1950, size: 64, offset: 128)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !133, line: 282, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !133, line: 282, size: 128, elements: !1953)
!1953 = !{!1954}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1952, file: !133, line: 282, baseType: !1955, size: 128)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !133, line: 281, baseType: !1956)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !133, line: 281, size: 128, elements: !1957)
!1957 = !{!1958, !1959, !1960}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1956, file: !133, line: 281, baseType: !5, size: 32)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1956, file: !133, line: 281, baseType: !5, size: 32, offset: 32)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1956, file: !133, line: 281, baseType: !1961, size: 64, offset: 64)
!1961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1874, size: 64, elements: !1533)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1871, file: !133, line: 384, baseType: !1518, size: 32, offset: 192)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1871, file: !133, line: 387, baseType: !1518, size: 32, offset: 224)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1871, file: !133, line: 390, baseType: !1518, size: 32, offset: 256)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1871, file: !133, line: 394, baseType: !1950, size: 64, offset: 320)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1871, file: !133, line: 396, baseType: !132, size: 32, offset: 384)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1871, file: !133, line: 399, baseType: !1968, size: 64, offset: 416)
!1968 = !DICompositeType(tag: DW_TAG_array_type, baseType: !138, size: 64, elements: !1569)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1871, file: !133, line: 402, baseType: !1970, size: 64, offset: 480)
!1970 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1569)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1871, file: !133, line: 406, baseType: !1518, size: 32, offset: 544)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1871, file: !133, line: 409, baseType: !1518, size: 32, offset: 576)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1863, file: !1864, line: 470, baseType: !1902, size: 64, offset: 128)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1863, file: !1864, line: 473, baseType: !1975, size: 64, offset: 192)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1864, line: 166, flags: DIFlagFwdDecl)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1863, file: !1864, line: 476, baseType: !1978, size: 64, offset: 256)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1864, line: 476, flags: DIFlagFwdDecl)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1863, file: !1864, line: 479, baseType: !1981, size: 64, offset: 320)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1982, line: 144, baseType: !1983)
!1982 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1982, line: 100, size: 896, elements: !1985)
!1985 = !{!1986, !1994, !1999, !2004, !2006, !2009, !2010, !2011, !2012, !2013, !2018, !2020, !2021, !2026, !2031}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1984, file: !1982, line: 102, baseType: !1987, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1982, line: 52, baseType: !1988)
!1988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1989, size: 64)
!1989 = !DISubroutineType(types: !1990)
!1990 = !{!1991, !1992}
!1991 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1982, line: 47, baseType: !5)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1984, file: !1982, line: 105, baseType: !1995, size: 64, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1982, line: 59, baseType: !1996)
!1996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1997, size: 64)
!1997 = !DISubroutineType(types: !1998)
!1998 = !{!1518, !1992, !1992}
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1984, file: !1982, line: 108, baseType: !2000, size: 64, offset: 128)
!2000 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1982, line: 63, baseType: !2001)
!2001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2002, size: 64)
!2002 = !DISubroutineType(types: !2003)
!2003 = !{null, !1606}
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1984, file: !1982, line: 111, baseType: !2005, size: 64, offset: 192)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1606, size: 64)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1984, file: !1982, line: 114, baseType: !2007, size: 64, offset: 256)
!2007 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !2008, line: 46, baseType: !1568)
!2008 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1984, file: !1982, line: 117, baseType: !2007, size: 64, offset: 320)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1984, file: !1982, line: 120, baseType: !2007, size: 64, offset: 384)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1984, file: !1982, line: 124, baseType: !5, size: 32, offset: 448)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1984, file: !1982, line: 128, baseType: !5, size: 32, offset: 480)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1984, file: !1982, line: 131, baseType: !2014, size: 64, offset: 512)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1982, line: 75, baseType: !2015)
!2015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2016, size: 64)
!2016 = !DISubroutineType(types: !2017)
!2017 = !{!1606, !2007, !2007}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1984, file: !1982, line: 132, baseType: !2019, size: 64, offset: 576)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1982, line: 78, baseType: !2001)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1984, file: !1982, line: 135, baseType: !1606, size: 64, offset: 640)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1984, file: !1982, line: 136, baseType: !2022, size: 64, offset: 704)
!2022 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1982, line: 82, baseType: !2023)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DISubroutineType(types: !2025)
!2025 = !{!1606, !1606, !2007, !2007}
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1984, file: !1982, line: 137, baseType: !2027, size: 64, offset: 768)
!2027 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1982, line: 83, baseType: !2028)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{null, !1606, !1606}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1984, file: !1982, line: 141, baseType: !5, size: 32, offset: 832)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1863, file: !1864, line: 484, baseType: !1616, size: 64, offset: 384)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1863, file: !1864, line: 488, baseType: !1616, size: 64, offset: 448)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1863, file: !1864, line: 493, baseType: !1616, size: 64, offset: 512)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1863, file: !1864, line: 496, baseType: !1616, size: 64, offset: 576)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1863, file: !1864, line: 501, baseType: !2037, size: 64, offset: 640)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !144, line: 2355, size: 576, elements: !2039)
!2039 = !{!2040, !2043, !2044, !2045, !2046, !2048, !2049, !2054, !2055, !2056, !2057, !2058, !2059}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !2038, file: !144, line: 2356, baseType: !2041, size: 64)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !144, line: 2356, flags: DIFlagFwdDecl)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !2038, file: !144, line: 2357, baseType: !1521, size: 64, offset: 64)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !2038, file: !144, line: 2358, baseType: !1518, size: 32, offset: 128)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !2038, file: !144, line: 2359, baseType: !1518, size: 32, offset: 160)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !2038, file: !144, line: 2360, baseType: !2047, size: 128, offset: 192)
!2047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1518, size: 128, elements: !1595)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !2038, file: !144, line: 2364, baseType: !1518, size: 32, offset: 320)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !2038, file: !144, line: 2367, baseType: !2050, size: 128, offset: 384)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !144, line: 2349, size: 128, elements: !2051)
!2051 = !{!2052, !2053}
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !2050, file: !144, line: 2351, baseType: !1495, size: 64)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2050, file: !144, line: 2352, baseType: !1585, size: 64, offset: 64)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !2038, file: !144, line: 2371, baseType: !143, size: 32, offset: 512)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !2038, file: !144, line: 2374, baseType: !5, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !2038, file: !144, line: 2377, baseType: !5, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !2038, file: !144, line: 2381, baseType: !5, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !2038, file: !144, line: 2392, baseType: !5, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !2038, file: !144, line: 2396, baseType: !5, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1863, file: !1864, line: 504, baseType: !2061, size: 64, offset: 704)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1864, line: 504, flags: DIFlagFwdDecl)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1863, file: !1864, line: 507, baseType: !1981, size: 64, offset: 768)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1863, file: !1864, line: 510, baseType: !1518, size: 32, offset: 832)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1863, file: !1864, line: 513, baseType: !1518, size: 32, offset: 864)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1863, file: !1864, line: 516, baseType: !1737, size: 32, offset: 896)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1863, file: !1864, line: 519, baseType: !1737, size: 32, offset: 928)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1863, file: !1864, line: 522, baseType: !5, size: 32, offset: 960)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1863, file: !1864, line: 523, baseType: !5, size: 32, offset: 992)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1863, file: !1864, line: 528, baseType: !1521, size: 64, offset: 1024)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1863, file: !1864, line: 535, baseType: !5, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1863, file: !1864, line: 539, baseType: !5, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1863, file: !1864, line: 543, baseType: !5, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1863, file: !1864, line: 546, baseType: !5, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1863, file: !1864, line: 550, baseType: !5, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1863, file: !1864, line: 554, baseType: !5, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1863, file: !1864, line: 559, baseType: !5, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1863, file: !1864, line: 562, baseType: !5, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1863, file: !1864, line: 571, baseType: !5, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1863, file: !1864, line: 573, baseType: !5, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1863, file: !1864, line: 574, baseType: !5, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1863, file: !1864, line: 581, baseType: !5, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1863, file: !1864, line: 585, baseType: !5, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1863, file: !1864, line: 588, baseType: !5, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1863, file: !1864, line: 592, baseType: !5, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1863, file: !1864, line: 598, baseType: !5, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1858, file: !149, line: 3254, baseType: !1616, size: 64, offset: 1536)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1858, file: !149, line: 3257, baseType: !1616, size: 64, offset: 1600)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1858, file: !149, line: 3258, baseType: !1616, size: 64, offset: 1664)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1858, file: !149, line: 3264, baseType: !5, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1858, file: !149, line: 3265, baseType: !5, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1858, file: !149, line: 3267, baseType: !5, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1858, file: !149, line: 3268, baseType: !5, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1858, file: !149, line: 3269, baseType: !5, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1858, file: !149, line: 3271, baseType: !5, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1858, file: !149, line: 3272, baseType: !5, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1858, file: !149, line: 3273, baseType: !5, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1858, file: !149, line: 3274, baseType: !5, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1858, file: !149, line: 3275, baseType: !5, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1858, file: !149, line: 3276, baseType: !5, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1858, file: !149, line: 3277, baseType: !5, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1858, file: !149, line: 3279, baseType: !5, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1858, file: !149, line: 3280, baseType: !5, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1858, file: !149, line: 3281, baseType: !5, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1858, file: !149, line: 3282, baseType: !5, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1858, file: !149, line: 3283, baseType: !5, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1858, file: !149, line: 3284, baseType: !5, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1618, file: !149, line: 3394, baseType: !2109, size: 1344)
!2109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !149, line: 2279, size: 1344, elements: !2110)
!2110 = !{!2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2136, !2137, !2138, !2146, !2147, !2148, !2149, !2150, !2151, !2152, !2153, !2154}
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2109, file: !149, line: 2280, baseType: !1654, size: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2109, file: !149, line: 2281, baseType: !1616, size: 64, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2109, file: !149, line: 2282, baseType: !1616, size: 64, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2109, file: !149, line: 2283, baseType: !1616, size: 64, offset: 320)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2109, file: !149, line: 2284, baseType: !1616, size: 64, offset: 384)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2109, file: !149, line: 2285, baseType: !5, size: 32, offset: 448)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2109, file: !149, line: 2287, baseType: !5, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2109, file: !149, line: 2288, baseType: !5, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2109, file: !149, line: 2289, baseType: !5, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2109, file: !149, line: 2290, baseType: !5, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2109, file: !149, line: 2291, baseType: !5, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2109, file: !149, line: 2292, baseType: !5, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2109, file: !149, line: 2294, baseType: !5, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2109, file: !149, line: 2296, baseType: !5, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2109, file: !149, line: 2297, baseType: !5, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2109, file: !149, line: 2298, baseType: !5, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2109, file: !149, line: 2299, baseType: !5, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2109, file: !149, line: 2300, baseType: !5, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2109, file: !149, line: 2301, baseType: !5, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2109, file: !149, line: 2302, baseType: !5, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2109, file: !149, line: 2303, baseType: !5, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2109, file: !149, line: 2305, baseType: !5, size: 32, offset: 512)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2109, file: !149, line: 2306, baseType: !2134, size: 32, offset: 544)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !2135, line: 31, baseType: !1518)
!2135 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2109, file: !149, line: 2307, baseType: !1616, size: 64, offset: 576)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2109, file: !149, line: 2308, baseType: !1616, size: 64, offset: 640)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2109, file: !149, line: 2314, baseType: !2139, size: 64, offset: 704)
!2139 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !149, line: 2309, size: 64, elements: !2140)
!2140 = !{!2141, !2142, !2143}
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2139, file: !149, line: 2310, baseType: !1518, size: 32)
!2142 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2139, file: !149, line: 2311, baseType: !1521, size: 64)
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2139, file: !149, line: 2312, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !149, line: 2277, flags: DIFlagFwdDecl)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2109, file: !149, line: 2315, baseType: !1616, size: 64, offset: 768)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2109, file: !149, line: 2316, baseType: !1616, size: 64, offset: 832)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2109, file: !149, line: 2317, baseType: !1616, size: 64, offset: 896)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2109, file: !149, line: 2318, baseType: !1616, size: 64, offset: 960)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2109, file: !149, line: 2319, baseType: !1616, size: 64, offset: 1024)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2109, file: !149, line: 2320, baseType: !1616, size: 64, offset: 1088)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2109, file: !149, line: 2321, baseType: !1616, size: 64, offset: 1152)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2109, file: !149, line: 2322, baseType: !1616, size: 64, offset: 1216)
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2109, file: !149, line: 2324, baseType: !2155, size: 64, offset: 1280)
!2155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2156, size: 64)
!2156 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !149, line: 2324, flags: DIFlagFwdDecl)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1618, file: !149, line: 3395, baseType: !2158, size: 320)
!2158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !149, line: 1469, size: 320, elements: !2159)
!2159 = !{!2160, !2161, !2162}
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2158, file: !149, line: 1470, baseType: !1654, size: 192)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2158, file: !149, line: 1471, baseType: !1616, size: 64, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2158, file: !149, line: 1472, baseType: !1616, size: 64, offset: 256)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1618, file: !149, line: 3396, baseType: !2164, size: 320)
!2164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !149, line: 1482, size: 320, elements: !2165)
!2165 = !{!2166, !2167, !2168}
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2164, file: !149, line: 1483, baseType: !1654, size: 192)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2164, file: !149, line: 1484, baseType: !1518, size: 32, offset: 192)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2164, file: !149, line: 1485, baseType: !2169, size: 64, offset: 256)
!2169 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1616, size: 64, elements: !1533)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1618, file: !149, line: 3397, baseType: !2171, size: 384)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !149, line: 1829, size: 384, elements: !2172)
!2172 = !{!2173, !2174, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2171, file: !149, line: 1830, baseType: !1654, size: 192)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2171, file: !149, line: 1831, baseType: !1737, size: 32, offset: 192)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2171, file: !149, line: 1832, baseType: !1616, size: 64, offset: 256)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2171, file: !149, line: 1835, baseType: !2169, size: 64, offset: 320)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1618, file: !149, line: 3398, baseType: !2178, size: 704)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !149, line: 1898, size: 704, elements: !2179)
!2179 = !{!2180, !2181, !2182, !2186, !2187, !2190}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2178, file: !149, line: 1899, baseType: !1654, size: 192)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2178, file: !149, line: 1902, baseType: !1616, size: 64, offset: 192)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2178, file: !149, line: 1905, baseType: !2183, size: 64, offset: 256)
!2183 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !556, line: 58, baseType: !2184)
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !556, line: 57, flags: DIFlagFwdDecl)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2178, file: !149, line: 1908, baseType: !5, size: 32, offset: 320)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2178, file: !149, line: 1911, baseType: !2188, size: 64, offset: 384)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 64)
!2189 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !149, line: 1876, flags: DIFlagFwdDecl)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2178, file: !149, line: 1914, baseType: !2191, size: 256, offset: 448)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !149, line: 1883, size: 256, elements: !2192)
!2192 = !{!2193, !2195, !2196, !2201}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2191, file: !149, line: 1884, baseType: !2194, size: 64)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2191, size: 64)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2191, file: !149, line: 1885, baseType: !2194, size: 64, offset: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2191, file: !149, line: 1891, baseType: !2197, size: 64, offset: 128)
!2197 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2191, file: !149, line: 1891, size: 64, elements: !2198)
!2198 = !{!2199, !2200}
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2197, file: !149, line: 1891, baseType: !2183, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !2197, file: !149, line: 1891, baseType: !1616, size: 64)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2191, file: !149, line: 1892, baseType: !2202, size: 64, offset: 192)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1618, file: !149, line: 3399, baseType: !2204, size: 704)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !149, line: 2008, size: 704, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2209, !2210, !2211, !2223, !2224, !2225, !2226, !2227}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2204, file: !149, line: 2009, baseType: !1654, size: 192)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2204, file: !149, line: 2011, baseType: !5, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2204, file: !149, line: 2012, baseType: !5, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2204, file: !149, line: 2014, baseType: !1737, size: 32, offset: 224)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2204, file: !149, line: 2016, baseType: !1616, size: 64, offset: 256)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2204, file: !149, line: 2017, baseType: !2212, size: 64, offset: 320)
!2212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2213, size: 64)
!2213 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !149, line: 183, baseType: !2214)
!2214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !149, line: 183, size: 128, elements: !2215)
!2215 = !{!2216}
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2214, file: !149, line: 183, baseType: !2217, size: 128)
!2217 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !149, line: 182, baseType: !2218)
!2218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !149, line: 182, size: 128, elements: !2219)
!2219 = !{!2220, !2221, !2222}
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2218, file: !149, line: 182, baseType: !5, size: 32)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2218, file: !149, line: 182, baseType: !5, size: 32, offset: 32)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2218, file: !149, line: 182, baseType: !2169, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2204, file: !149, line: 2019, baseType: !1616, size: 64, offset: 384)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2204, file: !149, line: 2020, baseType: !1616, size: 64, offset: 448)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2204, file: !149, line: 2021, baseType: !1616, size: 64, offset: 512)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2204, file: !149, line: 2022, baseType: !1616, size: 64, offset: 576)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2204, file: !149, line: 2023, baseType: !1616, size: 64, offset: 640)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1618, file: !149, line: 3400, baseType: !2229, size: 832)
!2229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !149, line: 2430, size: 832, elements: !2230)
!2230 = !{!2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2229, file: !149, line: 2431, baseType: !1654, size: 192)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2229, file: !149, line: 2433, baseType: !1616, size: 64, offset: 192)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2229, file: !149, line: 2434, baseType: !1616, size: 64, offset: 256)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2229, file: !149, line: 2435, baseType: !1616, size: 64, offset: 320)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2229, file: !149, line: 2436, baseType: !1616, size: 64, offset: 384)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2229, file: !149, line: 2437, baseType: !2212, size: 64, offset: 448)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2229, file: !149, line: 2438, baseType: !1616, size: 64, offset: 512)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2229, file: !149, line: 2440, baseType: !1616, size: 64, offset: 576)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2229, file: !149, line: 2441, baseType: !1616, size: 64, offset: 640)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2229, file: !149, line: 2443, baseType: !2241, size: 128, offset: 704)
!2241 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !149, line: 182, baseType: !2242)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !149, line: 182, size: 128, elements: !2243)
!2243 = !{!2244}
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2242, file: !149, line: 182, baseType: !2217, size: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1618, file: !149, line: 3401, baseType: !2246, size: 320)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !149, line: 3327, size: 320, elements: !2247)
!2247 = !{!2248, !2249, !2256}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2246, file: !149, line: 3329, baseType: !1654, size: 192)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2246, file: !149, line: 3330, baseType: !2250, size: 64, offset: 192)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !149, line: 3320, size: 192, elements: !2252)
!2252 = !{!2253, !2254, !2255}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2251, file: !149, line: 3322, baseType: !2250, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2251, file: !149, line: 3323, baseType: !2250, size: 64, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2251, file: !149, line: 3324, baseType: !1616, size: 64, offset: 128)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2246, file: !149, line: 3331, baseType: !2250, size: 64, offset: 256)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1618, file: !149, line: 3402, baseType: !2258, size: 256)
!2258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !149, line: 1540, size: 256, elements: !2259)
!2259 = !{!2260, !2261}
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2258, file: !149, line: 1541, baseType: !1654, size: 192)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2258, file: !149, line: 1542, baseType: !2262, size: 64, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !149, line: 1538, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !149, line: 1538, size: 192, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2264, file: !149, line: 1538, baseType: !2267, size: 192)
!2267 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !149, line: 1537, baseType: !2268)
!2268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !149, line: 1537, size: 192, elements: !2269)
!2269 = !{!2270, !2271, !2272}
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2268, file: !149, line: 1537, baseType: !5, size: 32)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2268, file: !149, line: 1537, baseType: !5, size: 32, offset: 32)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2268, file: !149, line: 1537, baseType: !2273, size: 128, offset: 64)
!2273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2274, size: 128, elements: !1533)
!2274 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !149, line: 1535, baseType: !2275)
!2275 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !149, line: 1532, size: 128, elements: !2276)
!2276 = !{!2277, !2278}
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2275, file: !149, line: 1533, baseType: !1616, size: 64)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2275, file: !149, line: 1534, baseType: !1616, size: 64, offset: 64)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1618, file: !149, line: 3403, baseType: !2280, size: 512)
!2280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !149, line: 1938, size: 512, elements: !2281)
!2281 = !{!2282, !2283, !2284, !2285, !2291, !2292, !2293}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2280, file: !149, line: 1939, baseType: !1654, size: 192)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2280, file: !149, line: 1940, baseType: !1737, size: 32, offset: 192)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2280, file: !149, line: 1941, baseType: !148, size: 32, offset: 224)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2280, file: !149, line: 1946, baseType: !2286, size: 32, offset: 256)
!2286 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !149, line: 1942, size: 32, elements: !2287)
!2287 = !{!2288, !2289, !2290}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2286, file: !149, line: 1943, baseType: !167, size: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2286, file: !149, line: 1944, baseType: !174, size: 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2286, file: !149, line: 1945, baseType: !181, size: 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2280, file: !149, line: 1950, baseType: !1901, size: 64, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2280, file: !149, line: 1951, baseType: !1901, size: 64, offset: 384)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2280, file: !149, line: 1953, baseType: !2169, size: 64, offset: 448)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1618, file: !149, line: 3404, baseType: !2295, size: 1664)
!2295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !149, line: 3337, size: 1664, elements: !2296)
!2296 = !{!2297, !2298}
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2295, file: !149, line: 3338, baseType: !1654, size: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2295, file: !149, line: 3341, baseType: !2299, size: 1472, offset: 192)
!2299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !618, line: 410, size: 1472, elements: !2300)
!2300 = !{!2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344, !2345, !2346, !2347, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2401, !2402, !2403, !2404, !2405, !2406, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464}
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2299, file: !618, line: 412, baseType: !1518, size: 32)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2299, file: !618, line: 413, baseType: !1518, size: 32, offset: 32)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2299, file: !618, line: 414, baseType: !1518, size: 32, offset: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2299, file: !618, line: 415, baseType: !1518, size: 32, offset: 96)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2299, file: !618, line: 416, baseType: !1518, size: 32, offset: 128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2299, file: !618, line: 417, baseType: !1518, size: 32, offset: 160)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2299, file: !618, line: 418, baseType: !1729, size: 8, offset: 192)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2299, file: !618, line: 419, baseType: !1729, size: 8, offset: 200)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2299, file: !618, line: 420, baseType: !2310, size: 8, offset: 208)
!2310 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2299, file: !618, line: 421, baseType: !2310, size: 8, offset: 216)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2299, file: !618, line: 422, baseType: !2310, size: 8, offset: 224)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2299, file: !618, line: 423, baseType: !2310, size: 8, offset: 232)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2299, file: !618, line: 424, baseType: !2310, size: 8, offset: 240)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2299, file: !618, line: 425, baseType: !2310, size: 8, offset: 248)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2299, file: !618, line: 426, baseType: !2310, size: 8, offset: 256)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2299, file: !618, line: 427, baseType: !2310, size: 8, offset: 264)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2299, file: !618, line: 428, baseType: !2310, size: 8, offset: 272)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2299, file: !618, line: 429, baseType: !2310, size: 8, offset: 280)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2299, file: !618, line: 430, baseType: !2310, size: 8, offset: 288)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2299, file: !618, line: 431, baseType: !2310, size: 8, offset: 296)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2299, file: !618, line: 432, baseType: !2310, size: 8, offset: 304)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2299, file: !618, line: 433, baseType: !2310, size: 8, offset: 312)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2299, file: !618, line: 434, baseType: !2310, size: 8, offset: 320)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2299, file: !618, line: 435, baseType: !2310, size: 8, offset: 328)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2299, file: !618, line: 436, baseType: !2310, size: 8, offset: 336)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2299, file: !618, line: 437, baseType: !2310, size: 8, offset: 344)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2299, file: !618, line: 438, baseType: !2310, size: 8, offset: 352)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2299, file: !618, line: 439, baseType: !2310, size: 8, offset: 360)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2299, file: !618, line: 440, baseType: !2310, size: 8, offset: 368)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2299, file: !618, line: 441, baseType: !2310, size: 8, offset: 376)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2299, file: !618, line: 442, baseType: !2310, size: 8, offset: 384)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2299, file: !618, line: 443, baseType: !2310, size: 8, offset: 392)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2299, file: !618, line: 444, baseType: !2310, size: 8, offset: 400)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2299, file: !618, line: 445, baseType: !2310, size: 8, offset: 408)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2299, file: !618, line: 446, baseType: !2310, size: 8, offset: 416)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2299, file: !618, line: 447, baseType: !2310, size: 8, offset: 424)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2299, file: !618, line: 448, baseType: !2310, size: 8, offset: 432)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2299, file: !618, line: 449, baseType: !2310, size: 8, offset: 440)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2299, file: !618, line: 450, baseType: !2310, size: 8, offset: 448)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2299, file: !618, line: 451, baseType: !2310, size: 8, offset: 456)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2299, file: !618, line: 452, baseType: !2310, size: 8, offset: 464)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2299, file: !618, line: 453, baseType: !2310, size: 8, offset: 472)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2299, file: !618, line: 454, baseType: !2310, size: 8, offset: 480)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2299, file: !618, line: 455, baseType: !2310, size: 8, offset: 488)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2299, file: !618, line: 456, baseType: !2310, size: 8, offset: 496)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2299, file: !618, line: 457, baseType: !2310, size: 8, offset: 504)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2299, file: !618, line: 458, baseType: !2310, size: 8, offset: 512)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2299, file: !618, line: 459, baseType: !2310, size: 8, offset: 520)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2299, file: !618, line: 460, baseType: !2310, size: 8, offset: 528)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2299, file: !618, line: 461, baseType: !2310, size: 8, offset: 536)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2299, file: !618, line: 462, baseType: !2310, size: 8, offset: 544)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2299, file: !618, line: 463, baseType: !2310, size: 8, offset: 552)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2299, file: !618, line: 464, baseType: !2310, size: 8, offset: 560)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2299, file: !618, line: 465, baseType: !2310, size: 8, offset: 568)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2299, file: !618, line: 466, baseType: !2310, size: 8, offset: 576)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2299, file: !618, line: 467, baseType: !2310, size: 8, offset: 584)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2299, file: !618, line: 468, baseType: !2310, size: 8, offset: 592)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2299, file: !618, line: 469, baseType: !2310, size: 8, offset: 600)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2299, file: !618, line: 470, baseType: !2310, size: 8, offset: 608)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2299, file: !618, line: 471, baseType: !2310, size: 8, offset: 616)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2299, file: !618, line: 472, baseType: !2310, size: 8, offset: 624)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2299, file: !618, line: 473, baseType: !2310, size: 8, offset: 632)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2299, file: !618, line: 474, baseType: !2310, size: 8, offset: 640)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2299, file: !618, line: 475, baseType: !2310, size: 8, offset: 648)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2299, file: !618, line: 476, baseType: !2310, size: 8, offset: 656)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2299, file: !618, line: 477, baseType: !2310, size: 8, offset: 664)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2299, file: !618, line: 478, baseType: !2310, size: 8, offset: 672)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2299, file: !618, line: 479, baseType: !2310, size: 8, offset: 680)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2299, file: !618, line: 480, baseType: !2310, size: 8, offset: 688)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2299, file: !618, line: 481, baseType: !2310, size: 8, offset: 696)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2299, file: !618, line: 482, baseType: !2310, size: 8, offset: 704)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2299, file: !618, line: 483, baseType: !2310, size: 8, offset: 712)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2299, file: !618, line: 484, baseType: !2310, size: 8, offset: 720)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2299, file: !618, line: 485, baseType: !2310, size: 8, offset: 728)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2299, file: !618, line: 486, baseType: !2310, size: 8, offset: 736)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2299, file: !618, line: 487, baseType: !2310, size: 8, offset: 744)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2299, file: !618, line: 488, baseType: !2310, size: 8, offset: 752)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2299, file: !618, line: 489, baseType: !2310, size: 8, offset: 760)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2299, file: !618, line: 490, baseType: !2310, size: 8, offset: 768)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2299, file: !618, line: 491, baseType: !2310, size: 8, offset: 776)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2299, file: !618, line: 492, baseType: !2310, size: 8, offset: 784)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2299, file: !618, line: 493, baseType: !2310, size: 8, offset: 792)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2299, file: !618, line: 494, baseType: !2310, size: 8, offset: 800)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2299, file: !618, line: 495, baseType: !2310, size: 8, offset: 808)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2299, file: !618, line: 496, baseType: !2310, size: 8, offset: 816)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2299, file: !618, line: 497, baseType: !2310, size: 8, offset: 824)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2299, file: !618, line: 498, baseType: !2310, size: 8, offset: 832)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2299, file: !618, line: 499, baseType: !2310, size: 8, offset: 840)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2299, file: !618, line: 500, baseType: !2310, size: 8, offset: 848)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2299, file: !618, line: 501, baseType: !2310, size: 8, offset: 856)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2299, file: !618, line: 502, baseType: !2310, size: 8, offset: 864)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2299, file: !618, line: 503, baseType: !2310, size: 8, offset: 872)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2299, file: !618, line: 504, baseType: !2310, size: 8, offset: 880)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2299, file: !618, line: 505, baseType: !2310, size: 8, offset: 888)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2299, file: !618, line: 506, baseType: !2310, size: 8, offset: 896)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2299, file: !618, line: 507, baseType: !2310, size: 8, offset: 904)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2299, file: !618, line: 508, baseType: !2310, size: 8, offset: 912)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2299, file: !618, line: 509, baseType: !2310, size: 8, offset: 920)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2299, file: !618, line: 510, baseType: !2310, size: 8, offset: 928)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2299, file: !618, line: 511, baseType: !2310, size: 8, offset: 936)
!2402 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2299, file: !618, line: 512, baseType: !2310, size: 8, offset: 944)
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2299, file: !618, line: 513, baseType: !2310, size: 8, offset: 952)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2299, file: !618, line: 514, baseType: !2310, size: 8, offset: 960)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2299, file: !618, line: 515, baseType: !2310, size: 8, offset: 968)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2299, file: !618, line: 516, baseType: !2310, size: 8, offset: 976)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2299, file: !618, line: 517, baseType: !2310, size: 8, offset: 984)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2299, file: !618, line: 518, baseType: !2310, size: 8, offset: 992)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2299, file: !618, line: 519, baseType: !2310, size: 8, offset: 1000)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2299, file: !618, line: 520, baseType: !2310, size: 8, offset: 1008)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2299, file: !618, line: 521, baseType: !2310, size: 8, offset: 1016)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2299, file: !618, line: 522, baseType: !2310, size: 8, offset: 1024)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2299, file: !618, line: 523, baseType: !2310, size: 8, offset: 1032)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2299, file: !618, line: 524, baseType: !2310, size: 8, offset: 1040)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2299, file: !618, line: 525, baseType: !2310, size: 8, offset: 1048)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2299, file: !618, line: 526, baseType: !2310, size: 8, offset: 1056)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2299, file: !618, line: 527, baseType: !2310, size: 8, offset: 1064)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2299, file: !618, line: 528, baseType: !2310, size: 8, offset: 1072)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2299, file: !618, line: 529, baseType: !2310, size: 8, offset: 1080)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2299, file: !618, line: 530, baseType: !2310, size: 8, offset: 1088)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2299, file: !618, line: 531, baseType: !2310, size: 8, offset: 1096)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2299, file: !618, line: 532, baseType: !2310, size: 8, offset: 1104)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2299, file: !618, line: 533, baseType: !2310, size: 8, offset: 1112)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2299, file: !618, line: 534, baseType: !2310, size: 8, offset: 1120)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2299, file: !618, line: 535, baseType: !2310, size: 8, offset: 1128)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2299, file: !618, line: 536, baseType: !2310, size: 8, offset: 1136)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2299, file: !618, line: 537, baseType: !2310, size: 8, offset: 1144)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2299, file: !618, line: 538, baseType: !2310, size: 8, offset: 1152)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2299, file: !618, line: 539, baseType: !2310, size: 8, offset: 1160)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2299, file: !618, line: 540, baseType: !2310, size: 8, offset: 1168)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2299, file: !618, line: 541, baseType: !2310, size: 8, offset: 1176)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2299, file: !618, line: 542, baseType: !2310, size: 8, offset: 1184)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2299, file: !618, line: 543, baseType: !2310, size: 8, offset: 1192)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2299, file: !618, line: 544, baseType: !2310, size: 8, offset: 1200)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2299, file: !618, line: 545, baseType: !2310, size: 8, offset: 1208)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2299, file: !618, line: 546, baseType: !2310, size: 8, offset: 1216)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2299, file: !618, line: 547, baseType: !2310, size: 8, offset: 1224)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2299, file: !618, line: 548, baseType: !2310, size: 8, offset: 1232)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2299, file: !618, line: 549, baseType: !2310, size: 8, offset: 1240)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2299, file: !618, line: 550, baseType: !2310, size: 8, offset: 1248)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2299, file: !618, line: 551, baseType: !2310, size: 8, offset: 1256)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2299, file: !618, line: 552, baseType: !2310, size: 8, offset: 1264)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2299, file: !618, line: 553, baseType: !2310, size: 8, offset: 1272)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2299, file: !618, line: 554, baseType: !2310, size: 8, offset: 1280)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2299, file: !618, line: 555, baseType: !2310, size: 8, offset: 1288)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2299, file: !618, line: 556, baseType: !2310, size: 8, offset: 1296)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2299, file: !618, line: 557, baseType: !2310, size: 8, offset: 1304)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2299, file: !618, line: 558, baseType: !2310, size: 8, offset: 1312)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2299, file: !618, line: 559, baseType: !2310, size: 8, offset: 1320)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2299, file: !618, line: 560, baseType: !2310, size: 8, offset: 1328)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2299, file: !618, line: 561, baseType: !2310, size: 8, offset: 1336)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2299, file: !618, line: 562, baseType: !2310, size: 8, offset: 1344)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2299, file: !618, line: 563, baseType: !2310, size: 8, offset: 1352)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2299, file: !618, line: 564, baseType: !2310, size: 8, offset: 1360)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2299, file: !618, line: 565, baseType: !2310, size: 8, offset: 1368)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2299, file: !618, line: 566, baseType: !2310, size: 8, offset: 1376)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2299, file: !618, line: 567, baseType: !2310, size: 8, offset: 1384)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2299, file: !618, line: 568, baseType: !2310, size: 8, offset: 1392)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2299, file: !618, line: 569, baseType: !2310, size: 8, offset: 1400)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2299, file: !618, line: 570, baseType: !2310, size: 8, offset: 1408)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2299, file: !618, line: 571, baseType: !2310, size: 8, offset: 1416)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2299, file: !618, line: 572, baseType: !2310, size: 8, offset: 1424)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2299, file: !618, line: 573, baseType: !2310, size: 8, offset: 1432)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2299, file: !618, line: 574, baseType: !2310, size: 8, offset: 1440)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1618, file: !149, line: 3405, baseType: !2466, size: 384)
!2466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !149, line: 3352, size: 384, elements: !2467)
!2467 = !{!2468, !2469}
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2466, file: !149, line: 3353, baseType: !1654, size: 192)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2466, file: !149, line: 3356, baseType: !2470, size: 192, offset: 192)
!2470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !618, line: 578, size: 192, elements: !2471)
!2471 = !{!2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2480, !2481, !2482}
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2470, file: !618, line: 580, baseType: !1518, size: 32)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2470, file: !618, line: 581, baseType: !1518, size: 32, offset: 32)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2470, file: !618, line: 582, baseType: !1518, size: 32, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2470, file: !618, line: 583, baseType: !1518, size: 32, offset: 96)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2470, file: !618, line: 584, baseType: !1729, size: 8, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2470, file: !618, line: 585, baseType: !1729, size: 8, offset: 136)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2470, file: !618, line: 586, baseType: !1729, size: 8, offset: 144)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2470, file: !618, line: 587, baseType: !1729, size: 8, offset: 152)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2470, file: !618, line: 588, baseType: !1729, size: 8, offset: 160)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2470, file: !618, line: 589, baseType: !1729, size: 8, offset: 168)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2470, file: !618, line: 590, baseType: !1729, size: 8, offset: 176)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1515, file: !398, line: 178, baseType: !1875, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1515, file: !398, line: 179, baseType: !2485, size: 64)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !398, line: 150, baseType: !2487)
!2487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !398, line: 142, size: 320, elements: !2488)
!2488 = !{!2489, !2490, !2491, !2492, !2493, !2494}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !2487, file: !398, line: 144, baseType: !1616, size: 64)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2487, file: !398, line: 145, baseType: !1495, size: 64, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2487, file: !398, line: 146, baseType: !1495, size: 64, offset: 128)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !2487, file: !398, line: 147, baseType: !2134, size: 32, offset: 192)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2487, file: !398, line: 148, baseType: !5, size: 32, offset: 224)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !2487, file: !398, line: 149, baseType: !1729, size: 8, offset: 256)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1515, file: !398, line: 180, baseType: !2496, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !398, line: 162, baseType: !2498)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !398, line: 159, size: 128, elements: !2499)
!2499 = !{!2500, !2501}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2498, file: !398, line: 160, baseType: !1616, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2498, file: !398, line: 161, baseType: !1585, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1515, file: !398, line: 181, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2504 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !398, line: 181, flags: DIFlagFwdDecl)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1510, file: !398, line: 317, baseType: !2506, size: 64)
!2506 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, size: 64, elements: !1533)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1510, file: !398, line: 318, baseType: !2508, size: 320)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !398, line: 188, size: 320, elements: !2509)
!2509 = !{!2510, !2512, !2567}
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !2508, file: !398, line: 190, baseType: !2511, size: 192)
!2511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1514, size: 192, elements: !1687)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2508, file: !398, line: 193, baseType: !2513, size: 64, offset: 192)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2514, size: 64)
!2514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !398, line: 206, size: 320, elements: !2515)
!2515 = !{!2516, !2552, !2553, !2554, !2566}
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !2514, file: !398, line: 208, baseType: !2517, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !556, line: 62, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !2520, line: 538, size: 256, elements: !2521)
!2520 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2521 = !{!2522, !2526, !2532, !2543}
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2519, file: !2520, line: 539, baseType: !2523, size: 32)
!2523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !2520, line: 482, size: 32, elements: !2524)
!2524 = !{!2525}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2523, file: !2520, line: 484, baseType: !5, size: 32)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !2519, file: !2520, line: 540, baseType: !2527, size: 192)
!2527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !2520, line: 488, size: 192, elements: !2528)
!2528 = !{!2529, !2530, !2531}
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2527, file: !2520, line: 489, baseType: !2523, size: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2527, file: !2520, line: 492, baseType: !1521, size: 64, offset: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !2527, file: !2520, line: 496, baseType: !1616, size: 64, offset: 128)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !2519, file: !2520, line: 541, baseType: !2533, size: 256)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !2520, line: 504, size: 256, elements: !2534)
!2534 = !{!2535, !2536, !2541, !2542}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2533, file: !2520, line: 505, baseType: !2523, size: 32)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2533, file: !2520, line: 509, baseType: !2537, size: 64, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !2520, line: 501, baseType: !2538)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{null, !1992}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2533, file: !2520, line: 510, baseType: !1992, size: 64, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2533, file: !2520, line: 513, baseType: !2517, size: 64, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !2519, file: !2520, line: 542, baseType: !2544, size: 128)
!2544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !2520, line: 530, size: 128, elements: !2545)
!2545 = !{!2546, !2547}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2544, file: !2520, line: 531, baseType: !2523, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !2544, file: !2520, line: 534, baseType: !2548, size: 64, offset: 64)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !2520, line: 525, baseType: !2549)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = !DISubroutineType(types: !2551)
!2551 = !{!1729, !1616, !1521, !1568, !1568}
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2514, file: !398, line: 211, baseType: !5, size: 32, offset: 64)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2514, file: !398, line: 214, baseType: !1585, size: 64, offset: 128)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2514, file: !398, line: 224, baseType: !2555, size: 64, offset: 192)
!2555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !398, line: 202, baseType: !2557)
!2557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !398, line: 202, size: 128, elements: !2558)
!2558 = !{!2559}
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2557, file: !398, line: 202, baseType: !2560, size: 128)
!2560 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !398, line: 200, baseType: !2561)
!2561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !398, line: 200, size: 128, elements: !2562)
!2562 = !{!2563, !2564, !2565}
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2561, file: !398, line: 200, baseType: !5, size: 32)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2561, file: !398, line: 200, baseType: !5, size: 32, offset: 32)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2561, file: !398, line: 200, baseType: !1532, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !2514, file: !398, line: 234, baseType: !2555, size: 64, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2508, file: !398, line: 197, baseType: !1585, size: 64, offset: 256)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1510, file: !398, line: 319, baseType: !1676, size: 256)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1510, file: !398, line: 320, baseType: !1695, size: 192)
!2570 = !{}
!2571 = !{!2572, !2573, !2574}
!2572 = !DIEnumerator(name: "max_bitsize", value: 512, isUnsigned: true)
!2573 = !DIEnumerator(name: "value_bit", value: 8, isUnsigned: true)
!2574 = !DIEnumerator(name: "value_mask", value: 255, isUnsigned: true)
!2575 = !{!375, !2576, !397, !1568, !1518, !2577, !3, !181, !1606, !1495, !1585, !5, !2579}
!2576 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1676)
!2579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2580, size: 64)
!2580 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1695)
!2581 = !{i32 7, !"Dwarf Version", i32 4}
!2582 = !{i32 2, !"Debug Info Version", i32 3}
!2583 = !{i32 1, !"wchar_size", i32 4}
!2584 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2585 = distinct !DISubprogram(name: "mode_signbit_p", scope: !1, file: !1, line: 78, type: !2586, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!2586 = !DISubroutineType(types: !2587)
!2587 = !{!1729, !3, !2588}
!2588 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !556, line: 51, baseType: !2589)
!2589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1497)
!2591 = !DILocalVariable(name: "mode", arg: 1, scope: !2585, file: !1, line: 78, type: !3)
!2592 = !DILocation(line: 78, column: 35, scope: !2585)
!2593 = !DILocalVariable(name: "x", arg: 2, scope: !2585, file: !1, line: 78, type: !2588)
!2594 = !DILocation(line: 78, column: 51, scope: !2585)
!2595 = !DILocalVariable(name: "val", scope: !2585, file: !1, line: 80, type: !1568)
!2596 = !DILocation(line: 80, column: 26, scope: !2585)
!2597 = !DILocalVariable(name: "width", scope: !2585, file: !1, line: 81, type: !5)
!2598 = !DILocation(line: 81, column: 16, scope: !2585)
!2599 = !DILocation(line: 83, column: 7, scope: !2600)
!2600 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 83, column: 7)
!2601 = !DILocation(line: 83, column: 29, scope: !2600)
!2602 = !DILocation(line: 83, column: 7, scope: !2585)
!2603 = !DILocation(line: 84, column: 5, scope: !2600)
!2604 = !DILocation(line: 86, column: 11, scope: !2585)
!2605 = !DILocation(line: 86, column: 9, scope: !2585)
!2606 = !DILocation(line: 87, column: 7, scope: !2607)
!2607 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 87, column: 7)
!2608 = !DILocation(line: 87, column: 13, scope: !2607)
!2609 = !DILocation(line: 87, column: 7, scope: !2585)
!2610 = !DILocation(line: 88, column: 5, scope: !2607)
!2611 = !DILocation(line: 90, column: 7, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 90, column: 7)
!2613 = !DILocation(line: 90, column: 13, scope: !2612)
!2614 = !DILocation(line: 91, column: 7, scope: !2612)
!2615 = !DILocation(line: 91, column: 10, scope: !2612)
!2616 = !DILocation(line: 90, column: 7, scope: !2585)
!2617 = !DILocation(line: 92, column: 11, scope: !2612)
!2618 = !DILocation(line: 92, column: 9, scope: !2612)
!2619 = !DILocation(line: 92, column: 5, scope: !2612)
!2620 = !DILocation(line: 93, column: 12, scope: !2621)
!2621 = distinct !DILexicalBlock(scope: !2612, file: !1, line: 93, column: 12)
!2622 = !DILocation(line: 93, column: 18, scope: !2621)
!2623 = !DILocation(line: 94, column: 5, scope: !2621)
!2624 = !DILocation(line: 94, column: 8, scope: !2621)
!2625 = !DILocation(line: 94, column: 21, scope: !2621)
!2626 = !DILocation(line: 95, column: 5, scope: !2621)
!2627 = !DILocation(line: 95, column: 8, scope: !2621)
!2628 = !DILocation(line: 95, column: 29, scope: !2621)
!2629 = !DILocation(line: 93, column: 12, scope: !2612)
!2630 = !DILocation(line: 97, column: 13, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2621, file: !1, line: 96, column: 5)
!2632 = !DILocation(line: 97, column: 11, scope: !2631)
!2633 = !DILocation(line: 98, column: 13, scope: !2631)
!2634 = !DILocation(line: 99, column: 5, scope: !2631)
!2635 = !DILocation(line: 101, column: 5, scope: !2621)
!2636 = !DILocation(line: 103, column: 7, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 103, column: 7)
!2638 = !DILocation(line: 103, column: 13, scope: !2637)
!2639 = !DILocation(line: 103, column: 7, scope: !2585)
!2640 = !DILocation(line: 104, column: 43, scope: !2637)
!2641 = !DILocation(line: 104, column: 40, scope: !2637)
!2642 = !DILocation(line: 104, column: 50, scope: !2637)
!2643 = !DILocation(line: 104, column: 9, scope: !2637)
!2644 = !DILocation(line: 104, column: 5, scope: !2637)
!2645 = !DILocation(line: 105, column: 10, scope: !2585)
!2646 = !DILocation(line: 105, column: 49, scope: !2585)
!2647 = !DILocation(line: 105, column: 55, scope: !2585)
!2648 = !DILocation(line: 105, column: 45, scope: !2585)
!2649 = !DILocation(line: 105, column: 14, scope: !2585)
!2650 = !DILocation(line: 105, column: 3, scope: !2585)
!2651 = !DILocation(line: 106, column: 1, scope: !2585)
!2652 = distinct !DISubprogram(name: "simplify_gen_binary", scope: !1, file: !1, line: 112, type: !2653, scopeLine: 114, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!2653 = !DISubroutineType(types: !2654)
!2654 = !{!1495, !397, !3, !1495, !1495}
!2655 = !DILocalVariable(name: "code", arg: 1, scope: !2652, file: !1, line: 112, type: !397)
!2656 = !DILocation(line: 112, column: 36, scope: !2652)
!2657 = !DILocalVariable(name: "mode", arg: 2, scope: !2652, file: !1, line: 112, type: !3)
!2658 = !DILocation(line: 112, column: 60, scope: !2652)
!2659 = !DILocalVariable(name: "op0", arg: 3, scope: !2652, file: !1, line: 112, type: !1495)
!2660 = !DILocation(line: 112, column: 70, scope: !2652)
!2661 = !DILocalVariable(name: "op1", arg: 4, scope: !2652, file: !1, line: 113, type: !1495)
!2662 = !DILocation(line: 113, column: 12, scope: !2652)
!2663 = !DILocalVariable(name: "tem", scope: !2652, file: !1, line: 115, type: !1495)
!2664 = !DILocation(line: 115, column: 7, scope: !2652)
!2665 = !DILocation(line: 118, column: 36, scope: !2652)
!2666 = !DILocation(line: 118, column: 42, scope: !2652)
!2667 = !DILocation(line: 118, column: 48, scope: !2652)
!2668 = !DILocation(line: 118, column: 53, scope: !2652)
!2669 = !DILocation(line: 118, column: 9, scope: !2652)
!2670 = !DILocation(line: 118, column: 7, scope: !2652)
!2671 = !DILocation(line: 119, column: 7, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 119, column: 7)
!2673 = !DILocation(line: 119, column: 7, scope: !2652)
!2674 = !DILocation(line: 120, column: 12, scope: !2672)
!2675 = !DILocation(line: 120, column: 5, scope: !2672)
!2676 = !DILocation(line: 123, column: 7, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 123, column: 7)
!2678 = !DILocation(line: 123, column: 28, scope: !2677)
!2679 = !DILocation(line: 124, column: 7, scope: !2677)
!2680 = !DILocation(line: 124, column: 39, scope: !2677)
!2681 = !DILocation(line: 124, column: 44, scope: !2677)
!2682 = !DILocation(line: 124, column: 10, scope: !2677)
!2683 = !DILocation(line: 123, column: 7, scope: !2652)
!2684 = !DILocation(line: 125, column: 11, scope: !2677)
!2685 = !DILocation(line: 125, column: 9, scope: !2677)
!2686 = !DILocation(line: 125, column: 22, scope: !2677)
!2687 = !DILocation(line: 125, column: 20, scope: !2677)
!2688 = !DILocation(line: 125, column: 33, scope: !2677)
!2689 = !DILocation(line: 125, column: 31, scope: !2677)
!2690 = !DILocation(line: 125, column: 5, scope: !2677)
!2691 = !DILocation(line: 127, column: 10, scope: !2652)
!2692 = !DILocation(line: 127, column: 3, scope: !2652)
!2693 = !DILocation(line: 128, column: 1, scope: !2652)
!2694 = distinct !DISubprogram(name: "simplify_binary_operation", scope: !1, file: !1, line: 1680, type: !2653, scopeLine: 1682, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!2695 = !DILocalVariable(name: "code", arg: 1, scope: !2694, file: !1, line: 1680, type: !397)
!2696 = !DILocation(line: 1680, column: 42, scope: !2694)
!2697 = !DILocalVariable(name: "mode", arg: 2, scope: !2694, file: !1, line: 1680, type: !3)
!2698 = !DILocation(line: 1680, column: 66, scope: !2694)
!2699 = !DILocalVariable(name: "op0", arg: 3, scope: !2694, file: !1, line: 1681, type: !1495)
!2700 = !DILocation(line: 1681, column: 11, scope: !2694)
!2701 = !DILocalVariable(name: "op1", arg: 4, scope: !2694, file: !1, line: 1681, type: !1495)
!2702 = !DILocation(line: 1681, column: 20, scope: !2694)
!2703 = !DILocalVariable(name: "trueop0", scope: !2694, file: !1, line: 1683, type: !1495)
!2704 = !DILocation(line: 1683, column: 7, scope: !2694)
!2705 = !DILocalVariable(name: "trueop1", scope: !2694, file: !1, line: 1683, type: !1495)
!2706 = !DILocation(line: 1683, column: 16, scope: !2694)
!2707 = !DILocalVariable(name: "tem", scope: !2694, file: !1, line: 1684, type: !1495)
!2708 = !DILocation(line: 1684, column: 7, scope: !2694)
!2709 = !DILocation(line: 1690, column: 3, scope: !2694)
!2710 = !DILocation(line: 1691, column: 3, scope: !2694)
!2711 = !DILocation(line: 1694, column: 7, scope: !2712)
!2712 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 1694, column: 7)
!2713 = !DILocation(line: 1694, column: 28, scope: !2712)
!2714 = !DILocation(line: 1695, column: 7, scope: !2712)
!2715 = !DILocation(line: 1695, column: 39, scope: !2712)
!2716 = !DILocation(line: 1695, column: 44, scope: !2712)
!2717 = !DILocation(line: 1695, column: 10, scope: !2712)
!2718 = !DILocation(line: 1694, column: 7, scope: !2694)
!2719 = !DILocation(line: 1697, column: 13, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2712, file: !1, line: 1696, column: 5)
!2721 = !DILocation(line: 1697, column: 11, scope: !2720)
!2722 = !DILocation(line: 1697, column: 24, scope: !2720)
!2723 = !DILocation(line: 1697, column: 22, scope: !2720)
!2724 = !DILocation(line: 1697, column: 35, scope: !2720)
!2725 = !DILocation(line: 1697, column: 33, scope: !2720)
!2726 = !DILocation(line: 1698, column: 5, scope: !2720)
!2727 = !DILocation(line: 1700, column: 44, scope: !2694)
!2728 = !DILocation(line: 1700, column: 13, scope: !2694)
!2729 = !DILocation(line: 1700, column: 11, scope: !2694)
!2730 = !DILocation(line: 1701, column: 44, scope: !2694)
!2731 = !DILocation(line: 1701, column: 13, scope: !2694)
!2732 = !DILocation(line: 1701, column: 11, scope: !2694)
!2733 = !DILocation(line: 1703, column: 42, scope: !2694)
!2734 = !DILocation(line: 1703, column: 48, scope: !2694)
!2735 = !DILocation(line: 1703, column: 54, scope: !2694)
!2736 = !DILocation(line: 1703, column: 63, scope: !2694)
!2737 = !DILocation(line: 1703, column: 9, scope: !2694)
!2738 = !DILocation(line: 1703, column: 7, scope: !2694)
!2739 = !DILocation(line: 1704, column: 7, scope: !2740)
!2740 = distinct !DILexicalBlock(scope: !2694, file: !1, line: 1704, column: 7)
!2741 = !DILocation(line: 1704, column: 7, scope: !2694)
!2742 = !DILocation(line: 1705, column: 12, scope: !2740)
!2743 = !DILocation(line: 1705, column: 5, scope: !2740)
!2744 = !DILocation(line: 1706, column: 39, scope: !2694)
!2745 = !DILocation(line: 1706, column: 45, scope: !2694)
!2746 = !DILocation(line: 1706, column: 51, scope: !2694)
!2747 = !DILocation(line: 1706, column: 56, scope: !2694)
!2748 = !DILocation(line: 1706, column: 61, scope: !2694)
!2749 = !DILocation(line: 1706, column: 70, scope: !2694)
!2750 = !DILocation(line: 1706, column: 10, scope: !2694)
!2751 = !DILocation(line: 1706, column: 3, scope: !2694)
!2752 = !DILocation(line: 1707, column: 1, scope: !2694)
!2753 = distinct !DISubprogram(name: "avoid_constant_pool_reference", scope: !1, file: !1, line: 133, type: !2754, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!1495, !1495}
!2756 = !DILocalVariable(name: "x", arg: 1, scope: !2753, file: !1, line: 133, type: !1495)
!2757 = !DILocation(line: 133, column: 36, scope: !2753)
!2758 = !DILocalVariable(name: "c", scope: !2753, file: !1, line: 135, type: !1495)
!2759 = !DILocation(line: 135, column: 7, scope: !2753)
!2760 = !DILocalVariable(name: "tmp", scope: !2753, file: !1, line: 135, type: !1495)
!2761 = !DILocation(line: 135, column: 10, scope: !2753)
!2762 = !DILocalVariable(name: "addr", scope: !2753, file: !1, line: 135, type: !1495)
!2763 = !DILocation(line: 135, column: 15, scope: !2753)
!2764 = !DILocalVariable(name: "cmode", scope: !2753, file: !1, line: 136, type: !3)
!2765 = !DILocation(line: 136, column: 21, scope: !2753)
!2766 = !DILocalVariable(name: "offset", scope: !2753, file: !1, line: 137, type: !1585)
!2767 = !DILocation(line: 137, column: 17, scope: !2753)
!2768 = !DILocation(line: 139, column: 11, scope: !2753)
!2769 = !DILocation(line: 139, column: 3, scope: !2753)
!2770 = !DILocation(line: 142, column: 7, scope: !2771)
!2771 = distinct !DILexicalBlock(scope: !2753, file: !1, line: 140, column: 5)
!2772 = !DILocation(line: 146, column: 13, scope: !2771)
!2773 = !DILocation(line: 146, column: 11, scope: !2771)
!2774 = !DILocation(line: 147, column: 42, scope: !2771)
!2775 = !DILocation(line: 147, column: 11, scope: !2771)
!2776 = !DILocation(line: 147, column: 9, scope: !2771)
!2777 = !DILocation(line: 148, column: 11, scope: !2778)
!2778 = distinct !DILexicalBlock(scope: !2771, file: !1, line: 148, column: 11)
!2779 = !DILocation(line: 148, column: 16, scope: !2778)
!2780 = !DILocation(line: 148, column: 13, scope: !2778)
!2781 = !DILocation(line: 148, column: 20, scope: !2778)
!2782 = !DILocation(line: 148, column: 23, scope: !2778)
!2783 = !DILocation(line: 148, column: 36, scope: !2778)
!2784 = !DILocation(line: 148, column: 11, scope: !2771)
!2785 = !DILocalVariable(name: "d", scope: !2786, file: !1, line: 150, type: !1676)
!2786 = distinct !DILexicalBlock(scope: !2778, file: !1, line: 149, column: 2)
!2787 = !DILocation(line: 150, column: 20, scope: !2786)
!2788 = !DILocation(line: 152, column: 4, scope: !2786)
!2789 = !DILocation(line: 153, column: 11, scope: !2786)
!2790 = !DILocation(line: 153, column: 4, scope: !2786)
!2791 = !DILocation(line: 155, column: 14, scope: !2771)
!2792 = !DILocation(line: 155, column: 7, scope: !2771)
!2793 = !DILocation(line: 158, column: 14, scope: !2771)
!2794 = !DILocation(line: 158, column: 7, scope: !2771)
!2795 = !DILocation(line: 161, column: 7, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2753, file: !1, line: 161, column: 7)
!2797 = !DILocation(line: 161, column: 20, scope: !2796)
!2798 = !DILocation(line: 161, column: 7, scope: !2753)
!2799 = !DILocation(line: 162, column: 12, scope: !2796)
!2800 = !DILocation(line: 162, column: 5, scope: !2796)
!2801 = !DILocation(line: 164, column: 10, scope: !2753)
!2802 = !DILocation(line: 164, column: 8, scope: !2753)
!2803 = !DILocation(line: 167, column: 18, scope: !2753)
!2804 = !DILocation(line: 167, column: 40, scope: !2753)
!2805 = !DILocation(line: 167, column: 10, scope: !2753)
!2806 = !DILocation(line: 167, column: 8, scope: !2753)
!2807 = !DILocation(line: 170, column: 7, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2753, file: !1, line: 170, column: 7)
!2809 = !DILocation(line: 170, column: 23, scope: !2808)
!2810 = !DILocation(line: 171, column: 7, scope: !2808)
!2811 = !DILocation(line: 171, column: 10, scope: !2808)
!2812 = !DILocation(line: 171, column: 36, scope: !2808)
!2813 = !DILocation(line: 172, column: 7, scope: !2808)
!2814 = !DILocation(line: 172, column: 10, scope: !2808)
!2815 = !DILocation(line: 170, column: 7, scope: !2753)
!2816 = !DILocation(line: 174, column: 16, scope: !2817)
!2817 = distinct !DILexicalBlock(scope: !2808, file: !1, line: 173, column: 5)
!2818 = !DILocation(line: 174, column: 14, scope: !2817)
!2819 = !DILocation(line: 175, column: 14, scope: !2817)
!2820 = !DILocation(line: 175, column: 12, scope: !2817)
!2821 = !DILocation(line: 176, column: 5, scope: !2817)
!2822 = !DILocation(line: 178, column: 7, scope: !2823)
!2823 = distinct !DILexicalBlock(scope: !2753, file: !1, line: 178, column: 7)
!2824 = !DILocation(line: 178, column: 23, scope: !2823)
!2825 = !DILocation(line: 178, column: 7, scope: !2753)
!2826 = !DILocation(line: 179, column: 12, scope: !2823)
!2827 = !DILocation(line: 179, column: 10, scope: !2823)
!2828 = !DILocation(line: 179, column: 5, scope: !2823)
!2829 = !DILocation(line: 183, column: 7, scope: !2830)
!2830 = distinct !DILexicalBlock(scope: !2753, file: !1, line: 183, column: 7)
!2831 = !DILocation(line: 183, column: 23, scope: !2830)
!2832 = !DILocation(line: 184, column: 7, scope: !2830)
!2833 = !DILocation(line: 184, column: 10, scope: !2830)
!2834 = !DILocation(line: 183, column: 7, scope: !2753)
!2835 = !DILocation(line: 186, column: 30, scope: !2836)
!2836 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 185, column: 5)
!2837 = !DILocation(line: 186, column: 11, scope: !2836)
!2838 = !DILocation(line: 186, column: 9, scope: !2836)
!2839 = !DILocation(line: 187, column: 30, scope: !2836)
!2840 = !DILocation(line: 187, column: 15, scope: !2836)
!2841 = !DILocation(line: 187, column: 13, scope: !2836)
!2842 = !DILocation(line: 192, column: 11, scope: !2843)
!2843 = distinct !DILexicalBlock(scope: !2836, file: !1, line: 192, column: 11)
!2844 = !DILocation(line: 192, column: 18, scope: !2843)
!2845 = !DILocation(line: 192, column: 23, scope: !2843)
!2846 = !DILocation(line: 192, column: 26, scope: !2843)
!2847 = !DILocation(line: 192, column: 35, scope: !2843)
!2848 = !DILocation(line: 192, column: 32, scope: !2843)
!2849 = !DILocation(line: 192, column: 11, scope: !2836)
!2850 = !DILocalVariable(name: "tem", scope: !2851, file: !1, line: 194, type: !1495)
!2851 = distinct !DILexicalBlock(scope: !2843, file: !1, line: 193, column: 9)
!2852 = !DILocation(line: 194, column: 15, scope: !2851)
!2853 = !DILocation(line: 194, column: 38, scope: !2851)
!2854 = !DILocation(line: 194, column: 52, scope: !2851)
!2855 = !DILocation(line: 194, column: 55, scope: !2851)
!2856 = !DILocation(line: 194, column: 62, scope: !2851)
!2857 = !DILocation(line: 194, column: 21, scope: !2851)
!2858 = !DILocation(line: 195, column: 15, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 195, column: 15)
!2860 = !DILocation(line: 195, column: 19, scope: !2859)
!2861 = !DILocation(line: 195, column: 22, scope: !2859)
!2862 = !DILocation(line: 195, column: 15, scope: !2851)
!2863 = !DILocation(line: 196, column: 20, scope: !2859)
!2864 = !DILocation(line: 196, column: 13, scope: !2859)
!2865 = !DILocation(line: 197, column: 9, scope: !2851)
!2866 = !DILocation(line: 199, column: 16, scope: !2843)
!2867 = !DILocation(line: 199, column: 9, scope: !2843)
!2868 = !DILocation(line: 200, column: 5, scope: !2836)
!2869 = !DILocation(line: 202, column: 10, scope: !2753)
!2870 = !DILocation(line: 202, column: 3, scope: !2753)
!2871 = !DILocation(line: 203, column: 1, scope: !2753)
!2872 = distinct !DISubprogram(name: "simplify_subreg", scope: !1, file: !1, line: 5133, type: !1493, scopeLine: 5135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!2873 = !DILocalVariable(name: "outermode", arg: 1, scope: !2872, file: !1, line: 5133, type: !3)
!2874 = !DILocation(line: 5133, column: 36, scope: !2872)
!2875 = !DILocalVariable(name: "op", arg: 2, scope: !2872, file: !1, line: 5133, type: !1495)
!2876 = !DILocation(line: 5133, column: 51, scope: !2872)
!2877 = !DILocalVariable(name: "innermode", arg: 3, scope: !2872, file: !1, line: 5134, type: !3)
!2878 = !DILocation(line: 5134, column: 22, scope: !2872)
!2879 = !DILocalVariable(name: "byte", arg: 4, scope: !2872, file: !1, line: 5134, type: !5)
!2880 = !DILocation(line: 5134, column: 46, scope: !2872)
!2881 = !DILocation(line: 5137, column: 3, scope: !2872)
!2882 = !DILocation(line: 5138, column: 3, scope: !2872)
!2883 = !DILocation(line: 5139, column: 3, scope: !2872)
!2884 = !DILocation(line: 5140, column: 3, scope: !2872)
!2885 = !DILocation(line: 5142, column: 3, scope: !2872)
!2886 = !DILocation(line: 5145, column: 3, scope: !2872)
!2887 = !DILocation(line: 5146, column: 3, scope: !2872)
!2888 = !DILocation(line: 5148, column: 7, scope: !2889)
!2889 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5148, column: 7)
!2890 = !DILocation(line: 5148, column: 20, scope: !2889)
!2891 = !DILocation(line: 5148, column: 17, scope: !2889)
!2892 = !DILocation(line: 5148, column: 30, scope: !2889)
!2893 = !DILocation(line: 5148, column: 34, scope: !2889)
!2894 = !DILocation(line: 5148, column: 7, scope: !2872)
!2895 = !DILocation(line: 5149, column: 12, scope: !2889)
!2896 = !DILocation(line: 5149, column: 5, scope: !2889)
!2897 = !DILocation(line: 5151, column: 7, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5151, column: 7)
!2899 = !DILocation(line: 5152, column: 7, scope: !2898)
!2900 = !DILocation(line: 5152, column: 10, scope: !2898)
!2901 = !DILocation(line: 5152, column: 24, scope: !2898)
!2902 = !DILocation(line: 5153, column: 7, scope: !2898)
!2903 = !DILocation(line: 5153, column: 10, scope: !2898)
!2904 = !DILocation(line: 5153, column: 24, scope: !2898)
!2905 = !DILocation(line: 5154, column: 7, scope: !2898)
!2906 = !DILocation(line: 5154, column: 10, scope: !2898)
!2907 = !DILocation(line: 5154, column: 24, scope: !2898)
!2908 = !DILocation(line: 5151, column: 7, scope: !2872)
!2909 = !DILocation(line: 5155, column: 35, scope: !2898)
!2910 = !DILocation(line: 5155, column: 46, scope: !2898)
!2911 = !DILocation(line: 5155, column: 50, scope: !2898)
!2912 = !DILocation(line: 5155, column: 61, scope: !2898)
!2913 = !DILocation(line: 5155, column: 12, scope: !2898)
!2914 = !DILocation(line: 5155, column: 5, scope: !2898)
!2915 = !DILocation(line: 5159, column: 7, scope: !2916)
!2916 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5159, column: 7)
!2917 = !DILocation(line: 5159, column: 21, scope: !2916)
!2918 = !DILocation(line: 5159, column: 7, scope: !2872)
!2919 = !DILocalVariable(name: "innermostmode", scope: !2920, file: !1, line: 5161, type: !3)
!2920 = distinct !DILexicalBlock(scope: !2916, file: !1, line: 5160, column: 5)
!2921 = !DILocation(line: 5161, column: 25, scope: !2920)
!2922 = !DILocation(line: 5161, column: 41, scope: !2920)
!2923 = !DILocalVariable(name: "final_offset", scope: !2920, file: !1, line: 5162, type: !1518)
!2924 = !DILocation(line: 5162, column: 11, scope: !2920)
!2925 = !DILocation(line: 5162, column: 26, scope: !2920)
!2926 = !DILocation(line: 5162, column: 33, scope: !2920)
!2927 = !DILocation(line: 5162, column: 31, scope: !2920)
!2928 = !DILocalVariable(name: "newx", scope: !2920, file: !1, line: 5163, type: !1495)
!2929 = !DILocation(line: 5163, column: 11, scope: !2920)
!2930 = !DILocation(line: 5165, column: 11, scope: !2931)
!2931 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5165, column: 11)
!2932 = !DILocation(line: 5165, column: 24, scope: !2931)
!2933 = !DILocation(line: 5165, column: 21, scope: !2931)
!2934 = !DILocation(line: 5166, column: 4, scope: !2931)
!2935 = !DILocation(line: 5166, column: 7, scope: !2931)
!2936 = !DILocation(line: 5166, column: 12, scope: !2931)
!2937 = !DILocation(line: 5166, column: 17, scope: !2931)
!2938 = !DILocation(line: 5166, column: 20, scope: !2931)
!2939 = !DILocation(line: 5166, column: 37, scope: !2931)
!2940 = !DILocation(line: 5165, column: 11, scope: !2920)
!2941 = !DILocation(line: 5167, column: 9, scope: !2931)
!2942 = !DILocation(line: 5167, column: 2, scope: !2931)
!2943 = !DILocation(line: 5173, column: 11, scope: !2944)
!2944 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5173, column: 11)
!2945 = !DILocation(line: 5173, column: 16, scope: !2944)
!2946 = !DILocation(line: 5173, column: 21, scope: !2944)
!2947 = !DILocation(line: 5173, column: 24, scope: !2944)
!2948 = !DILocation(line: 5173, column: 52, scope: !2944)
!2949 = !DILocation(line: 5173, column: 50, scope: !2944)
!2950 = !DILocation(line: 5173, column: 11, scope: !2920)
!2951 = !DILocalVariable(name: "difference", scope: !2952, file: !1, line: 5175, type: !1518)
!2952 = distinct !DILexicalBlock(scope: !2944, file: !1, line: 5174, column: 2)
!2953 = !DILocation(line: 5175, column: 8, scope: !2952)
!2954 = !DILocation(line: 5175, column: 22, scope: !2952)
!2955 = !DILocation(line: 5175, column: 50, scope: !2952)
!2956 = !DILocation(line: 5175, column: 48, scope: !2952)
!2957 = !DILocation(line: 5180, column: 2, scope: !2952)
!2958 = !DILocation(line: 5181, column: 11, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5181, column: 11)
!2960 = !DILocation(line: 5181, column: 28, scope: !2959)
!2961 = !DILocation(line: 5182, column: 4, scope: !2959)
!2962 = !DILocation(line: 5182, column: 7, scope: !2959)
!2963 = !DILocation(line: 5182, column: 39, scope: !2959)
!2964 = !DILocation(line: 5182, column: 37, scope: !2959)
!2965 = !DILocation(line: 5181, column: 11, scope: !2920)
!2966 = !DILocalVariable(name: "difference", scope: !2967, file: !1, line: 5184, type: !1518)
!2967 = distinct !DILexicalBlock(scope: !2959, file: !1, line: 5183, column: 2)
!2968 = !DILocation(line: 5184, column: 8, scope: !2967)
!2969 = !DILocation(line: 5184, column: 22, scope: !2967)
!2970 = !DILocation(line: 5184, column: 54, scope: !2967)
!2971 = !DILocation(line: 5184, column: 52, scope: !2967)
!2972 = !DILocation(line: 5189, column: 2, scope: !2967)
!2973 = !DILocation(line: 5192, column: 11, scope: !2974)
!2974 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5192, column: 11)
!2975 = !DILocation(line: 5192, column: 43, scope: !2974)
!2976 = !DILocation(line: 5192, column: 41, scope: !2974)
!2977 = !DILocation(line: 5192, column: 11, scope: !2920)
!2978 = !DILocation(line: 5195, column: 8, scope: !2979)
!2979 = distinct !DILexicalBlock(scope: !2980, file: !1, line: 5195, column: 8)
!2980 = distinct !DILexicalBlock(scope: !2974, file: !1, line: 5193, column: 2)
!2981 = !DILocation(line: 5195, column: 21, scope: !2979)
!2982 = !DILocation(line: 5195, column: 8, scope: !2980)
!2983 = !DILocation(line: 5196, column: 6, scope: !2979)
!2984 = !DILocation(line: 5198, column: 8, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2980, file: !1, line: 5198, column: 8)
!2986 = !DILocation(line: 5198, column: 23, scope: !2985)
!2987 = !DILocation(line: 5198, column: 21, scope: !2985)
!2988 = !DILocation(line: 5199, column: 8, scope: !2985)
!2989 = !DILocation(line: 5199, column: 22, scope: !2985)
!2990 = !DILocation(line: 5199, column: 38, scope: !2985)
!2991 = !DILocation(line: 5199, column: 35, scope: !2985)
!2992 = !DILocation(line: 5198, column: 8, scope: !2980)
!2993 = !DILocation(line: 5200, column: 6, scope: !2985)
!2994 = !DILocation(line: 5201, column: 2, scope: !2980)
!2995 = !DILocalVariable(name: "offset", scope: !2996, file: !1, line: 5204, type: !1518)
!2996 = distinct !DILexicalBlock(scope: !2974, file: !1, line: 5203, column: 2)
!2997 = !DILocation(line: 5204, column: 8, scope: !2996)
!2998 = !DILocalVariable(name: "difference", scope: !2996, file: !1, line: 5205, type: !1518)
!2999 = !DILocation(line: 5205, column: 8, scope: !2996)
!3000 = !DILocation(line: 5205, column: 22, scope: !2996)
!3001 = !DILocation(line: 5205, column: 54, scope: !2996)
!3002 = !DILocation(line: 5205, column: 52, scope: !2996)
!3003 = !DILocation(line: 5213, column: 8, scope: !3004)
!3004 = distinct !DILexicalBlock(scope: !2996, file: !1, line: 5213, column: 8)
!3005 = !DILocation(line: 5213, column: 18, scope: !3004)
!3006 = !DILocation(line: 5213, column: 15, scope: !3004)
!3007 = !DILocation(line: 5213, column: 8, scope: !2996)
!3008 = !DILocation(line: 5214, column: 19, scope: !3004)
!3009 = !DILocation(line: 5214, column: 6, scope: !3004)
!3010 = !DILocation(line: 5216, column: 6, scope: !3004)
!3011 = !DILocation(line: 5220, column: 31, scope: !2920)
!3012 = !DILocation(line: 5220, column: 42, scope: !2920)
!3013 = !DILocation(line: 5220, column: 59, scope: !2920)
!3014 = !DILocation(line: 5221, column: 10, scope: !2920)
!3015 = !DILocation(line: 5220, column: 14, scope: !2920)
!3016 = !DILocation(line: 5220, column: 12, scope: !2920)
!3017 = !DILocation(line: 5222, column: 11, scope: !3018)
!3018 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5222, column: 11)
!3019 = !DILocation(line: 5222, column: 11, scope: !2920)
!3020 = !DILocation(line: 5223, column: 9, scope: !3018)
!3021 = !DILocation(line: 5223, column: 2, scope: !3018)
!3022 = !DILocation(line: 5224, column: 28, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !2920, file: !1, line: 5224, column: 11)
!3024 = !DILocation(line: 5224, column: 39, scope: !3023)
!3025 = !DILocation(line: 5225, column: 7, scope: !3023)
!3026 = !DILocation(line: 5225, column: 24, scope: !3023)
!3027 = !DILocation(line: 5224, column: 11, scope: !3023)
!3028 = !DILocation(line: 5224, column: 11, scope: !2920)
!3029 = !DILocation(line: 5227, column: 27, scope: !3030)
!3030 = distinct !DILexicalBlock(scope: !3023, file: !1, line: 5226, column: 2)
!3031 = !DILocation(line: 5227, column: 38, scope: !3030)
!3032 = !DILocation(line: 5227, column: 55, scope: !3030)
!3033 = !DILocation(line: 5227, column: 11, scope: !3030)
!3034 = !DILocation(line: 5227, column: 9, scope: !3030)
!3035 = !DILocation(line: 5228, column: 8, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3030, file: !1, line: 5228, column: 8)
!3037 = !DILocation(line: 5229, column: 8, scope: !3036)
!3038 = !DILocation(line: 5229, column: 11, scope: !3036)
!3039 = !DILocation(line: 5229, column: 43, scope: !3036)
!3040 = !DILocation(line: 5230, column: 8, scope: !3036)
!3041 = !DILocation(line: 5230, column: 11, scope: !3036)
!3042 = !DILocation(line: 5230, column: 38, scope: !3036)
!3043 = !DILocation(line: 5231, column: 8, scope: !3036)
!3044 = !DILocation(line: 5231, column: 11, scope: !3036)
!3045 = !DILocation(line: 5234, column: 8, scope: !3036)
!3046 = !DILocation(line: 5234, column: 29, scope: !3036)
!3047 = !DILocation(line: 5234, column: 11, scope: !3036)
!3048 = !DILocation(line: 5228, column: 8, scope: !3030)
!3049 = !DILocation(line: 5236, column: 8, scope: !3050)
!3050 = distinct !DILexicalBlock(scope: !3036, file: !1, line: 5235, column: 6)
!3051 = !DILocation(line: 5236, column: 37, scope: !3050)
!3052 = !DILocation(line: 5237, column: 8, scope: !3050)
!3053 = !DILocalVariable(name: "_rtx", scope: !3054, file: !1, line: 5237, type: !3055)
!3054 = distinct !DILexicalBlock(scope: !3050, file: !1, line: 5237, column: 8)
!3055 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1495)
!3056 = !DILocation(line: 5237, column: 8, scope: !3054)
!3057 = !DILocation(line: 5237, column: 8, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3054, file: !1, line: 5237, column: 8)
!3059 = !DILocation(line: 5237, column: 8, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !3058, file: !1, line: 5237, column: 8)
!3061 = !DILocation(line: 5239, column: 6, scope: !3050)
!3062 = !DILocation(line: 5240, column: 11, scope: !3030)
!3063 = !DILocation(line: 5240, column: 4, scope: !3030)
!3064 = !DILocation(line: 5242, column: 7, scope: !2920)
!3065 = !DILocation(line: 5247, column: 7, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5247, column: 7)
!3067 = !DILocation(line: 5247, column: 21, scope: !3066)
!3068 = !DILocation(line: 5248, column: 7, scope: !3066)
!3069 = !DILocation(line: 5248, column: 10, scope: !3066)
!3070 = !DILocation(line: 5248, column: 38, scope: !3066)
!3071 = !DILocation(line: 5248, column: 36, scope: !3066)
!3072 = !DILocation(line: 5249, column: 7, scope: !3066)
!3073 = !DILocation(line: 5249, column: 33, scope: !3066)
!3074 = !DILocation(line: 5249, column: 44, scope: !3066)
!3075 = !DILocation(line: 5249, column: 10, scope: !3066)
!3076 = !DILocation(line: 5249, column: 58, scope: !3066)
!3077 = !DILocation(line: 5249, column: 55, scope: !3066)
!3078 = !DILocation(line: 5247, column: 7, scope: !2872)
!3079 = !DILocation(line: 5250, column: 42, scope: !3066)
!3080 = !DILocation(line: 5250, column: 53, scope: !3066)
!3081 = !DILocation(line: 5251, column: 11, scope: !3066)
!3082 = !DILocation(line: 5250, column: 12, scope: !3066)
!3083 = !DILocation(line: 5250, column: 5, scope: !3066)
!3084 = !DILocation(line: 5258, column: 7, scope: !3085)
!3085 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5258, column: 7)
!3086 = !DILocation(line: 5258, column: 18, scope: !3085)
!3087 = !DILocation(line: 5258, column: 21, scope: !3085)
!3088 = !DILocation(line: 5258, column: 7, scope: !2872)
!3089 = !DILocalVariable(name: "regno", scope: !3090, file: !1, line: 5260, type: !5)
!3090 = distinct !DILexicalBlock(scope: !3085, file: !1, line: 5259, column: 5)
!3091 = !DILocation(line: 5260, column: 20, scope: !3090)
!3092 = !DILocalVariable(name: "final_regno", scope: !3090, file: !1, line: 5260, type: !5)
!3093 = !DILocation(line: 5260, column: 27, scope: !3090)
!3094 = !DILocation(line: 5262, column: 15, scope: !3090)
!3095 = !DILocation(line: 5262, column: 13, scope: !3090)
!3096 = !DILocation(line: 5263, column: 44, scope: !3090)
!3097 = !DILocation(line: 5263, column: 51, scope: !3090)
!3098 = !DILocation(line: 5263, column: 62, scope: !3090)
!3099 = !DILocation(line: 5263, column: 68, scope: !3090)
!3100 = !DILocation(line: 5263, column: 21, scope: !3090)
!3101 = !DILocation(line: 5263, column: 19, scope: !3090)
!3102 = !DILocation(line: 5264, column: 11, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3090, file: !1, line: 5264, column: 11)
!3104 = !DILocation(line: 5264, column: 11, scope: !3090)
!3105 = !DILocalVariable(name: "x", scope: !3106, file: !1, line: 5266, type: !1495)
!3106 = distinct !DILexicalBlock(scope: !3103, file: !1, line: 5265, column: 2)
!3107 = !DILocation(line: 5266, column: 8, scope: !3106)
!3108 = !DILocalVariable(name: "final_offset", scope: !3106, file: !1, line: 5267, type: !1518)
!3109 = !DILocation(line: 5267, column: 8, scope: !3106)
!3110 = !DILocation(line: 5267, column: 23, scope: !3106)
!3111 = !DILocation(line: 5270, column: 8, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 5270, column: 8)
!3113 = !DILocation(line: 5270, column: 13, scope: !3112)
!3114 = !DILocation(line: 5271, column: 8, scope: !3112)
!3115 = !DILocation(line: 5271, column: 11, scope: !3112)
!3116 = !DILocation(line: 5271, column: 39, scope: !3112)
!3117 = !DILocation(line: 5271, column: 37, scope: !3112)
!3118 = !DILocation(line: 5270, column: 8, scope: !3106)
!3119 = !DILocalVariable(name: "difference", scope: !3120, file: !1, line: 5273, type: !1518)
!3120 = distinct !DILexicalBlock(scope: !3112, file: !1, line: 5272, column: 6)
!3121 = !DILocation(line: 5273, column: 12, scope: !3120)
!3122 = !DILocation(line: 5273, column: 26, scope: !3120)
!3123 = !DILocation(line: 5274, column: 7, scope: !3120)
!3124 = !DILocation(line: 5274, column: 5, scope: !3120)
!3125 = !DILocation(line: 5279, column: 6, scope: !3120)
!3126 = !DILocation(line: 5281, column: 28, scope: !3106)
!3127 = !DILocation(line: 5281, column: 32, scope: !3106)
!3128 = !DILocation(line: 5281, column: 43, scope: !3106)
!3129 = !DILocation(line: 5281, column: 56, scope: !3106)
!3130 = !DILocation(line: 5281, column: 8, scope: !3106)
!3131 = !DILocation(line: 5281, column: 6, scope: !3106)
!3132 = !DILocation(line: 5288, column: 31, scope: !3133)
!3133 = distinct !DILexicalBlock(scope: !3106, file: !1, line: 5288, column: 8)
!3134 = !DILocation(line: 5288, column: 42, scope: !3133)
!3135 = !DILocation(line: 5288, column: 8, scope: !3133)
!3136 = !DILocation(line: 5288, column: 56, scope: !3133)
!3137 = !DILocation(line: 5288, column: 53, scope: !3133)
!3138 = !DILocation(line: 5288, column: 8, scope: !3106)
!3139 = !DILocation(line: 5289, column: 27, scope: !3133)
!3140 = !DILocation(line: 5289, column: 6, scope: !3133)
!3141 = !DILocation(line: 5289, column: 25, scope: !3133)
!3142 = !DILocation(line: 5290, column: 11, scope: !3106)
!3143 = !DILocation(line: 5290, column: 4, scope: !3106)
!3144 = !DILocation(line: 5292, column: 5, scope: !3090)
!3145 = !DILocation(line: 5299, column: 7, scope: !3146)
!3146 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5299, column: 7)
!3147 = !DILocation(line: 5300, column: 7, scope: !3146)
!3148 = !DILocation(line: 5300, column: 38, scope: !3146)
!3149 = !DILocation(line: 5300, column: 12, scope: !3146)
!3150 = !DILocation(line: 5303, column: 7, scope: !3146)
!3151 = !DILocation(line: 5303, column: 13, scope: !3146)
!3152 = !DILocation(line: 5304, column: 4, scope: !3146)
!3153 = !DILocation(line: 5304, column: 29, scope: !3146)
!3154 = !DILocation(line: 5304, column: 9, scope: !3146)
!3155 = !DILocation(line: 5305, column: 7, scope: !3146)
!3156 = !DILocation(line: 5305, column: 10, scope: !3146)
!3157 = !DILocation(line: 5305, column: 39, scope: !3146)
!3158 = !DILocation(line: 5305, column: 36, scope: !3146)
!3159 = !DILocation(line: 5299, column: 7, scope: !2872)
!3160 = !DILocation(line: 5306, column: 12, scope: !3146)
!3161 = !DILocation(line: 5306, column: 5, scope: !3146)
!3162 = !DILocation(line: 5310, column: 7, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5310, column: 7)
!3164 = !DILocation(line: 5310, column: 21, scope: !3163)
!3165 = !DILocation(line: 5310, column: 7, scope: !2872)
!3166 = !DILocalVariable(name: "part_size", scope: !3167, file: !1, line: 5312, type: !5)
!3167 = distinct !DILexicalBlock(scope: !3163, file: !1, line: 5311, column: 5)
!3168 = !DILocation(line: 5312, column: 20, scope: !3167)
!3169 = !DILocalVariable(name: "final_offset", scope: !3167, file: !1, line: 5312, type: !5)
!3170 = !DILocation(line: 5312, column: 31, scope: !3167)
!3171 = !DILocalVariable(name: "part", scope: !3167, file: !1, line: 5313, type: !1495)
!3172 = !DILocation(line: 5313, column: 11, scope: !3167)
!3173 = !DILocalVariable(name: "res", scope: !3167, file: !1, line: 5313, type: !1495)
!3174 = !DILocation(line: 5313, column: 17, scope: !3167)
!3175 = !DILocation(line: 5315, column: 19, scope: !3167)
!3176 = !DILocation(line: 5315, column: 17, scope: !3167)
!3177 = !DILocation(line: 5316, column: 11, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 5316, column: 11)
!3179 = !DILocation(line: 5316, column: 18, scope: !3178)
!3180 = !DILocation(line: 5316, column: 16, scope: !3178)
!3181 = !DILocation(line: 5316, column: 11, scope: !3167)
!3182 = !DILocation(line: 5318, column: 11, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 5317, column: 2)
!3184 = !DILocation(line: 5318, column: 9, scope: !3183)
!3185 = !DILocation(line: 5319, column: 19, scope: !3183)
!3186 = !DILocation(line: 5319, column: 17, scope: !3183)
!3187 = !DILocation(line: 5320, column: 2, scope: !3183)
!3188 = !DILocation(line: 5323, column: 11, scope: !3189)
!3189 = distinct !DILexicalBlock(scope: !3178, file: !1, line: 5322, column: 2)
!3190 = !DILocation(line: 5323, column: 9, scope: !3189)
!3191 = !DILocation(line: 5324, column: 19, scope: !3189)
!3192 = !DILocation(line: 5324, column: 26, scope: !3189)
!3193 = !DILocation(line: 5324, column: 24, scope: !3189)
!3194 = !DILocation(line: 5324, column: 17, scope: !3189)
!3195 = !DILocation(line: 5327, column: 11, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 5327, column: 11)
!3197 = !DILocation(line: 5327, column: 26, scope: !3196)
!3198 = !DILocation(line: 5327, column: 24, scope: !3196)
!3199 = !DILocation(line: 5327, column: 54, scope: !3196)
!3200 = !DILocation(line: 5327, column: 52, scope: !3196)
!3201 = !DILocation(line: 5327, column: 11, scope: !3167)
!3202 = !DILocation(line: 5328, column: 2, scope: !3196)
!3203 = !DILocation(line: 5330, column: 30, scope: !3167)
!3204 = !DILocation(line: 5330, column: 41, scope: !3167)
!3205 = !DILocation(line: 5330, column: 47, scope: !3167)
!3206 = !DILocation(line: 5330, column: 64, scope: !3167)
!3207 = !DILocation(line: 5330, column: 13, scope: !3167)
!3208 = !DILocation(line: 5330, column: 11, scope: !3167)
!3209 = !DILocation(line: 5331, column: 11, scope: !3210)
!3210 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 5331, column: 11)
!3211 = !DILocation(line: 5331, column: 11, scope: !3167)
!3212 = !DILocation(line: 5332, column: 9, scope: !3210)
!3213 = !DILocation(line: 5332, column: 2, scope: !3210)
!3214 = !DILocation(line: 5333, column: 28, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 5333, column: 11)
!3216 = !DILocation(line: 5333, column: 39, scope: !3215)
!3217 = !DILocation(line: 5333, column: 56, scope: !3215)
!3218 = !DILocation(line: 5333, column: 62, scope: !3215)
!3219 = !DILocation(line: 5333, column: 11, scope: !3215)
!3220 = !DILocation(line: 5333, column: 11, scope: !3167)
!3221 = !DILocation(line: 5334, column: 25, scope: !3215)
!3222 = !DILocation(line: 5334, column: 36, scope: !3215)
!3223 = !DILocation(line: 5334, column: 42, scope: !3215)
!3224 = !DILocation(line: 5334, column: 9, scope: !3215)
!3225 = !DILocation(line: 5334, column: 2, scope: !3215)
!3226 = !DILocation(line: 5335, column: 7, scope: !3167)
!3227 = !DILocation(line: 5339, column: 8, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5339, column: 7)
!3229 = !DILocation(line: 5339, column: 22, scope: !3228)
!3230 = !DILocation(line: 5340, column: 8, scope: !3228)
!3231 = !DILocation(line: 5340, column: 11, scope: !3228)
!3232 = !DILocation(line: 5340, column: 25, scope: !3228)
!3233 = !DILocation(line: 5341, column: 7, scope: !3228)
!3234 = !DILocation(line: 5341, column: 10, scope: !3228)
!3235 = !DILocation(line: 5341, column: 41, scope: !3228)
!3236 = !DILocation(line: 5341, column: 39, scope: !3228)
!3237 = !DILocation(line: 5339, column: 7, scope: !2872)
!3238 = !DILocalVariable(name: "bitpos", scope: !3239, file: !1, line: 5343, type: !5)
!3239 = distinct !DILexicalBlock(scope: !3228, file: !1, line: 5342, column: 5)
!3240 = !DILocation(line: 5343, column: 20, scope: !3239)
!3241 = !DILocation(line: 5343, column: 43, scope: !3239)
!3242 = !DILocation(line: 5343, column: 54, scope: !3239)
!3243 = !DILocation(line: 5343, column: 65, scope: !3239)
!3244 = !DILocation(line: 5343, column: 29, scope: !3239)
!3245 = !DILocation(line: 5352, column: 11, scope: !3246)
!3246 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 5352, column: 11)
!3247 = !DILocation(line: 5352, column: 18, scope: !3246)
!3248 = !DILocation(line: 5352, column: 11, scope: !3239)
!3249 = !DILocalVariable(name: "origmode", scope: !3250, file: !1, line: 5354, type: !3)
!3250 = distinct !DILexicalBlock(scope: !3246, file: !1, line: 5353, column: 2)
!3251 = !DILocation(line: 5354, column: 22, scope: !3250)
!3252 = !DILocation(line: 5354, column: 33, scope: !3250)
!3253 = !DILocation(line: 5355, column: 8, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3250, file: !1, line: 5355, column: 8)
!3255 = !DILocation(line: 5355, column: 21, scope: !3254)
!3256 = !DILocation(line: 5355, column: 18, scope: !3254)
!3257 = !DILocation(line: 5355, column: 8, scope: !3250)
!3258 = !DILocation(line: 5356, column: 13, scope: !3254)
!3259 = !DILocation(line: 5356, column: 6, scope: !3254)
!3260 = !DILocation(line: 5357, column: 8, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3250, file: !1, line: 5357, column: 8)
!3262 = !DILocation(line: 5357, column: 40, scope: !3261)
!3263 = !DILocation(line: 5357, column: 37, scope: !3261)
!3264 = !DILocation(line: 5357, column: 8, scope: !3250)
!3265 = !DILocation(line: 5358, column: 34, scope: !3261)
!3266 = !DILocation(line: 5358, column: 45, scope: !3261)
!3267 = !DILocation(line: 5358, column: 59, scope: !3261)
!3268 = !DILocation(line: 5359, column: 29, scope: !3261)
!3269 = !DILocation(line: 5360, column: 15, scope: !3261)
!3270 = !DILocation(line: 5359, column: 6, scope: !3261)
!3271 = !DILocation(line: 5358, column: 13, scope: !3261)
!3272 = !DILocation(line: 5358, column: 6, scope: !3261)
!3273 = !DILocation(line: 5361, column: 8, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3250, file: !1, line: 5361, column: 8)
!3275 = !DILocation(line: 5361, column: 8, scope: !3250)
!3276 = !DILocation(line: 5362, column: 33, scope: !3274)
!3277 = !DILocation(line: 5362, column: 48, scope: !3274)
!3278 = !DILocation(line: 5363, column: 12, scope: !3274)
!3279 = !DILocation(line: 5363, column: 26, scope: !3274)
!3280 = !DILocation(line: 5362, column: 13, scope: !3274)
!3281 = !DILocation(line: 5362, column: 6, scope: !3274)
!3282 = !DILocation(line: 5364, column: 2, scope: !3250)
!3283 = !DILocation(line: 5368, column: 11, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3239, file: !1, line: 5368, column: 11)
!3285 = !DILocation(line: 5368, column: 25, scope: !3284)
!3286 = !DILocation(line: 5369, column: 4, scope: !3284)
!3287 = !DILocation(line: 5369, column: 7, scope: !3284)
!3288 = !DILocation(line: 5369, column: 17, scope: !3284)
!3289 = !DILocation(line: 5369, column: 14, scope: !3284)
!3290 = !DILocation(line: 5368, column: 11, scope: !3239)
!3291 = !DILocation(line: 5370, column: 9, scope: !3284)
!3292 = !DILocation(line: 5370, column: 2, scope: !3284)
!3293 = !DILocation(line: 5371, column: 5, scope: !3239)
!3294 = !DILocation(line: 5376, column: 8, scope: !3295)
!3295 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5376, column: 7)
!3296 = !DILocation(line: 5376, column: 22, scope: !3295)
!3297 = !DILocation(line: 5377, column: 8, scope: !3295)
!3298 = !DILocation(line: 5377, column: 11, scope: !3295)
!3299 = !DILocation(line: 5377, column: 25, scope: !3295)
!3300 = !DILocation(line: 5378, column: 7, scope: !3295)
!3301 = !DILocation(line: 5378, column: 10, scope: !3295)
!3302 = !DILocation(line: 5383, column: 7, scope: !3295)
!3303 = !DILocation(line: 5383, column: 15, scope: !3295)
!3304 = !DILocation(line: 5383, column: 13, scope: !3295)
!3305 = !DILocation(line: 5383, column: 48, scope: !3295)
!3306 = !DILocation(line: 5383, column: 45, scope: !3295)
!3307 = !DILocation(line: 5384, column: 7, scope: !3295)
!3308 = !DILocation(line: 5384, column: 10, scope: !3295)
!3309 = !DILocation(line: 5385, column: 7, scope: !3295)
!3310 = !DILocation(line: 5385, column: 10, scope: !3295)
!3311 = !DILocation(line: 5385, column: 34, scope: !3295)
!3312 = !DILocation(line: 5386, column: 7, scope: !3295)
!3313 = !DILocation(line: 5386, column: 10, scope: !3295)
!3314 = !DILocation(line: 5386, column: 47, scope: !3295)
!3315 = !DILocation(line: 5386, column: 44, scope: !3295)
!3316 = !DILocation(line: 5387, column: 7, scope: !3295)
!3317 = !DILocation(line: 5387, column: 10, scope: !3295)
!3318 = !DILocation(line: 5387, column: 34, scope: !3295)
!3319 = !DILocation(line: 5387, column: 32, scope: !3295)
!3320 = !DILocation(line: 5388, column: 7, scope: !3295)
!3321 = !DILocation(line: 5388, column: 24, scope: !3295)
!3322 = !DILocation(line: 5388, column: 35, scope: !3295)
!3323 = !DILocation(line: 5388, column: 46, scope: !3295)
!3324 = !DILocation(line: 5388, column: 10, scope: !3295)
!3325 = !DILocation(line: 5388, column: 52, scope: !3295)
!3326 = !DILocation(line: 5376, column: 7, scope: !2872)
!3327 = !DILocation(line: 5389, column: 43, scope: !3295)
!3328 = !DILocation(line: 5390, column: 5, scope: !3295)
!3329 = !DILocation(line: 5390, column: 29, scope: !3295)
!3330 = !DILocation(line: 5389, column: 12, scope: !3295)
!3331 = !DILocation(line: 5389, column: 5, scope: !3295)
!3332 = !DILocation(line: 5395, column: 8, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5395, column: 7)
!3334 = !DILocation(line: 5395, column: 22, scope: !3333)
!3335 = !DILocation(line: 5396, column: 8, scope: !3333)
!3336 = !DILocation(line: 5396, column: 11, scope: !3333)
!3337 = !DILocation(line: 5396, column: 25, scope: !3333)
!3338 = !DILocation(line: 5397, column: 7, scope: !3333)
!3339 = !DILocation(line: 5397, column: 10, scope: !3333)
!3340 = !DILocation(line: 5398, column: 7, scope: !3333)
!3341 = !DILocation(line: 5398, column: 10, scope: !3333)
!3342 = !DILocation(line: 5398, column: 41, scope: !3333)
!3343 = !DILocation(line: 5398, column: 39, scope: !3333)
!3344 = !DILocation(line: 5399, column: 7, scope: !3333)
!3345 = !DILocation(line: 5399, column: 10, scope: !3333)
!3346 = !DILocation(line: 5400, column: 7, scope: !3333)
!3347 = !DILocation(line: 5400, column: 10, scope: !3333)
!3348 = !DILocation(line: 5400, column: 34, scope: !3333)
!3349 = !DILocation(line: 5401, column: 7, scope: !3333)
!3350 = !DILocation(line: 5401, column: 10, scope: !3333)
!3351 = !DILocation(line: 5401, column: 47, scope: !3333)
!3352 = !DILocation(line: 5401, column: 44, scope: !3333)
!3353 = !DILocation(line: 5402, column: 7, scope: !3333)
!3354 = !DILocation(line: 5402, column: 10, scope: !3333)
!3355 = !DILocation(line: 5402, column: 34, scope: !3333)
!3356 = !DILocation(line: 5402, column: 32, scope: !3333)
!3357 = !DILocation(line: 5403, column: 7, scope: !3333)
!3358 = !DILocation(line: 5403, column: 24, scope: !3333)
!3359 = !DILocation(line: 5403, column: 35, scope: !3333)
!3360 = !DILocation(line: 5403, column: 46, scope: !3333)
!3361 = !DILocation(line: 5403, column: 10, scope: !3333)
!3362 = !DILocation(line: 5403, column: 52, scope: !3333)
!3363 = !DILocation(line: 5395, column: 7, scope: !2872)
!3364 = !DILocation(line: 5404, column: 43, scope: !3333)
!3365 = !DILocation(line: 5405, column: 5, scope: !3333)
!3366 = !DILocation(line: 5405, column: 29, scope: !3333)
!3367 = !DILocation(line: 5404, column: 12, scope: !3333)
!3368 = !DILocation(line: 5404, column: 5, scope: !3333)
!3369 = !DILocation(line: 5410, column: 7, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5410, column: 7)
!3371 = !DILocation(line: 5410, column: 21, scope: !3370)
!3372 = !DILocation(line: 5411, column: 7, scope: !3370)
!3373 = !DILocation(line: 5411, column: 10, scope: !3370)
!3374 = !DILocation(line: 5412, column: 7, scope: !3370)
!3375 = !DILocation(line: 5412, column: 10, scope: !3370)
!3376 = !DILocation(line: 5412, column: 41, scope: !3370)
!3377 = !DILocation(line: 5412, column: 39, scope: !3370)
!3378 = !DILocation(line: 5413, column: 7, scope: !3370)
!3379 = !DILocation(line: 5413, column: 10, scope: !3370)
!3380 = !DILocation(line: 5414, column: 7, scope: !3370)
!3381 = !DILocation(line: 5414, column: 11, scope: !3370)
!3382 = !DILocation(line: 5414, column: 35, scope: !3370)
!3383 = !DILocation(line: 5415, column: 4, scope: !3370)
!3384 = !DILocation(line: 5415, column: 7, scope: !3370)
!3385 = !DILocation(line: 5415, column: 31, scope: !3370)
!3386 = !DILocation(line: 5416, column: 7, scope: !3370)
!3387 = !DILocation(line: 5416, column: 10, scope: !3370)
!3388 = !DILocation(line: 5416, column: 47, scope: !3370)
!3389 = !DILocation(line: 5416, column: 44, scope: !3370)
!3390 = !DILocation(line: 5417, column: 7, scope: !3370)
!3391 = !DILocation(line: 5417, column: 10, scope: !3370)
!3392 = !DILocation(line: 5417, column: 34, scope: !3370)
!3393 = !DILocation(line: 5417, column: 32, scope: !3370)
!3394 = !DILocation(line: 5418, column: 7, scope: !3370)
!3395 = !DILocation(line: 5418, column: 24, scope: !3370)
!3396 = !DILocation(line: 5418, column: 35, scope: !3370)
!3397 = !DILocation(line: 5418, column: 46, scope: !3370)
!3398 = !DILocation(line: 5418, column: 10, scope: !3370)
!3399 = !DILocation(line: 5418, column: 52, scope: !3370)
!3400 = !DILocation(line: 5410, column: 7, scope: !2872)
!3401 = !DILocation(line: 5419, column: 41, scope: !3370)
!3402 = !DILocation(line: 5420, column: 5, scope: !3370)
!3403 = !DILocation(line: 5420, column: 29, scope: !3370)
!3404 = !DILocation(line: 5419, column: 12, scope: !3370)
!3405 = !DILocation(line: 5419, column: 5, scope: !3370)
!3406 = !DILocation(line: 5423, column: 8, scope: !3407)
!3407 = distinct !DILexicalBlock(scope: !2872, file: !1, line: 5423, column: 7)
!3408 = !DILocation(line: 5423, column: 22, scope: !3407)
!3409 = !DILocation(line: 5424, column: 8, scope: !3407)
!3410 = !DILocation(line: 5424, column: 11, scope: !3407)
!3411 = !DILocation(line: 5424, column: 25, scope: !3407)
!3412 = !DILocation(line: 5425, column: 7, scope: !3407)
!3413 = !DILocation(line: 5425, column: 10, scope: !3407)
!3414 = !DILocation(line: 5426, column: 7, scope: !3407)
!3415 = !DILocation(line: 5426, column: 10, scope: !3407)
!3416 = !DILocation(line: 5426, column: 39, scope: !3407)
!3417 = !DILocation(line: 5427, column: 7, scope: !3407)
!3418 = !DILocation(line: 5427, column: 10, scope: !3407)
!3419 = !DILocation(line: 5427, column: 47, scope: !3407)
!3420 = !DILocation(line: 5427, column: 45, scope: !3407)
!3421 = !DILocation(line: 5427, column: 39, scope: !3407)
!3422 = !DILocation(line: 5428, column: 7, scope: !3407)
!3423 = !DILocation(line: 5428, column: 10, scope: !3407)
!3424 = !DILocation(line: 5429, column: 7, scope: !3407)
!3425 = !DILocation(line: 5429, column: 11, scope: !3407)
!3426 = !DILocation(line: 5429, column: 36, scope: !3407)
!3427 = !DILocation(line: 5429, column: 65, scope: !3407)
!3428 = !DILocation(line: 5429, column: 35, scope: !3407)
!3429 = !DILocation(line: 5429, column: 33, scope: !3407)
!3430 = !DILocation(line: 5429, column: 71, scope: !3407)
!3431 = !DILocation(line: 5430, column: 7, scope: !3407)
!3432 = !DILocation(line: 5430, column: 10, scope: !3407)
!3433 = !DILocation(line: 5430, column: 32, scope: !3407)
!3434 = !DILocation(line: 5431, column: 7, scope: !3407)
!3435 = !DILocation(line: 5431, column: 10, scope: !3407)
!3436 = !DILocation(line: 5431, column: 34, scope: !3407)
!3437 = !DILocation(line: 5431, column: 32, scope: !3407)
!3438 = !DILocation(line: 5432, column: 7, scope: !3407)
!3439 = !DILocation(line: 5432, column: 10, scope: !3407)
!3440 = !DILocation(line: 5432, column: 41, scope: !3407)
!3441 = !DILocation(line: 5432, column: 52, scope: !3407)
!3442 = !DILocation(line: 5432, column: 18, scope: !3407)
!3443 = !DILocation(line: 5432, column: 15, scope: !3407)
!3444 = !DILocation(line: 5423, column: 7, scope: !2872)
!3445 = !DILocalVariable(name: "shifted_bytes", scope: !3446, file: !1, line: 5434, type: !1518)
!3446 = distinct !DILexicalBlock(scope: !3407, file: !1, line: 5433, column: 5)
!3447 = !DILocation(line: 5434, column: 11, scope: !3446)
!3448 = !DILocation(line: 5434, column: 27, scope: !3446)
!3449 = !DILocation(line: 5434, column: 49, scope: !3446)
!3450 = !DILocation(line: 5435, column: 35, scope: !3446)
!3451 = !DILocation(line: 5435, column: 46, scope: !3446)
!3452 = !DILocation(line: 5435, column: 60, scope: !3446)
!3453 = !DILocation(line: 5438, column: 10, scope: !3446)
!3454 = !DILocation(line: 5438, column: 17, scope: !3446)
!3455 = !DILocation(line: 5438, column: 15, scope: !3446)
!3456 = !DILocation(line: 5435, column: 14, scope: !3446)
!3457 = !DILocation(line: 5435, column: 7, scope: !3446)
!3458 = !DILocation(line: 5441, column: 3, scope: !2872)
!3459 = !DILocation(line: 5442, column: 1, scope: !2872)
!3460 = distinct !DISubprogram(name: "delegitimize_mem_from_attrs", scope: !1, file: !1, line: 210, type: !2754, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!3461 = !DILocalVariable(name: "x", arg: 1, scope: !3460, file: !1, line: 210, type: !1495)
!3462 = !DILocation(line: 210, column: 34, scope: !3460)
!3463 = !DILocation(line: 212, column: 7, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 212, column: 7)
!3465 = !DILocation(line: 213, column: 7, scope: !3464)
!3466 = !DILocation(line: 213, column: 10, scope: !3464)
!3467 = !DILocation(line: 214, column: 7, scope: !3464)
!3468 = !DILocation(line: 214, column: 12, scope: !3464)
!3469 = !DILocation(line: 215, column: 4, scope: !3464)
!3470 = !DILocation(line: 215, column: 7, scope: !3464)
!3471 = !DILocation(line: 215, column: 33, scope: !3464)
!3472 = !DILocation(line: 212, column: 7, scope: !3460)
!3473 = !DILocalVariable(name: "decl", scope: !3474, file: !1, line: 217, type: !1616)
!3474 = distinct !DILexicalBlock(scope: !3464, file: !1, line: 216, column: 5)
!3475 = !DILocation(line: 217, column: 12, scope: !3474)
!3476 = !DILocation(line: 217, column: 19, scope: !3474)
!3477 = !DILocalVariable(name: "mode", scope: !3474, file: !1, line: 218, type: !3)
!3478 = !DILocation(line: 218, column: 25, scope: !3474)
!3479 = !DILocation(line: 218, column: 32, scope: !3474)
!3480 = !DILocalVariable(name: "offset", scope: !3474, file: !1, line: 219, type: !1585)
!3481 = !DILocation(line: 219, column: 21, scope: !3474)
!3482 = !DILocation(line: 221, column: 15, scope: !3474)
!3483 = !DILocation(line: 221, column: 7, scope: !3474)
!3484 = !DILocation(line: 224, column: 9, scope: !3485)
!3485 = distinct !DILexicalBlock(scope: !3474, file: !1, line: 222, column: 2)
!3486 = !DILocation(line: 225, column: 4, scope: !3485)
!3487 = !DILocation(line: 228, column: 4, scope: !3485)
!3488 = !DILocalVariable(name: "bitsize", scope: !3489, file: !1, line: 238, type: !1585)
!3489 = distinct !DILexicalBlock(scope: !3485, file: !1, line: 237, column: 4)
!3490 = !DILocation(line: 238, column: 20, scope: !3489)
!3491 = !DILocalVariable(name: "bitpos", scope: !3489, file: !1, line: 238, type: !1585)
!3492 = !DILocation(line: 238, column: 29, scope: !3489)
!3493 = !DILocalVariable(name: "toffset", scope: !3489, file: !1, line: 239, type: !1616)
!3494 = !DILocation(line: 239, column: 11, scope: !3489)
!3495 = !DILocalVariable(name: "unsignedp", scope: !3489, file: !1, line: 240, type: !1518)
!3496 = !DILocation(line: 240, column: 10, scope: !3489)
!3497 = !DILocalVariable(name: "volatilep", scope: !3489, file: !1, line: 240, type: !1518)
!3498 = !DILocation(line: 240, column: 25, scope: !3489)
!3499 = !DILocation(line: 242, column: 34, scope: !3489)
!3500 = !DILocation(line: 242, column: 13, scope: !3489)
!3501 = !DILocation(line: 242, column: 11, scope: !3489)
!3502 = !DILocation(line: 244, column: 10, scope: !3503)
!3503 = distinct !DILexicalBlock(scope: !3489, file: !1, line: 244, column: 10)
!3504 = !DILocation(line: 244, column: 21, scope: !3503)
!3505 = !DILocation(line: 244, column: 18, scope: !3503)
!3506 = !DILocation(line: 245, column: 3, scope: !3503)
!3507 = !DILocation(line: 245, column: 7, scope: !3503)
!3508 = !DILocation(line: 245, column: 14, scope: !3503)
!3509 = !DILocation(line: 246, column: 3, scope: !3503)
!3510 = !DILocation(line: 246, column: 7, scope: !3503)
!3511 = !DILocation(line: 246, column: 15, scope: !3503)
!3512 = !DILocation(line: 246, column: 34, scope: !3503)
!3513 = !DILocation(line: 246, column: 19, scope: !3503)
!3514 = !DILocation(line: 244, column: 10, scope: !3489)
!3515 = !DILocation(line: 247, column: 13, scope: !3503)
!3516 = !DILocation(line: 247, column: 8, scope: !3503)
!3517 = !DILocation(line: 250, column: 13, scope: !3518)
!3518 = distinct !DILexicalBlock(scope: !3503, file: !1, line: 249, column: 8)
!3519 = !DILocation(line: 250, column: 20, scope: !3518)
!3520 = !DILocation(line: 250, column: 10, scope: !3518)
!3521 = !DILocation(line: 251, column: 7, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3518, file: !1, line: 251, column: 7)
!3523 = !DILocation(line: 251, column: 7, scope: !3518)
!3524 = !DILocation(line: 252, column: 15, scope: !3522)
!3525 = !DILocation(line: 252, column: 12, scope: !3522)
!3526 = !DILocation(line: 252, column: 5, scope: !3522)
!3527 = !DILocation(line: 254, column: 6, scope: !3489)
!3528 = !DILocation(line: 258, column: 11, scope: !3529)
!3529 = distinct !DILexicalBlock(scope: !3474, file: !1, line: 258, column: 11)
!3530 = !DILocation(line: 259, column: 4, scope: !3529)
!3531 = !DILocation(line: 259, column: 7, scope: !3529)
!3532 = !DILocation(line: 259, column: 15, scope: !3529)
!3533 = !DILocation(line: 259, column: 12, scope: !3529)
!3534 = !DILocation(line: 260, column: 4, scope: !3529)
!3535 = !DILocation(line: 260, column: 7, scope: !3529)
!3536 = !DILocation(line: 260, column: 24, scope: !3529)
!3537 = !DILocation(line: 261, column: 4, scope: !3529)
!3538 = !DILocation(line: 261, column: 8, scope: !3529)
!3539 = !DILocation(line: 262, column: 8, scope: !3529)
!3540 = !DILocation(line: 262, column: 11, scope: !3529)
!3541 = !DILocation(line: 263, column: 4, scope: !3529)
!3542 = !DILocation(line: 263, column: 7, scope: !3529)
!3543 = !DILocation(line: 264, column: 4, scope: !3529)
!3544 = !DILocation(line: 264, column: 7, scope: !3529)
!3545 = !DILocation(line: 258, column: 11, scope: !3474)
!3546 = !DILocalVariable(name: "newx", scope: !3547, file: !1, line: 266, type: !1495)
!3547 = distinct !DILexicalBlock(scope: !3529, file: !1, line: 265, column: 2)
!3548 = !DILocation(line: 266, column: 8, scope: !3547)
!3549 = !DILocation(line: 268, column: 8, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3547, file: !1, line: 268, column: 8)
!3551 = !DILocation(line: 268, column: 8, scope: !3547)
!3552 = !DILocation(line: 269, column: 16, scope: !3550)
!3553 = !DILocation(line: 269, column: 13, scope: !3550)
!3554 = !DILocation(line: 269, column: 6, scope: !3550)
!3555 = !DILocation(line: 271, column: 11, scope: !3547)
!3556 = !DILocation(line: 271, column: 9, scope: !3547)
!3557 = !DILocation(line: 273, column: 8, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3547, file: !1, line: 273, column: 8)
!3559 = !DILocation(line: 273, column: 8, scope: !3547)
!3560 = !DILocalVariable(name: "n", scope: !3561, file: !1, line: 275, type: !1495)
!3561 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 274, column: 6)
!3562 = !DILocation(line: 275, column: 12, scope: !3561)
!3563 = !DILocation(line: 275, column: 16, scope: !3561)
!3564 = !DILocalVariable(name: "o", scope: !3561, file: !1, line: 275, type: !1495)
!3565 = !DILocation(line: 275, column: 32, scope: !3561)
!3566 = !DILocation(line: 275, column: 36, scope: !3561)
!3567 = !DILocation(line: 283, column: 15, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 283, column: 12)
!3569 = !DILocation(line: 283, column: 22, scope: !3568)
!3570 = !DILocation(line: 284, column: 8, scope: !3568)
!3571 = !DILocation(line: 284, column: 12, scope: !3568)
!3572 = !DILocation(line: 284, column: 25, scope: !3568)
!3573 = !DILocation(line: 285, column: 5, scope: !3568)
!3574 = !DILocation(line: 285, column: 8, scope: !3568)
!3575 = !DILocation(line: 285, column: 31, scope: !3568)
!3576 = !DILocation(line: 286, column: 5, scope: !3568)
!3577 = !DILocation(line: 286, column: 9, scope: !3568)
!3578 = !DILocation(line: 286, column: 19, scope: !3568)
!3579 = !DILocation(line: 286, column: 16, scope: !3568)
!3580 = !DILocation(line: 287, column: 9, scope: !3568)
!3581 = !DILocation(line: 287, column: 13, scope: !3568)
!3582 = !DILocation(line: 287, column: 26, scope: !3568)
!3583 = !DILocation(line: 288, column: 6, scope: !3568)
!3584 = !DILocation(line: 288, column: 9, scope: !3568)
!3585 = !DILocation(line: 288, column: 32, scope: !3568)
!3586 = !DILocation(line: 289, column: 6, scope: !3568)
!3587 = !DILocation(line: 289, column: 10, scope: !3568)
!3588 = !DILocation(line: 289, column: 33, scope: !3568)
!3589 = !DILocation(line: 289, column: 31, scope: !3568)
!3590 = !DILocation(line: 290, column: 13, scope: !3568)
!3591 = !DILocation(line: 290, column: 10, scope: !3568)
!3592 = !DILocation(line: 291, column: 6, scope: !3568)
!3593 = !DILocation(line: 291, column: 14, scope: !3568)
!3594 = !DILocation(line: 291, column: 12, scope: !3568)
!3595 = !DILocation(line: 292, column: 5, scope: !3568)
!3596 = !DILocation(line: 292, column: 13, scope: !3568)
!3597 = !DILocation(line: 292, column: 11, scope: !3568)
!3598 = !DILocation(line: 293, column: 7, scope: !3568)
!3599 = !DILocation(line: 293, column: 23, scope: !3568)
!3600 = !DILocation(line: 293, column: 26, scope: !3568)
!3601 = !DILocation(line: 293, column: 10, scope: !3568)
!3602 = !DILocation(line: 283, column: 12, scope: !3561)
!3603 = !DILocation(line: 294, column: 7, scope: !3568)
!3604 = !DILocation(line: 294, column: 5, scope: !3568)
!3605 = !DILocation(line: 294, column: 3, scope: !3568)
!3606 = !DILocation(line: 295, column: 6, scope: !3561)
!3607 = !DILocation(line: 296, column: 13, scope: !3608)
!3608 = distinct !DILexicalBlock(scope: !3558, file: !1, line: 296, column: 13)
!3609 = !DILocation(line: 296, column: 29, scope: !3608)
!3610 = !DILocation(line: 296, column: 26, scope: !3608)
!3611 = !DILocation(line: 297, column: 6, scope: !3608)
!3612 = !DILocation(line: 297, column: 9, scope: !3608)
!3613 = !DILocation(line: 297, column: 16, scope: !3608)
!3614 = !DILocation(line: 296, column: 13, scope: !3558)
!3615 = !DILocation(line: 298, column: 10, scope: !3608)
!3616 = !DILocation(line: 298, column: 8, scope: !3608)
!3617 = !DILocation(line: 298, column: 6, scope: !3608)
!3618 = !DILocation(line: 299, column: 2, scope: !3547)
!3619 = !DILocation(line: 300, column: 5, scope: !3474)
!3620 = !DILocation(line: 302, column: 10, scope: !3460)
!3621 = !DILocation(line: 302, column: 3, scope: !3460)
!3622 = distinct !DISubprogram(name: "simplify_gen_unary", scope: !1, file: !1, line: 309, type: !3623, scopeLine: 311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!3623 = !DISubroutineType(types: !3624)
!3624 = !{!1495, !397, !3, !1495, !3}
!3625 = !DILocalVariable(name: "code", arg: 1, scope: !3622, file: !1, line: 309, type: !397)
!3626 = !DILocation(line: 309, column: 35, scope: !3622)
!3627 = !DILocalVariable(name: "mode", arg: 2, scope: !3622, file: !1, line: 309, type: !3)
!3628 = !DILocation(line: 309, column: 59, scope: !3622)
!3629 = !DILocalVariable(name: "op", arg: 3, scope: !3622, file: !1, line: 309, type: !1495)
!3630 = !DILocation(line: 309, column: 69, scope: !3622)
!3631 = !DILocalVariable(name: "op_mode", arg: 4, scope: !3622, file: !1, line: 310, type: !3)
!3632 = !DILocation(line: 310, column: 25, scope: !3622)
!3633 = !DILocalVariable(name: "tem", scope: !3622, file: !1, line: 312, type: !1495)
!3634 = !DILocation(line: 312, column: 7, scope: !3622)
!3635 = !DILocation(line: 315, column: 40, scope: !3636)
!3636 = distinct !DILexicalBlock(scope: !3622, file: !1, line: 315, column: 7)
!3637 = !DILocation(line: 315, column: 46, scope: !3636)
!3638 = !DILocation(line: 315, column: 52, scope: !3636)
!3639 = !DILocation(line: 315, column: 56, scope: !3636)
!3640 = !DILocation(line: 315, column: 14, scope: !3636)
!3641 = !DILocation(line: 315, column: 12, scope: !3636)
!3642 = !DILocation(line: 315, column: 66, scope: !3636)
!3643 = !DILocation(line: 315, column: 7, scope: !3622)
!3644 = !DILocation(line: 316, column: 12, scope: !3636)
!3645 = !DILocation(line: 316, column: 5, scope: !3636)
!3646 = !DILocation(line: 318, column: 10, scope: !3622)
!3647 = !DILocation(line: 318, column: 3, scope: !3622)
!3648 = !DILocation(line: 319, column: 1, scope: !3622)
!3649 = distinct !DISubprogram(name: "simplify_unary_operation", scope: !1, file: !1, line: 516, type: !3623, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!3650 = !DILocalVariable(name: "code", arg: 1, scope: !3649, file: !1, line: 516, type: !397)
!3651 = !DILocation(line: 516, column: 41, scope: !3649)
!3652 = !DILocalVariable(name: "mode", arg: 2, scope: !3649, file: !1, line: 516, type: !3)
!3653 = !DILocation(line: 516, column: 65, scope: !3649)
!3654 = !DILocalVariable(name: "op", arg: 3, scope: !3649, file: !1, line: 517, type: !1495)
!3655 = !DILocation(line: 517, column: 10, scope: !3649)
!3656 = !DILocalVariable(name: "op_mode", arg: 4, scope: !3649, file: !1, line: 517, type: !3)
!3657 = !DILocation(line: 517, column: 32, scope: !3649)
!3658 = !DILocalVariable(name: "trueop", scope: !3649, file: !1, line: 519, type: !1495)
!3659 = !DILocation(line: 519, column: 7, scope: !3649)
!3660 = !DILocalVariable(name: "tem", scope: !3649, file: !1, line: 519, type: !1495)
!3661 = !DILocation(line: 519, column: 15, scope: !3649)
!3662 = !DILocation(line: 521, column: 43, scope: !3649)
!3663 = !DILocation(line: 521, column: 12, scope: !3649)
!3664 = !DILocation(line: 521, column: 10, scope: !3649)
!3665 = !DILocation(line: 523, column: 41, scope: !3649)
!3666 = !DILocation(line: 523, column: 47, scope: !3649)
!3667 = !DILocation(line: 523, column: 53, scope: !3649)
!3668 = !DILocation(line: 523, column: 61, scope: !3649)
!3669 = !DILocation(line: 523, column: 9, scope: !3649)
!3670 = !DILocation(line: 523, column: 7, scope: !3649)
!3671 = !DILocation(line: 524, column: 7, scope: !3672)
!3672 = distinct !DILexicalBlock(scope: !3649, file: !1, line: 524, column: 7)
!3673 = !DILocation(line: 524, column: 7, scope: !3649)
!3674 = !DILocation(line: 525, column: 12, scope: !3672)
!3675 = !DILocation(line: 525, column: 5, scope: !3672)
!3676 = !DILocation(line: 527, column: 38, scope: !3649)
!3677 = !DILocation(line: 527, column: 44, scope: !3649)
!3678 = !DILocation(line: 527, column: 50, scope: !3649)
!3679 = !DILocation(line: 527, column: 10, scope: !3649)
!3680 = !DILocation(line: 527, column: 3, scope: !3649)
!3681 = !DILocation(line: 528, column: 1, scope: !3649)
!3682 = distinct !DISubprogram(name: "simplify_gen_ternary", scope: !1, file: !1, line: 324, type: !3683, scopeLine: 326, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!3683 = !DISubroutineType(types: !3684)
!3684 = !{!1495, !397, !3, !3, !1495, !1495, !1495}
!3685 = !DILocalVariable(name: "code", arg: 1, scope: !3682, file: !1, line: 324, type: !397)
!3686 = !DILocation(line: 324, column: 37, scope: !3682)
!3687 = !DILocalVariable(name: "mode", arg: 2, scope: !3682, file: !1, line: 324, type: !3)
!3688 = !DILocation(line: 324, column: 61, scope: !3682)
!3689 = !DILocalVariable(name: "op0_mode", arg: 3, scope: !3682, file: !1, line: 325, type: !3)
!3690 = !DILocation(line: 325, column: 27, scope: !3682)
!3691 = !DILocalVariable(name: "op0", arg: 4, scope: !3682, file: !1, line: 325, type: !1495)
!3692 = !DILocation(line: 325, column: 41, scope: !3682)
!3693 = !DILocalVariable(name: "op1", arg: 5, scope: !3682, file: !1, line: 325, type: !1495)
!3694 = !DILocation(line: 325, column: 50, scope: !3682)
!3695 = !DILocalVariable(name: "op2", arg: 6, scope: !3682, file: !1, line: 325, type: !1495)
!3696 = !DILocation(line: 325, column: 59, scope: !3682)
!3697 = !DILocalVariable(name: "tem", scope: !3682, file: !1, line: 327, type: !1495)
!3698 = !DILocation(line: 327, column: 7, scope: !3682)
!3699 = !DILocation(line: 330, column: 47, scope: !3700)
!3700 = distinct !DILexicalBlock(scope: !3682, file: !1, line: 330, column: 7)
!3701 = !DILocation(line: 330, column: 53, scope: !3700)
!3702 = !DILocation(line: 330, column: 59, scope: !3700)
!3703 = !DILocation(line: 331, column: 12, scope: !3700)
!3704 = !DILocation(line: 331, column: 17, scope: !3700)
!3705 = !DILocation(line: 331, column: 22, scope: !3700)
!3706 = !DILocation(line: 330, column: 19, scope: !3700)
!3707 = !DILocation(line: 330, column: 17, scope: !3700)
!3708 = !DILocation(line: 330, column: 9, scope: !3700)
!3709 = !DILocation(line: 330, column: 7, scope: !3682)
!3710 = !DILocation(line: 332, column: 12, scope: !3700)
!3711 = !DILocation(line: 332, column: 5, scope: !3700)
!3712 = !DILocation(line: 334, column: 10, scope: !3682)
!3713 = !DILocation(line: 334, column: 3, scope: !3682)
!3714 = !DILocation(line: 335, column: 1, scope: !3682)
!3715 = distinct !DISubprogram(name: "simplify_ternary_operation", scope: !1, file: !1, line: 4651, type: !3683, scopeLine: 4654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!3716 = !DILocalVariable(name: "code", arg: 1, scope: !3715, file: !1, line: 4651, type: !397)
!3717 = !DILocation(line: 4651, column: 43, scope: !3715)
!3718 = !DILocalVariable(name: "mode", arg: 2, scope: !3715, file: !1, line: 4651, type: !3)
!3719 = !DILocation(line: 4651, column: 67, scope: !3715)
!3720 = !DILocalVariable(name: "op0_mode", arg: 3, scope: !3715, file: !1, line: 4652, type: !3)
!3721 = !DILocation(line: 4652, column: 26, scope: !3715)
!3722 = !DILocalVariable(name: "op0", arg: 4, scope: !3715, file: !1, line: 4652, type: !1495)
!3723 = !DILocation(line: 4652, column: 40, scope: !3715)
!3724 = !DILocalVariable(name: "op1", arg: 5, scope: !3715, file: !1, line: 4652, type: !1495)
!3725 = !DILocation(line: 4652, column: 49, scope: !3715)
!3726 = !DILocalVariable(name: "op2", arg: 6, scope: !3715, file: !1, line: 4653, type: !1495)
!3727 = !DILocation(line: 4653, column: 12, scope: !3715)
!3728 = !DILocalVariable(name: "width", scope: !3715, file: !1, line: 4655, type: !5)
!3729 = !DILocation(line: 4655, column: 16, scope: !3715)
!3730 = !DILocation(line: 4655, column: 24, scope: !3715)
!3731 = !DILocation(line: 4658, column: 7, scope: !3732)
!3732 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 4658, column: 7)
!3733 = !DILocation(line: 4658, column: 13, scope: !3732)
!3734 = !DILocation(line: 4658, column: 7, scope: !3715)
!3735 = !DILocation(line: 4659, column: 11, scope: !3732)
!3736 = !DILocation(line: 4659, column: 5, scope: !3732)
!3737 = !DILocation(line: 4661, column: 11, scope: !3715)
!3738 = !DILocation(line: 4661, column: 3, scope: !3715)
!3739 = !DILocation(line: 4665, column: 11, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4665, column: 11)
!3741 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 4662, column: 5)
!3742 = !DILocation(line: 4666, column: 4, scope: !3740)
!3743 = !DILocation(line: 4666, column: 7, scope: !3740)
!3744 = !DILocation(line: 4667, column: 4, scope: !3740)
!3745 = !DILocation(line: 4667, column: 7, scope: !3740)
!3746 = !DILocation(line: 4668, column: 4, scope: !3740)
!3747 = !DILocation(line: 4668, column: 19, scope: !3740)
!3748 = !DILocation(line: 4668, column: 8, scope: !3740)
!3749 = !DILocation(line: 4668, column: 45, scope: !3740)
!3750 = !DILocation(line: 4668, column: 34, scope: !3740)
!3751 = !DILocation(line: 4668, column: 32, scope: !3740)
!3752 = !DILocation(line: 4668, column: 61, scope: !3740)
!3753 = !DILocation(line: 4668, column: 58, scope: !3740)
!3754 = !DILocation(line: 4669, column: 4, scope: !3740)
!3755 = !DILocation(line: 4669, column: 7, scope: !3740)
!3756 = !DILocation(line: 4669, column: 13, scope: !3740)
!3757 = !DILocation(line: 4665, column: 11, scope: !3741)
!3758 = !DILocalVariable(name: "val", scope: !3759, file: !1, line: 4672, type: !1585)
!3759 = distinct !DILexicalBlock(scope: !3740, file: !1, line: 4670, column: 2)
!3760 = !DILocation(line: 4672, column: 18, scope: !3759)
!3761 = !DILocation(line: 4672, column: 24, scope: !3759)
!3762 = !DILocation(line: 4678, column: 14, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 4674, column: 8)
!3764 = !DILocation(line: 4678, column: 10, scope: !3763)
!3765 = !DILocation(line: 4680, column: 34, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 4680, column: 8)
!3767 = !DILocation(line: 4680, column: 31, scope: !3766)
!3768 = !DILocation(line: 4680, column: 8, scope: !3759)
!3769 = !DILocation(line: 4683, column: 37, scope: !3770)
!3770 = distinct !DILexicalBlock(scope: !3766, file: !1, line: 4681, column: 6)
!3771 = !DILocation(line: 4683, column: 34, scope: !3770)
!3772 = !DILocation(line: 4683, column: 51, scope: !3770)
!3773 = !DILocation(line: 4683, column: 12, scope: !3770)
!3774 = !DILocation(line: 4685, column: 12, scope: !3775)
!3775 = distinct !DILexicalBlock(scope: !3770, file: !1, line: 4685, column: 12)
!3776 = !DILocation(line: 4685, column: 17, scope: !3775)
!3777 = !DILocation(line: 4686, column: 5, scope: !3775)
!3778 = !DILocation(line: 4686, column: 9, scope: !3775)
!3779 = !DILocation(line: 4686, column: 38, scope: !3775)
!3780 = !DILocation(line: 4686, column: 51, scope: !3775)
!3781 = !DILocation(line: 4686, column: 34, scope: !3775)
!3782 = !DILocation(line: 4686, column: 13, scope: !3775)
!3783 = !DILocation(line: 4685, column: 12, scope: !3770)
!3784 = !DILocation(line: 4687, column: 35, scope: !3775)
!3785 = !DILocation(line: 4687, column: 32, scope: !3775)
!3786 = !DILocation(line: 4687, column: 49, scope: !3775)
!3787 = !DILocation(line: 4687, column: 10, scope: !3775)
!3788 = !DILocation(line: 4687, column: 7, scope: !3775)
!3789 = !DILocation(line: 4687, column: 3, scope: !3775)
!3790 = !DILocation(line: 4688, column: 6, scope: !3770)
!3791 = !DILocation(line: 4694, column: 8, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3759, file: !1, line: 4694, column: 8)
!3793 = !DILocation(line: 4694, column: 14, scope: !3792)
!3794 = !DILocation(line: 4695, column: 8, scope: !3792)
!3795 = !DILocation(line: 4695, column: 13, scope: !3792)
!3796 = !DILocation(line: 4695, column: 45, scope: !3792)
!3797 = !DILocation(line: 4695, column: 51, scope: !3792)
!3798 = !DILocation(line: 4695, column: 41, scope: !3792)
!3799 = !DILocation(line: 4695, column: 17, scope: !3792)
!3800 = !DILocation(line: 4696, column: 34, scope: !3792)
!3801 = !DILocation(line: 4696, column: 40, scope: !3792)
!3802 = !DILocation(line: 4696, column: 30, scope: !3792)
!3803 = !DILocation(line: 4696, column: 5, scope: !3792)
!3804 = !DILocation(line: 4694, column: 8, scope: !3759)
!3805 = !DILocation(line: 4697, column: 35, scope: !3792)
!3806 = !DILocation(line: 4697, column: 32, scope: !3792)
!3807 = !DILocation(line: 4697, column: 42, scope: !3792)
!3808 = !DILocation(line: 4697, column: 10, scope: !3792)
!3809 = !DILocation(line: 4697, column: 6, scope: !3792)
!3810 = !DILocation(line: 4699, column: 25, scope: !3759)
!3811 = !DILocation(line: 4699, column: 30, scope: !3759)
!3812 = !DILocation(line: 4699, column: 11, scope: !3759)
!3813 = !DILocation(line: 4699, column: 4, scope: !3759)
!3814 = !DILocation(line: 4701, column: 7, scope: !3741)
!3815 = !DILocation(line: 4704, column: 11, scope: !3816)
!3816 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4704, column: 11)
!3817 = !DILocation(line: 4704, column: 11, scope: !3741)
!3818 = !DILocation(line: 4705, column: 9, scope: !3816)
!3819 = !DILocation(line: 4705, column: 16, scope: !3816)
!3820 = !DILocation(line: 4705, column: 13, scope: !3816)
!3821 = !DILocation(line: 4705, column: 29, scope: !3816)
!3822 = !DILocation(line: 4705, column: 35, scope: !3816)
!3823 = !DILocation(line: 4705, column: 2, scope: !3816)
!3824 = !DILocation(line: 4708, column: 24, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4708, column: 11)
!3826 = !DILocation(line: 4708, column: 29, scope: !3825)
!3827 = !DILocation(line: 4708, column: 11, scope: !3825)
!3828 = !DILocation(line: 4708, column: 34, scope: !3825)
!3829 = !DILocation(line: 4708, column: 55, scope: !3825)
!3830 = !DILocation(line: 4708, column: 39, scope: !3825)
!3831 = !DILocation(line: 4708, column: 11, scope: !3741)
!3832 = !DILocation(line: 4709, column: 9, scope: !3825)
!3833 = !DILocation(line: 4709, column: 2, scope: !3825)
!3834 = !DILocation(line: 4712, column: 11, scope: !3835)
!3835 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4712, column: 11)
!3836 = !DILocation(line: 4712, column: 26, scope: !3835)
!3837 = !DILocation(line: 4713, column: 4, scope: !3835)
!3838 = !DILocation(line: 4713, column: 25, scope: !3835)
!3839 = !DILocation(line: 4713, column: 9, scope: !3835)
!3840 = !DILocation(line: 4714, column: 4, scope: !3835)
!3841 = !DILocation(line: 4714, column: 9, scope: !3835)
!3842 = !DILocation(line: 4715, column: 4, scope: !3835)
!3843 = !DILocation(line: 4715, column: 9, scope: !3835)
!3844 = !DILocation(line: 4716, column: 4, scope: !3835)
!3845 = !DILocation(line: 4716, column: 22, scope: !3835)
!3846 = !DILocation(line: 4716, column: 37, scope: !3835)
!3847 = !DILocation(line: 4716, column: 9, scope: !3835)
!3848 = !DILocation(line: 4717, column: 9, scope: !3835)
!3849 = !DILocation(line: 4717, column: 25, scope: !3835)
!3850 = !DILocation(line: 4717, column: 40, scope: !3835)
!3851 = !DILocation(line: 4717, column: 12, scope: !3835)
!3852 = !DILocation(line: 4718, column: 8, scope: !3835)
!3853 = !DILocation(line: 4718, column: 25, scope: !3835)
!3854 = !DILocation(line: 4718, column: 40, scope: !3835)
!3855 = !DILocation(line: 4718, column: 12, scope: !3835)
!3856 = !DILocation(line: 4719, column: 5, scope: !3835)
!3857 = !DILocation(line: 4719, column: 21, scope: !3835)
!3858 = !DILocation(line: 4719, column: 36, scope: !3835)
!3859 = !DILocation(line: 4719, column: 8, scope: !3835)
!3860 = !DILocation(line: 4712, column: 11, scope: !3741)
!3861 = !DILocation(line: 4720, column: 9, scope: !3835)
!3862 = !DILocation(line: 4720, column: 2, scope: !3835)
!3863 = !DILocation(line: 4723, column: 11, scope: !3864)
!3864 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4723, column: 11)
!3865 = !DILocation(line: 4723, column: 26, scope: !3864)
!3866 = !DILocation(line: 4724, column: 4, scope: !3864)
!3867 = !DILocation(line: 4724, column: 25, scope: !3864)
!3868 = !DILocation(line: 4724, column: 9, scope: !3864)
!3869 = !DILocation(line: 4725, column: 4, scope: !3864)
!3870 = !DILocation(line: 4725, column: 9, scope: !3864)
!3871 = !DILocation(line: 4726, column: 4, scope: !3864)
!3872 = !DILocation(line: 4726, column: 9, scope: !3864)
!3873 = !DILocation(line: 4727, column: 4, scope: !3864)
!3874 = !DILocation(line: 4727, column: 22, scope: !3864)
!3875 = !DILocation(line: 4727, column: 37, scope: !3864)
!3876 = !DILocation(line: 4727, column: 9, scope: !3864)
!3877 = !DILocation(line: 4728, column: 9, scope: !3864)
!3878 = !DILocation(line: 4728, column: 25, scope: !3864)
!3879 = !DILocation(line: 4728, column: 40, scope: !3864)
!3880 = !DILocation(line: 4728, column: 12, scope: !3864)
!3881 = !DILocation(line: 4729, column: 8, scope: !3864)
!3882 = !DILocation(line: 4729, column: 25, scope: !3864)
!3883 = !DILocation(line: 4729, column: 40, scope: !3864)
!3884 = !DILocation(line: 4729, column: 12, scope: !3864)
!3885 = !DILocation(line: 4730, column: 5, scope: !3864)
!3886 = !DILocation(line: 4730, column: 21, scope: !3864)
!3887 = !DILocation(line: 4730, column: 36, scope: !3864)
!3888 = !DILocation(line: 4730, column: 8, scope: !3864)
!3889 = !DILocation(line: 4723, column: 11, scope: !3741)
!3890 = !DILocation(line: 4731, column: 9, scope: !3864)
!3891 = !DILocation(line: 4731, column: 2, scope: !3864)
!3892 = !DILocation(line: 4733, column: 11, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4733, column: 11)
!3894 = !DILocation(line: 4733, column: 30, scope: !3893)
!3895 = !DILocation(line: 4733, column: 51, scope: !3893)
!3896 = !DILocation(line: 4733, column: 35, scope: !3893)
!3897 = !DILocation(line: 4733, column: 11, scope: !3741)
!3898 = !DILocalVariable(name: "cmp_mode", scope: !3899, file: !1, line: 4735, type: !3)
!3899 = distinct !DILexicalBlock(scope: !3893, file: !1, line: 4734, column: 2)
!3900 = !DILocation(line: 4735, column: 22, scope: !3899)
!3901 = !DILocation(line: 4735, column: 34, scope: !3899)
!3902 = !DILocation(line: 4735, column: 59, scope: !3899)
!3903 = !DILocation(line: 4736, column: 8, scope: !3899)
!3904 = !DILocation(line: 4737, column: 8, scope: !3899)
!3905 = !DILocalVariable(name: "temp", scope: !3899, file: !1, line: 4738, type: !1495)
!3906 = !DILocation(line: 4738, column: 8, scope: !3899)
!3907 = !DILocation(line: 4741, column: 8, scope: !3908)
!3908 = distinct !DILexicalBlock(scope: !3899, file: !1, line: 4741, column: 8)
!3909 = !DILocation(line: 4741, column: 26, scope: !3908)
!3910 = !DILocation(line: 4741, column: 29, scope: !3908)
!3911 = !DILocation(line: 4741, column: 8, scope: !3899)
!3912 = !DILocalVariable(name: "t", scope: !3913, file: !1, line: 4743, type: !1585)
!3913 = distinct !DILexicalBlock(scope: !3908, file: !1, line: 4742, column: 6)
!3914 = !DILocation(line: 4743, column: 22, scope: !3913)
!3915 = !DILocation(line: 4743, column: 26, scope: !3913)
!3916 = !DILocalVariable(name: "f", scope: !3913, file: !1, line: 4744, type: !1585)
!3917 = !DILocation(line: 4744, column: 22, scope: !3913)
!3918 = !DILocation(line: 4744, column: 26, scope: !3913)
!3919 = !DILocation(line: 4746, column: 12, scope: !3920)
!3920 = distinct !DILexicalBlock(scope: !3913, file: !1, line: 4746, column: 12)
!3921 = !DILocation(line: 4746, column: 14, scope: !3920)
!3922 = !DILocation(line: 4746, column: 34, scope: !3920)
!3923 = !DILocation(line: 4746, column: 37, scope: !3920)
!3924 = !DILocation(line: 4746, column: 39, scope: !3920)
!3925 = !DILocation(line: 4746, column: 12, scope: !3913)
!3926 = !DILocation(line: 4747, column: 17, scope: !3920)
!3927 = !DILocation(line: 4747, column: 15, scope: !3920)
!3928 = !DILocation(line: 4747, column: 10, scope: !3920)
!3929 = !DILocation(line: 4748, column: 17, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3920, file: !1, line: 4748, column: 17)
!3931 = !DILocation(line: 4748, column: 19, scope: !3930)
!3932 = !DILocation(line: 4748, column: 24, scope: !3930)
!3933 = !DILocation(line: 4748, column: 27, scope: !3930)
!3934 = !DILocation(line: 4748, column: 29, scope: !3930)
!3935 = !DILocation(line: 4748, column: 17, scope: !3920)
!3936 = !DILocalVariable(name: "tmp", scope: !3937, file: !1, line: 4750, type: !397)
!3937 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 4749, column: 3)
!3938 = !DILocation(line: 4750, column: 19, scope: !3937)
!3939 = !DILocation(line: 4751, column: 37, scope: !3937)
!3940 = !DILocation(line: 4751, column: 11, scope: !3937)
!3941 = !DILocation(line: 4751, column: 9, scope: !3937)
!3942 = !DILocation(line: 4752, column: 9, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3937, file: !1, line: 4752, column: 9)
!3944 = !DILocation(line: 4752, column: 13, scope: !3943)
!3945 = !DILocation(line: 4752, column: 9, scope: !3937)
!3946 = !DILocation(line: 4753, column: 7, scope: !3943)
!3947 = !DILocation(line: 4754, column: 12, scope: !3937)
!3948 = !DILocation(line: 4754, column: 10, scope: !3937)
!3949 = !DILocation(line: 4755, column: 3, scope: !3937)
!3950 = !DILocation(line: 4757, column: 3, scope: !3930)
!3951 = !DILocation(line: 4759, column: 40, scope: !3913)
!3952 = !DILocation(line: 4759, column: 46, scope: !3913)
!3953 = !DILocation(line: 4759, column: 52, scope: !3913)
!3954 = !DILocation(line: 4760, column: 12, scope: !3913)
!3955 = !DILocation(line: 4760, column: 27, scope: !3913)
!3956 = !DILocation(line: 4759, column: 15, scope: !3913)
!3957 = !DILocation(line: 4759, column: 8, scope: !3913)
!3958 = !DILocation(line: 4763, column: 8, scope: !3959)
!3959 = distinct !DILexicalBlock(scope: !3899, file: !1, line: 4763, column: 8)
!3960 = !DILocation(line: 4763, column: 17, scope: !3959)
!3961 = !DILocation(line: 4763, column: 8, scope: !3899)
!3962 = !DILocation(line: 4764, column: 17, scope: !3959)
!3963 = !DILocation(line: 4764, column: 15, scope: !3959)
!3964 = !DILocation(line: 4764, column: 6, scope: !3959)
!3965 = !DILocation(line: 4765, column: 42, scope: !3899)
!3966 = !DILocation(line: 4765, column: 58, scope: !3899)
!3967 = !DILocation(line: 4766, column: 9, scope: !3899)
!3968 = !DILocation(line: 4766, column: 19, scope: !3899)
!3969 = !DILocation(line: 4767, column: 7, scope: !3899)
!3970 = !DILocation(line: 4765, column: 11, scope: !3899)
!3971 = !DILocation(line: 4765, column: 9, scope: !3899)
!3972 = !DILocation(line: 4770, column: 8, scope: !3973)
!3973 = distinct !DILexicalBlock(scope: !3899, file: !1, line: 4770, column: 8)
!3974 = !DILocation(line: 4770, column: 8, scope: !3899)
!3975 = !DILocation(line: 4772, column: 12, scope: !3976)
!3976 = distinct !DILexicalBlock(scope: !3977, file: !1, line: 4772, column: 12)
!3977 = distinct !DILexicalBlock(scope: !3973, file: !1, line: 4771, column: 6)
!3978 = !DILocation(line: 4772, column: 12, scope: !3977)
!3979 = !DILocation(line: 4773, column: 10, scope: !3976)
!3980 = !DILocation(line: 4773, column: 18, scope: !3976)
!3981 = !DILocation(line: 4773, column: 15, scope: !3976)
!3982 = !DILocation(line: 4773, column: 31, scope: !3976)
!3983 = !DILocation(line: 4773, column: 37, scope: !3976)
!3984 = !DILocation(line: 4773, column: 3, scope: !3976)
!3985 = !DILocation(line: 4774, column: 17, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 4774, column: 17)
!3987 = !DILocation(line: 4774, column: 17, scope: !3976)
!3988 = !DILocation(line: 4775, column: 17, scope: !3986)
!3989 = !DILocation(line: 4775, column: 10, scope: !3986)
!3990 = !DILocation(line: 4776, column: 6, scope: !3977)
!3991 = !DILocation(line: 4777, column: 2, scope: !3899)
!3992 = !DILocation(line: 4778, column: 7, scope: !3741)
!3993 = !DILocation(line: 4781, column: 7, scope: !3741)
!3994 = !DILocation(line: 4782, column: 7, scope: !3741)
!3995 = !DILocation(line: 4783, column: 7, scope: !3741)
!3996 = !DILocation(line: 4784, column: 44, scope: !3741)
!3997 = !DILocation(line: 4784, column: 13, scope: !3741)
!3998 = !DILocation(line: 4784, column: 11, scope: !3741)
!3999 = !DILocation(line: 4785, column: 11, scope: !4000)
!4000 = distinct !DILexicalBlock(scope: !3741, file: !1, line: 4785, column: 11)
!4001 = !DILocation(line: 4785, column: 11, scope: !3741)
!4002 = !DILocalVariable(name: "elt_size", scope: !4003, file: !1, line: 4787, type: !1518)
!4003 = distinct !DILexicalBlock(scope: !4000, file: !1, line: 4786, column: 2)
!4004 = !DILocation(line: 4787, column: 15, scope: !4003)
!4005 = !DILocation(line: 4787, column: 26, scope: !4003)
!4006 = !DILocalVariable(name: "n_elts", scope: !4003, file: !1, line: 4788, type: !5)
!4007 = !DILocation(line: 4788, column: 13, scope: !4003)
!4008 = !DILocation(line: 4788, column: 23, scope: !4003)
!4009 = !DILocation(line: 4788, column: 46, scope: !4003)
!4010 = !DILocation(line: 4788, column: 44, scope: !4003)
!4011 = !DILocalVariable(name: "mask", scope: !4003, file: !1, line: 4789, type: !1518)
!4012 = !DILocation(line: 4789, column: 8, scope: !4003)
!4013 = !DILocation(line: 4789, column: 21, scope: !4003)
!4014 = !DILocation(line: 4789, column: 18, scope: !4003)
!4015 = !DILocation(line: 4789, column: 29, scope: !4003)
!4016 = !DILocation(line: 4791, column: 10, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 4791, column: 8)
!4018 = !DILocation(line: 4791, column: 25, scope: !4017)
!4019 = !DILocation(line: 4791, column: 23, scope: !4017)
!4020 = !DILocation(line: 4791, column: 8, scope: !4003)
!4021 = !DILocation(line: 4792, column: 13, scope: !4017)
!4022 = !DILocation(line: 4792, column: 6, scope: !4017)
!4023 = !DILocation(line: 4793, column: 9, scope: !4024)
!4024 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 4793, column: 8)
!4025 = !DILocation(line: 4793, column: 24, scope: !4024)
!4026 = !DILocation(line: 4793, column: 22, scope: !4024)
!4027 = !DILocation(line: 4793, column: 33, scope: !4024)
!4028 = !DILocation(line: 4793, column: 30, scope: !4024)
!4029 = !DILocation(line: 4793, column: 8, scope: !4003)
!4030 = !DILocation(line: 4794, column: 13, scope: !4024)
!4031 = !DILocation(line: 4794, column: 6, scope: !4024)
!4032 = !DILocation(line: 4796, column: 41, scope: !4003)
!4033 = !DILocation(line: 4796, column: 10, scope: !4003)
!4034 = !DILocation(line: 4796, column: 8, scope: !4003)
!4035 = !DILocation(line: 4797, column: 41, scope: !4003)
!4036 = !DILocation(line: 4797, column: 10, scope: !4003)
!4037 = !DILocation(line: 4797, column: 8, scope: !4003)
!4038 = !DILocation(line: 4798, column: 8, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 4798, column: 8)
!4040 = !DILocation(line: 4798, column: 23, scope: !4039)
!4041 = !DILocation(line: 4799, column: 8, scope: !4039)
!4042 = !DILocation(line: 4799, column: 11, scope: !4039)
!4043 = !DILocation(line: 4799, column: 26, scope: !4039)
!4044 = !DILocation(line: 4798, column: 8, scope: !4003)
!4045 = !DILocalVariable(name: "v", scope: !4046, file: !1, line: 4801, type: !1526)
!4046 = distinct !DILexicalBlock(scope: !4039, file: !1, line: 4800, column: 6)
!4047 = !DILocation(line: 4801, column: 14, scope: !4046)
!4048 = !DILocation(line: 4801, column: 31, scope: !4046)
!4049 = !DILocation(line: 4801, column: 18, scope: !4046)
!4050 = !DILocalVariable(name: "i", scope: !4046, file: !1, line: 4802, type: !5)
!4051 = !DILocation(line: 4802, column: 21, scope: !4046)
!4052 = !DILocation(line: 4804, column: 15, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4046, file: !1, line: 4804, column: 8)
!4054 = !DILocation(line: 4804, column: 13, scope: !4053)
!4055 = !DILocation(line: 4804, column: 20, scope: !4056)
!4056 = distinct !DILexicalBlock(scope: !4053, file: !1, line: 4804, column: 8)
!4057 = !DILocation(line: 4804, column: 24, scope: !4056)
!4058 = !DILocation(line: 4804, column: 22, scope: !4056)
!4059 = !DILocation(line: 4804, column: 8, scope: !4053)
!4060 = !DILocation(line: 4805, column: 23, scope: !4056)
!4061 = !DILocation(line: 4805, column: 44, scope: !4056)
!4062 = !DILocation(line: 4805, column: 41, scope: !4056)
!4063 = !DILocation(line: 4805, column: 38, scope: !4056)
!4064 = !DILocation(line: 4805, column: 36, scope: !4056)
!4065 = !DILocation(line: 4806, column: 11, scope: !4056)
!4066 = !DILocation(line: 4807, column: 11, scope: !4056)
!4067 = !DILocation(line: 4805, column: 3, scope: !4056)
!4068 = !DILocation(line: 4805, column: 20, scope: !4056)
!4069 = !DILocation(line: 4804, column: 33, scope: !4056)
!4070 = !DILocation(line: 4804, column: 8, scope: !4056)
!4071 = distinct !{!4071, !4059, !4072}
!4072 = !DILocation(line: 4807, column: 36, scope: !4053)
!4073 = !DILocation(line: 4808, column: 37, scope: !4046)
!4074 = !DILocation(line: 4808, column: 43, scope: !4046)
!4075 = !DILocation(line: 4808, column: 15, scope: !4046)
!4076 = !DILocation(line: 4808, column: 8, scope: !4046)
!4077 = !DILocation(line: 4810, column: 2, scope: !4003)
!4078 = !DILocation(line: 4811, column: 7, scope: !3741)
!4079 = !DILocation(line: 4814, column: 7, scope: !3741)
!4080 = !DILocation(line: 4815, column: 5, scope: !3741)
!4081 = !DILocation(line: 4817, column: 3, scope: !3715)
!4082 = !DILocation(line: 4818, column: 1, scope: !3715)
!4083 = distinct !DISubprogram(name: "simplify_gen_relational", scope: !1, file: !1, line: 341, type: !4084, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4084 = !DISubroutineType(types: !4085)
!4085 = !{!1495, !397, !3, !3, !1495, !1495}
!4086 = !DILocalVariable(name: "code", arg: 1, scope: !4083, file: !1, line: 341, type: !397)
!4087 = !DILocation(line: 341, column: 40, scope: !4083)
!4088 = !DILocalVariable(name: "mode", arg: 2, scope: !4083, file: !1, line: 341, type: !3)
!4089 = !DILocation(line: 341, column: 64, scope: !4083)
!4090 = !DILocalVariable(name: "cmp_mode", arg: 3, scope: !4083, file: !1, line: 342, type: !3)
!4091 = !DILocation(line: 342, column: 23, scope: !4083)
!4092 = !DILocalVariable(name: "op0", arg: 4, scope: !4083, file: !1, line: 342, type: !1495)
!4093 = !DILocation(line: 342, column: 37, scope: !4083)
!4094 = !DILocalVariable(name: "op1", arg: 5, scope: !4083, file: !1, line: 342, type: !1495)
!4095 = !DILocation(line: 342, column: 46, scope: !4083)
!4096 = !DILocalVariable(name: "tem", scope: !4083, file: !1, line: 344, type: !1495)
!4097 = !DILocation(line: 344, column: 7, scope: !4083)
!4098 = !DILocation(line: 346, column: 50, scope: !4099)
!4099 = distinct !DILexicalBlock(scope: !4083, file: !1, line: 346, column: 7)
!4100 = !DILocation(line: 346, column: 56, scope: !4099)
!4101 = !DILocation(line: 346, column: 62, scope: !4099)
!4102 = !DILocation(line: 347, column: 8, scope: !4099)
!4103 = !DILocation(line: 347, column: 13, scope: !4099)
!4104 = !DILocation(line: 346, column: 19, scope: !4099)
!4105 = !DILocation(line: 346, column: 17, scope: !4099)
!4106 = !DILocation(line: 346, column: 9, scope: !4099)
!4107 = !DILocation(line: 346, column: 7, scope: !4083)
!4108 = !DILocation(line: 348, column: 12, scope: !4099)
!4109 = !DILocation(line: 348, column: 5, scope: !4099)
!4110 = !DILocation(line: 350, column: 10, scope: !4083)
!4111 = !DILocation(line: 350, column: 3, scope: !4083)
!4112 = !DILocation(line: 351, column: 1, scope: !4083)
!4113 = distinct !DISubprogram(name: "simplify_relational_operation", scope: !1, file: !1, line: 3916, type: !4084, scopeLine: 3918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4114 = !DILocalVariable(name: "code", arg: 1, scope: !4113, file: !1, line: 3916, type: !397)
!4115 = !DILocation(line: 3916, column: 46, scope: !4113)
!4116 = !DILocalVariable(name: "mode", arg: 2, scope: !4113, file: !1, line: 3916, type: !3)
!4117 = !DILocation(line: 3916, column: 70, scope: !4113)
!4118 = !DILocalVariable(name: "cmp_mode", arg: 3, scope: !4113, file: !1, line: 3917, type: !3)
!4119 = !DILocation(line: 3917, column: 29, scope: !4113)
!4120 = !DILocalVariable(name: "op0", arg: 4, scope: !4113, file: !1, line: 3917, type: !1495)
!4121 = !DILocation(line: 3917, column: 43, scope: !4113)
!4122 = !DILocalVariable(name: "op1", arg: 5, scope: !4113, file: !1, line: 3917, type: !1495)
!4123 = !DILocation(line: 3917, column: 52, scope: !4113)
!4124 = !DILocalVariable(name: "tem", scope: !4113, file: !1, line: 3919, type: !1495)
!4125 = !DILocation(line: 3919, column: 7, scope: !4113)
!4126 = !DILocalVariable(name: "trueop0", scope: !4113, file: !1, line: 3919, type: !1495)
!4127 = !DILocation(line: 3919, column: 12, scope: !4113)
!4128 = !DILocalVariable(name: "trueop1", scope: !4113, file: !1, line: 3919, type: !1495)
!4129 = !DILocation(line: 3919, column: 21, scope: !4113)
!4130 = !DILocation(line: 3921, column: 7, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3921, column: 7)
!4132 = !DILocation(line: 3921, column: 16, scope: !4131)
!4133 = !DILocation(line: 3921, column: 7, scope: !4113)
!4134 = !DILocation(line: 3922, column: 16, scope: !4131)
!4135 = !DILocation(line: 3922, column: 14, scope: !4131)
!4136 = !DILocation(line: 3922, column: 5, scope: !4131)
!4137 = !DILocation(line: 3923, column: 7, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3923, column: 7)
!4139 = !DILocation(line: 3923, column: 16, scope: !4138)
!4140 = !DILocation(line: 3923, column: 7, scope: !4113)
!4141 = !DILocation(line: 3924, column: 16, scope: !4138)
!4142 = !DILocation(line: 3924, column: 14, scope: !4138)
!4143 = !DILocation(line: 3924, column: 5, scope: !4138)
!4144 = !DILocation(line: 3926, column: 46, scope: !4113)
!4145 = !DILocation(line: 3926, column: 52, scope: !4113)
!4146 = !DILocation(line: 3926, column: 62, scope: !4113)
!4147 = !DILocation(line: 3926, column: 67, scope: !4113)
!4148 = !DILocation(line: 3926, column: 9, scope: !4113)
!4149 = !DILocation(line: 3926, column: 7, scope: !4113)
!4150 = !DILocation(line: 3927, column: 7, scope: !4151)
!4151 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3927, column: 7)
!4152 = !DILocation(line: 3927, column: 7, scope: !4113)
!4153 = !DILocation(line: 3929, column: 11, scope: !4154)
!4154 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 3929, column: 11)
!4155 = distinct !DILexicalBlock(scope: !4151, file: !1, line: 3928, column: 5)
!4156 = !DILocation(line: 3929, column: 11, scope: !4155)
!4157 = !DILocation(line: 3931, column: 15, scope: !4158)
!4158 = distinct !DILexicalBlock(scope: !4159, file: !1, line: 3931, column: 15)
!4159 = distinct !DILexicalBlock(scope: !4154, file: !1, line: 3930, column: 2)
!4160 = !DILocation(line: 3931, column: 22, scope: !4158)
!4161 = !DILocation(line: 3931, column: 19, scope: !4158)
!4162 = !DILocation(line: 3931, column: 15, scope: !4159)
!4163 = !DILocation(line: 3932, column: 20, scope: !4158)
!4164 = !DILocation(line: 3932, column: 13, scope: !4158)
!4165 = !DILocation(line: 3940, column: 4, scope: !4159)
!4166 = !DILocation(line: 3943, column: 11, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 3943, column: 11)
!4168 = !DILocation(line: 3943, column: 11, scope: !4155)
!4169 = !DILocation(line: 3945, column: 8, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4171, file: !1, line: 3945, column: 8)
!4171 = distinct !DILexicalBlock(scope: !4167, file: !1, line: 3944, column: 2)
!4172 = !DILocation(line: 3945, column: 15, scope: !4170)
!4173 = !DILocation(line: 3945, column: 12, scope: !4170)
!4174 = !DILocation(line: 3945, column: 8, scope: !4171)
!4175 = !DILocation(line: 3946, column: 13, scope: !4170)
!4176 = !DILocation(line: 3946, column: 6, scope: !4170)
!4177 = !DILocation(line: 3965, column: 4, scope: !4171)
!4178 = !DILocation(line: 3969, column: 14, scope: !4155)
!4179 = !DILocation(line: 3969, column: 7, scope: !4155)
!4180 = !DILocation(line: 3973, column: 36, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3973, column: 7)
!4182 = !DILocation(line: 3973, column: 41, scope: !4181)
!4183 = !DILocation(line: 3973, column: 7, scope: !4181)
!4184 = !DILocation(line: 3974, column: 7, scope: !4181)
!4185 = !DILocation(line: 3974, column: 11, scope: !4181)
!4186 = !DILocation(line: 3974, column: 18, scope: !4181)
!4187 = !DILocation(line: 3974, column: 15, scope: !4181)
!4188 = !DILocation(line: 3974, column: 29, scope: !4181)
!4189 = !DILocation(line: 3974, column: 32, scope: !4181)
!4190 = !DILocation(line: 3974, column: 39, scope: !4181)
!4191 = !DILocation(line: 3974, column: 36, scope: !4181)
!4192 = !DILocation(line: 3973, column: 7, scope: !4113)
!4193 = !DILocation(line: 3975, column: 11, scope: !4181)
!4194 = !DILocation(line: 3975, column: 9, scope: !4181)
!4195 = !DILocation(line: 3975, column: 22, scope: !4181)
!4196 = !DILocation(line: 3975, column: 20, scope: !4181)
!4197 = !DILocation(line: 3975, column: 33, scope: !4181)
!4198 = !DILocation(line: 3975, column: 31, scope: !4181)
!4199 = !DILocation(line: 3975, column: 61, scope: !4181)
!4200 = !DILocation(line: 3975, column: 45, scope: !4181)
!4201 = !DILocation(line: 3975, column: 43, scope: !4181)
!4202 = !DILocation(line: 3975, column: 5, scope: !4181)
!4203 = !DILocation(line: 3978, column: 7, scope: !4204)
!4204 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3978, column: 7)
!4205 = !DILocation(line: 3978, column: 22, scope: !4204)
!4206 = !DILocation(line: 3978, column: 33, scope: !4204)
!4207 = !DILocation(line: 3978, column: 36, scope: !4204)
!4208 = !DILocation(line: 3978, column: 43, scope: !4204)
!4209 = !DILocation(line: 3978, column: 40, scope: !4204)
!4210 = !DILocation(line: 3978, column: 7, scope: !4113)
!4211 = !DILocation(line: 3979, column: 37, scope: !4204)
!4212 = !DILocation(line: 3979, column: 43, scope: !4204)
!4213 = !DILocation(line: 3980, column: 9, scope: !4204)
!4214 = !DILocation(line: 3980, column: 24, scope: !4204)
!4215 = !DILocation(line: 3979, column: 12, scope: !4204)
!4216 = !DILocation(line: 3979, column: 5, scope: !4204)
!4217 = !DILocation(line: 3982, column: 7, scope: !4218)
!4218 = distinct !DILexicalBlock(scope: !4113, file: !1, line: 3982, column: 7)
!4219 = !DILocation(line: 3982, column: 33, scope: !4218)
!4220 = !DILocation(line: 3983, column: 7, scope: !4218)
!4221 = !DILocation(line: 3983, column: 10, scope: !4218)
!4222 = !DILocation(line: 3982, column: 7, scope: !4113)
!4223 = !DILocation(line: 3984, column: 5, scope: !4218)
!4224 = !DILocation(line: 3986, column: 44, scope: !4113)
!4225 = !DILocation(line: 3986, column: 13, scope: !4113)
!4226 = !DILocation(line: 3986, column: 11, scope: !4113)
!4227 = !DILocation(line: 3987, column: 44, scope: !4113)
!4228 = !DILocation(line: 3987, column: 13, scope: !4113)
!4229 = !DILocation(line: 3987, column: 11, scope: !4113)
!4230 = !DILocation(line: 3988, column: 43, scope: !4113)
!4231 = !DILocation(line: 3988, column: 49, scope: !4113)
!4232 = !DILocation(line: 3988, column: 55, scope: !4113)
!4233 = !DILocation(line: 3989, column: 10, scope: !4113)
!4234 = !DILocation(line: 3989, column: 19, scope: !4113)
!4235 = !DILocation(line: 3988, column: 10, scope: !4113)
!4236 = !DILocation(line: 3988, column: 3, scope: !4113)
!4237 = !DILocation(line: 3990, column: 1, scope: !4113)
!4238 = distinct !DISubprogram(name: "simplify_replace_fn_rtx", scope: !1, file: !1, line: 359, type: !4239, scopeLine: 361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4239 = !DISubroutineType(types: !4240)
!4240 = !{!1495, !1495, !2588, !4241, !1606}
!4241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4242, size: 64)
!4242 = !DISubroutineType(types: !4243)
!4243 = !{!1495, !1495, !2588, !1606}
!4244 = !DILocalVariable(name: "x", arg: 1, scope: !4238, file: !1, line: 359, type: !1495)
!4245 = !DILocation(line: 359, column: 30, scope: !4238)
!4246 = !DILocalVariable(name: "old_rtx", arg: 2, scope: !4238, file: !1, line: 359, type: !2588)
!4247 = !DILocation(line: 359, column: 43, scope: !4238)
!4248 = !DILocalVariable(name: "fn", arg: 3, scope: !4238, file: !1, line: 360, type: !4241)
!4249 = !DILocation(line: 360, column: 11, scope: !4238)
!4250 = !DILocalVariable(name: "data", arg: 4, scope: !4238, file: !1, line: 360, type: !1606)
!4251 = !DILocation(line: 360, column: 47, scope: !4238)
!4252 = !DILocalVariable(name: "code", scope: !4238, file: !1, line: 362, type: !397)
!4253 = !DILocation(line: 362, column: 17, scope: !4238)
!4254 = !DILocation(line: 362, column: 24, scope: !4238)
!4255 = !DILocalVariable(name: "mode", scope: !4238, file: !1, line: 363, type: !3)
!4256 = !DILocation(line: 363, column: 21, scope: !4238)
!4257 = !DILocation(line: 363, column: 28, scope: !4238)
!4258 = !DILocalVariable(name: "op_mode", scope: !4238, file: !1, line: 364, type: !3)
!4259 = !DILocation(line: 364, column: 21, scope: !4238)
!4260 = !DILocalVariable(name: "fmt", scope: !4238, file: !1, line: 365, type: !1521)
!4261 = !DILocation(line: 365, column: 15, scope: !4238)
!4262 = !DILocalVariable(name: "op0", scope: !4238, file: !1, line: 366, type: !1495)
!4263 = !DILocation(line: 366, column: 7, scope: !4238)
!4264 = !DILocalVariable(name: "op1", scope: !4238, file: !1, line: 366, type: !1495)
!4265 = !DILocation(line: 366, column: 12, scope: !4238)
!4266 = !DILocalVariable(name: "op2", scope: !4238, file: !1, line: 366, type: !1495)
!4267 = !DILocation(line: 366, column: 17, scope: !4238)
!4268 = !DILocalVariable(name: "newx", scope: !4238, file: !1, line: 366, type: !1495)
!4269 = !DILocation(line: 366, column: 22, scope: !4238)
!4270 = !DILocalVariable(name: "op", scope: !4238, file: !1, line: 366, type: !1495)
!4271 = !DILocation(line: 366, column: 28, scope: !4238)
!4272 = !DILocalVariable(name: "vec", scope: !4238, file: !1, line: 367, type: !1526)
!4273 = !DILocation(line: 367, column: 9, scope: !4238)
!4274 = !DILocalVariable(name: "newvec", scope: !4238, file: !1, line: 367, type: !1526)
!4275 = !DILocation(line: 367, column: 14, scope: !4238)
!4276 = !DILocalVariable(name: "i", scope: !4238, file: !1, line: 368, type: !1518)
!4277 = !DILocation(line: 368, column: 7, scope: !4238)
!4278 = !DILocalVariable(name: "j", scope: !4238, file: !1, line: 368, type: !1518)
!4279 = !DILocation(line: 368, column: 10, scope: !4238)
!4280 = !DILocation(line: 370, column: 7, scope: !4281)
!4281 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 370, column: 7)
!4282 = !DILocation(line: 370, column: 7, scope: !4238)
!4283 = !DILocation(line: 372, column: 14, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 371, column: 5)
!4285 = !DILocation(line: 372, column: 18, scope: !4284)
!4286 = !DILocation(line: 372, column: 21, scope: !4284)
!4287 = !DILocation(line: 372, column: 30, scope: !4284)
!4288 = !DILocation(line: 372, column: 12, scope: !4284)
!4289 = !DILocation(line: 373, column: 11, scope: !4290)
!4290 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 373, column: 11)
!4291 = !DILocation(line: 373, column: 11, scope: !4284)
!4292 = !DILocation(line: 374, column: 9, scope: !4290)
!4293 = !DILocation(line: 374, column: 2, scope: !4290)
!4294 = !DILocation(line: 375, column: 5, scope: !4284)
!4295 = !DILocation(line: 376, column: 25, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4281, file: !1, line: 376, column: 12)
!4297 = !DILocation(line: 376, column: 28, scope: !4296)
!4298 = !DILocation(line: 376, column: 12, scope: !4296)
!4299 = !DILocation(line: 376, column: 12, scope: !4281)
!4300 = !DILocation(line: 377, column: 28, scope: !4296)
!4301 = !DILocation(line: 377, column: 22, scope: !4296)
!4302 = !DILocation(line: 377, column: 12, scope: !4296)
!4303 = !DILocation(line: 377, column: 5, scope: !4296)
!4304 = !DILocation(line: 379, column: 11, scope: !4238)
!4305 = !DILocation(line: 379, column: 3, scope: !4238)
!4306 = !DILocation(line: 382, column: 13, scope: !4307)
!4307 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 380, column: 5)
!4308 = !DILocation(line: 382, column: 11, scope: !4307)
!4309 = !DILocation(line: 383, column: 17, scope: !4307)
!4310 = !DILocation(line: 383, column: 15, scope: !4307)
!4311 = !DILocation(line: 384, column: 38, scope: !4307)
!4312 = !DILocation(line: 384, column: 43, scope: !4307)
!4313 = !DILocation(line: 384, column: 52, scope: !4307)
!4314 = !DILocation(line: 384, column: 56, scope: !4307)
!4315 = !DILocation(line: 384, column: 13, scope: !4307)
!4316 = !DILocation(line: 384, column: 11, scope: !4307)
!4317 = !DILocation(line: 385, column: 11, scope: !4318)
!4318 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 385, column: 11)
!4319 = !DILocation(line: 385, column: 18, scope: !4318)
!4320 = !DILocation(line: 385, column: 15, scope: !4318)
!4321 = !DILocation(line: 385, column: 11, scope: !4307)
!4322 = !DILocation(line: 386, column: 9, scope: !4318)
!4323 = !DILocation(line: 386, column: 2, scope: !4318)
!4324 = !DILocation(line: 387, column: 34, scope: !4307)
!4325 = !DILocation(line: 387, column: 40, scope: !4307)
!4326 = !DILocation(line: 387, column: 46, scope: !4307)
!4327 = !DILocation(line: 387, column: 51, scope: !4307)
!4328 = !DILocation(line: 387, column: 14, scope: !4307)
!4329 = !DILocation(line: 387, column: 7, scope: !4307)
!4330 = !DILocation(line: 391, column: 38, scope: !4307)
!4331 = !DILocation(line: 391, column: 51, scope: !4307)
!4332 = !DILocation(line: 391, column: 60, scope: !4307)
!4333 = !DILocation(line: 391, column: 64, scope: !4307)
!4334 = !DILocation(line: 391, column: 13, scope: !4307)
!4335 = !DILocation(line: 391, column: 11, scope: !4307)
!4336 = !DILocation(line: 392, column: 38, scope: !4307)
!4337 = !DILocation(line: 392, column: 51, scope: !4307)
!4338 = !DILocation(line: 392, column: 60, scope: !4307)
!4339 = !DILocation(line: 392, column: 64, scope: !4307)
!4340 = !DILocation(line: 392, column: 13, scope: !4307)
!4341 = !DILocation(line: 392, column: 11, scope: !4307)
!4342 = !DILocation(line: 393, column: 11, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 393, column: 11)
!4344 = !DILocation(line: 393, column: 18, scope: !4343)
!4345 = !DILocation(line: 393, column: 15, scope: !4343)
!4346 = !DILocation(line: 393, column: 30, scope: !4343)
!4347 = !DILocation(line: 393, column: 33, scope: !4343)
!4348 = !DILocation(line: 393, column: 40, scope: !4343)
!4349 = !DILocation(line: 393, column: 37, scope: !4343)
!4350 = !DILocation(line: 393, column: 11, scope: !4307)
!4351 = !DILocation(line: 394, column: 9, scope: !4343)
!4352 = !DILocation(line: 394, column: 2, scope: !4343)
!4353 = !DILocation(line: 395, column: 35, scope: !4307)
!4354 = !DILocation(line: 395, column: 41, scope: !4307)
!4355 = !DILocation(line: 395, column: 47, scope: !4307)
!4356 = !DILocation(line: 395, column: 52, scope: !4307)
!4357 = !DILocation(line: 395, column: 14, scope: !4307)
!4358 = !DILocation(line: 395, column: 7, scope: !4307)
!4359 = !DILocation(line: 399, column: 13, scope: !4307)
!4360 = !DILocation(line: 399, column: 11, scope: !4307)
!4361 = !DILocation(line: 400, column: 13, scope: !4307)
!4362 = !DILocation(line: 400, column: 11, scope: !4307)
!4363 = !DILocation(line: 401, column: 17, scope: !4307)
!4364 = !DILocation(line: 401, column: 32, scope: !4307)
!4365 = !DILocation(line: 401, column: 46, scope: !4307)
!4366 = !DILocation(line: 401, column: 63, scope: !4307)
!4367 = !DILocation(line: 401, column: 15, scope: !4307)
!4368 = !DILocation(line: 402, column: 38, scope: !4307)
!4369 = !DILocation(line: 402, column: 43, scope: !4307)
!4370 = !DILocation(line: 402, column: 52, scope: !4307)
!4371 = !DILocation(line: 402, column: 56, scope: !4307)
!4372 = !DILocation(line: 402, column: 13, scope: !4307)
!4373 = !DILocation(line: 402, column: 11, scope: !4307)
!4374 = !DILocation(line: 403, column: 38, scope: !4307)
!4375 = !DILocation(line: 403, column: 43, scope: !4307)
!4376 = !DILocation(line: 403, column: 52, scope: !4307)
!4377 = !DILocation(line: 403, column: 56, scope: !4307)
!4378 = !DILocation(line: 403, column: 13, scope: !4307)
!4379 = !DILocation(line: 403, column: 11, scope: !4307)
!4380 = !DILocation(line: 404, column: 11, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 404, column: 11)
!4382 = !DILocation(line: 404, column: 18, scope: !4381)
!4383 = !DILocation(line: 404, column: 15, scope: !4381)
!4384 = !DILocation(line: 404, column: 30, scope: !4381)
!4385 = !DILocation(line: 404, column: 33, scope: !4381)
!4386 = !DILocation(line: 404, column: 40, scope: !4381)
!4387 = !DILocation(line: 404, column: 37, scope: !4381)
!4388 = !DILocation(line: 404, column: 11, scope: !4307)
!4389 = !DILocation(line: 405, column: 9, scope: !4381)
!4390 = !DILocation(line: 405, column: 2, scope: !4381)
!4391 = !DILocation(line: 406, column: 39, scope: !4307)
!4392 = !DILocation(line: 406, column: 45, scope: !4307)
!4393 = !DILocation(line: 406, column: 51, scope: !4307)
!4394 = !DILocation(line: 406, column: 60, scope: !4307)
!4395 = !DILocation(line: 406, column: 65, scope: !4307)
!4396 = !DILocation(line: 406, column: 14, scope: !4307)
!4397 = !DILocation(line: 406, column: 7, scope: !4307)
!4398 = !DILocation(line: 410, column: 13, scope: !4307)
!4399 = !DILocation(line: 410, column: 11, scope: !4307)
!4400 = !DILocation(line: 411, column: 17, scope: !4307)
!4401 = !DILocation(line: 411, column: 15, scope: !4307)
!4402 = !DILocation(line: 412, column: 38, scope: !4307)
!4403 = !DILocation(line: 412, column: 43, scope: !4307)
!4404 = !DILocation(line: 412, column: 52, scope: !4307)
!4405 = !DILocation(line: 412, column: 56, scope: !4307)
!4406 = !DILocation(line: 412, column: 13, scope: !4307)
!4407 = !DILocation(line: 412, column: 11, scope: !4307)
!4408 = !DILocation(line: 413, column: 38, scope: !4307)
!4409 = !DILocation(line: 413, column: 51, scope: !4307)
!4410 = !DILocation(line: 413, column: 60, scope: !4307)
!4411 = !DILocation(line: 413, column: 64, scope: !4307)
!4412 = !DILocation(line: 413, column: 13, scope: !4307)
!4413 = !DILocation(line: 413, column: 11, scope: !4307)
!4414 = !DILocation(line: 414, column: 38, scope: !4307)
!4415 = !DILocation(line: 414, column: 51, scope: !4307)
!4416 = !DILocation(line: 414, column: 60, scope: !4307)
!4417 = !DILocation(line: 414, column: 64, scope: !4307)
!4418 = !DILocation(line: 414, column: 13, scope: !4307)
!4419 = !DILocation(line: 414, column: 11, scope: !4307)
!4420 = !DILocation(line: 415, column: 11, scope: !4421)
!4421 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 415, column: 11)
!4422 = !DILocation(line: 415, column: 18, scope: !4421)
!4423 = !DILocation(line: 415, column: 15, scope: !4421)
!4424 = !DILocation(line: 415, column: 30, scope: !4421)
!4425 = !DILocation(line: 415, column: 33, scope: !4421)
!4426 = !DILocation(line: 415, column: 40, scope: !4421)
!4427 = !DILocation(line: 415, column: 37, scope: !4421)
!4428 = !DILocation(line: 415, column: 52, scope: !4421)
!4429 = !DILocation(line: 415, column: 55, scope: !4421)
!4430 = !DILocation(line: 415, column: 62, scope: !4421)
!4431 = !DILocation(line: 415, column: 59, scope: !4421)
!4432 = !DILocation(line: 415, column: 11, scope: !4307)
!4433 = !DILocation(line: 416, column: 9, scope: !4421)
!4434 = !DILocation(line: 416, column: 2, scope: !4421)
!4435 = !DILocation(line: 417, column: 11, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 417, column: 11)
!4437 = !DILocation(line: 417, column: 19, scope: !4436)
!4438 = !DILocation(line: 417, column: 11, scope: !4307)
!4439 = !DILocation(line: 418, column: 12, scope: !4436)
!4440 = !DILocation(line: 418, column: 10, scope: !4436)
!4441 = !DILocation(line: 418, column: 2, scope: !4436)
!4442 = !DILocation(line: 419, column: 36, scope: !4307)
!4443 = !DILocation(line: 419, column: 42, scope: !4307)
!4444 = !DILocation(line: 419, column: 48, scope: !4307)
!4445 = !DILocation(line: 419, column: 57, scope: !4307)
!4446 = !DILocation(line: 419, column: 62, scope: !4307)
!4447 = !DILocation(line: 419, column: 67, scope: !4307)
!4448 = !DILocation(line: 419, column: 14, scope: !4307)
!4449 = !DILocation(line: 419, column: 7, scope: !4307)
!4450 = !DILocation(line: 422, column: 11, scope: !4451)
!4451 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 422, column: 11)
!4452 = !DILocation(line: 422, column: 16, scope: !4451)
!4453 = !DILocation(line: 422, column: 11, scope: !4307)
!4454 = !DILocation(line: 424, column: 35, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4451, file: !1, line: 423, column: 2)
!4456 = !DILocation(line: 424, column: 51, scope: !4455)
!4457 = !DILocation(line: 424, column: 60, scope: !4455)
!4458 = !DILocation(line: 424, column: 64, scope: !4455)
!4459 = !DILocation(line: 424, column: 10, scope: !4455)
!4460 = !DILocation(line: 424, column: 8, scope: !4455)
!4461 = !DILocation(line: 425, column: 8, scope: !4462)
!4462 = distinct !DILexicalBlock(scope: !4455, file: !1, line: 425, column: 8)
!4463 = !DILocation(line: 425, column: 15, scope: !4462)
!4464 = !DILocation(line: 425, column: 12, scope: !4462)
!4465 = !DILocation(line: 425, column: 8, scope: !4455)
!4466 = !DILocation(line: 426, column: 13, scope: !4462)
!4467 = !DILocation(line: 426, column: 6, scope: !4462)
!4468 = !DILocation(line: 427, column: 31, scope: !4455)
!4469 = !DILocation(line: 427, column: 45, scope: !4455)
!4470 = !DILocation(line: 428, column: 10, scope: !4455)
!4471 = !DILocation(line: 429, column: 10, scope: !4455)
!4472 = !DILocation(line: 427, column: 10, scope: !4455)
!4473 = !DILocation(line: 427, column: 8, scope: !4455)
!4474 = !DILocation(line: 430, column: 11, scope: !4455)
!4475 = !DILocation(line: 430, column: 17, scope: !4455)
!4476 = !DILocation(line: 430, column: 23, scope: !4455)
!4477 = !DILocation(line: 430, column: 4, scope: !4455)
!4478 = !DILocation(line: 432, column: 7, scope: !4307)
!4479 = !DILocation(line: 435, column: 11, scope: !4480)
!4480 = distinct !DILexicalBlock(scope: !4307, file: !1, line: 435, column: 11)
!4481 = !DILocation(line: 435, column: 16, scope: !4480)
!4482 = !DILocation(line: 435, column: 11, scope: !4307)
!4483 = !DILocation(line: 437, column: 35, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4480, file: !1, line: 436, column: 2)
!4485 = !DILocation(line: 437, column: 48, scope: !4484)
!4486 = !DILocation(line: 437, column: 57, scope: !4484)
!4487 = !DILocation(line: 437, column: 61, scope: !4484)
!4488 = !DILocation(line: 437, column: 10, scope: !4484)
!4489 = !DILocation(line: 437, column: 8, scope: !4484)
!4490 = !DILocation(line: 438, column: 8, scope: !4491)
!4491 = distinct !DILexicalBlock(scope: !4484, file: !1, line: 438, column: 8)
!4492 = !DILocation(line: 438, column: 15, scope: !4491)
!4493 = !DILocation(line: 438, column: 12, scope: !4491)
!4494 = !DILocation(line: 438, column: 8, scope: !4484)
!4495 = !DILocation(line: 439, column: 13, scope: !4491)
!4496 = !DILocation(line: 439, column: 6, scope: !4491)
!4497 = !DILocation(line: 440, column: 37, scope: !4484)
!4498 = !DILocation(line: 440, column: 40, scope: !4484)
!4499 = !DILocation(line: 440, column: 11, scope: !4484)
!4500 = !DILocation(line: 440, column: 4, scope: !4484)
!4501 = !DILocation(line: 442, column: 16, scope: !4502)
!4502 = distinct !DILexicalBlock(scope: !4480, file: !1, line: 442, column: 16)
!4503 = !DILocation(line: 442, column: 21, scope: !4502)
!4504 = !DILocation(line: 442, column: 16, scope: !4480)
!4505 = !DILocation(line: 444, column: 35, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4502, file: !1, line: 443, column: 2)
!4507 = !DILocation(line: 444, column: 48, scope: !4506)
!4508 = !DILocation(line: 444, column: 57, scope: !4506)
!4509 = !DILocation(line: 444, column: 61, scope: !4506)
!4510 = !DILocation(line: 444, column: 10, scope: !4506)
!4511 = !DILocation(line: 444, column: 8, scope: !4506)
!4512 = !DILocation(line: 445, column: 35, scope: !4506)
!4513 = !DILocation(line: 445, column: 48, scope: !4506)
!4514 = !DILocation(line: 445, column: 57, scope: !4506)
!4515 = !DILocation(line: 445, column: 61, scope: !4506)
!4516 = !DILocation(line: 445, column: 10, scope: !4506)
!4517 = !DILocation(line: 445, column: 8, scope: !4506)
!4518 = !DILocation(line: 448, column: 8, scope: !4519)
!4519 = distinct !DILexicalBlock(scope: !4506, file: !1, line: 448, column: 8)
!4520 = !DILocation(line: 448, column: 23, scope: !4519)
!4521 = !DILocation(line: 448, column: 31, scope: !4519)
!4522 = !DILocation(line: 448, column: 47, scope: !4519)
!4523 = !DILocation(line: 448, column: 62, scope: !4519)
!4524 = !DILocation(line: 448, column: 34, scope: !4519)
!4525 = !DILocation(line: 448, column: 8, scope: !4506)
!4526 = !DILocation(line: 449, column: 13, scope: !4519)
!4527 = !DILocation(line: 449, column: 6, scope: !4519)
!4528 = !DILocation(line: 451, column: 8, scope: !4529)
!4529 = distinct !DILexicalBlock(scope: !4506, file: !1, line: 451, column: 8)
!4530 = !DILocation(line: 451, column: 15, scope: !4529)
!4531 = !DILocation(line: 451, column: 12, scope: !4529)
!4532 = !DILocation(line: 451, column: 27, scope: !4529)
!4533 = !DILocation(line: 451, column: 30, scope: !4529)
!4534 = !DILocation(line: 451, column: 37, scope: !4529)
!4535 = !DILocation(line: 451, column: 34, scope: !4529)
!4536 = !DILocation(line: 451, column: 8, scope: !4506)
!4537 = !DILocation(line: 452, column: 13, scope: !4529)
!4538 = !DILocation(line: 452, column: 6, scope: !4529)
!4539 = !DILocation(line: 453, column: 11, scope: !4506)
!4540 = !DILocation(line: 453, column: 4, scope: !4506)
!4541 = !DILocation(line: 455, column: 7, scope: !4307)
!4542 = !DILocation(line: 458, column: 7, scope: !4307)
!4543 = !DILocation(line: 461, column: 10, scope: !4238)
!4544 = !DILocation(line: 461, column: 8, scope: !4238)
!4545 = !DILocation(line: 462, column: 9, scope: !4238)
!4546 = !DILocation(line: 462, column: 7, scope: !4238)
!4547 = !DILocation(line: 463, column: 10, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 463, column: 3)
!4549 = !DILocation(line: 463, column: 8, scope: !4548)
!4550 = !DILocation(line: 463, column: 15, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4548, file: !1, line: 463, column: 3)
!4552 = !DILocation(line: 463, column: 19, scope: !4551)
!4553 = !DILocation(line: 463, column: 3, scope: !4548)
!4554 = !DILocation(line: 464, column: 13, scope: !4551)
!4555 = !DILocation(line: 464, column: 17, scope: !4551)
!4556 = !DILocation(line: 464, column: 5, scope: !4551)
!4557 = !DILocation(line: 467, column: 8, scope: !4558)
!4558 = distinct !DILexicalBlock(scope: !4551, file: !1, line: 465, column: 7)
!4559 = !DILocation(line: 467, column: 6, scope: !4558)
!4560 = !DILocation(line: 468, column: 11, scope: !4558)
!4561 = !DILocation(line: 468, column: 9, scope: !4558)
!4562 = !DILocation(line: 469, column: 9, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4558, file: !1, line: 469, column: 2)
!4564 = !DILocation(line: 469, column: 7, scope: !4563)
!4565 = !DILocation(line: 469, column: 14, scope: !4566)
!4566 = distinct !DILexicalBlock(scope: !4563, file: !1, line: 469, column: 2)
!4567 = !DILocation(line: 469, column: 18, scope: !4566)
!4568 = !DILocation(line: 469, column: 16, scope: !4566)
!4569 = !DILocation(line: 469, column: 2, scope: !4563)
!4570 = !DILocation(line: 471, column: 36, scope: !4571)
!4571 = distinct !DILexicalBlock(scope: !4566, file: !1, line: 470, column: 4)
!4572 = !DILocation(line: 472, column: 8, scope: !4571)
!4573 = !DILocation(line: 472, column: 17, scope: !4571)
!4574 = !DILocation(line: 472, column: 21, scope: !4571)
!4575 = !DILocation(line: 471, column: 11, scope: !4571)
!4576 = !DILocation(line: 471, column: 9, scope: !4571)
!4577 = !DILocation(line: 473, column: 10, scope: !4578)
!4578 = distinct !DILexicalBlock(scope: !4571, file: !1, line: 473, column: 10)
!4579 = !DILocation(line: 473, column: 16, scope: !4578)
!4580 = !DILocation(line: 473, column: 13, scope: !4578)
!4581 = !DILocation(line: 473, column: 10, scope: !4571)
!4582 = !DILocation(line: 475, column: 7, scope: !4583)
!4583 = distinct !DILexicalBlock(scope: !4584, file: !1, line: 475, column: 7)
!4584 = distinct !DILexicalBlock(scope: !4578, file: !1, line: 474, column: 8)
!4585 = !DILocation(line: 475, column: 17, scope: !4583)
!4586 = !DILocation(line: 475, column: 14, scope: !4583)
!4587 = !DILocation(line: 475, column: 7, scope: !4584)
!4588 = !DILocation(line: 477, column: 36, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4583, file: !1, line: 476, column: 5)
!4590 = !DILocation(line: 477, column: 16, scope: !4589)
!4591 = !DILocation(line: 477, column: 14, scope: !4589)
!4592 = !DILocation(line: 478, column: 11, scope: !4593)
!4593 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 478, column: 11)
!4594 = !DILocation(line: 478, column: 16, scope: !4593)
!4595 = !DILocation(line: 478, column: 13, scope: !4593)
!4596 = !DILocation(line: 478, column: 11, scope: !4589)
!4597 = !DILocation(line: 479, column: 16, scope: !4593)
!4598 = !DILocation(line: 479, column: 14, scope: !4593)
!4599 = !DILocation(line: 479, column: 9, scope: !4593)
!4600 = !DILocation(line: 480, column: 24, scope: !4589)
!4601 = !DILocation(line: 480, column: 7, scope: !4589)
!4602 = !DILocation(line: 480, column: 22, scope: !4589)
!4603 = !DILocation(line: 481, column: 5, scope: !4589)
!4604 = !DILocation(line: 482, column: 27, scope: !4584)
!4605 = !DILocation(line: 482, column: 3, scope: !4584)
!4606 = !DILocation(line: 482, column: 25, scope: !4584)
!4607 = !DILocation(line: 483, column: 8, scope: !4584)
!4608 = !DILocation(line: 484, column: 4, scope: !4571)
!4609 = !DILocation(line: 469, column: 39, scope: !4566)
!4610 = !DILocation(line: 469, column: 2, scope: !4566)
!4611 = distinct !{!4611, !4569, !4612}
!4612 = !DILocation(line: 484, column: 4, scope: !4563)
!4613 = !DILocation(line: 485, column: 2, scope: !4558)
!4614 = !DILocation(line: 488, column: 6, scope: !4615)
!4615 = distinct !DILexicalBlock(scope: !4558, file: !1, line: 488, column: 6)
!4616 = !DILocation(line: 488, column: 6, scope: !4558)
!4617 = !DILocation(line: 490, column: 36, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4615, file: !1, line: 489, column: 4)
!4619 = !DILocation(line: 490, column: 49, scope: !4618)
!4620 = !DILocation(line: 490, column: 58, scope: !4618)
!4621 = !DILocation(line: 490, column: 62, scope: !4618)
!4622 = !DILocation(line: 490, column: 11, scope: !4618)
!4623 = !DILocation(line: 490, column: 9, scope: !4618)
!4624 = !DILocation(line: 491, column: 10, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4618, file: !1, line: 491, column: 10)
!4626 = !DILocation(line: 491, column: 16, scope: !4625)
!4627 = !DILocation(line: 491, column: 13, scope: !4625)
!4628 = !DILocation(line: 491, column: 10, scope: !4618)
!4629 = !DILocation(line: 493, column: 7, scope: !4630)
!4630 = distinct !DILexicalBlock(scope: !4631, file: !1, line: 493, column: 7)
!4631 = distinct !DILexicalBlock(scope: !4625, file: !1, line: 492, column: 8)
!4632 = !DILocation(line: 493, column: 12, scope: !4630)
!4633 = !DILocation(line: 493, column: 9, scope: !4630)
!4634 = !DILocation(line: 493, column: 7, scope: !4631)
!4635 = !DILocation(line: 494, column: 12, scope: !4630)
!4636 = !DILocation(line: 494, column: 10, scope: !4630)
!4637 = !DILocation(line: 494, column: 5, scope: !4630)
!4638 = !DILocation(line: 495, column: 20, scope: !4631)
!4639 = !DILocation(line: 495, column: 3, scope: !4631)
!4640 = !DILocation(line: 495, column: 18, scope: !4631)
!4641 = !DILocation(line: 496, column: 8, scope: !4631)
!4642 = !DILocation(line: 497, column: 4, scope: !4618)
!4643 = !DILocation(line: 498, column: 2, scope: !4558)
!4644 = !DILocation(line: 499, column: 7, scope: !4558)
!4645 = !DILocation(line: 463, column: 24, scope: !4551)
!4646 = !DILocation(line: 463, column: 3, scope: !4551)
!4647 = distinct !{!4647, !4553, !4648}
!4648 = !DILocation(line: 499, column: 7, scope: !4548)
!4649 = !DILocation(line: 500, column: 10, scope: !4238)
!4650 = !DILocation(line: 500, column: 3, scope: !4238)
!4651 = !DILocation(line: 501, column: 1, scope: !4238)
!4652 = distinct !DISubprogram(name: "simplify_gen_subreg", scope: !1, file: !1, line: 5447, type: !1493, scopeLine: 5449, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4653 = !DILocalVariable(name: "outermode", arg: 1, scope: !4652, file: !1, line: 5447, type: !3)
!4654 = !DILocation(line: 5447, column: 40, scope: !4652)
!4655 = !DILocalVariable(name: "op", arg: 2, scope: !4652, file: !1, line: 5447, type: !1495)
!4656 = !DILocation(line: 5447, column: 55, scope: !4652)
!4657 = !DILocalVariable(name: "innermode", arg: 3, scope: !4652, file: !1, line: 5448, type: !3)
!4658 = !DILocation(line: 5448, column: 26, scope: !4652)
!4659 = !DILocalVariable(name: "byte", arg: 4, scope: !4652, file: !1, line: 5448, type: !5)
!4660 = !DILocation(line: 5448, column: 50, scope: !4652)
!4661 = !DILocalVariable(name: "newx", scope: !4652, file: !1, line: 5450, type: !1495)
!4662 = !DILocation(line: 5450, column: 7, scope: !4652)
!4663 = !DILocation(line: 5452, column: 27, scope: !4652)
!4664 = !DILocation(line: 5452, column: 38, scope: !4652)
!4665 = !DILocation(line: 5452, column: 42, scope: !4652)
!4666 = !DILocation(line: 5452, column: 53, scope: !4652)
!4667 = !DILocation(line: 5452, column: 10, scope: !4652)
!4668 = !DILocation(line: 5452, column: 8, scope: !4652)
!4669 = !DILocation(line: 5453, column: 7, scope: !4670)
!4670 = distinct !DILexicalBlock(scope: !4652, file: !1, line: 5453, column: 7)
!4671 = !DILocation(line: 5453, column: 7, scope: !4652)
!4672 = !DILocation(line: 5454, column: 12, scope: !4670)
!4673 = !DILocation(line: 5454, column: 5, scope: !4670)
!4674 = !DILocation(line: 5456, column: 7, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4652, file: !1, line: 5456, column: 7)
!4676 = !DILocation(line: 5456, column: 21, scope: !4675)
!4677 = !DILocation(line: 5457, column: 7, scope: !4675)
!4678 = !DILocation(line: 5457, column: 10, scope: !4675)
!4679 = !DILocation(line: 5457, column: 24, scope: !4675)
!4680 = !DILocation(line: 5458, column: 7, scope: !4675)
!4681 = !DILocation(line: 5458, column: 10, scope: !4675)
!4682 = !DILocation(line: 5458, column: 24, scope: !4675)
!4683 = !DILocation(line: 5456, column: 7, scope: !4652)
!4684 = !DILocation(line: 5459, column: 5, scope: !4675)
!4685 = !DILocation(line: 5461, column: 24, scope: !4686)
!4686 = distinct !DILexicalBlock(scope: !4652, file: !1, line: 5461, column: 7)
!4687 = !DILocation(line: 5461, column: 35, scope: !4686)
!4688 = !DILocation(line: 5461, column: 46, scope: !4686)
!4689 = !DILocation(line: 5461, column: 50, scope: !4686)
!4690 = !DILocation(line: 5461, column: 7, scope: !4686)
!4691 = !DILocation(line: 5461, column: 7, scope: !4652)
!4692 = !DILocation(line: 5462, column: 28, scope: !4686)
!4693 = !DILocation(line: 5462, column: 39, scope: !4686)
!4694 = !DILocation(line: 5462, column: 43, scope: !4686)
!4695 = !DILocation(line: 5462, column: 12, scope: !4686)
!4696 = !DILocation(line: 5462, column: 5, scope: !4686)
!4697 = !DILocation(line: 5464, column: 3, scope: !4652)
!4698 = !DILocation(line: 5465, column: 1, scope: !4652)
!4699 = distinct !DISubprogram(name: "simplify_replace_rtx", scope: !1, file: !1, line: 507, type: !4700, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4700 = !DISubroutineType(types: !4701)
!4701 = !{!1495, !1495, !2588, !1495}
!4702 = !DILocalVariable(name: "x", arg: 1, scope: !4699, file: !1, line: 507, type: !1495)
!4703 = !DILocation(line: 507, column: 27, scope: !4699)
!4704 = !DILocalVariable(name: "old_rtx", arg: 2, scope: !4699, file: !1, line: 507, type: !2588)
!4705 = !DILocation(line: 507, column: 40, scope: !4699)
!4706 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !4699, file: !1, line: 507, type: !1495)
!4707 = !DILocation(line: 507, column: 53, scope: !4699)
!4708 = !DILocation(line: 509, column: 35, scope: !4699)
!4709 = !DILocation(line: 509, column: 38, scope: !4699)
!4710 = !DILocation(line: 509, column: 50, scope: !4699)
!4711 = !DILocation(line: 509, column: 10, scope: !4699)
!4712 = !DILocation(line: 509, column: 3, scope: !4699)
!4713 = distinct !DISubprogram(name: "simplify_const_unary_operation", scope: !1, file: !1, line: 1066, type: !3623, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!4714 = !DILocalVariable(name: "code", arg: 1, scope: !4713, file: !1, line: 1066, type: !397)
!4715 = !DILocation(line: 1066, column: 47, scope: !4713)
!4716 = !DILocalVariable(name: "mode", arg: 2, scope: !4713, file: !1, line: 1066, type: !3)
!4717 = !DILocation(line: 1066, column: 71, scope: !4713)
!4718 = !DILocalVariable(name: "op", arg: 3, scope: !4713, file: !1, line: 1067, type: !1495)
!4719 = !DILocation(line: 1067, column: 9, scope: !4713)
!4720 = !DILocalVariable(name: "op_mode", arg: 4, scope: !4713, file: !1, line: 1067, type: !3)
!4721 = !DILocation(line: 1067, column: 31, scope: !4713)
!4722 = !DILocalVariable(name: "width", scope: !4713, file: !1, line: 1069, type: !5)
!4723 = !DILocation(line: 1069, column: 16, scope: !4713)
!4724 = !DILocation(line: 1069, column: 24, scope: !4713)
!4725 = !DILocation(line: 1071, column: 7, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 1071, column: 7)
!4727 = !DILocation(line: 1071, column: 12, scope: !4726)
!4728 = !DILocation(line: 1071, column: 7, scope: !4713)
!4729 = !DILocation(line: 1073, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4726, file: !1, line: 1072, column: 5)
!4731 = !DILocation(line: 1074, column: 11, scope: !4732)
!4732 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1074, column: 11)
!4733 = !DILocation(line: 1074, column: 25, scope: !4732)
!4734 = !DILocation(line: 1074, column: 11, scope: !4730)
!4735 = !DILocation(line: 1076, column: 7, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4737, file: !1, line: 1076, column: 6)
!4737 = distinct !DILexicalBlock(scope: !4732, file: !1, line: 1075, column: 7)
!4738 = !DILocation(line: 1076, column: 6, scope: !4737)
!4739 = !DILocation(line: 1077, column: 4, scope: !4736)
!4740 = !DILocation(line: 1079, column: 4, scope: !4736)
!4741 = !DILocation(line: 1081, column: 7, scope: !4737)
!4742 = !DILocation(line: 1082, column: 11, scope: !4743)
!4743 = distinct !DILexicalBlock(scope: !4730, file: !1, line: 1082, column: 11)
!4744 = !DILocation(line: 1082, column: 28, scope: !4743)
!4745 = !DILocation(line: 1082, column: 31, scope: !4743)
!4746 = !DILocation(line: 1082, column: 45, scope: !4743)
!4747 = !DILocation(line: 1083, column: 4, scope: !4743)
!4748 = !DILocation(line: 1083, column: 7, scope: !4743)
!4749 = !DILocation(line: 1083, column: 21, scope: !4743)
!4750 = !DILocation(line: 1082, column: 11, scope: !4730)
!4751 = !DILocalVariable(name: "elt_size", scope: !4752, file: !1, line: 1085, type: !1518)
!4752 = distinct !DILexicalBlock(scope: !4743, file: !1, line: 1084, column: 2)
!4753 = !DILocation(line: 1085, column: 15, scope: !4752)
!4754 = !DILocation(line: 1085, column: 26, scope: !4752)
!4755 = !DILocalVariable(name: "n_elts", scope: !4752, file: !1, line: 1086, type: !5)
!4756 = !DILocation(line: 1086, column: 20, scope: !4752)
!4757 = !DILocation(line: 1086, column: 30, scope: !4752)
!4758 = !DILocation(line: 1086, column: 53, scope: !4752)
!4759 = !DILocation(line: 1086, column: 51, scope: !4752)
!4760 = !DILocalVariable(name: "v", scope: !4752, file: !1, line: 1087, type: !1526)
!4761 = !DILocation(line: 1087, column: 10, scope: !4752)
!4762 = !DILocation(line: 1087, column: 27, scope: !4752)
!4763 = !DILocation(line: 1087, column: 14, scope: !4752)
!4764 = !DILocalVariable(name: "i", scope: !4752, file: !1, line: 1088, type: !5)
!4765 = !DILocation(line: 1088, column: 17, scope: !4752)
!4766 = !DILocation(line: 1090, column: 8, scope: !4767)
!4767 = distinct !DILexicalBlock(scope: !4752, file: !1, line: 1090, column: 8)
!4768 = !DILocation(line: 1090, column: 22, scope: !4767)
!4769 = !DILocation(line: 1090, column: 8, scope: !4752)
!4770 = !DILocation(line: 1091, column: 13, scope: !4771)
!4771 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 1091, column: 6)
!4772 = !DILocation(line: 1091, column: 11, scope: !4771)
!4773 = !DILocation(line: 1091, column: 18, scope: !4774)
!4774 = distinct !DILexicalBlock(scope: !4771, file: !1, line: 1091, column: 6)
!4775 = !DILocation(line: 1091, column: 22, scope: !4774)
!4776 = !DILocation(line: 1091, column: 20, scope: !4774)
!4777 = !DILocation(line: 1091, column: 6, scope: !4771)
!4778 = !DILocation(line: 1092, column: 27, scope: !4774)
!4779 = !DILocation(line: 1092, column: 8, scope: !4774)
!4780 = !DILocation(line: 1092, column: 25, scope: !4774)
!4781 = !DILocation(line: 1091, column: 31, scope: !4774)
!4782 = !DILocation(line: 1091, column: 6, scope: !4774)
!4783 = distinct !{!4783, !4777, !4784}
!4784 = !DILocation(line: 1092, column: 27, scope: !4771)
!4785 = !DILocalVariable(name: "inmode", scope: !4786, file: !1, line: 1095, type: !3)
!4786 = distinct !DILexicalBlock(scope: !4767, file: !1, line: 1094, column: 6)
!4787 = !DILocation(line: 1095, column: 26, scope: !4786)
!4788 = !DILocation(line: 1095, column: 35, scope: !4786)
!4789 = !DILocalVariable(name: "in_elt_size", scope: !4786, file: !1, line: 1096, type: !1518)
!4790 = !DILocation(line: 1096, column: 19, scope: !4786)
!4791 = !DILocation(line: 1096, column: 33, scope: !4786)
!4792 = !DILocalVariable(name: "in_n_elts", scope: !4786, file: !1, line: 1097, type: !5)
!4793 = !DILocation(line: 1097, column: 24, scope: !4786)
!4794 = !DILocation(line: 1097, column: 37, scope: !4786)
!4795 = !DILocation(line: 1097, column: 62, scope: !4786)
!4796 = !DILocation(line: 1097, column: 60, scope: !4786)
!4797 = !DILocation(line: 1099, column: 8, scope: !4786)
!4798 = !DILocation(line: 1100, column: 8, scope: !4786)
!4799 = !DILocation(line: 1101, column: 15, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4786, file: !1, line: 1101, column: 8)
!4801 = !DILocation(line: 1101, column: 13, scope: !4800)
!4802 = !DILocation(line: 1101, column: 20, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4800, file: !1, line: 1101, column: 8)
!4804 = !DILocation(line: 1101, column: 24, scope: !4803)
!4805 = !DILocation(line: 1101, column: 22, scope: !4803)
!4806 = !DILocation(line: 1101, column: 8, scope: !4800)
!4807 = !DILocation(line: 1102, column: 29, scope: !4803)
!4808 = !DILocation(line: 1102, column: 10, scope: !4803)
!4809 = !DILocation(line: 1102, column: 27, scope: !4803)
!4810 = !DILocation(line: 1101, column: 33, scope: !4803)
!4811 = !DILocation(line: 1101, column: 8, scope: !4803)
!4812 = distinct !{!4812, !4806, !4813}
!4813 = !DILocation(line: 1102, column: 29, scope: !4800)
!4814 = !DILocation(line: 1104, column: 33, scope: !4752)
!4815 = !DILocation(line: 1104, column: 39, scope: !4752)
!4816 = !DILocation(line: 1104, column: 11, scope: !4752)
!4817 = !DILocation(line: 1104, column: 4, scope: !4752)
!4818 = !DILocation(line: 1106, column: 5, scope: !4730)
!4819 = !DILocation(line: 1108, column: 7, scope: !4820)
!4820 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 1108, column: 7)
!4821 = !DILocation(line: 1108, column: 28, scope: !4820)
!4822 = !DILocation(line: 1108, column: 31, scope: !4820)
!4823 = !DILocation(line: 1108, column: 45, scope: !4820)
!4824 = !DILocation(line: 1108, column: 7, scope: !4713)
!4825 = !DILocalVariable(name: "elt_size", scope: !4826, file: !1, line: 1110, type: !1518)
!4826 = distinct !DILexicalBlock(scope: !4820, file: !1, line: 1109, column: 5)
!4827 = !DILocation(line: 1110, column: 11, scope: !4826)
!4828 = !DILocation(line: 1110, column: 22, scope: !4826)
!4829 = !DILocalVariable(name: "n_elts", scope: !4826, file: !1, line: 1111, type: !5)
!4830 = !DILocation(line: 1111, column: 16, scope: !4826)
!4831 = !DILocation(line: 1111, column: 26, scope: !4826)
!4832 = !DILocation(line: 1111, column: 49, scope: !4826)
!4833 = !DILocation(line: 1111, column: 47, scope: !4826)
!4834 = !DILocalVariable(name: "opmode", scope: !4826, file: !1, line: 1112, type: !3)
!4835 = !DILocation(line: 1112, column: 25, scope: !4826)
!4836 = !DILocation(line: 1112, column: 34, scope: !4826)
!4837 = !DILocalVariable(name: "op_elt_size", scope: !4826, file: !1, line: 1113, type: !1518)
!4838 = !DILocation(line: 1113, column: 11, scope: !4826)
!4839 = !DILocation(line: 1113, column: 25, scope: !4826)
!4840 = !DILocalVariable(name: "op_n_elts", scope: !4826, file: !1, line: 1114, type: !5)
!4841 = !DILocation(line: 1114, column: 16, scope: !4826)
!4842 = !DILocation(line: 1114, column: 29, scope: !4826)
!4843 = !DILocation(line: 1114, column: 54, scope: !4826)
!4844 = !DILocation(line: 1114, column: 52, scope: !4826)
!4845 = !DILocalVariable(name: "v", scope: !4826, file: !1, line: 1115, type: !1526)
!4846 = !DILocation(line: 1115, column: 13, scope: !4826)
!4847 = !DILocation(line: 1115, column: 30, scope: !4826)
!4848 = !DILocation(line: 1115, column: 17, scope: !4826)
!4849 = !DILocalVariable(name: "i", scope: !4826, file: !1, line: 1116, type: !5)
!4850 = !DILocation(line: 1116, column: 20, scope: !4826)
!4851 = !DILocation(line: 1118, column: 7, scope: !4826)
!4852 = !DILocation(line: 1119, column: 14, scope: !4853)
!4853 = distinct !DILexicalBlock(scope: !4826, file: !1, line: 1119, column: 7)
!4854 = !DILocation(line: 1119, column: 12, scope: !4853)
!4855 = !DILocation(line: 1119, column: 19, scope: !4856)
!4856 = distinct !DILexicalBlock(scope: !4853, file: !1, line: 1119, column: 7)
!4857 = !DILocation(line: 1119, column: 23, scope: !4856)
!4858 = !DILocation(line: 1119, column: 21, scope: !4856)
!4859 = !DILocation(line: 1119, column: 7, scope: !4853)
!4860 = !DILocalVariable(name: "x", scope: !4861, file: !1, line: 1121, type: !1495)
!4861 = distinct !DILexicalBlock(scope: !4856, file: !1, line: 1120, column: 2)
!4862 = !DILocation(line: 1121, column: 8, scope: !4861)
!4863 = !DILocation(line: 1121, column: 38, scope: !4861)
!4864 = !DILocation(line: 1121, column: 44, scope: !4861)
!4865 = !DILocation(line: 1122, column: 10, scope: !4861)
!4866 = !DILocation(line: 1123, column: 10, scope: !4861)
!4867 = !DILocation(line: 1121, column: 12, scope: !4861)
!4868 = !DILocation(line: 1124, column: 9, scope: !4869)
!4869 = distinct !DILexicalBlock(scope: !4861, file: !1, line: 1124, column: 8)
!4870 = !DILocation(line: 1124, column: 8, scope: !4861)
!4871 = !DILocation(line: 1125, column: 6, scope: !4869)
!4872 = !DILocation(line: 1126, column: 23, scope: !4861)
!4873 = !DILocation(line: 1126, column: 4, scope: !4861)
!4874 = !DILocation(line: 1126, column: 21, scope: !4861)
!4875 = !DILocation(line: 1127, column: 2, scope: !4861)
!4876 = !DILocation(line: 1119, column: 32, scope: !4856)
!4877 = !DILocation(line: 1119, column: 7, scope: !4856)
!4878 = distinct !{!4878, !4859, !4879}
!4879 = !DILocation(line: 1127, column: 2, scope: !4853)
!4880 = !DILocation(line: 1128, column: 36, scope: !4826)
!4881 = !DILocation(line: 1128, column: 42, scope: !4826)
!4882 = !DILocation(line: 1128, column: 14, scope: !4826)
!4883 = !DILocation(line: 1128, column: 7, scope: !4826)
!4884 = !DILocation(line: 1135, column: 7, scope: !4885)
!4885 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 1135, column: 7)
!4886 = !DILocation(line: 1135, column: 12, scope: !4885)
!4887 = !DILocation(line: 1135, column: 21, scope: !4885)
!4888 = !DILocation(line: 1135, column: 24, scope: !4885)
!4889 = !DILocation(line: 1135, column: 38, scope: !4885)
!4890 = !DILocation(line: 1136, column: 7, scope: !4885)
!4891 = !DILocation(line: 1136, column: 11, scope: !4885)
!4892 = !DILocation(line: 1136, column: 25, scope: !4885)
!4893 = !DILocation(line: 1136, column: 41, scope: !4885)
!4894 = !DILocation(line: 1136, column: 44, scope: !4885)
!4895 = !DILocation(line: 1135, column: 7, scope: !4713)
!4896 = !DILocalVariable(name: "hv", scope: !4897, file: !1, line: 1138, type: !1585)
!4897 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 1137, column: 5)
!4898 = !DILocation(line: 1138, column: 21, scope: !4897)
!4899 = !DILocalVariable(name: "lv", scope: !4897, file: !1, line: 1138, type: !1585)
!4900 = !DILocation(line: 1138, column: 25, scope: !4897)
!4901 = !DILocalVariable(name: "d", scope: !4897, file: !1, line: 1139, type: !1676)
!4902 = !DILocation(line: 1139, column: 23, scope: !4897)
!4903 = !DILocation(line: 1141, column: 11, scope: !4904)
!4904 = distinct !DILexicalBlock(scope: !4897, file: !1, line: 1141, column: 11)
!4905 = !DILocation(line: 1141, column: 11, scope: !4897)
!4906 = !DILocation(line: 1142, column: 7, scope: !4904)
!4907 = !DILocation(line: 1142, column: 5, scope: !4904)
!4908 = !DILocation(line: 1142, column: 25, scope: !4904)
!4909 = !DILocation(line: 1142, column: 23, scope: !4904)
!4910 = !DILocation(line: 1142, column: 2, scope: !4904)
!4911 = !DILocation(line: 1144, column: 7, scope: !4904)
!4912 = !DILocation(line: 1144, column: 5, scope: !4904)
!4913 = !DILocation(line: 1144, column: 36, scope: !4904)
!4914 = !DILocation(line: 1144, column: 34, scope: !4904)
!4915 = !DILocation(line: 1146, column: 7, scope: !4897)
!4916 = !DILocation(line: 1147, column: 32, scope: !4897)
!4917 = !DILocation(line: 1147, column: 11, scope: !4897)
!4918 = !DILocation(line: 1148, column: 14, scope: !4897)
!4919 = !DILocation(line: 1148, column: 7, scope: !4897)
!4920 = !DILocation(line: 1150, column: 12, scope: !4921)
!4921 = distinct !DILexicalBlock(scope: !4885, file: !1, line: 1150, column: 12)
!4922 = !DILocation(line: 1150, column: 17, scope: !4921)
!4923 = !DILocation(line: 1150, column: 35, scope: !4921)
!4924 = !DILocation(line: 1150, column: 38, scope: !4921)
!4925 = !DILocation(line: 1150, column: 52, scope: !4921)
!4926 = !DILocation(line: 1151, column: 5, scope: !4921)
!4927 = !DILocation(line: 1151, column: 9, scope: !4921)
!4928 = !DILocation(line: 1151, column: 23, scope: !4921)
!4929 = !DILocation(line: 1152, column: 9, scope: !4921)
!4930 = !DILocation(line: 1152, column: 12, scope: !4921)
!4931 = !DILocation(line: 1150, column: 12, scope: !4885)
!4932 = !DILocalVariable(name: "hv", scope: !4933, file: !1, line: 1154, type: !1585)
!4933 = distinct !DILexicalBlock(scope: !4921, file: !1, line: 1153, column: 5)
!4934 = !DILocation(line: 1154, column: 21, scope: !4933)
!4935 = !DILocalVariable(name: "lv", scope: !4933, file: !1, line: 1154, type: !1585)
!4936 = !DILocation(line: 1154, column: 25, scope: !4933)
!4937 = !DILocalVariable(name: "d", scope: !4933, file: !1, line: 1155, type: !1676)
!4938 = !DILocation(line: 1155, column: 23, scope: !4933)
!4939 = !DILocation(line: 1157, column: 11, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4933, file: !1, line: 1157, column: 11)
!4941 = !DILocation(line: 1157, column: 11, scope: !4933)
!4942 = !DILocation(line: 1158, column: 7, scope: !4940)
!4943 = !DILocation(line: 1158, column: 5, scope: !4940)
!4944 = !DILocation(line: 1158, column: 25, scope: !4940)
!4945 = !DILocation(line: 1158, column: 23, scope: !4940)
!4946 = !DILocation(line: 1158, column: 2, scope: !4940)
!4947 = !DILocation(line: 1160, column: 7, scope: !4940)
!4948 = !DILocation(line: 1160, column: 5, scope: !4940)
!4949 = !DILocation(line: 1160, column: 36, scope: !4940)
!4950 = !DILocation(line: 1160, column: 34, scope: !4940)
!4951 = !DILocation(line: 1162, column: 11, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4933, file: !1, line: 1162, column: 11)
!4953 = !DILocation(line: 1162, column: 19, scope: !4952)
!4954 = !DILocation(line: 1162, column: 11, scope: !4933)
!4955 = !DILocation(line: 1166, column: 8, scope: !4956)
!4956 = distinct !DILexicalBlock(scope: !4957, file: !1, line: 1166, column: 8)
!4957 = distinct !DILexicalBlock(scope: !4952, file: !1, line: 1163, column: 2)
!4958 = !DILocation(line: 1166, column: 11, scope: !4956)
!4959 = !DILocation(line: 1166, column: 8, scope: !4957)
!4960 = !DILocation(line: 1167, column: 6, scope: !4956)
!4961 = !DILocation(line: 1168, column: 2, scope: !4957)
!4962 = !DILocation(line: 1169, column: 16, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4952, file: !1, line: 1169, column: 16)
!4964 = !DILocation(line: 1169, column: 43, scope: !4963)
!4965 = !DILocation(line: 1169, column: 16, scope: !4952)
!4966 = !DILocation(line: 1172, column: 5, scope: !4963)
!4967 = !DILocation(line: 1172, column: 16, scope: !4963)
!4968 = !DILocation(line: 1172, column: 13, scope: !4963)
!4969 = !DILocation(line: 1174, column: 7, scope: !4933)
!4970 = !DILocation(line: 1175, column: 32, scope: !4933)
!4971 = !DILocation(line: 1175, column: 11, scope: !4933)
!4972 = !DILocation(line: 1176, column: 14, scope: !4933)
!4973 = !DILocation(line: 1176, column: 7, scope: !4933)
!4974 = !DILocation(line: 1179, column: 7, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 1179, column: 7)
!4976 = !DILocation(line: 1180, column: 7, scope: !4975)
!4977 = !DILocation(line: 1180, column: 10, scope: !4975)
!4978 = !DILocation(line: 1180, column: 16, scope: !4975)
!4979 = !DILocation(line: 1180, column: 42, scope: !4975)
!4980 = !DILocation(line: 1180, column: 45, scope: !4975)
!4981 = !DILocation(line: 1180, column: 51, scope: !4975)
!4982 = !DILocation(line: 1179, column: 7, scope: !4713)
!4983 = !DILocalVariable(name: "arg0", scope: !4984, file: !1, line: 1182, type: !1585)
!4984 = distinct !DILexicalBlock(scope: !4975, file: !1, line: 1181, column: 5)
!4985 = !DILocation(line: 1182, column: 21, scope: !4984)
!4986 = !DILocation(line: 1182, column: 28, scope: !4984)
!4987 = !DILocalVariable(name: "val", scope: !4984, file: !1, line: 1183, type: !1585)
!4988 = !DILocation(line: 1183, column: 21, scope: !4984)
!4989 = !DILocation(line: 1185, column: 15, scope: !4984)
!4990 = !DILocation(line: 1185, column: 7, scope: !4984)
!4991 = !DILocation(line: 1188, column: 12, scope: !4992)
!4992 = distinct !DILexicalBlock(scope: !4984, file: !1, line: 1186, column: 2)
!4993 = !DILocation(line: 1188, column: 10, scope: !4992)
!4994 = !DILocation(line: 1188, column: 8, scope: !4992)
!4995 = !DILocation(line: 1189, column: 4, scope: !4992)
!4996 = !DILocation(line: 1192, column: 12, scope: !4992)
!4997 = !DILocation(line: 1192, column: 10, scope: !4992)
!4998 = !DILocation(line: 1192, column: 8, scope: !4992)
!4999 = !DILocation(line: 1193, column: 4, scope: !4992)
!5000 = !DILocation(line: 1196, column: 11, scope: !4992)
!5001 = !DILocation(line: 1196, column: 16, scope: !4992)
!5002 = !DILocation(line: 1196, column: 23, scope: !4992)
!5003 = !DILocation(line: 1196, column: 32, scope: !4992)
!5004 = !DILocation(line: 1196, column: 30, scope: !4992)
!5005 = !DILocation(line: 1196, column: 8, scope: !4992)
!5006 = !DILocation(line: 1197, column: 4, scope: !4992)
!5007 = !DILocation(line: 1202, column: 12, scope: !4992)
!5008 = !DILocation(line: 1202, column: 9, scope: !4992)
!5009 = !DILocation(line: 1203, column: 22, scope: !4992)
!5010 = !DILocation(line: 1203, column: 32, scope: !4992)
!5011 = !DILocation(line: 1203, column: 30, scope: !4992)
!5012 = !DILocation(line: 1203, column: 27, scope: !4992)
!5013 = !DILocation(line: 1203, column: 10, scope: !4992)
!5014 = !DILocation(line: 1203, column: 39, scope: !4992)
!5015 = !DILocation(line: 1203, column: 8, scope: !4992)
!5016 = !DILocation(line: 1204, column: 4, scope: !4992)
!5017 = !DILocation(line: 1207, column: 12, scope: !4992)
!5018 = !DILocation(line: 1207, column: 9, scope: !4992)
!5019 = !DILocation(line: 1208, column: 8, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1208, column: 8)
!5021 = !DILocation(line: 1208, column: 13, scope: !5020)
!5022 = !DILocation(line: 1208, column: 18, scope: !5020)
!5023 = !DILocation(line: 1208, column: 8, scope: !4992)
!5024 = !DILocation(line: 1211, column: 12, scope: !5020)
!5025 = !DILocation(line: 1211, column: 50, scope: !5020)
!5026 = !DILocation(line: 1211, column: 38, scope: !5020)
!5027 = !DILocation(line: 1211, column: 36, scope: !5020)
!5028 = !DILocation(line: 1211, column: 56, scope: !5020)
!5029 = !DILocation(line: 1211, column: 10, scope: !5020)
!5030 = !DILocation(line: 1212, column: 4, scope: !4992)
!5031 = !DILocation(line: 1215, column: 12, scope: !4992)
!5032 = !DILocation(line: 1215, column: 9, scope: !4992)
!5033 = !DILocation(line: 1216, column: 8, scope: !5034)
!5034 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1216, column: 8)
!5035 = !DILocation(line: 1216, column: 13, scope: !5034)
!5036 = !DILocation(line: 1216, column: 8, scope: !4992)
!5037 = !DILocation(line: 1221, column: 9, scope: !5038)
!5038 = distinct !DILexicalBlock(scope: !5039, file: !1, line: 1220, column: 12)
!5039 = distinct !DILexicalBlock(scope: !5034, file: !1, line: 1217, column: 6)
!5040 = !DILocation(line: 1221, column: 7, scope: !5038)
!5041 = !DILocation(line: 1222, column: 6, scope: !5039)
!5042 = !DILocation(line: 1224, column: 24, scope: !5034)
!5043 = !DILocation(line: 1224, column: 32, scope: !5034)
!5044 = !DILocation(line: 1224, column: 31, scope: !5034)
!5045 = !DILocation(line: 1224, column: 29, scope: !5034)
!5046 = !DILocation(line: 1224, column: 12, scope: !5034)
!5047 = !DILocation(line: 1224, column: 10, scope: !5034)
!5048 = !DILocation(line: 1225, column: 4, scope: !4992)
!5049 = !DILocation(line: 1228, column: 12, scope: !4992)
!5050 = !DILocation(line: 1228, column: 9, scope: !4992)
!5051 = !DILocation(line: 1229, column: 8, scope: !4992)
!5052 = !DILocation(line: 1230, column: 4, scope: !4992)
!5053 = !DILocation(line: 1230, column: 11, scope: !4992)
!5054 = !DILocation(line: 1231, column: 9, scope: !4992)
!5055 = !DILocation(line: 1231, column: 21, scope: !4992)
!5056 = !DILocation(line: 1231, column: 26, scope: !4992)
!5057 = !DILocation(line: 1231, column: 18, scope: !4992)
!5058 = distinct !{!5058, !5052, !5059}
!5059 = !DILocation(line: 1231, column: 28, scope: !4992)
!5060 = !DILocation(line: 1232, column: 4, scope: !4992)
!5061 = !DILocation(line: 1235, column: 12, scope: !4992)
!5062 = !DILocation(line: 1235, column: 9, scope: !4992)
!5063 = !DILocation(line: 1236, column: 8, scope: !4992)
!5064 = !DILocation(line: 1237, column: 4, scope: !4992)
!5065 = !DILocation(line: 1237, column: 11, scope: !4992)
!5066 = !DILocation(line: 1238, column: 9, scope: !4992)
!5067 = !DILocation(line: 1238, column: 21, scope: !4992)
!5068 = !DILocation(line: 1238, column: 26, scope: !4992)
!5069 = !DILocation(line: 1238, column: 18, scope: !4992)
!5070 = distinct !{!5070, !5064, !5071}
!5071 = !DILocation(line: 1238, column: 28, scope: !4992)
!5072 = !DILocation(line: 1239, column: 8, scope: !4992)
!5073 = !DILocation(line: 1240, column: 4, scope: !4992)
!5074 = !DILocalVariable(name: "s", scope: !5075, file: !1, line: 1244, type: !5)
!5075 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1243, column: 4)
!5076 = !DILocation(line: 1244, column: 19, scope: !5075)
!5077 = !DILocation(line: 1246, column: 10, scope: !5075)
!5078 = !DILocation(line: 1247, column: 13, scope: !5079)
!5079 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 1247, column: 6)
!5080 = !DILocation(line: 1247, column: 11, scope: !5079)
!5081 = !DILocation(line: 1247, column: 18, scope: !5082)
!5082 = distinct !DILexicalBlock(scope: !5079, file: !1, line: 1247, column: 6)
!5083 = !DILocation(line: 1247, column: 22, scope: !5082)
!5084 = !DILocation(line: 1247, column: 20, scope: !5082)
!5085 = !DILocation(line: 1247, column: 6, scope: !5079)
!5086 = !DILocalVariable(name: "d", scope: !5087, file: !1, line: 1249, type: !5)
!5087 = distinct !DILexicalBlock(scope: !5082, file: !1, line: 1248, column: 8)
!5088 = !DILocation(line: 1249, column: 16, scope: !5087)
!5089 = !DILocation(line: 1249, column: 20, scope: !5087)
!5090 = !DILocation(line: 1249, column: 28, scope: !5087)
!5091 = !DILocation(line: 1249, column: 26, scope: !5087)
!5092 = !DILocation(line: 1249, column: 30, scope: !5087)
!5093 = !DILocalVariable(name: "byte", scope: !5087, file: !1, line: 1250, type: !1568)
!5094 = !DILocation(line: 1250, column: 26, scope: !5087)
!5095 = !DILocation(line: 1251, column: 11, scope: !5087)
!5096 = !DILocation(line: 1251, column: 19, scope: !5087)
!5097 = !DILocation(line: 1251, column: 16, scope: !5087)
!5098 = !DILocation(line: 1251, column: 22, scope: !5087)
!5099 = !DILocation(line: 1251, column: 8, scope: !5087)
!5100 = !DILocation(line: 1252, column: 10, scope: !5087)
!5101 = !DILocation(line: 1252, column: 18, scope: !5087)
!5102 = !DILocation(line: 1252, column: 15, scope: !5087)
!5103 = !DILocation(line: 1252, column: 7, scope: !5087)
!5104 = !DILocation(line: 1253, column: 8, scope: !5087)
!5105 = !DILocation(line: 1247, column: 31, scope: !5082)
!5106 = !DILocation(line: 1247, column: 6, scope: !5082)
!5107 = distinct !{!5107, !5085, !5108}
!5108 = !DILocation(line: 1253, column: 8, scope: !5079)
!5109 = !DILocation(line: 1255, column: 4, scope: !4992)
!5110 = !DILocation(line: 1258, column: 10, scope: !4992)
!5111 = !DILocation(line: 1258, column: 8, scope: !4992)
!5112 = !DILocation(line: 1259, column: 4, scope: !4992)
!5113 = !DILocation(line: 1264, column: 4, scope: !4992)
!5114 = !DILocation(line: 1265, column: 8, scope: !5115)
!5115 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1265, column: 8)
!5116 = !DILocation(line: 1265, column: 35, scope: !5115)
!5117 = !DILocation(line: 1265, column: 8, scope: !4992)
!5118 = !DILocation(line: 1270, column: 8, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5115, file: !1, line: 1266, column: 6)
!5120 = !DILocation(line: 1271, column: 14, scope: !5119)
!5121 = !DILocation(line: 1271, column: 12, scope: !5119)
!5122 = !DILocation(line: 1272, column: 6, scope: !5119)
!5123 = !DILocation(line: 1273, column: 13, scope: !5124)
!5124 = distinct !DILexicalBlock(scope: !5115, file: !1, line: 1273, column: 13)
!5125 = !DILocation(line: 1273, column: 40, scope: !5124)
!5126 = !DILocation(line: 1273, column: 13, scope: !5115)
!5127 = !DILocation(line: 1274, column: 12, scope: !5124)
!5128 = !DILocation(line: 1274, column: 45, scope: !5124)
!5129 = !DILocation(line: 1274, column: 42, scope: !5124)
!5130 = !DILocation(line: 1274, column: 19, scope: !5124)
!5131 = !DILocation(line: 1274, column: 17, scope: !5124)
!5132 = !DILocation(line: 1274, column: 10, scope: !5124)
!5133 = !DILocation(line: 1274, column: 6, scope: !5124)
!5134 = !DILocation(line: 1276, column: 6, scope: !5124)
!5135 = !DILocation(line: 1277, column: 4, scope: !4992)
!5136 = !DILocation(line: 1280, column: 8, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1280, column: 8)
!5138 = !DILocation(line: 1280, column: 16, scope: !5137)
!5139 = !DILocation(line: 1280, column: 8, scope: !4992)
!5140 = !DILocation(line: 1281, column: 16, scope: !5137)
!5141 = !DILocation(line: 1281, column: 14, scope: !5137)
!5142 = !DILocation(line: 1281, column: 6, scope: !5137)
!5143 = !DILocation(line: 1282, column: 8, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !4992, file: !1, line: 1282, column: 8)
!5145 = !DILocation(line: 1282, column: 35, scope: !5144)
!5146 = !DILocation(line: 1282, column: 8, scope: !4992)
!5147 = !DILocation(line: 1287, column: 8, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 1283, column: 6)
!5149 = !DILocation(line: 1288, column: 14, scope: !5148)
!5150 = !DILocation(line: 1288, column: 12, scope: !5148)
!5151 = !DILocation(line: 1289, column: 6, scope: !5148)
!5152 = !DILocation(line: 1290, column: 13, scope: !5153)
!5153 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 1290, column: 13)
!5154 = !DILocation(line: 1290, column: 40, scope: !5153)
!5155 = !DILocation(line: 1290, column: 13, scope: !5144)
!5156 = !DILocation(line: 1293, column: 5, scope: !5157)
!5157 = distinct !DILexicalBlock(scope: !5153, file: !1, line: 1291, column: 6)
!5158 = !DILocation(line: 1293, column: 38, scope: !5157)
!5159 = !DILocation(line: 1293, column: 35, scope: !5157)
!5160 = !DILocation(line: 1293, column: 12, scope: !5157)
!5161 = !DILocation(line: 1293, column: 10, scope: !5157)
!5162 = !DILocation(line: 1293, column: 3, scope: !5157)
!5163 = !DILocation(line: 1294, column: 12, scope: !5164)
!5164 = distinct !DILexicalBlock(scope: !5157, file: !1, line: 1294, column: 12)
!5165 = !DILocation(line: 1295, column: 30, scope: !5164)
!5166 = !DILocation(line: 1295, column: 57, scope: !5164)
!5167 = !DILocation(line: 1295, column: 26, scope: !5164)
!5168 = !DILocation(line: 1295, column: 5, scope: !5164)
!5169 = !DILocation(line: 1294, column: 12, scope: !5157)
!5170 = !DILocation(line: 1296, column: 31, scope: !5164)
!5171 = !DILocation(line: 1296, column: 28, scope: !5164)
!5172 = !DILocation(line: 1296, column: 7, scope: !5164)
!5173 = !DILocation(line: 1296, column: 3, scope: !5164)
!5174 = !DILocation(line: 1297, column: 6, scope: !5157)
!5175 = !DILocation(line: 1299, column: 6, scope: !5153)
!5176 = !DILocation(line: 1300, column: 4, scope: !4992)
!5177 = !DILocation(line: 1310, column: 4, scope: !4992)
!5178 = !DILocation(line: 1313, column: 4, scope: !4992)
!5179 = !DILocation(line: 1314, column: 2, scope: !4992)
!5180 = !DILocation(line: 1316, column: 28, scope: !4984)
!5181 = !DILocation(line: 1316, column: 33, scope: !4984)
!5182 = !DILocation(line: 1316, column: 14, scope: !4984)
!5183 = !DILocation(line: 1316, column: 7, scope: !4984)
!5184 = !DILocation(line: 1321, column: 12, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !4975, file: !1, line: 1321, column: 12)
!5186 = !DILocation(line: 1321, column: 26, scope: !5185)
!5187 = !DILocation(line: 1322, column: 5, scope: !5185)
!5188 = !DILocation(line: 1322, column: 8, scope: !5185)
!5189 = !DILocation(line: 1322, column: 14, scope: !5185)
!5190 = !DILocation(line: 1323, column: 5, scope: !5185)
!5191 = !DILocation(line: 1323, column: 9, scope: !5185)
!5192 = !DILocation(line: 1323, column: 23, scope: !5185)
!5193 = !DILocation(line: 1324, column: 9, scope: !5185)
!5194 = !DILocation(line: 1324, column: 12, scope: !5185)
!5195 = !DILocation(line: 1321, column: 12, scope: !4975)
!5196 = !DILocalVariable(name: "l1", scope: !5197, file: !1, line: 1326, type: !1568)
!5197 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1325, column: 5)
!5198 = !DILocation(line: 1326, column: 30, scope: !5197)
!5199 = !DILocalVariable(name: "lv", scope: !5197, file: !1, line: 1326, type: !1568)
!5200 = !DILocation(line: 1326, column: 34, scope: !5197)
!5201 = !DILocalVariable(name: "h1", scope: !5197, file: !1, line: 1327, type: !1585)
!5202 = !DILocation(line: 1327, column: 21, scope: !5197)
!5203 = !DILocalVariable(name: "hv", scope: !5197, file: !1, line: 1327, type: !1585)
!5204 = !DILocation(line: 1327, column: 25, scope: !5197)
!5205 = !DILocation(line: 1329, column: 11, scope: !5206)
!5206 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1329, column: 11)
!5207 = !DILocation(line: 1329, column: 25, scope: !5206)
!5208 = !DILocation(line: 1329, column: 11, scope: !5197)
!5209 = !DILocation(line: 1330, column: 7, scope: !5206)
!5210 = !DILocation(line: 1330, column: 5, scope: !5206)
!5211 = !DILocation(line: 1330, column: 35, scope: !5206)
!5212 = !DILocation(line: 1330, column: 33, scope: !5206)
!5213 = !DILocation(line: 1330, column: 2, scope: !5206)
!5214 = !DILocation(line: 1332, column: 7, scope: !5206)
!5215 = !DILocation(line: 1332, column: 5, scope: !5206)
!5216 = !DILocation(line: 1332, column: 25, scope: !5206)
!5217 = !DILocation(line: 1332, column: 23, scope: !5206)
!5218 = !DILocation(line: 1334, column: 15, scope: !5197)
!5219 = !DILocation(line: 1334, column: 7, scope: !5197)
!5220 = !DILocation(line: 1337, column: 11, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5197, file: !1, line: 1335, column: 2)
!5222 = !DILocation(line: 1337, column: 9, scope: !5221)
!5223 = !DILocation(line: 1337, column: 7, scope: !5221)
!5224 = !DILocation(line: 1338, column: 11, scope: !5221)
!5225 = !DILocation(line: 1338, column: 9, scope: !5221)
!5226 = !DILocation(line: 1338, column: 7, scope: !5221)
!5227 = !DILocation(line: 1339, column: 4, scope: !5221)
!5228 = !DILocation(line: 1342, column: 16, scope: !5221)
!5229 = !DILocation(line: 1342, column: 20, scope: !5221)
!5230 = !DILocation(line: 1342, column: 4, scope: !5221)
!5231 = !DILocation(line: 1343, column: 4, scope: !5221)
!5232 = !DILocation(line: 1346, column: 8, scope: !5233)
!5233 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1346, column: 8)
!5234 = !DILocation(line: 1346, column: 11, scope: !5233)
!5235 = !DILocation(line: 1346, column: 8, scope: !5221)
!5236 = !DILocation(line: 1347, column: 18, scope: !5233)
!5237 = !DILocation(line: 1347, column: 22, scope: !5233)
!5238 = !DILocation(line: 1347, column: 6, scope: !5233)
!5239 = !DILocation(line: 1349, column: 11, scope: !5233)
!5240 = !DILocation(line: 1349, column: 9, scope: !5233)
!5241 = !DILocation(line: 1349, column: 20, scope: !5233)
!5242 = !DILocation(line: 1349, column: 18, scope: !5233)
!5243 = !DILocation(line: 1350, column: 4, scope: !5221)
!5244 = !DILocation(line: 1353, column: 7, scope: !5221)
!5245 = !DILocation(line: 1354, column: 8, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1354, column: 8)
!5247 = !DILocation(line: 1354, column: 11, scope: !5246)
!5248 = !DILocation(line: 1354, column: 8, scope: !5221)
!5249 = !DILocation(line: 1356, column: 12, scope: !5250)
!5250 = distinct !DILexicalBlock(scope: !5251, file: !1, line: 1356, column: 12)
!5251 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 1355, column: 6)
!5252 = !DILocation(line: 1356, column: 15, scope: !5250)
!5253 = !DILocation(line: 1356, column: 12, scope: !5251)
!5254 = !DILocation(line: 1357, column: 6, scope: !5250)
!5255 = !DILocation(line: 1357, column: 3, scope: !5250)
!5256 = !DILocation(line: 1359, column: 45, scope: !5250)
!5257 = !DILocation(line: 1359, column: 51, scope: !5250)
!5258 = !DILocation(line: 1359, column: 50, scope: !5250)
!5259 = !DILocation(line: 1359, column: 48, scope: !5250)
!5260 = !DILocation(line: 1359, column: 33, scope: !5250)
!5261 = !DILocation(line: 1359, column: 31, scope: !5250)
!5262 = !DILocation(line: 1359, column: 55, scope: !5250)
!5263 = !DILocation(line: 1359, column: 8, scope: !5250)
!5264 = !DILocation(line: 1359, column: 6, scope: !5250)
!5265 = !DILocation(line: 1360, column: 6, scope: !5251)
!5266 = !DILocation(line: 1362, column: 23, scope: !5246)
!5267 = !DILocation(line: 1362, column: 29, scope: !5246)
!5268 = !DILocation(line: 1362, column: 28, scope: !5246)
!5269 = !DILocation(line: 1362, column: 26, scope: !5246)
!5270 = !DILocation(line: 1362, column: 11, scope: !5246)
!5271 = !DILocation(line: 1362, column: 33, scope: !5246)
!5272 = !DILocation(line: 1362, column: 9, scope: !5246)
!5273 = !DILocation(line: 1363, column: 4, scope: !5221)
!5274 = !DILocation(line: 1366, column: 7, scope: !5221)
!5275 = !DILocation(line: 1367, column: 8, scope: !5276)
!5276 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1367, column: 8)
!5277 = !DILocation(line: 1367, column: 11, scope: !5276)
!5278 = !DILocation(line: 1367, column: 8, scope: !5221)
!5279 = !DILocation(line: 1368, column: 11, scope: !5276)
!5280 = !DILocation(line: 1368, column: 49, scope: !5276)
!5281 = !DILocation(line: 1368, column: 37, scope: !5276)
!5282 = !DILocation(line: 1368, column: 35, scope: !5276)
!5283 = !DILocation(line: 1368, column: 53, scope: !5276)
!5284 = !DILocation(line: 1369, column: 8, scope: !5276)
!5285 = !DILocation(line: 1368, column: 9, scope: !5276)
!5286 = !DILocation(line: 1368, column: 6, scope: !5276)
!5287 = !DILocation(line: 1370, column: 13, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5276, file: !1, line: 1370, column: 13)
!5289 = !DILocation(line: 1370, column: 16, scope: !5288)
!5290 = !DILocation(line: 1370, column: 13, scope: !5276)
!5291 = !DILocation(line: 1371, column: 11, scope: !5288)
!5292 = !DILocation(line: 1371, column: 49, scope: !5288)
!5293 = !DILocation(line: 1371, column: 37, scope: !5288)
!5294 = !DILocation(line: 1371, column: 35, scope: !5288)
!5295 = !DILocation(line: 1371, column: 53, scope: !5288)
!5296 = !DILocation(line: 1371, column: 9, scope: !5288)
!5297 = !DILocation(line: 1371, column: 6, scope: !5288)
!5298 = !DILocation(line: 1373, column: 11, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5288, file: !1, line: 1372, column: 13)
!5300 = !DILocation(line: 1373, column: 9, scope: !5299)
!5301 = !DILocation(line: 1374, column: 4, scope: !5221)
!5302 = !DILocation(line: 1377, column: 7, scope: !5221)
!5303 = !DILocation(line: 1378, column: 8, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1378, column: 8)
!5305 = !DILocation(line: 1378, column: 11, scope: !5304)
!5306 = !DILocation(line: 1378, column: 8, scope: !5221)
!5307 = !DILocation(line: 1379, column: 23, scope: !5304)
!5308 = !DILocation(line: 1379, column: 29, scope: !5304)
!5309 = !DILocation(line: 1379, column: 28, scope: !5304)
!5310 = !DILocation(line: 1379, column: 26, scope: !5304)
!5311 = !DILocation(line: 1379, column: 11, scope: !5304)
!5312 = !DILocation(line: 1379, column: 9, scope: !5304)
!5313 = !DILocation(line: 1379, column: 6, scope: !5304)
!5314 = !DILocation(line: 1380, column: 13, scope: !5315)
!5315 = distinct !DILexicalBlock(scope: !5304, file: !1, line: 1380, column: 13)
!5316 = !DILocation(line: 1380, column: 16, scope: !5315)
!5317 = !DILocation(line: 1380, column: 13, scope: !5304)
!5318 = !DILocation(line: 1381, column: 48, scope: !5315)
!5319 = !DILocation(line: 1381, column: 54, scope: !5315)
!5320 = !DILocation(line: 1381, column: 53, scope: !5315)
!5321 = !DILocation(line: 1381, column: 51, scope: !5315)
!5322 = !DILocation(line: 1381, column: 36, scope: !5315)
!5323 = !DILocation(line: 1381, column: 34, scope: !5315)
!5324 = !DILocation(line: 1381, column: 11, scope: !5315)
!5325 = !DILocation(line: 1381, column: 9, scope: !5315)
!5326 = !DILocation(line: 1381, column: 6, scope: !5315)
!5327 = !DILocation(line: 1383, column: 11, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5315, file: !1, line: 1382, column: 13)
!5329 = !DILocation(line: 1383, column: 9, scope: !5328)
!5330 = !DILocation(line: 1384, column: 4, scope: !5221)
!5331 = !DILocation(line: 1387, column: 7, scope: !5221)
!5332 = !DILocation(line: 1388, column: 7, scope: !5221)
!5333 = !DILocation(line: 1389, column: 4, scope: !5221)
!5334 = !DILocation(line: 1389, column: 11, scope: !5221)
!5335 = !DILocation(line: 1390, column: 8, scope: !5221)
!5336 = !DILocation(line: 1390, column: 18, scope: !5221)
!5337 = !DILocation(line: 1390, column: 21, scope: !5221)
!5338 = !DILocation(line: 1390, column: 15, scope: !5221)
!5339 = distinct !{!5339, !5333, !5340}
!5340 = !DILocation(line: 1390, column: 23, scope: !5221)
!5341 = !DILocation(line: 1391, column: 4, scope: !5221)
!5342 = !DILocation(line: 1391, column: 11, scope: !5221)
!5343 = !DILocation(line: 1392, column: 8, scope: !5221)
!5344 = !DILocation(line: 1392, column: 18, scope: !5221)
!5345 = !DILocation(line: 1392, column: 21, scope: !5221)
!5346 = !DILocation(line: 1392, column: 15, scope: !5221)
!5347 = distinct !{!5347, !5341, !5348}
!5348 = !DILocation(line: 1392, column: 23, scope: !5221)
!5349 = !DILocation(line: 1393, column: 4, scope: !5221)
!5350 = !DILocation(line: 1396, column: 7, scope: !5221)
!5351 = !DILocation(line: 1397, column: 7, scope: !5221)
!5352 = !DILocation(line: 1398, column: 4, scope: !5221)
!5353 = !DILocation(line: 1398, column: 11, scope: !5221)
!5354 = !DILocation(line: 1399, column: 8, scope: !5221)
!5355 = !DILocation(line: 1399, column: 18, scope: !5221)
!5356 = !DILocation(line: 1399, column: 21, scope: !5221)
!5357 = !DILocation(line: 1399, column: 15, scope: !5221)
!5358 = distinct !{!5358, !5352, !5359}
!5359 = !DILocation(line: 1399, column: 23, scope: !5221)
!5360 = !DILocation(line: 1400, column: 4, scope: !5221)
!5361 = !DILocation(line: 1400, column: 11, scope: !5221)
!5362 = !DILocation(line: 1401, column: 8, scope: !5221)
!5363 = !DILocation(line: 1401, column: 18, scope: !5221)
!5364 = !DILocation(line: 1401, column: 21, scope: !5221)
!5365 = !DILocation(line: 1401, column: 15, scope: !5221)
!5366 = distinct !{!5366, !5360, !5367}
!5367 = !DILocation(line: 1401, column: 23, scope: !5221)
!5368 = !DILocation(line: 1402, column: 7, scope: !5221)
!5369 = !DILocation(line: 1403, column: 4, scope: !5221)
!5370 = !DILocalVariable(name: "s", scope: !5371, file: !1, line: 1407, type: !5)
!5371 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1406, column: 4)
!5372 = !DILocation(line: 1407, column: 19, scope: !5371)
!5373 = !DILocation(line: 1409, column: 9, scope: !5371)
!5374 = !DILocation(line: 1410, column: 9, scope: !5371)
!5375 = !DILocation(line: 1411, column: 13, scope: !5376)
!5376 = distinct !DILexicalBlock(scope: !5371, file: !1, line: 1411, column: 6)
!5377 = !DILocation(line: 1411, column: 11, scope: !5376)
!5378 = !DILocation(line: 1411, column: 18, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5376, file: !1, line: 1411, column: 6)
!5380 = !DILocation(line: 1411, column: 22, scope: !5379)
!5381 = !DILocation(line: 1411, column: 20, scope: !5379)
!5382 = !DILocation(line: 1411, column: 6, scope: !5376)
!5383 = !DILocalVariable(name: "d", scope: !5384, file: !1, line: 1413, type: !5)
!5384 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 1412, column: 8)
!5385 = !DILocation(line: 1413, column: 16, scope: !5384)
!5386 = !DILocation(line: 1413, column: 20, scope: !5384)
!5387 = !DILocation(line: 1413, column: 28, scope: !5384)
!5388 = !DILocation(line: 1413, column: 26, scope: !5384)
!5389 = !DILocation(line: 1413, column: 30, scope: !5384)
!5390 = !DILocalVariable(name: "byte", scope: !5384, file: !1, line: 1414, type: !1568)
!5391 = !DILocation(line: 1414, column: 26, scope: !5384)
!5392 = !DILocation(line: 1416, column: 7, scope: !5393)
!5393 = distinct !DILexicalBlock(scope: !5384, file: !1, line: 1416, column: 7)
!5394 = !DILocation(line: 1416, column: 9, scope: !5393)
!5395 = !DILocation(line: 1416, column: 7, scope: !5384)
!5396 = !DILocation(line: 1417, column: 13, scope: !5393)
!5397 = !DILocation(line: 1417, column: 19, scope: !5393)
!5398 = !DILocation(line: 1417, column: 16, scope: !5393)
!5399 = !DILocation(line: 1417, column: 22, scope: !5393)
!5400 = !DILocation(line: 1417, column: 10, scope: !5393)
!5401 = !DILocation(line: 1417, column: 5, scope: !5393)
!5402 = !DILocation(line: 1419, column: 13, scope: !5393)
!5403 = !DILocation(line: 1419, column: 20, scope: !5393)
!5404 = !DILocation(line: 1419, column: 22, scope: !5393)
!5405 = !DILocation(line: 1419, column: 16, scope: !5393)
!5406 = !DILocation(line: 1419, column: 49, scope: !5393)
!5407 = !DILocation(line: 1419, column: 10, scope: !5393)
!5408 = !DILocation(line: 1421, column: 7, scope: !5409)
!5409 = distinct !DILexicalBlock(scope: !5384, file: !1, line: 1421, column: 7)
!5410 = !DILocation(line: 1421, column: 9, scope: !5409)
!5411 = !DILocation(line: 1421, column: 7, scope: !5384)
!5412 = !DILocation(line: 1422, column: 11, scope: !5409)
!5413 = !DILocation(line: 1422, column: 19, scope: !5409)
!5414 = !DILocation(line: 1422, column: 16, scope: !5409)
!5415 = !DILocation(line: 1422, column: 8, scope: !5409)
!5416 = !DILocation(line: 1422, column: 5, scope: !5409)
!5417 = !DILocation(line: 1424, column: 11, scope: !5409)
!5418 = !DILocation(line: 1424, column: 20, scope: !5409)
!5419 = !DILocation(line: 1424, column: 22, scope: !5409)
!5420 = !DILocation(line: 1424, column: 16, scope: !5409)
!5421 = !DILocation(line: 1424, column: 8, scope: !5409)
!5422 = !DILocation(line: 1425, column: 8, scope: !5384)
!5423 = !DILocation(line: 1411, column: 31, scope: !5379)
!5424 = !DILocation(line: 1411, column: 6, scope: !5379)
!5425 = distinct !{!5425, !5382, !5426}
!5426 = !DILocation(line: 1425, column: 8, scope: !5376)
!5427 = !DILocation(line: 1427, column: 4, scope: !5221)
!5428 = !DILocation(line: 1431, column: 9, scope: !5221)
!5429 = !DILocation(line: 1431, column: 7, scope: !5221)
!5430 = !DILocation(line: 1431, column: 18, scope: !5221)
!5431 = !DILocation(line: 1431, column: 16, scope: !5221)
!5432 = !DILocation(line: 1432, column: 4, scope: !5221)
!5433 = !DILocation(line: 1435, column: 4, scope: !5221)
!5434 = !DILocation(line: 1437, column: 8, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1437, column: 8)
!5436 = !DILocation(line: 1437, column: 35, scope: !5435)
!5437 = !DILocation(line: 1437, column: 8, scope: !5221)
!5438 = !DILocation(line: 1438, column: 6, scope: !5435)
!5439 = !DILocation(line: 1440, column: 7, scope: !5221)
!5440 = !DILocation(line: 1441, column: 9, scope: !5221)
!5441 = !DILocation(line: 1441, column: 14, scope: !5221)
!5442 = !DILocation(line: 1441, column: 12, scope: !5221)
!5443 = !DILocation(line: 1441, column: 7, scope: !5221)
!5444 = !DILocation(line: 1442, column: 4, scope: !5221)
!5445 = !DILocation(line: 1445, column: 8, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5221, file: !1, line: 1445, column: 8)
!5447 = !DILocation(line: 1445, column: 16, scope: !5446)
!5448 = !DILocation(line: 1446, column: 8, scope: !5446)
!5449 = !DILocation(line: 1446, column: 11, scope: !5446)
!5450 = !DILocation(line: 1446, column: 38, scope: !5446)
!5451 = !DILocation(line: 1445, column: 8, scope: !5221)
!5452 = !DILocation(line: 1447, column: 6, scope: !5446)
!5453 = !DILocation(line: 1450, column: 13, scope: !5454)
!5454 = distinct !DILexicalBlock(scope: !5446, file: !1, line: 1449, column: 6)
!5455 = !DILocation(line: 1450, column: 18, scope: !5454)
!5456 = !DILocation(line: 1450, column: 16, scope: !5454)
!5457 = !DILocation(line: 1450, column: 11, scope: !5454)
!5458 = !DILocation(line: 1451, column: 12, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5454, file: !1, line: 1451, column: 12)
!5460 = !DILocation(line: 1451, column: 39, scope: !5459)
!5461 = !DILocation(line: 1452, column: 5, scope: !5459)
!5462 = !DILocation(line: 1452, column: 9, scope: !5459)
!5463 = !DILocation(line: 1453, column: 12, scope: !5459)
!5464 = !DILocation(line: 1453, column: 39, scope: !5459)
!5465 = !DILocation(line: 1453, column: 8, scope: !5459)
!5466 = !DILocation(line: 1452, column: 12, scope: !5459)
!5467 = !DILocation(line: 1453, column: 46, scope: !5459)
!5468 = !DILocation(line: 1451, column: 12, scope: !5454)
!5469 = !DILocation(line: 1454, column: 30, scope: !5459)
!5470 = !DILocation(line: 1454, column: 27, scope: !5459)
!5471 = !DILocation(line: 1454, column: 6, scope: !5459)
!5472 = !DILocation(line: 1454, column: 3, scope: !5459)
!5473 = !DILocation(line: 1456, column: 13, scope: !5454)
!5474 = !DILocation(line: 1456, column: 11, scope: !5454)
!5475 = !DILocation(line: 1458, column: 4, scope: !5221)
!5476 = !DILocation(line: 1461, column: 4, scope: !5221)
!5477 = !DILocation(line: 1464, column: 4, scope: !5221)
!5478 = !DILocation(line: 1467, column: 34, scope: !5197)
!5479 = !DILocation(line: 1467, column: 38, scope: !5197)
!5480 = !DILocation(line: 1467, column: 42, scope: !5197)
!5481 = !DILocation(line: 1467, column: 14, scope: !5197)
!5482 = !DILocation(line: 1467, column: 7, scope: !5197)
!5483 = !DILocation(line: 1470, column: 12, scope: !5484)
!5484 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1470, column: 12)
!5485 = !DILocation(line: 1470, column: 26, scope: !5484)
!5486 = !DILocation(line: 1471, column: 5, scope: !5484)
!5487 = !DILocation(line: 1471, column: 8, scope: !5484)
!5488 = !DILocation(line: 1470, column: 12, scope: !5185)
!5489 = !DILocalVariable(name: "d", scope: !5490, file: !1, line: 1473, type: !1676)
!5490 = distinct !DILexicalBlock(scope: !5484, file: !1, line: 1472, column: 5)
!5491 = !DILocation(line: 1473, column: 23, scope: !5490)
!5492 = !DILocalVariable(name: "t", scope: !5490, file: !1, line: 1473, type: !1676)
!5493 = !DILocation(line: 1473, column: 26, scope: !5490)
!5494 = !DILocation(line: 1474, column: 7, scope: !5490)
!5495 = !DILocation(line: 1476, column: 15, scope: !5490)
!5496 = !DILocation(line: 1476, column: 7, scope: !5490)
!5497 = !DILocation(line: 1479, column: 8, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1479, column: 8)
!5499 = distinct !DILexicalBlock(scope: !5490, file: !1, line: 1477, column: 2)
!5500 = !DILocation(line: 1479, column: 27, scope: !5498)
!5501 = !DILocation(line: 1479, column: 30, scope: !5498)
!5502 = !DILocation(line: 1479, column: 8, scope: !5499)
!5503 = !DILocation(line: 1480, column: 6, scope: !5498)
!5504 = !DILocation(line: 1481, column: 19, scope: !5499)
!5505 = !DILocation(line: 1481, column: 4, scope: !5499)
!5506 = !DILocation(line: 1482, column: 8, scope: !5499)
!5507 = !DILocation(line: 1483, column: 4, scope: !5499)
!5508 = !DILocation(line: 1485, column: 8, scope: !5499)
!5509 = !DILocation(line: 1486, column: 4, scope: !5499)
!5510 = !DILocation(line: 1488, column: 8, scope: !5499)
!5511 = !DILocation(line: 1489, column: 4, scope: !5499)
!5512 = !DILocation(line: 1491, column: 29, scope: !5499)
!5513 = !DILocation(line: 1491, column: 8, scope: !5499)
!5514 = !DILocation(line: 1492, column: 4, scope: !5499)
!5515 = !DILocation(line: 1495, column: 4, scope: !5499)
!5516 = !DILocation(line: 1497, column: 4, scope: !5499)
!5517 = !DILocation(line: 1498, column: 4, scope: !5499)
!5518 = !DILocalVariable(name: "tmp", scope: !5519, file: !1, line: 1501, type: !5520)
!5519 = distinct !DILexicalBlock(scope: !5499, file: !1, line: 1500, column: 4)
!5520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, size: 256, elements: !1595)
!5521 = !DILocation(line: 1501, column: 11, scope: !5519)
!5522 = !DILocalVariable(name: "i", scope: !5519, file: !1, line: 1502, type: !1518)
!5523 = !DILocation(line: 1502, column: 10, scope: !5519)
!5524 = !DILocation(line: 1504, column: 22, scope: !5519)
!5525 = !DILocation(line: 1504, column: 31, scope: !5519)
!5526 = !DILocation(line: 1504, column: 6, scope: !5519)
!5527 = !DILocation(line: 1505, column: 13, scope: !5528)
!5528 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 1505, column: 6)
!5529 = !DILocation(line: 1505, column: 11, scope: !5528)
!5530 = !DILocation(line: 1505, column: 18, scope: !5531)
!5531 = distinct !DILexicalBlock(scope: !5528, file: !1, line: 1505, column: 6)
!5532 = !DILocation(line: 1505, column: 20, scope: !5531)
!5533 = !DILocation(line: 1505, column: 6, scope: !5528)
!5534 = !DILocation(line: 1506, column: 22, scope: !5531)
!5535 = !DILocation(line: 1506, column: 18, scope: !5531)
!5536 = !DILocation(line: 1506, column: 17, scope: !5531)
!5537 = !DILocation(line: 1506, column: 12, scope: !5531)
!5538 = !DILocation(line: 1506, column: 8, scope: !5531)
!5539 = !DILocation(line: 1506, column: 15, scope: !5531)
!5540 = !DILocation(line: 1505, column: 26, scope: !5531)
!5541 = !DILocation(line: 1505, column: 6, scope: !5531)
!5542 = distinct !{!5542, !5533, !5543}
!5543 = !DILocation(line: 1506, column: 23, scope: !5528)
!5544 = !DILocation(line: 1507, column: 28, scope: !5519)
!5545 = !DILocation(line: 1507, column: 33, scope: !5519)
!5546 = !DILocation(line: 1507, column: 6, scope: !5519)
!5547 = !DILocation(line: 1508, column: 6, scope: !5519)
!5548 = !DILocation(line: 1511, column: 4, scope: !5499)
!5549 = !DILocation(line: 1512, column: 2, scope: !5499)
!5550 = !DILocation(line: 1513, column: 14, scope: !5490)
!5551 = !DILocation(line: 1513, column: 7, scope: !5490)
!5552 = !DILocation(line: 1516, column: 12, scope: !5553)
!5553 = distinct !DILexicalBlock(scope: !5484, file: !1, line: 1516, column: 12)
!5554 = !DILocation(line: 1516, column: 26, scope: !5553)
!5555 = !DILocation(line: 1517, column: 5, scope: !5553)
!5556 = !DILocation(line: 1517, column: 8, scope: !5553)
!5557 = !DILocation(line: 1518, column: 5, scope: !5553)
!5558 = !DILocation(line: 1518, column: 8, scope: !5553)
!5559 = !DILocation(line: 1518, column: 30, scope: !5553)
!5560 = !DILocation(line: 1519, column: 5, scope: !5553)
!5561 = !DILocation(line: 1519, column: 8, scope: !5553)
!5562 = !DILocation(line: 1519, column: 14, scope: !5553)
!5563 = !DILocation(line: 1519, column: 42, scope: !5553)
!5564 = !DILocation(line: 1519, column: 45, scope: !5553)
!5565 = !DILocation(line: 1519, column: 51, scope: !5553)
!5566 = !DILocation(line: 1516, column: 12, scope: !5484)
!5567 = !DILocalVariable(name: "xh", scope: !5568, file: !1, line: 1528, type: !1585)
!5568 = distinct !DILexicalBlock(scope: !5553, file: !1, line: 1520, column: 5)
!5569 = !DILocation(line: 1528, column: 21, scope: !5568)
!5570 = !DILocalVariable(name: "xl", scope: !5568, file: !1, line: 1528, type: !1585)
!5571 = !DILocation(line: 1528, column: 25, scope: !5568)
!5572 = !DILocalVariable(name: "th", scope: !5568, file: !1, line: 1528, type: !1585)
!5573 = !DILocation(line: 1528, column: 29, scope: !5568)
!5574 = !DILocalVariable(name: "tl", scope: !5568, file: !1, line: 1528, type: !1585)
!5575 = !DILocation(line: 1528, column: 33, scope: !5568)
!5576 = !DILocalVariable(name: "x", scope: !5568, file: !1, line: 1529, type: !1676)
!5577 = !DILocation(line: 1529, column: 23, scope: !5568)
!5578 = !DILocalVariable(name: "t", scope: !5568, file: !1, line: 1529, type: !1676)
!5579 = !DILocation(line: 1529, column: 26, scope: !5568)
!5580 = !DILocation(line: 1530, column: 7, scope: !5568)
!5581 = !DILocation(line: 1531, column: 15, scope: !5568)
!5582 = !DILocation(line: 1531, column: 7, scope: !5568)
!5583 = !DILocation(line: 1534, column: 8, scope: !5584)
!5584 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1534, column: 8)
!5585 = distinct !DILexicalBlock(scope: !5568, file: !1, line: 1532, column: 2)
!5586 = !DILocation(line: 1534, column: 8, scope: !5585)
!5587 = !DILocation(line: 1535, column: 13, scope: !5584)
!5588 = !DILocation(line: 1535, column: 6, scope: !5584)
!5589 = !DILocation(line: 1538, column: 8, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1538, column: 8)
!5591 = !DILocation(line: 1538, column: 14, scope: !5590)
!5592 = !DILocation(line: 1538, column: 8, scope: !5585)
!5593 = !DILocation(line: 1541, column: 11, scope: !5594)
!5594 = distinct !DILexicalBlock(scope: !5590, file: !1, line: 1539, column: 6)
!5595 = !DILocation(line: 1541, column: 17, scope: !5594)
!5596 = !DILocation(line: 1541, column: 42, scope: !5594)
!5597 = !DILocation(line: 1541, column: 7, scope: !5594)
!5598 = !DILocation(line: 1541, column: 48, scope: !5594)
!5599 = !DILocation(line: 1540, column: 11, scope: !5594)
!5600 = !DILocation(line: 1542, column: 11, scope: !5594)
!5601 = !DILocation(line: 1543, column: 6, scope: !5594)
!5602 = !DILocation(line: 1546, column: 11, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5590, file: !1, line: 1545, column: 6)
!5604 = !DILocation(line: 1547, column: 45, scope: !5603)
!5605 = !DILocation(line: 1547, column: 51, scope: !5603)
!5606 = !DILocation(line: 1547, column: 41, scope: !5603)
!5607 = !DILocation(line: 1547, column: 57, scope: !5603)
!5608 = !DILocation(line: 1547, column: 11, scope: !5603)
!5609 = !DILocation(line: 1549, column: 37, scope: !5585)
!5610 = !DILocation(line: 1549, column: 41, scope: !5585)
!5611 = !DILocation(line: 1549, column: 4, scope: !5585)
!5612 = !DILocation(line: 1550, column: 8, scope: !5613)
!5613 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1550, column: 8)
!5614 = !DILocation(line: 1550, column: 8, scope: !5585)
!5615 = !DILocation(line: 1552, column: 13, scope: !5616)
!5616 = distinct !DILexicalBlock(scope: !5613, file: !1, line: 1551, column: 6)
!5617 = !DILocation(line: 1552, column: 11, scope: !5616)
!5618 = !DILocation(line: 1553, column: 13, scope: !5616)
!5619 = !DILocation(line: 1553, column: 11, scope: !5616)
!5620 = !DILocation(line: 1554, column: 8, scope: !5616)
!5621 = !DILocation(line: 1558, column: 8, scope: !5622)
!5622 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1558, column: 8)
!5623 = !DILocation(line: 1558, column: 14, scope: !5622)
!5624 = !DILocation(line: 1558, column: 8, scope: !5585)
!5625 = !DILocation(line: 1560, column: 36, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5622, file: !1, line: 1559, column: 6)
!5627 = !DILocation(line: 1560, column: 42, scope: !5626)
!5628 = !DILocation(line: 1560, column: 67, scope: !5626)
!5629 = !DILocation(line: 1560, column: 32, scope: !5626)
!5630 = !DILocation(line: 1560, column: 11, scope: !5626)
!5631 = !DILocation(line: 1561, column: 11, scope: !5626)
!5632 = !DILocation(line: 1562, column: 6, scope: !5626)
!5633 = !DILocation(line: 1565, column: 11, scope: !5634)
!5634 = distinct !DILexicalBlock(scope: !5622, file: !1, line: 1564, column: 6)
!5635 = !DILocation(line: 1566, column: 36, scope: !5634)
!5636 = !DILocation(line: 1566, column: 42, scope: !5634)
!5637 = !DILocation(line: 1566, column: 32, scope: !5634)
!5638 = !DILocation(line: 1566, column: 11, scope: !5634)
!5639 = !DILocation(line: 1568, column: 37, scope: !5585)
!5640 = !DILocation(line: 1568, column: 41, scope: !5585)
!5641 = !DILocation(line: 1568, column: 4, scope: !5585)
!5642 = !DILocation(line: 1569, column: 8, scope: !5643)
!5643 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1569, column: 8)
!5644 = !DILocation(line: 1569, column: 8, scope: !5585)
!5645 = !DILocation(line: 1571, column: 13, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5643, file: !1, line: 1570, column: 6)
!5647 = !DILocation(line: 1571, column: 11, scope: !5646)
!5648 = !DILocation(line: 1572, column: 13, scope: !5646)
!5649 = !DILocation(line: 1572, column: 11, scope: !5646)
!5650 = !DILocation(line: 1573, column: 8, scope: !5646)
!5651 = !DILocation(line: 1575, column: 4, scope: !5585)
!5652 = !DILocation(line: 1576, column: 4, scope: !5585)
!5653 = !DILocation(line: 1579, column: 8, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1579, column: 8)
!5655 = !DILocation(line: 1579, column: 29, scope: !5654)
!5656 = !DILocation(line: 1579, column: 32, scope: !5654)
!5657 = !DILocation(line: 1579, column: 8, scope: !5585)
!5658 = !DILocation(line: 1580, column: 13, scope: !5654)
!5659 = !DILocation(line: 1580, column: 6, scope: !5654)
!5660 = !DILocation(line: 1583, column: 8, scope: !5661)
!5661 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1583, column: 8)
!5662 = !DILocation(line: 1583, column: 14, scope: !5661)
!5663 = !DILocation(line: 1583, column: 8, scope: !5585)
!5664 = !DILocation(line: 1585, column: 11, scope: !5665)
!5665 = distinct !DILexicalBlock(scope: !5661, file: !1, line: 1584, column: 6)
!5666 = !DILocation(line: 1586, column: 11, scope: !5665)
!5667 = !DILocation(line: 1587, column: 6, scope: !5665)
!5668 = !DILocation(line: 1588, column: 13, scope: !5669)
!5669 = distinct !DILexicalBlock(scope: !5661, file: !1, line: 1588, column: 13)
!5670 = !DILocation(line: 1588, column: 19, scope: !5669)
!5671 = !DILocation(line: 1588, column: 13, scope: !5661)
!5672 = !DILocation(line: 1591, column: 11, scope: !5673)
!5673 = distinct !DILexicalBlock(scope: !5669, file: !1, line: 1589, column: 6)
!5674 = !DILocation(line: 1591, column: 17, scope: !5673)
!5675 = !DILocation(line: 1591, column: 7, scope: !5673)
!5676 = !DILocation(line: 1591, column: 44, scope: !5673)
!5677 = !DILocation(line: 1590, column: 11, scope: !5673)
!5678 = !DILocation(line: 1592, column: 11, scope: !5673)
!5679 = !DILocation(line: 1593, column: 6, scope: !5673)
!5680 = !DILocation(line: 1596, column: 11, scope: !5681)
!5681 = distinct !DILexicalBlock(scope: !5669, file: !1, line: 1595, column: 6)
!5682 = !DILocation(line: 1597, column: 44, scope: !5681)
!5683 = !DILocation(line: 1597, column: 41, scope: !5681)
!5684 = !DILocation(line: 1597, column: 51, scope: !5681)
!5685 = !DILocation(line: 1597, column: 11, scope: !5681)
!5686 = !DILocation(line: 1599, column: 37, scope: !5585)
!5687 = !DILocation(line: 1599, column: 41, scope: !5585)
!5688 = !DILocation(line: 1599, column: 4, scope: !5585)
!5689 = !DILocation(line: 1600, column: 8, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5585, file: !1, line: 1600, column: 8)
!5691 = !DILocation(line: 1600, column: 8, scope: !5585)
!5692 = !DILocation(line: 1602, column: 13, scope: !5693)
!5693 = distinct !DILexicalBlock(scope: !5690, file: !1, line: 1601, column: 6)
!5694 = !DILocation(line: 1602, column: 11, scope: !5693)
!5695 = !DILocation(line: 1603, column: 13, scope: !5693)
!5696 = !DILocation(line: 1603, column: 11, scope: !5693)
!5697 = !DILocation(line: 1604, column: 8, scope: !5693)
!5698 = !DILocation(line: 1607, column: 4, scope: !5585)
!5699 = !DILocation(line: 1608, column: 4, scope: !5585)
!5700 = !DILocation(line: 1611, column: 4, scope: !5585)
!5701 = !DILocation(line: 1612, column: 2, scope: !5585)
!5702 = !DILocation(line: 1613, column: 34, scope: !5568)
!5703 = !DILocation(line: 1613, column: 38, scope: !5568)
!5704 = !DILocation(line: 1613, column: 42, scope: !5568)
!5705 = !DILocation(line: 1613, column: 14, scope: !5568)
!5706 = !DILocation(line: 1613, column: 7, scope: !5568)
!5707 = !DILocation(line: 1616, column: 3, scope: !4713)
!5708 = !DILocation(line: 1617, column: 1, scope: !4713)
!5709 = distinct !DISubprogram(name: "simplify_unary_operation_1", scope: !1, file: !1, line: 533, type: !5710, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!1495, !397, !3, !1495}
!5712 = !DILocalVariable(name: "code", arg: 1, scope: !5709, file: !1, line: 533, type: !397)
!5713 = !DILocation(line: 533, column: 43, scope: !5709)
!5714 = !DILocalVariable(name: "mode", arg: 2, scope: !5709, file: !1, line: 533, type: !3)
!5715 = !DILocation(line: 533, column: 67, scope: !5709)
!5716 = !DILocalVariable(name: "op", arg: 3, scope: !5709, file: !1, line: 533, type: !1495)
!5717 = !DILocation(line: 533, column: 77, scope: !5709)
!5718 = !DILocalVariable(name: "reversed", scope: !5709, file: !1, line: 535, type: !397)
!5719 = !DILocation(line: 535, column: 17, scope: !5709)
!5720 = !DILocalVariable(name: "temp", scope: !5709, file: !1, line: 536, type: !1495)
!5721 = !DILocation(line: 536, column: 7, scope: !5709)
!5722 = !DILocation(line: 538, column: 11, scope: !5709)
!5723 = !DILocation(line: 538, column: 3, scope: !5709)
!5724 = !DILocation(line: 542, column: 11, scope: !5725)
!5725 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 542, column: 11)
!5726 = distinct !DILexicalBlock(scope: !5709, file: !1, line: 539, column: 5)
!5727 = !DILocation(line: 542, column: 25, scope: !5725)
!5728 = !DILocation(line: 542, column: 11, scope: !5726)
!5729 = !DILocation(line: 543, column: 9, scope: !5725)
!5730 = !DILocation(line: 543, column: 2, scope: !5725)
!5731 = !DILocation(line: 547, column: 11, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 547, column: 11)
!5733 = !DILocation(line: 548, column: 4, scope: !5732)
!5734 = !DILocation(line: 548, column: 8, scope: !5732)
!5735 = !DILocation(line: 548, column: 13, scope: !5732)
!5736 = !DILocation(line: 549, column: 4, scope: !5732)
!5737 = !DILocation(line: 549, column: 46, scope: !5732)
!5738 = !DILocation(line: 549, column: 20, scope: !5732)
!5739 = !DILocation(line: 549, column: 18, scope: !5732)
!5740 = !DILocation(line: 549, column: 61, scope: !5732)
!5741 = !DILocation(line: 547, column: 11, scope: !5726)
!5742 = !DILocation(line: 550, column: 34, scope: !5732)
!5743 = !DILocation(line: 550, column: 44, scope: !5732)
!5744 = !DILocation(line: 551, column: 6, scope: !5732)
!5745 = !DILocation(line: 551, column: 20, scope: !5732)
!5746 = !DILocation(line: 550, column: 9, scope: !5732)
!5747 = !DILocation(line: 550, column: 2, scope: !5732)
!5748 = !DILocation(line: 554, column: 11, scope: !5749)
!5749 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 554, column: 11)
!5750 = !DILocation(line: 554, column: 25, scope: !5749)
!5751 = !DILocation(line: 555, column: 4, scope: !5749)
!5752 = !DILocation(line: 555, column: 7, scope: !5749)
!5753 = !DILocation(line: 555, column: 23, scope: !5749)
!5754 = !DILocation(line: 555, column: 20, scope: !5749)
!5755 = !DILocation(line: 554, column: 11, scope: !5726)
!5756 = !DILocation(line: 556, column: 34, scope: !5749)
!5757 = !DILocation(line: 556, column: 40, scope: !5749)
!5758 = !DILocation(line: 556, column: 54, scope: !5749)
!5759 = !DILocation(line: 556, column: 9, scope: !5749)
!5760 = !DILocation(line: 556, column: 2, scope: !5749)
!5761 = !DILocation(line: 559, column: 11, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 559, column: 11)
!5763 = !DILocation(line: 559, column: 25, scope: !5762)
!5764 = !DILocation(line: 559, column: 11, scope: !5726)
!5765 = !DILocation(line: 560, column: 24, scope: !5762)
!5766 = !DILocation(line: 560, column: 9, scope: !5762)
!5767 = !DILocation(line: 560, column: 2, scope: !5762)
!5768 = !DILocation(line: 563, column: 11, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 563, column: 11)
!5770 = !DILocation(line: 563, column: 25, scope: !5769)
!5771 = !DILocation(line: 564, column: 4, scope: !5769)
!5772 = !DILocation(line: 564, column: 7, scope: !5769)
!5773 = !DILocation(line: 565, column: 4, scope: !5769)
!5774 = !DILocation(line: 565, column: 46, scope: !5769)
!5775 = !DILocation(line: 566, column: 13, scope: !5769)
!5776 = !DILocation(line: 566, column: 27, scope: !5769)
!5777 = !DILocation(line: 565, column: 15, scope: !5769)
!5778 = !DILocation(line: 565, column: 13, scope: !5769)
!5779 = !DILocation(line: 566, column: 34, scope: !5769)
!5780 = !DILocation(line: 563, column: 11, scope: !5726)
!5781 = !DILocation(line: 567, column: 35, scope: !5769)
!5782 = !DILocation(line: 567, column: 41, scope: !5769)
!5783 = !DILocation(line: 567, column: 55, scope: !5769)
!5784 = !DILocation(line: 567, column: 9, scope: !5769)
!5785 = !DILocation(line: 567, column: 2, scope: !5769)
!5786 = !DILocation(line: 570, column: 11, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 570, column: 11)
!5788 = !DILocation(line: 570, column: 25, scope: !5787)
!5789 = !DILocation(line: 571, column: 4, scope: !5787)
!5790 = !DILocation(line: 571, column: 7, scope: !5787)
!5791 = !DILocation(line: 572, column: 4, scope: !5787)
!5792 = !DILocation(line: 572, column: 23, scope: !5787)
!5793 = !DILocation(line: 572, column: 29, scope: !5787)
!5794 = !DILocation(line: 572, column: 7, scope: !5787)
!5795 = !DILocation(line: 573, column: 4, scope: !5787)
!5796 = !DILocation(line: 573, column: 46, scope: !5787)
!5797 = !DILocation(line: 574, column: 13, scope: !5787)
!5798 = !DILocation(line: 574, column: 27, scope: !5787)
!5799 = !DILocation(line: 573, column: 15, scope: !5787)
!5800 = !DILocation(line: 573, column: 13, scope: !5787)
!5801 = !DILocation(line: 574, column: 34, scope: !5787)
!5802 = !DILocation(line: 570, column: 11, scope: !5726)
!5803 = !DILocation(line: 575, column: 35, scope: !5787)
!5804 = !DILocation(line: 575, column: 41, scope: !5787)
!5805 = !DILocation(line: 575, column: 55, scope: !5787)
!5806 = !DILocation(line: 575, column: 9, scope: !5787)
!5807 = !DILocation(line: 575, column: 2, scope: !5787)
!5808 = !DILocation(line: 583, column: 11, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 583, column: 11)
!5810 = !DILocation(line: 583, column: 25, scope: !5809)
!5811 = !DILocation(line: 584, column: 4, scope: !5809)
!5812 = !DILocation(line: 584, column: 7, scope: !5809)
!5813 = !DILocation(line: 584, column: 23, scope: !5809)
!5814 = !DILocation(line: 584, column: 20, scope: !5809)
!5815 = !DILocation(line: 583, column: 11, scope: !5726)
!5816 = !DILocation(line: 586, column: 36, scope: !5817)
!5817 = distinct !DILexicalBlock(scope: !5809, file: !1, line: 585, column: 2)
!5818 = !DILocation(line: 586, column: 42, scope: !5817)
!5819 = !DILocation(line: 586, column: 54, scope: !5817)
!5820 = !DILocation(line: 586, column: 11, scope: !5817)
!5821 = !DILocation(line: 586, column: 9, scope: !5817)
!5822 = !DILocation(line: 587, column: 40, scope: !5817)
!5823 = !DILocation(line: 587, column: 46, scope: !5817)
!5824 = !DILocation(line: 587, column: 52, scope: !5817)
!5825 = !DILocation(line: 587, column: 11, scope: !5817)
!5826 = !DILocation(line: 587, column: 4, scope: !5817)
!5827 = !DILocation(line: 602, column: 11, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 602, column: 11)
!5829 = !DILocation(line: 602, column: 25, scope: !5828)
!5830 = !DILocation(line: 603, column: 4, scope: !5828)
!5831 = !DILocation(line: 603, column: 25, scope: !5828)
!5832 = !DILocation(line: 603, column: 7, scope: !5828)
!5833 = !DILocation(line: 604, column: 4, scope: !5828)
!5834 = !DILocation(line: 604, column: 8, scope: !5828)
!5835 = !DILocation(line: 605, column: 10, scope: !5828)
!5836 = !DILocation(line: 605, column: 8, scope: !5828)
!5837 = !DILocation(line: 606, column: 4, scope: !5828)
!5838 = !DILocation(line: 606, column: 7, scope: !5828)
!5839 = !DILocation(line: 606, column: 34, scope: !5828)
!5840 = !DILocation(line: 607, column: 4, scope: !5828)
!5841 = !DILocation(line: 607, column: 7, scope: !5828)
!5842 = !DILocation(line: 607, column: 36, scope: !5828)
!5843 = !DILocation(line: 607, column: 33, scope: !5828)
!5844 = !DILocation(line: 602, column: 11, scope: !5726)
!5845 = !DILocalVariable(name: "inner_mode", scope: !5846, file: !1, line: 609, type: !3)
!5846 = distinct !DILexicalBlock(scope: !5828, file: !1, line: 608, column: 2)
!5847 = !DILocation(line: 609, column: 22, scope: !5846)
!5848 = !DILocation(line: 609, column: 35, scope: !5846)
!5849 = !DILocalVariable(name: "x", scope: !5846, file: !1, line: 610, type: !1495)
!5850 = !DILocation(line: 610, column: 8, scope: !5846)
!5851 = !DILocation(line: 612, column: 8, scope: !5846)
!5852 = !DILocation(line: 612, column: 6, scope: !5846)
!5853 = !DILocation(line: 616, column: 21, scope: !5846)
!5854 = !DILocation(line: 616, column: 42, scope: !5846)
!5855 = !DILocation(line: 616, column: 48, scope: !5846)
!5856 = !DILocation(line: 616, column: 11, scope: !5846)
!5857 = !DILocation(line: 616, column: 4, scope: !5846)
!5858 = !DILocation(line: 624, column: 11, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 624, column: 11)
!5860 = !DILocation(line: 624, column: 25, scope: !5859)
!5861 = !DILocation(line: 624, column: 32, scope: !5859)
!5862 = !DILocation(line: 624, column: 35, scope: !5859)
!5863 = !DILocation(line: 624, column: 49, scope: !5859)
!5864 = !DILocation(line: 624, column: 11, scope: !5726)
!5865 = !DILocalVariable(name: "in1", scope: !5866, file: !1, line: 626, type: !1495)
!5866 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 625, column: 2)
!5867 = !DILocation(line: 626, column: 8, scope: !5866)
!5868 = !DILocation(line: 626, column: 14, scope: !5866)
!5869 = !DILocalVariable(name: "in2", scope: !5866, file: !1, line: 626, type: !1495)
!5870 = !DILocation(line: 626, column: 28, scope: !5866)
!5871 = !DILocation(line: 626, column: 34, scope: !5866)
!5872 = !DILocalVariable(name: "op_mode", scope: !5866, file: !1, line: 627, type: !3)
!5873 = !DILocation(line: 627, column: 22, scope: !5866)
!5874 = !DILocation(line: 629, column: 14, scope: !5866)
!5875 = !DILocation(line: 629, column: 12, scope: !5866)
!5876 = !DILocation(line: 630, column: 35, scope: !5866)
!5877 = !DILocation(line: 630, column: 44, scope: !5866)
!5878 = !DILocation(line: 630, column: 49, scope: !5866)
!5879 = !DILocation(line: 630, column: 10, scope: !5866)
!5880 = !DILocation(line: 630, column: 8, scope: !5866)
!5881 = !DILocation(line: 632, column: 14, scope: !5866)
!5882 = !DILocation(line: 632, column: 12, scope: !5866)
!5883 = !DILocation(line: 633, column: 8, scope: !5884)
!5884 = distinct !DILexicalBlock(scope: !5866, file: !1, line: 633, column: 8)
!5885 = !DILocation(line: 633, column: 16, scope: !5884)
!5886 = !DILocation(line: 633, column: 8, scope: !5866)
!5887 = !DILocation(line: 634, column: 16, scope: !5884)
!5888 = !DILocation(line: 634, column: 14, scope: !5884)
!5889 = !DILocation(line: 634, column: 6, scope: !5884)
!5890 = !DILocation(line: 635, column: 35, scope: !5866)
!5891 = !DILocation(line: 635, column: 44, scope: !5866)
!5892 = !DILocation(line: 635, column: 49, scope: !5866)
!5893 = !DILocation(line: 635, column: 10, scope: !5866)
!5894 = !DILocation(line: 635, column: 8, scope: !5866)
!5895 = !DILocation(line: 637, column: 8, scope: !5896)
!5896 = distinct !DILexicalBlock(scope: !5866, file: !1, line: 637, column: 8)
!5897 = !DILocation(line: 637, column: 23, scope: !5896)
!5898 = !DILocation(line: 637, column: 30, scope: !5896)
!5899 = !DILocation(line: 637, column: 33, scope: !5896)
!5900 = !DILocation(line: 637, column: 48, scope: !5896)
!5901 = !DILocation(line: 637, column: 8, scope: !5866)
!5902 = !DILocalVariable(name: "tem", scope: !5903, file: !1, line: 639, type: !1495)
!5903 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 638, column: 6)
!5904 = !DILocation(line: 639, column: 12, scope: !5903)
!5905 = !DILocation(line: 639, column: 18, scope: !5903)
!5906 = !DILocation(line: 640, column: 14, scope: !5903)
!5907 = !DILocation(line: 640, column: 12, scope: !5903)
!5908 = !DILocation(line: 640, column: 25, scope: !5903)
!5909 = !DILocation(line: 640, column: 23, scope: !5903)
!5910 = !DILocation(line: 641, column: 6, scope: !5903)
!5911 = !DILocation(line: 643, column: 11, scope: !5866)
!5912 = !DILocation(line: 643, column: 4, scope: !5866)
!5913 = !DILocation(line: 646, column: 7, scope: !5726)
!5914 = !DILocation(line: 650, column: 11, scope: !5915)
!5915 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 650, column: 11)
!5916 = !DILocation(line: 650, column: 25, scope: !5915)
!5917 = !DILocation(line: 650, column: 11, scope: !5726)
!5918 = !DILocation(line: 651, column: 9, scope: !5915)
!5919 = !DILocation(line: 651, column: 2, scope: !5915)
!5920 = !DILocation(line: 654, column: 11, scope: !5921)
!5921 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 654, column: 11)
!5922 = !DILocation(line: 654, column: 25, scope: !5921)
!5923 = !DILocation(line: 655, column: 4, scope: !5921)
!5924 = !DILocation(line: 655, column: 7, scope: !5921)
!5925 = !DILocation(line: 655, column: 23, scope: !5921)
!5926 = !DILocation(line: 655, column: 20, scope: !5921)
!5927 = !DILocation(line: 654, column: 11, scope: !5726)
!5928 = !DILocation(line: 656, column: 34, scope: !5921)
!5929 = !DILocation(line: 656, column: 40, scope: !5921)
!5930 = !DILocation(line: 656, column: 54, scope: !5921)
!5931 = !DILocation(line: 656, column: 9, scope: !5921)
!5932 = !DILocation(line: 656, column: 2, scope: !5921)
!5933 = !DILocation(line: 659, column: 11, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 659, column: 11)
!5935 = !DILocation(line: 659, column: 25, scope: !5934)
!5936 = !DILocation(line: 659, column: 11, scope: !5726)
!5937 = !DILocation(line: 660, column: 24, scope: !5934)
!5938 = !DILocation(line: 660, column: 9, scope: !5934)
!5939 = !DILocation(line: 660, column: 2, scope: !5934)
!5940 = !DILocation(line: 667, column: 11, scope: !5941)
!5941 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 667, column: 11)
!5942 = !DILocation(line: 667, column: 25, scope: !5941)
!5943 = !DILocation(line: 668, column: 4, scope: !5941)
!5944 = !DILocation(line: 668, column: 8, scope: !5941)
!5945 = !DILocation(line: 669, column: 4, scope: !5941)
!5946 = !DILocation(line: 669, column: 8, scope: !5941)
!5947 = !DILocation(line: 667, column: 11, scope: !5726)
!5948 = !DILocation(line: 670, column: 37, scope: !5941)
!5949 = !DILocation(line: 670, column: 43, scope: !5941)
!5950 = !DILocation(line: 670, column: 57, scope: !5941)
!5951 = !DILocation(line: 670, column: 9, scope: !5941)
!5952 = !DILocation(line: 670, column: 2, scope: !5941)
!5953 = !DILocation(line: 672, column: 11, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 672, column: 11)
!5955 = !DILocation(line: 672, column: 25, scope: !5954)
!5956 = !DILocation(line: 673, column: 4, scope: !5954)
!5957 = !DILocation(line: 673, column: 8, scope: !5954)
!5958 = !DILocation(line: 674, column: 4, scope: !5954)
!5959 = !DILocation(line: 674, column: 8, scope: !5954)
!5960 = !DILocation(line: 672, column: 11, scope: !5726)
!5961 = !DILocation(line: 677, column: 8, scope: !5962)
!5962 = distinct !DILexicalBlock(scope: !5963, file: !1, line: 677, column: 8)
!5963 = distinct !DILexicalBlock(scope: !5954, file: !1, line: 675, column: 2)
!5964 = !DILocation(line: 678, column: 8, scope: !5962)
!5965 = !DILocation(line: 678, column: 11, scope: !5962)
!5966 = !DILocation(line: 678, column: 35, scope: !5962)
!5967 = !DILocation(line: 677, column: 8, scope: !5963)
!5968 = !DILocation(line: 680, column: 46, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5962, file: !1, line: 679, column: 6)
!5970 = !DILocation(line: 680, column: 52, scope: !5969)
!5971 = !DILocation(line: 680, column: 66, scope: !5969)
!5972 = !DILocation(line: 680, column: 15, scope: !5969)
!5973 = !DILocation(line: 680, column: 13, scope: !5969)
!5974 = !DILocation(line: 681, column: 12, scope: !5975)
!5975 = distinct !DILexicalBlock(scope: !5969, file: !1, line: 681, column: 12)
!5976 = !DILocation(line: 681, column: 12, scope: !5969)
!5977 = !DILocation(line: 682, column: 38, scope: !5975)
!5978 = !DILocation(line: 682, column: 44, scope: !5975)
!5979 = !DILocation(line: 682, column: 50, scope: !5975)
!5980 = !DILocation(line: 682, column: 10, scope: !5975)
!5981 = !DILocation(line: 682, column: 3, scope: !5975)
!5982 = !DILocation(line: 683, column: 6, scope: !5969)
!5983 = !DILocation(line: 686, column: 36, scope: !5963)
!5984 = !DILocation(line: 686, column: 42, scope: !5963)
!5985 = !DILocation(line: 686, column: 56, scope: !5963)
!5986 = !DILocation(line: 686, column: 11, scope: !5963)
!5987 = !DILocation(line: 686, column: 9, scope: !5963)
!5988 = !DILocation(line: 687, column: 39, scope: !5963)
!5989 = !DILocation(line: 687, column: 45, scope: !5963)
!5990 = !DILocation(line: 687, column: 51, scope: !5963)
!5991 = !DILocation(line: 687, column: 11, scope: !5963)
!5992 = !DILocation(line: 687, column: 4, scope: !5963)
!5993 = !DILocation(line: 692, column: 11, scope: !5994)
!5994 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 692, column: 11)
!5995 = !DILocation(line: 692, column: 25, scope: !5994)
!5996 = !DILocation(line: 693, column: 4, scope: !5994)
!5997 = !DILocation(line: 693, column: 8, scope: !5994)
!5998 = !DILocation(line: 692, column: 11, scope: !5726)
!5999 = !DILocation(line: 695, column: 36, scope: !6000)
!6000 = distinct !DILexicalBlock(scope: !5994, file: !1, line: 694, column: 2)
!6001 = !DILocation(line: 695, column: 42, scope: !6000)
!6002 = !DILocation(line: 695, column: 56, scope: !6000)
!6003 = !DILocation(line: 695, column: 11, scope: !6000)
!6004 = !DILocation(line: 695, column: 9, scope: !6000)
!6005 = !DILocation(line: 696, column: 38, scope: !6000)
!6006 = !DILocation(line: 696, column: 44, scope: !6000)
!6007 = !DILocation(line: 696, column: 50, scope: !6000)
!6008 = !DILocation(line: 696, column: 11, scope: !6000)
!6009 = !DILocation(line: 696, column: 4, scope: !6000)
!6010 = !DILocation(line: 702, column: 11, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 702, column: 11)
!6012 = !DILocation(line: 702, column: 25, scope: !6011)
!6013 = !DILocation(line: 702, column: 11, scope: !5726)
!6014 = !DILocation(line: 704, column: 42, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6011, file: !1, line: 703, column: 2)
!6016 = !DILocation(line: 704, column: 48, scope: !6015)
!6017 = !DILocation(line: 704, column: 62, scope: !6015)
!6018 = !DILocation(line: 704, column: 11, scope: !6015)
!6019 = !DILocation(line: 704, column: 9, scope: !6015)
!6020 = !DILocation(line: 705, column: 8, scope: !6021)
!6021 = distinct !DILexicalBlock(scope: !6015, file: !1, line: 705, column: 8)
!6022 = !DILocation(line: 705, column: 8, scope: !6015)
!6023 = !DILocation(line: 706, column: 42, scope: !6021)
!6024 = !DILocation(line: 706, column: 48, scope: !6021)
!6025 = !DILocation(line: 706, column: 54, scope: !6021)
!6026 = !DILocation(line: 706, column: 13, scope: !6021)
!6027 = !DILocation(line: 706, column: 6, scope: !6021)
!6028 = !DILocation(line: 707, column: 2, scope: !6015)
!6029 = !DILocation(line: 711, column: 11, scope: !6030)
!6030 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 711, column: 11)
!6031 = !DILocation(line: 711, column: 25, scope: !6030)
!6032 = !DILocation(line: 712, column: 4, scope: !6030)
!6033 = !DILocation(line: 712, column: 7, scope: !6030)
!6034 = !DILocation(line: 713, column: 4, scope: !6030)
!6035 = !DILocation(line: 713, column: 7, scope: !6030)
!6036 = !DILocation(line: 713, column: 32, scope: !6030)
!6037 = !DILocation(line: 713, column: 56, scope: !6030)
!6038 = !DILocation(line: 713, column: 29, scope: !6030)
!6039 = !DILocation(line: 711, column: 11, scope: !5726)
!6040 = !DILocation(line: 714, column: 40, scope: !6030)
!6041 = !DILocation(line: 715, column: 9, scope: !6030)
!6042 = !DILocation(line: 715, column: 23, scope: !6030)
!6043 = !DILocation(line: 714, column: 9, scope: !6030)
!6044 = !DILocation(line: 714, column: 2, scope: !6030)
!6045 = !DILocation(line: 719, column: 11, scope: !6046)
!6046 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 719, column: 11)
!6047 = !DILocation(line: 719, column: 25, scope: !6046)
!6048 = !DILocation(line: 720, column: 4, scope: !6046)
!6049 = !DILocation(line: 720, column: 7, scope: !6046)
!6050 = !DILocation(line: 721, column: 4, scope: !6046)
!6051 = !DILocation(line: 721, column: 7, scope: !6046)
!6052 = !DILocation(line: 721, column: 32, scope: !6046)
!6053 = !DILocation(line: 721, column: 56, scope: !6046)
!6054 = !DILocation(line: 721, column: 29, scope: !6046)
!6055 = !DILocation(line: 719, column: 11, scope: !5726)
!6056 = !DILocation(line: 722, column: 40, scope: !6046)
!6057 = !DILocation(line: 723, column: 9, scope: !6046)
!6058 = !DILocation(line: 723, column: 23, scope: !6046)
!6059 = !DILocation(line: 722, column: 9, scope: !6046)
!6060 = !DILocation(line: 722, column: 2, scope: !6046)
!6061 = !DILocation(line: 726, column: 11, scope: !6062)
!6062 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 726, column: 11)
!6063 = !DILocation(line: 726, column: 25, scope: !6062)
!6064 = !DILocation(line: 727, column: 4, scope: !6062)
!6065 = !DILocation(line: 727, column: 7, scope: !6062)
!6066 = !DILocation(line: 727, column: 23, scope: !6062)
!6067 = !DILocation(line: 727, column: 20, scope: !6062)
!6068 = !DILocation(line: 728, column: 4, scope: !6062)
!6069 = !DILocation(line: 728, column: 21, scope: !6062)
!6070 = !DILocation(line: 728, column: 35, scope: !6062)
!6071 = !DILocation(line: 728, column: 7, scope: !6062)
!6072 = !DILocation(line: 728, column: 41, scope: !6062)
!6073 = !DILocation(line: 726, column: 11, scope: !5726)
!6074 = !DILocation(line: 729, column: 24, scope: !6062)
!6075 = !DILocation(line: 729, column: 9, scope: !6062)
!6076 = !DILocation(line: 729, column: 2, scope: !6062)
!6077 = !DILocation(line: 733, column: 11, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 733, column: 11)
!6079 = !DILocation(line: 733, column: 25, scope: !6078)
!6080 = !DILocation(line: 734, column: 4, scope: !6078)
!6081 = !DILocation(line: 734, column: 7, scope: !6078)
!6082 = !DILocation(line: 734, column: 23, scope: !6078)
!6083 = !DILocation(line: 734, column: 20, scope: !6078)
!6084 = !DILocation(line: 735, column: 4, scope: !6078)
!6085 = !DILocation(line: 735, column: 7, scope: !6078)
!6086 = !DILocation(line: 733, column: 11, scope: !5726)
!6087 = !DILocalVariable(name: "inner", scope: !6088, file: !1, line: 737, type: !3)
!6088 = distinct !DILexicalBlock(scope: !6078, file: !1, line: 736, column: 2)
!6089 = !DILocation(line: 737, column: 22, scope: !6088)
!6090 = !DILocation(line: 737, column: 30, scope: !6088)
!6091 = !DILocalVariable(name: "isize", scope: !6088, file: !1, line: 738, type: !1518)
!6092 = !DILocation(line: 738, column: 8, scope: !6088)
!6093 = !DILocation(line: 738, column: 16, scope: !6088)
!6094 = !DILocation(line: 741, column: 46, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6096, file: !1, line: 740, column: 6)
!6096 = distinct !DILexicalBlock(scope: !6088, file: !1, line: 739, column: 8)
!6097 = !DILocation(line: 741, column: 53, scope: !6095)
!6098 = !DILocation(line: 742, column: 8, scope: !6095)
!6099 = !DILocation(line: 741, column: 15, scope: !6095)
!6100 = !DILocation(line: 741, column: 13, scope: !6095)
!6101 = !DILocation(line: 743, column: 12, scope: !6102)
!6102 = distinct !DILexicalBlock(scope: !6095, file: !1, line: 743, column: 12)
!6103 = !DILocation(line: 743, column: 20, scope: !6102)
!6104 = !DILocation(line: 743, column: 17, scope: !6102)
!6105 = !DILocation(line: 743, column: 12, scope: !6095)
!6106 = !DILocation(line: 744, column: 10, scope: !6102)
!6107 = !DILocation(line: 744, column: 3, scope: !6102)
!6108 = !DILocation(line: 745, column: 12, scope: !6109)
!6109 = distinct !DILexicalBlock(scope: !6095, file: !1, line: 745, column: 12)
!6110 = !DILocation(line: 745, column: 38, scope: !6109)
!6111 = !DILocation(line: 745, column: 36, scope: !6109)
!6112 = !DILocation(line: 745, column: 12, scope: !6095)
!6113 = !DILocation(line: 746, column: 43, scope: !6109)
!6114 = !DILocation(line: 746, column: 49, scope: !6109)
!6115 = !DILocation(line: 746, column: 55, scope: !6109)
!6116 = !DILocation(line: 746, column: 10, scope: !6109)
!6117 = !DILocation(line: 746, column: 3, scope: !6109)
!6118 = !DILocation(line: 747, column: 45, scope: !6095)
!6119 = !DILocation(line: 747, column: 51, scope: !6095)
!6120 = !DILocation(line: 747, column: 57, scope: !6095)
!6121 = !DILocation(line: 747, column: 15, scope: !6095)
!6122 = !DILocation(line: 747, column: 8, scope: !6095)
!6123 = !DILocation(line: 760, column: 7, scope: !5726)
!6124 = !DILocation(line: 766, column: 11, scope: !6125)
!6125 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 766, column: 11)
!6126 = !DILocation(line: 766, column: 33, scope: !6125)
!6127 = !DILocation(line: 766, column: 11, scope: !5726)
!6128 = !DILocation(line: 767, column: 9, scope: !6125)
!6129 = !DILocation(line: 770, column: 12, scope: !6130)
!6130 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 770, column: 11)
!6131 = !DILocation(line: 770, column: 26, scope: !6130)
!6132 = !DILocation(line: 771, column: 5, scope: !6130)
!6133 = !DILocation(line: 771, column: 8, scope: !6130)
!6134 = !DILocation(line: 771, column: 22, scope: !6130)
!6135 = !DILocation(line: 772, column: 4, scope: !6130)
!6136 = !DILocation(line: 772, column: 7, scope: !6130)
!6137 = !DILocation(line: 772, column: 34, scope: !6130)
!6138 = !DILocation(line: 772, column: 31, scope: !6130)
!6139 = !DILocation(line: 770, column: 11, scope: !5726)
!6140 = !DILocation(line: 773, column: 9, scope: !6130)
!6141 = !DILocation(line: 773, column: 2, scope: !6130)
!6142 = !DILocation(line: 777, column: 12, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 777, column: 11)
!6144 = !DILocation(line: 777, column: 26, scope: !6143)
!6145 = !DILocation(line: 778, column: 5, scope: !6143)
!6146 = !DILocation(line: 778, column: 8, scope: !6143)
!6147 = !DILocation(line: 778, column: 22, scope: !6143)
!6148 = !DILocation(line: 779, column: 4, scope: !6143)
!6149 = !DILocation(line: 779, column: 8, scope: !6143)
!6150 = !DILocation(line: 779, column: 32, scope: !6143)
!6151 = !DILocation(line: 780, column: 8, scope: !6143)
!6152 = !DILocation(line: 780, column: 11, scope: !6143)
!6153 = !DILocation(line: 780, column: 35, scope: !6143)
!6154 = !DILocation(line: 781, column: 4, scope: !6143)
!6155 = !DILocation(line: 781, column: 7, scope: !6143)
!6156 = !DILocation(line: 781, column: 44, scope: !6143)
!6157 = !DILocation(line: 781, column: 41, scope: !6143)
!6158 = !DILocation(line: 777, column: 11, scope: !5726)
!6159 = !DILocation(line: 782, column: 29, scope: !6143)
!6160 = !DILocation(line: 782, column: 44, scope: !6143)
!6161 = !DILocation(line: 783, column: 8, scope: !6143)
!6162 = !DILocation(line: 783, column: 32, scope: !6143)
!6163 = !DILocation(line: 782, column: 9, scope: !6143)
!6164 = !DILocation(line: 782, column: 2, scope: !6143)
!6165 = !DILocation(line: 787, column: 11, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 787, column: 11)
!6167 = !DILocation(line: 787, column: 25, scope: !6166)
!6168 = !DILocation(line: 788, column: 4, scope: !6166)
!6169 = !DILocation(line: 788, column: 7, scope: !6166)
!6170 = !DILocation(line: 788, column: 34, scope: !6166)
!6171 = !DILocation(line: 789, column: 4, scope: !6166)
!6172 = !DILocation(line: 789, column: 25, scope: !6166)
!6173 = !DILocation(line: 789, column: 7, scope: !6166)
!6174 = !DILocation(line: 787, column: 11, scope: !5726)
!6175 = !DILocation(line: 790, column: 39, scope: !6166)
!6176 = !DILocation(line: 790, column: 45, scope: !6166)
!6177 = !DILocation(line: 791, column: 8, scope: !6166)
!6178 = !DILocation(line: 790, column: 9, scope: !6166)
!6179 = !DILocation(line: 790, column: 2, scope: !6166)
!6180 = !DILocation(line: 806, column: 4, scope: !6181)
!6181 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 800, column: 11)
!6182 = !DILocation(line: 802, column: 29, scope: !6181)
!6183 = !DILocation(line: 802, column: 33, scope: !6181)
!6184 = !DILocation(line: 802, column: 8, scope: !6181)
!6185 = !DILocation(line: 803, column: 26, scope: !6181)
!6186 = !DILocation(line: 804, column: 7, scope: !6181)
!6187 = !DILocation(line: 804, column: 5, scope: !6181)
!6188 = !DILocation(line: 803, column: 8, scope: !6181)
!6189 = !DILocation(line: 800, column: 12, scope: !6181)
!6190 = !DILocation(line: 805, column: 26, scope: !6181)
!6191 = !DILocation(line: 805, column: 32, scope: !6181)
!6192 = !DILocation(line: 805, column: 7, scope: !6181)
!6193 = !DILocation(line: 806, column: 10, scope: !6181)
!6194 = !DILocation(line: 806, column: 24, scope: !6181)
!6195 = !DILocation(line: 807, column: 3, scope: !6181)
!6196 = !DILocation(line: 807, column: 6, scope: !6181)
!6197 = !DILocation(line: 807, column: 30, scope: !6181)
!6198 = !DILocation(line: 800, column: 11, scope: !5726)
!6199 = !DILocation(line: 808, column: 19, scope: !6181)
!6200 = !DILocation(line: 808, column: 40, scope: !6181)
!6201 = !DILocation(line: 808, column: 46, scope: !6181)
!6202 = !DILocation(line: 808, column: 9, scope: !6181)
!6203 = !DILocation(line: 808, column: 2, scope: !6181)
!6204 = !DILocation(line: 814, column: 11, scope: !6205)
!6205 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 814, column: 11)
!6206 = !DILocation(line: 814, column: 35, scope: !6205)
!6207 = !DILocation(line: 815, column: 4, scope: !6205)
!6208 = !DILocation(line: 815, column: 7, scope: !6205)
!6209 = !DILocation(line: 816, column: 4, scope: !6205)
!6210 = !DILocation(line: 816, column: 44, scope: !6205)
!6211 = !DILocation(line: 816, column: 43, scope: !6205)
!6212 = !DILocation(line: 816, column: 41, scope: !6205)
!6213 = !DILocation(line: 816, column: 66, scope: !6205)
!6214 = !DILocation(line: 814, column: 11, scope: !5726)
!6215 = !DILocation(line: 817, column: 19, scope: !6205)
!6216 = !DILocation(line: 817, column: 40, scope: !6205)
!6217 = !DILocation(line: 817, column: 46, scope: !6205)
!6218 = !DILocation(line: 817, column: 9, scope: !6205)
!6219 = !DILocation(line: 817, column: 2, scope: !6205)
!6220 = !DILocation(line: 818, column: 7, scope: !5726)
!6221 = !DILocation(line: 821, column: 11, scope: !6222)
!6222 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 821, column: 11)
!6223 = !DILocation(line: 821, column: 11, scope: !5726)
!6224 = !DILocation(line: 822, column: 2, scope: !6222)
!6225 = !DILocation(line: 825, column: 11, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 825, column: 11)
!6227 = !DILocation(line: 825, column: 25, scope: !6226)
!6228 = !DILocation(line: 826, column: 4, scope: !6226)
!6229 = !DILocation(line: 826, column: 7, scope: !6226)
!6230 = !DILocation(line: 826, column: 34, scope: !6226)
!6231 = !DILocation(line: 826, column: 31, scope: !6226)
!6232 = !DILocation(line: 825, column: 11, scope: !5726)
!6233 = !DILocation(line: 827, column: 9, scope: !6226)
!6234 = !DILocation(line: 827, column: 2, scope: !6226)
!6235 = !DILocation(line: 838, column: 12, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 838, column: 11)
!6237 = !DILocation(line: 838, column: 26, scope: !6236)
!6238 = !DILocation(line: 839, column: 5, scope: !6236)
!6239 = !DILocation(line: 839, column: 8, scope: !6236)
!6240 = !DILocation(line: 840, column: 4, scope: !6236)
!6241 = !DILocation(line: 840, column: 7, scope: !6236)
!6242 = !DILocation(line: 840, column: 21, scope: !6236)
!6243 = !DILocation(line: 838, column: 11, scope: !5726)
!6244 = !DILocation(line: 841, column: 29, scope: !6236)
!6245 = !DILocation(line: 843, column: 10, scope: !6236)
!6246 = !DILocation(line: 843, column: 8, scope: !6236)
!6247 = !DILocation(line: 845, column: 8, scope: !6236)
!6248 = !DILocation(line: 846, column: 8, scope: !6236)
!6249 = !DILocation(line: 846, column: 22, scope: !6236)
!6250 = !DILocation(line: 841, column: 9, scope: !6236)
!6251 = !DILocation(line: 841, column: 2, scope: !6236)
!6252 = !DILocation(line: 849, column: 11, scope: !6253)
!6253 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 849, column: 11)
!6254 = !DILocation(line: 849, column: 25, scope: !6253)
!6255 = !DILocation(line: 850, column: 4, scope: !6253)
!6256 = !DILocation(line: 850, column: 8, scope: !6253)
!6257 = !DILocation(line: 851, column: 8, scope: !6253)
!6258 = !DILocation(line: 851, column: 12, scope: !6253)
!6259 = !DILocation(line: 852, column: 5, scope: !6253)
!6260 = !DILocation(line: 852, column: 37, scope: !6253)
!6261 = !DILocation(line: 852, column: 19, scope: !6253)
!6262 = !DILocation(line: 853, column: 13, scope: !6253)
!6263 = !DILocation(line: 854, column: 29, scope: !6253)
!6264 = !DILocation(line: 855, column: 8, scope: !6253)
!6265 = !DILocation(line: 854, column: 8, scope: !6253)
!6266 = !DILocation(line: 854, column: 6, scope: !6253)
!6267 = !DILocation(line: 853, column: 9, scope: !6253)
!6268 = !DILocation(line: 849, column: 11, scope: !5726)
!6269 = !DILocation(line: 856, column: 36, scope: !6253)
!6270 = !DILocation(line: 857, column: 8, scope: !6253)
!6271 = !DILocation(line: 858, column: 8, scope: !6253)
!6272 = !DILocation(line: 856, column: 9, scope: !6253)
!6273 = !DILocation(line: 856, column: 2, scope: !6253)
!6274 = !DILocation(line: 862, column: 12, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 862, column: 11)
!6276 = !DILocation(line: 862, column: 26, scope: !6275)
!6277 = !DILocation(line: 863, column: 5, scope: !6275)
!6278 = !DILocation(line: 863, column: 8, scope: !6275)
!6279 = !DILocation(line: 863, column: 22, scope: !6275)
!6280 = !DILocation(line: 864, column: 4, scope: !6275)
!6281 = !DILocation(line: 864, column: 7, scope: !6275)
!6282 = !DILocation(line: 864, column: 31, scope: !6275)
!6283 = !DILocation(line: 865, column: 4, scope: !6275)
!6284 = !DILocation(line: 865, column: 7, scope: !6275)
!6285 = !DILocation(line: 865, column: 44, scope: !6275)
!6286 = !DILocation(line: 865, column: 41, scope: !6275)
!6287 = !DILocation(line: 862, column: 11, scope: !5726)
!6288 = !DILocation(line: 866, column: 29, scope: !6275)
!6289 = !DILocation(line: 866, column: 44, scope: !6275)
!6290 = !DILocation(line: 867, column: 8, scope: !6275)
!6291 = !DILocation(line: 867, column: 32, scope: !6275)
!6292 = !DILocation(line: 866, column: 9, scope: !6275)
!6293 = !DILocation(line: 866, column: 2, scope: !6275)
!6294 = !DILocation(line: 871, column: 11, scope: !6295)
!6295 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 871, column: 11)
!6296 = !DILocation(line: 871, column: 25, scope: !6295)
!6297 = !DILocation(line: 872, column: 4, scope: !6295)
!6298 = !DILocation(line: 872, column: 25, scope: !6295)
!6299 = !DILocation(line: 872, column: 7, scope: !6295)
!6300 = !DILocation(line: 873, column: 4, scope: !6295)
!6301 = !DILocation(line: 873, column: 7, scope: !6295)
!6302 = !DILocation(line: 873, column: 34, scope: !6295)
!6303 = !DILocation(line: 871, column: 11, scope: !5726)
!6304 = !DILocation(line: 874, column: 9, scope: !6295)
!6305 = !DILocation(line: 874, column: 2, scope: !6295)
!6306 = !DILocation(line: 875, column: 7, scope: !5726)
!6307 = !DILocation(line: 878, column: 11, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 878, column: 11)
!6309 = !DILocation(line: 878, column: 11, scope: !5726)
!6310 = !DILocation(line: 879, column: 2, scope: !6308)
!6311 = !DILocation(line: 886, column: 11, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 886, column: 11)
!6313 = !DILocation(line: 886, column: 25, scope: !6312)
!6314 = !DILocation(line: 887, column: 4, scope: !6312)
!6315 = !DILocation(line: 887, column: 8, scope: !6312)
!6316 = !DILocation(line: 887, column: 22, scope: !6312)
!6317 = !DILocation(line: 888, column: 8, scope: !6312)
!6318 = !DILocation(line: 888, column: 11, scope: !6312)
!6319 = !DILocation(line: 889, column: 8, scope: !6312)
!6320 = !DILocation(line: 889, column: 40, scope: !6312)
!6321 = !DILocation(line: 889, column: 22, scope: !6312)
!6322 = !DILocation(line: 890, column: 9, scope: !6312)
!6323 = !DILocation(line: 891, column: 32, scope: !6312)
!6324 = !DILocation(line: 892, column: 11, scope: !6312)
!6325 = !DILocation(line: 891, column: 11, scope: !6312)
!6326 = !DILocation(line: 891, column: 9, scope: !6312)
!6327 = !DILocation(line: 890, column: 5, scope: !6312)
!6328 = !DILocation(line: 886, column: 11, scope: !5726)
!6329 = !DILocation(line: 893, column: 29, scope: !6312)
!6330 = !DILocation(line: 893, column: 44, scope: !6312)
!6331 = !DILocation(line: 894, column: 8, scope: !6312)
!6332 = !DILocation(line: 895, column: 8, scope: !6312)
!6333 = !DILocation(line: 893, column: 9, scope: !6312)
!6334 = !DILocation(line: 893, column: 2, scope: !6312)
!6335 = !DILocation(line: 897, column: 7, scope: !5726)
!6336 = !DILocation(line: 901, column: 11, scope: !6337)
!6337 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 901, column: 11)
!6338 = !DILocation(line: 901, column: 25, scope: !6337)
!6339 = !DILocation(line: 901, column: 11, scope: !5726)
!6340 = !DILocation(line: 902, column: 34, scope: !6337)
!6341 = !DILocation(line: 902, column: 40, scope: !6337)
!6342 = !DILocation(line: 903, column: 8, scope: !6337)
!6343 = !DILocation(line: 902, column: 9, scope: !6337)
!6344 = !DILocation(line: 902, column: 2, scope: !6337)
!6345 = !DILocation(line: 907, column: 11, scope: !6346)
!6346 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 907, column: 11)
!6347 = !DILocation(line: 907, column: 25, scope: !6346)
!6348 = !DILocation(line: 907, column: 11, scope: !5726)
!6349 = !DILocation(line: 908, column: 2, scope: !6346)
!6350 = !DILocation(line: 911, column: 11, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 911, column: 11)
!6352 = !DILocation(line: 911, column: 25, scope: !6351)
!6353 = !DILocation(line: 911, column: 32, scope: !6351)
!6354 = !DILocation(line: 911, column: 35, scope: !6351)
!6355 = !DILocation(line: 911, column: 49, scope: !6351)
!6356 = !DILocation(line: 912, column: 4, scope: !6351)
!6357 = !DILocation(line: 912, column: 9, scope: !6351)
!6358 = !DILocation(line: 913, column: 9, scope: !6351)
!6359 = !DILocation(line: 914, column: 8, scope: !6351)
!6360 = !DILocation(line: 914, column: 27, scope: !6351)
!6361 = !DILocation(line: 914, column: 31, scope: !6351)
!6362 = !DILocation(line: 914, column: 13, scope: !6351)
!6363 = !DILocation(line: 916, column: 13, scope: !6351)
!6364 = !DILocation(line: 916, column: 46, scope: !6351)
!6365 = !DILocation(line: 916, column: 9, scope: !6351)
!6366 = !DILocation(line: 915, column: 6, scope: !6351)
!6367 = !DILocation(line: 917, column: 5, scope: !6351)
!6368 = !DILocation(line: 911, column: 11, scope: !5726)
!6369 = !DILocation(line: 918, column: 9, scope: !6351)
!6370 = !DILocation(line: 918, column: 2, scope: !6351)
!6371 = !DILocation(line: 921, column: 32, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 921, column: 11)
!6373 = !DILocation(line: 921, column: 36, scope: !6372)
!6374 = !DILocation(line: 921, column: 11, scope: !6372)
!6375 = !DILocation(line: 921, column: 45, scope: !6372)
!6376 = !DILocation(line: 921, column: 42, scope: !6372)
!6377 = !DILocation(line: 921, column: 11, scope: !5726)
!6378 = !DILocation(line: 922, column: 9, scope: !6372)
!6379 = !DILocation(line: 922, column: 2, scope: !6372)
!6380 = !DILocation(line: 924, column: 7, scope: !5726)
!6381 = !DILocation(line: 928, column: 11, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 928, column: 11)
!6383 = !DILocation(line: 928, column: 25, scope: !6382)
!6384 = !DILocation(line: 929, column: 4, scope: !6382)
!6385 = !DILocation(line: 929, column: 7, scope: !6382)
!6386 = !DILocation(line: 929, column: 21, scope: !6382)
!6387 = !DILocation(line: 928, column: 11, scope: !5726)
!6388 = !DILocation(line: 930, column: 34, scope: !6382)
!6389 = !DILocation(line: 930, column: 40, scope: !6382)
!6390 = !DILocation(line: 931, column: 8, scope: !6382)
!6391 = !DILocation(line: 930, column: 9, scope: !6382)
!6392 = !DILocation(line: 930, column: 2, scope: !6382)
!6393 = !DILocation(line: 932, column: 7, scope: !5726)
!6394 = !DILocation(line: 935, column: 15, scope: !5726)
!6395 = !DILocation(line: 935, column: 7, scope: !5726)
!6396 = !DILocation(line: 940, column: 41, scope: !6397)
!6397 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 936, column: 2)
!6398 = !DILocation(line: 940, column: 47, scope: !6397)
!6399 = !DILocation(line: 941, column: 10, scope: !6397)
!6400 = !DILocation(line: 940, column: 11, scope: !6397)
!6401 = !DILocation(line: 940, column: 4, scope: !6397)
!6402 = !DILocation(line: 946, column: 25, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6397, file: !1, line: 946, column: 8)
!6404 = !DILocation(line: 946, column: 9, scope: !6403)
!6405 = !DILocation(line: 946, column: 8, scope: !6397)
!6406 = !DILocation(line: 947, column: 43, scope: !6403)
!6407 = !DILocation(line: 947, column: 49, scope: !6403)
!6408 = !DILocation(line: 948, column: 12, scope: !6403)
!6409 = !DILocation(line: 947, column: 13, scope: !6403)
!6410 = !DILocation(line: 947, column: 6, scope: !6403)
!6411 = !DILocation(line: 949, column: 4, scope: !6397)
!6412 = !DILocation(line: 952, column: 4, scope: !6397)
!6413 = !DILocation(line: 954, column: 7, scope: !5726)
!6414 = !DILocation(line: 957, column: 15, scope: !5726)
!6415 = !DILocation(line: 957, column: 7, scope: !5726)
!6416 = !DILocation(line: 963, column: 39, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 958, column: 2)
!6418 = !DILocation(line: 963, column: 45, scope: !6417)
!6419 = !DILocation(line: 964, column: 10, scope: !6417)
!6420 = !DILocation(line: 963, column: 11, scope: !6417)
!6421 = !DILocation(line: 963, column: 4, scope: !6417)
!6422 = !DILocation(line: 969, column: 25, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6417, file: !1, line: 969, column: 8)
!6424 = !DILocation(line: 969, column: 9, scope: !6423)
!6425 = !DILocation(line: 969, column: 8, scope: !6417)
!6426 = !DILocation(line: 970, column: 41, scope: !6423)
!6427 = !DILocation(line: 970, column: 47, scope: !6423)
!6428 = !DILocation(line: 971, column: 12, scope: !6423)
!6429 = !DILocation(line: 970, column: 13, scope: !6423)
!6430 = !DILocation(line: 970, column: 6, scope: !6423)
!6431 = !DILocation(line: 972, column: 4, scope: !6417)
!6432 = !DILocation(line: 975, column: 4, scope: !6417)
!6433 = !DILocation(line: 977, column: 7, scope: !5726)
!6434 = !DILocation(line: 981, column: 11, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 981, column: 11)
!6436 = !DILocation(line: 981, column: 25, scope: !6435)
!6437 = !DILocation(line: 981, column: 11, scope: !5726)
!6438 = !DILocation(line: 982, column: 9, scope: !6435)
!6439 = !DILocation(line: 982, column: 2, scope: !6435)
!6440 = !DILocation(line: 983, column: 7, scope: !5726)
!6441 = !DILocation(line: 987, column: 11, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 987, column: 11)
!6443 = !DILocation(line: 987, column: 25, scope: !6442)
!6444 = !DILocation(line: 987, column: 11, scope: !5726)
!6445 = !DILocation(line: 988, column: 36, scope: !6442)
!6446 = !DILocation(line: 988, column: 42, scope: !6442)
!6447 = !DILocation(line: 989, column: 8, scope: !6442)
!6448 = !DILocation(line: 988, column: 9, scope: !6442)
!6449 = !DILocation(line: 988, column: 2, scope: !6442)
!6450 = !DILocation(line: 990, column: 7, scope: !5726)
!6451 = !DILocation(line: 997, column: 11, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 997, column: 11)
!6453 = !DILocation(line: 997, column: 25, scope: !6452)
!6454 = !DILocation(line: 998, column: 4, scope: !6452)
!6455 = !DILocation(line: 998, column: 7, scope: !6452)
!6456 = !DILocation(line: 998, column: 34, scope: !6452)
!6457 = !DILocation(line: 998, column: 31, scope: !6452)
!6458 = !DILocation(line: 999, column: 4, scope: !6452)
!6459 = !DILocation(line: 999, column: 7, scope: !6452)
!6460 = !DILocation(line: 999, column: 31, scope: !6452)
!6461 = !DILocation(line: 1000, column: 4, scope: !6452)
!6462 = !DILocation(line: 1000, column: 7, scope: !6452)
!6463 = !DILocation(line: 1000, column: 41, scope: !6452)
!6464 = !DILocation(line: 1001, column: 4, scope: !6452)
!6465 = !DILocation(line: 1001, column: 7, scope: !6452)
!6466 = !DILocation(line: 1001, column: 41, scope: !6452)
!6467 = !DILocation(line: 997, column: 11, scope: !5726)
!6468 = !DILocation(line: 1002, column: 9, scope: !6452)
!6469 = !DILocation(line: 1002, column: 2, scope: !6452)
!6470 = !DILocation(line: 1007, column: 11, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 1007, column: 11)
!6472 = !DILocation(line: 1007, column: 25, scope: !6471)
!6473 = !DILocation(line: 1008, column: 4, scope: !6471)
!6474 = !DILocation(line: 1008, column: 7, scope: !6471)
!6475 = !DILocation(line: 1009, column: 4, scope: !6471)
!6476 = !DILocation(line: 1009, column: 9, scope: !6471)
!6477 = !DILocation(line: 1010, column: 4, scope: !6471)
!6478 = !DILocation(line: 1010, column: 7, scope: !6471)
!6479 = !DILocation(line: 1010, column: 31, scope: !6471)
!6480 = !DILocation(line: 1010, column: 28, scope: !6471)
!6481 = !DILocation(line: 1007, column: 11, scope: !5726)
!6482 = !DILocation(line: 1011, column: 19, scope: !6471)
!6483 = !DILocation(line: 1011, column: 40, scope: !6471)
!6484 = !DILocation(line: 1011, column: 46, scope: !6471)
!6485 = !DILocation(line: 1011, column: 9, scope: !6471)
!6486 = !DILocation(line: 1011, column: 2, scope: !6471)
!6487 = !DILocation(line: 1027, column: 7, scope: !5726)
!6488 = !DILocation(line: 1033, column: 11, scope: !6489)
!6489 = distinct !DILexicalBlock(scope: !5726, file: !1, line: 1033, column: 11)
!6490 = !DILocation(line: 1033, column: 25, scope: !6489)
!6491 = !DILocation(line: 1034, column: 4, scope: !6489)
!6492 = !DILocation(line: 1034, column: 7, scope: !6489)
!6493 = !DILocation(line: 1035, column: 4, scope: !6489)
!6494 = !DILocation(line: 1035, column: 7, scope: !6489)
!6495 = !DILocation(line: 1035, column: 39, scope: !6489)
!6496 = !DILocation(line: 1036, column: 4, scope: !6489)
!6497 = !DILocation(line: 1036, column: 7, scope: !6489)
!6498 = !DILocation(line: 1036, column: 31, scope: !6489)
!6499 = !DILocation(line: 1036, column: 28, scope: !6489)
!6500 = !DILocation(line: 1033, column: 11, scope: !5726)
!6501 = !DILocation(line: 1037, column: 19, scope: !6489)
!6502 = !DILocation(line: 1037, column: 40, scope: !6489)
!6503 = !DILocation(line: 1037, column: 46, scope: !6489)
!6504 = !DILocation(line: 1037, column: 9, scope: !6489)
!6505 = !DILocation(line: 1037, column: 2, scope: !6489)
!6506 = !DILocation(line: 1053, column: 7, scope: !5726)
!6507 = !DILocation(line: 1056, column: 7, scope: !5726)
!6508 = !DILocation(line: 1059, column: 3, scope: !5709)
!6509 = !DILocation(line: 1060, column: 1, scope: !5709)
!6510 = distinct !DISubprogram(name: "simplify_const_binary_operation", scope: !1, file: !1, line: 3079, type: !2653, scopeLine: 3081, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!6511 = !DILocalVariable(name: "code", arg: 1, scope: !6510, file: !1, line: 3079, type: !397)
!6512 = !DILocation(line: 3079, column: 48, scope: !6510)
!6513 = !DILocalVariable(name: "mode", arg: 2, scope: !6510, file: !1, line: 3079, type: !3)
!6514 = !DILocation(line: 3079, column: 72, scope: !6510)
!6515 = !DILocalVariable(name: "op0", arg: 3, scope: !6510, file: !1, line: 3080, type: !1495)
!6516 = !DILocation(line: 3080, column: 10, scope: !6510)
!6517 = !DILocalVariable(name: "op1", arg: 4, scope: !6510, file: !1, line: 3080, type: !1495)
!6518 = !DILocation(line: 3080, column: 19, scope: !6510)
!6519 = !DILocalVariable(name: "arg0", scope: !6510, file: !1, line: 3082, type: !1585)
!6520 = !DILocation(line: 3082, column: 17, scope: !6510)
!6521 = !DILocalVariable(name: "arg1", scope: !6510, file: !1, line: 3082, type: !1585)
!6522 = !DILocation(line: 3082, column: 23, scope: !6510)
!6523 = !DILocalVariable(name: "arg0s", scope: !6510, file: !1, line: 3082, type: !1585)
!6524 = !DILocation(line: 3082, column: 29, scope: !6510)
!6525 = !DILocalVariable(name: "arg1s", scope: !6510, file: !1, line: 3082, type: !1585)
!6526 = !DILocation(line: 3082, column: 36, scope: !6510)
!6527 = !DILocalVariable(name: "val", scope: !6510, file: !1, line: 3083, type: !1585)
!6528 = !DILocation(line: 3083, column: 17, scope: !6510)
!6529 = !DILocalVariable(name: "width", scope: !6510, file: !1, line: 3084, type: !5)
!6530 = !DILocation(line: 3084, column: 16, scope: !6510)
!6531 = !DILocation(line: 3084, column: 24, scope: !6510)
!6532 = !DILocation(line: 3086, column: 7, scope: !6533)
!6533 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 3086, column: 7)
!6534 = !DILocation(line: 3087, column: 7, scope: !6533)
!6535 = !DILocation(line: 3087, column: 10, scope: !6533)
!6536 = !DILocation(line: 3087, column: 15, scope: !6533)
!6537 = !DILocation(line: 3088, column: 7, scope: !6533)
!6538 = !DILocation(line: 3088, column: 10, scope: !6533)
!6539 = !DILocation(line: 3088, column: 25, scope: !6533)
!6540 = !DILocation(line: 3089, column: 7, scope: !6533)
!6541 = !DILocation(line: 3089, column: 10, scope: !6533)
!6542 = !DILocation(line: 3089, column: 25, scope: !6533)
!6543 = !DILocation(line: 3086, column: 7, scope: !6510)
!6544 = !DILocalVariable(name: "n_elts", scope: !6545, file: !1, line: 3091, type: !5)
!6545 = distinct !DILexicalBlock(scope: !6533, file: !1, line: 3090, column: 5)
!6546 = !DILocation(line: 3091, column: 16, scope: !6545)
!6547 = !DILocation(line: 3091, column: 25, scope: !6545)
!6548 = !DILocalVariable(name: "op0mode", scope: !6545, file: !1, line: 3092, type: !3)
!6549 = !DILocation(line: 3092, column: 25, scope: !6545)
!6550 = !DILocation(line: 3092, column: 35, scope: !6545)
!6551 = !DILocalVariable(name: "op0_n_elts", scope: !6545, file: !1, line: 3093, type: !5)
!6552 = !DILocation(line: 3093, column: 16, scope: !6545)
!6553 = !DILocation(line: 3093, column: 29, scope: !6545)
!6554 = !DILocalVariable(name: "op1mode", scope: !6545, file: !1, line: 3094, type: !3)
!6555 = !DILocation(line: 3094, column: 25, scope: !6545)
!6556 = !DILocation(line: 3094, column: 35, scope: !6545)
!6557 = !DILocalVariable(name: "op1_n_elts", scope: !6545, file: !1, line: 3095, type: !5)
!6558 = !DILocation(line: 3095, column: 16, scope: !6545)
!6559 = !DILocation(line: 3095, column: 29, scope: !6545)
!6560 = !DILocalVariable(name: "v", scope: !6545, file: !1, line: 3096, type: !1526)
!6561 = !DILocation(line: 3096, column: 13, scope: !6545)
!6562 = !DILocation(line: 3096, column: 30, scope: !6545)
!6563 = !DILocation(line: 3096, column: 17, scope: !6545)
!6564 = !DILocalVariable(name: "i", scope: !6545, file: !1, line: 3097, type: !5)
!6565 = !DILocation(line: 3097, column: 20, scope: !6545)
!6566 = !DILocation(line: 3099, column: 7, scope: !6545)
!6567 = !DILocation(line: 3100, column: 7, scope: !6545)
!6568 = !DILocation(line: 3101, column: 14, scope: !6569)
!6569 = distinct !DILexicalBlock(scope: !6545, file: !1, line: 3101, column: 7)
!6570 = !DILocation(line: 3101, column: 12, scope: !6569)
!6571 = !DILocation(line: 3101, column: 19, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6569, file: !1, line: 3101, column: 7)
!6573 = !DILocation(line: 3101, column: 23, scope: !6572)
!6574 = !DILocation(line: 3101, column: 21, scope: !6572)
!6575 = !DILocation(line: 3101, column: 7, scope: !6569)
!6576 = !DILocalVariable(name: "x", scope: !6577, file: !1, line: 3103, type: !1495)
!6577 = distinct !DILexicalBlock(scope: !6572, file: !1, line: 3102, column: 2)
!6578 = !DILocation(line: 3103, column: 8, scope: !6577)
!6579 = !DILocation(line: 3103, column: 39, scope: !6577)
!6580 = !DILocation(line: 3103, column: 45, scope: !6577)
!6581 = !DILocation(line: 3104, column: 11, scope: !6577)
!6582 = !DILocation(line: 3105, column: 11, scope: !6577)
!6583 = !DILocation(line: 3103, column: 12, scope: !6577)
!6584 = !DILocation(line: 3106, column: 9, scope: !6585)
!6585 = distinct !DILexicalBlock(scope: !6577, file: !1, line: 3106, column: 8)
!6586 = !DILocation(line: 3106, column: 8, scope: !6577)
!6587 = !DILocation(line: 3107, column: 6, scope: !6585)
!6588 = !DILocation(line: 3108, column: 23, scope: !6577)
!6589 = !DILocation(line: 3108, column: 4, scope: !6577)
!6590 = !DILocation(line: 3108, column: 21, scope: !6577)
!6591 = !DILocation(line: 3109, column: 2, scope: !6577)
!6592 = !DILocation(line: 3101, column: 32, scope: !6572)
!6593 = !DILocation(line: 3101, column: 7, scope: !6572)
!6594 = distinct !{!6594, !6575, !6595}
!6595 = !DILocation(line: 3109, column: 2, scope: !6569)
!6596 = !DILocation(line: 3111, column: 36, scope: !6545)
!6597 = !DILocation(line: 3111, column: 42, scope: !6545)
!6598 = !DILocation(line: 3111, column: 14, scope: !6545)
!6599 = !DILocation(line: 3111, column: 7, scope: !6545)
!6600 = !DILocation(line: 3114, column: 7, scope: !6601)
!6601 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 3114, column: 7)
!6602 = !DILocation(line: 3115, column: 7, scope: !6601)
!6603 = !DILocation(line: 3115, column: 10, scope: !6601)
!6604 = !DILocation(line: 3115, column: 15, scope: !6601)
!6605 = !DILocation(line: 3116, column: 7, scope: !6601)
!6606 = !DILocation(line: 3116, column: 11, scope: !6601)
!6607 = !DILocation(line: 3117, column: 4, scope: !6601)
!6608 = !DILocation(line: 3117, column: 7, scope: !6601)
!6609 = !DILocation(line: 3117, column: 22, scope: !6601)
!6610 = !DILocation(line: 3118, column: 4, scope: !6601)
!6611 = !DILocation(line: 3118, column: 7, scope: !6601)
!6612 = !DILocation(line: 3118, column: 22, scope: !6601)
!6613 = !DILocation(line: 3119, column: 7, scope: !6601)
!6614 = !DILocation(line: 3119, column: 11, scope: !6601)
!6615 = !DILocation(line: 3120, column: 4, scope: !6601)
!6616 = !DILocation(line: 3120, column: 7, scope: !6601)
!6617 = !DILocation(line: 3120, column: 22, scope: !6601)
!6618 = !DILocation(line: 3121, column: 4, scope: !6601)
!6619 = !DILocation(line: 3121, column: 7, scope: !6601)
!6620 = !DILocation(line: 3121, column: 22, scope: !6601)
!6621 = !DILocation(line: 3114, column: 7, scope: !6510)
!6622 = !DILocalVariable(name: "n_elts", scope: !6623, file: !1, line: 3123, type: !5)
!6623 = distinct !DILexicalBlock(scope: !6601, file: !1, line: 3122, column: 5)
!6624 = !DILocation(line: 3123, column: 16, scope: !6623)
!6625 = !DILocation(line: 3123, column: 25, scope: !6623)
!6626 = !DILocalVariable(name: "v", scope: !6623, file: !1, line: 3124, type: !1526)
!6627 = !DILocation(line: 3124, column: 13, scope: !6623)
!6628 = !DILocation(line: 3124, column: 30, scope: !6623)
!6629 = !DILocation(line: 3124, column: 17, scope: !6623)
!6630 = !DILocation(line: 3126, column: 7, scope: !6623)
!6631 = !DILocation(line: 3127, column: 11, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6623, file: !1, line: 3127, column: 11)
!6633 = !DILocation(line: 3127, column: 18, scope: !6632)
!6634 = !DILocation(line: 3127, column: 11, scope: !6623)
!6635 = !DILocation(line: 3129, column: 4, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6632, file: !1, line: 3128, column: 2)
!6637 = !DILocation(line: 3130, column: 4, scope: !6636)
!6638 = !DILocation(line: 3132, column: 23, scope: !6636)
!6639 = !DILocation(line: 3132, column: 4, scope: !6636)
!6640 = !DILocation(line: 3132, column: 21, scope: !6636)
!6641 = !DILocation(line: 3133, column: 23, scope: !6636)
!6642 = !DILocation(line: 3133, column: 4, scope: !6636)
!6643 = !DILocation(line: 3133, column: 21, scope: !6636)
!6644 = !DILocation(line: 3134, column: 2, scope: !6636)
!6645 = !DILocalVariable(name: "op0_n_elts", scope: !6646, file: !1, line: 3137, type: !5)
!6646 = distinct !DILexicalBlock(scope: !6632, file: !1, line: 3136, column: 2)
!6647 = !DILocation(line: 3137, column: 13, scope: !6646)
!6648 = !DILocation(line: 3137, column: 26, scope: !6646)
!6649 = !DILocalVariable(name: "op1_n_elts", scope: !6646, file: !1, line: 3138, type: !5)
!6650 = !DILocation(line: 3138, column: 13, scope: !6646)
!6651 = !DILocation(line: 3138, column: 26, scope: !6646)
!6652 = !DILocalVariable(name: "i", scope: !6646, file: !1, line: 3139, type: !5)
!6653 = !DILocation(line: 3139, column: 13, scope: !6646)
!6654 = !DILocation(line: 3141, column: 4, scope: !6646)
!6655 = !DILocation(line: 3142, column: 4, scope: !6646)
!6656 = !DILocation(line: 3143, column: 4, scope: !6646)
!6657 = !DILocation(line: 3145, column: 11, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 3145, column: 4)
!6659 = !DILocation(line: 3145, column: 9, scope: !6658)
!6660 = !DILocation(line: 3145, column: 16, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !1, line: 3145, column: 4)
!6662 = !DILocation(line: 3145, column: 20, scope: !6661)
!6663 = !DILocation(line: 3145, column: 18, scope: !6661)
!6664 = !DILocation(line: 3145, column: 4, scope: !6658)
!6665 = !DILocation(line: 3146, column: 25, scope: !6661)
!6666 = !DILocation(line: 3146, column: 6, scope: !6661)
!6667 = !DILocation(line: 3146, column: 23, scope: !6661)
!6668 = !DILocation(line: 3145, column: 32, scope: !6661)
!6669 = !DILocation(line: 3145, column: 4, scope: !6661)
!6670 = distinct !{!6670, !6664, !6671}
!6671 = !DILocation(line: 3146, column: 25, scope: !6658)
!6672 = !DILocation(line: 3147, column: 11, scope: !6673)
!6673 = distinct !DILexicalBlock(scope: !6646, file: !1, line: 3147, column: 4)
!6674 = !DILocation(line: 3147, column: 9, scope: !6673)
!6675 = !DILocation(line: 3147, column: 16, scope: !6676)
!6676 = distinct !DILexicalBlock(scope: !6673, file: !1, line: 3147, column: 4)
!6677 = !DILocation(line: 3147, column: 20, scope: !6676)
!6678 = !DILocation(line: 3147, column: 18, scope: !6676)
!6679 = !DILocation(line: 3147, column: 4, scope: !6673)
!6680 = !DILocation(line: 3148, column: 36, scope: !6676)
!6681 = !DILocation(line: 3148, column: 6, scope: !6676)
!6682 = !DILocation(line: 3148, column: 34, scope: !6676)
!6683 = !DILocation(line: 3147, column: 32, scope: !6676)
!6684 = !DILocation(line: 3147, column: 4, scope: !6676)
!6685 = distinct !{!6685, !6679, !6686}
!6686 = !DILocation(line: 3148, column: 36, scope: !6673)
!6687 = !DILocation(line: 3151, column: 36, scope: !6623)
!6688 = !DILocation(line: 3151, column: 42, scope: !6623)
!6689 = !DILocation(line: 3151, column: 14, scope: !6623)
!6690 = !DILocation(line: 3151, column: 7, scope: !6623)
!6691 = !DILocation(line: 3154, column: 7, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 3154, column: 7)
!6693 = !DILocation(line: 3155, column: 7, scope: !6692)
!6694 = !DILocation(line: 3155, column: 10, scope: !6692)
!6695 = !DILocation(line: 3155, column: 25, scope: !6692)
!6696 = !DILocation(line: 3156, column: 7, scope: !6692)
!6697 = !DILocation(line: 3156, column: 10, scope: !6692)
!6698 = !DILocation(line: 3156, column: 25, scope: !6692)
!6699 = !DILocation(line: 3157, column: 7, scope: !6692)
!6700 = !DILocation(line: 3157, column: 10, scope: !6692)
!6701 = !DILocation(line: 3157, column: 18, scope: !6692)
!6702 = !DILocation(line: 3157, column: 15, scope: !6692)
!6703 = !DILocation(line: 3157, column: 33, scope: !6692)
!6704 = !DILocation(line: 3157, column: 36, scope: !6692)
!6705 = !DILocation(line: 3157, column: 44, scope: !6692)
!6706 = !DILocation(line: 3157, column: 41, scope: !6692)
!6707 = !DILocation(line: 3154, column: 7, scope: !6510)
!6708 = !DILocation(line: 3159, column: 11, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6710, file: !1, line: 3159, column: 11)
!6710 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 3158, column: 5)
!6711 = !DILocation(line: 3159, column: 16, scope: !6709)
!6712 = !DILocation(line: 3160, column: 4, scope: !6709)
!6713 = !DILocation(line: 3160, column: 7, scope: !6709)
!6714 = !DILocation(line: 3160, column: 12, scope: !6709)
!6715 = !DILocation(line: 3161, column: 4, scope: !6709)
!6716 = !DILocation(line: 3161, column: 7, scope: !6709)
!6717 = !DILocation(line: 3161, column: 12, scope: !6709)
!6718 = !DILocation(line: 3159, column: 11, scope: !6710)
!6719 = !DILocalVariable(name: "tmp0", scope: !6720, file: !1, line: 3163, type: !5520)
!6720 = distinct !DILexicalBlock(scope: !6709, file: !1, line: 3162, column: 2)
!6721 = !DILocation(line: 3163, column: 9, scope: !6720)
!6722 = !DILocalVariable(name: "tmp1", scope: !6720, file: !1, line: 3164, type: !5520)
!6723 = !DILocation(line: 3164, column: 9, scope: !6720)
!6724 = !DILocalVariable(name: "r", scope: !6720, file: !1, line: 3165, type: !1676)
!6725 = !DILocation(line: 3165, column: 20, scope: !6720)
!6726 = !DILocalVariable(name: "i", scope: !6720, file: !1, line: 3166, type: !1518)
!6727 = !DILocation(line: 3166, column: 8, scope: !6720)
!6728 = !DILocation(line: 3168, column: 20, scope: !6720)
!6729 = !DILocation(line: 3168, column: 26, scope: !6720)
!6730 = !DILocation(line: 3169, column: 6, scope: !6720)
!6731 = !DILocation(line: 3168, column: 4, scope: !6720)
!6732 = !DILocation(line: 3170, column: 20, scope: !6720)
!6733 = !DILocation(line: 3170, column: 26, scope: !6720)
!6734 = !DILocation(line: 3171, column: 6, scope: !6720)
!6735 = !DILocation(line: 3170, column: 4, scope: !6720)
!6736 = !DILocation(line: 3172, column: 11, scope: !6737)
!6737 = distinct !DILexicalBlock(scope: !6720, file: !1, line: 3172, column: 4)
!6738 = !DILocation(line: 3172, column: 9, scope: !6737)
!6739 = !DILocation(line: 3172, column: 16, scope: !6740)
!6740 = distinct !DILexicalBlock(scope: !6737, file: !1, line: 3172, column: 4)
!6741 = !DILocation(line: 3172, column: 18, scope: !6740)
!6742 = !DILocation(line: 3172, column: 4, scope: !6737)
!6743 = !DILocation(line: 3174, column: 16, scope: !6744)
!6744 = distinct !DILexicalBlock(scope: !6740, file: !1, line: 3173, column: 6)
!6745 = !DILocation(line: 3174, column: 8, scope: !6744)
!6746 = !DILocation(line: 3177, column: 19, scope: !6747)
!6747 = distinct !DILexicalBlock(scope: !6744, file: !1, line: 3175, column: 8)
!6748 = !DILocation(line: 3177, column: 14, scope: !6747)
!6749 = !DILocation(line: 3177, column: 8, scope: !6747)
!6750 = !DILocation(line: 3177, column: 3, scope: !6747)
!6751 = !DILocation(line: 3177, column: 11, scope: !6747)
!6752 = !DILocation(line: 3178, column: 3, scope: !6747)
!6753 = !DILocation(line: 3180, column: 19, scope: !6747)
!6754 = !DILocation(line: 3180, column: 14, scope: !6747)
!6755 = !DILocation(line: 3180, column: 8, scope: !6747)
!6756 = !DILocation(line: 3180, column: 3, scope: !6747)
!6757 = !DILocation(line: 3180, column: 11, scope: !6747)
!6758 = !DILocation(line: 3181, column: 3, scope: !6747)
!6759 = !DILocation(line: 3183, column: 19, scope: !6747)
!6760 = !DILocation(line: 3183, column: 14, scope: !6747)
!6761 = !DILocation(line: 3183, column: 8, scope: !6747)
!6762 = !DILocation(line: 3183, column: 3, scope: !6747)
!6763 = !DILocation(line: 3183, column: 11, scope: !6747)
!6764 = !DILocation(line: 3184, column: 3, scope: !6747)
!6765 = !DILocation(line: 3186, column: 3, scope: !6747)
!6766 = !DILocation(line: 3187, column: 8, scope: !6747)
!6767 = !DILocation(line: 3188, column: 6, scope: !6744)
!6768 = !DILocation(line: 3172, column: 24, scope: !6740)
!6769 = !DILocation(line: 3172, column: 4, scope: !6740)
!6770 = distinct !{!6770, !6742, !6771}
!6771 = !DILocation(line: 3188, column: 6, scope: !6737)
!6772 = !DILocation(line: 3189, column: 27, scope: !6720)
!6773 = !DILocation(line: 3189, column: 33, scope: !6720)
!6774 = !DILocation(line: 3189, column: 5, scope: !6720)
!6775 = !DILocation(line: 3190, column: 12, scope: !6720)
!6776 = !DILocation(line: 3190, column: 5, scope: !6720)
!6777 = !DILocalVariable(name: "f0", scope: !6778, file: !1, line: 3194, type: !1676)
!6778 = distinct !DILexicalBlock(scope: !6709, file: !1, line: 3193, column: 2)
!6779 = !DILocation(line: 3194, column: 20, scope: !6778)
!6780 = !DILocalVariable(name: "f1", scope: !6778, file: !1, line: 3194, type: !1676)
!6781 = !DILocation(line: 3194, column: 24, scope: !6778)
!6782 = !DILocalVariable(name: "value", scope: !6778, file: !1, line: 3194, type: !1676)
!6783 = !DILocation(line: 3194, column: 28, scope: !6778)
!6784 = !DILocalVariable(name: "result", scope: !6778, file: !1, line: 3194, type: !1676)
!6785 = !DILocation(line: 3194, column: 35, scope: !6778)
!6786 = !DILocalVariable(name: "inexact", scope: !6778, file: !1, line: 3195, type: !1729)
!6787 = !DILocation(line: 3195, column: 9, scope: !6778)
!6788 = !DILocation(line: 3197, column: 4, scope: !6778)
!6789 = !DILocation(line: 3198, column: 4, scope: !6778)
!6790 = !DILocation(line: 3199, column: 23, scope: !6778)
!6791 = !DILocation(line: 3199, column: 4, scope: !6778)
!6792 = !DILocation(line: 3200, column: 23, scope: !6778)
!6793 = !DILocation(line: 3200, column: 4, scope: !6778)
!6794 = !DILocation(line: 3202, column: 8, scope: !6795)
!6795 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3202, column: 8)
!6796 = !DILocation(line: 3203, column: 8, scope: !6795)
!6797 = !DILocation(line: 3203, column: 12, scope: !6795)
!6798 = !DILocation(line: 3203, column: 34, scope: !6795)
!6799 = !DILocation(line: 3203, column: 37, scope: !6795)
!6800 = !DILocation(line: 3202, column: 8, scope: !6778)
!6801 = !DILocation(line: 3204, column: 6, scope: !6795)
!6802 = !DILocation(line: 3206, column: 8, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3206, column: 8)
!6804 = !DILocation(line: 3206, column: 13, scope: !6803)
!6805 = !DILocation(line: 3207, column: 8, scope: !6803)
!6806 = !DILocation(line: 3207, column: 11, scope: !6803)
!6807 = !DILocation(line: 3208, column: 8, scope: !6803)
!6808 = !DILocation(line: 3208, column: 12, scope: !6803)
!6809 = !DILocation(line: 3208, column: 31, scope: !6803)
!6810 = !DILocation(line: 3208, column: 36, scope: !6803)
!6811 = !DILocation(line: 3206, column: 8, scope: !6778)
!6812 = !DILocation(line: 3209, column: 6, scope: !6803)
!6813 = !DILocation(line: 3211, column: 8, scope: !6814)
!6814 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3211, column: 8)
!6815 = !DILocation(line: 3211, column: 35, scope: !6814)
!6816 = !DILocation(line: 3211, column: 38, scope: !6814)
!6817 = !DILocation(line: 3212, column: 8, scope: !6814)
!6818 = !DILocation(line: 3212, column: 11, scope: !6814)
!6819 = !DILocation(line: 3213, column: 8, scope: !6814)
!6820 = !DILocation(line: 3213, column: 11, scope: !6814)
!6821 = !DILocation(line: 3213, column: 33, scope: !6814)
!6822 = !DILocation(line: 3213, column: 36, scope: !6814)
!6823 = !DILocation(line: 3211, column: 8, scope: !6778)
!6824 = !DILocalVariable(name: "s0", scope: !6825, file: !1, line: 3215, type: !1518)
!6825 = distinct !DILexicalBlock(scope: !6814, file: !1, line: 3214, column: 6)
!6826 = !DILocation(line: 3215, column: 12, scope: !6825)
!6827 = !DILocation(line: 3215, column: 17, scope: !6825)
!6828 = !DILocalVariable(name: "s1", scope: !6825, file: !1, line: 3216, type: !1518)
!6829 = !DILocation(line: 3216, column: 12, scope: !6825)
!6830 = !DILocation(line: 3216, column: 17, scope: !6825)
!6831 = !DILocation(line: 3218, column: 16, scope: !6825)
!6832 = !DILocation(line: 3218, column: 8, scope: !6825)
!6833 = !DILocation(line: 3222, column: 9, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !6835, file: !1, line: 3222, column: 9)
!6835 = distinct !DILexicalBlock(scope: !6825, file: !1, line: 3219, column: 3)
!6836 = !DILocation(line: 3222, column: 15, scope: !6834)
!6837 = !DILocation(line: 3222, column: 12, scope: !6834)
!6838 = !DILocation(line: 3222, column: 9, scope: !6835)
!6839 = !DILocation(line: 3223, column: 7, scope: !6834)
!6840 = !DILocation(line: 3224, column: 5, scope: !6835)
!6841 = !DILocation(line: 3227, column: 9, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6835, file: !1, line: 3227, column: 9)
!6843 = !DILocation(line: 3227, column: 15, scope: !6842)
!6844 = !DILocation(line: 3227, column: 12, scope: !6842)
!6845 = !DILocation(line: 3227, column: 9, scope: !6835)
!6846 = !DILocation(line: 3228, column: 7, scope: !6842)
!6847 = !DILocation(line: 3229, column: 5, scope: !6835)
!6848 = !DILocation(line: 3232, column: 5, scope: !6835)
!6849 = !DILocation(line: 3234, column: 5, scope: !6835)
!6850 = !DILocation(line: 3236, column: 6, scope: !6825)
!6851 = !DILocation(line: 3238, column: 8, scope: !6852)
!6852 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3238, column: 8)
!6853 = !DILocation(line: 3238, column: 13, scope: !6852)
!6854 = !DILocation(line: 3238, column: 21, scope: !6852)
!6855 = !DILocation(line: 3238, column: 24, scope: !6852)
!6856 = !DILocation(line: 3238, column: 51, scope: !6852)
!6857 = !DILocation(line: 3238, column: 54, scope: !6852)
!6858 = !DILocation(line: 3239, column: 8, scope: !6852)
!6859 = !DILocation(line: 3239, column: 11, scope: !6852)
!6860 = !DILocation(line: 3240, column: 8, scope: !6852)
!6861 = !DILocation(line: 3240, column: 13, scope: !6852)
!6862 = !DILocation(line: 3240, column: 35, scope: !6852)
!6863 = !DILocation(line: 3240, column: 38, scope: !6852)
!6864 = !DILocation(line: 3241, column: 5, scope: !6852)
!6865 = !DILocation(line: 3241, column: 9, scope: !6852)
!6866 = !DILocation(line: 3242, column: 9, scope: !6852)
!6867 = !DILocation(line: 3242, column: 12, scope: !6852)
!6868 = !DILocation(line: 3238, column: 8, scope: !6778)
!6869 = !DILocation(line: 3244, column: 6, scope: !6852)
!6870 = !DILocation(line: 3246, column: 57, scope: !6778)
!6871 = !DILocation(line: 3246, column: 39, scope: !6778)
!6872 = !DILocation(line: 3246, column: 14, scope: !6778)
!6873 = !DILocation(line: 3246, column: 12, scope: !6778)
!6874 = !DILocation(line: 3248, column: 27, scope: !6778)
!6875 = !DILocation(line: 3248, column: 4, scope: !6778)
!6876 = !DILocation(line: 3253, column: 8, scope: !6877)
!6877 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3253, column: 8)
!6878 = !DILocation(line: 3254, column: 8, scope: !6877)
!6879 = !DILocation(line: 3254, column: 11, scope: !6877)
!6880 = !DILocation(line: 3255, column: 8, scope: !6877)
!6881 = !DILocation(line: 3255, column: 11, scope: !6877)
!6882 = !DILocation(line: 3256, column: 8, scope: !6877)
!6883 = !DILocation(line: 3256, column: 12, scope: !6877)
!6884 = !DILocation(line: 3257, column: 8, scope: !6877)
!6885 = !DILocation(line: 3257, column: 12, scope: !6877)
!6886 = !DILocation(line: 3253, column: 8, scope: !6778)
!6887 = !DILocation(line: 3259, column: 6, scope: !6877)
!6888 = !DILocation(line: 3266, column: 9, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6778, file: !1, line: 3266, column: 8)
!6890 = !DILocation(line: 3267, column: 9, scope: !6889)
!6891 = !DILocation(line: 3267, column: 13, scope: !6889)
!6892 = !DILocation(line: 3267, column: 37, scope: !6889)
!6893 = !DILocation(line: 3267, column: 41, scope: !6889)
!6894 = !DILocation(line: 3268, column: 8, scope: !6889)
!6895 = !DILocation(line: 3268, column: 12, scope: !6889)
!6896 = !DILocation(line: 3268, column: 20, scope: !6889)
!6897 = !DILocation(line: 3268, column: 24, scope: !6889)
!6898 = !DILocation(line: 3266, column: 8, scope: !6778)
!6899 = !DILocation(line: 3269, column: 6, scope: !6889)
!6900 = !DILocation(line: 3271, column: 11, scope: !6778)
!6901 = !DILocation(line: 3271, column: 4, scope: !6778)
!6902 = !DILocation(line: 3276, column: 7, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 3276, column: 7)
!6904 = !DILocation(line: 3276, column: 29, scope: !6903)
!6905 = !DILocation(line: 3277, column: 7, scope: !6903)
!6906 = !DILocation(line: 3277, column: 10, scope: !6903)
!6907 = !DILocation(line: 3277, column: 16, scope: !6903)
!6908 = !DILocation(line: 3278, column: 7, scope: !6903)
!6909 = !DILocation(line: 3278, column: 11, scope: !6903)
!6910 = !DILocation(line: 3278, column: 26, scope: !6903)
!6911 = !DILocation(line: 3278, column: 42, scope: !6903)
!6912 = !DILocation(line: 3278, column: 45, scope: !6903)
!6913 = !DILocation(line: 3279, column: 7, scope: !6903)
!6914 = !DILocation(line: 3279, column: 11, scope: !6903)
!6915 = !DILocation(line: 3279, column: 26, scope: !6903)
!6916 = !DILocation(line: 3279, column: 42, scope: !6903)
!6917 = !DILocation(line: 3279, column: 45, scope: !6903)
!6918 = !DILocation(line: 3276, column: 7, scope: !6510)
!6919 = !DILocalVariable(name: "l1", scope: !6920, file: !1, line: 3281, type: !1568)
!6920 = distinct !DILexicalBlock(scope: !6903, file: !1, line: 3280, column: 5)
!6921 = !DILocation(line: 3281, column: 30, scope: !6920)
!6922 = !DILocalVariable(name: "l2", scope: !6920, file: !1, line: 3281, type: !1568)
!6923 = !DILocation(line: 3281, column: 34, scope: !6920)
!6924 = !DILocalVariable(name: "lv", scope: !6920, file: !1, line: 3281, type: !1568)
!6925 = !DILocation(line: 3281, column: 38, scope: !6920)
!6926 = !DILocalVariable(name: "lt", scope: !6920, file: !1, line: 3281, type: !1568)
!6927 = !DILocation(line: 3281, column: 42, scope: !6920)
!6928 = !DILocalVariable(name: "h1", scope: !6920, file: !1, line: 3282, type: !1585)
!6929 = !DILocation(line: 3282, column: 21, scope: !6920)
!6930 = !DILocalVariable(name: "h2", scope: !6920, file: !1, line: 3282, type: !1585)
!6931 = !DILocation(line: 3282, column: 25, scope: !6920)
!6932 = !DILocalVariable(name: "hv", scope: !6920, file: !1, line: 3282, type: !1585)
!6933 = !DILocation(line: 3282, column: 29, scope: !6920)
!6934 = !DILocalVariable(name: "ht", scope: !6920, file: !1, line: 3282, type: !1585)
!6935 = !DILocation(line: 3282, column: 33, scope: !6920)
!6936 = !DILocation(line: 3284, column: 11, scope: !6937)
!6937 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 3284, column: 11)
!6938 = !DILocation(line: 3284, column: 26, scope: !6937)
!6939 = !DILocation(line: 3284, column: 11, scope: !6920)
!6940 = !DILocation(line: 3285, column: 7, scope: !6937)
!6941 = !DILocation(line: 3285, column: 5, scope: !6937)
!6942 = !DILocation(line: 3285, column: 36, scope: !6937)
!6943 = !DILocation(line: 3285, column: 34, scope: !6937)
!6944 = !DILocation(line: 3285, column: 2, scope: !6937)
!6945 = !DILocation(line: 3287, column: 7, scope: !6937)
!6946 = !DILocation(line: 3287, column: 5, scope: !6937)
!6947 = !DILocation(line: 3287, column: 26, scope: !6937)
!6948 = !DILocation(line: 3287, column: 24, scope: !6937)
!6949 = !DILocation(line: 3289, column: 11, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 3289, column: 11)
!6951 = !DILocation(line: 3289, column: 26, scope: !6950)
!6952 = !DILocation(line: 3289, column: 11, scope: !6920)
!6953 = !DILocation(line: 3290, column: 7, scope: !6950)
!6954 = !DILocation(line: 3290, column: 5, scope: !6950)
!6955 = !DILocation(line: 3290, column: 36, scope: !6950)
!6956 = !DILocation(line: 3290, column: 34, scope: !6950)
!6957 = !DILocation(line: 3290, column: 2, scope: !6950)
!6958 = !DILocation(line: 3292, column: 7, scope: !6950)
!6959 = !DILocation(line: 3292, column: 5, scope: !6950)
!6960 = !DILocation(line: 3292, column: 26, scope: !6950)
!6961 = !DILocation(line: 3292, column: 24, scope: !6950)
!6962 = !DILocation(line: 3294, column: 15, scope: !6920)
!6963 = !DILocation(line: 3294, column: 7, scope: !6920)
!6964 = !DILocation(line: 3298, column: 16, scope: !6965)
!6965 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 3295, column: 2)
!6966 = !DILocation(line: 3298, column: 20, scope: !6965)
!6967 = !DILocation(line: 3298, column: 4, scope: !6965)
!6968 = !DILocation(line: 3299, column: 9, scope: !6965)
!6969 = !DILocation(line: 3299, column: 7, scope: !6965)
!6970 = !DILocation(line: 3299, column: 18, scope: !6965)
!6971 = !DILocation(line: 3299, column: 16, scope: !6965)
!6972 = !DILocation(line: 3299, column: 4, scope: !6965)
!6973 = !DILocation(line: 3304, column: 4, scope: !6965)
!6974 = !DILocation(line: 3305, column: 4, scope: !6965)
!6975 = !DILocation(line: 3308, column: 4, scope: !6965)
!6976 = !DILocation(line: 3309, column: 4, scope: !6965)
!6977 = !DILocation(line: 3312, column: 49, scope: !6978)
!6978 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3312, column: 8)
!6979 = !DILocation(line: 3312, column: 53, scope: !6978)
!6980 = !DILocation(line: 3312, column: 57, scope: !6978)
!6981 = !DILocation(line: 3312, column: 61, scope: !6978)
!6982 = !DILocation(line: 3312, column: 8, scope: !6978)
!6983 = !DILocation(line: 3312, column: 8, scope: !6965)
!6984 = !DILocation(line: 3314, column: 6, scope: !6978)
!6985 = !DILocation(line: 3315, column: 4, scope: !6965)
!6986 = !DILocation(line: 3318, column: 49, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3318, column: 8)
!6988 = !DILocation(line: 3318, column: 53, scope: !6987)
!6989 = !DILocation(line: 3318, column: 57, scope: !6987)
!6990 = !DILocation(line: 3318, column: 61, scope: !6987)
!6991 = !DILocation(line: 3318, column: 8, scope: !6987)
!6992 = !DILocation(line: 3318, column: 8, scope: !6965)
!6993 = !DILocation(line: 3320, column: 6, scope: !6987)
!6994 = !DILocation(line: 3321, column: 4, scope: !6965)
!6995 = !DILocation(line: 3324, column: 49, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3324, column: 8)
!6997 = !DILocation(line: 3324, column: 53, scope: !6996)
!6998 = !DILocation(line: 3324, column: 57, scope: !6996)
!6999 = !DILocation(line: 3324, column: 61, scope: !6996)
!7000 = !DILocation(line: 3324, column: 8, scope: !6996)
!7001 = !DILocation(line: 3324, column: 8, scope: !6965)
!7002 = !DILocation(line: 3326, column: 6, scope: !6996)
!7003 = !DILocation(line: 3327, column: 4, scope: !6965)
!7004 = !DILocation(line: 3330, column: 49, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3330, column: 8)
!7006 = !DILocation(line: 3330, column: 53, scope: !7005)
!7007 = !DILocation(line: 3330, column: 57, scope: !7005)
!7008 = !DILocation(line: 3330, column: 61, scope: !7005)
!7009 = !DILocation(line: 3330, column: 8, scope: !7005)
!7010 = !DILocation(line: 3330, column: 8, scope: !6965)
!7011 = !DILocation(line: 3332, column: 6, scope: !7005)
!7012 = !DILocation(line: 3333, column: 4, scope: !6965)
!7013 = !DILocation(line: 3336, column: 9, scope: !6965)
!7014 = !DILocation(line: 3336, column: 14, scope: !6965)
!7015 = !DILocation(line: 3336, column: 12, scope: !6965)
!7016 = !DILocation(line: 3336, column: 7, scope: !6965)
!7017 = !DILocation(line: 3336, column: 23, scope: !6965)
!7018 = !DILocation(line: 3336, column: 28, scope: !6965)
!7019 = !DILocation(line: 3336, column: 26, scope: !6965)
!7020 = !DILocation(line: 3336, column: 21, scope: !6965)
!7021 = !DILocation(line: 3337, column: 4, scope: !6965)
!7022 = !DILocation(line: 3340, column: 9, scope: !6965)
!7023 = !DILocation(line: 3340, column: 14, scope: !6965)
!7024 = !DILocation(line: 3340, column: 12, scope: !6965)
!7025 = !DILocation(line: 3340, column: 7, scope: !6965)
!7026 = !DILocation(line: 3340, column: 23, scope: !6965)
!7027 = !DILocation(line: 3340, column: 28, scope: !6965)
!7028 = !DILocation(line: 3340, column: 26, scope: !6965)
!7029 = !DILocation(line: 3340, column: 21, scope: !6965)
!7030 = !DILocation(line: 3341, column: 4, scope: !6965)
!7031 = !DILocation(line: 3344, column: 9, scope: !6965)
!7032 = !DILocation(line: 3344, column: 14, scope: !6965)
!7033 = !DILocation(line: 3344, column: 12, scope: !6965)
!7034 = !DILocation(line: 3344, column: 7, scope: !6965)
!7035 = !DILocation(line: 3344, column: 23, scope: !6965)
!7036 = !DILocation(line: 3344, column: 28, scope: !6965)
!7037 = !DILocation(line: 3344, column: 26, scope: !6965)
!7038 = !DILocation(line: 3344, column: 21, scope: !6965)
!7039 = !DILocation(line: 3345, column: 4, scope: !6965)
!7040 = !DILocation(line: 3348, column: 8, scope: !7041)
!7041 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3348, column: 8)
!7042 = !DILocation(line: 3348, column: 13, scope: !7041)
!7043 = !DILocation(line: 3348, column: 11, scope: !7041)
!7044 = !DILocation(line: 3349, column: 8, scope: !7041)
!7045 = !DILocation(line: 3349, column: 12, scope: !7041)
!7046 = !DILocation(line: 3349, column: 18, scope: !7041)
!7047 = !DILocation(line: 3349, column: 15, scope: !7041)
!7048 = !DILocation(line: 3350, column: 5, scope: !7041)
!7049 = !DILocation(line: 3350, column: 34, scope: !7041)
!7050 = !DILocation(line: 3351, column: 36, scope: !7041)
!7051 = !DILocation(line: 3351, column: 9, scope: !7041)
!7052 = !DILocation(line: 3348, column: 8, scope: !6965)
!7053 = !DILocation(line: 3352, column: 11, scope: !7041)
!7054 = !DILocation(line: 3352, column: 9, scope: !7041)
!7055 = !DILocation(line: 3352, column: 20, scope: !7041)
!7056 = !DILocation(line: 3352, column: 18, scope: !7041)
!7057 = !DILocation(line: 3352, column: 6, scope: !7041)
!7058 = !DILocation(line: 3354, column: 11, scope: !7041)
!7059 = !DILocation(line: 3354, column: 9, scope: !7041)
!7060 = !DILocation(line: 3354, column: 20, scope: !7041)
!7061 = !DILocation(line: 3354, column: 18, scope: !7041)
!7062 = !DILocation(line: 3355, column: 4, scope: !6965)
!7063 = !DILocation(line: 3358, column: 8, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3358, column: 8)
!7065 = !DILocation(line: 3358, column: 13, scope: !7064)
!7066 = !DILocation(line: 3358, column: 11, scope: !7064)
!7067 = !DILocation(line: 3359, column: 8, scope: !7064)
!7068 = !DILocation(line: 3359, column: 12, scope: !7064)
!7069 = !DILocation(line: 3359, column: 18, scope: !7064)
!7070 = !DILocation(line: 3359, column: 15, scope: !7064)
!7071 = !DILocation(line: 3360, column: 5, scope: !7064)
!7072 = !DILocation(line: 3360, column: 34, scope: !7064)
!7073 = !DILocation(line: 3361, column: 36, scope: !7064)
!7074 = !DILocation(line: 3361, column: 9, scope: !7064)
!7075 = !DILocation(line: 3358, column: 8, scope: !6965)
!7076 = !DILocation(line: 3362, column: 11, scope: !7064)
!7077 = !DILocation(line: 3362, column: 9, scope: !7064)
!7078 = !DILocation(line: 3362, column: 20, scope: !7064)
!7079 = !DILocation(line: 3362, column: 18, scope: !7064)
!7080 = !DILocation(line: 3362, column: 6, scope: !7064)
!7081 = !DILocation(line: 3364, column: 11, scope: !7064)
!7082 = !DILocation(line: 3364, column: 9, scope: !7064)
!7083 = !DILocation(line: 3364, column: 20, scope: !7064)
!7084 = !DILocation(line: 3364, column: 18, scope: !7064)
!7085 = !DILocation(line: 3365, column: 4, scope: !6965)
!7086 = !DILocation(line: 3368, column: 33, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3368, column: 8)
!7088 = !DILocation(line: 3368, column: 63, scope: !7087)
!7089 = !DILocation(line: 3368, column: 36, scope: !7087)
!7090 = !DILocation(line: 3369, column: 8, scope: !7087)
!7091 = !DILocation(line: 3369, column: 12, scope: !7087)
!7092 = !DILocation(line: 3369, column: 18, scope: !7087)
!7093 = !DILocation(line: 3369, column: 15, scope: !7087)
!7094 = !DILocation(line: 3370, column: 5, scope: !7087)
!7095 = !DILocation(line: 3370, column: 34, scope: !7087)
!7096 = !DILocation(line: 3371, column: 36, scope: !7087)
!7097 = !DILocation(line: 3371, column: 9, scope: !7087)
!7098 = !DILocation(line: 3368, column: 8, scope: !6965)
!7099 = !DILocation(line: 3372, column: 11, scope: !7087)
!7100 = !DILocation(line: 3372, column: 9, scope: !7087)
!7101 = !DILocation(line: 3372, column: 20, scope: !7087)
!7102 = !DILocation(line: 3372, column: 18, scope: !7087)
!7103 = !DILocation(line: 3372, column: 6, scope: !7087)
!7104 = !DILocation(line: 3374, column: 11, scope: !7087)
!7105 = !DILocation(line: 3374, column: 9, scope: !7087)
!7106 = !DILocation(line: 3374, column: 20, scope: !7087)
!7107 = !DILocation(line: 3374, column: 18, scope: !7087)
!7108 = !DILocation(line: 3375, column: 4, scope: !6965)
!7109 = !DILocation(line: 3378, column: 33, scope: !7110)
!7110 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3378, column: 8)
!7111 = !DILocation(line: 3378, column: 63, scope: !7110)
!7112 = !DILocation(line: 3378, column: 36, scope: !7110)
!7113 = !DILocation(line: 3379, column: 8, scope: !7110)
!7114 = !DILocation(line: 3379, column: 12, scope: !7110)
!7115 = !DILocation(line: 3379, column: 18, scope: !7110)
!7116 = !DILocation(line: 3379, column: 15, scope: !7110)
!7117 = !DILocation(line: 3380, column: 5, scope: !7110)
!7118 = !DILocation(line: 3380, column: 34, scope: !7110)
!7119 = !DILocation(line: 3381, column: 36, scope: !7110)
!7120 = !DILocation(line: 3381, column: 9, scope: !7110)
!7121 = !DILocation(line: 3378, column: 8, scope: !6965)
!7122 = !DILocation(line: 3382, column: 11, scope: !7110)
!7123 = !DILocation(line: 3382, column: 9, scope: !7110)
!7124 = !DILocation(line: 3382, column: 20, scope: !7110)
!7125 = !DILocation(line: 3382, column: 18, scope: !7110)
!7126 = !DILocation(line: 3382, column: 6, scope: !7110)
!7127 = !DILocation(line: 3384, column: 11, scope: !7110)
!7128 = !DILocation(line: 3384, column: 9, scope: !7110)
!7129 = !DILocation(line: 3384, column: 20, scope: !7110)
!7130 = !DILocation(line: 3384, column: 18, scope: !7110)
!7131 = !DILocation(line: 3385, column: 4, scope: !6965)
!7132 = !DILocation(line: 3393, column: 8, scope: !7133)
!7133 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3393, column: 8)
!7134 = !DILocation(line: 3393, column: 11, scope: !7133)
!7135 = !DILocation(line: 3393, column: 16, scope: !7133)
!7136 = !DILocation(line: 3393, column: 19, scope: !7133)
!7137 = !DILocation(line: 3393, column: 25, scope: !7133)
!7138 = !DILocation(line: 3393, column: 22, scope: !7133)
!7139 = !DILocation(line: 3393, column: 8, scope: !6965)
!7140 = !DILocation(line: 3394, column: 6, scope: !7133)
!7141 = !DILocation(line: 3396, column: 8, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !6965, file: !1, line: 3396, column: 8)
!7143 = !DILocation(line: 3396, column: 13, scope: !7142)
!7144 = !DILocation(line: 3396, column: 25, scope: !7142)
!7145 = !DILocation(line: 3396, column: 28, scope: !7142)
!7146 = !DILocation(line: 3396, column: 33, scope: !7142)
!7147 = !DILocation(line: 3396, column: 8, scope: !6965)
!7148 = !DILocation(line: 3397, column: 21, scope: !7142)
!7149 = !DILocation(line: 3397, column: 25, scope: !7142)
!7150 = !DILocation(line: 3397, column: 29, scope: !7142)
!7151 = !DILocation(line: 3397, column: 33, scope: !7142)
!7152 = !DILocation(line: 3398, column: 7, scope: !7142)
!7153 = !DILocation(line: 3398, column: 12, scope: !7142)
!7154 = !DILocation(line: 3397, column: 6, scope: !7142)
!7155 = !DILocation(line: 3399, column: 13, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7142, file: !1, line: 3399, column: 13)
!7157 = !DILocation(line: 3399, column: 18, scope: !7156)
!7158 = !DILocation(line: 3399, column: 13, scope: !7142)
!7159 = !DILocation(line: 3400, column: 21, scope: !7156)
!7160 = !DILocation(line: 3400, column: 25, scope: !7156)
!7161 = !DILocation(line: 3400, column: 29, scope: !7156)
!7162 = !DILocation(line: 3400, column: 33, scope: !7156)
!7163 = !DILocation(line: 3400, column: 6, scope: !7156)
!7164 = !DILocation(line: 3401, column: 13, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7156, file: !1, line: 3401, column: 13)
!7166 = !DILocation(line: 3401, column: 18, scope: !7165)
!7167 = !DILocation(line: 3401, column: 13, scope: !7156)
!7168 = !DILocation(line: 3402, column: 22, scope: !7165)
!7169 = !DILocation(line: 3402, column: 26, scope: !7165)
!7170 = !DILocation(line: 3402, column: 30, scope: !7165)
!7171 = !DILocation(line: 3402, column: 34, scope: !7165)
!7172 = !DILocation(line: 3402, column: 6, scope: !7165)
!7173 = !DILocation(line: 3404, column: 22, scope: !7165)
!7174 = !DILocation(line: 3404, column: 26, scope: !7165)
!7175 = !DILocation(line: 3404, column: 30, scope: !7165)
!7176 = !DILocation(line: 3404, column: 34, scope: !7165)
!7177 = !DILocation(line: 3404, column: 6, scope: !7165)
!7178 = !DILocation(line: 3405, column: 4, scope: !6965)
!7179 = !DILocation(line: 3408, column: 4, scope: !6965)
!7180 = !DILocation(line: 3411, column: 34, scope: !6920)
!7181 = !DILocation(line: 3411, column: 38, scope: !6920)
!7182 = !DILocation(line: 3411, column: 42, scope: !6920)
!7183 = !DILocation(line: 3411, column: 14, scope: !6920)
!7184 = !DILocation(line: 3411, column: 7, scope: !6920)
!7185 = !DILocation(line: 3414, column: 7, scope: !7186)
!7186 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 3414, column: 7)
!7187 = !DILocation(line: 3414, column: 25, scope: !7186)
!7188 = !DILocation(line: 3414, column: 28, scope: !7186)
!7189 = !DILocation(line: 3415, column: 7, scope: !7186)
!7190 = !DILocation(line: 3415, column: 10, scope: !7186)
!7191 = !DILocation(line: 3415, column: 16, scope: !7186)
!7192 = !DILocation(line: 3415, column: 42, scope: !7186)
!7193 = !DILocation(line: 3415, column: 45, scope: !7186)
!7194 = !DILocation(line: 3415, column: 51, scope: !7186)
!7195 = !DILocation(line: 3414, column: 7, scope: !6510)
!7196 = !DILocation(line: 3420, column: 14, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7186, file: !1, line: 3416, column: 5)
!7198 = !DILocation(line: 3420, column: 12, scope: !7197)
!7199 = !DILocation(line: 3421, column: 14, scope: !7197)
!7200 = !DILocation(line: 3421, column: 12, scope: !7197)
!7201 = !DILocation(line: 3423, column: 11, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7197, file: !1, line: 3423, column: 11)
!7203 = !DILocation(line: 3423, column: 17, scope: !7202)
!7204 = !DILocation(line: 3423, column: 11, scope: !7197)
!7205 = !DILocation(line: 3425, column: 41, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7202, file: !1, line: 3424, column: 9)
!7207 = !DILocation(line: 3425, column: 38, scope: !7206)
!7208 = !DILocation(line: 3425, column: 48, scope: !7206)
!7209 = !DILocation(line: 3425, column: 16, scope: !7206)
!7210 = !DILocation(line: 3426, column: 41, scope: !7206)
!7211 = !DILocation(line: 3426, column: 38, scope: !7206)
!7212 = !DILocation(line: 3426, column: 48, scope: !7206)
!7213 = !DILocation(line: 3426, column: 16, scope: !7206)
!7214 = !DILocation(line: 3428, column: 19, scope: !7206)
!7215 = !DILocation(line: 3428, column: 17, scope: !7206)
!7216 = !DILocation(line: 3429, column: 15, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7206, file: !1, line: 3429, column: 15)
!7218 = !DILocation(line: 3429, column: 46, scope: !7217)
!7219 = !DILocation(line: 3429, column: 52, scope: !7217)
!7220 = !DILocation(line: 3429, column: 42, scope: !7217)
!7221 = !DILocation(line: 3429, column: 21, scope: !7217)
!7222 = !DILocation(line: 3429, column: 15, scope: !7206)
!7223 = !DILocation(line: 3430, column: 40, scope: !7217)
!7224 = !DILocation(line: 3430, column: 37, scope: !7217)
!7225 = !DILocation(line: 3430, column: 12, scope: !7217)
!7226 = !DILocation(line: 3430, column: 6, scope: !7217)
!7227 = !DILocation(line: 3432, column: 12, scope: !7206)
!7228 = !DILocation(line: 3432, column: 10, scope: !7206)
!7229 = !DILocation(line: 3433, column: 8, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7206, file: !1, line: 3433, column: 8)
!7231 = !DILocation(line: 3433, column: 39, scope: !7230)
!7232 = !DILocation(line: 3433, column: 45, scope: !7230)
!7233 = !DILocation(line: 3433, column: 35, scope: !7230)
!7234 = !DILocation(line: 3433, column: 14, scope: !7230)
!7235 = !DILocation(line: 3433, column: 8, scope: !7206)
!7236 = !DILocation(line: 3434, column: 40, scope: !7230)
!7237 = !DILocation(line: 3434, column: 37, scope: !7230)
!7238 = !DILocation(line: 3434, column: 12, scope: !7230)
!7239 = !DILocation(line: 3434, column: 6, scope: !7230)
!7240 = !DILocation(line: 3435, column: 2, scope: !7206)
!7241 = !DILocation(line: 3438, column: 12, scope: !7242)
!7242 = distinct !DILexicalBlock(scope: !7202, file: !1, line: 3437, column: 2)
!7243 = !DILocation(line: 3438, column: 10, scope: !7242)
!7244 = !DILocation(line: 3439, column: 12, scope: !7242)
!7245 = !DILocation(line: 3439, column: 10, scope: !7242)
!7246 = !DILocation(line: 3444, column: 15, scope: !7197)
!7247 = !DILocation(line: 3444, column: 7, scope: !7197)
!7248 = !DILocation(line: 3447, column: 10, scope: !7249)
!7249 = distinct !DILexicalBlock(scope: !7197, file: !1, line: 3445, column: 2)
!7250 = !DILocation(line: 3447, column: 18, scope: !7249)
!7251 = !DILocation(line: 3447, column: 16, scope: !7249)
!7252 = !DILocation(line: 3447, column: 8, scope: !7249)
!7253 = !DILocation(line: 3448, column: 4, scope: !7249)
!7254 = !DILocation(line: 3451, column: 10, scope: !7249)
!7255 = !DILocation(line: 3451, column: 18, scope: !7249)
!7256 = !DILocation(line: 3451, column: 16, scope: !7249)
!7257 = !DILocation(line: 3451, column: 8, scope: !7249)
!7258 = !DILocation(line: 3452, column: 4, scope: !7249)
!7259 = !DILocation(line: 3455, column: 10, scope: !7249)
!7260 = !DILocation(line: 3455, column: 18, scope: !7249)
!7261 = !DILocation(line: 3455, column: 16, scope: !7249)
!7262 = !DILocation(line: 3455, column: 8, scope: !7249)
!7263 = !DILocation(line: 3456, column: 4, scope: !7249)
!7264 = !DILocation(line: 3459, column: 8, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3459, column: 8)
!7266 = !DILocation(line: 3459, column: 14, scope: !7265)
!7267 = !DILocation(line: 3460, column: 8, scope: !7265)
!7268 = !DILocation(line: 3460, column: 12, scope: !7265)
!7269 = !DILocation(line: 3460, column: 18, scope: !7265)
!7270 = !DILocation(line: 3461, column: 5, scope: !7265)
!7271 = !DILocation(line: 3461, column: 8, scope: !7265)
!7272 = !DILocation(line: 3461, column: 14, scope: !7265)
!7273 = !DILocation(line: 3459, column: 8, scope: !7249)
!7274 = !DILocation(line: 3462, column: 6, scope: !7265)
!7275 = !DILocation(line: 3463, column: 10, scope: !7249)
!7276 = !DILocation(line: 3463, column: 18, scope: !7249)
!7277 = !DILocation(line: 3463, column: 16, scope: !7249)
!7278 = !DILocation(line: 3463, column: 8, scope: !7249)
!7279 = !DILocation(line: 3464, column: 4, scope: !7249)
!7280 = !DILocation(line: 3467, column: 8, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3467, column: 8)
!7282 = !DILocation(line: 3467, column: 14, scope: !7281)
!7283 = !DILocation(line: 3468, column: 8, scope: !7281)
!7284 = !DILocation(line: 3468, column: 12, scope: !7281)
!7285 = !DILocation(line: 3468, column: 18, scope: !7281)
!7286 = !DILocation(line: 3469, column: 5, scope: !7281)
!7287 = !DILocation(line: 3469, column: 8, scope: !7281)
!7288 = !DILocation(line: 3469, column: 14, scope: !7281)
!7289 = !DILocation(line: 3467, column: 8, scope: !7249)
!7290 = !DILocation(line: 3470, column: 6, scope: !7281)
!7291 = !DILocation(line: 3471, column: 10, scope: !7249)
!7292 = !DILocation(line: 3471, column: 18, scope: !7249)
!7293 = !DILocation(line: 3471, column: 16, scope: !7249)
!7294 = !DILocation(line: 3471, column: 8, scope: !7249)
!7295 = !DILocation(line: 3472, column: 4, scope: !7249)
!7296 = !DILocation(line: 3475, column: 8, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3475, column: 8)
!7298 = !DILocation(line: 3475, column: 13, scope: !7297)
!7299 = !DILocation(line: 3476, column: 8, scope: !7297)
!7300 = !DILocation(line: 3476, column: 12, scope: !7297)
!7301 = !DILocation(line: 3476, column: 18, scope: !7297)
!7302 = !DILocation(line: 3477, column: 5, scope: !7297)
!7303 = !DILocation(line: 3477, column: 8, scope: !7297)
!7304 = !DILocation(line: 3477, column: 14, scope: !7297)
!7305 = !DILocation(line: 3475, column: 8, scope: !7249)
!7306 = !DILocation(line: 3478, column: 6, scope: !7297)
!7307 = !DILocation(line: 3479, column: 35, scope: !7249)
!7308 = !DILocation(line: 3479, column: 42, scope: !7249)
!7309 = !DILocation(line: 3479, column: 40, scope: !7249)
!7310 = !DILocation(line: 3479, column: 8, scope: !7249)
!7311 = !DILocation(line: 3480, column: 4, scope: !7249)
!7312 = !DILocation(line: 3483, column: 8, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3483, column: 8)
!7314 = !DILocation(line: 3483, column: 13, scope: !7313)
!7315 = !DILocation(line: 3484, column: 8, scope: !7313)
!7316 = !DILocation(line: 3484, column: 12, scope: !7313)
!7317 = !DILocation(line: 3484, column: 18, scope: !7313)
!7318 = !DILocation(line: 3485, column: 5, scope: !7313)
!7319 = !DILocation(line: 3485, column: 8, scope: !7313)
!7320 = !DILocation(line: 3485, column: 14, scope: !7313)
!7321 = !DILocation(line: 3483, column: 8, scope: !7249)
!7322 = !DILocation(line: 3486, column: 6, scope: !7313)
!7323 = !DILocation(line: 3487, column: 35, scope: !7249)
!7324 = !DILocation(line: 3487, column: 42, scope: !7249)
!7325 = !DILocation(line: 3487, column: 40, scope: !7249)
!7326 = !DILocation(line: 3487, column: 8, scope: !7249)
!7327 = !DILocation(line: 3488, column: 4, scope: !7249)
!7328 = !DILocation(line: 3491, column: 10, scope: !7249)
!7329 = !DILocation(line: 3491, column: 17, scope: !7249)
!7330 = !DILocation(line: 3491, column: 15, scope: !7249)
!7331 = !DILocation(line: 3491, column: 8, scope: !7249)
!7332 = !DILocation(line: 3492, column: 4, scope: !7249)
!7333 = !DILocation(line: 3495, column: 10, scope: !7249)
!7334 = !DILocation(line: 3495, column: 17, scope: !7249)
!7335 = !DILocation(line: 3495, column: 15, scope: !7249)
!7336 = !DILocation(line: 3495, column: 8, scope: !7249)
!7337 = !DILocation(line: 3496, column: 4, scope: !7249)
!7338 = !DILocation(line: 3499, column: 10, scope: !7249)
!7339 = !DILocation(line: 3499, column: 17, scope: !7249)
!7340 = !DILocation(line: 3499, column: 15, scope: !7249)
!7341 = !DILocation(line: 3499, column: 8, scope: !7249)
!7342 = !DILocation(line: 3500, column: 4, scope: !7249)
!7343 = !DILocation(line: 3514, column: 13, scope: !7344)
!7344 = distinct !DILexicalBlock(scope: !7345, file: !1, line: 3514, column: 13)
!7345 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3512, column: 8)
!7346 = !DILocation(line: 3514, column: 18, scope: !7344)
!7347 = !DILocation(line: 3514, column: 22, scope: !7344)
!7348 = !DILocation(line: 3514, column: 25, scope: !7344)
!7349 = !DILocation(line: 3514, column: 33, scope: !7344)
!7350 = !DILocation(line: 3514, column: 30, scope: !7344)
!7351 = !DILocation(line: 3514, column: 13, scope: !7345)
!7352 = !DILocation(line: 3515, column: 6, scope: !7344)
!7353 = !DILocation(line: 3517, column: 11, scope: !7249)
!7354 = !DILocation(line: 3517, column: 16, scope: !7249)
!7355 = !DILocation(line: 3518, column: 32, scope: !7249)
!7356 = !DILocation(line: 3518, column: 41, scope: !7249)
!7357 = !DILocation(line: 3518, column: 38, scope: !7249)
!7358 = !DILocation(line: 3519, column: 32, scope: !7249)
!7359 = !DILocation(line: 3519, column: 41, scope: !7249)
!7360 = !DILocation(line: 3519, column: 38, scope: !7249)
!7361 = !DILocation(line: 3517, column: 8, scope: !7249)
!7362 = !DILocation(line: 3522, column: 8, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3522, column: 8)
!7364 = !DILocation(line: 3522, column: 13, scope: !7363)
!7365 = !DILocation(line: 3522, column: 25, scope: !7363)
!7366 = !DILocation(line: 3522, column: 28, scope: !7363)
!7367 = !DILocation(line: 3522, column: 34, scope: !7363)
!7368 = !DILocation(line: 3522, column: 38, scope: !7363)
!7369 = !DILocation(line: 3522, column: 41, scope: !7363)
!7370 = !DILocation(line: 3522, column: 46, scope: !7363)
!7371 = !DILocation(line: 3522, column: 8, scope: !7249)
!7372 = !DILocation(line: 3523, column: 38, scope: !7363)
!7373 = !DILocation(line: 3523, column: 46, scope: !7363)
!7374 = !DILocation(line: 3523, column: 44, scope: !7363)
!7375 = !DILocation(line: 3523, column: 34, scope: !7363)
!7376 = !DILocation(line: 3523, column: 10, scope: !7363)
!7377 = !DILocation(line: 3523, column: 6, scope: !7363)
!7378 = !DILocation(line: 3524, column: 4, scope: !7249)
!7379 = !DILocation(line: 3527, column: 8, scope: !7380)
!7380 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3527, column: 8)
!7381 = !DILocation(line: 3527, column: 13, scope: !7380)
!7382 = !DILocation(line: 3527, column: 8, scope: !7249)
!7383 = !DILocation(line: 3528, column: 6, scope: !7380)
!7384 = !DILocation(line: 3530, column: 12, scope: !7249)
!7385 = !DILocation(line: 3530, column: 9, scope: !7249)
!7386 = !DILocation(line: 3531, column: 38, scope: !7249)
!7387 = !DILocation(line: 3531, column: 48, scope: !7249)
!7388 = !DILocation(line: 3531, column: 56, scope: !7249)
!7389 = !DILocation(line: 3531, column: 54, scope: !7249)
!7390 = !DILocation(line: 3531, column: 44, scope: !7249)
!7391 = !DILocation(line: 3532, column: 33, scope: !7249)
!7392 = !DILocation(line: 3532, column: 42, scope: !7249)
!7393 = !DILocation(line: 3532, column: 39, scope: !7249)
!7394 = !DILocation(line: 3532, column: 4, scope: !7249)
!7395 = !DILocation(line: 3531, column: 8, scope: !7249)
!7396 = !DILocation(line: 3533, column: 4, scope: !7249)
!7397 = !DILocation(line: 3536, column: 8, scope: !7398)
!7398 = distinct !DILexicalBlock(scope: !7249, file: !1, line: 3536, column: 8)
!7399 = !DILocation(line: 3536, column: 13, scope: !7398)
!7400 = !DILocation(line: 3536, column: 8, scope: !7249)
!7401 = !DILocation(line: 3537, column: 6, scope: !7398)
!7402 = !DILocation(line: 3539, column: 12, scope: !7249)
!7403 = !DILocation(line: 3539, column: 9, scope: !7249)
!7404 = !DILocation(line: 3540, column: 38, scope: !7249)
!7405 = !DILocation(line: 3540, column: 47, scope: !7249)
!7406 = !DILocation(line: 3540, column: 44, scope: !7249)
!7407 = !DILocation(line: 3541, column: 33, scope: !7249)
!7408 = !DILocation(line: 3541, column: 43, scope: !7249)
!7409 = !DILocation(line: 3541, column: 51, scope: !7249)
!7410 = !DILocation(line: 3541, column: 49, scope: !7249)
!7411 = !DILocation(line: 3541, column: 39, scope: !7249)
!7412 = !DILocation(line: 3541, column: 4, scope: !7249)
!7413 = !DILocation(line: 3540, column: 8, scope: !7249)
!7414 = !DILocation(line: 3542, column: 4, scope: !7249)
!7415 = !DILocation(line: 3546, column: 4, scope: !7249)
!7416 = !DILocation(line: 3549, column: 10, scope: !7249)
!7417 = !DILocation(line: 3549, column: 19, scope: !7249)
!7418 = !DILocation(line: 3549, column: 16, scope: !7249)
!7419 = !DILocation(line: 3549, column: 27, scope: !7249)
!7420 = !DILocation(line: 3549, column: 35, scope: !7249)
!7421 = !DILocation(line: 3549, column: 8, scope: !7249)
!7422 = !DILocation(line: 3550, column: 4, scope: !7249)
!7423 = !DILocation(line: 3553, column: 36, scope: !7249)
!7424 = !DILocation(line: 3554, column: 32, scope: !7249)
!7425 = !DILocation(line: 3554, column: 4, scope: !7249)
!7426 = !DILocation(line: 3553, column: 11, scope: !7249)
!7427 = !DILocation(line: 3554, column: 39, scope: !7249)
!7428 = !DILocation(line: 3554, column: 46, scope: !7249)
!7429 = !DILocation(line: 3553, column: 8, scope: !7249)
!7430 = !DILocation(line: 3555, column: 4, scope: !7249)
!7431 = !DILocation(line: 3558, column: 10, scope: !7249)
!7432 = !DILocation(line: 3558, column: 18, scope: !7249)
!7433 = !DILocation(line: 3558, column: 16, scope: !7249)
!7434 = !DILocation(line: 3558, column: 26, scope: !7249)
!7435 = !DILocation(line: 3558, column: 34, scope: !7249)
!7436 = !DILocation(line: 3558, column: 8, scope: !7249)
!7437 = !DILocation(line: 3559, column: 4, scope: !7249)
!7438 = !DILocation(line: 3562, column: 36, scope: !7249)
!7439 = !DILocation(line: 3563, column: 31, scope: !7249)
!7440 = !DILocation(line: 3563, column: 4, scope: !7249)
!7441 = !DILocation(line: 3562, column: 11, scope: !7249)
!7442 = !DILocation(line: 3563, column: 38, scope: !7249)
!7443 = !DILocation(line: 3563, column: 45, scope: !7249)
!7444 = !DILocation(line: 3562, column: 8, scope: !7249)
!7445 = !DILocation(line: 3564, column: 4, scope: !7249)
!7446 = !DILocation(line: 3577, column: 4, scope: !7249)
!7447 = !DILocation(line: 3580, column: 4, scope: !7249)
!7448 = !DILocation(line: 3581, column: 2, scope: !7249)
!7449 = !DILocation(line: 3583, column: 28, scope: !7197)
!7450 = !DILocation(line: 3583, column: 33, scope: !7197)
!7451 = !DILocation(line: 3583, column: 14, scope: !7197)
!7452 = !DILocation(line: 3583, column: 7, scope: !7197)
!7453 = !DILocation(line: 3586, column: 3, scope: !6510)
!7454 = !DILocation(line: 3587, column: 1, scope: !6510)
!7455 = distinct !DISubprogram(name: "simplify_binary_operation_1", scope: !1, file: !1, line: 1715, type: !7456, scopeLine: 1717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!7456 = !DISubroutineType(types: !7457)
!7457 = !{!1495, !397, !3, !1495, !1495, !1495, !1495}
!7458 = !DILocalVariable(name: "code", arg: 1, scope: !7455, file: !1, line: 1715, type: !397)
!7459 = !DILocation(line: 1715, column: 44, scope: !7455)
!7460 = !DILocalVariable(name: "mode", arg: 2, scope: !7455, file: !1, line: 1715, type: !3)
!7461 = !DILocation(line: 1715, column: 68, scope: !7455)
!7462 = !DILocalVariable(name: "op0", arg: 3, scope: !7455, file: !1, line: 1716, type: !1495)
!7463 = !DILocation(line: 1716, column: 13, scope: !7455)
!7464 = !DILocalVariable(name: "op1", arg: 4, scope: !7455, file: !1, line: 1716, type: !1495)
!7465 = !DILocation(line: 1716, column: 22, scope: !7455)
!7466 = !DILocalVariable(name: "trueop0", arg: 5, scope: !7455, file: !1, line: 1716, type: !1495)
!7467 = !DILocation(line: 1716, column: 31, scope: !7455)
!7468 = !DILocalVariable(name: "trueop1", arg: 6, scope: !7455, file: !1, line: 1716, type: !1495)
!7469 = !DILocation(line: 1716, column: 44, scope: !7455)
!7470 = !DILocalVariable(name: "tem", scope: !7455, file: !1, line: 1718, type: !1495)
!7471 = !DILocation(line: 1718, column: 7, scope: !7455)
!7472 = !DILocalVariable(name: "reversed", scope: !7455, file: !1, line: 1718, type: !1495)
!7473 = !DILocation(line: 1718, column: 12, scope: !7455)
!7474 = !DILocalVariable(name: "opleft", scope: !7455, file: !1, line: 1718, type: !1495)
!7475 = !DILocation(line: 1718, column: 22, scope: !7455)
!7476 = !DILocalVariable(name: "opright", scope: !7455, file: !1, line: 1718, type: !1495)
!7477 = !DILocation(line: 1718, column: 30, scope: !7455)
!7478 = !DILocalVariable(name: "val", scope: !7455, file: !1, line: 1719, type: !1585)
!7479 = !DILocation(line: 1719, column: 17, scope: !7455)
!7480 = !DILocalVariable(name: "width", scope: !7455, file: !1, line: 1720, type: !5)
!7481 = !DILocation(line: 1720, column: 16, scope: !7455)
!7482 = !DILocation(line: 1720, column: 24, scope: !7455)
!7483 = !DILocation(line: 1725, column: 11, scope: !7455)
!7484 = !DILocation(line: 1725, column: 3, scope: !7455)
!7485 = !DILocation(line: 1732, column: 12, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1732, column: 11)
!7487 = distinct !DILexicalBlock(scope: !7455, file: !1, line: 1726, column: 5)
!7488 = !DILocation(line: 1732, column: 38, scope: !7486)
!7489 = !DILocation(line: 1732, column: 41, scope: !7486)
!7490 = !DILocation(line: 1732, column: 52, scope: !7486)
!7491 = !DILocation(line: 1732, column: 49, scope: !7486)
!7492 = !DILocation(line: 1732, column: 11, scope: !7487)
!7493 = !DILocation(line: 1733, column: 9, scope: !7486)
!7494 = !DILocation(line: 1733, column: 2, scope: !7486)
!7495 = !DILocation(line: 1737, column: 11, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1737, column: 11)
!7497 = !DILocation(line: 1737, column: 26, scope: !7496)
!7498 = !DILocation(line: 1737, column: 11, scope: !7487)
!7499 = !DILocation(line: 1738, column: 37, scope: !7496)
!7500 = !DILocation(line: 1738, column: 43, scope: !7496)
!7501 = !DILocation(line: 1738, column: 48, scope: !7496)
!7502 = !DILocation(line: 1738, column: 9, scope: !7496)
!7503 = !DILocation(line: 1738, column: 2, scope: !7496)
!7504 = !DILocation(line: 1739, column: 16, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7496, file: !1, line: 1739, column: 16)
!7506 = !DILocation(line: 1739, column: 31, scope: !7505)
!7507 = !DILocation(line: 1739, column: 16, scope: !7496)
!7508 = !DILocation(line: 1740, column: 37, scope: !7505)
!7509 = !DILocation(line: 1740, column: 43, scope: !7505)
!7510 = !DILocation(line: 1740, column: 48, scope: !7505)
!7511 = !DILocation(line: 1740, column: 9, scope: !7505)
!7512 = !DILocation(line: 1740, column: 2, scope: !7505)
!7513 = !DILocation(line: 1743, column: 11, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1743, column: 11)
!7515 = !DILocation(line: 1744, column: 4, scope: !7514)
!7516 = !DILocation(line: 1744, column: 7, scope: !7514)
!7517 = !DILocation(line: 1744, column: 22, scope: !7514)
!7518 = !DILocation(line: 1745, column: 4, scope: !7514)
!7519 = !DILocation(line: 1745, column: 7, scope: !7514)
!7520 = !DILocation(line: 1745, column: 18, scope: !7514)
!7521 = !DILocation(line: 1745, column: 15, scope: !7514)
!7522 = !DILocation(line: 1743, column: 11, scope: !7487)
!7523 = !DILocation(line: 1746, column: 34, scope: !7514)
!7524 = !DILocation(line: 1746, column: 40, scope: !7514)
!7525 = !DILocation(line: 1746, column: 55, scope: !7514)
!7526 = !DILocation(line: 1746, column: 9, scope: !7514)
!7527 = !DILocation(line: 1746, column: 2, scope: !7514)
!7528 = !DILocation(line: 1754, column: 12, scope: !7529)
!7529 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1754, column: 11)
!7530 = !DILocation(line: 1754, column: 27, scope: !7529)
!7531 = !DILocation(line: 1755, column: 5, scope: !7529)
!7532 = !DILocation(line: 1755, column: 8, scope: !7529)
!7533 = !DILocation(line: 1755, column: 23, scope: !7529)
!7534 = !DILocation(line: 1756, column: 5, scope: !7529)
!7535 = !DILocation(line: 1756, column: 8, scope: !7529)
!7536 = !DILocation(line: 1756, column: 23, scope: !7529)
!7537 = !DILocation(line: 1757, column: 4, scope: !7529)
!7538 = !DILocation(line: 1757, column: 7, scope: !7529)
!7539 = !DILocation(line: 1754, column: 11, scope: !7487)
!7540 = !DILocation(line: 1758, column: 24, scope: !7529)
!7541 = !DILocation(line: 1758, column: 29, scope: !7529)
!7542 = !DILocation(line: 1758, column: 9, scope: !7529)
!7543 = !DILocation(line: 1758, column: 2, scope: !7529)
!7544 = !DILocation(line: 1759, column: 17, scope: !7545)
!7545 = distinct !DILexicalBlock(scope: !7529, file: !1, line: 1759, column: 16)
!7546 = !DILocation(line: 1759, column: 32, scope: !7545)
!7547 = !DILocation(line: 1760, column: 3, scope: !7545)
!7548 = !DILocation(line: 1760, column: 6, scope: !7545)
!7549 = !DILocation(line: 1760, column: 21, scope: !7545)
!7550 = !DILocation(line: 1761, column: 3, scope: !7545)
!7551 = !DILocation(line: 1761, column: 6, scope: !7545)
!7552 = !DILocation(line: 1761, column: 21, scope: !7545)
!7553 = !DILocation(line: 1762, column: 9, scope: !7545)
!7554 = !DILocation(line: 1762, column: 12, scope: !7545)
!7555 = !DILocation(line: 1759, column: 16, scope: !7529)
!7556 = !DILocation(line: 1763, column: 24, scope: !7545)
!7557 = !DILocation(line: 1763, column: 29, scope: !7545)
!7558 = !DILocation(line: 1763, column: 9, scope: !7545)
!7559 = !DILocation(line: 1763, column: 2, scope: !7545)
!7560 = !DILocation(line: 1771, column: 11, scope: !7561)
!7561 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1771, column: 11)
!7562 = !DILocation(line: 1771, column: 11, scope: !7487)
!7563 = !DILocalVariable(name: "coeff0h", scope: !7564, file: !1, line: 1773, type: !1585)
!7564 = distinct !DILexicalBlock(scope: !7561, file: !1, line: 1772, column: 2)
!7565 = !DILocation(line: 1773, column: 18, scope: !7564)
!7566 = !DILocalVariable(name: "coeff1h", scope: !7564, file: !1, line: 1773, type: !1585)
!7567 = !DILocation(line: 1773, column: 31, scope: !7564)
!7568 = !DILocalVariable(name: "coeff0l", scope: !7564, file: !1, line: 1774, type: !1568)
!7569 = !DILocation(line: 1774, column: 27, scope: !7564)
!7570 = !DILocalVariable(name: "coeff1l", scope: !7564, file: !1, line: 1774, type: !1568)
!7571 = !DILocation(line: 1774, column: 40, scope: !7564)
!7572 = !DILocalVariable(name: "lhs", scope: !7564, file: !1, line: 1775, type: !1495)
!7573 = !DILocation(line: 1775, column: 8, scope: !7564)
!7574 = !DILocation(line: 1775, column: 14, scope: !7564)
!7575 = !DILocalVariable(name: "rhs", scope: !7564, file: !1, line: 1775, type: !1495)
!7576 = !DILocation(line: 1775, column: 19, scope: !7564)
!7577 = !DILocation(line: 1775, column: 25, scope: !7564)
!7578 = !DILocation(line: 1777, column: 8, scope: !7579)
!7579 = distinct !DILexicalBlock(scope: !7564, file: !1, line: 1777, column: 8)
!7580 = !DILocation(line: 1777, column: 23, scope: !7579)
!7581 = !DILocation(line: 1777, column: 8, scope: !7564)
!7582 = !DILocation(line: 1779, column: 16, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7579, file: !1, line: 1778, column: 6)
!7584 = !DILocation(line: 1780, column: 16, scope: !7583)
!7585 = !DILocation(line: 1781, column: 14, scope: !7583)
!7586 = !DILocation(line: 1781, column: 12, scope: !7583)
!7587 = !DILocation(line: 1782, column: 6, scope: !7583)
!7588 = !DILocation(line: 1783, column: 13, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7579, file: !1, line: 1783, column: 13)
!7590 = !DILocation(line: 1783, column: 28, scope: !7589)
!7591 = !DILocation(line: 1784, column: 6, scope: !7589)
!7592 = !DILocation(line: 1784, column: 9, scope: !7589)
!7593 = !DILocation(line: 1783, column: 13, scope: !7579)
!7594 = !DILocation(line: 1786, column: 18, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7589, file: !1, line: 1785, column: 6)
!7596 = !DILocation(line: 1786, column: 16, scope: !7595)
!7597 = !DILocation(line: 1787, column: 18, scope: !7595)
!7598 = !DILocation(line: 1787, column: 41, scope: !7595)
!7599 = !DILocation(line: 1787, column: 16, scope: !7595)
!7600 = !DILocation(line: 1788, column: 14, scope: !7595)
!7601 = !DILocation(line: 1788, column: 12, scope: !7595)
!7602 = !DILocation(line: 1789, column: 6, scope: !7595)
!7603 = !DILocation(line: 1790, column: 13, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7589, file: !1, line: 1790, column: 13)
!7605 = !DILocation(line: 1790, column: 28, scope: !7604)
!7606 = !DILocation(line: 1791, column: 6, scope: !7604)
!7607 = !DILocation(line: 1791, column: 9, scope: !7604)
!7608 = !DILocation(line: 1792, column: 6, scope: !7604)
!7609 = !DILocation(line: 1792, column: 9, scope: !7604)
!7610 = !DILocation(line: 1792, column: 32, scope: !7604)
!7611 = !DILocation(line: 1793, column: 6, scope: !7604)
!7612 = !DILocation(line: 1793, column: 9, scope: !7604)
!7613 = !DILocation(line: 1793, column: 32, scope: !7604)
!7614 = !DILocation(line: 1790, column: 13, scope: !7589)
!7615 = !DILocation(line: 1795, column: 41, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7604, file: !1, line: 1794, column: 6)
!7617 = !DILocation(line: 1795, column: 38, scope: !7616)
!7618 = !DILocation(line: 1795, column: 16, scope: !7616)
!7619 = !DILocation(line: 1796, column: 16, scope: !7616)
!7620 = !DILocation(line: 1797, column: 14, scope: !7616)
!7621 = !DILocation(line: 1797, column: 12, scope: !7616)
!7622 = !DILocation(line: 1798, column: 6, scope: !7616)
!7623 = !DILocation(line: 1800, column: 8, scope: !7624)
!7624 = distinct !DILexicalBlock(scope: !7564, file: !1, line: 1800, column: 8)
!7625 = !DILocation(line: 1800, column: 23, scope: !7624)
!7626 = !DILocation(line: 1800, column: 8, scope: !7564)
!7627 = !DILocation(line: 1802, column: 16, scope: !7628)
!7628 = distinct !DILexicalBlock(scope: !7624, file: !1, line: 1801, column: 6)
!7629 = !DILocation(line: 1803, column: 16, scope: !7628)
!7630 = !DILocation(line: 1804, column: 14, scope: !7628)
!7631 = !DILocation(line: 1804, column: 12, scope: !7628)
!7632 = !DILocation(line: 1805, column: 6, scope: !7628)
!7633 = !DILocation(line: 1806, column: 13, scope: !7634)
!7634 = distinct !DILexicalBlock(scope: !7624, file: !1, line: 1806, column: 13)
!7635 = !DILocation(line: 1806, column: 28, scope: !7634)
!7636 = !DILocation(line: 1807, column: 6, scope: !7634)
!7637 = !DILocation(line: 1807, column: 9, scope: !7634)
!7638 = !DILocation(line: 1806, column: 13, scope: !7624)
!7639 = !DILocation(line: 1809, column: 18, scope: !7640)
!7640 = distinct !DILexicalBlock(scope: !7634, file: !1, line: 1808, column: 6)
!7641 = !DILocation(line: 1809, column: 16, scope: !7640)
!7642 = !DILocation(line: 1810, column: 18, scope: !7640)
!7643 = !DILocation(line: 1810, column: 41, scope: !7640)
!7644 = !DILocation(line: 1810, column: 16, scope: !7640)
!7645 = !DILocation(line: 1811, column: 14, scope: !7640)
!7646 = !DILocation(line: 1811, column: 12, scope: !7640)
!7647 = !DILocation(line: 1812, column: 6, scope: !7640)
!7648 = !DILocation(line: 1813, column: 13, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7634, file: !1, line: 1813, column: 13)
!7650 = !DILocation(line: 1813, column: 28, scope: !7649)
!7651 = !DILocation(line: 1814, column: 6, scope: !7649)
!7652 = !DILocation(line: 1814, column: 9, scope: !7649)
!7653 = !DILocation(line: 1815, column: 6, scope: !7649)
!7654 = !DILocation(line: 1815, column: 9, scope: !7649)
!7655 = !DILocation(line: 1815, column: 32, scope: !7649)
!7656 = !DILocation(line: 1816, column: 6, scope: !7649)
!7657 = !DILocation(line: 1816, column: 9, scope: !7649)
!7658 = !DILocation(line: 1816, column: 32, scope: !7649)
!7659 = !DILocation(line: 1813, column: 13, scope: !7634)
!7660 = !DILocation(line: 1818, column: 41, scope: !7661)
!7661 = distinct !DILexicalBlock(scope: !7649, file: !1, line: 1817, column: 6)
!7662 = !DILocation(line: 1818, column: 38, scope: !7661)
!7663 = !DILocation(line: 1818, column: 16, scope: !7661)
!7664 = !DILocation(line: 1819, column: 16, scope: !7661)
!7665 = !DILocation(line: 1820, column: 14, scope: !7661)
!7666 = !DILocation(line: 1820, column: 12, scope: !7661)
!7667 = !DILocation(line: 1821, column: 6, scope: !7661)
!7668 = !DILocation(line: 1823, column: 21, scope: !7669)
!7669 = distinct !DILexicalBlock(scope: !7564, file: !1, line: 1823, column: 8)
!7670 = !DILocation(line: 1823, column: 26, scope: !7669)
!7671 = !DILocation(line: 1823, column: 8, scope: !7669)
!7672 = !DILocation(line: 1823, column: 8, scope: !7564)
!7673 = !DILocalVariable(name: "orig", scope: !7674, file: !1, line: 1825, type: !1495)
!7674 = distinct !DILexicalBlock(scope: !7669, file: !1, line: 1824, column: 6)
!7675 = !DILocation(line: 1825, column: 12, scope: !7674)
!7676 = !DILocation(line: 1825, column: 19, scope: !7674)
!7677 = !DILocalVariable(name: "coeff", scope: !7674, file: !1, line: 1826, type: !1495)
!7678 = !DILocation(line: 1826, column: 12, scope: !7674)
!7679 = !DILocalVariable(name: "l", scope: !7674, file: !1, line: 1827, type: !1568)
!7680 = !DILocation(line: 1827, column: 31, scope: !7674)
!7681 = !DILocalVariable(name: "h", scope: !7674, file: !1, line: 1828, type: !1585)
!7682 = !DILocation(line: 1828, column: 22, scope: !7674)
!7683 = !DILocalVariable(name: "speed", scope: !7674, file: !1, line: 1829, type: !1729)
!7684 = !DILocation(line: 1829, column: 13, scope: !7674)
!7685 = !DILocation(line: 1829, column: 52, scope: !7674)
!7686 = !DILocation(line: 1829, column: 21, scope: !7674)
!7687 = !DILocation(line: 1831, column: 8, scope: !7674)
!7688 = !DILocation(line: 1832, column: 36, scope: !7674)
!7689 = !DILocation(line: 1832, column: 39, scope: !7674)
!7690 = !DILocation(line: 1832, column: 42, scope: !7674)
!7691 = !DILocation(line: 1832, column: 16, scope: !7674)
!7692 = !DILocation(line: 1832, column: 14, scope: !7674)
!7693 = !DILocation(line: 1834, column: 41, scope: !7674)
!7694 = !DILocation(line: 1834, column: 47, scope: !7674)
!7695 = !DILocation(line: 1834, column: 52, scope: !7674)
!7696 = !DILocation(line: 1834, column: 14, scope: !7674)
!7697 = !DILocation(line: 1834, column: 12, scope: !7674)
!7698 = !DILocation(line: 1835, column: 25, scope: !7674)
!7699 = !DILocation(line: 1835, column: 35, scope: !7674)
!7700 = !DILocation(line: 1835, column: 15, scope: !7674)
!7701 = !DILocation(line: 1835, column: 55, scope: !7674)
!7702 = !DILocation(line: 1835, column: 66, scope: !7674)
!7703 = !DILocation(line: 1835, column: 45, scope: !7674)
!7704 = !DILocation(line: 1835, column: 42, scope: !7674)
!7705 = !DILocation(line: 1836, column: 5, scope: !7674)
!7706 = !DILocation(line: 1835, column: 8, scope: !7674)
!7707 = !DILocation(line: 1838, column: 2, scope: !7564)
!7708 = !DILocation(line: 1841, column: 12, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1841, column: 11)
!7710 = !DILocation(line: 1842, column: 5, scope: !7709)
!7711 = !DILocation(line: 1842, column: 8, scope: !7709)
!7712 = !DILocation(line: 1842, column: 23, scope: !7709)
!7713 = !DILocation(line: 1843, column: 4, scope: !7709)
!7714 = !DILocation(line: 1843, column: 7, scope: !7709)
!7715 = !DILocation(line: 1843, column: 22, scope: !7709)
!7716 = !DILocation(line: 1844, column: 4, scope: !7709)
!7717 = !DILocation(line: 1844, column: 8, scope: !7709)
!7718 = !DILocation(line: 1845, column: 8, scope: !7709)
!7719 = !DILocation(line: 1845, column: 11, scope: !7709)
!7720 = !DILocation(line: 1845, column: 36, scope: !7709)
!7721 = !DILocation(line: 1846, column: 4, scope: !7709)
!7722 = !DILocation(line: 1846, column: 23, scope: !7709)
!7723 = !DILocation(line: 1846, column: 29, scope: !7709)
!7724 = !DILocation(line: 1846, column: 7, scope: !7709)
!7725 = !DILocation(line: 1841, column: 11, scope: !7487)
!7726 = !DILocation(line: 1847, column: 35, scope: !7709)
!7727 = !DILocation(line: 1847, column: 41, scope: !7709)
!7728 = !DILocation(line: 1848, column: 35, scope: !7709)
!7729 = !DILocation(line: 1848, column: 41, scope: !7709)
!7730 = !DILocation(line: 1849, column: 9, scope: !7709)
!7731 = !DILocation(line: 1848, column: 9, scope: !7709)
!7732 = !DILocation(line: 1847, column: 9, scope: !7709)
!7733 = !DILocation(line: 1847, column: 2, scope: !7709)
!7734 = !DILocation(line: 1852, column: 12, scope: !7735)
!7735 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1852, column: 11)
!7736 = !DILocation(line: 1853, column: 4, scope: !7735)
!7737 = !DILocation(line: 1853, column: 7, scope: !7735)
!7738 = !DILocation(line: 1853, column: 22, scope: !7735)
!7739 = !DILocation(line: 1854, column: 4, scope: !7735)
!7740 = !DILocation(line: 1854, column: 7, scope: !7735)
!7741 = !DILocation(line: 1854, column: 32, scope: !7735)
!7742 = !DILocation(line: 1852, column: 11, scope: !7487)
!7743 = !DILocalVariable(name: "in1", scope: !7744, file: !1, line: 1856, type: !1495)
!7744 = distinct !DILexicalBlock(scope: !7735, file: !1, line: 1855, column: 2)
!7745 = !DILocation(line: 1856, column: 8, scope: !7744)
!7746 = !DILocalVariable(name: "in2", scope: !7744, file: !1, line: 1856, type: !1495)
!7747 = !DILocation(line: 1856, column: 13, scope: !7744)
!7748 = !DILocation(line: 1858, column: 10, scope: !7744)
!7749 = !DILocation(line: 1858, column: 8, scope: !7744)
!7750 = !DILocation(line: 1859, column: 10, scope: !7744)
!7751 = !DILocation(line: 1859, column: 8, scope: !7744)
!7752 = !DILocation(line: 1860, column: 39, scope: !7744)
!7753 = !DILocation(line: 1860, column: 45, scope: !7744)
!7754 = !DILocation(line: 1861, column: 38, scope: !7744)
!7755 = !DILocation(line: 1862, column: 11, scope: !7744)
!7756 = !DILocation(line: 1862, column: 16, scope: !7744)
!7757 = !DILocation(line: 1861, column: 11, scope: !7744)
!7758 = !DILocation(line: 1860, column: 11, scope: !7744)
!7759 = !DILocation(line: 1860, column: 4, scope: !7744)
!7760 = !DILocation(line: 1868, column: 11, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1868, column: 11)
!7762 = !DILocation(line: 1869, column: 4, scope: !7761)
!7763 = !DILocation(line: 1870, column: 37, scope: !7761)
!7764 = !DILocation(line: 1870, column: 48, scope: !7761)
!7765 = !DILocation(line: 1870, column: 45, scope: !7761)
!7766 = !DILocation(line: 1871, column: 4, scope: !7761)
!7767 = !DILocation(line: 1871, column: 40, scope: !7761)
!7768 = !DILocation(line: 1871, column: 45, scope: !7761)
!7769 = !DILocation(line: 1871, column: 19, scope: !7761)
!7770 = !DILocation(line: 1871, column: 17, scope: !7761)
!7771 = !DILocation(line: 1868, column: 11, scope: !7487)
!7772 = !DILocation(line: 1873, column: 29, scope: !7761)
!7773 = !DILocation(line: 1873, column: 35, scope: !7761)
!7774 = !DILocation(line: 1873, column: 45, scope: !7761)
!7775 = !DILocation(line: 1873, column: 4, scope: !7761)
!7776 = !DILocation(line: 1872, column: 2, scope: !7761)
!7777 = !DILocation(line: 1881, column: 11, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1881, column: 11)
!7779 = !DILocation(line: 1882, column: 4, scope: !7778)
!7780 = !DILocation(line: 1882, column: 30, scope: !7778)
!7781 = !DILocation(line: 1882, column: 8, scope: !7778)
!7782 = !DILocation(line: 1883, column: 8, scope: !7778)
!7783 = !DILocation(line: 1883, column: 33, scope: !7778)
!7784 = !DILocation(line: 1883, column: 11, scope: !7778)
!7785 = !DILocation(line: 1884, column: 4, scope: !7778)
!7786 = !DILocation(line: 1884, column: 35, scope: !7778)
!7787 = !DILocation(line: 1884, column: 41, scope: !7778)
!7788 = !DILocation(line: 1884, column: 47, scope: !7778)
!7789 = !DILocation(line: 1884, column: 52, scope: !7778)
!7790 = !DILocation(line: 1884, column: 14, scope: !7778)
!7791 = !DILocation(line: 1884, column: 12, scope: !7778)
!7792 = !DILocation(line: 1884, column: 58, scope: !7778)
!7793 = !DILocation(line: 1881, column: 11, scope: !7487)
!7794 = !DILocation(line: 1885, column: 9, scope: !7778)
!7795 = !DILocation(line: 1885, column: 2, scope: !7778)
!7796 = !DILocation(line: 1889, column: 11, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1889, column: 11)
!7798 = !DILocation(line: 1890, column: 4, scope: !7797)
!7799 = !DILocation(line: 1890, column: 7, scope: !7797)
!7800 = !DILocation(line: 1889, column: 11, scope: !7487)
!7801 = !DILocation(line: 1892, column: 42, scope: !7802)
!7802 = distinct !DILexicalBlock(scope: !7797, file: !1, line: 1891, column: 2)
!7803 = !DILocation(line: 1892, column: 48, scope: !7802)
!7804 = !DILocation(line: 1892, column: 54, scope: !7802)
!7805 = !DILocation(line: 1892, column: 59, scope: !7802)
!7806 = !DILocation(line: 1892, column: 10, scope: !7802)
!7807 = !DILocation(line: 1892, column: 8, scope: !7802)
!7808 = !DILocation(line: 1893, column: 8, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7802, file: !1, line: 1893, column: 8)
!7810 = !DILocation(line: 1893, column: 8, scope: !7802)
!7811 = !DILocation(line: 1894, column: 13, scope: !7809)
!7812 = !DILocation(line: 1894, column: 6, scope: !7809)
!7813 = !DILocation(line: 1895, column: 2, scope: !7802)
!7814 = !DILocation(line: 1896, column: 7, scope: !7487)
!7815 = !DILocation(line: 1900, column: 13, scope: !7816)
!7816 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1900, column: 11)
!7817 = !DILocation(line: 1900, column: 28, scope: !7816)
!7818 = !DILocation(line: 1900, column: 34, scope: !7816)
!7819 = !DILocation(line: 1900, column: 37, scope: !7816)
!7820 = !DILocation(line: 1900, column: 52, scope: !7816)
!7821 = !DILocation(line: 1901, column: 5, scope: !7816)
!7822 = !DILocation(line: 1901, column: 9, scope: !7816)
!7823 = !DILocation(line: 1901, column: 24, scope: !7816)
!7824 = !DILocation(line: 1901, column: 31, scope: !7816)
!7825 = !DILocation(line: 1901, column: 34, scope: !7816)
!7826 = !DILocation(line: 1901, column: 49, scope: !7816)
!7827 = !DILocation(line: 1902, column: 4, scope: !7816)
!7828 = !DILocation(line: 1902, column: 7, scope: !7816)
!7829 = !DILocation(line: 1902, column: 24, scope: !7816)
!7830 = !DILocation(line: 1902, column: 21, scope: !7816)
!7831 = !DILocation(line: 1902, column: 35, scope: !7816)
!7832 = !DILocation(line: 1902, column: 38, scope: !7816)
!7833 = !DILocation(line: 1902, column: 55, scope: !7816)
!7834 = !DILocation(line: 1902, column: 52, scope: !7816)
!7835 = !DILocation(line: 1900, column: 11, scope: !7487)
!7836 = !DILocalVariable(name: "xop00", scope: !7837, file: !1, line: 1904, type: !1495)
!7837 = distinct !DILexicalBlock(scope: !7816, file: !1, line: 1903, column: 2)
!7838 = !DILocation(line: 1904, column: 8, scope: !7837)
!7839 = !DILocation(line: 1904, column: 16, scope: !7837)
!7840 = !DILocalVariable(name: "xop10", scope: !7837, file: !1, line: 1905, type: !1495)
!7841 = !DILocation(line: 1905, column: 8, scope: !7837)
!7842 = !DILocation(line: 1905, column: 16, scope: !7837)
!7843 = !DILocation(line: 1910, column: 10, scope: !7844)
!7844 = distinct !DILexicalBlock(scope: !7837, file: !1, line: 1910, column: 10)
!7845 = !DILocation(line: 1910, column: 24, scope: !7844)
!7846 = !DILocation(line: 1910, column: 27, scope: !7844)
!7847 = !DILocation(line: 1911, column: 3, scope: !7844)
!7848 = !DILocation(line: 1911, column: 6, scope: !7844)
!7849 = !DILocation(line: 1911, column: 26, scope: !7844)
!7850 = !DILocation(line: 1911, column: 23, scope: !7844)
!7851 = !DILocation(line: 1912, column: 3, scope: !7844)
!7852 = !DILocation(line: 1912, column: 6, scope: !7844)
!7853 = !DILocation(line: 1912, column: 23, scope: !7844)
!7854 = !DILocation(line: 1912, column: 20, scope: !7844)
!7855 = !DILocation(line: 1913, column: 3, scope: !7844)
!7856 = !DILocation(line: 1913, column: 6, scope: !7844)
!7857 = !DILocation(line: 1913, column: 40, scope: !7844)
!7858 = !DILocation(line: 1914, column: 3, scope: !7844)
!7859 = !DILocation(line: 1914, column: 6, scope: !7844)
!7860 = !DILocation(line: 1914, column: 40, scope: !7844)
!7861 = !DILocation(line: 1910, column: 10, scope: !7837)
!7862 = !DILocation(line: 1916, column: 15, scope: !7844)
!7863 = !DILocation(line: 1916, column: 8, scope: !7844)
!7864 = !DILocation(line: 1917, column: 2, scope: !7837)
!7865 = !DILocation(line: 1918, column: 7, scope: !7487)
!7866 = !DILocation(line: 1924, column: 24, scope: !7867)
!7867 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1924, column: 11)
!7868 = !DILocation(line: 1924, column: 33, scope: !7867)
!7869 = !DILocation(line: 1924, column: 11, scope: !7867)
!7870 = !DILocation(line: 1925, column: 4, scope: !7867)
!7871 = !DILocation(line: 1925, column: 25, scope: !7867)
!7872 = !DILocation(line: 1925, column: 9, scope: !7867)
!7873 = !DILocation(line: 1926, column: 4, scope: !7867)
!7874 = !DILocation(line: 1926, column: 9, scope: !7867)
!7875 = !DILocation(line: 1926, column: 29, scope: !7867)
!7876 = !DILocation(line: 1926, column: 33, scope: !7867)
!7877 = !DILocation(line: 1924, column: 11, scope: !7487)
!7878 = !DILocation(line: 1927, column: 9, scope: !7867)
!7879 = !DILocation(line: 1927, column: 2, scope: !7867)
!7880 = !DILocation(line: 1933, column: 12, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1933, column: 11)
!7882 = !DILocation(line: 1933, column: 38, scope: !7881)
!7883 = !DILocation(line: 1933, column: 41, scope: !7881)
!7884 = !DILocation(line: 1933, column: 52, scope: !7881)
!7885 = !DILocation(line: 1933, column: 49, scope: !7881)
!7886 = !DILocation(line: 1933, column: 11, scope: !7487)
!7887 = !DILocation(line: 1934, column: 34, scope: !7881)
!7888 = !DILocation(line: 1934, column: 40, scope: !7881)
!7889 = !DILocation(line: 1934, column: 45, scope: !7881)
!7890 = !DILocation(line: 1934, column: 9, scope: !7881)
!7891 = !DILocation(line: 1934, column: 2, scope: !7881)
!7892 = !DILocation(line: 1937, column: 11, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1937, column: 11)
!7894 = !DILocation(line: 1937, column: 22, scope: !7893)
!7895 = !DILocation(line: 1937, column: 19, scope: !7893)
!7896 = !DILocation(line: 1937, column: 11, scope: !7487)
!7897 = !DILocation(line: 1938, column: 34, scope: !7893)
!7898 = !DILocation(line: 1938, column: 40, scope: !7893)
!7899 = !DILocation(line: 1938, column: 45, scope: !7893)
!7900 = !DILocation(line: 1938, column: 9, scope: !7893)
!7901 = !DILocation(line: 1938, column: 2, scope: !7893)
!7902 = !DILocation(line: 1943, column: 13, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1943, column: 11)
!7904 = !DILocation(line: 1944, column: 6, scope: !7903)
!7905 = !DILocation(line: 1944, column: 9, scope: !7903)
!7906 = !DILocation(line: 1945, column: 4, scope: !7903)
!7907 = !DILocation(line: 1945, column: 7, scope: !7903)
!7908 = !DILocation(line: 1945, column: 18, scope: !7903)
!7909 = !DILocation(line: 1945, column: 15, scope: !7903)
!7910 = !DILocation(line: 1943, column: 11, scope: !7487)
!7911 = !DILocation(line: 1946, column: 9, scope: !7903)
!7912 = !DILocation(line: 1946, column: 2, scope: !7903)
!7913 = !DILocation(line: 1954, column: 11, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 1954, column: 11)
!7915 = !DILocation(line: 1954, column: 11, scope: !7487)
!7916 = !DILocalVariable(name: "coeff0h", scope: !7917, file: !1, line: 1956, type: !1585)
!7917 = distinct !DILexicalBlock(scope: !7914, file: !1, line: 1955, column: 2)
!7918 = !DILocation(line: 1956, column: 18, scope: !7917)
!7919 = !DILocalVariable(name: "negcoeff1h", scope: !7917, file: !1, line: 1956, type: !1585)
!7920 = !DILocation(line: 1956, column: 31, scope: !7917)
!7921 = !DILocalVariable(name: "coeff0l", scope: !7917, file: !1, line: 1957, type: !1568)
!7922 = !DILocation(line: 1957, column: 27, scope: !7917)
!7923 = !DILocalVariable(name: "negcoeff1l", scope: !7917, file: !1, line: 1957, type: !1568)
!7924 = !DILocation(line: 1957, column: 40, scope: !7917)
!7925 = !DILocalVariable(name: "lhs", scope: !7917, file: !1, line: 1958, type: !1495)
!7926 = !DILocation(line: 1958, column: 8, scope: !7917)
!7927 = !DILocation(line: 1958, column: 14, scope: !7917)
!7928 = !DILocalVariable(name: "rhs", scope: !7917, file: !1, line: 1958, type: !1495)
!7929 = !DILocation(line: 1958, column: 19, scope: !7917)
!7930 = !DILocation(line: 1958, column: 25, scope: !7917)
!7931 = !DILocation(line: 1960, column: 8, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7917, file: !1, line: 1960, column: 8)
!7933 = !DILocation(line: 1960, column: 23, scope: !7932)
!7934 = !DILocation(line: 1960, column: 8, scope: !7917)
!7935 = !DILocation(line: 1962, column: 16, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7932, file: !1, line: 1961, column: 6)
!7937 = !DILocation(line: 1963, column: 16, scope: !7936)
!7938 = !DILocation(line: 1964, column: 14, scope: !7936)
!7939 = !DILocation(line: 1964, column: 12, scope: !7936)
!7940 = !DILocation(line: 1965, column: 6, scope: !7936)
!7941 = !DILocation(line: 1966, column: 13, scope: !7942)
!7942 = distinct !DILexicalBlock(scope: !7932, file: !1, line: 1966, column: 13)
!7943 = !DILocation(line: 1966, column: 28, scope: !7942)
!7944 = !DILocation(line: 1967, column: 6, scope: !7942)
!7945 = !DILocation(line: 1967, column: 9, scope: !7942)
!7946 = !DILocation(line: 1966, column: 13, scope: !7932)
!7947 = !DILocation(line: 1969, column: 18, scope: !7948)
!7948 = distinct !DILexicalBlock(scope: !7942, file: !1, line: 1968, column: 6)
!7949 = !DILocation(line: 1969, column: 16, scope: !7948)
!7950 = !DILocation(line: 1970, column: 18, scope: !7948)
!7951 = !DILocation(line: 1970, column: 41, scope: !7948)
!7952 = !DILocation(line: 1970, column: 16, scope: !7948)
!7953 = !DILocation(line: 1971, column: 14, scope: !7948)
!7954 = !DILocation(line: 1971, column: 12, scope: !7948)
!7955 = !DILocation(line: 1972, column: 6, scope: !7948)
!7956 = !DILocation(line: 1973, column: 13, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7942, file: !1, line: 1973, column: 13)
!7958 = !DILocation(line: 1973, column: 28, scope: !7957)
!7959 = !DILocation(line: 1974, column: 6, scope: !7957)
!7960 = !DILocation(line: 1974, column: 9, scope: !7957)
!7961 = !DILocation(line: 1975, column: 6, scope: !7957)
!7962 = !DILocation(line: 1975, column: 9, scope: !7957)
!7963 = !DILocation(line: 1975, column: 32, scope: !7957)
!7964 = !DILocation(line: 1976, column: 6, scope: !7957)
!7965 = !DILocation(line: 1976, column: 9, scope: !7957)
!7966 = !DILocation(line: 1976, column: 32, scope: !7957)
!7967 = !DILocation(line: 1973, column: 13, scope: !7942)
!7968 = !DILocation(line: 1978, column: 41, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7957, file: !1, line: 1977, column: 6)
!7970 = !DILocation(line: 1978, column: 38, scope: !7969)
!7971 = !DILocation(line: 1978, column: 16, scope: !7969)
!7972 = !DILocation(line: 1979, column: 16, scope: !7969)
!7973 = !DILocation(line: 1980, column: 14, scope: !7969)
!7974 = !DILocation(line: 1980, column: 12, scope: !7969)
!7975 = !DILocation(line: 1981, column: 6, scope: !7969)
!7976 = !DILocation(line: 1983, column: 8, scope: !7977)
!7977 = distinct !DILexicalBlock(scope: !7917, file: !1, line: 1983, column: 8)
!7978 = !DILocation(line: 1983, column: 23, scope: !7977)
!7979 = !DILocation(line: 1983, column: 8, scope: !7917)
!7980 = !DILocation(line: 1985, column: 19, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7977, file: !1, line: 1984, column: 6)
!7982 = !DILocation(line: 1986, column: 19, scope: !7981)
!7983 = !DILocation(line: 1987, column: 14, scope: !7981)
!7984 = !DILocation(line: 1987, column: 12, scope: !7981)
!7985 = !DILocation(line: 1988, column: 6, scope: !7981)
!7986 = !DILocation(line: 1989, column: 13, scope: !7987)
!7987 = distinct !DILexicalBlock(scope: !7977, file: !1, line: 1989, column: 13)
!7988 = !DILocation(line: 1989, column: 28, scope: !7987)
!7989 = !DILocation(line: 1990, column: 6, scope: !7987)
!7990 = !DILocation(line: 1990, column: 9, scope: !7987)
!7991 = !DILocation(line: 1989, column: 13, scope: !7977)
!7992 = !DILocation(line: 1992, column: 22, scope: !7993)
!7993 = distinct !DILexicalBlock(scope: !7987, file: !1, line: 1991, column: 6)
!7994 = !DILocation(line: 1992, column: 21, scope: !7993)
!7995 = !DILocation(line: 1992, column: 19, scope: !7993)
!7996 = !DILocation(line: 1993, column: 21, scope: !7993)
!7997 = !DILocation(line: 1993, column: 44, scope: !7993)
!7998 = !DILocation(line: 1993, column: 19, scope: !7993)
!7999 = !DILocation(line: 1994, column: 14, scope: !7993)
!8000 = !DILocation(line: 1994, column: 12, scope: !7993)
!8001 = !DILocation(line: 1995, column: 6, scope: !7993)
!8002 = !DILocation(line: 1996, column: 13, scope: !8003)
!8003 = distinct !DILexicalBlock(scope: !7987, file: !1, line: 1996, column: 13)
!8004 = !DILocation(line: 1996, column: 28, scope: !8003)
!8005 = !DILocation(line: 1997, column: 6, scope: !8003)
!8006 = !DILocation(line: 1997, column: 9, scope: !8003)
!8007 = !DILocation(line: 1998, column: 6, scope: !8003)
!8008 = !DILocation(line: 1998, column: 9, scope: !8003)
!8009 = !DILocation(line: 1998, column: 32, scope: !8003)
!8010 = !DILocation(line: 1999, column: 6, scope: !8003)
!8011 = !DILocation(line: 1999, column: 9, scope: !8003)
!8012 = !DILocation(line: 1999, column: 32, scope: !8003)
!8013 = !DILocation(line: 1996, column: 13, scope: !7987)
!8014 = !DILocation(line: 2001, column: 46, scope: !8015)
!8015 = distinct !DILexicalBlock(scope: !8003, file: !1, line: 2000, column: 6)
!8016 = !DILocation(line: 2001, column: 43, scope: !8015)
!8017 = !DILocation(line: 2001, column: 21, scope: !8015)
!8018 = !DILocation(line: 2001, column: 19, scope: !8015)
!8019 = !DILocation(line: 2002, column: 19, scope: !8015)
!8020 = !DILocation(line: 2003, column: 14, scope: !8015)
!8021 = !DILocation(line: 2003, column: 12, scope: !8015)
!8022 = !DILocation(line: 2004, column: 6, scope: !8015)
!8023 = !DILocation(line: 2006, column: 21, scope: !8024)
!8024 = distinct !DILexicalBlock(scope: !7917, file: !1, line: 2006, column: 8)
!8025 = !DILocation(line: 2006, column: 26, scope: !8024)
!8026 = !DILocation(line: 2006, column: 8, scope: !8024)
!8027 = !DILocation(line: 2006, column: 8, scope: !7917)
!8028 = !DILocalVariable(name: "orig", scope: !8029, file: !1, line: 2008, type: !1495)
!8029 = distinct !DILexicalBlock(scope: !8024, file: !1, line: 2007, column: 6)
!8030 = !DILocation(line: 2008, column: 12, scope: !8029)
!8031 = !DILocation(line: 2008, column: 19, scope: !8029)
!8032 = !DILocalVariable(name: "coeff", scope: !8029, file: !1, line: 2009, type: !1495)
!8033 = !DILocation(line: 2009, column: 12, scope: !8029)
!8034 = !DILocalVariable(name: "l", scope: !8029, file: !1, line: 2010, type: !1568)
!8035 = !DILocation(line: 2010, column: 31, scope: !8029)
!8036 = !DILocalVariable(name: "h", scope: !8029, file: !1, line: 2011, type: !1585)
!8037 = !DILocation(line: 2011, column: 22, scope: !8029)
!8038 = !DILocalVariable(name: "speed", scope: !8029, file: !1, line: 2012, type: !1729)
!8039 = !DILocation(line: 2012, column: 13, scope: !8029)
!8040 = !DILocation(line: 2012, column: 52, scope: !8029)
!8041 = !DILocation(line: 2012, column: 21, scope: !8029)
!8042 = !DILocation(line: 2014, column: 8, scope: !8029)
!8043 = !DILocation(line: 2015, column: 36, scope: !8029)
!8044 = !DILocation(line: 2015, column: 39, scope: !8029)
!8045 = !DILocation(line: 2015, column: 42, scope: !8029)
!8046 = !DILocation(line: 2015, column: 16, scope: !8029)
!8047 = !DILocation(line: 2015, column: 14, scope: !8029)
!8048 = !DILocation(line: 2017, column: 41, scope: !8029)
!8049 = !DILocation(line: 2017, column: 47, scope: !8029)
!8050 = !DILocation(line: 2017, column: 52, scope: !8029)
!8051 = !DILocation(line: 2017, column: 14, scope: !8029)
!8052 = !DILocation(line: 2017, column: 12, scope: !8029)
!8053 = !DILocation(line: 2018, column: 25, scope: !8029)
!8054 = !DILocation(line: 2018, column: 35, scope: !8029)
!8055 = !DILocation(line: 2018, column: 15, scope: !8029)
!8056 = !DILocation(line: 2018, column: 55, scope: !8029)
!8057 = !DILocation(line: 2018, column: 66, scope: !8029)
!8058 = !DILocation(line: 2018, column: 45, scope: !8029)
!8059 = !DILocation(line: 2018, column: 42, scope: !8029)
!8060 = !DILocation(line: 2019, column: 5, scope: !8029)
!8061 = !DILocation(line: 2018, column: 8, scope: !8029)
!8062 = !DILocation(line: 2021, column: 2, scope: !7917)
!8063 = !DILocation(line: 2024, column: 11, scope: !8064)
!8064 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2024, column: 11)
!8065 = !DILocation(line: 2024, column: 26, scope: !8064)
!8066 = !DILocation(line: 2024, column: 11, scope: !7487)
!8067 = !DILocation(line: 2025, column: 36, scope: !8064)
!8068 = !DILocation(line: 2025, column: 42, scope: !8064)
!8069 = !DILocation(line: 2025, column: 47, scope: !8064)
!8070 = !DILocation(line: 2025, column: 9, scope: !8064)
!8071 = !DILocation(line: 2025, column: 2, scope: !8064)
!8072 = !DILocation(line: 2028, column: 11, scope: !8073)
!8073 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2028, column: 11)
!8074 = !DILocation(line: 2028, column: 26, scope: !8073)
!8075 = !DILocation(line: 2029, column: 4, scope: !8073)
!8076 = !DILocation(line: 2029, column: 8, scope: !8073)
!8077 = !DILocation(line: 2030, column: 8, scope: !8073)
!8078 = !DILocation(line: 2030, column: 11, scope: !8073)
!8079 = !DILocation(line: 2030, column: 26, scope: !8073)
!8080 = !DILocation(line: 2028, column: 11, scope: !7487)
!8081 = !DILocation(line: 2032, column: 41, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8073, file: !1, line: 2031, column: 2)
!8083 = !DILocation(line: 2032, column: 47, scope: !8082)
!8084 = !DILocation(line: 2032, column: 52, scope: !8082)
!8085 = !DILocation(line: 2032, column: 10, scope: !8082)
!8086 = !DILocation(line: 2032, column: 8, scope: !8082)
!8087 = !DILocation(line: 2033, column: 8, scope: !8088)
!8088 = distinct !DILexicalBlock(scope: !8082, file: !1, line: 2033, column: 8)
!8089 = !DILocation(line: 2033, column: 8, scope: !8082)
!8090 = !DILocation(line: 2034, column: 41, scope: !8088)
!8091 = !DILocation(line: 2034, column: 47, scope: !8088)
!8092 = !DILocation(line: 2034, column: 52, scope: !8088)
!8093 = !DILocation(line: 2034, column: 13, scope: !8088)
!8094 = !DILocation(line: 2034, column: 6, scope: !8088)
!8095 = !DILocation(line: 2035, column: 2, scope: !8082)
!8096 = !DILocation(line: 2038, column: 11, scope: !8097)
!8097 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2038, column: 11)
!8098 = !DILocation(line: 2038, column: 29, scope: !8097)
!8099 = !DILocation(line: 2038, column: 32, scope: !8097)
!8100 = !DILocation(line: 2038, column: 47, scope: !8097)
!8101 = !DILocation(line: 2038, column: 11, scope: !7487)
!8102 = !DILocation(line: 2039, column: 36, scope: !8097)
!8103 = !DILocation(line: 2040, column: 9, scope: !8097)
!8104 = !DILocation(line: 2041, column: 24, scope: !8097)
!8105 = !DILocation(line: 2041, column: 30, scope: !8097)
!8106 = !DILocation(line: 2041, column: 9, scope: !8097)
!8107 = !DILocation(line: 2039, column: 9, scope: !8097)
!8108 = !DILocation(line: 2039, column: 2, scope: !8097)
!8109 = !DILocation(line: 2044, column: 11, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2044, column: 11)
!8111 = !DILocation(line: 2044, column: 26, scope: !8110)
!8112 = !DILocation(line: 2044, column: 11, scope: !7487)
!8113 = !DILocation(line: 2046, column: 21, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !8115, file: !1, line: 2046, column: 8)
!8115 = distinct !DILexicalBlock(scope: !8110, file: !1, line: 2045, column: 2)
!8116 = !DILocation(line: 2046, column: 26, scope: !8114)
!8117 = !DILocation(line: 2046, column: 8, scope: !8114)
!8118 = !DILocation(line: 2046, column: 8, scope: !8115)
!8119 = !DILocation(line: 2048, column: 39, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !8114, file: !1, line: 2047, column: 6)
!8121 = !DILocation(line: 2048, column: 45, scope: !8120)
!8122 = !DILocation(line: 2049, column: 6, scope: !8120)
!8123 = !DILocation(line: 2048, column: 14, scope: !8120)
!8124 = !DILocation(line: 2048, column: 12, scope: !8120)
!8125 = !DILocation(line: 2050, column: 41, scope: !8120)
!8126 = !DILocation(line: 2050, column: 47, scope: !8120)
!8127 = !DILocation(line: 2050, column: 52, scope: !8120)
!8128 = !DILocation(line: 2050, column: 15, scope: !8120)
!8129 = !DILocation(line: 2050, column: 8, scope: !8120)
!8130 = !DILocation(line: 2052, column: 21, scope: !8131)
!8131 = distinct !DILexicalBlock(scope: !8115, file: !1, line: 2052, column: 8)
!8132 = !DILocation(line: 2052, column: 26, scope: !8131)
!8133 = !DILocation(line: 2052, column: 8, scope: !8131)
!8134 = !DILocation(line: 2052, column: 8, scope: !8115)
!8135 = !DILocation(line: 2054, column: 39, scope: !8136)
!8136 = distinct !DILexicalBlock(scope: !8131, file: !1, line: 2053, column: 6)
!8137 = !DILocation(line: 2054, column: 45, scope: !8136)
!8138 = !DILocation(line: 2055, column: 6, scope: !8136)
!8139 = !DILocation(line: 2054, column: 14, scope: !8136)
!8140 = !DILocation(line: 2054, column: 12, scope: !8136)
!8141 = !DILocation(line: 2056, column: 41, scope: !8136)
!8142 = !DILocation(line: 2056, column: 47, scope: !8136)
!8143 = !DILocation(line: 2056, column: 52, scope: !8136)
!8144 = !DILocation(line: 2056, column: 15, scope: !8136)
!8145 = !DILocation(line: 2056, column: 8, scope: !8136)
!8146 = !DILocation(line: 2058, column: 2, scope: !8115)
!8147 = !DILocation(line: 2063, column: 7, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2062, column: 11)
!8149 = !DILocation(line: 2063, column: 18, scope: !8148)
!8150 = !DILocation(line: 2063, column: 15, scope: !8148)
!8151 = !DILocation(line: 2064, column: 4, scope: !8148)
!8152 = !DILocation(line: 2064, column: 7, scope: !8148)
!8153 = !DILocation(line: 2065, column: 4, scope: !8148)
!8154 = !DILocation(line: 2065, column: 40, scope: !8148)
!8155 = !DILocation(line: 2065, column: 45, scope: !8148)
!8156 = !DILocation(line: 2065, column: 19, scope: !8148)
!8157 = !DILocation(line: 2065, column: 17, scope: !8148)
!8158 = !DILocation(line: 2062, column: 11, scope: !7487)
!8159 = !DILocation(line: 2066, column: 9, scope: !8148)
!8160 = !DILocation(line: 2066, column: 2, scope: !8148)
!8161 = !DILocation(line: 2069, column: 12, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2069, column: 11)
!8163 = !DILocation(line: 2070, column: 4, scope: !8162)
!8164 = !DILocation(line: 2070, column: 7, scope: !8162)
!8165 = !DILocation(line: 2070, column: 22, scope: !8162)
!8166 = !DILocation(line: 2071, column: 4, scope: !8162)
!8167 = !DILocation(line: 2071, column: 7, scope: !8162)
!8168 = !DILocation(line: 2071, column: 32, scope: !8162)
!8169 = !DILocation(line: 2069, column: 11, scope: !7487)
!8170 = !DILocalVariable(name: "in1", scope: !8171, file: !1, line: 2073, type: !1495)
!8171 = distinct !DILexicalBlock(scope: !8162, file: !1, line: 2072, column: 2)
!8172 = !DILocation(line: 2073, column: 8, scope: !8171)
!8173 = !DILocalVariable(name: "in2", scope: !8171, file: !1, line: 2073, type: !1495)
!8174 = !DILocation(line: 2073, column: 13, scope: !8171)
!8175 = !DILocation(line: 2075, column: 10, scope: !8171)
!8176 = !DILocation(line: 2075, column: 8, scope: !8171)
!8177 = !DILocation(line: 2076, column: 10, scope: !8171)
!8178 = !DILocation(line: 2076, column: 8, scope: !8171)
!8179 = !DILocation(line: 2077, column: 38, scope: !8171)
!8180 = !DILocation(line: 2078, column: 38, scope: !8171)
!8181 = !DILocation(line: 2079, column: 11, scope: !8171)
!8182 = !DILocation(line: 2079, column: 16, scope: !8171)
!8183 = !DILocation(line: 2078, column: 11, scope: !8171)
!8184 = !DILocation(line: 2080, column: 11, scope: !8171)
!8185 = !DILocation(line: 2077, column: 11, scope: !8171)
!8186 = !DILocation(line: 2077, column: 4, scope: !8171)
!8187 = !DILocation(line: 2085, column: 12, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2085, column: 11)
!8189 = !DILocation(line: 2086, column: 4, scope: !8188)
!8190 = !DILocation(line: 2086, column: 7, scope: !8188)
!8191 = !DILocation(line: 2086, column: 22, scope: !8188)
!8192 = !DILocation(line: 2087, column: 4, scope: !8188)
!8193 = !DILocation(line: 2087, column: 7, scope: !8188)
!8194 = !DILocation(line: 2087, column: 22, scope: !8188)
!8195 = !DILocation(line: 2085, column: 11, scope: !7487)
!8196 = !DILocalVariable(name: "in1", scope: !8197, file: !1, line: 2089, type: !1495)
!8197 = distinct !DILexicalBlock(scope: !8188, file: !1, line: 2088, column: 2)
!8198 = !DILocation(line: 2089, column: 8, scope: !8197)
!8199 = !DILocalVariable(name: "in2", scope: !8197, file: !1, line: 2089, type: !1495)
!8200 = !DILocation(line: 2089, column: 13, scope: !8197)
!8201 = !DILocation(line: 2091, column: 35, scope: !8197)
!8202 = !DILocation(line: 2091, column: 41, scope: !8197)
!8203 = !DILocation(line: 2091, column: 56, scope: !8197)
!8204 = !DILocation(line: 2091, column: 10, scope: !8197)
!8205 = !DILocation(line: 2091, column: 8, scope: !8197)
!8206 = !DILocation(line: 2092, column: 10, scope: !8197)
!8207 = !DILocation(line: 2092, column: 8, scope: !8197)
!8208 = !DILocation(line: 2093, column: 39, scope: !8197)
!8209 = !DILocation(line: 2094, column: 38, scope: !8197)
!8210 = !DILocation(line: 2095, column: 11, scope: !8197)
!8211 = !DILocation(line: 2095, column: 16, scope: !8197)
!8212 = !DILocation(line: 2094, column: 11, scope: !8197)
!8213 = !DILocation(line: 2096, column: 11, scope: !8197)
!8214 = !DILocation(line: 2093, column: 11, scope: !8197)
!8215 = !DILocation(line: 2093, column: 4, scope: !8197)
!8216 = !DILocation(line: 2106, column: 11, scope: !8217)
!8217 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2106, column: 11)
!8218 = !DILocation(line: 2107, column: 4, scope: !8217)
!8219 = !DILocation(line: 2107, column: 30, scope: !8217)
!8220 = !DILocation(line: 2107, column: 8, scope: !8217)
!8221 = !DILocation(line: 2108, column: 8, scope: !8217)
!8222 = !DILocation(line: 2108, column: 33, scope: !8217)
!8223 = !DILocation(line: 2108, column: 11, scope: !8217)
!8224 = !DILocation(line: 2109, column: 4, scope: !8217)
!8225 = !DILocation(line: 2109, column: 35, scope: !8217)
!8226 = !DILocation(line: 2109, column: 41, scope: !8217)
!8227 = !DILocation(line: 2109, column: 47, scope: !8217)
!8228 = !DILocation(line: 2109, column: 52, scope: !8217)
!8229 = !DILocation(line: 2109, column: 14, scope: !8217)
!8230 = !DILocation(line: 2109, column: 12, scope: !8217)
!8231 = !DILocation(line: 2109, column: 58, scope: !8217)
!8232 = !DILocation(line: 2106, column: 11, scope: !7487)
!8233 = !DILocation(line: 2110, column: 9, scope: !8217)
!8234 = !DILocation(line: 2110, column: 2, scope: !8217)
!8235 = !DILocation(line: 2111, column: 7, scope: !7487)
!8236 = !DILocation(line: 2114, column: 11, scope: !8237)
!8237 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2114, column: 11)
!8238 = !DILocation(line: 2114, column: 22, scope: !8237)
!8239 = !DILocation(line: 2114, column: 19, scope: !8237)
!8240 = !DILocation(line: 2114, column: 11, scope: !7487)
!8241 = !DILocation(line: 2115, column: 34, scope: !8237)
!8242 = !DILocation(line: 2115, column: 40, scope: !8237)
!8243 = !DILocation(line: 2115, column: 45, scope: !8237)
!8244 = !DILocation(line: 2115, column: 9, scope: !8237)
!8245 = !DILocation(line: 2115, column: 2, scope: !8237)
!8246 = !DILocation(line: 2121, column: 12, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2121, column: 11)
!8248 = !DILocation(line: 2122, column: 4, scope: !8247)
!8249 = !DILocation(line: 2122, column: 8, scope: !8247)
!8250 = !DILocation(line: 2123, column: 4, scope: !8247)
!8251 = !DILocation(line: 2123, column: 7, scope: !8247)
!8252 = !DILocation(line: 2123, column: 18, scope: !8247)
!8253 = !DILocation(line: 2123, column: 15, scope: !8247)
!8254 = !DILocation(line: 2124, column: 4, scope: !8247)
!8255 = !DILocation(line: 2124, column: 25, scope: !8247)
!8256 = !DILocation(line: 2124, column: 9, scope: !8247)
!8257 = !DILocation(line: 2121, column: 11, scope: !7487)
!8258 = !DILocation(line: 2125, column: 9, scope: !8247)
!8259 = !DILocation(line: 2125, column: 2, scope: !8247)
!8260 = !DILocation(line: 2129, column: 12, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2129, column: 11)
!8262 = !DILocation(line: 2130, column: 4, scope: !8261)
!8263 = !DILocation(line: 2130, column: 7, scope: !8261)
!8264 = !DILocation(line: 2130, column: 18, scope: !8261)
!8265 = !DILocation(line: 2130, column: 15, scope: !8261)
!8266 = !DILocation(line: 2129, column: 11, scope: !7487)
!8267 = !DILocation(line: 2131, column: 9, scope: !8261)
!8268 = !DILocation(line: 2131, column: 2, scope: !8261)
!8269 = !DILocation(line: 2135, column: 11, scope: !8270)
!8270 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2135, column: 11)
!8271 = !DILocation(line: 2136, column: 4, scope: !8270)
!8272 = !DILocation(line: 2136, column: 26, scope: !8270)
!8273 = !DILocation(line: 2136, column: 14, scope: !8270)
!8274 = !DILocation(line: 2136, column: 12, scope: !8270)
!8275 = !DILocation(line: 2136, column: 45, scope: !8270)
!8276 = !DILocation(line: 2140, column: 4, scope: !8270)
!8277 = !DILocation(line: 2140, column: 8, scope: !8270)
!8278 = !DILocation(line: 2140, column: 14, scope: !8270)
!8279 = !DILocation(line: 2141, column: 8, scope: !8270)
!8280 = !DILocation(line: 2141, column: 11, scope: !8270)
!8281 = !DILocation(line: 2141, column: 15, scope: !8270)
!8282 = !DILocation(line: 2135, column: 11, scope: !7487)
!8283 = !DILocation(line: 2142, column: 38, scope: !8270)
!8284 = !DILocation(line: 2142, column: 44, scope: !8270)
!8285 = !DILocation(line: 2142, column: 49, scope: !8270)
!8286 = !DILocation(line: 2142, column: 9, scope: !8270)
!8287 = !DILocation(line: 2142, column: 2, scope: !8270)
!8288 = !DILocation(line: 2145, column: 11, scope: !8289)
!8289 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2145, column: 11)
!8290 = !DILocation(line: 2145, column: 30, scope: !8289)
!8291 = !DILocation(line: 2146, column: 4, scope: !8289)
!8292 = !DILocation(line: 2146, column: 8, scope: !8289)
!8293 = !DILocation(line: 2146, column: 27, scope: !8289)
!8294 = !DILocation(line: 2147, column: 8, scope: !8289)
!8295 = !DILocation(line: 2147, column: 11, scope: !8289)
!8296 = !DILocation(line: 2147, column: 47, scope: !8289)
!8297 = !DILocation(line: 2148, column: 4, scope: !8289)
!8298 = !DILocation(line: 2148, column: 7, scope: !8289)
!8299 = !DILocation(line: 2148, column: 25, scope: !8289)
!8300 = !DILocation(line: 2148, column: 22, scope: !8289)
!8301 = !DILocation(line: 2149, column: 4, scope: !8289)
!8302 = !DILocation(line: 2149, column: 7, scope: !8289)
!8303 = !DILocation(line: 2149, column: 34, scope: !8289)
!8304 = !DILocation(line: 2150, column: 4, scope: !8289)
!8305 = !DILocation(line: 2150, column: 26, scope: !8289)
!8306 = !DILocation(line: 2150, column: 14, scope: !8289)
!8307 = !DILocation(line: 2150, column: 12, scope: !8289)
!8308 = !DILocation(line: 2150, column: 56, scope: !8289)
!8309 = !DILocation(line: 2145, column: 11, scope: !7487)
!8310 = !DILocation(line: 2151, column: 38, scope: !8289)
!8311 = !DILocation(line: 2151, column: 44, scope: !8289)
!8312 = !DILocation(line: 2152, column: 9, scope: !8289)
!8313 = !DILocation(line: 2151, column: 9, scope: !8289)
!8314 = !DILocation(line: 2151, column: 2, scope: !8289)
!8315 = !DILocation(line: 2155, column: 11, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2155, column: 11)
!8317 = !DILocation(line: 2155, column: 30, scope: !8316)
!8318 = !DILocation(line: 2156, column: 4, scope: !8316)
!8319 = !DILocation(line: 2156, column: 7, scope: !8316)
!8320 = !DILocation(line: 2157, column: 4, scope: !8316)
!8321 = !DILocation(line: 2157, column: 8, scope: !8316)
!8322 = !DILocation(line: 2158, column: 4, scope: !8316)
!8323 = !DILocation(line: 2158, column: 7, scope: !8316)
!8324 = !DILocation(line: 2158, column: 25, scope: !8316)
!8325 = !DILocation(line: 2158, column: 22, scope: !8316)
!8326 = !DILocation(line: 2155, column: 11, scope: !7487)
!8327 = !DILocalVariable(name: "d", scope: !8328, file: !1, line: 2160, type: !1676)
!8328 = distinct !DILexicalBlock(scope: !8316, file: !1, line: 2159, column: 2)
!8329 = !DILocation(line: 2160, column: 20, scope: !8328)
!8330 = !DILocation(line: 2161, column: 4, scope: !8328)
!8331 = !DILocation(line: 2163, column: 8, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8328, file: !1, line: 2163, column: 8)
!8333 = !DILocation(line: 2163, column: 8, scope: !8328)
!8334 = !DILocation(line: 2164, column: 40, scope: !8332)
!8335 = !DILocation(line: 2164, column: 46, scope: !8332)
!8336 = !DILocation(line: 2164, column: 61, scope: !8332)
!8337 = !DILocation(line: 2164, column: 51, scope: !8332)
!8338 = !DILocation(line: 2164, column: 13, scope: !8332)
!8339 = !DILocation(line: 2164, column: 6, scope: !8332)
!8340 = !DILocation(line: 2166, column: 9, scope: !8341)
!8341 = distinct !DILexicalBlock(scope: !8328, file: !1, line: 2166, column: 8)
!8342 = !DILocation(line: 2167, column: 8, scope: !8341)
!8343 = !DILocation(line: 2167, column: 11, scope: !8341)
!8344 = !DILocation(line: 2166, column: 8, scope: !8328)
!8345 = !DILocation(line: 2168, column: 38, scope: !8341)
!8346 = !DILocation(line: 2168, column: 44, scope: !8341)
!8347 = !DILocation(line: 2168, column: 49, scope: !8341)
!8348 = !DILocation(line: 2168, column: 13, scope: !8341)
!8349 = !DILocation(line: 2168, column: 6, scope: !8341)
!8350 = !DILocation(line: 2169, column: 2, scope: !8328)
!8351 = !DILocation(line: 2172, column: 11, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2172, column: 11)
!8353 = !DILocation(line: 2173, column: 4, scope: !8352)
!8354 = !DILocation(line: 2173, column: 7, scope: !8352)
!8355 = !DILocation(line: 2173, column: 22, scope: !8352)
!8356 = !DILocation(line: 2174, column: 4, scope: !8352)
!8357 = !DILocation(line: 2174, column: 7, scope: !8352)
!8358 = !DILocation(line: 2174, column: 22, scope: !8352)
!8359 = !DILocation(line: 2175, column: 4, scope: !8352)
!8360 = !DILocation(line: 2175, column: 20, scope: !8352)
!8361 = !DILocation(line: 2175, column: 35, scope: !8352)
!8362 = !DILocation(line: 2175, column: 7, scope: !8352)
!8363 = !DILocation(line: 2176, column: 4, scope: !8352)
!8364 = !DILocation(line: 2176, column: 24, scope: !8352)
!8365 = !DILocation(line: 2176, column: 8, scope: !8352)
!8366 = !DILocation(line: 2172, column: 11, scope: !7487)
!8367 = !DILocation(line: 2177, column: 36, scope: !8352)
!8368 = !DILocation(line: 2177, column: 42, scope: !8352)
!8369 = !DILocation(line: 2177, column: 57, scope: !8352)
!8370 = !DILocation(line: 2177, column: 9, scope: !8352)
!8371 = !DILocation(line: 2177, column: 2, scope: !8352)
!8372 = !DILocation(line: 2180, column: 11, scope: !8373)
!8373 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2180, column: 11)
!8374 = !DILocation(line: 2181, column: 4, scope: !8373)
!8375 = !DILocation(line: 2181, column: 7, scope: !8373)
!8376 = !DILocation(line: 2181, column: 22, scope: !8373)
!8377 = !DILocation(line: 2182, column: 4, scope: !8373)
!8378 = !DILocation(line: 2182, column: 7, scope: !8373)
!8379 = !DILocation(line: 2182, column: 22, scope: !8373)
!8380 = !DILocation(line: 2183, column: 4, scope: !8373)
!8381 = !DILocation(line: 2183, column: 20, scope: !8373)
!8382 = !DILocation(line: 2183, column: 35, scope: !8373)
!8383 = !DILocation(line: 2183, column: 7, scope: !8373)
!8384 = !DILocation(line: 2184, column: 4, scope: !8373)
!8385 = !DILocation(line: 2184, column: 24, scope: !8373)
!8386 = !DILocation(line: 2184, column: 8, scope: !8373)
!8387 = !DILocation(line: 2180, column: 11, scope: !7487)
!8388 = !DILocation(line: 2185, column: 36, scope: !8373)
!8389 = !DILocation(line: 2185, column: 42, scope: !8373)
!8390 = !DILocation(line: 2185, column: 57, scope: !8373)
!8391 = !DILocation(line: 2185, column: 9, scope: !8373)
!8392 = !DILocation(line: 2185, column: 2, scope: !8373)
!8393 = !DILocation(line: 2189, column: 13, scope: !8394)
!8394 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2189, column: 11)
!8395 = !DILocation(line: 2190, column: 4, scope: !8394)
!8396 = !DILocation(line: 2190, column: 7, scope: !8394)
!8397 = !DILocation(line: 2189, column: 11, scope: !7487)
!8398 = !DILocation(line: 2192, column: 42, scope: !8399)
!8399 = distinct !DILexicalBlock(scope: !8394, file: !1, line: 2191, column: 2)
!8400 = !DILocation(line: 2192, column: 48, scope: !8399)
!8401 = !DILocation(line: 2192, column: 54, scope: !8399)
!8402 = !DILocation(line: 2192, column: 59, scope: !8399)
!8403 = !DILocation(line: 2192, column: 10, scope: !8399)
!8404 = !DILocation(line: 2192, column: 8, scope: !8399)
!8405 = !DILocation(line: 2193, column: 8, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8399, file: !1, line: 2193, column: 8)
!8407 = !DILocation(line: 2193, column: 8, scope: !8399)
!8408 = !DILocation(line: 2194, column: 13, scope: !8406)
!8409 = !DILocation(line: 2194, column: 6, scope: !8406)
!8410 = !DILocation(line: 2195, column: 2, scope: !8399)
!8411 = !DILocation(line: 2196, column: 7, scope: !7487)
!8412 = !DILocation(line: 2199, column: 11, scope: !8413)
!8413 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2199, column: 11)
!8414 = !DILocation(line: 2199, column: 22, scope: !8413)
!8415 = !DILocation(line: 2199, column: 19, scope: !8413)
!8416 = !DILocation(line: 2199, column: 11, scope: !7487)
!8417 = !DILocation(line: 2200, column: 9, scope: !8413)
!8418 = !DILocation(line: 2200, column: 2, scope: !8413)
!8419 = !DILocation(line: 2201, column: 11, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2201, column: 11)
!8421 = !DILocation(line: 2202, column: 4, scope: !8420)
!8422 = !DILocation(line: 2202, column: 9, scope: !8420)
!8423 = !DILocation(line: 2202, column: 28, scope: !8420)
!8424 = !DILocation(line: 2202, column: 26, scope: !8420)
!8425 = !DILocation(line: 2203, column: 11, scope: !8420)
!8426 = !DILocation(line: 2203, column: 8, scope: !8420)
!8427 = !DILocation(line: 2201, column: 11, scope: !7487)
!8428 = !DILocation(line: 2204, column: 9, scope: !8420)
!8429 = !DILocation(line: 2204, column: 2, scope: !8420)
!8430 = !DILocation(line: 2205, column: 24, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2205, column: 11)
!8432 = !DILocation(line: 2205, column: 33, scope: !8431)
!8433 = !DILocation(line: 2205, column: 11, scope: !8431)
!8434 = !DILocation(line: 2205, column: 42, scope: !8431)
!8435 = !DILocation(line: 2205, column: 63, scope: !8431)
!8436 = !DILocation(line: 2205, column: 47, scope: !8431)
!8437 = !DILocation(line: 2205, column: 11, scope: !7487)
!8438 = !DILocation(line: 2206, column: 9, scope: !8431)
!8439 = !DILocation(line: 2206, column: 2, scope: !8431)
!8440 = !DILocation(line: 2208, column: 13, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2208, column: 11)
!8442 = !DILocation(line: 2208, column: 28, scope: !8441)
!8443 = !DILocation(line: 2208, column: 35, scope: !8441)
!8444 = !DILocation(line: 2208, column: 51, scope: !8441)
!8445 = !DILocation(line: 2208, column: 66, scope: !8441)
!8446 = !DILocation(line: 2208, column: 38, scope: !8441)
!8447 = !DILocation(line: 2209, column: 5, scope: !8441)
!8448 = !DILocation(line: 2209, column: 9, scope: !8441)
!8449 = !DILocation(line: 2209, column: 24, scope: !8441)
!8450 = !DILocation(line: 2209, column: 31, scope: !8441)
!8451 = !DILocation(line: 2209, column: 47, scope: !8441)
!8452 = !DILocation(line: 2209, column: 62, scope: !8441)
!8453 = !DILocation(line: 2209, column: 34, scope: !8441)
!8454 = !DILocation(line: 2210, column: 4, scope: !8441)
!8455 = !DILocation(line: 2210, column: 25, scope: !8441)
!8456 = !DILocation(line: 2210, column: 9, scope: !8441)
!8457 = !DILocation(line: 2211, column: 4, scope: !8441)
!8458 = !DILocation(line: 2211, column: 7, scope: !8441)
!8459 = !DILocation(line: 2208, column: 11, scope: !7487)
!8460 = !DILocation(line: 2212, column: 9, scope: !8441)
!8461 = !DILocation(line: 2212, column: 2, scope: !8441)
!8462 = !DILocation(line: 2215, column: 11, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2215, column: 11)
!8464 = !DILocation(line: 2216, column: 4, scope: !8463)
!8465 = !DILocation(line: 2216, column: 7, scope: !8463)
!8466 = !DILocation(line: 2216, column: 31, scope: !8463)
!8467 = !DILocation(line: 2217, column: 4, scope: !8463)
!8468 = !DILocation(line: 2217, column: 22, scope: !8463)
!8469 = !DILocation(line: 2217, column: 27, scope: !8463)
!8470 = !DILocation(line: 2217, column: 8, scope: !8463)
!8471 = !DILocation(line: 2217, column: 36, scope: !8463)
!8472 = !DILocation(line: 2217, column: 35, scope: !8463)
!8473 = !DILocation(line: 2217, column: 33, scope: !8463)
!8474 = !DILocation(line: 2217, column: 50, scope: !8463)
!8475 = !DILocation(line: 2215, column: 11, scope: !7487)
!8476 = !DILocation(line: 2218, column: 9, scope: !8463)
!8477 = !DILocation(line: 2218, column: 2, scope: !8463)
!8478 = !DILocation(line: 2221, column: 11, scope: !8479)
!8479 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2221, column: 11)
!8480 = !DILocation(line: 2221, column: 26, scope: !8479)
!8481 = !DILocation(line: 2222, column: 4, scope: !8479)
!8482 = !DILocation(line: 2222, column: 7, scope: !8479)
!8483 = !DILocation(line: 2223, column: 4, scope: !8479)
!8484 = !DILocation(line: 2223, column: 7, scope: !8479)
!8485 = !DILocation(line: 2221, column: 11, scope: !7487)
!8486 = !DILocalVariable(name: "mask", scope: !8487, file: !1, line: 2225, type: !1585)
!8487 = distinct !DILexicalBlock(scope: !8479, file: !1, line: 2224, column: 2)
!8488 = !DILocation(line: 2225, column: 18, scope: !8487)
!8489 = !DILocation(line: 2225, column: 25, scope: !8487)
!8490 = !DILocalVariable(name: "c1", scope: !8487, file: !1, line: 2226, type: !1585)
!8491 = !DILocation(line: 2226, column: 18, scope: !8487)
!8492 = !DILocation(line: 2226, column: 23, scope: !8487)
!8493 = !DILocalVariable(name: "c2", scope: !8487, file: !1, line: 2227, type: !1585)
!8494 = !DILocation(line: 2227, column: 18, scope: !8487)
!8495 = !DILocation(line: 2227, column: 23, scope: !8487)
!8496 = !DILocation(line: 2230, column: 9, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8487, file: !1, line: 2230, column: 8)
!8498 = !DILocation(line: 2230, column: 14, scope: !8497)
!8499 = !DILocation(line: 2230, column: 12, scope: !8497)
!8500 = !DILocation(line: 2230, column: 21, scope: !8497)
!8501 = !DILocation(line: 2230, column: 18, scope: !8497)
!8502 = !DILocation(line: 2231, column: 8, scope: !8497)
!8503 = !DILocation(line: 2231, column: 28, scope: !8497)
!8504 = !DILocation(line: 2231, column: 12, scope: !8497)
!8505 = !DILocation(line: 2230, column: 8, scope: !8487)
!8506 = !DILocation(line: 2232, column: 13, scope: !8497)
!8507 = !DILocation(line: 2232, column: 6, scope: !8497)
!8508 = !DILocation(line: 2235, column: 10, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8487, file: !1, line: 2235, column: 8)
!8510 = !DILocation(line: 2235, column: 13, scope: !8509)
!8511 = !DILocation(line: 2235, column: 12, scope: !8509)
!8512 = !DILocation(line: 2235, column: 19, scope: !8509)
!8513 = !DILocation(line: 2235, column: 17, scope: !8509)
!8514 = !DILocation(line: 2235, column: 28, scope: !8509)
!8515 = !DILocation(line: 2235, column: 25, scope: !8509)
!8516 = !DILocation(line: 2235, column: 8, scope: !8487)
!8517 = !DILocation(line: 2236, column: 39, scope: !8509)
!8518 = !DILocation(line: 2236, column: 45, scope: !8509)
!8519 = !DILocation(line: 2236, column: 60, scope: !8509)
!8520 = !DILocation(line: 2236, column: 13, scope: !8509)
!8521 = !DILocation(line: 2236, column: 6, scope: !8509)
!8522 = !DILocation(line: 2239, column: 10, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !8487, file: !1, line: 2239, column: 8)
!8524 = !DILocation(line: 2239, column: 16, scope: !8523)
!8525 = !DILocation(line: 2239, column: 15, scope: !8523)
!8526 = !DILocation(line: 2239, column: 13, scope: !8523)
!8527 = !DILocation(line: 2239, column: 22, scope: !8523)
!8528 = !DILocation(line: 2239, column: 20, scope: !8523)
!8529 = !DILocation(line: 2239, column: 32, scope: !8523)
!8530 = !DILocation(line: 2239, column: 37, scope: !8523)
!8531 = !DILocation(line: 2239, column: 35, scope: !8523)
!8532 = !DILocation(line: 2239, column: 28, scope: !8523)
!8533 = !DILocation(line: 2239, column: 8, scope: !8487)
!8534 = !DILocation(line: 2241, column: 40, scope: !8535)
!8535 = distinct !DILexicalBlock(scope: !8523, file: !1, line: 2240, column: 6)
!8536 = !DILocation(line: 2241, column: 46, scope: !8535)
!8537 = !DILocation(line: 2242, column: 21, scope: !8535)
!8538 = !DILocation(line: 2242, column: 27, scope: !8535)
!8539 = !DILocation(line: 2242, column: 26, scope: !8535)
!8540 = !DILocation(line: 2242, column: 24, scope: !8535)
!8541 = !DILocation(line: 2242, column: 31, scope: !8535)
!8542 = !DILocation(line: 2242, column: 7, scope: !8535)
!8543 = !DILocation(line: 2241, column: 14, scope: !8535)
!8544 = !DILocation(line: 2241, column: 12, scope: !8535)
!8545 = !DILocation(line: 2243, column: 41, scope: !8535)
!8546 = !DILocation(line: 2243, column: 47, scope: !8535)
!8547 = !DILocation(line: 2243, column: 52, scope: !8535)
!8548 = !DILocation(line: 2243, column: 15, scope: !8535)
!8549 = !DILocation(line: 2243, column: 8, scope: !8535)
!8550 = !DILocation(line: 2245, column: 2, scope: !8487)
!8551 = !DILocation(line: 2248, column: 11, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2248, column: 11)
!8553 = !DILocation(line: 2248, column: 26, scope: !8552)
!8554 = !DILocation(line: 2249, column: 4, scope: !8552)
!8555 = !DILocation(line: 2249, column: 21, scope: !8552)
!8556 = !DILocation(line: 2249, column: 36, scope: !8552)
!8557 = !DILocation(line: 2249, column: 8, scope: !8552)
!8558 = !DILocation(line: 2250, column: 8, scope: !8552)
!8559 = !DILocation(line: 2250, column: 24, scope: !8552)
!8560 = !DILocation(line: 2250, column: 39, scope: !8552)
!8561 = !DILocation(line: 2250, column: 11, scope: !8552)
!8562 = !DILocation(line: 2251, column: 4, scope: !8552)
!8563 = !DILocation(line: 2251, column: 25, scope: !8552)
!8564 = !DILocation(line: 2251, column: 9, scope: !8552)
!8565 = !DILocation(line: 2252, column: 4, scope: !8552)
!8566 = !DILocation(line: 2252, column: 25, scope: !8552)
!8567 = !DILocation(line: 2252, column: 9, scope: !8552)
!8568 = !DILocation(line: 2248, column: 11, scope: !7487)
!8569 = !DILocation(line: 2253, column: 9, scope: !8552)
!8570 = !DILocation(line: 2253, column: 2, scope: !8552)
!8571 = !DILocation(line: 2258, column: 11, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2258, column: 11)
!8573 = !DILocation(line: 2258, column: 26, scope: !8572)
!8574 = !DILocation(line: 2259, column: 11, scope: !8572)
!8575 = !DILocation(line: 2259, column: 14, scope: !8572)
!8576 = !DILocation(line: 2259, column: 29, scope: !8572)
!8577 = !DILocation(line: 2258, column: 11, scope: !7487)
!8578 = !DILocation(line: 2261, column: 13, scope: !8579)
!8579 = distinct !DILexicalBlock(scope: !8572, file: !1, line: 2260, column: 9)
!8580 = !DILocation(line: 2261, column: 11, scope: !8579)
!8581 = !DILocation(line: 2262, column: 14, scope: !8579)
!8582 = !DILocation(line: 2262, column: 12, scope: !8579)
!8583 = !DILocation(line: 2263, column: 2, scope: !8579)
!8584 = !DILocation(line: 2266, column: 14, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8572, file: !1, line: 2265, column: 9)
!8586 = !DILocation(line: 2266, column: 12, scope: !8585)
!8587 = !DILocation(line: 2267, column: 13, scope: !8585)
!8588 = !DILocation(line: 2267, column: 11, scope: !8585)
!8589 = !DILocation(line: 2270, column: 11, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2270, column: 11)
!8591 = !DILocation(line: 2270, column: 29, scope: !8590)
!8592 = !DILocation(line: 2270, column: 39, scope: !8590)
!8593 = !DILocation(line: 2270, column: 42, scope: !8590)
!8594 = !DILocation(line: 2270, column: 61, scope: !8590)
!8595 = !DILocation(line: 2271, column: 11, scope: !8590)
!8596 = !DILocation(line: 2271, column: 27, scope: !8590)
!8597 = !DILocation(line: 2271, column: 45, scope: !8590)
!8598 = !DILocation(line: 2271, column: 14, scope: !8590)
!8599 = !DILocation(line: 2272, column: 11, scope: !8590)
!8600 = !DILocation(line: 2272, column: 14, scope: !8590)
!8601 = !DILocation(line: 2273, column: 11, scope: !8590)
!8602 = !DILocation(line: 2273, column: 14, scope: !8590)
!8603 = !DILocation(line: 2274, column: 11, scope: !8590)
!8604 = !DILocation(line: 2274, column: 15, scope: !8590)
!8605 = !DILocation(line: 2274, column: 43, scope: !8590)
!8606 = !DILocation(line: 2274, column: 41, scope: !8590)
!8607 = !DILocation(line: 2275, column: 18, scope: !8590)
!8608 = !DILocation(line: 2275, column: 15, scope: !8590)
!8609 = !DILocation(line: 2270, column: 11, scope: !7487)
!8610 = !DILocation(line: 2276, column: 16, scope: !8590)
!8611 = !DILocation(line: 2276, column: 9, scope: !8590)
!8612 = !DILocation(line: 2281, column: 11, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2281, column: 11)
!8614 = !DILocation(line: 2281, column: 29, scope: !8613)
!8615 = !DILocation(line: 2282, column: 11, scope: !8613)
!8616 = !DILocation(line: 2282, column: 14, scope: !8613)
!8617 = !DILocation(line: 2282, column: 45, scope: !8613)
!8618 = !DILocation(line: 2283, column: 11, scope: !8613)
!8619 = !DILocation(line: 2283, column: 14, scope: !8613)
!8620 = !DILocation(line: 2283, column: 33, scope: !8613)
!8621 = !DILocation(line: 2284, column: 11, scope: !8613)
!8622 = !DILocation(line: 2284, column: 14, scope: !8613)
!8623 = !DILocation(line: 2284, column: 43, scope: !8613)
!8624 = !DILocation(line: 2285, column: 11, scope: !8613)
!8625 = !DILocation(line: 2285, column: 14, scope: !8613)
!8626 = !DILocation(line: 2285, column: 35, scope: !8613)
!8627 = !DILocation(line: 2285, column: 32, scope: !8613)
!8628 = !DILocation(line: 2286, column: 11, scope: !8613)
!8629 = !DILocation(line: 2286, column: 14, scope: !8613)
!8630 = !DILocation(line: 2286, column: 38, scope: !8613)
!8631 = !DILocation(line: 2286, column: 35, scope: !8613)
!8632 = !DILocation(line: 2287, column: 11, scope: !8613)
!8633 = !DILocation(line: 2287, column: 15, scope: !8613)
!8634 = !DILocation(line: 2288, column: 17, scope: !8613)
!8635 = !DILocation(line: 2288, column: 15, scope: !8613)
!8636 = !DILocation(line: 2289, column: 11, scope: !8613)
!8637 = !DILocation(line: 2289, column: 27, scope: !8613)
!8638 = !DILocation(line: 2290, column: 27, scope: !8613)
!8639 = !DILocation(line: 2289, column: 14, scope: !8613)
!8640 = !DILocation(line: 2291, column: 11, scope: !8613)
!8641 = !DILocation(line: 2291, column: 14, scope: !8613)
!8642 = !DILocation(line: 2292, column: 11, scope: !8613)
!8643 = !DILocation(line: 2292, column: 14, scope: !8613)
!8644 = !DILocation(line: 2293, column: 11, scope: !8613)
!8645 = !DILocation(line: 2293, column: 15, scope: !8613)
!8646 = !DILocation(line: 2293, column: 56, scope: !8613)
!8647 = !DILocation(line: 2293, column: 54, scope: !8613)
!8648 = !DILocation(line: 2294, column: 18, scope: !8613)
!8649 = !DILocation(line: 2294, column: 15, scope: !8613)
!8650 = !DILocation(line: 2281, column: 11, scope: !7487)
!8651 = !DILocation(line: 2295, column: 16, scope: !8613)
!8652 = !DILocation(line: 2295, column: 9, scope: !8613)
!8653 = !DILocation(line: 2300, column: 11, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2300, column: 11)
!8655 = !DILocation(line: 2301, column: 4, scope: !8654)
!8656 = !DILocation(line: 2301, column: 8, scope: !8654)
!8657 = !DILocation(line: 2301, column: 32, scope: !8654)
!8658 = !DILocation(line: 2302, column: 8, scope: !8654)
!8659 = !DILocation(line: 2302, column: 11, scope: !8654)
!8660 = !DILocation(line: 2302, column: 24, scope: !8654)
!8661 = !DILocation(line: 2303, column: 4, scope: !8654)
!8662 = !DILocation(line: 2303, column: 7, scope: !8654)
!8663 = !DILocation(line: 2303, column: 22, scope: !8654)
!8664 = !DILocation(line: 2304, column: 4, scope: !8654)
!8665 = !DILocation(line: 2304, column: 7, scope: !8654)
!8666 = !DILocation(line: 2305, column: 4, scope: !8654)
!8667 = !DILocation(line: 2305, column: 7, scope: !8654)
!8668 = !DILocation(line: 2306, column: 4, scope: !8654)
!8669 = !DILocation(line: 2306, column: 8, scope: !8654)
!8670 = !DILocation(line: 2306, column: 33, scope: !8654)
!8671 = !DILocation(line: 2306, column: 31, scope: !8654)
!8672 = !DILocation(line: 2306, column: 47, scope: !8654)
!8673 = !DILocation(line: 2300, column: 11, scope: !7487)
!8674 = !DILocation(line: 2307, column: 35, scope: !8654)
!8675 = !DILocation(line: 2309, column: 14, scope: !8654)
!8676 = !DILocation(line: 2309, column: 20, scope: !8654)
!8677 = !DILocation(line: 2310, column: 9, scope: !8654)
!8678 = !DILocation(line: 2308, column: 9, scope: !8654)
!8679 = !DILocation(line: 2312, column: 9, scope: !8654)
!8680 = !DILocation(line: 2307, column: 9, scope: !8654)
!8681 = !DILocation(line: 2307, column: 2, scope: !8654)
!8682 = !DILocation(line: 2319, column: 11, scope: !8683)
!8683 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2319, column: 11)
!8684 = !DILocation(line: 2319, column: 33, scope: !8683)
!8685 = !DILocation(line: 2319, column: 36, scope: !8683)
!8686 = !DILocation(line: 2319, column: 51, scope: !8683)
!8687 = !DILocation(line: 2320, column: 11, scope: !8683)
!8688 = !DILocation(line: 2320, column: 14, scope: !8683)
!8689 = !DILocation(line: 2320, column: 39, scope: !8683)
!8690 = !DILocation(line: 2321, column: 11, scope: !8683)
!8691 = !DILocation(line: 2321, column: 14, scope: !8683)
!8692 = !DILocation(line: 2322, column: 11, scope: !8683)
!8693 = !DILocation(line: 2322, column: 14, scope: !8683)
!8694 = !DILocation(line: 2323, column: 11, scope: !8683)
!8695 = !DILocation(line: 2323, column: 14, scope: !8683)
!8696 = !DILocation(line: 2323, column: 37, scope: !8683)
!8697 = !DILocation(line: 2319, column: 11, scope: !7487)
!8698 = !DILocalVariable(name: "count", scope: !8699, file: !1, line: 2325, type: !1518)
!8699 = distinct !DILexicalBlock(scope: !8683, file: !1, line: 2324, column: 9)
!8700 = !DILocation(line: 2325, column: 15, scope: !8699)
!8701 = !DILocation(line: 2325, column: 23, scope: !8699)
!8702 = !DILocalVariable(name: "mask", scope: !8699, file: !1, line: 2326, type: !1585)
!8703 = !DILocation(line: 2326, column: 25, scope: !8699)
!8704 = !DILocation(line: 2326, column: 32, scope: !8699)
!8705 = !DILocation(line: 2326, column: 52, scope: !8699)
!8706 = !DILocation(line: 2326, column: 49, scope: !8699)
!8707 = !DILocation(line: 2328, column: 15, scope: !8708)
!8708 = distinct !DILexicalBlock(scope: !8699, file: !1, line: 2328, column: 15)
!8709 = !DILocation(line: 2328, column: 23, scope: !8708)
!8710 = !DILocation(line: 2328, column: 20, scope: !8708)
!8711 = !DILocation(line: 2328, column: 32, scope: !8708)
!8712 = !DILocation(line: 2328, column: 29, scope: !8708)
!8713 = !DILocation(line: 2329, column: 15, scope: !8708)
!8714 = !DILocation(line: 2329, column: 19, scope: !8708)
!8715 = !DILocation(line: 2329, column: 40, scope: !8708)
!8716 = !DILocation(line: 2329, column: 55, scope: !8708)
!8717 = !DILocation(line: 2329, column: 26, scope: !8708)
!8718 = !DILocation(line: 2329, column: 24, scope: !8708)
!8719 = !DILocation(line: 2329, column: 62, scope: !8708)
!8720 = !DILocation(line: 2328, column: 15, scope: !8699)
!8721 = !DILocation(line: 2330, column: 44, scope: !8708)
!8722 = !DILocation(line: 2331, column: 21, scope: !8708)
!8723 = !DILocation(line: 2331, column: 36, scope: !8708)
!8724 = !DILocation(line: 2331, column: 6, scope: !8708)
!8725 = !DILocation(line: 2332, column: 6, scope: !8708)
!8726 = !DILocation(line: 2330, column: 13, scope: !8708)
!8727 = !DILocation(line: 2330, column: 6, scope: !8708)
!8728 = !DILocation(line: 2333, column: 9, scope: !8699)
!8729 = !DILocation(line: 2335, column: 45, scope: !7487)
!8730 = !DILocation(line: 2335, column: 51, scope: !7487)
!8731 = !DILocation(line: 2335, column: 57, scope: !7487)
!8732 = !DILocation(line: 2335, column: 62, scope: !7487)
!8733 = !DILocation(line: 2335, column: 13, scope: !7487)
!8734 = !DILocation(line: 2335, column: 11, scope: !7487)
!8735 = !DILocation(line: 2336, column: 11, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2336, column: 11)
!8737 = !DILocation(line: 2336, column: 11, scope: !7487)
!8738 = !DILocation(line: 2337, column: 9, scope: !8736)
!8739 = !DILocation(line: 2337, column: 2, scope: !8736)
!8740 = !DILocation(line: 2338, column: 7, scope: !7487)
!8741 = !DILocation(line: 2341, column: 11, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2341, column: 11)
!8743 = !DILocation(line: 2341, column: 22, scope: !8742)
!8744 = !DILocation(line: 2341, column: 19, scope: !8742)
!8745 = !DILocation(line: 2341, column: 11, scope: !7487)
!8746 = !DILocation(line: 2342, column: 9, scope: !8742)
!8747 = !DILocation(line: 2342, column: 2, scope: !8742)
!8748 = !DILocation(line: 2343, column: 11, scope: !8749)
!8749 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2343, column: 11)
!8750 = !DILocation(line: 2344, column: 4, scope: !8749)
!8751 = !DILocation(line: 2344, column: 9, scope: !8749)
!8752 = !DILocation(line: 2344, column: 28, scope: !8749)
!8753 = !DILocation(line: 2344, column: 26, scope: !8749)
!8754 = !DILocation(line: 2345, column: 11, scope: !8749)
!8755 = !DILocation(line: 2345, column: 8, scope: !8749)
!8756 = !DILocation(line: 2343, column: 11, scope: !7487)
!8757 = !DILocation(line: 2346, column: 34, scope: !8749)
!8758 = !DILocation(line: 2346, column: 40, scope: !8749)
!8759 = !DILocation(line: 2346, column: 45, scope: !8749)
!8760 = !DILocation(line: 2346, column: 9, scope: !8749)
!8761 = !DILocation(line: 2346, column: 2, scope: !8749)
!8762 = !DILocation(line: 2347, column: 24, scope: !8763)
!8763 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2347, column: 11)
!8764 = !DILocation(line: 2347, column: 33, scope: !8763)
!8765 = !DILocation(line: 2347, column: 11, scope: !8763)
!8766 = !DILocation(line: 2348, column: 4, scope: !8763)
!8767 = !DILocation(line: 2348, column: 25, scope: !8763)
!8768 = !DILocation(line: 2348, column: 9, scope: !8763)
!8769 = !DILocation(line: 2349, column: 4, scope: !8763)
!8770 = !DILocation(line: 2349, column: 7, scope: !8763)
!8771 = !DILocation(line: 2349, column: 29, scope: !8763)
!8772 = !DILocation(line: 2347, column: 11, scope: !7487)
!8773 = !DILocation(line: 2350, column: 10, scope: !8763)
!8774 = !DILocation(line: 2350, column: 3, scope: !8763)
!8775 = !DILocation(line: 2353, column: 12, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2353, column: 11)
!8777 = !DILocation(line: 2354, column: 5, scope: !8776)
!8778 = !DILocation(line: 2354, column: 8, scope: !8776)
!8779 = !DILocation(line: 2354, column: 23, scope: !8776)
!8780 = !DILocation(line: 2355, column: 4, scope: !8776)
!8781 = !DILocation(line: 2355, column: 23, scope: !8776)
!8782 = !DILocation(line: 2355, column: 29, scope: !8776)
!8783 = !DILocation(line: 2355, column: 7, scope: !8776)
!8784 = !DILocation(line: 2353, column: 11, scope: !7487)
!8785 = !DILocation(line: 2356, column: 36, scope: !8776)
!8786 = !DILocation(line: 2356, column: 42, scope: !8776)
!8787 = !DILocation(line: 2356, column: 47, scope: !8776)
!8788 = !DILocation(line: 2356, column: 9, scope: !8776)
!8789 = !DILocation(line: 2356, column: 2, scope: !8776)
!8790 = !DILocation(line: 2358, column: 12, scope: !8791)
!8791 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2358, column: 11)
!8792 = !DILocation(line: 2359, column: 5, scope: !8791)
!8793 = !DILocation(line: 2359, column: 8, scope: !8791)
!8794 = !DILocation(line: 2359, column: 23, scope: !8791)
!8795 = !DILocation(line: 2360, column: 4, scope: !8791)
!8796 = !DILocation(line: 2360, column: 7, scope: !8791)
!8797 = !DILocation(line: 2360, column: 22, scope: !8791)
!8798 = !DILocation(line: 2361, column: 4, scope: !8791)
!8799 = !DILocation(line: 2361, column: 8, scope: !8791)
!8800 = !DILocation(line: 2362, column: 8, scope: !8791)
!8801 = !DILocation(line: 2362, column: 11, scope: !8791)
!8802 = !DILocation(line: 2362, column: 36, scope: !8791)
!8803 = !DILocation(line: 2363, column: 4, scope: !8791)
!8804 = !DILocation(line: 2363, column: 23, scope: !8791)
!8805 = !DILocation(line: 2363, column: 29, scope: !8791)
!8806 = !DILocation(line: 2363, column: 7, scope: !8791)
!8807 = !DILocation(line: 2358, column: 11, scope: !7487)
!8808 = !DILocation(line: 2364, column: 35, scope: !8791)
!8809 = !DILocation(line: 2364, column: 41, scope: !8791)
!8810 = !DILocation(line: 2365, column: 35, scope: !8791)
!8811 = !DILocation(line: 2365, column: 41, scope: !8791)
!8812 = !DILocation(line: 2366, column: 9, scope: !8791)
!8813 = !DILocation(line: 2365, column: 9, scope: !8791)
!8814 = !DILocation(line: 2364, column: 9, scope: !8791)
!8815 = !DILocation(line: 2364, column: 2, scope: !8791)
!8816 = !DILocation(line: 2372, column: 11, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2372, column: 11)
!8818 = !DILocation(line: 2372, column: 35, scope: !8817)
!8819 = !DILocation(line: 2373, column: 4, scope: !8817)
!8820 = !DILocation(line: 2373, column: 22, scope: !8817)
!8821 = !DILocation(line: 2373, column: 27, scope: !8817)
!8822 = !DILocation(line: 2373, column: 8, scope: !8817)
!8823 = !DILocation(line: 2374, column: 24, scope: !8817)
!8824 = !DILocation(line: 2374, column: 29, scope: !8817)
!8825 = !DILocation(line: 2374, column: 10, scope: !8817)
!8826 = !DILocation(line: 2374, column: 8, scope: !8817)
!8827 = !DILocation(line: 2374, column: 36, scope: !8817)
!8828 = !DILocation(line: 2372, column: 11, scope: !7487)
!8829 = !DILocation(line: 2375, column: 36, scope: !8817)
!8830 = !DILocation(line: 2375, column: 42, scope: !8817)
!8831 = !DILocation(line: 2375, column: 47, scope: !8817)
!8832 = !DILocation(line: 2375, column: 10, scope: !8817)
!8833 = !DILocation(line: 2375, column: 2, scope: !8817)
!8834 = !DILocalVariable(name: "num_negated", scope: !8835, file: !1, line: 2381, type: !1518)
!8835 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2380, column: 7)
!8836 = !DILocation(line: 2381, column: 6, scope: !8835)
!8837 = !DILocation(line: 2383, column: 6, scope: !8838)
!8838 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 2383, column: 6)
!8839 = !DILocation(line: 2383, column: 21, scope: !8838)
!8840 = !DILocation(line: 2383, column: 6, scope: !8835)
!8841 = !DILocation(line: 2384, column: 15, scope: !8838)
!8842 = !DILocation(line: 2384, column: 25, scope: !8838)
!8843 = !DILocation(line: 2384, column: 23, scope: !8838)
!8844 = !DILocation(line: 2384, column: 4, scope: !8838)
!8845 = !DILocation(line: 2385, column: 6, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 2385, column: 6)
!8847 = !DILocation(line: 2385, column: 21, scope: !8846)
!8848 = !DILocation(line: 2385, column: 6, scope: !8835)
!8849 = !DILocation(line: 2386, column: 15, scope: !8846)
!8850 = !DILocation(line: 2386, column: 25, scope: !8846)
!8851 = !DILocation(line: 2386, column: 23, scope: !8846)
!8852 = !DILocation(line: 2386, column: 4, scope: !8846)
!8853 = !DILocation(line: 2388, column: 6, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8835, file: !1, line: 2388, column: 6)
!8855 = !DILocation(line: 2388, column: 18, scope: !8854)
!8856 = !DILocation(line: 2388, column: 6, scope: !8835)
!8857 = !DILocation(line: 2389, column: 37, scope: !8854)
!8858 = !DILocation(line: 2389, column: 43, scope: !8854)
!8859 = !DILocation(line: 2389, column: 48, scope: !8854)
!8860 = !DILocation(line: 2389, column: 11, scope: !8854)
!8861 = !DILocation(line: 2389, column: 4, scope: !8854)
!8862 = !DILocation(line: 2390, column: 11, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8854, file: !1, line: 2390, column: 11)
!8864 = !DILocation(line: 2390, column: 23, scope: !8863)
!8865 = !DILocation(line: 2390, column: 11, scope: !8854)
!8866 = !DILocation(line: 2391, column: 36, scope: !8863)
!8867 = !DILocation(line: 2392, column: 36, scope: !8863)
!8868 = !DILocation(line: 2392, column: 42, scope: !8863)
!8869 = !DILocation(line: 2392, column: 47, scope: !8863)
!8870 = !DILocation(line: 2392, column: 10, scope: !8863)
!8871 = !DILocation(line: 2393, column: 10, scope: !8863)
!8872 = !DILocation(line: 2391, column: 11, scope: !8863)
!8873 = !DILocation(line: 2391, column: 4, scope: !8863)
!8874 = !DILocation(line: 2400, column: 11, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2400, column: 11)
!8876 = !DILocation(line: 2400, column: 26, scope: !8875)
!8877 = !DILocation(line: 2401, column: 4, scope: !8875)
!8878 = !DILocation(line: 2401, column: 20, scope: !8875)
!8879 = !DILocation(line: 2401, column: 35, scope: !8875)
!8880 = !DILocation(line: 2401, column: 7, scope: !8875)
!8881 = !DILocation(line: 2402, column: 4, scope: !8875)
!8882 = !DILocation(line: 2402, column: 25, scope: !8875)
!8883 = !DILocation(line: 2402, column: 9, scope: !8875)
!8884 = !DILocation(line: 2400, column: 11, scope: !7487)
!8885 = !DILocation(line: 2403, column: 35, scope: !8875)
!8886 = !DILocation(line: 2404, column: 34, scope: !8875)
!8887 = !DILocation(line: 2405, column: 8, scope: !8875)
!8888 = !DILocation(line: 2405, column: 23, scope: !8875)
!8889 = !DILocation(line: 2404, column: 9, scope: !8875)
!8890 = !DILocation(line: 2406, column: 9, scope: !8875)
!8891 = !DILocation(line: 2403, column: 9, scope: !8875)
!8892 = !DILocation(line: 2403, column: 2, scope: !8875)
!8893 = !DILocation(line: 2408, column: 16, scope: !8894)
!8894 = distinct !DILexicalBlock(scope: !8875, file: !1, line: 2408, column: 16)
!8895 = !DILocation(line: 2408, column: 31, scope: !8894)
!8896 = !DILocation(line: 2409, column: 9, scope: !8894)
!8897 = !DILocation(line: 2409, column: 25, scope: !8894)
!8898 = !DILocation(line: 2409, column: 40, scope: !8894)
!8899 = !DILocation(line: 2409, column: 12, scope: !8894)
!8900 = !DILocation(line: 2410, column: 9, scope: !8894)
!8901 = !DILocation(line: 2410, column: 30, scope: !8894)
!8902 = !DILocation(line: 2410, column: 14, scope: !8894)
!8903 = !DILocation(line: 2408, column: 16, scope: !8875)
!8904 = !DILocation(line: 2411, column: 35, scope: !8894)
!8905 = !DILocation(line: 2412, column: 34, scope: !8894)
!8906 = !DILocation(line: 2413, column: 8, scope: !8894)
!8907 = !DILocation(line: 2413, column: 23, scope: !8894)
!8908 = !DILocation(line: 2412, column: 9, scope: !8894)
!8909 = !DILocation(line: 2414, column: 9, scope: !8894)
!8910 = !DILocation(line: 2411, column: 9, scope: !8894)
!8911 = !DILocation(line: 2411, column: 2, scope: !8894)
!8912 = !DILocation(line: 2419, column: 7, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2418, column: 11)
!8914 = !DILocation(line: 2419, column: 18, scope: !8913)
!8915 = !DILocation(line: 2419, column: 15, scope: !8913)
!8916 = !DILocation(line: 2420, column: 4, scope: !8913)
!8917 = !DILocation(line: 2420, column: 7, scope: !8913)
!8918 = !DILocation(line: 2421, column: 4, scope: !8913)
!8919 = !DILocation(line: 2421, column: 40, scope: !8913)
!8920 = !DILocation(line: 2421, column: 45, scope: !8913)
!8921 = !DILocation(line: 2421, column: 19, scope: !8913)
!8922 = !DILocation(line: 2421, column: 17, scope: !8913)
!8923 = !DILocation(line: 2418, column: 11, scope: !7487)
!8924 = !DILocation(line: 2422, column: 9, scope: !8913)
!8925 = !DILocation(line: 2422, column: 2, scope: !8913)
!8926 = !DILocation(line: 2429, column: 7, scope: !8927)
!8927 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2428, column: 11)
!8928 = !DILocation(line: 2429, column: 18, scope: !8927)
!8929 = !DILocation(line: 2429, column: 15, scope: !8927)
!8930 = !DILocation(line: 2430, column: 4, scope: !8927)
!8931 = !DILocation(line: 2430, column: 7, scope: !8927)
!8932 = !DILocation(line: 2430, column: 22, scope: !8927)
!8933 = !DILocation(line: 2431, column: 4, scope: !8927)
!8934 = !DILocation(line: 2431, column: 7, scope: !8927)
!8935 = !DILocation(line: 2432, column: 4, scope: !8927)
!8936 = !DILocation(line: 2432, column: 7, scope: !8927)
!8937 = !DILocation(line: 2432, column: 33, scope: !8927)
!8938 = !DILocation(line: 2432, column: 57, scope: !8927)
!8939 = !DILocation(line: 2432, column: 30, scope: !8927)
!8940 = !DILocation(line: 2428, column: 11, scope: !7487)
!8941 = !DILocation(line: 2433, column: 9, scope: !8927)
!8942 = !DILocation(line: 2433, column: 2, scope: !8927)
!8943 = !DILocation(line: 2437, column: 11, scope: !8944)
!8944 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2437, column: 11)
!8945 = !DILocation(line: 2437, column: 35, scope: !8944)
!8946 = !DILocation(line: 2438, column: 4, scope: !8944)
!8947 = !DILocation(line: 2438, column: 28, scope: !8944)
!8948 = !DILocation(line: 2438, column: 26, scope: !8944)
!8949 = !DILocation(line: 2439, column: 42, scope: !8944)
!8950 = !DILocation(line: 2439, column: 66, scope: !8944)
!8951 = !DILocation(line: 2439, column: 38, scope: !8944)
!8952 = !DILocation(line: 2439, column: 8, scope: !8944)
!8953 = !DILocation(line: 2440, column: 4, scope: !8944)
!8954 = !DILocation(line: 2440, column: 7, scope: !8944)
!8955 = !DILocation(line: 2440, column: 18, scope: !8944)
!8956 = !DILocation(line: 2440, column: 15, scope: !8944)
!8957 = !DILocation(line: 2441, column: 4, scope: !8944)
!8958 = !DILocation(line: 2441, column: 7, scope: !8944)
!8959 = !DILocation(line: 2442, column: 4, scope: !8944)
!8960 = !DILocation(line: 2442, column: 40, scope: !8944)
!8961 = !DILocation(line: 2442, column: 45, scope: !8944)
!8962 = !DILocation(line: 2442, column: 19, scope: !8944)
!8963 = !DILocation(line: 2442, column: 17, scope: !8944)
!8964 = !DILocation(line: 2437, column: 11, scope: !7487)
!8965 = !DILocation(line: 2443, column: 9, scope: !8944)
!8966 = !DILocation(line: 2443, column: 2, scope: !8944)
!8967 = !DILocation(line: 2445, column: 45, scope: !7487)
!8968 = !DILocation(line: 2445, column: 51, scope: !7487)
!8969 = !DILocation(line: 2445, column: 57, scope: !7487)
!8970 = !DILocation(line: 2445, column: 62, scope: !7487)
!8971 = !DILocation(line: 2445, column: 13, scope: !7487)
!8972 = !DILocation(line: 2445, column: 11, scope: !7487)
!8973 = !DILocation(line: 2446, column: 11, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2446, column: 11)
!8975 = !DILocation(line: 2446, column: 11, scope: !7487)
!8976 = !DILocation(line: 2447, column: 9, scope: !8974)
!8977 = !DILocation(line: 2447, column: 2, scope: !8974)
!8978 = !DILocation(line: 2448, column: 7, scope: !7487)
!8979 = !DILocation(line: 2451, column: 11, scope: !8980)
!8980 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2451, column: 11)
!8981 = !DILocation(line: 2451, column: 22, scope: !8980)
!8982 = !DILocation(line: 2451, column: 19, scope: !8980)
!8983 = !DILocation(line: 2451, column: 40, scope: !8980)
!8984 = !DILocation(line: 2451, column: 61, scope: !8980)
!8985 = !DILocation(line: 2451, column: 45, scope: !8980)
!8986 = !DILocation(line: 2451, column: 11, scope: !7487)
!8987 = !DILocation(line: 2452, column: 9, scope: !8980)
!8988 = !DILocation(line: 2452, column: 2, scope: !8980)
!8989 = !DILocation(line: 2453, column: 11, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2453, column: 11)
!8991 = !DILocation(line: 2453, column: 35, scope: !8990)
!8992 = !DILocation(line: 2453, column: 11, scope: !7487)
!8993 = !DILocalVariable(name: "nzop0", scope: !8994, file: !1, line: 2455, type: !1585)
!8994 = distinct !DILexicalBlock(scope: !8990, file: !1, line: 2454, column: 2)
!8995 = !DILocation(line: 2455, column: 18, scope: !8994)
!8996 = !DILocation(line: 2455, column: 40, scope: !8994)
!8997 = !DILocation(line: 2455, column: 49, scope: !8994)
!8998 = !DILocation(line: 2455, column: 26, scope: !8994)
!8999 = !DILocalVariable(name: "nzop1", scope: !8994, file: !1, line: 2456, type: !1585)
!9000 = !DILocation(line: 2456, column: 18, scope: !8994)
!9001 = !DILocation(line: 2457, column: 8, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 2457, column: 8)
!9003 = !DILocation(line: 2457, column: 8, scope: !8994)
!9004 = !DILocalVariable(name: "val1", scope: !9005, file: !1, line: 2459, type: !1585)
!9005 = distinct !DILexicalBlock(scope: !9002, file: !1, line: 2458, column: 6)
!9006 = !DILocation(line: 2459, column: 22, scope: !9005)
!9007 = !DILocation(line: 2459, column: 29, scope: !9005)
!9008 = !DILocation(line: 2462, column: 13, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9005, file: !1, line: 2462, column: 12)
!9010 = !DILocation(line: 2462, column: 22, scope: !9009)
!9011 = !DILocation(line: 2462, column: 21, scope: !9009)
!9012 = !DILocation(line: 2462, column: 19, scope: !9009)
!9013 = !DILocation(line: 2462, column: 28, scope: !9009)
!9014 = !DILocation(line: 2462, column: 12, scope: !9005)
!9015 = !DILocation(line: 2463, column: 10, scope: !9009)
!9016 = !DILocation(line: 2463, column: 3, scope: !9009)
!9017 = !DILocation(line: 2464, column: 6, scope: !9005)
!9018 = !DILocation(line: 2465, column: 26, scope: !8994)
!9019 = !DILocation(line: 2465, column: 35, scope: !8994)
!9020 = !DILocation(line: 2465, column: 12, scope: !8994)
!9021 = !DILocation(line: 2465, column: 10, scope: !8994)
!9022 = !DILocation(line: 2467, column: 9, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !8994, file: !1, line: 2467, column: 8)
!9024 = !DILocation(line: 2467, column: 17, scope: !9023)
!9025 = !DILocation(line: 2467, column: 15, scope: !9023)
!9026 = !DILocation(line: 2467, column: 24, scope: !9023)
!9027 = !DILocation(line: 2468, column: 8, scope: !9023)
!9028 = !DILocation(line: 2468, column: 28, scope: !9023)
!9029 = !DILocation(line: 2468, column: 12, scope: !9023)
!9030 = !DILocation(line: 2468, column: 33, scope: !9023)
!9031 = !DILocation(line: 2468, column: 53, scope: !9023)
!9032 = !DILocation(line: 2468, column: 37, scope: !9023)
!9033 = !DILocation(line: 2467, column: 8, scope: !8994)
!9034 = !DILocation(line: 2469, column: 13, scope: !9023)
!9035 = !DILocation(line: 2469, column: 6, scope: !9023)
!9036 = !DILocation(line: 2470, column: 2, scope: !8994)
!9037 = !DILocation(line: 2471, column: 24, scope: !9038)
!9038 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2471, column: 11)
!9039 = !DILocation(line: 2471, column: 33, scope: !9038)
!9040 = !DILocation(line: 2471, column: 11, scope: !9038)
!9041 = !DILocation(line: 2471, column: 42, scope: !9038)
!9042 = !DILocation(line: 2471, column: 63, scope: !9038)
!9043 = !DILocation(line: 2471, column: 47, scope: !9038)
!9044 = !DILocation(line: 2472, column: 4, scope: !9038)
!9045 = !DILocation(line: 2472, column: 7, scope: !9038)
!9046 = !DILocation(line: 2472, column: 29, scope: !9038)
!9047 = !DILocation(line: 2471, column: 11, scope: !7487)
!9048 = !DILocation(line: 2473, column: 9, scope: !9038)
!9049 = !DILocation(line: 2473, column: 2, scope: !9038)
!9050 = !DILocation(line: 2475, column: 13, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2475, column: 11)
!9052 = !DILocation(line: 2475, column: 28, scope: !9051)
!9053 = !DILocation(line: 2475, column: 35, scope: !9051)
!9054 = !DILocation(line: 2475, column: 51, scope: !9051)
!9055 = !DILocation(line: 2475, column: 66, scope: !9051)
!9056 = !DILocation(line: 2475, column: 38, scope: !9051)
!9057 = !DILocation(line: 2476, column: 5, scope: !9051)
!9058 = !DILocation(line: 2476, column: 9, scope: !9051)
!9059 = !DILocation(line: 2476, column: 24, scope: !9051)
!9060 = !DILocation(line: 2476, column: 31, scope: !9051)
!9061 = !DILocation(line: 2476, column: 47, scope: !9051)
!9062 = !DILocation(line: 2476, column: 62, scope: !9051)
!9063 = !DILocation(line: 2476, column: 34, scope: !9051)
!9064 = !DILocation(line: 2477, column: 4, scope: !9051)
!9065 = !DILocation(line: 2477, column: 25, scope: !9051)
!9066 = !DILocation(line: 2477, column: 9, scope: !9051)
!9067 = !DILocation(line: 2478, column: 4, scope: !9051)
!9068 = !DILocation(line: 2478, column: 7, scope: !9051)
!9069 = !DILocation(line: 2478, column: 29, scope: !9051)
!9070 = !DILocation(line: 2475, column: 11, scope: !7487)
!9071 = !DILocation(line: 2479, column: 9, scope: !9051)
!9072 = !DILocation(line: 2479, column: 2, scope: !9051)
!9073 = !DILocation(line: 2483, column: 12, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2483, column: 11)
!9075 = !DILocation(line: 2483, column: 27, scope: !9074)
!9076 = !DILocation(line: 2484, column: 5, scope: !9074)
!9077 = !DILocation(line: 2484, column: 8, scope: !9074)
!9078 = !DILocation(line: 2484, column: 23, scope: !9074)
!9079 = !DILocation(line: 2485, column: 4, scope: !9074)
!9080 = !DILocation(line: 2485, column: 7, scope: !9074)
!9081 = !DILocation(line: 2486, column: 4, scope: !9074)
!9082 = !DILocation(line: 2486, column: 7, scope: !9074)
!9083 = !DILocation(line: 2486, column: 31, scope: !9074)
!9084 = !DILocation(line: 2487, column: 4, scope: !9074)
!9085 = !DILocation(line: 2487, column: 9, scope: !9074)
!9086 = !DILocation(line: 2487, column: 8, scope: !9074)
!9087 = !DILocation(line: 2488, column: 10, scope: !9074)
!9088 = !DILocation(line: 2488, column: 8, scope: !9074)
!9089 = !DILocation(line: 2488, column: 28, scope: !9074)
!9090 = !DILocation(line: 2483, column: 11, scope: !7487)
!9091 = !DILocalVariable(name: "imode", scope: !9092, file: !1, line: 2490, type: !3)
!9092 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 2489, column: 2)
!9093 = !DILocation(line: 2490, column: 22, scope: !9092)
!9094 = !DILocation(line: 2490, column: 30, scope: !9092)
!9095 = !DILocation(line: 2491, column: 36, scope: !9092)
!9096 = !DILocation(line: 2491, column: 43, scope: !9092)
!9097 = !DILocation(line: 2492, column: 24, scope: !9092)
!9098 = !DILocation(line: 2493, column: 10, scope: !9092)
!9099 = !DILocation(line: 2492, column: 10, scope: !9092)
!9100 = !DILocation(line: 2491, column: 10, scope: !9092)
!9101 = !DILocation(line: 2491, column: 8, scope: !9092)
!9102 = !DILocation(line: 2494, column: 44, scope: !9092)
!9103 = !DILocation(line: 2494, column: 50, scope: !9092)
!9104 = !DILocation(line: 2494, column: 55, scope: !9092)
!9105 = !DILocation(line: 2494, column: 11, scope: !9092)
!9106 = !DILocation(line: 2494, column: 4, scope: !9092)
!9107 = !DILocation(line: 2500, column: 11, scope: !9108)
!9108 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2500, column: 11)
!9109 = !DILocation(line: 2500, column: 26, scope: !9108)
!9110 = !DILocation(line: 2500, column: 38, scope: !9108)
!9111 = !DILocation(line: 2500, column: 41, scope: !9108)
!9112 = !DILocation(line: 2500, column: 11, scope: !7487)
!9113 = !DILocalVariable(name: "x", scope: !9114, file: !1, line: 2502, type: !1495)
!9114 = distinct !DILexicalBlock(scope: !9108, file: !1, line: 2501, column: 2)
!9115 = !DILocation(line: 2502, column: 8, scope: !9114)
!9116 = !DILocation(line: 2502, column: 12, scope: !9114)
!9117 = !DILocalVariable(name: "xmode", scope: !9114, file: !1, line: 2503, type: !3)
!9118 = !DILocation(line: 2503, column: 22, scope: !9114)
!9119 = !DILocation(line: 2503, column: 30, scope: !9114)
!9120 = !DILocation(line: 2504, column: 36, scope: !9114)
!9121 = !DILocation(line: 2504, column: 43, scope: !9114)
!9122 = !DILocation(line: 2505, column: 24, scope: !9114)
!9123 = !DILocation(line: 2505, column: 42, scope: !9114)
!9124 = !DILocation(line: 2505, column: 10, scope: !9114)
!9125 = !DILocation(line: 2504, column: 10, scope: !9114)
!9126 = !DILocation(line: 2504, column: 8, scope: !9114)
!9127 = !DILocation(line: 2506, column: 41, scope: !9114)
!9128 = !DILocation(line: 2506, column: 47, scope: !9114)
!9129 = !DILocation(line: 2506, column: 52, scope: !9114)
!9130 = !DILocation(line: 2506, column: 11, scope: !9114)
!9131 = !DILocation(line: 2506, column: 4, scope: !9114)
!9132 = !DILocation(line: 2510, column: 11, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2510, column: 11)
!9134 = !DILocation(line: 2510, column: 26, scope: !9133)
!9135 = !DILocation(line: 2511, column: 4, scope: !9133)
!9136 = !DILocation(line: 2511, column: 7, scope: !9133)
!9137 = !DILocation(line: 2512, column: 4, scope: !9133)
!9138 = !DILocation(line: 2512, column: 7, scope: !9133)
!9139 = !DILocation(line: 2510, column: 11, scope: !7487)
!9140 = !DILocalVariable(name: "tmp", scope: !9141, file: !1, line: 2514, type: !1585)
!9141 = distinct !DILexicalBlock(scope: !9133, file: !1, line: 2513, column: 2)
!9142 = !DILocation(line: 2514, column: 18, scope: !9141)
!9143 = !DILocation(line: 2514, column: 24, scope: !9141)
!9144 = !DILocation(line: 2514, column: 43, scope: !9141)
!9145 = !DILocation(line: 2514, column: 41, scope: !9141)
!9146 = !DILocation(line: 2515, column: 37, scope: !9141)
!9147 = !DILocation(line: 2516, column: 37, scope: !9141)
!9148 = !DILocation(line: 2517, column: 11, scope: !9141)
!9149 = !DILocation(line: 2517, column: 26, scope: !9141)
!9150 = !DILocation(line: 2516, column: 11, scope: !9141)
!9151 = !DILocation(line: 2518, column: 25, scope: !9141)
!9152 = !DILocation(line: 2518, column: 30, scope: !9141)
!9153 = !DILocation(line: 2518, column: 11, scope: !9141)
!9154 = !DILocation(line: 2515, column: 11, scope: !9141)
!9155 = !DILocation(line: 2515, column: 4, scope: !9141)
!9156 = !DILocation(line: 2523, column: 11, scope: !9157)
!9157 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2523, column: 11)
!9158 = !DILocation(line: 2523, column: 26, scope: !9157)
!9159 = !DILocation(line: 2524, column: 4, scope: !9157)
!9160 = !DILocation(line: 2524, column: 20, scope: !9157)
!9161 = !DILocation(line: 2524, column: 35, scope: !9157)
!9162 = !DILocation(line: 2524, column: 7, scope: !9157)
!9163 = !DILocation(line: 2525, column: 4, scope: !9157)
!9164 = !DILocation(line: 2525, column: 25, scope: !9157)
!9165 = !DILocation(line: 2525, column: 9, scope: !9157)
!9166 = !DILocation(line: 2523, column: 11, scope: !7487)
!9167 = !DILocation(line: 2526, column: 35, scope: !9157)
!9168 = !DILocation(line: 2527, column: 34, scope: !9157)
!9169 = !DILocation(line: 2528, column: 8, scope: !9157)
!9170 = !DILocation(line: 2528, column: 23, scope: !9157)
!9171 = !DILocation(line: 2527, column: 9, scope: !9157)
!9172 = !DILocation(line: 2529, column: 9, scope: !9157)
!9173 = !DILocation(line: 2526, column: 9, scope: !9157)
!9174 = !DILocation(line: 2526, column: 2, scope: !9157)
!9175 = !DILocation(line: 2531, column: 11, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2531, column: 11)
!9177 = !DILocation(line: 2531, column: 26, scope: !9176)
!9178 = !DILocation(line: 2532, column: 4, scope: !9176)
!9179 = !DILocation(line: 2532, column: 20, scope: !9176)
!9180 = !DILocation(line: 2532, column: 35, scope: !9176)
!9181 = !DILocation(line: 2532, column: 7, scope: !9176)
!9182 = !DILocation(line: 2533, column: 4, scope: !9176)
!9183 = !DILocation(line: 2533, column: 25, scope: !9176)
!9184 = !DILocation(line: 2533, column: 9, scope: !9176)
!9185 = !DILocation(line: 2531, column: 11, scope: !7487)
!9186 = !DILocation(line: 2534, column: 35, scope: !9176)
!9187 = !DILocation(line: 2535, column: 34, scope: !9176)
!9188 = !DILocation(line: 2536, column: 8, scope: !9176)
!9189 = !DILocation(line: 2536, column: 23, scope: !9176)
!9190 = !DILocation(line: 2535, column: 9, scope: !9176)
!9191 = !DILocation(line: 2537, column: 9, scope: !9176)
!9192 = !DILocation(line: 2534, column: 9, scope: !9176)
!9193 = !DILocation(line: 2534, column: 2, scope: !9176)
!9194 = !DILocation(line: 2540, column: 11, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2540, column: 11)
!9196 = !DILocation(line: 2540, column: 26, scope: !9195)
!9197 = !DILocation(line: 2541, column: 4, scope: !9195)
!9198 = !DILocation(line: 2541, column: 7, scope: !9195)
!9199 = !DILocation(line: 2541, column: 32, scope: !9195)
!9200 = !DILocation(line: 2542, column: 4, scope: !9195)
!9201 = !DILocation(line: 2542, column: 20, scope: !9195)
!9202 = !DILocation(line: 2542, column: 45, scope: !9195)
!9203 = !DILocation(line: 2542, column: 7, scope: !9195)
!9204 = !DILocation(line: 2543, column: 4, scope: !9195)
!9205 = !DILocation(line: 2543, column: 25, scope: !9195)
!9206 = !DILocation(line: 2543, column: 9, scope: !9195)
!9207 = !DILocation(line: 2540, column: 11, scope: !7487)
!9208 = !DILocation(line: 2544, column: 35, scope: !9195)
!9209 = !DILocation(line: 2544, column: 41, scope: !9195)
!9210 = !DILocation(line: 2544, column: 66, scope: !9195)
!9211 = !DILocation(line: 2544, column: 9, scope: !9195)
!9212 = !DILocation(line: 2544, column: 2, scope: !9195)
!9213 = !DILocation(line: 2546, column: 11, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2546, column: 11)
!9215 = !DILocation(line: 2546, column: 26, scope: !9214)
!9216 = !DILocation(line: 2547, column: 4, scope: !9214)
!9217 = !DILocation(line: 2547, column: 7, scope: !9214)
!9218 = !DILocation(line: 2547, column: 32, scope: !9214)
!9219 = !DILocation(line: 2548, column: 4, scope: !9214)
!9220 = !DILocation(line: 2548, column: 20, scope: !9214)
!9221 = !DILocation(line: 2548, column: 45, scope: !9214)
!9222 = !DILocation(line: 2548, column: 7, scope: !9214)
!9223 = !DILocation(line: 2549, column: 4, scope: !9214)
!9224 = !DILocation(line: 2549, column: 25, scope: !9214)
!9225 = !DILocation(line: 2549, column: 9, scope: !9214)
!9226 = !DILocation(line: 2546, column: 11, scope: !7487)
!9227 = !DILocation(line: 2550, column: 35, scope: !9214)
!9228 = !DILocation(line: 2550, column: 41, scope: !9214)
!9229 = !DILocation(line: 2550, column: 66, scope: !9214)
!9230 = !DILocation(line: 2550, column: 9, scope: !9214)
!9231 = !DILocation(line: 2550, column: 2, scope: !9214)
!9232 = !DILocation(line: 2553, column: 11, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2553, column: 11)
!9234 = !DILocation(line: 2553, column: 26, scope: !9233)
!9235 = !DILocation(line: 2554, column: 4, scope: !9233)
!9236 = !DILocation(line: 2554, column: 21, scope: !9233)
!9237 = !DILocation(line: 2554, column: 36, scope: !9233)
!9238 = !DILocation(line: 2554, column: 8, scope: !9233)
!9239 = !DILocation(line: 2555, column: 8, scope: !9233)
!9240 = !DILocation(line: 2555, column: 24, scope: !9233)
!9241 = !DILocation(line: 2555, column: 39, scope: !9233)
!9242 = !DILocation(line: 2555, column: 11, scope: !9233)
!9243 = !DILocation(line: 2556, column: 4, scope: !9233)
!9244 = !DILocation(line: 2556, column: 25, scope: !9233)
!9245 = !DILocation(line: 2556, column: 9, scope: !9233)
!9246 = !DILocation(line: 2557, column: 4, scope: !9233)
!9247 = !DILocation(line: 2557, column: 25, scope: !9233)
!9248 = !DILocation(line: 2557, column: 9, scope: !9233)
!9249 = !DILocation(line: 2553, column: 11, scope: !7487)
!9250 = !DILocation(line: 2558, column: 9, scope: !9233)
!9251 = !DILocation(line: 2558, column: 2, scope: !9233)
!9252 = !DILocation(line: 2567, column: 11, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2567, column: 11)
!9254 = !DILocation(line: 2568, column: 4, scope: !9253)
!9255 = !DILocation(line: 2568, column: 7, scope: !9253)
!9256 = !DILocation(line: 2568, column: 31, scope: !9253)
!9257 = !DILocation(line: 2569, column: 4, scope: !9253)
!9258 = !DILocation(line: 2569, column: 8, scope: !9253)
!9259 = !DILocation(line: 2569, column: 7, scope: !9253)
!9260 = !DILocation(line: 2570, column: 4, scope: !9253)
!9261 = !DILocation(line: 2570, column: 8, scope: !9253)
!9262 = !DILocation(line: 2570, column: 28, scope: !9253)
!9263 = !DILocation(line: 2570, column: 45, scope: !9253)
!9264 = !DILocation(line: 2570, column: 25, scope: !9253)
!9265 = !DILocation(line: 2570, column: 51, scope: !9253)
!9266 = !DILocation(line: 2571, column: 4, scope: !9253)
!9267 = !DILocation(line: 2571, column: 8, scope: !9253)
!9268 = !DILocation(line: 2571, column: 23, scope: !9253)
!9269 = !DILocation(line: 2571, column: 31, scope: !9253)
!9270 = !DILocation(line: 2571, column: 34, scope: !9253)
!9271 = !DILocation(line: 2571, column: 49, scope: !9253)
!9272 = !DILocation(line: 2567, column: 11, scope: !7487)
!9273 = !DILocalVariable(name: "pmop", scope: !9274, file: !1, line: 2573, type: !9275)
!9274 = distinct !DILexicalBlock(scope: !9253, file: !1, line: 2572, column: 2)
!9275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1495, size: 128, elements: !1569)
!9276 = !DILocation(line: 2573, column: 8, scope: !9274)
!9277 = !DILocalVariable(name: "which", scope: !9274, file: !1, line: 2574, type: !1518)
!9278 = !DILocation(line: 2574, column: 8, scope: !9274)
!9279 = !DILocation(line: 2576, column: 14, scope: !9274)
!9280 = !DILocation(line: 2576, column: 4, scope: !9274)
!9281 = !DILocation(line: 2576, column: 12, scope: !9274)
!9282 = !DILocation(line: 2577, column: 14, scope: !9274)
!9283 = !DILocation(line: 2577, column: 4, scope: !9274)
!9284 = !DILocation(line: 2577, column: 12, scope: !9274)
!9285 = !DILocation(line: 2579, column: 8, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9274, file: !1, line: 2579, column: 8)
!9287 = !DILocation(line: 2580, column: 8, scope: !9286)
!9288 = !DILocation(line: 2580, column: 12, scope: !9286)
!9289 = !DILocation(line: 2580, column: 31, scope: !9286)
!9290 = !DILocation(line: 2580, column: 29, scope: !9286)
!9291 = !DILocation(line: 2580, column: 49, scope: !9286)
!9292 = !DILocation(line: 2579, column: 8, scope: !9274)
!9293 = !DILocation(line: 2581, column: 39, scope: !9286)
!9294 = !DILocation(line: 2581, column: 45, scope: !9286)
!9295 = !DILocation(line: 2581, column: 54, scope: !9286)
!9296 = !DILocation(line: 2581, column: 13, scope: !9286)
!9297 = !DILocation(line: 2581, column: 6, scope: !9286)
!9298 = !DILocation(line: 2583, column: 15, scope: !9299)
!9299 = distinct !DILexicalBlock(scope: !9274, file: !1, line: 2583, column: 4)
!9300 = !DILocation(line: 2583, column: 9, scope: !9299)
!9301 = !DILocation(line: 2583, column: 20, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9299, file: !1, line: 2583, column: 4)
!9303 = !DILocation(line: 2583, column: 26, scope: !9302)
!9304 = !DILocation(line: 2583, column: 4, scope: !9299)
!9305 = !DILocation(line: 2585, column: 19, scope: !9306)
!9306 = distinct !DILexicalBlock(scope: !9302, file: !1, line: 2584, column: 6)
!9307 = !DILocation(line: 2585, column: 14, scope: !9306)
!9308 = !DILocation(line: 2585, column: 12, scope: !9306)
!9309 = !DILocation(line: 2586, column: 16, scope: !9306)
!9310 = !DILocation(line: 2586, column: 8, scope: !9306)
!9311 = !DILocation(line: 2589, column: 9, scope: !9312)
!9312 = distinct !DILexicalBlock(scope: !9313, file: !1, line: 2589, column: 9)
!9313 = distinct !DILexicalBlock(scope: !9306, file: !1, line: 2587, column: 3)
!9314 = !DILocation(line: 2590, column: 9, scope: !9312)
!9315 = !DILocation(line: 2590, column: 13, scope: !9312)
!9316 = !DILocation(line: 2590, column: 38, scope: !9312)
!9317 = !DILocation(line: 2590, column: 36, scope: !9312)
!9318 = !DILocation(line: 2591, column: 12, scope: !9312)
!9319 = !DILocation(line: 2591, column: 9, scope: !9312)
!9320 = !DILocation(line: 2589, column: 9, scope: !9313)
!9321 = !DILocation(line: 2592, column: 21, scope: !9312)
!9322 = !DILocation(line: 2592, column: 12, scope: !9312)
!9323 = !DILocation(line: 2592, column: 7, scope: !9312)
!9324 = !DILocation(line: 2592, column: 19, scope: !9312)
!9325 = !DILocation(line: 2593, column: 5, scope: !9313)
!9326 = !DILocation(line: 2596, column: 9, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9313, file: !1, line: 2596, column: 9)
!9328 = !DILocation(line: 2597, column: 9, scope: !9327)
!9329 = !DILocation(line: 2597, column: 13, scope: !9327)
!9330 = !DILocation(line: 2597, column: 38, scope: !9327)
!9331 = !DILocation(line: 2597, column: 36, scope: !9327)
!9332 = !DILocation(line: 2597, column: 56, scope: !9327)
!9333 = !DILocation(line: 2596, column: 9, scope: !9313)
!9334 = !DILocation(line: 2598, column: 21, scope: !9327)
!9335 = !DILocation(line: 2598, column: 12, scope: !9327)
!9336 = !DILocation(line: 2598, column: 7, scope: !9327)
!9337 = !DILocation(line: 2598, column: 19, scope: !9327)
!9338 = !DILocation(line: 2599, column: 5, scope: !9313)
!9339 = !DILocation(line: 2601, column: 5, scope: !9313)
!9340 = !DILocation(line: 2603, column: 6, scope: !9306)
!9341 = !DILocation(line: 2583, column: 36, scope: !9302)
!9342 = !DILocation(line: 2583, column: 4, scope: !9302)
!9343 = distinct !{!9343, !9304, !9344}
!9344 = !DILocation(line: 2603, column: 6, scope: !9299)
!9345 = !DILocation(line: 2605, column: 8, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9274, file: !1, line: 2605, column: 8)
!9347 = !DILocation(line: 2605, column: 19, scope: !9346)
!9348 = !DILocation(line: 2605, column: 16, scope: !9346)
!9349 = !DILocation(line: 2605, column: 33, scope: !9346)
!9350 = !DILocation(line: 2605, column: 36, scope: !9346)
!9351 = !DILocation(line: 2605, column: 47, scope: !9346)
!9352 = !DILocation(line: 2605, column: 44, scope: !9346)
!9353 = !DILocation(line: 2605, column: 8, scope: !9274)
!9354 = !DILocation(line: 2607, column: 35, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9346, file: !1, line: 2606, column: 6)
!9356 = !DILocation(line: 2607, column: 51, scope: !9355)
!9357 = !DILocation(line: 2608, column: 7, scope: !9355)
!9358 = !DILocation(line: 2608, column: 16, scope: !9355)
!9359 = !DILocation(line: 2607, column: 14, scope: !9355)
!9360 = !DILocation(line: 2607, column: 12, scope: !9355)
!9361 = !DILocation(line: 2609, column: 36, scope: !9355)
!9362 = !DILocation(line: 2609, column: 42, scope: !9355)
!9363 = !DILocation(line: 2609, column: 48, scope: !9355)
!9364 = !DILocation(line: 2609, column: 53, scope: !9355)
!9365 = !DILocation(line: 2609, column: 15, scope: !9355)
!9366 = !DILocation(line: 2609, column: 8, scope: !9355)
!9367 = !DILocation(line: 2611, column: 2, scope: !9274)
!9368 = !DILocation(line: 2614, column: 11, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2614, column: 11)
!9370 = !DILocation(line: 2614, column: 26, scope: !9369)
!9371 = !DILocation(line: 2615, column: 4, scope: !9369)
!9372 = !DILocation(line: 2615, column: 7, scope: !9369)
!9373 = !DILocation(line: 2615, column: 32, scope: !9369)
!9374 = !DILocation(line: 2616, column: 4, scope: !9369)
!9375 = !DILocation(line: 2616, column: 7, scope: !9369)
!9376 = !DILocation(line: 2616, column: 14, scope: !9369)
!9377 = !DILocation(line: 2616, column: 11, scope: !9369)
!9378 = !DILocation(line: 2614, column: 11, scope: !7487)
!9379 = !DILocation(line: 2617, column: 41, scope: !9369)
!9380 = !DILocation(line: 2617, column: 47, scope: !9369)
!9381 = !DILocation(line: 2617, column: 52, scope: !9369)
!9382 = !DILocation(line: 2617, column: 15, scope: !9369)
!9383 = !DILocation(line: 2617, column: 8, scope: !9369)
!9384 = !DILocation(line: 2620, column: 11, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2620, column: 11)
!9386 = !DILocation(line: 2620, column: 26, scope: !9385)
!9387 = !DILocation(line: 2621, column: 4, scope: !9385)
!9388 = !DILocation(line: 2621, column: 7, scope: !9385)
!9389 = !DILocation(line: 2621, column: 32, scope: !9385)
!9390 = !DILocation(line: 2622, column: 4, scope: !9385)
!9391 = !DILocation(line: 2622, column: 7, scope: !9385)
!9392 = !DILocation(line: 2622, column: 14, scope: !9385)
!9393 = !DILocation(line: 2622, column: 11, scope: !9385)
!9394 = !DILocation(line: 2620, column: 11, scope: !7487)
!9395 = !DILocation(line: 2623, column: 35, scope: !9385)
!9396 = !DILocation(line: 2623, column: 41, scope: !9385)
!9397 = !DILocation(line: 2623, column: 46, scope: !9385)
!9398 = !DILocation(line: 2623, column: 9, scope: !9385)
!9399 = !DILocation(line: 2623, column: 2, scope: !9385)
!9400 = !DILocation(line: 2625, column: 45, scope: !7487)
!9401 = !DILocation(line: 2625, column: 51, scope: !7487)
!9402 = !DILocation(line: 2625, column: 57, scope: !7487)
!9403 = !DILocation(line: 2625, column: 62, scope: !7487)
!9404 = !DILocation(line: 2625, column: 13, scope: !7487)
!9405 = !DILocation(line: 2625, column: 11, scope: !7487)
!9406 = !DILocation(line: 2626, column: 11, scope: !9407)
!9407 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2626, column: 11)
!9408 = !DILocation(line: 2626, column: 11, scope: !7487)
!9409 = !DILocation(line: 2627, column: 9, scope: !9407)
!9410 = !DILocation(line: 2627, column: 2, scope: !9407)
!9411 = !DILocation(line: 2628, column: 7, scope: !7487)
!9412 = !DILocation(line: 2632, column: 11, scope: !9413)
!9413 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2632, column: 11)
!9414 = !DILocation(line: 2632, column: 22, scope: !9413)
!9415 = !DILocation(line: 2632, column: 19, scope: !9413)
!9416 = !DILocation(line: 2632, column: 11, scope: !7487)
!9417 = !DILocation(line: 2634, column: 24, scope: !9418)
!9418 = distinct !DILexicalBlock(scope: !9419, file: !1, line: 2634, column: 8)
!9419 = distinct !DILexicalBlock(scope: !9413, file: !1, line: 2633, column: 2)
!9420 = !DILocation(line: 2634, column: 8, scope: !9418)
!9421 = !DILocation(line: 2634, column: 8, scope: !9419)
!9422 = !DILocation(line: 2635, column: 39, scope: !9418)
!9423 = !DILocation(line: 2635, column: 45, scope: !9418)
!9424 = !DILocation(line: 2635, column: 50, scope: !9418)
!9425 = !DILocation(line: 2635, column: 13, scope: !9418)
!9426 = !DILocation(line: 2635, column: 6, scope: !9418)
!9427 = !DILocation(line: 2636, column: 11, scope: !9419)
!9428 = !DILocation(line: 2636, column: 4, scope: !9419)
!9429 = !DILocation(line: 2639, column: 11, scope: !9430)
!9430 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2639, column: 11)
!9431 = !DILocation(line: 2639, column: 22, scope: !9430)
!9432 = !DILocation(line: 2639, column: 19, scope: !9430)
!9433 = !DILocation(line: 2639, column: 11, scope: !7487)
!9434 = !DILocation(line: 2640, column: 19, scope: !9430)
!9435 = !DILocation(line: 2640, column: 40, scope: !9430)
!9436 = !DILocation(line: 2640, column: 46, scope: !9430)
!9437 = !DILocation(line: 2640, column: 9, scope: !9430)
!9438 = !DILocation(line: 2640, column: 2, scope: !9430)
!9439 = !DILocation(line: 2642, column: 11, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2642, column: 11)
!9441 = !DILocation(line: 2643, column: 4, scope: !9440)
!9442 = !DILocation(line: 2643, column: 26, scope: !9440)
!9443 = !DILocation(line: 2643, column: 14, scope: !9440)
!9444 = !DILocation(line: 2643, column: 12, scope: !9440)
!9445 = !DILocation(line: 2643, column: 45, scope: !9440)
!9446 = !DILocation(line: 2642, column: 11, scope: !7487)
!9447 = !DILocation(line: 2644, column: 40, scope: !9440)
!9448 = !DILocation(line: 2644, column: 46, scope: !9440)
!9449 = !DILocation(line: 2644, column: 51, scope: !9440)
!9450 = !DILocation(line: 2644, column: 9, scope: !9440)
!9451 = !DILocation(line: 2644, column: 2, scope: !9440)
!9452 = !DILocation(line: 2645, column: 7, scope: !7487)
!9453 = !DILocation(line: 2649, column: 11, scope: !9454)
!9454 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2649, column: 11)
!9455 = !DILocation(line: 2649, column: 11, scope: !7487)
!9456 = !DILocation(line: 2655, column: 8, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9458, file: !1, line: 2655, column: 8)
!9458 = distinct !DILexicalBlock(scope: !9454, file: !1, line: 2650, column: 2)
!9459 = !DILocation(line: 2655, column: 19, scope: !9457)
!9460 = !DILocation(line: 2655, column: 16, scope: !9457)
!9461 = !DILocation(line: 2656, column: 8, scope: !9457)
!9462 = !DILocation(line: 2656, column: 12, scope: !9457)
!9463 = !DILocation(line: 2657, column: 8, scope: !9457)
!9464 = !DILocation(line: 2657, column: 12, scope: !9457)
!9465 = !DILocation(line: 2658, column: 8, scope: !9457)
!9466 = !DILocation(line: 2658, column: 29, scope: !9457)
!9467 = !DILocation(line: 2658, column: 13, scope: !9457)
!9468 = !DILocation(line: 2655, column: 8, scope: !9458)
!9469 = !DILocation(line: 2659, column: 13, scope: !9457)
!9470 = !DILocation(line: 2659, column: 6, scope: !9457)
!9471 = !DILocation(line: 2661, column: 8, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9458, file: !1, line: 2661, column: 8)
!9473 = !DILocation(line: 2661, column: 19, scope: !9472)
!9474 = !DILocation(line: 2661, column: 16, scope: !9472)
!9475 = !DILocation(line: 2662, column: 8, scope: !9472)
!9476 = !DILocation(line: 2662, column: 12, scope: !9472)
!9477 = !DILocation(line: 2661, column: 8, scope: !9458)
!9478 = !DILocation(line: 2663, column: 13, scope: !9472)
!9479 = !DILocation(line: 2663, column: 6, scope: !9472)
!9480 = !DILocation(line: 2665, column: 8, scope: !9481)
!9481 = distinct !DILexicalBlock(scope: !9458, file: !1, line: 2665, column: 8)
!9482 = !DILocation(line: 2665, column: 27, scope: !9481)
!9483 = !DILocation(line: 2666, column: 8, scope: !9481)
!9484 = !DILocation(line: 2666, column: 11, scope: !9481)
!9485 = !DILocation(line: 2666, column: 22, scope: !9481)
!9486 = !DILocation(line: 2666, column: 19, scope: !9481)
!9487 = !DILocation(line: 2665, column: 8, scope: !9458)
!9488 = !DILocalVariable(name: "d", scope: !9489, file: !1, line: 2668, type: !1676)
!9489 = distinct !DILexicalBlock(scope: !9481, file: !1, line: 2667, column: 6)
!9490 = !DILocation(line: 2668, column: 24, scope: !9489)
!9491 = !DILocation(line: 2669, column: 8, scope: !9489)
!9492 = !DILocation(line: 2672, column: 12, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9489, file: !1, line: 2672, column: 12)
!9494 = !DILocation(line: 2673, column: 5, scope: !9493)
!9495 = !DILocation(line: 2673, column: 9, scope: !9493)
!9496 = !DILocation(line: 2672, column: 12, scope: !9489)
!9497 = !DILocation(line: 2674, column: 35, scope: !9493)
!9498 = !DILocation(line: 2674, column: 41, scope: !9493)
!9499 = !DILocation(line: 2674, column: 46, scope: !9493)
!9500 = !DILocation(line: 2674, column: 10, scope: !9493)
!9501 = !DILocation(line: 2674, column: 3, scope: !9493)
!9502 = !DILocation(line: 2678, column: 12, scope: !9503)
!9503 = distinct !DILexicalBlock(scope: !9489, file: !1, line: 2678, column: 12)
!9504 = !DILocation(line: 2679, column: 5, scope: !9503)
!9505 = !DILocation(line: 2679, column: 9, scope: !9503)
!9506 = !DILocation(line: 2678, column: 12, scope: !9489)
!9507 = !DILocation(line: 2681, column: 5, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9503, file: !1, line: 2680, column: 3)
!9509 = !DILocation(line: 2682, column: 11, scope: !9508)
!9510 = !DILocation(line: 2682, column: 9, scope: !9508)
!9511 = !DILocation(line: 2683, column: 39, scope: !9508)
!9512 = !DILocation(line: 2683, column: 45, scope: !9508)
!9513 = !DILocation(line: 2683, column: 50, scope: !9508)
!9514 = !DILocation(line: 2683, column: 12, scope: !9508)
!9515 = !DILocation(line: 2683, column: 5, scope: !9508)
!9516 = !DILocation(line: 2685, column: 6, scope: !9489)
!9517 = !DILocation(line: 2686, column: 2, scope: !9458)
!9518 = !DILocation(line: 2690, column: 8, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9520, file: !1, line: 2690, column: 8)
!9520 = distinct !DILexicalBlock(scope: !9454, file: !1, line: 2688, column: 2)
!9521 = !DILocation(line: 2690, column: 19, scope: !9519)
!9522 = !DILocation(line: 2690, column: 16, scope: !9519)
!9523 = !DILocation(line: 2690, column: 8, scope: !9520)
!9524 = !DILocation(line: 2692, column: 28, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9526, file: !1, line: 2692, column: 12)
!9526 = distinct !DILexicalBlock(scope: !9519, file: !1, line: 2691, column: 6)
!9527 = !DILocation(line: 2692, column: 12, scope: !9525)
!9528 = !DILocation(line: 2692, column: 12, scope: !9526)
!9529 = !DILocation(line: 2693, column: 36, scope: !9525)
!9530 = !DILocation(line: 2693, column: 42, scope: !9525)
!9531 = !DILocation(line: 2693, column: 47, scope: !9525)
!9532 = !DILocation(line: 2693, column: 10, scope: !9525)
!9533 = !DILocation(line: 2693, column: 3, scope: !9525)
!9534 = !DILocation(line: 2694, column: 15, scope: !9526)
!9535 = !DILocation(line: 2694, column: 8, scope: !9526)
!9536 = !DILocation(line: 2697, column: 8, scope: !9537)
!9537 = distinct !DILexicalBlock(scope: !9520, file: !1, line: 2697, column: 8)
!9538 = !DILocation(line: 2697, column: 19, scope: !9537)
!9539 = !DILocation(line: 2697, column: 16, scope: !9537)
!9540 = !DILocation(line: 2697, column: 8, scope: !9520)
!9541 = !DILocation(line: 2698, column: 23, scope: !9537)
!9542 = !DILocation(line: 2698, column: 44, scope: !9537)
!9543 = !DILocation(line: 2698, column: 50, scope: !9537)
!9544 = !DILocation(line: 2698, column: 13, scope: !9537)
!9545 = !DILocation(line: 2698, column: 6, scope: !9537)
!9546 = !DILocation(line: 2700, column: 8, scope: !9547)
!9547 = distinct !DILexicalBlock(scope: !9520, file: !1, line: 2700, column: 8)
!9548 = !DILocation(line: 2700, column: 19, scope: !9547)
!9549 = !DILocation(line: 2700, column: 16, scope: !9547)
!9550 = !DILocation(line: 2700, column: 8, scope: !9520)
!9551 = !DILocalVariable(name: "x", scope: !9552, file: !1, line: 2702, type: !1495)
!9552 = distinct !DILexicalBlock(scope: !9547, file: !1, line: 2701, column: 6)
!9553 = !DILocation(line: 2702, column: 12, scope: !9552)
!9554 = !DILocation(line: 2702, column: 26, scope: !9552)
!9555 = !DILocation(line: 2702, column: 47, scope: !9552)
!9556 = !DILocation(line: 2702, column: 53, scope: !9552)
!9557 = !DILocation(line: 2702, column: 16, scope: !9552)
!9558 = !DILocation(line: 2703, column: 40, scope: !9552)
!9559 = !DILocation(line: 2703, column: 46, scope: !9552)
!9560 = !DILocation(line: 2703, column: 49, scope: !9552)
!9561 = !DILocation(line: 2703, column: 15, scope: !9552)
!9562 = !DILocation(line: 2703, column: 8, scope: !9552)
!9563 = !DILocation(line: 2706, column: 7, scope: !7487)
!9564 = !DILocation(line: 2710, column: 11, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2710, column: 11)
!9566 = !DILocation(line: 2710, column: 22, scope: !9565)
!9567 = !DILocation(line: 2710, column: 19, scope: !9565)
!9568 = !DILocation(line: 2710, column: 11, scope: !7487)
!9569 = !DILocation(line: 2712, column: 24, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9571, file: !1, line: 2712, column: 8)
!9571 = distinct !DILexicalBlock(scope: !9565, file: !1, line: 2711, column: 2)
!9572 = !DILocation(line: 2712, column: 8, scope: !9570)
!9573 = !DILocation(line: 2712, column: 8, scope: !9571)
!9574 = !DILocation(line: 2713, column: 39, scope: !9570)
!9575 = !DILocation(line: 2713, column: 45, scope: !9570)
!9576 = !DILocation(line: 2713, column: 50, scope: !9570)
!9577 = !DILocation(line: 2713, column: 13, scope: !9570)
!9578 = !DILocation(line: 2713, column: 6, scope: !9570)
!9579 = !DILocation(line: 2714, column: 11, scope: !9571)
!9580 = !DILocation(line: 2714, column: 4, scope: !9571)
!9581 = !DILocation(line: 2717, column: 11, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2717, column: 11)
!9583 = !DILocation(line: 2717, column: 22, scope: !9582)
!9584 = !DILocation(line: 2717, column: 19, scope: !9582)
!9585 = !DILocation(line: 2717, column: 11, scope: !7487)
!9586 = !DILocation(line: 2719, column: 24, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9588, file: !1, line: 2719, column: 8)
!9588 = distinct !DILexicalBlock(scope: !9582, file: !1, line: 2718, column: 2)
!9589 = !DILocation(line: 2719, column: 8, scope: !9587)
!9590 = !DILocation(line: 2719, column: 8, scope: !9588)
!9591 = !DILocation(line: 2720, column: 39, scope: !9587)
!9592 = !DILocation(line: 2720, column: 45, scope: !9587)
!9593 = !DILocation(line: 2720, column: 50, scope: !9587)
!9594 = !DILocation(line: 2720, column: 13, scope: !9587)
!9595 = !DILocation(line: 2720, column: 6, scope: !9587)
!9596 = !DILocation(line: 2721, column: 11, scope: !9588)
!9597 = !DILocation(line: 2721, column: 4, scope: !9588)
!9598 = !DILocation(line: 2724, column: 11, scope: !9599)
!9599 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2724, column: 11)
!9600 = !DILocation(line: 2725, column: 4, scope: !9599)
!9601 = !DILocation(line: 2725, column: 19, scope: !9599)
!9602 = !DILocation(line: 2725, column: 7, scope: !9599)
!9603 = !DILocation(line: 2725, column: 37, scope: !9599)
!9604 = !DILocation(line: 2724, column: 11, scope: !7487)
!9605 = !DILocation(line: 2726, column: 35, scope: !9599)
!9606 = !DILocation(line: 2726, column: 41, scope: !9599)
!9607 = !DILocation(line: 2727, column: 9, scope: !9599)
!9608 = !DILocation(line: 2726, column: 9, scope: !9599)
!9609 = !DILocation(line: 2726, column: 2, scope: !9599)
!9610 = !DILocation(line: 2728, column: 7, scope: !7487)
!9611 = !DILocation(line: 2732, column: 11, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2732, column: 11)
!9613 = !DILocation(line: 2732, column: 22, scope: !9612)
!9614 = !DILocation(line: 2732, column: 19, scope: !9612)
!9615 = !DILocation(line: 2732, column: 11, scope: !7487)
!9616 = !DILocation(line: 2734, column: 24, scope: !9617)
!9617 = distinct !DILexicalBlock(scope: !9618, file: !1, line: 2734, column: 8)
!9618 = distinct !DILexicalBlock(scope: !9612, file: !1, line: 2733, column: 2)
!9619 = !DILocation(line: 2734, column: 8, scope: !9617)
!9620 = !DILocation(line: 2734, column: 8, scope: !9618)
!9621 = !DILocation(line: 2735, column: 39, scope: !9617)
!9622 = !DILocation(line: 2735, column: 45, scope: !9617)
!9623 = !DILocation(line: 2735, column: 50, scope: !9617)
!9624 = !DILocation(line: 2735, column: 13, scope: !9617)
!9625 = !DILocation(line: 2735, column: 6, scope: !9617)
!9626 = !DILocation(line: 2736, column: 11, scope: !9618)
!9627 = !DILocation(line: 2736, column: 4, scope: !9618)
!9628 = !DILocation(line: 2739, column: 11, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2739, column: 11)
!9630 = !DILocation(line: 2739, column: 22, scope: !9629)
!9631 = !DILocation(line: 2739, column: 19, scope: !9629)
!9632 = !DILocation(line: 2739, column: 40, scope: !9629)
!9633 = !DILocation(line: 2739, column: 43, scope: !9629)
!9634 = !DILocation(line: 2739, column: 54, scope: !9629)
!9635 = !DILocation(line: 2739, column: 51, scope: !9629)
!9636 = !DILocation(line: 2739, column: 11, scope: !7487)
!9637 = !DILocation(line: 2741, column: 24, scope: !9638)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !1, line: 2741, column: 8)
!9639 = distinct !DILexicalBlock(scope: !9629, file: !1, line: 2740, column: 2)
!9640 = !DILocation(line: 2741, column: 8, scope: !9638)
!9641 = !DILocation(line: 2741, column: 8, scope: !9639)
!9642 = !DILocation(line: 2742, column: 39, scope: !9638)
!9643 = !DILocation(line: 2742, column: 45, scope: !9638)
!9644 = !DILocation(line: 2742, column: 50, scope: !9638)
!9645 = !DILocation(line: 2742, column: 13, scope: !9638)
!9646 = !DILocation(line: 2742, column: 6, scope: !9638)
!9647 = !DILocation(line: 2743, column: 11, scope: !9639)
!9648 = !DILocation(line: 2743, column: 4, scope: !9639)
!9649 = !DILocation(line: 2745, column: 7, scope: !7487)
!9650 = !DILocation(line: 2750, column: 11, scope: !9651)
!9651 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2750, column: 11)
!9652 = !DILocation(line: 2750, column: 22, scope: !9651)
!9653 = !DILocation(line: 2750, column: 19, scope: !9651)
!9654 = !DILocation(line: 2750, column: 11, scope: !7487)
!9655 = !DILocation(line: 2751, column: 9, scope: !9651)
!9656 = !DILocation(line: 2751, column: 2, scope: !9651)
!9657 = !DILocation(line: 2752, column: 11, scope: !9658)
!9658 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2752, column: 11)
!9659 = !DILocation(line: 2752, column: 22, scope: !9658)
!9660 = !DILocation(line: 2752, column: 19, scope: !9658)
!9661 = !DILocation(line: 2752, column: 40, scope: !9658)
!9662 = !DILocation(line: 2752, column: 61, scope: !9658)
!9663 = !DILocation(line: 2752, column: 45, scope: !9658)
!9664 = !DILocation(line: 2752, column: 11, scope: !7487)
!9665 = !DILocation(line: 2753, column: 9, scope: !9658)
!9666 = !DILocation(line: 2753, column: 2, scope: !9658)
!9667 = !DILocation(line: 2755, column: 11, scope: !9668)
!9668 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2755, column: 11)
!9669 = !DILocation(line: 2755, column: 33, scope: !9668)
!9670 = !DILocation(line: 2755, column: 36, scope: !9668)
!9671 = !DILocation(line: 2755, column: 42, scope: !9668)
!9672 = !DILocation(line: 2756, column: 4, scope: !9668)
!9673 = !DILocation(line: 2756, column: 32, scope: !9668)
!9674 = !DILocation(line: 2756, column: 52, scope: !9668)
!9675 = !DILocation(line: 2756, column: 49, scope: !9668)
!9676 = !DILocation(line: 2757, column: 4, scope: !9668)
!9677 = !DILocation(line: 2757, column: 25, scope: !9668)
!9678 = !DILocation(line: 2757, column: 9, scope: !9668)
!9679 = !DILocation(line: 2755, column: 11, scope: !7487)
!9680 = !DILocation(line: 2758, column: 9, scope: !9668)
!9681 = !DILocation(line: 2758, column: 2, scope: !9668)
!9682 = !DILocation(line: 2757, column: 28, scope: !9668)
!9683 = !DILabel(scope: !7487, name: "canonicalize_shift", file: !1, line: 2759)
!9684 = !DILocation(line: 2759, column: 5, scope: !7487)
!9685 = !DILocation(line: 2766, column: 7, scope: !7487)
!9686 = !DILocation(line: 2771, column: 11, scope: !9687)
!9687 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2771, column: 11)
!9688 = !DILocation(line: 2771, column: 22, scope: !9687)
!9689 = !DILocation(line: 2771, column: 19, scope: !9687)
!9690 = !DILocation(line: 2771, column: 11, scope: !7487)
!9691 = !DILocation(line: 2772, column: 9, scope: !9687)
!9692 = !DILocation(line: 2772, column: 2, scope: !9687)
!9693 = !DILocation(line: 2773, column: 11, scope: !9694)
!9694 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2773, column: 11)
!9695 = !DILocation(line: 2773, column: 22, scope: !9694)
!9696 = !DILocation(line: 2773, column: 19, scope: !9694)
!9697 = !DILocation(line: 2773, column: 40, scope: !9694)
!9698 = !DILocation(line: 2773, column: 61, scope: !9694)
!9699 = !DILocation(line: 2773, column: 45, scope: !9694)
!9700 = !DILocation(line: 2773, column: 11, scope: !7487)
!9701 = !DILocation(line: 2774, column: 9, scope: !9694)
!9702 = !DILocation(line: 2774, column: 2, scope: !9694)
!9703 = !DILocation(line: 2775, column: 7, scope: !7487)
!9704 = !DILocation(line: 2778, column: 11, scope: !9705)
!9705 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2778, column: 11)
!9706 = !DILocation(line: 2778, column: 22, scope: !9705)
!9707 = !DILocation(line: 2778, column: 19, scope: !9705)
!9708 = !DILocation(line: 2778, column: 11, scope: !7487)
!9709 = !DILocation(line: 2779, column: 9, scope: !9705)
!9710 = !DILocation(line: 2779, column: 2, scope: !9705)
!9711 = !DILocation(line: 2780, column: 11, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2780, column: 11)
!9713 = !DILocation(line: 2780, column: 22, scope: !9712)
!9714 = !DILocation(line: 2780, column: 19, scope: !9712)
!9715 = !DILocation(line: 2780, column: 40, scope: !9712)
!9716 = !DILocation(line: 2780, column: 61, scope: !9712)
!9717 = !DILocation(line: 2780, column: 45, scope: !9712)
!9718 = !DILocation(line: 2780, column: 11, scope: !7487)
!9719 = !DILocation(line: 2781, column: 9, scope: !9712)
!9720 = !DILocation(line: 2781, column: 2, scope: !9712)
!9721 = !DILocation(line: 2783, column: 11, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2783, column: 11)
!9723 = !DILocation(line: 2783, column: 26, scope: !9722)
!9724 = !DILocation(line: 2784, column: 4, scope: !9722)
!9725 = !DILocation(line: 2784, column: 7, scope: !9722)
!9726 = !DILocation(line: 2786, column: 4, scope: !9722)
!9727 = !DILocation(line: 2786, column: 7, scope: !9722)
!9728 = !DILocation(line: 2786, column: 41, scope: !9722)
!9729 = !DILocation(line: 2786, column: 26, scope: !9722)
!9730 = !DILocation(line: 2786, column: 24, scope: !9722)
!9731 = !DILocation(line: 2783, column: 11, scope: !7487)
!9732 = !DILocalVariable(name: "imode", scope: !9733, file: !1, line: 2788, type: !3)
!9733 = distinct !DILexicalBlock(scope: !9722, file: !1, line: 2787, column: 2)
!9734 = !DILocation(line: 2788, column: 22, scope: !9733)
!9735 = !DILocation(line: 2788, column: 30, scope: !9733)
!9736 = !DILocalVariable(name: "zero_val", scope: !9733, file: !1, line: 2789, type: !1568)
!9737 = !DILocation(line: 2789, column: 27, scope: !9733)
!9738 = !DILocation(line: 2796, column: 2, scope: !9733)
!9739 = !DILocation(line: 2797, column: 7, scope: !7487)
!9740 = !DILocation(line: 2800, column: 11, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2800, column: 11)
!9742 = !DILocation(line: 2800, column: 17, scope: !9741)
!9743 = !DILocation(line: 2801, column: 4, scope: !9741)
!9744 = !DILocation(line: 2801, column: 7, scope: !9741)
!9745 = !DILocation(line: 2802, column: 4, scope: !9741)
!9746 = !DILocation(line: 2802, column: 7, scope: !9741)
!9747 = !DILocation(line: 2802, column: 49, scope: !9741)
!9748 = !DILocation(line: 2802, column: 55, scope: !9741)
!9749 = !DILocation(line: 2802, column: 45, scope: !9741)
!9750 = !DILocation(line: 2802, column: 24, scope: !9741)
!9751 = !DILocation(line: 2803, column: 4, scope: !9741)
!9752 = !DILocation(line: 2803, column: 25, scope: !9741)
!9753 = !DILocation(line: 2803, column: 9, scope: !9741)
!9754 = !DILocation(line: 2800, column: 11, scope: !7487)
!9755 = !DILocation(line: 2804, column: 9, scope: !9741)
!9756 = !DILocation(line: 2804, column: 2, scope: !9741)
!9757 = !DILocation(line: 2805, column: 24, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2805, column: 11)
!9759 = !DILocation(line: 2805, column: 33, scope: !9758)
!9760 = !DILocation(line: 2805, column: 11, scope: !9758)
!9761 = !DILocation(line: 2805, column: 42, scope: !9758)
!9762 = !DILocation(line: 2805, column: 63, scope: !9758)
!9763 = !DILocation(line: 2805, column: 47, scope: !9758)
!9764 = !DILocation(line: 2805, column: 11, scope: !7487)
!9765 = !DILocation(line: 2806, column: 9, scope: !9758)
!9766 = !DILocation(line: 2806, column: 2, scope: !9758)
!9767 = !DILocation(line: 2807, column: 45, scope: !7487)
!9768 = !DILocation(line: 2807, column: 51, scope: !7487)
!9769 = !DILocation(line: 2807, column: 57, scope: !7487)
!9770 = !DILocation(line: 2807, column: 62, scope: !7487)
!9771 = !DILocation(line: 2807, column: 13, scope: !7487)
!9772 = !DILocation(line: 2807, column: 11, scope: !7487)
!9773 = !DILocation(line: 2808, column: 11, scope: !9774)
!9774 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2808, column: 11)
!9775 = !DILocation(line: 2808, column: 11, scope: !7487)
!9776 = !DILocation(line: 2809, column: 9, scope: !9774)
!9777 = !DILocation(line: 2809, column: 2, scope: !9774)
!9778 = !DILocation(line: 2810, column: 7, scope: !7487)
!9779 = !DILocation(line: 2813, column: 11, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2813, column: 11)
!9781 = !DILocation(line: 2813, column: 17, scope: !9780)
!9782 = !DILocation(line: 2814, column: 4, scope: !9780)
!9783 = !DILocation(line: 2814, column: 7, scope: !9780)
!9784 = !DILocation(line: 2815, column: 4, scope: !9780)
!9785 = !DILocation(line: 2815, column: 33, scope: !9780)
!9786 = !DILocation(line: 2816, column: 36, scope: !9780)
!9787 = !DILocation(line: 2816, column: 57, scope: !9780)
!9788 = !DILocation(line: 2816, column: 8, scope: !9780)
!9789 = !DILocation(line: 2817, column: 4, scope: !9780)
!9790 = !DILocation(line: 2817, column: 25, scope: !9780)
!9791 = !DILocation(line: 2817, column: 9, scope: !9780)
!9792 = !DILocation(line: 2813, column: 11, scope: !7487)
!9793 = !DILocation(line: 2818, column: 9, scope: !9780)
!9794 = !DILocation(line: 2818, column: 2, scope: !9780)
!9795 = !DILocation(line: 2819, column: 24, scope: !9796)
!9796 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2819, column: 11)
!9797 = !DILocation(line: 2819, column: 33, scope: !9796)
!9798 = !DILocation(line: 2819, column: 11, scope: !9796)
!9799 = !DILocation(line: 2819, column: 42, scope: !9796)
!9800 = !DILocation(line: 2819, column: 63, scope: !9796)
!9801 = !DILocation(line: 2819, column: 47, scope: !9796)
!9802 = !DILocation(line: 2819, column: 11, scope: !7487)
!9803 = !DILocation(line: 2820, column: 9, scope: !9796)
!9804 = !DILocation(line: 2820, column: 2, scope: !9796)
!9805 = !DILocation(line: 2821, column: 45, scope: !7487)
!9806 = !DILocation(line: 2821, column: 51, scope: !7487)
!9807 = !DILocation(line: 2821, column: 57, scope: !7487)
!9808 = !DILocation(line: 2821, column: 62, scope: !7487)
!9809 = !DILocation(line: 2821, column: 13, scope: !7487)
!9810 = !DILocation(line: 2821, column: 11, scope: !7487)
!9811 = !DILocation(line: 2822, column: 11, scope: !9812)
!9812 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2822, column: 11)
!9813 = !DILocation(line: 2822, column: 11, scope: !7487)
!9814 = !DILocation(line: 2823, column: 9, scope: !9812)
!9815 = !DILocation(line: 2823, column: 2, scope: !9812)
!9816 = !DILocation(line: 2824, column: 7, scope: !7487)
!9817 = !DILocation(line: 2827, column: 11, scope: !9818)
!9818 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2827, column: 11)
!9819 = !DILocation(line: 2827, column: 22, scope: !9818)
!9820 = !DILocation(line: 2827, column: 19, scope: !9818)
!9821 = !DILocation(line: 2827, column: 40, scope: !9818)
!9822 = !DILocation(line: 2827, column: 61, scope: !9818)
!9823 = !DILocation(line: 2827, column: 45, scope: !9818)
!9824 = !DILocation(line: 2827, column: 11, scope: !7487)
!9825 = !DILocation(line: 2828, column: 9, scope: !9818)
!9826 = !DILocation(line: 2828, column: 2, scope: !9818)
!9827 = !DILocation(line: 2829, column: 24, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2829, column: 11)
!9829 = !DILocation(line: 2829, column: 33, scope: !9828)
!9830 = !DILocation(line: 2829, column: 11, scope: !9828)
!9831 = !DILocation(line: 2829, column: 42, scope: !9828)
!9832 = !DILocation(line: 2829, column: 63, scope: !9828)
!9833 = !DILocation(line: 2829, column: 47, scope: !9828)
!9834 = !DILocation(line: 2829, column: 11, scope: !7487)
!9835 = !DILocation(line: 2830, column: 9, scope: !9828)
!9836 = !DILocation(line: 2830, column: 2, scope: !9828)
!9837 = !DILocation(line: 2831, column: 45, scope: !7487)
!9838 = !DILocation(line: 2831, column: 51, scope: !7487)
!9839 = !DILocation(line: 2831, column: 57, scope: !7487)
!9840 = !DILocation(line: 2831, column: 62, scope: !7487)
!9841 = !DILocation(line: 2831, column: 13, scope: !7487)
!9842 = !DILocation(line: 2831, column: 11, scope: !7487)
!9843 = !DILocation(line: 2832, column: 11, scope: !9844)
!9844 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2832, column: 11)
!9845 = !DILocation(line: 2832, column: 11, scope: !7487)
!9846 = !DILocation(line: 2833, column: 9, scope: !9844)
!9847 = !DILocation(line: 2833, column: 2, scope: !9844)
!9848 = !DILocation(line: 2834, column: 7, scope: !7487)
!9849 = !DILocation(line: 2837, column: 11, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2837, column: 11)
!9851 = !DILocation(line: 2837, column: 22, scope: !9850)
!9852 = !DILocation(line: 2837, column: 19, scope: !9850)
!9853 = !DILocation(line: 2837, column: 34, scope: !9850)
!9854 = !DILocation(line: 2837, column: 55, scope: !9850)
!9855 = !DILocation(line: 2837, column: 39, scope: !9850)
!9856 = !DILocation(line: 2837, column: 11, scope: !7487)
!9857 = !DILocation(line: 2838, column: 9, scope: !9850)
!9858 = !DILocation(line: 2838, column: 2, scope: !9850)
!9859 = !DILocation(line: 2839, column: 24, scope: !9860)
!9860 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2839, column: 11)
!9861 = !DILocation(line: 2839, column: 33, scope: !9860)
!9862 = !DILocation(line: 2839, column: 11, scope: !9860)
!9863 = !DILocation(line: 2839, column: 42, scope: !9860)
!9864 = !DILocation(line: 2839, column: 63, scope: !9860)
!9865 = !DILocation(line: 2839, column: 47, scope: !9860)
!9866 = !DILocation(line: 2839, column: 11, scope: !7487)
!9867 = !DILocation(line: 2840, column: 9, scope: !9860)
!9868 = !DILocation(line: 2840, column: 2, scope: !9860)
!9869 = !DILocation(line: 2841, column: 45, scope: !7487)
!9870 = !DILocation(line: 2841, column: 51, scope: !7487)
!9871 = !DILocation(line: 2841, column: 57, scope: !7487)
!9872 = !DILocation(line: 2841, column: 62, scope: !7487)
!9873 = !DILocation(line: 2841, column: 13, scope: !7487)
!9874 = !DILocation(line: 2841, column: 11, scope: !7487)
!9875 = !DILocation(line: 2842, column: 11, scope: !9876)
!9876 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2842, column: 11)
!9877 = !DILocation(line: 2842, column: 11, scope: !7487)
!9878 = !DILocation(line: 2843, column: 9, scope: !9876)
!9879 = !DILocation(line: 2843, column: 2, scope: !9876)
!9880 = !DILocation(line: 2844, column: 7, scope: !7487)
!9881 = !DILocation(line: 2855, column: 7, scope: !7487)
!9882 = !DILocation(line: 2858, column: 12, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2858, column: 11)
!9884 = !DILocation(line: 2858, column: 11, scope: !7487)
!9885 = !DILocation(line: 2860, column: 4, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !1, line: 2859, column: 2)
!9887 = !DILocation(line: 2861, column: 4, scope: !9886)
!9888 = !DILocation(line: 2862, column: 4, scope: !9886)
!9889 = !DILocation(line: 2863, column: 4, scope: !9886)
!9890 = !DILocation(line: 2864, column: 4, scope: !9886)
!9891 = !DILocation(line: 2866, column: 8, scope: !9892)
!9892 = distinct !DILexicalBlock(scope: !9886, file: !1, line: 2866, column: 8)
!9893 = !DILocation(line: 2866, column: 27, scope: !9892)
!9894 = !DILocation(line: 2866, column: 8, scope: !9886)
!9895 = !DILocation(line: 2867, column: 13, scope: !9892)
!9896 = !DILocation(line: 2867, column: 6, scope: !9892)
!9897 = !DILocation(line: 2876, column: 8, scope: !9898)
!9898 = distinct !DILexicalBlock(scope: !9886, file: !1, line: 2876, column: 8)
!9899 = !DILocation(line: 2876, column: 27, scope: !9898)
!9900 = !DILocation(line: 2876, column: 8, scope: !9886)
!9901 = !DILocalVariable(name: "op0", scope: !9902, file: !1, line: 2878, type: !1495)
!9902 = distinct !DILexicalBlock(scope: !9898, file: !1, line: 2877, column: 6)
!9903 = !DILocation(line: 2878, column: 12, scope: !9902)
!9904 = !DILocation(line: 2878, column: 18, scope: !9902)
!9905 = !DILocalVariable(name: "op1", scope: !9902, file: !1, line: 2879, type: !1495)
!9906 = !DILocation(line: 2879, column: 12, scope: !9902)
!9907 = !DILocation(line: 2879, column: 18, scope: !9902)
!9908 = !DILocalVariable(name: "opmode", scope: !9902, file: !1, line: 2881, type: !3)
!9909 = !DILocation(line: 2881, column: 26, scope: !9902)
!9910 = !DILocation(line: 2881, column: 35, scope: !9902)
!9911 = !DILocalVariable(name: "elt_size", scope: !9902, file: !1, line: 2882, type: !1518)
!9912 = !DILocation(line: 2882, column: 12, scope: !9902)
!9913 = !DILocation(line: 2882, column: 23, scope: !9902)
!9914 = !DILocalVariable(name: "n_elts", scope: !9902, file: !1, line: 2883, type: !1518)
!9915 = !DILocation(line: 2883, column: 12, scope: !9902)
!9916 = !DILocation(line: 2883, column: 21, scope: !9902)
!9917 = !DILocation(line: 2883, column: 46, scope: !9902)
!9918 = !DILocation(line: 2883, column: 44, scope: !9902)
!9919 = !DILocalVariable(name: "i", scope: !9902, file: !1, line: 2885, type: !1518)
!9920 = !DILocation(line: 2885, column: 12, scope: !9902)
!9921 = !DILocation(line: 2885, column: 16, scope: !9902)
!9922 = !DILocalVariable(name: "elem", scope: !9902, file: !1, line: 2886, type: !1518)
!9923 = !DILocation(line: 2886, column: 12, scope: !9902)
!9924 = !DILocalVariable(name: "vec", scope: !9902, file: !1, line: 2888, type: !1526)
!9925 = !DILocation(line: 2888, column: 14, scope: !9902)
!9926 = !DILocalVariable(name: "tmp_op", scope: !9902, file: !1, line: 2889, type: !1495)
!9927 = !DILocation(line: 2889, column: 12, scope: !9902)
!9928 = !DILocalVariable(name: "tmp", scope: !9902, file: !1, line: 2889, type: !1495)
!9929 = !DILocation(line: 2889, column: 20, scope: !9902)
!9930 = !DILocation(line: 2891, column: 8, scope: !9902)
!9931 = !DILocation(line: 2892, column: 8, scope: !9902)
!9932 = !DILocation(line: 2895, column: 15, scope: !9902)
!9933 = !DILocation(line: 2895, column: 13, scope: !9902)
!9934 = !DILocation(line: 2898, column: 12, scope: !9935)
!9935 = distinct !DILexicalBlock(scope: !9902, file: !1, line: 2898, column: 12)
!9936 = !DILocation(line: 2898, column: 27, scope: !9935)
!9937 = !DILocation(line: 2898, column: 12, scope: !9902)
!9938 = !DILocalVariable(name: "op00", scope: !9939, file: !1, line: 2900, type: !1495)
!9939 = distinct !DILexicalBlock(scope: !9935, file: !1, line: 2899, column: 3)
!9940 = !DILocation(line: 2900, column: 9, scope: !9939)
!9941 = !DILocation(line: 2900, column: 16, scope: !9939)
!9942 = !DILocalVariable(name: "op01", scope: !9939, file: !1, line: 2901, type: !1495)
!9943 = !DILocation(line: 2901, column: 9, scope: !9939)
!9944 = !DILocation(line: 2901, column: 16, scope: !9939)
!9945 = !DILocalVariable(name: "mode00", scope: !9939, file: !1, line: 2903, type: !3)
!9946 = !DILocation(line: 2903, column: 23, scope: !9939)
!9947 = !DILocalVariable(name: "mode01", scope: !9939, file: !1, line: 2903, type: !3)
!9948 = !DILocation(line: 2903, column: 31, scope: !9939)
!9949 = !DILocalVariable(name: "n_elts00", scope: !9939, file: !1, line: 2904, type: !1518)
!9950 = !DILocation(line: 2904, column: 9, scope: !9939)
!9951 = !DILocalVariable(name: "n_elts01", scope: !9939, file: !1, line: 2904, type: !1518)
!9952 = !DILocation(line: 2904, column: 19, scope: !9939)
!9953 = !DILocation(line: 2906, column: 14, scope: !9939)
!9954 = !DILocation(line: 2906, column: 12, scope: !9939)
!9955 = !DILocation(line: 2907, column: 14, scope: !9939)
!9956 = !DILocation(line: 2907, column: 12, scope: !9939)
!9957 = !DILocation(line: 2910, column: 9, scope: !9958)
!9958 = distinct !DILexicalBlock(scope: !9939, file: !1, line: 2910, column: 9)
!9959 = !DILocation(line: 2910, column: 9, scope: !9939)
!9960 = !DILocation(line: 2912, column: 20, scope: !9961)
!9961 = distinct !DILexicalBlock(scope: !9958, file: !1, line: 2911, column: 7)
!9962 = !DILocation(line: 2912, column: 18, scope: !9961)
!9963 = !DILocation(line: 2913, column: 20, scope: !9961)
!9964 = !DILocation(line: 2913, column: 45, scope: !9961)
!9965 = !DILocation(line: 2913, column: 43, scope: !9961)
!9966 = !DILocation(line: 2913, column: 18, scope: !9961)
!9967 = !DILocation(line: 2914, column: 7, scope: !9961)
!9968 = !DILocation(line: 2916, column: 16, scope: !9958)
!9969 = !DILocation(line: 2918, column: 9, scope: !9970)
!9970 = distinct !DILexicalBlock(scope: !9939, file: !1, line: 2918, column: 9)
!9971 = !DILocation(line: 2918, column: 9, scope: !9939)
!9972 = !DILocation(line: 2920, column: 20, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9970, file: !1, line: 2919, column: 7)
!9974 = !DILocation(line: 2920, column: 18, scope: !9973)
!9975 = !DILocation(line: 2921, column: 20, scope: !9973)
!9976 = !DILocation(line: 2921, column: 45, scope: !9973)
!9977 = !DILocation(line: 2921, column: 43, scope: !9973)
!9978 = !DILocation(line: 2921, column: 18, scope: !9973)
!9979 = !DILocation(line: 2922, column: 7, scope: !9973)
!9980 = !DILocation(line: 2924, column: 16, scope: !9970)
!9981 = !DILocation(line: 2926, column: 5, scope: !9939)
!9982 = !DILocation(line: 2930, column: 9, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9939, file: !1, line: 2930, column: 9)
!9984 = !DILocation(line: 2930, column: 16, scope: !9983)
!9985 = !DILocation(line: 2930, column: 14, scope: !9983)
!9986 = !DILocation(line: 2930, column: 9, scope: !9939)
!9987 = !DILocation(line: 2931, column: 16, scope: !9983)
!9988 = !DILocation(line: 2931, column: 14, scope: !9983)
!9989 = !DILocation(line: 2931, column: 7, scope: !9983)
!9990 = !DILocation(line: 2934, column: 18, scope: !9991)
!9991 = distinct !DILexicalBlock(scope: !9983, file: !1, line: 2933, column: 7)
!9992 = !DILocation(line: 2934, column: 16, scope: !9991)
!9993 = !DILocation(line: 2935, column: 17, scope: !9991)
!9994 = !DILocation(line: 2935, column: 14, scope: !9991)
!9995 = !DILocation(line: 2937, column: 3, scope: !9939)
!9996 = !DILocation(line: 2939, column: 12, scope: !9935)
!9997 = !DILocation(line: 2939, column: 10, scope: !9935)
!9998 = !DILocation(line: 2941, column: 14, scope: !9902)
!9999 = !DILocation(line: 2941, column: 12, scope: !9902)
!10000 = !DILocation(line: 2942, column: 29, scope: !9902)
!10001 = !DILocation(line: 2942, column: 8, scope: !9902)
!10002 = !DILocation(line: 2942, column: 27, scope: !9902)
!10003 = !DILocation(line: 2944, column: 14, scope: !9902)
!10004 = !DILocation(line: 2944, column: 12, scope: !9902)
!10005 = !DILocation(line: 2946, column: 15, scope: !9902)
!10006 = !DILocation(line: 2946, column: 8, scope: !9902)
!10007 = !DILocation(line: 2948, column: 8, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9886, file: !1, line: 2948, column: 8)
!10009 = !DILocation(line: 2948, column: 27, scope: !10008)
!10010 = !DILocation(line: 2949, column: 8, scope: !10008)
!10011 = !DILocation(line: 2949, column: 11, scope: !10008)
!10012 = !DILocation(line: 2949, column: 43, scope: !10008)
!10013 = !DILocation(line: 2949, column: 40, scope: !10008)
!10014 = !DILocation(line: 2948, column: 8, scope: !9886)
!10015 = !DILocation(line: 2950, column: 13, scope: !10008)
!10016 = !DILocation(line: 2950, column: 6, scope: !10008)
!10017 = !DILocation(line: 2951, column: 2, scope: !9886)
!10018 = !DILocation(line: 2954, column: 4, scope: !10019)
!10019 = distinct !DILexicalBlock(scope: !9883, file: !1, line: 2953, column: 2)
!10020 = !DILocation(line: 2955, column: 4, scope: !10019)
!10021 = !DILocation(line: 2957, column: 4, scope: !10019)
!10022 = !DILocation(line: 2959, column: 8, scope: !10023)
!10023 = distinct !DILexicalBlock(scope: !10019, file: !1, line: 2959, column: 8)
!10024 = !DILocation(line: 2959, column: 27, scope: !10023)
!10025 = !DILocation(line: 2959, column: 8, scope: !10019)
!10026 = !DILocalVariable(name: "elt_size", scope: !10027, file: !1, line: 2961, type: !1518)
!10027 = distinct !DILexicalBlock(scope: !10023, file: !1, line: 2960, column: 6)
!10028 = !DILocation(line: 2961, column: 12, scope: !10027)
!10029 = !DILocation(line: 2961, column: 23, scope: !10027)
!10030 = !DILocalVariable(name: "n_elts", scope: !10027, file: !1, line: 2962, type: !5)
!10031 = !DILocation(line: 2962, column: 17, scope: !10027)
!10032 = !DILocation(line: 2962, column: 27, scope: !10027)
!10033 = !DILocation(line: 2962, column: 50, scope: !10027)
!10034 = !DILocation(line: 2962, column: 48, scope: !10027)
!10035 = !DILocalVariable(name: "v", scope: !10027, file: !1, line: 2963, type: !1526)
!10036 = !DILocation(line: 2963, column: 14, scope: !10027)
!10037 = !DILocation(line: 2963, column: 31, scope: !10027)
!10038 = !DILocation(line: 2963, column: 18, scope: !10027)
!10039 = !DILocalVariable(name: "i", scope: !10027, file: !1, line: 2964, type: !5)
!10040 = !DILocation(line: 2964, column: 21, scope: !10027)
!10041 = !DILocation(line: 2966, column: 8, scope: !10027)
!10042 = !DILocation(line: 2967, column: 15, scope: !10043)
!10043 = distinct !DILexicalBlock(scope: !10027, file: !1, line: 2967, column: 8)
!10044 = !DILocation(line: 2967, column: 13, scope: !10043)
!10045 = !DILocation(line: 2967, column: 20, scope: !10046)
!10046 = distinct !DILexicalBlock(scope: !10043, file: !1, line: 2967, column: 8)
!10047 = !DILocation(line: 2967, column: 24, scope: !10046)
!10048 = !DILocation(line: 2967, column: 22, scope: !10046)
!10049 = !DILocation(line: 2967, column: 8, scope: !10043)
!10050 = !DILocalVariable(name: "x", scope: !10051, file: !1, line: 2969, type: !1495)
!10051 = distinct !DILexicalBlock(scope: !10046, file: !1, line: 2968, column: 3)
!10052 = !DILocation(line: 2969, column: 9, scope: !10051)
!10053 = !DILocation(line: 2969, column: 13, scope: !10051)
!10054 = !DILocation(line: 2971, column: 5, scope: !10051)
!10055 = !DILocation(line: 2972, column: 24, scope: !10051)
!10056 = !DILocation(line: 2972, column: 5, scope: !10051)
!10057 = !DILocation(line: 2972, column: 22, scope: !10051)
!10058 = !DILocation(line: 2974, column: 3, scope: !10051)
!10059 = !DILocation(line: 2967, column: 33, scope: !10046)
!10060 = !DILocation(line: 2967, column: 8, scope: !10046)
!10061 = distinct !{!10061, !10049, !10062}
!10062 = !DILocation(line: 2974, column: 3, scope: !10043)
!10063 = !DILocation(line: 2976, column: 37, scope: !10027)
!10064 = !DILocation(line: 2976, column: 43, scope: !10027)
!10065 = !DILocation(line: 2976, column: 15, scope: !10027)
!10066 = !DILocation(line: 2976, column: 8, scope: !10027)
!10067 = !DILocation(line: 2980, column: 11, scope: !10068)
!10068 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 2980, column: 11)
!10069 = !DILocation(line: 2980, column: 32, scope: !10068)
!10070 = !DILocation(line: 2981, column: 4, scope: !10068)
!10071 = !DILocation(line: 2981, column: 7, scope: !10068)
!10072 = !DILocation(line: 2982, column: 4, scope: !10068)
!10073 = !DILocation(line: 2982, column: 7, scope: !10068)
!10074 = !DILocation(line: 2982, column: 26, scope: !10068)
!10075 = !DILocation(line: 2980, column: 11, scope: !7487)
!10076 = !DILocalVariable(name: "vec", scope: !10077, file: !1, line: 2984, type: !1495)
!10077 = distinct !DILexicalBlock(scope: !10068, file: !1, line: 2983, column: 2)
!10078 = !DILocation(line: 2984, column: 8, scope: !10077)
!10079 = !DILocation(line: 2984, column: 14, scope: !10077)
!10080 = !DILocalVariable(name: "offset", scope: !10077, file: !1, line: 2985, type: !1518)
!10081 = !DILocation(line: 2985, column: 8, scope: !10077)
!10082 = !DILocation(line: 2985, column: 17, scope: !10077)
!10083 = !DILocation(line: 2985, column: 52, scope: !10077)
!10084 = !DILocation(line: 2985, column: 50, scope: !10077)
!10085 = !DILocation(line: 2988, column: 4, scope: !10077)
!10086 = !DILocation(line: 2988, column: 11, scope: !10077)
!10087 = !DILocation(line: 2988, column: 29, scope: !10077)
!10088 = !DILocation(line: 2988, column: 26, scope: !10077)
!10089 = !DILocation(line: 2989, column: 4, scope: !10077)
!10090 = !DILocation(line: 2989, column: 7, scope: !10077)
!10091 = !DILocation(line: 2989, column: 22, scope: !10077)
!10092 = !DILocation(line: 0, scope: !10077)
!10093 = !DILocalVariable(name: "vec_size", scope: !10094, file: !1, line: 2991, type: !1585)
!10094 = distinct !DILexicalBlock(scope: !10077, file: !1, line: 2990, column: 6)
!10095 = !DILocation(line: 2991, column: 22, scope: !10094)
!10096 = !DILocation(line: 2991, column: 33, scope: !10094)
!10097 = !DILocation(line: 2992, column: 12, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10094, file: !1, line: 2992, column: 12)
!10099 = !DILocation(line: 2992, column: 21, scope: !10098)
!10100 = !DILocation(line: 2992, column: 19, scope: !10098)
!10101 = !DILocation(line: 2992, column: 12, scope: !10094)
!10102 = !DILocation(line: 2993, column: 9, scope: !10098)
!10103 = !DILocation(line: 2993, column: 7, scope: !10098)
!10104 = !DILocation(line: 2993, column: 3, scope: !10098)
!10105 = !DILocation(line: 2996, column: 15, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10098, file: !1, line: 2995, column: 3)
!10107 = !DILocation(line: 2996, column: 12, scope: !10106)
!10108 = !DILocation(line: 2997, column: 11, scope: !10106)
!10109 = !DILocation(line: 2997, column: 9, scope: !10106)
!10110 = !DILocation(line: 2999, column: 45, scope: !10094)
!10111 = !DILocation(line: 2999, column: 14, scope: !10094)
!10112 = !DILocation(line: 2999, column: 12, scope: !10094)
!10113 = distinct !{!10113, !10085, !10114}
!10114 = !DILocation(line: 3000, column: 6, scope: !10077)
!10115 = !DILocation(line: 3002, column: 8, scope: !10116)
!10116 = distinct !DILexicalBlock(scope: !10077, file: !1, line: 3002, column: 8)
!10117 = !DILocation(line: 3002, column: 26, scope: !10116)
!10118 = !DILocation(line: 3002, column: 23, scope: !10116)
!10119 = !DILocation(line: 3002, column: 8, scope: !10077)
!10120 = !DILocation(line: 3003, column: 13, scope: !10116)
!10121 = !DILocation(line: 3003, column: 6, scope: !10116)
!10122 = !DILocation(line: 3004, column: 2, scope: !10077)
!10123 = !DILocation(line: 3006, column: 7, scope: !7487)
!10124 = !DILocalVariable(name: "op0_mode", scope: !10125, file: !1, line: 3009, type: !3)
!10125 = distinct !DILexicalBlock(scope: !7487, file: !1, line: 3008, column: 7)
!10126 = !DILocation(line: 3009, column: 20, scope: !10125)
!10127 = !DILocation(line: 3009, column: 32, scope: !10125)
!10128 = !DILocation(line: 3009, column: 51, scope: !10125)
!10129 = !DILocation(line: 3010, column: 13, scope: !10125)
!10130 = !DILocation(line: 3011, column: 13, scope: !10125)
!10131 = !DILocalVariable(name: "op1_mode", scope: !10125, file: !1, line: 3012, type: !3)
!10132 = !DILocation(line: 3012, column: 20, scope: !10125)
!10133 = !DILocation(line: 3012, column: 32, scope: !10125)
!10134 = !DILocation(line: 3012, column: 51, scope: !10125)
!10135 = !DILocation(line: 3013, column: 13, scope: !10125)
!10136 = !DILocation(line: 3014, column: 13, scope: !10125)
!10137 = !DILocation(line: 3016, column: 2, scope: !10125)
!10138 = !DILocation(line: 3017, column: 2, scope: !10125)
!10139 = !DILocation(line: 3020, column: 6, scope: !10140)
!10140 = distinct !DILexicalBlock(scope: !10125, file: !1, line: 3020, column: 6)
!10141 = !DILocation(line: 3020, column: 6, scope: !10125)
!10142 = !DILocation(line: 3021, column: 4, scope: !10140)
!10143 = !DILocation(line: 3024, column: 4, scope: !10140)
!10144 = !DILocation(line: 3026, column: 6, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10125, file: !1, line: 3026, column: 6)
!10146 = !DILocation(line: 3026, column: 6, scope: !10125)
!10147 = !DILocation(line: 3027, column: 4, scope: !10145)
!10148 = !DILocation(line: 3030, column: 4, scope: !10145)
!10149 = !DILocation(line: 3032, column: 7, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !10125, file: !1, line: 3032, column: 6)
!10151 = !DILocation(line: 3032, column: 26, scope: !10150)
!10152 = !DILocation(line: 3033, column: 7, scope: !10150)
!10153 = !DILocation(line: 3033, column: 10, scope: !10150)
!10154 = !DILocation(line: 3034, column: 7, scope: !10150)
!10155 = !DILocation(line: 3034, column: 10, scope: !10150)
!10156 = !DILocation(line: 3034, column: 29, scope: !10150)
!10157 = !DILocation(line: 3035, column: 6, scope: !10150)
!10158 = !DILocation(line: 3035, column: 10, scope: !10150)
!10159 = !DILocation(line: 3035, column: 29, scope: !10150)
!10160 = !DILocation(line: 3036, column: 3, scope: !10150)
!10161 = !DILocation(line: 3036, column: 6, scope: !10150)
!10162 = !DILocation(line: 3037, column: 3, scope: !10150)
!10163 = !DILocation(line: 3037, column: 6, scope: !10150)
!10164 = !DILocation(line: 3037, column: 25, scope: !10150)
!10165 = !DILocation(line: 3032, column: 6, scope: !10125)
!10166 = !DILocalVariable(name: "elt_size", scope: !10167, file: !1, line: 3039, type: !1518)
!10167 = distinct !DILexicalBlock(scope: !10150, file: !1, line: 3038, column: 4)
!10168 = !DILocation(line: 3039, column: 10, scope: !10167)
!10169 = !DILocation(line: 3039, column: 21, scope: !10167)
!10170 = !DILocalVariable(name: "n_elts", scope: !10167, file: !1, line: 3040, type: !5)
!10171 = !DILocation(line: 3040, column: 15, scope: !10167)
!10172 = !DILocation(line: 3040, column: 25, scope: !10167)
!10173 = !DILocation(line: 3040, column: 48, scope: !10167)
!10174 = !DILocation(line: 3040, column: 46, scope: !10167)
!10175 = !DILocalVariable(name: "v", scope: !10167, file: !1, line: 3041, type: !1526)
!10176 = !DILocation(line: 3041, column: 12, scope: !10167)
!10177 = !DILocation(line: 3041, column: 29, scope: !10167)
!10178 = !DILocation(line: 3041, column: 16, scope: !10167)
!10179 = !DILocalVariable(name: "i", scope: !10167, file: !1, line: 3042, type: !5)
!10180 = !DILocation(line: 3042, column: 19, scope: !10167)
!10181 = !DILocalVariable(name: "in_n_elts", scope: !10167, file: !1, line: 3043, type: !5)
!10182 = !DILocation(line: 3043, column: 15, scope: !10167)
!10183 = !DILocation(line: 3045, column: 10, scope: !10184)
!10184 = distinct !DILexicalBlock(scope: !10167, file: !1, line: 3045, column: 10)
!10185 = !DILocation(line: 3045, column: 10, scope: !10167)
!10186 = !DILocation(line: 3046, column: 21, scope: !10184)
!10187 = !DILocation(line: 3046, column: 48, scope: !10184)
!10188 = !DILocation(line: 3046, column: 46, scope: !10184)
!10189 = !DILocation(line: 3046, column: 18, scope: !10184)
!10190 = !DILocation(line: 3046, column: 8, scope: !10184)
!10191 = !DILocation(line: 3047, column: 13, scope: !10192)
!10192 = distinct !DILexicalBlock(scope: !10167, file: !1, line: 3047, column: 6)
!10193 = !DILocation(line: 3047, column: 11, scope: !10192)
!10194 = !DILocation(line: 3047, column: 18, scope: !10195)
!10195 = distinct !DILexicalBlock(scope: !10192, file: !1, line: 3047, column: 6)
!10196 = !DILocation(line: 3047, column: 22, scope: !10195)
!10197 = !DILocation(line: 3047, column: 20, scope: !10195)
!10198 = !DILocation(line: 3047, column: 6, scope: !10192)
!10199 = !DILocation(line: 3049, column: 7, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10201, file: !1, line: 3049, column: 7)
!10201 = distinct !DILexicalBlock(scope: !10195, file: !1, line: 3048, column: 8)
!10202 = !DILocation(line: 3049, column: 11, scope: !10200)
!10203 = !DILocation(line: 3049, column: 9, scope: !10200)
!10204 = !DILocation(line: 3049, column: 7, scope: !10201)
!10205 = !DILocation(line: 3051, column: 12, scope: !10206)
!10206 = distinct !DILexicalBlock(scope: !10207, file: !1, line: 3051, column: 11)
!10207 = distinct !DILexicalBlock(scope: !10200, file: !1, line: 3050, column: 5)
!10208 = !DILocation(line: 3051, column: 11, scope: !10207)
!10209 = !DILocation(line: 3052, column: 28, scope: !10206)
!10210 = !DILocation(line: 3052, column: 9, scope: !10206)
!10211 = !DILocation(line: 3052, column: 26, scope: !10206)
!10212 = !DILocation(line: 3054, column: 28, scope: !10206)
!10213 = !DILocation(line: 3054, column: 9, scope: !10206)
!10214 = !DILocation(line: 3054, column: 26, scope: !10206)
!10215 = !DILocation(line: 3055, column: 5, scope: !10207)
!10216 = !DILocation(line: 3058, column: 12, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !1, line: 3058, column: 11)
!10218 = distinct !DILexicalBlock(scope: !10200, file: !1, line: 3057, column: 5)
!10219 = !DILocation(line: 3058, column: 11, scope: !10218)
!10220 = !DILocation(line: 3059, column: 28, scope: !10217)
!10221 = !DILocation(line: 3059, column: 9, scope: !10217)
!10222 = !DILocation(line: 3059, column: 26, scope: !10217)
!10223 = !DILocation(line: 3061, column: 28, scope: !10217)
!10224 = !DILocation(line: 3061, column: 9, scope: !10217)
!10225 = !DILocation(line: 3061, column: 26, scope: !10217)
!10226 = !DILocation(line: 3064, column: 8, scope: !10201)
!10227 = !DILocation(line: 3047, column: 31, scope: !10195)
!10228 = !DILocation(line: 3047, column: 6, scope: !10195)
!10229 = distinct !{!10229, !10198, !10230}
!10230 = !DILocation(line: 3064, column: 8, scope: !10192)
!10231 = !DILocation(line: 3066, column: 35, scope: !10167)
!10232 = !DILocation(line: 3066, column: 41, scope: !10167)
!10233 = !DILocation(line: 3066, column: 13, scope: !10167)
!10234 = !DILocation(line: 3066, column: 6, scope: !10167)
!10235 = !DILocation(line: 3069, column: 7, scope: !7487)
!10236 = !DILocation(line: 3072, column: 7, scope: !7487)
!10237 = !DILocation(line: 3073, column: 5, scope: !7487)
!10238 = !DILocation(line: 3075, column: 3, scope: !7455)
!10239 = !DILocation(line: 3076, column: 1, scope: !7455)
!10240 = distinct !DISubprogram(name: "simplify_const_relational_operation", scope: !1, file: !1, line: 4249, type: !2653, scopeLine: 4252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!10241 = !DILocalVariable(name: "code", arg: 1, scope: !10240, file: !1, line: 4249, type: !397)
!10242 = !DILocation(line: 4249, column: 52, scope: !10240)
!10243 = !DILocalVariable(name: "mode", arg: 2, scope: !10240, file: !1, line: 4250, type: !3)
!10244 = !DILocation(line: 4250, column: 28, scope: !10240)
!10245 = !DILocalVariable(name: "op0", arg: 3, scope: !10240, file: !1, line: 4251, type: !1495)
!10246 = !DILocation(line: 4251, column: 14, scope: !10240)
!10247 = !DILocalVariable(name: "op1", arg: 4, scope: !10240, file: !1, line: 4251, type: !1495)
!10248 = !DILocation(line: 4251, column: 23, scope: !10240)
!10249 = !DILocalVariable(name: "tem", scope: !10240, file: !1, line: 4253, type: !1495)
!10250 = !DILocation(line: 4253, column: 7, scope: !10240)
!10251 = !DILocalVariable(name: "trueop0", scope: !10240, file: !1, line: 4254, type: !1495)
!10252 = !DILocation(line: 4254, column: 7, scope: !10240)
!10253 = !DILocalVariable(name: "trueop1", scope: !10240, file: !1, line: 4255, type: !1495)
!10254 = !DILocation(line: 4255, column: 7, scope: !10240)
!10255 = !DILocation(line: 4257, column: 3, scope: !10240)
!10256 = !DILocation(line: 4262, column: 7, scope: !10257)
!10257 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4262, column: 7)
!10258 = !DILocation(line: 4262, column: 22, scope: !10257)
!10259 = !DILocation(line: 4262, column: 33, scope: !10257)
!10260 = !DILocation(line: 4262, column: 36, scope: !10257)
!10261 = !DILocation(line: 4262, column: 43, scope: !10257)
!10262 = !DILocation(line: 4262, column: 40, scope: !10257)
!10263 = !DILocation(line: 4262, column: 7, scope: !10240)
!10264 = !DILocation(line: 4264, column: 13, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10257, file: !1, line: 4263, column: 5)
!10266 = !DILocation(line: 4264, column: 11, scope: !10265)
!10267 = !DILocation(line: 4265, column: 13, scope: !10265)
!10268 = !DILocation(line: 4265, column: 11, scope: !10265)
!10269 = !DILocation(line: 4267, column: 11, scope: !10270)
!10270 = distinct !DILexicalBlock(scope: !10265, file: !1, line: 4267, column: 11)
!10271 = !DILocation(line: 4267, column: 26, scope: !10270)
!10272 = !DILocation(line: 4267, column: 11, scope: !10265)
!10273 = !DILocation(line: 4268, column: 9, scope: !10270)
!10274 = !DILocation(line: 4268, column: 7, scope: !10270)
!10275 = !DILocation(line: 4268, column: 2, scope: !10270)
!10276 = !DILocation(line: 4269, column: 16, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10270, file: !1, line: 4269, column: 16)
!10278 = !DILocation(line: 4269, column: 31, scope: !10277)
!10279 = !DILocation(line: 4269, column: 16, scope: !10270)
!10280 = !DILocation(line: 4270, column: 9, scope: !10277)
!10281 = !DILocation(line: 4270, column: 7, scope: !10277)
!10282 = !DILocation(line: 4270, column: 2, scope: !10277)
!10283 = !DILocation(line: 4272, column: 2, scope: !10277)
!10284 = !DILocation(line: 4273, column: 5, scope: !10265)
!10285 = !DILocation(line: 4277, column: 7, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4277, column: 7)
!10287 = !DILocation(line: 4277, column: 39, scope: !10286)
!10288 = !DILocation(line: 4277, column: 50, scope: !10286)
!10289 = !DILocation(line: 4277, column: 53, scope: !10286)
!10290 = !DILocation(line: 4277, column: 7, scope: !10240)
!10291 = !DILocation(line: 4278, column: 5, scope: !10286)
!10292 = !DILocation(line: 4281, column: 36, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4281, column: 7)
!10294 = !DILocation(line: 4281, column: 41, scope: !10293)
!10295 = !DILocation(line: 4281, column: 7, scope: !10293)
!10296 = !DILocation(line: 4281, column: 7, scope: !10240)
!10297 = !DILocation(line: 4283, column: 13, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !1, line: 4282, column: 5)
!10299 = !DILocation(line: 4283, column: 11, scope: !10298)
!10300 = !DILocation(line: 4283, column: 24, scope: !10298)
!10301 = !DILocation(line: 4283, column: 22, scope: !10298)
!10302 = !DILocation(line: 4283, column: 35, scope: !10298)
!10303 = !DILocation(line: 4283, column: 33, scope: !10298)
!10304 = !DILocation(line: 4284, column: 30, scope: !10298)
!10305 = !DILocation(line: 4284, column: 14, scope: !10298)
!10306 = !DILocation(line: 4284, column: 12, scope: !10298)
!10307 = !DILocation(line: 4285, column: 5, scope: !10298)
!10308 = !DILocation(line: 4287, column: 44, scope: !10240)
!10309 = !DILocation(line: 4287, column: 13, scope: !10240)
!10310 = !DILocation(line: 4287, column: 11, scope: !10240)
!10311 = !DILocation(line: 4288, column: 44, scope: !10240)
!10312 = !DILocation(line: 4288, column: 13, scope: !10240)
!10313 = !DILocation(line: 4288, column: 11, scope: !10240)
!10314 = !DILocation(line: 4300, column: 7, scope: !10315)
!10315 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4300, column: 7)
!10316 = !DILocation(line: 4300, column: 30, scope: !10315)
!10317 = !DILocation(line: 4300, column: 33, scope: !10315)
!10318 = !DILocation(line: 4300, column: 44, scope: !10315)
!10319 = !DILocation(line: 4300, column: 41, scope: !10315)
!10320 = !DILocation(line: 4301, column: 7, scope: !10315)
!10321 = !DILocation(line: 4301, column: 11, scope: !10315)
!10322 = !DILocation(line: 4301, column: 16, scope: !10315)
!10323 = !DILocation(line: 4301, column: 22, scope: !10315)
!10324 = !DILocation(line: 4301, column: 25, scope: !10315)
!10325 = !DILocation(line: 4301, column: 30, scope: !10315)
!10326 = !DILocation(line: 4302, column: 7, scope: !10315)
!10327 = !DILocation(line: 4302, column: 14, scope: !10315)
!10328 = !DILocation(line: 4302, column: 26, scope: !10315)
!10329 = !DILocation(line: 4302, column: 29, scope: !10315)
!10330 = !DILocation(line: 4303, column: 6, scope: !10315)
!10331 = !DILocation(line: 4303, column: 10, scope: !10315)
!10332 = !DILocation(line: 4303, column: 22, scope: !10315)
!10333 = !DILocation(line: 4303, column: 25, scope: !10315)
!10334 = !DILocation(line: 4304, column: 7, scope: !10315)
!10335 = !DILocation(line: 4304, column: 56, scope: !10315)
!10336 = !DILocation(line: 4304, column: 62, scope: !10315)
!10337 = !DILocation(line: 4304, column: 67, scope: !10315)
!10338 = !DILocation(line: 4304, column: 22, scope: !10315)
!10339 = !DILocation(line: 4304, column: 20, scope: !10315)
!10340 = !DILocation(line: 4304, column: 12, scope: !10315)
!10341 = !DILocation(line: 4306, column: 7, scope: !10315)
!10342 = !DILocation(line: 4306, column: 31, scope: !10315)
!10343 = !DILocation(line: 4306, column: 12, scope: !10315)
!10344 = !DILocation(line: 4300, column: 7, scope: !10240)
!10345 = !DILocation(line: 4307, column: 67, scope: !10315)
!10346 = !DILocation(line: 4307, column: 49, scope: !10315)
!10347 = !DILocation(line: 4308, column: 7, scope: !10315)
!10348 = !DILocation(line: 4308, column: 13, scope: !10315)
!10349 = !DILocation(line: 4308, column: 18, scope: !10315)
!10350 = !DILocation(line: 4307, column: 12, scope: !10315)
!10351 = !DILocation(line: 4307, column: 5, scope: !10315)
!10352 = !DILocation(line: 4310, column: 9, scope: !10353)
!10353 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4310, column: 7)
!10354 = !DILocation(line: 4310, column: 27, scope: !10353)
!10355 = !DILocation(line: 4310, column: 30, scope: !10353)
!10356 = !DILocation(line: 4310, column: 35, scope: !10353)
!10357 = !DILocation(line: 4310, column: 7, scope: !10240)
!10358 = !DILocation(line: 4311, column: 12, scope: !10353)
!10359 = !DILocation(line: 4311, column: 5, scope: !10353)
!10360 = !DILocation(line: 4313, column: 9, scope: !10361)
!10361 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4313, column: 7)
!10362 = !DILocation(line: 4313, column: 27, scope: !10361)
!10363 = !DILocation(line: 4313, column: 30, scope: !10361)
!10364 = !DILocation(line: 4313, column: 35, scope: !10361)
!10365 = !DILocation(line: 4313, column: 7, scope: !10240)
!10366 = !DILocation(line: 4314, column: 12, scope: !10361)
!10367 = !DILocation(line: 4314, column: 5, scope: !10361)
!10368 = !DILocation(line: 4320, column: 10, scope: !10369)
!10369 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4320, column: 7)
!10370 = !DILocation(line: 4321, column: 8, scope: !10369)
!10371 = !DILocation(line: 4321, column: 11, scope: !10369)
!10372 = !DILocation(line: 4321, column: 16, scope: !10369)
!10373 = !DILocation(line: 4321, column: 24, scope: !10369)
!10374 = !DILocation(line: 4321, column: 27, scope: !10369)
!10375 = !DILocation(line: 4321, column: 32, scope: !10369)
!10376 = !DILocation(line: 4321, column: 40, scope: !10369)
!10377 = !DILocation(line: 4321, column: 43, scope: !10369)
!10378 = !DILocation(line: 4321, column: 48, scope: !10369)
!10379 = !DILocation(line: 4322, column: 8, scope: !10369)
!10380 = !DILocation(line: 4322, column: 13, scope: !10369)
!10381 = !DILocation(line: 4322, column: 18, scope: !10369)
!10382 = !DILocation(line: 4322, column: 24, scope: !10369)
!10383 = !DILocation(line: 4322, column: 27, scope: !10369)
!10384 = !DILocation(line: 4322, column: 32, scope: !10369)
!10385 = !DILocation(line: 4322, column: 38, scope: !10369)
!10386 = !DILocation(line: 4322, column: 41, scope: !10369)
!10387 = !DILocation(line: 4322, column: 46, scope: !10369)
!10388 = !DILocation(line: 4323, column: 5, scope: !10369)
!10389 = !DILocation(line: 4323, column: 10, scope: !10369)
!10390 = !DILocation(line: 4324, column: 7, scope: !10369)
!10391 = !DILocation(line: 4324, column: 23, scope: !10369)
!10392 = !DILocation(line: 4324, column: 32, scope: !10369)
!10393 = !DILocation(line: 4324, column: 10, scope: !10369)
!10394 = !DILocation(line: 4325, column: 7, scope: !10369)
!10395 = !DILocation(line: 4325, column: 28, scope: !10369)
!10396 = !DILocation(line: 4325, column: 12, scope: !10369)
!10397 = !DILocation(line: 4320, column: 7, scope: !10240)
!10398 = !DILocation(line: 4326, column: 31, scope: !10369)
!10399 = !DILocation(line: 4326, column: 12, scope: !10369)
!10400 = !DILocation(line: 4326, column: 5, scope: !10369)
!10401 = !DILocation(line: 4330, column: 7, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4330, column: 7)
!10403 = !DILocation(line: 4330, column: 26, scope: !10402)
!10404 = !DILocation(line: 4331, column: 7, scope: !10402)
!10405 = !DILocation(line: 4331, column: 10, scope: !10402)
!10406 = !DILocation(line: 4331, column: 29, scope: !10402)
!10407 = !DILocation(line: 4332, column: 7, scope: !10402)
!10408 = !DILocation(line: 4332, column: 10, scope: !10402)
!10409 = !DILocation(line: 4330, column: 7, scope: !10240)
!10410 = !DILocalVariable(name: "d0", scope: !10411, file: !1, line: 4334, type: !1676)
!10411 = distinct !DILexicalBlock(scope: !10402, file: !1, line: 4333, column: 5)
!10412 = !DILocation(line: 4334, column: 23, scope: !10411)
!10413 = !DILocalVariable(name: "d1", scope: !10411, file: !1, line: 4334, type: !1676)
!10414 = !DILocation(line: 4334, column: 27, scope: !10411)
!10415 = !DILocation(line: 4336, column: 7, scope: !10411)
!10416 = !DILocation(line: 4337, column: 7, scope: !10411)
!10417 = !DILocation(line: 4340, column: 11, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10411, file: !1, line: 4340, column: 11)
!10419 = !DILocation(line: 4340, column: 33, scope: !10418)
!10420 = !DILocation(line: 4340, column: 36, scope: !10418)
!10421 = !DILocation(line: 4340, column: 11, scope: !10411)
!10422 = !DILocation(line: 4341, column: 10, scope: !10418)
!10423 = !DILocation(line: 4341, column: 2, scope: !10418)
!10424 = !DILocation(line: 4350, column: 13, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10418, file: !1, line: 4342, column: 4)
!10426 = !DILocation(line: 4350, column: 6, scope: !10425)
!10427 = !DILocation(line: 4358, column: 13, scope: !10425)
!10428 = !DILocation(line: 4358, column: 6, scope: !10425)
!10429 = !DILocation(line: 4360, column: 6, scope: !10425)
!10430 = !DILocation(line: 4363, column: 33, scope: !10411)
!10431 = !DILocation(line: 4364, column: 6, scope: !10411)
!10432 = !DILocation(line: 4365, column: 6, scope: !10411)
!10433 = !DILocation(line: 4363, column: 14, scope: !10411)
!10434 = !DILocation(line: 4363, column: 7, scope: !10411)
!10435 = !DILocation(line: 4369, column: 8, scope: !10436)
!10436 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4369, column: 7)
!10437 = !DILocation(line: 4369, column: 30, scope: !10436)
!10438 = !DILocation(line: 4369, column: 42, scope: !10436)
!10439 = !DILocation(line: 4369, column: 45, scope: !10436)
!10440 = !DILocation(line: 4369, column: 50, scope: !10436)
!10441 = !DILocation(line: 4370, column: 8, scope: !10436)
!10442 = !DILocation(line: 4370, column: 12, scope: !10436)
!10443 = !DILocation(line: 4370, column: 31, scope: !10436)
!10444 = !DILocation(line: 4371, column: 5, scope: !10436)
!10445 = !DILocation(line: 4371, column: 8, scope: !10436)
!10446 = !DILocation(line: 4372, column: 8, scope: !10436)
!10447 = !DILocation(line: 4372, column: 12, scope: !10436)
!10448 = !DILocation(line: 4372, column: 31, scope: !10436)
!10449 = !DILocation(line: 4373, column: 5, scope: !10436)
!10450 = !DILocation(line: 4373, column: 8, scope: !10436)
!10451 = !DILocation(line: 4369, column: 7, scope: !10240)
!10452 = !DILocalVariable(name: "width", scope: !10453, file: !1, line: 4375, type: !1518)
!10453 = distinct !DILexicalBlock(scope: !10436, file: !1, line: 4374, column: 5)
!10454 = !DILocation(line: 4375, column: 11, scope: !10453)
!10455 = !DILocation(line: 4375, column: 19, scope: !10453)
!10456 = !DILocalVariable(name: "l0s", scope: !10453, file: !1, line: 4376, type: !1585)
!10457 = !DILocation(line: 4376, column: 21, scope: !10453)
!10458 = !DILocalVariable(name: "h0s", scope: !10453, file: !1, line: 4376, type: !1585)
!10459 = !DILocation(line: 4376, column: 26, scope: !10453)
!10460 = !DILocalVariable(name: "l1s", scope: !10453, file: !1, line: 4376, type: !1585)
!10461 = !DILocation(line: 4376, column: 31, scope: !10453)
!10462 = !DILocalVariable(name: "h1s", scope: !10453, file: !1, line: 4376, type: !1585)
!10463 = !DILocation(line: 4376, column: 36, scope: !10453)
!10464 = !DILocalVariable(name: "l0u", scope: !10453, file: !1, line: 4377, type: !1568)
!10465 = !DILocation(line: 4377, column: 30, scope: !10453)
!10466 = !DILocalVariable(name: "h0u", scope: !10453, file: !1, line: 4377, type: !1568)
!10467 = !DILocation(line: 4377, column: 35, scope: !10453)
!10468 = !DILocalVariable(name: "l1u", scope: !10453, file: !1, line: 4377, type: !1568)
!10469 = !DILocation(line: 4377, column: 40, scope: !10453)
!10470 = !DILocalVariable(name: "h1u", scope: !10453, file: !1, line: 4377, type: !1568)
!10471 = !DILocation(line: 4377, column: 45, scope: !10453)
!10472 = !DILocation(line: 4380, column: 11, scope: !10473)
!10473 = distinct !DILexicalBlock(scope: !10453, file: !1, line: 4380, column: 11)
!10474 = !DILocation(line: 4380, column: 30, scope: !10473)
!10475 = !DILocation(line: 4380, column: 11, scope: !10453)
!10476 = !DILocation(line: 4382, column: 16, scope: !10477)
!10477 = distinct !DILexicalBlock(scope: !10473, file: !1, line: 4381, column: 2)
!10478 = !DILocation(line: 4382, column: 14, scope: !10477)
!10479 = !DILocation(line: 4382, column: 8, scope: !10477)
!10480 = !DILocation(line: 4383, column: 16, scope: !10477)
!10481 = !DILocation(line: 4383, column: 14, scope: !10477)
!10482 = !DILocation(line: 4383, column: 8, scope: !10477)
!10483 = !DILocation(line: 4384, column: 2, scope: !10477)
!10484 = !DILocation(line: 4387, column: 16, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10473, file: !1, line: 4386, column: 2)
!10486 = !DILocation(line: 4387, column: 14, scope: !10485)
!10487 = !DILocation(line: 4387, column: 8, scope: !10485)
!10488 = !DILocation(line: 4388, column: 16, scope: !10485)
!10489 = !DILocation(line: 4388, column: 14, scope: !10485)
!10490 = !DILocation(line: 4388, column: 8, scope: !10485)
!10491 = !DILocation(line: 4391, column: 11, scope: !10492)
!10492 = distinct !DILexicalBlock(scope: !10453, file: !1, line: 4391, column: 11)
!10493 = !DILocation(line: 4391, column: 30, scope: !10492)
!10494 = !DILocation(line: 4391, column: 11, scope: !10453)
!10495 = !DILocation(line: 4393, column: 16, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10492, file: !1, line: 4392, column: 2)
!10497 = !DILocation(line: 4393, column: 14, scope: !10496)
!10498 = !DILocation(line: 4393, column: 8, scope: !10496)
!10499 = !DILocation(line: 4394, column: 16, scope: !10496)
!10500 = !DILocation(line: 4394, column: 14, scope: !10496)
!10501 = !DILocation(line: 4394, column: 8, scope: !10496)
!10502 = !DILocation(line: 4395, column: 2, scope: !10496)
!10503 = !DILocation(line: 4398, column: 16, scope: !10504)
!10504 = distinct !DILexicalBlock(scope: !10492, file: !1, line: 4397, column: 2)
!10505 = !DILocation(line: 4398, column: 14, scope: !10504)
!10506 = !DILocation(line: 4398, column: 8, scope: !10504)
!10507 = !DILocation(line: 4399, column: 16, scope: !10504)
!10508 = !DILocation(line: 4399, column: 14, scope: !10504)
!10509 = !DILocation(line: 4399, column: 8, scope: !10504)
!10510 = !DILocation(line: 4404, column: 11, scope: !10511)
!10511 = distinct !DILexicalBlock(scope: !10453, file: !1, line: 4404, column: 11)
!10512 = !DILocation(line: 4404, column: 17, scope: !10511)
!10513 = !DILocation(line: 4404, column: 22, scope: !10511)
!10514 = !DILocation(line: 4404, column: 25, scope: !10511)
!10515 = !DILocation(line: 4404, column: 31, scope: !10511)
!10516 = !DILocation(line: 4404, column: 11, scope: !10453)
!10517 = !DILocation(line: 4406, column: 33, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10511, file: !1, line: 4405, column: 2)
!10519 = !DILocation(line: 4406, column: 30, scope: !10518)
!10520 = !DILocation(line: 4406, column: 40, scope: !10518)
!10521 = !DILocation(line: 4406, column: 8, scope: !10518)
!10522 = !DILocation(line: 4407, column: 33, scope: !10518)
!10523 = !DILocation(line: 4407, column: 30, scope: !10518)
!10524 = !DILocation(line: 4407, column: 40, scope: !10518)
!10525 = !DILocation(line: 4407, column: 8, scope: !10518)
!10526 = !DILocation(line: 4409, column: 8, scope: !10527)
!10527 = distinct !DILexicalBlock(scope: !10518, file: !1, line: 4409, column: 8)
!10528 = !DILocation(line: 4409, column: 37, scope: !10527)
!10529 = !DILocation(line: 4409, column: 43, scope: !10527)
!10530 = !DILocation(line: 4409, column: 33, scope: !10527)
!10531 = !DILocation(line: 4409, column: 12, scope: !10527)
!10532 = !DILocation(line: 4409, column: 8, scope: !10518)
!10533 = !DILocation(line: 4410, column: 38, scope: !10527)
!10534 = !DILocation(line: 4410, column: 35, scope: !10527)
!10535 = !DILocation(line: 4410, column: 10, scope: !10527)
!10536 = !DILocation(line: 4410, column: 6, scope: !10527)
!10537 = !DILocation(line: 4412, column: 8, scope: !10538)
!10538 = distinct !DILexicalBlock(scope: !10518, file: !1, line: 4412, column: 8)
!10539 = !DILocation(line: 4412, column: 37, scope: !10538)
!10540 = !DILocation(line: 4412, column: 43, scope: !10538)
!10541 = !DILocation(line: 4412, column: 33, scope: !10538)
!10542 = !DILocation(line: 4412, column: 12, scope: !10538)
!10543 = !DILocation(line: 4412, column: 8, scope: !10518)
!10544 = !DILocation(line: 4413, column: 38, scope: !10538)
!10545 = !DILocation(line: 4413, column: 35, scope: !10538)
!10546 = !DILocation(line: 4413, column: 10, scope: !10538)
!10547 = !DILocation(line: 4413, column: 6, scope: !10538)
!10548 = !DILocation(line: 4414, column: 2, scope: !10518)
!10549 = !DILocation(line: 4415, column: 11, scope: !10550)
!10550 = distinct !DILexicalBlock(scope: !10453, file: !1, line: 4415, column: 11)
!10551 = !DILocation(line: 4415, column: 17, scope: !10550)
!10552 = !DILocation(line: 4415, column: 22, scope: !10550)
!10553 = !DILocation(line: 4415, column: 25, scope: !10550)
!10554 = !DILocation(line: 4415, column: 31, scope: !10550)
!10555 = !DILocation(line: 4415, column: 11, scope: !10453)
!10556 = !DILocation(line: 4416, column: 12, scope: !10550)
!10557 = !DILocation(line: 4416, column: 6, scope: !10550)
!10558 = !DILocation(line: 4416, column: 23, scope: !10550)
!10559 = !DILocation(line: 4416, column: 21, scope: !10550)
!10560 = !DILocation(line: 4416, column: 52, scope: !10550)
!10561 = !DILocation(line: 4416, column: 50, scope: !10550)
!10562 = !DILocation(line: 4416, column: 2, scope: !10550)
!10563 = !DILocation(line: 4418, column: 11, scope: !10564)
!10564 = distinct !DILexicalBlock(scope: !10453, file: !1, line: 4418, column: 11)
!10565 = !DILocation(line: 4418, column: 18, scope: !10564)
!10566 = !DILocation(line: 4418, column: 15, scope: !10564)
!10567 = !DILocation(line: 4418, column: 22, scope: !10564)
!10568 = !DILocation(line: 4418, column: 25, scope: !10564)
!10569 = !DILocation(line: 4418, column: 32, scope: !10564)
!10570 = !DILocation(line: 4418, column: 29, scope: !10564)
!10571 = !DILocation(line: 4418, column: 11, scope: !10453)
!10572 = !DILocation(line: 4419, column: 28, scope: !10564)
!10573 = !DILocation(line: 4419, column: 9, scope: !10564)
!10574 = !DILocation(line: 4419, column: 2, scope: !10564)
!10575 = !DILocalVariable(name: "cr", scope: !10576, file: !1, line: 4422, type: !1518)
!10576 = distinct !DILexicalBlock(scope: !10564, file: !1, line: 4421, column: 2)
!10577 = !DILocation(line: 4422, column: 8, scope: !10576)
!10578 = !DILocation(line: 4423, column: 10, scope: !10576)
!10579 = !DILocation(line: 4423, column: 16, scope: !10576)
!10580 = !DILocation(line: 4423, column: 14, scope: !10576)
!10581 = !DILocation(line: 4423, column: 20, scope: !10576)
!10582 = !DILocation(line: 4423, column: 24, scope: !10576)
!10583 = !DILocation(line: 4423, column: 31, scope: !10576)
!10584 = !DILocation(line: 4423, column: 28, scope: !10576)
!10585 = !DILocation(line: 4423, column: 35, scope: !10576)
!10586 = !DILocation(line: 4423, column: 38, scope: !10576)
!10587 = !DILocation(line: 4423, column: 44, scope: !10576)
!10588 = !DILocation(line: 4423, column: 42, scope: !10576)
!10589 = !DILocation(line: 0, scope: !10576)
!10590 = !DILocation(line: 4423, column: 9, scope: !10576)
!10591 = !DILocation(line: 4423, column: 7, scope: !10576)
!10592 = !DILocation(line: 4424, column: 11, scope: !10576)
!10593 = !DILocation(line: 4424, column: 17, scope: !10576)
!10594 = !DILocation(line: 4424, column: 15, scope: !10576)
!10595 = !DILocation(line: 4424, column: 21, scope: !10576)
!10596 = !DILocation(line: 4424, column: 25, scope: !10576)
!10597 = !DILocation(line: 4424, column: 32, scope: !10576)
!10598 = !DILocation(line: 4424, column: 29, scope: !10576)
!10599 = !DILocation(line: 4424, column: 36, scope: !10576)
!10600 = !DILocation(line: 4424, column: 39, scope: !10576)
!10601 = !DILocation(line: 4424, column: 45, scope: !10576)
!10602 = !DILocation(line: 4424, column: 43, scope: !10576)
!10603 = !DILocation(line: 4424, column: 10, scope: !10576)
!10604 = !DILocation(line: 4424, column: 7, scope: !10576)
!10605 = !DILocation(line: 4425, column: 30, scope: !10576)
!10606 = !DILocation(line: 4425, column: 36, scope: !10576)
!10607 = !DILocation(line: 4425, column: 11, scope: !10576)
!10608 = !DILocation(line: 4425, column: 4, scope: !10576)
!10609 = !DILocation(line: 4430, column: 7, scope: !10610)
!10610 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4430, column: 7)
!10611 = !DILocation(line: 4431, column: 7, scope: !10610)
!10612 = !DILocation(line: 4431, column: 10, scope: !10610)
!10613 = !DILocation(line: 4431, column: 34, scope: !10610)
!10614 = !DILocation(line: 4432, column: 7, scope: !10610)
!10615 = !DILocation(line: 4432, column: 10, scope: !10610)
!10616 = !DILocation(line: 4430, column: 7, scope: !10240)
!10617 = !DILocalVariable(name: "sign", scope: !10618, file: !1, line: 4434, type: !1518)
!10618 = distinct !DILexicalBlock(scope: !10610, file: !1, line: 4433, column: 5)
!10619 = !DILocation(line: 4434, column: 11, scope: !10618)
!10620 = !DILocalVariable(name: "nonzero", scope: !10618, file: !1, line: 4435, type: !1568)
!10621 = !DILocation(line: 4435, column: 30, scope: !10618)
!10622 = !DILocation(line: 4435, column: 54, scope: !10618)
!10623 = !DILocation(line: 4435, column: 63, scope: !10618)
!10624 = !DILocation(line: 4435, column: 40, scope: !10618)
!10625 = !DILocalVariable(name: "val", scope: !10618, file: !1, line: 4436, type: !1585)
!10626 = !DILocation(line: 4436, column: 21, scope: !10618)
!10627 = !DILocation(line: 4436, column: 27, scope: !10618)
!10628 = !DILocalVariable(name: "mmin", scope: !10618, file: !1, line: 4437, type: !1585)
!10629 = !DILocation(line: 4437, column: 21, scope: !10618)
!10630 = !DILocalVariable(name: "mmax", scope: !10618, file: !1, line: 4437, type: !1585)
!10631 = !DILocation(line: 4437, column: 27, scope: !10618)
!10632 = !DILocation(line: 4439, column: 11, scope: !10633)
!10633 = distinct !DILexicalBlock(scope: !10618, file: !1, line: 4439, column: 11)
!10634 = !DILocation(line: 4439, column: 16, scope: !10633)
!10635 = !DILocation(line: 4440, column: 4, scope: !10633)
!10636 = !DILocation(line: 4440, column: 7, scope: !10633)
!10637 = !DILocation(line: 4440, column: 12, scope: !10633)
!10638 = !DILocation(line: 4441, column: 4, scope: !10633)
!10639 = !DILocation(line: 4441, column: 7, scope: !10633)
!10640 = !DILocation(line: 4441, column: 12, scope: !10633)
!10641 = !DILocation(line: 4442, column: 4, scope: !10633)
!10642 = !DILocation(line: 4442, column: 7, scope: !10633)
!10643 = !DILocation(line: 4442, column: 12, scope: !10633)
!10644 = !DILocation(line: 4439, column: 11, scope: !10618)
!10645 = !DILocation(line: 4443, column: 7, scope: !10633)
!10646 = !DILocation(line: 4443, column: 2, scope: !10633)
!10647 = !DILocation(line: 4445, column: 7, scope: !10633)
!10648 = !DILocation(line: 4448, column: 11, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10618, file: !1, line: 4448, column: 11)
!10650 = !DILocation(line: 4448, column: 23, scope: !10649)
!10651 = !DILocation(line: 4448, column: 44, scope: !10649)
!10652 = !DILocation(line: 4448, column: 19, scope: !10649)
!10653 = !DILocation(line: 4448, column: 11, scope: !10618)
!10654 = !DILocation(line: 4450, column: 9, scope: !10655)
!10655 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 4449, column: 2)
!10656 = !DILocation(line: 4451, column: 11, scope: !10655)
!10657 = !DILocation(line: 4451, column: 9, scope: !10655)
!10658 = !DILocation(line: 4452, column: 2, scope: !10655)
!10659 = !DILocalVariable(name: "mmin_rtx", scope: !10660, file: !1, line: 4455, type: !1495)
!10660 = distinct !DILexicalBlock(scope: !10649, file: !1, line: 4454, column: 2)
!10661 = !DILocation(line: 4455, column: 8, scope: !10660)
!10662 = !DILocalVariable(name: "mmax_rtx", scope: !10660, file: !1, line: 4455, type: !1495)
!10663 = !DILocation(line: 4455, column: 18, scope: !10660)
!10664 = !DILocation(line: 4456, column: 21, scope: !10660)
!10665 = !DILocation(line: 4456, column: 27, scope: !10660)
!10666 = !DILocation(line: 4456, column: 33, scope: !10660)
!10667 = !DILocation(line: 4456, column: 4, scope: !10660)
!10668 = !DILocation(line: 4458, column: 11, scope: !10660)
!10669 = !DILocation(line: 4458, column: 9, scope: !10660)
!10670 = !DILocation(line: 4459, column: 11, scope: !10660)
!10671 = !DILocation(line: 4459, column: 9, scope: !10660)
!10672 = !DILocation(line: 4460, column: 8, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10660, file: !1, line: 4460, column: 8)
!10674 = !DILocation(line: 4460, column: 8, scope: !10660)
!10675 = !DILocalVariable(name: "sign_copies", scope: !10676, file: !1, line: 4462, type: !5)
!10676 = distinct !DILexicalBlock(scope: !10673, file: !1, line: 4461, column: 6)
!10677 = !DILocation(line: 4462, column: 21, scope: !10676)
!10678 = !DILocation(line: 4462, column: 56, scope: !10676)
!10679 = !DILocation(line: 4462, column: 65, scope: !10676)
!10680 = !DILocation(line: 4462, column: 35, scope: !10676)
!10681 = !DILocation(line: 4464, column: 18, scope: !10676)
!10682 = !DILocation(line: 4464, column: 30, scope: !10676)
!10683 = !DILocation(line: 4464, column: 13, scope: !10676)
!10684 = !DILocation(line: 4465, column: 18, scope: !10676)
!10685 = !DILocation(line: 4465, column: 30, scope: !10676)
!10686 = !DILocation(line: 4465, column: 13, scope: !10676)
!10687 = !DILocation(line: 4466, column: 6, scope: !10676)
!10688 = !DILocation(line: 4469, column: 15, scope: !10618)
!10689 = !DILocation(line: 4469, column: 7, scope: !10618)
!10690 = !DILocation(line: 4473, column: 33, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4473, column: 8)
!10692 = distinct !DILexicalBlock(scope: !10618, file: !1, line: 4470, column: 2)
!10693 = !DILocation(line: 4473, column: 65, scope: !10691)
!10694 = !DILocation(line: 4473, column: 37, scope: !10691)
!10695 = !DILocation(line: 4473, column: 8, scope: !10692)
!10696 = !DILocation(line: 4474, column: 13, scope: !10691)
!10697 = !DILocation(line: 4474, column: 6, scope: !10691)
!10698 = !DILocation(line: 4475, column: 33, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4475, column: 8)
!10700 = !DILocation(line: 4475, column: 64, scope: !10699)
!10701 = !DILocation(line: 4475, column: 37, scope: !10699)
!10702 = !DILocation(line: 4475, column: 8, scope: !10692)
!10703 = !DILocation(line: 4476, column: 13, scope: !10699)
!10704 = !DILocation(line: 4476, column: 6, scope: !10699)
!10705 = !DILocation(line: 4477, column: 4, scope: !10692)
!10706 = !DILocation(line: 4479, column: 8, scope: !10707)
!10707 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4479, column: 8)
!10708 = !DILocation(line: 4479, column: 15, scope: !10707)
!10709 = !DILocation(line: 4479, column: 12, scope: !10707)
!10710 = !DILocation(line: 4479, column: 8, scope: !10692)
!10711 = !DILocation(line: 4480, column: 13, scope: !10707)
!10712 = !DILocation(line: 4480, column: 6, scope: !10707)
!10713 = !DILocation(line: 4481, column: 8, scope: !10714)
!10714 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4481, column: 8)
!10715 = !DILocation(line: 4481, column: 14, scope: !10714)
!10716 = !DILocation(line: 4481, column: 12, scope: !10714)
!10717 = !DILocation(line: 4481, column: 8, scope: !10692)
!10718 = !DILocation(line: 4482, column: 13, scope: !10714)
!10719 = !DILocation(line: 4482, column: 6, scope: !10714)
!10720 = !DILocation(line: 4483, column: 4, scope: !10692)
!10721 = !DILocation(line: 4487, column: 33, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4487, column: 8)
!10723 = !DILocation(line: 4487, column: 65, scope: !10722)
!10724 = !DILocation(line: 4487, column: 37, scope: !10722)
!10725 = !DILocation(line: 4487, column: 8, scope: !10692)
!10726 = !DILocation(line: 4488, column: 13, scope: !10722)
!10727 = !DILocation(line: 4488, column: 6, scope: !10722)
!10728 = !DILocation(line: 4489, column: 33, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4489, column: 8)
!10730 = !DILocation(line: 4489, column: 64, scope: !10729)
!10731 = !DILocation(line: 4489, column: 37, scope: !10729)
!10732 = !DILocation(line: 4489, column: 8, scope: !10692)
!10733 = !DILocation(line: 4490, column: 13, scope: !10729)
!10734 = !DILocation(line: 4490, column: 6, scope: !10729)
!10735 = !DILocation(line: 4491, column: 4, scope: !10692)
!10736 = !DILocation(line: 4493, column: 8, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4493, column: 8)
!10738 = !DILocation(line: 4493, column: 15, scope: !10737)
!10739 = !DILocation(line: 4493, column: 12, scope: !10737)
!10740 = !DILocation(line: 4493, column: 8, scope: !10692)
!10741 = !DILocation(line: 4494, column: 13, scope: !10737)
!10742 = !DILocation(line: 4494, column: 6, scope: !10737)
!10743 = !DILocation(line: 4495, column: 8, scope: !10744)
!10744 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4495, column: 8)
!10745 = !DILocation(line: 4495, column: 14, scope: !10744)
!10746 = !DILocation(line: 4495, column: 12, scope: !10744)
!10747 = !DILocation(line: 4495, column: 8, scope: !10692)
!10748 = !DILocation(line: 4496, column: 13, scope: !10744)
!10749 = !DILocation(line: 4496, column: 6, scope: !10744)
!10750 = !DILocation(line: 4497, column: 4, scope: !10692)
!10751 = !DILocation(line: 4501, column: 8, scope: !10752)
!10752 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4501, column: 8)
!10753 = !DILocation(line: 4501, column: 14, scope: !10752)
!10754 = !DILocation(line: 4501, column: 12, scope: !10752)
!10755 = !DILocation(line: 4501, column: 19, scope: !10752)
!10756 = !DILocation(line: 4501, column: 22, scope: !10752)
!10757 = !DILocation(line: 4501, column: 28, scope: !10752)
!10758 = !DILocation(line: 4501, column: 26, scope: !10752)
!10759 = !DILocation(line: 4501, column: 8, scope: !10692)
!10760 = !DILocation(line: 4502, column: 13, scope: !10752)
!10761 = !DILocation(line: 4502, column: 6, scope: !10752)
!10762 = !DILocation(line: 4503, column: 4, scope: !10692)
!10763 = !DILocation(line: 4507, column: 33, scope: !10764)
!10764 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4507, column: 8)
!10765 = !DILocation(line: 4507, column: 65, scope: !10764)
!10766 = !DILocation(line: 4507, column: 37, scope: !10764)
!10767 = !DILocation(line: 4507, column: 8, scope: !10692)
!10768 = !DILocation(line: 4508, column: 13, scope: !10764)
!10769 = !DILocation(line: 4508, column: 6, scope: !10764)
!10770 = !DILocation(line: 4509, column: 33, scope: !10771)
!10771 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4509, column: 8)
!10772 = !DILocation(line: 4509, column: 64, scope: !10771)
!10773 = !DILocation(line: 4509, column: 37, scope: !10771)
!10774 = !DILocation(line: 4509, column: 8, scope: !10692)
!10775 = !DILocation(line: 4510, column: 13, scope: !10771)
!10776 = !DILocation(line: 4510, column: 6, scope: !10771)
!10777 = !DILocation(line: 4511, column: 4, scope: !10692)
!10778 = !DILocation(line: 4513, column: 8, scope: !10779)
!10779 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4513, column: 8)
!10780 = !DILocation(line: 4513, column: 15, scope: !10779)
!10781 = !DILocation(line: 4513, column: 12, scope: !10779)
!10782 = !DILocation(line: 4513, column: 8, scope: !10692)
!10783 = !DILocation(line: 4514, column: 13, scope: !10779)
!10784 = !DILocation(line: 4514, column: 6, scope: !10779)
!10785 = !DILocation(line: 4515, column: 8, scope: !10786)
!10786 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4515, column: 8)
!10787 = !DILocation(line: 4515, column: 14, scope: !10786)
!10788 = !DILocation(line: 4515, column: 12, scope: !10786)
!10789 = !DILocation(line: 4515, column: 8, scope: !10692)
!10790 = !DILocation(line: 4516, column: 13, scope: !10786)
!10791 = !DILocation(line: 4516, column: 6, scope: !10786)
!10792 = !DILocation(line: 4517, column: 4, scope: !10692)
!10793 = !DILocation(line: 4521, column: 33, scope: !10794)
!10794 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4521, column: 8)
!10795 = !DILocation(line: 4521, column: 65, scope: !10794)
!10796 = !DILocation(line: 4521, column: 37, scope: !10794)
!10797 = !DILocation(line: 4521, column: 8, scope: !10692)
!10798 = !DILocation(line: 4522, column: 13, scope: !10794)
!10799 = !DILocation(line: 4522, column: 6, scope: !10794)
!10800 = !DILocation(line: 4523, column: 33, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4523, column: 8)
!10802 = !DILocation(line: 4523, column: 64, scope: !10801)
!10803 = !DILocation(line: 4523, column: 37, scope: !10801)
!10804 = !DILocation(line: 4523, column: 8, scope: !10692)
!10805 = !DILocation(line: 4524, column: 13, scope: !10801)
!10806 = !DILocation(line: 4524, column: 6, scope: !10801)
!10807 = !DILocation(line: 4525, column: 4, scope: !10692)
!10808 = !DILocation(line: 4527, column: 8, scope: !10809)
!10809 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4527, column: 8)
!10810 = !DILocation(line: 4527, column: 15, scope: !10809)
!10811 = !DILocation(line: 4527, column: 12, scope: !10809)
!10812 = !DILocation(line: 4527, column: 8, scope: !10692)
!10813 = !DILocation(line: 4528, column: 13, scope: !10809)
!10814 = !DILocation(line: 4528, column: 6, scope: !10809)
!10815 = !DILocation(line: 4529, column: 8, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4529, column: 8)
!10817 = !DILocation(line: 4529, column: 14, scope: !10816)
!10818 = !DILocation(line: 4529, column: 12, scope: !10816)
!10819 = !DILocation(line: 4529, column: 8, scope: !10692)
!10820 = !DILocation(line: 4530, column: 13, scope: !10816)
!10821 = !DILocation(line: 4530, column: 6, scope: !10816)
!10822 = !DILocation(line: 4531, column: 4, scope: !10692)
!10823 = !DILocation(line: 4535, column: 8, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10692, file: !1, line: 4535, column: 8)
!10825 = !DILocation(line: 4535, column: 14, scope: !10824)
!10826 = !DILocation(line: 4535, column: 12, scope: !10824)
!10827 = !DILocation(line: 4535, column: 19, scope: !10824)
!10828 = !DILocation(line: 4535, column: 22, scope: !10824)
!10829 = !DILocation(line: 4535, column: 28, scope: !10824)
!10830 = !DILocation(line: 4535, column: 26, scope: !10824)
!10831 = !DILocation(line: 4535, column: 8, scope: !10692)
!10832 = !DILocation(line: 4536, column: 13, scope: !10824)
!10833 = !DILocation(line: 4536, column: 6, scope: !10824)
!10834 = !DILocation(line: 4537, column: 4, scope: !10692)
!10835 = !DILocation(line: 4540, column: 4, scope: !10692)
!10836 = !DILocation(line: 4542, column: 5, scope: !10618)
!10837 = !DILocation(line: 4545, column: 7, scope: !10838)
!10838 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4545, column: 7)
!10839 = !DILocation(line: 4545, column: 18, scope: !10838)
!10840 = !DILocation(line: 4545, column: 15, scope: !10838)
!10841 = !DILocation(line: 4545, column: 7, scope: !10240)
!10842 = !DILocation(line: 4549, column: 30, scope: !10843)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !1, line: 4549, column: 11)
!10844 = distinct !DILexicalBlock(scope: !10838, file: !1, line: 4546, column: 5)
!10845 = !DILocation(line: 4549, column: 11, scope: !10843)
!10846 = !DILocation(line: 4549, column: 11, scope: !10844)
!10847 = !DILocation(line: 4551, column: 8, scope: !10848)
!10848 = distinct !DILexicalBlock(scope: !10849, file: !1, line: 4551, column: 8)
!10849 = distinct !DILexicalBlock(scope: !10843, file: !1, line: 4550, column: 2)
!10850 = !DILocation(line: 4551, column: 13, scope: !10848)
!10851 = !DILocation(line: 4551, column: 19, scope: !10848)
!10852 = !DILocation(line: 4551, column: 22, scope: !10848)
!10853 = !DILocation(line: 4551, column: 27, scope: !10848)
!10854 = !DILocation(line: 4551, column: 8, scope: !10849)
!10855 = !DILocation(line: 4552, column: 13, scope: !10848)
!10856 = !DILocation(line: 4552, column: 6, scope: !10848)
!10857 = !DILocation(line: 4553, column: 8, scope: !10858)
!10858 = distinct !DILexicalBlock(scope: !10849, file: !1, line: 4553, column: 8)
!10859 = !DILocation(line: 4553, column: 13, scope: !10858)
!10860 = !DILocation(line: 4553, column: 19, scope: !10858)
!10861 = !DILocation(line: 4553, column: 22, scope: !10858)
!10862 = !DILocation(line: 4553, column: 27, scope: !10858)
!10863 = !DILocation(line: 4553, column: 8, scope: !10849)
!10864 = !DILocation(line: 4554, column: 13, scope: !10858)
!10865 = !DILocation(line: 4554, column: 6, scope: !10858)
!10866 = !DILocation(line: 4555, column: 2, scope: !10849)
!10867 = !DILocation(line: 4559, column: 11, scope: !10868)
!10868 = distinct !DILexicalBlock(scope: !10844, file: !1, line: 4559, column: 11)
!10869 = !DILocation(line: 4559, column: 26, scope: !10868)
!10870 = !DILocation(line: 4559, column: 11, scope: !10844)
!10871 = !DILocalVariable(name: "inner_const", scope: !10872, file: !1, line: 4561, type: !1495)
!10872 = distinct !DILexicalBlock(scope: !10868, file: !1, line: 4560, column: 2)
!10873 = !DILocation(line: 4561, column: 8, scope: !10872)
!10874 = !DILocation(line: 4561, column: 53, scope: !10872)
!10875 = !DILocation(line: 4561, column: 22, scope: !10872)
!10876 = !DILocation(line: 4562, column: 8, scope: !10877)
!10877 = distinct !DILexicalBlock(scope: !10872, file: !1, line: 4562, column: 8)
!10878 = !DILocation(line: 4562, column: 34, scope: !10877)
!10879 = !DILocation(line: 4562, column: 37, scope: !10877)
!10880 = !DILocation(line: 4562, column: 52, scope: !10877)
!10881 = !DILocation(line: 4562, column: 49, scope: !10877)
!10882 = !DILocation(line: 4562, column: 8, scope: !10872)
!10883 = !DILocalVariable(name: "sign_bitnum", scope: !10884, file: !1, line: 4564, type: !1518)
!10884 = distinct !DILexicalBlock(scope: !10877, file: !1, line: 4563, column: 6)
!10885 = !DILocation(line: 4564, column: 12, scope: !10884)
!10886 = !DILocation(line: 4564, column: 26, scope: !10884)
!10887 = !DILocation(line: 4564, column: 50, scope: !10884)
!10888 = !DILocalVariable(name: "has_sign", scope: !10884, file: !1, line: 4565, type: !1518)
!10889 = !DILocation(line: 4565, column: 12, scope: !10884)
!10890 = !DILocation(line: 4565, column: 50, scope: !10884)
!10891 = !DILocation(line: 4565, column: 47, scope: !10884)
!10892 = !DILocation(line: 4566, column: 10, scope: !10884)
!10893 = !DILocation(line: 4566, column: 14, scope: !10884)
!10894 = !DILocation(line: 4567, column: 31, scope: !10884)
!10895 = !DILocation(line: 4567, column: 28, scope: !10884)
!10896 = !DILocation(line: 4567, column: 7, scope: !10884)
!10897 = !DILocation(line: 0, scope: !10884)
!10898 = !DILocation(line: 4569, column: 16, scope: !10884)
!10899 = !DILocation(line: 4569, column: 8, scope: !10884)
!10900 = !DILocation(line: 4573, column: 12, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10884, file: !1, line: 4570, column: 3)
!10902 = !DILocation(line: 4573, column: 5, scope: !10901)
!10903 = !DILocation(line: 4576, column: 12, scope: !10901)
!10904 = !DILocation(line: 4576, column: 5, scope: !10901)
!10905 = !DILocation(line: 4579, column: 9, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10901, file: !1, line: 4579, column: 9)
!10907 = !DILocation(line: 4579, column: 9, scope: !10901)
!10908 = !DILocation(line: 4580, column: 14, scope: !10906)
!10909 = !DILocation(line: 4580, column: 7, scope: !10906)
!10910 = !DILocation(line: 4581, column: 5, scope: !10901)
!10911 = !DILocation(line: 4584, column: 9, scope: !10912)
!10912 = distinct !DILexicalBlock(scope: !10901, file: !1, line: 4584, column: 9)
!10913 = !DILocation(line: 4584, column: 9, scope: !10901)
!10914 = !DILocation(line: 4585, column: 14, scope: !10912)
!10915 = !DILocation(line: 4585, column: 7, scope: !10912)
!10916 = !DILocation(line: 4586, column: 5, scope: !10901)
!10917 = !DILocation(line: 4588, column: 5, scope: !10901)
!10918 = !DILocation(line: 4590, column: 6, scope: !10884)
!10919 = !DILocation(line: 4591, column: 2, scope: !10872)
!10920 = !DILocation(line: 4592, column: 5, scope: !10844)
!10921 = !DILocation(line: 4595, column: 7, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10240, file: !1, line: 4595, column: 7)
!10923 = !DILocation(line: 4595, column: 18, scope: !10922)
!10924 = !DILocation(line: 4595, column: 15, scope: !10922)
!10925 = !DILocation(line: 4596, column: 7, scope: !10922)
!10926 = !DILocation(line: 4596, column: 11, scope: !10922)
!10927 = !DILocation(line: 4596, column: 30, scope: !10922)
!10928 = !DILocation(line: 4597, column: 4, scope: !10922)
!10929 = !DILocation(line: 4597, column: 8, scope: !10922)
!10930 = !DILocation(line: 4597, column: 27, scope: !10922)
!10931 = !DILocation(line: 4598, column: 8, scope: !10922)
!10932 = !DILocation(line: 4598, column: 11, scope: !10922)
!10933 = !DILocation(line: 4598, column: 40, scope: !10922)
!10934 = !DILocation(line: 4595, column: 7, scope: !10240)
!10935 = !DILocation(line: 4600, column: 15, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10922, file: !1, line: 4599, column: 5)
!10937 = !DILocation(line: 4600, column: 7, scope: !10936)
!10938 = !DILocation(line: 4604, column: 9, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10940, file: !1, line: 4604, column: 8)
!10940 = distinct !DILexicalBlock(scope: !10936, file: !1, line: 4601, column: 2)
!10941 = !DILocation(line: 4605, column: 8, scope: !10939)
!10942 = !DILocation(line: 4605, column: 13, scope: !10939)
!10943 = !DILocation(line: 4606, column: 5, scope: !10939)
!10944 = !DILocation(line: 4606, column: 10, scope: !10939)
!10945 = !DILocation(line: 4606, column: 21, scope: !10939)
!10946 = !DILocation(line: 4606, column: 25, scope: !10939)
!10947 = !DILocation(line: 4606, column: 36, scope: !10939)
!10948 = !DILocation(line: 4606, column: 39, scope: !10939)
!10949 = !DILocation(line: 4604, column: 8, scope: !10940)
!10950 = !DILocation(line: 4608, column: 12, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10952, file: !1, line: 4608, column: 12)
!10952 = distinct !DILexicalBlock(scope: !10939, file: !1, line: 4607, column: 6)
!10953 = !DILocation(line: 4609, column: 5, scope: !10951)
!10954 = !DILocation(line: 4609, column: 9, scope: !10951)
!10955 = !DILocation(line: 4608, column: 12, scope: !10952)
!10956 = !DILocation(line: 4611, column: 3, scope: !10951)
!10957 = !DILocation(line: 4614, column: 16, scope: !10952)
!10958 = !DILocation(line: 4614, column: 9, scope: !10952)
!10959 = !DILocation(line: 4616, column: 4, scope: !10940)
!10960 = !DILocation(line: 4620, column: 9, scope: !10961)
!10961 = distinct !DILexicalBlock(scope: !10940, file: !1, line: 4620, column: 8)
!10962 = !DILocation(line: 4621, column: 8, scope: !10961)
!10963 = !DILocation(line: 4621, column: 13, scope: !10961)
!10964 = !DILocation(line: 4622, column: 5, scope: !10961)
!10965 = !DILocation(line: 4622, column: 10, scope: !10961)
!10966 = !DILocation(line: 4622, column: 21, scope: !10961)
!10967 = !DILocation(line: 4622, column: 25, scope: !10961)
!10968 = !DILocation(line: 4622, column: 36, scope: !10961)
!10969 = !DILocation(line: 4622, column: 39, scope: !10961)
!10970 = !DILocation(line: 4620, column: 8, scope: !10940)
!10971 = !DILocation(line: 4624, column: 12, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10973, file: !1, line: 4624, column: 12)
!10973 = distinct !DILexicalBlock(scope: !10961, file: !1, line: 4623, column: 6)
!10974 = !DILocation(line: 4625, column: 12, scope: !10972)
!10975 = !DILocation(line: 4625, column: 16, scope: !10972)
!10976 = !DILocation(line: 4624, column: 12, scope: !10973)
!10977 = !DILocation(line: 4627, column: 10, scope: !10972)
!10978 = !DILocation(line: 4630, column: 15, scope: !10973)
!10979 = !DILocation(line: 4630, column: 8, scope: !10973)
!10980 = !DILocation(line: 4632, column: 4, scope: !10940)
!10981 = !DILocation(line: 4636, column: 11, scope: !10940)
!10982 = !DILocation(line: 4636, column: 4, scope: !10940)
!10983 = !DILocation(line: 4639, column: 4, scope: !10940)
!10984 = !DILocation(line: 4641, column: 5, scope: !10936)
!10985 = !DILocation(line: 4643, column: 3, scope: !10240)
!10986 = !DILocation(line: 4644, column: 1, scope: !10240)
!10987 = distinct !DISubprogram(name: "simplify_relational_operation_1", scope: !1, file: !1, line: 3999, type: !4084, scopeLine: 4001, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!10988 = !DILocalVariable(name: "code", arg: 1, scope: !10987, file: !1, line: 3999, type: !397)
!10989 = !DILocation(line: 3999, column: 48, scope: !10987)
!10990 = !DILocalVariable(name: "mode", arg: 2, scope: !10987, file: !1, line: 3999, type: !3)
!10991 = !DILocation(line: 3999, column: 72, scope: !10987)
!10992 = !DILocalVariable(name: "cmp_mode", arg: 3, scope: !10987, file: !1, line: 4000, type: !3)
!10993 = !DILocation(line: 4000, column: 24, scope: !10987)
!10994 = !DILocalVariable(name: "op0", arg: 4, scope: !10987, file: !1, line: 4000, type: !1495)
!10995 = !DILocation(line: 4000, column: 38, scope: !10987)
!10996 = !DILocalVariable(name: "op1", arg: 5, scope: !10987, file: !1, line: 4000, type: !1495)
!10997 = !DILocation(line: 4000, column: 47, scope: !10987)
!10998 = !DILocalVariable(name: "op0code", scope: !10987, file: !1, line: 4002, type: !397)
!10999 = !DILocation(line: 4002, column: 17, scope: !10987)
!11000 = !DILocation(line: 4002, column: 27, scope: !10987)
!11001 = !DILocation(line: 4004, column: 7, scope: !11002)
!11002 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4004, column: 7)
!11003 = !DILocation(line: 4004, column: 14, scope: !11002)
!11004 = !DILocation(line: 4004, column: 11, scope: !11002)
!11005 = !DILocation(line: 4004, column: 25, scope: !11002)
!11006 = !DILocation(line: 4004, column: 28, scope: !11002)
!11007 = !DILocation(line: 4004, column: 7, scope: !10987)
!11008 = !DILocation(line: 4008, column: 11, scope: !11009)
!11009 = distinct !DILexicalBlock(scope: !11010, file: !1, line: 4008, column: 11)
!11010 = distinct !DILexicalBlock(scope: !11002, file: !1, line: 4005, column: 5)
!11011 = !DILocation(line: 4008, column: 16, scope: !11009)
!11012 = !DILocation(line: 4008, column: 11, scope: !11010)
!11013 = !DILocation(line: 4010, column: 8, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !1, line: 4010, column: 8)
!11015 = distinct !DILexicalBlock(scope: !11009, file: !1, line: 4009, column: 2)
!11016 = !DILocation(line: 4010, column: 26, scope: !11014)
!11017 = !DILocation(line: 4010, column: 23, scope: !11014)
!11018 = !DILocation(line: 4010, column: 8, scope: !11015)
!11019 = !DILocation(line: 4011, column: 27, scope: !11014)
!11020 = !DILocation(line: 4011, column: 13, scope: !11014)
!11021 = !DILocation(line: 4011, column: 6, scope: !11014)
!11022 = !DILocation(line: 4013, column: 38, scope: !11014)
!11023 = !DILocation(line: 4013, column: 54, scope: !11014)
!11024 = !DILocation(line: 4014, column: 10, scope: !11014)
!11025 = !DILocation(line: 4014, column: 25, scope: !11014)
!11026 = !DILocation(line: 4013, column: 13, scope: !11014)
!11027 = !DILocation(line: 4013, column: 6, scope: !11014)
!11028 = !DILocation(line: 4016, column: 16, scope: !11029)
!11029 = distinct !DILexicalBlock(scope: !11009, file: !1, line: 4016, column: 16)
!11030 = !DILocation(line: 4016, column: 21, scope: !11029)
!11031 = !DILocation(line: 4016, column: 16, scope: !11009)
!11032 = !DILocalVariable(name: "new_code", scope: !11033, file: !1, line: 4018, type: !397)
!11033 = distinct !DILexicalBlock(scope: !11029, file: !1, line: 4017, column: 2)
!11034 = !DILocation(line: 4018, column: 18, scope: !11033)
!11035 = !DILocation(line: 4018, column: 55, scope: !11033)
!11036 = !DILocation(line: 4018, column: 29, scope: !11033)
!11037 = !DILocation(line: 4019, column: 8, scope: !11038)
!11038 = distinct !DILexicalBlock(scope: !11033, file: !1, line: 4019, column: 8)
!11039 = !DILocation(line: 4019, column: 17, scope: !11038)
!11040 = !DILocation(line: 4019, column: 8, scope: !11033)
!11041 = !DILocation(line: 4020, column: 38, scope: !11038)
!11042 = !DILocation(line: 4020, column: 48, scope: !11038)
!11043 = !DILocation(line: 4021, column: 10, scope: !11038)
!11044 = !DILocation(line: 4021, column: 25, scope: !11038)
!11045 = !DILocation(line: 4020, column: 13, scope: !11038)
!11046 = !DILocation(line: 4020, column: 6, scope: !11038)
!11047 = !DILocation(line: 4022, column: 2, scope: !11033)
!11048 = !DILocation(line: 4023, column: 5, scope: !11010)
!11049 = !DILocation(line: 4027, column: 8, scope: !11050)
!11050 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4027, column: 7)
!11051 = !DILocation(line: 4027, column: 13, scope: !11050)
!11052 = !DILocation(line: 4027, column: 20, scope: !11050)
!11053 = !DILocation(line: 4027, column: 23, scope: !11050)
!11054 = !DILocation(line: 4027, column: 28, scope: !11050)
!11055 = !DILocation(line: 4028, column: 7, scope: !11050)
!11056 = !DILocation(line: 4028, column: 10, scope: !11050)
!11057 = !DILocation(line: 4028, column: 25, scope: !11050)
!11058 = !DILocation(line: 4029, column: 7, scope: !11050)
!11059 = !DILocation(line: 4029, column: 10, scope: !11050)
!11060 = !DILocation(line: 4030, column: 7, scope: !11050)
!11061 = !DILocation(line: 4030, column: 24, scope: !11050)
!11062 = !DILocation(line: 4030, column: 29, scope: !11050)
!11063 = !DILocation(line: 4030, column: 11, scope: !11050)
!11064 = !DILocation(line: 4031, column: 4, scope: !11050)
!11065 = !DILocation(line: 4031, column: 20, scope: !11050)
!11066 = !DILocation(line: 4031, column: 25, scope: !11050)
!11067 = !DILocation(line: 4031, column: 7, scope: !11050)
!11068 = !DILocation(line: 4027, column: 7, scope: !10987)
!11069 = !DILocalVariable(name: "new_cmp", scope: !11070, file: !1, line: 4033, type: !1495)
!11070 = distinct !DILexicalBlock(scope: !11050, file: !1, line: 4032, column: 5)
!11071 = !DILocation(line: 4033, column: 11, scope: !11070)
!11072 = !DILocation(line: 4034, column: 29, scope: !11070)
!11073 = !DILocation(line: 4034, column: 39, scope: !11070)
!11074 = !DILocation(line: 4034, column: 54, scope: !11070)
!11075 = !DILocation(line: 4034, column: 4, scope: !11070)
!11076 = !DILocation(line: 4035, column: 40, scope: !11070)
!11077 = !DILocation(line: 4035, column: 45, scope: !11070)
!11078 = !DILocation(line: 4035, column: 66, scope: !11070)
!11079 = !DILocation(line: 4036, column: 11, scope: !11070)
!11080 = !DILocation(line: 4036, column: 21, scope: !11070)
!11081 = !DILocation(line: 4036, column: 36, scope: !11070)
!11082 = !DILocation(line: 4035, column: 14, scope: !11070)
!11083 = !DILocation(line: 4035, column: 7, scope: !11070)
!11084 = !DILocation(line: 4040, column: 8, scope: !11085)
!11085 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4040, column: 7)
!11086 = !DILocation(line: 4040, column: 13, scope: !11085)
!11087 = !DILocation(line: 4040, column: 20, scope: !11085)
!11088 = !DILocation(line: 4040, column: 23, scope: !11085)
!11089 = !DILocation(line: 4040, column: 28, scope: !11085)
!11090 = !DILocation(line: 4041, column: 7, scope: !11085)
!11091 = !DILocation(line: 4041, column: 10, scope: !11085)
!11092 = !DILocation(line: 4041, column: 25, scope: !11085)
!11093 = !DILocation(line: 4042, column: 7, scope: !11085)
!11094 = !DILocation(line: 4042, column: 23, scope: !11085)
!11095 = !DILocation(line: 4042, column: 28, scope: !11085)
!11096 = !DILocation(line: 4042, column: 10, scope: !11085)
!11097 = !DILocation(line: 4044, column: 7, scope: !11085)
!11098 = !DILocation(line: 4044, column: 24, scope: !11085)
!11099 = !DILocation(line: 4044, column: 29, scope: !11085)
!11100 = !DILocation(line: 4044, column: 11, scope: !11085)
!11101 = !DILocation(line: 4040, column: 7, scope: !10987)
!11102 = !DILocation(line: 4045, column: 37, scope: !11085)
!11103 = !DILocation(line: 4045, column: 43, scope: !11085)
!11104 = !DILocation(line: 4045, column: 49, scope: !11085)
!11105 = !DILocation(line: 4045, column: 59, scope: !11085)
!11106 = !DILocation(line: 4046, column: 19, scope: !11085)
!11107 = !DILocation(line: 4046, column: 9, scope: !11085)
!11108 = !DILocation(line: 4045, column: 12, scope: !11085)
!11109 = !DILocation(line: 4045, column: 5, scope: !11085)
!11110 = !DILocation(line: 4048, column: 7, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4048, column: 7)
!11112 = !DILocation(line: 4048, column: 14, scope: !11111)
!11113 = !DILocation(line: 4048, column: 11, scope: !11111)
!11114 = !DILocation(line: 4048, column: 7, scope: !10987)
!11115 = !DILocation(line: 4051, column: 11, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11117, file: !1, line: 4051, column: 11)
!11117 = distinct !DILexicalBlock(scope: !11111, file: !1, line: 4049, column: 5)
!11118 = !DILocation(line: 4051, column: 16, scope: !11116)
!11119 = !DILocation(line: 4051, column: 11, scope: !11117)
!11120 = !DILocation(line: 4052, column: 45, scope: !11116)
!11121 = !DILocation(line: 4052, column: 51, scope: !11116)
!11122 = !DILocation(line: 4052, column: 61, scope: !11116)
!11123 = !DILocation(line: 4052, column: 66, scope: !11116)
!11124 = !DILocation(line: 4052, column: 16, scope: !11116)
!11125 = !DILocation(line: 4052, column: 9, scope: !11116)
!11126 = !DILocation(line: 4054, column: 11, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11117, file: !1, line: 4054, column: 11)
!11128 = !DILocation(line: 4054, column: 16, scope: !11127)
!11129 = !DILocation(line: 4054, column: 11, scope: !11117)
!11130 = !DILocation(line: 4055, column: 45, scope: !11127)
!11131 = !DILocation(line: 4055, column: 51, scope: !11127)
!11132 = !DILocation(line: 4055, column: 61, scope: !11127)
!11133 = !DILocation(line: 4055, column: 66, scope: !11127)
!11134 = !DILocation(line: 4055, column: 16, scope: !11127)
!11135 = !DILocation(line: 4055, column: 9, scope: !11127)
!11136 = !DILocation(line: 4056, column: 5, scope: !11117)
!11137 = !DILocation(line: 4057, column: 12, scope: !11138)
!11138 = distinct !DILexicalBlock(scope: !11111, file: !1, line: 4057, column: 12)
!11139 = !DILocation(line: 4057, column: 19, scope: !11138)
!11140 = !DILocation(line: 4057, column: 16, scope: !11138)
!11141 = !DILocation(line: 4057, column: 12, scope: !11111)
!11142 = !DILocation(line: 4059, column: 15, scope: !11143)
!11143 = distinct !DILexicalBlock(scope: !11138, file: !1, line: 4058, column: 5)
!11144 = !DILocation(line: 4059, column: 7, scope: !11143)
!11145 = !DILocation(line: 4063, column: 40, scope: !11146)
!11146 = distinct !DILexicalBlock(scope: !11143, file: !1, line: 4060, column: 9)
!11147 = !DILocation(line: 4063, column: 46, scope: !11146)
!11148 = !DILocation(line: 4064, column: 8, scope: !11146)
!11149 = !DILocation(line: 4064, column: 13, scope: !11146)
!11150 = !DILocation(line: 4063, column: 11, scope: !11146)
!11151 = !DILocation(line: 4063, column: 4, scope: !11146)
!11152 = !DILocation(line: 4067, column: 40, scope: !11146)
!11153 = !DILocation(line: 4067, column: 46, scope: !11146)
!11154 = !DILocation(line: 4068, column: 8, scope: !11146)
!11155 = !DILocation(line: 4068, column: 13, scope: !11146)
!11156 = !DILocation(line: 4067, column: 11, scope: !11146)
!11157 = !DILocation(line: 4067, column: 4, scope: !11146)
!11158 = !DILocation(line: 4071, column: 40, scope: !11146)
!11159 = !DILocation(line: 4071, column: 46, scope: !11146)
!11160 = !DILocation(line: 4072, column: 8, scope: !11146)
!11161 = !DILocation(line: 4072, column: 13, scope: !11146)
!11162 = !DILocation(line: 4071, column: 11, scope: !11146)
!11163 = !DILocation(line: 4071, column: 4, scope: !11146)
!11164 = !DILocation(line: 4075, column: 40, scope: !11146)
!11165 = !DILocation(line: 4075, column: 46, scope: !11146)
!11166 = !DILocation(line: 4076, column: 8, scope: !11146)
!11167 = !DILocation(line: 4076, column: 13, scope: !11146)
!11168 = !DILocation(line: 4075, column: 11, scope: !11146)
!11169 = !DILocation(line: 4075, column: 4, scope: !11146)
!11170 = !DILocation(line: 4078, column: 4, scope: !11146)
!11171 = !DILocation(line: 4080, column: 5, scope: !11143)
!11172 = !DILocation(line: 4081, column: 12, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11138, file: !1, line: 4081, column: 12)
!11174 = !DILocation(line: 4081, column: 19, scope: !11173)
!11175 = !DILocation(line: 4081, column: 16, scope: !11173)
!11176 = !DILocation(line: 4081, column: 12, scope: !11138)
!11177 = !DILocation(line: 4084, column: 11, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !1, line: 4084, column: 11)
!11179 = distinct !DILexicalBlock(scope: !11173, file: !1, line: 4082, column: 5)
!11180 = !DILocation(line: 4084, column: 16, scope: !11178)
!11181 = !DILocation(line: 4084, column: 11, scope: !11179)
!11182 = !DILocation(line: 4085, column: 45, scope: !11178)
!11183 = !DILocation(line: 4085, column: 51, scope: !11178)
!11184 = !DILocation(line: 4085, column: 61, scope: !11178)
!11185 = !DILocation(line: 4085, column: 66, scope: !11178)
!11186 = !DILocation(line: 4085, column: 16, scope: !11178)
!11187 = !DILocation(line: 4085, column: 9, scope: !11178)
!11188 = !DILocation(line: 4087, column: 11, scope: !11189)
!11189 = distinct !DILexicalBlock(scope: !11179, file: !1, line: 4087, column: 11)
!11190 = !DILocation(line: 4087, column: 16, scope: !11189)
!11191 = !DILocation(line: 4087, column: 11, scope: !11179)
!11192 = !DILocation(line: 4088, column: 45, scope: !11189)
!11193 = !DILocation(line: 4088, column: 51, scope: !11189)
!11194 = !DILocation(line: 4088, column: 61, scope: !11189)
!11195 = !DILocation(line: 4088, column: 66, scope: !11189)
!11196 = !DILocation(line: 4088, column: 16, scope: !11189)
!11197 = !DILocation(line: 4088, column: 9, scope: !11189)
!11198 = !DILocation(line: 4089, column: 5, scope: !11179)
!11199 = !DILocation(line: 4092, column: 8, scope: !11200)
!11200 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4092, column: 7)
!11201 = !DILocation(line: 4092, column: 13, scope: !11200)
!11202 = !DILocation(line: 4092, column: 19, scope: !11200)
!11203 = !DILocation(line: 4092, column: 22, scope: !11200)
!11204 = !DILocation(line: 4092, column: 27, scope: !11200)
!11205 = !DILocation(line: 4093, column: 7, scope: !11200)
!11206 = !DILocation(line: 4093, column: 11, scope: !11200)
!11207 = !DILocation(line: 4093, column: 19, scope: !11200)
!11208 = !DILocation(line: 4093, column: 27, scope: !11200)
!11209 = !DILocation(line: 4093, column: 30, scope: !11200)
!11210 = !DILocation(line: 4093, column: 38, scope: !11200)
!11211 = !DILocation(line: 4094, column: 7, scope: !11200)
!11212 = !DILocation(line: 4094, column: 10, scope: !11200)
!11213 = !DILocation(line: 4095, column: 7, scope: !11200)
!11214 = !DILocation(line: 4095, column: 10, scope: !11200)
!11215 = !DILocation(line: 4096, column: 7, scope: !11200)
!11216 = !DILocation(line: 4096, column: 11, scope: !11200)
!11217 = !DILocation(line: 4096, column: 38, scope: !11200)
!11218 = !DILocation(line: 4096, column: 41, scope: !11200)
!11219 = !DILocation(line: 4092, column: 7, scope: !10987)
!11220 = !DILocalVariable(name: "x", scope: !11221, file: !1, line: 4098, type: !1495)
!11221 = distinct !DILexicalBlock(scope: !11200, file: !1, line: 4097, column: 5)
!11222 = !DILocation(line: 4098, column: 11, scope: !11221)
!11223 = !DILocation(line: 4098, column: 15, scope: !11221)
!11224 = !DILocalVariable(name: "c", scope: !11221, file: !1, line: 4099, type: !1495)
!11225 = !DILocation(line: 4099, column: 11, scope: !11221)
!11226 = !DILocation(line: 4099, column: 15, scope: !11221)
!11227 = !DILocation(line: 4101, column: 32, scope: !11221)
!11228 = !DILocation(line: 4101, column: 40, scope: !11221)
!11229 = !DILocation(line: 4102, column: 11, scope: !11221)
!11230 = !DILocation(line: 4102, column: 21, scope: !11221)
!11231 = !DILocation(line: 4102, column: 26, scope: !11221)
!11232 = !DILocation(line: 4101, column: 11, scope: !11221)
!11233 = !DILocation(line: 4101, column: 9, scope: !11221)
!11234 = !DILocation(line: 4103, column: 39, scope: !11221)
!11235 = !DILocation(line: 4103, column: 45, scope: !11221)
!11236 = !DILocation(line: 4103, column: 51, scope: !11221)
!11237 = !DILocation(line: 4103, column: 61, scope: !11221)
!11238 = !DILocation(line: 4103, column: 64, scope: !11221)
!11239 = !DILocation(line: 4103, column: 14, scope: !11221)
!11240 = !DILocation(line: 4103, column: 7, scope: !11221)
!11241 = !DILocation(line: 4108, column: 7, scope: !11242)
!11242 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4108, column: 7)
!11243 = !DILocation(line: 4108, column: 12, scope: !11242)
!11244 = !DILocation(line: 4109, column: 7, scope: !11242)
!11245 = !DILocation(line: 4109, column: 10, scope: !11242)
!11246 = !DILocation(line: 4109, column: 17, scope: !11242)
!11247 = !DILocation(line: 4109, column: 14, scope: !11242)
!11248 = !DILocation(line: 4110, column: 7, scope: !11242)
!11249 = !DILocation(line: 4110, column: 10, scope: !11242)
!11250 = !DILocation(line: 4110, column: 32, scope: !11242)
!11251 = !DILocation(line: 4111, column: 7, scope: !11242)
!11252 = !DILocation(line: 4111, column: 10, scope: !11242)
!11253 = !DILocation(line: 4111, column: 19, scope: !11242)
!11254 = !DILocation(line: 4113, column: 7, scope: !11242)
!11255 = !DILocation(line: 4113, column: 10, scope: !11242)
!11256 = !DILocation(line: 4113, column: 15, scope: !11242)
!11257 = !DILocation(line: 4114, column: 7, scope: !11242)
!11258 = !DILocation(line: 4114, column: 10, scope: !11242)
!11259 = !DILocation(line: 4114, column: 19, scope: !11242)
!11260 = !DILocation(line: 4115, column: 7, scope: !11242)
!11261 = !DILocation(line: 4115, column: 24, scope: !11242)
!11262 = !DILocation(line: 4115, column: 29, scope: !11242)
!11263 = !DILocation(line: 4115, column: 10, scope: !11242)
!11264 = !DILocation(line: 4115, column: 39, scope: !11242)
!11265 = !DILocation(line: 4108, column: 7, scope: !10987)
!11266 = !DILocation(line: 4117, column: 12, scope: !11242)
!11267 = !DILocation(line: 4117, column: 35, scope: !11242)
!11268 = !DILocation(line: 4117, column: 33, scope: !11242)
!11269 = !DILocation(line: 4118, column: 40, scope: !11242)
!11270 = !DILocation(line: 4118, column: 46, scope: !11242)
!11271 = !DILocation(line: 4118, column: 51, scope: !11242)
!11272 = !DILocation(line: 4118, column: 7, scope: !11242)
!11273 = !DILocation(line: 4119, column: 23, scope: !11242)
!11274 = !DILocation(line: 4119, column: 29, scope: !11242)
!11275 = !DILocation(line: 4119, column: 34, scope: !11242)
!11276 = !DILocation(line: 4119, column: 7, scope: !11242)
!11277 = !DILocation(line: 4117, column: 5, scope: !11242)
!11278 = !DILocation(line: 4122, column: 8, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4122, column: 7)
!11280 = !DILocation(line: 4122, column: 13, scope: !11279)
!11281 = !DILocation(line: 4122, column: 19, scope: !11279)
!11282 = !DILocation(line: 4122, column: 22, scope: !11279)
!11283 = !DILocation(line: 4122, column: 27, scope: !11279)
!11284 = !DILocation(line: 4123, column: 7, scope: !11279)
!11285 = !DILocation(line: 4123, column: 10, scope: !11279)
!11286 = !DILocation(line: 4123, column: 17, scope: !11279)
!11287 = !DILocation(line: 4123, column: 14, scope: !11279)
!11288 = !DILocation(line: 4124, column: 7, scope: !11279)
!11289 = !DILocation(line: 4124, column: 10, scope: !11279)
!11290 = !DILocation(line: 4124, column: 18, scope: !11279)
!11291 = !DILocation(line: 4122, column: 7, scope: !10987)
!11292 = !DILocation(line: 4125, column: 37, scope: !11279)
!11293 = !DILocation(line: 4125, column: 43, scope: !11279)
!11294 = !DILocation(line: 4125, column: 49, scope: !11279)
!11295 = !DILocation(line: 4126, column: 9, scope: !11279)
!11296 = !DILocation(line: 4126, column: 24, scope: !11279)
!11297 = !DILocation(line: 4125, column: 12, scope: !11279)
!11298 = !DILocation(line: 4125, column: 5, scope: !11279)
!11299 = !DILocation(line: 4129, column: 8, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4129, column: 7)
!11301 = !DILocation(line: 4129, column: 13, scope: !11300)
!11302 = !DILocation(line: 4129, column: 19, scope: !11300)
!11303 = !DILocation(line: 4129, column: 22, scope: !11300)
!11304 = !DILocation(line: 4129, column: 27, scope: !11300)
!11305 = !DILocation(line: 4130, column: 7, scope: !11300)
!11306 = !DILocation(line: 4130, column: 10, scope: !11300)
!11307 = !DILocation(line: 4130, column: 18, scope: !11300)
!11308 = !DILocation(line: 4131, column: 7, scope: !11300)
!11309 = !DILocation(line: 4131, column: 23, scope: !11300)
!11310 = !DILocation(line: 4131, column: 38, scope: !11300)
!11311 = !DILocation(line: 4131, column: 10, scope: !11300)
!11312 = !DILocation(line: 4132, column: 7, scope: !11300)
!11313 = !DILocation(line: 4132, column: 27, scope: !11300)
!11314 = !DILocation(line: 4132, column: 11, scope: !11300)
!11315 = !DILocation(line: 4129, column: 7, scope: !10987)
!11316 = !DILocation(line: 4133, column: 37, scope: !11300)
!11317 = !DILocation(line: 4133, column: 43, scope: !11300)
!11318 = !DILocation(line: 4133, column: 49, scope: !11300)
!11319 = !DILocation(line: 4134, column: 9, scope: !11300)
!11320 = !DILocation(line: 4134, column: 24, scope: !11300)
!11321 = !DILocation(line: 4133, column: 12, scope: !11300)
!11322 = !DILocation(line: 4133, column: 5, scope: !11300)
!11323 = !DILocation(line: 4137, column: 8, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4137, column: 7)
!11325 = !DILocation(line: 4137, column: 13, scope: !11324)
!11326 = !DILocation(line: 4137, column: 19, scope: !11324)
!11327 = !DILocation(line: 4137, column: 22, scope: !11324)
!11328 = !DILocation(line: 4137, column: 27, scope: !11324)
!11329 = !DILocation(line: 4138, column: 7, scope: !11324)
!11330 = !DILocation(line: 4138, column: 10, scope: !11324)
!11331 = !DILocation(line: 4138, column: 18, scope: !11324)
!11332 = !DILocation(line: 4139, column: 7, scope: !11324)
!11333 = !DILocation(line: 4139, column: 23, scope: !11324)
!11334 = !DILocation(line: 4139, column: 38, scope: !11324)
!11335 = !DILocation(line: 4139, column: 10, scope: !11324)
!11336 = !DILocation(line: 4140, column: 7, scope: !11324)
!11337 = !DILocation(line: 4140, column: 27, scope: !11324)
!11338 = !DILocation(line: 4140, column: 11, scope: !11324)
!11339 = !DILocation(line: 4137, column: 7, scope: !10987)
!11340 = !DILocation(line: 4141, column: 37, scope: !11324)
!11341 = !DILocation(line: 4141, column: 43, scope: !11324)
!11342 = !DILocation(line: 4141, column: 49, scope: !11324)
!11343 = !DILocation(line: 4142, column: 9, scope: !11324)
!11344 = !DILocation(line: 4142, column: 24, scope: !11324)
!11345 = !DILocation(line: 4141, column: 12, scope: !11324)
!11346 = !DILocation(line: 4141, column: 5, scope: !11324)
!11347 = !DILocation(line: 4145, column: 8, scope: !11348)
!11348 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4145, column: 7)
!11349 = !DILocation(line: 4145, column: 13, scope: !11348)
!11350 = !DILocation(line: 4145, column: 19, scope: !11348)
!11351 = !DILocation(line: 4145, column: 22, scope: !11348)
!11352 = !DILocation(line: 4145, column: 27, scope: !11348)
!11353 = !DILocation(line: 4146, column: 7, scope: !11348)
!11354 = !DILocation(line: 4146, column: 10, scope: !11348)
!11355 = !DILocation(line: 4146, column: 18, scope: !11348)
!11356 = !DILocation(line: 4147, column: 7, scope: !11348)
!11357 = !DILocation(line: 4147, column: 11, scope: !11348)
!11358 = !DILocation(line: 4148, column: 4, scope: !11348)
!11359 = !DILocation(line: 4148, column: 7, scope: !11348)
!11360 = !DILocation(line: 4148, column: 22, scope: !11348)
!11361 = !DILocation(line: 4149, column: 7, scope: !11348)
!11362 = !DILocation(line: 4149, column: 11, scope: !11348)
!11363 = !DILocation(line: 4150, column: 4, scope: !11348)
!11364 = !DILocation(line: 4150, column: 7, scope: !11348)
!11365 = !DILocation(line: 4150, column: 32, scope: !11348)
!11366 = !DILocation(line: 4145, column: 7, scope: !10987)
!11367 = !DILocation(line: 4151, column: 37, scope: !11348)
!11368 = !DILocation(line: 4151, column: 43, scope: !11348)
!11369 = !DILocation(line: 4151, column: 49, scope: !11348)
!11370 = !DILocation(line: 4151, column: 59, scope: !11348)
!11371 = !DILocation(line: 4152, column: 35, scope: !11348)
!11372 = !DILocation(line: 4153, column: 9, scope: !11348)
!11373 = !DILocation(line: 4153, column: 24, scope: !11348)
!11374 = !DILocation(line: 4152, column: 9, scope: !11348)
!11375 = !DILocation(line: 4151, column: 12, scope: !11348)
!11376 = !DILocation(line: 4151, column: 5, scope: !11348)
!11377 = !DILocation(line: 4155, column: 7, scope: !11378)
!11378 = distinct !DILexicalBlock(scope: !10987, file: !1, line: 4155, column: 7)
!11379 = !DILocation(line: 4155, column: 15, scope: !11378)
!11380 = !DILocation(line: 4155, column: 27, scope: !11378)
!11381 = !DILocation(line: 4155, column: 30, scope: !11378)
!11382 = !DILocation(line: 4155, column: 37, scope: !11378)
!11383 = !DILocation(line: 4155, column: 34, scope: !11378)
!11384 = !DILocation(line: 4155, column: 7, scope: !10987)
!11385 = !DILocation(line: 4156, column: 13, scope: !11378)
!11386 = !DILocation(line: 4156, column: 5, scope: !11378)
!11387 = !DILocation(line: 4162, column: 38, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11378, file: !1, line: 4157, column: 7)
!11389 = !DILocation(line: 4162, column: 44, scope: !11388)
!11390 = !DILocation(line: 4163, column: 6, scope: !11388)
!11391 = !DILocation(line: 4163, column: 21, scope: !11388)
!11392 = !DILocation(line: 4162, column: 9, scope: !11388)
!11393 = !DILocation(line: 4162, column: 2, scope: !11388)
!11394 = !DILocation(line: 4169, column: 38, scope: !11388)
!11395 = !DILocation(line: 4169, column: 44, scope: !11388)
!11396 = !DILocation(line: 4170, column: 6, scope: !11388)
!11397 = !DILocation(line: 4170, column: 21, scope: !11388)
!11398 = !DILocation(line: 4169, column: 9, scope: !11388)
!11399 = !DILocation(line: 4169, column: 2, scope: !11388)
!11400 = !DILocation(line: 4173, column: 2, scope: !11388)
!11401 = !DILocation(line: 4174, column: 7, scope: !11388)
!11402 = !DILocation(line: 4176, column: 3, scope: !10987)
!11403 = !DILocation(line: 4177, column: 1, scope: !10987)
!11404 = distinct !DISubprogram(name: "comparison_result", scope: !1, file: !1, line: 4196, type: !11405, scopeLine: 4197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!11405 = !DISubroutineType(types: !11406)
!11406 = !{!1495, !397, !1518}
!11407 = !DILocalVariable(name: "code", arg: 1, scope: !11404, file: !1, line: 4196, type: !397)
!11408 = !DILocation(line: 4196, column: 34, scope: !11404)
!11409 = !DILocalVariable(name: "known_results", arg: 2, scope: !11404, file: !1, line: 4196, type: !1518)
!11410 = !DILocation(line: 4196, column: 44, scope: !11404)
!11411 = !DILocation(line: 4198, column: 11, scope: !11404)
!11412 = !DILocation(line: 4198, column: 3, scope: !11404)
!11413 = !DILocation(line: 4202, column: 15, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11404, file: !1, line: 4199, column: 5)
!11415 = !DILocation(line: 4202, column: 29, scope: !11414)
!11416 = !DILocation(line: 4202, column: 14, scope: !11414)
!11417 = !DILocation(line: 4202, column: 41, scope: !11414)
!11418 = !DILocation(line: 4202, column: 58, scope: !11414)
!11419 = !DILocation(line: 4202, column: 7, scope: !11414)
!11420 = !DILocation(line: 4205, column: 15, scope: !11414)
!11421 = !DILocation(line: 4205, column: 29, scope: !11414)
!11422 = !DILocation(line: 4205, column: 14, scope: !11414)
!11423 = !DILocation(line: 4205, column: 41, scope: !11414)
!11424 = !DILocation(line: 4205, column: 54, scope: !11414)
!11425 = !DILocation(line: 4205, column: 7, scope: !11414)
!11426 = !DILocation(line: 4209, column: 15, scope: !11414)
!11427 = !DILocation(line: 4209, column: 29, scope: !11414)
!11428 = !DILocation(line: 4209, column: 14, scope: !11414)
!11429 = !DILocation(line: 4209, column: 41, scope: !11414)
!11430 = !DILocation(line: 4209, column: 58, scope: !11414)
!11431 = !DILocation(line: 4209, column: 7, scope: !11414)
!11432 = !DILocation(line: 4212, column: 15, scope: !11414)
!11433 = !DILocation(line: 4212, column: 29, scope: !11414)
!11434 = !DILocation(line: 4212, column: 14, scope: !11414)
!11435 = !DILocation(line: 4212, column: 41, scope: !11414)
!11436 = !DILocation(line: 4212, column: 54, scope: !11414)
!11437 = !DILocation(line: 4212, column: 7, scope: !11414)
!11438 = !DILocation(line: 4216, column: 15, scope: !11414)
!11439 = !DILocation(line: 4216, column: 29, scope: !11414)
!11440 = !DILocation(line: 4216, column: 14, scope: !11414)
!11441 = !DILocation(line: 4216, column: 41, scope: !11414)
!11442 = !DILocation(line: 4216, column: 58, scope: !11414)
!11443 = !DILocation(line: 4216, column: 7, scope: !11414)
!11444 = !DILocation(line: 4219, column: 15, scope: !11414)
!11445 = !DILocation(line: 4219, column: 29, scope: !11414)
!11446 = !DILocation(line: 4219, column: 14, scope: !11414)
!11447 = !DILocation(line: 4219, column: 41, scope: !11414)
!11448 = !DILocation(line: 4219, column: 54, scope: !11414)
!11449 = !DILocation(line: 4219, column: 7, scope: !11414)
!11450 = !DILocation(line: 4222, column: 15, scope: !11414)
!11451 = !DILocation(line: 4222, column: 29, scope: !11414)
!11452 = !DILocation(line: 4222, column: 14, scope: !11414)
!11453 = !DILocation(line: 4222, column: 42, scope: !11414)
!11454 = !DILocation(line: 4222, column: 59, scope: !11414)
!11455 = !DILocation(line: 4222, column: 7, scope: !11414)
!11456 = !DILocation(line: 4224, column: 15, scope: !11414)
!11457 = !DILocation(line: 4224, column: 29, scope: !11414)
!11458 = !DILocation(line: 4224, column: 14, scope: !11414)
!11459 = !DILocation(line: 4224, column: 42, scope: !11414)
!11460 = !DILocation(line: 4224, column: 55, scope: !11414)
!11461 = !DILocation(line: 4224, column: 7, scope: !11414)
!11462 = !DILocation(line: 4227, column: 15, scope: !11414)
!11463 = !DILocation(line: 4227, column: 29, scope: !11414)
!11464 = !DILocation(line: 4227, column: 14, scope: !11414)
!11465 = !DILocation(line: 4227, column: 42, scope: !11414)
!11466 = !DILocation(line: 4227, column: 59, scope: !11414)
!11467 = !DILocation(line: 4227, column: 7, scope: !11414)
!11468 = !DILocation(line: 4229, column: 15, scope: !11414)
!11469 = !DILocation(line: 4229, column: 29, scope: !11414)
!11470 = !DILocation(line: 4229, column: 14, scope: !11414)
!11471 = !DILocation(line: 4229, column: 42, scope: !11414)
!11472 = !DILocation(line: 4229, column: 55, scope: !11414)
!11473 = !DILocation(line: 4229, column: 7, scope: !11414)
!11474 = !DILocation(line: 4232, column: 14, scope: !11414)
!11475 = !DILocation(line: 4232, column: 7, scope: !11414)
!11476 = !DILocation(line: 4234, column: 14, scope: !11414)
!11477 = !DILocation(line: 4234, column: 7, scope: !11414)
!11478 = !DILocation(line: 4236, column: 7, scope: !11414)
!11479 = !DILocation(line: 4237, column: 5, scope: !11414)
!11480 = !DILocation(line: 4239, column: 12, scope: !11404)
!11481 = !DILocation(line: 4239, column: 5, scope: !11404)
!11482 = !DILocation(line: 4241, column: 1, scope: !11404)
!11483 = !DILocalVariable(name: "outermode", arg: 1, scope: !1492, file: !1, line: 4829, type: !3)
!11484 = !DILocation(line: 4829, column: 42, scope: !1492)
!11485 = !DILocalVariable(name: "op", arg: 2, scope: !1492, file: !1, line: 4829, type: !1495)
!11486 = !DILocation(line: 4829, column: 57, scope: !1492)
!11487 = !DILocalVariable(name: "innermode", arg: 3, scope: !1492, file: !1, line: 4830, type: !3)
!11488 = !DILocation(line: 4830, column: 28, scope: !1492)
!11489 = !DILocalVariable(name: "byte", arg: 4, scope: !1492, file: !1, line: 4830, type: !5)
!11490 = !DILocation(line: 4830, column: 52, scope: !1492)
!11491 = !DILocalVariable(name: "value", scope: !1492, file: !1, line: 4838, type: !11492)
!11492 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1729, size: 512, elements: !11493)
!11493 = !{!11494}
!11494 = !DISubrange(count: 64)
!11495 = !DILocation(line: 4838, column: 17, scope: !1492)
!11496 = !DILocalVariable(name: "value_start", scope: !1492, file: !1, line: 4839, type: !1518)
!11497 = !DILocation(line: 4839, column: 7, scope: !1492)
!11498 = !DILocalVariable(name: "i", scope: !1492, file: !1, line: 4840, type: !1518)
!11499 = !DILocation(line: 4840, column: 7, scope: !1492)
!11500 = !DILocalVariable(name: "elem", scope: !1492, file: !1, line: 4841, type: !1518)
!11501 = !DILocation(line: 4841, column: 7, scope: !1492)
!11502 = !DILocalVariable(name: "num_elem", scope: !1492, file: !1, line: 4843, type: !1518)
!11503 = !DILocation(line: 4843, column: 7, scope: !1492)
!11504 = !DILocalVariable(name: "elems", scope: !1492, file: !1, line: 4844, type: !11505)
!11505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1495, size: 64)
!11506 = !DILocation(line: 4844, column: 9, scope: !1492)
!11507 = !DILocalVariable(name: "elem_bitsize", scope: !1492, file: !1, line: 4845, type: !1518)
!11508 = !DILocation(line: 4845, column: 7, scope: !1492)
!11509 = !DILocalVariable(name: "result_s", scope: !1492, file: !1, line: 4846, type: !1495)
!11510 = !DILocation(line: 4846, column: 7, scope: !1492)
!11511 = !DILocalVariable(name: "result_v", scope: !1492, file: !1, line: 4847, type: !1526)
!11512 = !DILocation(line: 4847, column: 9, scope: !1492)
!11513 = !DILocalVariable(name: "outer_class", scope: !1492, file: !1, line: 4848, type: !375)
!11514 = !DILocation(line: 4848, column: 19, scope: !1492)
!11515 = !DILocalVariable(name: "outer_submode", scope: !1492, file: !1, line: 4849, type: !3)
!11516 = !DILocation(line: 4849, column: 21, scope: !1492)
!11517 = !DILocation(line: 4852, column: 7, scope: !11518)
!11518 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4852, column: 7)
!11519 = !DILocation(line: 4852, column: 34, scope: !11518)
!11520 = !DILocation(line: 4852, column: 45, scope: !11518)
!11521 = !DILocation(line: 4852, column: 48, scope: !11518)
!11522 = !DILocation(line: 4852, column: 7, scope: !1492)
!11523 = !DILocation(line: 4853, column: 12, scope: !11518)
!11524 = !DILocation(line: 4853, column: 5, scope: !11518)
!11525 = !DILocation(line: 4856, column: 7, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4856, column: 7)
!11527 = !DILocation(line: 4856, column: 7, scope: !1492)
!11528 = !DILocation(line: 4857, column: 5, scope: !11526)
!11529 = !DILocation(line: 4861, column: 7, scope: !11530)
!11530 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4861, column: 7)
!11531 = !DILocation(line: 4861, column: 21, scope: !11530)
!11532 = !DILocation(line: 4861, column: 7, scope: !1492)
!11533 = !DILocation(line: 4863, column: 18, scope: !11534)
!11534 = distinct !DILexicalBlock(scope: !11530, file: !1, line: 4862, column: 5)
!11535 = !DILocation(line: 4863, column: 16, scope: !11534)
!11536 = !DILocation(line: 4864, column: 16, scope: !11534)
!11537 = !DILocation(line: 4864, column: 13, scope: !11534)
!11538 = !DILocation(line: 4865, column: 22, scope: !11534)
!11539 = !DILocation(line: 4865, column: 20, scope: !11534)
!11540 = !DILocation(line: 4866, column: 5, scope: !11534)
!11541 = !DILocation(line: 4869, column: 16, scope: !11542)
!11542 = distinct !DILexicalBlock(scope: !11530, file: !1, line: 4868, column: 5)
!11543 = !DILocation(line: 4870, column: 13, scope: !11542)
!11544 = !DILocation(line: 4871, column: 20, scope: !11542)
!11545 = !DILocation(line: 4876, column: 3, scope: !1492)
!11546 = !DILocation(line: 4878, column: 13, scope: !11547)
!11547 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4878, column: 3)
!11548 = !DILocation(line: 4878, column: 8, scope: !11547)
!11549 = !DILocation(line: 4878, column: 18, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11547, file: !1, line: 4878, column: 3)
!11551 = !DILocation(line: 4878, column: 25, scope: !11550)
!11552 = !DILocation(line: 4878, column: 23, scope: !11550)
!11553 = !DILocation(line: 4878, column: 3, scope: !11547)
!11554 = !DILocalVariable(name: "vp", scope: !11555, file: !1, line: 4880, type: !11556)
!11555 = distinct !DILexicalBlock(scope: !11550, file: !1, line: 4879, column: 5)
!11556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!11557 = !DILocation(line: 4880, column: 23, scope: !11555)
!11558 = !DILocalVariable(name: "el", scope: !11555, file: !1, line: 4881, type: !1495)
!11559 = !DILocation(line: 4881, column: 11, scope: !11555)
!11560 = !DILocation(line: 4881, column: 16, scope: !11555)
!11561 = !DILocation(line: 4881, column: 22, scope: !11555)
!11562 = !DILocalVariable(name: "byte", scope: !11563, file: !1, line: 4886, type: !5)
!11563 = distinct !DILexicalBlock(scope: !11555, file: !1, line: 4885, column: 7)
!11564 = !DILocation(line: 4886, column: 11, scope: !11563)
!11565 = !DILocation(line: 4886, column: 19, scope: !11563)
!11566 = !DILocation(line: 4886, column: 26, scope: !11563)
!11567 = !DILocation(line: 4886, column: 24, scope: !11563)
!11568 = !DILocation(line: 4886, column: 40, scope: !11563)
!11569 = !DILocalVariable(name: "ibyte", scope: !11563, file: !1, line: 4887, type: !5)
!11570 = !DILocation(line: 4887, column: 11, scope: !11563)
!11571 = !DILocation(line: 4887, column: 22, scope: !11563)
!11572 = !DILocation(line: 4887, column: 31, scope: !11563)
!11573 = !DILocation(line: 4887, column: 37, scope: !11563)
!11574 = !DILocation(line: 4887, column: 35, scope: !11563)
!11575 = !DILocation(line: 4887, column: 45, scope: !11563)
!11576 = !DILocation(line: 4887, column: 43, scope: !11563)
!11577 = !DILocation(line: 4888, column: 6, scope: !11563)
!11578 = !DILocalVariable(name: "word_byte", scope: !11563, file: !1, line: 4889, type: !5)
!11579 = !DILocation(line: 4889, column: 11, scope: !11563)
!11580 = !DILocation(line: 4889, column: 50, scope: !11563)
!11581 = !DILocalVariable(name: "subword_byte", scope: !11563, file: !1, line: 4890, type: !5)
!11582 = !DILocation(line: 4890, column: 11, scope: !11563)
!11583 = !DILocation(line: 4890, column: 53, scope: !11563)
!11584 = !DILocalVariable(name: "bytele", scope: !11563, file: !1, line: 4891, type: !5)
!11585 = !DILocation(line: 4891, column: 11, scope: !11563)
!11586 = !DILocation(line: 4891, column: 21, scope: !11563)
!11587 = !DILocation(line: 4891, column: 34, scope: !11563)
!11588 = !DILocation(line: 4892, column: 8, scope: !11563)
!11589 = !DILocation(line: 4892, column: 18, scope: !11563)
!11590 = !DILocation(line: 4892, column: 36, scope: !11563)
!11591 = !DILocation(line: 4892, column: 5, scope: !11563)
!11592 = !DILocation(line: 4893, column: 7, scope: !11563)
!11593 = !DILocation(line: 4893, column: 16, scope: !11563)
!11594 = !DILocation(line: 4893, column: 23, scope: !11563)
!11595 = !DILocation(line: 4893, column: 40, scope: !11563)
!11596 = !DILocation(line: 4893, column: 13, scope: !11563)
!11597 = !DILocation(line: 4893, column: 5, scope: !11563)
!11598 = !DILocation(line: 4896, column: 15, scope: !11555)
!11599 = !DILocation(line: 4896, column: 7, scope: !11555)
!11600 = !DILocation(line: 4899, column: 11, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11602, file: !1, line: 4899, column: 4)
!11602 = distinct !DILexicalBlock(scope: !11555, file: !1, line: 4897, column: 2)
!11603 = !DILocation(line: 4899, column: 9, scope: !11601)
!11604 = !DILocation(line: 4900, column: 9, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11601, file: !1, line: 4899, column: 4)
!11606 = !DILocation(line: 4900, column: 11, scope: !11605)
!11607 = !DILocation(line: 4900, column: 36, scope: !11605)
!11608 = !DILocation(line: 4900, column: 39, scope: !11605)
!11609 = !DILocation(line: 4900, column: 43, scope: !11605)
!11610 = !DILocation(line: 4900, column: 41, scope: !11605)
!11611 = !DILocation(line: 0, scope: !11605)
!11612 = !DILocation(line: 4899, column: 4, scope: !11601)
!11613 = !DILocation(line: 4902, column: 14, scope: !11605)
!11614 = !DILocation(line: 4902, column: 29, scope: !11605)
!11615 = !DILocation(line: 4902, column: 26, scope: !11605)
!11616 = !DILocation(line: 4902, column: 9, scope: !11605)
!11617 = !DILocation(line: 4902, column: 12, scope: !11605)
!11618 = !DILocation(line: 4902, column: 6, scope: !11605)
!11619 = !DILocation(line: 4901, column: 11, scope: !11605)
!11620 = !DILocation(line: 4899, column: 4, scope: !11605)
!11621 = distinct !{!11621, !11612, !11622}
!11622 = !DILocation(line: 4902, column: 29, scope: !11601)
!11623 = !DILocation(line: 4904, column: 4, scope: !11602)
!11624 = !DILocation(line: 4904, column: 11, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11626, file: !1, line: 4904, column: 4)
!11626 = distinct !DILexicalBlock(scope: !11602, file: !1, line: 4904, column: 4)
!11627 = !DILocation(line: 4904, column: 15, scope: !11625)
!11628 = !DILocation(line: 4904, column: 13, scope: !11625)
!11629 = !DILocation(line: 4904, column: 4, scope: !11626)
!11630 = !DILocation(line: 4905, column: 14, scope: !11625)
!11631 = !DILocation(line: 4905, column: 26, scope: !11625)
!11632 = !DILocation(line: 4905, column: 9, scope: !11625)
!11633 = !DILocation(line: 4905, column: 12, scope: !11625)
!11634 = !DILocation(line: 4905, column: 6, scope: !11625)
!11635 = !DILocation(line: 4904, column: 31, scope: !11625)
!11636 = !DILocation(line: 4904, column: 4, scope: !11625)
!11637 = distinct !{!11637, !11629, !11638}
!11638 = !DILocation(line: 4905, column: 37, scope: !11626)
!11639 = !DILocation(line: 4906, column: 4, scope: !11602)
!11640 = !DILocation(line: 4909, column: 8, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11602, file: !1, line: 4909, column: 8)
!11642 = !DILocation(line: 4909, column: 22, scope: !11641)
!11643 = !DILocation(line: 4909, column: 8, scope: !11602)
!11644 = !DILocation(line: 4913, column: 8, scope: !11645)
!11645 = distinct !DILexicalBlock(scope: !11641, file: !1, line: 4910, column: 6)
!11646 = !DILocation(line: 4915, column: 15, scope: !11647)
!11647 = distinct !DILexicalBlock(scope: !11645, file: !1, line: 4915, column: 8)
!11648 = !DILocation(line: 4915, column: 13, scope: !11647)
!11649 = !DILocation(line: 4915, column: 20, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11647, file: !1, line: 4915, column: 8)
!11651 = !DILocation(line: 4915, column: 22, scope: !11650)
!11652 = !DILocation(line: 4915, column: 8, scope: !11647)
!11653 = !DILocation(line: 4916, column: 11, scope: !11650)
!11654 = !DILocation(line: 4916, column: 36, scope: !11650)
!11655 = !DILocation(line: 4916, column: 33, scope: !11650)
!11656 = !DILocation(line: 4916, column: 6, scope: !11650)
!11657 = !DILocation(line: 4916, column: 9, scope: !11650)
!11658 = !DILocation(line: 4916, column: 3, scope: !11650)
!11659 = !DILocation(line: 4915, column: 50, scope: !11650)
!11660 = !DILocation(line: 4915, column: 8, scope: !11650)
!11661 = distinct !{!11661, !11652, !11662}
!11662 = !DILocation(line: 4916, column: 36, scope: !11647)
!11663 = !DILocation(line: 4917, column: 8, scope: !11645)
!11664 = !DILocation(line: 4917, column: 15, scope: !11645)
!11665 = !DILocation(line: 4917, column: 17, scope: !11645)
!11666 = !DILocation(line: 4917, column: 46, scope: !11645)
!11667 = !DILocation(line: 4917, column: 49, scope: !11645)
!11668 = !DILocation(line: 4917, column: 53, scope: !11645)
!11669 = !DILocation(line: 4917, column: 51, scope: !11645)
!11670 = !DILocation(line: 0, scope: !11645)
!11671 = !DILocation(line: 4920, column: 9, scope: !11672)
!11672 = distinct !DILexicalBlock(scope: !11645, file: !1, line: 4918, column: 3)
!11673 = !DILocation(line: 4920, column: 36, scope: !11672)
!11674 = !DILocation(line: 4920, column: 38, scope: !11672)
!11675 = !DILocation(line: 4920, column: 32, scope: !11672)
!11676 = !DILocation(line: 4919, column: 8, scope: !11672)
!11677 = !DILocation(line: 4920, column: 7, scope: !11672)
!11678 = !DILocation(line: 4921, column: 7, scope: !11672)
!11679 = distinct !{!11679, !11663, !11680}
!11680 = !DILocation(line: 4922, column: 3, scope: !11645)
!11681 = !DILocation(line: 4925, column: 8, scope: !11645)
!11682 = !DILocation(line: 4925, column: 15, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11684, file: !1, line: 4925, column: 8)
!11684 = distinct !DILexicalBlock(scope: !11645, file: !1, line: 4925, column: 8)
!11685 = !DILocation(line: 4925, column: 19, scope: !11683)
!11686 = !DILocation(line: 4925, column: 17, scope: !11683)
!11687 = !DILocation(line: 4925, column: 8, scope: !11684)
!11688 = !DILocation(line: 4926, column: 6, scope: !11683)
!11689 = !DILocation(line: 4926, column: 9, scope: !11683)
!11690 = !DILocation(line: 4926, column: 3, scope: !11683)
!11691 = !DILocation(line: 4925, column: 35, scope: !11683)
!11692 = !DILocation(line: 4925, column: 8, scope: !11683)
!11693 = distinct !{!11693, !11687, !11694}
!11694 = !DILocation(line: 4926, column: 11, scope: !11684)
!11695 = !DILocation(line: 4927, column: 6, scope: !11645)
!11696 = !DILocalVariable(name: "tmp", scope: !11697, file: !1, line: 4930, type: !11698)
!11697 = distinct !DILexicalBlock(scope: !11641, file: !1, line: 4929, column: 6)
!11698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1585, size: 1024, elements: !11699)
!11699 = !{!11700}
!11700 = !DISubrange(count: 16)
!11701 = !DILocation(line: 4930, column: 13, scope: !11697)
!11702 = !DILocalVariable(name: "bitsize", scope: !11697, file: !1, line: 4931, type: !1518)
!11703 = !DILocation(line: 4931, column: 12, scope: !11697)
!11704 = !DILocation(line: 4931, column: 22, scope: !11697)
!11705 = !DILocation(line: 4933, column: 8, scope: !11697)
!11706 = !DILocation(line: 4934, column: 8, scope: !11697)
!11707 = !DILocation(line: 4935, column: 8, scope: !11697)
!11708 = !DILocation(line: 4937, column: 24, scope: !11697)
!11709 = !DILocation(line: 4937, column: 29, scope: !11697)
!11710 = !DILocation(line: 4938, column: 10, scope: !11697)
!11711 = !DILocation(line: 4937, column: 8, scope: !11697)
!11712 = !DILocation(line: 4944, column: 15, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11697, file: !1, line: 4944, column: 8)
!11714 = !DILocation(line: 4944, column: 13, scope: !11713)
!11715 = !DILocation(line: 4944, column: 20, scope: !11716)
!11716 = distinct !DILexicalBlock(scope: !11713, file: !1, line: 4944, column: 8)
!11717 = !DILocation(line: 4944, column: 24, scope: !11716)
!11718 = !DILocation(line: 4944, column: 22, scope: !11716)
!11719 = !DILocation(line: 4944, column: 8, scope: !11713)
!11720 = !DILocalVariable(name: "ibase", scope: !11721, file: !1, line: 4946, type: !1518)
!11721 = distinct !DILexicalBlock(scope: !11716, file: !1, line: 4945, column: 3)
!11722 = !DILocation(line: 4946, column: 9, scope: !11721)
!11723 = !DILocation(line: 4950, column: 15, scope: !11724)
!11724 = distinct !DILexicalBlock(scope: !11721, file: !1, line: 4947, column: 9)
!11725 = !DILocation(line: 4950, column: 13, scope: !11724)
!11726 = !DILocation(line: 4951, column: 17, scope: !11721)
!11727 = !DILocation(line: 4951, column: 23, scope: !11721)
!11728 = !DILocation(line: 4951, column: 13, scope: !11721)
!11729 = !DILocation(line: 4951, column: 32, scope: !11721)
!11730 = !DILocation(line: 4951, column: 34, scope: !11721)
!11731 = !DILocation(line: 4951, column: 29, scope: !11721)
!11732 = !DILocation(line: 4951, column: 8, scope: !11721)
!11733 = !DILocation(line: 4951, column: 11, scope: !11721)
!11734 = !DILocation(line: 4952, column: 3, scope: !11721)
!11735 = !DILocation(line: 4944, column: 35, scope: !11716)
!11736 = !DILocation(line: 4944, column: 8, scope: !11716)
!11737 = distinct !{!11737, !11719, !11738}
!11738 = !DILocation(line: 4952, column: 3, scope: !11713)
!11739 = !DILocation(line: 4956, column: 8, scope: !11697)
!11740 = !DILocation(line: 4956, column: 15, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11742, file: !1, line: 4956, column: 8)
!11742 = distinct !DILexicalBlock(scope: !11697, file: !1, line: 4956, column: 8)
!11743 = !DILocation(line: 4956, column: 19, scope: !11741)
!11744 = !DILocation(line: 4956, column: 17, scope: !11741)
!11745 = !DILocation(line: 4956, column: 8, scope: !11742)
!11746 = !DILocation(line: 4957, column: 6, scope: !11741)
!11747 = !DILocation(line: 4957, column: 9, scope: !11741)
!11748 = !DILocation(line: 4957, column: 3, scope: !11741)
!11749 = !DILocation(line: 4956, column: 35, scope: !11741)
!11750 = !DILocation(line: 4956, column: 8, scope: !11741)
!11751 = distinct !{!11751, !11745, !11752}
!11752 = !DILocation(line: 4957, column: 11, scope: !11742)
!11753 = !DILocation(line: 4959, column: 4, scope: !11602)
!11754 = !DILocation(line: 4962, column: 8, scope: !11755)
!11755 = distinct !DILexicalBlock(scope: !11602, file: !1, line: 4962, column: 8)
!11756 = !DILocation(line: 4962, column: 21, scope: !11755)
!11757 = !DILocation(line: 4962, column: 8, scope: !11602)
!11758 = !DILocation(line: 4964, column: 15, scope: !11759)
!11759 = distinct !DILexicalBlock(scope: !11760, file: !1, line: 4964, column: 8)
!11760 = distinct !DILexicalBlock(scope: !11755, file: !1, line: 4963, column: 6)
!11761 = !DILocation(line: 4964, column: 13, scope: !11759)
!11762 = !DILocation(line: 4964, column: 20, scope: !11763)
!11763 = distinct !DILexicalBlock(scope: !11759, file: !1, line: 4964, column: 8)
!11764 = !DILocation(line: 4964, column: 24, scope: !11763)
!11765 = !DILocation(line: 4964, column: 22, scope: !11763)
!11766 = !DILocation(line: 4964, column: 8, scope: !11759)
!11767 = !DILocation(line: 4965, column: 11, scope: !11763)
!11768 = !DILocation(line: 4965, column: 41, scope: !11763)
!11769 = !DILocation(line: 4965, column: 38, scope: !11763)
!11770 = !DILocation(line: 4965, column: 6, scope: !11763)
!11771 = !DILocation(line: 4965, column: 9, scope: !11763)
!11772 = !DILocation(line: 4965, column: 3, scope: !11763)
!11773 = !DILocation(line: 4964, column: 40, scope: !11763)
!11774 = !DILocation(line: 4964, column: 8, scope: !11763)
!11775 = distinct !{!11775, !11766, !11776}
!11776 = !DILocation(line: 4965, column: 41, scope: !11759)
!11777 = !DILocation(line: 4966, column: 6, scope: !11760)
!11778 = !DILocation(line: 4969, column: 15, scope: !11779)
!11779 = distinct !DILexicalBlock(scope: !11780, file: !1, line: 4969, column: 8)
!11780 = distinct !DILexicalBlock(scope: !11755, file: !1, line: 4968, column: 6)
!11781 = !DILocation(line: 4969, column: 13, scope: !11779)
!11782 = !DILocation(line: 4969, column: 20, scope: !11783)
!11783 = distinct !DILexicalBlock(scope: !11779, file: !1, line: 4969, column: 8)
!11784 = !DILocation(line: 4969, column: 22, scope: !11783)
!11785 = !DILocation(line: 4969, column: 8, scope: !11779)
!11786 = !DILocation(line: 4970, column: 11, scope: !11783)
!11787 = !DILocation(line: 4970, column: 41, scope: !11783)
!11788 = !DILocation(line: 4970, column: 38, scope: !11783)
!11789 = !DILocation(line: 4970, column: 6, scope: !11783)
!11790 = !DILocation(line: 4970, column: 9, scope: !11783)
!11791 = !DILocation(line: 4970, column: 3, scope: !11783)
!11792 = !DILocation(line: 4969, column: 50, scope: !11783)
!11793 = !DILocation(line: 4969, column: 8, scope: !11783)
!11794 = distinct !{!11794, !11785, !11795}
!11795 = !DILocation(line: 4970, column: 41, scope: !11779)
!11796 = !DILocation(line: 4971, column: 15, scope: !11780)
!11797 = !DILocation(line: 4971, column: 22, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11799, file: !1, line: 4971, column: 15)
!11799 = distinct !DILexicalBlock(scope: !11780, file: !1, line: 4971, column: 15)
!11800 = !DILocation(line: 4971, column: 24, scope: !11798)
!11801 = !DILocation(line: 4971, column: 53, scope: !11798)
!11802 = !DILocation(line: 4971, column: 56, scope: !11798)
!11803 = !DILocation(line: 4971, column: 60, scope: !11798)
!11804 = !DILocation(line: 4971, column: 58, scope: !11798)
!11805 = !DILocation(line: 0, scope: !11798)
!11806 = !DILocation(line: 4971, column: 15, scope: !11799)
!11807 = !DILocation(line: 4973, column: 11, scope: !11798)
!11808 = !DILocation(line: 4974, column: 8, scope: !11798)
!11809 = !DILocation(line: 4974, column: 10, scope: !11798)
!11810 = !DILocation(line: 4974, column: 4, scope: !11798)
!11811 = !DILocation(line: 4973, column: 6, scope: !11798)
!11812 = !DILocation(line: 4973, column: 9, scope: !11798)
!11813 = !DILocation(line: 4973, column: 3, scope: !11798)
!11814 = !DILocation(line: 4972, column: 8, scope: !11798)
!11815 = !DILocation(line: 4971, column: 15, scope: !11798)
!11816 = distinct !{!11816, !11806, !11817}
!11817 = !DILocation(line: 4974, column: 34, scope: !11799)
!11818 = !DILocation(line: 4975, column: 8, scope: !11780)
!11819 = !DILocation(line: 4975, column: 15, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11821, file: !1, line: 4975, column: 8)
!11821 = distinct !DILexicalBlock(scope: !11780, file: !1, line: 4975, column: 8)
!11822 = !DILocation(line: 4975, column: 19, scope: !11820)
!11823 = !DILocation(line: 4975, column: 17, scope: !11820)
!11824 = !DILocation(line: 4975, column: 8, scope: !11821)
!11825 = !DILocation(line: 4976, column: 6, scope: !11820)
!11826 = !DILocation(line: 4976, column: 9, scope: !11820)
!11827 = !DILocation(line: 4976, column: 3, scope: !11820)
!11828 = !DILocation(line: 4975, column: 35, scope: !11820)
!11829 = !DILocation(line: 4975, column: 8, scope: !11820)
!11830 = distinct !{!11830, !11824, !11831}
!11831 = !DILocation(line: 4976, column: 11, scope: !11821)
!11832 = !DILocation(line: 4978, column: 11, scope: !11602)
!11833 = !DILocation(line: 4981, column: 4, scope: !11602)
!11834 = !DILocation(line: 4982, column: 2, scope: !11602)
!11835 = !DILocation(line: 4983, column: 5, scope: !11555)
!11836 = !DILocation(line: 4878, column: 39, scope: !11550)
!11837 = !DILocation(line: 4878, column: 3, scope: !11550)
!11838 = distinct !{!11838, !11553, !11839}
!11839 = !DILocation(line: 4983, column: 5, scope: !11547)
!11840 = !DILocation(line: 4989, column: 7, scope: !11841)
!11841 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 4989, column: 7)
!11842 = !DILocation(line: 4989, column: 36, scope: !11841)
!11843 = !DILocation(line: 4989, column: 33, scope: !11841)
!11844 = !DILocation(line: 4989, column: 7, scope: !1492)
!11845 = !DILocalVariable(name: "ibyte", scope: !11846, file: !1, line: 4991, type: !5)
!11846 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 4990, column: 5)
!11847 = !DILocation(line: 4991, column: 16, scope: !11846)
!11848 = !DILocation(line: 4991, column: 25, scope: !11846)
!11849 = !DILocation(line: 4991, column: 53, scope: !11846)
!11850 = !DILocation(line: 4991, column: 51, scope: !11846)
!11851 = !DILocation(line: 4992, column: 6, scope: !11846)
!11852 = !DILocation(line: 4992, column: 4, scope: !11846)
!11853 = !DILocalVariable(name: "word_byte", scope: !11846, file: !1, line: 4993, type: !5)
!11854 = !DILocation(line: 4993, column: 16, scope: !11846)
!11855 = !DILocation(line: 4993, column: 55, scope: !11846)
!11856 = !DILocalVariable(name: "subword_byte", scope: !11846, file: !1, line: 4994, type: !5)
!11857 = !DILocation(line: 4994, column: 16, scope: !11846)
!11858 = !DILocation(line: 4994, column: 58, scope: !11846)
!11859 = !DILocation(line: 4995, column: 15, scope: !11846)
!11860 = !DILocation(line: 4995, column: 28, scope: !11846)
!11861 = !DILocation(line: 4996, column: 11, scope: !11846)
!11862 = !DILocation(line: 4996, column: 21, scope: !11846)
!11863 = !DILocation(line: 4996, column: 39, scope: !11846)
!11864 = !DILocation(line: 4996, column: 8, scope: !11846)
!11865 = !DILocation(line: 4995, column: 12, scope: !11846)
!11866 = !DILocation(line: 4997, column: 5, scope: !11846)
!11867 = !DILocation(line: 5001, column: 3, scope: !1492)
!11868 = !DILocation(line: 5004, column: 17, scope: !1492)
!11869 = !DILocation(line: 5004, column: 22, scope: !1492)
!11870 = !DILocation(line: 5004, column: 15, scope: !1492)
!11871 = !DILocation(line: 5008, column: 7, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 5008, column: 7)
!11873 = !DILocation(line: 5008, column: 7, scope: !1492)
!11874 = !DILocation(line: 5010, column: 18, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !1, line: 5009, column: 5)
!11876 = !DILocation(line: 5010, column: 16, scope: !11875)
!11877 = !DILocation(line: 5011, column: 31, scope: !11875)
!11878 = !DILocation(line: 5011, column: 18, scope: !11875)
!11879 = !DILocation(line: 5011, column: 16, scope: !11875)
!11880 = !DILocation(line: 5012, column: 16, scope: !11875)
!11881 = !DILocation(line: 5012, column: 13, scope: !11875)
!11882 = !DILocation(line: 5013, column: 23, scope: !11875)
!11883 = !DILocation(line: 5013, column: 21, scope: !11875)
!11884 = !DILocation(line: 5014, column: 5, scope: !11875)
!11885 = !DILocation(line: 5017, column: 16, scope: !11886)
!11886 = distinct !DILexicalBlock(scope: !11872, file: !1, line: 5016, column: 5)
!11887 = !DILocation(line: 5018, column: 13, scope: !11886)
!11888 = !DILocation(line: 5019, column: 23, scope: !11886)
!11889 = !DILocation(line: 5019, column: 21, scope: !11886)
!11890 = !DILocation(line: 5022, column: 17, scope: !1492)
!11891 = !DILocation(line: 5022, column: 15, scope: !1492)
!11892 = !DILocation(line: 5023, column: 18, scope: !1492)
!11893 = !DILocation(line: 5023, column: 16, scope: !1492)
!11894 = !DILocation(line: 5025, column: 3, scope: !1492)
!11895 = !DILocation(line: 5026, column: 3, scope: !1492)
!11896 = !DILocation(line: 5028, column: 13, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 5028, column: 3)
!11898 = !DILocation(line: 5028, column: 8, scope: !11897)
!11899 = !DILocation(line: 5028, column: 18, scope: !11900)
!11900 = distinct !DILexicalBlock(scope: !11897, file: !1, line: 5028, column: 3)
!11901 = !DILocation(line: 5028, column: 25, scope: !11900)
!11902 = !DILocation(line: 5028, column: 23, scope: !11900)
!11903 = !DILocation(line: 5028, column: 3, scope: !11897)
!11904 = !DILocalVariable(name: "vp", scope: !11905, file: !1, line: 5030, type: !11556)
!11905 = distinct !DILexicalBlock(scope: !11900, file: !1, line: 5029, column: 5)
!11906 = !DILocation(line: 5030, column: 22, scope: !11905)
!11907 = !DILocalVariable(name: "byte", scope: !11908, file: !1, line: 5035, type: !5)
!11908 = distinct !DILexicalBlock(scope: !11905, file: !1, line: 5034, column: 7)
!11909 = !DILocation(line: 5035, column: 11, scope: !11908)
!11910 = !DILocation(line: 5035, column: 19, scope: !11908)
!11911 = !DILocation(line: 5035, column: 26, scope: !11908)
!11912 = !DILocation(line: 5035, column: 24, scope: !11908)
!11913 = !DILocation(line: 5035, column: 40, scope: !11908)
!11914 = !DILocalVariable(name: "ibyte", scope: !11908, file: !1, line: 5036, type: !5)
!11915 = !DILocation(line: 5036, column: 11, scope: !11908)
!11916 = !DILocation(line: 5036, column: 22, scope: !11908)
!11917 = !DILocation(line: 5036, column: 31, scope: !11908)
!11918 = !DILocation(line: 5036, column: 37, scope: !11908)
!11919 = !DILocation(line: 5036, column: 35, scope: !11908)
!11920 = !DILocation(line: 5036, column: 45, scope: !11908)
!11921 = !DILocation(line: 5036, column: 43, scope: !11908)
!11922 = !DILocation(line: 5037, column: 6, scope: !11908)
!11923 = !DILocalVariable(name: "word_byte", scope: !11908, file: !1, line: 5038, type: !5)
!11924 = !DILocation(line: 5038, column: 11, scope: !11908)
!11925 = !DILocation(line: 5038, column: 50, scope: !11908)
!11926 = !DILocalVariable(name: "subword_byte", scope: !11908, file: !1, line: 5039, type: !5)
!11927 = !DILocation(line: 5039, column: 11, scope: !11908)
!11928 = !DILocation(line: 5039, column: 53, scope: !11908)
!11929 = !DILocalVariable(name: "bytele", scope: !11908, file: !1, line: 5040, type: !5)
!11930 = !DILocation(line: 5040, column: 11, scope: !11908)
!11931 = !DILocation(line: 5040, column: 21, scope: !11908)
!11932 = !DILocation(line: 5040, column: 34, scope: !11908)
!11933 = !DILocation(line: 5041, column: 8, scope: !11908)
!11934 = !DILocation(line: 5041, column: 18, scope: !11908)
!11935 = !DILocation(line: 5041, column: 36, scope: !11908)
!11936 = !DILocation(line: 5041, column: 5, scope: !11908)
!11937 = !DILocation(line: 5042, column: 7, scope: !11908)
!11938 = !DILocation(line: 5042, column: 15, scope: !11908)
!11939 = !DILocation(line: 5042, column: 13, scope: !11908)
!11940 = !DILocation(line: 5042, column: 30, scope: !11908)
!11941 = !DILocation(line: 5042, column: 37, scope: !11908)
!11942 = !DILocation(line: 5042, column: 54, scope: !11908)
!11943 = !DILocation(line: 5042, column: 27, scope: !11908)
!11944 = !DILocation(line: 5042, column: 5, scope: !11908)
!11945 = !DILocation(line: 5045, column: 15, scope: !11905)
!11946 = !DILocation(line: 5045, column: 7, scope: !11905)
!11947 = !DILocalVariable(name: "hi", scope: !11948, file: !1, line: 5050, type: !1568)
!11948 = distinct !DILexicalBlock(scope: !11949, file: !1, line: 5049, column: 4)
!11949 = distinct !DILexicalBlock(scope: !11905, file: !1, line: 5046, column: 2)
!11950 = !DILocation(line: 5050, column: 29, scope: !11948)
!11951 = !DILocalVariable(name: "lo", scope: !11948, file: !1, line: 5050, type: !1568)
!11952 = !DILocation(line: 5050, column: 37, scope: !11948)
!11953 = !DILocation(line: 5052, column: 13, scope: !11954)
!11954 = distinct !DILexicalBlock(scope: !11948, file: !1, line: 5052, column: 6)
!11955 = !DILocation(line: 5052, column: 11, scope: !11954)
!11956 = !DILocation(line: 5053, column: 4, scope: !11957)
!11957 = distinct !DILexicalBlock(scope: !11954, file: !1, line: 5052, column: 6)
!11958 = !DILocation(line: 5053, column: 6, scope: !11957)
!11959 = !DILocation(line: 5053, column: 31, scope: !11957)
!11960 = !DILocation(line: 5053, column: 34, scope: !11957)
!11961 = !DILocation(line: 5053, column: 38, scope: !11957)
!11962 = !DILocation(line: 5053, column: 36, scope: !11957)
!11963 = !DILocation(line: 0, scope: !11957)
!11964 = !DILocation(line: 5052, column: 6, scope: !11954)
!11965 = !DILocation(line: 5055, column: 33, scope: !11957)
!11966 = !DILocation(line: 5055, column: 30, scope: !11957)
!11967 = !DILocation(line: 5055, column: 36, scope: !11957)
!11968 = !DILocation(line: 5055, column: 14, scope: !11957)
!11969 = !DILocation(line: 5055, column: 53, scope: !11957)
!11970 = !DILocation(line: 5055, column: 50, scope: !11957)
!11971 = !DILocation(line: 5055, column: 11, scope: !11957)
!11972 = !DILocation(line: 5055, column: 8, scope: !11957)
!11973 = !DILocation(line: 5054, column: 6, scope: !11957)
!11974 = !DILocation(line: 5052, column: 6, scope: !11957)
!11975 = distinct !{!11975, !11964, !11976}
!11976 = !DILocation(line: 5055, column: 53, scope: !11954)
!11977 = !DILocation(line: 5056, column: 6, scope: !11948)
!11978 = !DILocation(line: 5056, column: 13, scope: !11979)
!11979 = distinct !DILexicalBlock(scope: !11980, file: !1, line: 5056, column: 6)
!11980 = distinct !DILexicalBlock(scope: !11948, file: !1, line: 5056, column: 6)
!11981 = !DILocation(line: 5056, column: 17, scope: !11979)
!11982 = !DILocation(line: 5056, column: 15, scope: !11979)
!11983 = !DILocation(line: 5056, column: 6, scope: !11980)
!11984 = !DILocation(line: 5057, column: 34, scope: !11979)
!11985 = !DILocation(line: 5057, column: 31, scope: !11979)
!11986 = !DILocation(line: 5057, column: 37, scope: !11979)
!11987 = !DILocation(line: 5057, column: 15, scope: !11979)
!11988 = !DILocation(line: 5058, column: 12, scope: !11979)
!11989 = !DILocation(line: 5058, column: 14, scope: !11979)
!11990 = !DILocation(line: 5058, column: 8, scope: !11979)
!11991 = !DILocation(line: 5057, column: 11, scope: !11979)
!11992 = !DILocation(line: 5057, column: 8, scope: !11979)
!11993 = !DILocation(line: 5056, column: 33, scope: !11979)
!11994 = !DILocation(line: 5056, column: 6, scope: !11979)
!11995 = distinct !{!11995, !11983, !11996}
!11996 = !DILocation(line: 5058, column: 39, scope: !11980)
!11997 = !DILocation(line: 5062, column: 10, scope: !11998)
!11998 = distinct !DILexicalBlock(scope: !11948, file: !1, line: 5062, column: 10)
!11999 = !DILocation(line: 5062, column: 23, scope: !11998)
!12000 = !DILocation(line: 5062, column: 10, scope: !11948)
!12001 = !DILocation(line: 5063, column: 36, scope: !11998)
!12002 = !DILocation(line: 5063, column: 40, scope: !11998)
!12003 = !DILocation(line: 5063, column: 22, scope: !11998)
!12004 = !DILocation(line: 5063, column: 8, scope: !11998)
!12005 = !DILocation(line: 5063, column: 14, scope: !11998)
!12006 = !DILocation(line: 5063, column: 20, scope: !11998)
!12007 = !DILocation(line: 5064, column: 15, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !11998, file: !1, line: 5064, column: 15)
!12009 = !DILocation(line: 5064, column: 28, scope: !12008)
!12010 = !DILocation(line: 5064, column: 15, scope: !11998)
!12011 = !DILocation(line: 5065, column: 42, scope: !12008)
!12012 = !DILocation(line: 5065, column: 46, scope: !12008)
!12013 = !DILocation(line: 5065, column: 50, scope: !12008)
!12014 = !DILocation(line: 5065, column: 22, scope: !12008)
!12015 = !DILocation(line: 5065, column: 8, scope: !12008)
!12016 = !DILocation(line: 5065, column: 14, scope: !12008)
!12017 = !DILocation(line: 5065, column: 20, scope: !12008)
!12018 = !DILocation(line: 5067, column: 8, scope: !12008)
!12019 = !DILocation(line: 5069, column: 4, scope: !11949)
!12020 = !DILocalVariable(name: "r", scope: !12021, file: !1, line: 5074, type: !1676)
!12021 = distinct !DILexicalBlock(scope: !11949, file: !1, line: 5073, column: 4)
!12022 = !DILocation(line: 5074, column: 22, scope: !12021)
!12023 = !DILocalVariable(name: "tmp", scope: !12021, file: !1, line: 5075, type: !11698)
!12024 = !DILocation(line: 5075, column: 11, scope: !12021)
!12025 = !DILocation(line: 5081, column: 13, scope: !12026)
!12026 = distinct !DILexicalBlock(scope: !12021, file: !1, line: 5081, column: 6)
!12027 = !DILocation(line: 5081, column: 11, scope: !12026)
!12028 = !DILocation(line: 5081, column: 18, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12026, file: !1, line: 5081, column: 6)
!12030 = !DILocation(line: 5081, column: 20, scope: !12029)
!12031 = !DILocation(line: 5081, column: 6, scope: !12026)
!12032 = !DILocation(line: 5082, column: 12, scope: !12029)
!12033 = !DILocation(line: 5082, column: 8, scope: !12029)
!12034 = !DILocation(line: 5082, column: 15, scope: !12029)
!12035 = !DILocation(line: 5081, column: 41, scope: !12029)
!12036 = !DILocation(line: 5081, column: 6, scope: !12029)
!12037 = distinct !{!12037, !12031, !12038}
!12038 = !DILocation(line: 5082, column: 17, scope: !12026)
!12039 = !DILocation(line: 5083, column: 13, scope: !12040)
!12040 = distinct !DILexicalBlock(scope: !12021, file: !1, line: 5083, column: 6)
!12041 = !DILocation(line: 5083, column: 11, scope: !12040)
!12042 = !DILocation(line: 5083, column: 18, scope: !12043)
!12043 = distinct !DILexicalBlock(scope: !12040, file: !1, line: 5083, column: 6)
!12044 = !DILocation(line: 5083, column: 22, scope: !12043)
!12045 = !DILocation(line: 5083, column: 20, scope: !12043)
!12046 = !DILocation(line: 5083, column: 6, scope: !12040)
!12047 = !DILocalVariable(name: "ibase", scope: !12048, file: !1, line: 5085, type: !1518)
!12048 = distinct !DILexicalBlock(scope: !12043, file: !1, line: 5084, column: 8)
!12049 = !DILocation(line: 5085, column: 7, scope: !12048)
!12050 = !DILocation(line: 5089, column: 13, scope: !12051)
!12051 = distinct !DILexicalBlock(scope: !12048, file: !1, line: 5086, column: 7)
!12052 = !DILocation(line: 5089, column: 11, scope: !12051)
!12053 = !DILocation(line: 5090, column: 26, scope: !12048)
!12054 = !DILocation(line: 5090, column: 23, scope: !12048)
!12055 = !DILocation(line: 5090, column: 29, scope: !12048)
!12056 = !DILocation(line: 5090, column: 46, scope: !12048)
!12057 = !DILocation(line: 5090, column: 48, scope: !12048)
!12058 = !DILocation(line: 5090, column: 43, scope: !12048)
!12059 = !DILocation(line: 5090, column: 22, scope: !12048)
!12060 = !DILocation(line: 5090, column: 7, scope: !12048)
!12061 = !DILocation(line: 5090, column: 13, scope: !12048)
!12062 = !DILocation(line: 5090, column: 3, scope: !12048)
!12063 = !DILocation(line: 5090, column: 19, scope: !12048)
!12064 = !DILocation(line: 5091, column: 8, scope: !12048)
!12065 = !DILocation(line: 5083, column: 38, scope: !12043)
!12066 = !DILocation(line: 5083, column: 6, scope: !12043)
!12067 = distinct !{!12067, !12046, !12068}
!12068 = !DILocation(line: 5091, column: 8, scope: !12040)
!12069 = !DILocation(line: 5093, column: 28, scope: !12021)
!12070 = !DILocation(line: 5093, column: 33, scope: !12021)
!12071 = !DILocation(line: 5093, column: 6, scope: !12021)
!12072 = !DILocation(line: 5094, column: 20, scope: !12021)
!12073 = !DILocation(line: 5094, column: 6, scope: !12021)
!12074 = !DILocation(line: 5094, column: 12, scope: !12021)
!12075 = !DILocation(line: 5094, column: 18, scope: !12021)
!12076 = !DILocation(line: 5096, column: 4, scope: !11949)
!12077 = !DILocalVariable(name: "f", scope: !12078, file: !1, line: 5103, type: !1695)
!12078 = distinct !DILexicalBlock(scope: !11949, file: !1, line: 5102, column: 4)
!12079 = !DILocation(line: 5103, column: 23, scope: !12078)
!12080 = !DILocation(line: 5104, column: 8, scope: !12078)
!12081 = !DILocation(line: 5104, column: 13, scope: !12078)
!12082 = !DILocation(line: 5104, column: 17, scope: !12078)
!12083 = !DILocation(line: 5105, column: 8, scope: !12078)
!12084 = !DILocation(line: 5105, column: 13, scope: !12078)
!12085 = !DILocation(line: 5105, column: 18, scope: !12078)
!12086 = !DILocation(line: 5106, column: 15, scope: !12078)
!12087 = !DILocation(line: 5106, column: 8, scope: !12078)
!12088 = !DILocation(line: 5106, column: 13, scope: !12078)
!12089 = !DILocation(line: 5108, column: 13, scope: !12090)
!12090 = distinct !DILexicalBlock(scope: !12078, file: !1, line: 5108, column: 6)
!12091 = !DILocation(line: 5108, column: 11, scope: !12090)
!12092 = !DILocation(line: 5109, column: 4, scope: !12093)
!12093 = distinct !DILexicalBlock(scope: !12090, file: !1, line: 5108, column: 6)
!12094 = !DILocation(line: 5109, column: 6, scope: !12093)
!12095 = !DILocation(line: 5109, column: 31, scope: !12093)
!12096 = !DILocation(line: 5109, column: 34, scope: !12093)
!12097 = !DILocation(line: 5109, column: 38, scope: !12093)
!12098 = !DILocation(line: 5109, column: 36, scope: !12093)
!12099 = !DILocation(line: 0, scope: !12093)
!12100 = !DILocation(line: 5108, column: 6, scope: !12090)
!12101 = !DILocation(line: 5111, column: 41, scope: !12093)
!12102 = !DILocation(line: 5111, column: 38, scope: !12093)
!12103 = !DILocation(line: 5111, column: 44, scope: !12093)
!12104 = !DILocation(line: 5111, column: 22, scope: !12093)
!12105 = !DILocation(line: 5111, column: 61, scope: !12093)
!12106 = !DILocation(line: 5111, column: 58, scope: !12093)
!12107 = !DILocation(line: 5111, column: 10, scope: !12093)
!12108 = !DILocation(line: 5111, column: 15, scope: !12093)
!12109 = !DILocation(line: 5111, column: 19, scope: !12093)
!12110 = !DILocation(line: 5111, column: 8, scope: !12093)
!12111 = !DILocation(line: 5110, column: 6, scope: !12093)
!12112 = !DILocation(line: 5108, column: 6, scope: !12093)
!12113 = distinct !{!12113, !12100, !12114}
!12114 = !DILocation(line: 5111, column: 61, scope: !12090)
!12115 = !DILocation(line: 5112, column: 6, scope: !12078)
!12116 = !DILocation(line: 5112, column: 13, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !12118, file: !1, line: 5112, column: 6)
!12118 = distinct !DILexicalBlock(scope: !12078, file: !1, line: 5112, column: 6)
!12119 = !DILocation(line: 5112, column: 17, scope: !12117)
!12120 = !DILocation(line: 5112, column: 15, scope: !12117)
!12121 = !DILocation(line: 5112, column: 6, scope: !12118)
!12122 = !DILocation(line: 5113, column: 43, scope: !12117)
!12123 = !DILocation(line: 5113, column: 40, scope: !12117)
!12124 = !DILocation(line: 5113, column: 46, scope: !12117)
!12125 = !DILocation(line: 5113, column: 24, scope: !12117)
!12126 = !DILocation(line: 5114, column: 13, scope: !12117)
!12127 = !DILocation(line: 5114, column: 15, scope: !12117)
!12128 = !DILocation(line: 5114, column: 9, scope: !12117)
!12129 = !DILocation(line: 5113, column: 10, scope: !12117)
!12130 = !DILocation(line: 5113, column: 15, scope: !12117)
!12131 = !DILocation(line: 5113, column: 20, scope: !12117)
!12132 = !DILocation(line: 5113, column: 8, scope: !12117)
!12133 = !DILocation(line: 5112, column: 33, scope: !12117)
!12134 = !DILocation(line: 5112, column: 6, scope: !12117)
!12135 = distinct !{!12135, !12121, !12136}
!12136 = !DILocation(line: 5114, column: 40, scope: !12118)
!12137 = !DILocation(line: 5116, column: 20, scope: !12078)
!12138 = !DILocation(line: 5116, column: 6, scope: !12078)
!12139 = !DILocation(line: 5116, column: 12, scope: !12078)
!12140 = !DILocation(line: 5116, column: 18, scope: !12078)
!12141 = !DILocation(line: 5118, column: 11, scope: !11949)
!12142 = !DILocation(line: 5121, column: 4, scope: !11949)
!12143 = !DILocation(line: 5122, column: 2, scope: !11949)
!12144 = !DILocation(line: 5123, column: 5, scope: !11905)
!12145 = !DILocation(line: 5028, column: 39, scope: !11900)
!12146 = !DILocation(line: 5028, column: 3, scope: !11900)
!12147 = distinct !{!12147, !11903, !12148}
!12148 = !DILocation(line: 5123, column: 5, scope: !11897)
!12149 = !DILocation(line: 5124, column: 7, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !1492, file: !1, line: 5124, column: 7)
!12151 = !DILocation(line: 5124, column: 7, scope: !1492)
!12152 = !DILocation(line: 5125, column: 34, scope: !12150)
!12153 = !DILocation(line: 5125, column: 45, scope: !12150)
!12154 = !DILocation(line: 5125, column: 12, scope: !12150)
!12155 = !DILocation(line: 5125, column: 5, scope: !12150)
!12156 = !DILocation(line: 5127, column: 12, scope: !12150)
!12157 = !DILocation(line: 5127, column: 5, scope: !12150)
!12158 = !DILocation(line: 5128, column: 1, scope: !1492)
!12159 = distinct !DISubprogram(name: "rhs_regno", scope: !398, file: !398, line: 1051, type: !12160, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!12160 = !DISubroutineType(types: !12161)
!12161 = !{!5, !2588}
!12162 = !DILocalVariable(name: "x", arg: 1, scope: !12159, file: !398, line: 1051, type: !2588)
!12163 = !DILocation(line: 1051, column: 22, scope: !12159)
!12164 = !DILocation(line: 1053, column: 10, scope: !12159)
!12165 = !DILocation(line: 1053, column: 3, scope: !12159)
!12166 = distinct !DISubprogram(name: "simplify_rtx", scope: !1, file: !1, line: 5508, type: !12167, scopeLine: 5509, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!12167 = !DISubroutineType(types: !12168)
!12168 = !{!1495, !2588}
!12169 = !DILocalVariable(name: "x", arg: 1, scope: !12166, file: !1, line: 5508, type: !2588)
!12170 = !DILocation(line: 5508, column: 25, scope: !12166)
!12171 = !DILocalVariable(name: "code", scope: !12166, file: !1, line: 5510, type: !12172)
!12172 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !397)
!12173 = !DILocation(line: 5510, column: 23, scope: !12166)
!12174 = !DILocation(line: 5510, column: 30, scope: !12166)
!12175 = !DILocalVariable(name: "mode", scope: !12166, file: !1, line: 5511, type: !12176)
!12176 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3)
!12177 = !DILocation(line: 5511, column: 27, scope: !12166)
!12178 = !DILocation(line: 5511, column: 34, scope: !12166)
!12179 = !DILocation(line: 5513, column: 11, scope: !12166)
!12180 = !DILocation(line: 5513, column: 3, scope: !12166)
!12181 = !DILocation(line: 5516, column: 40, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12166, file: !1, line: 5514, column: 5)
!12183 = !DILocation(line: 5516, column: 46, scope: !12182)
!12184 = !DILocation(line: 5517, column: 12, scope: !12182)
!12185 = !DILocation(line: 5517, column: 25, scope: !12182)
!12186 = !DILocation(line: 5516, column: 14, scope: !12182)
!12187 = !DILocation(line: 5516, column: 7, scope: !12182)
!12188 = !DILocation(line: 5519, column: 40, scope: !12189)
!12189 = distinct !DILexicalBlock(scope: !12182, file: !1, line: 5519, column: 11)
!12190 = !DILocation(line: 5519, column: 53, scope: !12189)
!12191 = !DILocation(line: 5519, column: 11, scope: !12189)
!12192 = !DILocation(line: 5519, column: 11, scope: !12182)
!12193 = !DILocation(line: 5520, column: 30, scope: !12189)
!12194 = !DILocation(line: 5520, column: 36, scope: !12189)
!12195 = !DILocation(line: 5520, column: 42, scope: !12189)
!12196 = !DILocation(line: 5520, column: 55, scope: !12189)
!12197 = !DILocation(line: 5520, column: 9, scope: !12189)
!12198 = !DILocation(line: 5520, column: 2, scope: !12189)
!12199 = !DILocation(line: 5519, column: 64, scope: !12189)
!12200 = !DILocation(line: 5525, column: 41, scope: !12182)
!12201 = !DILocation(line: 5525, column: 47, scope: !12182)
!12202 = !DILocation(line: 5525, column: 53, scope: !12182)
!12203 = !DILocation(line: 5525, column: 66, scope: !12182)
!12204 = !DILocation(line: 5525, column: 14, scope: !12182)
!12205 = !DILocation(line: 5525, column: 7, scope: !12182)
!12206 = !DILocation(line: 5529, column: 42, scope: !12182)
!12207 = !DILocation(line: 5529, column: 48, scope: !12182)
!12208 = !DILocation(line: 5529, column: 54, scope: !12182)
!12209 = !DILocation(line: 5530, column: 7, scope: !12182)
!12210 = !DILocation(line: 5530, column: 20, scope: !12182)
!12211 = !DILocation(line: 5531, column: 7, scope: !12182)
!12212 = !DILocation(line: 5529, column: 14, scope: !12182)
!12213 = !DILocation(line: 5529, column: 7, scope: !12182)
!12214 = !DILocation(line: 5535, column: 45, scope: !12182)
!12215 = !DILocation(line: 5535, column: 51, scope: !12182)
!12216 = !DILocation(line: 5536, column: 47, scope: !12182)
!12217 = !DILocation(line: 5537, column: 46, scope: !12182)
!12218 = !DILocation(line: 5536, column: 46, scope: !12182)
!12219 = !DILocation(line: 5538, column: 47, scope: !12182)
!12220 = !DILocation(line: 5539, column: 47, scope: !12182)
!12221 = !DILocation(line: 5540, column: 45, scope: !12182)
!12222 = !DILocation(line: 5541, column: 45, scope: !12182)
!12223 = !DILocation(line: 5535, column: 14, scope: !12182)
!12224 = !DILocation(line: 5535, column: 7, scope: !12182)
!12225 = !DILocation(line: 5544, column: 11, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12182, file: !1, line: 5544, column: 11)
!12227 = !DILocation(line: 5544, column: 16, scope: !12226)
!12228 = !DILocation(line: 5544, column: 11, scope: !12182)
!12229 = !DILocation(line: 5545, column: 26, scope: !12226)
!12230 = !DILocation(line: 5545, column: 32, scope: !12226)
!12231 = !DILocation(line: 5546, column: 5, scope: !12226)
!12232 = !DILocation(line: 5547, column: 5, scope: !12226)
!12233 = !DILocation(line: 5545, column: 9, scope: !12226)
!12234 = !DILocation(line: 5545, column: 2, scope: !12226)
!12235 = !DILocation(line: 5548, column: 7, scope: !12182)
!12236 = !DILocation(line: 5551, column: 11, scope: !12237)
!12237 = distinct !DILexicalBlock(scope: !12182, file: !1, line: 5551, column: 11)
!12238 = !DILocation(line: 5551, column: 16, scope: !12237)
!12239 = !DILocation(line: 5551, column: 11, scope: !12182)
!12240 = !DILocation(line: 5554, column: 8, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12242, file: !1, line: 5554, column: 8)
!12242 = distinct !DILexicalBlock(scope: !12237, file: !1, line: 5552, column: 2)
!12243 = !DILocation(line: 5554, column: 31, scope: !12241)
!12244 = !DILocation(line: 5555, column: 8, scope: !12241)
!12245 = !DILocation(line: 5555, column: 24, scope: !12241)
!12246 = !DILocation(line: 5555, column: 47, scope: !12241)
!12247 = !DILocation(line: 5555, column: 11, scope: !12241)
!12248 = !DILocation(line: 5554, column: 8, scope: !12242)
!12249 = !DILocation(line: 5556, column: 11, scope: !12241)
!12250 = !DILocation(line: 5556, column: 4, scope: !12241)
!12251 = !DILocation(line: 5557, column: 2, scope: !12242)
!12252 = !DILocation(line: 5558, column: 7, scope: !12182)
!12253 = !DILocation(line: 5561, column: 7, scope: !12182)
!12254 = !DILocation(line: 5563, column: 3, scope: !12166)
!12255 = !DILocation(line: 5564, column: 1, scope: !12166)
!12256 = distinct !DISubprogram(name: "plus_minus_operand_p", scope: !1, file: !1, line: 3897, type: !12257, scopeLine: 3898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!12257 = !DISubroutineType(types: !12258)
!12258 = !{!1729, !2588}
!12259 = !DILocalVariable(name: "x", arg: 1, scope: !12256, file: !1, line: 3897, type: !2588)
!12260 = !DILocation(line: 3897, column: 33, scope: !12256)
!12261 = !DILocation(line: 3899, column: 10, scope: !12256)
!12262 = !DILocation(line: 3899, column: 23, scope: !12256)
!12263 = !DILocation(line: 3900, column: 10, scope: !12256)
!12264 = !DILocation(line: 3900, column: 13, scope: !12256)
!12265 = !DILocation(line: 3900, column: 26, scope: !12256)
!12266 = !DILocation(line: 3901, column: 3, scope: !12256)
!12267 = !DILocation(line: 3901, column: 7, scope: !12256)
!12268 = !DILocation(line: 3901, column: 20, scope: !12256)
!12269 = !DILocation(line: 3902, column: 7, scope: !12256)
!12270 = !DILocation(line: 3902, column: 10, scope: !12256)
!12271 = !DILocation(line: 3902, column: 33, scope: !12256)
!12272 = !DILocation(line: 3903, column: 7, scope: !12256)
!12273 = !DILocation(line: 3903, column: 10, scope: !12256)
!12274 = !DILocation(line: 3904, column: 7, scope: !12256)
!12275 = !DILocation(line: 3904, column: 10, scope: !12256)
!12276 = !DILocation(line: 0, scope: !12256)
!12277 = !DILocation(line: 3899, column: 3, scope: !12256)
!12278 = distinct !DISubprogram(name: "simplify_plus_minus", scope: !1, file: !1, line: 3622, type: !2653, scopeLine: 3624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!12279 = !DILocalVariable(name: "code", arg: 1, scope: !12278, file: !1, line: 3622, type: !397)
!12280 = !DILocation(line: 3622, column: 36, scope: !12278)
!12281 = !DILocalVariable(name: "mode", arg: 2, scope: !12278, file: !1, line: 3622, type: !3)
!12282 = !DILocation(line: 3622, column: 60, scope: !12278)
!12283 = !DILocalVariable(name: "op0", arg: 3, scope: !12278, file: !1, line: 3622, type: !1495)
!12284 = !DILocation(line: 3622, column: 70, scope: !12278)
!12285 = !DILocalVariable(name: "op1", arg: 4, scope: !12278, file: !1, line: 3623, type: !1495)
!12286 = !DILocation(line: 3623, column: 12, scope: !12278)
!12287 = !DILocalVariable(name: "ops", scope: !12278, file: !1, line: 3625, type: !12288)
!12288 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12289, size: 1024, elements: !12294)
!12289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simplify_plus_minus_op_data", file: !1, line: 3598, size: 128, elements: !12290)
!12290 = !{!12291, !12292}
!12291 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !12289, file: !1, line: 3600, baseType: !1495, size: 64)
!12292 = !DIDerivedType(tag: DW_TAG_member, name: "neg", scope: !12289, file: !1, line: 3601, baseType: !12293, size: 16, offset: 64)
!12293 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!12294 = !{!12295}
!12295 = !DISubrange(count: 8)
!12296 = !DILocation(line: 3625, column: 38, scope: !12278)
!12297 = !DILocalVariable(name: "result", scope: !12278, file: !1, line: 3626, type: !1495)
!12298 = !DILocation(line: 3626, column: 7, scope: !12278)
!12299 = !DILocalVariable(name: "tem", scope: !12278, file: !1, line: 3626, type: !1495)
!12300 = !DILocation(line: 3626, column: 15, scope: !12278)
!12301 = !DILocalVariable(name: "n_ops", scope: !12278, file: !1, line: 3627, type: !1518)
!12302 = !DILocation(line: 3627, column: 7, scope: !12278)
!12303 = !DILocalVariable(name: "input_ops", scope: !12278, file: !1, line: 3627, type: !1518)
!12304 = !DILocation(line: 3627, column: 18, scope: !12278)
!12305 = !DILocalVariable(name: "changed", scope: !12278, file: !1, line: 3628, type: !1518)
!12306 = !DILocation(line: 3628, column: 7, scope: !12278)
!12307 = !DILocalVariable(name: "n_constants", scope: !12278, file: !1, line: 3628, type: !1518)
!12308 = !DILocation(line: 3628, column: 16, scope: !12278)
!12309 = !DILocalVariable(name: "canonicalized", scope: !12278, file: !1, line: 3628, type: !1518)
!12310 = !DILocation(line: 3628, column: 33, scope: !12278)
!12311 = !DILocalVariable(name: "i", scope: !12278, file: !1, line: 3629, type: !1518)
!12312 = !DILocation(line: 3629, column: 7, scope: !12278)
!12313 = !DILocalVariable(name: "j", scope: !12278, file: !1, line: 3629, type: !1518)
!12314 = !DILocation(line: 3629, column: 10, scope: !12278)
!12315 = !DILocation(line: 3631, column: 3, scope: !12278)
!12316 = !DILocation(line: 3637, column: 15, scope: !12278)
!12317 = !DILocation(line: 3637, column: 3, scope: !12278)
!12318 = !DILocation(line: 3637, column: 10, scope: !12278)
!12319 = !DILocation(line: 3637, column: 13, scope: !12278)
!12320 = !DILocation(line: 3638, column: 3, scope: !12278)
!12321 = !DILocation(line: 3638, column: 10, scope: !12278)
!12322 = !DILocation(line: 3638, column: 14, scope: !12278)
!12323 = !DILocation(line: 3639, column: 15, scope: !12278)
!12324 = !DILocation(line: 3639, column: 3, scope: !12278)
!12325 = !DILocation(line: 3639, column: 10, scope: !12278)
!12326 = !DILocation(line: 3639, column: 13, scope: !12278)
!12327 = !DILocation(line: 3640, column: 17, scope: !12278)
!12328 = !DILocation(line: 3640, column: 22, scope: !12278)
!12329 = !DILocation(line: 3640, column: 16, scope: !12278)
!12330 = !DILocation(line: 3640, column: 3, scope: !12278)
!12331 = !DILocation(line: 3640, column: 10, scope: !12278)
!12332 = !DILocation(line: 3640, column: 14, scope: !12278)
!12333 = !DILocation(line: 3642, column: 3, scope: !12278)
!12334 = !DILocation(line: 3644, column: 15, scope: !12335)
!12335 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3643, column: 5)
!12336 = !DILocation(line: 3646, column: 14, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12335, file: !1, line: 3646, column: 7)
!12338 = !DILocation(line: 3646, column: 12, scope: !12337)
!12339 = !DILocation(line: 3646, column: 19, scope: !12340)
!12340 = distinct !DILexicalBlock(scope: !12337, file: !1, line: 3646, column: 7)
!12341 = !DILocation(line: 3646, column: 23, scope: !12340)
!12342 = !DILocation(line: 3646, column: 21, scope: !12340)
!12343 = !DILocation(line: 3646, column: 7, scope: !12337)
!12344 = !DILocalVariable(name: "this_op", scope: !12345, file: !1, line: 3648, type: !1495)
!12345 = distinct !DILexicalBlock(scope: !12340, file: !1, line: 3647, column: 2)
!12346 = !DILocation(line: 3648, column: 8, scope: !12345)
!12347 = !DILocation(line: 3648, column: 22, scope: !12345)
!12348 = !DILocation(line: 3648, column: 18, scope: !12345)
!12349 = !DILocation(line: 3648, column: 25, scope: !12345)
!12350 = !DILocalVariable(name: "this_neg", scope: !12345, file: !1, line: 3649, type: !1518)
!12351 = !DILocation(line: 3649, column: 8, scope: !12345)
!12352 = !DILocation(line: 3649, column: 23, scope: !12345)
!12353 = !DILocation(line: 3649, column: 19, scope: !12345)
!12354 = !DILocation(line: 3649, column: 26, scope: !12345)
!12355 = !DILocalVariable(name: "this_code", scope: !12345, file: !1, line: 3650, type: !397)
!12356 = !DILocation(line: 3650, column: 18, scope: !12345)
!12357 = !DILocation(line: 3650, column: 30, scope: !12345)
!12358 = !DILocation(line: 3652, column: 12, scope: !12345)
!12359 = !DILocation(line: 3652, column: 4, scope: !12345)
!12360 = !DILocation(line: 3656, column: 12, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12362, file: !1, line: 3656, column: 12)
!12362 = distinct !DILexicalBlock(scope: !12345, file: !1, line: 3653, column: 6)
!12363 = !DILocation(line: 3656, column: 18, scope: !12361)
!12364 = !DILocation(line: 3656, column: 12, scope: !12362)
!12365 = !DILocation(line: 3657, column: 3, scope: !12361)
!12366 = !DILocation(line: 3659, column: 24, scope: !12362)
!12367 = !DILocation(line: 3659, column: 12, scope: !12362)
!12368 = !DILocation(line: 3659, column: 8, scope: !12362)
!12369 = !DILocation(line: 3659, column: 19, scope: !12362)
!12370 = !DILocation(line: 3659, column: 22, scope: !12362)
!12371 = !DILocation(line: 3660, column: 26, scope: !12362)
!12372 = !DILocation(line: 3660, column: 36, scope: !12362)
!12373 = !DILocation(line: 3660, column: 48, scope: !12362)
!12374 = !DILocation(line: 3660, column: 46, scope: !12362)
!12375 = !DILocation(line: 3660, column: 25, scope: !12362)
!12376 = !DILocation(line: 3660, column: 12, scope: !12362)
!12377 = !DILocation(line: 3660, column: 8, scope: !12362)
!12378 = !DILocation(line: 3660, column: 19, scope: !12362)
!12379 = !DILocation(line: 3660, column: 23, scope: !12362)
!12380 = !DILocation(line: 3661, column: 13, scope: !12362)
!12381 = !DILocation(line: 3663, column: 20, scope: !12362)
!12382 = !DILocation(line: 3663, column: 12, scope: !12362)
!12383 = !DILocation(line: 3663, column: 8, scope: !12362)
!12384 = !DILocation(line: 3663, column: 15, scope: !12362)
!12385 = !DILocation(line: 3663, column: 18, scope: !12362)
!12386 = !DILocation(line: 3664, column: 17, scope: !12362)
!12387 = !DILocation(line: 3665, column: 16, scope: !12362)
!12388 = !DILocation(line: 3666, column: 25, scope: !12362)
!12389 = !DILocation(line: 3666, column: 22, scope: !12362)
!12390 = !DILocation(line: 3667, column: 8, scope: !12362)
!12391 = !DILocation(line: 3670, column: 20, scope: !12362)
!12392 = !DILocation(line: 3670, column: 12, scope: !12362)
!12393 = !DILocation(line: 3670, column: 8, scope: !12362)
!12394 = !DILocation(line: 3670, column: 15, scope: !12362)
!12395 = !DILocation(line: 3670, column: 18, scope: !12362)
!12396 = !DILocation(line: 3671, column: 23, scope: !12362)
!12397 = !DILocation(line: 3671, column: 21, scope: !12362)
!12398 = !DILocation(line: 3671, column: 12, scope: !12362)
!12399 = !DILocation(line: 3671, column: 8, scope: !12362)
!12400 = !DILocation(line: 3671, column: 15, scope: !12362)
!12401 = !DILocation(line: 3671, column: 19, scope: !12362)
!12402 = !DILocation(line: 3672, column: 16, scope: !12362)
!12403 = !DILocation(line: 3673, column: 22, scope: !12362)
!12404 = !DILocation(line: 3674, column: 8, scope: !12362)
!12405 = !DILocation(line: 3677, column: 12, scope: !12406)
!12406 = distinct !DILexicalBlock(scope: !12362, file: !1, line: 3677, column: 12)
!12407 = !DILocation(line: 3677, column: 18, scope: !12406)
!12408 = !DILocation(line: 3678, column: 5, scope: !12406)
!12409 = !DILocation(line: 3678, column: 8, scope: !12406)
!12410 = !DILocation(line: 3678, column: 37, scope: !12406)
!12411 = !DILocation(line: 3679, column: 5, scope: !12406)
!12412 = !DILocation(line: 3679, column: 8, scope: !12406)
!12413 = !DILocation(line: 3680, column: 5, scope: !12406)
!12414 = !DILocation(line: 3680, column: 8, scope: !12406)
!12415 = !DILocation(line: 3677, column: 12, scope: !12362)
!12416 = !DILocation(line: 3682, column: 17, scope: !12417)
!12417 = distinct !DILexicalBlock(scope: !12406, file: !1, line: 3681, column: 3)
!12418 = !DILocation(line: 3682, column: 9, scope: !12417)
!12419 = !DILocation(line: 3682, column: 5, scope: !12417)
!12420 = !DILocation(line: 3682, column: 12, scope: !12417)
!12421 = !DILocation(line: 3682, column: 15, scope: !12417)
!12422 = !DILocation(line: 3683, column: 21, scope: !12417)
!12423 = !DILocation(line: 3683, column: 9, scope: !12417)
!12424 = !DILocation(line: 3683, column: 5, scope: !12417)
!12425 = !DILocation(line: 3683, column: 16, scope: !12417)
!12426 = !DILocation(line: 3683, column: 19, scope: !12417)
!12427 = !DILocation(line: 3684, column: 22, scope: !12417)
!12428 = !DILocation(line: 3684, column: 9, scope: !12417)
!12429 = !DILocation(line: 3684, column: 5, scope: !12417)
!12430 = !DILocation(line: 3684, column: 16, scope: !12417)
!12431 = !DILocation(line: 3684, column: 20, scope: !12417)
!12432 = !DILocation(line: 3685, column: 10, scope: !12417)
!12433 = !DILocation(line: 3686, column: 13, scope: !12417)
!12434 = !DILocation(line: 3687, column: 26, scope: !12417)
!12435 = !DILocation(line: 3688, column: 3, scope: !12417)
!12436 = !DILocation(line: 3689, column: 8, scope: !12362)
!12437 = !DILocation(line: 3693, column: 12, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12362, file: !1, line: 3693, column: 12)
!12439 = !DILocation(line: 3693, column: 18, scope: !12438)
!12440 = !DILocation(line: 3693, column: 12, scope: !12362)
!12441 = !DILocation(line: 3695, column: 21, scope: !12442)
!12442 = distinct !DILexicalBlock(scope: !12438, file: !1, line: 3694, column: 3)
!12443 = !DILocation(line: 3695, column: 9, scope: !12442)
!12444 = !DILocation(line: 3695, column: 5, scope: !12442)
!12445 = !DILocation(line: 3695, column: 16, scope: !12442)
!12446 = !DILocation(line: 3695, column: 19, scope: !12442)
!12447 = !DILocation(line: 3696, column: 24, scope: !12442)
!12448 = !DILocation(line: 3696, column: 14, scope: !12442)
!12449 = !DILocation(line: 3696, column: 5, scope: !12442)
!12450 = !DILocation(line: 3696, column: 18, scope: !12442)
!12451 = !DILocation(line: 3696, column: 22, scope: !12442)
!12452 = !DILocation(line: 3697, column: 17, scope: !12442)
!12453 = !DILocation(line: 3697, column: 9, scope: !12442)
!12454 = !DILocation(line: 3697, column: 5, scope: !12442)
!12455 = !DILocation(line: 3697, column: 12, scope: !12442)
!12456 = !DILocation(line: 3697, column: 15, scope: !12442)
!12457 = !DILocation(line: 3698, column: 19, scope: !12442)
!12458 = !DILocation(line: 3698, column: 18, scope: !12442)
!12459 = !DILocation(line: 3698, column: 9, scope: !12442)
!12460 = !DILocation(line: 3698, column: 5, scope: !12442)
!12461 = !DILocation(line: 3698, column: 12, scope: !12442)
!12462 = !DILocation(line: 3698, column: 16, scope: !12442)
!12463 = !DILocation(line: 3699, column: 13, scope: !12442)
!12464 = !DILocation(line: 3700, column: 26, scope: !12442)
!12465 = !DILocation(line: 3701, column: 3, scope: !12442)
!12466 = !DILocation(line: 3702, column: 8, scope: !12362)
!12467 = !DILocation(line: 3705, column: 19, scope: !12362)
!12468 = !DILocation(line: 3706, column: 12, scope: !12469)
!12469 = distinct !DILexicalBlock(scope: !12362, file: !1, line: 3706, column: 12)
!12470 = !DILocation(line: 3706, column: 12, scope: !12362)
!12471 = !DILocation(line: 3708, column: 32, scope: !12472)
!12472 = distinct !DILexicalBlock(scope: !12469, file: !1, line: 3707, column: 3)
!12473 = !DILocation(line: 3708, column: 38, scope: !12472)
!12474 = !DILocation(line: 3708, column: 17, scope: !12472)
!12475 = !DILocation(line: 3708, column: 9, scope: !12472)
!12476 = !DILocation(line: 3708, column: 5, scope: !12472)
!12477 = !DILocation(line: 3708, column: 12, scope: !12472)
!12478 = !DILocation(line: 3708, column: 15, scope: !12472)
!12479 = !DILocation(line: 3709, column: 9, scope: !12472)
!12480 = !DILocation(line: 3709, column: 5, scope: !12472)
!12481 = !DILocation(line: 3709, column: 12, scope: !12472)
!12482 = !DILocation(line: 3709, column: 16, scope: !12472)
!12483 = !DILocation(line: 3710, column: 13, scope: !12472)
!12484 = !DILocation(line: 3711, column: 26, scope: !12472)
!12485 = !DILocation(line: 3712, column: 3, scope: !12472)
!12486 = !DILocation(line: 3713, column: 8, scope: !12362)
!12487 = !DILocation(line: 3716, column: 8, scope: !12362)
!12488 = !DILocation(line: 3718, column: 2, scope: !12345)
!12489 = !DILocation(line: 3646, column: 31, scope: !12340)
!12490 = !DILocation(line: 3646, column: 7, scope: !12340)
!12491 = distinct !{!12491, !12343, !12492}
!12492 = !DILocation(line: 3718, column: 2, scope: !12337)
!12493 = !DILocation(line: 3719, column: 5, scope: !12335)
!12494 = !DILocation(line: 3720, column: 10, scope: !12278)
!12495 = distinct !{!12495, !12333, !12496}
!12496 = !DILocation(line: 3720, column: 17, scope: !12278)
!12497 = !DILocation(line: 3722, column: 7, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3722, column: 7)
!12499 = !DILocation(line: 3722, column: 19, scope: !12498)
!12500 = !DILocation(line: 3722, column: 7, scope: !12278)
!12501 = !DILocation(line: 3723, column: 19, scope: !12498)
!12502 = !DILocation(line: 3723, column: 5, scope: !12498)
!12503 = !DILocation(line: 3725, column: 3, scope: !12278)
!12504 = !DILocation(line: 3728, column: 7, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3728, column: 7)
!12506 = !DILocation(line: 3728, column: 13, scope: !12505)
!12507 = !DILocation(line: 3728, column: 7, scope: !12278)
!12508 = !DILocalVariable(name: "code", scope: !12509, file: !1, line: 3730, type: !397)
!12509 = distinct !DILexicalBlock(scope: !12505, file: !1, line: 3729, column: 5)
!12510 = !DILocation(line: 3730, column: 21, scope: !12509)
!12511 = !DILocation(line: 3730, column: 28, scope: !12509)
!12512 = !DILocation(line: 3730, column: 35, scope: !12509)
!12513 = !DILocation(line: 3730, column: 39, scope: !12509)
!12514 = !DILocation(line: 3730, column: 42, scope: !12509)
!12515 = !DILocation(line: 3730, column: 49, scope: !12509)
!12516 = !DILocalVariable(name: "lhs", scope: !12509, file: !1, line: 3731, type: !1495)
!12517 = !DILocation(line: 3731, column: 11, scope: !12509)
!12518 = !DILocalVariable(name: "rhs", scope: !12509, file: !1, line: 3731, type: !1495)
!12519 = !DILocation(line: 3731, column: 16, scope: !12509)
!12520 = !DILocation(line: 3735, column: 11, scope: !12521)
!12521 = distinct !DILexicalBlock(scope: !12509, file: !1, line: 3735, column: 11)
!12522 = !DILocation(line: 3735, column: 18, scope: !12521)
!12523 = !DILocation(line: 3735, column: 22, scope: !12521)
!12524 = !DILocation(line: 3735, column: 25, scope: !12521)
!12525 = !DILocation(line: 3735, column: 32, scope: !12521)
!12526 = !DILocation(line: 3735, column: 11, scope: !12509)
!12527 = !DILocation(line: 3737, column: 10, scope: !12528)
!12528 = distinct !DILexicalBlock(scope: !12521, file: !1, line: 3736, column: 2)
!12529 = !DILocation(line: 3737, column: 8, scope: !12528)
!12530 = !DILocation(line: 3738, column: 10, scope: !12528)
!12531 = !DILocation(line: 3738, column: 17, scope: !12528)
!12532 = !DILocation(line: 3738, column: 8, scope: !12528)
!12533 = !DILocation(line: 3739, column: 2, scope: !12528)
!12534 = !DILocation(line: 3740, column: 16, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12521, file: !1, line: 3740, column: 16)
!12536 = !DILocation(line: 3740, column: 23, scope: !12535)
!12537 = !DILocation(line: 3740, column: 16, scope: !12521)
!12538 = !DILocation(line: 3742, column: 10, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12535, file: !1, line: 3741, column: 2)
!12540 = !DILocation(line: 3742, column: 17, scope: !12539)
!12541 = !DILocation(line: 3742, column: 8, scope: !12539)
!12542 = !DILocation(line: 3743, column: 10, scope: !12539)
!12543 = !DILocation(line: 3743, column: 17, scope: !12539)
!12544 = !DILocation(line: 3743, column: 8, scope: !12539)
!12545 = !DILocation(line: 3744, column: 2, scope: !12539)
!12546 = !DILocation(line: 3747, column: 10, scope: !12547)
!12547 = distinct !DILexicalBlock(scope: !12535, file: !1, line: 3746, column: 2)
!12548 = !DILocation(line: 3747, column: 17, scope: !12547)
!12549 = !DILocation(line: 3747, column: 8, scope: !12547)
!12550 = !DILocation(line: 3748, column: 10, scope: !12547)
!12551 = !DILocation(line: 3748, column: 17, scope: !12547)
!12552 = !DILocation(line: 3748, column: 8, scope: !12547)
!12553 = !DILocation(line: 3751, column: 47, scope: !12509)
!12554 = !DILocation(line: 3751, column: 53, scope: !12509)
!12555 = !DILocation(line: 3751, column: 59, scope: !12509)
!12556 = !DILocation(line: 3751, column: 64, scope: !12509)
!12557 = !DILocation(line: 3751, column: 14, scope: !12509)
!12558 = !DILocation(line: 3751, column: 7, scope: !12509)
!12559 = !DILocation(line: 3755, column: 3, scope: !12278)
!12560 = !DILocation(line: 3758, column: 14, scope: !12561)
!12561 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 3758, column: 7)
!12562 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3756, column: 5)
!12563 = !DILocation(line: 3758, column: 12, scope: !12561)
!12564 = !DILocation(line: 3758, column: 19, scope: !12565)
!12565 = distinct !DILexicalBlock(scope: !12561, file: !1, line: 3758, column: 7)
!12566 = !DILocation(line: 3758, column: 23, scope: !12565)
!12567 = !DILocation(line: 3758, column: 21, scope: !12565)
!12568 = !DILocation(line: 3758, column: 7, scope: !12561)
!12569 = !DILocalVariable(name: "save", scope: !12570, file: !1, line: 3760, type: !12289)
!12570 = distinct !DILexicalBlock(scope: !12565, file: !1, line: 3759, column: 9)
!12571 = !DILocation(line: 3760, column: 46, scope: !12570)
!12572 = !DILocation(line: 3761, column: 15, scope: !12570)
!12573 = !DILocation(line: 3761, column: 17, scope: !12570)
!12574 = !DILocation(line: 3761, column: 13, scope: !12570)
!12575 = !DILocation(line: 3762, column: 53, scope: !12576)
!12576 = distinct !DILexicalBlock(scope: !12570, file: !1, line: 3762, column: 15)
!12577 = !DILocation(line: 3762, column: 49, scope: !12576)
!12578 = !DILocation(line: 3762, column: 56, scope: !12576)
!12579 = !DILocation(line: 3762, column: 64, scope: !12576)
!12580 = !DILocation(line: 3762, column: 60, scope: !12576)
!12581 = !DILocation(line: 3762, column: 67, scope: !12576)
!12582 = !DILocation(line: 3762, column: 16, scope: !12576)
!12583 = !DILocation(line: 3762, column: 15, scope: !12570)
!12584 = !DILocation(line: 3763, column: 6, scope: !12576)
!12585 = !DILocation(line: 3765, column: 25, scope: !12570)
!12586 = !DILocation(line: 3766, column: 22, scope: !12570)
!12587 = !DILocation(line: 3766, column: 18, scope: !12570)
!12588 = !DILocation(line: 3767, column: 11, scope: !12570)
!12589 = !DILocation(line: 3768, column: 10, scope: !12570)
!12590 = !DILocation(line: 3768, column: 12, scope: !12570)
!12591 = !DILocation(line: 3768, column: 6, scope: !12570)
!12592 = !DILocation(line: 3768, column: 23, scope: !12570)
!12593 = !DILocation(line: 3768, column: 19, scope: !12570)
!12594 = !DILocation(line: 3769, column: 19, scope: !12570)
!12595 = !DILocation(line: 3769, column: 22, scope: !12570)
!12596 = !DILocation(line: 3769, column: 62, scope: !12570)
!12597 = !DILocation(line: 3769, column: 58, scope: !12570)
!12598 = !DILocation(line: 3769, column: 65, scope: !12570)
!12599 = !DILocation(line: 3769, column: 74, scope: !12570)
!12600 = !DILocation(line: 3769, column: 25, scope: !12570)
!12601 = !DILocation(line: 0, scope: !12570)
!12602 = distinct !{!12602, !12588, !12603}
!12603 = !DILocation(line: 3769, column: 77, scope: !12570)
!12604 = !DILocation(line: 3770, column: 15, scope: !12570)
!12605 = !DILocation(line: 3770, column: 17, scope: !12570)
!12606 = !DILocation(line: 3770, column: 11, scope: !12570)
!12607 = !DILocation(line: 3770, column: 24, scope: !12570)
!12608 = !DILocation(line: 3771, column: 9, scope: !12570)
!12609 = !DILocation(line: 3758, column: 31, scope: !12565)
!12610 = !DILocation(line: 3758, column: 7, scope: !12565)
!12611 = distinct !{!12611, !12568, !12612}
!12612 = !DILocation(line: 3771, column: 9, scope: !12561)
!12613 = !DILocation(line: 3773, column: 15, scope: !12562)
!12614 = !DILocation(line: 3774, column: 16, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 3774, column: 7)
!12616 = !DILocation(line: 3774, column: 22, scope: !12615)
!12617 = !DILocation(line: 3774, column: 14, scope: !12615)
!12618 = !DILocation(line: 3774, column: 12, scope: !12615)
!12619 = !DILocation(line: 3774, column: 27, scope: !12620)
!12620 = distinct !DILexicalBlock(scope: !12615, file: !1, line: 3774, column: 7)
!12621 = !DILocation(line: 3774, column: 29, scope: !12620)
!12622 = !DILocation(line: 3774, column: 7, scope: !12615)
!12623 = !DILocation(line: 3775, column: 11, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12620, file: !1, line: 3775, column: 2)
!12625 = !DILocation(line: 3775, column: 13, scope: !12624)
!12626 = !DILocation(line: 3775, column: 9, scope: !12624)
!12627 = !DILocation(line: 3775, column: 7, scope: !12624)
!12628 = !DILocation(line: 3775, column: 18, scope: !12629)
!12629 = distinct !DILexicalBlock(scope: !12624, file: !1, line: 3775, column: 2)
!12630 = !DILocation(line: 3775, column: 20, scope: !12629)
!12631 = !DILocation(line: 3775, column: 2, scope: !12624)
!12632 = !DILocalVariable(name: "lhs", scope: !12633, file: !1, line: 3777, type: !1495)
!12633 = distinct !DILexicalBlock(scope: !12629, file: !1, line: 3776, column: 4)
!12634 = !DILocation(line: 3777, column: 10, scope: !12633)
!12635 = !DILocation(line: 3777, column: 20, scope: !12633)
!12636 = !DILocation(line: 3777, column: 16, scope: !12633)
!12637 = !DILocation(line: 3777, column: 23, scope: !12633)
!12638 = !DILocalVariable(name: "rhs", scope: !12633, file: !1, line: 3777, type: !1495)
!12639 = !DILocation(line: 3777, column: 27, scope: !12633)
!12640 = !DILocation(line: 3777, column: 37, scope: !12633)
!12641 = !DILocation(line: 3777, column: 33, scope: !12633)
!12642 = !DILocation(line: 3777, column: 40, scope: !12633)
!12643 = !DILocalVariable(name: "lneg", scope: !12633, file: !1, line: 3778, type: !1518)
!12644 = !DILocation(line: 3778, column: 10, scope: !12633)
!12645 = !DILocation(line: 3778, column: 21, scope: !12633)
!12646 = !DILocation(line: 3778, column: 17, scope: !12633)
!12647 = !DILocation(line: 3778, column: 24, scope: !12633)
!12648 = !DILocalVariable(name: "rneg", scope: !12633, file: !1, line: 3778, type: !1518)
!12649 = !DILocation(line: 3778, column: 29, scope: !12633)
!12650 = !DILocation(line: 3778, column: 40, scope: !12633)
!12651 = !DILocation(line: 3778, column: 36, scope: !12633)
!12652 = !DILocation(line: 3778, column: 43, scope: !12633)
!12653 = !DILocation(line: 3780, column: 10, scope: !12654)
!12654 = distinct !DILexicalBlock(scope: !12633, file: !1, line: 3780, column: 10)
!12655 = !DILocation(line: 3780, column: 14, scope: !12654)
!12656 = !DILocation(line: 3780, column: 19, scope: !12654)
!12657 = !DILocation(line: 3780, column: 22, scope: !12654)
!12658 = !DILocation(line: 3780, column: 26, scope: !12654)
!12659 = !DILocation(line: 3780, column: 10, scope: !12633)
!12660 = !DILocalVariable(name: "ncode", scope: !12661, file: !1, line: 3782, type: !397)
!12661 = distinct !DILexicalBlock(scope: !12654, file: !1, line: 3781, column: 8)
!12662 = !DILocation(line: 3782, column: 17, scope: !12661)
!12663 = !DILocation(line: 3784, column: 7, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12661, file: !1, line: 3784, column: 7)
!12665 = !DILocation(line: 3784, column: 15, scope: !12664)
!12666 = !DILocation(line: 3784, column: 12, scope: !12664)
!12667 = !DILocation(line: 3784, column: 7, scope: !12661)
!12668 = !DILocation(line: 3786, column: 13, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12664, file: !1, line: 3785, column: 5)
!12670 = !DILocation(line: 3787, column: 11, scope: !12671)
!12671 = distinct !DILexicalBlock(scope: !12669, file: !1, line: 3787, column: 11)
!12672 = !DILocation(line: 3787, column: 11, scope: !12669)
!12673 = !DILocation(line: 3788, column: 15, scope: !12671)
!12674 = !DILocation(line: 3788, column: 13, scope: !12671)
!12675 = !DILocation(line: 3788, column: 26, scope: !12671)
!12676 = !DILocation(line: 3788, column: 24, scope: !12671)
!12677 = !DILocation(line: 3788, column: 37, scope: !12671)
!12678 = !DILocation(line: 3788, column: 35, scope: !12671)
!12679 = !DILocation(line: 3788, column: 9, scope: !12671)
!12680 = !DILocation(line: 3789, column: 5, scope: !12669)
!12681 = !DILocation(line: 3790, column: 41, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12664, file: !1, line: 3790, column: 12)
!12683 = !DILocation(line: 3790, column: 46, scope: !12682)
!12684 = !DILocation(line: 3790, column: 12, scope: !12682)
!12685 = !DILocation(line: 3790, column: 12, scope: !12664)
!12686 = !DILocation(line: 3791, column: 11, scope: !12682)
!12687 = !DILocation(line: 3791, column: 9, scope: !12682)
!12688 = !DILocation(line: 3791, column: 22, scope: !12682)
!12689 = !DILocation(line: 3791, column: 20, scope: !12682)
!12690 = !DILocation(line: 3791, column: 33, scope: !12682)
!12691 = !DILocation(line: 3791, column: 31, scope: !12682)
!12692 = !DILocation(line: 3791, column: 5, scope: !12682)
!12693 = !DILocation(line: 3793, column: 8, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12661, file: !1, line: 3793, column: 7)
!12695 = !DILocation(line: 3793, column: 23, scope: !12694)
!12696 = !DILocation(line: 3793, column: 32, scope: !12694)
!12697 = !DILocation(line: 3793, column: 35, scope: !12694)
!12698 = !DILocation(line: 3794, column: 7, scope: !12694)
!12699 = !DILocation(line: 3794, column: 11, scope: !12694)
!12700 = !DILocation(line: 3794, column: 26, scope: !12694)
!12701 = !DILocation(line: 3794, column: 35, scope: !12694)
!12702 = !DILocation(line: 3794, column: 38, scope: !12694)
!12703 = !DILocation(line: 3793, column: 7, scope: !12661)
!12704 = !DILocalVariable(name: "tem_lhs", scope: !12705, file: !1, line: 3796, type: !1495)
!12705 = distinct !DILexicalBlock(scope: !12694, file: !1, line: 3795, column: 5)
!12706 = !DILocation(line: 3796, column: 11, scope: !12705)
!12707 = !DILocalVariable(name: "tem_rhs", scope: !12705, file: !1, line: 3796, type: !1495)
!12708 = !DILocation(line: 3796, column: 20, scope: !12705)
!12709 = !DILocation(line: 3798, column: 17, scope: !12705)
!12710 = !DILocation(line: 3798, column: 32, scope: !12705)
!12711 = !DILocation(line: 3798, column: 43, scope: !12705)
!12712 = !DILocation(line: 3798, column: 59, scope: !12705)
!12713 = !DILocation(line: 3798, column: 15, scope: !12705)
!12714 = !DILocation(line: 3799, column: 17, scope: !12705)
!12715 = !DILocation(line: 3799, column: 32, scope: !12705)
!12716 = !DILocation(line: 3799, column: 43, scope: !12705)
!12717 = !DILocation(line: 3799, column: 59, scope: !12705)
!12718 = !DILocation(line: 3799, column: 15, scope: !12705)
!12719 = !DILocation(line: 3800, column: 40, scope: !12705)
!12720 = !DILocation(line: 3800, column: 47, scope: !12705)
!12721 = !DILocation(line: 3800, column: 53, scope: !12705)
!12722 = !DILocation(line: 3800, column: 62, scope: !12705)
!12723 = !DILocation(line: 3800, column: 13, scope: !12705)
!12724 = !DILocation(line: 3800, column: 11, scope: !12705)
!12725 = !DILocation(line: 3802, column: 11, scope: !12726)
!12726 = distinct !DILexicalBlock(scope: !12705, file: !1, line: 3802, column: 11)
!12727 = !DILocation(line: 3802, column: 15, scope: !12726)
!12728 = !DILocation(line: 3802, column: 19, scope: !12726)
!12729 = !DILocation(line: 3802, column: 11, scope: !12705)
!12730 = !DILocation(line: 3803, column: 15, scope: !12726)
!12731 = !DILocation(line: 3803, column: 13, scope: !12726)
!12732 = !DILocation(line: 3803, column: 9, scope: !12726)
!12733 = !DILocation(line: 3804, column: 5, scope: !12705)
!12734 = !DILocation(line: 3806, column: 38, scope: !12694)
!12735 = !DILocation(line: 3806, column: 45, scope: !12694)
!12736 = !DILocation(line: 3806, column: 51, scope: !12694)
!12737 = !DILocation(line: 3806, column: 56, scope: !12694)
!12738 = !DILocation(line: 3806, column: 11, scope: !12694)
!12739 = !DILocation(line: 3806, column: 9, scope: !12694)
!12740 = !DILocation(line: 3812, column: 7, scope: !12741)
!12741 = distinct !DILexicalBlock(scope: !12661, file: !1, line: 3812, column: 7)
!12742 = !DILocation(line: 3813, column: 7, scope: !12741)
!12743 = !DILocation(line: 3813, column: 13, scope: !12741)
!12744 = !DILocation(line: 3813, column: 28, scope: !12741)
!12745 = !DILocation(line: 3814, column: 6, scope: !12741)
!12746 = !DILocation(line: 3814, column: 9, scope: !12741)
!12747 = !DILocation(line: 3814, column: 37, scope: !12741)
!12748 = !DILocation(line: 3814, column: 34, scope: !12741)
!12749 = !DILocation(line: 3815, column: 6, scope: !12741)
!12750 = !DILocation(line: 3815, column: 9, scope: !12741)
!12751 = !DILocation(line: 3815, column: 36, scope: !12741)
!12752 = !DILocation(line: 3815, column: 33, scope: !12741)
!12753 = !DILocation(line: 3816, column: 6, scope: !12741)
!12754 = !DILocation(line: 3816, column: 9, scope: !12741)
!12755 = !DILocation(line: 3816, column: 36, scope: !12741)
!12756 = !DILocation(line: 3816, column: 33, scope: !12741)
!12757 = !DILocation(line: 3812, column: 7, scope: !12661)
!12758 = !DILocation(line: 3818, column: 15, scope: !12759)
!12759 = distinct !DILexicalBlock(scope: !12741, file: !1, line: 3817, column: 5)
!12760 = !DILocation(line: 3818, column: 12, scope: !12759)
!12761 = !DILocation(line: 3819, column: 11, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12759, file: !1, line: 3819, column: 11)
!12763 = !DILocation(line: 3819, column: 26, scope: !12762)
!12764 = !DILocation(line: 3819, column: 11, scope: !12759)
!12765 = !DILocation(line: 3820, column: 15, scope: !12762)
!12766 = !DILocation(line: 3820, column: 13, scope: !12762)
!12767 = !DILocation(line: 3820, column: 38, scope: !12762)
!12768 = !DILocation(line: 3820, column: 37, scope: !12762)
!12769 = !DILocation(line: 3820, column: 35, scope: !12762)
!12770 = !DILocation(line: 3820, column: 9, scope: !12762)
!12771 = !DILocation(line: 3821, column: 11, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12759, file: !1, line: 3821, column: 11)
!12773 = !DILocation(line: 3821, column: 29, scope: !12772)
!12774 = !DILocation(line: 3821, column: 32, scope: !12772)
!12775 = !DILocation(line: 3821, column: 11, scope: !12759)
!12776 = !DILocation(line: 3822, column: 30, scope: !12772)
!12777 = !DILocation(line: 3822, column: 36, scope: !12772)
!12778 = !DILocation(line: 3822, column: 15, scope: !12772)
!12779 = !DILocation(line: 3822, column: 13, scope: !12772)
!12780 = !DILocation(line: 3822, column: 47, scope: !12772)
!12781 = !DILocation(line: 3822, column: 9, scope: !12772)
!12782 = !DILocation(line: 3824, column: 19, scope: !12759)
!12783 = !DILocation(line: 3824, column: 11, scope: !12759)
!12784 = !DILocation(line: 3824, column: 7, scope: !12759)
!12785 = !DILocation(line: 3824, column: 14, scope: !12759)
!12786 = !DILocation(line: 3824, column: 17, scope: !12759)
!12787 = !DILocation(line: 3825, column: 20, scope: !12759)
!12788 = !DILocation(line: 3825, column: 11, scope: !12759)
!12789 = !DILocation(line: 3825, column: 7, scope: !12759)
!12790 = !DILocation(line: 3825, column: 14, scope: !12759)
!12791 = !DILocation(line: 3825, column: 18, scope: !12759)
!12792 = !DILocation(line: 3826, column: 11, scope: !12759)
!12793 = !DILocation(line: 3826, column: 7, scope: !12759)
!12794 = !DILocation(line: 3826, column: 14, scope: !12759)
!12795 = !DILocation(line: 3826, column: 17, scope: !12759)
!12796 = !DILocation(line: 3827, column: 15, scope: !12759)
!12797 = !DILocation(line: 3828, column: 21, scope: !12759)
!12798 = !DILocation(line: 3829, column: 5, scope: !12759)
!12799 = !DILocation(line: 3830, column: 8, scope: !12661)
!12800 = !DILocation(line: 3831, column: 4, scope: !12633)
!12801 = !DILocation(line: 3775, column: 27, scope: !12629)
!12802 = !DILocation(line: 3775, column: 2, scope: !12629)
!12803 = distinct !{!12803, !12631, !12804}
!12804 = !DILocation(line: 3831, column: 4, scope: !12624)
!12805 = !DILocation(line: 3774, column: 35, scope: !12620)
!12806 = !DILocation(line: 3774, column: 7, scope: !12620)
!12807 = distinct !{!12807, !12622, !12808}
!12808 = !DILocation(line: 3831, column: 4, scope: !12615)
!12809 = !DILocation(line: 3834, column: 12, scope: !12810)
!12810 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 3834, column: 11)
!12811 = !DILocation(line: 3834, column: 11, scope: !12562)
!12812 = !DILocation(line: 3835, column: 9, scope: !12810)
!12813 = !DILocation(line: 3838, column: 14, scope: !12814)
!12814 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 3838, column: 7)
!12815 = !DILocation(line: 3838, column: 21, scope: !12814)
!12816 = !DILocation(line: 3838, column: 12, scope: !12814)
!12817 = !DILocation(line: 3838, column: 26, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12814, file: !1, line: 3838, column: 7)
!12819 = !DILocation(line: 3838, column: 30, scope: !12818)
!12820 = !DILocation(line: 3838, column: 28, scope: !12818)
!12821 = !DILocation(line: 3838, column: 7, scope: !12814)
!12822 = !DILocation(line: 3839, column: 17, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12818, file: !1, line: 3839, column: 13)
!12824 = !DILocation(line: 3839, column: 13, scope: !12823)
!12825 = !DILocation(line: 3839, column: 20, scope: !12823)
!12826 = !DILocation(line: 3839, column: 13, scope: !12818)
!12827 = !DILocation(line: 3841, column: 10, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12823, file: !1, line: 3840, column: 11)
!12829 = !DILocation(line: 3841, column: 6, scope: !12828)
!12830 = !DILocation(line: 3841, column: 19, scope: !12828)
!12831 = !DILocation(line: 3841, column: 15, scope: !12828)
!12832 = !DILocation(line: 3842, column: 7, scope: !12828)
!12833 = !DILocation(line: 3843, column: 11, scope: !12828)
!12834 = !DILocation(line: 3838, column: 38, scope: !12818)
!12835 = !DILocation(line: 3838, column: 7, scope: !12818)
!12836 = distinct !{!12836, !12821, !12837}
!12837 = !DILocation(line: 3843, column: 11, scope: !12814)
!12838 = !DILocation(line: 3844, column: 15, scope: !12562)
!12839 = !DILocation(line: 3844, column: 13, scope: !12562)
!12840 = !DILocation(line: 3845, column: 5, scope: !12562)
!12841 = !DILocation(line: 3846, column: 10, scope: !12278)
!12842 = distinct !{!12842, !12559, !12843}
!12843 = !DILocation(line: 3846, column: 17, scope: !12278)
!12844 = !DILocation(line: 3849, column: 7, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3849, column: 7)
!12846 = !DILocation(line: 3849, column: 13, scope: !12845)
!12847 = !DILocation(line: 3850, column: 7, scope: !12845)
!12848 = !DILocation(line: 3850, column: 10, scope: !12845)
!12849 = !DILocation(line: 3851, column: 7, scope: !12845)
!12850 = !DILocation(line: 3851, column: 10, scope: !12845)
!12851 = !DILocation(line: 3852, column: 7, scope: !12845)
!12852 = !DILocation(line: 3852, column: 10, scope: !12845)
!12853 = !DILocation(line: 3852, column: 17, scope: !12845)
!12854 = !DILocation(line: 3849, column: 7, scope: !12278)
!12855 = !DILocation(line: 3853, column: 12, scope: !12845)
!12856 = !DILocation(line: 3853, column: 5, scope: !12845)
!12857 = !DILocation(line: 3861, column: 7, scope: !12858)
!12858 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3861, column: 7)
!12859 = !DILocation(line: 3861, column: 13, scope: !12858)
!12860 = !DILocation(line: 3862, column: 7, scope: !12858)
!12861 = !DILocation(line: 3862, column: 10, scope: !12858)
!12862 = !DILocation(line: 3863, column: 7, scope: !12858)
!12863 = !DILocation(line: 3863, column: 10, scope: !12858)
!12864 = !DILocation(line: 3861, column: 7, scope: !12278)
!12865 = !DILocalVariable(name: "value", scope: !12866, file: !1, line: 3865, type: !1495)
!12866 = distinct !DILexicalBlock(scope: !12858, file: !1, line: 3864, column: 5)
!12867 = !DILocation(line: 3865, column: 11, scope: !12866)
!12868 = !DILocation(line: 3865, column: 23, scope: !12866)
!12869 = !DILocation(line: 3865, column: 29, scope: !12866)
!12870 = !DILocation(line: 3865, column: 19, scope: !12866)
!12871 = !DILocation(line: 3865, column: 34, scope: !12866)
!12872 = !DILocation(line: 3866, column: 15, scope: !12873)
!12873 = distinct !DILexicalBlock(scope: !12866, file: !1, line: 3866, column: 11)
!12874 = !DILocation(line: 3866, column: 21, scope: !12873)
!12875 = !DILocation(line: 3866, column: 11, scope: !12873)
!12876 = !DILocation(line: 3866, column: 26, scope: !12873)
!12877 = !DILocation(line: 3866, column: 36, scope: !12873)
!12878 = !DILocation(line: 3866, column: 42, scope: !12873)
!12879 = !DILocation(line: 3866, column: 32, scope: !12873)
!12880 = !DILocation(line: 3866, column: 47, scope: !12873)
!12881 = !DILocation(line: 3866, column: 30, scope: !12873)
!12882 = !DILocation(line: 3866, column: 11, scope: !12866)
!12883 = !DILocation(line: 3867, column: 25, scope: !12873)
!12884 = !DILocation(line: 3867, column: 31, scope: !12873)
!12885 = !DILocation(line: 3867, column: 10, scope: !12873)
!12886 = !DILocation(line: 3867, column: 8, scope: !12873)
!12887 = !DILocation(line: 3867, column: 2, scope: !12873)
!12888 = !DILocation(line: 3868, column: 46, scope: !12866)
!12889 = !DILocation(line: 3868, column: 52, scope: !12866)
!12890 = !DILocation(line: 3868, column: 42, scope: !12866)
!12891 = !DILocation(line: 3868, column: 57, scope: !12866)
!12892 = !DILocation(line: 3868, column: 61, scope: !12866)
!12893 = !DILocation(line: 3868, column: 27, scope: !12866)
!12894 = !DILocation(line: 3868, column: 11, scope: !12866)
!12895 = !DILocation(line: 3868, column: 17, scope: !12866)
!12896 = !DILocation(line: 3868, column: 7, scope: !12866)
!12897 = !DILocation(line: 3868, column: 22, scope: !12866)
!12898 = !DILocation(line: 3868, column: 25, scope: !12866)
!12899 = !DILocation(line: 3869, column: 12, scope: !12866)
!12900 = !DILocation(line: 3870, column: 5, scope: !12866)
!12901 = !DILocation(line: 3874, column: 10, scope: !12902)
!12902 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3874, column: 3)
!12903 = !DILocation(line: 3874, column: 8, scope: !12902)
!12904 = !DILocation(line: 3874, column: 15, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12902, file: !1, line: 3874, column: 3)
!12906 = !DILocation(line: 3874, column: 19, scope: !12905)
!12907 = !DILocation(line: 3874, column: 17, scope: !12905)
!12908 = !DILocation(line: 3874, column: 25, scope: !12905)
!12909 = !DILocation(line: 3874, column: 32, scope: !12905)
!12910 = !DILocation(line: 3874, column: 28, scope: !12905)
!12911 = !DILocation(line: 3874, column: 35, scope: !12905)
!12912 = !DILocation(line: 0, scope: !12905)
!12913 = !DILocation(line: 3874, column: 3, scope: !12902)
!12914 = !DILocation(line: 3875, column: 5, scope: !12905)
!12915 = !DILocation(line: 3874, column: 41, scope: !12905)
!12916 = !DILocation(line: 3874, column: 3, scope: !12905)
!12917 = distinct !{!12917, !12913, !12918}
!12918 = !DILocation(line: 3875, column: 5, scope: !12902)
!12919 = !DILocation(line: 3876, column: 7, scope: !12920)
!12920 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3876, column: 7)
!12921 = !DILocation(line: 3876, column: 12, scope: !12920)
!12922 = !DILocation(line: 3876, column: 9, scope: !12920)
!12923 = !DILocation(line: 3876, column: 7, scope: !12278)
!12924 = !DILocation(line: 3877, column: 17, scope: !12920)
!12925 = !DILocation(line: 3877, column: 5, scope: !12920)
!12926 = !DILocation(line: 3877, column: 12, scope: !12920)
!12927 = !DILocation(line: 3877, column: 15, scope: !12920)
!12928 = !DILocation(line: 3878, column: 12, scope: !12929)
!12929 = distinct !DILexicalBlock(scope: !12920, file: !1, line: 3878, column: 12)
!12930 = !DILocation(line: 3878, column: 14, scope: !12929)
!12931 = !DILocation(line: 3878, column: 12, scope: !12920)
!12932 = !DILocation(line: 3880, column: 13, scope: !12933)
!12933 = distinct !DILexicalBlock(scope: !12929, file: !1, line: 3879, column: 5)
!12934 = !DILocation(line: 3880, column: 20, scope: !12933)
!12935 = !DILocation(line: 3880, column: 11, scope: !12933)
!12936 = !DILocation(line: 3881, column: 7, scope: !12933)
!12937 = !DILocation(line: 3881, column: 20, scope: !12933)
!12938 = !DILocation(line: 3881, column: 16, scope: !12933)
!12939 = !DILocation(line: 3882, column: 19, scope: !12933)
!12940 = !DILocation(line: 3882, column: 11, scope: !12933)
!12941 = !DILocation(line: 3882, column: 7, scope: !12933)
!12942 = !DILocation(line: 3882, column: 14, scope: !12933)
!12943 = !DILocation(line: 3882, column: 17, scope: !12933)
!12944 = !DILocation(line: 3883, column: 11, scope: !12933)
!12945 = !DILocation(line: 3883, column: 7, scope: !12933)
!12946 = !DILocation(line: 3883, column: 14, scope: !12933)
!12947 = !DILocation(line: 3883, column: 18, scope: !12933)
!12948 = !DILocation(line: 3884, column: 5, scope: !12933)
!12949 = !DILocation(line: 3887, column: 12, scope: !12278)
!12950 = !DILocation(line: 3887, column: 19, scope: !12278)
!12951 = !DILocation(line: 3887, column: 10, scope: !12278)
!12952 = !DILocation(line: 3888, column: 10, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12278, file: !1, line: 3888, column: 3)
!12954 = !DILocation(line: 3888, column: 8, scope: !12953)
!12955 = !DILocation(line: 3888, column: 15, scope: !12956)
!12956 = distinct !DILexicalBlock(scope: !12953, file: !1, line: 3888, column: 3)
!12957 = !DILocation(line: 3888, column: 19, scope: !12956)
!12958 = !DILocation(line: 3888, column: 17, scope: !12956)
!12959 = !DILocation(line: 3888, column: 3, scope: !12953)
!12960 = !DILocation(line: 3889, column: 14, scope: !12956)
!12961 = !DILocation(line: 3889, column: 12, scope: !12956)
!12962 = !DILocation(line: 3889, column: 5, scope: !12956)
!12963 = !DILocation(line: 3888, column: 27, scope: !12956)
!12964 = !DILocation(line: 3888, column: 3, scope: !12956)
!12965 = distinct !{!12965, !12959, !12966}
!12966 = !DILocation(line: 3889, column: 14, scope: !12953)
!12967 = !DILocation(line: 3892, column: 10, scope: !12278)
!12968 = !DILocation(line: 3892, column: 3, scope: !12278)
!12969 = !DILocation(line: 3893, column: 1, scope: !12278)
!12970 = distinct !DISubprogram(name: "simplify_associative_operation", scope: !1, file: !1, line: 1626, type: !2653, scopeLine: 1628, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!12971 = !DILocalVariable(name: "code", arg: 1, scope: !12970, file: !1, line: 1626, type: !397)
!12972 = !DILocation(line: 1626, column: 47, scope: !12970)
!12973 = !DILocalVariable(name: "mode", arg: 2, scope: !12970, file: !1, line: 1626, type: !3)
!12974 = !DILocation(line: 1626, column: 71, scope: !12970)
!12975 = !DILocalVariable(name: "op0", arg: 3, scope: !12970, file: !1, line: 1627, type: !1495)
!12976 = !DILocation(line: 1627, column: 9, scope: !12970)
!12977 = !DILocalVariable(name: "op1", arg: 4, scope: !12970, file: !1, line: 1627, type: !1495)
!12978 = !DILocation(line: 1627, column: 18, scope: !12970)
!12979 = !DILocalVariable(name: "tem", scope: !12970, file: !1, line: 1629, type: !1495)
!12980 = !DILocation(line: 1629, column: 7, scope: !12970)
!12981 = !DILocation(line: 1632, column: 7, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12970, file: !1, line: 1632, column: 7)
!12983 = !DILocation(line: 1632, column: 25, scope: !12982)
!12984 = !DILocation(line: 1632, column: 22, scope: !12982)
!12985 = !DILocation(line: 1632, column: 7, scope: !12970)
!12986 = !DILocation(line: 1635, column: 11, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12988, file: !1, line: 1635, column: 11)
!12988 = distinct !DILexicalBlock(scope: !12982, file: !1, line: 1633, column: 5)
!12989 = !DILocation(line: 1635, column: 29, scope: !12987)
!12990 = !DILocation(line: 1635, column: 26, scope: !12987)
!12991 = !DILocation(line: 1635, column: 11, scope: !12988)
!12992 = !DILocation(line: 1637, column: 31, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12987, file: !1, line: 1636, column: 2)
!12994 = !DILocation(line: 1637, column: 37, scope: !12993)
!12995 = !DILocation(line: 1637, column: 43, scope: !12993)
!12996 = !DILocation(line: 1637, column: 48, scope: !12993)
!12997 = !DILocation(line: 1637, column: 10, scope: !12993)
!12998 = !DILocation(line: 1637, column: 8, scope: !12993)
!12999 = !DILocation(line: 1638, column: 32, scope: !12993)
!13000 = !DILocation(line: 1638, column: 38, scope: !12993)
!13001 = !DILocation(line: 1638, column: 44, scope: !12993)
!13002 = !DILocation(line: 1638, column: 49, scope: !12993)
!13003 = !DILocation(line: 1638, column: 11, scope: !12993)
!13004 = !DILocation(line: 1638, column: 4, scope: !12993)
!13005 = !DILocation(line: 1642, column: 42, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !12988, file: !1, line: 1642, column: 11)
!13007 = !DILocation(line: 1642, column: 47, scope: !13006)
!13008 = !DILocation(line: 1642, column: 13, scope: !13006)
!13009 = !DILocation(line: 1642, column: 11, scope: !12988)
!13010 = !DILocation(line: 1643, column: 30, scope: !13006)
!13011 = !DILocation(line: 1643, column: 36, scope: !13006)
!13012 = !DILocation(line: 1643, column: 42, scope: !13006)
!13013 = !DILocation(line: 1643, column: 47, scope: !13006)
!13014 = !DILocation(line: 1643, column: 9, scope: !13006)
!13015 = !DILocation(line: 1643, column: 2, scope: !13006)
!13016 = !DILocation(line: 1645, column: 13, scope: !12988)
!13017 = !DILocation(line: 1645, column: 11, scope: !12988)
!13018 = !DILocation(line: 1646, column: 13, scope: !12988)
!13019 = !DILocation(line: 1646, column: 11, scope: !12988)
!13020 = !DILocation(line: 1647, column: 13, scope: !12988)
!13021 = !DILocation(line: 1647, column: 11, scope: !12988)
!13022 = !DILocation(line: 1648, column: 5, scope: !12988)
!13023 = !DILocation(line: 1650, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !12970, file: !1, line: 1650, column: 7)
!13025 = !DILocation(line: 1650, column: 25, scope: !13024)
!13026 = !DILocation(line: 1650, column: 22, scope: !13024)
!13027 = !DILocation(line: 1650, column: 7, scope: !12970)
!13028 = !DILocation(line: 1653, column: 40, scope: !13029)
!13029 = distinct !DILexicalBlock(scope: !13030, file: !1, line: 1653, column: 11)
!13030 = distinct !DILexicalBlock(scope: !13024, file: !1, line: 1651, column: 5)
!13031 = !DILocation(line: 1653, column: 55, scope: !13029)
!13032 = !DILocation(line: 1653, column: 11, scope: !13029)
!13033 = !DILocation(line: 1653, column: 11, scope: !13030)
!13034 = !DILocation(line: 1655, column: 31, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13029, file: !1, line: 1654, column: 2)
!13036 = !DILocation(line: 1655, column: 37, scope: !13035)
!13037 = !DILocation(line: 1655, column: 43, scope: !13035)
!13038 = !DILocation(line: 1655, column: 58, scope: !13035)
!13039 = !DILocation(line: 1655, column: 10, scope: !13035)
!13040 = !DILocation(line: 1655, column: 8, scope: !13035)
!13041 = !DILocation(line: 1656, column: 32, scope: !13035)
!13042 = !DILocation(line: 1656, column: 38, scope: !13035)
!13043 = !DILocation(line: 1656, column: 44, scope: !13035)
!13044 = !DILocation(line: 1656, column: 49, scope: !13035)
!13045 = !DILocation(line: 1656, column: 11, scope: !13035)
!13046 = !DILocation(line: 1656, column: 4, scope: !13035)
!13047 = !DILocation(line: 1660, column: 40, scope: !13030)
!13048 = !DILocation(line: 1660, column: 46, scope: !13030)
!13049 = !DILocation(line: 1660, column: 52, scope: !13030)
!13050 = !DILocation(line: 1660, column: 67, scope: !13030)
!13051 = !DILocation(line: 1660, column: 13, scope: !13030)
!13052 = !DILocation(line: 1660, column: 11, scope: !13030)
!13053 = !DILocation(line: 1661, column: 11, scope: !13054)
!13054 = distinct !DILexicalBlock(scope: !13030, file: !1, line: 1661, column: 11)
!13055 = !DILocation(line: 1661, column: 15, scope: !13054)
!13056 = !DILocation(line: 1661, column: 11, scope: !13030)
!13057 = !DILocation(line: 1662, column: 37, scope: !13054)
!13058 = !DILocation(line: 1662, column: 43, scope: !13054)
!13059 = !DILocation(line: 1662, column: 49, scope: !13054)
!13060 = !DILocation(line: 1662, column: 64, scope: !13054)
!13061 = !DILocation(line: 1662, column: 16, scope: !13054)
!13062 = !DILocation(line: 1662, column: 9, scope: !13054)
!13063 = !DILocation(line: 1665, column: 40, scope: !13030)
!13064 = !DILocation(line: 1665, column: 46, scope: !13030)
!13065 = !DILocation(line: 1665, column: 52, scope: !13030)
!13066 = !DILocation(line: 1665, column: 67, scope: !13030)
!13067 = !DILocation(line: 1665, column: 13, scope: !13030)
!13068 = !DILocation(line: 1665, column: 11, scope: !13030)
!13069 = !DILocation(line: 1666, column: 11, scope: !13070)
!13070 = distinct !DILexicalBlock(scope: !13030, file: !1, line: 1666, column: 11)
!13071 = !DILocation(line: 1666, column: 15, scope: !13070)
!13072 = !DILocation(line: 1666, column: 11, scope: !13030)
!13073 = !DILocation(line: 1667, column: 37, scope: !13070)
!13074 = !DILocation(line: 1667, column: 43, scope: !13070)
!13075 = !DILocation(line: 1667, column: 49, scope: !13070)
!13076 = !DILocation(line: 1667, column: 54, scope: !13070)
!13077 = !DILocation(line: 1667, column: 16, scope: !13070)
!13078 = !DILocation(line: 1667, column: 9, scope: !13070)
!13079 = !DILocation(line: 1668, column: 5, scope: !13030)
!13080 = !DILocation(line: 1670, column: 3, scope: !12970)
!13081 = !DILocation(line: 1671, column: 1, scope: !12970)
!13082 = distinct !DISubprogram(name: "neg_const_int", scope: !1, file: !1, line: 69, type: !13083, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!13083 = !DISubroutineType(types: !13084)
!13084 = !{!1495, !3, !2588}
!13085 = !DILocalVariable(name: "mode", arg: 1, scope: !13082, file: !1, line: 69, type: !3)
!13086 = !DILocation(line: 69, column: 34, scope: !13082)
!13087 = !DILocalVariable(name: "i", arg: 2, scope: !13082, file: !1, line: 69, type: !2588)
!13088 = !DILocation(line: 69, column: 50, scope: !13082)
!13089 = !DILocation(line: 71, column: 26, scope: !13082)
!13090 = !DILocation(line: 71, column: 24, scope: !13082)
!13091 = !DILocation(line: 71, column: 38, scope: !13082)
!13092 = !DILocation(line: 71, column: 10, scope: !13082)
!13093 = !DILocation(line: 71, column: 3, scope: !13082)
!13094 = distinct !DISubprogram(name: "simplify_plus_minus_op_data_cmp", scope: !1, file: !1, line: 3605, type: !13095, scopeLine: 3606, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !2570)
!13095 = !DISubroutineType(types: !13096)
!13096 = !{!1729, !1495, !1495}
!13097 = !DILocalVariable(name: "x", arg: 1, scope: !13094, file: !1, line: 3605, type: !1495)
!13098 = !DILocation(line: 3605, column: 38, scope: !13094)
!13099 = !DILocalVariable(name: "y", arg: 2, scope: !13094, file: !1, line: 3605, type: !1495)
!13100 = !DILocation(line: 3605, column: 45, scope: !13094)
!13101 = !DILocalVariable(name: "result", scope: !13094, file: !1, line: 3607, type: !1518)
!13102 = !DILocation(line: 3607, column: 7, scope: !13094)
!13103 = !DILocation(line: 3609, column: 45, scope: !13094)
!13104 = !DILocation(line: 3609, column: 13, scope: !13094)
!13105 = !DILocation(line: 3610, column: 40, scope: !13094)
!13106 = !DILocation(line: 3610, column: 8, scope: !13094)
!13107 = !DILocation(line: 3610, column: 6, scope: !13094)
!13108 = !DILocation(line: 3609, column: 10, scope: !13094)
!13109 = !DILocation(line: 3611, column: 7, scope: !13110)
!13110 = distinct !DILexicalBlock(scope: !13094, file: !1, line: 3611, column: 7)
!13111 = !DILocation(line: 3611, column: 7, scope: !13094)
!13112 = !DILocation(line: 3612, column: 12, scope: !13110)
!13113 = !DILocation(line: 3612, column: 19, scope: !13110)
!13114 = !DILocation(line: 3612, column: 5, scope: !13110)
!13115 = !DILocation(line: 3615, column: 7, scope: !13116)
!13116 = distinct !DILexicalBlock(scope: !13094, file: !1, line: 3615, column: 7)
!13117 = !DILocation(line: 3615, column: 17, scope: !13116)
!13118 = !DILocation(line: 3615, column: 20, scope: !13116)
!13119 = !DILocation(line: 3615, column: 7, scope: !13094)
!13120 = !DILocation(line: 3616, column: 12, scope: !13116)
!13121 = !DILocation(line: 3616, column: 24, scope: !13116)
!13122 = !DILocation(line: 3616, column: 22, scope: !13116)
!13123 = !DILocation(line: 3616, column: 5, scope: !13116)
!13124 = !DILocation(line: 3618, column: 5, scope: !13116)
!13125 = !DILocation(line: 3619, column: 1, scope: !13094)
